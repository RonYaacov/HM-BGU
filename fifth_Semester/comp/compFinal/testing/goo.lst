     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  
   468                                  
   469                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
   470                                  global main
   471                                  section .text
   472                                  main:
   473 00000000 C8000000                        enter 0, 0
   474 00000004 6A00                            push 0
   475 00000006 6A00                            push 0
   476 00000008 68[7C5E0000]                    push Lend
   477 0000000D C8000000                        enter 0, 0
   478                                  
   479                                  	; preparing a non-tail-call
   480 00000011 48B8-                   	mov rax, L_constants + 2
   480 00000013 [0200000000000000] 
   481 0000001B 50                      	push rax
   482 0000001C 6A01                    	push 1	; arg count
   483                                  	; preparing a non-tail-call
   484 0000001E 48B8-                   	mov rax, L_constants + 3
   484 00000020 [0300000000000000] 
   485 00000028 50                      	push rax
   486 00000029 6A01                    	push 1	; arg count
   487                                  	; preparing a non-tail-call
   488                                  	; preparing a non-tail-call
   489 0000002B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   490 00000030 E8B25F0000              	call malloc
   491 00000035 50                      	push rax
   492 00000036 BF00000000              	mov rdi, 8 * 0	; new rib
   493 0000003B E8A75F0000              	call malloc
   494 00000040 50                      	push rax
   495 00000041 BF08000000              	mov rdi, 8 * 1	; extended env
   496 00000046 E89C5F0000              	call malloc
   497 0000004B 488B7D10                	mov rdi, ENV
   498 0000004F BE00000000              	mov rsi, 0
   499 00000054 BA01000000              	mov rdx, 1
   500                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
   501 00000059 4883FE00                	cmp rsi, 0
   502 0000005D 7410                    	je .L_lambda_simple_env_end_0001
   503 0000005F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   504 00000063 48890CD0                	mov qword [rax + 8 * rdx], rcx
   505 00000067 48FFC6                  	inc rsi
   506 0000006A 48FFC2                  	inc rdx
   507 0000006D EBEA                    	jmp .L_lambda_simple_env_loop_0001
   508                                  .L_lambda_simple_env_end_0001:
   509 0000006F 5B                      	pop rbx
   510 00000070 BE00000000              	mov rsi, 0
   511                                  .L_lambda_simple_params_loop_0001:	; copy params
   512 00000075 4883FE00                	cmp rsi, 0
   513 00000079 740E                    	je .L_lambda_simple_params_end_0001
   514 0000007B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   515 00000080 488914F3                	mov qword [rbx + 8 * rsi], rdx
   516 00000084 48FFC6                  	inc rsi
   517 00000087 EBEC                    	jmp .L_lambda_simple_params_loop_0001
   518                                  .L_lambda_simple_params_end_0001:
   519 00000089 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   520 0000008C 4889C3                  	mov rbx, rax
   521 0000008F 58                      	pop rax
   522 00000090 C60004                  	mov byte [rax], T_closure
   523 00000093 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   524 00000097 48C74009[A4000000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
   525 0000009F E95D010000              	jmp .L_lambda_simple_end_0001
   526                                  .L_lambda_simple_code_0001:	; lambda-simple body
   527 000000A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
   528 000000AA 740B                    	je .L_lambda_simple_arity_check_ok_0001
   529 000000AC FF742410                	push qword [rsp + 8 * 2]
   530 000000B0 6A01                    	push 1
   531 000000B2 E9E95E0000              	jmp L_error_incorrect_arity_simple
   532                                  .L_lambda_simple_arity_check_ok_0001:
   533 000000B7 C8000000                	enter 0, 0
   534 000000BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   535 000000C0 E8225F0000              	call malloc
   536 000000C5 50                      	push rax
   537 000000C6 BF08000000              	mov rdi, 8 * 1	; new rib
   538 000000CB E8175F0000              	call malloc
   539 000000D0 50                      	push rax
   540 000000D1 BF10000000              	mov rdi, 8 * 2	; extended env
   541 000000D6 E80C5F0000              	call malloc
   542 000000DB 488B7D10                	mov rdi, ENV
   543 000000DF BE00000000              	mov rsi, 0
   544 000000E4 BA01000000              	mov rdx, 1
   545                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
   546 000000E9 4883FE01                	cmp rsi, 1
   547 000000ED 7410                    	je .L_lambda_simple_env_end_0002
   548 000000EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   549 000000F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
   550 000000F7 48FFC6                  	inc rsi
   551 000000FA 48FFC2                  	inc rdx
   552 000000FD EBEA                    	jmp .L_lambda_simple_env_loop_0002
   553                                  .L_lambda_simple_env_end_0002:
   554 000000FF 5B                      	pop rbx
   555 00000100 BE00000000              	mov rsi, 0
   556                                  .L_lambda_simple_params_loop_0002:	; copy params
   557 00000105 4883FE01                	cmp rsi, 1
   558 00000109 740E                    	je .L_lambda_simple_params_end_0002
   559 0000010B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   560 00000110 488914F3                	mov qword [rbx + 8 * rsi], rdx
   561 00000114 48FFC6                  	inc rsi
   562 00000117 EBEC                    	jmp .L_lambda_simple_params_loop_0002
   563                                  .L_lambda_simple_params_end_0002:
   564 00000119 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   565 0000011C 4889C3                  	mov rbx, rax
   566 0000011F 58                      	pop rax
   567 00000120 C60004                  	mov byte [rax], T_closure
   568 00000123 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   569 00000127 48C74009[34010000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
   570 0000012F E9C9000000              	jmp .L_lambda_simple_end_0002
   571                                  .L_lambda_simple_code_0002:	; lambda-simple body
   572 00000134 48837C241001            	cmp qword [rsp + 8 * 2], 1
   573 0000013A 740B                    	je .L_lambda_simple_arity_check_ok_0002
   574 0000013C FF742410                	push qword [rsp + 8 * 2]
   575 00000140 6A01                    	push 1
   576 00000142 E9595E0000              	jmp L_error_incorrect_arity_simple
   577                                  .L_lambda_simple_arity_check_ok_0002:
   578 00000147 C8000000                	enter 0, 0
   579                                  	; preparing a tail-call
   580                                  	; preparing a non-tail-call
   581                                  	; preparing a non-tail-call
   582                                  	; preparing a non-tail-call
   583                                  	; preparing a non-tail-call
   584 0000014B 488B4520                	mov rax, PARAM(0)	; param y
   585 0000014F 50                      	push rax
   586 00000150 6A01                    	push 1	; arg count
   587 00000152 488B4510                	mov rax, ENV
   588 00000156 488B00                  	mov rax, qword [rax + 8 * 0]
   589 00000159 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   590 0000015C 803804                  	cmp byte [rax], T_closure
   591 0000015F 0F85D95D0000            	jne L_error_non_closure
   592 00000165 FF7001                  	push SOB_CLOSURE_ENV(rax)
   593 00000168 FF5009                  	call SOB_CLOSURE_CODE(rax)
   594 0000016B 50                      	push rax
   595 0000016C 6A01                    	push 1	; arg count
   596 0000016E 488B4510                	mov rax, ENV
   597 00000172 488B00                  	mov rax, qword [rax + 8 * 0]
   598 00000175 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   599 00000178 803804                  	cmp byte [rax], T_closure
   600 0000017B 0F85BD5D0000            	jne L_error_non_closure
   601 00000181 FF7001                  	push SOB_CLOSURE_ENV(rax)
   602 00000184 FF5009                  	call SOB_CLOSURE_CODE(rax)
   603 00000187 50                      	push rax
   604 00000188 6A01                    	push 1	; arg count
   605 0000018A 488B4510                	mov rax, ENV
   606 0000018E 488B00                  	mov rax, qword [rax + 8 * 0]
   607 00000191 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   608 00000194 803804                  	cmp byte [rax], T_closure
   609 00000197 0F85A15D0000            	jne L_error_non_closure
   610 0000019D FF7001                  	push SOB_CLOSURE_ENV(rax)
   611 000001A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
   612 000001A3 50                      	push rax
   613 000001A4 6A01                    	push 1	; arg count
   614 000001A6 488B4510                	mov rax, ENV
   615 000001AA 488B00                  	mov rax, qword [rax + 8 * 0]
   616 000001AD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   617 000001B0 803804                  	cmp byte [rax], T_closure
   618 000001B3 0F85855D0000            	jne L_error_non_closure
   619 000001B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
   620 000001BC FF5009                  	call SOB_CLOSURE_CODE(rax)
   621 000001BF 50                      	push rax
   622 000001C0 6A01                    	push 1	; arg count
   623 000001C2 488B4510                	mov rax, ENV
   624 000001C6 488B00                  	mov rax, qword [rax + 8 * 0]
   625 000001C9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   626 000001CC 803804                  	cmp byte [rax], T_closure
   627 000001CF 0F85695D0000            	jne L_error_non_closure
   628 000001D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
   629 000001D8 FF7508                  	push qword [rbp + 8 * 1]
   630                                   ; old ret addr	pop rbp
   631                                  ; restore the old rbp	mov rbx, 1
   632 000001DB 4883C303                	add rbx, 3
   633                                  	mov rdi, dword [rbp + 8*2]
   633          ******************       error: mismatch in operand sizes
   634                                  .L_tc_recycle_frame_loop_0001:
   635 000001DF 4883FB00                	cmp rbx, 0
   636 000001E3 7411                    je .L_tc_recycle_frame_done_0001
   637 000001E5 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
   638 000001E9 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
   639 000001EE 48FFCF                  	dec rdi
   640 000001F1 48FFCB                  	dec rbx
   641 000001F4 EBE9                    jmp .L_tc_recycle_frame_loop_0001
   642                                  .L_tc_recycle_frame_done_0001:
   643 000001F6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
   644 000001F9 C9                      	leave
   645 000001FA C21800                  	ret AND_KILL_FRAME(1)
   646                                  .L_lambda_simple_end_0002:	; new closure is in rax
   647 000001FD C9                      	leave
   648 000001FE C21800                  	ret AND_KILL_FRAME(1)
   649                                  .L_lambda_simple_end_0001:	; new closure is in rax
   650 00000201 50                      	push rax
   651 00000202 6A01                    	push 1	; arg count
   652                                  	; preparing a non-tail-call
   653                                  	; preparing a non-tail-call
   654 00000204 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   655 00000209 E8D95D0000              	call malloc
   656 0000020E 50                      	push rax
   657 0000020F BF00000000              	mov rdi, 8 * 0	; new rib
   658 00000214 E8CE5D0000              	call malloc
   659 00000219 50                      	push rax
   660 0000021A BF08000000              	mov rdi, 8 * 1	; extended env
   661 0000021F E8C35D0000              	call malloc
   662 00000224 488B7D10                	mov rdi, ENV
   663 00000228 BE00000000              	mov rsi, 0
   664 0000022D BA01000000              	mov rdx, 1
   665                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
   666 00000232 4883FE00                	cmp rsi, 0
   667 00000236 7410                    	je .L_lambda_simple_env_end_0003
   668 00000238 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   669 0000023C 48890CD0                	mov qword [rax + 8 * rdx], rcx
   670 00000240 48FFC6                  	inc rsi
   671 00000243 48FFC2                  	inc rdx
   672 00000246 EBEA                    	jmp .L_lambda_simple_env_loop_0003
   673                                  .L_lambda_simple_env_end_0003:
   674 00000248 5B                      	pop rbx
   675 00000249 BE00000000              	mov rsi, 0
   676                                  .L_lambda_simple_params_loop_0003:	; copy params
   677 0000024E 4883FE00                	cmp rsi, 0
   678 00000252 740E                    	je .L_lambda_simple_params_end_0003
   679 00000254 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   680 00000259 488914F3                	mov qword [rbx + 8 * rsi], rdx
   681 0000025D 48FFC6                  	inc rsi
   682 00000260 EBEC                    	jmp .L_lambda_simple_params_loop_0003
   683                                  .L_lambda_simple_params_end_0003:
   684 00000262 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   685 00000265 4889C3                  	mov rbx, rax
   686 00000268 58                      	pop rax
   687 00000269 C60004                  	mov byte [rax], T_closure
   688 0000026C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   689 00000270 48C74009[7D020000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
   690 00000278 E925010000              	jmp .L_lambda_simple_end_0003
   691                                  .L_lambda_simple_code_0003:	; lambda-simple body
   692 0000027D 48837C241001            	cmp qword [rsp + 8 * 2], 1
   693 00000283 740B                    	je .L_lambda_simple_arity_check_ok_0003
   694 00000285 FF742410                	push qword [rsp + 8 * 2]
   695 00000289 6A01                    	push 1
   696 0000028B E9105D0000              	jmp L_error_incorrect_arity_simple
   697                                  .L_lambda_simple_arity_check_ok_0003:
   698 00000290 C8000000                	enter 0, 0
   699 00000294 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   700 00000299 E8495D0000              	call malloc
   701 0000029E 50                      	push rax
   702 0000029F BF08000000              	mov rdi, 8 * 1	; new rib
   703 000002A4 E83E5D0000              	call malloc
   704 000002A9 50                      	push rax
   705 000002AA BF10000000              	mov rdi, 8 * 2	; extended env
   706 000002AF E8335D0000              	call malloc
   707 000002B4 488B7D10                	mov rdi, ENV
   708 000002B8 BE00000000              	mov rsi, 0
   709 000002BD BA01000000              	mov rdx, 1
   710                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
   711 000002C2 4883FE01                	cmp rsi, 1
   712 000002C6 7410                    	je .L_lambda_simple_env_end_0004
   713 000002C8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   714 000002CC 48890CD0                	mov qword [rax + 8 * rdx], rcx
   715 000002D0 48FFC6                  	inc rsi
   716 000002D3 48FFC2                  	inc rdx
   717 000002D6 EBEA                    	jmp .L_lambda_simple_env_loop_0004
   718                                  .L_lambda_simple_env_end_0004:
   719 000002D8 5B                      	pop rbx
   720 000002D9 BE00000000              	mov rsi, 0
   721                                  .L_lambda_simple_params_loop_0004:	; copy params
   722 000002DE 4883FE01                	cmp rsi, 1
   723 000002E2 740E                    	je .L_lambda_simple_params_end_0004
   724 000002E4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   725 000002E9 488914F3                	mov qword [rbx + 8 * rsi], rdx
   726 000002ED 48FFC6                  	inc rsi
   727 000002F0 EBEC                    	jmp .L_lambda_simple_params_loop_0004
   728                                  .L_lambda_simple_params_end_0004:
   729 000002F2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   730 000002F5 4889C3                  	mov rbx, rax
   731 000002F8 58                      	pop rax
   732 000002F9 C60004                  	mov byte [rax], T_closure
   733 000002FC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   734 00000300 48C74009[0D030000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
   735 00000308 E991000000              	jmp .L_lambda_simple_end_0004
   736                                  .L_lambda_simple_code_0004:	; lambda-simple body
   737 0000030D 48837C241001            	cmp qword [rsp + 8 * 2], 1
   738 00000313 740B                    	je .L_lambda_simple_arity_check_ok_0004
   739 00000315 FF742410                	push qword [rsp + 8 * 2]
   740 00000319 6A01                    	push 1
   741 0000031B E9805C0000              	jmp L_error_incorrect_arity_simple
   742                                  .L_lambda_simple_arity_check_ok_0004:
   743 00000320 C8000000                	enter 0, 0
   744                                  	; preparing a tail-call
   745                                  	; preparing a non-tail-call
   746                                  	; preparing a non-tail-call
   747 00000324 488B4520                	mov rax, PARAM(0)	; param y
   748 00000328 50                      	push rax
   749 00000329 6A01                    	push 1	; arg count
   750 0000032B 488B4510                	mov rax, ENV
   751 0000032F 488B00                  	mov rax, qword [rax + 8 * 0]
   752 00000332 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   753 00000335 803804                  	cmp byte [rax], T_closure
   754 00000338 0F85005C0000            	jne L_error_non_closure
   755 0000033E FF7001                  	push SOB_CLOSURE_ENV(rax)
   756 00000341 FF5009                  	call SOB_CLOSURE_CODE(rax)
   757 00000344 50                      	push rax
   758 00000345 6A01                    	push 1	; arg count
   759 00000347 488B4510                	mov rax, ENV
   760 0000034B 488B00                  	mov rax, qword [rax + 8 * 0]
   761 0000034E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   762 00000351 803804                  	cmp byte [rax], T_closure
   763 00000354 0F85E45B0000            	jne L_error_non_closure
   764 0000035A FF7001                  	push SOB_CLOSURE_ENV(rax)
   765 0000035D FF5009                  	call SOB_CLOSURE_CODE(rax)
   766 00000360 50                      	push rax
   767 00000361 6A01                    	push 1	; arg count
   768 00000363 488B4510                	mov rax, ENV
   769 00000367 488B00                  	mov rax, qword [rax + 8 * 0]
   770 0000036A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   771 0000036D 803804                  	cmp byte [rax], T_closure
   772 00000370 0F85C85B0000            	jne L_error_non_closure
   773 00000376 FF7001                  	push SOB_CLOSURE_ENV(rax)
   774 00000379 FF7508                  	push qword [rbp + 8 * 1]
   775                                   ; old ret addr	pop rbp
   776                                  ; restore the old rbp	mov rbx, 1
   777 0000037C 4883C303                	add rbx, 3
   778                                  	mov rdi, dword [rbp + 8*2]
   778          ******************       error: mismatch in operand sizes
   779                                  .L_tc_recycle_frame_loop_0002:
   780 00000380 4883FB00                	cmp rbx, 0
   781 00000384 7411                    je .L_tc_recycle_frame_done_0002
   782 00000386 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
   783 0000038A 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
   784 0000038F 48FFCF                  	dec rdi
   785 00000392 48FFCB                  	dec rbx
   786 00000395 EBE9                    jmp .L_tc_recycle_frame_loop_0002
   787                                  .L_tc_recycle_frame_done_0002:
   788 00000397 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
   789 0000039A C9                      	leave
   790 0000039B C21800                  	ret AND_KILL_FRAME(1)
   791                                  .L_lambda_simple_end_0004:	; new closure is in rax
   792 0000039E C9                      	leave
   793 0000039F C21800                  	ret AND_KILL_FRAME(1)
   794                                  .L_lambda_simple_end_0003:	; new closure is in rax
   795 000003A2 50                      	push rax
   796 000003A3 6A01                    	push 1	; arg count
   797                                  	; preparing a non-tail-call
   798                                  	; preparing a non-tail-call
   799 000003A5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   800 000003AA E8385C0000              	call malloc
   801 000003AF 50                      	push rax
   802 000003B0 BF00000000              	mov rdi, 8 * 0	; new rib
   803 000003B5 E82D5C0000              	call malloc
   804 000003BA 50                      	push rax
   805 000003BB BF08000000              	mov rdi, 8 * 1	; extended env
   806 000003C0 E8225C0000              	call malloc
   807 000003C5 488B7D10                	mov rdi, ENV
   808 000003C9 BE00000000              	mov rsi, 0
   809 000003CE BA01000000              	mov rdx, 1
   810                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
   811 000003D3 4883FE00                	cmp rsi, 0
   812 000003D7 7410                    	je .L_lambda_simple_env_end_0005
   813 000003D9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   814 000003DD 48890CD0                	mov qword [rax + 8 * rdx], rcx
   815 000003E1 48FFC6                  	inc rsi
   816 000003E4 48FFC2                  	inc rdx
   817 000003E7 EBEA                    	jmp .L_lambda_simple_env_loop_0005
   818                                  .L_lambda_simple_env_end_0005:
   819 000003E9 5B                      	pop rbx
   820 000003EA BE00000000              	mov rsi, 0
   821                                  .L_lambda_simple_params_loop_0005:	; copy params
   822 000003EF 4883FE00                	cmp rsi, 0
   823 000003F3 740E                    	je .L_lambda_simple_params_end_0005
   824 000003F5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   825 000003FA 488914F3                	mov qword [rbx + 8 * rsi], rdx
   826 000003FE 48FFC6                  	inc rsi
   827 00000401 EBEC                    	jmp .L_lambda_simple_params_loop_0005
   828                                  .L_lambda_simple_params_end_0005:
   829 00000403 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   830 00000406 4889C3                  	mov rbx, rax
   831 00000409 58                      	pop rax
   832 0000040A C60004                  	mov byte [rax], T_closure
   833 0000040D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   834 00000411 48C74009[1E040000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
   835 00000419 E906010000              	jmp .L_lambda_simple_end_0005
   836                                  .L_lambda_simple_code_0005:	; lambda-simple body
   837 0000041E 48837C241001            	cmp qword [rsp + 8 * 2], 1
   838 00000424 740B                    	je .L_lambda_simple_arity_check_ok_0005
   839 00000426 FF742410                	push qword [rsp + 8 * 2]
   840 0000042A 6A01                    	push 1
   841 0000042C E96F5B0000              	jmp L_error_incorrect_arity_simple
   842                                  .L_lambda_simple_arity_check_ok_0005:
   843 00000431 C8000000                	enter 0, 0
   844 00000435 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   845 0000043A E8A85B0000              	call malloc
   846 0000043F 50                      	push rax
   847 00000440 BF08000000              	mov rdi, 8 * 1	; new rib
   848 00000445 E89D5B0000              	call malloc
   849 0000044A 50                      	push rax
   850 0000044B BF10000000              	mov rdi, 8 * 2	; extended env
   851 00000450 E8925B0000              	call malloc
   852 00000455 488B7D10                	mov rdi, ENV
   853 00000459 BE00000000              	mov rsi, 0
   854 0000045E BA01000000              	mov rdx, 1
   855                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
   856 00000463 4883FE01                	cmp rsi, 1
   857 00000467 7410                    	je .L_lambda_simple_env_end_0006
   858 00000469 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   859 0000046D 48890CD0                	mov qword [rax + 8 * rdx], rcx
   860 00000471 48FFC6                  	inc rsi
   861 00000474 48FFC2                  	inc rdx
   862 00000477 EBEA                    	jmp .L_lambda_simple_env_loop_0006
   863                                  .L_lambda_simple_env_end_0006:
   864 00000479 5B                      	pop rbx
   865 0000047A BE00000000              	mov rsi, 0
   866                                  .L_lambda_simple_params_loop_0006:	; copy params
   867 0000047F 4883FE01                	cmp rsi, 1
   868 00000483 740E                    	je .L_lambda_simple_params_end_0006
   869 00000485 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   870 0000048A 488914F3                	mov qword [rbx + 8 * rsi], rdx
   871 0000048E 48FFC6                  	inc rsi
   872 00000491 EBEC                    	jmp .L_lambda_simple_params_loop_0006
   873                                  .L_lambda_simple_params_end_0006:
   874 00000493 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   875 00000496 4889C3                  	mov rbx, rax
   876 00000499 58                      	pop rax
   877 0000049A C60004                  	mov byte [rax], T_closure
   878 0000049D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   879 000004A1 48C74009[AB040000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
   880 000004A9 EB75                    	jmp .L_lambda_simple_end_0006
   881                                  .L_lambda_simple_code_0006:	; lambda-simple body
   882 000004AB 48837C241001            	cmp qword [rsp + 8 * 2], 1
   883 000004B1 740B                    	je .L_lambda_simple_arity_check_ok_0006
   884 000004B3 FF742410                	push qword [rsp + 8 * 2]
   885 000004B7 6A01                    	push 1
   886 000004B9 E9E25A0000              	jmp L_error_incorrect_arity_simple
   887                                  .L_lambda_simple_arity_check_ok_0006:
   888 000004BE C8000000                	enter 0, 0
   889                                  	; preparing a tail-call
   890                                  	; preparing a non-tail-call
   891 000004C2 488B4520                	mov rax, PARAM(0)	; param y
   892 000004C6 50                      	push rax
   893 000004C7 6A01                    	push 1	; arg count
   894 000004C9 488B4510                	mov rax, ENV
   895 000004CD 488B00                  	mov rax, qword [rax + 8 * 0]
   896 000004D0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   897 000004D3 803804                  	cmp byte [rax], T_closure
   898 000004D6 0F85625A0000            	jne L_error_non_closure
   899 000004DC FF7001                  	push SOB_CLOSURE_ENV(rax)
   900 000004DF FF5009                  	call SOB_CLOSURE_CODE(rax)
   901 000004E2 50                      	push rax
   902 000004E3 6A01                    	push 1	; arg count
   903 000004E5 488B4510                	mov rax, ENV
   904 000004E9 488B00                  	mov rax, qword [rax + 8 * 0]
   905 000004EC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   906 000004EF 803804                  	cmp byte [rax], T_closure
   907 000004F2 0F85465A0000            	jne L_error_non_closure
   908 000004F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
   909 000004FB FF7508                  	push qword [rbp + 8 * 1]
   910                                   ; old ret addr	pop rbp
   911                                  ; restore the old rbp	mov rbx, 1
   912 000004FE 4883C303                	add rbx, 3
   913                                  	mov rdi, dword [rbp + 8*2]
   913          ******************       error: mismatch in operand sizes
   914                                  .L_tc_recycle_frame_loop_0003:
   915 00000502 4883FB00                	cmp rbx, 0
   916 00000506 7411                    je .L_tc_recycle_frame_done_0003
   917 00000508 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
   918 0000050C 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
   919 00000511 48FFCF                  	dec rdi
   920 00000514 48FFCB                  	dec rbx
   921 00000517 EBE9                    jmp .L_tc_recycle_frame_loop_0003
   922                                  .L_tc_recycle_frame_done_0003:
   923 00000519 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
   924 0000051C C9                      	leave
   925 0000051D C21800                  	ret AND_KILL_FRAME(1)
   926                                  .L_lambda_simple_end_0006:	; new closure is in rax
   927 00000520 C9                      	leave
   928 00000521 C21800                  	ret AND_KILL_FRAME(1)
   929                                  .L_lambda_simple_end_0005:	; new closure is in rax
   930 00000524 50                      	push rax
   931 00000525 6A01                    	push 1	; arg count
   932 00000527 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   933 0000052C E8B65A0000              	call malloc
   934 00000531 50                      	push rax
   935 00000532 BF00000000              	mov rdi, 8 * 0	; new rib
   936 00000537 E8AB5A0000              	call malloc
   937 0000053C 50                      	push rax
   938 0000053D BF08000000              	mov rdi, 8 * 1	; extended env
   939 00000542 E8A05A0000              	call malloc
   940 00000547 488B7D10                	mov rdi, ENV
   941 0000054B BE00000000              	mov rsi, 0
   942 00000550 BA01000000              	mov rdx, 1
   943                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
   944 00000555 4883FE00                	cmp rsi, 0
   945 00000559 7410                    	je .L_lambda_simple_env_end_0007
   946 0000055B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   947 0000055F 48890CD0                	mov qword [rax + 8 * rdx], rcx
   948 00000563 48FFC6                  	inc rsi
   949 00000566 48FFC2                  	inc rdx
   950 00000569 EBEA                    	jmp .L_lambda_simple_env_loop_0007
   951                                  .L_lambda_simple_env_end_0007:
   952 0000056B 5B                      	pop rbx
   953 0000056C BE00000000              	mov rsi, 0
   954                                  .L_lambda_simple_params_loop_0007:	; copy params
   955 00000571 4883FE00                	cmp rsi, 0
   956 00000575 740E                    	je .L_lambda_simple_params_end_0007
   957 00000577 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   958 0000057C 488914F3                	mov qword [rbx + 8 * rsi], rdx
   959 00000580 48FFC6                  	inc rsi
   960 00000583 EBEC                    	jmp .L_lambda_simple_params_loop_0007
   961                                  .L_lambda_simple_params_end_0007:
   962 00000585 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   963 00000588 4889C3                  	mov rbx, rax
   964 0000058B 58                      	pop rax
   965 0000058C C60004                  	mov byte [rax], T_closure
   966 0000058F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   967 00000593 48C74009[A0050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
   968 0000059B E925010000              	jmp .L_lambda_simple_end_0007
   969                                  .L_lambda_simple_code_0007:	; lambda-simple body
   970 000005A0 48837C241001            	cmp qword [rsp + 8 * 2], 1
   971 000005A6 740B                    	je .L_lambda_simple_arity_check_ok_0007
   972 000005A8 FF742410                	push qword [rsp + 8 * 2]
   973 000005AC 6A01                    	push 1
   974 000005AE E9ED590000              	jmp L_error_incorrect_arity_simple
   975                                  .L_lambda_simple_arity_check_ok_0007:
   976 000005B3 C8000000                	enter 0, 0
   977 000005B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   978 000005BC E8265A0000              	call malloc
   979 000005C1 50                      	push rax
   980 000005C2 BF08000000              	mov rdi, 8 * 1	; new rib
   981 000005C7 E81B5A0000              	call malloc
   982 000005CC 50                      	push rax
   983 000005CD BF10000000              	mov rdi, 8 * 2	; extended env
   984 000005D2 E8105A0000              	call malloc
   985 000005D7 488B7D10                	mov rdi, ENV
   986 000005DB BE00000000              	mov rsi, 0
   987 000005E0 BA01000000              	mov rdx, 1
   988                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
   989 000005E5 4883FE01                	cmp rsi, 1
   990 000005E9 7410                    	je .L_lambda_simple_env_end_0008
   991 000005EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   992 000005EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
   993 000005F3 48FFC6                  	inc rsi
   994 000005F6 48FFC2                  	inc rdx
   995 000005F9 EBEA                    	jmp .L_lambda_simple_env_loop_0008
   996                                  .L_lambda_simple_env_end_0008:
   997 000005FB 5B                      	pop rbx
   998 000005FC BE00000000              	mov rsi, 0
   999                                  .L_lambda_simple_params_loop_0008:	; copy params
  1000 00000601 4883FE01                	cmp rsi, 1
  1001 00000605 740E                    	je .L_lambda_simple_params_end_0008
  1002 00000607 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1003 0000060C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1004 00000610 48FFC6                  	inc rsi
  1005 00000613 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  1006                                  .L_lambda_simple_params_end_0008:
  1007 00000615 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1008 00000618 4889C3                  	mov rbx, rax
  1009 0000061B 58                      	pop rax
  1010 0000061C C60004                  	mov byte [rax], T_closure
  1011 0000061F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1012 00000623 48C74009[30060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  1013 0000062B E991000000              	jmp .L_lambda_simple_end_0008
  1014                                  .L_lambda_simple_code_0008:	; lambda-simple body
  1015 00000630 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1016 00000636 740B                    	je .L_lambda_simple_arity_check_ok_0008
  1017 00000638 FF742410                	push qword [rsp + 8 * 2]
  1018 0000063C 6A01                    	push 1
  1019 0000063E E95D590000              	jmp L_error_incorrect_arity_simple
  1020                                  .L_lambda_simple_arity_check_ok_0008:
  1021 00000643 C8000000                	enter 0, 0
  1022                                  	; preparing a tail-call
  1023                                  	; preparing a non-tail-call
  1024                                  	; preparing a non-tail-call
  1025 00000647 488B4520                	mov rax, PARAM(0)	; param y
  1026 0000064B 50                      	push rax
  1027 0000064C 6A01                    	push 1	; arg count
  1028 0000064E 488B4510                	mov rax, ENV
  1029 00000652 488B00                  	mov rax, qword [rax + 8 * 0]
  1030 00000655 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  1031 00000658 803804                  	cmp byte [rax], T_closure
  1032 0000065B 0F85DD580000            	jne L_error_non_closure
  1033 00000661 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1034 00000664 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1035 00000667 50                      	push rax
  1036 00000668 6A01                    	push 1	; arg count
  1037 0000066A 488B4510                	mov rax, ENV
  1038 0000066E 488B00                  	mov rax, qword [rax + 8 * 0]
  1039 00000671 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  1040 00000674 803804                  	cmp byte [rax], T_closure
  1041 00000677 0F85C1580000            	jne L_error_non_closure
  1042 0000067D FF7001                  	push SOB_CLOSURE_ENV(rax)
  1043 00000680 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1044 00000683 50                      	push rax
  1045 00000684 6A01                    	push 1	; arg count
  1046 00000686 488B4510                	mov rax, ENV
  1047 0000068A 488B00                  	mov rax, qword [rax + 8 * 0]
  1048 0000068D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  1049 00000690 803804                  	cmp byte [rax], T_closure
  1050 00000693 0F85A5580000            	jne L_error_non_closure
  1051 00000699 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1052 0000069C FF7508                  	push qword [rbp + 8 * 1]
  1053                                   ; old ret addr	pop rbp
  1054                                  ; restore the old rbp	mov rbx, 1
  1055 0000069F 4883C303                	add rbx, 3
  1056                                  	mov rdi, dword [rbp + 8*2]
  1056          ******************       error: mismatch in operand sizes
  1057                                  .L_tc_recycle_frame_loop_0004:
  1058 000006A3 4883FB00                	cmp rbx, 0
  1059 000006A7 7411                    je .L_tc_recycle_frame_done_0004
  1060 000006A9 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1061 000006AD 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1062 000006B2 48FFCF                  	dec rdi
  1063 000006B5 48FFCB                  	dec rbx
  1064 000006B8 EBE9                    jmp .L_tc_recycle_frame_loop_0004
  1065                                  .L_tc_recycle_frame_done_0004:
  1066 000006BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1067 000006BD C9                      	leave
  1068 000006BE C21800                  	ret AND_KILL_FRAME(1)
  1069                                  .L_lambda_simple_end_0008:	; new closure is in rax
  1070 000006C1 C9                      	leave
  1071 000006C2 C21800                  	ret AND_KILL_FRAME(1)
  1072                                  .L_lambda_simple_end_0007:	; new closure is in rax
  1073 000006C5 803804                  	cmp byte [rax], T_closure
  1074 000006C8 0F8570580000            	jne L_error_non_closure
  1075 000006CE FF7001                  	push SOB_CLOSURE_ENV(rax)
  1076 000006D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1077 000006D4 50                      	push rax
  1078 000006D5 6A01                    	push 1	; arg count
  1079 000006D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1080 000006DC E806590000              	call malloc
  1081 000006E1 50                      	push rax
  1082 000006E2 BF00000000              	mov rdi, 8 * 0	; new rib
  1083 000006E7 E8FB580000              	call malloc
  1084 000006EC 50                      	push rax
  1085 000006ED BF08000000              	mov rdi, 8 * 1	; extended env
  1086 000006F2 E8F0580000              	call malloc
  1087 000006F7 488B7D10                	mov rdi, ENV
  1088 000006FB BE00000000              	mov rsi, 0
  1089 00000700 BA01000000              	mov rdx, 1
  1090                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  1091 00000705 4883FE00                	cmp rsi, 0
  1092 00000709 7410                    	je .L_lambda_simple_env_end_0009
  1093 0000070B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1094 0000070F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1095 00000713 48FFC6                  	inc rsi
  1096 00000716 48FFC2                  	inc rdx
  1097 00000719 EBEA                    	jmp .L_lambda_simple_env_loop_0009
  1098                                  .L_lambda_simple_env_end_0009:
  1099 0000071B 5B                      	pop rbx
  1100 0000071C BE00000000              	mov rsi, 0
  1101                                  .L_lambda_simple_params_loop_0009:	; copy params
  1102 00000721 4883FE00                	cmp rsi, 0
  1103 00000725 740E                    	je .L_lambda_simple_params_end_0009
  1104 00000727 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1105 0000072C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1106 00000730 48FFC6                  	inc rsi
  1107 00000733 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  1108                                  .L_lambda_simple_params_end_0009:
  1109 00000735 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1110 00000738 4889C3                  	mov rbx, rax
  1111 0000073B 58                      	pop rax
  1112 0000073C C60004                  	mov byte [rax], T_closure
  1113 0000073F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1114 00000743 48C74009[50070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  1115 0000074B E9E5050000              	jmp .L_lambda_simple_end_0009
  1116                                  .L_lambda_simple_code_0009:	; lambda-simple body
  1117 00000750 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1118 00000756 740B                    	je .L_lambda_simple_arity_check_ok_0009
  1119 00000758 FF742410                	push qword [rsp + 8 * 2]
  1120 0000075C 6A01                    	push 1
  1121 0000075E E93D580000              	jmp L_error_incorrect_arity_simple
  1122                                  .L_lambda_simple_arity_check_ok_0009:
  1123 00000763 C8000000                	enter 0, 0
  1124 00000767 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1125 0000076C E876580000              	call malloc
  1126 00000771 50                      	push rax
  1127 00000772 BF08000000              	mov rdi, 8 * 1	; new rib
  1128 00000777 E86B580000              	call malloc
  1129 0000077C 50                      	push rax
  1130 0000077D BF10000000              	mov rdi, 8 * 2	; extended env
  1131 00000782 E860580000              	call malloc
  1132 00000787 488B7D10                	mov rdi, ENV
  1133 0000078B BE00000000              	mov rsi, 0
  1134 00000790 BA01000000              	mov rdx, 1
  1135                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  1136 00000795 4883FE01                	cmp rsi, 1
  1137 00000799 7410                    	je .L_lambda_simple_env_end_000a
  1138 0000079B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1139 0000079F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1140 000007A3 48FFC6                  	inc rsi
  1141 000007A6 48FFC2                  	inc rdx
  1142 000007A9 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  1143                                  .L_lambda_simple_env_end_000a:
  1144 000007AB 5B                      	pop rbx
  1145 000007AC BE00000000              	mov rsi, 0
  1146                                  .L_lambda_simple_params_loop_000a:	; copy params
  1147 000007B1 4883FE01                	cmp rsi, 1
  1148 000007B5 740E                    	je .L_lambda_simple_params_end_000a
  1149 000007B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1150 000007BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1151 000007C0 48FFC6                  	inc rsi
  1152 000007C3 EBEC                    	jmp .L_lambda_simple_params_loop_000a
  1153                                  .L_lambda_simple_params_end_000a:
  1154 000007C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1155 000007C8 4889C3                  	mov rbx, rax
  1156 000007CB 58                      	pop rax
  1157 000007CC C60004                  	mov byte [rax], T_closure
  1158 000007CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1159 000007D3 48C74009[E0070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  1160 000007DB E951050000              	jmp .L_lambda_simple_end_000a
  1161                                  .L_lambda_simple_code_000a:	; lambda-simple body
  1162 000007E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1163 000007E6 740B                    	je .L_lambda_simple_arity_check_ok_000a
  1164 000007E8 FF742410                	push qword [rsp + 8 * 2]
  1165 000007EC 6A01                    	push 1
  1166 000007EE E9AD570000              	jmp L_error_incorrect_arity_simple
  1167                                  .L_lambda_simple_arity_check_ok_000a:
  1168 000007F3 C8000000                	enter 0, 0
  1169                                  	; preparing a tail-call
  1170 000007F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1171 000007FC E8E6570000              	call malloc
  1172 00000801 50                      	push rax
  1173 00000802 BF08000000              	mov rdi, 8 * 1	; new rib
  1174 00000807 E8DB570000              	call malloc
  1175 0000080C 50                      	push rax
  1176 0000080D BF18000000              	mov rdi, 8 * 3	; extended env
  1177 00000812 E8D0570000              	call malloc
  1178 00000817 488B7D10                	mov rdi, ENV
  1179 0000081B BE00000000              	mov rsi, 0
  1180 00000820 BA01000000              	mov rdx, 1
  1181                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  1182 00000825 4883FE02                	cmp rsi, 2
  1183 00000829 7410                    	je .L_lambda_simple_env_end_000b
  1184 0000082B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1185 0000082F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1186 00000833 48FFC6                  	inc rsi
  1187 00000836 48FFC2                  	inc rdx
  1188 00000839 EBEA                    	jmp .L_lambda_simple_env_loop_000b
  1189                                  .L_lambda_simple_env_end_000b:
  1190 0000083B 5B                      	pop rbx
  1191 0000083C BE00000000              	mov rsi, 0
  1192                                  .L_lambda_simple_params_loop_000b:	; copy params
  1193 00000841 4883FE01                	cmp rsi, 1
  1194 00000845 740E                    	je .L_lambda_simple_params_end_000b
  1195 00000847 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1196 0000084C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1197 00000850 48FFC6                  	inc rsi
  1198 00000853 EBEC                    	jmp .L_lambda_simple_params_loop_000b
  1199                                  .L_lambda_simple_params_end_000b:
  1200 00000855 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1201 00000858 4889C3                  	mov rbx, rax
  1202 0000085B 58                      	pop rax
  1203 0000085C C60004                  	mov byte [rax], T_closure
  1204 0000085F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1205 00000863 48C74009[70080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  1206 0000086B E9B0000000              	jmp .L_lambda_simple_end_000b
  1207                                  .L_lambda_simple_code_000b:	; lambda-simple body
  1208 00000870 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1209 00000876 740B                    	je .L_lambda_simple_arity_check_ok_000b
  1210 00000878 FF742410                	push qword [rsp + 8 * 2]
  1211 0000087C 6A01                    	push 1
  1212 0000087E E91D570000              	jmp L_error_incorrect_arity_simple
  1213                                  .L_lambda_simple_arity_check_ok_000b:
  1214 00000883 C8000000                	enter 0, 0
  1215 00000887 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1216 0000088C E856570000              	call malloc
  1217 00000891 50                      	push rax
  1218 00000892 BF08000000              	mov rdi, 8 * 1	; new rib
  1219 00000897 E84B570000              	call malloc
  1220 0000089C 50                      	push rax
  1221 0000089D BF20000000              	mov rdi, 8 * 4	; extended env
  1222 000008A2 E840570000              	call malloc
  1223 000008A7 488B7D10                	mov rdi, ENV
  1224 000008AB BE00000000              	mov rsi, 0
  1225 000008B0 BA01000000              	mov rdx, 1
  1226                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  1227 000008B5 4883FE03                	cmp rsi, 3
  1228 000008B9 7410                    	je .L_lambda_simple_env_end_000c
  1229 000008BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1230 000008BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1231 000008C3 48FFC6                  	inc rsi
  1232 000008C6 48FFC2                  	inc rdx
  1233 000008C9 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  1234                                  .L_lambda_simple_env_end_000c:
  1235 000008CB 5B                      	pop rbx
  1236 000008CC BE00000000              	mov rsi, 0
  1237                                  .L_lambda_simple_params_loop_000c:	; copy params
  1238 000008D1 4883FE01                	cmp rsi, 1
  1239 000008D5 740E                    	je .L_lambda_simple_params_end_000c
  1240 000008D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1241 000008DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1242 000008E0 48FFC6                  	inc rsi
  1243 000008E3 EBEC                    	jmp .L_lambda_simple_params_loop_000c
  1244                                  .L_lambda_simple_params_end_000c:
  1245 000008E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1246 000008E8 4889C3                  	mov rbx, rax
  1247 000008EB 58                      	pop rax
  1248 000008EC C60004                  	mov byte [rax], T_closure
  1249 000008EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1250 000008F3 48C74009[FD080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  1251 000008FB EB1F                    	jmp .L_lambda_simple_end_000c
  1252                                  .L_lambda_simple_code_000c:	; lambda-simple body
  1253 000008FD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1254 00000903 740B                    	je .L_lambda_simple_arity_check_ok_000c
  1255 00000905 FF742410                	push qword [rsp + 8 * 2]
  1256 00000909 6A01                    	push 1
  1257 0000090B E990560000              	jmp L_error_incorrect_arity_simple
  1258                                  .L_lambda_simple_arity_check_ok_000c:
  1259 00000910 C8000000                	enter 0, 0
  1260 00000914 488B4520                	mov rax, PARAM(0)	; param y
  1261 00000918 C9                      	leave
  1262 00000919 C21800                  	ret AND_KILL_FRAME(1)
  1263                                  .L_lambda_simple_end_000c:	; new closure is in rax
  1264 0000091C C9                      	leave
  1265 0000091D C21800                  	ret AND_KILL_FRAME(1)
  1266                                  .L_lambda_simple_end_000b:	; new closure is in rax
  1267 00000920 50                      	push rax
  1268 00000921 6A01                    	push 1	; arg count
  1269                                  	; preparing a non-tail-call
  1270                                  	; preparing a non-tail-call
  1271 00000923 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1272 00000928 E8BA560000              	call malloc
  1273 0000092D 50                      	push rax
  1274 0000092E BF08000000              	mov rdi, 8 * 1	; new rib
  1275 00000933 E8AF560000              	call malloc
  1276 00000938 50                      	push rax
  1277 00000939 BF18000000              	mov rdi, 8 * 3	; extended env
  1278 0000093E E8A4560000              	call malloc
  1279 00000943 488B7D10                	mov rdi, ENV
  1280 00000947 BE00000000              	mov rsi, 0
  1281 0000094C BA01000000              	mov rdx, 1
  1282                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  1283 00000951 4883FE02                	cmp rsi, 2
  1284 00000955 7410                    	je .L_lambda_simple_env_end_000d
  1285 00000957 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1286 0000095B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1287 0000095F 48FFC6                  	inc rsi
  1288 00000962 48FFC2                  	inc rdx
  1289 00000965 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  1290                                  .L_lambda_simple_env_end_000d:
  1291 00000967 5B                      	pop rbx
  1292 00000968 BE00000000              	mov rsi, 0
  1293                                  .L_lambda_simple_params_loop_000d:	; copy params
  1294 0000096D 4883FE01                	cmp rsi, 1
  1295 00000971 740E                    	je .L_lambda_simple_params_end_000d
  1296 00000973 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1297 00000978 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1298 0000097C 48FFC6                  	inc rsi
  1299 0000097F EBEC                    	jmp .L_lambda_simple_params_loop_000d
  1300                                  .L_lambda_simple_params_end_000d:
  1301 00000981 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1302 00000984 4889C3                  	mov rbx, rax
  1303 00000987 58                      	pop rax
  1304 00000988 C60004                  	mov byte [rax], T_closure
  1305 0000098B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1306 0000098F 48C74009[9C090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  1307 00000997 E932030000              	jmp .L_lambda_simple_end_000d
  1308                                  .L_lambda_simple_code_000d:	; lambda-simple body
  1309 0000099C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1310 000009A2 740B                    	je .L_lambda_simple_arity_check_ok_000d
  1311 000009A4 FF742410                	push qword [rsp + 8 * 2]
  1312 000009A8 6A01                    	push 1
  1313 000009AA E9F1550000              	jmp L_error_incorrect_arity_simple
  1314                                  .L_lambda_simple_arity_check_ok_000d:
  1315 000009AF C8000000                	enter 0, 0
  1316 000009B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1317 000009B8 E82A560000              	call malloc
  1318 000009BD 50                      	push rax
  1319 000009BE BF08000000              	mov rdi, 8 * 1	; new rib
  1320 000009C3 E81F560000              	call malloc
  1321 000009C8 50                      	push rax
  1322 000009C9 BF20000000              	mov rdi, 8 * 4	; extended env
  1323 000009CE E814560000              	call malloc
  1324 000009D3 488B7D10                	mov rdi, ENV
  1325 000009D7 BE00000000              	mov rsi, 0
  1326 000009DC BA01000000              	mov rdx, 1
  1327                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  1328 000009E1 4883FE03                	cmp rsi, 3
  1329 000009E5 7410                    	je .L_lambda_simple_env_end_000e
  1330 000009E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1331 000009EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1332 000009EF 48FFC6                  	inc rsi
  1333 000009F2 48FFC2                  	inc rdx
  1334 000009F5 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  1335                                  .L_lambda_simple_env_end_000e:
  1336 000009F7 5B                      	pop rbx
  1337 000009F8 BE00000000              	mov rsi, 0
  1338                                  .L_lambda_simple_params_loop_000e:	; copy params
  1339 000009FD 4883FE01                	cmp rsi, 1
  1340 00000A01 740E                    	je .L_lambda_simple_params_end_000e
  1341 00000A03 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1342 00000A08 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1343 00000A0C 48FFC6                  	inc rsi
  1344 00000A0F EBEC                    	jmp .L_lambda_simple_params_loop_000e
  1345                                  .L_lambda_simple_params_end_000e:
  1346 00000A11 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1347 00000A14 4889C3                  	mov rbx, rax
  1348 00000A17 58                      	pop rax
  1349 00000A18 C60004                  	mov byte [rax], T_closure
  1350 00000A1B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1351 00000A1F 48C74009[2C0A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  1352 00000A27 E99E020000              	jmp .L_lambda_simple_end_000e
  1353                                  .L_lambda_simple_code_000e:	; lambda-simple body
  1354 00000A2C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1355 00000A32 740B                    	je .L_lambda_simple_arity_check_ok_000e
  1356 00000A34 FF742410                	push qword [rsp + 8 * 2]
  1357 00000A38 6A01                    	push 1
  1358 00000A3A E961550000              	jmp L_error_incorrect_arity_simple
  1359                                  .L_lambda_simple_arity_check_ok_000e:
  1360 00000A3F C8000000                	enter 0, 0
  1361                                  	; preparing a tail-call
  1362 00000A43 488B4520                	mov rax, PARAM(0)	; param b
  1363 00000A47 50                      	push rax
  1364 00000A48 6A01                    	push 1	; arg count
  1365                                  	; preparing a non-tail-call
  1366 00000A4A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1367 00000A4F E893550000              	call malloc
  1368 00000A54 50                      	push rax
  1369 00000A55 BF08000000              	mov rdi, 8 * 1	; new rib
  1370 00000A5A E888550000              	call malloc
  1371 00000A5F 50                      	push rax
  1372 00000A60 BF28000000              	mov rdi, 8 * 5	; extended env
  1373 00000A65 E87D550000              	call malloc
  1374 00000A6A 488B7D10                	mov rdi, ENV
  1375 00000A6E BE00000000              	mov rsi, 0
  1376 00000A73 BA01000000              	mov rdx, 1
  1377                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  1378 00000A78 4883FE04                	cmp rsi, 4
  1379 00000A7C 7410                    	je .L_lambda_simple_env_end_000f
  1380 00000A7E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1381 00000A82 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1382 00000A86 48FFC6                  	inc rsi
  1383 00000A89 48FFC2                  	inc rdx
  1384 00000A8C EBEA                    	jmp .L_lambda_simple_env_loop_000f
  1385                                  .L_lambda_simple_env_end_000f:
  1386 00000A8E 5B                      	pop rbx
  1387 00000A8F BE00000000              	mov rsi, 0
  1388                                  .L_lambda_simple_params_loop_000f:	; copy params
  1389 00000A94 4883FE01                	cmp rsi, 1
  1390 00000A98 740E                    	je .L_lambda_simple_params_end_000f
  1391 00000A9A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1392 00000A9F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1393 00000AA3 48FFC6                  	inc rsi
  1394 00000AA6 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  1395                                  .L_lambda_simple_params_end_000f:
  1396 00000AA8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1397 00000AAB 4889C3                  	mov rbx, rax
  1398 00000AAE 58                      	pop rax
  1399 00000AAF C60004                  	mov byte [rax], T_closure
  1400 00000AB2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1401 00000AB6 48C74009[C30A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  1402 00000ABE E9BA010000              	jmp .L_lambda_simple_end_000f
  1403                                  .L_lambda_simple_code_000f:	; lambda-simple body
  1404 00000AC3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1405 00000AC9 740B                    	je .L_lambda_simple_arity_check_ok_000f
  1406 00000ACB FF742410                	push qword [rsp + 8 * 2]
  1407 00000ACF 6A01                    	push 1
  1408 00000AD1 E9CA540000              	jmp L_error_incorrect_arity_simple
  1409                                  .L_lambda_simple_arity_check_ok_000f:
  1410 00000AD6 C8000000                	enter 0, 0
  1411 00000ADA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1412 00000ADF E803550000              	call malloc
  1413 00000AE4 50                      	push rax
  1414 00000AE5 BF08000000              	mov rdi, 8 * 1	; new rib
  1415 00000AEA E8F8540000              	call malloc
  1416 00000AEF 50                      	push rax
  1417 00000AF0 BF30000000              	mov rdi, 8 * 6	; extended env
  1418 00000AF5 E8ED540000              	call malloc
  1419 00000AFA 488B7D10                	mov rdi, ENV
  1420 00000AFE BE00000000              	mov rsi, 0
  1421 00000B03 BA01000000              	mov rdx, 1
  1422                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  1423 00000B08 4883FE05                	cmp rsi, 5
  1424 00000B0C 7410                    	je .L_lambda_simple_env_end_0010
  1425 00000B0E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1426 00000B12 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1427 00000B16 48FFC6                  	inc rsi
  1428 00000B19 48FFC2                  	inc rdx
  1429 00000B1C EBEA                    	jmp .L_lambda_simple_env_loop_0010
  1430                                  .L_lambda_simple_env_end_0010:
  1431 00000B1E 5B                      	pop rbx
  1432 00000B1F BE00000000              	mov rsi, 0
  1433                                  .L_lambda_simple_params_loop_0010:	; copy params
  1434 00000B24 4883FE01                	cmp rsi, 1
  1435 00000B28 740E                    	je .L_lambda_simple_params_end_0010
  1436 00000B2A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1437 00000B2F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1438 00000B33 48FFC6                  	inc rsi
  1439 00000B36 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  1440                                  .L_lambda_simple_params_end_0010:
  1441 00000B38 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1442 00000B3B 4889C3                  	mov rbx, rax
  1443 00000B3E 58                      	pop rax
  1444 00000B3F C60004                  	mov byte [rax], T_closure
  1445 00000B42 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1446 00000B46 48C74009[530B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  1447 00000B4E E926010000              	jmp .L_lambda_simple_end_0010
  1448                                  .L_lambda_simple_code_0010:	; lambda-simple body
  1449 00000B53 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1450 00000B59 740B                    	je .L_lambda_simple_arity_check_ok_0010
  1451 00000B5B FF742410                	push qword [rsp + 8 * 2]
  1452 00000B5F 6A01                    	push 1
  1453 00000B61 E93A540000              	jmp L_error_incorrect_arity_simple
  1454                                  .L_lambda_simple_arity_check_ok_0010:
  1455 00000B66 C8000000                	enter 0, 0
  1456 00000B6A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1457 00000B6F E873540000              	call malloc
  1458 00000B74 50                      	push rax
  1459 00000B75 BF08000000              	mov rdi, 8 * 1	; new rib
  1460 00000B7A E868540000              	call malloc
  1461 00000B7F 50                      	push rax
  1462 00000B80 BF38000000              	mov rdi, 8 * 7	; extended env
  1463 00000B85 E85D540000              	call malloc
  1464 00000B8A 488B7D10                	mov rdi, ENV
  1465 00000B8E BE00000000              	mov rsi, 0
  1466 00000B93 BA01000000              	mov rdx, 1
  1467                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  1468 00000B98 4883FE06                	cmp rsi, 6
  1469 00000B9C 7410                    	je .L_lambda_simple_env_end_0011
  1470 00000B9E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1471 00000BA2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1472 00000BA6 48FFC6                  	inc rsi
  1473 00000BA9 48FFC2                  	inc rdx
  1474 00000BAC EBEA                    	jmp .L_lambda_simple_env_loop_0011
  1475                                  .L_lambda_simple_env_end_0011:
  1476 00000BAE 5B                      	pop rbx
  1477 00000BAF BE00000000              	mov rsi, 0
  1478                                  .L_lambda_simple_params_loop_0011:	; copy params
  1479 00000BB4 4883FE01                	cmp rsi, 1
  1480 00000BB8 740E                    	je .L_lambda_simple_params_end_0011
  1481 00000BBA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1482 00000BBF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1483 00000BC3 48FFC6                  	inc rsi
  1484 00000BC6 EBEC                    	jmp .L_lambda_simple_params_loop_0011
  1485                                  .L_lambda_simple_params_end_0011:
  1486 00000BC8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1487 00000BCB 4889C3                  	mov rbx, rax
  1488 00000BCE 58                      	pop rax
  1489 00000BCF C60004                  	mov byte [rax], T_closure
  1490 00000BD2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1491 00000BD6 48C74009[E30B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  1492 00000BDE E992000000              	jmp .L_lambda_simple_end_0011
  1493                                  .L_lambda_simple_code_0011:	; lambda-simple body
  1494 00000BE3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1495 00000BE9 740B                    	je .L_lambda_simple_arity_check_ok_0011
  1496 00000BEB FF742410                	push qword [rsp + 8 * 2]
  1497 00000BEF 6A01                    	push 1
  1498 00000BF1 E9AA530000              	jmp L_error_incorrect_arity_simple
  1499                                  .L_lambda_simple_arity_check_ok_0011:
  1500 00000BF6 C8000000                	enter 0, 0
  1501                                  	; preparing a tail-call
  1502                                  	; preparing a non-tail-call
  1503 00000BFA 488B4520                	mov rax, PARAM(0)	; param z
  1504 00000BFE 50                      	push rax
  1505 00000BFF 6A01                    	push 1	; arg count
  1506                                  	; preparing a non-tail-call
  1507 00000C01 488B4510                	mov rax, ENV
  1508 00000C05 488B00                  	mov rax, qword [rax + 8 * 0]
  1509 00000C08 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  1510 00000C0B 50                      	push rax
  1511 00000C0C 6A01                    	push 1	; arg count
  1512 00000C0E 488B4510                	mov rax, ENV
  1513 00000C12 488B4008                	mov rax, qword [rax + 8 * 1]
  1514 00000C16 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  1515 00000C19 803804                  	cmp byte [rax], T_closure
  1516 00000C1C 0F851C530000            	jne L_error_non_closure
  1517 00000C22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1518 00000C25 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1519 00000C28 803804                  	cmp byte [rax], T_closure
  1520 00000C2B 0F850D530000            	jne L_error_non_closure
  1521 00000C31 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1522 00000C34 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1523 00000C37 50                      	push rax
  1524 00000C38 6A01                    	push 1	; arg count
  1525 00000C3A 488B4510                	mov rax, ENV
  1526 00000C3E 488B00                  	mov rax, qword [rax + 8 * 0]
  1527 00000C41 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  1528 00000C44 803804                  	cmp byte [rax], T_closure
  1529 00000C47 0F85F1520000            	jne L_error_non_closure
  1530 00000C4D FF7001                  	push SOB_CLOSURE_ENV(rax)
  1531 00000C50 FF7508                  	push qword [rbp + 8 * 1]
  1532                                   ; old ret addr	pop rbp
  1533                                  ; restore the old rbp	mov rbx, 1
  1534 00000C53 4883C303                	add rbx, 3
  1535                                  	mov rdi, dword [rbp + 8*2]
  1535          ******************       error: mismatch in operand sizes
  1536                                  .L_tc_recycle_frame_loop_0007:
  1537 00000C57 4883FB00                	cmp rbx, 0
  1538 00000C5B 7411                    je .L_tc_recycle_frame_done_0007
  1539 00000C5D 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1540 00000C61 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1541 00000C66 48FFCF                  	dec rdi
  1542 00000C69 48FFCB                  	dec rbx
  1543 00000C6C EBE9                    jmp .L_tc_recycle_frame_loop_0007
  1544                                  .L_tc_recycle_frame_done_0007:
  1545 00000C6E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1546 00000C71 C9                      	leave
  1547 00000C72 C21800                  	ret AND_KILL_FRAME(1)
  1548                                  .L_lambda_simple_end_0011:	; new closure is in rax
  1549 00000C75 C9                      	leave
  1550 00000C76 C21800                  	ret AND_KILL_FRAME(1)
  1551                                  .L_lambda_simple_end_0010:	; new closure is in rax
  1552 00000C79 C9                      	leave
  1553 00000C7A C21800                  	ret AND_KILL_FRAME(1)
  1554                                  .L_lambda_simple_end_000f:	; new closure is in rax
  1555 00000C7D 50                      	push rax
  1556 00000C7E 6A01                    	push 1	; arg count
  1557 00000C80 488B4510                	mov rax, ENV
  1558 00000C84 488B00                  	mov rax, qword [rax + 8 * 0]
  1559 00000C87 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  1560 00000C8A 803804                  	cmp byte [rax], T_closure
  1561 00000C8D 0F85AB520000            	jne L_error_non_closure
  1562 00000C93 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1563 00000C96 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1564 00000C99 803804                  	cmp byte [rax], T_closure
  1565 00000C9C 0F859C520000            	jne L_error_non_closure
  1566 00000CA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1567 00000CA5 FF7508                  	push qword [rbp + 8 * 1]
  1568                                   ; old ret addr	pop rbp
  1569                                  ; restore the old rbp	mov rbx, 1
  1570 00000CA8 4883C303                	add rbx, 3
  1571                                  	mov rdi, dword [rbp + 8*2]
  1571          ******************       error: mismatch in operand sizes
  1572                                  .L_tc_recycle_frame_loop_0006:
  1573 00000CAC 4883FB00                	cmp rbx, 0
  1574 00000CB0 7411                    je .L_tc_recycle_frame_done_0006
  1575 00000CB2 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1576 00000CB6 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1577 00000CBB 48FFCF                  	dec rdi
  1578 00000CBE 48FFCB                  	dec rbx
  1579 00000CC1 EBE9                    jmp .L_tc_recycle_frame_loop_0006
  1580                                  .L_tc_recycle_frame_done_0006:
  1581 00000CC3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1582 00000CC6 C9                      	leave
  1583 00000CC7 C21800                  	ret AND_KILL_FRAME(1)
  1584                                  .L_lambda_simple_end_000e:	; new closure is in rax
  1585 00000CCA C9                      	leave
  1586 00000CCB C21800                  	ret AND_KILL_FRAME(1)
  1587                                  .L_lambda_simple_end_000d:	; new closure is in rax
  1588 00000CCE 50                      	push rax
  1589 00000CCF 6A01                    	push 1	; arg count
  1590 00000CD1 488B4510                	mov rax, ENV
  1591 00000CD5 488B00                  	mov rax, qword [rax + 8 * 0]
  1592 00000CD8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  1593 00000CDB 803804                  	cmp byte [rax], T_closure
  1594 00000CDE 0F855A520000            	jne L_error_non_closure
  1595 00000CE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1596 00000CE7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1597 00000CEA 50                      	push rax
  1598 00000CEB 6A01                    	push 1	; arg count
  1599 00000CED 488B4520                	mov rax, PARAM(0)	; param b
  1600 00000CF1 803804                  	cmp byte [rax], T_closure
  1601 00000CF4 0F8544520000            	jne L_error_non_closure
  1602 00000CFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  1603 00000CFD FF5009                  	call SOB_CLOSURE_CODE(rax)
  1604 00000D00 803804                  	cmp byte [rax], T_closure
  1605 00000D03 0F8535520000            	jne L_error_non_closure
  1606 00000D09 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1607 00000D0C FF7508                  	push qword [rbp + 8 * 1]
  1608                                   ; old ret addr	pop rbp
  1609                                  ; restore the old rbp	mov rbx, 1
  1610 00000D0F 4883C303                	add rbx, 3
  1611                                  	mov rdi, dword [rbp + 8*2]
  1611          ******************       error: mismatch in operand sizes
  1612                                  .L_tc_recycle_frame_loop_0005:
  1613 00000D13 4883FB00                	cmp rbx, 0
  1614 00000D17 7411                    je .L_tc_recycle_frame_done_0005
  1615 00000D19 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1616 00000D1D 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1617 00000D22 48FFCF                  	dec rdi
  1618 00000D25 48FFCB                  	dec rbx
  1619 00000D28 EBE9                    jmp .L_tc_recycle_frame_loop_0005
  1620                                  .L_tc_recycle_frame_done_0005:
  1621 00000D2A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1622 00000D2D C9                      	leave
  1623 00000D2E C21800                  	ret AND_KILL_FRAME(1)
  1624                                  .L_lambda_simple_end_000a:	; new closure is in rax
  1625 00000D31 C9                      	leave
  1626 00000D32 C21800                  	ret AND_KILL_FRAME(1)
  1627                                  .L_lambda_simple_end_0009:	; new closure is in rax
  1628 00000D35 803804                  	cmp byte [rax], T_closure
  1629 00000D38 0F8500520000            	jne L_error_non_closure
  1630 00000D3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  1631 00000D41 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1632 00000D44 803804                  	cmp byte [rax], T_closure
  1633 00000D47 0F85F1510000            	jne L_error_non_closure
  1634 00000D4D FF7001                  	push SOB_CLOSURE_ENV(rax)
  1635 00000D50 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1636 00000D53 50                      	push rax
  1637 00000D54 6A01                    	push 1	; arg count
  1638 00000D56 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1639 00000D5B E887520000              	call malloc
  1640 00000D60 50                      	push rax
  1641 00000D61 BF00000000              	mov rdi, 8 * 0	; new rib
  1642 00000D66 E87C520000              	call malloc
  1643 00000D6B 50                      	push rax
  1644 00000D6C BF08000000              	mov rdi, 8 * 1	; extended env
  1645 00000D71 E871520000              	call malloc
  1646 00000D76 488B7D10                	mov rdi, ENV
  1647 00000D7A BE00000000              	mov rsi, 0
  1648 00000D7F BA01000000              	mov rdx, 1
  1649                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  1650 00000D84 4883FE00                	cmp rsi, 0
  1651 00000D88 7410                    	je .L_lambda_simple_env_end_0012
  1652 00000D8A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1653 00000D8E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1654 00000D92 48FFC6                  	inc rsi
  1655 00000D95 48FFC2                  	inc rdx
  1656 00000D98 EBEA                    	jmp .L_lambda_simple_env_loop_0012
  1657                                  .L_lambda_simple_env_end_0012:
  1658 00000D9A 5B                      	pop rbx
  1659 00000D9B BE00000000              	mov rsi, 0
  1660                                  .L_lambda_simple_params_loop_0012:	; copy params
  1661 00000DA0 4883FE00                	cmp rsi, 0
  1662 00000DA4 740E                    	je .L_lambda_simple_params_end_0012
  1663 00000DA6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1664 00000DAB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1665 00000DAF 48FFC6                  	inc rsi
  1666 00000DB2 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  1667                                  .L_lambda_simple_params_end_0012:
  1668 00000DB4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1669 00000DB7 4889C3                  	mov rbx, rax
  1670 00000DBA 58                      	pop rax
  1671 00000DBB C60004                  	mov byte [rax], T_closure
  1672 00000DBE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1673 00000DC2 48C74009[CF0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  1674 00000DCA E9E5050000              	jmp .L_lambda_simple_end_0012
  1675                                  .L_lambda_simple_code_0012:	; lambda-simple body
  1676 00000DCF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1677 00000DD5 740B                    	je .L_lambda_simple_arity_check_ok_0012
  1678 00000DD7 FF742410                	push qword [rsp + 8 * 2]
  1679 00000DDB 6A01                    	push 1
  1680 00000DDD E9BE510000              	jmp L_error_incorrect_arity_simple
  1681                                  .L_lambda_simple_arity_check_ok_0012:
  1682 00000DE2 C8000000                	enter 0, 0
  1683 00000DE6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1684 00000DEB E8F7510000              	call malloc
  1685 00000DF0 50                      	push rax
  1686 00000DF1 BF08000000              	mov rdi, 8 * 1	; new rib
  1687 00000DF6 E8EC510000              	call malloc
  1688 00000DFB 50                      	push rax
  1689 00000DFC BF10000000              	mov rdi, 8 * 2	; extended env
  1690 00000E01 E8E1510000              	call malloc
  1691 00000E06 488B7D10                	mov rdi, ENV
  1692 00000E0A BE00000000              	mov rsi, 0
  1693 00000E0F BA01000000              	mov rdx, 1
  1694                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  1695 00000E14 4883FE01                	cmp rsi, 1
  1696 00000E18 7410                    	je .L_lambda_simple_env_end_0013
  1697 00000E1A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1698 00000E1E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1699 00000E22 48FFC6                  	inc rsi
  1700 00000E25 48FFC2                  	inc rdx
  1701 00000E28 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  1702                                  .L_lambda_simple_env_end_0013:
  1703 00000E2A 5B                      	pop rbx
  1704 00000E2B BE00000000              	mov rsi, 0
  1705                                  .L_lambda_simple_params_loop_0013:	; copy params
  1706 00000E30 4883FE01                	cmp rsi, 1
  1707 00000E34 740E                    	je .L_lambda_simple_params_end_0013
  1708 00000E36 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1709 00000E3B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1710 00000E3F 48FFC6                  	inc rsi
  1711 00000E42 EBEC                    	jmp .L_lambda_simple_params_loop_0013
  1712                                  .L_lambda_simple_params_end_0013:
  1713 00000E44 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1714 00000E47 4889C3                  	mov rbx, rax
  1715 00000E4A 58                      	pop rax
  1716 00000E4B C60004                  	mov byte [rax], T_closure
  1717 00000E4E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1718 00000E52 48C74009[5F0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  1719 00000E5A E951050000              	jmp .L_lambda_simple_end_0013
  1720                                  .L_lambda_simple_code_0013:	; lambda-simple body
  1721 00000E5F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1722 00000E65 740B                    	je .L_lambda_simple_arity_check_ok_0013
  1723 00000E67 FF742410                	push qword [rsp + 8 * 2]
  1724 00000E6B 6A01                    	push 1
  1725 00000E6D E92E510000              	jmp L_error_incorrect_arity_simple
  1726                                  .L_lambda_simple_arity_check_ok_0013:
  1727 00000E72 C8000000                	enter 0, 0
  1728                                  	; preparing a tail-call
  1729 00000E76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1730 00000E7B E867510000              	call malloc
  1731 00000E80 50                      	push rax
  1732 00000E81 BF08000000              	mov rdi, 8 * 1	; new rib
  1733 00000E86 E85C510000              	call malloc
  1734 00000E8B 50                      	push rax
  1735 00000E8C BF18000000              	mov rdi, 8 * 3	; extended env
  1736 00000E91 E851510000              	call malloc
  1737 00000E96 488B7D10                	mov rdi, ENV
  1738 00000E9A BE00000000              	mov rsi, 0
  1739 00000E9F BA01000000              	mov rdx, 1
  1740                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  1741 00000EA4 4883FE02                	cmp rsi, 2
  1742 00000EA8 7410                    	je .L_lambda_simple_env_end_0014
  1743 00000EAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1744 00000EAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1745 00000EB2 48FFC6                  	inc rsi
  1746 00000EB5 48FFC2                  	inc rdx
  1747 00000EB8 EBEA                    	jmp .L_lambda_simple_env_loop_0014
  1748                                  .L_lambda_simple_env_end_0014:
  1749 00000EBA 5B                      	pop rbx
  1750 00000EBB BE00000000              	mov rsi, 0
  1751                                  .L_lambda_simple_params_loop_0014:	; copy params
  1752 00000EC0 4883FE01                	cmp rsi, 1
  1753 00000EC4 740E                    	je .L_lambda_simple_params_end_0014
  1754 00000EC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1755 00000ECB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1756 00000ECF 48FFC6                  	inc rsi
  1757 00000ED2 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  1758                                  .L_lambda_simple_params_end_0014:
  1759 00000ED4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1760 00000ED7 4889C3                  	mov rbx, rax
  1761 00000EDA 58                      	pop rax
  1762 00000EDB C60004                  	mov byte [rax], T_closure
  1763 00000EDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1764 00000EE2 48C74009[EF0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  1765 00000EEA E9B0000000              	jmp .L_lambda_simple_end_0014
  1766                                  .L_lambda_simple_code_0014:	; lambda-simple body
  1767 00000EEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1768 00000EF5 740B                    	je .L_lambda_simple_arity_check_ok_0014
  1769 00000EF7 FF742410                	push qword [rsp + 8 * 2]
  1770 00000EFB 6A01                    	push 1
  1771 00000EFD E99E500000              	jmp L_error_incorrect_arity_simple
  1772                                  .L_lambda_simple_arity_check_ok_0014:
  1773 00000F02 C8000000                	enter 0, 0
  1774 00000F06 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1775 00000F0B E8D7500000              	call malloc
  1776 00000F10 50                      	push rax
  1777 00000F11 BF08000000              	mov rdi, 8 * 1	; new rib
  1778 00000F16 E8CC500000              	call malloc
  1779 00000F1B 50                      	push rax
  1780 00000F1C BF20000000              	mov rdi, 8 * 4	; extended env
  1781 00000F21 E8C1500000              	call malloc
  1782 00000F26 488B7D10                	mov rdi, ENV
  1783 00000F2A BE00000000              	mov rsi, 0
  1784 00000F2F BA01000000              	mov rdx, 1
  1785                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  1786 00000F34 4883FE03                	cmp rsi, 3
  1787 00000F38 7410                    	je .L_lambda_simple_env_end_0015
  1788 00000F3A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1789 00000F3E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1790 00000F42 48FFC6                  	inc rsi
  1791 00000F45 48FFC2                  	inc rdx
  1792 00000F48 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  1793                                  .L_lambda_simple_env_end_0015:
  1794 00000F4A 5B                      	pop rbx
  1795 00000F4B BE00000000              	mov rsi, 0
  1796                                  .L_lambda_simple_params_loop_0015:	; copy params
  1797 00000F50 4883FE01                	cmp rsi, 1
  1798 00000F54 740E                    	je .L_lambda_simple_params_end_0015
  1799 00000F56 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1800 00000F5B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1801 00000F5F 48FFC6                  	inc rsi
  1802 00000F62 EBEC                    	jmp .L_lambda_simple_params_loop_0015
  1803                                  .L_lambda_simple_params_end_0015:
  1804 00000F64 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1805 00000F67 4889C3                  	mov rbx, rax
  1806 00000F6A 58                      	pop rax
  1807 00000F6B C60004                  	mov byte [rax], T_closure
  1808 00000F6E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1809 00000F72 48C74009[7C0F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  1810 00000F7A EB1F                    	jmp .L_lambda_simple_end_0015
  1811                                  .L_lambda_simple_code_0015:	; lambda-simple body
  1812 00000F7C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1813 00000F82 740B                    	je .L_lambda_simple_arity_check_ok_0015
  1814 00000F84 FF742410                	push qword [rsp + 8 * 2]
  1815 00000F88 6A01                    	push 1
  1816 00000F8A E911500000              	jmp L_error_incorrect_arity_simple
  1817                                  .L_lambda_simple_arity_check_ok_0015:
  1818 00000F8F C8000000                	enter 0, 0
  1819 00000F93 488B4520                	mov rax, PARAM(0)	; param y
  1820 00000F97 C9                      	leave
  1821 00000F98 C21800                  	ret AND_KILL_FRAME(1)
  1822                                  .L_lambda_simple_end_0015:	; new closure is in rax
  1823 00000F9B C9                      	leave
  1824 00000F9C C21800                  	ret AND_KILL_FRAME(1)
  1825                                  .L_lambda_simple_end_0014:	; new closure is in rax
  1826 00000F9F 50                      	push rax
  1827 00000FA0 6A01                    	push 1	; arg count
  1828                                  	; preparing a non-tail-call
  1829                                  	; preparing a non-tail-call
  1830 00000FA2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1831 00000FA7 E83B500000              	call malloc
  1832 00000FAC 50                      	push rax
  1833 00000FAD BF08000000              	mov rdi, 8 * 1	; new rib
  1834 00000FB2 E830500000              	call malloc
  1835 00000FB7 50                      	push rax
  1836 00000FB8 BF18000000              	mov rdi, 8 * 3	; extended env
  1837 00000FBD E825500000              	call malloc
  1838 00000FC2 488B7D10                	mov rdi, ENV
  1839 00000FC6 BE00000000              	mov rsi, 0
  1840 00000FCB BA01000000              	mov rdx, 1
  1841                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  1842 00000FD0 4883FE02                	cmp rsi, 2
  1843 00000FD4 7410                    	je .L_lambda_simple_env_end_0016
  1844 00000FD6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1845 00000FDA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1846 00000FDE 48FFC6                  	inc rsi
  1847 00000FE1 48FFC2                  	inc rdx
  1848 00000FE4 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  1849                                  .L_lambda_simple_env_end_0016:
  1850 00000FE6 5B                      	pop rbx
  1851 00000FE7 BE00000000              	mov rsi, 0
  1852                                  .L_lambda_simple_params_loop_0016:	; copy params
  1853 00000FEC 4883FE01                	cmp rsi, 1
  1854 00000FF0 740E                    	je .L_lambda_simple_params_end_0016
  1855 00000FF2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1856 00000FF7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1857 00000FFB 48FFC6                  	inc rsi
  1858 00000FFE EBEC                    	jmp .L_lambda_simple_params_loop_0016
  1859                                  .L_lambda_simple_params_end_0016:
  1860 00001000 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1861 00001003 4889C3                  	mov rbx, rax
  1862 00001006 58                      	pop rax
  1863 00001007 C60004                  	mov byte [rax], T_closure
  1864 0000100A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1865 0000100E 48C74009[1B100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  1866 00001016 E932030000              	jmp .L_lambda_simple_end_0016
  1867                                  .L_lambda_simple_code_0016:	; lambda-simple body
  1868 0000101B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1869 00001021 740B                    	je .L_lambda_simple_arity_check_ok_0016
  1870 00001023 FF742410                	push qword [rsp + 8 * 2]
  1871 00001027 6A01                    	push 1
  1872 00001029 E9724F0000              	jmp L_error_incorrect_arity_simple
  1873                                  .L_lambda_simple_arity_check_ok_0016:
  1874 0000102E C8000000                	enter 0, 0
  1875 00001032 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1876 00001037 E8AB4F0000              	call malloc
  1877 0000103C 50                      	push rax
  1878 0000103D BF08000000              	mov rdi, 8 * 1	; new rib
  1879 00001042 E8A04F0000              	call malloc
  1880 00001047 50                      	push rax
  1881 00001048 BF20000000              	mov rdi, 8 * 4	; extended env
  1882 0000104D E8954F0000              	call malloc
  1883 00001052 488B7D10                	mov rdi, ENV
  1884 00001056 BE00000000              	mov rsi, 0
  1885 0000105B BA01000000              	mov rdx, 1
  1886                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  1887 00001060 4883FE03                	cmp rsi, 3
  1888 00001064 7410                    	je .L_lambda_simple_env_end_0017
  1889 00001066 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1890 0000106A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1891 0000106E 48FFC6                  	inc rsi
  1892 00001071 48FFC2                  	inc rdx
  1893 00001074 EBEA                    	jmp .L_lambda_simple_env_loop_0017
  1894                                  .L_lambda_simple_env_end_0017:
  1895 00001076 5B                      	pop rbx
  1896 00001077 BE00000000              	mov rsi, 0
  1897                                  .L_lambda_simple_params_loop_0017:	; copy params
  1898 0000107C 4883FE01                	cmp rsi, 1
  1899 00001080 740E                    	je .L_lambda_simple_params_end_0017
  1900 00001082 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1901 00001087 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1902 0000108B 48FFC6                  	inc rsi
  1903 0000108E EBEC                    	jmp .L_lambda_simple_params_loop_0017
  1904                                  .L_lambda_simple_params_end_0017:
  1905 00001090 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1906 00001093 4889C3                  	mov rbx, rax
  1907 00001096 58                      	pop rax
  1908 00001097 C60004                  	mov byte [rax], T_closure
  1909 0000109A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1910 0000109E 48C74009[AB100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  1911 000010A6 E99E020000              	jmp .L_lambda_simple_end_0017
  1912                                  .L_lambda_simple_code_0017:	; lambda-simple body
  1913 000010AB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1914 000010B1 740B                    	je .L_lambda_simple_arity_check_ok_0017
  1915 000010B3 FF742410                	push qword [rsp + 8 * 2]
  1916 000010B7 6A01                    	push 1
  1917 000010B9 E9E24E0000              	jmp L_error_incorrect_arity_simple
  1918                                  .L_lambda_simple_arity_check_ok_0017:
  1919 000010BE C8000000                	enter 0, 0
  1920                                  	; preparing a tail-call
  1921 000010C2 488B4520                	mov rax, PARAM(0)	; param b
  1922 000010C6 50                      	push rax
  1923 000010C7 6A01                    	push 1	; arg count
  1924                                  	; preparing a non-tail-call
  1925 000010C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1926 000010CE E8144F0000              	call malloc
  1927 000010D3 50                      	push rax
  1928 000010D4 BF08000000              	mov rdi, 8 * 1	; new rib
  1929 000010D9 E8094F0000              	call malloc
  1930 000010DE 50                      	push rax
  1931 000010DF BF28000000              	mov rdi, 8 * 5	; extended env
  1932 000010E4 E8FE4E0000              	call malloc
  1933 000010E9 488B7D10                	mov rdi, ENV
  1934 000010ED BE00000000              	mov rsi, 0
  1935 000010F2 BA01000000              	mov rdx, 1
  1936                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  1937 000010F7 4883FE04                	cmp rsi, 4
  1938 000010FB 7410                    	je .L_lambda_simple_env_end_0018
  1939 000010FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1940 00001101 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1941 00001105 48FFC6                  	inc rsi
  1942 00001108 48FFC2                  	inc rdx
  1943 0000110B EBEA                    	jmp .L_lambda_simple_env_loop_0018
  1944                                  .L_lambda_simple_env_end_0018:
  1945 0000110D 5B                      	pop rbx
  1946 0000110E BE00000000              	mov rsi, 0
  1947                                  .L_lambda_simple_params_loop_0018:	; copy params
  1948 00001113 4883FE01                	cmp rsi, 1
  1949 00001117 740E                    	je .L_lambda_simple_params_end_0018
  1950 00001119 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1951 0000111E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1952 00001122 48FFC6                  	inc rsi
  1953 00001125 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  1954                                  .L_lambda_simple_params_end_0018:
  1955 00001127 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1956 0000112A 4889C3                  	mov rbx, rax
  1957 0000112D 58                      	pop rax
  1958 0000112E C60004                  	mov byte [rax], T_closure
  1959 00001131 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1960 00001135 48C74009[42110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  1961 0000113D E9BA010000              	jmp .L_lambda_simple_end_0018
  1962                                  .L_lambda_simple_code_0018:	; lambda-simple body
  1963 00001142 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1964 00001148 740B                    	je .L_lambda_simple_arity_check_ok_0018
  1965 0000114A FF742410                	push qword [rsp + 8 * 2]
  1966 0000114E 6A01                    	push 1
  1967 00001150 E94B4E0000              	jmp L_error_incorrect_arity_simple
  1968                                  .L_lambda_simple_arity_check_ok_0018:
  1969 00001155 C8000000                	enter 0, 0
  1970 00001159 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1971 0000115E E8844E0000              	call malloc
  1972 00001163 50                      	push rax
  1973 00001164 BF08000000              	mov rdi, 8 * 1	; new rib
  1974 00001169 E8794E0000              	call malloc
  1975 0000116E 50                      	push rax
  1976 0000116F BF30000000              	mov rdi, 8 * 6	; extended env
  1977 00001174 E86E4E0000              	call malloc
  1978 00001179 488B7D10                	mov rdi, ENV
  1979 0000117D BE00000000              	mov rsi, 0
  1980 00001182 BA01000000              	mov rdx, 1
  1981                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  1982 00001187 4883FE05                	cmp rsi, 5
  1983 0000118B 7410                    	je .L_lambda_simple_env_end_0019
  1984 0000118D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1985 00001191 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1986 00001195 48FFC6                  	inc rsi
  1987 00001198 48FFC2                  	inc rdx
  1988 0000119B EBEA                    	jmp .L_lambda_simple_env_loop_0019
  1989                                  .L_lambda_simple_env_end_0019:
  1990 0000119D 5B                      	pop rbx
  1991 0000119E BE00000000              	mov rsi, 0
  1992                                  .L_lambda_simple_params_loop_0019:	; copy params
  1993 000011A3 4883FE01                	cmp rsi, 1
  1994 000011A7 740E                    	je .L_lambda_simple_params_end_0019
  1995 000011A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1996 000011AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1997 000011B2 48FFC6                  	inc rsi
  1998 000011B5 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  1999                                  .L_lambda_simple_params_end_0019:
  2000 000011B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2001 000011BA 4889C3                  	mov rbx, rax
  2002 000011BD 58                      	pop rax
  2003 000011BE C60004                  	mov byte [rax], T_closure
  2004 000011C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2005 000011C5 48C74009[D2110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  2006 000011CD E926010000              	jmp .L_lambda_simple_end_0019
  2007                                  .L_lambda_simple_code_0019:	; lambda-simple body
  2008 000011D2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2009 000011D8 740B                    	je .L_lambda_simple_arity_check_ok_0019
  2010 000011DA FF742410                	push qword [rsp + 8 * 2]
  2011 000011DE 6A01                    	push 1
  2012 000011E0 E9BB4D0000              	jmp L_error_incorrect_arity_simple
  2013                                  .L_lambda_simple_arity_check_ok_0019:
  2014 000011E5 C8000000                	enter 0, 0
  2015 000011E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2016 000011EE E8F44D0000              	call malloc
  2017 000011F3 50                      	push rax
  2018 000011F4 BF08000000              	mov rdi, 8 * 1	; new rib
  2019 000011F9 E8E94D0000              	call malloc
  2020 000011FE 50                      	push rax
  2021 000011FF BF38000000              	mov rdi, 8 * 7	; extended env
  2022 00001204 E8DE4D0000              	call malloc
  2023 00001209 488B7D10                	mov rdi, ENV
  2024 0000120D BE00000000              	mov rsi, 0
  2025 00001212 BA01000000              	mov rdx, 1
  2026                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  2027 00001217 4883FE06                	cmp rsi, 6
  2028 0000121B 7410                    	je .L_lambda_simple_env_end_001a
  2029 0000121D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2030 00001221 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2031 00001225 48FFC6                  	inc rsi
  2032 00001228 48FFC2                  	inc rdx
  2033 0000122B EBEA                    	jmp .L_lambda_simple_env_loop_001a
  2034                                  .L_lambda_simple_env_end_001a:
  2035 0000122D 5B                      	pop rbx
  2036 0000122E BE00000000              	mov rsi, 0
  2037                                  .L_lambda_simple_params_loop_001a:	; copy params
  2038 00001233 4883FE01                	cmp rsi, 1
  2039 00001237 740E                    	je .L_lambda_simple_params_end_001a
  2040 00001239 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2041 0000123E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2042 00001242 48FFC6                  	inc rsi
  2043 00001245 EBEC                    	jmp .L_lambda_simple_params_loop_001a
  2044                                  .L_lambda_simple_params_end_001a:
  2045 00001247 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2046 0000124A 4889C3                  	mov rbx, rax
  2047 0000124D 58                      	pop rax
  2048 0000124E C60004                  	mov byte [rax], T_closure
  2049 00001251 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2050 00001255 48C74009[62120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  2051 0000125D E992000000              	jmp .L_lambda_simple_end_001a
  2052                                  .L_lambda_simple_code_001a:	; lambda-simple body
  2053 00001262 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2054 00001268 740B                    	je .L_lambda_simple_arity_check_ok_001a
  2055 0000126A FF742410                	push qword [rsp + 8 * 2]
  2056 0000126E 6A01                    	push 1
  2057 00001270 E92B4D0000              	jmp L_error_incorrect_arity_simple
  2058                                  .L_lambda_simple_arity_check_ok_001a:
  2059 00001275 C8000000                	enter 0, 0
  2060                                  	; preparing a tail-call
  2061                                  	; preparing a non-tail-call
  2062 00001279 488B4520                	mov rax, PARAM(0)	; param z
  2063 0000127D 50                      	push rax
  2064 0000127E 6A01                    	push 1	; arg count
  2065                                  	; preparing a non-tail-call
  2066 00001280 488B4510                	mov rax, ENV
  2067 00001284 488B00                  	mov rax, qword [rax + 8 * 0]
  2068 00001287 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  2069 0000128A 50                      	push rax
  2070 0000128B 6A01                    	push 1	; arg count
  2071 0000128D 488B4510                	mov rax, ENV
  2072 00001291 488B4008                	mov rax, qword [rax + 8 * 1]
  2073 00001295 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  2074 00001298 803804                  	cmp byte [rax], T_closure
  2075 0000129B 0F859D4C0000            	jne L_error_non_closure
  2076 000012A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2077 000012A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2078 000012A7 803804                  	cmp byte [rax], T_closure
  2079 000012AA 0F858E4C0000            	jne L_error_non_closure
  2080 000012B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2081 000012B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2082 000012B6 50                      	push rax
  2083 000012B7 6A01                    	push 1	; arg count
  2084 000012B9 488B4510                	mov rax, ENV
  2085 000012BD 488B00                  	mov rax, qword [rax + 8 * 0]
  2086 000012C0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  2087 000012C3 803804                  	cmp byte [rax], T_closure
  2088 000012C6 0F85724C0000            	jne L_error_non_closure
  2089 000012CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  2090 000012CF FF7508                  	push qword [rbp + 8 * 1]
  2091                                   ; old ret addr	pop rbp
  2092                                  ; restore the old rbp	mov rbx, 1
  2093 000012D2 4883C303                	add rbx, 3
  2094                                  	mov rdi, dword [rbp + 8*2]
  2094          ******************       error: mismatch in operand sizes
  2095                                  .L_tc_recycle_frame_loop_000a:
  2096 000012D6 4883FB00                	cmp rbx, 0
  2097 000012DA 7411                    je .L_tc_recycle_frame_done_000a
  2098 000012DC 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2099 000012E0 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2100 000012E5 48FFCF                  	dec rdi
  2101 000012E8 48FFCB                  	dec rbx
  2102 000012EB EBE9                    jmp .L_tc_recycle_frame_loop_000a
  2103                                  .L_tc_recycle_frame_done_000a:
  2104 000012ED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2105 000012F0 C9                      	leave
  2106 000012F1 C21800                  	ret AND_KILL_FRAME(1)
  2107                                  .L_lambda_simple_end_001a:	; new closure is in rax
  2108 000012F4 C9                      	leave
  2109 000012F5 C21800                  	ret AND_KILL_FRAME(1)
  2110                                  .L_lambda_simple_end_0019:	; new closure is in rax
  2111 000012F8 C9                      	leave
  2112 000012F9 C21800                  	ret AND_KILL_FRAME(1)
  2113                                  .L_lambda_simple_end_0018:	; new closure is in rax
  2114 000012FC 50                      	push rax
  2115 000012FD 6A01                    	push 1	; arg count
  2116 000012FF 488B4510                	mov rax, ENV
  2117 00001303 488B00                  	mov rax, qword [rax + 8 * 0]
  2118 00001306 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  2119 00001309 803804                  	cmp byte [rax], T_closure
  2120 0000130C 0F852C4C0000            	jne L_error_non_closure
  2121 00001312 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2122 00001315 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2123 00001318 803804                  	cmp byte [rax], T_closure
  2124 0000131B 0F851D4C0000            	jne L_error_non_closure
  2125 00001321 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2126 00001324 FF7508                  	push qword [rbp + 8 * 1]
  2127                                   ; old ret addr	pop rbp
  2128                                  ; restore the old rbp	mov rbx, 1
  2129 00001327 4883C303                	add rbx, 3
  2130                                  	mov rdi, dword [rbp + 8*2]
  2130          ******************       error: mismatch in operand sizes
  2131                                  .L_tc_recycle_frame_loop_0009:
  2132 0000132B 4883FB00                	cmp rbx, 0
  2133 0000132F 7411                    je .L_tc_recycle_frame_done_0009
  2134 00001331 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2135 00001335 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2136 0000133A 48FFCF                  	dec rdi
  2137 0000133D 48FFCB                  	dec rbx
  2138 00001340 EBE9                    jmp .L_tc_recycle_frame_loop_0009
  2139                                  .L_tc_recycle_frame_done_0009:
  2140 00001342 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2141 00001345 C9                      	leave
  2142 00001346 C21800                  	ret AND_KILL_FRAME(1)
  2143                                  .L_lambda_simple_end_0017:	; new closure is in rax
  2144 00001349 C9                      	leave
  2145 0000134A C21800                  	ret AND_KILL_FRAME(1)
  2146                                  .L_lambda_simple_end_0016:	; new closure is in rax
  2147 0000134D 50                      	push rax
  2148 0000134E 6A01                    	push 1	; arg count
  2149 00001350 488B4510                	mov rax, ENV
  2150 00001354 488B00                  	mov rax, qword [rax + 8 * 0]
  2151 00001357 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  2152 0000135A 803804                  	cmp byte [rax], T_closure
  2153 0000135D 0F85DB4B0000            	jne L_error_non_closure
  2154 00001363 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2155 00001366 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2156 00001369 50                      	push rax
  2157 0000136A 6A01                    	push 1	; arg count
  2158 0000136C 488B4520                	mov rax, PARAM(0)	; param b
  2159 00001370 803804                  	cmp byte [rax], T_closure
  2160 00001373 0F85C54B0000            	jne L_error_non_closure
  2161 00001379 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2162 0000137C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2163 0000137F 803804                  	cmp byte [rax], T_closure
  2164 00001382 0F85B64B0000            	jne L_error_non_closure
  2165 00001388 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2166 0000138B FF7508                  	push qword [rbp + 8 * 1]
  2167                                   ; old ret addr	pop rbp
  2168                                  ; restore the old rbp	mov rbx, 1
  2169 0000138E 4883C303                	add rbx, 3
  2170                                  	mov rdi, dword [rbp + 8*2]
  2170          ******************       error: mismatch in operand sizes
  2171                                  .L_tc_recycle_frame_loop_0008:
  2172 00001392 4883FB00                	cmp rbx, 0
  2173 00001396 7411                    je .L_tc_recycle_frame_done_0008
  2174 00001398 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2175 0000139C 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2176 000013A1 48FFCF                  	dec rdi
  2177 000013A4 48FFCB                  	dec rbx
  2178 000013A7 EBE9                    jmp .L_tc_recycle_frame_loop_0008
  2179                                  .L_tc_recycle_frame_done_0008:
  2180 000013A9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2181 000013AC C9                      	leave
  2182 000013AD C21800                  	ret AND_KILL_FRAME(1)
  2183                                  .L_lambda_simple_end_0013:	; new closure is in rax
  2184 000013B0 C9                      	leave
  2185 000013B1 C21800                  	ret AND_KILL_FRAME(1)
  2186                                  .L_lambda_simple_end_0012:	; new closure is in rax
  2187 000013B4 803804                  	cmp byte [rax], T_closure
  2188 000013B7 0F85814B0000            	jne L_error_non_closure
  2189 000013BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  2190 000013C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2191 000013C3 803804                  	cmp byte [rax], T_closure
  2192 000013C6 0F85724B0000            	jne L_error_non_closure
  2193 000013CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  2194 000013CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  2195 000013D2 50                      	push rax
  2196 000013D3 6A01                    	push 1	; arg count
  2197                                  	; preparing a non-tail-call
  2198                                  	; preparing a non-tail-call
  2199 000013D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2200 000013DA E8084C0000              	call malloc
  2201 000013DF 50                      	push rax
  2202 000013E0 BF00000000              	mov rdi, 8 * 0	; new rib
  2203 000013E5 E8FD4B0000              	call malloc
  2204 000013EA 50                      	push rax
  2205 000013EB BF08000000              	mov rdi, 8 * 1	; extended env
  2206 000013F0 E8F24B0000              	call malloc
  2207 000013F5 488B7D10                	mov rdi, ENV
  2208 000013F9 BE00000000              	mov rsi, 0
  2209 000013FE BA01000000              	mov rdx, 1
  2210                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  2211 00001403 4883FE00                	cmp rsi, 0
  2212 00001407 7410                    	je .L_lambda_simple_env_end_001b
  2213 00001409 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2214 0000140D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2215 00001411 48FFC6                  	inc rsi
  2216 00001414 48FFC2                  	inc rdx
  2217 00001417 EBEA                    	jmp .L_lambda_simple_env_loop_001b
  2218                                  .L_lambda_simple_env_end_001b:
  2219 00001419 5B                      	pop rbx
  2220 0000141A BE00000000              	mov rsi, 0
  2221                                  .L_lambda_simple_params_loop_001b:	; copy params
  2222 0000141F 4883FE00                	cmp rsi, 0
  2223 00001423 740E                    	je .L_lambda_simple_params_end_001b
  2224 00001425 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2225 0000142A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2226 0000142E 48FFC6                  	inc rsi
  2227 00001431 EBEC                    	jmp .L_lambda_simple_params_loop_001b
  2228                                  .L_lambda_simple_params_end_001b:
  2229 00001433 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2230 00001436 4889C3                  	mov rbx, rax
  2231 00001439 58                      	pop rax
  2232 0000143A C60004                  	mov byte [rax], T_closure
  2233 0000143D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2234 00001441 48C74009[4E140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  2235 00001449 E95D010000              	jmp .L_lambda_simple_end_001b
  2236                                  .L_lambda_simple_code_001b:	; lambda-simple body
  2237 0000144E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2238 00001454 740B                    	je .L_lambda_simple_arity_check_ok_001b
  2239 00001456 FF742410                	push qword [rsp + 8 * 2]
  2240 0000145A 6A01                    	push 1
  2241 0000145C E93F4B0000              	jmp L_error_incorrect_arity_simple
  2242                                  .L_lambda_simple_arity_check_ok_001b:
  2243 00001461 C8000000                	enter 0, 0
  2244 00001465 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2245 0000146A E8784B0000              	call malloc
  2246 0000146F 50                      	push rax
  2247 00001470 BF08000000              	mov rdi, 8 * 1	; new rib
  2248 00001475 E86D4B0000              	call malloc
  2249 0000147A 50                      	push rax
  2250 0000147B BF10000000              	mov rdi, 8 * 2	; extended env
  2251 00001480 E8624B0000              	call malloc
  2252 00001485 488B7D10                	mov rdi, ENV
  2253 00001489 BE00000000              	mov rsi, 0
  2254 0000148E BA01000000              	mov rdx, 1
  2255                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  2256 00001493 4883FE01                	cmp rsi, 1
  2257 00001497 7410                    	je .L_lambda_simple_env_end_001c
  2258 00001499 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2259 0000149D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2260 000014A1 48FFC6                  	inc rsi
  2261 000014A4 48FFC2                  	inc rdx
  2262 000014A7 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  2263                                  .L_lambda_simple_env_end_001c:
  2264 000014A9 5B                      	pop rbx
  2265 000014AA BE00000000              	mov rsi, 0
  2266                                  .L_lambda_simple_params_loop_001c:	; copy params
  2267 000014AF 4883FE01                	cmp rsi, 1
  2268 000014B3 740E                    	je .L_lambda_simple_params_end_001c
  2269 000014B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2270 000014BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2271 000014BE 48FFC6                  	inc rsi
  2272 000014C1 EBEC                    	jmp .L_lambda_simple_params_loop_001c
  2273                                  .L_lambda_simple_params_end_001c:
  2274 000014C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2275 000014C6 4889C3                  	mov rbx, rax
  2276 000014C9 58                      	pop rax
  2277 000014CA C60004                  	mov byte [rax], T_closure
  2278 000014CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2279 000014D1 48C74009[DE140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  2280 000014D9 E9C9000000              	jmp .L_lambda_simple_end_001c
  2281                                  .L_lambda_simple_code_001c:	; lambda-simple body
  2282 000014DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2283 000014E4 740B                    	je .L_lambda_simple_arity_check_ok_001c
  2284 000014E6 FF742410                	push qword [rsp + 8 * 2]
  2285 000014EA 6A01                    	push 1
  2286 000014EC E9AF4A0000              	jmp L_error_incorrect_arity_simple
  2287                                  .L_lambda_simple_arity_check_ok_001c:
  2288 000014F1 C8000000                	enter 0, 0
  2289                                  	; preparing a tail-call
  2290                                  	; preparing a non-tail-call
  2291                                  	; preparing a non-tail-call
  2292                                  	; preparing a non-tail-call
  2293                                  	; preparing a non-tail-call
  2294 000014F5 488B4520                	mov rax, PARAM(0)	; param y
  2295 000014F9 50                      	push rax
  2296 000014FA 6A01                    	push 1	; arg count
  2297 000014FC 488B4510                	mov rax, ENV
  2298 00001500 488B00                  	mov rax, qword [rax + 8 * 0]
  2299 00001503 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2300 00001506 803804                  	cmp byte [rax], T_closure
  2301 00001509 0F852F4A0000            	jne L_error_non_closure
  2302 0000150F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2303 00001512 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2304 00001515 50                      	push rax
  2305 00001516 6A01                    	push 1	; arg count
  2306 00001518 488B4510                	mov rax, ENV
  2307 0000151C 488B00                  	mov rax, qword [rax + 8 * 0]
  2308 0000151F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2309 00001522 803804                  	cmp byte [rax], T_closure
  2310 00001525 0F85134A0000            	jne L_error_non_closure
  2311 0000152B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2312 0000152E FF5009                  	call SOB_CLOSURE_CODE(rax)
  2313 00001531 50                      	push rax
  2314 00001532 6A01                    	push 1	; arg count
  2315 00001534 488B4510                	mov rax, ENV
  2316 00001538 488B00                  	mov rax, qword [rax + 8 * 0]
  2317 0000153B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2318 0000153E 803804                  	cmp byte [rax], T_closure
  2319 00001541 0F85F7490000            	jne L_error_non_closure
  2320 00001547 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2321 0000154A FF5009                  	call SOB_CLOSURE_CODE(rax)
  2322 0000154D 50                      	push rax
  2323 0000154E 6A01                    	push 1	; arg count
  2324 00001550 488B4510                	mov rax, ENV
  2325 00001554 488B00                  	mov rax, qword [rax + 8 * 0]
  2326 00001557 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2327 0000155A 803804                  	cmp byte [rax], T_closure
  2328 0000155D 0F85DB490000            	jne L_error_non_closure
  2329 00001563 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2330 00001566 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2331 00001569 50                      	push rax
  2332 0000156A 6A01                    	push 1	; arg count
  2333 0000156C 488B4510                	mov rax, ENV
  2334 00001570 488B00                  	mov rax, qword [rax + 8 * 0]
  2335 00001573 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2336 00001576 803804                  	cmp byte [rax], T_closure
  2337 00001579 0F85BF490000            	jne L_error_non_closure
  2338 0000157F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2339 00001582 FF7508                  	push qword [rbp + 8 * 1]
  2340                                   ; old ret addr	pop rbp
  2341                                  ; restore the old rbp	mov rbx, 1
  2342 00001585 4883C303                	add rbx, 3
  2343                                  	mov rdi, dword [rbp + 8*2]
  2343          ******************       error: mismatch in operand sizes
  2344                                  .L_tc_recycle_frame_loop_000b:
  2345 00001589 4883FB00                	cmp rbx, 0
  2346 0000158D 7411                    je .L_tc_recycle_frame_done_000b
  2347 0000158F 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2348 00001593 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2349 00001598 48FFCF                  	dec rdi
  2350 0000159B 48FFCB                  	dec rbx
  2351 0000159E EBE9                    jmp .L_tc_recycle_frame_loop_000b
  2352                                  .L_tc_recycle_frame_done_000b:
  2353 000015A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2354 000015A3 C9                      	leave
  2355 000015A4 C21800                  	ret AND_KILL_FRAME(1)
  2356                                  .L_lambda_simple_end_001c:	; new closure is in rax
  2357 000015A7 C9                      	leave
  2358 000015A8 C21800                  	ret AND_KILL_FRAME(1)
  2359                                  .L_lambda_simple_end_001b:	; new closure is in rax
  2360 000015AB 50                      	push rax
  2361 000015AC 6A01                    	push 1	; arg count
  2362 000015AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2363 000015B3 E82F4A0000              	call malloc
  2364 000015B8 50                      	push rax
  2365 000015B9 BF00000000              	mov rdi, 8 * 0	; new rib
  2366 000015BE E8244A0000              	call malloc
  2367 000015C3 50                      	push rax
  2368 000015C4 BF08000000              	mov rdi, 8 * 1	; extended env
  2369 000015C9 E8194A0000              	call malloc
  2370 000015CE 488B7D10                	mov rdi, ENV
  2371 000015D2 BE00000000              	mov rsi, 0
  2372 000015D7 BA01000000              	mov rdx, 1
  2373                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  2374 000015DC 4883FE00                	cmp rsi, 0
  2375 000015E0 7410                    	je .L_lambda_simple_env_end_001d
  2376 000015E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2377 000015E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2378 000015EA 48FFC6                  	inc rsi
  2379 000015ED 48FFC2                  	inc rdx
  2380 000015F0 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  2381                                  .L_lambda_simple_env_end_001d:
  2382 000015F2 5B                      	pop rbx
  2383 000015F3 BE00000000              	mov rsi, 0
  2384                                  .L_lambda_simple_params_loop_001d:	; copy params
  2385 000015F8 4883FE00                	cmp rsi, 0
  2386 000015FC 740E                    	je .L_lambda_simple_params_end_001d
  2387 000015FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2388 00001603 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2389 00001607 48FFC6                  	inc rsi
  2390 0000160A EBEC                    	jmp .L_lambda_simple_params_loop_001d
  2391                                  .L_lambda_simple_params_end_001d:
  2392 0000160C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2393 0000160F 4889C3                  	mov rbx, rax
  2394 00001612 58                      	pop rax
  2395 00001613 C60004                  	mov byte [rax], T_closure
  2396 00001616 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2397 0000161A 48C74009[27160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  2398 00001622 E998170000              	jmp .L_lambda_simple_end_001d
  2399                                  .L_lambda_simple_code_001d:	; lambda-simple body
  2400 00001627 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2401 0000162D 740B                    	je .L_lambda_simple_arity_check_ok_001d
  2402 0000162F FF742410                	push qword [rsp + 8 * 2]
  2403 00001633 6A01                    	push 1
  2404 00001635 E966490000              	jmp L_error_incorrect_arity_simple
  2405                                  .L_lambda_simple_arity_check_ok_001d:
  2406 0000163A C8000000                	enter 0, 0
  2407                                  	; preparing a tail-call
  2408                                  	; preparing a non-tail-call
  2409                                  	; preparing a non-tail-call
  2410 0000163E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2411 00001643 E89F490000              	call malloc
  2412 00001648 50                      	push rax
  2413 00001649 BF08000000              	mov rdi, 8 * 1	; new rib
  2414 0000164E E894490000              	call malloc
  2415 00001653 50                      	push rax
  2416 00001654 BF10000000              	mov rdi, 8 * 2	; extended env
  2417 00001659 E889490000              	call malloc
  2418 0000165E 488B7D10                	mov rdi, ENV
  2419 00001662 BE00000000              	mov rsi, 0
  2420 00001667 BA01000000              	mov rdx, 1
  2421                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  2422 0000166C 4883FE01                	cmp rsi, 1
  2423 00001670 7410                    	je .L_lambda_simple_env_end_001e
  2424 00001672 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2425 00001676 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2426 0000167A 48FFC6                  	inc rsi
  2427 0000167D 48FFC2                  	inc rdx
  2428 00001680 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  2429                                  .L_lambda_simple_env_end_001e:
  2430 00001682 5B                      	pop rbx
  2431 00001683 BE00000000              	mov rsi, 0
  2432                                  .L_lambda_simple_params_loop_001e:	; copy params
  2433 00001688 4883FE01                	cmp rsi, 1
  2434 0000168C 740E                    	je .L_lambda_simple_params_end_001e
  2435 0000168E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2436 00001693 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2437 00001697 48FFC6                  	inc rsi
  2438 0000169A EBEC                    	jmp .L_lambda_simple_params_loop_001e
  2439                                  .L_lambda_simple_params_end_001e:
  2440 0000169C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2441 0000169F 4889C3                  	mov rbx, rax
  2442 000016A2 58                      	pop rax
  2443 000016A3 C60004                  	mov byte [rax], T_closure
  2444 000016A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2445 000016AA 48C74009[B4160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  2446 000016B2 EB1F                    	jmp .L_lambda_simple_end_001e
  2447                                  .L_lambda_simple_code_001e:	; lambda-simple body
  2448 000016B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2449 000016BA 740B                    	je .L_lambda_simple_arity_check_ok_001e
  2450 000016BC FF742410                	push qword [rsp + 8 * 2]
  2451 000016C0 6A01                    	push 1
  2452 000016C2 E9D9480000              	jmp L_error_incorrect_arity_simple
  2453                                  .L_lambda_simple_arity_check_ok_001e:
  2454 000016C7 C8000000                	enter 0, 0
  2455 000016CB 488B4520                	mov rax, PARAM(0)	; param x
  2456 000016CF C9                      	leave
  2457 000016D0 C21800                  	ret AND_KILL_FRAME(1)
  2458                                  .L_lambda_simple_end_001e:	; new closure is in rax
  2459 000016D3 50                      	push rax
  2460 000016D4 6A01                    	push 1	; arg count
  2461                                  	; preparing a non-tail-call
  2462 000016D6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2463 000016DB E807490000              	call malloc
  2464 000016E0 50                      	push rax
  2465 000016E1 BF08000000              	mov rdi, 8 * 1	; new rib
  2466 000016E6 E8FC480000              	call malloc
  2467 000016EB 50                      	push rax
  2468 000016EC BF10000000              	mov rdi, 8 * 2	; extended env
  2469 000016F1 E8F1480000              	call malloc
  2470 000016F6 488B7D10                	mov rdi, ENV
  2471 000016FA BE00000000              	mov rsi, 0
  2472 000016FF BA01000000              	mov rdx, 1
  2473                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  2474 00001704 4883FE01                	cmp rsi, 1
  2475 00001708 7410                    	je .L_lambda_simple_env_end_001f
  2476 0000170A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2477 0000170E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2478 00001712 48FFC6                  	inc rsi
  2479 00001715 48FFC2                  	inc rdx
  2480 00001718 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  2481                                  .L_lambda_simple_env_end_001f:
  2482 0000171A 5B                      	pop rbx
  2483 0000171B BE00000000              	mov rsi, 0
  2484                                  .L_lambda_simple_params_loop_001f:	; copy params
  2485 00001720 4883FE01                	cmp rsi, 1
  2486 00001724 740E                    	je .L_lambda_simple_params_end_001f
  2487 00001726 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2488 0000172B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2489 0000172F 48FFC6                  	inc rsi
  2490 00001732 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  2491                                  .L_lambda_simple_params_end_001f:
  2492 00001734 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2493 00001737 4889C3                  	mov rbx, rax
  2494 0000173A 58                      	pop rax
  2495 0000173B C60004                  	mov byte [rax], T_closure
  2496 0000173E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2497 00001742 48C74009[4C170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  2498 0000174A EB1F                    	jmp .L_lambda_simple_end_001f
  2499                                  .L_lambda_simple_code_001f:	; lambda-simple body
  2500 0000174C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2501 00001752 740B                    	je .L_lambda_simple_arity_check_ok_001f
  2502 00001754 FF742410                	push qword [rsp + 8 * 2]
  2503 00001758 6A01                    	push 1
  2504 0000175A E941480000              	jmp L_error_incorrect_arity_simple
  2505                                  .L_lambda_simple_arity_check_ok_001f:
  2506 0000175F C8000000                	enter 0, 0
  2507 00001763 488B4520                	mov rax, PARAM(0)	; param x
  2508 00001767 C9                      	leave
  2509 00001768 C21800                  	ret AND_KILL_FRAME(1)
  2510                                  .L_lambda_simple_end_001f:	; new closure is in rax
  2511 0000176B 50                      	push rax
  2512 0000176C 6A01                    	push 1	; arg count
  2513 0000176E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2514 00001773 E86F480000              	call malloc
  2515 00001778 50                      	push rax
  2516 00001779 BF08000000              	mov rdi, 8 * 1	; new rib
  2517 0000177E E864480000              	call malloc
  2518 00001783 50                      	push rax
  2519 00001784 BF10000000              	mov rdi, 8 * 2	; extended env
  2520 00001789 E859480000              	call malloc
  2521 0000178E 488B7D10                	mov rdi, ENV
  2522 00001792 BE00000000              	mov rsi, 0
  2523 00001797 BA01000000              	mov rdx, 1
  2524                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  2525 0000179C 4883FE01                	cmp rsi, 1
  2526 000017A0 7410                    	je .L_lambda_simple_env_end_0020
  2527 000017A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2528 000017A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2529 000017AA 48FFC6                  	inc rsi
  2530 000017AD 48FFC2                  	inc rdx
  2531 000017B0 EBEA                    	jmp .L_lambda_simple_env_loop_0020
  2532                                  .L_lambda_simple_env_end_0020:
  2533 000017B2 5B                      	pop rbx
  2534 000017B3 BE00000000              	mov rsi, 0
  2535                                  .L_lambda_simple_params_loop_0020:	; copy params
  2536 000017B8 4883FE01                	cmp rsi, 1
  2537 000017BC 740E                    	je .L_lambda_simple_params_end_0020
  2538 000017BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2539 000017C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2540 000017C7 48FFC6                  	inc rsi
  2541 000017CA EBEC                    	jmp .L_lambda_simple_params_loop_0020
  2542                                  .L_lambda_simple_params_end_0020:
  2543 000017CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2544 000017CF 4889C3                  	mov rbx, rax
  2545 000017D2 58                      	pop rax
  2546 000017D3 C60004                  	mov byte [rax], T_closure
  2547 000017D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2548 000017DA 48C74009[E7170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  2549 000017E2 E99B010000              	jmp .L_lambda_simple_end_0020
  2550                                  .L_lambda_simple_code_0020:	; lambda-simple body
  2551 000017E7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2552 000017ED 740B                    	je .L_lambda_simple_arity_check_ok_0020
  2553 000017EF FF742410                	push qword [rsp + 8 * 2]
  2554 000017F3 6A01                    	push 1
  2555 000017F5 E9A6470000              	jmp L_error_incorrect_arity_simple
  2556                                  .L_lambda_simple_arity_check_ok_0020:
  2557 000017FA C8000000                	enter 0, 0
  2558 000017FE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2559 00001803 E8DF470000              	call malloc
  2560 00001808 50                      	push rax
  2561 00001809 BF08000000              	mov rdi, 8 * 1	; new rib
  2562 0000180E E8D4470000              	call malloc
  2563 00001813 50                      	push rax
  2564 00001814 BF18000000              	mov rdi, 8 * 3	; extended env
  2565 00001819 E8C9470000              	call malloc
  2566 0000181E 488B7D10                	mov rdi, ENV
  2567 00001822 BE00000000              	mov rsi, 0
  2568 00001827 BA01000000              	mov rdx, 1
  2569                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  2570 0000182C 4883FE02                	cmp rsi, 2
  2571 00001830 7410                    	je .L_lambda_simple_env_end_0021
  2572 00001832 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2573 00001836 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2574 0000183A 48FFC6                  	inc rsi
  2575 0000183D 48FFC2                  	inc rdx
  2576 00001840 EBEA                    	jmp .L_lambda_simple_env_loop_0021
  2577                                  .L_lambda_simple_env_end_0021:
  2578 00001842 5B                      	pop rbx
  2579 00001843 BE00000000              	mov rsi, 0
  2580                                  .L_lambda_simple_params_loop_0021:	; copy params
  2581 00001848 4883FE01                	cmp rsi, 1
  2582 0000184C 740E                    	je .L_lambda_simple_params_end_0021
  2583 0000184E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2584 00001853 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2585 00001857 48FFC6                  	inc rsi
  2586 0000185A EBEC                    	jmp .L_lambda_simple_params_loop_0021
  2587                                  .L_lambda_simple_params_end_0021:
  2588 0000185C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2589 0000185F 4889C3                  	mov rbx, rax
  2590 00001862 58                      	pop rax
  2591 00001863 C60004                  	mov byte [rax], T_closure
  2592 00001866 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2593 0000186A 48C74009[77180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  2594 00001872 E907010000              	jmp .L_lambda_simple_end_0021
  2595                                  .L_lambda_simple_code_0021:	; lambda-simple body
  2596 00001877 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2597 0000187D 740B                    	je .L_lambda_simple_arity_check_ok_0021
  2598 0000187F FF742410                	push qword [rsp + 8 * 2]
  2599 00001883 6A01                    	push 1
  2600 00001885 E916470000              	jmp L_error_incorrect_arity_simple
  2601                                  .L_lambda_simple_arity_check_ok_0021:
  2602 0000188A C8000000                	enter 0, 0
  2603 0000188E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2604 00001893 E84F470000              	call malloc
  2605 00001898 50                      	push rax
  2606 00001899 BF08000000              	mov rdi, 8 * 1	; new rib
  2607 0000189E E844470000              	call malloc
  2608 000018A3 50                      	push rax
  2609 000018A4 BF20000000              	mov rdi, 8 * 4	; extended env
  2610 000018A9 E839470000              	call malloc
  2611 000018AE 488B7D10                	mov rdi, ENV
  2612 000018B2 BE00000000              	mov rsi, 0
  2613 000018B7 BA01000000              	mov rdx, 1
  2614                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  2615 000018BC 4883FE03                	cmp rsi, 3
  2616 000018C0 7410                    	je .L_lambda_simple_env_end_0022
  2617 000018C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2618 000018C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2619 000018CA 48FFC6                  	inc rsi
  2620 000018CD 48FFC2                  	inc rdx
  2621 000018D0 EBEA                    	jmp .L_lambda_simple_env_loop_0022
  2622                                  .L_lambda_simple_env_end_0022:
  2623 000018D2 5B                      	pop rbx
  2624 000018D3 BE00000000              	mov rsi, 0
  2625                                  .L_lambda_simple_params_loop_0022:	; copy params
  2626 000018D8 4883FE01                	cmp rsi, 1
  2627 000018DC 740E                    	je .L_lambda_simple_params_end_0022
  2628 000018DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2629 000018E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2630 000018E7 48FFC6                  	inc rsi
  2631 000018EA EBEC                    	jmp .L_lambda_simple_params_loop_0022
  2632                                  .L_lambda_simple_params_end_0022:
  2633 000018EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2634 000018EF 4889C3                  	mov rbx, rax
  2635 000018F2 58                      	pop rax
  2636 000018F3 C60004                  	mov byte [rax], T_closure
  2637 000018F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2638 000018FA 48C74009[04190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  2639 00001902 EB76                    	jmp .L_lambda_simple_end_0022
  2640                                  .L_lambda_simple_code_0022:	; lambda-simple body
  2641 00001904 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2642 0000190A 740B                    	je .L_lambda_simple_arity_check_ok_0022
  2643 0000190C FF742410                	push qword [rsp + 8 * 2]
  2644 00001910 6A01                    	push 1
  2645 00001912 E989460000              	jmp L_error_incorrect_arity_simple
  2646                                  .L_lambda_simple_arity_check_ok_0022:
  2647 00001917 C8000000                	enter 0, 0
  2648                                  	; preparing a tail-call
  2649 0000191B 488B4510                	mov rax, ENV
  2650 0000191F 488B00                  	mov rax, qword [rax + 8 * 0]
  2651 00001922 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  2652 00001925 50                      	push rax
  2653 00001926 6A01                    	push 1	; arg count
  2654                                  	; preparing a non-tail-call
  2655 00001928 488B4510                	mov rax, ENV
  2656 0000192C 488B4008                	mov rax, qword [rax + 8 * 1]
  2657 00001930 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  2658 00001933 50                      	push rax
  2659 00001934 6A01                    	push 1	; arg count
  2660 00001936 488B4520                	mov rax, PARAM(0)	; param c
  2661 0000193A 803804                  	cmp byte [rax], T_closure
  2662 0000193D 0F85FB450000            	jne L_error_non_closure
  2663 00001943 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2664 00001946 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2665 00001949 803804                  	cmp byte [rax], T_closure
  2666 0000194C 0F85EC450000            	jne L_error_non_closure
  2667 00001952 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2668 00001955 FF7508                  	push qword [rbp + 8 * 1]
  2669                                   ; old ret addr	pop rbp
  2670                                  ; restore the old rbp	mov rbx, 1
  2671 00001958 4883C303                	add rbx, 3
  2672                                  	mov rdi, dword [rbp + 8*2]
  2672          ******************       error: mismatch in operand sizes
  2673                                  .L_tc_recycle_frame_loop_000d:
  2674 0000195C 4883FB00                	cmp rbx, 0
  2675 00001960 7411                    je .L_tc_recycle_frame_done_000d
  2676 00001962 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2677 00001966 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2678 0000196B 48FFCF                  	dec rdi
  2679 0000196E 48FFCB                  	dec rbx
  2680 00001971 EBE9                    jmp .L_tc_recycle_frame_loop_000d
  2681                                  .L_tc_recycle_frame_done_000d:
  2682 00001973 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2683 00001976 C9                      	leave
  2684 00001977 C21800                  	ret AND_KILL_FRAME(1)
  2685                                  .L_lambda_simple_end_0022:	; new closure is in rax
  2686 0000197A C9                      	leave
  2687 0000197B C21800                  	ret AND_KILL_FRAME(1)
  2688                                  .L_lambda_simple_end_0021:	; new closure is in rax
  2689 0000197E C9                      	leave
  2690 0000197F C21800                  	ret AND_KILL_FRAME(1)
  2691                                  .L_lambda_simple_end_0020:	; new closure is in rax
  2692 00001982 803804                  	cmp byte [rax], T_closure
  2693 00001985 0F85B3450000            	jne L_error_non_closure
  2694 0000198B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2695 0000198E FF5009                  	call SOB_CLOSURE_CODE(rax)
  2696 00001991 803804                  	cmp byte [rax], T_closure
  2697 00001994 0F85A4450000            	jne L_error_non_closure
  2698 0000199A FF7001                  	push SOB_CLOSURE_ENV(rax)
  2699 0000199D FF5009                  	call SOB_CLOSURE_CODE(rax)
  2700 000019A0 50                      	push rax
  2701 000019A1 6A01                    	push 1	; arg count
  2702                                  	; preparing a non-tail-call
  2703 000019A3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2704 000019A8 E83A460000              	call malloc
  2705 000019AD 50                      	push rax
  2706 000019AE BF08000000              	mov rdi, 8 * 1	; new rib
  2707 000019B3 E82F460000              	call malloc
  2708 000019B8 50                      	push rax
  2709 000019B9 BF10000000              	mov rdi, 8 * 2	; extended env
  2710 000019BE E824460000              	call malloc
  2711 000019C3 488B7D10                	mov rdi, ENV
  2712 000019C7 BE00000000              	mov rsi, 0
  2713 000019CC BA01000000              	mov rdx, 1
  2714                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  2715 000019D1 4883FE01                	cmp rsi, 1
  2716 000019D5 7410                    	je .L_lambda_simple_env_end_0023
  2717 000019D7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2718 000019DB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2719 000019DF 48FFC6                  	inc rsi
  2720 000019E2 48FFC2                  	inc rdx
  2721 000019E5 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  2722                                  .L_lambda_simple_env_end_0023:
  2723 000019E7 5B                      	pop rbx
  2724 000019E8 BE00000000              	mov rsi, 0
  2725                                  .L_lambda_simple_params_loop_0023:	; copy params
  2726 000019ED 4883FE01                	cmp rsi, 1
  2727 000019F1 740E                    	je .L_lambda_simple_params_end_0023
  2728 000019F3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2729 000019F8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2730 000019FC 48FFC6                  	inc rsi
  2731 000019FF EBEC                    	jmp .L_lambda_simple_params_loop_0023
  2732                                  .L_lambda_simple_params_end_0023:
  2733 00001A01 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2734 00001A04 4889C3                  	mov rbx, rax
  2735 00001A07 58                      	pop rax
  2736 00001A08 C60004                  	mov byte [rax], T_closure
  2737 00001A0B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2738 00001A0F 48C74009[1C1A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  2739 00001A17 E959110000              	jmp .L_lambda_simple_end_0023
  2740                                  .L_lambda_simple_code_0023:	; lambda-simple body
  2741 00001A1C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2742 00001A22 740B                    	je .L_lambda_simple_arity_check_ok_0023
  2743 00001A24 FF742410                	push qword [rsp + 8 * 2]
  2744 00001A28 6A01                    	push 1
  2745 00001A2A E971450000              	jmp L_error_incorrect_arity_simple
  2746                                  .L_lambda_simple_arity_check_ok_0023:
  2747 00001A2F C8000000                	enter 0, 0
  2748                                  	; preparing a tail-call
  2749                                  	; preparing a non-tail-call
  2750                                  	; preparing a non-tail-call
  2751 00001A33 488B4520                	mov rax, PARAM(0)	; param p
  2752 00001A37 50                      	push rax
  2753 00001A38 6A01                    	push 1	; arg count
  2754 00001A3A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2755 00001A3F E8A3450000              	call malloc
  2756 00001A44 50                      	push rax
  2757 00001A45 BF08000000              	mov rdi, 8 * 1	; new rib
  2758 00001A4A E898450000              	call malloc
  2759 00001A4F 50                      	push rax
  2760 00001A50 BF18000000              	mov rdi, 8 * 3	; extended env
  2761 00001A55 E88D450000              	call malloc
  2762 00001A5A 488B7D10                	mov rdi, ENV
  2763 00001A5E BE00000000              	mov rsi, 0
  2764 00001A63 BA01000000              	mov rdx, 1
  2765                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  2766 00001A68 4883FE02                	cmp rsi, 2
  2767 00001A6C 7410                    	je .L_lambda_simple_env_end_0024
  2768 00001A6E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2769 00001A72 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2770 00001A76 48FFC6                  	inc rsi
  2771 00001A79 48FFC2                  	inc rdx
  2772 00001A7C EBEA                    	jmp .L_lambda_simple_env_loop_0024
  2773                                  .L_lambda_simple_env_end_0024:
  2774 00001A7E 5B                      	pop rbx
  2775 00001A7F BE00000000              	mov rsi, 0
  2776                                  .L_lambda_simple_params_loop_0024:	; copy params
  2777 00001A84 4883FE01                	cmp rsi, 1
  2778 00001A88 740E                    	je .L_lambda_simple_params_end_0024
  2779 00001A8A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2780 00001A8F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2781 00001A93 48FFC6                  	inc rsi
  2782 00001A96 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  2783                                  .L_lambda_simple_params_end_0024:
  2784 00001A98 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2785 00001A9B 4889C3                  	mov rbx, rax
  2786 00001A9E 58                      	pop rax
  2787 00001A9F C60004                  	mov byte [rax], T_closure
  2788 00001AA2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2789 00001AA6 48C74009[B31A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  2790 00001AAE E978010000              	jmp .L_lambda_simple_end_0024
  2791                                  .L_lambda_simple_code_0024:	; lambda-simple body
  2792 00001AB3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2793 00001AB9 740B                    	je .L_lambda_simple_arity_check_ok_0024
  2794 00001ABB FF742410                	push qword [rsp + 8 * 2]
  2795 00001ABF 6A01                    	push 1
  2796 00001AC1 E9DA440000              	jmp L_error_incorrect_arity_simple
  2797                                  .L_lambda_simple_arity_check_ok_0024:
  2798 00001AC6 C8000000                	enter 0, 0
  2799                                  	; preparing a tail-call
  2800 00001ACA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2801 00001ACF E813450000              	call malloc
  2802 00001AD4 50                      	push rax
  2803 00001AD5 BF08000000              	mov rdi, 8 * 1	; new rib
  2804 00001ADA E808450000              	call malloc
  2805 00001ADF 50                      	push rax
  2806 00001AE0 BF20000000              	mov rdi, 8 * 4	; extended env
  2807 00001AE5 E8FD440000              	call malloc
  2808 00001AEA 488B7D10                	mov rdi, ENV
  2809 00001AEE BE00000000              	mov rsi, 0
  2810 00001AF3 BA01000000              	mov rdx, 1
  2811                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  2812 00001AF8 4883FE03                	cmp rsi, 3
  2813 00001AFC 7410                    	je .L_lambda_simple_env_end_0025
  2814 00001AFE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2815 00001B02 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2816 00001B06 48FFC6                  	inc rsi
  2817 00001B09 48FFC2                  	inc rdx
  2818 00001B0C EBEA                    	jmp .L_lambda_simple_env_loop_0025
  2819                                  .L_lambda_simple_env_end_0025:
  2820 00001B0E 5B                      	pop rbx
  2821 00001B0F BE00000000              	mov rsi, 0
  2822                                  .L_lambda_simple_params_loop_0025:	; copy params
  2823 00001B14 4883FE01                	cmp rsi, 1
  2824 00001B18 740E                    	je .L_lambda_simple_params_end_0025
  2825 00001B1A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2826 00001B1F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2827 00001B23 48FFC6                  	inc rsi
  2828 00001B26 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  2829                                  .L_lambda_simple_params_end_0025:
  2830 00001B28 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2831 00001B2B 4889C3                  	mov rbx, rax
  2832 00001B2E 58                      	pop rax
  2833 00001B2F C60004                  	mov byte [rax], T_closure
  2834 00001B32 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2835 00001B36 48C74009[431B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  2836 00001B3E E9B0000000              	jmp .L_lambda_simple_end_0025
  2837                                  .L_lambda_simple_code_0025:	; lambda-simple body
  2838 00001B43 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2839 00001B49 740B                    	je .L_lambda_simple_arity_check_ok_0025
  2840 00001B4B FF742410                	push qword [rsp + 8 * 2]
  2841 00001B4F 6A01                    	push 1
  2842 00001B51 E94A440000              	jmp L_error_incorrect_arity_simple
  2843                                  .L_lambda_simple_arity_check_ok_0025:
  2844 00001B56 C8000000                	enter 0, 0
  2845 00001B5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2846 00001B5F E883440000              	call malloc
  2847 00001B64 50                      	push rax
  2848 00001B65 BF08000000              	mov rdi, 8 * 1	; new rib
  2849 00001B6A E878440000              	call malloc
  2850 00001B6F 50                      	push rax
  2851 00001B70 BF28000000              	mov rdi, 8 * 5	; extended env
  2852 00001B75 E86D440000              	call malloc
  2853 00001B7A 488B7D10                	mov rdi, ENV
  2854 00001B7E BE00000000              	mov rsi, 0
  2855 00001B83 BA01000000              	mov rdx, 1
  2856                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  2857 00001B88 4883FE04                	cmp rsi, 4
  2858 00001B8C 7410                    	je .L_lambda_simple_env_end_0026
  2859 00001B8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2860 00001B92 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2861 00001B96 48FFC6                  	inc rsi
  2862 00001B99 48FFC2                  	inc rdx
  2863 00001B9C EBEA                    	jmp .L_lambda_simple_env_loop_0026
  2864                                  .L_lambda_simple_env_end_0026:
  2865 00001B9E 5B                      	pop rbx
  2866 00001B9F BE00000000              	mov rsi, 0
  2867                                  .L_lambda_simple_params_loop_0026:	; copy params
  2868 00001BA4 4883FE01                	cmp rsi, 1
  2869 00001BA8 740E                    	je .L_lambda_simple_params_end_0026
  2870 00001BAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2871 00001BAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2872 00001BB3 48FFC6                  	inc rsi
  2873 00001BB6 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  2874                                  .L_lambda_simple_params_end_0026:
  2875 00001BB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2876 00001BBB 4889C3                  	mov rbx, rax
  2877 00001BBE 58                      	pop rax
  2878 00001BBF C60004                  	mov byte [rax], T_closure
  2879 00001BC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2880 00001BC6 48C74009[D01B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  2881 00001BCE EB1F                    	jmp .L_lambda_simple_end_0026
  2882                                  .L_lambda_simple_code_0026:	; lambda-simple body
  2883 00001BD0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2884 00001BD6 740B                    	je .L_lambda_simple_arity_check_ok_0026
  2885 00001BD8 FF742410                	push qword [rsp + 8 * 2]
  2886 00001BDC 6A01                    	push 1
  2887 00001BDE E9BD430000              	jmp L_error_incorrect_arity_simple
  2888                                  .L_lambda_simple_arity_check_ok_0026:
  2889 00001BE3 C8000000                	enter 0, 0
  2890 00001BE7 488B4520                	mov rax, PARAM(0)	; param b
  2891 00001BEB C9                      	leave
  2892 00001BEC C21800                  	ret AND_KILL_FRAME(1)
  2893                                  .L_lambda_simple_end_0026:	; new closure is in rax
  2894 00001BEF C9                      	leave
  2895 00001BF0 C21800                  	ret AND_KILL_FRAME(1)
  2896                                  .L_lambda_simple_end_0025:	; new closure is in rax
  2897 00001BF3 50                      	push rax
  2898 00001BF4 6A01                    	push 1	; arg count
  2899 00001BF6 488B4520                	mov rax, PARAM(0)	; param p
  2900 00001BFA 803804                  	cmp byte [rax], T_closure
  2901 00001BFD 0F853B430000            	jne L_error_non_closure
  2902 00001C03 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2903 00001C06 FF7508                  	push qword [rbp + 8 * 1]
  2904                                   ; old ret addr	pop rbp
  2905                                  ; restore the old rbp	mov rbx, 1
  2906 00001C09 4883C303                	add rbx, 3
  2907                                  	mov rdi, dword [rbp + 8*2]
  2907          ******************       error: mismatch in operand sizes
  2908                                  .L_tc_recycle_frame_loop_000f:
  2909 00001C0D 4883FB00                	cmp rbx, 0
  2910 00001C11 7411                    je .L_tc_recycle_frame_done_000f
  2911 00001C13 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2912 00001C17 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2913 00001C1C 48FFCF                  	dec rdi
  2914 00001C1F 48FFCB                  	dec rbx
  2915 00001C22 EBE9                    jmp .L_tc_recycle_frame_loop_000f
  2916                                  .L_tc_recycle_frame_done_000f:
  2917 00001C24 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2918 00001C27 C9                      	leave
  2919 00001C28 C21800                  	ret AND_KILL_FRAME(1)
  2920                                  .L_lambda_simple_end_0024:	; new closure is in rax
  2921 00001C2B 803804                  	cmp byte [rax], T_closure
  2922 00001C2E 0F850A430000            	jne L_error_non_closure
  2923 00001C34 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2924 00001C37 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2925 00001C3A 50                      	push rax
  2926 00001C3B 6A01                    	push 1	; arg count
  2927                                  	; preparing a non-tail-call
  2928                                  	; preparing a non-tail-call
  2929 00001C3D 488B4520                	mov rax, PARAM(0)	; param p
  2930 00001C41 50                      	push rax
  2931 00001C42 6A01                    	push 1	; arg count
  2932 00001C44 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2933 00001C49 E899430000              	call malloc
  2934 00001C4E 50                      	push rax
  2935 00001C4F BF08000000              	mov rdi, 8 * 1	; new rib
  2936 00001C54 E88E430000              	call malloc
  2937 00001C59 50                      	push rax
  2938 00001C5A BF18000000              	mov rdi, 8 * 3	; extended env
  2939 00001C5F E883430000              	call malloc
  2940 00001C64 488B7D10                	mov rdi, ENV
  2941 00001C68 BE00000000              	mov rsi, 0
  2942 00001C6D BA01000000              	mov rdx, 1
  2943                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  2944 00001C72 4883FE02                	cmp rsi, 2
  2945 00001C76 7410                    	je .L_lambda_simple_env_end_0027
  2946 00001C78 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2947 00001C7C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2948 00001C80 48FFC6                  	inc rsi
  2949 00001C83 48FFC2                  	inc rdx
  2950 00001C86 EBEA                    	jmp .L_lambda_simple_env_loop_0027
  2951                                  .L_lambda_simple_env_end_0027:
  2952 00001C88 5B                      	pop rbx
  2953 00001C89 BE00000000              	mov rsi, 0
  2954                                  .L_lambda_simple_params_loop_0027:	; copy params
  2955 00001C8E 4883FE01                	cmp rsi, 1
  2956 00001C92 740E                    	je .L_lambda_simple_params_end_0027
  2957 00001C94 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2958 00001C99 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2959 00001C9D 48FFC6                  	inc rsi
  2960 00001CA0 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  2961                                  .L_lambda_simple_params_end_0027:
  2962 00001CA2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2963 00001CA5 4889C3                  	mov rbx, rax
  2964 00001CA8 58                      	pop rax
  2965 00001CA9 C60004                  	mov byte [rax], T_closure
  2966 00001CAC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2967 00001CB0 48C74009[BD1C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  2968 00001CB8 E97E010000              	jmp .L_lambda_simple_end_0027
  2969                                  .L_lambda_simple_code_0027:	; lambda-simple body
  2970 00001CBD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2971 00001CC3 740B                    	je .L_lambda_simple_arity_check_ok_0027
  2972 00001CC5 FF742410                	push qword [rsp + 8 * 2]
  2973 00001CC9 6A01                    	push 1
  2974 00001CCB E9D0420000              	jmp L_error_incorrect_arity_simple
  2975                                  .L_lambda_simple_arity_check_ok_0027:
  2976 00001CD0 C8000000                	enter 0, 0
  2977                                  	; preparing a tail-call
  2978 00001CD4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2979 00001CD9 E809430000              	call malloc
  2980 00001CDE 50                      	push rax
  2981 00001CDF BF08000000              	mov rdi, 8 * 1	; new rib
  2982 00001CE4 E8FE420000              	call malloc
  2983 00001CE9 50                      	push rax
  2984 00001CEA BF20000000              	mov rdi, 8 * 4	; extended env
  2985 00001CEF E8F3420000              	call malloc
  2986 00001CF4 488B7D10                	mov rdi, ENV
  2987 00001CF8 BE00000000              	mov rsi, 0
  2988 00001CFD BA01000000              	mov rdx, 1
  2989                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  2990 00001D02 4883FE03                	cmp rsi, 3
  2991 00001D06 7410                    	je .L_lambda_simple_env_end_0028
  2992 00001D08 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2993 00001D0C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2994 00001D10 48FFC6                  	inc rsi
  2995 00001D13 48FFC2                  	inc rdx
  2996 00001D16 EBEA                    	jmp .L_lambda_simple_env_loop_0028
  2997                                  .L_lambda_simple_env_end_0028:
  2998 00001D18 5B                      	pop rbx
  2999 00001D19 BE00000000              	mov rsi, 0
  3000                                  .L_lambda_simple_params_loop_0028:	; copy params
  3001 00001D1E 4883FE01                	cmp rsi, 1
  3002 00001D22 740E                    	je .L_lambda_simple_params_end_0028
  3003 00001D24 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3004 00001D29 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3005 00001D2D 48FFC6                  	inc rsi
  3006 00001D30 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  3007                                  .L_lambda_simple_params_end_0028:
  3008 00001D32 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3009 00001D35 4889C3                  	mov rbx, rax
  3010 00001D38 58                      	pop rax
  3011 00001D39 C60004                  	mov byte [rax], T_closure
  3012 00001D3C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3013 00001D40 48C74009[4D1D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  3014 00001D48 E9B6000000              	jmp .L_lambda_simple_end_0028
  3015                                  .L_lambda_simple_code_0028:	; lambda-simple body
  3016 00001D4D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3017 00001D53 740B                    	je .L_lambda_simple_arity_check_ok_0028
  3018 00001D55 FF742410                	push qword [rsp + 8 * 2]
  3019 00001D59 6A01                    	push 1
  3020 00001D5B E940420000              	jmp L_error_incorrect_arity_simple
  3021                                  .L_lambda_simple_arity_check_ok_0028:
  3022 00001D60 C8000000                	enter 0, 0
  3023 00001D64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3024 00001D69 E879420000              	call malloc
  3025 00001D6E 50                      	push rax
  3026 00001D6F BF08000000              	mov rdi, 8 * 1	; new rib
  3027 00001D74 E86E420000              	call malloc
  3028 00001D79 50                      	push rax
  3029 00001D7A BF28000000              	mov rdi, 8 * 5	; extended env
  3030 00001D7F E863420000              	call malloc
  3031 00001D84 488B7D10                	mov rdi, ENV
  3032 00001D88 BE00000000              	mov rsi, 0
  3033 00001D8D BA01000000              	mov rdx, 1
  3034                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  3035 00001D92 4883FE04                	cmp rsi, 4
  3036 00001D96 7410                    	je .L_lambda_simple_env_end_0029
  3037 00001D98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3038 00001D9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3039 00001DA0 48FFC6                  	inc rsi
  3040 00001DA3 48FFC2                  	inc rdx
  3041 00001DA6 EBEA                    	jmp .L_lambda_simple_env_loop_0029
  3042                                  .L_lambda_simple_env_end_0029:
  3043 00001DA8 5B                      	pop rbx
  3044 00001DA9 BE00000000              	mov rsi, 0
  3045                                  .L_lambda_simple_params_loop_0029:	; copy params
  3046 00001DAE 4883FE01                	cmp rsi, 1
  3047 00001DB2 740E                    	je .L_lambda_simple_params_end_0029
  3048 00001DB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3049 00001DB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3050 00001DBD 48FFC6                  	inc rsi
  3051 00001DC0 EBEC                    	jmp .L_lambda_simple_params_loop_0029
  3052                                  .L_lambda_simple_params_end_0029:
  3053 00001DC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3054 00001DC5 4889C3                  	mov rbx, rax
  3055 00001DC8 58                      	pop rax
  3056 00001DC9 C60004                  	mov byte [rax], T_closure
  3057 00001DCC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3058 00001DD0 48C74009[DA1D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  3059 00001DD8 EB25                    	jmp .L_lambda_simple_end_0029
  3060                                  .L_lambda_simple_code_0029:	; lambda-simple body
  3061 00001DDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3062 00001DE0 740B                    	je .L_lambda_simple_arity_check_ok_0029
  3063 00001DE2 FF742410                	push qword [rsp + 8 * 2]
  3064 00001DE6 6A01                    	push 1
  3065 00001DE8 E9B3410000              	jmp L_error_incorrect_arity_simple
  3066                                  .L_lambda_simple_arity_check_ok_0029:
  3067 00001DED C8000000                	enter 0, 0
  3068 00001DF1 488B4510                	mov rax, ENV
  3069 00001DF5 488B00                  	mov rax, qword [rax + 8 * 0]
  3070 00001DF8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3071 00001DFB C9                      	leave
  3072 00001DFC C21800                  	ret AND_KILL_FRAME(1)
  3073                                  .L_lambda_simple_end_0029:	; new closure is in rax
  3074 00001DFF C9                      	leave
  3075 00001E00 C21800                  	ret AND_KILL_FRAME(1)
  3076                                  .L_lambda_simple_end_0028:	; new closure is in rax
  3077 00001E03 50                      	push rax
  3078 00001E04 6A01                    	push 1	; arg count
  3079 00001E06 488B4520                	mov rax, PARAM(0)	; param p
  3080 00001E0A 803804                  	cmp byte [rax], T_closure
  3081 00001E0D 0F852B410000            	jne L_error_non_closure
  3082 00001E13 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3083 00001E16 FF7508                  	push qword [rbp + 8 * 1]
  3084                                   ; old ret addr	pop rbp
  3085                                  ; restore the old rbp	mov rbx, 1
  3086 00001E19 4883C303                	add rbx, 3
  3087                                  	mov rdi, dword [rbp + 8*2]
  3087          ******************       error: mismatch in operand sizes
  3088                                  .L_tc_recycle_frame_loop_0010:
  3089 00001E1D 4883FB00                	cmp rbx, 0
  3090 00001E21 7411                    je .L_tc_recycle_frame_done_0010
  3091 00001E23 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3092 00001E27 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3093 00001E2C 48FFCF                  	dec rdi
  3094 00001E2F 48FFCB                  	dec rbx
  3095 00001E32 EBE9                    jmp .L_tc_recycle_frame_loop_0010
  3096                                  .L_tc_recycle_frame_done_0010:
  3097 00001E34 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3098 00001E37 C9                      	leave
  3099 00001E38 C21800                  	ret AND_KILL_FRAME(1)
  3100                                  .L_lambda_simple_end_0027:	; new closure is in rax
  3101 00001E3B 803804                  	cmp byte [rax], T_closure
  3102 00001E3E 0F85FA400000            	jne L_error_non_closure
  3103 00001E44 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3104 00001E47 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3105 00001E4A 50                      	push rax
  3106 00001E4B 6A01                    	push 1	; arg count
  3107 00001E4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3108 00001E52 E890410000              	call malloc
  3109 00001E57 50                      	push rax
  3110 00001E58 BF08000000              	mov rdi, 8 * 1	; new rib
  3111 00001E5D E885410000              	call malloc
  3112 00001E62 50                      	push rax
  3113 00001E63 BF18000000              	mov rdi, 8 * 3	; extended env
  3114 00001E68 E87A410000              	call malloc
  3115 00001E6D 488B7D10                	mov rdi, ENV
  3116 00001E71 BE00000000              	mov rsi, 0
  3117 00001E76 BA01000000              	mov rdx, 1
  3118                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  3119 00001E7B 4883FE02                	cmp rsi, 2
  3120 00001E7F 7410                    	je .L_lambda_simple_env_end_002a
  3121 00001E81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3122 00001E85 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3123 00001E89 48FFC6                  	inc rsi
  3124 00001E8C 48FFC2                  	inc rdx
  3125 00001E8F EBEA                    	jmp .L_lambda_simple_env_loop_002a
  3126                                  .L_lambda_simple_env_end_002a:
  3127 00001E91 5B                      	pop rbx
  3128 00001E92 BE00000000              	mov rsi, 0
  3129                                  .L_lambda_simple_params_loop_002a:	; copy params
  3130 00001E97 4883FE01                	cmp rsi, 1
  3131 00001E9B 740E                    	je .L_lambda_simple_params_end_002a
  3132 00001E9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3133 00001EA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3134 00001EA6 48FFC6                  	inc rsi
  3135 00001EA9 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  3136                                  .L_lambda_simple_params_end_002a:
  3137 00001EAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3138 00001EAE 4889C3                  	mov rbx, rax
  3139 00001EB1 58                      	pop rax
  3140 00001EB2 C60004                  	mov byte [rax], T_closure
  3141 00001EB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3142 00001EB9 48C74009[C61E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  3143 00001EC1 E9E5050000              	jmp .L_lambda_simple_end_002a
  3144                                  .L_lambda_simple_code_002a:	; lambda-simple body
  3145 00001EC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3146 00001ECC 740B                    	je .L_lambda_simple_arity_check_ok_002a
  3147 00001ECE FF742410                	push qword [rsp + 8 * 2]
  3148 00001ED2 6A01                    	push 1
  3149 00001ED4 E9C7400000              	jmp L_error_incorrect_arity_simple
  3150                                  .L_lambda_simple_arity_check_ok_002a:
  3151 00001ED9 C8000000                	enter 0, 0
  3152 00001EDD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3153 00001EE2 E800410000              	call malloc
  3154 00001EE7 50                      	push rax
  3155 00001EE8 BF08000000              	mov rdi, 8 * 1	; new rib
  3156 00001EED E8F5400000              	call malloc
  3157 00001EF2 50                      	push rax
  3158 00001EF3 BF20000000              	mov rdi, 8 * 4	; extended env
  3159 00001EF8 E8EA400000              	call malloc
  3160 00001EFD 488B7D10                	mov rdi, ENV
  3161 00001F01 BE00000000              	mov rsi, 0
  3162 00001F06 BA01000000              	mov rdx, 1
  3163                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  3164 00001F0B 4883FE03                	cmp rsi, 3
  3165 00001F0F 7410                    	je .L_lambda_simple_env_end_002b
  3166 00001F11 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3167 00001F15 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3168 00001F19 48FFC6                  	inc rsi
  3169 00001F1C 48FFC2                  	inc rdx
  3170 00001F1F EBEA                    	jmp .L_lambda_simple_env_loop_002b
  3171                                  .L_lambda_simple_env_end_002b:
  3172 00001F21 5B                      	pop rbx
  3173 00001F22 BE00000000              	mov rsi, 0
  3174                                  .L_lambda_simple_params_loop_002b:	; copy params
  3175 00001F27 4883FE01                	cmp rsi, 1
  3176 00001F2B 740E                    	je .L_lambda_simple_params_end_002b
  3177 00001F2D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3178 00001F32 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3179 00001F36 48FFC6                  	inc rsi
  3180 00001F39 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  3181                                  .L_lambda_simple_params_end_002b:
  3182 00001F3B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3183 00001F3E 4889C3                  	mov rbx, rax
  3184 00001F41 58                      	pop rax
  3185 00001F42 C60004                  	mov byte [rax], T_closure
  3186 00001F45 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3187 00001F49 48C74009[561F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  3188 00001F51 E951050000              	jmp .L_lambda_simple_end_002b
  3189                                  .L_lambda_simple_code_002b:	; lambda-simple body
  3190 00001F56 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3191 00001F5C 740B                    	je .L_lambda_simple_arity_check_ok_002b
  3192 00001F5E FF742410                	push qword [rsp + 8 * 2]
  3193 00001F62 6A01                    	push 1
  3194 00001F64 E937400000              	jmp L_error_incorrect_arity_simple
  3195                                  .L_lambda_simple_arity_check_ok_002b:
  3196 00001F69 C8000000                	enter 0, 0
  3197                                  	; preparing a tail-call
  3198 00001F6D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3199 00001F72 E870400000              	call malloc
  3200 00001F77 50                      	push rax
  3201 00001F78 BF08000000              	mov rdi, 8 * 1	; new rib
  3202 00001F7D E865400000              	call malloc
  3203 00001F82 50                      	push rax
  3204 00001F83 BF28000000              	mov rdi, 8 * 5	; extended env
  3205 00001F88 E85A400000              	call malloc
  3206 00001F8D 488B7D10                	mov rdi, ENV
  3207 00001F91 BE00000000              	mov rsi, 0
  3208 00001F96 BA01000000              	mov rdx, 1
  3209                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  3210 00001F9B 4883FE04                	cmp rsi, 4
  3211 00001F9F 7410                    	je .L_lambda_simple_env_end_002c
  3212 00001FA1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3213 00001FA5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3214 00001FA9 48FFC6                  	inc rsi
  3215 00001FAC 48FFC2                  	inc rdx
  3216 00001FAF EBEA                    	jmp .L_lambda_simple_env_loop_002c
  3217                                  .L_lambda_simple_env_end_002c:
  3218 00001FB1 5B                      	pop rbx
  3219 00001FB2 BE00000000              	mov rsi, 0
  3220                                  .L_lambda_simple_params_loop_002c:	; copy params
  3221 00001FB7 4883FE01                	cmp rsi, 1
  3222 00001FBB 740E                    	je .L_lambda_simple_params_end_002c
  3223 00001FBD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3224 00001FC2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3225 00001FC6 48FFC6                  	inc rsi
  3226 00001FC9 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  3227                                  .L_lambda_simple_params_end_002c:
  3228 00001FCB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3229 00001FCE 4889C3                  	mov rbx, rax
  3230 00001FD1 58                      	pop rax
  3231 00001FD2 C60004                  	mov byte [rax], T_closure
  3232 00001FD5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3233 00001FD9 48C74009[E61F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  3234 00001FE1 E9B0000000              	jmp .L_lambda_simple_end_002c
  3235                                  .L_lambda_simple_code_002c:	; lambda-simple body
  3236 00001FE6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3237 00001FEC 740B                    	je .L_lambda_simple_arity_check_ok_002c
  3238 00001FEE FF742410                	push qword [rsp + 8 * 2]
  3239 00001FF2 6A01                    	push 1
  3240 00001FF4 E9A73F0000              	jmp L_error_incorrect_arity_simple
  3241                                  .L_lambda_simple_arity_check_ok_002c:
  3242 00001FF9 C8000000                	enter 0, 0
  3243 00001FFD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3244 00002002 E8E03F0000              	call malloc
  3245 00002007 50                      	push rax
  3246 00002008 BF08000000              	mov rdi, 8 * 1	; new rib
  3247 0000200D E8D53F0000              	call malloc
  3248 00002012 50                      	push rax
  3249 00002013 BF30000000              	mov rdi, 8 * 6	; extended env
  3250 00002018 E8CA3F0000              	call malloc
  3251 0000201D 488B7D10                	mov rdi, ENV
  3252 00002021 BE00000000              	mov rsi, 0
  3253 00002026 BA01000000              	mov rdx, 1
  3254                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  3255 0000202B 4883FE05                	cmp rsi, 5
  3256 0000202F 7410                    	je .L_lambda_simple_env_end_002d
  3257 00002031 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3258 00002035 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3259 00002039 48FFC6                  	inc rsi
  3260 0000203C 48FFC2                  	inc rdx
  3261 0000203F EBEA                    	jmp .L_lambda_simple_env_loop_002d
  3262                                  .L_lambda_simple_env_end_002d:
  3263 00002041 5B                      	pop rbx
  3264 00002042 BE00000000              	mov rsi, 0
  3265                                  .L_lambda_simple_params_loop_002d:	; copy params
  3266 00002047 4883FE01                	cmp rsi, 1
  3267 0000204B 740E                    	je .L_lambda_simple_params_end_002d
  3268 0000204D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3269 00002052 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3270 00002056 48FFC6                  	inc rsi
  3271 00002059 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  3272                                  .L_lambda_simple_params_end_002d:
  3273 0000205B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3274 0000205E 4889C3                  	mov rbx, rax
  3275 00002061 58                      	pop rax
  3276 00002062 C60004                  	mov byte [rax], T_closure
  3277 00002065 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3278 00002069 48C74009[73200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  3279 00002071 EB1F                    	jmp .L_lambda_simple_end_002d
  3280                                  .L_lambda_simple_code_002d:	; lambda-simple body
  3281 00002073 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3282 00002079 740B                    	je .L_lambda_simple_arity_check_ok_002d
  3283 0000207B FF742410                	push qword [rsp + 8 * 2]
  3284 0000207F 6A01                    	push 1
  3285 00002081 E91A3F0000              	jmp L_error_incorrect_arity_simple
  3286                                  .L_lambda_simple_arity_check_ok_002d:
  3287 00002086 C8000000                	enter 0, 0
  3288 0000208A 488B4520                	mov rax, PARAM(0)	; param y
  3289 0000208E C9                      	leave
  3290 0000208F C21800                  	ret AND_KILL_FRAME(1)
  3291                                  .L_lambda_simple_end_002d:	; new closure is in rax
  3292 00002092 C9                      	leave
  3293 00002093 C21800                  	ret AND_KILL_FRAME(1)
  3294                                  .L_lambda_simple_end_002c:	; new closure is in rax
  3295 00002096 50                      	push rax
  3296 00002097 6A01                    	push 1	; arg count
  3297                                  	; preparing a non-tail-call
  3298                                  	; preparing a non-tail-call
  3299 00002099 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3300 0000209E E8443F0000              	call malloc
  3301 000020A3 50                      	push rax
  3302 000020A4 BF08000000              	mov rdi, 8 * 1	; new rib
  3303 000020A9 E8393F0000              	call malloc
  3304 000020AE 50                      	push rax
  3305 000020AF BF28000000              	mov rdi, 8 * 5	; extended env
  3306 000020B4 E82E3F0000              	call malloc
  3307 000020B9 488B7D10                	mov rdi, ENV
  3308 000020BD BE00000000              	mov rsi, 0
  3309 000020C2 BA01000000              	mov rdx, 1
  3310                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  3311 000020C7 4883FE04                	cmp rsi, 4
  3312 000020CB 7410                    	je .L_lambda_simple_env_end_002e
  3313 000020CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3314 000020D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3315 000020D5 48FFC6                  	inc rsi
  3316 000020D8 48FFC2                  	inc rdx
  3317 000020DB EBEA                    	jmp .L_lambda_simple_env_loop_002e
  3318                                  .L_lambda_simple_env_end_002e:
  3319 000020DD 5B                      	pop rbx
  3320 000020DE BE00000000              	mov rsi, 0
  3321                                  .L_lambda_simple_params_loop_002e:	; copy params
  3322 000020E3 4883FE01                	cmp rsi, 1
  3323 000020E7 740E                    	je .L_lambda_simple_params_end_002e
  3324 000020E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3325 000020EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3326 000020F2 48FFC6                  	inc rsi
  3327 000020F5 EBEC                    	jmp .L_lambda_simple_params_loop_002e
  3328                                  .L_lambda_simple_params_end_002e:
  3329 000020F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3330 000020FA 4889C3                  	mov rbx, rax
  3331 000020FD 58                      	pop rax
  3332 000020FE C60004                  	mov byte [rax], T_closure
  3333 00002101 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3334 00002105 48C74009[12210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  3335 0000210D E932030000              	jmp .L_lambda_simple_end_002e
  3336                                  .L_lambda_simple_code_002e:	; lambda-simple body
  3337 00002112 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3338 00002118 740B                    	je .L_lambda_simple_arity_check_ok_002e
  3339 0000211A FF742410                	push qword [rsp + 8 * 2]
  3340 0000211E 6A01                    	push 1
  3341 00002120 E97B3E0000              	jmp L_error_incorrect_arity_simple
  3342                                  .L_lambda_simple_arity_check_ok_002e:
  3343 00002125 C8000000                	enter 0, 0
  3344 00002129 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3345 0000212E E8B43E0000              	call malloc
  3346 00002133 50                      	push rax
  3347 00002134 BF08000000              	mov rdi, 8 * 1	; new rib
  3348 00002139 E8A93E0000              	call malloc
  3349 0000213E 50                      	push rax
  3350 0000213F BF30000000              	mov rdi, 8 * 6	; extended env
  3351 00002144 E89E3E0000              	call malloc
  3352 00002149 488B7D10                	mov rdi, ENV
  3353 0000214D BE00000000              	mov rsi, 0
  3354 00002152 BA01000000              	mov rdx, 1
  3355                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  3356 00002157 4883FE05                	cmp rsi, 5
  3357 0000215B 7410                    	je .L_lambda_simple_env_end_002f
  3358 0000215D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3359 00002161 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3360 00002165 48FFC6                  	inc rsi
  3361 00002168 48FFC2                  	inc rdx
  3362 0000216B EBEA                    	jmp .L_lambda_simple_env_loop_002f
  3363                                  .L_lambda_simple_env_end_002f:
  3364 0000216D 5B                      	pop rbx
  3365 0000216E BE00000000              	mov rsi, 0
  3366                                  .L_lambda_simple_params_loop_002f:	; copy params
  3367 00002173 4883FE01                	cmp rsi, 1
  3368 00002177 740E                    	je .L_lambda_simple_params_end_002f
  3369 00002179 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3370 0000217E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3371 00002182 48FFC6                  	inc rsi
  3372 00002185 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  3373                                  .L_lambda_simple_params_end_002f:
  3374 00002187 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3375 0000218A 4889C3                  	mov rbx, rax
  3376 0000218D 58                      	pop rax
  3377 0000218E C60004                  	mov byte [rax], T_closure
  3378 00002191 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3379 00002195 48C74009[A2210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  3380 0000219D E99E020000              	jmp .L_lambda_simple_end_002f
  3381                                  .L_lambda_simple_code_002f:	; lambda-simple body
  3382 000021A2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3383 000021A8 740B                    	je .L_lambda_simple_arity_check_ok_002f
  3384 000021AA FF742410                	push qword [rsp + 8 * 2]
  3385 000021AE 6A01                    	push 1
  3386 000021B0 E9EB3D0000              	jmp L_error_incorrect_arity_simple
  3387                                  .L_lambda_simple_arity_check_ok_002f:
  3388 000021B5 C8000000                	enter 0, 0
  3389                                  	; preparing a tail-call
  3390 000021B9 488B4520                	mov rax, PARAM(0)	; param b
  3391 000021BD 50                      	push rax
  3392 000021BE 6A01                    	push 1	; arg count
  3393                                  	; preparing a non-tail-call
  3394 000021C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3395 000021C5 E81D3E0000              	call malloc
  3396 000021CA 50                      	push rax
  3397 000021CB BF08000000              	mov rdi, 8 * 1	; new rib
  3398 000021D0 E8123E0000              	call malloc
  3399 000021D5 50                      	push rax
  3400 000021D6 BF38000000              	mov rdi, 8 * 7	; extended env
  3401 000021DB E8073E0000              	call malloc
  3402 000021E0 488B7D10                	mov rdi, ENV
  3403 000021E4 BE00000000              	mov rsi, 0
  3404 000021E9 BA01000000              	mov rdx, 1
  3405                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  3406 000021EE 4883FE06                	cmp rsi, 6
  3407 000021F2 7410                    	je .L_lambda_simple_env_end_0030
  3408 000021F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3409 000021F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3410 000021FC 48FFC6                  	inc rsi
  3411 000021FF 48FFC2                  	inc rdx
  3412 00002202 EBEA                    	jmp .L_lambda_simple_env_loop_0030
  3413                                  .L_lambda_simple_env_end_0030:
  3414 00002204 5B                      	pop rbx
  3415 00002205 BE00000000              	mov rsi, 0
  3416                                  .L_lambda_simple_params_loop_0030:	; copy params
  3417 0000220A 4883FE01                	cmp rsi, 1
  3418 0000220E 740E                    	je .L_lambda_simple_params_end_0030
  3419 00002210 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3420 00002215 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3421 00002219 48FFC6                  	inc rsi
  3422 0000221C EBEC                    	jmp .L_lambda_simple_params_loop_0030
  3423                                  .L_lambda_simple_params_end_0030:
  3424 0000221E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3425 00002221 4889C3                  	mov rbx, rax
  3426 00002224 58                      	pop rax
  3427 00002225 C60004                  	mov byte [rax], T_closure
  3428 00002228 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3429 0000222C 48C74009[39220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  3430 00002234 E9BA010000              	jmp .L_lambda_simple_end_0030
  3431                                  .L_lambda_simple_code_0030:	; lambda-simple body
  3432 00002239 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3433 0000223F 740B                    	je .L_lambda_simple_arity_check_ok_0030
  3434 00002241 FF742410                	push qword [rsp + 8 * 2]
  3435 00002245 6A01                    	push 1
  3436 00002247 E9543D0000              	jmp L_error_incorrect_arity_simple
  3437                                  .L_lambda_simple_arity_check_ok_0030:
  3438 0000224C C8000000                	enter 0, 0
  3439 00002250 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3440 00002255 E88D3D0000              	call malloc
  3441 0000225A 50                      	push rax
  3442 0000225B BF08000000              	mov rdi, 8 * 1	; new rib
  3443 00002260 E8823D0000              	call malloc
  3444 00002265 50                      	push rax
  3445 00002266 BF40000000              	mov rdi, 8 * 8	; extended env
  3446 0000226B E8773D0000              	call malloc
  3447 00002270 488B7D10                	mov rdi, ENV
  3448 00002274 BE00000000              	mov rsi, 0
  3449 00002279 BA01000000              	mov rdx, 1
  3450                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  3451 0000227E 4883FE07                	cmp rsi, 7
  3452 00002282 7410                    	je .L_lambda_simple_env_end_0031
  3453 00002284 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3454 00002288 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3455 0000228C 48FFC6                  	inc rsi
  3456 0000228F 48FFC2                  	inc rdx
  3457 00002292 EBEA                    	jmp .L_lambda_simple_env_loop_0031
  3458                                  .L_lambda_simple_env_end_0031:
  3459 00002294 5B                      	pop rbx
  3460 00002295 BE00000000              	mov rsi, 0
  3461                                  .L_lambda_simple_params_loop_0031:	; copy params
  3462 0000229A 4883FE01                	cmp rsi, 1
  3463 0000229E 740E                    	je .L_lambda_simple_params_end_0031
  3464 000022A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3465 000022A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3466 000022A9 48FFC6                  	inc rsi
  3467 000022AC EBEC                    	jmp .L_lambda_simple_params_loop_0031
  3468                                  .L_lambda_simple_params_end_0031:
  3469 000022AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3470 000022B1 4889C3                  	mov rbx, rax
  3471 000022B4 58                      	pop rax
  3472 000022B5 C60004                  	mov byte [rax], T_closure
  3473 000022B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3474 000022BC 48C74009[C9220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  3475 000022C4 E926010000              	jmp .L_lambda_simple_end_0031
  3476                                  .L_lambda_simple_code_0031:	; lambda-simple body
  3477 000022C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3478 000022CF 740B                    	je .L_lambda_simple_arity_check_ok_0031
  3479 000022D1 FF742410                	push qword [rsp + 8 * 2]
  3480 000022D5 6A01                    	push 1
  3481 000022D7 E9C43C0000              	jmp L_error_incorrect_arity_simple
  3482                                  .L_lambda_simple_arity_check_ok_0031:
  3483 000022DC C8000000                	enter 0, 0
  3484 000022E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3485 000022E5 E8FD3C0000              	call malloc
  3486 000022EA 50                      	push rax
  3487 000022EB BF08000000              	mov rdi, 8 * 1	; new rib
  3488 000022F0 E8F23C0000              	call malloc
  3489 000022F5 50                      	push rax
  3490 000022F6 BF48000000              	mov rdi, 8 * 9	; extended env
  3491 000022FB E8E73C0000              	call malloc
  3492 00002300 488B7D10                	mov rdi, ENV
  3493 00002304 BE00000000              	mov rsi, 0
  3494 00002309 BA01000000              	mov rdx, 1
  3495                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  3496 0000230E 4883FE08                	cmp rsi, 8
  3497 00002312 7410                    	je .L_lambda_simple_env_end_0032
  3498 00002314 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3499 00002318 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3500 0000231C 48FFC6                  	inc rsi
  3501 0000231F 48FFC2                  	inc rdx
  3502 00002322 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  3503                                  .L_lambda_simple_env_end_0032:
  3504 00002324 5B                      	pop rbx
  3505 00002325 BE00000000              	mov rsi, 0
  3506                                  .L_lambda_simple_params_loop_0032:	; copy params
  3507 0000232A 4883FE01                	cmp rsi, 1
  3508 0000232E 740E                    	je .L_lambda_simple_params_end_0032
  3509 00002330 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3510 00002335 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3511 00002339 48FFC6                  	inc rsi
  3512 0000233C EBEC                    	jmp .L_lambda_simple_params_loop_0032
  3513                                  .L_lambda_simple_params_end_0032:
  3514 0000233E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3515 00002341 4889C3                  	mov rbx, rax
  3516 00002344 58                      	pop rax
  3517 00002345 C60004                  	mov byte [rax], T_closure
  3518 00002348 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3519 0000234C 48C74009[59230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  3520 00002354 E992000000              	jmp .L_lambda_simple_end_0032
  3521                                  .L_lambda_simple_code_0032:	; lambda-simple body
  3522 00002359 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3523 0000235F 740B                    	je .L_lambda_simple_arity_check_ok_0032
  3524 00002361 FF742410                	push qword [rsp + 8 * 2]
  3525 00002365 6A01                    	push 1
  3526 00002367 E9343C0000              	jmp L_error_incorrect_arity_simple
  3527                                  .L_lambda_simple_arity_check_ok_0032:
  3528 0000236C C8000000                	enter 0, 0
  3529                                  	; preparing a tail-call
  3530                                  	; preparing a non-tail-call
  3531 00002370 488B4520                	mov rax, PARAM(0)	; param z
  3532 00002374 50                      	push rax
  3533 00002375 6A01                    	push 1	; arg count
  3534                                  	; preparing a non-tail-call
  3535 00002377 488B4510                	mov rax, ENV
  3536 0000237B 488B00                  	mov rax, qword [rax + 8 * 0]
  3537 0000237E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  3538 00002381 50                      	push rax
  3539 00002382 6A01                    	push 1	; arg count
  3540 00002384 488B4510                	mov rax, ENV
  3541 00002388 488B4008                	mov rax, qword [rax + 8 * 1]
  3542 0000238C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  3543 0000238F 803804                  	cmp byte [rax], T_closure
  3544 00002392 0F85A63B0000            	jne L_error_non_closure
  3545 00002398 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3546 0000239B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3547 0000239E 803804                  	cmp byte [rax], T_closure
  3548 000023A1 0F85973B0000            	jne L_error_non_closure
  3549 000023A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3550 000023AA FF5009                  	call SOB_CLOSURE_CODE(rax)
  3551 000023AD 50                      	push rax
  3552 000023AE 6A01                    	push 1	; arg count
  3553 000023B0 488B4510                	mov rax, ENV
  3554 000023B4 488B00                  	mov rax, qword [rax + 8 * 0]
  3555 000023B7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  3556 000023BA 803804                  	cmp byte [rax], T_closure
  3557 000023BD 0F857B3B0000            	jne L_error_non_closure
  3558 000023C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3559 000023C6 FF7508                  	push qword [rbp + 8 * 1]
  3560                                   ; old ret addr	pop rbp
  3561                                  ; restore the old rbp	mov rbx, 1
  3562 000023C9 4883C303                	add rbx, 3
  3563                                  	mov rdi, dword [rbp + 8*2]
  3563          ******************       error: mismatch in operand sizes
  3564                                  .L_tc_recycle_frame_loop_0013:
  3565 000023CD 4883FB00                	cmp rbx, 0
  3566 000023D1 7411                    je .L_tc_recycle_frame_done_0013
  3567 000023D3 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3568 000023D7 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3569 000023DC 48FFCF                  	dec rdi
  3570 000023DF 48FFCB                  	dec rbx
  3571 000023E2 EBE9                    jmp .L_tc_recycle_frame_loop_0013
  3572                                  .L_tc_recycle_frame_done_0013:
  3573 000023E4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3574 000023E7 C9                      	leave
  3575 000023E8 C21800                  	ret AND_KILL_FRAME(1)
  3576                                  .L_lambda_simple_end_0032:	; new closure is in rax
  3577 000023EB C9                      	leave
  3578 000023EC C21800                  	ret AND_KILL_FRAME(1)
  3579                                  .L_lambda_simple_end_0031:	; new closure is in rax
  3580 000023EF C9                      	leave
  3581 000023F0 C21800                  	ret AND_KILL_FRAME(1)
  3582                                  .L_lambda_simple_end_0030:	; new closure is in rax
  3583 000023F3 50                      	push rax
  3584 000023F4 6A01                    	push 1	; arg count
  3585 000023F6 488B4510                	mov rax, ENV
  3586 000023FA 488B00                  	mov rax, qword [rax + 8 * 0]
  3587 000023FD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3588 00002400 803804                  	cmp byte [rax], T_closure
  3589 00002403 0F85353B0000            	jne L_error_non_closure
  3590 00002409 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3591 0000240C FF5009                  	call SOB_CLOSURE_CODE(rax)
  3592 0000240F 803804                  	cmp byte [rax], T_closure
  3593 00002412 0F85263B0000            	jne L_error_non_closure
  3594 00002418 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3595 0000241B FF7508                  	push qword [rbp + 8 * 1]
  3596                                   ; old ret addr	pop rbp
  3597                                  ; restore the old rbp	mov rbx, 1
  3598 0000241E 4883C303                	add rbx, 3
  3599                                  	mov rdi, dword [rbp + 8*2]
  3599          ******************       error: mismatch in operand sizes
  3600                                  .L_tc_recycle_frame_loop_0012:
  3601 00002422 4883FB00                	cmp rbx, 0
  3602 00002426 7411                    je .L_tc_recycle_frame_done_0012
  3603 00002428 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3604 0000242C 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3605 00002431 48FFCF                  	dec rdi
  3606 00002434 48FFCB                  	dec rbx
  3607 00002437 EBE9                    jmp .L_tc_recycle_frame_loop_0012
  3608                                  .L_tc_recycle_frame_done_0012:
  3609 00002439 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3610 0000243C C9                      	leave
  3611 0000243D C21800                  	ret AND_KILL_FRAME(1)
  3612                                  .L_lambda_simple_end_002f:	; new closure is in rax
  3613 00002440 C9                      	leave
  3614 00002441 C21800                  	ret AND_KILL_FRAME(1)
  3615                                  .L_lambda_simple_end_002e:	; new closure is in rax
  3616 00002444 50                      	push rax
  3617 00002445 6A01                    	push 1	; arg count
  3618 00002447 488B4510                	mov rax, ENV
  3619 0000244B 488B00                  	mov rax, qword [rax + 8 * 0]
  3620 0000244E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3621 00002451 803804                  	cmp byte [rax], T_closure
  3622 00002454 0F85E43A0000            	jne L_error_non_closure
  3623 0000245A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3624 0000245D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3625 00002460 50                      	push rax
  3626 00002461 6A01                    	push 1	; arg count
  3627 00002463 488B4520                	mov rax, PARAM(0)	; param b
  3628 00002467 803804                  	cmp byte [rax], T_closure
  3629 0000246A 0F85CE3A0000            	jne L_error_non_closure
  3630 00002470 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3631 00002473 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3632 00002476 803804                  	cmp byte [rax], T_closure
  3633 00002479 0F85BF3A0000            	jne L_error_non_closure
  3634 0000247F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3635 00002482 FF7508                  	push qword [rbp + 8 * 1]
  3636                                   ; old ret addr	pop rbp
  3637                                  ; restore the old rbp	mov rbx, 1
  3638 00002485 4883C303                	add rbx, 3
  3639                                  	mov rdi, dword [rbp + 8*2]
  3639          ******************       error: mismatch in operand sizes
  3640                                  .L_tc_recycle_frame_loop_0011:
  3641 00002489 4883FB00                	cmp rbx, 0
  3642 0000248D 7411                    je .L_tc_recycle_frame_done_0011
  3643 0000248F 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3644 00002493 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3645 00002498 48FFCF                  	dec rdi
  3646 0000249B 48FFCB                  	dec rbx
  3647 0000249E EBE9                    jmp .L_tc_recycle_frame_loop_0011
  3648                                  .L_tc_recycle_frame_done_0011:
  3649 000024A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3650 000024A3 C9                      	leave
  3651 000024A4 C21800                  	ret AND_KILL_FRAME(1)
  3652                                  .L_lambda_simple_end_002b:	; new closure is in rax
  3653 000024A7 C9                      	leave
  3654 000024A8 C21800                  	ret AND_KILL_FRAME(1)
  3655                                  .L_lambda_simple_end_002a:	; new closure is in rax
  3656 000024AB 803804                  	cmp byte [rax], T_closure
  3657 000024AE 0F858A3A0000            	jne L_error_non_closure
  3658 000024B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3659 000024B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3660 000024BA 803804                  	cmp byte [rax], T_closure
  3661 000024BD 0F857B3A0000            	jne L_error_non_closure
  3662 000024C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3663 000024C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3664 000024C9 50                      	push rax
  3665 000024CA 6A01                    	push 1	; arg count
  3666                                  	; preparing a non-tail-call
  3667                                  	; preparing a non-tail-call
  3668                                  	; preparing a non-tail-call
  3669 000024CC 488B4520                	mov rax, PARAM(0)	; param p
  3670 000024D0 50                      	push rax
  3671 000024D1 6A01                    	push 1	; arg count
  3672 000024D3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3673 000024D8 E80A3B0000              	call malloc
  3674 000024DD 50                      	push rax
  3675 000024DE BF08000000              	mov rdi, 8 * 1	; new rib
  3676 000024E3 E8FF3A0000              	call malloc
  3677 000024E8 50                      	push rax
  3678 000024E9 BF18000000              	mov rdi, 8 * 3	; extended env
  3679 000024EE E8F43A0000              	call malloc
  3680 000024F3 488B7D10                	mov rdi, ENV
  3681 000024F7 BE00000000              	mov rsi, 0
  3682 000024FC BA01000000              	mov rdx, 1
  3683                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  3684 00002501 4883FE02                	cmp rsi, 2
  3685 00002505 7410                    	je .L_lambda_simple_env_end_0033
  3686 00002507 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3687 0000250B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3688 0000250F 48FFC6                  	inc rsi
  3689 00002512 48FFC2                  	inc rdx
  3690 00002515 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  3691                                  .L_lambda_simple_env_end_0033:
  3692 00002517 5B                      	pop rbx
  3693 00002518 BE00000000              	mov rsi, 0
  3694                                  .L_lambda_simple_params_loop_0033:	; copy params
  3695 0000251D 4883FE01                	cmp rsi, 1
  3696 00002521 740E                    	je .L_lambda_simple_params_end_0033
  3697 00002523 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3698 00002528 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3699 0000252C 48FFC6                  	inc rsi
  3700 0000252F EBEC                    	jmp .L_lambda_simple_params_loop_0033
  3701                                  .L_lambda_simple_params_end_0033:
  3702 00002531 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3703 00002534 4889C3                  	mov rbx, rax
  3704 00002537 58                      	pop rax
  3705 00002538 C60004                  	mov byte [rax], T_closure
  3706 0000253B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3707 0000253F 48C74009[4C250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  3708 00002547 E97E010000              	jmp .L_lambda_simple_end_0033
  3709                                  .L_lambda_simple_code_0033:	; lambda-simple body
  3710 0000254C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3711 00002552 740B                    	je .L_lambda_simple_arity_check_ok_0033
  3712 00002554 FF742410                	push qword [rsp + 8 * 2]
  3713 00002558 6A01                    	push 1
  3714 0000255A E9413A0000              	jmp L_error_incorrect_arity_simple
  3715                                  .L_lambda_simple_arity_check_ok_0033:
  3716 0000255F C8000000                	enter 0, 0
  3717                                  	; preparing a tail-call
  3718 00002563 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3719 00002568 E87A3A0000              	call malloc
  3720 0000256D 50                      	push rax
  3721 0000256E BF08000000              	mov rdi, 8 * 1	; new rib
  3722 00002573 E86F3A0000              	call malloc
  3723 00002578 50                      	push rax
  3724 00002579 BF20000000              	mov rdi, 8 * 4	; extended env
  3725 0000257E E8643A0000              	call malloc
  3726 00002583 488B7D10                	mov rdi, ENV
  3727 00002587 BE00000000              	mov rsi, 0
  3728 0000258C BA01000000              	mov rdx, 1
  3729                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  3730 00002591 4883FE03                	cmp rsi, 3
  3731 00002595 7410                    	je .L_lambda_simple_env_end_0034
  3732 00002597 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3733 0000259B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3734 0000259F 48FFC6                  	inc rsi
  3735 000025A2 48FFC2                  	inc rdx
  3736 000025A5 EBEA                    	jmp .L_lambda_simple_env_loop_0034
  3737                                  .L_lambda_simple_env_end_0034:
  3738 000025A7 5B                      	pop rbx
  3739 000025A8 BE00000000              	mov rsi, 0
  3740                                  .L_lambda_simple_params_loop_0034:	; copy params
  3741 000025AD 4883FE01                	cmp rsi, 1
  3742 000025B1 740E                    	je .L_lambda_simple_params_end_0034
  3743 000025B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3744 000025B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3745 000025BC 48FFC6                  	inc rsi
  3746 000025BF EBEC                    	jmp .L_lambda_simple_params_loop_0034
  3747                                  .L_lambda_simple_params_end_0034:
  3748 000025C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3749 000025C4 4889C3                  	mov rbx, rax
  3750 000025C7 58                      	pop rax
  3751 000025C8 C60004                  	mov byte [rax], T_closure
  3752 000025CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3753 000025CF 48C74009[DC250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  3754 000025D7 E9B6000000              	jmp .L_lambda_simple_end_0034
  3755                                  .L_lambda_simple_code_0034:	; lambda-simple body
  3756 000025DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3757 000025E2 740B                    	je .L_lambda_simple_arity_check_ok_0034
  3758 000025E4 FF742410                	push qword [rsp + 8 * 2]
  3759 000025E8 6A01                    	push 1
  3760 000025EA E9B1390000              	jmp L_error_incorrect_arity_simple
  3761                                  .L_lambda_simple_arity_check_ok_0034:
  3762 000025EF C8000000                	enter 0, 0
  3763 000025F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3764 000025F8 E8EA390000              	call malloc
  3765 000025FD 50                      	push rax
  3766 000025FE BF08000000              	mov rdi, 8 * 1	; new rib
  3767 00002603 E8DF390000              	call malloc
  3768 00002608 50                      	push rax
  3769 00002609 BF28000000              	mov rdi, 8 * 5	; extended env
  3770 0000260E E8D4390000              	call malloc
  3771 00002613 488B7D10                	mov rdi, ENV
  3772 00002617 BE00000000              	mov rsi, 0
  3773 0000261C BA01000000              	mov rdx, 1
  3774                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  3775 00002621 4883FE04                	cmp rsi, 4
  3776 00002625 7410                    	je .L_lambda_simple_env_end_0035
  3777 00002627 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3778 0000262B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3779 0000262F 48FFC6                  	inc rsi
  3780 00002632 48FFC2                  	inc rdx
  3781 00002635 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  3782                                  .L_lambda_simple_env_end_0035:
  3783 00002637 5B                      	pop rbx
  3784 00002638 BE00000000              	mov rsi, 0
  3785                                  .L_lambda_simple_params_loop_0035:	; copy params
  3786 0000263D 4883FE01                	cmp rsi, 1
  3787 00002641 740E                    	je .L_lambda_simple_params_end_0035
  3788 00002643 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3789 00002648 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3790 0000264C 48FFC6                  	inc rsi
  3791 0000264F EBEC                    	jmp .L_lambda_simple_params_loop_0035
  3792                                  .L_lambda_simple_params_end_0035:
  3793 00002651 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3794 00002654 4889C3                  	mov rbx, rax
  3795 00002657 58                      	pop rax
  3796 00002658 C60004                  	mov byte [rax], T_closure
  3797 0000265B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3798 0000265F 48C74009[69260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  3799 00002667 EB25                    	jmp .L_lambda_simple_end_0035
  3800                                  .L_lambda_simple_code_0035:	; lambda-simple body
  3801 00002669 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3802 0000266F 740B                    	je .L_lambda_simple_arity_check_ok_0035
  3803 00002671 FF742410                	push qword [rsp + 8 * 2]
  3804 00002675 6A01                    	push 1
  3805 00002677 E924390000              	jmp L_error_incorrect_arity_simple
  3806                                  .L_lambda_simple_arity_check_ok_0035:
  3807 0000267C C8000000                	enter 0, 0
  3808 00002680 488B4510                	mov rax, ENV
  3809 00002684 488B00                  	mov rax, qword [rax + 8 * 0]
  3810 00002687 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3811 0000268A C9                      	leave
  3812 0000268B C21800                  	ret AND_KILL_FRAME(1)
  3813                                  .L_lambda_simple_end_0035:	; new closure is in rax
  3814 0000268E C9                      	leave
  3815 0000268F C21800                  	ret AND_KILL_FRAME(1)
  3816                                  .L_lambda_simple_end_0034:	; new closure is in rax
  3817 00002692 50                      	push rax
  3818 00002693 6A01                    	push 1	; arg count
  3819 00002695 488B4520                	mov rax, PARAM(0)	; param p
  3820 00002699 803804                  	cmp byte [rax], T_closure
  3821 0000269C 0F859C380000            	jne L_error_non_closure
  3822 000026A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3823 000026A5 FF7508                  	push qword [rbp + 8 * 1]
  3824                                   ; old ret addr	pop rbp
  3825                                  ; restore the old rbp	mov rbx, 1
  3826 000026A8 4883C303                	add rbx, 3
  3827                                  	mov rdi, dword [rbp + 8*2]
  3827          ******************       error: mismatch in operand sizes
  3828                                  .L_tc_recycle_frame_loop_0014:
  3829 000026AC 4883FB00                	cmp rbx, 0
  3830 000026B0 7411                    je .L_tc_recycle_frame_done_0014
  3831 000026B2 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3832 000026B6 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3833 000026BB 48FFCF                  	dec rdi
  3834 000026BE 48FFCB                  	dec rbx
  3835 000026C1 EBE9                    jmp .L_tc_recycle_frame_loop_0014
  3836                                  .L_tc_recycle_frame_done_0014:
  3837 000026C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3838 000026C6 C9                      	leave
  3839 000026C7 C21800                  	ret AND_KILL_FRAME(1)
  3840                                  .L_lambda_simple_end_0033:	; new closure is in rax
  3841 000026CA 803804                  	cmp byte [rax], T_closure
  3842 000026CD 0F856B380000            	jne L_error_non_closure
  3843 000026D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3844 000026D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3845 000026D9 50                      	push rax
  3846 000026DA 6A01                    	push 1	; arg count
  3847 000026DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3848 000026E1 E801390000              	call malloc
  3849 000026E6 50                      	push rax
  3850 000026E7 BF08000000              	mov rdi, 8 * 1	; new rib
  3851 000026EC E8F6380000              	call malloc
  3852 000026F1 50                      	push rax
  3853 000026F2 BF18000000              	mov rdi, 8 * 3	; extended env
  3854 000026F7 E8EB380000              	call malloc
  3855 000026FC 488B7D10                	mov rdi, ENV
  3856 00002700 BE00000000              	mov rsi, 0
  3857 00002705 BA01000000              	mov rdx, 1
  3858                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  3859 0000270A 4883FE02                	cmp rsi, 2
  3860 0000270E 7410                    	je .L_lambda_simple_env_end_0036
  3861 00002710 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3862 00002714 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3863 00002718 48FFC6                  	inc rsi
  3864 0000271B 48FFC2                  	inc rdx
  3865 0000271E EBEA                    	jmp .L_lambda_simple_env_loop_0036
  3866                                  .L_lambda_simple_env_end_0036:
  3867 00002720 5B                      	pop rbx
  3868 00002721 BE00000000              	mov rsi, 0
  3869                                  .L_lambda_simple_params_loop_0036:	; copy params
  3870 00002726 4883FE01                	cmp rsi, 1
  3871 0000272A 740E                    	je .L_lambda_simple_params_end_0036
  3872 0000272C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3873 00002731 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3874 00002735 48FFC6                  	inc rsi
  3875 00002738 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  3876                                  .L_lambda_simple_params_end_0036:
  3877 0000273A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3878 0000273D 4889C3                  	mov rbx, rax
  3879 00002740 58                      	pop rax
  3880 00002741 C60004                  	mov byte [rax], T_closure
  3881 00002744 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3882 00002748 48C74009[55270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  3883 00002750 E9BA010000              	jmp .L_lambda_simple_end_0036
  3884                                  .L_lambda_simple_code_0036:	; lambda-simple body
  3885 00002755 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3886 0000275B 740B                    	je .L_lambda_simple_arity_check_ok_0036
  3887 0000275D FF742410                	push qword [rsp + 8 * 2]
  3888 00002761 6A01                    	push 1
  3889 00002763 E938380000              	jmp L_error_incorrect_arity_simple
  3890                                  .L_lambda_simple_arity_check_ok_0036:
  3891 00002768 C8000000                	enter 0, 0
  3892 0000276C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3893 00002771 E871380000              	call malloc
  3894 00002776 50                      	push rax
  3895 00002777 BF08000000              	mov rdi, 8 * 1	; new rib
  3896 0000277C E866380000              	call malloc
  3897 00002781 50                      	push rax
  3898 00002782 BF20000000              	mov rdi, 8 * 4	; extended env
  3899 00002787 E85B380000              	call malloc
  3900 0000278C 488B7D10                	mov rdi, ENV
  3901 00002790 BE00000000              	mov rsi, 0
  3902 00002795 BA01000000              	mov rdx, 1
  3903                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  3904 0000279A 4883FE03                	cmp rsi, 3
  3905 0000279E 7410                    	je .L_lambda_simple_env_end_0037
  3906 000027A0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3907 000027A4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3908 000027A8 48FFC6                  	inc rsi
  3909 000027AB 48FFC2                  	inc rdx
  3910 000027AE EBEA                    	jmp .L_lambda_simple_env_loop_0037
  3911                                  .L_lambda_simple_env_end_0037:
  3912 000027B0 5B                      	pop rbx
  3913 000027B1 BE00000000              	mov rsi, 0
  3914                                  .L_lambda_simple_params_loop_0037:	; copy params
  3915 000027B6 4883FE01                	cmp rsi, 1
  3916 000027BA 740E                    	je .L_lambda_simple_params_end_0037
  3917 000027BC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3918 000027C1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3919 000027C5 48FFC6                  	inc rsi
  3920 000027C8 EBEC                    	jmp .L_lambda_simple_params_loop_0037
  3921                                  .L_lambda_simple_params_end_0037:
  3922 000027CA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3923 000027CD 4889C3                  	mov rbx, rax
  3924 000027D0 58                      	pop rax
  3925 000027D1 C60004                  	mov byte [rax], T_closure
  3926 000027D4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3927 000027D8 48C74009[E5270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  3928 000027E0 E926010000              	jmp .L_lambda_simple_end_0037
  3929                                  .L_lambda_simple_code_0037:	; lambda-simple body
  3930 000027E5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3931 000027EB 740B                    	je .L_lambda_simple_arity_check_ok_0037
  3932 000027ED FF742410                	push qword [rsp + 8 * 2]
  3933 000027F1 6A01                    	push 1
  3934 000027F3 E9A8370000              	jmp L_error_incorrect_arity_simple
  3935                                  .L_lambda_simple_arity_check_ok_0037:
  3936 000027F8 C8000000                	enter 0, 0
  3937 000027FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3938 00002801 E8E1370000              	call malloc
  3939 00002806 50                      	push rax
  3940 00002807 BF08000000              	mov rdi, 8 * 1	; new rib
  3941 0000280C E8D6370000              	call malloc
  3942 00002811 50                      	push rax
  3943 00002812 BF28000000              	mov rdi, 8 * 5	; extended env
  3944 00002817 E8CB370000              	call malloc
  3945 0000281C 488B7D10                	mov rdi, ENV
  3946 00002820 BE00000000              	mov rsi, 0
  3947 00002825 BA01000000              	mov rdx, 1
  3948                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  3949 0000282A 4883FE04                	cmp rsi, 4
  3950 0000282E 7410                    	je .L_lambda_simple_env_end_0038
  3951 00002830 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3952 00002834 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3953 00002838 48FFC6                  	inc rsi
  3954 0000283B 48FFC2                  	inc rdx
  3955 0000283E EBEA                    	jmp .L_lambda_simple_env_loop_0038
  3956                                  .L_lambda_simple_env_end_0038:
  3957 00002840 5B                      	pop rbx
  3958 00002841 BE00000000              	mov rsi, 0
  3959                                  .L_lambda_simple_params_loop_0038:	; copy params
  3960 00002846 4883FE01                	cmp rsi, 1
  3961 0000284A 740E                    	je .L_lambda_simple_params_end_0038
  3962 0000284C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3963 00002851 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3964 00002855 48FFC6                  	inc rsi
  3965 00002858 EBEC                    	jmp .L_lambda_simple_params_loop_0038
  3966                                  .L_lambda_simple_params_end_0038:
  3967 0000285A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3968 0000285D 4889C3                  	mov rbx, rax
  3969 00002860 58                      	pop rax
  3970 00002861 C60004                  	mov byte [rax], T_closure
  3971 00002864 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3972 00002868 48C74009[75280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  3973 00002870 E992000000              	jmp .L_lambda_simple_end_0038
  3974                                  .L_lambda_simple_code_0038:	; lambda-simple body
  3975 00002875 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3976 0000287B 740B                    	je .L_lambda_simple_arity_check_ok_0038
  3977 0000287D FF742410                	push qword [rsp + 8 * 2]
  3978 00002881 6A01                    	push 1
  3979 00002883 E918370000              	jmp L_error_incorrect_arity_simple
  3980                                  .L_lambda_simple_arity_check_ok_0038:
  3981 00002888 C8000000                	enter 0, 0
  3982                                  	; preparing a tail-call
  3983                                  	; preparing a non-tail-call
  3984 0000288C 488B4520                	mov rax, PARAM(0)	; param z
  3985 00002890 50                      	push rax
  3986 00002891 6A01                    	push 1	; arg count
  3987                                  	; preparing a non-tail-call
  3988 00002893 488B4510                	mov rax, ENV
  3989 00002897 488B00                  	mov rax, qword [rax + 8 * 0]
  3990 0000289A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  3991 0000289D 50                      	push rax
  3992 0000289E 6A01                    	push 1	; arg count
  3993 000028A0 488B4510                	mov rax, ENV
  3994 000028A4 488B4008                	mov rax, qword [rax + 8 * 1]
  3995 000028A8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  3996 000028AB 803804                  	cmp byte [rax], T_closure
  3997 000028AE 0F858A360000            	jne L_error_non_closure
  3998 000028B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3999 000028B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4000 000028BA 803804                  	cmp byte [rax], T_closure
  4001 000028BD 0F857B360000            	jne L_error_non_closure
  4002 000028C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4003 000028C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4004 000028C9 50                      	push rax
  4005 000028CA 6A01                    	push 1	; arg count
  4006 000028CC 488B4510                	mov rax, ENV
  4007 000028D0 488B00                  	mov rax, qword [rax + 8 * 0]
  4008 000028D3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  4009 000028D6 803804                  	cmp byte [rax], T_closure
  4010 000028D9 0F855F360000            	jne L_error_non_closure
  4011 000028DF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4012 000028E2 FF7508                  	push qword [rbp + 8 * 1]
  4013                                   ; old ret addr	pop rbp
  4014                                  ; restore the old rbp	mov rbx, 1
  4015 000028E5 4883C303                	add rbx, 3
  4016                                  	mov rdi, dword [rbp + 8*2]
  4016          ******************       error: mismatch in operand sizes
  4017                                  .L_tc_recycle_frame_loop_0015:
  4018 000028E9 4883FB00                	cmp rbx, 0
  4019 000028ED 7411                    je .L_tc_recycle_frame_done_0015
  4020 000028EF 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4021 000028F3 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4022 000028F8 48FFCF                  	dec rdi
  4023 000028FB 48FFCB                  	dec rbx
  4024 000028FE EBE9                    jmp .L_tc_recycle_frame_loop_0015
  4025                                  .L_tc_recycle_frame_done_0015:
  4026 00002900 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4027 00002903 C9                      	leave
  4028 00002904 C21800                  	ret AND_KILL_FRAME(1)
  4029                                  .L_lambda_simple_end_0038:	; new closure is in rax
  4030 00002907 C9                      	leave
  4031 00002908 C21800                  	ret AND_KILL_FRAME(1)
  4032                                  .L_lambda_simple_end_0037:	; new closure is in rax
  4033 0000290B C9                      	leave
  4034 0000290C C21800                  	ret AND_KILL_FRAME(1)
  4035                                  .L_lambda_simple_end_0036:	; new closure is in rax
  4036 0000290F 803804                  	cmp byte [rax], T_closure
  4037 00002912 0F8526360000            	jne L_error_non_closure
  4038 00002918 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4039 0000291B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4040 0000291E 50                      	push rax
  4041 0000291F 6A01                    	push 1	; arg count
  4042 00002921 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4043 00002926 E8BC360000              	call malloc
  4044 0000292B 50                      	push rax
  4045 0000292C BF08000000              	mov rdi, 8 * 1	; new rib
  4046 00002931 E8B1360000              	call malloc
  4047 00002936 50                      	push rax
  4048 00002937 BF18000000              	mov rdi, 8 * 3	; extended env
  4049 0000293C E8A6360000              	call malloc
  4050 00002941 488B7D10                	mov rdi, ENV
  4051 00002945 BE00000000              	mov rsi, 0
  4052 0000294A BA01000000              	mov rdx, 1
  4053                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  4054 0000294F 4883FE02                	cmp rsi, 2
  4055 00002953 7410                    	je .L_lambda_simple_env_end_0039
  4056 00002955 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4057 00002959 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4058 0000295D 48FFC6                  	inc rsi
  4059 00002960 48FFC2                  	inc rdx
  4060 00002963 EBEA                    	jmp .L_lambda_simple_env_loop_0039
  4061                                  .L_lambda_simple_env_end_0039:
  4062 00002965 5B                      	pop rbx
  4063 00002966 BE00000000              	mov rsi, 0
  4064                                  .L_lambda_simple_params_loop_0039:	; copy params
  4065 0000296B 4883FE01                	cmp rsi, 1
  4066 0000296F 740E                    	je .L_lambda_simple_params_end_0039
  4067 00002971 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4068 00002976 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4069 0000297A 48FFC6                  	inc rsi
  4070 0000297D EBEC                    	jmp .L_lambda_simple_params_loop_0039
  4071                                  .L_lambda_simple_params_end_0039:
  4072 0000297F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4073 00002982 4889C3                  	mov rbx, rax
  4074 00002985 58                      	pop rax
  4075 00002986 C60004                  	mov byte [rax], T_closure
  4076 00002989 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4077 0000298D 48C74009[9A290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
  4078 00002995 E99B010000              	jmp .L_lambda_simple_end_0039
  4079                                  .L_lambda_simple_code_0039:	; lambda-simple body
  4080 0000299A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4081 000029A0 740B                    	je .L_lambda_simple_arity_check_ok_0039
  4082 000029A2 FF742410                	push qword [rsp + 8 * 2]
  4083 000029A6 6A01                    	push 1
  4084 000029A8 E9F3350000              	jmp L_error_incorrect_arity_simple
  4085                                  .L_lambda_simple_arity_check_ok_0039:
  4086 000029AD C8000000                	enter 0, 0
  4087 000029B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4088 000029B6 E82C360000              	call malloc
  4089 000029BB 50                      	push rax
  4090 000029BC BF08000000              	mov rdi, 8 * 1	; new rib
  4091 000029C1 E821360000              	call malloc
  4092 000029C6 50                      	push rax
  4093 000029C7 BF20000000              	mov rdi, 8 * 4	; extended env
  4094 000029CC E816360000              	call malloc
  4095 000029D1 488B7D10                	mov rdi, ENV
  4096 000029D5 BE00000000              	mov rsi, 0
  4097 000029DA BA01000000              	mov rdx, 1
  4098                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
  4099 000029DF 4883FE03                	cmp rsi, 3
  4100 000029E3 7410                    	je .L_lambda_simple_env_end_003a
  4101 000029E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4102 000029E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4103 000029ED 48FFC6                  	inc rsi
  4104 000029F0 48FFC2                  	inc rdx
  4105 000029F3 EBEA                    	jmp .L_lambda_simple_env_loop_003a
  4106                                  .L_lambda_simple_env_end_003a:
  4107 000029F5 5B                      	pop rbx
  4108 000029F6 BE00000000              	mov rsi, 0
  4109                                  .L_lambda_simple_params_loop_003a:	; copy params
  4110 000029FB 4883FE01                	cmp rsi, 1
  4111 000029FF 740E                    	je .L_lambda_simple_params_end_003a
  4112 00002A01 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4113 00002A06 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4114 00002A0A 48FFC6                  	inc rsi
  4115 00002A0D EBEC                    	jmp .L_lambda_simple_params_loop_003a
  4116                                  .L_lambda_simple_params_end_003a:
  4117 00002A0F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4118 00002A12 4889C3                  	mov rbx, rax
  4119 00002A15 58                      	pop rax
  4120 00002A16 C60004                  	mov byte [rax], T_closure
  4121 00002A19 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4122 00002A1D 48C74009[2A2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
  4123 00002A25 E907010000              	jmp .L_lambda_simple_end_003a
  4124                                  .L_lambda_simple_code_003a:	; lambda-simple body
  4125 00002A2A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4126 00002A30 740B                    	je .L_lambda_simple_arity_check_ok_003a
  4127 00002A32 FF742410                	push qword [rsp + 8 * 2]
  4128 00002A36 6A01                    	push 1
  4129 00002A38 E963350000              	jmp L_error_incorrect_arity_simple
  4130                                  .L_lambda_simple_arity_check_ok_003a:
  4131 00002A3D C8000000                	enter 0, 0
  4132 00002A41 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4133 00002A46 E89C350000              	call malloc
  4134 00002A4B 50                      	push rax
  4135 00002A4C BF08000000              	mov rdi, 8 * 1	; new rib
  4136 00002A51 E891350000              	call malloc
  4137 00002A56 50                      	push rax
  4138 00002A57 BF28000000              	mov rdi, 8 * 5	; extended env
  4139 00002A5C E886350000              	call malloc
  4140 00002A61 488B7D10                	mov rdi, ENV
  4141 00002A65 BE00000000              	mov rsi, 0
  4142 00002A6A BA01000000              	mov rdx, 1
  4143                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
  4144 00002A6F 4883FE04                	cmp rsi, 4
  4145 00002A73 7410                    	je .L_lambda_simple_env_end_003b
  4146 00002A75 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4147 00002A79 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4148 00002A7D 48FFC6                  	inc rsi
  4149 00002A80 48FFC2                  	inc rdx
  4150 00002A83 EBEA                    	jmp .L_lambda_simple_env_loop_003b
  4151                                  .L_lambda_simple_env_end_003b:
  4152 00002A85 5B                      	pop rbx
  4153 00002A86 BE00000000              	mov rsi, 0
  4154                                  .L_lambda_simple_params_loop_003b:	; copy params
  4155 00002A8B 4883FE01                	cmp rsi, 1
  4156 00002A8F 740E                    	je .L_lambda_simple_params_end_003b
  4157 00002A91 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4158 00002A96 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4159 00002A9A 48FFC6                  	inc rsi
  4160 00002A9D EBEC                    	jmp .L_lambda_simple_params_loop_003b
  4161                                  .L_lambda_simple_params_end_003b:
  4162 00002A9F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4163 00002AA2 4889C3                  	mov rbx, rax
  4164 00002AA5 58                      	pop rax
  4165 00002AA6 C60004                  	mov byte [rax], T_closure
  4166 00002AA9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4167 00002AAD 48C74009[B72A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
  4168 00002AB5 EB76                    	jmp .L_lambda_simple_end_003b
  4169                                  .L_lambda_simple_code_003b:	; lambda-simple body
  4170 00002AB7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4171 00002ABD 740B                    	je .L_lambda_simple_arity_check_ok_003b
  4172 00002ABF FF742410                	push qword [rsp + 8 * 2]
  4173 00002AC3 6A01                    	push 1
  4174 00002AC5 E9D6340000              	jmp L_error_incorrect_arity_simple
  4175                                  .L_lambda_simple_arity_check_ok_003b:
  4176 00002ACA C8000000                	enter 0, 0
  4177                                  	; preparing a tail-call
  4178 00002ACE 488B4510                	mov rax, ENV
  4179 00002AD2 488B00                  	mov rax, qword [rax + 8 * 0]
  4180 00002AD5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  4181 00002AD8 50                      	push rax
  4182 00002AD9 6A01                    	push 1	; arg count
  4183                                  	; preparing a non-tail-call
  4184 00002ADB 488B4510                	mov rax, ENV
  4185 00002ADF 488B4008                	mov rax, qword [rax + 8 * 1]
  4186 00002AE3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  4187 00002AE6 50                      	push rax
  4188 00002AE7 6A01                    	push 1	; arg count
  4189 00002AE9 488B4520                	mov rax, PARAM(0)	; param c
  4190 00002AED 803804                  	cmp byte [rax], T_closure
  4191 00002AF0 0F8548340000            	jne L_error_non_closure
  4192 00002AF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4193 00002AF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4194 00002AFC 803804                  	cmp byte [rax], T_closure
  4195 00002AFF 0F8539340000            	jne L_error_non_closure
  4196 00002B05 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4197 00002B08 FF7508                  	push qword [rbp + 8 * 1]
  4198                                   ; old ret addr	pop rbp
  4199                                  ; restore the old rbp	mov rbx, 1
  4200 00002B0B 4883C303                	add rbx, 3
  4201                                  	mov rdi, dword [rbp + 8*2]
  4201          ******************       error: mismatch in operand sizes
  4202                                  .L_tc_recycle_frame_loop_0016:
  4203 00002B0F 4883FB00                	cmp rbx, 0
  4204 00002B13 7411                    je .L_tc_recycle_frame_done_0016
  4205 00002B15 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4206 00002B19 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4207 00002B1E 48FFCF                  	dec rdi
  4208 00002B21 48FFCB                  	dec rbx
  4209 00002B24 EBE9                    jmp .L_tc_recycle_frame_loop_0016
  4210                                  .L_tc_recycle_frame_done_0016:
  4211 00002B26 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4212 00002B29 C9                      	leave
  4213 00002B2A C21800                  	ret AND_KILL_FRAME(1)
  4214                                  .L_lambda_simple_end_003b:	; new closure is in rax
  4215 00002B2D C9                      	leave
  4216 00002B2E C21800                  	ret AND_KILL_FRAME(1)
  4217                                  .L_lambda_simple_end_003a:	; new closure is in rax
  4218 00002B31 C9                      	leave
  4219 00002B32 C21800                  	ret AND_KILL_FRAME(1)
  4220                                  .L_lambda_simple_end_0039:	; new closure is in rax
  4221 00002B35 803804                  	cmp byte [rax], T_closure
  4222 00002B38 0F8500340000            	jne L_error_non_closure
  4223 00002B3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4224 00002B41 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4225 00002B44 803804                  	cmp byte [rax], T_closure
  4226 00002B47 0F85F1330000            	jne L_error_non_closure
  4227 00002B4D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4228 00002B50 FF7508                  	push qword [rbp + 8 * 1]
  4229                                   ; old ret addr	pop rbp
  4230                                  ; restore the old rbp	mov rbx, 1
  4231 00002B53 4883C303                	add rbx, 3
  4232                                  	mov rdi, dword [rbp + 8*2]
  4232          ******************       error: mismatch in operand sizes
  4233                                  .L_tc_recycle_frame_loop_000e:
  4234 00002B57 4883FB00                	cmp rbx, 0
  4235 00002B5B 7411                    je .L_tc_recycle_frame_done_000e
  4236 00002B5D 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4237 00002B61 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4238 00002B66 48FFCF                  	dec rdi
  4239 00002B69 48FFCB                  	dec rbx
  4240 00002B6C EBE9                    jmp .L_tc_recycle_frame_loop_000e
  4241                                  .L_tc_recycle_frame_done_000e:
  4242 00002B6E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4243 00002B71 C9                      	leave
  4244 00002B72 C21800                  	ret AND_KILL_FRAME(1)
  4245                                  .L_lambda_simple_end_0023:	; new closure is in rax
  4246 00002B75 50                      	push rax
  4247 00002B76 6A01                    	push 1	; arg count
  4248 00002B78 488B4520                	mov rax, PARAM(0)	; param n
  4249 00002B7C 803804                  	cmp byte [rax], T_closure
  4250 00002B7F 0F85B9330000            	jne L_error_non_closure
  4251 00002B85 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4252 00002B88 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4253 00002B8B 803804                  	cmp byte [rax], T_closure
  4254 00002B8E 0F85AA330000            	jne L_error_non_closure
  4255 00002B94 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4256 00002B97 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4257 00002B9A 50                      	push rax
  4258 00002B9B 6A01                    	push 1	; arg count
  4259 00002B9D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4260 00002BA2 E840340000              	call malloc
  4261 00002BA7 50                      	push rax
  4262 00002BA8 BF08000000              	mov rdi, 8 * 1	; new rib
  4263 00002BAD E835340000              	call malloc
  4264 00002BB2 50                      	push rax
  4265 00002BB3 BF10000000              	mov rdi, 8 * 2	; extended env
  4266 00002BB8 E82A340000              	call malloc
  4267 00002BBD 488B7D10                	mov rdi, ENV
  4268 00002BC1 BE00000000              	mov rsi, 0
  4269 00002BC6 BA01000000              	mov rdx, 1
  4270                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
  4271 00002BCB 4883FE01                	cmp rsi, 1
  4272 00002BCF 7410                    	je .L_lambda_simple_env_end_003c
  4273 00002BD1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4274 00002BD5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4275 00002BD9 48FFC6                  	inc rsi
  4276 00002BDC 48FFC2                  	inc rdx
  4277 00002BDF EBEA                    	jmp .L_lambda_simple_env_loop_003c
  4278                                  .L_lambda_simple_env_end_003c:
  4279 00002BE1 5B                      	pop rbx
  4280 00002BE2 BE00000000              	mov rsi, 0
  4281                                  .L_lambda_simple_params_loop_003c:	; copy params
  4282 00002BE7 4883FE01                	cmp rsi, 1
  4283 00002BEB 740E                    	je .L_lambda_simple_params_end_003c
  4284 00002BED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4285 00002BF2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4286 00002BF6 48FFC6                  	inc rsi
  4287 00002BF9 EBEC                    	jmp .L_lambda_simple_params_loop_003c
  4288                                  .L_lambda_simple_params_end_003c:
  4289 00002BFB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4290 00002BFE 4889C3                  	mov rbx, rax
  4291 00002C01 58                      	pop rax
  4292 00002C02 C60004                  	mov byte [rax], T_closure
  4293 00002C05 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4294 00002C09 48C74009[162C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
  4295 00002C11 E978010000              	jmp .L_lambda_simple_end_003c
  4296                                  .L_lambda_simple_code_003c:	; lambda-simple body
  4297 00002C16 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4298 00002C1C 740B                    	je .L_lambda_simple_arity_check_ok_003c
  4299 00002C1E FF742410                	push qword [rsp + 8 * 2]
  4300 00002C22 6A01                    	push 1
  4301 00002C24 E977330000              	jmp L_error_incorrect_arity_simple
  4302                                  .L_lambda_simple_arity_check_ok_003c:
  4303 00002C29 C8000000                	enter 0, 0
  4304                                  	; preparing a tail-call
  4305 00002C2D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4306 00002C32 E8B0330000              	call malloc
  4307 00002C37 50                      	push rax
  4308 00002C38 BF08000000              	mov rdi, 8 * 1	; new rib
  4309 00002C3D E8A5330000              	call malloc
  4310 00002C42 50                      	push rax
  4311 00002C43 BF18000000              	mov rdi, 8 * 3	; extended env
  4312 00002C48 E89A330000              	call malloc
  4313 00002C4D 488B7D10                	mov rdi, ENV
  4314 00002C51 BE00000000              	mov rsi, 0
  4315 00002C56 BA01000000              	mov rdx, 1
  4316                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
  4317 00002C5B 4883FE02                	cmp rsi, 2
  4318 00002C5F 7410                    	je .L_lambda_simple_env_end_003d
  4319 00002C61 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4320 00002C65 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4321 00002C69 48FFC6                  	inc rsi
  4322 00002C6C 48FFC2                  	inc rdx
  4323 00002C6F EBEA                    	jmp .L_lambda_simple_env_loop_003d
  4324                                  .L_lambda_simple_env_end_003d:
  4325 00002C71 5B                      	pop rbx
  4326 00002C72 BE00000000              	mov rsi, 0
  4327                                  .L_lambda_simple_params_loop_003d:	; copy params
  4328 00002C77 4883FE01                	cmp rsi, 1
  4329 00002C7B 740E                    	je .L_lambda_simple_params_end_003d
  4330 00002C7D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4331 00002C82 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4332 00002C86 48FFC6                  	inc rsi
  4333 00002C89 EBEC                    	jmp .L_lambda_simple_params_loop_003d
  4334                                  .L_lambda_simple_params_end_003d:
  4335 00002C8B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4336 00002C8E 4889C3                  	mov rbx, rax
  4337 00002C91 58                      	pop rax
  4338 00002C92 C60004                  	mov byte [rax], T_closure
  4339 00002C95 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4340 00002C99 48C74009[A62C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
  4341 00002CA1 E9B0000000              	jmp .L_lambda_simple_end_003d
  4342                                  .L_lambda_simple_code_003d:	; lambda-simple body
  4343 00002CA6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4344 00002CAC 740B                    	je .L_lambda_simple_arity_check_ok_003d
  4345 00002CAE FF742410                	push qword [rsp + 8 * 2]
  4346 00002CB2 6A01                    	push 1
  4347 00002CB4 E9E7320000              	jmp L_error_incorrect_arity_simple
  4348                                  .L_lambda_simple_arity_check_ok_003d:
  4349 00002CB9 C8000000                	enter 0, 0
  4350 00002CBD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4351 00002CC2 E820330000              	call malloc
  4352 00002CC7 50                      	push rax
  4353 00002CC8 BF08000000              	mov rdi, 8 * 1	; new rib
  4354 00002CCD E815330000              	call malloc
  4355 00002CD2 50                      	push rax
  4356 00002CD3 BF20000000              	mov rdi, 8 * 4	; extended env
  4357 00002CD8 E80A330000              	call malloc
  4358 00002CDD 488B7D10                	mov rdi, ENV
  4359 00002CE1 BE00000000              	mov rsi, 0
  4360 00002CE6 BA01000000              	mov rdx, 1
  4361                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
  4362 00002CEB 4883FE03                	cmp rsi, 3
  4363 00002CEF 7410                    	je .L_lambda_simple_env_end_003e
  4364 00002CF1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4365 00002CF5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4366 00002CF9 48FFC6                  	inc rsi
  4367 00002CFC 48FFC2                  	inc rdx
  4368 00002CFF EBEA                    	jmp .L_lambda_simple_env_loop_003e
  4369                                  .L_lambda_simple_env_end_003e:
  4370 00002D01 5B                      	pop rbx
  4371 00002D02 BE00000000              	mov rsi, 0
  4372                                  .L_lambda_simple_params_loop_003e:	; copy params
  4373 00002D07 4883FE01                	cmp rsi, 1
  4374 00002D0B 740E                    	je .L_lambda_simple_params_end_003e
  4375 00002D0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4376 00002D12 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4377 00002D16 48FFC6                  	inc rsi
  4378 00002D19 EBEC                    	jmp .L_lambda_simple_params_loop_003e
  4379                                  .L_lambda_simple_params_end_003e:
  4380 00002D1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4381 00002D1E 4889C3                  	mov rbx, rax
  4382 00002D21 58                      	pop rax
  4383 00002D22 C60004                  	mov byte [rax], T_closure
  4384 00002D25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4385 00002D29 48C74009[332D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
  4386 00002D31 EB1F                    	jmp .L_lambda_simple_end_003e
  4387                                  .L_lambda_simple_code_003e:	; lambda-simple body
  4388 00002D33 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4389 00002D39 740B                    	je .L_lambda_simple_arity_check_ok_003e
  4390 00002D3B FF742410                	push qword [rsp + 8 * 2]
  4391 00002D3F 6A01                    	push 1
  4392 00002D41 E95A320000              	jmp L_error_incorrect_arity_simple
  4393                                  .L_lambda_simple_arity_check_ok_003e:
  4394 00002D46 C8000000                	enter 0, 0
  4395 00002D4A 488B4520                	mov rax, PARAM(0)	; param b
  4396 00002D4E C9                      	leave
  4397 00002D4F C21800                  	ret AND_KILL_FRAME(1)
  4398                                  .L_lambda_simple_end_003e:	; new closure is in rax
  4399 00002D52 C9                      	leave
  4400 00002D53 C21800                  	ret AND_KILL_FRAME(1)
  4401                                  .L_lambda_simple_end_003d:	; new closure is in rax
  4402 00002D56 50                      	push rax
  4403 00002D57 6A01                    	push 1	; arg count
  4404 00002D59 488B4520                	mov rax, PARAM(0)	; param p
  4405 00002D5D 803804                  	cmp byte [rax], T_closure
  4406 00002D60 0F85D8310000            	jne L_error_non_closure
  4407 00002D66 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4408 00002D69 FF7508                  	push qword [rbp + 8 * 1]
  4409                                   ; old ret addr	pop rbp
  4410                                  ; restore the old rbp	mov rbx, 1
  4411 00002D6C 4883C303                	add rbx, 3
  4412                                  	mov rdi, dword [rbp + 8*2]
  4412          ******************       error: mismatch in operand sizes
  4413                                  .L_tc_recycle_frame_loop_0017:
  4414 00002D70 4883FB00                	cmp rbx, 0
  4415 00002D74 7411                    je .L_tc_recycle_frame_done_0017
  4416 00002D76 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4417 00002D7A 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4418 00002D7F 48FFCF                  	dec rdi
  4419 00002D82 48FFCB                  	dec rbx
  4420 00002D85 EBE9                    jmp .L_tc_recycle_frame_loop_0017
  4421                                  .L_tc_recycle_frame_done_0017:
  4422 00002D87 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4423 00002D8A C9                      	leave
  4424 00002D8B C21800                  	ret AND_KILL_FRAME(1)
  4425                                  .L_lambda_simple_end_003c:	; new closure is in rax
  4426 00002D8E 803804                  	cmp byte [rax], T_closure
  4427 00002D91 0F85A7310000            	jne L_error_non_closure
  4428 00002D97 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4429 00002D9A FF7508                  	push qword [rbp + 8 * 1]
  4430                                   ; old ret addr	pop rbp
  4431                                  ; restore the old rbp	mov rbx, 1
  4432 00002D9D 4883C303                	add rbx, 3
  4433                                  	mov rdi, dword [rbp + 8*2]
  4433          ******************       error: mismatch in operand sizes
  4434                                  .L_tc_recycle_frame_loop_000c:
  4435 00002DA1 4883FB00                	cmp rbx, 0
  4436 00002DA5 7411                    je .L_tc_recycle_frame_done_000c
  4437 00002DA7 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4438 00002DAB 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4439 00002DB0 48FFCF                  	dec rdi
  4440 00002DB3 48FFCB                  	dec rbx
  4441 00002DB6 EBE9                    jmp .L_tc_recycle_frame_loop_000c
  4442                                  .L_tc_recycle_frame_done_000c:
  4443 00002DB8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4444 00002DBB C9                      	leave
  4445 00002DBC C21800                  	ret AND_KILL_FRAME(1)
  4446                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4447 00002DBF 803804                  	cmp byte [rax], T_closure
  4448 00002DC2 0F8576310000            	jne L_error_non_closure
  4449 00002DC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4450 00002DCB FF5009                  	call SOB_CLOSURE_CODE(rax)
  4451 00002DCE 50                      	push rax
  4452 00002DCF 6A01                    	push 1	; arg count
  4453 00002DD1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4454 00002DD6 E80C320000              	call malloc
  4455 00002DDB 50                      	push rax
  4456 00002DDC BF00000000              	mov rdi, 8 * 0	; new rib
  4457 00002DE1 E801320000              	call malloc
  4458 00002DE6 50                      	push rax
  4459 00002DE7 BF08000000              	mov rdi, 8 * 1	; extended env
  4460 00002DEC E8F6310000              	call malloc
  4461 00002DF1 488B7D10                	mov rdi, ENV
  4462 00002DF5 BE00000000              	mov rsi, 0
  4463 00002DFA BA01000000              	mov rdx, 1
  4464                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
  4465 00002DFF 4883FE00                	cmp rsi, 0
  4466 00002E03 7410                    	je .L_lambda_simple_env_end_003f
  4467 00002E05 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4468 00002E09 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4469 00002E0D 48FFC6                  	inc rsi
  4470 00002E10 48FFC2                  	inc rdx
  4471 00002E13 EBEA                    	jmp .L_lambda_simple_env_loop_003f
  4472                                  .L_lambda_simple_env_end_003f:
  4473 00002E15 5B                      	pop rbx
  4474 00002E16 BE00000000              	mov rsi, 0
  4475                                  .L_lambda_simple_params_loop_003f:	; copy params
  4476 00002E1B 4883FE00                	cmp rsi, 0
  4477 00002E1F 740E                    	je .L_lambda_simple_params_end_003f
  4478 00002E21 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4479 00002E26 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4480 00002E2A 48FFC6                  	inc rsi
  4481 00002E2D EBEC                    	jmp .L_lambda_simple_params_loop_003f
  4482                                  .L_lambda_simple_params_end_003f:
  4483 00002E2F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4484 00002E32 4889C3                  	mov rbx, rax
  4485 00002E35 58                      	pop rax
  4486 00002E36 C60004                  	mov byte [rax], T_closure
  4487 00002E39 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4488 00002E3D 48C74009[4A2E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
  4489 00002E45 E9F62F0000              	jmp .L_lambda_simple_end_003f
  4490                                  .L_lambda_simple_code_003f:	; lambda-simple body
  4491 00002E4A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4492 00002E50 740B                    	je .L_lambda_simple_arity_check_ok_003f
  4493 00002E52 FF742410                	push qword [rsp + 8 * 2]
  4494 00002E56 6A01                    	push 1
  4495 00002E58 E943310000              	jmp L_error_incorrect_arity_simple
  4496                                  .L_lambda_simple_arity_check_ok_003f:
  4497 00002E5D C8000000                	enter 0, 0
  4498 00002E61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4499 00002E66 E87C310000              	call malloc
  4500 00002E6B 50                      	push rax
  4501 00002E6C BF08000000              	mov rdi, 8 * 1	; new rib
  4502 00002E71 E871310000              	call malloc
  4503 00002E76 50                      	push rax
  4504 00002E77 BF10000000              	mov rdi, 8 * 2	; extended env
  4505 00002E7C E866310000              	call malloc
  4506 00002E81 488B7D10                	mov rdi, ENV
  4507 00002E85 BE00000000              	mov rsi, 0
  4508 00002E8A BA01000000              	mov rdx, 1
  4509                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
  4510 00002E8F 4883FE01                	cmp rsi, 1
  4511 00002E93 7410                    	je .L_lambda_simple_env_end_0040
  4512 00002E95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4513 00002E99 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4514 00002E9D 48FFC6                  	inc rsi
  4515 00002EA0 48FFC2                  	inc rdx
  4516 00002EA3 EBEA                    	jmp .L_lambda_simple_env_loop_0040
  4517                                  .L_lambda_simple_env_end_0040:
  4518 00002EA5 5B                      	pop rbx
  4519 00002EA6 BE00000000              	mov rsi, 0
  4520                                  .L_lambda_simple_params_loop_0040:	; copy params
  4521 00002EAB 4883FE01                	cmp rsi, 1
  4522 00002EAF 740E                    	je .L_lambda_simple_params_end_0040
  4523 00002EB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4524 00002EB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4525 00002EBA 48FFC6                  	inc rsi
  4526 00002EBD EBEC                    	jmp .L_lambda_simple_params_loop_0040
  4527                                  .L_lambda_simple_params_end_0040:
  4528 00002EBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4529 00002EC2 4889C3                  	mov rbx, rax
  4530 00002EC5 58                      	pop rax
  4531 00002EC6 C60004                  	mov byte [rax], T_closure
  4532 00002EC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4533 00002ECD 48C74009[DA2E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
  4534 00002ED5 E9622F0000              	jmp .L_lambda_simple_end_0040
  4535                                  .L_lambda_simple_code_0040:	; lambda-simple body
  4536 00002EDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4537 00002EE0 740B                    	je .L_lambda_simple_arity_check_ok_0040
  4538 00002EE2 FF742410                	push qword [rsp + 8 * 2]
  4539 00002EE6 6A01                    	push 1
  4540 00002EE8 E9B3300000              	jmp L_error_incorrect_arity_simple
  4541                                  .L_lambda_simple_arity_check_ok_0040:
  4542 00002EED C8000000                	enter 0, 0
  4543                                  	; preparing a tail-call
  4544                                  	; preparing a non-tail-call
  4545                                  	; preparing a non-tail-call
  4546 00002EF1 488B4510                	mov rax, ENV
  4547 00002EF5 488B00                  	mov rax, qword [rax + 8 * 0]
  4548 00002EF8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  4549 00002EFB 50                      	push rax
  4550 00002EFC 6A01                    	push 1	; arg count
  4551                                  	; preparing a non-tail-call
  4552 00002EFE 488B4520                	mov rax, PARAM(0)	; param b
  4553 00002F02 50                      	push rax
  4554 00002F03 6A01                    	push 1	; arg count
  4555 00002F05 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4556 00002F0A E8D8300000              	call malloc
  4557 00002F0F 50                      	push rax
  4558 00002F10 BF08000000              	mov rdi, 8 * 1	; new rib
  4559 00002F15 E8CD300000              	call malloc
  4560 00002F1A 50                      	push rax
  4561 00002F1B BF18000000              	mov rdi, 8 * 3	; extended env
  4562 00002F20 E8C2300000              	call malloc
  4563 00002F25 488B7D10                	mov rdi, ENV
  4564 00002F29 BE00000000              	mov rsi, 0
  4565 00002F2E BA01000000              	mov rdx, 1
  4566                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
  4567 00002F33 4883FE02                	cmp rsi, 2
  4568 00002F37 7410                    	je .L_lambda_simple_env_end_0041
  4569 00002F39 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4570 00002F3D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4571 00002F41 48FFC6                  	inc rsi
  4572 00002F44 48FFC2                  	inc rdx
  4573 00002F47 EBEA                    	jmp .L_lambda_simple_env_loop_0041
  4574                                  .L_lambda_simple_env_end_0041:
  4575 00002F49 5B                      	pop rbx
  4576 00002F4A BE00000000              	mov rsi, 0
  4577                                  .L_lambda_simple_params_loop_0041:	; copy params
  4578 00002F4F 4883FE01                	cmp rsi, 1
  4579 00002F53 740E                    	je .L_lambda_simple_params_end_0041
  4580 00002F55 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4581 00002F5A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4582 00002F5E 48FFC6                  	inc rsi
  4583 00002F61 EBEC                    	jmp .L_lambda_simple_params_loop_0041
  4584                                  .L_lambda_simple_params_end_0041:
  4585 00002F63 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4586 00002F66 4889C3                  	mov rbx, rax
  4587 00002F69 58                      	pop rax
  4588 00002F6A C60004                  	mov byte [rax], T_closure
  4589 00002F6D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4590 00002F71 48C74009[7E2F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
  4591 00002F79 E9AF110000              	jmp .L_lambda_simple_end_0041
  4592                                  .L_lambda_simple_code_0041:	; lambda-simple body
  4593 00002F7E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4594 00002F84 740B                    	je .L_lambda_simple_arity_check_ok_0041
  4595 00002F86 FF742410                	push qword [rsp + 8 * 2]
  4596 00002F8A 6A01                    	push 1
  4597 00002F8C E90F300000              	jmp L_error_incorrect_arity_simple
  4598                                  .L_lambda_simple_arity_check_ok_0041:
  4599 00002F91 C8000000                	enter 0, 0
  4600 00002F95 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4601 00002F9A E848300000              	call malloc
  4602 00002F9F 50                      	push rax
  4603 00002FA0 BF08000000              	mov rdi, 8 * 1	; new rib
  4604 00002FA5 E83D300000              	call malloc
  4605 00002FAA 50                      	push rax
  4606 00002FAB BF20000000              	mov rdi, 8 * 4	; extended env
  4607 00002FB0 E832300000              	call malloc
  4608 00002FB5 488B7D10                	mov rdi, ENV
  4609 00002FB9 BE00000000              	mov rsi, 0
  4610 00002FBE BA01000000              	mov rdx, 1
  4611                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
  4612 00002FC3 4883FE03                	cmp rsi, 3
  4613 00002FC7 7410                    	je .L_lambda_simple_env_end_0042
  4614 00002FC9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4615 00002FCD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4616 00002FD1 48FFC6                  	inc rsi
  4617 00002FD4 48FFC2                  	inc rdx
  4618 00002FD7 EBEA                    	jmp .L_lambda_simple_env_loop_0042
  4619                                  .L_lambda_simple_env_end_0042:
  4620 00002FD9 5B                      	pop rbx
  4621 00002FDA BE00000000              	mov rsi, 0
  4622                                  .L_lambda_simple_params_loop_0042:	; copy params
  4623 00002FDF 4883FE01                	cmp rsi, 1
  4624 00002FE3 740E                    	je .L_lambda_simple_params_end_0042
  4625 00002FE5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4626 00002FEA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4627 00002FEE 48FFC6                  	inc rsi
  4628 00002FF1 EBEC                    	jmp .L_lambda_simple_params_loop_0042
  4629                                  .L_lambda_simple_params_end_0042:
  4630 00002FF3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4631 00002FF6 4889C3                  	mov rbx, rax
  4632 00002FF9 58                      	pop rax
  4633 00002FFA C60004                  	mov byte [rax], T_closure
  4634 00002FFD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4635 00003001 48C74009[0E300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
  4636 00003009 E91B110000              	jmp .L_lambda_simple_end_0042
  4637                                  .L_lambda_simple_code_0042:	; lambda-simple body
  4638 0000300E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4639 00003014 740B                    	je .L_lambda_simple_arity_check_ok_0042
  4640 00003016 FF742410                	push qword [rsp + 8 * 2]
  4641 0000301A 6A01                    	push 1
  4642 0000301C E97F2F0000              	jmp L_error_incorrect_arity_simple
  4643                                  .L_lambda_simple_arity_check_ok_0042:
  4644 00003021 C8000000                	enter 0, 0
  4645                                  	; preparing a tail-call
  4646 00003025 488B4510                	mov rax, ENV
  4647 00003029 488B00                  	mov rax, qword [rax + 8 * 0]
  4648 0000302C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  4649 0000302F 50                      	push rax
  4650 00003030 6A01                    	push 1	; arg count
  4651                                  	; preparing a non-tail-call
  4652 00003032 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4653 00003037 E8AB2F0000              	call malloc
  4654 0000303C 50                      	push rax
  4655 0000303D BF08000000              	mov rdi, 8 * 1	; new rib
  4656 00003042 E8A02F0000              	call malloc
  4657 00003047 50                      	push rax
  4658 00003048 BF28000000              	mov rdi, 8 * 5	; extended env
  4659 0000304D E8952F0000              	call malloc
  4660 00003052 488B7D10                	mov rdi, ENV
  4661 00003056 BE00000000              	mov rsi, 0
  4662 0000305B BA01000000              	mov rdx, 1
  4663                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
  4664 00003060 4883FE04                	cmp rsi, 4
  4665 00003064 7410                    	je .L_lambda_simple_env_end_0043
  4666 00003066 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4667 0000306A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4668 0000306E 48FFC6                  	inc rsi
  4669 00003071 48FFC2                  	inc rdx
  4670 00003074 EBEA                    	jmp .L_lambda_simple_env_loop_0043
  4671                                  .L_lambda_simple_env_end_0043:
  4672 00003076 5B                      	pop rbx
  4673 00003077 BE00000000              	mov rsi, 0
  4674                                  .L_lambda_simple_params_loop_0043:	; copy params
  4675 0000307C 4883FE01                	cmp rsi, 1
  4676 00003080 740E                    	je .L_lambda_simple_params_end_0043
  4677 00003082 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4678 00003087 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4679 0000308B 48FFC6                  	inc rsi
  4680 0000308E EBEC                    	jmp .L_lambda_simple_params_loop_0043
  4681                                  .L_lambda_simple_params_end_0043:
  4682 00003090 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4683 00003093 4889C3                  	mov rbx, rax
  4684 00003096 58                      	pop rax
  4685 00003097 C60004                  	mov byte [rax], T_closure
  4686 0000309A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4687 0000309E 48C74009[AB300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
  4688 000030A6 E937100000              	jmp .L_lambda_simple_end_0043
  4689                                  .L_lambda_simple_code_0043:	; lambda-simple body
  4690 000030AB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4691 000030B1 740B                    	je .L_lambda_simple_arity_check_ok_0043
  4692 000030B3 FF742410                	push qword [rsp + 8 * 2]
  4693 000030B7 6A01                    	push 1
  4694 000030B9 E9E22E0000              	jmp L_error_incorrect_arity_simple
  4695                                  .L_lambda_simple_arity_check_ok_0043:
  4696 000030BE C8000000                	enter 0, 0
  4697                                  	; preparing a tail-call
  4698                                  	; preparing a non-tail-call
  4699                                  	; preparing a non-tail-call
  4700 000030C2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4701 000030C7 E81B2F0000              	call malloc
  4702 000030CC 50                      	push rax
  4703 000030CD BF08000000              	mov rdi, 8 * 1	; new rib
  4704 000030D2 E8102F0000              	call malloc
  4705 000030D7 50                      	push rax
  4706 000030D8 BF30000000              	mov rdi, 8 * 6	; extended env
  4707 000030DD E8052F0000              	call malloc
  4708 000030E2 488B7D10                	mov rdi, ENV
  4709 000030E6 BE00000000              	mov rsi, 0
  4710 000030EB BA01000000              	mov rdx, 1
  4711                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
  4712 000030F0 4883FE05                	cmp rsi, 5
  4713 000030F4 7410                    	je .L_lambda_simple_env_end_0044
  4714 000030F6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4715 000030FA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4716 000030FE 48FFC6                  	inc rsi
  4717 00003101 48FFC2                  	inc rdx
  4718 00003104 EBEA                    	jmp .L_lambda_simple_env_loop_0044
  4719                                  .L_lambda_simple_env_end_0044:
  4720 00003106 5B                      	pop rbx
  4721 00003107 BE00000000              	mov rsi, 0
  4722                                  .L_lambda_simple_params_loop_0044:	; copy params
  4723 0000310C 4883FE01                	cmp rsi, 1
  4724 00003110 740E                    	je .L_lambda_simple_params_end_0044
  4725 00003112 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4726 00003117 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4727 0000311B 48FFC6                  	inc rsi
  4728 0000311E EBEC                    	jmp .L_lambda_simple_params_loop_0044
  4729                                  .L_lambda_simple_params_end_0044:
  4730 00003120 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4731 00003123 4889C3                  	mov rbx, rax
  4732 00003126 58                      	pop rax
  4733 00003127 C60004                  	mov byte [rax], T_closure
  4734 0000312A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4735 0000312E 48C74009[3B310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
  4736 00003136 E9B0000000              	jmp .L_lambda_simple_end_0044
  4737                                  .L_lambda_simple_code_0044:	; lambda-simple body
  4738 0000313B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4739 00003141 740B                    	je .L_lambda_simple_arity_check_ok_0044
  4740 00003143 FF742410                	push qword [rsp + 8 * 2]
  4741 00003147 6A01                    	push 1
  4742 00003149 E9522E0000              	jmp L_error_incorrect_arity_simple
  4743                                  .L_lambda_simple_arity_check_ok_0044:
  4744 0000314E C8000000                	enter 0, 0
  4745 00003152 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4746 00003157 E88B2E0000              	call malloc
  4747 0000315C 50                      	push rax
  4748 0000315D BF08000000              	mov rdi, 8 * 1	; new rib
  4749 00003162 E8802E0000              	call malloc
  4750 00003167 50                      	push rax
  4751 00003168 BF38000000              	mov rdi, 8 * 7	; extended env
  4752 0000316D E8752E0000              	call malloc
  4753 00003172 488B7D10                	mov rdi, ENV
  4754 00003176 BE00000000              	mov rsi, 0
  4755 0000317B BA01000000              	mov rdx, 1
  4756                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
  4757 00003180 4883FE06                	cmp rsi, 6
  4758 00003184 7410                    	je .L_lambda_simple_env_end_0045
  4759 00003186 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4760 0000318A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4761 0000318E 48FFC6                  	inc rsi
  4762 00003191 48FFC2                  	inc rdx
  4763 00003194 EBEA                    	jmp .L_lambda_simple_env_loop_0045
  4764                                  .L_lambda_simple_env_end_0045:
  4765 00003196 5B                      	pop rbx
  4766 00003197 BE00000000              	mov rsi, 0
  4767                                  .L_lambda_simple_params_loop_0045:	; copy params
  4768 0000319C 4883FE01                	cmp rsi, 1
  4769 000031A0 740E                    	je .L_lambda_simple_params_end_0045
  4770 000031A2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4771 000031A7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4772 000031AB 48FFC6                  	inc rsi
  4773 000031AE EBEC                    	jmp .L_lambda_simple_params_loop_0045
  4774                                  .L_lambda_simple_params_end_0045:
  4775 000031B0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4776 000031B3 4889C3                  	mov rbx, rax
  4777 000031B6 58                      	pop rax
  4778 000031B7 C60004                  	mov byte [rax], T_closure
  4779 000031BA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4780 000031BE 48C74009[C8310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
  4781 000031C6 EB1F                    	jmp .L_lambda_simple_end_0045
  4782                                  .L_lambda_simple_code_0045:	; lambda-simple body
  4783 000031C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4784 000031CE 740B                    	je .L_lambda_simple_arity_check_ok_0045
  4785 000031D0 FF742410                	push qword [rsp + 8 * 2]
  4786 000031D4 6A01                    	push 1
  4787 000031D6 E9C52D0000              	jmp L_error_incorrect_arity_simple
  4788                                  .L_lambda_simple_arity_check_ok_0045:
  4789 000031DB C8000000                	enter 0, 0
  4790 000031DF 488B4520                	mov rax, PARAM(0)	; param y
  4791 000031E3 C9                      	leave
  4792 000031E4 C21800                  	ret AND_KILL_FRAME(1)
  4793                                  .L_lambda_simple_end_0045:	; new closure is in rax
  4794 000031E7 C9                      	leave
  4795 000031E8 C21800                  	ret AND_KILL_FRAME(1)
  4796                                  .L_lambda_simple_end_0044:	; new closure is in rax
  4797 000031EB 50                      	push rax
  4798 000031EC 6A01                    	push 1	; arg count
  4799                                  	; preparing a non-tail-call
  4800 000031EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4801 000031F3 E8EF2D0000              	call malloc
  4802 000031F8 50                      	push rax
  4803 000031F9 BF08000000              	mov rdi, 8 * 1	; new rib
  4804 000031FE E8E42D0000              	call malloc
  4805 00003203 50                      	push rax
  4806 00003204 BF30000000              	mov rdi, 8 * 6	; extended env
  4807 00003209 E8D92D0000              	call malloc
  4808 0000320E 488B7D10                	mov rdi, ENV
  4809 00003212 BE00000000              	mov rsi, 0
  4810 00003217 BA01000000              	mov rdx, 1
  4811                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
  4812 0000321C 4883FE05                	cmp rsi, 5
  4813 00003220 7410                    	je .L_lambda_simple_env_end_0046
  4814 00003222 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4815 00003226 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4816 0000322A 48FFC6                  	inc rsi
  4817 0000322D 48FFC2                  	inc rdx
  4818 00003230 EBEA                    	jmp .L_lambda_simple_env_loop_0046
  4819                                  .L_lambda_simple_env_end_0046:
  4820 00003232 5B                      	pop rbx
  4821 00003233 BE00000000              	mov rsi, 0
  4822                                  .L_lambda_simple_params_loop_0046:	; copy params
  4823 00003238 4883FE01                	cmp rsi, 1
  4824 0000323C 740E                    	je .L_lambda_simple_params_end_0046
  4825 0000323E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4826 00003243 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4827 00003247 48FFC6                  	inc rsi
  4828 0000324A EBEC                    	jmp .L_lambda_simple_params_loop_0046
  4829                                  .L_lambda_simple_params_end_0046:
  4830 0000324C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4831 0000324F 4889C3                  	mov rbx, rax
  4832 00003252 58                      	pop rax
  4833 00003253 C60004                  	mov byte [rax], T_closure
  4834 00003256 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4835 0000325A 48C74009[67320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
  4836 00003262 E9B0000000              	jmp .L_lambda_simple_end_0046
  4837                                  .L_lambda_simple_code_0046:	; lambda-simple body
  4838 00003267 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4839 0000326D 740B                    	je .L_lambda_simple_arity_check_ok_0046
  4840 0000326F FF742410                	push qword [rsp + 8 * 2]
  4841 00003273 6A01                    	push 1
  4842 00003275 E9262D0000              	jmp L_error_incorrect_arity_simple
  4843                                  .L_lambda_simple_arity_check_ok_0046:
  4844 0000327A C8000000                	enter 0, 0
  4845 0000327E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4846 00003283 E85F2D0000              	call malloc
  4847 00003288 50                      	push rax
  4848 00003289 BF08000000              	mov rdi, 8 * 1	; new rib
  4849 0000328E E8542D0000              	call malloc
  4850 00003293 50                      	push rax
  4851 00003294 BF38000000              	mov rdi, 8 * 7	; extended env
  4852 00003299 E8492D0000              	call malloc
  4853 0000329E 488B7D10                	mov rdi, ENV
  4854 000032A2 BE00000000              	mov rsi, 0
  4855 000032A7 BA01000000              	mov rdx, 1
  4856                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
  4857 000032AC 4883FE06                	cmp rsi, 6
  4858 000032B0 7410                    	je .L_lambda_simple_env_end_0047
  4859 000032B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4860 000032B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4861 000032BA 48FFC6                  	inc rsi
  4862 000032BD 48FFC2                  	inc rdx
  4863 000032C0 EBEA                    	jmp .L_lambda_simple_env_loop_0047
  4864                                  .L_lambda_simple_env_end_0047:
  4865 000032C2 5B                      	pop rbx
  4866 000032C3 BE00000000              	mov rsi, 0
  4867                                  .L_lambda_simple_params_loop_0047:	; copy params
  4868 000032C8 4883FE01                	cmp rsi, 1
  4869 000032CC 740E                    	je .L_lambda_simple_params_end_0047
  4870 000032CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4871 000032D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4872 000032D7 48FFC6                  	inc rsi
  4873 000032DA EBEC                    	jmp .L_lambda_simple_params_loop_0047
  4874                                  .L_lambda_simple_params_end_0047:
  4875 000032DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4876 000032DF 4889C3                  	mov rbx, rax
  4877 000032E2 58                      	pop rax
  4878 000032E3 C60004                  	mov byte [rax], T_closure
  4879 000032E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4880 000032EA 48C74009[F4320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
  4881 000032F2 EB1F                    	jmp .L_lambda_simple_end_0047
  4882                                  .L_lambda_simple_code_0047:	; lambda-simple body
  4883 000032F4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4884 000032FA 740B                    	je .L_lambda_simple_arity_check_ok_0047
  4885 000032FC FF742410                	push qword [rsp + 8 * 2]
  4886 00003300 6A01                    	push 1
  4887 00003302 E9992C0000              	jmp L_error_incorrect_arity_simple
  4888                                  .L_lambda_simple_arity_check_ok_0047:
  4889 00003307 C8000000                	enter 0, 0
  4890 0000330B 488B4520                	mov rax, PARAM(0)	; param y
  4891 0000330F C9                      	leave
  4892 00003310 C21800                  	ret AND_KILL_FRAME(1)
  4893                                  .L_lambda_simple_end_0047:	; new closure is in rax
  4894 00003313 C9                      	leave
  4895 00003314 C21800                  	ret AND_KILL_FRAME(1)
  4896                                  .L_lambda_simple_end_0046:	; new closure is in rax
  4897 00003317 50                      	push rax
  4898 00003318 6A01                    	push 1	; arg count
  4899 0000331A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4900 0000331F E8C32C0000              	call malloc
  4901 00003324 50                      	push rax
  4902 00003325 BF08000000              	mov rdi, 8 * 1	; new rib
  4903 0000332A E8B82C0000              	call malloc
  4904 0000332F 50                      	push rax
  4905 00003330 BF30000000              	mov rdi, 8 * 6	; extended env
  4906 00003335 E8AD2C0000              	call malloc
  4907 0000333A 488B7D10                	mov rdi, ENV
  4908 0000333E BE00000000              	mov rsi, 0
  4909 00003343 BA01000000              	mov rdx, 1
  4910                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
  4911 00003348 4883FE05                	cmp rsi, 5
  4912 0000334C 7410                    	je .L_lambda_simple_env_end_0048
  4913 0000334E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4914 00003352 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4915 00003356 48FFC6                  	inc rsi
  4916 00003359 48FFC2                  	inc rdx
  4917 0000335C EBEA                    	jmp .L_lambda_simple_env_loop_0048
  4918                                  .L_lambda_simple_env_end_0048:
  4919 0000335E 5B                      	pop rbx
  4920 0000335F BE00000000              	mov rsi, 0
  4921                                  .L_lambda_simple_params_loop_0048:	; copy params
  4922 00003364 4883FE01                	cmp rsi, 1
  4923 00003368 740E                    	je .L_lambda_simple_params_end_0048
  4924 0000336A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4925 0000336F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4926 00003373 48FFC6                  	inc rsi
  4927 00003376 EBEC                    	jmp .L_lambda_simple_params_loop_0048
  4928                                  .L_lambda_simple_params_end_0048:
  4929 00003378 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4930 0000337B 4889C3                  	mov rbx, rax
  4931 0000337E 58                      	pop rax
  4932 0000337F C60004                  	mov byte [rax], T_closure
  4933 00003382 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4934 00003386 48C74009[93330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
  4935 0000338E E99B010000              	jmp .L_lambda_simple_end_0048
  4936                                  .L_lambda_simple_code_0048:	; lambda-simple body
  4937 00003393 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4938 00003399 740B                    	je .L_lambda_simple_arity_check_ok_0048
  4939 0000339B FF742410                	push qword [rsp + 8 * 2]
  4940 0000339F 6A01                    	push 1
  4941 000033A1 E9FA2B0000              	jmp L_error_incorrect_arity_simple
  4942                                  .L_lambda_simple_arity_check_ok_0048:
  4943 000033A6 C8000000                	enter 0, 0
  4944 000033AA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4945 000033AF E8332C0000              	call malloc
  4946 000033B4 50                      	push rax
  4947 000033B5 BF08000000              	mov rdi, 8 * 1	; new rib
  4948 000033BA E8282C0000              	call malloc
  4949 000033BF 50                      	push rax
  4950 000033C0 BF38000000              	mov rdi, 8 * 7	; extended env
  4951 000033C5 E81D2C0000              	call malloc
  4952 000033CA 488B7D10                	mov rdi, ENV
  4953 000033CE BE00000000              	mov rsi, 0
  4954 000033D3 BA01000000              	mov rdx, 1
  4955                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
  4956 000033D8 4883FE06                	cmp rsi, 6
  4957 000033DC 7410                    	je .L_lambda_simple_env_end_0049
  4958 000033DE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4959 000033E2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4960 000033E6 48FFC6                  	inc rsi
  4961 000033E9 48FFC2                  	inc rdx
  4962 000033EC EBEA                    	jmp .L_lambda_simple_env_loop_0049
  4963                                  .L_lambda_simple_env_end_0049:
  4964 000033EE 5B                      	pop rbx
  4965 000033EF BE00000000              	mov rsi, 0
  4966                                  .L_lambda_simple_params_loop_0049:	; copy params
  4967 000033F4 4883FE01                	cmp rsi, 1
  4968 000033F8 740E                    	je .L_lambda_simple_params_end_0049
  4969 000033FA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4970 000033FF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4971 00003403 48FFC6                  	inc rsi
  4972 00003406 EBEC                    	jmp .L_lambda_simple_params_loop_0049
  4973                                  .L_lambda_simple_params_end_0049:
  4974 00003408 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4975 0000340B 4889C3                  	mov rbx, rax
  4976 0000340E 58                      	pop rax
  4977 0000340F C60004                  	mov byte [rax], T_closure
  4978 00003412 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4979 00003416 48C74009[23340000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
  4980 0000341E E907010000              	jmp .L_lambda_simple_end_0049
  4981                                  .L_lambda_simple_code_0049:	; lambda-simple body
  4982 00003423 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4983 00003429 740B                    	je .L_lambda_simple_arity_check_ok_0049
  4984 0000342B FF742410                	push qword [rsp + 8 * 2]
  4985 0000342F 6A01                    	push 1
  4986 00003431 E96A2B0000              	jmp L_error_incorrect_arity_simple
  4987                                  .L_lambda_simple_arity_check_ok_0049:
  4988 00003436 C8000000                	enter 0, 0
  4989 0000343A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4990 0000343F E8A32B0000              	call malloc
  4991 00003444 50                      	push rax
  4992 00003445 BF08000000              	mov rdi, 8 * 1	; new rib
  4993 0000344A E8982B0000              	call malloc
  4994 0000344F 50                      	push rax
  4995 00003450 BF40000000              	mov rdi, 8 * 8	; extended env
  4996 00003455 E88D2B0000              	call malloc
  4997 0000345A 488B7D10                	mov rdi, ENV
  4998 0000345E BE00000000              	mov rsi, 0
  4999 00003463 BA01000000              	mov rdx, 1
  5000                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
  5001 00003468 4883FE07                	cmp rsi, 7
  5002 0000346C 7410                    	je .L_lambda_simple_env_end_004a
  5003 0000346E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5004 00003472 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5005 00003476 48FFC6                  	inc rsi
  5006 00003479 48FFC2                  	inc rdx
  5007 0000347C EBEA                    	jmp .L_lambda_simple_env_loop_004a
  5008                                  .L_lambda_simple_env_end_004a:
  5009 0000347E 5B                      	pop rbx
  5010 0000347F BE00000000              	mov rsi, 0
  5011                                  .L_lambda_simple_params_loop_004a:	; copy params
  5012 00003484 4883FE01                	cmp rsi, 1
  5013 00003488 740E                    	je .L_lambda_simple_params_end_004a
  5014 0000348A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5015 0000348F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5016 00003493 48FFC6                  	inc rsi
  5017 00003496 EBEC                    	jmp .L_lambda_simple_params_loop_004a
  5018                                  .L_lambda_simple_params_end_004a:
  5019 00003498 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5020 0000349B 4889C3                  	mov rbx, rax
  5021 0000349E 58                      	pop rax
  5022 0000349F C60004                  	mov byte [rax], T_closure
  5023 000034A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5024 000034A6 48C74009[B0340000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
  5025 000034AE EB76                    	jmp .L_lambda_simple_end_004a
  5026                                  .L_lambda_simple_code_004a:	; lambda-simple body
  5027 000034B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5028 000034B6 740B                    	je .L_lambda_simple_arity_check_ok_004a
  5029 000034B8 FF742410                	push qword [rsp + 8 * 2]
  5030 000034BC 6A01                    	push 1
  5031 000034BE E9DD2A0000              	jmp L_error_incorrect_arity_simple
  5032                                  .L_lambda_simple_arity_check_ok_004a:
  5033 000034C3 C8000000                	enter 0, 0
  5034                                  	; preparing a tail-call
  5035 000034C7 488B4510                	mov rax, ENV
  5036 000034CB 488B00                  	mov rax, qword [rax + 8 * 0]
  5037 000034CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  5038 000034D1 50                      	push rax
  5039 000034D2 6A01                    	push 1	; arg count
  5040                                  	; preparing a non-tail-call
  5041 000034D4 488B4510                	mov rax, ENV
  5042 000034D8 488B4008                	mov rax, qword [rax + 8 * 1]
  5043 000034DC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5044 000034DF 50                      	push rax
  5045 000034E0 6A01                    	push 1	; arg count
  5046 000034E2 488B4520                	mov rax, PARAM(0)	; param c
  5047 000034E6 803804                  	cmp byte [rax], T_closure
  5048 000034E9 0F854F2A0000            	jne L_error_non_closure
  5049 000034EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  5050 000034F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5051 000034F5 803804                  	cmp byte [rax], T_closure
  5052 000034F8 0F85402A0000            	jne L_error_non_closure
  5053 000034FE FF7001                  	push SOB_CLOSURE_ENV(rax)
  5054 00003501 FF7508                  	push qword [rbp + 8 * 1]
  5055                                   ; old ret addr	pop rbp
  5056                                  ; restore the old rbp	mov rbx, 1
  5057 00003504 4883C303                	add rbx, 3
  5058                                  	mov rdi, dword [rbp + 8*2]
  5058          ******************       error: mismatch in operand sizes
  5059                                  .L_tc_recycle_frame_loop_001b:
  5060 00003508 4883FB00                	cmp rbx, 0
  5061 0000350C 7411                    je .L_tc_recycle_frame_done_001b
  5062 0000350E 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5063 00003512 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5064 00003517 48FFCF                  	dec rdi
  5065 0000351A 48FFCB                  	dec rbx
  5066 0000351D EBE9                    jmp .L_tc_recycle_frame_loop_001b
  5067                                  .L_tc_recycle_frame_done_001b:
  5068 0000351F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5069 00003522 C9                      	leave
  5070 00003523 C21800                  	ret AND_KILL_FRAME(1)
  5071                                  .L_lambda_simple_end_004a:	; new closure is in rax
  5072 00003526 C9                      	leave
  5073 00003527 C21800                  	ret AND_KILL_FRAME(1)
  5074                                  .L_lambda_simple_end_0049:	; new closure is in rax
  5075 0000352A C9                      	leave
  5076 0000352B C21800                  	ret AND_KILL_FRAME(1)
  5077                                  .L_lambda_simple_end_0048:	; new closure is in rax
  5078 0000352E 803804                  	cmp byte [rax], T_closure
  5079 00003531 0F85072A0000            	jne L_error_non_closure
  5080 00003537 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5081 0000353A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5082 0000353D 803804                  	cmp byte [rax], T_closure
  5083 00003540 0F85F8290000            	jne L_error_non_closure
  5084 00003546 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5085 00003549 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5086 0000354C 50                      	push rax
  5087 0000354D 6A01                    	push 1	; arg count
  5088                                  	; preparing a non-tail-call
  5089 0000354F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5090 00003554 E88E2A0000              	call malloc
  5091 00003559 50                      	push rax
  5092 0000355A BF08000000              	mov rdi, 8 * 1	; new rib
  5093 0000355F E8832A0000              	call malloc
  5094 00003564 50                      	push rax
  5095 00003565 BF30000000              	mov rdi, 8 * 6	; extended env
  5096 0000356A E8782A0000              	call malloc
  5097 0000356F 488B7D10                	mov rdi, ENV
  5098 00003573 BE00000000              	mov rsi, 0
  5099 00003578 BA01000000              	mov rdx, 1
  5100                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
  5101 0000357D 4883FE05                	cmp rsi, 5
  5102 00003581 7410                    	je .L_lambda_simple_env_end_004b
  5103 00003583 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5104 00003587 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5105 0000358B 48FFC6                  	inc rsi
  5106 0000358E 48FFC2                  	inc rdx
  5107 00003591 EBEA                    	jmp .L_lambda_simple_env_loop_004b
  5108                                  .L_lambda_simple_env_end_004b:
  5109 00003593 5B                      	pop rbx
  5110 00003594 BE00000000              	mov rsi, 0
  5111                                  .L_lambda_simple_params_loop_004b:	; copy params
  5112 00003599 4883FE01                	cmp rsi, 1
  5113 0000359D 740E                    	je .L_lambda_simple_params_end_004b
  5114 0000359F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5115 000035A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5116 000035A8 48FFC6                  	inc rsi
  5117 000035AB EBEC                    	jmp .L_lambda_simple_params_loop_004b
  5118                                  .L_lambda_simple_params_end_004b:
  5119 000035AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5120 000035B0 4889C3                  	mov rbx, rax
  5121 000035B3 58                      	pop rax
  5122 000035B4 C60004                  	mov byte [rax], T_closure
  5123 000035B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5124 000035BB 48C74009[C8350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
  5125 000035C3 E9D0080000              	jmp .L_lambda_simple_end_004b
  5126                                  .L_lambda_simple_code_004b:	; lambda-simple body
  5127 000035C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5128 000035CE 740B                    	je .L_lambda_simple_arity_check_ok_004b
  5129 000035D0 FF742410                	push qword [rsp + 8 * 2]
  5130 000035D4 6A01                    	push 1
  5131 000035D6 E9C5290000              	jmp L_error_incorrect_arity_simple
  5132                                  .L_lambda_simple_arity_check_ok_004b:
  5133 000035DB C8000000                	enter 0, 0
  5134                                  	; preparing a tail-call
  5135                                  	; preparing a non-tail-call
  5136 000035DF 488B4520                	mov rax, PARAM(0)	; param p
  5137 000035E3 50                      	push rax
  5138 000035E4 6A01                    	push 1	; arg count
  5139 000035E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5140 000035EB E8F7290000              	call malloc
  5141 000035F0 50                      	push rax
  5142 000035F1 BF08000000              	mov rdi, 8 * 1	; new rib
  5143 000035F6 E8EC290000              	call malloc
  5144 000035FB 50                      	push rax
  5145 000035FC BF38000000              	mov rdi, 8 * 7	; extended env
  5146 00003601 E8E1290000              	call malloc
  5147 00003606 488B7D10                	mov rdi, ENV
  5148 0000360A BE00000000              	mov rsi, 0
  5149 0000360F BA01000000              	mov rdx, 1
  5150                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
  5151 00003614 4883FE06                	cmp rsi, 6
  5152 00003618 7410                    	je .L_lambda_simple_env_end_004c
  5153 0000361A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5154 0000361E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5155 00003622 48FFC6                  	inc rsi
  5156 00003625 48FFC2                  	inc rdx
  5157 00003628 EBEA                    	jmp .L_lambda_simple_env_loop_004c
  5158                                  .L_lambda_simple_env_end_004c:
  5159 0000362A 5B                      	pop rbx
  5160 0000362B BE00000000              	mov rsi, 0
  5161                                  .L_lambda_simple_params_loop_004c:	; copy params
  5162 00003630 4883FE01                	cmp rsi, 1
  5163 00003634 740E                    	je .L_lambda_simple_params_end_004c
  5164 00003636 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5165 0000363B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5166 0000363F 48FFC6                  	inc rsi
  5167 00003642 EBEC                    	jmp .L_lambda_simple_params_loop_004c
  5168                                  .L_lambda_simple_params_end_004c:
  5169 00003644 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5170 00003647 4889C3                  	mov rbx, rax
  5171 0000364A 58                      	pop rax
  5172 0000364B C60004                  	mov byte [rax], T_closure
  5173 0000364E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5174 00003652 48C74009[5F360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
  5175 0000365A E97E010000              	jmp .L_lambda_simple_end_004c
  5176                                  .L_lambda_simple_code_004c:	; lambda-simple body
  5177 0000365F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5178 00003665 740B                    	je .L_lambda_simple_arity_check_ok_004c
  5179 00003667 FF742410                	push qword [rsp + 8 * 2]
  5180 0000366B 6A01                    	push 1
  5181 0000366D E92E290000              	jmp L_error_incorrect_arity_simple
  5182                                  .L_lambda_simple_arity_check_ok_004c:
  5183 00003672 C8000000                	enter 0, 0
  5184                                  	; preparing a tail-call
  5185 00003676 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5186 0000367B E867290000              	call malloc
  5187 00003680 50                      	push rax
  5188 00003681 BF08000000              	mov rdi, 8 * 1	; new rib
  5189 00003686 E85C290000              	call malloc
  5190 0000368B 50                      	push rax
  5191 0000368C BF40000000              	mov rdi, 8 * 8	; extended env
  5192 00003691 E851290000              	call malloc
  5193 00003696 488B7D10                	mov rdi, ENV
  5194 0000369A BE00000000              	mov rsi, 0
  5195 0000369F BA01000000              	mov rdx, 1
  5196                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
  5197 000036A4 4883FE07                	cmp rsi, 7
  5198 000036A8 7410                    	je .L_lambda_simple_env_end_004d
  5199 000036AA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5200 000036AE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5201 000036B2 48FFC6                  	inc rsi
  5202 000036B5 48FFC2                  	inc rdx
  5203 000036B8 EBEA                    	jmp .L_lambda_simple_env_loop_004d
  5204                                  .L_lambda_simple_env_end_004d:
  5205 000036BA 5B                      	pop rbx
  5206 000036BB BE00000000              	mov rsi, 0
  5207                                  .L_lambda_simple_params_loop_004d:	; copy params
  5208 000036C0 4883FE01                	cmp rsi, 1
  5209 000036C4 740E                    	je .L_lambda_simple_params_end_004d
  5210 000036C6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5211 000036CB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5212 000036CF 48FFC6                  	inc rsi
  5213 000036D2 EBEC                    	jmp .L_lambda_simple_params_loop_004d
  5214                                  .L_lambda_simple_params_end_004d:
  5215 000036D4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5216 000036D7 4889C3                  	mov rbx, rax
  5217 000036DA 58                      	pop rax
  5218 000036DB C60004                  	mov byte [rax], T_closure
  5219 000036DE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5220 000036E2 48C74009[EF360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
  5221 000036EA E9B6000000              	jmp .L_lambda_simple_end_004d
  5222                                  .L_lambda_simple_code_004d:	; lambda-simple body
  5223 000036EF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5224 000036F5 740B                    	je .L_lambda_simple_arity_check_ok_004d
  5225 000036F7 FF742410                	push qword [rsp + 8 * 2]
  5226 000036FB 6A01                    	push 1
  5227 000036FD E99E280000              	jmp L_error_incorrect_arity_simple
  5228                                  .L_lambda_simple_arity_check_ok_004d:
  5229 00003702 C8000000                	enter 0, 0
  5230 00003706 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5231 0000370B E8D7280000              	call malloc
  5232 00003710 50                      	push rax
  5233 00003711 BF08000000              	mov rdi, 8 * 1	; new rib
  5234 00003716 E8CC280000              	call malloc
  5235 0000371B 50                      	push rax
  5236 0000371C BF48000000              	mov rdi, 8 * 9	; extended env
  5237 00003721 E8C1280000              	call malloc
  5238 00003726 488B7D10                	mov rdi, ENV
  5239 0000372A BE00000000              	mov rsi, 0
  5240 0000372F BA01000000              	mov rdx, 1
  5241                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
  5242 00003734 4883FE08                	cmp rsi, 8
  5243 00003738 7410                    	je .L_lambda_simple_env_end_004e
  5244 0000373A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5245 0000373E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5246 00003742 48FFC6                  	inc rsi
  5247 00003745 48FFC2                  	inc rdx
  5248 00003748 EBEA                    	jmp .L_lambda_simple_env_loop_004e
  5249                                  .L_lambda_simple_env_end_004e:
  5250 0000374A 5B                      	pop rbx
  5251 0000374B BE00000000              	mov rsi, 0
  5252                                  .L_lambda_simple_params_loop_004e:	; copy params
  5253 00003750 4883FE01                	cmp rsi, 1
  5254 00003754 740E                    	je .L_lambda_simple_params_end_004e
  5255 00003756 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5256 0000375B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5257 0000375F 48FFC6                  	inc rsi
  5258 00003762 EBEC                    	jmp .L_lambda_simple_params_loop_004e
  5259                                  .L_lambda_simple_params_end_004e:
  5260 00003764 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5261 00003767 4889C3                  	mov rbx, rax
  5262 0000376A 58                      	pop rax
  5263 0000376B C60004                  	mov byte [rax], T_closure
  5264 0000376E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5265 00003772 48C74009[7C370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
  5266 0000377A EB25                    	jmp .L_lambda_simple_end_004e
  5267                                  .L_lambda_simple_code_004e:	; lambda-simple body
  5268 0000377C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5269 00003782 740B                    	je .L_lambda_simple_arity_check_ok_004e
  5270 00003784 FF742410                	push qword [rsp + 8 * 2]
  5271 00003788 6A01                    	push 1
  5272 0000378A E911280000              	jmp L_error_incorrect_arity_simple
  5273                                  .L_lambda_simple_arity_check_ok_004e:
  5274 0000378F C8000000                	enter 0, 0
  5275 00003793 488B4510                	mov rax, ENV
  5276 00003797 488B00                  	mov rax, qword [rax + 8 * 0]
  5277 0000379A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5278 0000379D C9                      	leave
  5279 0000379E C21800                  	ret AND_KILL_FRAME(1)
  5280                                  .L_lambda_simple_end_004e:	; new closure is in rax
  5281 000037A1 C9                      	leave
  5282 000037A2 C21800                  	ret AND_KILL_FRAME(1)
  5283                                  .L_lambda_simple_end_004d:	; new closure is in rax
  5284 000037A5 50                      	push rax
  5285 000037A6 6A01                    	push 1	; arg count
  5286 000037A8 488B4520                	mov rax, PARAM(0)	; param p
  5287 000037AC 803804                  	cmp byte [rax], T_closure
  5288 000037AF 0F8589270000            	jne L_error_non_closure
  5289 000037B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5290 000037B8 FF7508                  	push qword [rbp + 8 * 1]
  5291                                   ; old ret addr	pop rbp
  5292                                  ; restore the old rbp	mov rbx, 1
  5293 000037BB 4883C303                	add rbx, 3
  5294                                  	mov rdi, dword [rbp + 8*2]
  5294          ******************       error: mismatch in operand sizes
  5295                                  .L_tc_recycle_frame_loop_001d:
  5296 000037BF 4883FB00                	cmp rbx, 0
  5297 000037C3 7411                    je .L_tc_recycle_frame_done_001d
  5298 000037C5 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5299 000037C9 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5300 000037CE 48FFCF                  	dec rdi
  5301 000037D1 48FFCB                  	dec rbx
  5302 000037D4 EBE9                    jmp .L_tc_recycle_frame_loop_001d
  5303                                  .L_tc_recycle_frame_done_001d:
  5304 000037D6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5305 000037D9 C9                      	leave
  5306 000037DA C21800                  	ret AND_KILL_FRAME(1)
  5307                                  .L_lambda_simple_end_004c:	; new closure is in rax
  5308 000037DD 803804                  	cmp byte [rax], T_closure
  5309 000037E0 0F8558270000            	jne L_error_non_closure
  5310 000037E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5311 000037E9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5312 000037EC 50                      	push rax
  5313 000037ED 6A01                    	push 1	; arg count
  5314                                  	; preparing a non-tail-call
  5315                                  	; preparing a non-tail-call
  5316                                  	; preparing a non-tail-call
  5317 000037EF 488B4520                	mov rax, PARAM(0)	; param p
  5318 000037F3 50                      	push rax
  5319 000037F4 6A01                    	push 1	; arg count
  5320 000037F6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5321 000037FB E8E7270000              	call malloc
  5322 00003800 50                      	push rax
  5323 00003801 BF08000000              	mov rdi, 8 * 1	; new rib
  5324 00003806 E8DC270000              	call malloc
  5325 0000380B 50                      	push rax
  5326 0000380C BF38000000              	mov rdi, 8 * 7	; extended env
  5327 00003811 E8D1270000              	call malloc
  5328 00003816 488B7D10                	mov rdi, ENV
  5329 0000381A BE00000000              	mov rsi, 0
  5330 0000381F BA01000000              	mov rdx, 1
  5331                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
  5332 00003824 4883FE06                	cmp rsi, 6
  5333 00003828 7410                    	je .L_lambda_simple_env_end_004f
  5334 0000382A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5335 0000382E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5336 00003832 48FFC6                  	inc rsi
  5337 00003835 48FFC2                  	inc rdx
  5338 00003838 EBEA                    	jmp .L_lambda_simple_env_loop_004f
  5339                                  .L_lambda_simple_env_end_004f:
  5340 0000383A 5B                      	pop rbx
  5341 0000383B BE00000000              	mov rsi, 0
  5342                                  .L_lambda_simple_params_loop_004f:	; copy params
  5343 00003840 4883FE01                	cmp rsi, 1
  5344 00003844 740E                    	je .L_lambda_simple_params_end_004f
  5345 00003846 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5346 0000384B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5347 0000384F 48FFC6                  	inc rsi
  5348 00003852 EBEC                    	jmp .L_lambda_simple_params_loop_004f
  5349                                  .L_lambda_simple_params_end_004f:
  5350 00003854 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5351 00003857 4889C3                  	mov rbx, rax
  5352 0000385A 58                      	pop rax
  5353 0000385B C60004                  	mov byte [rax], T_closure
  5354 0000385E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5355 00003862 48C74009[6F380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
  5356 0000386A E97E010000              	jmp .L_lambda_simple_end_004f
  5357                                  .L_lambda_simple_code_004f:	; lambda-simple body
  5358 0000386F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5359 00003875 740B                    	je .L_lambda_simple_arity_check_ok_004f
  5360 00003877 FF742410                	push qword [rsp + 8 * 2]
  5361 0000387B 6A01                    	push 1
  5362 0000387D E91E270000              	jmp L_error_incorrect_arity_simple
  5363                                  .L_lambda_simple_arity_check_ok_004f:
  5364 00003882 C8000000                	enter 0, 0
  5365                                  	; preparing a tail-call
  5366 00003886 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5367 0000388B E857270000              	call malloc
  5368 00003890 50                      	push rax
  5369 00003891 BF08000000              	mov rdi, 8 * 1	; new rib
  5370 00003896 E84C270000              	call malloc
  5371 0000389B 50                      	push rax
  5372 0000389C BF40000000              	mov rdi, 8 * 8	; extended env
  5373 000038A1 E841270000              	call malloc
  5374 000038A6 488B7D10                	mov rdi, ENV
  5375 000038AA BE00000000              	mov rsi, 0
  5376 000038AF BA01000000              	mov rdx, 1
  5377                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
  5378 000038B4 4883FE07                	cmp rsi, 7
  5379 000038B8 7410                    	je .L_lambda_simple_env_end_0050
  5380 000038BA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5381 000038BE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5382 000038C2 48FFC6                  	inc rsi
  5383 000038C5 48FFC2                  	inc rdx
  5384 000038C8 EBEA                    	jmp .L_lambda_simple_env_loop_0050
  5385                                  .L_lambda_simple_env_end_0050:
  5386 000038CA 5B                      	pop rbx
  5387 000038CB BE00000000              	mov rsi, 0
  5388                                  .L_lambda_simple_params_loop_0050:	; copy params
  5389 000038D0 4883FE01                	cmp rsi, 1
  5390 000038D4 740E                    	je .L_lambda_simple_params_end_0050
  5391 000038D6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5392 000038DB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5393 000038DF 48FFC6                  	inc rsi
  5394 000038E2 EBEC                    	jmp .L_lambda_simple_params_loop_0050
  5395                                  .L_lambda_simple_params_end_0050:
  5396 000038E4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5397 000038E7 4889C3                  	mov rbx, rax
  5398 000038EA 58                      	pop rax
  5399 000038EB C60004                  	mov byte [rax], T_closure
  5400 000038EE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5401 000038F2 48C74009[FF380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
  5402 000038FA E9B6000000              	jmp .L_lambda_simple_end_0050
  5403                                  .L_lambda_simple_code_0050:	; lambda-simple body
  5404 000038FF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5405 00003905 740B                    	je .L_lambda_simple_arity_check_ok_0050
  5406 00003907 FF742410                	push qword [rsp + 8 * 2]
  5407 0000390B 6A01                    	push 1
  5408 0000390D E98E260000              	jmp L_error_incorrect_arity_simple
  5409                                  .L_lambda_simple_arity_check_ok_0050:
  5410 00003912 C8000000                	enter 0, 0
  5411 00003916 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5412 0000391B E8C7260000              	call malloc
  5413 00003920 50                      	push rax
  5414 00003921 BF08000000              	mov rdi, 8 * 1	; new rib
  5415 00003926 E8BC260000              	call malloc
  5416 0000392B 50                      	push rax
  5417 0000392C BF48000000              	mov rdi, 8 * 9	; extended env
  5418 00003931 E8B1260000              	call malloc
  5419 00003936 488B7D10                	mov rdi, ENV
  5420 0000393A BE00000000              	mov rsi, 0
  5421 0000393F BA01000000              	mov rdx, 1
  5422                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
  5423 00003944 4883FE08                	cmp rsi, 8
  5424 00003948 7410                    	je .L_lambda_simple_env_end_0051
  5425 0000394A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5426 0000394E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5427 00003952 48FFC6                  	inc rsi
  5428 00003955 48FFC2                  	inc rdx
  5429 00003958 EBEA                    	jmp .L_lambda_simple_env_loop_0051
  5430                                  .L_lambda_simple_env_end_0051:
  5431 0000395A 5B                      	pop rbx
  5432 0000395B BE00000000              	mov rsi, 0
  5433                                  .L_lambda_simple_params_loop_0051:	; copy params
  5434 00003960 4883FE01                	cmp rsi, 1
  5435 00003964 740E                    	je .L_lambda_simple_params_end_0051
  5436 00003966 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5437 0000396B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5438 0000396F 48FFC6                  	inc rsi
  5439 00003972 EBEC                    	jmp .L_lambda_simple_params_loop_0051
  5440                                  .L_lambda_simple_params_end_0051:
  5441 00003974 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5442 00003977 4889C3                  	mov rbx, rax
  5443 0000397A 58                      	pop rax
  5444 0000397B C60004                  	mov byte [rax], T_closure
  5445 0000397E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5446 00003982 48C74009[8C390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
  5447 0000398A EB25                    	jmp .L_lambda_simple_end_0051
  5448                                  .L_lambda_simple_code_0051:	; lambda-simple body
  5449 0000398C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5450 00003992 740B                    	je .L_lambda_simple_arity_check_ok_0051
  5451 00003994 FF742410                	push qword [rsp + 8 * 2]
  5452 00003998 6A01                    	push 1
  5453 0000399A E901260000              	jmp L_error_incorrect_arity_simple
  5454                                  .L_lambda_simple_arity_check_ok_0051:
  5455 0000399F C8000000                	enter 0, 0
  5456 000039A3 488B4510                	mov rax, ENV
  5457 000039A7 488B00                  	mov rax, qword [rax + 8 * 0]
  5458 000039AA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5459 000039AD C9                      	leave
  5460 000039AE C21800                  	ret AND_KILL_FRAME(1)
  5461                                  .L_lambda_simple_end_0051:	; new closure is in rax
  5462 000039B1 C9                      	leave
  5463 000039B2 C21800                  	ret AND_KILL_FRAME(1)
  5464                                  .L_lambda_simple_end_0050:	; new closure is in rax
  5465 000039B5 50                      	push rax
  5466 000039B6 6A01                    	push 1	; arg count
  5467 000039B8 488B4520                	mov rax, PARAM(0)	; param p
  5468 000039BC 803804                  	cmp byte [rax], T_closure
  5469 000039BF 0F8579250000            	jne L_error_non_closure
  5470 000039C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5471 000039C8 FF7508                  	push qword [rbp + 8 * 1]
  5472                                   ; old ret addr	pop rbp
  5473                                  ; restore the old rbp	mov rbx, 1
  5474 000039CB 4883C303                	add rbx, 3
  5475                                  	mov rdi, dword [rbp + 8*2]
  5475          ******************       error: mismatch in operand sizes
  5476                                  .L_tc_recycle_frame_loop_001e:
  5477 000039CF 4883FB00                	cmp rbx, 0
  5478 000039D3 7411                    je .L_tc_recycle_frame_done_001e
  5479 000039D5 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5480 000039D9 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5481 000039DE 48FFCF                  	dec rdi
  5482 000039E1 48FFCB                  	dec rbx
  5483 000039E4 EBE9                    jmp .L_tc_recycle_frame_loop_001e
  5484                                  .L_tc_recycle_frame_done_001e:
  5485 000039E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5486 000039E9 C9                      	leave
  5487 000039EA C21800                  	ret AND_KILL_FRAME(1)
  5488                                  .L_lambda_simple_end_004f:	; new closure is in rax
  5489 000039ED 803804                  	cmp byte [rax], T_closure
  5490 000039F0 0F8548250000            	jne L_error_non_closure
  5491 000039F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5492 000039F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5493 000039FC 50                      	push rax
  5494 000039FD 6A01                    	push 1	; arg count
  5495 000039FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5496 00003A04 E8DE250000              	call malloc
  5497 00003A09 50                      	push rax
  5498 00003A0A BF08000000              	mov rdi, 8 * 1	; new rib
  5499 00003A0F E8D3250000              	call malloc
  5500 00003A14 50                      	push rax
  5501 00003A15 BF38000000              	mov rdi, 8 * 7	; extended env
  5502 00003A1A E8C8250000              	call malloc
  5503 00003A1F 488B7D10                	mov rdi, ENV
  5504 00003A23 BE00000000              	mov rsi, 0
  5505 00003A28 BA01000000              	mov rdx, 1
  5506                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
  5507 00003A2D 4883FE06                	cmp rsi, 6
  5508 00003A31 7410                    	je .L_lambda_simple_env_end_0052
  5509 00003A33 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5510 00003A37 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5511 00003A3B 48FFC6                  	inc rsi
  5512 00003A3E 48FFC2                  	inc rdx
  5513 00003A41 EBEA                    	jmp .L_lambda_simple_env_loop_0052
  5514                                  .L_lambda_simple_env_end_0052:
  5515 00003A43 5B                      	pop rbx
  5516 00003A44 BE00000000              	mov rsi, 0
  5517                                  .L_lambda_simple_params_loop_0052:	; copy params
  5518 00003A49 4883FE01                	cmp rsi, 1
  5519 00003A4D 740E                    	je .L_lambda_simple_params_end_0052
  5520 00003A4F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5521 00003A54 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5522 00003A58 48FFC6                  	inc rsi
  5523 00003A5B EBEC                    	jmp .L_lambda_simple_params_loop_0052
  5524                                  .L_lambda_simple_params_end_0052:
  5525 00003A5D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5526 00003A60 4889C3                  	mov rbx, rax
  5527 00003A63 58                      	pop rax
  5528 00003A64 C60004                  	mov byte [rax], T_closure
  5529 00003A67 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5530 00003A6B 48C74009[783A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
  5531 00003A73 E9BA010000              	jmp .L_lambda_simple_end_0052
  5532                                  .L_lambda_simple_code_0052:	; lambda-simple body
  5533 00003A78 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5534 00003A7E 740B                    	je .L_lambda_simple_arity_check_ok_0052
  5535 00003A80 FF742410                	push qword [rsp + 8 * 2]
  5536 00003A84 6A01                    	push 1
  5537 00003A86 E915250000              	jmp L_error_incorrect_arity_simple
  5538                                  .L_lambda_simple_arity_check_ok_0052:
  5539 00003A8B C8000000                	enter 0, 0
  5540 00003A8F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5541 00003A94 E84E250000              	call malloc
  5542 00003A99 50                      	push rax
  5543 00003A9A BF08000000              	mov rdi, 8 * 1	; new rib
  5544 00003A9F E843250000              	call malloc
  5545 00003AA4 50                      	push rax
  5546 00003AA5 BF40000000              	mov rdi, 8 * 8	; extended env
  5547 00003AAA E838250000              	call malloc
  5548 00003AAF 488B7D10                	mov rdi, ENV
  5549 00003AB3 BE00000000              	mov rsi, 0
  5550 00003AB8 BA01000000              	mov rdx, 1
  5551                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
  5552 00003ABD 4883FE07                	cmp rsi, 7
  5553 00003AC1 7410                    	je .L_lambda_simple_env_end_0053
  5554 00003AC3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5555 00003AC7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5556 00003ACB 48FFC6                  	inc rsi
  5557 00003ACE 48FFC2                  	inc rdx
  5558 00003AD1 EBEA                    	jmp .L_lambda_simple_env_loop_0053
  5559                                  .L_lambda_simple_env_end_0053:
  5560 00003AD3 5B                      	pop rbx
  5561 00003AD4 BE00000000              	mov rsi, 0
  5562                                  .L_lambda_simple_params_loop_0053:	; copy params
  5563 00003AD9 4883FE01                	cmp rsi, 1
  5564 00003ADD 740E                    	je .L_lambda_simple_params_end_0053
  5565 00003ADF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5566 00003AE4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5567 00003AE8 48FFC6                  	inc rsi
  5568 00003AEB EBEC                    	jmp .L_lambda_simple_params_loop_0053
  5569                                  .L_lambda_simple_params_end_0053:
  5570 00003AED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5571 00003AF0 4889C3                  	mov rbx, rax
  5572 00003AF3 58                      	pop rax
  5573 00003AF4 C60004                  	mov byte [rax], T_closure
  5574 00003AF7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5575 00003AFB 48C74009[083B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
  5576 00003B03 E926010000              	jmp .L_lambda_simple_end_0053
  5577                                  .L_lambda_simple_code_0053:	; lambda-simple body
  5578 00003B08 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5579 00003B0E 740B                    	je .L_lambda_simple_arity_check_ok_0053
  5580 00003B10 FF742410                	push qword [rsp + 8 * 2]
  5581 00003B14 6A01                    	push 1
  5582 00003B16 E985240000              	jmp L_error_incorrect_arity_simple
  5583                                  .L_lambda_simple_arity_check_ok_0053:
  5584 00003B1B C8000000                	enter 0, 0
  5585 00003B1F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5586 00003B24 E8BE240000              	call malloc
  5587 00003B29 50                      	push rax
  5588 00003B2A BF08000000              	mov rdi, 8 * 1	; new rib
  5589 00003B2F E8B3240000              	call malloc
  5590 00003B34 50                      	push rax
  5591 00003B35 BF48000000              	mov rdi, 8 * 9	; extended env
  5592 00003B3A E8A8240000              	call malloc
  5593 00003B3F 488B7D10                	mov rdi, ENV
  5594 00003B43 BE00000000              	mov rsi, 0
  5595 00003B48 BA01000000              	mov rdx, 1
  5596                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
  5597 00003B4D 4883FE08                	cmp rsi, 8
  5598 00003B51 7410                    	je .L_lambda_simple_env_end_0054
  5599 00003B53 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5600 00003B57 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5601 00003B5B 48FFC6                  	inc rsi
  5602 00003B5E 48FFC2                  	inc rdx
  5603 00003B61 EBEA                    	jmp .L_lambda_simple_env_loop_0054
  5604                                  .L_lambda_simple_env_end_0054:
  5605 00003B63 5B                      	pop rbx
  5606 00003B64 BE00000000              	mov rsi, 0
  5607                                  .L_lambda_simple_params_loop_0054:	; copy params
  5608 00003B69 4883FE01                	cmp rsi, 1
  5609 00003B6D 740E                    	je .L_lambda_simple_params_end_0054
  5610 00003B6F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5611 00003B74 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5612 00003B78 48FFC6                  	inc rsi
  5613 00003B7B EBEC                    	jmp .L_lambda_simple_params_loop_0054
  5614                                  .L_lambda_simple_params_end_0054:
  5615 00003B7D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5616 00003B80 4889C3                  	mov rbx, rax
  5617 00003B83 58                      	pop rax
  5618 00003B84 C60004                  	mov byte [rax], T_closure
  5619 00003B87 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5620 00003B8B 48C74009[983B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
  5621 00003B93 E992000000              	jmp .L_lambda_simple_end_0054
  5622                                  .L_lambda_simple_code_0054:	; lambda-simple body
  5623 00003B98 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5624 00003B9E 740B                    	je .L_lambda_simple_arity_check_ok_0054
  5625 00003BA0 FF742410                	push qword [rsp + 8 * 2]
  5626 00003BA4 6A01                    	push 1
  5627 00003BA6 E9F5230000              	jmp L_error_incorrect_arity_simple
  5628                                  .L_lambda_simple_arity_check_ok_0054:
  5629 00003BAB C8000000                	enter 0, 0
  5630                                  	; preparing a tail-call
  5631                                  	; preparing a non-tail-call
  5632 00003BAF 488B4520                	mov rax, PARAM(0)	; param z
  5633 00003BB3 50                      	push rax
  5634 00003BB4 6A01                    	push 1	; arg count
  5635                                  	; preparing a non-tail-call
  5636 00003BB6 488B4510                	mov rax, ENV
  5637 00003BBA 488B00                  	mov rax, qword [rax + 8 * 0]
  5638 00003BBD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  5639 00003BC0 50                      	push rax
  5640 00003BC1 6A01                    	push 1	; arg count
  5641 00003BC3 488B4510                	mov rax, ENV
  5642 00003BC7 488B4008                	mov rax, qword [rax + 8 * 1]
  5643 00003BCB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  5644 00003BCE 803804                  	cmp byte [rax], T_closure
  5645 00003BD1 0F8567230000            	jne L_error_non_closure
  5646 00003BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5647 00003BDA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5648 00003BDD 803804                  	cmp byte [rax], T_closure
  5649 00003BE0 0F8558230000            	jne L_error_non_closure
  5650 00003BE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5651 00003BE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5652 00003BEC 50                      	push rax
  5653 00003BED 6A01                    	push 1	; arg count
  5654 00003BEF 488B4510                	mov rax, ENV
  5655 00003BF3 488B00                  	mov rax, qword [rax + 8 * 0]
  5656 00003BF6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  5657 00003BF9 803804                  	cmp byte [rax], T_closure
  5658 00003BFC 0F853C230000            	jne L_error_non_closure
  5659 00003C02 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5660 00003C05 FF7508                  	push qword [rbp + 8 * 1]
  5661                                   ; old ret addr	pop rbp
  5662                                  ; restore the old rbp	mov rbx, 1
  5663 00003C08 4883C303                	add rbx, 3
  5664                                  	mov rdi, dword [rbp + 8*2]
  5664          ******************       error: mismatch in operand sizes
  5665                                  .L_tc_recycle_frame_loop_001f:
  5666 00003C0C 4883FB00                	cmp rbx, 0
  5667 00003C10 7411                    je .L_tc_recycle_frame_done_001f
  5668 00003C12 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5669 00003C16 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5670 00003C1B 48FFCF                  	dec rdi
  5671 00003C1E 48FFCB                  	dec rbx
  5672 00003C21 EBE9                    jmp .L_tc_recycle_frame_loop_001f
  5673                                  .L_tc_recycle_frame_done_001f:
  5674 00003C23 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5675 00003C26 C9                      	leave
  5676 00003C27 C21800                  	ret AND_KILL_FRAME(1)
  5677                                  .L_lambda_simple_end_0054:	; new closure is in rax
  5678 00003C2A C9                      	leave
  5679 00003C2B C21800                  	ret AND_KILL_FRAME(1)
  5680                                  .L_lambda_simple_end_0053:	; new closure is in rax
  5681 00003C2E C9                      	leave
  5682 00003C2F C21800                  	ret AND_KILL_FRAME(1)
  5683                                  .L_lambda_simple_end_0052:	; new closure is in rax
  5684 00003C32 803804                  	cmp byte [rax], T_closure
  5685 00003C35 0F8503230000            	jne L_error_non_closure
  5686 00003C3B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5687 00003C3E FF5009                  	call SOB_CLOSURE_CODE(rax)
  5688 00003C41 50                      	push rax
  5689 00003C42 6A01                    	push 1	; arg count
  5690 00003C44 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5691 00003C49 E899230000              	call malloc
  5692 00003C4E 50                      	push rax
  5693 00003C4F BF08000000              	mov rdi, 8 * 1	; new rib
  5694 00003C54 E88E230000              	call malloc
  5695 00003C59 50                      	push rax
  5696 00003C5A BF38000000              	mov rdi, 8 * 7	; extended env
  5697 00003C5F E883230000              	call malloc
  5698 00003C64 488B7D10                	mov rdi, ENV
  5699 00003C68 BE00000000              	mov rsi, 0
  5700 00003C6D BA01000000              	mov rdx, 1
  5701                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
  5702 00003C72 4883FE06                	cmp rsi, 6
  5703 00003C76 7410                    	je .L_lambda_simple_env_end_0055
  5704 00003C78 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5705 00003C7C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5706 00003C80 48FFC6                  	inc rsi
  5707 00003C83 48FFC2                  	inc rdx
  5708 00003C86 EBEA                    	jmp .L_lambda_simple_env_loop_0055
  5709                                  .L_lambda_simple_env_end_0055:
  5710 00003C88 5B                      	pop rbx
  5711 00003C89 BE00000000              	mov rsi, 0
  5712                                  .L_lambda_simple_params_loop_0055:	; copy params
  5713 00003C8E 4883FE01                	cmp rsi, 1
  5714 00003C92 740E                    	je .L_lambda_simple_params_end_0055
  5715 00003C94 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5716 00003C99 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5717 00003C9D 48FFC6                  	inc rsi
  5718 00003CA0 EBEC                    	jmp .L_lambda_simple_params_loop_0055
  5719                                  .L_lambda_simple_params_end_0055:
  5720 00003CA2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5721 00003CA5 4889C3                  	mov rbx, rax
  5722 00003CA8 58                      	pop rax
  5723 00003CA9 C60004                  	mov byte [rax], T_closure
  5724 00003CAC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5725 00003CB0 48C74009[BD3C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
  5726 00003CB8 E99B010000              	jmp .L_lambda_simple_end_0055
  5727                                  .L_lambda_simple_code_0055:	; lambda-simple body
  5728 00003CBD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5729 00003CC3 740B                    	je .L_lambda_simple_arity_check_ok_0055
  5730 00003CC5 FF742410                	push qword [rsp + 8 * 2]
  5731 00003CC9 6A01                    	push 1
  5732 00003CCB E9D0220000              	jmp L_error_incorrect_arity_simple
  5733                                  .L_lambda_simple_arity_check_ok_0055:
  5734 00003CD0 C8000000                	enter 0, 0
  5735 00003CD4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5736 00003CD9 E809230000              	call malloc
  5737 00003CDE 50                      	push rax
  5738 00003CDF BF08000000              	mov rdi, 8 * 1	; new rib
  5739 00003CE4 E8FE220000              	call malloc
  5740 00003CE9 50                      	push rax
  5741 00003CEA BF40000000              	mov rdi, 8 * 8	; extended env
  5742 00003CEF E8F3220000              	call malloc
  5743 00003CF4 488B7D10                	mov rdi, ENV
  5744 00003CF8 BE00000000              	mov rsi, 0
  5745 00003CFD BA01000000              	mov rdx, 1
  5746                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
  5747 00003D02 4883FE07                	cmp rsi, 7
  5748 00003D06 7410                    	je .L_lambda_simple_env_end_0056
  5749 00003D08 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5750 00003D0C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5751 00003D10 48FFC6                  	inc rsi
  5752 00003D13 48FFC2                  	inc rdx
  5753 00003D16 EBEA                    	jmp .L_lambda_simple_env_loop_0056
  5754                                  .L_lambda_simple_env_end_0056:
  5755 00003D18 5B                      	pop rbx
  5756 00003D19 BE00000000              	mov rsi, 0
  5757                                  .L_lambda_simple_params_loop_0056:	; copy params
  5758 00003D1E 4883FE01                	cmp rsi, 1
  5759 00003D22 740E                    	je .L_lambda_simple_params_end_0056
  5760 00003D24 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5761 00003D29 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5762 00003D2D 48FFC6                  	inc rsi
  5763 00003D30 EBEC                    	jmp .L_lambda_simple_params_loop_0056
  5764                                  .L_lambda_simple_params_end_0056:
  5765 00003D32 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5766 00003D35 4889C3                  	mov rbx, rax
  5767 00003D38 58                      	pop rax
  5768 00003D39 C60004                  	mov byte [rax], T_closure
  5769 00003D3C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5770 00003D40 48C74009[4D3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
  5771 00003D48 E907010000              	jmp .L_lambda_simple_end_0056
  5772                                  .L_lambda_simple_code_0056:	; lambda-simple body
  5773 00003D4D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5774 00003D53 740B                    	je .L_lambda_simple_arity_check_ok_0056
  5775 00003D55 FF742410                	push qword [rsp + 8 * 2]
  5776 00003D59 6A01                    	push 1
  5777 00003D5B E940220000              	jmp L_error_incorrect_arity_simple
  5778                                  .L_lambda_simple_arity_check_ok_0056:
  5779 00003D60 C8000000                	enter 0, 0
  5780 00003D64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5781 00003D69 E879220000              	call malloc
  5782 00003D6E 50                      	push rax
  5783 00003D6F BF08000000              	mov rdi, 8 * 1	; new rib
  5784 00003D74 E86E220000              	call malloc
  5785 00003D79 50                      	push rax
  5786 00003D7A BF48000000              	mov rdi, 8 * 9	; extended env
  5787 00003D7F E863220000              	call malloc
  5788 00003D84 488B7D10                	mov rdi, ENV
  5789 00003D88 BE00000000              	mov rsi, 0
  5790 00003D8D BA01000000              	mov rdx, 1
  5791                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
  5792 00003D92 4883FE08                	cmp rsi, 8
  5793 00003D96 7410                    	je .L_lambda_simple_env_end_0057
  5794 00003D98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5795 00003D9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5796 00003DA0 48FFC6                  	inc rsi
  5797 00003DA3 48FFC2                  	inc rdx
  5798 00003DA6 EBEA                    	jmp .L_lambda_simple_env_loop_0057
  5799                                  .L_lambda_simple_env_end_0057:
  5800 00003DA8 5B                      	pop rbx
  5801 00003DA9 BE00000000              	mov rsi, 0
  5802                                  .L_lambda_simple_params_loop_0057:	; copy params
  5803 00003DAE 4883FE01                	cmp rsi, 1
  5804 00003DB2 740E                    	je .L_lambda_simple_params_end_0057
  5805 00003DB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5806 00003DB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5807 00003DBD 48FFC6                  	inc rsi
  5808 00003DC0 EBEC                    	jmp .L_lambda_simple_params_loop_0057
  5809                                  .L_lambda_simple_params_end_0057:
  5810 00003DC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5811 00003DC5 4889C3                  	mov rbx, rax
  5812 00003DC8 58                      	pop rax
  5813 00003DC9 C60004                  	mov byte [rax], T_closure
  5814 00003DCC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5815 00003DD0 48C74009[DA3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
  5816 00003DD8 EB76                    	jmp .L_lambda_simple_end_0057
  5817                                  .L_lambda_simple_code_0057:	; lambda-simple body
  5818 00003DDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5819 00003DE0 740B                    	je .L_lambda_simple_arity_check_ok_0057
  5820 00003DE2 FF742410                	push qword [rsp + 8 * 2]
  5821 00003DE6 6A01                    	push 1
  5822 00003DE8 E9B3210000              	jmp L_error_incorrect_arity_simple
  5823                                  .L_lambda_simple_arity_check_ok_0057:
  5824 00003DED C8000000                	enter 0, 0
  5825                                  	; preparing a tail-call
  5826 00003DF1 488B4510                	mov rax, ENV
  5827 00003DF5 488B00                  	mov rax, qword [rax + 8 * 0]
  5828 00003DF8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  5829 00003DFB 50                      	push rax
  5830 00003DFC 6A01                    	push 1	; arg count
  5831                                  	; preparing a non-tail-call
  5832 00003DFE 488B4510                	mov rax, ENV
  5833 00003E02 488B4008                	mov rax, qword [rax + 8 * 1]
  5834 00003E06 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5835 00003E09 50                      	push rax
  5836 00003E0A 6A01                    	push 1	; arg count
  5837 00003E0C 488B4520                	mov rax, PARAM(0)	; param c
  5838 00003E10 803804                  	cmp byte [rax], T_closure
  5839 00003E13 0F8525210000            	jne L_error_non_closure
  5840 00003E19 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5841 00003E1C FF5009                  	call SOB_CLOSURE_CODE(rax)
  5842 00003E1F 803804                  	cmp byte [rax], T_closure
  5843 00003E22 0F8516210000            	jne L_error_non_closure
  5844 00003E28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5845 00003E2B FF7508                  	push qword [rbp + 8 * 1]
  5846                                   ; old ret addr	pop rbp
  5847                                  ; restore the old rbp	mov rbx, 1
  5848 00003E2E 4883C303                	add rbx, 3
  5849                                  	mov rdi, dword [rbp + 8*2]
  5849          ******************       error: mismatch in operand sizes
  5850                                  .L_tc_recycle_frame_loop_0020:
  5851 00003E32 4883FB00                	cmp rbx, 0
  5852 00003E36 7411                    je .L_tc_recycle_frame_done_0020
  5853 00003E38 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5854 00003E3C 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5855 00003E41 48FFCF                  	dec rdi
  5856 00003E44 48FFCB                  	dec rbx
  5857 00003E47 EBE9                    jmp .L_tc_recycle_frame_loop_0020
  5858                                  .L_tc_recycle_frame_done_0020:
  5859 00003E49 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5860 00003E4C C9                      	leave
  5861 00003E4D C21800                  	ret AND_KILL_FRAME(1)
  5862                                  .L_lambda_simple_end_0057:	; new closure is in rax
  5863 00003E50 C9                      	leave
  5864 00003E51 C21800                  	ret AND_KILL_FRAME(1)
  5865                                  .L_lambda_simple_end_0056:	; new closure is in rax
  5866 00003E54 C9                      	leave
  5867 00003E55 C21800                  	ret AND_KILL_FRAME(1)
  5868                                  .L_lambda_simple_end_0055:	; new closure is in rax
  5869 00003E58 803804                  	cmp byte [rax], T_closure
  5870 00003E5B 0F85DD200000            	jne L_error_non_closure
  5871 00003E61 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5872 00003E64 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5873 00003E67 803804                  	cmp byte [rax], T_closure
  5874 00003E6A 0F85CE200000            	jne L_error_non_closure
  5875 00003E70 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5876 00003E73 FF7508                  	push qword [rbp + 8 * 1]
  5877                                   ; old ret addr	pop rbp
  5878                                  ; restore the old rbp	mov rbx, 1
  5879 00003E76 4883C303                	add rbx, 3
  5880                                  	mov rdi, dword [rbp + 8*2]
  5880          ******************       error: mismatch in operand sizes
  5881                                  .L_tc_recycle_frame_loop_001c:
  5882 00003E7A 4883FB00                	cmp rbx, 0
  5883 00003E7E 7411                    je .L_tc_recycle_frame_done_001c
  5884 00003E80 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5885 00003E84 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5886 00003E89 48FFCF                  	dec rdi
  5887 00003E8C 48FFCB                  	dec rbx
  5888 00003E8F EBE9                    jmp .L_tc_recycle_frame_loop_001c
  5889                                  .L_tc_recycle_frame_done_001c:
  5890 00003E91 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5891 00003E94 C9                      	leave
  5892 00003E95 C21800                  	ret AND_KILL_FRAME(1)
  5893                                  .L_lambda_simple_end_004b:	; new closure is in rax
  5894 00003E98 50                      	push rax
  5895 00003E99 6A01                    	push 1	; arg count
  5896 00003E9B 488B4520                	mov rax, PARAM(0)	; param n
  5897 00003E9F 803804                  	cmp byte [rax], T_closure
  5898 00003EA2 0F8596200000            	jne L_error_non_closure
  5899 00003EA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5900 00003EAB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5901 00003EAE 803804                  	cmp byte [rax], T_closure
  5902 00003EB1 0F8587200000            	jne L_error_non_closure
  5903 00003EB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5904 00003EBA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5905 00003EBD 50                      	push rax
  5906 00003EBE 6A01                    	push 1	; arg count
  5907 00003EC0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5908 00003EC5 E81D210000              	call malloc
  5909 00003ECA 50                      	push rax
  5910 00003ECB BF08000000              	mov rdi, 8 * 1	; new rib
  5911 00003ED0 E812210000              	call malloc
  5912 00003ED5 50                      	push rax
  5913 00003ED6 BF30000000              	mov rdi, 8 * 6	; extended env
  5914 00003EDB E807210000              	call malloc
  5915 00003EE0 488B7D10                	mov rdi, ENV
  5916 00003EE4 BE00000000              	mov rsi, 0
  5917 00003EE9 BA01000000              	mov rdx, 1
  5918                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
  5919 00003EEE 4883FE05                	cmp rsi, 5
  5920 00003EF2 7410                    	je .L_lambda_simple_env_end_0058
  5921 00003EF4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5922 00003EF8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5923 00003EFC 48FFC6                  	inc rsi
  5924 00003EFF 48FFC2                  	inc rdx
  5925 00003F02 EBEA                    	jmp .L_lambda_simple_env_loop_0058
  5926                                  .L_lambda_simple_env_end_0058:
  5927 00003F04 5B                      	pop rbx
  5928 00003F05 BE00000000              	mov rsi, 0
  5929                                  .L_lambda_simple_params_loop_0058:	; copy params
  5930 00003F0A 4883FE01                	cmp rsi, 1
  5931 00003F0E 740E                    	je .L_lambda_simple_params_end_0058
  5932 00003F10 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5933 00003F15 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5934 00003F19 48FFC6                  	inc rsi
  5935 00003F1C EBEC                    	jmp .L_lambda_simple_params_loop_0058
  5936                                  .L_lambda_simple_params_end_0058:
  5937 00003F1E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5938 00003F21 4889C3                  	mov rbx, rax
  5939 00003F24 58                      	pop rax
  5940 00003F25 C60004                  	mov byte [rax], T_closure
  5941 00003F28 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5942 00003F2C 48C74009[393F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
  5943 00003F34 E978010000              	jmp .L_lambda_simple_end_0058
  5944                                  .L_lambda_simple_code_0058:	; lambda-simple body
  5945 00003F39 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5946 00003F3F 740B                    	je .L_lambda_simple_arity_check_ok_0058
  5947 00003F41 FF742410                	push qword [rsp + 8 * 2]
  5948 00003F45 6A01                    	push 1
  5949 00003F47 E954200000              	jmp L_error_incorrect_arity_simple
  5950                                  .L_lambda_simple_arity_check_ok_0058:
  5951 00003F4C C8000000                	enter 0, 0
  5952                                  	; preparing a tail-call
  5953 00003F50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5954 00003F55 E88D200000              	call malloc
  5955 00003F5A 50                      	push rax
  5956 00003F5B BF08000000              	mov rdi, 8 * 1	; new rib
  5957 00003F60 E882200000              	call malloc
  5958 00003F65 50                      	push rax
  5959 00003F66 BF38000000              	mov rdi, 8 * 7	; extended env
  5960 00003F6B E877200000              	call malloc
  5961 00003F70 488B7D10                	mov rdi, ENV
  5962 00003F74 BE00000000              	mov rsi, 0
  5963 00003F79 BA01000000              	mov rdx, 1
  5964                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
  5965 00003F7E 4883FE06                	cmp rsi, 6
  5966 00003F82 7410                    	je .L_lambda_simple_env_end_0059
  5967 00003F84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5968 00003F88 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5969 00003F8C 48FFC6                  	inc rsi
  5970 00003F8F 48FFC2                  	inc rdx
  5971 00003F92 EBEA                    	jmp .L_lambda_simple_env_loop_0059
  5972                                  .L_lambda_simple_env_end_0059:
  5973 00003F94 5B                      	pop rbx
  5974 00003F95 BE00000000              	mov rsi, 0
  5975                                  .L_lambda_simple_params_loop_0059:	; copy params
  5976 00003F9A 4883FE01                	cmp rsi, 1
  5977 00003F9E 740E                    	je .L_lambda_simple_params_end_0059
  5978 00003FA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5979 00003FA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5980 00003FA9 48FFC6                  	inc rsi
  5981 00003FAC EBEC                    	jmp .L_lambda_simple_params_loop_0059
  5982                                  .L_lambda_simple_params_end_0059:
  5983 00003FAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5984 00003FB1 4889C3                  	mov rbx, rax
  5985 00003FB4 58                      	pop rax
  5986 00003FB5 C60004                  	mov byte [rax], T_closure
  5987 00003FB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5988 00003FBC 48C74009[C93F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
  5989 00003FC4 E9B0000000              	jmp .L_lambda_simple_end_0059
  5990                                  .L_lambda_simple_code_0059:	; lambda-simple body
  5991 00003FC9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5992 00003FCF 740B                    	je .L_lambda_simple_arity_check_ok_0059
  5993 00003FD1 FF742410                	push qword [rsp + 8 * 2]
  5994 00003FD5 6A01                    	push 1
  5995 00003FD7 E9C41F0000              	jmp L_error_incorrect_arity_simple
  5996                                  .L_lambda_simple_arity_check_ok_0059:
  5997 00003FDC C8000000                	enter 0, 0
  5998 00003FE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5999 00003FE5 E8FD1F0000              	call malloc
  6000 00003FEA 50                      	push rax
  6001 00003FEB BF08000000              	mov rdi, 8 * 1	; new rib
  6002 00003FF0 E8F21F0000              	call malloc
  6003 00003FF5 50                      	push rax
  6004 00003FF6 BF40000000              	mov rdi, 8 * 8	; extended env
  6005 00003FFB E8E71F0000              	call malloc
  6006 00004000 488B7D10                	mov rdi, ENV
  6007 00004004 BE00000000              	mov rsi, 0
  6008 00004009 BA01000000              	mov rdx, 1
  6009                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
  6010 0000400E 4883FE07                	cmp rsi, 7
  6011 00004012 7410                    	je .L_lambda_simple_env_end_005a
  6012 00004014 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6013 00004018 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6014 0000401C 48FFC6                  	inc rsi
  6015 0000401F 48FFC2                  	inc rdx
  6016 00004022 EBEA                    	jmp .L_lambda_simple_env_loop_005a
  6017                                  .L_lambda_simple_env_end_005a:
  6018 00004024 5B                      	pop rbx
  6019 00004025 BE00000000              	mov rsi, 0
  6020                                  .L_lambda_simple_params_loop_005a:	; copy params
  6021 0000402A 4883FE01                	cmp rsi, 1
  6022 0000402E 740E                    	je .L_lambda_simple_params_end_005a
  6023 00004030 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6024 00004035 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6025 00004039 48FFC6                  	inc rsi
  6026 0000403C EBEC                    	jmp .L_lambda_simple_params_loop_005a
  6027                                  .L_lambda_simple_params_end_005a:
  6028 0000403E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6029 00004041 4889C3                  	mov rbx, rax
  6030 00004044 58                      	pop rax
  6031 00004045 C60004                  	mov byte [rax], T_closure
  6032 00004048 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6033 0000404C 48C74009[56400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
  6034 00004054 EB1F                    	jmp .L_lambda_simple_end_005a
  6035                                  .L_lambda_simple_code_005a:	; lambda-simple body
  6036 00004056 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6037 0000405C 740B                    	je .L_lambda_simple_arity_check_ok_005a
  6038 0000405E FF742410                	push qword [rsp + 8 * 2]
  6039 00004062 6A01                    	push 1
  6040 00004064 E9371F0000              	jmp L_error_incorrect_arity_simple
  6041                                  .L_lambda_simple_arity_check_ok_005a:
  6042 00004069 C8000000                	enter 0, 0
  6043 0000406D 488B4520                	mov rax, PARAM(0)	; param b
  6044 00004071 C9                      	leave
  6045 00004072 C21800                  	ret AND_KILL_FRAME(1)
  6046                                  .L_lambda_simple_end_005a:	; new closure is in rax
  6047 00004075 C9                      	leave
  6048 00004076 C21800                  	ret AND_KILL_FRAME(1)
  6049                                  .L_lambda_simple_end_0059:	; new closure is in rax
  6050 00004079 50                      	push rax
  6051 0000407A 6A01                    	push 1	; arg count
  6052 0000407C 488B4520                	mov rax, PARAM(0)	; param p
  6053 00004080 803804                  	cmp byte [rax], T_closure
  6054 00004083 0F85B51E0000            	jne L_error_non_closure
  6055 00004089 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6056 0000408C FF7508                  	push qword [rbp + 8 * 1]
  6057                                   ; old ret addr	pop rbp
  6058                                  ; restore the old rbp	mov rbx, 1
  6059 0000408F 4883C303                	add rbx, 3
  6060                                  	mov rdi, dword [rbp + 8*2]
  6060          ******************       error: mismatch in operand sizes
  6061                                  .L_tc_recycle_frame_loop_0021:
  6062 00004093 4883FB00                	cmp rbx, 0
  6063 00004097 7411                    je .L_tc_recycle_frame_done_0021
  6064 00004099 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6065 0000409D 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6066 000040A2 48FFCF                  	dec rdi
  6067 000040A5 48FFCB                  	dec rbx
  6068 000040A8 EBE9                    jmp .L_tc_recycle_frame_loop_0021
  6069                                  .L_tc_recycle_frame_done_0021:
  6070 000040AA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6071 000040AD C9                      	leave
  6072 000040AE C21800                  	ret AND_KILL_FRAME(1)
  6073                                  .L_lambda_simple_end_0058:	; new closure is in rax
  6074 000040B1 803804                  	cmp byte [rax], T_closure
  6075 000040B4 0F85841E0000            	jne L_error_non_closure
  6076 000040BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  6077 000040BD FF7508                  	push qword [rbp + 8 * 1]
  6078                                   ; old ret addr	pop rbp
  6079                                  ; restore the old rbp	mov rbx, 1
  6080 000040C0 4883C303                	add rbx, 3
  6081                                  	mov rdi, dword [rbp + 8*2]
  6081          ******************       error: mismatch in operand sizes
  6082                                  .L_tc_recycle_frame_loop_001a:
  6083 000040C4 4883FB00                	cmp rbx, 0
  6084 000040C8 7411                    je .L_tc_recycle_frame_done_001a
  6085 000040CA 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6086 000040CE 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6087 000040D3 48FFCF                  	dec rdi
  6088 000040D6 48FFCB                  	dec rbx
  6089 000040D9 EBE9                    jmp .L_tc_recycle_frame_loop_001a
  6090                                  .L_tc_recycle_frame_done_001a:
  6091 000040DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6092 000040DE C9                      	leave
  6093 000040DF C21800                  	ret AND_KILL_FRAME(1)
  6094                                  .L_lambda_simple_end_0043:	; new closure is in rax
  6095 000040E2 50                      	push rax
  6096 000040E3 6A01                    	push 1	; arg count
  6097 000040E5 488B4520                	mov rax, PARAM(0)	; param b
  6098 000040E9 803804                  	cmp byte [rax], T_closure
  6099 000040EC 0F854C1E0000            	jne L_error_non_closure
  6100 000040F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6101 000040F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6102 000040F8 803804                  	cmp byte [rax], T_closure
  6103 000040FB 0F853D1E0000            	jne L_error_non_closure
  6104 00004101 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6105 00004104 FF7508                  	push qword [rbp + 8 * 1]
  6106                                   ; old ret addr	pop rbp
  6107                                  ; restore the old rbp	mov rbx, 1
  6108 00004107 4883C303                	add rbx, 3
  6109                                  	mov rdi, dword [rbp + 8*2]
  6109          ******************       error: mismatch in operand sizes
  6110                                  .L_tc_recycle_frame_loop_0019:
  6111 0000410B 4883FB00                	cmp rbx, 0
  6112 0000410F 7411                    je .L_tc_recycle_frame_done_0019
  6113 00004111 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6114 00004115 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6115 0000411A 48FFCF                  	dec rdi
  6116 0000411D 48FFCB                  	dec rbx
  6117 00004120 EBE9                    jmp .L_tc_recycle_frame_loop_0019
  6118                                  .L_tc_recycle_frame_done_0019:
  6119 00004122 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6120 00004125 C9                      	leave
  6121 00004126 C21800                  	ret AND_KILL_FRAME(1)
  6122                                  .L_lambda_simple_end_0042:	; new closure is in rax
  6123 00004129 C9                      	leave
  6124 0000412A C21800                  	ret AND_KILL_FRAME(1)
  6125                                  .L_lambda_simple_end_0041:	; new closure is in rax
  6126 0000412D 803804                  	cmp byte [rax], T_closure
  6127 00004130 0F85081E0000            	jne L_error_non_closure
  6128 00004136 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6129 00004139 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6130 0000413C 803804                  	cmp byte [rax], T_closure
  6131 0000413F 0F85F91D0000            	jne L_error_non_closure
  6132 00004145 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6133 00004148 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6134 0000414B 50                      	push rax
  6135 0000414C 6A01                    	push 1	; arg count
  6136 0000414E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6137 00004153 E88F1E0000              	call malloc
  6138 00004158 50                      	push rax
  6139 00004159 BF08000000              	mov rdi, 8 * 1	; new rib
  6140 0000415E E8841E0000              	call malloc
  6141 00004163 50                      	push rax
  6142 00004164 BF18000000              	mov rdi, 8 * 3	; extended env
  6143 00004169 E8791E0000              	call malloc
  6144 0000416E 488B7D10                	mov rdi, ENV
  6145 00004172 BE00000000              	mov rsi, 0
  6146 00004177 BA01000000              	mov rdx, 1
  6147                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
  6148 0000417C 4883FE02                	cmp rsi, 2
  6149 00004180 7410                    	je .L_lambda_simple_env_end_005b
  6150 00004182 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6151 00004186 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6152 0000418A 48FFC6                  	inc rsi
  6153 0000418D 48FFC2                  	inc rdx
  6154 00004190 EBEA                    	jmp .L_lambda_simple_env_loop_005b
  6155                                  .L_lambda_simple_env_end_005b:
  6156 00004192 5B                      	pop rbx
  6157 00004193 BE00000000              	mov rsi, 0
  6158                                  .L_lambda_simple_params_loop_005b:	; copy params
  6159 00004198 4883FE01                	cmp rsi, 1
  6160 0000419C 740E                    	je .L_lambda_simple_params_end_005b
  6161 0000419E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6162 000041A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6163 000041A7 48FFC6                  	inc rsi
  6164 000041AA EBEC                    	jmp .L_lambda_simple_params_loop_005b
  6165                                  .L_lambda_simple_params_end_005b:
  6166 000041AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6167 000041AF 4889C3                  	mov rbx, rax
  6168 000041B2 58                      	pop rax
  6169 000041B3 C60004                  	mov byte [rax], T_closure
  6170 000041B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6171 000041BA 48C74009[C7410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
  6172 000041C2 E94D030000              	jmp .L_lambda_simple_end_005b
  6173                                  .L_lambda_simple_code_005b:	; lambda-simple body
  6174 000041C7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6175 000041CD 740B                    	je .L_lambda_simple_arity_check_ok_005b
  6176 000041CF FF742410                	push qword [rsp + 8 * 2]
  6177 000041D3 6A01                    	push 1
  6178 000041D5 E9C61D0000              	jmp L_error_incorrect_arity_simple
  6179                                  .L_lambda_simple_arity_check_ok_005b:
  6180 000041DA C8000000                	enter 0, 0
  6181                                  	; preparing a tail-call
  6182 000041DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6183 000041E3 E8FF1D0000              	call malloc
  6184 000041E8 50                      	push rax
  6185 000041E9 BF08000000              	mov rdi, 8 * 1	; new rib
  6186 000041EE E8F41D0000              	call malloc
  6187 000041F3 50                      	push rax
  6188 000041F4 BF20000000              	mov rdi, 8 * 4	; extended env
  6189 000041F9 E8E91D0000              	call malloc
  6190 000041FE 488B7D10                	mov rdi, ENV
  6191 00004202 BE00000000              	mov rsi, 0
  6192 00004207 BA01000000              	mov rdx, 1
  6193                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
  6194 0000420C 4883FE03                	cmp rsi, 3
  6195 00004210 7410                    	je .L_lambda_simple_env_end_005c
  6196 00004212 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6197 00004216 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6198 0000421A 48FFC6                  	inc rsi
  6199 0000421D 48FFC2                  	inc rdx
  6200 00004220 EBEA                    	jmp .L_lambda_simple_env_loop_005c
  6201                                  .L_lambda_simple_env_end_005c:
  6202 00004222 5B                      	pop rbx
  6203 00004223 BE00000000              	mov rsi, 0
  6204                                  .L_lambda_simple_params_loop_005c:	; copy params
  6205 00004228 4883FE01                	cmp rsi, 1
  6206 0000422C 740E                    	je .L_lambda_simple_params_end_005c
  6207 0000422E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6208 00004233 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6209 00004237 48FFC6                  	inc rsi
  6210 0000423A EBEC                    	jmp .L_lambda_simple_params_loop_005c
  6211                                  .L_lambda_simple_params_end_005c:
  6212 0000423C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6213 0000423F 4889C3                  	mov rbx, rax
  6214 00004242 58                      	pop rax
  6215 00004243 C60004                  	mov byte [rax], T_closure
  6216 00004246 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6217 0000424A 48C74009[57420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
  6218 00004252 E9B6000000              	jmp .L_lambda_simple_end_005c
  6219                                  .L_lambda_simple_code_005c:	; lambda-simple body
  6220 00004257 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6221 0000425D 740B                    	je .L_lambda_simple_arity_check_ok_005c
  6222 0000425F FF742410                	push qword [rsp + 8 * 2]
  6223 00004263 6A01                    	push 1
  6224 00004265 E9361D0000              	jmp L_error_incorrect_arity_simple
  6225                                  .L_lambda_simple_arity_check_ok_005c:
  6226 0000426A C8000000                	enter 0, 0
  6227 0000426E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6228 00004273 E86F1D0000              	call malloc
  6229 00004278 50                      	push rax
  6230 00004279 BF08000000              	mov rdi, 8 * 1	; new rib
  6231 0000427E E8641D0000              	call malloc
  6232 00004283 50                      	push rax
  6233 00004284 BF28000000              	mov rdi, 8 * 5	; extended env
  6234 00004289 E8591D0000              	call malloc
  6235 0000428E 488B7D10                	mov rdi, ENV
  6236 00004292 BE00000000              	mov rsi, 0
  6237 00004297 BA01000000              	mov rdx, 1
  6238                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
  6239 0000429C 4883FE04                	cmp rsi, 4
  6240 000042A0 7410                    	je .L_lambda_simple_env_end_005d
  6241 000042A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6242 000042A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6243 000042AA 48FFC6                  	inc rsi
  6244 000042AD 48FFC2                  	inc rdx
  6245 000042B0 EBEA                    	jmp .L_lambda_simple_env_loop_005d
  6246                                  .L_lambda_simple_env_end_005d:
  6247 000042B2 5B                      	pop rbx
  6248 000042B3 BE00000000              	mov rsi, 0
  6249                                  .L_lambda_simple_params_loop_005d:	; copy params
  6250 000042B8 4883FE01                	cmp rsi, 1
  6251 000042BC 740E                    	je .L_lambda_simple_params_end_005d
  6252 000042BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6253 000042C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6254 000042C7 48FFC6                  	inc rsi
  6255 000042CA EBEC                    	jmp .L_lambda_simple_params_loop_005d
  6256                                  .L_lambda_simple_params_end_005d:
  6257 000042CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6258 000042CF 4889C3                  	mov rbx, rax
  6259 000042D2 58                      	pop rax
  6260 000042D3 C60004                  	mov byte [rax], T_closure
  6261 000042D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6262 000042DA 48C74009[E4420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
  6263 000042E2 EB25                    	jmp .L_lambda_simple_end_005d
  6264                                  .L_lambda_simple_code_005d:	; lambda-simple body
  6265 000042E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6266 000042EA 740B                    	je .L_lambda_simple_arity_check_ok_005d
  6267 000042EC FF742410                	push qword [rsp + 8 * 2]
  6268 000042F0 6A01                    	push 1
  6269 000042F2 E9A91C0000              	jmp L_error_incorrect_arity_simple
  6270                                  .L_lambda_simple_arity_check_ok_005d:
  6271 000042F7 C8000000                	enter 0, 0
  6272 000042FB 488B4510                	mov rax, ENV
  6273 000042FF 488B00                  	mov rax, qword [rax + 8 * 0]
  6274 00004302 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  6275 00004305 C9                      	leave
  6276 00004306 C21800                  	ret AND_KILL_FRAME(1)
  6277                                  .L_lambda_simple_end_005d:	; new closure is in rax
  6278 00004309 C9                      	leave
  6279 0000430A C21800                  	ret AND_KILL_FRAME(1)
  6280                                  .L_lambda_simple_end_005c:	; new closure is in rax
  6281 0000430D 50                      	push rax
  6282 0000430E 6A01                    	push 1	; arg count
  6283                                  	; preparing a non-tail-call
  6284 00004310 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6285 00004315 E8CD1C0000              	call malloc
  6286 0000431A 50                      	push rax
  6287 0000431B BF08000000              	mov rdi, 8 * 1	; new rib
  6288 00004320 E8C21C0000              	call malloc
  6289 00004325 50                      	push rax
  6290 00004326 BF20000000              	mov rdi, 8 * 4	; extended env
  6291 0000432B E8B71C0000              	call malloc
  6292 00004330 488B7D10                	mov rdi, ENV
  6293 00004334 BE00000000              	mov rsi, 0
  6294 00004339 BA01000000              	mov rdx, 1
  6295                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
  6296 0000433E 4883FE03                	cmp rsi, 3
  6297 00004342 7410                    	je .L_lambda_simple_env_end_005e
  6298 00004344 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6299 00004348 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6300 0000434C 48FFC6                  	inc rsi
  6301 0000434F 48FFC2                  	inc rdx
  6302 00004352 EBEA                    	jmp .L_lambda_simple_env_loop_005e
  6303                                  .L_lambda_simple_env_end_005e:
  6304 00004354 5B                      	pop rbx
  6305 00004355 BE00000000              	mov rsi, 0
  6306                                  .L_lambda_simple_params_loop_005e:	; copy params
  6307 0000435A 4883FE01                	cmp rsi, 1
  6308 0000435E 740E                    	je .L_lambda_simple_params_end_005e
  6309 00004360 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6310 00004365 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6311 00004369 48FFC6                  	inc rsi
  6312 0000436C EBEC                    	jmp .L_lambda_simple_params_loop_005e
  6313                                  .L_lambda_simple_params_end_005e:
  6314 0000436E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6315 00004371 4889C3                  	mov rbx, rax
  6316 00004374 58                      	pop rax
  6317 00004375 C60004                  	mov byte [rax], T_closure
  6318 00004378 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6319 0000437C 48C74009[89430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
  6320 00004384 E944010000              	jmp .L_lambda_simple_end_005e
  6321                                  .L_lambda_simple_code_005e:	; lambda-simple body
  6322 00004389 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6323 0000438F 740B                    	je .L_lambda_simple_arity_check_ok_005e
  6324 00004391 FF742410                	push qword [rsp + 8 * 2]
  6325 00004395 6A01                    	push 1
  6326 00004397 E9041C0000              	jmp L_error_incorrect_arity_simple
  6327                                  .L_lambda_simple_arity_check_ok_005e:
  6328 0000439C C8000000                	enter 0, 0
  6329 000043A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6330 000043A5 E83D1C0000              	call malloc
  6331 000043AA 50                      	push rax
  6332 000043AB BF08000000              	mov rdi, 8 * 1	; new rib
  6333 000043B0 E8321C0000              	call malloc
  6334 000043B5 50                      	push rax
  6335 000043B6 BF28000000              	mov rdi, 8 * 5	; extended env
  6336 000043BB E8271C0000              	call malloc
  6337 000043C0 488B7D10                	mov rdi, ENV
  6338 000043C4 BE00000000              	mov rsi, 0
  6339 000043C9 BA01000000              	mov rdx, 1
  6340                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
  6341 000043CE 4883FE04                	cmp rsi, 4
  6342 000043D2 7410                    	je .L_lambda_simple_env_end_005f
  6343 000043D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6344 000043D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6345 000043DC 48FFC6                  	inc rsi
  6346 000043DF 48FFC2                  	inc rdx
  6347 000043E2 EBEA                    	jmp .L_lambda_simple_env_loop_005f
  6348                                  .L_lambda_simple_env_end_005f:
  6349 000043E4 5B                      	pop rbx
  6350 000043E5 BE00000000              	mov rsi, 0
  6351                                  .L_lambda_simple_params_loop_005f:	; copy params
  6352 000043EA 4883FE01                	cmp rsi, 1
  6353 000043EE 740E                    	je .L_lambda_simple_params_end_005f
  6354 000043F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6355 000043F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6356 000043F9 48FFC6                  	inc rsi
  6357 000043FC EBEC                    	jmp .L_lambda_simple_params_loop_005f
  6358                                  .L_lambda_simple_params_end_005f:
  6359 000043FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6360 00004401 4889C3                  	mov rbx, rax
  6361 00004404 58                      	pop rax
  6362 00004405 C60004                  	mov byte [rax], T_closure
  6363 00004408 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6364 0000440C 48C74009[19440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
  6365 00004414 E9B0000000              	jmp .L_lambda_simple_end_005f
  6366                                  .L_lambda_simple_code_005f:	; lambda-simple body
  6367 00004419 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6368 0000441F 740B                    	je .L_lambda_simple_arity_check_ok_005f
  6369 00004421 FF742410                	push qword [rsp + 8 * 2]
  6370 00004425 6A01                    	push 1
  6371 00004427 E9741B0000              	jmp L_error_incorrect_arity_simple
  6372                                  .L_lambda_simple_arity_check_ok_005f:
  6373 0000442C C8000000                	enter 0, 0
  6374 00004430 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6375 00004435 E8AD1B0000              	call malloc
  6376 0000443A 50                      	push rax
  6377 0000443B BF08000000              	mov rdi, 8 * 1	; new rib
  6378 00004440 E8A21B0000              	call malloc
  6379 00004445 50                      	push rax
  6380 00004446 BF30000000              	mov rdi, 8 * 6	; extended env
  6381 0000444B E8971B0000              	call malloc
  6382 00004450 488B7D10                	mov rdi, ENV
  6383 00004454 BE00000000              	mov rsi, 0
  6384 00004459 BA01000000              	mov rdx, 1
  6385                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
  6386 0000445E 4883FE05                	cmp rsi, 5
  6387 00004462 7410                    	je .L_lambda_simple_env_end_0060
  6388 00004464 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6389 00004468 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6390 0000446C 48FFC6                  	inc rsi
  6391 0000446F 48FFC2                  	inc rdx
  6392 00004472 EBEA                    	jmp .L_lambda_simple_env_loop_0060
  6393                                  .L_lambda_simple_env_end_0060:
  6394 00004474 5B                      	pop rbx
  6395 00004475 BE00000000              	mov rsi, 0
  6396                                  .L_lambda_simple_params_loop_0060:	; copy params
  6397 0000447A 4883FE01                	cmp rsi, 1
  6398 0000447E 740E                    	je .L_lambda_simple_params_end_0060
  6399 00004480 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6400 00004485 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6401 00004489 48FFC6                  	inc rsi
  6402 0000448C EBEC                    	jmp .L_lambda_simple_params_loop_0060
  6403                                  .L_lambda_simple_params_end_0060:
  6404 0000448E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6405 00004491 4889C3                  	mov rbx, rax
  6406 00004494 58                      	pop rax
  6407 00004495 C60004                  	mov byte [rax], T_closure
  6408 00004498 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6409 0000449C 48C74009[A6440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
  6410 000044A4 EB1F                    	jmp .L_lambda_simple_end_0060
  6411                                  .L_lambda_simple_code_0060:	; lambda-simple body
  6412 000044A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6413 000044AC 740B                    	je .L_lambda_simple_arity_check_ok_0060
  6414 000044AE FF742410                	push qword [rsp + 8 * 2]
  6415 000044B2 6A01                    	push 1
  6416 000044B4 E9E71A0000              	jmp L_error_incorrect_arity_simple
  6417                                  .L_lambda_simple_arity_check_ok_0060:
  6418 000044B9 C8000000                	enter 0, 0
  6419 000044BD 488B4520                	mov rax, PARAM(0)	; param y
  6420 000044C1 C9                      	leave
  6421 000044C2 C21800                  	ret AND_KILL_FRAME(1)
  6422                                  .L_lambda_simple_end_0060:	; new closure is in rax
  6423 000044C5 C9                      	leave
  6424 000044C6 C21800                  	ret AND_KILL_FRAME(1)
  6425                                  .L_lambda_simple_end_005f:	; new closure is in rax
  6426 000044C9 C9                      	leave
  6427 000044CA C21800                  	ret AND_KILL_FRAME(1)
  6428                                  .L_lambda_simple_end_005e:	; new closure is in rax
  6429 000044CD 50                      	push rax
  6430 000044CE 6A01                    	push 1	; arg count
  6431 000044D0 488B4520                	mov rax, PARAM(0)	; param n
  6432 000044D4 803804                  	cmp byte [rax], T_closure
  6433 000044D7 0F85611A0000            	jne L_error_non_closure
  6434 000044DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6435 000044E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6436 000044E3 803804                  	cmp byte [rax], T_closure
  6437 000044E6 0F85521A0000            	jne L_error_non_closure
  6438 000044EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  6439 000044EF FF7508                  	push qword [rbp + 8 * 1]
  6440                                   ; old ret addr	pop rbp
  6441                                  ; restore the old rbp	mov rbx, 1
  6442 000044F2 4883C303                	add rbx, 3
  6443                                  	mov rdi, dword [rbp + 8*2]
  6443          ******************       error: mismatch in operand sizes
  6444                                  .L_tc_recycle_frame_loop_0022:
  6445 000044F6 4883FB00                	cmp rbx, 0
  6446 000044FA 7411                    je .L_tc_recycle_frame_done_0022
  6447 000044FC 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6448 00004500 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6449 00004505 48FFCF                  	dec rdi
  6450 00004508 48FFCB                  	dec rbx
  6451 0000450B EBE9                    jmp .L_tc_recycle_frame_loop_0022
  6452                                  .L_tc_recycle_frame_done_0022:
  6453 0000450D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6454 00004510 C9                      	leave
  6455 00004511 C21800                  	ret AND_KILL_FRAME(1)
  6456                                  .L_lambda_simple_end_005b:	; new closure is in rax
  6457 00004514 803804                  	cmp byte [rax], T_closure
  6458 00004517 0F85211A0000            	jne L_error_non_closure
  6459 0000451D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6460 00004520 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6461 00004523 50                      	push rax
  6462 00004524 6A01                    	push 1	; arg count
  6463                                  	; preparing a non-tail-call
  6464                                  	; preparing a non-tail-call
  6465                                  	; preparing a non-tail-call
  6466 00004526 488B4520                	mov rax, PARAM(0)	; param b
  6467 0000452A 50                      	push rax
  6468 0000452B 6A01                    	push 1	; arg count
  6469                                  	; preparing a non-tail-call
  6470 0000452D 488B4510                	mov rax, ENV
  6471 00004531 488B00                  	mov rax, qword [rax + 8 * 0]
  6472 00004534 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  6473 00004537 50                      	push rax
  6474 00004538 6A01                    	push 1	; arg count
  6475 0000453A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6476 0000453F E8A31A0000              	call malloc
  6477 00004544 50                      	push rax
  6478 00004545 BF08000000              	mov rdi, 8 * 1	; new rib
  6479 0000454A E8981A0000              	call malloc
  6480 0000454F 50                      	push rax
  6481 00004550 BF18000000              	mov rdi, 8 * 3	; extended env
  6482 00004555 E88D1A0000              	call malloc
  6483 0000455A 488B7D10                	mov rdi, ENV
  6484 0000455E BE00000000              	mov rsi, 0
  6485 00004563 BA01000000              	mov rdx, 1
  6486                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
  6487 00004568 4883FE02                	cmp rsi, 2
  6488 0000456C 7410                    	je .L_lambda_simple_env_end_0061
  6489 0000456E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6490 00004572 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6491 00004576 48FFC6                  	inc rsi
  6492 00004579 48FFC2                  	inc rdx
  6493 0000457C EBEA                    	jmp .L_lambda_simple_env_loop_0061
  6494                                  .L_lambda_simple_env_end_0061:
  6495 0000457E 5B                      	pop rbx
  6496 0000457F BE00000000              	mov rsi, 0
  6497                                  .L_lambda_simple_params_loop_0061:	; copy params
  6498 00004584 4883FE01                	cmp rsi, 1
  6499 00004588 740E                    	je .L_lambda_simple_params_end_0061
  6500 0000458A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6501 0000458F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6502 00004593 48FFC6                  	inc rsi
  6503 00004596 EBEC                    	jmp .L_lambda_simple_params_loop_0061
  6504                                  .L_lambda_simple_params_end_0061:
  6505 00004598 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6506 0000459B 4889C3                  	mov rbx, rax
  6507 0000459E 58                      	pop rax
  6508 0000459F C60004                  	mov byte [rax], T_closure
  6509 000045A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6510 000045A6 48C74009[B3450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
  6511 000045AE E9AF110000              	jmp .L_lambda_simple_end_0061
  6512                                  .L_lambda_simple_code_0061:	; lambda-simple body
  6513 000045B3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6514 000045B9 740B                    	je .L_lambda_simple_arity_check_ok_0061
  6515 000045BB FF742410                	push qword [rsp + 8 * 2]
  6516 000045BF 6A01                    	push 1
  6517 000045C1 E9DA190000              	jmp L_error_incorrect_arity_simple
  6518                                  .L_lambda_simple_arity_check_ok_0061:
  6519 000045C6 C8000000                	enter 0, 0
  6520 000045CA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6521 000045CF E8131A0000              	call malloc
  6522 000045D4 50                      	push rax
  6523 000045D5 BF08000000              	mov rdi, 8 * 1	; new rib
  6524 000045DA E8081A0000              	call malloc
  6525 000045DF 50                      	push rax
  6526 000045E0 BF20000000              	mov rdi, 8 * 4	; extended env
  6527 000045E5 E8FD190000              	call malloc
  6528 000045EA 488B7D10                	mov rdi, ENV
  6529 000045EE BE00000000              	mov rsi, 0
  6530 000045F3 BA01000000              	mov rdx, 1
  6531                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
  6532 000045F8 4883FE03                	cmp rsi, 3
  6533 000045FC 7410                    	je .L_lambda_simple_env_end_0062
  6534 000045FE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6535 00004602 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6536 00004606 48FFC6                  	inc rsi
  6537 00004609 48FFC2                  	inc rdx
  6538 0000460C EBEA                    	jmp .L_lambda_simple_env_loop_0062
  6539                                  .L_lambda_simple_env_end_0062:
  6540 0000460E 5B                      	pop rbx
  6541 0000460F BE00000000              	mov rsi, 0
  6542                                  .L_lambda_simple_params_loop_0062:	; copy params
  6543 00004614 4883FE01                	cmp rsi, 1
  6544 00004618 740E                    	je .L_lambda_simple_params_end_0062
  6545 0000461A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6546 0000461F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6547 00004623 48FFC6                  	inc rsi
  6548 00004626 EBEC                    	jmp .L_lambda_simple_params_loop_0062
  6549                                  .L_lambda_simple_params_end_0062:
  6550 00004628 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6551 0000462B 4889C3                  	mov rbx, rax
  6552 0000462E 58                      	pop rax
  6553 0000462F C60004                  	mov byte [rax], T_closure
  6554 00004632 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6555 00004636 48C74009[43460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
  6556 0000463E E91B110000              	jmp .L_lambda_simple_end_0062
  6557                                  .L_lambda_simple_code_0062:	; lambda-simple body
  6558 00004643 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6559 00004649 740B                    	je .L_lambda_simple_arity_check_ok_0062
  6560 0000464B FF742410                	push qword [rsp + 8 * 2]
  6561 0000464F 6A01                    	push 1
  6562 00004651 E94A190000              	jmp L_error_incorrect_arity_simple
  6563                                  .L_lambda_simple_arity_check_ok_0062:
  6564 00004656 C8000000                	enter 0, 0
  6565                                  	; preparing a tail-call
  6566 0000465A 488B4510                	mov rax, ENV
  6567 0000465E 488B00                  	mov rax, qword [rax + 8 * 0]
  6568 00004661 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  6569 00004664 50                      	push rax
  6570 00004665 6A01                    	push 1	; arg count
  6571                                  	; preparing a non-tail-call
  6572 00004667 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6573 0000466C E876190000              	call malloc
  6574 00004671 50                      	push rax
  6575 00004672 BF08000000              	mov rdi, 8 * 1	; new rib
  6576 00004677 E86B190000              	call malloc
  6577 0000467C 50                      	push rax
  6578 0000467D BF28000000              	mov rdi, 8 * 5	; extended env
  6579 00004682 E860190000              	call malloc
  6580 00004687 488B7D10                	mov rdi, ENV
  6581 0000468B BE00000000              	mov rsi, 0
  6582 00004690 BA01000000              	mov rdx, 1
  6583                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
  6584 00004695 4883FE04                	cmp rsi, 4
  6585 00004699 7410                    	je .L_lambda_simple_env_end_0063
  6586 0000469B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6587 0000469F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6588 000046A3 48FFC6                  	inc rsi
  6589 000046A6 48FFC2                  	inc rdx
  6590 000046A9 EBEA                    	jmp .L_lambda_simple_env_loop_0063
  6591                                  .L_lambda_simple_env_end_0063:
  6592 000046AB 5B                      	pop rbx
  6593 000046AC BE00000000              	mov rsi, 0
  6594                                  .L_lambda_simple_params_loop_0063:	; copy params
  6595 000046B1 4883FE01                	cmp rsi, 1
  6596 000046B5 740E                    	je .L_lambda_simple_params_end_0063
  6597 000046B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6598 000046BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6599 000046C0 48FFC6                  	inc rsi
  6600 000046C3 EBEC                    	jmp .L_lambda_simple_params_loop_0063
  6601                                  .L_lambda_simple_params_end_0063:
  6602 000046C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6603 000046C8 4889C3                  	mov rbx, rax
  6604 000046CB 58                      	pop rax
  6605 000046CC C60004                  	mov byte [rax], T_closure
  6606 000046CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6607 000046D3 48C74009[E0460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
  6608 000046DB E937100000              	jmp .L_lambda_simple_end_0063
  6609                                  .L_lambda_simple_code_0063:	; lambda-simple body
  6610 000046E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6611 000046E6 740B                    	je .L_lambda_simple_arity_check_ok_0063
  6612 000046E8 FF742410                	push qword [rsp + 8 * 2]
  6613 000046EC 6A01                    	push 1
  6614 000046EE E9AD180000              	jmp L_error_incorrect_arity_simple
  6615                                  .L_lambda_simple_arity_check_ok_0063:
  6616 000046F3 C8000000                	enter 0, 0
  6617                                  	; preparing a tail-call
  6618                                  	; preparing a non-tail-call
  6619                                  	; preparing a non-tail-call
  6620 000046F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6621 000046FC E8E6180000              	call malloc
  6622 00004701 50                      	push rax
  6623 00004702 BF08000000              	mov rdi, 8 * 1	; new rib
  6624 00004707 E8DB180000              	call malloc
  6625 0000470C 50                      	push rax
  6626 0000470D BF30000000              	mov rdi, 8 * 6	; extended env
  6627 00004712 E8D0180000              	call malloc
  6628 00004717 488B7D10                	mov rdi, ENV
  6629 0000471B BE00000000              	mov rsi, 0
  6630 00004720 BA01000000              	mov rdx, 1
  6631                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
  6632 00004725 4883FE05                	cmp rsi, 5
  6633 00004729 7410                    	je .L_lambda_simple_env_end_0064
  6634 0000472B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6635 0000472F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6636 00004733 48FFC6                  	inc rsi
  6637 00004736 48FFC2                  	inc rdx
  6638 00004739 EBEA                    	jmp .L_lambda_simple_env_loop_0064
  6639                                  .L_lambda_simple_env_end_0064:
  6640 0000473B 5B                      	pop rbx
  6641 0000473C BE00000000              	mov rsi, 0
  6642                                  .L_lambda_simple_params_loop_0064:	; copy params
  6643 00004741 4883FE01                	cmp rsi, 1
  6644 00004745 740E                    	je .L_lambda_simple_params_end_0064
  6645 00004747 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6646 0000474C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6647 00004750 48FFC6                  	inc rsi
  6648 00004753 EBEC                    	jmp .L_lambda_simple_params_loop_0064
  6649                                  .L_lambda_simple_params_end_0064:
  6650 00004755 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6651 00004758 4889C3                  	mov rbx, rax
  6652 0000475B 58                      	pop rax
  6653 0000475C C60004                  	mov byte [rax], T_closure
  6654 0000475F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6655 00004763 48C74009[70470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
  6656 0000476B E9B0000000              	jmp .L_lambda_simple_end_0064
  6657                                  .L_lambda_simple_code_0064:	; lambda-simple body
  6658 00004770 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6659 00004776 740B                    	je .L_lambda_simple_arity_check_ok_0064
  6660 00004778 FF742410                	push qword [rsp + 8 * 2]
  6661 0000477C 6A01                    	push 1
  6662 0000477E E91D180000              	jmp L_error_incorrect_arity_simple
  6663                                  .L_lambda_simple_arity_check_ok_0064:
  6664 00004783 C8000000                	enter 0, 0
  6665 00004787 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6666 0000478C E856180000              	call malloc
  6667 00004791 50                      	push rax
  6668 00004792 BF08000000              	mov rdi, 8 * 1	; new rib
  6669 00004797 E84B180000              	call malloc
  6670 0000479C 50                      	push rax
  6671 0000479D BF38000000              	mov rdi, 8 * 7	; extended env
  6672 000047A2 E840180000              	call malloc
  6673 000047A7 488B7D10                	mov rdi, ENV
  6674 000047AB BE00000000              	mov rsi, 0
  6675 000047B0 BA01000000              	mov rdx, 1
  6676                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
  6677 000047B5 4883FE06                	cmp rsi, 6
  6678 000047B9 7410                    	je .L_lambda_simple_env_end_0065
  6679 000047BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6680 000047BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6681 000047C3 48FFC6                  	inc rsi
  6682 000047C6 48FFC2                  	inc rdx
  6683 000047C9 EBEA                    	jmp .L_lambda_simple_env_loop_0065
  6684                                  .L_lambda_simple_env_end_0065:
  6685 000047CB 5B                      	pop rbx
  6686 000047CC BE00000000              	mov rsi, 0
  6687                                  .L_lambda_simple_params_loop_0065:	; copy params
  6688 000047D1 4883FE01                	cmp rsi, 1
  6689 000047D5 740E                    	je .L_lambda_simple_params_end_0065
  6690 000047D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6691 000047DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6692 000047E0 48FFC6                  	inc rsi
  6693 000047E3 EBEC                    	jmp .L_lambda_simple_params_loop_0065
  6694                                  .L_lambda_simple_params_end_0065:
  6695 000047E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6696 000047E8 4889C3                  	mov rbx, rax
  6697 000047EB 58                      	pop rax
  6698 000047EC C60004                  	mov byte [rax], T_closure
  6699 000047EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6700 000047F3 48C74009[FD470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
  6701 000047FB EB1F                    	jmp .L_lambda_simple_end_0065
  6702                                  .L_lambda_simple_code_0065:	; lambda-simple body
  6703 000047FD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6704 00004803 740B                    	je .L_lambda_simple_arity_check_ok_0065
  6705 00004805 FF742410                	push qword [rsp + 8 * 2]
  6706 00004809 6A01                    	push 1
  6707 0000480B E990170000              	jmp L_error_incorrect_arity_simple
  6708                                  .L_lambda_simple_arity_check_ok_0065:
  6709 00004810 C8000000                	enter 0, 0
  6710 00004814 488B4520                	mov rax, PARAM(0)	; param y
  6711 00004818 C9                      	leave
  6712 00004819 C21800                  	ret AND_KILL_FRAME(1)
  6713                                  .L_lambda_simple_end_0065:	; new closure is in rax
  6714 0000481C C9                      	leave
  6715 0000481D C21800                  	ret AND_KILL_FRAME(1)
  6716                                  .L_lambda_simple_end_0064:	; new closure is in rax
  6717 00004820 50                      	push rax
  6718 00004821 6A01                    	push 1	; arg count
  6719                                  	; preparing a non-tail-call
  6720 00004823 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6721 00004828 E8BA170000              	call malloc
  6722 0000482D 50                      	push rax
  6723 0000482E BF08000000              	mov rdi, 8 * 1	; new rib
  6724 00004833 E8AF170000              	call malloc
  6725 00004838 50                      	push rax
  6726 00004839 BF30000000              	mov rdi, 8 * 6	; extended env
  6727 0000483E E8A4170000              	call malloc
  6728 00004843 488B7D10                	mov rdi, ENV
  6729 00004847 BE00000000              	mov rsi, 0
  6730 0000484C BA01000000              	mov rdx, 1
  6731                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
  6732 00004851 4883FE05                	cmp rsi, 5
  6733 00004855 7410                    	je .L_lambda_simple_env_end_0066
  6734 00004857 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6735 0000485B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6736 0000485F 48FFC6                  	inc rsi
  6737 00004862 48FFC2                  	inc rdx
  6738 00004865 EBEA                    	jmp .L_lambda_simple_env_loop_0066
  6739                                  .L_lambda_simple_env_end_0066:
  6740 00004867 5B                      	pop rbx
  6741 00004868 BE00000000              	mov rsi, 0
  6742                                  .L_lambda_simple_params_loop_0066:	; copy params
  6743 0000486D 4883FE01                	cmp rsi, 1
  6744 00004871 740E                    	je .L_lambda_simple_params_end_0066
  6745 00004873 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6746 00004878 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6747 0000487C 48FFC6                  	inc rsi
  6748 0000487F EBEC                    	jmp .L_lambda_simple_params_loop_0066
  6749                                  .L_lambda_simple_params_end_0066:
  6750 00004881 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6751 00004884 4889C3                  	mov rbx, rax
  6752 00004887 58                      	pop rax
  6753 00004888 C60004                  	mov byte [rax], T_closure
  6754 0000488B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6755 0000488F 48C74009[9C480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
  6756 00004897 E9B0000000              	jmp .L_lambda_simple_end_0066
  6757                                  .L_lambda_simple_code_0066:	; lambda-simple body
  6758 0000489C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6759 000048A2 740B                    	je .L_lambda_simple_arity_check_ok_0066
  6760 000048A4 FF742410                	push qword [rsp + 8 * 2]
  6761 000048A8 6A01                    	push 1
  6762 000048AA E9F1160000              	jmp L_error_incorrect_arity_simple
  6763                                  .L_lambda_simple_arity_check_ok_0066:
  6764 000048AF C8000000                	enter 0, 0
  6765 000048B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6766 000048B8 E82A170000              	call malloc
  6767 000048BD 50                      	push rax
  6768 000048BE BF08000000              	mov rdi, 8 * 1	; new rib
  6769 000048C3 E81F170000              	call malloc
  6770 000048C8 50                      	push rax
  6771 000048C9 BF38000000              	mov rdi, 8 * 7	; extended env
  6772 000048CE E814170000              	call malloc
  6773 000048D3 488B7D10                	mov rdi, ENV
  6774 000048D7 BE00000000              	mov rsi, 0
  6775 000048DC BA01000000              	mov rdx, 1
  6776                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
  6777 000048E1 4883FE06                	cmp rsi, 6
  6778 000048E5 7410                    	je .L_lambda_simple_env_end_0067
  6779 000048E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6780 000048EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6781 000048EF 48FFC6                  	inc rsi
  6782 000048F2 48FFC2                  	inc rdx
  6783 000048F5 EBEA                    	jmp .L_lambda_simple_env_loop_0067
  6784                                  .L_lambda_simple_env_end_0067:
  6785 000048F7 5B                      	pop rbx
  6786 000048F8 BE00000000              	mov rsi, 0
  6787                                  .L_lambda_simple_params_loop_0067:	; copy params
  6788 000048FD 4883FE01                	cmp rsi, 1
  6789 00004901 740E                    	je .L_lambda_simple_params_end_0067
  6790 00004903 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6791 00004908 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6792 0000490C 48FFC6                  	inc rsi
  6793 0000490F EBEC                    	jmp .L_lambda_simple_params_loop_0067
  6794                                  .L_lambda_simple_params_end_0067:
  6795 00004911 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6796 00004914 4889C3                  	mov rbx, rax
  6797 00004917 58                      	pop rax
  6798 00004918 C60004                  	mov byte [rax], T_closure
  6799 0000491B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6800 0000491F 48C74009[29490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
  6801 00004927 EB1F                    	jmp .L_lambda_simple_end_0067
  6802                                  .L_lambda_simple_code_0067:	; lambda-simple body
  6803 00004929 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6804 0000492F 740B                    	je .L_lambda_simple_arity_check_ok_0067
  6805 00004931 FF742410                	push qword [rsp + 8 * 2]
  6806 00004935 6A01                    	push 1
  6807 00004937 E964160000              	jmp L_error_incorrect_arity_simple
  6808                                  .L_lambda_simple_arity_check_ok_0067:
  6809 0000493C C8000000                	enter 0, 0
  6810 00004940 488B4520                	mov rax, PARAM(0)	; param y
  6811 00004944 C9                      	leave
  6812 00004945 C21800                  	ret AND_KILL_FRAME(1)
  6813                                  .L_lambda_simple_end_0067:	; new closure is in rax
  6814 00004948 C9                      	leave
  6815 00004949 C21800                  	ret AND_KILL_FRAME(1)
  6816                                  .L_lambda_simple_end_0066:	; new closure is in rax
  6817 0000494C 50                      	push rax
  6818 0000494D 6A01                    	push 1	; arg count
  6819 0000494F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6820 00004954 E88E160000              	call malloc
  6821 00004959 50                      	push rax
  6822 0000495A BF08000000              	mov rdi, 8 * 1	; new rib
  6823 0000495F E883160000              	call malloc
  6824 00004964 50                      	push rax
  6825 00004965 BF30000000              	mov rdi, 8 * 6	; extended env
  6826 0000496A E878160000              	call malloc
  6827 0000496F 488B7D10                	mov rdi, ENV
  6828 00004973 BE00000000              	mov rsi, 0
  6829 00004978 BA01000000              	mov rdx, 1
  6830                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
  6831 0000497D 4883FE05                	cmp rsi, 5
  6832 00004981 7410                    	je .L_lambda_simple_env_end_0068
  6833 00004983 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6834 00004987 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6835 0000498B 48FFC6                  	inc rsi
  6836 0000498E 48FFC2                  	inc rdx
  6837 00004991 EBEA                    	jmp .L_lambda_simple_env_loop_0068
  6838                                  .L_lambda_simple_env_end_0068:
  6839 00004993 5B                      	pop rbx
  6840 00004994 BE00000000              	mov rsi, 0
  6841                                  .L_lambda_simple_params_loop_0068:	; copy params
  6842 00004999 4883FE01                	cmp rsi, 1
  6843 0000499D 740E                    	je .L_lambda_simple_params_end_0068
  6844 0000499F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6845 000049A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6846 000049A8 48FFC6                  	inc rsi
  6847 000049AB EBEC                    	jmp .L_lambda_simple_params_loop_0068
  6848                                  .L_lambda_simple_params_end_0068:
  6849 000049AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6850 000049B0 4889C3                  	mov rbx, rax
  6851 000049B3 58                      	pop rax
  6852 000049B4 C60004                  	mov byte [rax], T_closure
  6853 000049B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6854 000049BB 48C74009[C8490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
  6855 000049C3 E99B010000              	jmp .L_lambda_simple_end_0068
  6856                                  .L_lambda_simple_code_0068:	; lambda-simple body
  6857 000049C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6858 000049CE 740B                    	je .L_lambda_simple_arity_check_ok_0068
  6859 000049D0 FF742410                	push qword [rsp + 8 * 2]
  6860 000049D4 6A01                    	push 1
  6861 000049D6 E9C5150000              	jmp L_error_incorrect_arity_simple
  6862                                  .L_lambda_simple_arity_check_ok_0068:
  6863 000049DB C8000000                	enter 0, 0
  6864 000049DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6865 000049E4 E8FE150000              	call malloc
  6866 000049E9 50                      	push rax
  6867 000049EA BF08000000              	mov rdi, 8 * 1	; new rib
  6868 000049EF E8F3150000              	call malloc
  6869 000049F4 50                      	push rax
  6870 000049F5 BF38000000              	mov rdi, 8 * 7	; extended env
  6871 000049FA E8E8150000              	call malloc
  6872 000049FF 488B7D10                	mov rdi, ENV
  6873 00004A03 BE00000000              	mov rsi, 0
  6874 00004A08 BA01000000              	mov rdx, 1
  6875                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
  6876 00004A0D 4883FE06                	cmp rsi, 6
  6877 00004A11 7410                    	je .L_lambda_simple_env_end_0069
  6878 00004A13 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6879 00004A17 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6880 00004A1B 48FFC6                  	inc rsi
  6881 00004A1E 48FFC2                  	inc rdx
  6882 00004A21 EBEA                    	jmp .L_lambda_simple_env_loop_0069
  6883                                  .L_lambda_simple_env_end_0069:
  6884 00004A23 5B                      	pop rbx
  6885 00004A24 BE00000000              	mov rsi, 0
  6886                                  .L_lambda_simple_params_loop_0069:	; copy params
  6887 00004A29 4883FE01                	cmp rsi, 1
  6888 00004A2D 740E                    	je .L_lambda_simple_params_end_0069
  6889 00004A2F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6890 00004A34 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6891 00004A38 48FFC6                  	inc rsi
  6892 00004A3B EBEC                    	jmp .L_lambda_simple_params_loop_0069
  6893                                  .L_lambda_simple_params_end_0069:
  6894 00004A3D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6895 00004A40 4889C3                  	mov rbx, rax
  6896 00004A43 58                      	pop rax
  6897 00004A44 C60004                  	mov byte [rax], T_closure
  6898 00004A47 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6899 00004A4B 48C74009[584A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
  6900 00004A53 E907010000              	jmp .L_lambda_simple_end_0069
  6901                                  .L_lambda_simple_code_0069:	; lambda-simple body
  6902 00004A58 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6903 00004A5E 740B                    	je .L_lambda_simple_arity_check_ok_0069
  6904 00004A60 FF742410                	push qword [rsp + 8 * 2]
  6905 00004A64 6A01                    	push 1
  6906 00004A66 E935150000              	jmp L_error_incorrect_arity_simple
  6907                                  .L_lambda_simple_arity_check_ok_0069:
  6908 00004A6B C8000000                	enter 0, 0
  6909 00004A6F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6910 00004A74 E86E150000              	call malloc
  6911 00004A79 50                      	push rax
  6912 00004A7A BF08000000              	mov rdi, 8 * 1	; new rib
  6913 00004A7F E863150000              	call malloc
  6914 00004A84 50                      	push rax
  6915 00004A85 BF40000000              	mov rdi, 8 * 8	; extended env
  6916 00004A8A E858150000              	call malloc
  6917 00004A8F 488B7D10                	mov rdi, ENV
  6918 00004A93 BE00000000              	mov rsi, 0
  6919 00004A98 BA01000000              	mov rdx, 1
  6920                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
  6921 00004A9D 4883FE07                	cmp rsi, 7
  6922 00004AA1 7410                    	je .L_lambda_simple_env_end_006a
  6923 00004AA3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6924 00004AA7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6925 00004AAB 48FFC6                  	inc rsi
  6926 00004AAE 48FFC2                  	inc rdx
  6927 00004AB1 EBEA                    	jmp .L_lambda_simple_env_loop_006a
  6928                                  .L_lambda_simple_env_end_006a:
  6929 00004AB3 5B                      	pop rbx
  6930 00004AB4 BE00000000              	mov rsi, 0
  6931                                  .L_lambda_simple_params_loop_006a:	; copy params
  6932 00004AB9 4883FE01                	cmp rsi, 1
  6933 00004ABD 740E                    	je .L_lambda_simple_params_end_006a
  6934 00004ABF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6935 00004AC4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6936 00004AC8 48FFC6                  	inc rsi
  6937 00004ACB EBEC                    	jmp .L_lambda_simple_params_loop_006a
  6938                                  .L_lambda_simple_params_end_006a:
  6939 00004ACD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6940 00004AD0 4889C3                  	mov rbx, rax
  6941 00004AD3 58                      	pop rax
  6942 00004AD4 C60004                  	mov byte [rax], T_closure
  6943 00004AD7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6944 00004ADB 48C74009[E54A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
  6945 00004AE3 EB76                    	jmp .L_lambda_simple_end_006a
  6946                                  .L_lambda_simple_code_006a:	; lambda-simple body
  6947 00004AE5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6948 00004AEB 740B                    	je .L_lambda_simple_arity_check_ok_006a
  6949 00004AED FF742410                	push qword [rsp + 8 * 2]
  6950 00004AF1 6A01                    	push 1
  6951 00004AF3 E9A8140000              	jmp L_error_incorrect_arity_simple
  6952                                  .L_lambda_simple_arity_check_ok_006a:
  6953 00004AF8 C8000000                	enter 0, 0
  6954                                  	; preparing a tail-call
  6955 00004AFC 488B4510                	mov rax, ENV
  6956 00004B00 488B00                  	mov rax, qword [rax + 8 * 0]
  6957 00004B03 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  6958 00004B06 50                      	push rax
  6959 00004B07 6A01                    	push 1	; arg count
  6960                                  	; preparing a non-tail-call
  6961 00004B09 488B4510                	mov rax, ENV
  6962 00004B0D 488B4008                	mov rax, qword [rax + 8 * 1]
  6963 00004B11 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  6964 00004B14 50                      	push rax
  6965 00004B15 6A01                    	push 1	; arg count
  6966 00004B17 488B4520                	mov rax, PARAM(0)	; param c
  6967 00004B1B 803804                  	cmp byte [rax], T_closure
  6968 00004B1E 0F851A140000            	jne L_error_non_closure
  6969 00004B24 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6970 00004B27 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6971 00004B2A 803804                  	cmp byte [rax], T_closure
  6972 00004B2D 0F850B140000            	jne L_error_non_closure
  6973 00004B33 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6974 00004B36 FF7508                  	push qword [rbp + 8 * 1]
  6975                                   ; old ret addr	pop rbp
  6976                                  ; restore the old rbp	mov rbx, 1
  6977 00004B39 4883C303                	add rbx, 3
  6978                                  	mov rdi, dword [rbp + 8*2]
  6978          ******************       error: mismatch in operand sizes
  6979                                  .L_tc_recycle_frame_loop_0025:
  6980 00004B3D 4883FB00                	cmp rbx, 0
  6981 00004B41 7411                    je .L_tc_recycle_frame_done_0025
  6982 00004B43 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6983 00004B47 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6984 00004B4C 48FFCF                  	dec rdi
  6985 00004B4F 48FFCB                  	dec rbx
  6986 00004B52 EBE9                    jmp .L_tc_recycle_frame_loop_0025
  6987                                  .L_tc_recycle_frame_done_0025:
  6988 00004B54 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6989 00004B57 C9                      	leave
  6990 00004B58 C21800                  	ret AND_KILL_FRAME(1)
  6991                                  .L_lambda_simple_end_006a:	; new closure is in rax
  6992 00004B5B C9                      	leave
  6993 00004B5C C21800                  	ret AND_KILL_FRAME(1)
  6994                                  .L_lambda_simple_end_0069:	; new closure is in rax
  6995 00004B5F C9                      	leave
  6996 00004B60 C21800                  	ret AND_KILL_FRAME(1)
  6997                                  .L_lambda_simple_end_0068:	; new closure is in rax
  6998 00004B63 803804                  	cmp byte [rax], T_closure
  6999 00004B66 0F85D2130000            	jne L_error_non_closure
  7000 00004B6C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7001 00004B6F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7002 00004B72 803804                  	cmp byte [rax], T_closure
  7003 00004B75 0F85C3130000            	jne L_error_non_closure
  7004 00004B7B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7005 00004B7E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7006 00004B81 50                      	push rax
  7007 00004B82 6A01                    	push 1	; arg count
  7008                                  	; preparing a non-tail-call
  7009 00004B84 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7010 00004B89 E859140000              	call malloc
  7011 00004B8E 50                      	push rax
  7012 00004B8F BF08000000              	mov rdi, 8 * 1	; new rib
  7013 00004B94 E84E140000              	call malloc
  7014 00004B99 50                      	push rax
  7015 00004B9A BF30000000              	mov rdi, 8 * 6	; extended env
  7016 00004B9F E843140000              	call malloc
  7017 00004BA4 488B7D10                	mov rdi, ENV
  7018 00004BA8 BE00000000              	mov rsi, 0
  7019 00004BAD BA01000000              	mov rdx, 1
  7020                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
  7021 00004BB2 4883FE05                	cmp rsi, 5
  7022 00004BB6 7410                    	je .L_lambda_simple_env_end_006b
  7023 00004BB8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7024 00004BBC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7025 00004BC0 48FFC6                  	inc rsi
  7026 00004BC3 48FFC2                  	inc rdx
  7027 00004BC6 EBEA                    	jmp .L_lambda_simple_env_loop_006b
  7028                                  .L_lambda_simple_env_end_006b:
  7029 00004BC8 5B                      	pop rbx
  7030 00004BC9 BE00000000              	mov rsi, 0
  7031                                  .L_lambda_simple_params_loop_006b:	; copy params
  7032 00004BCE 4883FE01                	cmp rsi, 1
  7033 00004BD2 740E                    	je .L_lambda_simple_params_end_006b
  7034 00004BD4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7035 00004BD9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7036 00004BDD 48FFC6                  	inc rsi
  7037 00004BE0 EBEC                    	jmp .L_lambda_simple_params_loop_006b
  7038                                  .L_lambda_simple_params_end_006b:
  7039 00004BE2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7040 00004BE5 4889C3                  	mov rbx, rax
  7041 00004BE8 58                      	pop rax
  7042 00004BE9 C60004                  	mov byte [rax], T_closure
  7043 00004BEC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7044 00004BF0 48C74009[FD4B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
  7045 00004BF8 E9D0080000              	jmp .L_lambda_simple_end_006b
  7046                                  .L_lambda_simple_code_006b:	; lambda-simple body
  7047 00004BFD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7048 00004C03 740B                    	je .L_lambda_simple_arity_check_ok_006b
  7049 00004C05 FF742410                	push qword [rsp + 8 * 2]
  7050 00004C09 6A01                    	push 1
  7051 00004C0B E990130000              	jmp L_error_incorrect_arity_simple
  7052                                  .L_lambda_simple_arity_check_ok_006b:
  7053 00004C10 C8000000                	enter 0, 0
  7054                                  	; preparing a tail-call
  7055                                  	; preparing a non-tail-call
  7056 00004C14 488B4520                	mov rax, PARAM(0)	; param p
  7057 00004C18 50                      	push rax
  7058 00004C19 6A01                    	push 1	; arg count
  7059 00004C1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7060 00004C20 E8C2130000              	call malloc
  7061 00004C25 50                      	push rax
  7062 00004C26 BF08000000              	mov rdi, 8 * 1	; new rib
  7063 00004C2B E8B7130000              	call malloc
  7064 00004C30 50                      	push rax
  7065 00004C31 BF38000000              	mov rdi, 8 * 7	; extended env
  7066 00004C36 E8AC130000              	call malloc
  7067 00004C3B 488B7D10                	mov rdi, ENV
  7068 00004C3F BE00000000              	mov rsi, 0
  7069 00004C44 BA01000000              	mov rdx, 1
  7070                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
  7071 00004C49 4883FE06                	cmp rsi, 6
  7072 00004C4D 7410                    	je .L_lambda_simple_env_end_006c
  7073 00004C4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7074 00004C53 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7075 00004C57 48FFC6                  	inc rsi
  7076 00004C5A 48FFC2                  	inc rdx
  7077 00004C5D EBEA                    	jmp .L_lambda_simple_env_loop_006c
  7078                                  .L_lambda_simple_env_end_006c:
  7079 00004C5F 5B                      	pop rbx
  7080 00004C60 BE00000000              	mov rsi, 0
  7081                                  .L_lambda_simple_params_loop_006c:	; copy params
  7082 00004C65 4883FE01                	cmp rsi, 1
  7083 00004C69 740E                    	je .L_lambda_simple_params_end_006c
  7084 00004C6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7085 00004C70 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7086 00004C74 48FFC6                  	inc rsi
  7087 00004C77 EBEC                    	jmp .L_lambda_simple_params_loop_006c
  7088                                  .L_lambda_simple_params_end_006c:
  7089 00004C79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7090 00004C7C 4889C3                  	mov rbx, rax
  7091 00004C7F 58                      	pop rax
  7092 00004C80 C60004                  	mov byte [rax], T_closure
  7093 00004C83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7094 00004C87 48C74009[944C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
  7095 00004C8F E97E010000              	jmp .L_lambda_simple_end_006c
  7096                                  .L_lambda_simple_code_006c:	; lambda-simple body
  7097 00004C94 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7098 00004C9A 740B                    	je .L_lambda_simple_arity_check_ok_006c
  7099 00004C9C FF742410                	push qword [rsp + 8 * 2]
  7100 00004CA0 6A01                    	push 1
  7101 00004CA2 E9F9120000              	jmp L_error_incorrect_arity_simple
  7102                                  .L_lambda_simple_arity_check_ok_006c:
  7103 00004CA7 C8000000                	enter 0, 0
  7104                                  	; preparing a tail-call
  7105 00004CAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7106 00004CB0 E832130000              	call malloc
  7107 00004CB5 50                      	push rax
  7108 00004CB6 BF08000000              	mov rdi, 8 * 1	; new rib
  7109 00004CBB E827130000              	call malloc
  7110 00004CC0 50                      	push rax
  7111 00004CC1 BF40000000              	mov rdi, 8 * 8	; extended env
  7112 00004CC6 E81C130000              	call malloc
  7113 00004CCB 488B7D10                	mov rdi, ENV
  7114 00004CCF BE00000000              	mov rsi, 0
  7115 00004CD4 BA01000000              	mov rdx, 1
  7116                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
  7117 00004CD9 4883FE07                	cmp rsi, 7
  7118 00004CDD 7410                    	je .L_lambda_simple_env_end_006d
  7119 00004CDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7120 00004CE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7121 00004CE7 48FFC6                  	inc rsi
  7122 00004CEA 48FFC2                  	inc rdx
  7123 00004CED EBEA                    	jmp .L_lambda_simple_env_loop_006d
  7124                                  .L_lambda_simple_env_end_006d:
  7125 00004CEF 5B                      	pop rbx
  7126 00004CF0 BE00000000              	mov rsi, 0
  7127                                  .L_lambda_simple_params_loop_006d:	; copy params
  7128 00004CF5 4883FE01                	cmp rsi, 1
  7129 00004CF9 740E                    	je .L_lambda_simple_params_end_006d
  7130 00004CFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7131 00004D00 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7132 00004D04 48FFC6                  	inc rsi
  7133 00004D07 EBEC                    	jmp .L_lambda_simple_params_loop_006d
  7134                                  .L_lambda_simple_params_end_006d:
  7135 00004D09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7136 00004D0C 4889C3                  	mov rbx, rax
  7137 00004D0F 58                      	pop rax
  7138 00004D10 C60004                  	mov byte [rax], T_closure
  7139 00004D13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7140 00004D17 48C74009[244D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
  7141 00004D1F E9B6000000              	jmp .L_lambda_simple_end_006d
  7142                                  .L_lambda_simple_code_006d:	; lambda-simple body
  7143 00004D24 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7144 00004D2A 740B                    	je .L_lambda_simple_arity_check_ok_006d
  7145 00004D2C FF742410                	push qword [rsp + 8 * 2]
  7146 00004D30 6A01                    	push 1
  7147 00004D32 E969120000              	jmp L_error_incorrect_arity_simple
  7148                                  .L_lambda_simple_arity_check_ok_006d:
  7149 00004D37 C8000000                	enter 0, 0
  7150 00004D3B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7151 00004D40 E8A2120000              	call malloc
  7152 00004D45 50                      	push rax
  7153 00004D46 BF08000000              	mov rdi, 8 * 1	; new rib
  7154 00004D4B E897120000              	call malloc
  7155 00004D50 50                      	push rax
  7156 00004D51 BF48000000              	mov rdi, 8 * 9	; extended env
  7157 00004D56 E88C120000              	call malloc
  7158 00004D5B 488B7D10                	mov rdi, ENV
  7159 00004D5F BE00000000              	mov rsi, 0
  7160 00004D64 BA01000000              	mov rdx, 1
  7161                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
  7162 00004D69 4883FE08                	cmp rsi, 8
  7163 00004D6D 7410                    	je .L_lambda_simple_env_end_006e
  7164 00004D6F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7165 00004D73 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7166 00004D77 48FFC6                  	inc rsi
  7167 00004D7A 48FFC2                  	inc rdx
  7168 00004D7D EBEA                    	jmp .L_lambda_simple_env_loop_006e
  7169                                  .L_lambda_simple_env_end_006e:
  7170 00004D7F 5B                      	pop rbx
  7171 00004D80 BE00000000              	mov rsi, 0
  7172                                  .L_lambda_simple_params_loop_006e:	; copy params
  7173 00004D85 4883FE01                	cmp rsi, 1
  7174 00004D89 740E                    	je .L_lambda_simple_params_end_006e
  7175 00004D8B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7176 00004D90 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7177 00004D94 48FFC6                  	inc rsi
  7178 00004D97 EBEC                    	jmp .L_lambda_simple_params_loop_006e
  7179                                  .L_lambda_simple_params_end_006e:
  7180 00004D99 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7181 00004D9C 4889C3                  	mov rbx, rax
  7182 00004D9F 58                      	pop rax
  7183 00004DA0 C60004                  	mov byte [rax], T_closure
  7184 00004DA3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7185 00004DA7 48C74009[B14D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
  7186 00004DAF EB25                    	jmp .L_lambda_simple_end_006e
  7187                                  .L_lambda_simple_code_006e:	; lambda-simple body
  7188 00004DB1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7189 00004DB7 740B                    	je .L_lambda_simple_arity_check_ok_006e
  7190 00004DB9 FF742410                	push qword [rsp + 8 * 2]
  7191 00004DBD 6A01                    	push 1
  7192 00004DBF E9DC110000              	jmp L_error_incorrect_arity_simple
  7193                                  .L_lambda_simple_arity_check_ok_006e:
  7194 00004DC4 C8000000                	enter 0, 0
  7195 00004DC8 488B4510                	mov rax, ENV
  7196 00004DCC 488B00                  	mov rax, qword [rax + 8 * 0]
  7197 00004DCF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7198 00004DD2 C9                      	leave
  7199 00004DD3 C21800                  	ret AND_KILL_FRAME(1)
  7200                                  .L_lambda_simple_end_006e:	; new closure is in rax
  7201 00004DD6 C9                      	leave
  7202 00004DD7 C21800                  	ret AND_KILL_FRAME(1)
  7203                                  .L_lambda_simple_end_006d:	; new closure is in rax
  7204 00004DDA 50                      	push rax
  7205 00004DDB 6A01                    	push 1	; arg count
  7206 00004DDD 488B4520                	mov rax, PARAM(0)	; param p
  7207 00004DE1 803804                  	cmp byte [rax], T_closure
  7208 00004DE4 0F8554110000            	jne L_error_non_closure
  7209 00004DEA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7210 00004DED FF7508                  	push qword [rbp + 8 * 1]
  7211                                   ; old ret addr	pop rbp
  7212                                  ; restore the old rbp	mov rbx, 1
  7213 00004DF0 4883C303                	add rbx, 3
  7214                                  	mov rdi, dword [rbp + 8*2]
  7214          ******************       error: mismatch in operand sizes
  7215                                  .L_tc_recycle_frame_loop_0027:
  7216 00004DF4 4883FB00                	cmp rbx, 0
  7217 00004DF8 7411                    je .L_tc_recycle_frame_done_0027
  7218 00004DFA 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7219 00004DFE 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7220 00004E03 48FFCF                  	dec rdi
  7221 00004E06 48FFCB                  	dec rbx
  7222 00004E09 EBE9                    jmp .L_tc_recycle_frame_loop_0027
  7223                                  .L_tc_recycle_frame_done_0027:
  7224 00004E0B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7225 00004E0E C9                      	leave
  7226 00004E0F C21800                  	ret AND_KILL_FRAME(1)
  7227                                  .L_lambda_simple_end_006c:	; new closure is in rax
  7228 00004E12 803804                  	cmp byte [rax], T_closure
  7229 00004E15 0F8523110000            	jne L_error_non_closure
  7230 00004E1B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7231 00004E1E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7232 00004E21 50                      	push rax
  7233 00004E22 6A01                    	push 1	; arg count
  7234                                  	; preparing a non-tail-call
  7235                                  	; preparing a non-tail-call
  7236                                  	; preparing a non-tail-call
  7237 00004E24 488B4520                	mov rax, PARAM(0)	; param p
  7238 00004E28 50                      	push rax
  7239 00004E29 6A01                    	push 1	; arg count
  7240 00004E2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7241 00004E30 E8B2110000              	call malloc
  7242 00004E35 50                      	push rax
  7243 00004E36 BF08000000              	mov rdi, 8 * 1	; new rib
  7244 00004E3B E8A7110000              	call malloc
  7245 00004E40 50                      	push rax
  7246 00004E41 BF38000000              	mov rdi, 8 * 7	; extended env
  7247 00004E46 E89C110000              	call malloc
  7248 00004E4B 488B7D10                	mov rdi, ENV
  7249 00004E4F BE00000000              	mov rsi, 0
  7250 00004E54 BA01000000              	mov rdx, 1
  7251                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
  7252 00004E59 4883FE06                	cmp rsi, 6
  7253 00004E5D 7410                    	je .L_lambda_simple_env_end_006f
  7254 00004E5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7255 00004E63 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7256 00004E67 48FFC6                  	inc rsi
  7257 00004E6A 48FFC2                  	inc rdx
  7258 00004E6D EBEA                    	jmp .L_lambda_simple_env_loop_006f
  7259                                  .L_lambda_simple_env_end_006f:
  7260 00004E6F 5B                      	pop rbx
  7261 00004E70 BE00000000              	mov rsi, 0
  7262                                  .L_lambda_simple_params_loop_006f:	; copy params
  7263 00004E75 4883FE01                	cmp rsi, 1
  7264 00004E79 740E                    	je .L_lambda_simple_params_end_006f
  7265 00004E7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7266 00004E80 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7267 00004E84 48FFC6                  	inc rsi
  7268 00004E87 EBEC                    	jmp .L_lambda_simple_params_loop_006f
  7269                                  .L_lambda_simple_params_end_006f:
  7270 00004E89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7271 00004E8C 4889C3                  	mov rbx, rax
  7272 00004E8F 58                      	pop rax
  7273 00004E90 C60004                  	mov byte [rax], T_closure
  7274 00004E93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7275 00004E97 48C74009[A44E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
  7276 00004E9F E97E010000              	jmp .L_lambda_simple_end_006f
  7277                                  .L_lambda_simple_code_006f:	; lambda-simple body
  7278 00004EA4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7279 00004EAA 740B                    	je .L_lambda_simple_arity_check_ok_006f
  7280 00004EAC FF742410                	push qword [rsp + 8 * 2]
  7281 00004EB0 6A01                    	push 1
  7282 00004EB2 E9E9100000              	jmp L_error_incorrect_arity_simple
  7283                                  .L_lambda_simple_arity_check_ok_006f:
  7284 00004EB7 C8000000                	enter 0, 0
  7285                                  	; preparing a tail-call
  7286 00004EBB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7287 00004EC0 E822110000              	call malloc
  7288 00004EC5 50                      	push rax
  7289 00004EC6 BF08000000              	mov rdi, 8 * 1	; new rib
  7290 00004ECB E817110000              	call malloc
  7291 00004ED0 50                      	push rax
  7292 00004ED1 BF40000000              	mov rdi, 8 * 8	; extended env
  7293 00004ED6 E80C110000              	call malloc
  7294 00004EDB 488B7D10                	mov rdi, ENV
  7295 00004EDF BE00000000              	mov rsi, 0
  7296 00004EE4 BA01000000              	mov rdx, 1
  7297                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
  7298 00004EE9 4883FE07                	cmp rsi, 7
  7299 00004EED 7410                    	je .L_lambda_simple_env_end_0070
  7300 00004EEF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7301 00004EF3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7302 00004EF7 48FFC6                  	inc rsi
  7303 00004EFA 48FFC2                  	inc rdx
  7304 00004EFD EBEA                    	jmp .L_lambda_simple_env_loop_0070
  7305                                  .L_lambda_simple_env_end_0070:
  7306 00004EFF 5B                      	pop rbx
  7307 00004F00 BE00000000              	mov rsi, 0
  7308                                  .L_lambda_simple_params_loop_0070:	; copy params
  7309 00004F05 4883FE01                	cmp rsi, 1
  7310 00004F09 740E                    	je .L_lambda_simple_params_end_0070
  7311 00004F0B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7312 00004F10 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7313 00004F14 48FFC6                  	inc rsi
  7314 00004F17 EBEC                    	jmp .L_lambda_simple_params_loop_0070
  7315                                  .L_lambda_simple_params_end_0070:
  7316 00004F19 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7317 00004F1C 4889C3                  	mov rbx, rax
  7318 00004F1F 58                      	pop rax
  7319 00004F20 C60004                  	mov byte [rax], T_closure
  7320 00004F23 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7321 00004F27 48C74009[344F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
  7322 00004F2F E9B6000000              	jmp .L_lambda_simple_end_0070
  7323                                  .L_lambda_simple_code_0070:	; lambda-simple body
  7324 00004F34 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7325 00004F3A 740B                    	je .L_lambda_simple_arity_check_ok_0070
  7326 00004F3C FF742410                	push qword [rsp + 8 * 2]
  7327 00004F40 6A01                    	push 1
  7328 00004F42 E959100000              	jmp L_error_incorrect_arity_simple
  7329                                  .L_lambda_simple_arity_check_ok_0070:
  7330 00004F47 C8000000                	enter 0, 0
  7331 00004F4B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7332 00004F50 E892100000              	call malloc
  7333 00004F55 50                      	push rax
  7334 00004F56 BF08000000              	mov rdi, 8 * 1	; new rib
  7335 00004F5B E887100000              	call malloc
  7336 00004F60 50                      	push rax
  7337 00004F61 BF48000000              	mov rdi, 8 * 9	; extended env
  7338 00004F66 E87C100000              	call malloc
  7339 00004F6B 488B7D10                	mov rdi, ENV
  7340 00004F6F BE00000000              	mov rsi, 0
  7341 00004F74 BA01000000              	mov rdx, 1
  7342                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
  7343 00004F79 4883FE08                	cmp rsi, 8
  7344 00004F7D 7410                    	je .L_lambda_simple_env_end_0071
  7345 00004F7F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7346 00004F83 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7347 00004F87 48FFC6                  	inc rsi
  7348 00004F8A 48FFC2                  	inc rdx
  7349 00004F8D EBEA                    	jmp .L_lambda_simple_env_loop_0071
  7350                                  .L_lambda_simple_env_end_0071:
  7351 00004F8F 5B                      	pop rbx
  7352 00004F90 BE00000000              	mov rsi, 0
  7353                                  .L_lambda_simple_params_loop_0071:	; copy params
  7354 00004F95 4883FE01                	cmp rsi, 1
  7355 00004F99 740E                    	je .L_lambda_simple_params_end_0071
  7356 00004F9B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7357 00004FA0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7358 00004FA4 48FFC6                  	inc rsi
  7359 00004FA7 EBEC                    	jmp .L_lambda_simple_params_loop_0071
  7360                                  .L_lambda_simple_params_end_0071:
  7361 00004FA9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7362 00004FAC 4889C3                  	mov rbx, rax
  7363 00004FAF 58                      	pop rax
  7364 00004FB0 C60004                  	mov byte [rax], T_closure
  7365 00004FB3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7366 00004FB7 48C74009[C14F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
  7367 00004FBF EB25                    	jmp .L_lambda_simple_end_0071
  7368                                  .L_lambda_simple_code_0071:	; lambda-simple body
  7369 00004FC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7370 00004FC7 740B                    	je .L_lambda_simple_arity_check_ok_0071
  7371 00004FC9 FF742410                	push qword [rsp + 8 * 2]
  7372 00004FCD 6A01                    	push 1
  7373 00004FCF E9CC0F0000              	jmp L_error_incorrect_arity_simple
  7374                                  .L_lambda_simple_arity_check_ok_0071:
  7375 00004FD4 C8000000                	enter 0, 0
  7376 00004FD8 488B4510                	mov rax, ENV
  7377 00004FDC 488B00                  	mov rax, qword [rax + 8 * 0]
  7378 00004FDF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7379 00004FE2 C9                      	leave
  7380 00004FE3 C21800                  	ret AND_KILL_FRAME(1)
  7381                                  .L_lambda_simple_end_0071:	; new closure is in rax
  7382 00004FE6 C9                      	leave
  7383 00004FE7 C21800                  	ret AND_KILL_FRAME(1)
  7384                                  .L_lambda_simple_end_0070:	; new closure is in rax
  7385 00004FEA 50                      	push rax
  7386 00004FEB 6A01                    	push 1	; arg count
  7387 00004FED 488B4520                	mov rax, PARAM(0)	; param p
  7388 00004FF1 803804                  	cmp byte [rax], T_closure
  7389 00004FF4 0F85440F0000            	jne L_error_non_closure
  7390 00004FFA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7391 00004FFD FF7508                  	push qword [rbp + 8 * 1]
  7392                                   ; old ret addr	pop rbp
  7393                                  ; restore the old rbp	mov rbx, 1
  7394 00005000 4883C303                	add rbx, 3
  7395                                  	mov rdi, dword [rbp + 8*2]
  7395          ******************       error: mismatch in operand sizes
  7396                                  .L_tc_recycle_frame_loop_0028:
  7397 00005004 4883FB00                	cmp rbx, 0
  7398 00005008 7411                    je .L_tc_recycle_frame_done_0028
  7399 0000500A 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7400 0000500E 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7401 00005013 48FFCF                  	dec rdi
  7402 00005016 48FFCB                  	dec rbx
  7403 00005019 EBE9                    jmp .L_tc_recycle_frame_loop_0028
  7404                                  .L_tc_recycle_frame_done_0028:
  7405 0000501B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7406 0000501E C9                      	leave
  7407 0000501F C21800                  	ret AND_KILL_FRAME(1)
  7408                                  .L_lambda_simple_end_006f:	; new closure is in rax
  7409 00005022 803804                  	cmp byte [rax], T_closure
  7410 00005025 0F85130F0000            	jne L_error_non_closure
  7411 0000502B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7412 0000502E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7413 00005031 50                      	push rax
  7414 00005032 6A01                    	push 1	; arg count
  7415 00005034 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7416 00005039 E8A90F0000              	call malloc
  7417 0000503E 50                      	push rax
  7418 0000503F BF08000000              	mov rdi, 8 * 1	; new rib
  7419 00005044 E89E0F0000              	call malloc
  7420 00005049 50                      	push rax
  7421 0000504A BF38000000              	mov rdi, 8 * 7	; extended env
  7422 0000504F E8930F0000              	call malloc
  7423 00005054 488B7D10                	mov rdi, ENV
  7424 00005058 BE00000000              	mov rsi, 0
  7425 0000505D BA01000000              	mov rdx, 1
  7426                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
  7427 00005062 4883FE06                	cmp rsi, 6
  7428 00005066 7410                    	je .L_lambda_simple_env_end_0072
  7429 00005068 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7430 0000506C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7431 00005070 48FFC6                  	inc rsi
  7432 00005073 48FFC2                  	inc rdx
  7433 00005076 EBEA                    	jmp .L_lambda_simple_env_loop_0072
  7434                                  .L_lambda_simple_env_end_0072:
  7435 00005078 5B                      	pop rbx
  7436 00005079 BE00000000              	mov rsi, 0
  7437                                  .L_lambda_simple_params_loop_0072:	; copy params
  7438 0000507E 4883FE01                	cmp rsi, 1
  7439 00005082 740E                    	je .L_lambda_simple_params_end_0072
  7440 00005084 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7441 00005089 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7442 0000508D 48FFC6                  	inc rsi
  7443 00005090 EBEC                    	jmp .L_lambda_simple_params_loop_0072
  7444                                  .L_lambda_simple_params_end_0072:
  7445 00005092 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7446 00005095 4889C3                  	mov rbx, rax
  7447 00005098 58                      	pop rax
  7448 00005099 C60004                  	mov byte [rax], T_closure
  7449 0000509C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7450 000050A0 48C74009[AD500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
  7451 000050A8 E9BA010000              	jmp .L_lambda_simple_end_0072
  7452                                  .L_lambda_simple_code_0072:	; lambda-simple body
  7453 000050AD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7454 000050B3 740B                    	je .L_lambda_simple_arity_check_ok_0072
  7455 000050B5 FF742410                	push qword [rsp + 8 * 2]
  7456 000050B9 6A01                    	push 1
  7457 000050BB E9E00E0000              	jmp L_error_incorrect_arity_simple
  7458                                  .L_lambda_simple_arity_check_ok_0072:
  7459 000050C0 C8000000                	enter 0, 0
  7460 000050C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7461 000050C9 E8190F0000              	call malloc
  7462 000050CE 50                      	push rax
  7463 000050CF BF08000000              	mov rdi, 8 * 1	; new rib
  7464 000050D4 E80E0F0000              	call malloc
  7465 000050D9 50                      	push rax
  7466 000050DA BF40000000              	mov rdi, 8 * 8	; extended env
  7467 000050DF E8030F0000              	call malloc
  7468 000050E4 488B7D10                	mov rdi, ENV
  7469 000050E8 BE00000000              	mov rsi, 0
  7470 000050ED BA01000000              	mov rdx, 1
  7471                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
  7472 000050F2 4883FE07                	cmp rsi, 7
  7473 000050F6 7410                    	je .L_lambda_simple_env_end_0073
  7474 000050F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7475 000050FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7476 00005100 48FFC6                  	inc rsi
  7477 00005103 48FFC2                  	inc rdx
  7478 00005106 EBEA                    	jmp .L_lambda_simple_env_loop_0073
  7479                                  .L_lambda_simple_env_end_0073:
  7480 00005108 5B                      	pop rbx
  7481 00005109 BE00000000              	mov rsi, 0
  7482                                  .L_lambda_simple_params_loop_0073:	; copy params
  7483 0000510E 4883FE01                	cmp rsi, 1
  7484 00005112 740E                    	je .L_lambda_simple_params_end_0073
  7485 00005114 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7486 00005119 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7487 0000511D 48FFC6                  	inc rsi
  7488 00005120 EBEC                    	jmp .L_lambda_simple_params_loop_0073
  7489                                  .L_lambda_simple_params_end_0073:
  7490 00005122 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7491 00005125 4889C3                  	mov rbx, rax
  7492 00005128 58                      	pop rax
  7493 00005129 C60004                  	mov byte [rax], T_closure
  7494 0000512C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7495 00005130 48C74009[3D510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
  7496 00005138 E926010000              	jmp .L_lambda_simple_end_0073
  7497                                  .L_lambda_simple_code_0073:	; lambda-simple body
  7498 0000513D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7499 00005143 740B                    	je .L_lambda_simple_arity_check_ok_0073
  7500 00005145 FF742410                	push qword [rsp + 8 * 2]
  7501 00005149 6A01                    	push 1
  7502 0000514B E9500E0000              	jmp L_error_incorrect_arity_simple
  7503                                  .L_lambda_simple_arity_check_ok_0073:
  7504 00005150 C8000000                	enter 0, 0
  7505 00005154 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7506 00005159 E8890E0000              	call malloc
  7507 0000515E 50                      	push rax
  7508 0000515F BF08000000              	mov rdi, 8 * 1	; new rib
  7509 00005164 E87E0E0000              	call malloc
  7510 00005169 50                      	push rax
  7511 0000516A BF48000000              	mov rdi, 8 * 9	; extended env
  7512 0000516F E8730E0000              	call malloc
  7513 00005174 488B7D10                	mov rdi, ENV
  7514 00005178 BE00000000              	mov rsi, 0
  7515 0000517D BA01000000              	mov rdx, 1
  7516                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
  7517 00005182 4883FE08                	cmp rsi, 8
  7518 00005186 7410                    	je .L_lambda_simple_env_end_0074
  7519 00005188 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7520 0000518C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7521 00005190 48FFC6                  	inc rsi
  7522 00005193 48FFC2                  	inc rdx
  7523 00005196 EBEA                    	jmp .L_lambda_simple_env_loop_0074
  7524                                  .L_lambda_simple_env_end_0074:
  7525 00005198 5B                      	pop rbx
  7526 00005199 BE00000000              	mov rsi, 0
  7527                                  .L_lambda_simple_params_loop_0074:	; copy params
  7528 0000519E 4883FE01                	cmp rsi, 1
  7529 000051A2 740E                    	je .L_lambda_simple_params_end_0074
  7530 000051A4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7531 000051A9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7532 000051AD 48FFC6                  	inc rsi
  7533 000051B0 EBEC                    	jmp .L_lambda_simple_params_loop_0074
  7534                                  .L_lambda_simple_params_end_0074:
  7535 000051B2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7536 000051B5 4889C3                  	mov rbx, rax
  7537 000051B8 58                      	pop rax
  7538 000051B9 C60004                  	mov byte [rax], T_closure
  7539 000051BC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7540 000051C0 48C74009[CD510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
  7541 000051C8 E992000000              	jmp .L_lambda_simple_end_0074
  7542                                  .L_lambda_simple_code_0074:	; lambda-simple body
  7543 000051CD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7544 000051D3 740B                    	je .L_lambda_simple_arity_check_ok_0074
  7545 000051D5 FF742410                	push qword [rsp + 8 * 2]
  7546 000051D9 6A01                    	push 1
  7547 000051DB E9C00D0000              	jmp L_error_incorrect_arity_simple
  7548                                  .L_lambda_simple_arity_check_ok_0074:
  7549 000051E0 C8000000                	enter 0, 0
  7550                                  	; preparing a tail-call
  7551                                  	; preparing a non-tail-call
  7552 000051E4 488B4520                	mov rax, PARAM(0)	; param z
  7553 000051E8 50                      	push rax
  7554 000051E9 6A01                    	push 1	; arg count
  7555                                  	; preparing a non-tail-call
  7556 000051EB 488B4510                	mov rax, ENV
  7557 000051EF 488B00                  	mov rax, qword [rax + 8 * 0]
  7558 000051F2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  7559 000051F5 50                      	push rax
  7560 000051F6 6A01                    	push 1	; arg count
  7561 000051F8 488B4510                	mov rax, ENV
  7562 000051FC 488B4008                	mov rax, qword [rax + 8 * 1]
  7563 00005200 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  7564 00005203 803804                  	cmp byte [rax], T_closure
  7565 00005206 0F85320D0000            	jne L_error_non_closure
  7566 0000520C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7567 0000520F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7568 00005212 803804                  	cmp byte [rax], T_closure
  7569 00005215 0F85230D0000            	jne L_error_non_closure
  7570 0000521B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7571 0000521E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7572 00005221 50                      	push rax
  7573 00005222 6A01                    	push 1	; arg count
  7574 00005224 488B4510                	mov rax, ENV
  7575 00005228 488B00                  	mov rax, qword [rax + 8 * 0]
  7576 0000522B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  7577 0000522E 803804                  	cmp byte [rax], T_closure
  7578 00005231 0F85070D0000            	jne L_error_non_closure
  7579 00005237 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7580 0000523A FF7508                  	push qword [rbp + 8 * 1]
  7581                                   ; old ret addr	pop rbp
  7582                                  ; restore the old rbp	mov rbx, 1
  7583 0000523D 4883C303                	add rbx, 3
  7584                                  	mov rdi, dword [rbp + 8*2]
  7584          ******************       error: mismatch in operand sizes
  7585                                  .L_tc_recycle_frame_loop_0029:
  7586 00005241 4883FB00                	cmp rbx, 0
  7587 00005245 7411                    je .L_tc_recycle_frame_done_0029
  7588 00005247 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7589 0000524B 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7590 00005250 48FFCF                  	dec rdi
  7591 00005253 48FFCB                  	dec rbx
  7592 00005256 EBE9                    jmp .L_tc_recycle_frame_loop_0029
  7593                                  .L_tc_recycle_frame_done_0029:
  7594 00005258 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7595 0000525B C9                      	leave
  7596 0000525C C21800                  	ret AND_KILL_FRAME(1)
  7597                                  .L_lambda_simple_end_0074:	; new closure is in rax
  7598 0000525F C9                      	leave
  7599 00005260 C21800                  	ret AND_KILL_FRAME(1)
  7600                                  .L_lambda_simple_end_0073:	; new closure is in rax
  7601 00005263 C9                      	leave
  7602 00005264 C21800                  	ret AND_KILL_FRAME(1)
  7603                                  .L_lambda_simple_end_0072:	; new closure is in rax
  7604 00005267 803804                  	cmp byte [rax], T_closure
  7605 0000526A 0F85CE0C0000            	jne L_error_non_closure
  7606 00005270 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7607 00005273 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7608 00005276 50                      	push rax
  7609 00005277 6A01                    	push 1	; arg count
  7610 00005279 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7611 0000527E E8640D0000              	call malloc
  7612 00005283 50                      	push rax
  7613 00005284 BF08000000              	mov rdi, 8 * 1	; new rib
  7614 00005289 E8590D0000              	call malloc
  7615 0000528E 50                      	push rax
  7616 0000528F BF38000000              	mov rdi, 8 * 7	; extended env
  7617 00005294 E84E0D0000              	call malloc
  7618 00005299 488B7D10                	mov rdi, ENV
  7619 0000529D BE00000000              	mov rsi, 0
  7620 000052A2 BA01000000              	mov rdx, 1
  7621                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
  7622 000052A7 4883FE06                	cmp rsi, 6
  7623 000052AB 7410                    	je .L_lambda_simple_env_end_0075
  7624 000052AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7625 000052B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7626 000052B5 48FFC6                  	inc rsi
  7627 000052B8 48FFC2                  	inc rdx
  7628 000052BB EBEA                    	jmp .L_lambda_simple_env_loop_0075
  7629                                  .L_lambda_simple_env_end_0075:
  7630 000052BD 5B                      	pop rbx
  7631 000052BE BE00000000              	mov rsi, 0
  7632                                  .L_lambda_simple_params_loop_0075:	; copy params
  7633 000052C3 4883FE01                	cmp rsi, 1
  7634 000052C7 740E                    	je .L_lambda_simple_params_end_0075
  7635 000052C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7636 000052CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7637 000052D2 48FFC6                  	inc rsi
  7638 000052D5 EBEC                    	jmp .L_lambda_simple_params_loop_0075
  7639                                  .L_lambda_simple_params_end_0075:
  7640 000052D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7641 000052DA 4889C3                  	mov rbx, rax
  7642 000052DD 58                      	pop rax
  7643 000052DE C60004                  	mov byte [rax], T_closure
  7644 000052E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7645 000052E5 48C74009[F2520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
  7646 000052ED E99B010000              	jmp .L_lambda_simple_end_0075
  7647                                  .L_lambda_simple_code_0075:	; lambda-simple body
  7648 000052F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7649 000052F8 740B                    	je .L_lambda_simple_arity_check_ok_0075
  7650 000052FA FF742410                	push qword [rsp + 8 * 2]
  7651 000052FE 6A01                    	push 1
  7652 00005300 E99B0C0000              	jmp L_error_incorrect_arity_simple
  7653                                  .L_lambda_simple_arity_check_ok_0075:
  7654 00005305 C8000000                	enter 0, 0
  7655 00005309 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7656 0000530E E8D40C0000              	call malloc
  7657 00005313 50                      	push rax
  7658 00005314 BF08000000              	mov rdi, 8 * 1	; new rib
  7659 00005319 E8C90C0000              	call malloc
  7660 0000531E 50                      	push rax
  7661 0000531F BF40000000              	mov rdi, 8 * 8	; extended env
  7662 00005324 E8BE0C0000              	call malloc
  7663 00005329 488B7D10                	mov rdi, ENV
  7664 0000532D BE00000000              	mov rsi, 0
  7665 00005332 BA01000000              	mov rdx, 1
  7666                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
  7667 00005337 4883FE07                	cmp rsi, 7
  7668 0000533B 7410                    	je .L_lambda_simple_env_end_0076
  7669 0000533D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7670 00005341 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7671 00005345 48FFC6                  	inc rsi
  7672 00005348 48FFC2                  	inc rdx
  7673 0000534B EBEA                    	jmp .L_lambda_simple_env_loop_0076
  7674                                  .L_lambda_simple_env_end_0076:
  7675 0000534D 5B                      	pop rbx
  7676 0000534E BE00000000              	mov rsi, 0
  7677                                  .L_lambda_simple_params_loop_0076:	; copy params
  7678 00005353 4883FE01                	cmp rsi, 1
  7679 00005357 740E                    	je .L_lambda_simple_params_end_0076
  7680 00005359 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7681 0000535E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7682 00005362 48FFC6                  	inc rsi
  7683 00005365 EBEC                    	jmp .L_lambda_simple_params_loop_0076
  7684                                  .L_lambda_simple_params_end_0076:
  7685 00005367 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7686 0000536A 4889C3                  	mov rbx, rax
  7687 0000536D 58                      	pop rax
  7688 0000536E C60004                  	mov byte [rax], T_closure
  7689 00005371 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7690 00005375 48C74009[82530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
  7691 0000537D E907010000              	jmp .L_lambda_simple_end_0076
  7692                                  .L_lambda_simple_code_0076:	; lambda-simple body
  7693 00005382 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7694 00005388 740B                    	je .L_lambda_simple_arity_check_ok_0076
  7695 0000538A FF742410                	push qword [rsp + 8 * 2]
  7696 0000538E 6A01                    	push 1
  7697 00005390 E90B0C0000              	jmp L_error_incorrect_arity_simple
  7698                                  .L_lambda_simple_arity_check_ok_0076:
  7699 00005395 C8000000                	enter 0, 0
  7700 00005399 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7701 0000539E E8440C0000              	call malloc
  7702 000053A3 50                      	push rax
  7703 000053A4 BF08000000              	mov rdi, 8 * 1	; new rib
  7704 000053A9 E8390C0000              	call malloc
  7705 000053AE 50                      	push rax
  7706 000053AF BF48000000              	mov rdi, 8 * 9	; extended env
  7707 000053B4 E82E0C0000              	call malloc
  7708 000053B9 488B7D10                	mov rdi, ENV
  7709 000053BD BE00000000              	mov rsi, 0
  7710 000053C2 BA01000000              	mov rdx, 1
  7711                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
  7712 000053C7 4883FE08                	cmp rsi, 8
  7713 000053CB 7410                    	je .L_lambda_simple_env_end_0077
  7714 000053CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7715 000053D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7716 000053D5 48FFC6                  	inc rsi
  7717 000053D8 48FFC2                  	inc rdx
  7718 000053DB EBEA                    	jmp .L_lambda_simple_env_loop_0077
  7719                                  .L_lambda_simple_env_end_0077:
  7720 000053DD 5B                      	pop rbx
  7721 000053DE BE00000000              	mov rsi, 0
  7722                                  .L_lambda_simple_params_loop_0077:	; copy params
  7723 000053E3 4883FE01                	cmp rsi, 1
  7724 000053E7 740E                    	je .L_lambda_simple_params_end_0077
  7725 000053E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7726 000053EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7727 000053F2 48FFC6                  	inc rsi
  7728 000053F5 EBEC                    	jmp .L_lambda_simple_params_loop_0077
  7729                                  .L_lambda_simple_params_end_0077:
  7730 000053F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7731 000053FA 4889C3                  	mov rbx, rax
  7732 000053FD 58                      	pop rax
  7733 000053FE C60004                  	mov byte [rax], T_closure
  7734 00005401 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7735 00005405 48C74009[0F540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
  7736 0000540D EB76                    	jmp .L_lambda_simple_end_0077
  7737                                  .L_lambda_simple_code_0077:	; lambda-simple body
  7738 0000540F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7739 00005415 740B                    	je .L_lambda_simple_arity_check_ok_0077
  7740 00005417 FF742410                	push qword [rsp + 8 * 2]
  7741 0000541B 6A01                    	push 1
  7742 0000541D E97E0B0000              	jmp L_error_incorrect_arity_simple
  7743                                  .L_lambda_simple_arity_check_ok_0077:
  7744 00005422 C8000000                	enter 0, 0
  7745                                  	; preparing a tail-call
  7746 00005426 488B4510                	mov rax, ENV
  7747 0000542A 488B00                  	mov rax, qword [rax + 8 * 0]
  7748 0000542D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  7749 00005430 50                      	push rax
  7750 00005431 6A01                    	push 1	; arg count
  7751                                  	; preparing a non-tail-call
  7752 00005433 488B4510                	mov rax, ENV
  7753 00005437 488B4008                	mov rax, qword [rax + 8 * 1]
  7754 0000543B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7755 0000543E 50                      	push rax
  7756 0000543F 6A01                    	push 1	; arg count
  7757 00005441 488B4520                	mov rax, PARAM(0)	; param c
  7758 00005445 803804                  	cmp byte [rax], T_closure
  7759 00005448 0F85F00A0000            	jne L_error_non_closure
  7760 0000544E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7761 00005451 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7762 00005454 803804                  	cmp byte [rax], T_closure
  7763 00005457 0F85E10A0000            	jne L_error_non_closure
  7764 0000545D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7765 00005460 FF7508                  	push qword [rbp + 8 * 1]
  7766                                   ; old ret addr	pop rbp
  7767                                  ; restore the old rbp	mov rbx, 1
  7768 00005463 4883C303                	add rbx, 3
  7769                                  	mov rdi, dword [rbp + 8*2]
  7769          ******************       error: mismatch in operand sizes
  7770                                  .L_tc_recycle_frame_loop_002a:
  7771 00005467 4883FB00                	cmp rbx, 0
  7772 0000546B 7411                    je .L_tc_recycle_frame_done_002a
  7773 0000546D 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7774 00005471 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7775 00005476 48FFCF                  	dec rdi
  7776 00005479 48FFCB                  	dec rbx
  7777 0000547C EBE9                    jmp .L_tc_recycle_frame_loop_002a
  7778                                  .L_tc_recycle_frame_done_002a:
  7779 0000547E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7780 00005481 C9                      	leave
  7781 00005482 C21800                  	ret AND_KILL_FRAME(1)
  7782                                  .L_lambda_simple_end_0077:	; new closure is in rax
  7783 00005485 C9                      	leave
  7784 00005486 C21800                  	ret AND_KILL_FRAME(1)
  7785                                  .L_lambda_simple_end_0076:	; new closure is in rax
  7786 00005489 C9                      	leave
  7787 0000548A C21800                  	ret AND_KILL_FRAME(1)
  7788                                  .L_lambda_simple_end_0075:	; new closure is in rax
  7789 0000548D 803804                  	cmp byte [rax], T_closure
  7790 00005490 0F85A80A0000            	jne L_error_non_closure
  7791 00005496 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7792 00005499 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7793 0000549C 803804                  	cmp byte [rax], T_closure
  7794 0000549F 0F85990A0000            	jne L_error_non_closure
  7795 000054A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7796 000054A8 FF7508                  	push qword [rbp + 8 * 1]
  7797                                   ; old ret addr	pop rbp
  7798                                  ; restore the old rbp	mov rbx, 1
  7799 000054AB 4883C303                	add rbx, 3
  7800                                  	mov rdi, dword [rbp + 8*2]
  7800          ******************       error: mismatch in operand sizes
  7801                                  .L_tc_recycle_frame_loop_0026:
  7802 000054AF 4883FB00                	cmp rbx, 0
  7803 000054B3 7411                    je .L_tc_recycle_frame_done_0026
  7804 000054B5 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7805 000054B9 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7806 000054BE 48FFCF                  	dec rdi
  7807 000054C1 48FFCB                  	dec rbx
  7808 000054C4 EBE9                    jmp .L_tc_recycle_frame_loop_0026
  7809                                  .L_tc_recycle_frame_done_0026:
  7810 000054C6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7811 000054C9 C9                      	leave
  7812 000054CA C21800                  	ret AND_KILL_FRAME(1)
  7813                                  .L_lambda_simple_end_006b:	; new closure is in rax
  7814 000054CD 50                      	push rax
  7815 000054CE 6A01                    	push 1	; arg count
  7816 000054D0 488B4520                	mov rax, PARAM(0)	; param n
  7817 000054D4 803804                  	cmp byte [rax], T_closure
  7818 000054D7 0F85610A0000            	jne L_error_non_closure
  7819 000054DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7820 000054E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7821 000054E3 803804                  	cmp byte [rax], T_closure
  7822 000054E6 0F85520A0000            	jne L_error_non_closure
  7823 000054EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7824 000054EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7825 000054F2 50                      	push rax
  7826 000054F3 6A01                    	push 1	; arg count
  7827 000054F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7828 000054FA E8E80A0000              	call malloc
  7829 000054FF 50                      	push rax
  7830 00005500 BF08000000              	mov rdi, 8 * 1	; new rib
  7831 00005505 E8DD0A0000              	call malloc
  7832 0000550A 50                      	push rax
  7833 0000550B BF30000000              	mov rdi, 8 * 6	; extended env
  7834 00005510 E8D20A0000              	call malloc
  7835 00005515 488B7D10                	mov rdi, ENV
  7836 00005519 BE00000000              	mov rsi, 0
  7837 0000551E BA01000000              	mov rdx, 1
  7838                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
  7839 00005523 4883FE05                	cmp rsi, 5
  7840 00005527 7410                    	je .L_lambda_simple_env_end_0078
  7841 00005529 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7842 0000552D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7843 00005531 48FFC6                  	inc rsi
  7844 00005534 48FFC2                  	inc rdx
  7845 00005537 EBEA                    	jmp .L_lambda_simple_env_loop_0078
  7846                                  .L_lambda_simple_env_end_0078:
  7847 00005539 5B                      	pop rbx
  7848 0000553A BE00000000              	mov rsi, 0
  7849                                  .L_lambda_simple_params_loop_0078:	; copy params
  7850 0000553F 4883FE01                	cmp rsi, 1
  7851 00005543 740E                    	je .L_lambda_simple_params_end_0078
  7852 00005545 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7853 0000554A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7854 0000554E 48FFC6                  	inc rsi
  7855 00005551 EBEC                    	jmp .L_lambda_simple_params_loop_0078
  7856                                  .L_lambda_simple_params_end_0078:
  7857 00005553 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7858 00005556 4889C3                  	mov rbx, rax
  7859 00005559 58                      	pop rax
  7860 0000555A C60004                  	mov byte [rax], T_closure
  7861 0000555D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7862 00005561 48C74009[6E550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
  7863 00005569 E978010000              	jmp .L_lambda_simple_end_0078
  7864                                  .L_lambda_simple_code_0078:	; lambda-simple body
  7865 0000556E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7866 00005574 740B                    	je .L_lambda_simple_arity_check_ok_0078
  7867 00005576 FF742410                	push qword [rsp + 8 * 2]
  7868 0000557A 6A01                    	push 1
  7869 0000557C E91F0A0000              	jmp L_error_incorrect_arity_simple
  7870                                  .L_lambda_simple_arity_check_ok_0078:
  7871 00005581 C8000000                	enter 0, 0
  7872                                  	; preparing a tail-call
  7873 00005585 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7874 0000558A E8580A0000              	call malloc
  7875 0000558F 50                      	push rax
  7876 00005590 BF08000000              	mov rdi, 8 * 1	; new rib
  7877 00005595 E84D0A0000              	call malloc
  7878 0000559A 50                      	push rax
  7879 0000559B BF38000000              	mov rdi, 8 * 7	; extended env
  7880 000055A0 E8420A0000              	call malloc
  7881 000055A5 488B7D10                	mov rdi, ENV
  7882 000055A9 BE00000000              	mov rsi, 0
  7883 000055AE BA01000000              	mov rdx, 1
  7884                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
  7885 000055B3 4883FE06                	cmp rsi, 6
  7886 000055B7 7410                    	je .L_lambda_simple_env_end_0079
  7887 000055B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7888 000055BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7889 000055C1 48FFC6                  	inc rsi
  7890 000055C4 48FFC2                  	inc rdx
  7891 000055C7 EBEA                    	jmp .L_lambda_simple_env_loop_0079
  7892                                  .L_lambda_simple_env_end_0079:
  7893 000055C9 5B                      	pop rbx
  7894 000055CA BE00000000              	mov rsi, 0
  7895                                  .L_lambda_simple_params_loop_0079:	; copy params
  7896 000055CF 4883FE01                	cmp rsi, 1
  7897 000055D3 740E                    	je .L_lambda_simple_params_end_0079
  7898 000055D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7899 000055DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7900 000055DE 48FFC6                  	inc rsi
  7901 000055E1 EBEC                    	jmp .L_lambda_simple_params_loop_0079
  7902                                  .L_lambda_simple_params_end_0079:
  7903 000055E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7904 000055E6 4889C3                  	mov rbx, rax
  7905 000055E9 58                      	pop rax
  7906 000055EA C60004                  	mov byte [rax], T_closure
  7907 000055ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7908 000055F1 48C74009[FE550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
  7909 000055F9 E9B0000000              	jmp .L_lambda_simple_end_0079
  7910                                  .L_lambda_simple_code_0079:	; lambda-simple body
  7911 000055FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7912 00005604 740B                    	je .L_lambda_simple_arity_check_ok_0079
  7913 00005606 FF742410                	push qword [rsp + 8 * 2]
  7914 0000560A 6A01                    	push 1
  7915 0000560C E98F090000              	jmp L_error_incorrect_arity_simple
  7916                                  .L_lambda_simple_arity_check_ok_0079:
  7917 00005611 C8000000                	enter 0, 0
  7918 00005615 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7919 0000561A E8C8090000              	call malloc
  7920 0000561F 50                      	push rax
  7921 00005620 BF08000000              	mov rdi, 8 * 1	; new rib
  7922 00005625 E8BD090000              	call malloc
  7923 0000562A 50                      	push rax
  7924 0000562B BF40000000              	mov rdi, 8 * 8	; extended env
  7925 00005630 E8B2090000              	call malloc
  7926 00005635 488B7D10                	mov rdi, ENV
  7927 00005639 BE00000000              	mov rsi, 0
  7928 0000563E BA01000000              	mov rdx, 1
  7929                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
  7930 00005643 4883FE07                	cmp rsi, 7
  7931 00005647 7410                    	je .L_lambda_simple_env_end_007a
  7932 00005649 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7933 0000564D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7934 00005651 48FFC6                  	inc rsi
  7935 00005654 48FFC2                  	inc rdx
  7936 00005657 EBEA                    	jmp .L_lambda_simple_env_loop_007a
  7937                                  .L_lambda_simple_env_end_007a:
  7938 00005659 5B                      	pop rbx
  7939 0000565A BE00000000              	mov rsi, 0
  7940                                  .L_lambda_simple_params_loop_007a:	; copy params
  7941 0000565F 4883FE01                	cmp rsi, 1
  7942 00005663 740E                    	je .L_lambda_simple_params_end_007a
  7943 00005665 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7944 0000566A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7945 0000566E 48FFC6                  	inc rsi
  7946 00005671 EBEC                    	jmp .L_lambda_simple_params_loop_007a
  7947                                  .L_lambda_simple_params_end_007a:
  7948 00005673 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7949 00005676 4889C3                  	mov rbx, rax
  7950 00005679 58                      	pop rax
  7951 0000567A C60004                  	mov byte [rax], T_closure
  7952 0000567D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7953 00005681 48C74009[8B560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
  7954 00005689 EB1F                    	jmp .L_lambda_simple_end_007a
  7955                                  .L_lambda_simple_code_007a:	; lambda-simple body
  7956 0000568B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7957 00005691 740B                    	je .L_lambda_simple_arity_check_ok_007a
  7958 00005693 FF742410                	push qword [rsp + 8 * 2]
  7959 00005697 6A01                    	push 1
  7960 00005699 E902090000              	jmp L_error_incorrect_arity_simple
  7961                                  .L_lambda_simple_arity_check_ok_007a:
  7962 0000569E C8000000                	enter 0, 0
  7963 000056A2 488B4520                	mov rax, PARAM(0)	; param b
  7964 000056A6 C9                      	leave
  7965 000056A7 C21800                  	ret AND_KILL_FRAME(1)
  7966                                  .L_lambda_simple_end_007a:	; new closure is in rax
  7967 000056AA C9                      	leave
  7968 000056AB C21800                  	ret AND_KILL_FRAME(1)
  7969                                  .L_lambda_simple_end_0079:	; new closure is in rax
  7970 000056AE 50                      	push rax
  7971 000056AF 6A01                    	push 1	; arg count
  7972 000056B1 488B4520                	mov rax, PARAM(0)	; param p
  7973 000056B5 803804                  	cmp byte [rax], T_closure
  7974 000056B8 0F8580080000            	jne L_error_non_closure
  7975 000056BE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7976 000056C1 FF7508                  	push qword [rbp + 8 * 1]
  7977                                   ; old ret addr	pop rbp
  7978                                  ; restore the old rbp	mov rbx, 1
  7979 000056C4 4883C303                	add rbx, 3
  7980                                  	mov rdi, dword [rbp + 8*2]
  7980          ******************       error: mismatch in operand sizes
  7981                                  .L_tc_recycle_frame_loop_002b:
  7982 000056C8 4883FB00                	cmp rbx, 0
  7983 000056CC 7411                    je .L_tc_recycle_frame_done_002b
  7984 000056CE 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7985 000056D2 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7986 000056D7 48FFCF                  	dec rdi
  7987 000056DA 48FFCB                  	dec rbx
  7988 000056DD EBE9                    jmp .L_tc_recycle_frame_loop_002b
  7989                                  .L_tc_recycle_frame_done_002b:
  7990 000056DF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7991 000056E2 C9                      	leave
  7992 000056E3 C21800                  	ret AND_KILL_FRAME(1)
  7993                                  .L_lambda_simple_end_0078:	; new closure is in rax
  7994 000056E6 803804                  	cmp byte [rax], T_closure
  7995 000056E9 0F854F080000            	jne L_error_non_closure
  7996 000056EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7997 000056F2 FF7508                  	push qword [rbp + 8 * 1]
  7998                                   ; old ret addr	pop rbp
  7999                                  ; restore the old rbp	mov rbx, 1
  8000 000056F5 4883C303                	add rbx, 3
  8001                                  	mov rdi, dword [rbp + 8*2]
  8001          ******************       error: mismatch in operand sizes
  8002                                  .L_tc_recycle_frame_loop_0024:
  8003 000056F9 4883FB00                	cmp rbx, 0
  8004 000056FD 7411                    je .L_tc_recycle_frame_done_0024
  8005 000056FF 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8006 00005703 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8007 00005708 48FFCF                  	dec rdi
  8008 0000570B 48FFCB                  	dec rbx
  8009 0000570E EBE9                    jmp .L_tc_recycle_frame_loop_0024
  8010                                  .L_tc_recycle_frame_done_0024:
  8011 00005710 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8012 00005713 C9                      	leave
  8013 00005714 C21800                  	ret AND_KILL_FRAME(1)
  8014                                  .L_lambda_simple_end_0063:	; new closure is in rax
  8015 00005717 50                      	push rax
  8016 00005718 6A01                    	push 1	; arg count
  8017 0000571A 488B4520                	mov rax, PARAM(0)	; param b
  8018 0000571E 803804                  	cmp byte [rax], T_closure
  8019 00005721 0F8517080000            	jne L_error_non_closure
  8020 00005727 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8021 0000572A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8022 0000572D 803804                  	cmp byte [rax], T_closure
  8023 00005730 0F8508080000            	jne L_error_non_closure
  8024 00005736 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8025 00005739 FF7508                  	push qword [rbp + 8 * 1]
  8026                                   ; old ret addr	pop rbp
  8027                                  ; restore the old rbp	mov rbx, 1
  8028 0000573C 4883C303                	add rbx, 3
  8029                                  	mov rdi, dword [rbp + 8*2]
  8029          ******************       error: mismatch in operand sizes
  8030                                  .L_tc_recycle_frame_loop_0023:
  8031 00005740 4883FB00                	cmp rbx, 0
  8032 00005744 7411                    je .L_tc_recycle_frame_done_0023
  8033 00005746 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8034 0000574A 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8035 0000574F 48FFCF                  	dec rdi
  8036 00005752 48FFCB                  	dec rbx
  8037 00005755 EBE9                    jmp .L_tc_recycle_frame_loop_0023
  8038                                  .L_tc_recycle_frame_done_0023:
  8039 00005757 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8040 0000575A C9                      	leave
  8041 0000575B C21800                  	ret AND_KILL_FRAME(1)
  8042                                  .L_lambda_simple_end_0062:	; new closure is in rax
  8043 0000575E C9                      	leave
  8044 0000575F C21800                  	ret AND_KILL_FRAME(1)
  8045                                  .L_lambda_simple_end_0061:	; new closure is in rax
  8046 00005762 803804                  	cmp byte [rax], T_closure
  8047 00005765 0F85D3070000            	jne L_error_non_closure
  8048 0000576B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8049 0000576E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8050 00005771 803804                  	cmp byte [rax], T_closure
  8051 00005774 0F85C4070000            	jne L_error_non_closure
  8052 0000577A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8053 0000577D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8054 00005780 50                      	push rax
  8055 00005781 6A01                    	push 1	; arg count
  8056 00005783 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8057 00005788 E85A080000              	call malloc
  8058 0000578D 50                      	push rax
  8059 0000578E BF08000000              	mov rdi, 8 * 1	; new rib
  8060 00005793 E84F080000              	call malloc
  8061 00005798 50                      	push rax
  8062 00005799 BF18000000              	mov rdi, 8 * 3	; extended env
  8063 0000579E E844080000              	call malloc
  8064 000057A3 488B7D10                	mov rdi, ENV
  8065 000057A7 BE00000000              	mov rsi, 0
  8066 000057AC BA01000000              	mov rdx, 1
  8067                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
  8068 000057B1 4883FE02                	cmp rsi, 2
  8069 000057B5 7410                    	je .L_lambda_simple_env_end_007b
  8070 000057B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8071 000057BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8072 000057BF 48FFC6                  	inc rsi
  8073 000057C2 48FFC2                  	inc rdx
  8074 000057C5 EBEA                    	jmp .L_lambda_simple_env_loop_007b
  8075                                  .L_lambda_simple_env_end_007b:
  8076 000057C7 5B                      	pop rbx
  8077 000057C8 BE00000000              	mov rsi, 0
  8078                                  .L_lambda_simple_params_loop_007b:	; copy params
  8079 000057CD 4883FE01                	cmp rsi, 1
  8080 000057D1 740E                    	je .L_lambda_simple_params_end_007b
  8081 000057D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8082 000057D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8083 000057DC 48FFC6                  	inc rsi
  8084 000057DF EBEC                    	jmp .L_lambda_simple_params_loop_007b
  8085                                  .L_lambda_simple_params_end_007b:
  8086 000057E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8087 000057E4 4889C3                  	mov rbx, rax
  8088 000057E7 58                      	pop rax
  8089 000057E8 C60004                  	mov byte [rax], T_closure
  8090 000057EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8091 000057EF 48C74009[FC570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
  8092 000057F7 E94D030000              	jmp .L_lambda_simple_end_007b
  8093                                  .L_lambda_simple_code_007b:	; lambda-simple body
  8094 000057FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8095 00005802 740B                    	je .L_lambda_simple_arity_check_ok_007b
  8096 00005804 FF742410                	push qword [rsp + 8 * 2]
  8097 00005808 6A01                    	push 1
  8098 0000580A E991070000              	jmp L_error_incorrect_arity_simple
  8099                                  .L_lambda_simple_arity_check_ok_007b:
  8100 0000580F C8000000                	enter 0, 0
  8101                                  	; preparing a tail-call
  8102 00005813 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8103 00005818 E8CA070000              	call malloc
  8104 0000581D 50                      	push rax
  8105 0000581E BF08000000              	mov rdi, 8 * 1	; new rib
  8106 00005823 E8BF070000              	call malloc
  8107 00005828 50                      	push rax
  8108 00005829 BF20000000              	mov rdi, 8 * 4	; extended env
  8109 0000582E E8B4070000              	call malloc
  8110 00005833 488B7D10                	mov rdi, ENV
  8111 00005837 BE00000000              	mov rsi, 0
  8112 0000583C BA01000000              	mov rdx, 1
  8113                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
  8114 00005841 4883FE03                	cmp rsi, 3
  8115 00005845 7410                    	je .L_lambda_simple_env_end_007c
  8116 00005847 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8117 0000584B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8118 0000584F 48FFC6                  	inc rsi
  8119 00005852 48FFC2                  	inc rdx
  8120 00005855 EBEA                    	jmp .L_lambda_simple_env_loop_007c
  8121                                  .L_lambda_simple_env_end_007c:
  8122 00005857 5B                      	pop rbx
  8123 00005858 BE00000000              	mov rsi, 0
  8124                                  .L_lambda_simple_params_loop_007c:	; copy params
  8125 0000585D 4883FE01                	cmp rsi, 1
  8126 00005861 740E                    	je .L_lambda_simple_params_end_007c
  8127 00005863 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8128 00005868 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8129 0000586C 48FFC6                  	inc rsi
  8130 0000586F EBEC                    	jmp .L_lambda_simple_params_loop_007c
  8131                                  .L_lambda_simple_params_end_007c:
  8132 00005871 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8133 00005874 4889C3                  	mov rbx, rax
  8134 00005877 58                      	pop rax
  8135 00005878 C60004                  	mov byte [rax], T_closure
  8136 0000587B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8137 0000587F 48C74009[8C580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
  8138 00005887 E9B6000000              	jmp .L_lambda_simple_end_007c
  8139                                  .L_lambda_simple_code_007c:	; lambda-simple body
  8140 0000588C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8141 00005892 740B                    	je .L_lambda_simple_arity_check_ok_007c
  8142 00005894 FF742410                	push qword [rsp + 8 * 2]
  8143 00005898 6A01                    	push 1
  8144 0000589A E901070000              	jmp L_error_incorrect_arity_simple
  8145                                  .L_lambda_simple_arity_check_ok_007c:
  8146 0000589F C8000000                	enter 0, 0
  8147 000058A3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8148 000058A8 E83A070000              	call malloc
  8149 000058AD 50                      	push rax
  8150 000058AE BF08000000              	mov rdi, 8 * 1	; new rib
  8151 000058B3 E82F070000              	call malloc
  8152 000058B8 50                      	push rax
  8153 000058B9 BF28000000              	mov rdi, 8 * 5	; extended env
  8154 000058BE E824070000              	call malloc
  8155 000058C3 488B7D10                	mov rdi, ENV
  8156 000058C7 BE00000000              	mov rsi, 0
  8157 000058CC BA01000000              	mov rdx, 1
  8158                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
  8159 000058D1 4883FE04                	cmp rsi, 4
  8160 000058D5 7410                    	je .L_lambda_simple_env_end_007d
  8161 000058D7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8162 000058DB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8163 000058DF 48FFC6                  	inc rsi
  8164 000058E2 48FFC2                  	inc rdx
  8165 000058E5 EBEA                    	jmp .L_lambda_simple_env_loop_007d
  8166                                  .L_lambda_simple_env_end_007d:
  8167 000058E7 5B                      	pop rbx
  8168 000058E8 BE00000000              	mov rsi, 0
  8169                                  .L_lambda_simple_params_loop_007d:	; copy params
  8170 000058ED 4883FE01                	cmp rsi, 1
  8171 000058F1 740E                    	je .L_lambda_simple_params_end_007d
  8172 000058F3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8173 000058F8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8174 000058FC 48FFC6                  	inc rsi
  8175 000058FF EBEC                    	jmp .L_lambda_simple_params_loop_007d
  8176                                  .L_lambda_simple_params_end_007d:
  8177 00005901 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8178 00005904 4889C3                  	mov rbx, rax
  8179 00005907 58                      	pop rax
  8180 00005908 C60004                  	mov byte [rax], T_closure
  8181 0000590B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8182 0000590F 48C74009[19590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
  8183 00005917 EB25                    	jmp .L_lambda_simple_end_007d
  8184                                  .L_lambda_simple_code_007d:	; lambda-simple body
  8185 00005919 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8186 0000591F 740B                    	je .L_lambda_simple_arity_check_ok_007d
  8187 00005921 FF742410                	push qword [rsp + 8 * 2]
  8188 00005925 6A01                    	push 1
  8189 00005927 E974060000              	jmp L_error_incorrect_arity_simple
  8190                                  .L_lambda_simple_arity_check_ok_007d:
  8191 0000592C C8000000                	enter 0, 0
  8192 00005930 488B4510                	mov rax, ENV
  8193 00005934 488B00                  	mov rax, qword [rax + 8 * 0]
  8194 00005937 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  8195 0000593A C9                      	leave
  8196 0000593B C21800                  	ret AND_KILL_FRAME(1)
  8197                                  .L_lambda_simple_end_007d:	; new closure is in rax
  8198 0000593E C9                      	leave
  8199 0000593F C21800                  	ret AND_KILL_FRAME(1)
  8200                                  .L_lambda_simple_end_007c:	; new closure is in rax
  8201 00005942 50                      	push rax
  8202 00005943 6A01                    	push 1	; arg count
  8203                                  	; preparing a non-tail-call
  8204 00005945 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8205 0000594A E898060000              	call malloc
  8206 0000594F 50                      	push rax
  8207 00005950 BF08000000              	mov rdi, 8 * 1	; new rib
  8208 00005955 E88D060000              	call malloc
  8209 0000595A 50                      	push rax
  8210 0000595B BF20000000              	mov rdi, 8 * 4	; extended env
  8211 00005960 E882060000              	call malloc
  8212 00005965 488B7D10                	mov rdi, ENV
  8213 00005969 BE00000000              	mov rsi, 0
  8214 0000596E BA01000000              	mov rdx, 1
  8215                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
  8216 00005973 4883FE03                	cmp rsi, 3
  8217 00005977 7410                    	je .L_lambda_simple_env_end_007e
  8218 00005979 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8219 0000597D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8220 00005981 48FFC6                  	inc rsi
  8221 00005984 48FFC2                  	inc rdx
  8222 00005987 EBEA                    	jmp .L_lambda_simple_env_loop_007e
  8223                                  .L_lambda_simple_env_end_007e:
  8224 00005989 5B                      	pop rbx
  8225 0000598A BE00000000              	mov rsi, 0
  8226                                  .L_lambda_simple_params_loop_007e:	; copy params
  8227 0000598F 4883FE01                	cmp rsi, 1
  8228 00005993 740E                    	je .L_lambda_simple_params_end_007e
  8229 00005995 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8230 0000599A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8231 0000599E 48FFC6                  	inc rsi
  8232 000059A1 EBEC                    	jmp .L_lambda_simple_params_loop_007e
  8233                                  .L_lambda_simple_params_end_007e:
  8234 000059A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8235 000059A6 4889C3                  	mov rbx, rax
  8236 000059A9 58                      	pop rax
  8237 000059AA C60004                  	mov byte [rax], T_closure
  8238 000059AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8239 000059B1 48C74009[BE590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
  8240 000059B9 E944010000              	jmp .L_lambda_simple_end_007e
  8241                                  .L_lambda_simple_code_007e:	; lambda-simple body
  8242 000059BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8243 000059C4 740B                    	je .L_lambda_simple_arity_check_ok_007e
  8244 000059C6 FF742410                	push qword [rsp + 8 * 2]
  8245 000059CA 6A01                    	push 1
  8246 000059CC E9CF050000              	jmp L_error_incorrect_arity_simple
  8247                                  .L_lambda_simple_arity_check_ok_007e:
  8248 000059D1 C8000000                	enter 0, 0
  8249 000059D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8250 000059DA E808060000              	call malloc
  8251 000059DF 50                      	push rax
  8252 000059E0 BF08000000              	mov rdi, 8 * 1	; new rib
  8253 000059E5 E8FD050000              	call malloc
  8254 000059EA 50                      	push rax
  8255 000059EB BF28000000              	mov rdi, 8 * 5	; extended env
  8256 000059F0 E8F2050000              	call malloc
  8257 000059F5 488B7D10                	mov rdi, ENV
  8258 000059F9 BE00000000              	mov rsi, 0
  8259 000059FE BA01000000              	mov rdx, 1
  8260                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
  8261 00005A03 4883FE04                	cmp rsi, 4
  8262 00005A07 7410                    	je .L_lambda_simple_env_end_007f
  8263 00005A09 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8264 00005A0D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8265 00005A11 48FFC6                  	inc rsi
  8266 00005A14 48FFC2                  	inc rdx
  8267 00005A17 EBEA                    	jmp .L_lambda_simple_env_loop_007f
  8268                                  .L_lambda_simple_env_end_007f:
  8269 00005A19 5B                      	pop rbx
  8270 00005A1A BE00000000              	mov rsi, 0
  8271                                  .L_lambda_simple_params_loop_007f:	; copy params
  8272 00005A1F 4883FE01                	cmp rsi, 1
  8273 00005A23 740E                    	je .L_lambda_simple_params_end_007f
  8274 00005A25 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8275 00005A2A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8276 00005A2E 48FFC6                  	inc rsi
  8277 00005A31 EBEC                    	jmp .L_lambda_simple_params_loop_007f
  8278                                  .L_lambda_simple_params_end_007f:
  8279 00005A33 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8280 00005A36 4889C3                  	mov rbx, rax
  8281 00005A39 58                      	pop rax
  8282 00005A3A C60004                  	mov byte [rax], T_closure
  8283 00005A3D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8284 00005A41 48C74009[4E5A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
  8285 00005A49 E9B0000000              	jmp .L_lambda_simple_end_007f
  8286                                  .L_lambda_simple_code_007f:	; lambda-simple body
  8287 00005A4E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8288 00005A54 740B                    	je .L_lambda_simple_arity_check_ok_007f
  8289 00005A56 FF742410                	push qword [rsp + 8 * 2]
  8290 00005A5A 6A01                    	push 1
  8291 00005A5C E93F050000              	jmp L_error_incorrect_arity_simple
  8292                                  .L_lambda_simple_arity_check_ok_007f:
  8293 00005A61 C8000000                	enter 0, 0
  8294 00005A65 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8295 00005A6A E878050000              	call malloc
  8296 00005A6F 50                      	push rax
  8297 00005A70 BF08000000              	mov rdi, 8 * 1	; new rib
  8298 00005A75 E86D050000              	call malloc
  8299 00005A7A 50                      	push rax
  8300 00005A7B BF30000000              	mov rdi, 8 * 6	; extended env
  8301 00005A80 E862050000              	call malloc
  8302 00005A85 488B7D10                	mov rdi, ENV
  8303 00005A89 BE00000000              	mov rsi, 0
  8304 00005A8E BA01000000              	mov rdx, 1
  8305                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
  8306 00005A93 4883FE05                	cmp rsi, 5
  8307 00005A97 7410                    	je .L_lambda_simple_env_end_0080
  8308 00005A99 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8309 00005A9D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8310 00005AA1 48FFC6                  	inc rsi
  8311 00005AA4 48FFC2                  	inc rdx
  8312 00005AA7 EBEA                    	jmp .L_lambda_simple_env_loop_0080
  8313                                  .L_lambda_simple_env_end_0080:
  8314 00005AA9 5B                      	pop rbx
  8315 00005AAA BE00000000              	mov rsi, 0
  8316                                  .L_lambda_simple_params_loop_0080:	; copy params
  8317 00005AAF 4883FE01                	cmp rsi, 1
  8318 00005AB3 740E                    	je .L_lambda_simple_params_end_0080
  8319 00005AB5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8320 00005ABA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8321 00005ABE 48FFC6                  	inc rsi
  8322 00005AC1 EBEC                    	jmp .L_lambda_simple_params_loop_0080
  8323                                  .L_lambda_simple_params_end_0080:
  8324 00005AC3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8325 00005AC6 4889C3                  	mov rbx, rax
  8326 00005AC9 58                      	pop rax
  8327 00005ACA C60004                  	mov byte [rax], T_closure
  8328 00005ACD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8329 00005AD1 48C74009[DB5A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
  8330 00005AD9 EB1F                    	jmp .L_lambda_simple_end_0080
  8331                                  .L_lambda_simple_code_0080:	; lambda-simple body
  8332 00005ADB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8333 00005AE1 740B                    	je .L_lambda_simple_arity_check_ok_0080
  8334 00005AE3 FF742410                	push qword [rsp + 8 * 2]
  8335 00005AE7 6A01                    	push 1
  8336 00005AE9 E9B2040000              	jmp L_error_incorrect_arity_simple
  8337                                  .L_lambda_simple_arity_check_ok_0080:
  8338 00005AEE C8000000                	enter 0, 0
  8339 00005AF2 488B4520                	mov rax, PARAM(0)	; param y
  8340 00005AF6 C9                      	leave
  8341 00005AF7 C21800                  	ret AND_KILL_FRAME(1)
  8342                                  .L_lambda_simple_end_0080:	; new closure is in rax
  8343 00005AFA C9                      	leave
  8344 00005AFB C21800                  	ret AND_KILL_FRAME(1)
  8345                                  .L_lambda_simple_end_007f:	; new closure is in rax
  8346 00005AFE C9                      	leave
  8347 00005AFF C21800                  	ret AND_KILL_FRAME(1)
  8348                                  .L_lambda_simple_end_007e:	; new closure is in rax
  8349 00005B02 50                      	push rax
  8350 00005B03 6A01                    	push 1	; arg count
  8351 00005B05 488B4520                	mov rax, PARAM(0)	; param n
  8352 00005B09 803804                  	cmp byte [rax], T_closure
  8353 00005B0C 0F852C040000            	jne L_error_non_closure
  8354 00005B12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8355 00005B15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8356 00005B18 803804                  	cmp byte [rax], T_closure
  8357 00005B1B 0F851D040000            	jne L_error_non_closure
  8358 00005B21 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8359 00005B24 FF7508                  	push qword [rbp + 8 * 1]
  8360                                   ; old ret addr	pop rbp
  8361                                  ; restore the old rbp	mov rbx, 1
  8362 00005B27 4883C303                	add rbx, 3
  8363                                  	mov rdi, dword [rbp + 8*2]
  8363          ******************       error: mismatch in operand sizes
  8364                                  .L_tc_recycle_frame_loop_002c:
  8365 00005B2B 4883FB00                	cmp rbx, 0
  8366 00005B2F 7411                    je .L_tc_recycle_frame_done_002c
  8367 00005B31 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8368 00005B35 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8369 00005B3A 48FFCF                  	dec rdi
  8370 00005B3D 48FFCB                  	dec rbx
  8371 00005B40 EBE9                    jmp .L_tc_recycle_frame_loop_002c
  8372                                  .L_tc_recycle_frame_done_002c:
  8373 00005B42 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8374 00005B45 C9                      	leave
  8375 00005B46 C21800                  	ret AND_KILL_FRAME(1)
  8376                                  .L_lambda_simple_end_007b:	; new closure is in rax
  8377 00005B49 803804                  	cmp byte [rax], T_closure
  8378 00005B4C 0F85EC030000            	jne L_error_non_closure
  8379 00005B52 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8380 00005B55 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8381 00005B58 50                      	push rax
  8382 00005B59 6A01                    	push 1	; arg count
  8383 00005B5B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8384 00005B60 E882040000              	call malloc
  8385 00005B65 50                      	push rax
  8386 00005B66 BF08000000              	mov rdi, 8 * 1	; new rib
  8387 00005B6B E877040000              	call malloc
  8388 00005B70 50                      	push rax
  8389 00005B71 BF18000000              	mov rdi, 8 * 3	; extended env
  8390 00005B76 E86C040000              	call malloc
  8391 00005B7B 488B7D10                	mov rdi, ENV
  8392 00005B7F BE00000000              	mov rsi, 0
  8393 00005B84 BA01000000              	mov rdx, 1
  8394                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
  8395 00005B89 4883FE02                	cmp rsi, 2
  8396 00005B8D 7410                    	je .L_lambda_simple_env_end_0081
  8397 00005B8F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8398 00005B93 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8399 00005B97 48FFC6                  	inc rsi
  8400 00005B9A 48FFC2                  	inc rdx
  8401 00005B9D EBEA                    	jmp .L_lambda_simple_env_loop_0081
  8402                                  .L_lambda_simple_env_end_0081:
  8403 00005B9F 5B                      	pop rbx
  8404 00005BA0 BE00000000              	mov rsi, 0
  8405                                  .L_lambda_simple_params_loop_0081:	; copy params
  8406 00005BA5 4883FE01                	cmp rsi, 1
  8407 00005BA9 740E                    	je .L_lambda_simple_params_end_0081
  8408 00005BAB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8409 00005BB0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8410 00005BB4 48FFC6                  	inc rsi
  8411 00005BB7 EBEC                    	jmp .L_lambda_simple_params_loop_0081
  8412                                  .L_lambda_simple_params_end_0081:
  8413 00005BB9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8414 00005BBC 4889C3                  	mov rbx, rax
  8415 00005BBF 58                      	pop rax
  8416 00005BC0 C60004                  	mov byte [rax], T_closure
  8417 00005BC3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8418 00005BC7 48C74009[D45B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
  8419 00005BCF E928020000              	jmp .L_lambda_simple_end_0081
  8420                                  .L_lambda_simple_code_0081:	; lambda-simple body
  8421 00005BD4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8422 00005BDA 740B                    	je .L_lambda_simple_arity_check_ok_0081
  8423 00005BDC FF742410                	push qword [rsp + 8 * 2]
  8424 00005BE0 6A01                    	push 1
  8425 00005BE2 E9B9030000              	jmp L_error_incorrect_arity_simple
  8426                                  .L_lambda_simple_arity_check_ok_0081:
  8427 00005BE7 C8000000                	enter 0, 0
  8428 00005BEB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8429 00005BF0 E8F2030000              	call malloc
  8430 00005BF5 50                      	push rax
  8431 00005BF6 BF08000000              	mov rdi, 8 * 1	; new rib
  8432 00005BFB E8E7030000              	call malloc
  8433 00005C00 50                      	push rax
  8434 00005C01 BF20000000              	mov rdi, 8 * 4	; extended env
  8435 00005C06 E8DC030000              	call malloc
  8436 00005C0B 488B7D10                	mov rdi, ENV
  8437 00005C0F BE00000000              	mov rsi, 0
  8438 00005C14 BA01000000              	mov rdx, 1
  8439                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
  8440 00005C19 4883FE03                	cmp rsi, 3
  8441 00005C1D 7410                    	je .L_lambda_simple_env_end_0082
  8442 00005C1F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8443 00005C23 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8444 00005C27 48FFC6                  	inc rsi
  8445 00005C2A 48FFC2                  	inc rdx
  8446 00005C2D EBEA                    	jmp .L_lambda_simple_env_loop_0082
  8447                                  .L_lambda_simple_env_end_0082:
  8448 00005C2F 5B                      	pop rbx
  8449 00005C30 BE00000000              	mov rsi, 0
  8450                                  .L_lambda_simple_params_loop_0082:	; copy params
  8451 00005C35 4883FE01                	cmp rsi, 1
  8452 00005C39 740E                    	je .L_lambda_simple_params_end_0082
  8453 00005C3B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8454 00005C40 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8455 00005C44 48FFC6                  	inc rsi
  8456 00005C47 EBEC                    	jmp .L_lambda_simple_params_loop_0082
  8457                                  .L_lambda_simple_params_end_0082:
  8458 00005C49 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8459 00005C4C 4889C3                  	mov rbx, rax
  8460 00005C4F 58                      	pop rax
  8461 00005C50 C60004                  	mov byte [rax], T_closure
  8462 00005C53 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8463 00005C57 48C74009[645C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
  8464 00005C5F E994010000              	jmp .L_lambda_simple_end_0082
  8465                                  .L_lambda_simple_code_0082:	; lambda-simple body
  8466 00005C64 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8467 00005C6A 740B                    	je .L_lambda_simple_arity_check_ok_0082
  8468 00005C6C FF742410                	push qword [rsp + 8 * 2]
  8469 00005C70 6A01                    	push 1
  8470 00005C72 E929030000              	jmp L_error_incorrect_arity_simple
  8471                                  .L_lambda_simple_arity_check_ok_0082:
  8472 00005C77 C8000000                	enter 0, 0
  8473                                  	; preparing a tail-call
  8474 00005C7B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8475 00005C80 E862030000              	call malloc
  8476 00005C85 50                      	push rax
  8477 00005C86 BF08000000              	mov rdi, 8 * 1	; new rib
  8478 00005C8B E857030000              	call malloc
  8479 00005C90 50                      	push rax
  8480 00005C91 BF28000000              	mov rdi, 8 * 5	; extended env
  8481 00005C96 E84C030000              	call malloc
  8482 00005C9B 488B7D10                	mov rdi, ENV
  8483 00005C9F BE00000000              	mov rsi, 0
  8484 00005CA4 BA01000000              	mov rdx, 1
  8485                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
  8486 00005CA9 4883FE04                	cmp rsi, 4
  8487 00005CAD 7410                    	je .L_lambda_simple_env_end_0083
  8488 00005CAF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8489 00005CB3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8490 00005CB7 48FFC6                  	inc rsi
  8491 00005CBA 48FFC2                  	inc rdx
  8492 00005CBD EBEA                    	jmp .L_lambda_simple_env_loop_0083
  8493                                  .L_lambda_simple_env_end_0083:
  8494 00005CBF 5B                      	pop rbx
  8495 00005CC0 BE00000000              	mov rsi, 0
  8496                                  .L_lambda_simple_params_loop_0083:	; copy params
  8497 00005CC5 4883FE01                	cmp rsi, 1
  8498 00005CC9 740E                    	je .L_lambda_simple_params_end_0083
  8499 00005CCB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8500 00005CD0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8501 00005CD4 48FFC6                  	inc rsi
  8502 00005CD7 EBEC                    	jmp .L_lambda_simple_params_loop_0083
  8503                                  .L_lambda_simple_params_end_0083:
  8504 00005CD9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8505 00005CDC 4889C3                  	mov rbx, rax
  8506 00005CDF 58                      	pop rax
  8507 00005CE0 C60004                  	mov byte [rax], T_closure
  8508 00005CE3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8509 00005CE7 48C74009[F45C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
  8510 00005CEF E9B0000000              	jmp .L_lambda_simple_end_0083
  8511                                  .L_lambda_simple_code_0083:	; lambda-simple body
  8512 00005CF4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8513 00005CFA 740B                    	je .L_lambda_simple_arity_check_ok_0083
  8514 00005CFC FF742410                	push qword [rsp + 8 * 2]
  8515 00005D00 6A01                    	push 1
  8516 00005D02 E999020000              	jmp L_error_incorrect_arity_simple
  8517                                  .L_lambda_simple_arity_check_ok_0083:
  8518 00005D07 C8000000                	enter 0, 0
  8519 00005D0B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8520 00005D10 E8D2020000              	call malloc
  8521 00005D15 50                      	push rax
  8522 00005D16 BF08000000              	mov rdi, 8 * 1	; new rib
  8523 00005D1B E8C7020000              	call malloc
  8524 00005D20 50                      	push rax
  8525 00005D21 BF30000000              	mov rdi, 8 * 6	; extended env
  8526 00005D26 E8BC020000              	call malloc
  8527 00005D2B 488B7D10                	mov rdi, ENV
  8528 00005D2F BE00000000              	mov rsi, 0
  8529 00005D34 BA01000000              	mov rdx, 1
  8530                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
  8531 00005D39 4883FE05                	cmp rsi, 5
  8532 00005D3D 7410                    	je .L_lambda_simple_env_end_0084
  8533 00005D3F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8534 00005D43 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8535 00005D47 48FFC6                  	inc rsi
  8536 00005D4A 48FFC2                  	inc rdx
  8537 00005D4D EBEA                    	jmp .L_lambda_simple_env_loop_0084
  8538                                  .L_lambda_simple_env_end_0084:
  8539 00005D4F 5B                      	pop rbx
  8540 00005D50 BE00000000              	mov rsi, 0
  8541                                  .L_lambda_simple_params_loop_0084:	; copy params
  8542 00005D55 4883FE01                	cmp rsi, 1
  8543 00005D59 740E                    	je .L_lambda_simple_params_end_0084
  8544 00005D5B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8545 00005D60 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8546 00005D64 48FFC6                  	inc rsi
  8547 00005D67 EBEC                    	jmp .L_lambda_simple_params_loop_0084
  8548                                  .L_lambda_simple_params_end_0084:
  8549 00005D69 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8550 00005D6C 4889C3                  	mov rbx, rax
  8551 00005D6F 58                      	pop rax
  8552 00005D70 C60004                  	mov byte [rax], T_closure
  8553 00005D73 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8554 00005D77 48C74009[815D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
  8555 00005D7F EB1F                    	jmp .L_lambda_simple_end_0084
  8556                                  .L_lambda_simple_code_0084:	; lambda-simple body
  8557 00005D81 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8558 00005D87 740B                    	je .L_lambda_simple_arity_check_ok_0084
  8559 00005D89 FF742410                	push qword [rsp + 8 * 2]
  8560 00005D8D 6A01                    	push 1
  8561 00005D8F E90C020000              	jmp L_error_incorrect_arity_simple
  8562                                  .L_lambda_simple_arity_check_ok_0084:
  8563 00005D94 C8000000                	enter 0, 0
  8564 00005D98 488B4520                	mov rax, PARAM(0)	; param y
  8565 00005D9C C9                      	leave
  8566 00005D9D C21800                  	ret AND_KILL_FRAME(1)
  8567                                  .L_lambda_simple_end_0084:	; new closure is in rax
  8568 00005DA0 C9                      	leave
  8569 00005DA1 C21800                  	ret AND_KILL_FRAME(1)
  8570                                  .L_lambda_simple_end_0083:	; new closure is in rax
  8571 00005DA4 50                      	push rax
  8572 00005DA5 6A01                    	push 1	; arg count
  8573                                  	; preparing a non-tail-call
  8574 00005DA7 488B4520                	mov rax, PARAM(0)	; param b
  8575 00005DAB 50                      	push rax
  8576 00005DAC 6A01                    	push 1	; arg count
  8577 00005DAE 488B4510                	mov rax, ENV
  8578 00005DB2 488B00                  	mov rax, qword [rax + 8 * 0]
  8579 00005DB5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  8580 00005DB8 803804                  	cmp byte [rax], T_closure
  8581 00005DBB 0F857D010000            	jne L_error_non_closure
  8582 00005DC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8583 00005DC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8584 00005DC7 803804                  	cmp byte [rax], T_closure
  8585 00005DCA 0F856E010000            	jne L_error_non_closure
  8586 00005DD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8587 00005DD3 FF7508                  	push qword [rbp + 8 * 1]
  8588                                   ; old ret addr	pop rbp
  8589                                  ; restore the old rbp	mov rbx, 1
  8590 00005DD6 4883C303                	add rbx, 3
  8591                                  	mov rdi, dword [rbp + 8*2]
  8591          ******************       error: mismatch in operand sizes
  8592                                  .L_tc_recycle_frame_loop_002d:
  8593 00005DDA 4883FB00                	cmp rbx, 0
  8594 00005DDE 7411                    je .L_tc_recycle_frame_done_002d
  8595 00005DE0 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8596 00005DE4 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8597 00005DE9 48FFCF                  	dec rdi
  8598 00005DEC 48FFCB                  	dec rbx
  8599 00005DEF EBE9                    jmp .L_tc_recycle_frame_loop_002d
  8600                                  .L_tc_recycle_frame_done_002d:
  8601 00005DF1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8602 00005DF4 C9                      	leave
  8603 00005DF5 C21800                  	ret AND_KILL_FRAME(1)
  8604                                  .L_lambda_simple_end_0082:	; new closure is in rax
  8605 00005DF8 C9                      	leave
  8606 00005DF9 C21800                  	ret AND_KILL_FRAME(1)
  8607                                  .L_lambda_simple_end_0081:	; new closure is in rax
  8608 00005DFC 803804                  	cmp byte [rax], T_closure
  8609 00005DFF 0F8539010000            	jne L_error_non_closure
  8610 00005E05 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8611 00005E08 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8612 00005E0B 803804                  	cmp byte [rax], T_closure
  8613 00005E0E 0F852A010000            	jne L_error_non_closure
  8614 00005E14 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8615 00005E17 FF7508                  	push qword [rbp + 8 * 1]
  8616                                   ; old ret addr	pop rbp
  8617                                  ; restore the old rbp	mov rbx, 1
  8618 00005E1A 4883C303                	add rbx, 3
  8619                                  	mov rdi, dword [rbp + 8*2]
  8619          ******************       error: mismatch in operand sizes
  8620                                  .L_tc_recycle_frame_loop_0018:
  8621 00005E1E 4883FB00                	cmp rbx, 0
  8622 00005E22 7411                    je .L_tc_recycle_frame_done_0018
  8623 00005E24 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8624 00005E28 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8625 00005E2D 48FFCF                  	dec rdi
  8626 00005E30 48FFCB                  	dec rbx
  8627 00005E33 EBE9                    jmp .L_tc_recycle_frame_loop_0018
  8628                                  .L_tc_recycle_frame_done_0018:
  8629 00005E35 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8630 00005E38 C9                      	leave
  8631 00005E39 C21800                  	ret AND_KILL_FRAME(1)
  8632                                  .L_lambda_simple_end_0040:	; new closure is in rax
  8633 00005E3C C9                      	leave
  8634 00005E3D C21800                  	ret AND_KILL_FRAME(1)
  8635                                  .L_lambda_simple_end_003f:	; new closure is in rax
  8636 00005E40 803804                  	cmp byte [rax], T_closure
  8637 00005E43 0F85F5000000            	jne L_error_non_closure
  8638 00005E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8639 00005E4C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8640 00005E4F 803804                  	cmp byte [rax], T_closure
  8641 00005E52 0F85E6000000            	jne L_error_non_closure
  8642 00005E58 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8643 00005E5B FF5009                  	call SOB_CLOSURE_CODE(rax)
  8644 00005E5E 803804                  	cmp byte [rax], T_closure
  8645 00005E61 0F85D7000000            	jne L_error_non_closure
  8646 00005E67 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8647 00005E6A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8648 00005E6D 803804                  	cmp byte [rax], T_closure
  8649 00005E70 0F85C8000000            	jne L_error_non_closure
  8650 00005E76 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8651 00005E79 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8652                                  Lend:
  8653 00005E7C 4889C7                  	mov rdi, rax
  8654 00005E7F E8B8030000              	call print_sexpr_if_not_void
  8655                                  
  8656 00005E84 48BF-                           mov rdi, fmt_memory_usage
  8656 00005E86 [7506000000000000] 
  8657 00005E8E 488B3425[FB060000]              mov rsi, qword [top_of_memory]
  8658 00005E96 4881EE[00000000]                sub rsi, memory
  8659 00005E9D B800000000                      mov rax, 0
  8660                                          ENTER
    44 00005EA2 C8000000            <1>  enter 0, 0
    45 00005EA6 4883E4F0            <1>  and rsp, ~15
  8661 00005EAA E8(00000000)                    call printf
  8662                                          LEAVE
    49 00005EAF C9                  <1>  leave
  8663 00005EB0 B800000000                      mov rax, 0
  8664 00005EB5 E8(00000000)                    call exit
  8665                                  
  8666                                  L_error_fvar_undefined:
  8667 00005EBA 50                              push rax
  8668 00005EBB 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
  8669 00005EC3 48BE-                           mov rsi, fmt_undefined_free_var_1
  8669 00005EC5 [DD05000000000000] 
  8670 00005ECD B800000000                      mov rax, 0
  8671                                          ENTER
    44 00005ED2 C8000000            <1>  enter 0, 0
    45 00005ED6 4883E4F0            <1>  and rsp, ~15
  8672 00005EDA E8(00000000)                    call fprintf
  8673                                          LEAVE
    49 00005EDF C9                  <1>  leave
  8674 00005EE0 58                              pop rax
  8675 00005EE1 488B4001                        mov rax, qword [rax + 1] ; string
  8676 00005EE5 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
  8677 00005EE9 BE01000000                      mov rsi, 1               ; sizeof(char)
  8678 00005EEE 488B5001                        mov rdx, qword [rax + 1] ; string-length
  8679 00005EF2 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
  8680 00005EFA B800000000                      mov rax, 0
  8681                                          ENTER
    44 00005EFF C8000000            <1>  enter 0, 0
    45 00005F03 4883E4F0            <1>  and rsp, ~15
  8682 00005F07 E8(00000000)                    call fwrite
  8683                                          LEAVE
    49 00005F0C C9                  <1>  leave
  8684 00005F0D 488B3C25[00000000]              mov rdi, [stderr]       ; destination
  8685 00005F15 48BE-                           mov rsi, fmt_undefined_free_var_2
  8685 00005F17 [F405000000000000] 
  8686 00005F1F B800000000                      mov rax, 0
  8687                                          ENTER
    44 00005F24 C8000000            <1>  enter 0, 0
    45 00005F28 4883E4F0            <1>  and rsp, ~15
  8688 00005F2C E8(00000000)                    call fprintf
  8689                                          LEAVE
    49 00005F31 C9                  <1>  leave
  8690 00005F32 48C7C0F6FFFFFF                  mov rax, -10
  8691 00005F39 E8(00000000)                    call exit
  8692                                  
  8693                                  L_error_non_closure:
  8694 00005F3E 488B3C25[00000000]              mov rdi, qword [stderr]
  8695 00005F46 48BE-                           mov rsi, fmt_non_closure
  8695 00005F48 [AB06000000000000] 
  8696 00005F50 B800000000                      mov rax, 0
  8697                                          ENTER
    44 00005F55 C8000000            <1>  enter 0, 0
    45 00005F59 4883E4F0            <1>  and rsp, ~15
  8698 00005F5D E8(00000000)                    call fprintf
  8699                                          LEAVE
    49 00005F62 C9                  <1>  leave
  8700 00005F63 48C7C0FEFFFFFF                  mov rax, -2
  8701 00005F6A E8(00000000)                    call exit
  8702                                  
  8703                                  L_error_improper_list:
  8704 00005F6F 488B3C25[00000000]      	mov rdi, qword [stderr]
  8705 00005F77 48BE-                   	mov rsi, fmt_error_improper_list
  8705 00005F79 [D306000000000000] 
  8706 00005F81 B800000000              	mov rax, 0
  8707                                          ENTER
    44 00005F86 C8000000            <1>  enter 0, 0
    45 00005F8A 4883E4F0            <1>  and rsp, ~15
  8708 00005F8E E8(00000000)            	call fprintf
  8709                                          LEAVE
    49 00005F93 C9                  <1>  leave
  8710 00005F94 48C7C0F9FFFFFF          	mov rax, -7
  8711 00005F9B E8(00000000)            	call exit
  8712                                  
  8713                                  L_error_incorrect_arity_simple:
  8714 00005FA0 488B3C25[00000000]              mov rdi, qword [stderr]
  8715 00005FA8 48BE-                           mov rsi, fmt_incorrect_arity_simple
  8715 00005FAA [1606000000000000] 
  8716 00005FB2 EB12                            jmp L_error_incorrect_arity_common
  8717                                  L_error_incorrect_arity_opt:
  8718 00005FB4 488B3C25[00000000]              mov rdi, qword [stderr]
  8719 00005FBC 48BE-                           mov rsi, fmt_incorrect_arity_opt
  8719 00005FBE [4106000000000000] 
  8720                                  L_error_incorrect_arity_common:
  8721 00005FC6 5A                              pop rdx
  8722 00005FC7 59                              pop rcx
  8723 00005FC8 B800000000                      mov rax, 0
  8724                                          ENTER
    44 00005FCD C8000000            <1>  enter 0, 0
    45 00005FD1 4883E4F0            <1>  and rsp, ~15
  8725 00005FD5 E8(00000000)                    call fprintf
  8726                                          LEAVE
    49 00005FDA C9                  <1>  leave
  8727 00005FDB 48C7C0FAFFFFFF                  mov rax, -6
  8728 00005FE2 E8(00000000)                    call exit
  8729                                  
  8730                                  section .data
  8731                                  fmt_undefined_free_var_1:
  8732 000005DD 212121205468652066-             db `!!! The free variable \0`
  8732 000005E6 726565207661726961-
  8732 000005EF 626C652000         
  8733                                  fmt_undefined_free_var_2:
  8734 000005F4 207761732075736564-             db ` was used before it was defined.\n\0`
  8734 000005FD 206265666F72652069-
  8734 00000606 742077617320646566-
  8734 0000060F 696E65642E0A00     
  8735                                  fmt_incorrect_arity_simple:
  8736 00000616 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
  8736 0000061F 74656420256C642061-
  8736 00000628 7267756D656E74732C-
  8736 00000631 206275742067697665-
  8736 0000063A 6E20256C640A00     
  8737                                  fmt_incorrect_arity_opt:
  8738 00000641 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
  8738 0000064A 746564206174206C65-
  8738 00000653 61737420256C642061-
  8738 0000065C 7267756D656E74732C-
  8738 00000665 206275742067697665-
  8738 0000066E 6E20256C640A00     
  8739                                  fmt_memory_usage:
  8740 00000675 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
  8740 0000067E 20256C642062797465-
  8740 00000687 73206F662064796E61-
  8740 00000690 6D6963616C6C792D61-
  8740 00000699 6C6C6F636174656420-
  8740 000006A2 6D656D6F72790A0A00 
  8741                                  fmt_non_closure:
  8742 000006AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
  8742 000006B4 7074696E6720746F20-
  8742 000006BD 6170706C792061206E-
  8742 000006C6 6F6E2D636C6F737572-
  8742 000006CF 65210A00           
  8743                                  fmt_error_improper_list:
  8744 000006D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
  8744 000006DC 7267756D656E742069-
  8744 000006E5 73206E6F7420612070-
  8744 000006EE 726F706572206C6973-
  8744 000006F7 74210A00           
  8745                                  
  8746                                  section .bss
  8747                                  memory:
  8748 00000000 <res 40000000h>         	resb gbytes(1)
  8749                                  
  8750                                  section .data
  8751                                  top_of_memory:
  8752 000006FB [0000000000000000]              dq memory
  8753                                  
  8754                                  section .text
  8755                                  malloc:
  8756 00005FE7 488B0425[FB060000]              mov rax, qword [top_of_memory]
  8757 00005FEF 48013C25[FB060000]              add qword [top_of_memory], rdi
  8758 00005FF7 C3                              ret
  8759                                  
  8760                                  L_code_ptr_return:
  8761 00005FF8 48837C241002            	cmp qword [rsp + 8*2], 2
  8762 00005FFE 0F85C01C0000            	jne L_error_arg_count_2
  8763 00006004 488B4C2418              	mov rcx, qword [rsp + 8*3]
  8764                                  	assert_integer(rcx)
    53 00006009 803911              <1>  cmp byte [%1], %2
    54 0000600C 0F85511D0000        <1>  jne L_error_incorrect_type
  8765 00006012 488B4901                	mov rcx, qword [rcx + 1]
  8766 00006016 4883F900                	cmp rcx, 0
  8767 0000601A 0F8CD81B0000            	jl L_error_integer_range
  8768 00006020 488B442420              	mov rax, qword [rsp + 8*4]
  8769                                  .L0:
  8770 00006025 4883F900                        cmp rcx, 0
  8771 00006029 7409                            je .L1
  8772 0000602B 488B6D00                	mov rbp, qword [rbp]
  8773 0000602F 48FFC9                  	dec rcx
  8774 00006032 7FF1                    	jg .L0
  8775                                  .L1:
  8776 00006034 4889EC                  	mov rsp, rbp
  8777 00006037 5D                      	pop rbp
  8778 00006038 5B                              pop rbx
  8779 00006039 488B4C2408                      mov rcx, qword [rsp + 8*1]
  8780 0000603E 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
  8781 00006043 FFE3                    	jmp rbx
  8782                                  
  8783                                  L_code_ptr_make_list:
  8784 00006045 C8000000                	enter 0, 0
  8785 00006049 48837D1801                      cmp COUNT, 1
  8786 0000604E 740C                            je .L0
  8787 00006050 48837D1802                      cmp COUNT, 2
  8788 00006055 7411                            je .L1
  8789 00006057 E99D1C0000                      jmp L_error_arg_count_12
  8790                                  .L0:
  8791 0000605C 49B9-                           mov r9, sob_void
  8791 0000605E [0000000000000000] 
  8792 00006066 EB04                            jmp .L2
  8793                                  .L1:
  8794 00006068 4C8B4D28                        mov r9, PARAM(1)
  8795                                  .L2:
  8796 0000606C 488B4D20                        mov rcx, PARAM(0)
  8797                                          assert_integer(rcx)
    53 00006070 803911              <1>  cmp byte [%1], %2
    54 00006073 0F85EA1C0000        <1>  jne L_error_incorrect_type
  8798 00006079 488B4901                        mov rcx, qword [rcx + 1]
  8799 0000607D 4883F900                        cmp rcx, 0
  8800 00006081 0F8CA21B0000                    jl L_error_arg_negative
  8801 00006087 49B8-                           mov r8, sob_nil
  8801 00006089 [0100000000000000] 
  8802                                  .L3:
  8803 00006091 4883F900                        cmp rcx, 0
  8804 00006095 7E1D                            jle .L4
  8805 00006097 BF11000000                      mov rdi, 1 + 8 + 8
  8806 0000609C E846FFFFFF                      call malloc
  8807 000060A1 C60021                          mov byte [rax], T_pair
  8808 000060A4 4C894801                        mov qword [rax + 1], r9
  8809 000060A8 4C894009                        mov qword [rax + 1 + 8], r8
  8810 000060AC 4989C0                          mov r8, rax
  8811 000060AF 48FFC9                          dec rcx
  8812 000060B2 EBDD                            jmp .L3
  8813                                  .L4:
  8814 000060B4 4C89C0                          mov rax, r8
  8815 000060B7 48837D1802                      cmp COUNT, 2
  8816 000060BC 7404                            je .L5
  8817 000060BE C9                              leave
  8818 000060BF C21800                          ret AND_KILL_FRAME(1)
  8819                                  .L5:
  8820 000060C2 C9                      	leave
  8821 000060C3 C22000                  	ret AND_KILL_FRAME(2)
  8822                                  
  8823                                  L_code_ptr_is_primitive:
  8824 000060C6 C8000000                	enter 0, 0
  8825 000060CA 48837D1801              	cmp COUNT, 1
  8826 000060CF 0F85BA1B0000            	jne L_error_arg_count_1
  8827 000060D5 488B4520                	mov rax, PARAM(0)
  8828                                  	assert_closure(rax)
    53 000060D9 803804              <1>  cmp byte [%1], %2
    54 000060DC 0F85811C0000        <1>  jne L_error_incorrect_type
  8829 000060E2 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
  8830 000060E7 750C                    	jne .L_false
  8831 000060E9 48B8-                   	mov rax, sob_boolean_true
  8831 000060EB [0300000000000000] 
  8832 000060F3 EB0A                    	jmp .L_end
  8833                                  .L_false:
  8834 000060F5 48B8-                   	mov rax, sob_boolean_false
  8834 000060F7 [0200000000000000] 
  8835                                  .L_end:
  8836 000060FF C9                      	leave
  8837 00006100 C21800                  	ret AND_KILL_FRAME(1)
  8838                                  
  8839                                  L_code_ptr_length:
  8840 00006103 C8000000                	enter 0, 0
  8841 00006107 48837D1801              	cmp COUNT, 1
  8842 0000610C 0F857D1B0000            	jne L_error_arg_count_1
  8843 00006112 488B5D20                	mov rbx, PARAM(0)
  8844 00006116 BF00000000              	mov rdi, 0
  8845                                  .L:
  8846 0000611B 803B01                  	cmp byte [rbx], T_nil
  8847 0000611E 7412                    	je .L_end
  8848                                  	assert_pair(rbx)
    53 00006120 803B21              <1>  cmp byte [%1], %2
    54 00006123 0F853A1C0000        <1>  jne L_error_incorrect_type
  8849 00006129 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
  8850 0000612D 48FFC7                  	inc rdi
  8851 00006130 EBE9                    	jmp .L
  8852                                  .L_end:
  8853 00006132 E8A71A0000              	call make_integer
  8854 00006137 C9                      	leave
  8855 00006138 C21800                  	ret AND_KILL_FRAME(1)
  8856                                  
  8857                                  L_code_ptr_break:
  8858 0000613B 48837C241000                    cmp qword [rsp + 8 * 2], 0
  8859 00006141 0F85131B0000                    jne L_error_arg_count_0
  8860 00006147 CC                              int3
  8861 00006148 48B8-                           mov rax, sob_void
  8861 0000614A [0000000000000000] 
  8862 00006152 C21000                          ret AND_KILL_FRAME(0)        
  8863                                  
  8864                                  L_code_ptr_frame:
  8865 00006155 C8000000                        enter 0, 0
  8866 00006159 48837D1800                      cmp COUNT, 0
  8867 0000615E 0F85F61A0000                    jne L_error_arg_count_0
  8868                                  
  8869 00006164 48BF-                           mov rdi, fmt_frame
  8869 00006166 [0307000000000000] 
  8870 0000616E 488B7500                        mov rsi, qword [rbp]    ; old rbp
  8871 00006172 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
  8872 00006176 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
  8873 0000617A 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
  8874 0000617E 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
  8875 00006182 6A00                            push 0
  8876 00006184 4151                            push r9
  8877 00006186 4150                            push r8                   ; we'll use it when printing the params
  8878 00006188 B800000000                      mov rax, 0
  8879                                          
  8880                                          ENTER
    44 0000618D C8000000            <1>  enter 0, 0
    45 00006191 4883E4F0            <1>  and rsp, ~15
  8881 00006195 E8(00000000)                    call printf
  8882                                          LEAVE
    49 0000619A C9                  <1>  leave
  8883                                  
  8884                                  .L:
  8885 0000619B 488B0C24                        mov rcx, qword [rsp]
  8886 0000619F 4883F900                        cmp rcx, 0
  8887 000061A3 7467                            je .L_out
  8888 000061A5 48BF-                           mov rdi, fmt_frame_param_prefix
  8888 000061A7 [3C07000000000000] 
  8889 000061AF 488B742410                      mov rsi, qword [rsp + 8*2]
  8890 000061B4 B800000000                      mov rax, 0
  8891                                          
  8892                                          ENTER
    44 000061B9 C8000000            <1>  enter 0, 0
    45 000061BD 4883E4F0            <1>  and rsp, ~15
  8893 000061C1 E8(00000000)                    call printf
  8894                                          LEAVE
    49 000061C6 C9                  <1>  leave
  8895                                  
  8896 000061C7 488B0C24                        mov rcx, qword [rsp]
  8897 000061CB 48FFC9                          dec rcx
  8898 000061CE 48890C24                        mov qword [rsp], rcx    ; dec arg count
  8899 000061D2 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
  8900 000061D7 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
  8901 000061DC 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
  8902 000061E0 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
  8903 000061E5 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
  8904 000061E8 E87B000000                      call print_sexpr
  8905 000061ED 48BF-                           mov rdi, fmt_newline
  8905 000061EF [6807000000000000] 
  8906 000061F7 B800000000                      mov rax, 0
  8907                                          ENTER
    44 000061FC C8000000            <1>  enter 0, 0
    45 00006200 4883E4F0            <1>  and rsp, ~15
  8908 00006204 E8(00000000)                    call printf
  8909                                          LEAVE
    49 00006209 C9                  <1>  leave
  8910 0000620A EB8F                            jmp .L
  8911                                  .L_out:
  8912 0000620C 48BF-                           mov rdi, fmt_frame_continue
  8912 0000620E [4D07000000000000] 
  8913 00006216 B800000000                      mov rax, 0
  8914                                          ENTER
    44 0000621B C8000000            <1>  enter 0, 0
    45 0000621F 4883E4F0            <1>  and rsp, ~15
  8915 00006223 E8(00000000)                    call printf
  8916 00006228 E8(00000000)                    call getchar
  8917                                          LEAVE
    49 0000622D C9                  <1>  leave
  8918                                          
  8919 0000622E 48B8-                           mov rax, sob_void
  8919 00006230 [0000000000000000] 
  8920 00006238 C9                              leave
  8921 00006239 C21000                          ret AND_KILL_FRAME(0)
  8922                                          
  8923                                  print_sexpr_if_not_void:
  8924 0000623C 4881FF[00000000]        	cmp rdi, sob_void
  8925 00006243 7422                    	je .done
  8926 00006245 E81E000000              	call print_sexpr
  8927 0000624A 48BF-                   	mov rdi, fmt_newline
  8927 0000624C [6807000000000000] 
  8928 00006254 B800000000              	mov rax, 0
  8929                                  	ENTER
    44 00006259 C8000000            <1>  enter 0, 0
    45 0000625D 4883E4F0            <1>  and rsp, ~15
  8930 00006261 E8(00000000)            	call printf
  8931                                  	LEAVE
    49 00006266 C9                  <1>  leave
  8932                                  .done:
  8933 00006267 C3                      	ret
  8934                                  
  8935                                  section .data
  8936                                  fmt_frame:
  8937 00000703 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
  8937 0000070C 207265742061646472-
  8937 00000715 203D2025703B206C65-
  8937 0000071E 7820656E76203D2025-
  8937 00000727 703B20706172616D20-
  8937 00000730 636F756E74203D2025-
  8937 00000739 640A00             
  8938                                  fmt_frame_param_prefix:
  8939 0000073C 3D3D5B706172616D20-             db `==[param %d]==> \0`
  8939 00000745 25645D3D3D3E2000   
  8940                                  fmt_frame_continue:
  8941 0000074D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
  8941 00000756 723E20746F20636F6E-
  8941 0000075F 74696E75652E2E2E00 
  8942                                  fmt_newline:
  8943 00000768 0A00                    	db `\n\0`
  8944                                  fmt_void:
  8945 0000076A 233C766F69643E00        	db `#<void>\0`
  8946                                  fmt_nil:
  8947 00000772 282900                  	db `()\0`
  8948                                  fmt_boolean_false:
  8949 00000775 236600                  	db `#f\0`
  8950                                  fmt_boolean_true:
  8951 00000778 237400                  	db `#t\0`
  8952                                  fmt_char_backslash:
  8953 0000077B 235C5C00                	db `#\\\\\0`
  8954                                  fmt_char_dquote:
  8955 0000077F 235C2200                	db `#\\"\0`
  8956                                  fmt_char_simple:
  8957 00000783 235C256300              	db `#\\%c\0`
  8958                                  fmt_char_null:
  8959 00000788 235C6E756C00            	db `#\\nul\0`
  8960                                  fmt_char_bell:
  8961 0000078E 235C62656C6C00          	db `#\\bell\0`
  8962                                  fmt_char_backspace:
  8963 00000795 235C6261636B737061-     	db `#\\backspace\0`
  8963 0000079E 636500             
  8964                                  fmt_char_tab:
  8965 000007A1 235C74616200            	db `#\\tab\0`
  8966                                  fmt_char_newline:
  8967 000007A7 235C6E65776C696E65-     	db `#\\newline\0`
  8967 000007B0 00                 
  8968                                  fmt_char_formfeed:
  8969 000007B1 235C7061676500          	db `#\\page\0`
  8970                                  fmt_char_return:
  8971 000007B8 235C72657475726E00      	db `#\\return\0`
  8972                                  fmt_char_escape:
  8973 000007C1 235C65736300            	db `#\\esc\0`
  8974                                  fmt_char_space:
  8975 000007C7 235C737061636500        	db `#\\space\0`
  8976                                  fmt_char_hex:
  8977 000007CF 235C782530325800        	db `#\\x%02X\0`
  8978                                  fmt_gensym:
  8979 000007D7 47256C6400                      db `G%ld\0`
  8980                                  fmt_closure:
  8981 000007DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
  8981 000007E5 206174203078253038-
  8981 000007EE 5820656E763D307825-
  8981 000007F7 30385820636F64653D-
  8981 00000800 3078253038583E00   
  8982                                  fmt_lparen:
  8983 00000808 2800                    	db `(\0`
  8984                                  fmt_dotted_pair:
  8985 0000080A 202E2000                	db ` . \0`
  8986                                  fmt_rparen:
  8987 0000080E 2900                    	db `)\0`
  8988                                  fmt_space:
  8989 00000810 2000                    	db ` \0`
  8990                                  fmt_empty_vector:
  8991 00000812 23282900                	db `#()\0`
  8992                                  fmt_vector:
  8993 00000816 232800                  	db `#(\0`
  8994                                  fmt_real:
  8995 00000819 256600                  	db `%f\0`
  8996                                  fmt_fraction:
  8997 0000081C 256C642F256C6400        	db `%ld/%ld\0`
  8998                                  fmt_zero:
  8999 00000824 3000                    	db `0\0`
  9000                                  fmt_int:
  9001 00000826 256C6400                	db `%ld\0`
  9002                                  fmt_unknown_scheme_object_error:
  9003 0000082A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
  9003 00000833 6F723A20556E6B6E6F-
  9003 0000083C 776E20536368656D65-
  9003 00000845 2D6F626A6563742028-
  9003 0000084E 525454492030782530-
  9003 00000857 32582920           
  9004 0000085B 617420616464726573-     	db `at address 0x%08X\n\n\0`
  9004 00000864 73203078253038580A-
  9004 0000086D 0A00               
  9005                                  fmt_dquote:
  9006 0000086F 2200                    	db `\"\0`
  9007                                  fmt_string_char:
  9008 00000871 256300                          db `%c\0`
  9009                                  fmt_string_char_7:
  9010 00000874 5C6100                          db `\\a\0`
  9011                                  fmt_string_char_8:
  9012 00000877 5C6200                          db `\\b\0`
  9013                                  fmt_string_char_9:
  9014 0000087A 5C7400                          db `\\t\0`
  9015                                  fmt_string_char_10:
  9016 0000087D 5C6E00                          db `\\n\0`
  9017                                  fmt_string_char_11:
  9018 00000880 5C7600                          db `\\v\0`
  9019                                  fmt_string_char_12:
  9020 00000883 5C6600                          db `\\f\0`
  9021                                  fmt_string_char_13:
  9022 00000886 5C7200                          db `\\r\0`
  9023                                  fmt_string_char_34:
  9024 00000889 5C2200                          db `\\"\0`
  9025                                  fmt_string_char_92:
  9026 0000088C 5C5C00                          db `\\\\\0`
  9027                                  fmt_string_char_hex:
  9028 0000088F 5C7825583B00                    db `\\x%X;\0`
  9029                                  
  9030                                  section .text
  9031                                  
  9032                                  print_sexpr:
  9033 00006268 C8000000                	enter 0, 0
  9034 0000626C 8A07                    	mov al, byte [rdi]
  9035 0000626E 3C00                    	cmp al, T_void
  9036 00006270 7465                    	je .Lvoid
  9037 00006272 3C01                    	cmp al, T_nil
  9038 00006274 7470                    	je .Lnil
  9039 00006276 3C09                    	cmp al, T_boolean_false
  9040 00006278 747B                    	je .Lboolean_false
  9041 0000627A 3C0A                    	cmp al, T_boolean_true
  9042 0000627C 0F8482000000            	je .Lboolean_true
  9043 00006282 3C02                    	cmp al, T_char
  9044 00006284 0F8489000000            	je .Lchar
  9045 0000628A 3C41                    	cmp al, T_interned_symbol
  9046 0000628C 0F84CB010000            	je .Linterned_symbol
  9047 00006292 3C42                            cmp al, T_uninterned_symbol
  9048 00006294 0F84EF010000                    je .Luninterned_symbol
  9049 0000629A 3C21                    	cmp al, T_pair
  9050 0000629C 0F84FA010000            	je .Lpair
  9051 000062A2 3C22                    	cmp al, T_vector
  9052 000062A4 0F84C3020000            	je .Lvector
  9053 000062AA 3C04                    	cmp al, T_closure
  9054 000062AC 0F8491010000            	je .Lclosure
  9055 000062B2 3C13                    	cmp al, T_real
  9056 000062B4 0F8454030000            	je .Lreal
  9057 000062BA 3C12                    	cmp al, T_fraction
  9058 000062BC 0F847A030000            	je .Lfraction
  9059 000062C2 3C11                    	cmp al, T_integer
  9060 000062C4 0F84B3030000            	je .Linteger
  9061 000062CA 3C03                    	cmp al, T_string
  9062 000062CC 0F84BE030000            	je .Lstring
  9063                                  
  9064 000062D2 E9F6040000              	jmp .Lunknown_sexpr_type
  9065                                  
  9066                                  .Lvoid:
  9067 000062D7 48BF-                   	mov rdi, fmt_void
  9067 000062D9 [6A07000000000000] 
  9068 000062E1 E91A050000              	jmp .Lemit
  9069                                  
  9070                                  .Lnil:
  9071 000062E6 48BF-                   	mov rdi, fmt_nil
  9071 000062E8 [7207000000000000] 
  9072 000062F0 E90B050000              	jmp .Lemit
  9073                                  
  9074                                  .Lboolean_false:
  9075 000062F5 48BF-                   	mov rdi, fmt_boolean_false
  9075 000062F7 [7507000000000000] 
  9076 000062FF E9FC040000              	jmp .Lemit
  9077                                  
  9078                                  .Lboolean_true:
  9079 00006304 48BF-                   	mov rdi, fmt_boolean_true
  9079 00006306 [7807000000000000] 
  9080 0000630E E9ED040000              	jmp .Lemit
  9081                                  
  9082                                  .Lchar:
  9083 00006313 8A4701                  	mov al, byte [rdi + 1]
  9084 00006316 3C20                    	cmp al, ' '
  9085 00006318 7E28                    	jle .Lchar_whitespace
  9086 0000631A 3C5C                    	cmp al, 92 		; backslash
  9087 0000631C 0F847C000000            	je .Lchar_backslash
  9088 00006322 3C22                    	cmp al, '"'
  9089 00006324 0F8483000000            	je .Lchar_dquote
  9090 0000632A 4825FF000000            	and rax, 255
  9091 00006330 48BF-                   	mov rdi, fmt_char_simple
  9091 00006332 [8307000000000000] 
  9092 0000633A 4889C6                  	mov rsi, rax
  9093 0000633D E9BE040000              	jmp .Lemit
  9094                                  
  9095                                  .Lchar_whitespace:
  9096 00006342 3C00                    	cmp al, 0
  9097 00006344 7476                    	je .Lchar_null
  9098 00006346 3C07                    	cmp al, 7
  9099 00006348 0F847D000000            	je .Lchar_bell
  9100 0000634E 3C08                    	cmp al, 8
  9101 00006350 0F8484000000            	je .Lchar_backspace
  9102 00006356 3C09                    	cmp al, 9
  9103 00006358 0F848B000000            	je .Lchar_tab
  9104 0000635E 3C0A                    	cmp al, 10
  9105 00006360 0F8492000000            	je .Lchar_newline
  9106 00006366 3C0C                    	cmp al, 12
  9107 00006368 0F8499000000            	je .Lchar_formfeed
  9108 0000636E 3C0D                    	cmp al, 13
  9109 00006370 0F84A0000000            	je .Lchar_return
  9110 00006376 3C1B                    	cmp al, 27
  9111 00006378 0F84A7000000            	je .Lchar_escape
  9112 0000637E 4825FF000000            	and rax, 255
  9113 00006384 3C20                    	cmp al, ' '
  9114 00006386 0F84A8000000            	je .Lchar_space
  9115 0000638C 48BF-                   	mov rdi, fmt_char_hex
  9115 0000638E [CF07000000000000] 
  9116 00006396 4889C6                  	mov rsi, rax
  9117 00006399 E962040000              	jmp .Lemit	
  9118                                  
  9119                                  .Lchar_backslash:
  9120 0000639E 48BF-                   	mov rdi, fmt_char_backslash
  9120 000063A0 [7B07000000000000] 
  9121 000063A8 E953040000              	jmp .Lemit
  9122                                  
  9123                                  .Lchar_dquote:
  9124 000063AD 48BF-                   	mov rdi, fmt_char_dquote
  9124 000063AF [7F07000000000000] 
  9125 000063B7 E944040000              	jmp .Lemit
  9126                                  
  9127                                  .Lchar_null:
  9128 000063BC 48BF-                   	mov rdi, fmt_char_null
  9128 000063BE [8807000000000000] 
  9129 000063C6 E935040000              	jmp .Lemit
  9130                                  
  9131                                  .Lchar_bell:
  9132 000063CB 48BF-                   	mov rdi, fmt_char_bell
  9132 000063CD [8E07000000000000] 
  9133 000063D5 E926040000              	jmp .Lemit
  9134                                  
  9135                                  .Lchar_backspace:
  9136 000063DA 48BF-                   	mov rdi, fmt_char_backspace
  9136 000063DC [9507000000000000] 
  9137 000063E4 E917040000              	jmp .Lemit
  9138                                  
  9139                                  .Lchar_tab:
  9140 000063E9 48BF-                   	mov rdi, fmt_char_tab
  9140 000063EB [A107000000000000] 
  9141 000063F3 E908040000              	jmp .Lemit
  9142                                  
  9143                                  .Lchar_newline:
  9144 000063F8 48BF-                   	mov rdi, fmt_char_newline
  9144 000063FA [A707000000000000] 
  9145 00006402 E9F9030000              	jmp .Lemit
  9146                                  
  9147                                  .Lchar_formfeed:
  9148 00006407 48BF-                   	mov rdi, fmt_char_formfeed
  9148 00006409 [B107000000000000] 
  9149 00006411 E9EA030000              	jmp .Lemit
  9150                                  
  9151                                  .Lchar_return:
  9152 00006416 48BF-                   	mov rdi, fmt_char_return
  9152 00006418 [B807000000000000] 
  9153 00006420 E9DB030000              	jmp .Lemit
  9154                                  
  9155                                  .Lchar_escape:
  9156 00006425 48BF-                   	mov rdi, fmt_char_escape
  9156 00006427 [C107000000000000] 
  9157 0000642F E9CC030000              	jmp .Lemit
  9158                                  
  9159                                  .Lchar_space:
  9160 00006434 48BF-                   	mov rdi, fmt_char_space
  9160 00006436 [C707000000000000] 
  9161 0000643E E9BD030000              	jmp .Lemit
  9162                                  
  9163                                  .Lclosure:
  9164 00006443 4889FE                  	mov rsi, qword rdi
  9165 00006446 48BF-                   	mov rdi, fmt_closure
  9165 00006448 [DC07000000000000] 
  9166 00006450 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
  9167 00006454 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
  9168 00006458 E9A3030000              	jmp .Lemit
  9169                                  
  9170                                  .Linterned_symbol:
  9171 0000645D 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
  9172 00006461 BE01000000              	mov rsi, 1		 ; size = 1 byte
  9173 00006466 488B5701                	mov rdx, qword [rdi + 1] ; length
  9174 0000646A 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
  9175 0000646E 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
  9176                                  	ENTER
    44 00006476 C8000000            <1>  enter 0, 0
    45 0000647A 4883E4F0            <1>  and rsp, ~15
  9177 0000647E E8(00000000)            	call fwrite
  9178                                  	LEAVE
    49 00006483 C9                  <1>  leave
  9179 00006484 E98C030000              	jmp .Lend
  9180                                  
  9181                                  .Luninterned_symbol:
  9182 00006489 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
  9183 0000648D 48BF-                           mov rdi, fmt_gensym
  9183 0000648F [D707000000000000] 
  9184 00006497 E964030000                      jmp .Lemit
  9185                                  	
  9186                                  .Lpair:
  9187 0000649C 57                      	push rdi
  9188 0000649D 48BF-                   	mov rdi, fmt_lparen
  9188 0000649F [0808000000000000] 
  9189 000064A7 B800000000              	mov rax, 0
  9190                                          ENTER
    44 000064AC C8000000            <1>  enter 0, 0
    45 000064B0 4883E4F0            <1>  and rsp, ~15
  9191 000064B4 E8(00000000)            	call printf
  9192                                          LEAVE
    49 000064B9 C9                  <1>  leave
  9193 000064BA 488B3C24                	mov rdi, qword [rsp] 	; pair
  9194 000064BE 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
  9195 000064C2 E8A1FDFFFF              	call print_sexpr
  9196 000064C7 5F                      	pop rdi 		; pair
  9197 000064C8 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
  9198                                  .Lcdr:
  9199 000064CC 8A07                    	mov al, byte [rdi]
  9200 000064CE 3C01                    	cmp al, T_nil
  9201 000064D0 7447                    	je .Lcdr_nil
  9202 000064D2 3C21                    	cmp al, T_pair
  9203 000064D4 7462                    	je .Lcdr_pair
  9204 000064D6 57                      	push rdi
  9205 000064D7 48BF-                   	mov rdi, fmt_dotted_pair
  9205 000064D9 [0A08000000000000] 
  9206 000064E1 B800000000              	mov rax, 0
  9207                                          ENTER
    44 000064E6 C8000000            <1>  enter 0, 0
    45 000064EA 4883E4F0            <1>  and rsp, ~15
  9208 000064EE E8(00000000)            	call printf
  9209                                          LEAVE
    49 000064F3 C9                  <1>  leave
  9210 000064F4 5F                      	pop rdi
  9211 000064F5 E86EFDFFFF              	call print_sexpr
  9212 000064FA 48BF-                   	mov rdi, fmt_rparen
  9212 000064FC [0E08000000000000] 
  9213 00006504 B800000000              	mov rax, 0
  9214                                          ENTER
    44 00006509 C8000000            <1>  enter 0, 0
    45 0000650D 4883E4F0            <1>  and rsp, ~15
  9215 00006511 E8(00000000)            	call printf
  9216                                          LEAVE
    49 00006516 C9                  <1>  leave
  9217 00006517 C9                      	leave
  9218 00006518 C3                      	ret
  9219                                  
  9220                                  .Lcdr_nil:
  9221 00006519 48BF-                   	mov rdi, fmt_rparen
  9221 0000651B [0E08000000000000] 
  9222 00006523 B800000000              	mov rax, 0
  9223                                          ENTER
    44 00006528 C8000000            <1>  enter 0, 0
    45 0000652C 4883E4F0            <1>  and rsp, ~15
  9224 00006530 E8(00000000)            	call printf
  9225                                          LEAVE
    49 00006535 C9                  <1>  leave
  9226 00006536 C9                      	leave
  9227 00006537 C3                      	ret
  9228                                  
  9229                                  .Lcdr_pair:
  9230 00006538 57                      	push rdi
  9231 00006539 48BF-                   	mov rdi, fmt_space
  9231 0000653B [1008000000000000] 
  9232 00006543 B800000000              	mov rax, 0
  9233                                          ENTER
    44 00006548 C8000000            <1>  enter 0, 0
    45 0000654C 4883E4F0            <1>  and rsp, ~15
  9234 00006550 E8(00000000)            	call printf
  9235                                          LEAVE
    49 00006555 C9                  <1>  leave
  9236 00006556 488B3C24                	mov rdi, qword [rsp]
  9237 0000655A 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
  9238 0000655E E805FDFFFF              	call print_sexpr
  9239 00006563 5F                      	pop rdi
  9240 00006564 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
  9241 00006568 E95FFFFFFF              	jmp .Lcdr
  9242                                  
  9243                                  .Lvector:
  9244 0000656D 488B4701                	mov rax, qword [rdi + 1] ; length
  9245 00006571 4883F800                	cmp rax, 0
  9246 00006575 0F8484000000            	je .Lvector_empty
  9247 0000657B 57                      	push rdi
  9248 0000657C 48BF-                   	mov rdi, fmt_vector
  9248 0000657E [1608000000000000] 
  9249 00006586 B800000000              	mov rax, 0
  9250                                          ENTER
    44 0000658B C8000000            <1>  enter 0, 0
    45 0000658F 4883E4F0            <1>  and rsp, ~15
  9251 00006593 E8(00000000)            	call printf
  9252                                          LEAVE
    49 00006598 C9                  <1>  leave
  9253 00006599 488B3C24                	mov rdi, qword [rsp]
  9254 0000659D FF7701                  	push qword [rdi + 1]
  9255 000065A0 6A01                    	push 1
  9256 000065A2 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
  9257 000065A6 E8BDFCFFFF              	call print_sexpr
  9258                                  .Lvector_loop:
  9259                                  	; [rsp] index
  9260                                  	; [rsp + 8*1] limit
  9261                                  	; [rsp + 8*2] vector
  9262 000065AB 488B0424                	mov rax, qword [rsp]
  9263 000065AF 483B442408              	cmp rax, qword [rsp + 8*1]
  9264 000065B4 7436                    	je .Lvector_end
  9265 000065B6 48BF-                   	mov rdi, fmt_space
  9265 000065B8 [1008000000000000] 
  9266 000065C0 B800000000              	mov rax, 0
  9267                                          ENTER
    44 000065C5 C8000000            <1>  enter 0, 0
    45 000065C9 4883E4F0            <1>  and rsp, ~15
  9268 000065CD E8(00000000)            	call printf
  9269                                          LEAVE
    49 000065D2 C9                  <1>  leave
  9270 000065D3 488B0424                	mov rax, qword [rsp]
  9271 000065D7 488B5C2410              	mov rbx, qword [rsp + 8*2]
  9272 000065DC 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
  9273 000065E1 E882FCFFFF              	call print_sexpr
  9274 000065E6 48FF0424                	inc qword [rsp]
  9275 000065EA EBBF                    	jmp .Lvector_loop
  9276                                  
  9277                                  .Lvector_end:
  9278 000065EC 4883C418                	add rsp, 8*3
  9279 000065F0 48BF-                   	mov rdi, fmt_rparen
  9279 000065F2 [0E08000000000000] 
  9280 000065FA E901020000              	jmp .Lemit	
  9281                                  
  9282                                  .Lvector_empty:
  9283 000065FF 48BF-                   	mov rdi, fmt_empty_vector
  9283 00006601 [1208000000000000] 
  9284 00006609 E9F2010000              	jmp .Lemit
  9285                                  
  9286                                  .Lreal:
  9287 0000660E FF7701                  	push qword [rdi + 1]
  9288 00006611 F20F100424              	movsd xmm0, qword [rsp]
  9289 00006616 4883C408                	add rsp, 8*1
  9290 0000661A 48BF-                   	mov rdi, fmt_real
  9290 0000661C [1908000000000000] 
  9291 00006624 B801000000              	mov rax, 1
  9292                                  	ENTER
    44 00006629 C8000000            <1>  enter 0, 0
    45 0000662D 4883E4F0            <1>  and rsp, ~15
  9293 00006631 E8(00000000)            	call printf
  9294                                  	LEAVE
    49 00006636 C9                  <1>  leave
  9295 00006637 E9D9010000              	jmp .Lend
  9296                                  
  9297                                  .Lfraction:
  9298 0000663C 488B7701                	mov rsi, qword [rdi + 1]
  9299 00006640 488B5709                	mov rdx, qword [rdi + 1 + 8]
  9300 00006644 4883FE00                	cmp rsi, 0
  9301 00006648 7415                    	je .Lrat_zero
  9302 0000664A 4883FA01                	cmp rdx, 1
  9303 0000664E 741E                    	je .Lrat_int
  9304 00006650 48BF-                   	mov rdi, fmt_fraction
  9304 00006652 [1C08000000000000] 
  9305 0000665A E9A1010000              	jmp .Lemit
  9306                                  
  9307                                  .Lrat_zero:
  9308 0000665F 48BF-                   	mov rdi, fmt_zero
  9308 00006661 [2408000000000000] 
  9309 00006669 E992010000              	jmp .Lemit
  9310                                  
  9311                                  .Lrat_int:
  9312 0000666E 48BF-                   	mov rdi, fmt_int
  9312 00006670 [2608000000000000] 
  9313 00006678 E983010000              	jmp .Lemit
  9314                                  
  9315                                  .Linteger:
  9316 0000667D 488B7701                	mov rsi, qword [rdi + 1]
  9317 00006681 48BF-                   	mov rdi, fmt_int
  9317 00006683 [2608000000000000] 
  9318 0000668B E970010000              	jmp .Lemit
  9319                                  
  9320                                  .Lstring:
  9321 00006690 488D4709                	lea rax, [rdi + 1 + 8]
  9322 00006694 50                      	push rax
  9323 00006695 FF7701                  	push qword [rdi + 1]
  9324 00006698 48BF-                   	mov rdi, fmt_dquote
  9324 0000669A [6F08000000000000] 
  9325 000066A2 B800000000              	mov rax, 0
  9326                                  	ENTER
    44 000066A7 C8000000            <1>  enter 0, 0
    45 000066AB 4883E4F0            <1>  and rsp, ~15
  9327 000066AF E8(00000000)            	call printf
  9328                                  	LEAVE
    49 000066B4 C9                  <1>  leave
  9329                                  .Lstring_loop:
  9330                                  	; qword [rsp]: limit
  9331                                  	; qword [rsp + 8*1]: char *
  9332 000066B5 48833C2400              	cmp qword [rsp], 0
  9333 000066BA 0F84FD000000            	je .Lstring_end
  9334 000066C0 488B442408              	mov rax, qword [rsp + 8*1]
  9335 000066C5 8A00                    	mov al, byte [rax]
  9336 000066C7 4825FF000000            	and rax, 255
  9337 000066CD 3C07                    	cmp al, 7
  9338 000066CF 7468                            je .Lstring_char_7
  9339 000066D1 3C08                            cmp al, 8
  9340 000066D3 7470                            je .Lstring_char_8
  9341 000066D5 3C09                            cmp al, 9
  9342 000066D7 7478                            je .Lstring_char_9
  9343 000066D9 3C0A                            cmp al, 10
  9344 000066DB 0F847C000000                    je .Lstring_char_10
  9345 000066E1 3C0B                            cmp al, 11
  9346 000066E3 0F8480000000                    je .Lstring_char_11
  9347 000066E9 3C0C                            cmp al, 12
  9348 000066EB 0F8484000000                    je .Lstring_char_12
  9349 000066F1 3C0D                            cmp al, 13
  9350 000066F3 0F8488000000                    je .Lstring_char_13
  9351 000066F9 3C22                            cmp al, 34
  9352 000066FB 0F848C000000                    je .Lstring_char_34
  9353 00006701 3C5C                            cmp al, 92              ;         je .Lstring_char_92
  9355 00006703 3C20                            cmp al, ' '
  9356 00006705 0F8CA0000000                    jl .Lstring_char_hex
  9357 0000670B 48BF-                           mov rdi, fmt_string_char
  9357 0000670D [7108000000000000] 
  9358 00006715 4889C6                          mov rsi, rax
  9359                                  .Lstring_char_emit:
  9360 00006718 B800000000                      mov rax, 0
  9361                                          ENTER
    44 0000671D C8000000            <1>  enter 0, 0
    45 00006721 4883E4F0            <1>  and rsp, ~15
  9362 00006725 E8(00000000)                    call printf
  9363                                          LEAVE
    49 0000672A C9                  <1>  leave
  9364 0000672B 48FF0C24                        dec qword [rsp]
  9365 0000672F 48FF442408                      inc qword [rsp + 8*1]
  9366 00006734 E97CFFFFFF                      jmp .Lstring_loop
  9367                                  
  9368                                  .Lstring_char_7:
  9369 00006739 48BF-                           mov rdi, fmt_string_char_7
  9369 0000673B [7408000000000000] 
  9370 00006743 EBD3                            jmp .Lstring_char_emit
  9371                                  
  9372                                  .Lstring_char_8:
  9373 00006745 48BF-                           mov rdi, fmt_string_char_8
  9373 00006747 [7708000000000000] 
  9374 0000674F EBC7                            jmp .Lstring_char_emit
  9375                                          
  9376                                  .Lstring_char_9:
  9377 00006751 48BF-                           mov rdi, fmt_string_char_9
  9377 00006753 [7A08000000000000] 
  9378 0000675B EBBB                            jmp .Lstring_char_emit
  9379                                  
  9380                                  .Lstring_char_10:
  9381 0000675D 48BF-                           mov rdi, fmt_string_char_10
  9381 0000675F [7D08000000000000] 
  9382 00006767 EBAF                            jmp .Lstring_char_emit
  9383                                  
  9384                                  .Lstring_char_11:
  9385 00006769 48BF-                           mov rdi, fmt_string_char_11
  9385 0000676B [8008000000000000] 
  9386 00006773 EBA3                            jmp .Lstring_char_emit
  9387                                  
  9388                                  .Lstring_char_12:
  9389 00006775 48BF-                           mov rdi, fmt_string_char_12
  9389 00006777 [8308000000000000] 
  9390 0000677F EB97                            jmp .Lstring_char_emit
  9391                                  
  9392                                  .Lstring_char_13:
  9393 00006781 48BF-                           mov rdi, fmt_string_char_13
  9393 00006783 [8608000000000000] 
  9394 0000678B EB8B                            jmp .Lstring_char_emit
  9395                                  
  9396                                  .Lstring_char_34:
  9397 0000678D 48BF-                           mov rdi, fmt_string_char_34
  9397 0000678F [8908000000000000] 
  9398 00006797 E97CFFFFFF                      jmp .Lstring_char_emit
  9399                                  
  9400                                  .Lstring_char_92:
  9401 0000679C 48BF-                           mov rdi, fmt_string_char_92
  9401 0000679E [8C08000000000000] 
  9402 000067A6 E96DFFFFFF                      jmp .Lstring_char_emit
  9403                                  
  9404                                  .Lstring_char_hex:
  9405 000067AB 48BF-                           mov rdi, fmt_string_char_hex
  9405 000067AD [8F08000000000000] 
  9406 000067B5 4889C6                          mov rsi, rax
  9407 000067B8 E95BFFFFFF                      jmp .Lstring_char_emit        
  9408                                  
  9409                                  .Lstring_end:
  9410 000067BD 4883C410                	add rsp, 8 * 2
  9411 000067C1 48BF-                   	mov rdi, fmt_dquote
  9411 000067C3 [6F08000000000000] 
  9412 000067CB EB33                    	jmp .Lemit
  9413                                  
  9414                                  .Lunknown_sexpr_type:
  9415 000067CD 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
  9415 000067CF [2A08000000000000] 
  9416 000067D7 4825FF000000            	and rax, 255
  9417 000067DD 4889C2                  	mov rdx, rax
  9418 000067E0 4889F9                  	mov rcx, rdi
  9419 000067E3 488B3C25[00000000]      	mov rdi, qword [stderr]
  9420 000067EB B800000000              	mov rax, 0
  9421                                          ENTER
    44 000067F0 C8000000            <1>  enter 0, 0
    45 000067F4 4883E4F0            <1>  and rsp, ~15
  9422 000067F8 E8(00000000)            	call fprintf
  9423                                          LEAVE
    49 000067FD C9                  <1>  leave
  9424 000067FE C9                              leave
  9425 000067FF C3                              ret
  9426                                  
  9427                                  .Lemit:
  9428 00006800 B800000000              	mov rax, 0
  9429                                          ENTER
    44 00006805 C8000000            <1>  enter 0, 0
    45 00006809 4883E4F0            <1>  and rsp, ~15
  9430 0000680D E8(00000000)            	call printf
  9431                                          LEAVE
    49 00006812 C9                  <1>  leave
  9432 00006813 EB00                    	jmp .Lend
  9433                                  
  9434                                  .Lend:
  9435                                  	LEAVE
    49 00006815 C9                  <1>  leave
  9436 00006816 C3                      	ret
  9437                                  
  9438                                  ;;; rdi: address of free variable
  9439                                  ;;; rsi: address of code-pointer
  9440                                  bind_primitive:
  9441 00006817 C8000000                        enter 0, 0
  9442 0000681B 57                              push rdi
  9443 0000681C BF11000000                      mov rdi, (1 + 8 + 8)
  9444 00006821 E8C1F7FFFF                      call malloc
  9445 00006826 5F                              pop rdi
  9446 00006827 C60004                          mov byte [rax], T_closure
  9447 0000682A 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
  9448 00006832 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
  9449 00006836 488907                          mov qword [rdi], rax
  9450 00006839 48B8-                           mov rax, sob_void
  9450 0000683B [0000000000000000] 
  9451 00006843 C9                              leave
  9452 00006844 C3                              ret
  9453                                  
  9454                                  L_code_ptr_ash:
  9455 00006845 C8000000                        enter 0, 0
  9456 00006849 48837D1802                      cmp COUNT, 2
  9457 0000684E 0F8570140000                    jne L_error_arg_count_2
  9458 00006854 488B7D20                        mov rdi, PARAM(0)
  9459                                          assert_integer(rdi)
    53 00006858 803F11              <1>  cmp byte [%1], %2
    54 0000685B 0F8502150000        <1>  jne L_error_incorrect_type
  9460 00006861 488B4D28                        mov rcx, PARAM(1)
  9461                                          assert_integer(rcx)
    53 00006865 803911              <1>  cmp byte [%1], %2
    54 00006868 0F85F5140000        <1>  jne L_error_incorrect_type
  9462 0000686E 488B7F01                        mov rdi, qword [rdi + 1]
  9463 00006872 488B4901                        mov rcx, qword [rcx + 1]
  9464 00006876 4883F900                        cmp rcx, 0
  9465 0000687A 7C0F                            jl .L_negative
  9466                                  .L_loop_positive:
  9467 0000687C 4883F900                        cmp rcx, 0
  9468 00006880 741B                            je .L_exit
  9469 00006882 48D3E7                          sal rdi, cl
  9470 00006885 48C1E908                        shr rcx, 8
  9471 00006889 EBF1                            jmp .L_loop_positive
  9472                                  .L_negative:
  9473 0000688B 48F7D9                          neg rcx
  9474                                  .L_loop_negative:
  9475 0000688E 4883F900                        cmp rcx, 0
  9476 00006892 7409                            je .L_exit
  9477 00006894 48D3FF                          sar rdi, cl
  9478 00006897 48C1E908                        shr rcx, 8
  9479 0000689B EBF1                            jmp .L_loop_negative
  9480                                  .L_exit:
  9481 0000689D E83C130000                      call make_integer
  9482 000068A2 C9                              leave
  9483 000068A3 C22000                          ret AND_KILL_FRAME(2)
  9484                                  
  9485                                  L_code_ptr_logand:
  9486 000068A6 C8000000                        enter 0, 0
  9487 000068AA 48837D1802                      cmp COUNT, 2
  9488 000068AF 0F850F140000                    jne L_error_arg_count_2
  9489 000068B5 4C8B4520                        mov r8, PARAM(0)
  9490                                          assert_integer(r8)
    53 000068B9 41803811            <1>  cmp byte [%1], %2
    54 000068BD 0F85A0140000        <1>  jne L_error_incorrect_type
  9491 000068C3 4C8B4D28                        mov r9, PARAM(1)
  9492                                          assert_integer(r9)
    53 000068C7 41803911            <1>  cmp byte [%1], %2
    54 000068CB 0F8592140000        <1>  jne L_error_incorrect_type
  9493 000068D1 498B7801                        mov rdi, qword [r8 + 1]
  9494 000068D5 49237901                        and rdi, qword [r9 + 1]
  9495 000068D9 E800130000                      call make_integer
  9496 000068DE C9                              leave
  9497 000068DF C22000                          ret AND_KILL_FRAME(2)
  9498                                  
  9499                                  L_code_ptr_logor:
  9500 000068E2 C8000000                        enter 0, 0
  9501 000068E6 48837D1802                      cmp COUNT, 2
  9502 000068EB 0F85D3130000                    jne L_error_arg_count_2
  9503 000068F1 4C8B4520                        mov r8, PARAM(0)
  9504                                          assert_integer(r8)
    53 000068F5 41803811            <1>  cmp byte [%1], %2
    54 000068F9 0F8564140000        <1>  jne L_error_incorrect_type
  9505 000068FF 4C8B4D28                        mov r9, PARAM(1)
  9506                                          assert_integer(r9)
    53 00006903 41803911            <1>  cmp byte [%1], %2
    54 00006907 0F8556140000        <1>  jne L_error_incorrect_type
  9507 0000690D 498B7801                        mov rdi, qword [r8 + 1]
  9508 00006911 490B7901                        or rdi, qword [r9 + 1]
  9509 00006915 E8C4120000                      call make_integer
  9510 0000691A C9                              leave
  9511 0000691B C22000                          ret AND_KILL_FRAME(2)
  9512                                  
  9513                                  L_code_ptr_logxor:
  9514 0000691E C8000000                        enter 0, 0
  9515 00006922 48837D1802                      cmp COUNT, 2
  9516 00006927 0F8597130000                    jne L_error_arg_count_2
  9517 0000692D 4C8B4520                        mov r8, PARAM(0)
  9518                                          assert_integer(r8)
    53 00006931 41803811            <1>  cmp byte [%1], %2
    54 00006935 0F8528140000        <1>  jne L_error_incorrect_type
  9519 0000693B 4C8B4D28                        mov r9, PARAM(1)
  9520                                          assert_integer(r9)
    53 0000693F 41803911            <1>  cmp byte [%1], %2
    54 00006943 0F851A140000        <1>  jne L_error_incorrect_type
  9521 00006949 498B7801                        mov rdi, qword [r8 + 1]
  9522 0000694D 49337901                        xor rdi, qword [r9 + 1]
  9523 00006951 E888120000                      call make_integer
  9524                                          LEAVE
    49 00006956 C9                  <1>  leave
  9525 00006957 C22000                          ret AND_KILL_FRAME(2)
  9526                                  
  9527                                  L_code_ptr_lognot:
  9528 0000695A C8000000                        enter 0, 0
  9529 0000695E 48837D1801                      cmp COUNT, 1
  9530 00006963 0F8526130000                    jne L_error_arg_count_1
  9531 00006969 4C8B4520                        mov r8, PARAM(0)
  9532                                          assert_integer(r8)
    53 0000696D 41803811            <1>  cmp byte [%1], %2
    54 00006971 0F85EC130000        <1>  jne L_error_incorrect_type
  9533 00006977 498B7801                        mov rdi, qword [r8 + 1]
  9534 0000697B 48F7D7                          not rdi
  9535 0000697E E85B120000                      call make_integer
  9536 00006983 C9                              leave
  9537 00006984 C21800                          ret AND_KILL_FRAME(1)
  9538                                  
  9539                                  L_code_ptr_bin_apply:
  9540                                  ;;; fill in for final project!
  9541 00006987 C8000000                enter 0, 0
  9542 0000698B 48837D1803              cmp COUNT, 3
  9543 00006990 0F8598130000            jne L_error_arg_count_3
  9544 00006996 488B7D20                mov rdi, PARAM(0)
  9545                                  assert_closure(rdi)
    53 0000699A 803F04              <1>  cmp byte [%1], %2
    54 0000699D 0F85C0130000        <1>  jne L_error_incorrect_type
  9546 000069A3 488B7528                mov rsi, PARAM(1)
  9547                                  assert_integer(rsi)
    53 000069A7 803E11              <1>  cmp byte [%1], %2
    54 000069AA 0F85B3130000        <1>  jne L_error_incorrect_type
  9548 000069B0 488B5530                mov rdx, PARAM(2)
  9549                                  assert_vector(rdx)
    53 000069B4 803A22              <1>  cmp byte [%1], %2
    54 000069B7 0F85A6130000        <1>  jne L_error_incorrect_type
  9550 000069BD 488B4E01                mov rcx, qword [rsi + 1]
  9551 000069C1 4883F900                cmp rcx, 0
  9552 000069C5 0F8C2D120000            jl L_error_integer_range
  9553 000069CB 4C8B4201                mov r8, qword [rdx + 1]
  9554 000069CF 4C39C1                  cmp rcx, r8
  9555 000069D2 0F8D20120000            jge L_error_integer_range
  9556 000069D8 4C8B4CCA09              mov r9, qword [rdx + 1 + 8 + 8 * rcx]
  9557 000069DD 488B7F09                mov rdi, qword [rdi + 1 + 8]
  9558 000069E1 FFD7                    call rdi
  9559 000069E3 C9                      leave
  9560 000069E4 C22800                  ret AND_KILL_FRAME(3)
  9561                                  
  9562                                  L_code_ptr_is_null:
  9563 000069E7 C8000000                        enter 0, 0
  9564 000069EB 48837D1801                      cmp COUNT, 1
  9565 000069F0 0F8599120000                    jne L_error_arg_count_1
  9566 000069F6 488B4520                        mov rax, PARAM(0)
  9567 000069FA 803801                          cmp byte [rax], T_nil
  9568 000069FD 750C                            jne .L_false
  9569 000069FF 48B8-                           mov rax, sob_boolean_true
  9569 00006A01 [0300000000000000] 
  9570 00006A09 EB0A                            jmp .L_end
  9571                                  .L_false:
  9572 00006A0B 48B8-                           mov rax, sob_boolean_false
  9572 00006A0D [0200000000000000] 
  9573                                  .L_end:
  9574 00006A15 C9                              leave
  9575 00006A16 C21800                          ret AND_KILL_FRAME(1)
  9576                                  
  9577                                  L_code_ptr_is_pair:
  9578 00006A19 C8000000                        enter 0, 0
  9579 00006A1D 48837D1801                      cmp COUNT, 1
  9580 00006A22 0F8567120000                    jne L_error_arg_count_1
  9581 00006A28 488B4520                        mov rax, PARAM(0)
  9582 00006A2C 803821                          cmp byte [rax], T_pair
  9583 00006A2F 750C                            jne .L_false
  9584 00006A31 48B8-                           mov rax, sob_boolean_true
  9584 00006A33 [0300000000000000] 
  9585 00006A3B EB0A                            jmp .L_end
  9586                                  .L_false:
  9587 00006A3D 48B8-                           mov rax, sob_boolean_false
  9587 00006A3F [0200000000000000] 
  9588                                  .L_end:
  9589 00006A47 C9                              leave
  9590 00006A48 C21800                          ret AND_KILL_FRAME(1)
  9591                                          
  9592                                  L_code_ptr_is_void:
  9593 00006A4B C8000000                        enter 0, 0
  9594 00006A4F 48837D1801                      cmp COUNT, 1
  9595 00006A54 0F8535120000                    jne L_error_arg_count_1
  9596 00006A5A 488B4520                        mov rax, PARAM(0)
  9597 00006A5E 803800                          cmp byte [rax], T_void
  9598 00006A61 750C                            jne .L_false
  9599 00006A63 48B8-                           mov rax, sob_boolean_true
  9599 00006A65 [0300000000000000] 
  9600 00006A6D EB0A                            jmp .L_end
  9601                                  .L_false:
  9602 00006A6F 48B8-                           mov rax, sob_boolean_false
  9602 00006A71 [0200000000000000] 
  9603                                  .L_end:
  9604 00006A79 C9                              leave
  9605 00006A7A C21800                          ret AND_KILL_FRAME(1)
  9606                                  
  9607                                  L_code_ptr_is_char:
  9608 00006A7D C8000000                        enter 0, 0
  9609 00006A81 48837D1801                      cmp COUNT, 1
  9610 00006A86 0F8503120000                    jne L_error_arg_count_1
  9611 00006A8C 488B4520                        mov rax, PARAM(0)
  9612 00006A90 803802                          cmp byte [rax], T_char
  9613 00006A93 750C                            jne .L_false
  9614 00006A95 48B8-                           mov rax, sob_boolean_true
  9614 00006A97 [0300000000000000] 
  9615 00006A9F EB0A                            jmp .L_end
  9616                                  .L_false:
  9617 00006AA1 48B8-                           mov rax, sob_boolean_false
  9617 00006AA3 [0200000000000000] 
  9618                                  .L_end:
  9619 00006AAB C9                              leave
  9620 00006AAC C21800                          ret AND_KILL_FRAME(1)
  9621                                  
  9622                                  L_code_ptr_is_string:
  9623 00006AAF C8000000                        enter 0, 0
  9624 00006AB3 48837D1801                      cmp COUNT, 1
  9625 00006AB8 0F85D1110000                    jne L_error_arg_count_1
  9626 00006ABE 488B4520                        mov rax, PARAM(0)
  9627 00006AC2 803803                          cmp byte [rax], T_string
  9628 00006AC5 750C                            jne .L_false
  9629 00006AC7 48B8-                           mov rax, sob_boolean_true
  9629 00006AC9 [0300000000000000] 
  9630 00006AD1 EB0A                            jmp .L_end
  9631                                  .L_false:
  9632 00006AD3 48B8-                           mov rax, sob_boolean_false
  9632 00006AD5 [0200000000000000] 
  9633                                  .L_end:
  9634 00006ADD C9                              leave
  9635 00006ADE C21800                          ret AND_KILL_FRAME(1)
  9636                                  
  9637                                  L_code_ptr_is_symbol:
  9638 00006AE1 C8000000                        enter 0, 0
  9639 00006AE5 48837D1801                      cmp COUNT, 1
  9640 00006AEA 0F859F110000                    jne L_error_arg_count_1
  9641 00006AF0 4C8B4520                        mov r8, PARAM(0)
  9642 00006AF4 41802040                        and byte [r8], T_symbol
  9643 00006AF8 740C                            jz .L_false
  9644 00006AFA 48B8-                           mov rax, sob_boolean_true
  9644 00006AFC [0300000000000000] 
  9645 00006B04 EB0A                            jmp .L_exit
  9646                                  .L_false:
  9647 00006B06 48B8-                           mov rax, sob_boolean_false
  9647 00006B08 [0200000000000000] 
  9648                                  .L_exit:
  9649 00006B10 C9                              leave
  9650 00006B11 C21800                          ret AND_KILL_FRAME(1)
  9651                                  
  9652                                  L_code_ptr_is_uninterned_symbol:
  9653 00006B14 C8000000                        enter 0, 0
  9654 00006B18 48837D1801                      cmp COUNT, 1
  9655 00006B1D 0F856C110000                    jne L_error_arg_count_1
  9656 00006B23 4C8B4520                        mov r8, PARAM(0)
  9657 00006B27 41803842                        cmp byte [r8], T_uninterned_symbol
  9658 00006B2B 750C                            jne .L_false
  9659 00006B2D 48B8-                           mov rax, sob_boolean_true
  9659 00006B2F [0300000000000000] 
  9660 00006B37 EB0A                            jmp .L_exit
  9661                                  .L_false:
  9662 00006B39 48B8-                           mov rax, sob_boolean_false
  9662 00006B3B [0200000000000000] 
  9663                                  .L_exit:
  9664 00006B43 C9                              leave
  9665 00006B44 C21800                          ret AND_KILL_FRAME(1)
  9666                                  
  9667                                  L_code_ptr_is_interned_symbol:
  9668 00006B47 C8000000                        enter 0, 0
  9669 00006B4B 48837D1801                      cmp COUNT, 1
  9670 00006B50 0F8539110000                    jne L_error_arg_count_1
  9671 00006B56 488B4520                        mov rax, PARAM(0)
  9672 00006B5A 803841                          cmp byte [rax], T_interned_symbol
  9673 00006B5D 750C                            jne .L_false
  9674 00006B5F 48B8-                           mov rax, sob_boolean_true
  9674 00006B61 [0300000000000000] 
  9675 00006B69 EB0A                            jmp .L_end
  9676                                  .L_false:
  9677 00006B6B 48B8-                           mov rax, sob_boolean_false
  9677 00006B6D [0200000000000000] 
  9678                                  .L_end:
  9679 00006B75 C9                              leave
  9680 00006B76 C21800                          ret AND_KILL_FRAME(1)
  9681                                  
  9682                                  L_code_ptr_gensym:
  9683 00006B79 C8000000                        enter 0, 0
  9684 00006B7D 48837D1800                      cmp COUNT, 0
  9685 00006B82 0F85D2100000                    jne L_error_arg_count_0
  9686 00006B88 48FF0425[95080000]              inc qword [gensym_count]
  9687 00006B90 BF09000000                      mov rdi, (1 + 8)
  9688 00006B95 E84DF4FFFF                      call malloc
  9689 00006B9A C60042                          mov byte [rax], T_uninterned_symbol
  9690 00006B9D 488B0C25[95080000]              mov rcx, qword [gensym_count]
  9691 00006BA5 48894801                        mov qword [rax + 1], rcx
  9692 00006BA9 C9                              leave
  9693 00006BAA C21000                          ret AND_KILL_FRAME(0)
  9694                                  
  9695                                  L_code_ptr_is_vector:
  9696 00006BAD C8000000                        enter 0, 0
  9697 00006BB1 48837D1801                      cmp COUNT, 1
  9698 00006BB6 0F85D3100000                    jne L_error_arg_count_1
  9699 00006BBC 488B4520                        mov rax, PARAM(0)
  9700 00006BC0 803822                          cmp byte [rax], T_vector
  9701 00006BC3 750C                            jne .L_false
  9702 00006BC5 48B8-                           mov rax, sob_boolean_true
  9702 00006BC7 [0300000000000000] 
  9703 00006BCF EB0A                            jmp .L_end
  9704                                  .L_false:
  9705 00006BD1 48B8-                           mov rax, sob_boolean_false
  9705 00006BD3 [0200000000000000] 
  9706                                  .L_end:
  9707 00006BDB C9                              leave
  9708 00006BDC C21800                          ret AND_KILL_FRAME(1)
  9709                                  
  9710                                  L_code_ptr_is_closure:
  9711 00006BDF C8000000                        enter 0, 0
  9712 00006BE3 48837D1801                      cmp COUNT, 1
  9713 00006BE8 0F85A1100000                    jne L_error_arg_count_1
  9714 00006BEE 488B4520                        mov rax, PARAM(0)
  9715 00006BF2 803804                          cmp byte [rax], T_closure
  9716 00006BF5 750C                            jne .L_false
  9717 00006BF7 48B8-                           mov rax, sob_boolean_true
  9717 00006BF9 [0300000000000000] 
  9718 00006C01 EB0A                            jmp .L_end
  9719                                  .L_false:
  9720 00006C03 48B8-                           mov rax, sob_boolean_false
  9720 00006C05 [0200000000000000] 
  9721                                  .L_end:
  9722 00006C0D C9                              leave
  9723 00006C0E C21800                          ret AND_KILL_FRAME(1)
  9724                                  
  9725                                  L_code_ptr_is_real:
  9726 00006C11 C8000000                        enter 0, 0
  9727 00006C15 48837D1801                      cmp COUNT, 1
  9728 00006C1A 0F856F100000                    jne L_error_arg_count_1
  9729 00006C20 488B4520                        mov rax, PARAM(0)
  9730 00006C24 803813                          cmp byte [rax], T_real
  9731 00006C27 750C                            jne .L_false
  9732 00006C29 48B8-                           mov rax, sob_boolean_true
  9732 00006C2B [0300000000000000] 
  9733 00006C33 EB0A                            jmp .L_end
  9734                                  .L_false:
  9735 00006C35 48B8-                           mov rax, sob_boolean_false
  9735 00006C37 [0200000000000000] 
  9736                                  .L_end:
  9737 00006C3F C9                              leave
  9738 00006C40 C21800                          ret AND_KILL_FRAME(1)
  9739                                  
  9740                                  L_code_ptr_is_fraction:
  9741 00006C43 C8000000                        enter 0, 0
  9742 00006C47 48837D1801                      cmp COUNT, 1
  9743 00006C4C 0F853D100000                    jne L_error_arg_count_1
  9744 00006C52 488B4520                        mov rax, PARAM(0)
  9745 00006C56 803812                          cmp byte [rax], T_fraction
  9746 00006C59 750C                            jne .L_false
  9747 00006C5B 48B8-                           mov rax, sob_boolean_true
  9747 00006C5D [0300000000000000] 
  9748 00006C65 EB0A                            jmp .L_end
  9749                                  .L_false:
  9750 00006C67 48B8-                           mov rax, sob_boolean_false
  9750 00006C69 [0200000000000000] 
  9751                                  .L_end:
  9752 00006C71 C9                              leave
  9753 00006C72 C21800                          ret AND_KILL_FRAME(1)
  9754                                  
  9755                                  L_code_ptr_is_boolean:
  9756 00006C75 C8000000                        enter 0, 0
  9757 00006C79 48837D1801                      cmp COUNT, 1
  9758 00006C7E 0F850B100000                    jne L_error_arg_count_1
  9759 00006C84 488B4520                        mov rax, PARAM(0)
  9760 00006C88 8A18                            mov bl, byte [rax]
  9761 00006C8A 80E308                          and bl, T_boolean
  9762 00006C8D 740C                            je .L_false
  9763 00006C8F 48B8-                           mov rax, sob_boolean_true
  9763 00006C91 [0300000000000000] 
  9764 00006C99 EB0A                            jmp .L_end
  9765                                  .L_false:
  9766 00006C9B 48B8-                           mov rax, sob_boolean_false
  9766 00006C9D [0200000000000000] 
  9767                                  .L_end:
  9768 00006CA5 C9                              leave
  9769 00006CA6 C21800                          ret AND_KILL_FRAME(1)
  9770                                          
  9771                                  L_code_ptr_is_boolean_false:
  9772 00006CA9 C8000000                        enter 0, 0
  9773 00006CAD 48837D1801                      cmp COUNT, 1
  9774 00006CB2 0F85D70F0000                    jne L_error_arg_count_1
  9775 00006CB8 488B4520                        mov rax, PARAM(0)
  9776 00006CBC 8A18                            mov bl, byte [rax]
  9777 00006CBE 80FB09                          cmp bl, T_boolean_false
  9778 00006CC1 750C                            jne .L_false
  9779 00006CC3 48B8-                           mov rax, sob_boolean_true
  9779 00006CC5 [0300000000000000] 
  9780 00006CCD EB0A                            jmp .L_end
  9781                                  .L_false:
  9782 00006CCF 48B8-                           mov rax, sob_boolean_false
  9782 00006CD1 [0200000000000000] 
  9783                                  .L_end:
  9784 00006CD9 C9                              leave
  9785 00006CDA C21800                          ret AND_KILL_FRAME(1)
  9786                                  
  9787                                  L_code_ptr_is_boolean_true:
  9788 00006CDD C8000000                        enter 0, 0
  9789 00006CE1 48837D1801                      cmp COUNT, 1
  9790 00006CE6 0F85A30F0000                    jne L_error_arg_count_1
  9791 00006CEC 488B4520                        mov rax, PARAM(0)
  9792 00006CF0 8A18                            mov bl, byte [rax]
  9793 00006CF2 80FB0A                          cmp bl, T_boolean_true
  9794 00006CF5 750C                            jne .L_false
  9795 00006CF7 48B8-                           mov rax, sob_boolean_true
  9795 00006CF9 [0300000000000000] 
  9796 00006D01 EB0A                            jmp .L_end
  9797                                  .L_false:
  9798 00006D03 48B8-                           mov rax, sob_boolean_false
  9798 00006D05 [0200000000000000] 
  9799                                  .L_end:
  9800 00006D0D C9                              leave
  9801 00006D0E C21800                          ret AND_KILL_FRAME(1)
  9802                                  
  9803                                  L_code_ptr_is_number:
  9804 00006D11 C8000000                        enter 0, 0
  9805 00006D15 48837D1801                      cmp COUNT, 1
  9806 00006D1A 0F856F0F0000                    jne L_error_arg_count_1
  9807 00006D20 488B4520                        mov rax, PARAM(0)
  9808 00006D24 8A18                            mov bl, byte [rax]
  9809 00006D26 80E310                          and bl, T_number
  9810 00006D29 740C                            jz .L_false
  9811 00006D2B 48B8-                           mov rax, sob_boolean_true
  9811 00006D2D [0300000000000000] 
  9812 00006D35 EB0A                            jmp .L_end
  9813                                  .L_false:
  9814 00006D37 48B8-                           mov rax, sob_boolean_false
  9814 00006D39 [0200000000000000] 
  9815                                  .L_end:
  9816 00006D41 C9                              leave
  9817 00006D42 C21800                          ret AND_KILL_FRAME(1)
  9818                                          
  9819                                  L_code_ptr_is_collection:
  9820 00006D45 C8000000                        enter 0, 0
  9821 00006D49 48837D1801                      cmp COUNT, 1
  9822 00006D4E 0F853B0F0000                    jne L_error_arg_count_1
  9823 00006D54 488B4520                        mov rax, PARAM(0)
  9824 00006D58 8A18                            mov bl, byte [rax]
  9825 00006D5A 80E320                          and bl, T_collection
  9826 00006D5D 740C                            je .L_false
  9827 00006D5F 48B8-                           mov rax, sob_boolean_true
  9827 00006D61 [0300000000000000] 
  9828 00006D69 EB0A                            jmp .L_end
  9829                                  .L_false:
  9830 00006D6B 48B8-                           mov rax, sob_boolean_false
  9830 00006D6D [0200000000000000] 
  9831                                  .L_end:
  9832 00006D75 C9                              leave
  9833 00006D76 C21800                          ret AND_KILL_FRAME(1)
  9834                                  
  9835                                  L_code_ptr_cons:
  9836 00006D79 C8000000                        enter 0, 0
  9837 00006D7D 48837D1802                      cmp COUNT, 2
  9838 00006D82 0F853C0F0000                    jne L_error_arg_count_2
  9839 00006D88 BF11000000                      mov rdi, (1 + 8 + 8)
  9840 00006D8D E855F2FFFF                      call malloc
  9841 00006D92 C60021                          mov byte [rax], T_pair
  9842 00006D95 488B5D20                        mov rbx, PARAM(0)
  9843 00006D99 48895801                        mov SOB_PAIR_CAR(rax), rbx
  9844 00006D9D 488B5D28                        mov rbx, PARAM(1)
  9845 00006DA1 48895809                        mov SOB_PAIR_CDR(rax), rbx
  9846 00006DA5 C9                              leave
  9847 00006DA6 C22000                          ret AND_KILL_FRAME(2)
  9848                                  
  9849                                  L_code_ptr_display_sexpr:
  9850 00006DA9 C8000000                        enter 0, 0
  9851 00006DAD 48837D1801                      cmp COUNT, 1
  9852 00006DB2 0F85D70E0000                    jne L_error_arg_count_1
  9853 00006DB8 488B7D20                        mov rdi, PARAM(0)
  9854 00006DBC E8A7F4FFFF                      call print_sexpr
  9855 00006DC1 48B8-                           mov rax, sob_void
  9855 00006DC3 [0000000000000000] 
  9856 00006DCB C9                              leave
  9857 00006DCC C21800                          ret AND_KILL_FRAME(1)
  9858                                  
  9859                                  L_code_ptr_write_char:
  9860 00006DCF C8000000                        enter 0, 0
  9861 00006DD3 48837D1801                      cmp COUNT, 1
  9862 00006DD8 0F85B10E0000                    jne L_error_arg_count_1
  9863 00006DDE 488B4520                        mov rax, PARAM(0)
  9864                                          assert_char(rax)
    53 00006DE2 803802              <1>  cmp byte [%1], %2
    54 00006DE5 0F85780F0000        <1>  jne L_error_incorrect_type
  9865 00006DEB 8A4001                          mov al, SOB_CHAR_VALUE(rax)
  9866 00006DEE 4825FF000000                    and rax, 255
  9867 00006DF4 48BF-                           mov rdi, fmt_char
  9867 00006DF6 [9D08000000000000] 
  9868 00006DFE 4889C6                          mov rsi, rax
  9869 00006E01 B800000000                      mov rax, 0
  9870                                          ENTER
    44 00006E06 C8000000            <1>  enter 0, 0
    45 00006E0A 4883E4F0            <1>  and rsp, ~15
  9871 00006E0E E8(00000000)                    call printf
  9872                                          LEAVE
    49 00006E13 C9                  <1>  leave
  9873 00006E14 48B8-                           mov rax, sob_void
  9873 00006E16 [0000000000000000] 
  9874 00006E1E C9                              leave
  9875 00006E1F C21800                          ret AND_KILL_FRAME(1)
  9876                                  
  9877                                  L_code_ptr_car:
  9878 00006E22 C8000000                        enter 0, 0
  9879 00006E26 48837D1801                      cmp COUNT, 1
  9880 00006E2B 0F855E0E0000                    jne L_error_arg_count_1
  9881 00006E31 488B4520                        mov rax, PARAM(0)
  9882                                          assert_pair(rax)
    53 00006E35 803821              <1>  cmp byte [%1], %2
    54 00006E38 0F85250F0000        <1>  jne L_error_incorrect_type
  9883 00006E3E 488B4001                        mov rax, SOB_PAIR_CAR(rax)
  9884 00006E42 C9                              leave
  9885 00006E43 C21800                          ret AND_KILL_FRAME(1)
  9886                                          
  9887                                  L_code_ptr_cdr:
  9888 00006E46 C8000000                        enter 0, 0
  9889 00006E4A 48837D1801                      cmp COUNT, 1
  9890 00006E4F 0F853A0E0000                    jne L_error_arg_count_1
  9891 00006E55 488B4520                        mov rax, PARAM(0)
  9892                                          assert_pair(rax)
    53 00006E59 803821              <1>  cmp byte [%1], %2
    54 00006E5C 0F85010F0000        <1>  jne L_error_incorrect_type
  9893 00006E62 488B4009                        mov rax, SOB_PAIR_CDR(rax)
  9894 00006E66 C9                              leave
  9895 00006E67 C21800                          ret AND_KILL_FRAME(1)
  9896                                          
  9897                                  L_code_ptr_string_length:
  9898 00006E6A C8000000                        enter 0, 0
  9899 00006E6E 48837D1801                      cmp COUNT, 1
  9900 00006E73 0F85160E0000                    jne L_error_arg_count_1
  9901 00006E79 488B4520                        mov rax, PARAM(0)
  9902                                          assert_string(rax)
    53 00006E7D 803803              <1>  cmp byte [%1], %2
    54 00006E80 0F85DD0E0000        <1>  jne L_error_incorrect_type
  9903 00006E86 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
  9904 00006E8A E84F0D0000                      call make_integer
  9905 00006E8F C9                              leave
  9906 00006E90 C21800                          ret AND_KILL_FRAME(1)
  9907                                  
  9908                                  L_code_ptr_vector_length:
  9909 00006E93 C8000000                        enter 0, 0
  9910 00006E97 48837D1801                      cmp COUNT, 1
  9911 00006E9C 0F85ED0D0000                    jne L_error_arg_count_1
  9912 00006EA2 488B4520                        mov rax, PARAM(0)
  9913                                          assert_vector(rax)
    53 00006EA6 803822              <1>  cmp byte [%1], %2
    54 00006EA9 0F85B40E0000        <1>  jne L_error_incorrect_type
  9914 00006EAF 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
  9915 00006EB3 E8260D0000                      call make_integer
  9916 00006EB8 C9                              leave
  9917 00006EB9 C21800                          ret AND_KILL_FRAME(1)
  9918                                  
  9919                                  L_code_ptr_real_to_integer:
  9920 00006EBC C8000000                        enter 0, 0
  9921 00006EC0 48837D1801                      cmp COUNT, 1
  9922 00006EC5 0F85C40D0000                    jne L_error_arg_count_1
  9923 00006ECB 488B5D20                        mov rbx, PARAM(0)
  9924                                          assert_real(rbx)
    53 00006ECF 803B13              <1>  cmp byte [%1], %2
    54 00006ED2 0F858B0E0000        <1>  jne L_error_incorrect_type
  9925 00006ED8 F20F104301                      movsd xmm0, qword [rbx + 1]
  9926 00006EDD F2480F2CF8                      cvttsd2si rdi, xmm0
  9927 00006EE2 E8F70C0000                      call make_integer
  9928 00006EE7 C9                              leave
  9929 00006EE8 C21800                          ret AND_KILL_FRAME(1)
  9930                                  
  9931                                  L_code_ptr_exit:
  9932 00006EEB C8000000                        enter 0, 0
  9933 00006EEF 48837D1800                      cmp COUNT, 0
  9934 00006EF4 0F85600D0000                    jne L_error_arg_count_0
  9935 00006EFA B800000000                      mov rax, 0
  9936 00006EFF E8(00000000)                    call exit
  9937                                  
  9938                                  L_code_ptr_integer_to_real:
  9939 00006F04 C8000000                        enter 0, 0
  9940 00006F08 48837D1801                      cmp COUNT, 1
  9941 00006F0D 0F857C0D0000                    jne L_error_arg_count_1
  9942 00006F13 488B4520                        mov rax, PARAM(0)
  9943                                          assert_integer(rax)
    53 00006F17 803811              <1>  cmp byte [%1], %2
    54 00006F1A 0F85430E0000        <1>  jne L_error_incorrect_type
  9944 00006F20 FF7001                          push qword [rax + 1]
  9945 00006F23 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
  9946 00006F29 E8980C0000                      call make_real
  9947 00006F2E C9                              leave
  9948 00006F2F C21800                          ret AND_KILL_FRAME(1)
  9949                                  
  9950                                  L_code_ptr_fraction_to_real:
  9951 00006F32 C8000000                        enter 0, 0
  9952 00006F36 48837D1801                      cmp COUNT, 1
  9953 00006F3B 0F854E0D0000                    jne L_error_arg_count_1
  9954 00006F41 488B4520                        mov rax, PARAM(0)
  9955                                          assert_fraction(rax)
    53 00006F45 803812              <1>  cmp byte [%1], %2
    54 00006F48 0F85150E0000        <1>  jne L_error_incorrect_type
  9956 00006F4E FF7001                          push qword [rax + 1]
  9957 00006F51 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
  9958 00006F57 FF7009                          push qword [rax + 1 + 8]
  9959 00006F5A F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
  9960 00006F60 F20F5EC1                        divsd xmm0, xmm1
  9961 00006F64 E85D0C0000                      call make_real
  9962 00006F69 C9                              leave
  9963 00006F6A C21800                          ret AND_KILL_FRAME(1)
  9964                                  
  9965                                  L_code_ptr_char_to_integer:
  9966 00006F6D C8000000                        enter 0, 0
  9967 00006F71 48837D1801                      cmp COUNT, 1
  9968 00006F76 0F85130D0000                    jne L_error_arg_count_1
  9969 00006F7C 488B4520                        mov rax, PARAM(0)
  9970                                          assert_char(rax)
    53 00006F80 803802              <1>  cmp byte [%1], %2
    54 00006F83 0F85DA0D0000        <1>  jne L_error_incorrect_type
  9971 00006F89 8A4001                          mov al, byte [rax + 1]
  9972 00006F8C 4825FF000000                    and rax, 255
  9973 00006F92 4889C7                          mov rdi, rax
  9974 00006F95 E8440C0000                      call make_integer
  9975 00006F9A C9                              leave
  9976 00006F9B C21800                          ret AND_KILL_FRAME(1)
  9977                                  
  9978                                  L_code_ptr_integer_to_fraction:
  9979 00006F9E C8000000                        enter 0, 0
  9980 00006FA2 48837D1801                      cmp COUNT, 1
  9981 00006FA7 0F85E20C0000                    jne L_error_arg_count_1
  9982 00006FAD 4C8B4520                        mov r8, PARAM(0)
  9983                                          assert_integer(r8)
    53 00006FB1 41803811            <1>  cmp byte [%1], %2
    54 00006FB5 0F85A80D0000        <1>  jne L_error_incorrect_type
  9984 00006FBB BF11000000                      mov rdi, (1 + 8 + 8)
  9985 00006FC0 E822F0FFFF                      call malloc
  9986 00006FC5 498B5801                        mov rbx, qword [r8 + 1]
  9987 00006FC9 C60012                          mov byte [rax], T_fraction
  9988 00006FCC 48895801                        mov qword [rax + 1], rbx
  9989 00006FD0 48C7400901000000                mov qword [rax + 1 + 8], 1
  9990 00006FD8 C9                              leave
  9991 00006FD9 C21800                          ret AND_KILL_FRAME(1)
  9992                                  
  9993                                  L_code_ptr_integer_to_char:
  9994 00006FDC C8000000                        enter 0, 0
  9995 00006FE0 48837D1801                      cmp COUNT, 1
  9996 00006FE5 0F85A40C0000                    jne L_error_arg_count_1
  9997 00006FEB 488B4520                        mov rax, PARAM(0)
  9998                                          assert_integer(rax)
    53 00006FEF 803811              <1>  cmp byte [%1], %2
    54 00006FF2 0F856B0D0000        <1>  jne L_error_incorrect_type
  9999 00006FF8 488B5801                        mov rbx, qword [rax + 1]
 10000 00006FFC 4883FB00                        cmp rbx, 0
 10001 00007000 0F8EF20B0000                    jle L_error_integer_range
 10002 00007006 4881FB00010000                  cmp rbx, 256
 10003 0000700D 0F8DE50B0000                    jge L_error_integer_range
 10004 00007013 BF02000000                      mov rdi, (1 + 1)
 10005 00007018 E8CAEFFFFF                      call malloc
 10006 0000701D C60002                          mov byte [rax], T_char
 10007 00007020 885801                          mov byte [rax + 1], bl
 10008 00007023 C9                              leave
 10009 00007024 C21800                          ret AND_KILL_FRAME(1)
 10010                                  
 10011                                  L_code_ptr_trng:
 10012 00007027 C8000000                        enter 0, 0
 10013 0000702B 48837D1800                      cmp COUNT, 0
 10014 00007030 0F85240C0000                    jne L_error_arg_count_0
 10015 00007036 480FC7F7                        rdrand rdi
 10016 0000703A 48D1EF                          shr rdi, 1
 10017 0000703D E89C0B0000                      call make_integer
 10018 00007042 C9                              leave
 10019 00007043 C21000                          ret AND_KILL_FRAME(0)
 10020                                  
 10021                                  L_code_ptr_is_zero:
 10022 00007046 C8000000                        enter 0, 0
 10023 0000704A 48837D1801                      cmp COUNT, 1
 10024 0000704F 0F853A0C0000                    jne L_error_arg_count_1
 10025 00007055 488B4520                        mov rax, PARAM(0)
 10026 00007059 803811                          cmp byte [rax], T_integer
 10027 0000705C 740F                            je .L_integer
 10028 0000705E 803812                          cmp byte [rax], T_fraction
 10029 00007061 7413                            je .L_fraction
 10030 00007063 803813                          cmp byte [rax], T_real
 10031 00007066 7417                            je .L_real
 10032 00007068 E9F60C0000                      jmp L_error_incorrect_type
 10033                                  .L_integer:
 10034 0000706D 4883780100                      cmp qword [rax + 1], 0
 10035 00007072 7429                            je .L_zero
 10036 00007074 EB1B                            jmp .L_not_zero
 10037                                  .L_fraction:
 10038 00007076 4883780100                      cmp qword [rax + 1], 0
 10039 0000707B 7420                            je .L_zero
 10040 0000707D EB12                            jmp .L_not_zero
 10041                                  .L_real:
 10042 0000707F 660FEFC0                        pxor xmm0, xmm0
 10043 00007083 FF7001                          push qword [rax + 1]
 10044 00007086 F20F100C24                      movsd xmm1, qword [rsp]
 10045 0000708B 660F2EC1                        ucomisd xmm0, xmm1
 10046 0000708F 740C                            je .L_zero
 10047                                  .L_not_zero:
 10048 00007091 48B8-                           mov rax, sob_boolean_false
 10048 00007093 [0200000000000000] 
 10049 0000709B EB0A                            jmp .L_end
 10050                                  .L_zero:
 10051 0000709D 48B8-                           mov rax, sob_boolean_true
 10051 0000709F [0300000000000000] 
 10052                                  .L_end:
 10053 000070A7 C9                              leave
 10054 000070A8 C21800                          ret AND_KILL_FRAME(1)
 10055                                  
 10056                                  L_code_ptr_is_integer:
 10057 000070AB C8000000                        enter 0, 0
 10058 000070AF 48837D1801                      cmp COUNT, 1
 10059 000070B4 0F85D50B0000                    jne L_error_arg_count_1
 10060 000070BA 488B4520                        mov rax, PARAM(0)
 10061 000070BE 803811                          cmp byte [rax], T_integer
 10062 000070C1 750C                            jne .L_false
 10063 000070C3 48B8-                           mov rax, sob_boolean_true
 10063 000070C5 [0300000000000000] 
 10064 000070CD EB0A                            jmp .L_exit
 10065                                  .L_false:
 10066 000070CF 48B8-                           mov rax, sob_boolean_false
 10066 000070D1 [0200000000000000] 
 10067                                  .L_exit:
 10068 000070D9 C9                              leave
 10069 000070DA C21800                          ret AND_KILL_FRAME(1)
 10070                                  
 10071                                  L_code_ptr_raw_bin_add_rr:
 10072 000070DD C8000000                        enter 0, 0
 10073 000070E1 48837D1802                      cmp COUNT, 2
 10074 000070E6 0F85D80B0000                    jne L_error_arg_count_2
 10075 000070EC 488B5D20                        mov rbx, PARAM(0)
 10076                                          assert_real(rbx)
    53 000070F0 803B13              <1>  cmp byte [%1], %2
    54 000070F3 0F856A0C0000        <1>  jne L_error_incorrect_type
 10077 000070F9 488B4D28                        mov rcx, PARAM(1)
 10078                                          assert_real(rcx)
    53 000070FD 803913              <1>  cmp byte [%1], %2
    54 00007100 0F855D0C0000        <1>  jne L_error_incorrect_type
 10079 00007106 F20F104301                      movsd xmm0, qword [rbx + 1]
 10080 0000710B F20F104901                      movsd xmm1, qword [rcx + 1]
 10081 00007110 F20F58C1                        addsd xmm0, xmm1
 10082 00007114 E8AD0A0000                      call make_real
 10083 00007119 C9                              leave
 10084 0000711A C22000                          ret AND_KILL_FRAME(2)
 10085                                  
 10086                                  L_code_ptr_raw_bin_sub_rr:
 10087 0000711D C8000000                        enter 0, 0
 10088 00007121 48837D1802                      cmp COUNT, 2
 10089 00007126 0F85980B0000                    jne L_error_arg_count_2
 10090 0000712C 488B5D20                        mov rbx, PARAM(0)
 10091                                          assert_real(rbx)
    53 00007130 803B13              <1>  cmp byte [%1], %2
    54 00007133 0F852A0C0000        <1>  jne L_error_incorrect_type
 10092 00007139 488B4D28                        mov rcx, PARAM(1)
 10093                                          assert_real(rcx)
    53 0000713D 803913              <1>  cmp byte [%1], %2
    54 00007140 0F851D0C0000        <1>  jne L_error_incorrect_type
 10094 00007146 F20F104301                      movsd xmm0, qword [rbx + 1]
 10095 0000714B F20F104901                      movsd xmm1, qword [rcx + 1]
 10096 00007150 F20F5CC1                        subsd xmm0, xmm1
 10097 00007154 E86D0A0000                      call make_real
 10098 00007159 C9                              leave
 10099 0000715A C22000                          ret AND_KILL_FRAME(2)
 10100                                  
 10101                                  L_code_ptr_raw_bin_mul_rr:
 10102 0000715D C8000000                        enter 0, 0
 10103 00007161 48837D1802                      cmp COUNT, 2
 10104 00007166 0F85580B0000                    jne L_error_arg_count_2
 10105 0000716C 488B5D20                        mov rbx, PARAM(0)
 10106                                          assert_real(rbx)
    53 00007170 803B13              <1>  cmp byte [%1], %2
    54 00007173 0F85EA0B0000        <1>  jne L_error_incorrect_type
 10107 00007179 488B4D28                        mov rcx, PARAM(1)
 10108                                          assert_real(rcx)
    53 0000717D 803913              <1>  cmp byte [%1], %2
    54 00007180 0F85DD0B0000        <1>  jne L_error_incorrect_type
 10109 00007186 F20F104301                      movsd xmm0, qword [rbx + 1]
 10110 0000718B F20F104901                      movsd xmm1, qword [rcx + 1]
 10111 00007190 F20F59C1                        mulsd xmm0, xmm1
 10112 00007194 E82D0A0000                      call make_real
 10113 00007199 C9                              leave
 10114 0000719A C22000                          ret AND_KILL_FRAME(2)
 10115                                  
 10116                                  L_code_ptr_raw_bin_div_rr:
 10117 0000719D C8000000                        enter 0, 0
 10118 000071A1 48837D1802                      cmp COUNT, 2
 10119 000071A6 0F85180B0000                    jne L_error_arg_count_2
 10120 000071AC 488B5D20                        mov rbx, PARAM(0)
 10121                                          assert_real(rbx)
    53 000071B0 803B13              <1>  cmp byte [%1], %2
    54 000071B3 0F85AA0B0000        <1>  jne L_error_incorrect_type
 10122 000071B9 488B4D28                        mov rcx, PARAM(1)
 10123                                          assert_real(rcx)
    53 000071BD 803913              <1>  cmp byte [%1], %2
    54 000071C0 0F859D0B0000        <1>  jne L_error_incorrect_type
 10124 000071C6 F20F104301                      movsd xmm0, qword [rbx + 1]
 10125 000071CB F20F104901                      movsd xmm1, qword [rcx + 1]
 10126 000071D0 660FEFD2                        pxor xmm2, xmm2
 10127 000071D4 660F2ECA                        ucomisd xmm1, xmm2
 10128 000071D8 0F84B60B0000                    je L_error_division_by_zero
 10129 000071DE F20F5EC1                        divsd xmm0, xmm1
 10130 000071E2 E8DF090000                      call make_real
 10131 000071E7 C9                              leave
 10132 000071E8 C22000                          ret AND_KILL_FRAME(2)
 10133                                  
 10134                                  L_code_ptr_raw_bin_add_zz:
 10135 000071EB C8000000                	enter 0, 0
 10136 000071EF 48837D1802              	cmp COUNT, 2
 10137 000071F4 0F85CA0A0000            	jne L_error_arg_count_2
 10138 000071FA 4C8B4520                	mov r8, PARAM(0)
 10139                                  	assert_integer(r8)
    53 000071FE 41803811            <1>  cmp byte [%1], %2
    54 00007202 0F855B0B0000        <1>  jne L_error_incorrect_type
 10140 00007208 4C8B4D28                	mov r9, PARAM(1)
 10141                                  	assert_integer(r9)
    53 0000720C 41803911            <1>  cmp byte [%1], %2
    54 00007210 0F854D0B0000        <1>  jne L_error_incorrect_type
 10142 00007216 498B7801                	mov rdi, qword [r8 + 1]
 10143 0000721A 49037901                	add rdi, qword [r9 + 1]
 10144 0000721E E8BB090000              	call make_integer
 10145 00007223 C9                      	leave
 10146 00007224 C22000                  	ret AND_KILL_FRAME(2)
 10147                                  
 10148                                  L_code_ptr_raw_bin_add_qq:
 10149 00007227 C8000000                        enter 0, 0
 10150 0000722B 48837D1802                      cmp COUNT, 2
 10151 00007230 0F858E0A0000                    jne L_error_arg_count_2
 10152 00007236 4C8B4520                        mov r8, PARAM(0)
 10153                                          assert_fraction(r8)
    53 0000723A 41803812            <1>  cmp byte [%1], %2
    54 0000723E 0F851F0B0000        <1>  jne L_error_incorrect_type
 10154 00007244 4C8B4D28                        mov r9, PARAM(1)
 10155                                          assert_fraction(r9)
    53 00007248 41803912            <1>  cmp byte [%1], %2
    54 0000724C 0F85110B0000        <1>  jne L_error_incorrect_type
 10156 00007252 498B4001                        mov rax, qword [r8 + 1] ; num1
 10157 00007256 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 10158 0000725A 4899                            cqo
 10159 0000725C 48F7EB                          imul rbx
 10160 0000725F 4889C6                          mov rsi, rax
 10161 00007262 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10162 00007266 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 10163 0000726A 4899                            cqo
 10164 0000726C 48F7EB                          imul rbx
 10165 0000726F 4801C6                          add rsi, rax
 10166 00007272 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10167 00007276 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 10168 0000727A 4899                            cqo
 10169 0000727C 48F7EB                          imul rbx
 10170 0000727F 4889C7                          mov rdi, rax
 10171 00007282 E8DE010000                      call normalize_fraction
 10172 00007287 C9                              leave
 10173 00007288 C22000                          ret AND_KILL_FRAME(2)
 10174                                  
 10175                                  L_code_ptr_raw_bin_sub_zz:
 10176 0000728B C8000000                	enter 0, 0
 10177 0000728F 48837D1802              	cmp COUNT, 2
 10178 00007294 0F852A0A0000            	jne L_error_arg_count_2
 10179 0000729A 4C8B4520                	mov r8, PARAM(0)
 10180                                  	assert_integer(r8)
    53 0000729E 41803811            <1>  cmp byte [%1], %2
    54 000072A2 0F85BB0A0000        <1>  jne L_error_incorrect_type
 10181 000072A8 4C8B4D28                	mov r9, PARAM(1)
 10182                                  	assert_integer(r9)
    53 000072AC 41803911            <1>  cmp byte [%1], %2
    54 000072B0 0F85AD0A0000        <1>  jne L_error_incorrect_type
 10183 000072B6 498B7801                	mov rdi, qword [r8 + 1]
 10184 000072BA 492B7901                	sub rdi, qword [r9 + 1]
 10185 000072BE E81B090000              	call make_integer
 10186 000072C3 C9                      	leave
 10187 000072C4 C22000                  	ret AND_KILL_FRAME(2)
 10188                                  
 10189                                  L_code_ptr_raw_bin_sub_qq:
 10190 000072C7 C8000000                        enter 0, 0
 10191 000072CB 48837D1802                      cmp COUNT, 2
 10192 000072D0 0F85EE090000                    jne L_error_arg_count_2
 10193 000072D6 4C8B4520                        mov r8, PARAM(0)
 10194                                          assert_fraction(r8)
    53 000072DA 41803812            <1>  cmp byte [%1], %2
    54 000072DE 0F857F0A0000        <1>  jne L_error_incorrect_type
 10195 000072E4 4C8B4D28                        mov r9, PARAM(1)
 10196                                          assert_fraction(r9)
    53 000072E8 41803912            <1>  cmp byte [%1], %2
    54 000072EC 0F85710A0000        <1>  jne L_error_incorrect_type
 10197 000072F2 498B4001                        mov rax, qword [r8 + 1] ; num1
 10198 000072F6 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 10199 000072FA 4899                            cqo
 10200 000072FC 48F7EB                          imul rbx
 10201 000072FF 4889C6                          mov rsi, rax
 10202 00007302 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10203 00007306 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 10204 0000730A 4899                            cqo
 10205 0000730C 48F7EB                          imul rbx
 10206 0000730F 4829C6                          sub rsi, rax
 10207 00007312 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10208 00007316 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 10209 0000731A 4899                            cqo
 10210 0000731C 48F7EB                          imul rbx
 10211 0000731F 4889C7                          mov rdi, rax
 10212 00007322 E83E010000                      call normalize_fraction
 10213 00007327 C9                              leave
 10214 00007328 C22000                          ret AND_KILL_FRAME(2)
 10215                                  
 10216                                  L_code_ptr_raw_bin_mul_zz:
 10217 0000732B C8000000                	enter 0, 0
 10218 0000732F 48837D1802              	cmp COUNT, 2
 10219 00007334 0F858A090000            	jne L_error_arg_count_2
 10220 0000733A 4C8B4520                	mov r8, PARAM(0)
 10221                                  	assert_integer(r8)
    53 0000733E 41803811            <1>  cmp byte [%1], %2
    54 00007342 0F851B0A0000        <1>  jne L_error_incorrect_type
 10222 00007348 4C8B4D28                	mov r9, PARAM(1)
 10223                                  	assert_integer(r9)
    53 0000734C 41803911            <1>  cmp byte [%1], %2
    54 00007350 0F850D0A0000        <1>  jne L_error_incorrect_type
 10224 00007356 4899                    	cqo
 10225 00007358 498B4001                	mov rax, qword [r8 + 1]
 10226 0000735C 49F76101                	mul qword [r9 + 1]
 10227 00007360 4889C7                  	mov rdi, rax
 10228 00007363 E876080000              	call make_integer
 10229 00007368 C9                      	leave
 10230 00007369 C22000                  	ret AND_KILL_FRAME(2)
 10231                                  
 10232                                  L_code_ptr_raw_bin_mul_qq:
 10233 0000736C C8000000                        enter 0, 0
 10234 00007370 48837D1802                      cmp COUNT, 2
 10235 00007375 0F8549090000                    jne L_error_arg_count_2
 10236 0000737B 4C8B4520                        mov r8, PARAM(0)
 10237                                          assert_fraction(r8)
    53 0000737F 41803812            <1>  cmp byte [%1], %2
    54 00007383 0F85DA090000        <1>  jne L_error_incorrect_type
 10238 00007389 4C8B4D28                        mov r9, PARAM(1)
 10239                                          assert_fraction(r9)
    53 0000738D 41803912            <1>  cmp byte [%1], %2
    54 00007391 0F85CC090000        <1>  jne L_error_incorrect_type
 10240 00007397 498B4001                        mov rax, qword [r8 + 1] ; num1
 10241 0000739B 498B5901                        mov rbx, qword [r9 + 1] ; num2
 10242 0000739F 4899                            cqo
 10243 000073A1 48F7EB                          imul rbx
 10244 000073A4 4889C6                          mov rsi, rax
 10245 000073A7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10246 000073AB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 10247 000073AF 4899                            cqo
 10248 000073B1 48F7EB                          imul rbx
 10249 000073B4 4889C7                          mov rdi, rax
 10250 000073B7 E8A9000000                      call normalize_fraction
 10251 000073BC C9                              leave
 10252 000073BD C22000                          ret AND_KILL_FRAME(2)
 10253                                          
 10254                                  L_code_ptr_raw_bin_div_zz:
 10255 000073C0 C8000000                	enter 0, 0
 10256 000073C4 48837D1802              	cmp COUNT, 2
 10257 000073C9 0F85F5080000            	jne L_error_arg_count_2
 10258 000073CF 4C8B4520                	mov r8, PARAM(0)
 10259                                  	assert_integer(r8)
    53 000073D3 41803811            <1>  cmp byte [%1], %2
    54 000073D7 0F8586090000        <1>  jne L_error_incorrect_type
 10260 000073DD 4C8B4D28                	mov r9, PARAM(1)
 10261                                  	assert_integer(r9)
    53 000073E1 41803911            <1>  cmp byte [%1], %2
    54 000073E5 0F8578090000        <1>  jne L_error_incorrect_type
 10262 000073EB 498B7901                	mov rdi, qword [r9 + 1]
 10263 000073EF 4883FF00                	cmp rdi, 0
 10264 000073F3 0F849B090000            	je L_error_division_by_zero
 10265 000073F9 498B7001                	mov rsi, qword [r8 + 1]
 10266 000073FD E863000000              	call normalize_fraction
 10267 00007402 C9                      	leave
 10268 00007403 C22000                  	ret AND_KILL_FRAME(2)
 10269                                  
 10270                                  L_code_ptr_raw_bin_div_qq:
 10271 00007406 C8000000                        enter 0, 0
 10272 0000740A 48837D1802                      cmp COUNT, 2
 10273 0000740F 0F85AF080000                    jne L_error_arg_count_2
 10274 00007415 4C8B4520                        mov r8, PARAM(0)
 10275                                          assert_fraction(r8)
    53 00007419 41803812            <1>  cmp byte [%1], %2
    54 0000741D 0F8540090000        <1>  jne L_error_incorrect_type
 10276 00007423 4C8B4D28                        mov r9, PARAM(1)
 10277                                          assert_fraction(r9)
    53 00007427 41803912            <1>  cmp byte [%1], %2
    54 0000742B 0F8532090000        <1>  jne L_error_incorrect_type
 10278 00007431 4983790100                      cmp qword [r9 + 1], 0
 10279 00007436 0F8458090000                    je L_error_division_by_zero
 10280 0000743C 498B4001                        mov rax, qword [r8 + 1] ; num1
 10281 00007440 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 10282 00007444 4899                            cqo
 10283 00007446 48F7EB                          imul rbx
 10284 00007449 4889C6                          mov rsi, rax
 10285 0000744C 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10286 00007450 498B5901                        mov rbx, qword [r9 + 1] ; num2
 10287 00007454 4899                            cqo
 10288 00007456 48F7EB                          imul rbx
 10289 00007459 4889C7                          mov rdi, rax
 10290 0000745C E804000000                      call normalize_fraction
 10291 00007461 C9                              leave
 10292 00007462 C22000                          ret AND_KILL_FRAME(2)
 10293                                          
 10294                                  normalize_fraction:
 10295 00007465 56                              push rsi
 10296 00007466 57                              push rdi
 10297 00007467 E859000000                      call gcd
 10298 0000746C 4889C3                          mov rbx, rax
 10299 0000746F 58                              pop rax
 10300 00007470 4899                            cqo
 10301 00007472 48F7FB                          idiv rbx
 10302 00007475 4989C0                          mov r8, rax
 10303 00007478 58                              pop rax
 10304 00007479 4899                            cqo
 10305 0000747B 48F7FB                          idiv rbx
 10306 0000747E 4989C1                          mov r9, rax
 10307 00007481 4983F900                        cmp r9, 0
 10308 00007485 741C                            je .L_zero
 10309 00007487 4983F801                        cmp r8, 1
 10310 0000748B 7421                            je .L_int
 10311 0000748D BF11000000                      mov rdi, (1 + 8 + 8)
 10312 00007492 E850EBFFFF                      call malloc
 10313 00007497 C60012                          mov byte [rax], T_fraction
 10314 0000749A 4C894801                        mov qword [rax + 1], r9
 10315 0000749E 4C894009                        mov qword [rax + 1 + 8], r8
 10316 000074A2 C3                              ret
 10317                                  .L_zero:
 10318 000074A3 BF00000000                      mov rdi, 0
 10319 000074A8 E831070000                      call make_integer
 10320 000074AD C3                              ret
 10321                                  .L_int:
 10322 000074AE 4C89CF                          mov rdi, r9
 10323 000074B1 E828070000                      call make_integer
 10324 000074B6 C3                              ret
 10325                                  
 10326                                  iabs:
 10327 000074B7 4889F8                          mov rax, rdi
 10328 000074BA 4883F800                        cmp rax, 0
 10329 000074BE 7C01                            jl .Lneg
 10330 000074C0 C3                              ret
 10331                                  .Lneg:
 10332 000074C1 48F7D8                          neg rax
 10333 000074C4 C3                              ret
 10334                                  
 10335                                  gcd:
 10336 000074C5 E8EDFFFFFF                      call iabs
 10337 000074CA 4889C3                          mov rbx, rax
 10338 000074CD 4889F7                          mov rdi, rsi
 10339 000074D0 E8E2FFFFFF                      call iabs
 10340 000074D5 4883F800                        cmp rax, 0
 10341 000074D9 7502                            jne .L0
 10342 000074DB 4893                            xchg rax, rbx
 10343                                  .L0:
 10344 000074DD 4883FB00                        cmp rbx, 0
 10345 000074E1 740C                            je .L1
 10346 000074E3 4899                            cqo
 10347 000074E5 48F7F3                          div rbx
 10348 000074E8 4889D0                          mov rax, rdx
 10349 000074EB 4893                            xchg rax, rbx
 10350 000074ED EBEE                            jmp .L0
 10351                                  .L1:
 10352 000074EF C3                              ret
 10353                                  
 10354                                  L_code_ptr_error:
 10355 000074F0 C8000000                        enter 0, 0
 10356 000074F4 48837D1802                      cmp COUNT, 2
 10357 000074F9 0F85C5070000                    jne L_error_arg_count_2
 10358 000074FF 488B7520                        mov rsi, PARAM(0)
 10359                                          assert_interned_symbol(rsi)
    53 00007503 803E41              <1>  cmp byte [%1], %2
    54 00007506 0F8557080000        <1>  jne L_error_incorrect_type
 10360 0000750C 488B7528                        mov rsi, PARAM(1)
 10361                                          assert_string(rsi)
    53 00007510 803E03              <1>  cmp byte [%1], %2
    54 00007513 0F854A080000        <1>  jne L_error_incorrect_type
 10362 00007519 48BF-                           mov rdi, fmt_scheme_error_part_1
 10362 0000751B [FB09000000000000] 
 10363 00007523 B800000000                      mov rax, 0
 10364                                          ENTER
    44 00007528 C8000000            <1>  enter 0, 0
    45 0000752C 4883E4F0            <1>  and rsp, ~15
 10365 00007530 E8(00000000)                    call printf
 10366                                          LEAVE
    49 00007535 C9                  <1>  leave
 10367 00007536 488B7D20                        mov rdi, PARAM(0)
 10368 0000753A E829EDFFFF                      call print_sexpr
 10369 0000753F 48BF-                           mov rdi, fmt_scheme_error_part_2
 10369 00007541 [0F0A000000000000] 
 10370 00007549 B800000000                      mov rax, 0
 10371                                          ENTER
    44 0000754E C8000000            <1>  enter 0, 0
    45 00007552 4883E4F0            <1>  and rsp, ~15
 10372 00007556 E8(00000000)                    call printf
 10373                                          LEAVE
    49 0000755B C9                  <1>  leave
 10374 0000755C 488B4528                        mov rax, PARAM(1)       ; sob_string
 10375 00007560 BE01000000                      mov rsi, 1              ; size = 1 byte
 10376 00007565 488B5001                        mov rdx, qword [rax + 1] ; length
 10377 00007569 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 10378 0000756D 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 10379                                  	ENTER
    44 00007575 C8000000            <1>  enter 0, 0
    45 00007579 4883E4F0            <1>  and rsp, ~15
 10380 0000757D E8(00000000)                    call fwrite
 10381                                  	LEAVE
    49 00007582 C9                  <1>  leave
 10382 00007583 48BF-                           mov rdi, fmt_scheme_error_part_3
 10382 00007585 [510A000000000000] 
 10383 0000758D B800000000                      mov rax, 0
 10384                                          ENTER
    44 00007592 C8000000            <1>  enter 0, 0
    45 00007596 4883E4F0            <1>  and rsp, ~15
 10385 0000759A E8(00000000)                    call printf
 10386                                          LEAVE
    49 0000759F C9                  <1>  leave
 10387 000075A0 48C7C0F7FFFFFF                  mov rax, -9
 10388 000075A7 E8(00000000)                    call exit
 10389                                  
 10390                                  L_code_ptr_raw_less_than_rr:
 10391 000075AC C8000000                        enter 0, 0
 10392 000075B0 48837D1802                      cmp COUNT, 2
 10393 000075B5 0F8509070000                    jne L_error_arg_count_2
 10394 000075BB 488B7520                        mov rsi, PARAM(0)
 10395                                          assert_real(rsi)
    53 000075BF 803E13              <1>  cmp byte [%1], %2
    54 000075C2 0F859B070000        <1>  jne L_error_incorrect_type
 10396 000075C8 488B7D28                        mov rdi, PARAM(1)
 10397                                          assert_real(rdi)
    53 000075CC 803F13              <1>  cmp byte [%1], %2
    54 000075CF 0F858E070000        <1>  jne L_error_incorrect_type
 10398 000075D5 F20F104601                      movsd xmm0, qword [rsi + 1]
 10399 000075DA F20F104F01                      movsd xmm1, qword [rdi + 1]
 10400 000075DF 660F2FC1                        comisd xmm0, xmm1
 10401 000075E3 730C                            jae .L_false
 10402 000075E5 48B8-                           mov rax, sob_boolean_true
 10402 000075E7 [0300000000000000] 
 10403 000075EF EB0A                            jmp .L_exit
 10404                                  .L_false:
 10405 000075F1 48B8-                           mov rax, sob_boolean_false
 10405 000075F3 [0200000000000000] 
 10406                                  .L_exit:
 10407 000075FB C9                              leave
 10408 000075FC C22000                          ret AND_KILL_FRAME(2)
 10409                                          
 10410                                  L_code_ptr_raw_less_than_zz:
 10411 000075FF C8000000                	enter 0, 0
 10412 00007603 48837D1802              	cmp COUNT, 2
 10413 00007608 0F85B6060000            	jne L_error_arg_count_2
 10414 0000760E 4C8B4520                	mov r8, PARAM(0)
 10415                                  	assert_integer(r8)
    53 00007612 41803811            <1>  cmp byte [%1], %2
    54 00007616 0F8547070000        <1>  jne L_error_incorrect_type
 10416 0000761C 4C8B4D28                	mov r9, PARAM(1)
 10417                                  	assert_integer(r9)
    53 00007620 41803911            <1>  cmp byte [%1], %2
    54 00007624 0F8539070000        <1>  jne L_error_incorrect_type
 10418 0000762A 498B7801                	mov rdi, qword [r8 + 1]
 10419 0000762E 493B7901                	cmp rdi, qword [r9 + 1]
 10420 00007632 7D0C                    	jge .L_false
 10421 00007634 48B8-                   	mov rax, sob_boolean_true
 10421 00007636 [0300000000000000] 
 10422 0000763E EB0A                    	jmp .L_exit
 10423                                  .L_false:
 10424 00007640 48B8-                   	mov rax, sob_boolean_false
 10424 00007642 [0200000000000000] 
 10425                                  .L_exit:
 10426 0000764A C9                      	leave
 10427 0000764B C22000                  	ret AND_KILL_FRAME(2)
 10428                                  
 10429                                  L_code_ptr_raw_less_than_qq:
 10430 0000764E C8000000                        enter 0, 0
 10431 00007652 48837D1802                      cmp COUNT, 2
 10432 00007657 0F8567060000                    jne L_error_arg_count_2
 10433 0000765D 488B7520                        mov rsi, PARAM(0)
 10434                                          assert_fraction(rsi)
    53 00007661 803E12              <1>  cmp byte [%1], %2
    54 00007664 0F85F9060000        <1>  jne L_error_incorrect_type
 10435 0000766A 488B7D28                        mov rdi, PARAM(1)
 10436                                          assert_fraction(rdi)
    53 0000766E 803F12              <1>  cmp byte [%1], %2
    54 00007671 0F85EC060000        <1>  jne L_error_incorrect_type
 10437 00007677 488B4601                        mov rax, qword [rsi + 1] ; num1
 10438 0000767B 4899                            cqo
 10439 0000767D 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 10440 00007681 4889C1                          mov rcx, rax
 10441 00007684 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 10442 00007688 4899                            cqo
 10443 0000768A 48F76F01                        imul qword [rdi + 1]          ; num2
 10444 0000768E 4829C1                          sub rcx, rax
 10445 00007691 7D0C                            jge .L_false
 10446 00007693 48B8-                           mov rax, sob_boolean_true
 10446 00007695 [0300000000000000] 
 10447 0000769D EB0A                            jmp .L_exit
 10448                                  .L_false:
 10449 0000769F 48B8-                           mov rax, sob_boolean_false
 10449 000076A1 [0200000000000000] 
 10450                                  .L_exit:
 10451 000076A9 C9                              leave
 10452 000076AA C22000                          ret AND_KILL_FRAME(2)
 10453                                  
 10454                                  L_code_ptr_raw_equal_rr:
 10455 000076AD C8000000                        enter 0, 0
 10456 000076B1 48837D1802                      cmp COUNT, 2
 10457 000076B6 0F8508060000                    jne L_error_arg_count_2
 10458 000076BC 488B7520                        mov rsi, PARAM(0)
 10459                                          assert_real(rsi)
    53 000076C0 803E13              <1>  cmp byte [%1], %2
    54 000076C3 0F859A060000        <1>  jne L_error_incorrect_type
 10460 000076C9 488B7D28                        mov rdi, PARAM(1)
 10461                                          assert_real(rdi)
    53 000076CD 803F13              <1>  cmp byte [%1], %2
    54 000076D0 0F858D060000        <1>  jne L_error_incorrect_type
 10462 000076D6 F20F104601                      movsd xmm0, qword [rsi + 1]
 10463 000076DB F20F104F01                      movsd xmm1, qword [rdi + 1]
 10464 000076E0 660F2FC1                        comisd xmm0, xmm1
 10465 000076E4 750C                            jne .L_false
 10466 000076E6 48B8-                           mov rax, sob_boolean_true
 10466 000076E8 [0300000000000000] 
 10467 000076F0 EB0A                            jmp .L_exit
 10468                                  .L_false:
 10469 000076F2 48B8-                           mov rax, sob_boolean_false
 10469 000076F4 [0200000000000000] 
 10470                                  .L_exit:
 10471 000076FC C9                              leave
 10472 000076FD C22000                          ret AND_KILL_FRAME(2)
 10473                                          
 10474                                  L_code_ptr_raw_equal_zz:
 10475 00007700 C8000000                	enter 0, 0
 10476 00007704 48837D1802              	cmp COUNT, 2
 10477 00007709 0F85B5050000            	jne L_error_arg_count_2
 10478 0000770F 4C8B4520                	mov r8, PARAM(0)
 10479                                  	assert_integer(r8)
    53 00007713 41803811            <1>  cmp byte [%1], %2
    54 00007717 0F8546060000        <1>  jne L_error_incorrect_type
 10480 0000771D 4C8B4D28                	mov r9, PARAM(1)
 10481                                  	assert_integer(r9)
    53 00007721 41803911            <1>  cmp byte [%1], %2
    54 00007725 0F8538060000        <1>  jne L_error_incorrect_type
 10482 0000772B 498B7801                	mov rdi, qword [r8 + 1]
 10483 0000772F 493B7901                	cmp rdi, qword [r9 + 1]
 10484 00007733 750C                    	jne .L_false
 10485 00007735 48B8-                   	mov rax, sob_boolean_true
 10485 00007737 [0300000000000000] 
 10486 0000773F EB0A                    	jmp .L_exit
 10487                                  .L_false:
 10488 00007741 48B8-                   	mov rax, sob_boolean_false
 10488 00007743 [0200000000000000] 
 10489                                  .L_exit:
 10490 0000774B C9                      	leave
 10491 0000774C C22000                  	ret AND_KILL_FRAME(2)
 10492                                  
 10493                                  L_code_ptr_raw_equal_qq:
 10494 0000774F C8000000                        enter 0, 0
 10495 00007753 48837D1802                      cmp COUNT, 2
 10496 00007758 0F8566050000                    jne L_error_arg_count_2
 10497 0000775E 488B7520                        mov rsi, PARAM(0)
 10498                                          assert_fraction(rsi)
    53 00007762 803E12              <1>  cmp byte [%1], %2
    54 00007765 0F85F8050000        <1>  jne L_error_incorrect_type
 10499 0000776B 488B7D28                        mov rdi, PARAM(1)
 10500                                          assert_fraction(rdi)
    53 0000776F 803F12              <1>  cmp byte [%1], %2
    54 00007772 0F85EB050000        <1>  jne L_error_incorrect_type
 10501 00007778 488B4601                        mov rax, qword [rsi + 1] ; num1
 10502 0000777C 4899                            cqo
 10503 0000777E 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 10504 00007782 4889C1                          mov rcx, rax
 10505 00007785 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 10506 00007789 4899                            cqo
 10507 0000778B 48F76F01                        imul qword [rdi + 1]          ; num2
 10508 0000778F 4829C1                          sub rcx, rax
 10509 00007792 750C                            jne .L_false
 10510 00007794 48B8-                           mov rax, sob_boolean_true
 10510 00007796 [0300000000000000] 
 10511 0000779E EB0A                            jmp .L_exit
 10512                                  .L_false:
 10513 000077A0 48B8-                           mov rax, sob_boolean_false
 10513 000077A2 [0200000000000000] 
 10514                                  .L_exit:
 10515 000077AA C9                              leave
 10516 000077AB C22000                          ret AND_KILL_FRAME(2)
 10517                                  
 10518                                  L_code_ptr_quotient:
 10519 000077AE C8000000                        enter 0, 0
 10520 000077B2 48837D1802                      cmp COUNT, 2
 10521 000077B7 0F8507050000                    jne L_error_arg_count_2
 10522 000077BD 488B7520                        mov rsi, PARAM(0)
 10523                                          assert_integer(rsi)
    53 000077C1 803E11              <1>  cmp byte [%1], %2
    54 000077C4 0F8599050000        <1>  jne L_error_incorrect_type
 10524 000077CA 488B7D28                        mov rdi, PARAM(1)
 10525                                          assert_integer(rdi)
    53 000077CE 803F11              <1>  cmp byte [%1], %2
    54 000077D1 0F858C050000        <1>  jne L_error_incorrect_type
 10526 000077D7 488B4601                        mov rax, qword [rsi + 1]
 10527 000077DB 488B5F01                        mov rbx, qword [rdi + 1]
 10528 000077DF 4883FB00                        cmp rbx, 0
 10529 000077E3 0F84AB050000                    je L_error_division_by_zero
 10530 000077E9 4899                            cqo
 10531 000077EB 48F7FB                          idiv rbx
 10532 000077EE 4889C7                          mov rdi, rax
 10533 000077F1 E8E8030000                      call make_integer
 10534 000077F6 C9                              leave
 10535 000077F7 C22000                          ret AND_KILL_FRAME(2)
 10536                                          
 10537                                  L_code_ptr_remainder:
 10538 000077FA C8000000                        enter 0, 0
 10539 000077FE 48837D1802                      cmp COUNT, 2
 10540 00007803 0F85BB040000                    jne L_error_arg_count_2
 10541 00007809 488B7520                        mov rsi, PARAM(0)
 10542                                          assert_integer(rsi)
    53 0000780D 803E11              <1>  cmp byte [%1], %2
    54 00007810 0F854D050000        <1>  jne L_error_incorrect_type
 10543 00007816 488B7D28                        mov rdi, PARAM(1)
 10544                                          assert_integer(rdi)
    53 0000781A 803F11              <1>  cmp byte [%1], %2
    54 0000781D 0F8540050000        <1>  jne L_error_incorrect_type
 10545 00007823 488B4601                        mov rax, qword [rsi + 1]
 10546 00007827 488B5F01                        mov rbx, qword [rdi + 1]
 10547 0000782B 4883FB00                        cmp rbx, 0
 10548 0000782F 0F845F050000                    je L_error_division_by_zero
 10549 00007835 4899                            cqo
 10550 00007837 48F7FB                          idiv rbx
 10551 0000783A 4889D7                          mov rdi, rdx
 10552 0000783D E89C030000                      call make_integer
 10553 00007842 C9                              leave
 10554 00007843 C22000                          ret AND_KILL_FRAME(2)
 10555                                  
 10556                                  L_code_ptr_set_car:
 10557 00007846 C8000000                        enter 0, 0
 10558 0000784A 48837D1802                      cmp COUNT, 2
 10559 0000784F 0F856F040000                    jne L_error_arg_count_2
 10560 00007855 488B4520                        mov rax, PARAM(0)
 10561                                          assert_pair(rax)
    53 00007859 803821              <1>  cmp byte [%1], %2
    54 0000785C 0F8501050000        <1>  jne L_error_incorrect_type
 10562 00007862 488B5D28                        mov rbx, PARAM(1)
 10563 00007866 48895801                        mov SOB_PAIR_CAR(rax), rbx
 10564 0000786A 48B8-                           mov rax, sob_void
 10564 0000786C [0000000000000000] 
 10565 00007874 C9                              leave
 10566 00007875 C22000                          ret AND_KILL_FRAME(2)
 10567                                  
 10568                                  L_code_ptr_set_cdr:
 10569 00007878 C8000000                        enter 0, 0
 10570 0000787C 48837D1802                      cmp COUNT, 2
 10571 00007881 0F853D040000                    jne L_error_arg_count_2
 10572 00007887 488B4520                        mov rax, PARAM(0)
 10573                                          assert_pair(rax)
    53 0000788B 803821              <1>  cmp byte [%1], %2
    54 0000788E 0F85CF040000        <1>  jne L_error_incorrect_type
 10574 00007894 488B5D28                        mov rbx, PARAM(1)
 10575 00007898 48895809                        mov SOB_PAIR_CDR(rax), rbx
 10576 0000789C 48B8-                           mov rax, sob_void
 10576 0000789E [0000000000000000] 
 10577 000078A6 C9                              leave
 10578 000078A7 C22000                          ret AND_KILL_FRAME(2)
 10579                                  
 10580                                  L_code_ptr_string_ref:
 10581 000078AA C8000000                        enter 0, 0
 10582 000078AE 48837D1802                      cmp COUNT, 2
 10583 000078B3 0F850B040000                    jne L_error_arg_count_2
 10584 000078B9 488B7D20                        mov rdi, PARAM(0)
 10585                                          assert_string(rdi)
    53 000078BD 803F03              <1>  cmp byte [%1], %2
    54 000078C0 0F859D040000        <1>  jne L_error_incorrect_type
 10586 000078C6 488B7528                        mov rsi, PARAM(1)
 10587                                          assert_integer(rsi)
    53 000078CA 803E11              <1>  cmp byte [%1], %2
    54 000078CD 0F8590040000        <1>  jne L_error_incorrect_type
 10588 000078D3 488B5701                        mov rdx, qword [rdi + 1]
 10589 000078D7 488B4E01                        mov rcx, qword [rsi + 1]
 10590 000078DB 4839D1                          cmp rcx, rdx
 10591 000078DE 0F8D14030000                    jge L_error_integer_range
 10592 000078E4 4883F900                        cmp rcx, 0
 10593 000078E8 0F8C0A030000                    jl L_error_integer_range
 10594 000078EE 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 10595 000078F2 BF02000000                      mov rdi, 2
 10596 000078F7 E8EBE6FFFF                      call malloc
 10597 000078FC C60002                          mov byte [rax], T_char
 10598 000078FF 885801                          mov byte [rax + 1], bl
 10599 00007902 C9                              leave
 10600 00007903 C22000                          ret AND_KILL_FRAME(2)
 10601                                  
 10602                                  L_code_ptr_vector_ref:
 10603 00007906 C8000000                        enter 0, 0
 10604 0000790A 48837D1802                      cmp COUNT, 2
 10605 0000790F 0F85AF030000                    jne L_error_arg_count_2
 10606 00007915 488B7D20                        mov rdi, PARAM(0)
 10607                                          assert_vector(rdi)
    53 00007919 803F22              <1>  cmp byte [%1], %2
    54 0000791C 0F8541040000        <1>  jne L_error_incorrect_type
 10608 00007922 488B7528                        mov rsi, PARAM(1)
 10609                                          assert_integer(rsi)
    53 00007926 803E11              <1>  cmp byte [%1], %2
    54 00007929 0F8534040000        <1>  jne L_error_incorrect_type
 10610 0000792F 488B5701                        mov rdx, qword [rdi + 1]
 10611 00007933 488B4E01                        mov rcx, qword [rsi + 1]
 10612 00007937 4839D1                          cmp rcx, rdx
 10613 0000793A 0F8DB8020000                    jge L_error_integer_range
 10614 00007940 4883F900                        cmp rcx, 0
 10615 00007944 0F8CAE020000                    jl L_error_integer_range
 10616 0000794A 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 10617 0000794F C9                              leave
 10618 00007950 C22000                          ret AND_KILL_FRAME(2)
 10619                                  
 10620                                  L_code_ptr_vector_set:
 10621 00007953 C8000000                        enter 0, 0
 10622 00007957 48837D1803                      cmp COUNT, 3
 10623 0000795C 0F85CC030000                    jne L_error_arg_count_3
 10624 00007962 488B7D20                        mov rdi, PARAM(0)
 10625                                          assert_vector(rdi)
    53 00007966 803F22              <1>  cmp byte [%1], %2
    54 00007969 0F85F4030000        <1>  jne L_error_incorrect_type
 10626 0000796F 488B7528                        mov rsi, PARAM(1)
 10627                                          assert_integer(rsi)
    53 00007973 803E11              <1>  cmp byte [%1], %2
    54 00007976 0F85E7030000        <1>  jne L_error_incorrect_type
 10628 0000797C 488B5701                        mov rdx, qword [rdi + 1]
 10629 00007980 488B4E01                        mov rcx, qword [rsi + 1]
 10630 00007984 4839D1                          cmp rcx, rdx
 10631 00007987 0F8D6B020000                    jge L_error_integer_range
 10632 0000798D 4883F900                        cmp rcx, 0
 10633 00007991 0F8C61020000                    jl L_error_integer_range
 10634 00007997 488B4530                        mov rax, PARAM(2)
 10635 0000799B 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 10636 000079A0 48B8-                           mov rax, sob_void
 10636 000079A2 [0000000000000000] 
 10637 000079AA C9                              leave
 10638 000079AB C22800                          ret AND_KILL_FRAME(3)
 10639                                  
 10640                                  L_code_ptr_string_set:
 10641 000079AE C8000000                        enter 0, 0
 10642 000079B2 48837D1803                      cmp COUNT, 3
 10643 000079B7 0F8571030000                    jne L_error_arg_count_3
 10644 000079BD 488B7D20                        mov rdi, PARAM(0)
 10645                                          assert_string(rdi)
    53 000079C1 803F03              <1>  cmp byte [%1], %2
    54 000079C4 0F8599030000        <1>  jne L_error_incorrect_type
 10646 000079CA 488B7528                        mov rsi, PARAM(1)
 10647                                          assert_integer(rsi)
    53 000079CE 803E11              <1>  cmp byte [%1], %2
    54 000079D1 0F858C030000        <1>  jne L_error_incorrect_type
 10648 000079D7 488B5701                        mov rdx, qword [rdi + 1]
 10649 000079DB 488B4E01                        mov rcx, qword [rsi + 1]
 10650 000079DF 4839D1                          cmp rcx, rdx
 10651 000079E2 0F8D10020000                    jge L_error_integer_range
 10652 000079E8 4883F900                        cmp rcx, 0
 10653 000079EC 0F8C06020000                    jl L_error_integer_range
 10654 000079F2 488B4530                        mov rax, PARAM(2)
 10655                                          assert_char(rax)
    53 000079F6 803802              <1>  cmp byte [%1], %2
    54 000079F9 0F8564030000        <1>  jne L_error_incorrect_type
 10656 000079FF 8A4001                          mov al, byte [rax + 1]
 10657 00007A02 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 10658 00007A06 48B8-                           mov rax, sob_void
 10658 00007A08 [0000000000000000] 
 10659 00007A10 C9                              leave
 10660 00007A11 C22800                          ret AND_KILL_FRAME(3)
 10661                                  
 10662                                  L_code_ptr_make_vector:
 10663 00007A14 C8000000                        enter 0, 0
 10664 00007A18 48837D1802                      cmp COUNT, 2
 10665 00007A1D 0F85A1020000                    jne L_error_arg_count_2
 10666 00007A23 488B4D20                        mov rcx, PARAM(0)
 10667                                          assert_integer(rcx)
    53 00007A27 803911              <1>  cmp byte [%1], %2
    54 00007A2A 0F8533030000        <1>  jne L_error_incorrect_type
 10668 00007A30 488B4901                        mov rcx, qword [rcx + 1]
 10669 00007A34 4883F900                        cmp rcx, 0
 10670 00007A38 0F8CBA010000                    jl L_error_integer_range
 10671 00007A3E 488B5528                        mov rdx, PARAM(1)
 10672 00007A42 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 10673 00007A4A E898E5FFFF                      call malloc
 10674 00007A4F C60022                          mov byte [rax], T_vector
 10675 00007A52 48894801                        mov qword [rax + 1], rcx
 10676 00007A56 41B800000000                    mov r8, 0
 10677                                  .L0:
 10678 00007A5C 4939C8                          cmp r8, rcx
 10679 00007A5F 740A                            je .L1
 10680 00007A61 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 10681 00007A66 49FFC0                          inc r8
 10682 00007A69 EBF1                            jmp .L0
 10683                                  .L1:
 10684 00007A6B C9                              leave
 10685 00007A6C C22000                          ret AND_KILL_FRAME(2)
 10686                                          
 10687                                  L_code_ptr_make_string:
 10688 00007A6F C8000000                        enter 0, 0
 10689 00007A73 48837D1802                      cmp COUNT, 2
 10690 00007A78 0F8546020000                    jne L_error_arg_count_2
 10691 00007A7E 488B4D20                        mov rcx, PARAM(0)
 10692                                          assert_integer(rcx)
    53 00007A82 803911              <1>  cmp byte [%1], %2
    54 00007A85 0F85D8020000        <1>  jne L_error_incorrect_type
 10693 00007A8B 488B4901                        mov rcx, qword [rcx + 1]
 10694 00007A8F 4883F900                        cmp rcx, 0
 10695 00007A93 0F8C5F010000                    jl L_error_integer_range
 10696 00007A99 488B5528                        mov rdx, PARAM(1)
 10697                                          assert_char(rdx)
    53 00007A9D 803A02              <1>  cmp byte [%1], %2
    54 00007AA0 0F85BD020000        <1>  jne L_error_incorrect_type
 10698 00007AA6 8A5201                          mov dl, byte [rdx + 1]
 10699 00007AA9 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 10700 00007AAD E835E5FFFF                      call malloc
 10701 00007AB2 C60003                          mov byte [rax], T_string
 10702 00007AB5 48894801                        mov qword [rax + 1], rcx
 10703 00007AB9 41B800000000                    mov r8, 0
 10704                                  .L0:
 10705 00007ABF 4939C8                          cmp r8, rcx
 10706 00007AC2 740A                            je .L1
 10707 00007AC4 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 10708 00007AC9 49FFC0                          inc r8
 10709 00007ACC EBF1                            jmp .L0
 10710                                  .L1:
 10711 00007ACE C9                              leave
 10712 00007ACF C22000                          ret AND_KILL_FRAME(2)
 10713                                  
 10714                                  L_code_ptr_numerator:
 10715 00007AD2 C8000000                        enter 0, 0
 10716 00007AD6 48837D1801                      cmp COUNT, 1
 10717 00007ADB 0F85AE010000                    jne L_error_arg_count_1
 10718 00007AE1 488B4520                        mov rax, PARAM(0)
 10719                                          assert_fraction(rax)
    53 00007AE5 803812              <1>  cmp byte [%1], %2
    54 00007AE8 0F8575020000        <1>  jne L_error_incorrect_type
 10720 00007AEE 488B7801                        mov rdi, qword [rax + 1]
 10721 00007AF2 E8E7000000                      call make_integer
 10722 00007AF7 C9                              leave
 10723 00007AF8 C21800                          ret AND_KILL_FRAME(1)
 10724                                          
 10725                                  L_code_ptr_denominator:
 10726 00007AFB C8000000                        enter 0, 0
 10727 00007AFF 48837D1801                      cmp COUNT, 1
 10728 00007B04 0F8585010000                    jne L_error_arg_count_1
 10729 00007B0A 488B4520                        mov rax, PARAM(0)
 10730                                          assert_fraction(rax)
    53 00007B0E 803812              <1>  cmp byte [%1], %2
    54 00007B11 0F854C020000        <1>  jne L_error_incorrect_type
 10731 00007B17 488B7809                        mov rdi, qword [rax + 1 + 8]
 10732 00007B1B E8BE000000                      call make_integer
 10733 00007B20 C9                              leave
 10734 00007B21 C21800                          ret AND_KILL_FRAME(1)
 10735                                  
 10736                                  L_code_ptr_is_eq:
 10737 00007B24 C8000000                	enter 0, 0
 10738 00007B28 48837D1802              	cmp COUNT, 2
 10739 00007B2D 0F8591010000            	jne L_error_arg_count_2
 10740 00007B33 488B7D20                	mov rdi, PARAM(0)
 10741 00007B37 488B7528                	mov rsi, PARAM(1)
 10742 00007B3B 4839F7                  	cmp rdi, rsi
 10743 00007B3E 746C                    	je .L_eq_true
 10744 00007B40 8A17                    	mov dl, byte [rdi]
 10745 00007B42 3A16                    	cmp dl, byte [rsi]
 10746 00007B44 7572                    	jne .L_eq_false
 10747 00007B46 80FA02                  	cmp dl, T_char
 10748 00007B49 7459                    	je .L_char
 10749 00007B4B 80FA41                  	cmp dl, T_interned_symbol
 10750 00007B4E 7440                    	je .L_interned_symbol
 10751 00007B50 80FA42                          cmp dl, T_uninterned_symbol
 10752 00007B53 7443                            je .L_uninterned_symbol
 10753 00007B55 80FA13                  	cmp dl, T_real
 10754 00007B58 742E                    	je .L_real
 10755 00007B5A 80FA12                  	cmp dl, T_fraction
 10756 00007B5D 7413                    	je .L_fraction
 10757 00007B5F 80FA11                          cmp dl, T_integer
 10758 00007B62 7402                            je .L_integer
 10759 00007B64 EB52                    	jmp .L_eq_false
 10760                                  .L_integer:
 10761 00007B66 488B4601                        mov rax, qword [rsi + 1]
 10762 00007B6A 483B4701                        cmp rax, qword [rdi + 1]
 10763 00007B6E 7548                            jne .L_eq_false
 10764 00007B70 EB3A                            jmp .L_eq_true
 10765                                  .L_fraction:
 10766 00007B72 488B4601                	mov rax, qword [rsi + 1]
 10767 00007B76 483B4701                	cmp rax, qword [rdi + 1]
 10768 00007B7A 753C                    	jne .L_eq_false
 10769 00007B7C 488B4609                	mov rax, qword [rsi + 1 + 8]
 10770 00007B80 483B4709                	cmp rax, qword [rdi + 1 + 8]
 10771 00007B84 7532                    	jne .L_eq_false
 10772 00007B86 EB24                    	jmp .L_eq_true
 10773                                  .L_real:
 10774 00007B88 488B4601                	mov rax, qword [rsi + 1]
 10775 00007B8C 483B4701                	cmp rax, qword [rdi + 1]
 10776                                  .L_interned_symbol:
 10777                                  	; never reached, because interned_symbols are static!
 10778                                  	; but I'm keeping it in case, I'll ever change
 10779                                  	; the implementation
 10780 00007B90 488B4601                	mov rax, qword [rsi + 1]
 10781 00007B94 483B4701                	cmp rax, qword [rdi + 1]
 10782                                  .L_uninterned_symbol:
 10783 00007B98 4C8B4701                        mov r8, qword [rdi + 1]
 10784 00007B9C 4C3B4601                        cmp r8, qword [rsi + 1]
 10785 00007BA0 7516                            jne .L_eq_false
 10786 00007BA2 EB08                            jmp .L_eq_true
 10787                                  .L_char:
 10788 00007BA4 8A5E01                  	mov bl, byte [rsi + 1]
 10789 00007BA7 3A5F01                  	cmp bl, byte [rdi + 1]
 10790 00007BAA 750C                    	jne .L_eq_false
 10791                                  .L_eq_true:
 10792 00007BAC 48B8-                   	mov rax, sob_boolean_true
 10792 00007BAE [0300000000000000] 
 10793 00007BB6 EB0A                    	jmp .L_eq_exit
 10794                                  .L_eq_false:
 10795 00007BB8 48B8-                   	mov rax, sob_boolean_false
 10795 00007BBA [0200000000000000] 
 10796                                  .L_eq_exit:
 10797 00007BC2 C9                      	leave
 10798 00007BC3 C22000                  	ret AND_KILL_FRAME(2)
 10799                                  
 10800                                  make_real:
 10801 00007BC6 C8000000                        enter 0, 0
 10802 00007BCA BF09000000                      mov rdi, (1 + 8)
 10803 00007BCF E813E4FFFF                      call malloc
 10804 00007BD4 C60013                          mov byte [rax], T_real
 10805 00007BD7 F20F114001                      movsd qword [rax + 1], xmm0
 10806 00007BDC C9                              leave 
 10807 00007BDD C3                              ret
 10808                                          
 10809                                  make_integer:
 10810 00007BDE C8000000                        enter 0, 0
 10811 00007BE2 4889FE                          mov rsi, rdi
 10812 00007BE5 BF09000000                      mov rdi, (1 + 8)
 10813 00007BEA E8F8E3FFFF                      call malloc
 10814 00007BEF C60011                          mov byte [rax], T_integer
 10815 00007BF2 48897001                        mov qword [rax + 1], rsi
 10816 00007BF6 C9                              leave
 10817 00007BF7 C3                              ret
 10818                                          
 10819                                  L_error_integer_range:
 10820 00007BF8 488B3C25[00000000]              mov rdi, qword [stderr]
 10821 00007C00 48BE-                           mov rsi, fmt_integer_range
 10821 00007C02 [C809000000000000] 
 10822 00007C0A B800000000                      mov rax, 0
 10823                                          ENTER
    44 00007C0F C8000000            <1>  enter 0, 0
    45 00007C13 4883E4F0            <1>  and rsp, ~15
 10824 00007C17 E8(00000000)                    call fprintf
 10825                                          LEAVE
    49 00007C1C C9                  <1>  leave
 10826 00007C1D 48C7C0FBFFFFFF                  mov rax, -5
 10827 00007C24 E8(00000000)                    call exit
 10828                                  
 10829                                  L_error_arg_negative:
 10830 00007C29 488B3C25[00000000]              mov rdi, qword [stderr]
 10831 00007C31 48BE-                           mov rsi, fmt_arg_negative
 10831 00007C33 [A008000000000000] 
 10832 00007C3B B800000000                      mov rax, 0
 10833                                          ENTER
    44 00007C40 C8000000            <1>  enter 0, 0
    45 00007C44 4883E4F0            <1>  and rsp, ~15
 10834 00007C48 E8(00000000)                    call fprintf
 10835                                          LEAVE
    49 00007C4D C9                  <1>  leave
 10836 00007C4E 48C7C0FDFFFFFF                  mov rax, -3
 10837 00007C55 E8(00000000)                    call exit
 10838                                  
 10839                                  L_error_arg_count_0:
 10840 00007C5A 488B3C25[00000000]              mov rdi, qword [stderr]
 10841 00007C62 48BE-                           mov rsi, fmt_arg_count_0
 10841 00007C64 [C608000000000000] 
 10842 00007C6C 488B5518                        mov rdx, COUNT
 10843 00007C70 B800000000                      mov rax, 0
 10844                                          ENTER
    44 00007C75 C8000000            <1>  enter 0, 0
    45 00007C79 4883E4F0            <1>  and rsp, ~15
 10845 00007C7D E8(00000000)                    call fprintf
 10846                                          LEAVE
    49 00007C82 C9                  <1>  leave
 10847 00007C83 48C7C0FDFFFFFF                  mov rax, -3
 10848 00007C8A E8(00000000)                    call exit
 10849                                  
 10850                                  L_error_arg_count_1:
 10851 00007C8F 488B3C25[00000000]              mov rdi, qword [stderr]
 10852 00007C97 48BE-                           mov rsi, fmt_arg_count_1
 10852 00007C99 [EE08000000000000] 
 10853 00007CA1 488B5518                        mov rdx, COUNT
 10854 00007CA5 B800000000                      mov rax, 0
 10855                                          ENTER
    44 00007CAA C8000000            <1>  enter 0, 0
    45 00007CAE 4883E4F0            <1>  and rsp, ~15
 10856 00007CB2 E8(00000000)                    call fprintf
 10857                                          LEAVE
    49 00007CB7 C9                  <1>  leave
 10858 00007CB8 48C7C0FDFFFFFF                  mov rax, -3
 10859 00007CBF E8(00000000)                    call exit
 10860                                  
 10861                                  L_error_arg_count_2:
 10862 00007CC4 488B3C25[00000000]              mov rdi, qword [stderr]
 10863 00007CCC 48BE-                           mov rsi, fmt_arg_count_2
 10863 00007CCE [5409000000000000] 
 10864 00007CD6 488B5518                        mov rdx, COUNT
 10865 00007CDA B800000000                      mov rax, 0
 10866                                          ENTER
    44 00007CDF C8000000            <1>  enter 0, 0
    45 00007CE3 4883E4F0            <1>  and rsp, ~15
 10867 00007CE7 E8(00000000)                    call fprintf
 10868                                          LEAVE
    49 00007CEC C9                  <1>  leave
 10869 00007CED 48C7C0FDFFFFFF                  mov rax, -3
 10870 00007CF4 E8(00000000)                    call exit
 10871                                  
 10872                                  L_error_arg_count_12:
 10873 00007CF9 488B3C25[00000000]              mov rdi, qword [stderr]
 10874 00007D01 48BE-                           mov rsi, fmt_arg_count_12
 10874 00007D03 [1409000000000000] 
 10875 00007D0B 488B5518                        mov rdx, COUNT
 10876 00007D0F B800000000                      mov rax, 0
 10877                                          ENTER
    44 00007D14 C8000000            <1>  enter 0, 0
    45 00007D18 4883E4F0            <1>  and rsp, ~15
 10878 00007D1C E8(00000000)                    call fprintf
 10879                                          LEAVE
    49 00007D21 C9                  <1>  leave
 10880 00007D22 48C7C0FDFFFFFF                  mov rax, -3
 10881 00007D29 E8(00000000)                    call exit
 10882                                  
 10883                                  L_error_arg_count_3:
 10884 00007D2E 488B3C25[00000000]              mov rdi, qword [stderr]
 10885 00007D36 48BE-                           mov rsi, fmt_arg_count_3
 10885 00007D38 [7B09000000000000] 
 10886 00007D40 488B5518                        mov rdx, COUNT
 10887 00007D44 B800000000                      mov rax, 0
 10888                                          ENTER
    44 00007D49 C8000000            <1>  enter 0, 0
    45 00007D4D 4883E4F0            <1>  and rsp, ~15
 10889 00007D51 E8(00000000)                    call fprintf
 10890                                          LEAVE
    49 00007D56 C9                  <1>  leave
 10891 00007D57 48C7C0FDFFFFFF                  mov rax, -3
 10892 00007D5E E8(00000000)                    call exit
 10893                                          
 10894                                  L_error_incorrect_type:
 10895 00007D63 488B3C25[00000000]              mov rdi, qword [stderr]
 10896 00007D6B 48BE-                           mov rsi, fmt_type
 10896 00007D6D [A409000000000000] 
 10897 00007D75 B800000000                      mov rax, 0
 10898                                          ENTER
    44 00007D7A C8000000            <1>  enter 0, 0
    45 00007D7E 4883E4F0            <1>  and rsp, ~15
 10899 00007D82 E8(00000000)                    call fprintf
 10900                                          LEAVE
    49 00007D87 C9                  <1>  leave
 10901 00007D88 48C7C0FCFFFFFF                  mov rax, -4
 10902 00007D8F E8(00000000)                    call exit
 10903                                  
 10904                                  L_error_division_by_zero:
 10905 00007D94 488B3C25[00000000]              mov rdi, qword [stderr]
 10906 00007D9C 48BE-                           mov rsi, fmt_division_by_zero
 10906 00007D9E [E509000000000000] 
 10907 00007DA6 B800000000                      mov rax, 0
 10908                                          ENTER
    44 00007DAB C8000000            <1>  enter 0, 0
    45 00007DAF 4883E4F0            <1>  and rsp, ~15
 10909 00007DB3 E8(00000000)                    call fprintf
 10910                                          LEAVE
    49 00007DB8 C9                  <1>  leave
 10911 00007DB9 48C7C0F8FFFFFF                  mov rax, -8
 10912 00007DC0 E8(00000000)                    call exit
 10913                                  
 10914                                  section .data
 10915                                  gensym_count:
 10916 00000895 0000000000000000                dq 0
 10917                                  fmt_char:
 10918 0000089D 256300                          db `%c\0`
 10919                                  fmt_arg_negative:
 10920 000008A0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 10920 000008A9 7267756D656E742063-
 10920 000008B2 616E6E6F7420626520-
 10920 000008BB 6E656761746976652E-
 10920 000008C4 0A00               
 10921                                  fmt_arg_count_0:
 10922 000008C6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 10922 000008CF 74696E67207A65726F-
 10922 000008D8 20617267756D656E74-
 10922 000008E1 732E20466F756E6420-
 10922 000008EA 25640A00           
 10923                                  fmt_arg_count_1:
 10924 000008EE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 10924 000008F7 74696E67206F6E6520-
 10924 00000900 617267756D656E742E-
 10924 00000909 20466F756E64202564-
 10924 00000912 0A00               
 10925                                  fmt_arg_count_12:
 10926 00000914 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 10926 0000091D 74696E67206F6E6520-
 10926 00000926 726571756972656420-
 10926 0000092F 616E64206F6E65206F-
 10926 00000938 7074696F6E616C2061-
 10926 00000941 7267756D656E742E20-
 10926 0000094A 466F756E642025640A-
 10926 00000953 00                 
 10927                                  fmt_arg_count_2:
 10928 00000954 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 10928 0000095D 74696E672074776F20-
 10928 00000966 617267756D656E7473-
 10928 0000096F 2E20466F756E642025-
 10928 00000978 640A00             
 10929                                  fmt_arg_count_3:
 10930 0000097B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 10930 00000984 74696E672074687265-
 10930 0000098D 6520617267756D656E-
 10930 00000996 74732E20466F756E64-
 10930 0000099F 2025640A00         
 10931                                  fmt_type:
 10932 000009A4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 10932 000009AD 696F6E207061737365-
 10932 000009B6 6420696E636F727265-
 10932 000009BF 637420747970650A00 
 10933                                  fmt_integer_range:
 10934 000009C8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 10934 000009D1 7265637420696E7465-
 10934 000009DA 6765722072616E6765-
 10934 000009E3 0A00               
 10935                                  fmt_division_by_zero:
 10936 000009E5 212121204469766973-             db `!!! Division by zero\n\0`
 10936 000009EE 696F6E206279207A65-
 10936 000009F7 726F0A00           
 10937                                  fmt_scheme_error_part_1:
 10938 000009FB 0A2121212054686520-             db `\n!!! The procedure \0`
 10938 00000A04 70726F636564757265-
 10938 00000A0D 2000               
 10939                                  fmt_scheme_error_part_2:
 10940 00000A0F 2061736B656420746F-             db ` asked to terminate the program\n`
 10940 00000A18 207465726D696E6174-
 10940 00000A21 65207468652070726F-
 10940 00000A2A 6772616D0A         
 10941 00000A2F 202020207769746820-             db `    with the following message:\n\n\0`
 10941 00000A38 74686520666F6C6C6F-
 10941 00000A41 77696E67206D657373-
 10941 00000A4A 6167653A0A0A00     
 10942                                  fmt_scheme_error_part_3:
 10943 00000A51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 10943 00000A5A 210A0A00           
