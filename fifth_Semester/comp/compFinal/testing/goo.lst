     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "args"
   589 0000078D 0400000000000000        	dq 4
   590 00000795 61726773                	db 0x61, 0x72, 0x67, 0x73
   591                                  	; L_constants + 1945:
   592 00000799 03                      	db T_string	; "not"
   593 0000079A 0300000000000000        	dq 3
   594 000007A2 6E6F74                  	db 0x6E, 0x6F, 0x74
   595                                  	; L_constants + 1957:
   596 000007A5 03                      	db T_string	; "rational?"
   597 000007A6 0900000000000000        	dq 9
   598 000007AE 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   599 000007B6 3F                      	db 0x3F
   600                                  	; L_constants + 1975:
   601 000007B7 03                      	db T_string	; "list*"
   602 000007B8 0500000000000000        	dq 5
   603 000007C0 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   604                                  	; L_constants + 1989:
   605 000007C5 03                      	db T_string	; "s"
   606 000007C6 0100000000000000        	dq 1
   607 000007CE 73                      	db 0x73
   608                                  	; L_constants + 1999:
   609 000007CF 03                      	db T_string	; "whatever"
   610 000007D0 0800000000000000        	dq 8
   611 000007D8 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   612                                  	; L_constants + 2016:
   613 000007E0 41                      	db T_interned_symbol	; whatever
   614 000007E1 [CF07000000000000]      	dq L_constants + 1999
   615                                  	; L_constants + 2025:
   616 000007E9 03                      	db T_string	; "apply"
   617 000007EA 0500000000000000        	dq 5
   618 000007F2 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   619                                  	; L_constants + 2039:
   620 000007F7 03                      	db T_string	; "ormap"
   621 000007F8 0500000000000000        	dq 5
   622 00000800 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2053:
   624 00000805 03                      	db T_string	; "map"
   625 00000806 0300000000000000        	dq 3
   626 0000080E 6D6170                  	db 0x6D, 0x61, 0x70
   627                                  	; L_constants + 2065:
   628 00000811 03                      	db T_string	; "andmap"
   629 00000812 0600000000000000        	dq 6
   630 0000081A 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   631                                  	; L_constants + 2080:
   632 00000820 03                      	db T_string	; "reverse"
   633 00000821 0700000000000000        	dq 7
   634 00000829 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   635                                  	; L_constants + 2096:
   636 00000830 03                      	db T_string	; "fold-left"
   637 00000831 0900000000000000        	dq 9
   638 00000839 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   639 00000841 74                      	db 0x74
   640                                  	; L_constants + 2114:
   641 00000842 03                      	db T_string	; "append"
   642 00000843 0600000000000000        	dq 6
   643 0000084B 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   644                                  	; L_constants + 2129:
   645 00000851 03                      	db T_string	; "ss"
   646 00000852 0200000000000000        	dq 2
   647 0000085A 7373                    	db 0x73, 0x73
   648                                  	; L_constants + 2140:
   649 0000085C 03                      	db T_string	; "fold-right"
   650 0000085D 0A00000000000000        	dq 10
   651 00000865 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   652 0000086D 6874                    	db 0x68, 0x74
   653                                  	; L_constants + 2159:
   654 0000086F 03                      	db T_string	; "+"
   655 00000870 0100000000000000        	dq 1
   656 00000878 2B                      	db 0x2B
   657                                  	; L_constants + 2169:
   658 00000879 11                      	db T_integer	; 0
   659 0000087A 0000000000000000        	dq 0
   660                                  	; L_constants + 2178:
   661 00000882 03                      	db T_string	; "__bin_integer_to_fr...
   662 00000883 1900000000000000        	dq 25
   663 0000088B 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   664 00000893 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   665 0000089B 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   666 000008A3 6E                      	db 0x6E
   667                                  	; L_constants + 2212:
   668 000008A4 41                      	db T_interned_symbol	; +
   669 000008A5 [6F08000000000000]      	dq L_constants + 2159
   670                                  	; L_constants + 2221:
   671 000008AD 03                      	db T_string	; "all arguments need ...
   672 000008AE 2000000000000000        	dq 32
   673 000008B6 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   674 000008BE 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   675 000008C6 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   676 000008CE 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   677                                  	; L_constants + 2262:
   678 000008D6 03                      	db T_string	; "-"
   679 000008D7 0100000000000000        	dq 1
   680 000008DF 2D                      	db 0x2D
   681                                  	; L_constants + 2272:
   682 000008E0 03                      	db T_string	; "real"
   683 000008E1 0400000000000000        	dq 4
   684 000008E9 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   685                                  	; L_constants + 2285:
   686 000008ED 41                      	db T_interned_symbol	; -
   687 000008EE [D608000000000000]      	dq L_constants + 2262
   688                                  	; L_constants + 2294:
   689 000008F6 03                      	db T_string	; "*"
   690 000008F7 0100000000000000        	dq 1
   691 000008FF 2A                      	db 0x2A
   692                                  	; L_constants + 2304:
   693 00000900 11                      	db T_integer	; 1
   694 00000901 0100000000000000        	dq 1
   695                                  	; L_constants + 2313:
   696 00000909 41                      	db T_interned_symbol	; *
   697 0000090A [F608000000000000]      	dq L_constants + 2294
   698                                  	; L_constants + 2322:
   699 00000912 03                      	db T_string	; "/"
   700 00000913 0100000000000000        	dq 1
   701 0000091B 2F                      	db 0x2F
   702                                  	; L_constants + 2332:
   703 0000091C 41                      	db T_interned_symbol	; /
   704 0000091D [1209000000000000]      	dq L_constants + 2322
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; "fact"
   707 00000926 0400000000000000        	dq 4
   708 0000092E 66616374                	db 0x66, 0x61, 0x63, 0x74
   709                                  	; L_constants + 2354:
   710 00000932 03                      	db T_string	; "<"
   711 00000933 0100000000000000        	dq 1
   712 0000093B 3C                      	db 0x3C
   713                                  	; L_constants + 2364:
   714 0000093C 03                      	db T_string	; "<="
   715 0000093D 0200000000000000        	dq 2
   716 00000945 3C3D                    	db 0x3C, 0x3D
   717                                  	; L_constants + 2375:
   718 00000947 03                      	db T_string	; ">"
   719 00000948 0100000000000000        	dq 1
   720 00000950 3E                      	db 0x3E
   721                                  	; L_constants + 2385:
   722 00000951 03                      	db T_string	; ">="
   723 00000952 0200000000000000        	dq 2
   724 0000095A 3E3D                    	db 0x3E, 0x3D
   725                                  	; L_constants + 2396:
   726 0000095C 03                      	db T_string	; "="
   727 0000095D 0100000000000000        	dq 1
   728 00000965 3D                      	db 0x3D
   729                                  	; L_constants + 2406:
   730 00000966 03                      	db T_string	; "generic-comparator"
   731 00000967 1200000000000000        	dq 18
   732 0000096F 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   733 00000977 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   734 0000097F 6F72                    	db 0x6F, 0x72
   735                                  	; L_constants + 2433:
   736 00000981 41                      	db T_interned_symbol	; generic-comparator
   737 00000982 [6609000000000000]      	dq L_constants + 2406
   738                                  	; L_constants + 2442:
   739 0000098A 03                      	db T_string	; "all the arguments m...
   740 0000098B 2100000000000000        	dq 33
   741 00000993 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   742 0000099B 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   743 000009A3 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   744 000009AB 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   745 000009B3 73                      	db 0x73
   746                                  	; L_constants + 2484:
   747 000009B4 03                      	db T_string	; "char<?"
   748 000009B5 0600000000000000        	dq 6
   749 000009BD 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   750                                  	; L_constants + 2499:
   751 000009C3 03                      	db T_string	; "char<=?"
   752 000009C4 0700000000000000        	dq 7
   753 000009CC 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   754                                  	; L_constants + 2515:
   755 000009D3 03                      	db T_string	; "char=?"
   756 000009D4 0600000000000000        	dq 6
   757 000009DC 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   758                                  	; L_constants + 2530:
   759 000009E2 03                      	db T_string	; "char>?"
   760 000009E3 0600000000000000        	dq 6
   761 000009EB 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   762                                  	; L_constants + 2545:
   763 000009F1 03                      	db T_string	; "char>=?"
   764 000009F2 0700000000000000        	dq 7
   765 000009FA 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   766                                  	; L_constants + 2561:
   767 00000A01 03                      	db T_string	; "char-downcase"
   768 00000A02 0D00000000000000        	dq 13
   769 00000A0A 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   770 00000A12 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   771                                  	; L_constants + 2583:
   772 00000A17 03                      	db T_string	; "char-upcase"
   773 00000A18 0B00000000000000        	dq 11
   774 00000A20 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   775 00000A28 617365                  	db 0x61, 0x73, 0x65
   776                                  	; L_constants + 2603:
   777 00000A2B 03                      	db T_string	; "free_var"
   778 00000A2C 0800000000000000        	dq 8
   779 00000A34 667265655F766172        	db 0x66, 0x72, 0x65, 0x65, 0x5F, 0x76, 0x61, 0x72
   780                                  	; L_constants + 2620:
   781 00000A3C 11                      	db T_integer	; 2
   782 00000A3D 0200000000000000        	dq 2
   783                                  	; L_constants + 2629:
   784 00000A45 03                      	db T_string	; "tail_lambda"
   785 00000A46 0B00000000000000        	dq 11
   786 00000A4E 7461696C5F6C616D        	db 0x74, 0x61, 0x69, 0x6C, 0x5F, 0x6C, 0x61, 0x6D
   787 00000A56 626461                  	db 0x62, 0x64, 0x61
   788                                  	; L_constants + 2649:
   789 00000A59 03                      	db T_string	; "arg_lambda"
   790 00000A5A 0A00000000000000        	dq 10
   791 00000A62 6172675F6C616D62        	db 0x61, 0x72, 0x67, 0x5F, 0x6C, 0x61, 0x6D, 0x62
   792 00000A6A 6461                    	db 0x64, 0x61
   793                                  	; L_constants + 2668:
   794 00000A6C 03                      	db T_string	; "free_var_lambda"
   795 00000A6D 0F00000000000000        	dq 15
   796 00000A75 667265655F766172        	db 0x66, 0x72, 0x65, 0x65, 0x5F, 0x76, 0x61, 0x72
   797 00000A7D 5F6C616D626461          	db 0x5F, 0x6C, 0x61, 0x6D, 0x62, 0x64, 0x61
   798                                  	; L_constants + 2692:
   799 00000A84 11                      	db T_integer	; 5
   800 00000A85 0500000000000000        	dq 5
   801                                  	; L_constants + 2701:
   802 00000A8D 11                      	db T_integer	; 6
   803 00000A8E 0600000000000000        	dq 6
   804                                  	; L_constants + 2710:
   805 00000A96 11                      	db T_integer	; 3
   806 00000A97 0300000000000000        	dq 3
   807                                  free_var_0:	; location of *
   808 00000A9F [A70A000000000000]      	dq .undefined_object
   809                                  .undefined_object:
   810 00000AA7 05                      	db T_undefined
   811 00000AA8 [F608000000000000]      	dq L_constants + 2294
   812                                  
   813                                  free_var_1:	; location of +
   814 00000AB0 [B80A000000000000]      	dq .undefined_object
   815                                  .undefined_object:
   816 00000AB8 05                      	db T_undefined
   817 00000AB9 [6F08000000000000]      	dq L_constants + 2159
   818                                  
   819                                  free_var_2:	; location of -
   820 00000AC1 [C90A000000000000]      	dq .undefined_object
   821                                  .undefined_object:
   822 00000AC9 05                      	db T_undefined
   823 00000ACA [D608000000000000]      	dq L_constants + 2262
   824                                  
   825                                  free_var_3:	; location of /
   826 00000AD2 [DA0A000000000000]      	dq .undefined_object
   827                                  .undefined_object:
   828 00000ADA 05                      	db T_undefined
   829 00000ADB [1209000000000000]      	dq L_constants + 2322
   830                                  
   831                                  free_var_4:	; location of <
   832 00000AE3 [EB0A000000000000]      	dq .undefined_object
   833                                  .undefined_object:
   834 00000AEB 05                      	db T_undefined
   835 00000AEC [3209000000000000]      	dq L_constants + 2354
   836                                  
   837                                  free_var_5:	; location of <=
   838 00000AF4 [FC0A000000000000]      	dq .undefined_object
   839                                  .undefined_object:
   840 00000AFC 05                      	db T_undefined
   841 00000AFD [3C09000000000000]      	dq L_constants + 2364
   842                                  
   843                                  free_var_6:	; location of =
   844 00000B05 [0D0B000000000000]      	dq .undefined_object
   845                                  .undefined_object:
   846 00000B0D 05                      	db T_undefined
   847 00000B0E [5C09000000000000]      	dq L_constants + 2396
   848                                  
   849                                  free_var_7:	; location of >
   850 00000B16 [1E0B000000000000]      	dq .undefined_object
   851                                  .undefined_object:
   852 00000B1E 05                      	db T_undefined
   853 00000B1F [4709000000000000]      	dq L_constants + 2375
   854                                  
   855                                  free_var_8:	; location of >=
   856 00000B27 [2F0B000000000000]      	dq .undefined_object
   857                                  .undefined_object:
   858 00000B2F 05                      	db T_undefined
   859 00000B30 [5109000000000000]      	dq L_constants + 2385
   860                                  
   861                                  free_var_9:	; location of __bin-add-qq
   862 00000B38 [400B000000000000]      	dq .undefined_object
   863                                  .undefined_object:
   864 00000B40 05                      	db T_undefined
   865 00000B41 [6902000000000000]      	dq L_constants + 617
   866                                  
   867                                  free_var_10:	; location of __bin-add-rr
   868 00000B49 [510B000000000000]      	dq .undefined_object
   869                                  .undefined_object:
   870 00000B51 05                      	db T_undefined
   871 00000B52 [1502000000000000]      	dq L_constants + 533
   872                                  
   873                                  free_var_11:	; location of __bin-add-zz
   874 00000B5A [620B000000000000]      	dq .undefined_object
   875                                  .undefined_object:
   876 00000B62 05                      	db T_undefined
   877 00000B63 [BD02000000000000]      	dq L_constants + 701
   878                                  
   879                                  free_var_12:	; location of __bin-apply
   880 00000B6B [730B000000000000]      	dq .undefined_object
   881                                  .undefined_object:
   882 00000B73 05                      	db T_undefined
   883 00000B74 [0102000000000000]      	dq L_constants + 513
   884                                  
   885                                  free_var_13:	; location of __bin-div-qq
   886 00000B7C [840B000000000000]      	dq .undefined_object
   887                                  .undefined_object:
   888 00000B84 05                      	db T_undefined
   889 00000B85 [A802000000000000]      	dq L_constants + 680
   890                                  
   891                                  free_var_14:	; location of __bin-div-rr
   892 00000B8D [950B000000000000]      	dq .undefined_object
   893                                  .undefined_object:
   894 00000B95 05                      	db T_undefined
   895 00000B96 [5402000000000000]      	dq L_constants + 596
   896                                  
   897                                  free_var_15:	; location of __bin-div-zz
   898 00000B9E [A60B000000000000]      	dq .undefined_object
   899                                  .undefined_object:
   900 00000BA6 05                      	db T_undefined
   901 00000BA7 [FC02000000000000]      	dq L_constants + 764
   902                                  
   903                                  free_var_16:	; location of __bin-equal-qq
   904 00000BAF [B70B000000000000]      	dq .undefined_object
   905                                  .undefined_object:
   906 00000BB7 05                      	db T_undefined
   907 00000BB8 [8703000000000000]      	dq L_constants + 903
   908                                  
   909                                  free_var_17:	; location of __bin-equal-rr
   910 00000BC0 [C80B000000000000]      	dq .undefined_object
   911                                  .undefined_object:
   912 00000BC8 05                      	db T_undefined
   913 00000BC9 [7003000000000000]      	dq L_constants + 880
   914                                  
   915                                  free_var_18:	; location of __bin-equal-zz
   916 00000BD1 [D90B000000000000]      	dq .undefined_object
   917                                  .undefined_object:
   918 00000BD9 05                      	db T_undefined
   919 00000BDA [9E03000000000000]      	dq L_constants + 926
   920                                  
   921                                  free_var_19:	; location of __bin-less-than-qq
   922 00000BE2 [EA0B000000000000]      	dq .undefined_object
   923                                  .undefined_object:
   924 00000BEA 05                      	db T_undefined
   925 00000BEB [3A03000000000000]      	dq L_constants + 826
   926                                  
   927                                  free_var_20:	; location of __bin-less-than-rr
   928 00000BF3 [FB0B000000000000]      	dq .undefined_object
   929                                  .undefined_object:
   930 00000BFB 05                      	db T_undefined
   931 00000BFC [1F03000000000000]      	dq L_constants + 799
   932                                  
   933                                  free_var_21:	; location of __bin-less-than-zz
   934 00000C04 [0C0C000000000000]      	dq .undefined_object
   935                                  .undefined_object:
   936 00000C0C 05                      	db T_undefined
   937 00000C0D [5503000000000000]      	dq L_constants + 853
   938                                  
   939                                  free_var_22:	; location of __bin-mul-qq
   940 00000C15 [1D0C000000000000]      	dq .undefined_object
   941                                  .undefined_object:
   942 00000C1D 05                      	db T_undefined
   943 00000C1E [9302000000000000]      	dq L_constants + 659
   944                                  
   945                                  free_var_23:	; location of __bin-mul-rr
   946 00000C26 [2E0C000000000000]      	dq .undefined_object
   947                                  .undefined_object:
   948 00000C2E 05                      	db T_undefined
   949 00000C2F [3F02000000000000]      	dq L_constants + 575
   950                                  
   951                                  free_var_24:	; location of __bin-mul-zz
   952 00000C37 [3F0C000000000000]      	dq .undefined_object
   953                                  .undefined_object:
   954 00000C3F 05                      	db T_undefined
   955 00000C40 [E702000000000000]      	dq L_constants + 743
   956                                  
   957                                  free_var_25:	; location of __bin-sub-qq
   958 00000C48 [500C000000000000]      	dq .undefined_object
   959                                  .undefined_object:
   960 00000C50 05                      	db T_undefined
   961 00000C51 [7E02000000000000]      	dq L_constants + 638
   962                                  
   963                                  free_var_26:	; location of __bin-sub-rr
   964 00000C59 [610C000000000000]      	dq .undefined_object
   965                                  .undefined_object:
   966 00000C61 05                      	db T_undefined
   967 00000C62 [2A02000000000000]      	dq L_constants + 554
   968                                  
   969                                  free_var_27:	; location of __bin-sub-zz
   970 00000C6A [720C000000000000]      	dq .undefined_object
   971                                  .undefined_object:
   972 00000C72 05                      	db T_undefined
   973 00000C73 [D202000000000000]      	dq L_constants + 722
   974                                  
   975                                  free_var_28:	; location of __bin_integer_to_fraction
   976 00000C7B [830C000000000000]      	dq .undefined_object
   977                                  .undefined_object:
   978 00000C83 05                      	db T_undefined
   979 00000C84 [8208000000000000]      	dq L_constants + 2178
   980                                  
   981                                  free_var_29:	; location of __integer-to-fraction
   982 00000C8C [940C000000000000]      	dq .undefined_object
   983                                  .undefined_object:
   984 00000C94 05                      	db T_undefined
   985 00000C95 [A204000000000000]      	dq L_constants + 1186
   986                                  
   987                                  free_var_30:	; location of andmap
   988 00000C9D [A50C000000000000]      	dq .undefined_object
   989                                  .undefined_object:
   990 00000CA5 05                      	db T_undefined
   991 00000CA6 [1108000000000000]      	dq L_constants + 2065
   992                                  
   993                                  free_var_31:	; location of append
   994 00000CAE [B60C000000000000]      	dq .undefined_object
   995                                  .undefined_object:
   996 00000CB6 05                      	db T_undefined
   997 00000CB7 [4208000000000000]      	dq L_constants + 2114
   998                                  
   999                                  free_var_32:	; location of apply
  1000 00000CBF [C70C000000000000]      	dq .undefined_object
  1001                                  .undefined_object:
  1002 00000CC7 05                      	db T_undefined
  1003 00000CC8 [E907000000000000]      	dq L_constants + 2025
  1004                                  
  1005                                  free_var_33:	; location of arg_lambda
  1006 00000CD0 [D80C000000000000]      	dq .undefined_object
  1007                                  .undefined_object:
  1008 00000CD8 05                      	db T_undefined
  1009 00000CD9 [590A000000000000]      	dq L_constants + 2649
  1010                                  
  1011                                  free_var_34:	; location of args
  1012 00000CE1 [E90C000000000000]      	dq .undefined_object
  1013                                  .undefined_object:
  1014 00000CE9 05                      	db T_undefined
  1015 00000CEA [8C07000000000000]      	dq L_constants + 1932
  1016                                  
  1017                                  free_var_35:	; location of caaaar
  1018 00000CF2 [FA0C000000000000]      	dq .undefined_object
  1019                                  .undefined_object:
  1020 00000CFA 05                      	db T_undefined
  1021 00000CFB [8106000000000000]      	dq L_constants + 1665
  1022                                  
  1023                                  free_var_36:	; location of caaadr
  1024 00000D03 [0B0D000000000000]      	dq .undefined_object
  1025                                  .undefined_object:
  1026 00000D0B 05                      	db T_undefined
  1027 00000D0C [9006000000000000]      	dq L_constants + 1680
  1028                                  
  1029                                  free_var_37:	; location of caaar
  1030 00000D14 [1C0D000000000000]      	dq .undefined_object
  1031                                  .undefined_object:
  1032 00000D1C 05                      	db T_undefined
  1033 00000D1D [1106000000000000]      	dq L_constants + 1553
  1034                                  
  1035                                  free_var_38:	; location of caadar
  1036 00000D25 [2D0D000000000000]      	dq .undefined_object
  1037                                  .undefined_object:
  1038 00000D2D 05                      	db T_undefined
  1039 00000D2E [9F06000000000000]      	dq L_constants + 1695
  1040                                  
  1041                                  free_var_39:	; location of caaddr
  1042 00000D36 [3E0D000000000000]      	dq .undefined_object
  1043                                  .undefined_object:
  1044 00000D3E 05                      	db T_undefined
  1045 00000D3F [AE06000000000000]      	dq L_constants + 1710
  1046                                  
  1047                                  free_var_40:	; location of caadr
  1048 00000D47 [4F0D000000000000]      	dq .undefined_object
  1049                                  .undefined_object:
  1050 00000D4F 05                      	db T_undefined
  1051 00000D50 [1F06000000000000]      	dq L_constants + 1567
  1052                                  
  1053                                  free_var_41:	; location of caar
  1054 00000D58 [600D000000000000]      	dq .undefined_object
  1055                                  .undefined_object:
  1056 00000D60 05                      	db T_undefined
  1057 00000D61 [DD05000000000000]      	dq L_constants + 1501
  1058                                  
  1059                                  free_var_42:	; location of cadaar
  1060 00000D69 [710D000000000000]      	dq .undefined_object
  1061                                  .undefined_object:
  1062 00000D71 05                      	db T_undefined
  1063 00000D72 [BD06000000000000]      	dq L_constants + 1725
  1064                                  
  1065                                  free_var_43:	; location of cadadr
  1066 00000D7A [820D000000000000]      	dq .undefined_object
  1067                                  .undefined_object:
  1068 00000D82 05                      	db T_undefined
  1069 00000D83 [CC06000000000000]      	dq L_constants + 1740
  1070                                  
  1071                                  free_var_44:	; location of cadar
  1072 00000D8B [930D000000000000]      	dq .undefined_object
  1073                                  .undefined_object:
  1074 00000D93 05                      	db T_undefined
  1075 00000D94 [2D06000000000000]      	dq L_constants + 1581
  1076                                  
  1077                                  free_var_45:	; location of caddar
  1078 00000D9C [A40D000000000000]      	dq .undefined_object
  1079                                  .undefined_object:
  1080 00000DA4 05                      	db T_undefined
  1081 00000DA5 [DB06000000000000]      	dq L_constants + 1755
  1082                                  
  1083                                  free_var_46:	; location of cadddr
  1084 00000DAD [B50D000000000000]      	dq .undefined_object
  1085                                  .undefined_object:
  1086 00000DB5 05                      	db T_undefined
  1087 00000DB6 [EA06000000000000]      	dq L_constants + 1770
  1088                                  
  1089                                  free_var_47:	; location of caddr
  1090 00000DBE [C60D000000000000]      	dq .undefined_object
  1091                                  .undefined_object:
  1092 00000DC6 05                      	db T_undefined
  1093 00000DC7 [3B06000000000000]      	dq L_constants + 1595
  1094                                  
  1095                                  free_var_48:	; location of cadr
  1096 00000DCF [D70D000000000000]      	dq .undefined_object
  1097                                  .undefined_object:
  1098 00000DD7 05                      	db T_undefined
  1099 00000DD8 [EA05000000000000]      	dq L_constants + 1514
  1100                                  
  1101                                  free_var_49:	; location of car
  1102 00000DE0 [E80D000000000000]      	dq .undefined_object
  1103                                  .undefined_object:
  1104 00000DE8 05                      	db T_undefined
  1105 00000DE9 [1501000000000000]      	dq L_constants + 277
  1106                                  
  1107                                  free_var_50:	; location of cdaaar
  1108 00000DF1 [F90D000000000000]      	dq .undefined_object
  1109                                  .undefined_object:
  1110 00000DF9 05                      	db T_undefined
  1111 00000DFA [F906000000000000]      	dq L_constants + 1785
  1112                                  
  1113                                  free_var_51:	; location of cdaadr
  1114 00000E02 [0A0E000000000000]      	dq .undefined_object
  1115                                  .undefined_object:
  1116 00000E0A 05                      	db T_undefined
  1117 00000E0B [0807000000000000]      	dq L_constants + 1800
  1118                                  
  1119                                  free_var_52:	; location of cdaar
  1120 00000E13 [1B0E000000000000]      	dq .undefined_object
  1121                                  .undefined_object:
  1122 00000E1B 05                      	db T_undefined
  1123 00000E1C [4906000000000000]      	dq L_constants + 1609
  1124                                  
  1125                                  free_var_53:	; location of cdadar
  1126 00000E24 [2C0E000000000000]      	dq .undefined_object
  1127                                  .undefined_object:
  1128 00000E2C 05                      	db T_undefined
  1129 00000E2D [1707000000000000]      	dq L_constants + 1815
  1130                                  
  1131                                  free_var_54:	; location of cdaddr
  1132 00000E35 [3D0E000000000000]      	dq .undefined_object
  1133                                  .undefined_object:
  1134 00000E3D 05                      	db T_undefined
  1135 00000E3E [2607000000000000]      	dq L_constants + 1830
  1136                                  
  1137                                  free_var_55:	; location of cdadr
  1138 00000E46 [4E0E000000000000]      	dq .undefined_object
  1139                                  .undefined_object:
  1140 00000E4E 05                      	db T_undefined
  1141 00000E4F [5706000000000000]      	dq L_constants + 1623
  1142                                  
  1143                                  free_var_56:	; location of cdar
  1144 00000E57 [5F0E000000000000]      	dq .undefined_object
  1145                                  .undefined_object:
  1146 00000E5F 05                      	db T_undefined
  1147 00000E60 [F705000000000000]      	dq L_constants + 1527
  1148                                  
  1149                                  free_var_57:	; location of cddaar
  1150 00000E68 [700E000000000000]      	dq .undefined_object
  1151                                  .undefined_object:
  1152 00000E70 05                      	db T_undefined
  1153 00000E71 [3507000000000000]      	dq L_constants + 1845
  1154                                  
  1155                                  free_var_58:	; location of cddadr
  1156 00000E79 [810E000000000000]      	dq .undefined_object
  1157                                  .undefined_object:
  1158 00000E81 05                      	db T_undefined
  1159 00000E82 [4407000000000000]      	dq L_constants + 1860
  1160                                  
  1161                                  free_var_59:	; location of cddar
  1162 00000E8A [920E000000000000]      	dq .undefined_object
  1163                                  .undefined_object:
  1164 00000E92 05                      	db T_undefined
  1165 00000E93 [6506000000000000]      	dq L_constants + 1637
  1166                                  
  1167                                  free_var_60:	; location of cdddar
  1168 00000E9B [A30E000000000000]      	dq .undefined_object
  1169                                  .undefined_object:
  1170 00000EA3 05                      	db T_undefined
  1171 00000EA4 [5307000000000000]      	dq L_constants + 1875
  1172                                  
  1173                                  free_var_61:	; location of cddddr
  1174 00000EAC [B40E000000000000]      	dq .undefined_object
  1175                                  .undefined_object:
  1176 00000EB4 05                      	db T_undefined
  1177 00000EB5 [6207000000000000]      	dq L_constants + 1890
  1178                                  
  1179                                  free_var_62:	; location of cdddr
  1180 00000EBD [C50E000000000000]      	dq .undefined_object
  1181                                  .undefined_object:
  1182 00000EC5 05                      	db T_undefined
  1183 00000EC6 [7306000000000000]      	dq L_constants + 1651
  1184                                  
  1185                                  free_var_63:	; location of cddr
  1186 00000ECE [D60E000000000000]      	dq .undefined_object
  1187                                  .undefined_object:
  1188 00000ED6 05                      	db T_undefined
  1189 00000ED7 [0406000000000000]      	dq L_constants + 1540
  1190                                  
  1191                                  free_var_64:	; location of cdr
  1192 00000EDF [E70E000000000000]      	dq .undefined_object
  1193                                  .undefined_object:
  1194 00000EE7 05                      	db T_undefined
  1195 00000EE8 [2101000000000000]      	dq L_constants + 289
  1196                                  
  1197                                  free_var_65:	; location of char->integer
  1198 00000EF0 [F80E000000000000]      	dq .undefined_object
  1199                                  .undefined_object:
  1200 00000EF8 05                      	db T_undefined
  1201 00000EF9 [A901000000000000]      	dq L_constants + 425
  1202                                  
  1203                                  free_var_66:	; location of char-downcase
  1204 00000F01 [090F000000000000]      	dq .undefined_object
  1205                                  .undefined_object:
  1206 00000F09 05                      	db T_undefined
  1207 00000F0A [010A000000000000]      	dq L_constants + 2561
  1208                                  
  1209                                  free_var_67:	; location of char-upcase
  1210 00000F12 [1A0F000000000000]      	dq .undefined_object
  1211                                  .undefined_object:
  1212 00000F1A 05                      	db T_undefined
  1213 00000F1B [170A000000000000]      	dq L_constants + 2583
  1214                                  
  1215                                  free_var_68:	; location of char<=?
  1216 00000F23 [2B0F000000000000]      	dq .undefined_object
  1217                                  .undefined_object:
  1218 00000F2B 05                      	db T_undefined
  1219 00000F2C [C309000000000000]      	dq L_constants + 2499
  1220                                  
  1221                                  free_var_69:	; location of char<?
  1222 00000F34 [3C0F000000000000]      	dq .undefined_object
  1223                                  .undefined_object:
  1224 00000F3C 05                      	db T_undefined
  1225 00000F3D [B409000000000000]      	dq L_constants + 2484
  1226                                  
  1227                                  free_var_70:	; location of char=?
  1228 00000F45 [4D0F000000000000]      	dq .undefined_object
  1229                                  .undefined_object:
  1230 00000F4D 05                      	db T_undefined
  1231 00000F4E [D309000000000000]      	dq L_constants + 2515
  1232                                  
  1233                                  free_var_71:	; location of char>=?
  1234 00000F56 [5E0F000000000000]      	dq .undefined_object
  1235                                  .undefined_object:
  1236 00000F5E 05                      	db T_undefined
  1237 00000F5F [F109000000000000]      	dq L_constants + 2545
  1238                                  
  1239                                  free_var_72:	; location of char>?
  1240 00000F67 [6F0F000000000000]      	dq .undefined_object
  1241                                  .undefined_object:
  1242 00000F6F 05                      	db T_undefined
  1243 00000F70 [E209000000000000]      	dq L_constants + 2530
  1244                                  
  1245                                  free_var_73:	; location of cons
  1246 00000F78 [800F000000000000]      	dq .undefined_object
  1247                                  .undefined_object:
  1248 00000F80 05                      	db T_undefined
  1249 00000F81 [DF00000000000000]      	dq L_constants + 223
  1250                                  
  1251                                  free_var_74:	; location of error
  1252 00000F89 [910F000000000000]      	dq .undefined_object
  1253                                  .undefined_object:
  1254 00000F91 05                      	db T_undefined
  1255 00000F92 [1103000000000000]      	dq L_constants + 785
  1256                                  
  1257                                  free_var_75:	; location of fact
  1258 00000F9A [A20F000000000000]      	dq .undefined_object
  1259                                  .undefined_object:
  1260 00000FA2 05                      	db T_undefined
  1261 00000FA3 [2509000000000000]      	dq L_constants + 2341
  1262                                  
  1263                                  free_var_76:	; location of fold-left
  1264 00000FAB [B30F000000000000]      	dq .undefined_object
  1265                                  .undefined_object:
  1266 00000FB3 05                      	db T_undefined
  1267 00000FB4 [3008000000000000]      	dq L_constants + 2096
  1268                                  
  1269                                  free_var_77:	; location of fold-right
  1270 00000FBC [C40F000000000000]      	dq .undefined_object
  1271                                  .undefined_object:
  1272 00000FC4 05                      	db T_undefined
  1273 00000FC5 [5C08000000000000]      	dq L_constants + 2140
  1274                                  
  1275                                  free_var_78:	; location of fraction->real
  1276 00000FCD [D50F000000000000]      	dq .undefined_object
  1277                                  .undefined_object:
  1278 00000FD5 05                      	db T_undefined
  1279 00000FD6 [9201000000000000]      	dq L_constants + 402
  1280                                  
  1281                                  free_var_79:	; location of fraction?
  1282 00000FDE [E60F000000000000]      	dq .undefined_object
  1283                                  .undefined_object:
  1284 00000FE6 05                      	db T_undefined
  1285 00000FE7 [9800000000000000]      	dq L_constants + 152
  1286                                  
  1287                                  free_var_80:	; location of free_var
  1288 00000FEF [F70F000000000000]      	dq .undefined_object
  1289                                  .undefined_object:
  1290 00000FF7 05                      	db T_undefined
  1291 00000FF8 [2B0A000000000000]      	dq L_constants + 2603
  1292                                  
  1293                                  free_var_81:	; location of free_var_lambda
  1294 00001000 [0810000000000000]      	dq .undefined_object
  1295                                  .undefined_object:
  1296 00001008 05                      	db T_undefined
  1297 00001009 [6C0A000000000000]      	dq L_constants + 2668
  1298                                  
  1299                                  free_var_82:	; location of integer->real
  1300 00001011 [1910000000000000]      	dq .undefined_object
  1301                                  .undefined_object:
  1302 00001019 05                      	db T_undefined
  1303 0000101A [7C01000000000000]      	dq L_constants + 380
  1304                                  
  1305                                  free_var_83:	; location of integer?
  1306 00001022 [2A10000000000000]      	dq .undefined_object
  1307                                  .undefined_object:
  1308 0000102A 05                      	db T_undefined
  1309 0000102B [F001000000000000]      	dq L_constants + 496
  1310                                  
  1311                                  free_var_84:	; location of list
  1312 00001033 [3B10000000000000]      	dq .undefined_object
  1313                                  .undefined_object:
  1314 0000103B 05                      	db T_undefined
  1315 0000103C [7F07000000000000]      	dq L_constants + 1919
  1316                                  
  1317                                  free_var_85:	; location of list*
  1318 00001044 [4C10000000000000]      	dq .undefined_object
  1319                                  .undefined_object:
  1320 0000104C 05                      	db T_undefined
  1321 0000104D [B707000000000000]      	dq L_constants + 1975
  1322                                  
  1323                                  free_var_86:	; location of list?
  1324 00001055 [5D10000000000000]      	dq .undefined_object
  1325                                  .undefined_object:
  1326 0000105D 05                      	db T_undefined
  1327 0000105E [7107000000000000]      	dq L_constants + 1905
  1328                                  
  1329                                  free_var_87:	; location of map
  1330 00001066 [6E10000000000000]      	dq .undefined_object
  1331                                  .undefined_object:
  1332 0000106E 05                      	db T_undefined
  1333 0000106F [0508000000000000]      	dq L_constants + 2053
  1334                                  
  1335                                  free_var_88:	; location of not
  1336 00001077 [7F10000000000000]      	dq .undefined_object
  1337                                  .undefined_object:
  1338 0000107F 05                      	db T_undefined
  1339 00001080 [9907000000000000]      	dq L_constants + 1945
  1340                                  
  1341                                  free_var_89:	; location of null?
  1342 00001088 [9010000000000000]      	dq .undefined_object
  1343                                  .undefined_object:
  1344 00001090 05                      	db T_undefined
  1345 00001091 [0600000000000000]      	dq L_constants + 6
  1346                                  
  1347                                  free_var_90:	; location of ormap
  1348 00001099 [A110000000000000]      	dq .undefined_object
  1349                                  .undefined_object:
  1350 000010A1 05                      	db T_undefined
  1351 000010A2 [F707000000000000]      	dq L_constants + 2039
  1352                                  
  1353                                  free_var_91:	; location of pair?
  1354 000010AA [B210000000000000]      	dq .undefined_object
  1355                                  .undefined_object:
  1356 000010B2 05                      	db T_undefined
  1357 000010B3 [1400000000000000]      	dq L_constants + 20
  1358                                  
  1359                                  free_var_92:	; location of rational?
  1360 000010BB [C310000000000000]      	dq .undefined_object
  1361                                  .undefined_object:
  1362 000010C3 05                      	db T_undefined
  1363 000010C4 [A507000000000000]      	dq L_constants + 1957
  1364                                  
  1365                                  free_var_93:	; location of real
  1366 000010CC [D410000000000000]      	dq .undefined_object
  1367                                  .undefined_object:
  1368 000010D4 05                      	db T_undefined
  1369 000010D5 [E008000000000000]      	dq L_constants + 2272
  1370                                  
  1371                                  free_var_94:	; location of real?
  1372 000010DD [E510000000000000]      	dq .undefined_object
  1373                                  .undefined_object:
  1374 000010E5 05                      	db T_undefined
  1375 000010E6 [8A00000000000000]      	dq L_constants + 138
  1376                                  
  1377                                  free_var_95:	; location of reverse
  1378 000010EE [F610000000000000]      	dq .undefined_object
  1379                                  .undefined_object:
  1380 000010F6 05                      	db T_undefined
  1381 000010F7 [2008000000000000]      	dq L_constants + 2080
  1382                                  
  1383                                  free_var_96:	; location of s
  1384 000010FF [0711000000000000]      	dq .undefined_object
  1385                                  .undefined_object:
  1386 00001107 05                      	db T_undefined
  1387 00001108 [C507000000000000]      	dq L_constants + 1989
  1388                                  
  1389                                  free_var_97:	; location of ss
  1390 00001110 [1811000000000000]      	dq .undefined_object
  1391                                  .undefined_object:
  1392 00001118 05                      	db T_undefined
  1393 00001119 [5108000000000000]      	dq L_constants + 2129
  1394                                  
  1395                                  free_var_98:	; location of tail_lambda
  1396 00001121 [2911000000000000]      	dq .undefined_object
  1397                                  .undefined_object:
  1398 00001129 05                      	db T_undefined
  1399 0000112A [450A000000000000]      	dq L_constants + 2629
  1400                                  
  1401                                  free_var_99:	; location of zero?
  1402 00001132 [3A11000000000000]      	dq .undefined_object
  1403                                  .undefined_object:
  1404 0000113A 05                      	db T_undefined
  1405 0000113B [E201000000000000]      	dq L_constants + 482
  1406                                  
  1407                                  
  1408                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1409                                  global main
  1410                                  section .text
  1411                                  main:
  1412 00000000 C8000000                        enter 0, 0
  1413 00000004 6A00                            push 0
  1414 00000006 6A00                            push 0
  1415 00000008 68[C4B30000]                    push Lend
  1416 0000000D C8000000                        enter 0, 0
  1417                                  	; building closure for null?
  1418 00000011 48BF-                   	mov rdi, free_var_89
  1418 00000013 [8810000000000000] 
  1419 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1419 0000001D [52BF000000000000] 
  1420 00000025 E835BD0000              	call bind_primitive
  1421                                  
  1422                                  	; building closure for pair?
  1423 0000002A 48BF-                   	mov rdi, free_var_91
  1423 0000002C [AA10000000000000] 
  1424 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1424 00000036 [84BF000000000000] 
  1425 0000003E E81CBD0000              	call bind_primitive
  1426                                  
  1427                                  	; building closure for real?
  1428 00000043 48BF-                   	mov rdi, free_var_94
  1428 00000045 [DD10000000000000] 
  1429 0000004D 48BE-                   	mov rsi, L_code_ptr_is_real
  1429 0000004F [7CC1000000000000] 
  1430 00000057 E803BD0000              	call bind_primitive
  1431                                  
  1432                                  	; building closure for fraction?
  1433 0000005C 48BF-                   	mov rdi, free_var_79
  1433 0000005E [DE0F000000000000] 
  1434 00000066 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1434 00000068 [AEC1000000000000] 
  1435 00000070 E8EABC0000              	call bind_primitive
  1436                                  
  1437                                  	; building closure for cons
  1438 00000075 48BF-                   	mov rdi, free_var_73
  1438 00000077 [780F000000000000] 
  1439 0000007F 48BE-                   	mov rsi, L_code_ptr_cons
  1439 00000081 [E4C2000000000000] 
  1440 00000089 E8D1BC0000              	call bind_primitive
  1441                                  
  1442                                  	; building closure for car
  1443 0000008E 48BF-                   	mov rdi, free_var_49
  1443 00000090 [E00D000000000000] 
  1444 00000098 48BE-                   	mov rsi, L_code_ptr_car
  1444 0000009A [8DC3000000000000] 
  1445 000000A2 E8B8BC0000              	call bind_primitive
  1446                                  
  1447                                  	; building closure for cdr
  1448 000000A7 48BF-                   	mov rdi, free_var_64
  1448 000000A9 [DF0E000000000000] 
  1449 000000B1 48BE-                   	mov rsi, L_code_ptr_cdr
  1449 000000B3 [B1C3000000000000] 
  1450 000000BB E89FBC0000              	call bind_primitive
  1451                                  
  1452                                  	; building closure for integer->real
  1453 000000C0 48BF-                   	mov rdi, free_var_82
  1453 000000C2 [1110000000000000] 
  1454 000000CA 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  1454 000000CC [6FC4000000000000] 
  1455 000000D4 E886BC0000              	call bind_primitive
  1456                                  
  1457                                  	; building closure for fraction->real
  1458 000000D9 48BF-                   	mov rdi, free_var_78
  1458 000000DB [CD0F000000000000] 
  1459 000000E3 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  1459 000000E5 [9DC4000000000000] 
  1460 000000ED E86DBC0000              	call bind_primitive
  1461                                  
  1462                                  	; building closure for char->integer
  1463 000000F2 48BF-                   	mov rdi, free_var_65
  1463 000000F4 [F00E000000000000] 
  1464 000000FC 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  1464 000000FE [D8C4000000000000] 
  1465 00000106 E854BC0000              	call bind_primitive
  1466                                  
  1467                                  	; building closure for zero?
  1468 0000010B 48BF-                   	mov rdi, free_var_99
  1468 0000010D [3211000000000000] 
  1469 00000115 48BE-                   	mov rsi, L_code_ptr_is_zero
  1469 00000117 [B1C5000000000000] 
  1470 0000011F E83BBC0000              	call bind_primitive
  1471                                  
  1472                                  	; building closure for integer?
  1473 00000124 48BF-                   	mov rdi, free_var_83
  1473 00000126 [2210000000000000] 
  1474 0000012E 48BE-                   	mov rsi, L_code_ptr_is_integer
  1474 00000130 [16C6000000000000] 
  1475 00000138 E822BC0000              	call bind_primitive
  1476                                  
  1477                                  	; building closure for __bin-apply
  1478 0000013D 48BF-                   	mov rdi, free_var_12
  1478 0000013F [6B0B000000000000] 
  1479 00000147 48BE-                   	mov rsi, L_code_ptr_bin_apply
  1479 00000149 [CFBE000000000000] 
  1480 00000151 E809BC0000              	call bind_primitive
  1481                                  
  1482                                  	; building closure for __bin-add-rr
  1483 00000156 48BF-                   	mov rdi, free_var_10
  1483 00000158 [490B000000000000] 
  1484 00000160 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  1484 00000162 [48C6000000000000] 
  1485 0000016A E8F0BB0000              	call bind_primitive
  1486                                  
  1487                                  	; building closure for __bin-sub-rr
  1488 0000016F 48BF-                   	mov rdi, free_var_26
  1488 00000171 [590C000000000000] 
  1489 00000179 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  1489 0000017B [88C6000000000000] 
  1490 00000183 E8D7BB0000              	call bind_primitive
  1491                                  
  1492                                  	; building closure for __bin-mul-rr
  1493 00000188 48BF-                   	mov rdi, free_var_23
  1493 0000018A [260C000000000000] 
  1494 00000192 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  1494 00000194 [C8C6000000000000] 
  1495 0000019C E8BEBB0000              	call bind_primitive
  1496                                  
  1497                                  	; building closure for __bin-div-rr
  1498 000001A1 48BF-                   	mov rdi, free_var_14
  1498 000001A3 [8D0B000000000000] 
  1499 000001AB 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  1499 000001AD [08C7000000000000] 
  1500 000001B5 E8A5BB0000              	call bind_primitive
  1501                                  
  1502                                  	; building closure for __bin-add-qq
  1503 000001BA 48BF-                   	mov rdi, free_var_9
  1503 000001BC [380B000000000000] 
  1504 000001C4 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  1504 000001C6 [92C7000000000000] 
  1505 000001CE E88CBB0000              	call bind_primitive
  1506                                  
  1507                                  	; building closure for __bin-sub-qq
  1508 000001D3 48BF-                   	mov rdi, free_var_25
  1508 000001D5 [480C000000000000] 
  1509 000001DD 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  1509 000001DF [32C8000000000000] 
  1510 000001E7 E873BB0000              	call bind_primitive
  1511                                  
  1512                                  	; building closure for __bin-mul-qq
  1513 000001EC 48BF-                   	mov rdi, free_var_22
  1513 000001EE [150C000000000000] 
  1514 000001F6 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  1514 000001F8 [D7C8000000000000] 
  1515 00000200 E85ABB0000              	call bind_primitive
  1516                                  
  1517                                  	; building closure for __bin-div-qq
  1518 00000205 48BF-                   	mov rdi, free_var_13
  1518 00000207 [7C0B000000000000] 
  1519 0000020F 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  1519 00000211 [71C9000000000000] 
  1520 00000219 E841BB0000              	call bind_primitive
  1521                                  
  1522                                  	; building closure for __bin-add-zz
  1523 0000021E 48BF-                   	mov rdi, free_var_11
  1523 00000220 [5A0B000000000000] 
  1524 00000228 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  1524 0000022A [56C7000000000000] 
  1525 00000232 E828BB0000              	call bind_primitive
  1526                                  
  1527                                  	; building closure for __bin-sub-zz
  1528 00000237 48BF-                   	mov rdi, free_var_27
  1528 00000239 [6A0C000000000000] 
  1529 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  1529 00000243 [F6C7000000000000] 
  1530 0000024B E80FBB0000              	call bind_primitive
  1531                                  
  1532                                  	; building closure for __bin-mul-zz
  1533 00000250 48BF-                   	mov rdi, free_var_24
  1533 00000252 [370C000000000000] 
  1534 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  1534 0000025C [96C8000000000000] 
  1535 00000264 E8F6BA0000              	call bind_primitive
  1536                                  
  1537                                  	; building closure for __bin-div-zz
  1538 00000269 48BF-                   	mov rdi, free_var_15
  1538 0000026B [9E0B000000000000] 
  1539 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  1539 00000275 [2BC9000000000000] 
  1540 0000027D E8DDBA0000              	call bind_primitive
  1541                                  
  1542                                  	; building closure for error
  1543 00000282 48BF-                   	mov rdi, free_var_74
  1543 00000284 [890F000000000000] 
  1544 0000028C 48BE-                   	mov rsi, L_code_ptr_error
  1544 0000028E [5BCA000000000000] 
  1545 00000296 E8C4BA0000              	call bind_primitive
  1546                                  
  1547                                  	; building closure for __bin-less-than-rr
  1548 0000029B 48BF-                   	mov rdi, free_var_20
  1548 0000029D [F30B000000000000] 
  1549 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  1549 000002A7 [17CB000000000000] 
  1550 000002AF E8ABBA0000              	call bind_primitive
  1551                                  
  1552                                  	; building closure for __bin-less-than-qq
  1553 000002B4 48BF-                   	mov rdi, free_var_19
  1553 000002B6 [E20B000000000000] 
  1554 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  1554 000002C0 [B9CB000000000000] 
  1555 000002C8 E892BA0000              	call bind_primitive
  1556                                  
  1557                                  	; building closure for __bin-less-than-zz
  1558 000002CD 48BF-                   	mov rdi, free_var_21
  1558 000002CF [040C000000000000] 
  1559 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  1559 000002D9 [6ACB000000000000] 
  1560 000002E1 E879BA0000              	call bind_primitive
  1561                                  
  1562                                  	; building closure for __bin-equal-rr
  1563 000002E6 48BF-                   	mov rdi, free_var_17
  1563 000002E8 [C00B000000000000] 
  1564 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  1564 000002F2 [18CC000000000000] 
  1565 000002FA E860BA0000              	call bind_primitive
  1566                                  
  1567                                  	; building closure for __bin-equal-qq
  1568 000002FF 48BF-                   	mov rdi, free_var_16
  1568 00000301 [AF0B000000000000] 
  1569 00000309 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  1569 0000030B [BACC000000000000] 
  1570 00000313 E847BA0000              	call bind_primitive
  1571                                  
  1572                                  	; building closure for __bin-equal-zz
  1573 00000318 48BF-                   	mov rdi, free_var_18
  1573 0000031A [D10B000000000000] 
  1574 00000322 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  1574 00000324 [6BCC000000000000] 
  1575 0000032C E82EBA0000              	call bind_primitive
  1576                                  
  1577                                  	; building closure for __integer-to-fraction
  1578 00000331 48BF-                   	mov rdi, free_var_29
  1578 00000333 [8C0C000000000000] 
  1579 0000033B 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  1579 0000033D [09C5000000000000] 
  1580 00000345 E815BA0000              	call bind_primitive
  1581                                  
  1582 0000034A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1583 0000034F E8DBB10000              	call malloc
  1584 00000354 50                      	push rax
  1585 00000355 BF00000000              	mov rdi, 8 * 0	; new rib
  1586 0000035A E8D0B10000              	call malloc
  1587 0000035F 50                      	push rax
  1588 00000360 BF08000000              	mov rdi, 8 * 1	; extended env
  1589 00000365 E8C5B10000              	call malloc
  1590 0000036A 488B7D10                	mov rdi, ENV
  1591 0000036E BE00000000              	mov rsi, 0
  1592 00000373 BA01000000              	mov rdx, 1
  1593                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  1594 00000378 4883FE00                	cmp rsi, 0
  1595 0000037C 7410                    	je .L_lambda_simple_env_end_0001
  1596 0000037E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1597 00000382 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1598 00000386 48FFC6                  	inc rsi
  1599 00000389 48FFC2                  	inc rdx
  1600 0000038C EBEA                    	jmp .L_lambda_simple_env_loop_0001
  1601                                  .L_lambda_simple_env_end_0001:
  1602 0000038E 5B                      	pop rbx
  1603 0000038F BE00000000              	mov rsi, 0
  1604                                  .L_lambda_simple_params_loop_0001:	; copy params
  1605 00000394 4883FE00                	cmp rsi, 0
  1606 00000398 740E                    	je .L_lambda_simple_params_end_0001
  1607 0000039A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1608 0000039F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1609 000003A3 48FFC6                  	inc rsi
  1610 000003A6 EBEC                    	jmp .L_lambda_simple_params_loop_0001
  1611                                  .L_lambda_simple_params_end_0001:
  1612 000003A8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1613 000003AB 4889C3                  	mov rbx, rax
  1614 000003AE 58                      	pop rax
  1615 000003AF C60004                  	mov byte [rax], T_closure
  1616 000003B2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1617 000003B6 48C74009[C3030000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  1618 000003BE E9A4000000              	jmp .L_lambda_simple_end_0001
  1619                                  .L_lambda_simple_code_0001:	; lambda-simple body
  1620 000003C3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1621 000003C9 740B                    	je .L_lambda_simple_arity_check_ok_0001
  1622 000003CB FF742410                	push qword [rsp + 8 * 2]
  1623 000003CF 6A01                    	push 1
  1624 000003D1 E912B10000              	jmp L_error_incorrect_arity_simple
  1625                                  .L_lambda_simple_arity_check_ok_0001:
  1626 000003D6 C8000000                	enter 0, 0
  1627                                  	; preparing a tail-call
  1628                                  	; preparing a non-tail-call
  1629 000003DA 488B4520                	mov rax, PARAM(0)	; param x
  1630 000003DE 50                      	push rax
  1631 000003DF 6A01                    	push 1	; arg count
  1632 000003E1 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  1633 000003E9 803805                  	cmp byte [rax], T_undefined
  1634 000003EC 0F8410B00000            	je L_error_fvar_undefined
  1635 000003F2 803804                  	cmp byte [rax], T_closure
  1636 000003F5 0F858BB00000            	jne L_error_non_closure
  1637 000003FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  1638 000003FE FF5009                  	call SOB_CLOSURE_CODE(rax)
  1639 00000401 50                      	push rax
  1640 00000402 6A01                    	push 1	; arg count
  1641 00000404 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  1642 0000040C 803805                  	cmp byte [rax], T_undefined
  1643 0000040F 0F84EDAF0000            	je L_error_fvar_undefined
  1644 00000415 803804                  	cmp byte [rax], T_closure
  1645 00000418 0F8568B00000            	jne L_error_non_closure
  1646 0000041E FF7001                  	push SOB_CLOSURE_ENV(rax)
  1647 00000421 FF7508                  	push qword [rbp + 8 * 1]
  1648                                   ; old ret addr
  1649 00000424 FF7500                  	push qword [rbp]
  1650                                   ; restore the old rbp
  1651 00000427 BB01000000              	mov rbx, 1
  1652 0000042C 4883C303                	add rbx, 3
  1653 00000430 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  1654 00000434 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  1655 00000439 4C8D4DF8                	lea r9, [rbp - 8]
  1656 0000043D B905000000              	mov rcx, 5
  1657                                  .L_tc_recycle_frame_loop_0001:
  1658 00000442 4883F900                	cmp rcx, 0
  1659 00000446 7413                    	je .L_tc_recycle_frame_done_0001
  1660 00000448 4D8B11                  	mov r10, qword [r9]
  1661 0000044B 4D8910                  	mov qword [r8], r10
  1662 0000044E 4983E808                	sub r8, 8
  1663 00000452 4983E908                	sub r9, 8
  1664 00000456 48FFC9                  	dec rcx
  1665 00000459 EBE7                    	jmp .L_tc_recycle_frame_loop_0001
  1666                                  .L_tc_recycle_frame_done_0001:
  1667 0000045B 498D6008                	lea rsp, [r8 + 8]
  1668 0000045F 5D                      	pop rbp ; restore the old rbp
  1669 00000460 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1670 00000463 C9                      	leave
  1671 00000464 C21800                  	ret AND_KILL_FRAME(1)
  1672                                  .L_lambda_simple_end_0001:	; new closure is in rax
  1673 00000467 48890425[580D0000]      	mov qword [free_var_41], rax
  1674 0000046F 48B8-                   	mov rax, sob_void
  1674 00000471 [0000000000000000] 
  1675                                  
  1676 00000479 4889C7                  	mov rdi, rax
  1677 0000047C E803B30000              	call print_sexpr_if_not_void
  1678 00000481 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1679 00000486 E8A4B00000              	call malloc
  1680 0000048B 50                      	push rax
  1681 0000048C BF00000000              	mov rdi, 8 * 0	; new rib
  1682 00000491 E899B00000              	call malloc
  1683 00000496 50                      	push rax
  1684 00000497 BF08000000              	mov rdi, 8 * 1	; extended env
  1685 0000049C E88EB00000              	call malloc
  1686 000004A1 488B7D10                	mov rdi, ENV
  1687 000004A5 BE00000000              	mov rsi, 0
  1688 000004AA BA01000000              	mov rdx, 1
  1689                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  1690 000004AF 4883FE00                	cmp rsi, 0
  1691 000004B3 7410                    	je .L_lambda_simple_env_end_0002
  1692 000004B5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1693 000004B9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1694 000004BD 48FFC6                  	inc rsi
  1695 000004C0 48FFC2                  	inc rdx
  1696 000004C3 EBEA                    	jmp .L_lambda_simple_env_loop_0002
  1697                                  .L_lambda_simple_env_end_0002:
  1698 000004C5 5B                      	pop rbx
  1699 000004C6 BE00000000              	mov rsi, 0
  1700                                  .L_lambda_simple_params_loop_0002:	; copy params
  1701 000004CB 4883FE00                	cmp rsi, 0
  1702 000004CF 740E                    	je .L_lambda_simple_params_end_0002
  1703 000004D1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1704 000004D6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1705 000004DA 48FFC6                  	inc rsi
  1706 000004DD EBEC                    	jmp .L_lambda_simple_params_loop_0002
  1707                                  .L_lambda_simple_params_end_0002:
  1708 000004DF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1709 000004E2 4889C3                  	mov rbx, rax
  1710 000004E5 58                      	pop rax
  1711 000004E6 C60004                  	mov byte [rax], T_closure
  1712 000004E9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1713 000004ED 48C74009[FA040000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  1714 000004F5 E9A4000000              	jmp .L_lambda_simple_end_0002
  1715                                  .L_lambda_simple_code_0002:	; lambda-simple body
  1716 000004FA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1717 00000500 740B                    	je .L_lambda_simple_arity_check_ok_0002
  1718 00000502 FF742410                	push qword [rsp + 8 * 2]
  1719 00000506 6A01                    	push 1
  1720 00000508 E9DBAF0000              	jmp L_error_incorrect_arity_simple
  1721                                  .L_lambda_simple_arity_check_ok_0002:
  1722 0000050D C8000000                	enter 0, 0
  1723                                  	; preparing a tail-call
  1724                                  	; preparing a non-tail-call
  1725 00000511 488B4520                	mov rax, PARAM(0)	; param x
  1726 00000515 50                      	push rax
  1727 00000516 6A01                    	push 1	; arg count
  1728 00000518 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  1729 00000520 803805                  	cmp byte [rax], T_undefined
  1730 00000523 0F84D9AE0000            	je L_error_fvar_undefined
  1731 00000529 803804                  	cmp byte [rax], T_closure
  1732 0000052C 0F8554AF0000            	jne L_error_non_closure
  1733 00000532 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1734 00000535 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1735 00000538 50                      	push rax
  1736 00000539 6A01                    	push 1	; arg count
  1737 0000053B 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  1738 00000543 803805                  	cmp byte [rax], T_undefined
  1739 00000546 0F84B6AE0000            	je L_error_fvar_undefined
  1740 0000054C 803804                  	cmp byte [rax], T_closure
  1741 0000054F 0F8531AF0000            	jne L_error_non_closure
  1742 00000555 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1743 00000558 FF7508                  	push qword [rbp + 8 * 1]
  1744                                   ; old ret addr
  1745 0000055B FF7500                  	push qword [rbp]
  1746                                   ; restore the old rbp
  1747 0000055E BB01000000              	mov rbx, 1
  1748 00000563 4883C303                	add rbx, 3
  1749 00000567 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  1750 0000056B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  1751 00000570 4C8D4DF8                	lea r9, [rbp - 8]
  1752 00000574 B905000000              	mov rcx, 5
  1753                                  .L_tc_recycle_frame_loop_0002:
  1754 00000579 4883F900                	cmp rcx, 0
  1755 0000057D 7413                    	je .L_tc_recycle_frame_done_0002
  1756 0000057F 4D8B11                  	mov r10, qword [r9]
  1757 00000582 4D8910                  	mov qword [r8], r10
  1758 00000585 4983E808                	sub r8, 8
  1759 00000589 4983E908                	sub r9, 8
  1760 0000058D 48FFC9                  	dec rcx
  1761 00000590 EBE7                    	jmp .L_tc_recycle_frame_loop_0002
  1762                                  .L_tc_recycle_frame_done_0002:
  1763 00000592 498D6008                	lea rsp, [r8 + 8]
  1764 00000596 5D                      	pop rbp ; restore the old rbp
  1765 00000597 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1766 0000059A C9                      	leave
  1767 0000059B C21800                  	ret AND_KILL_FRAME(1)
  1768                                  .L_lambda_simple_end_0002:	; new closure is in rax
  1769 0000059E 48890425[CF0D0000]      	mov qword [free_var_48], rax
  1770 000005A6 48B8-                   	mov rax, sob_void
  1770 000005A8 [0000000000000000] 
  1771                                  
  1772 000005B0 4889C7                  	mov rdi, rax
  1773 000005B3 E8CCB10000              	call print_sexpr_if_not_void
  1774 000005B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1775 000005BD E86DAF0000              	call malloc
  1776 000005C2 50                      	push rax
  1777 000005C3 BF00000000              	mov rdi, 8 * 0	; new rib
  1778 000005C8 E862AF0000              	call malloc
  1779 000005CD 50                      	push rax
  1780 000005CE BF08000000              	mov rdi, 8 * 1	; extended env
  1781 000005D3 E857AF0000              	call malloc
  1782 000005D8 488B7D10                	mov rdi, ENV
  1783 000005DC BE00000000              	mov rsi, 0
  1784 000005E1 BA01000000              	mov rdx, 1
  1785                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  1786 000005E6 4883FE00                	cmp rsi, 0
  1787 000005EA 7410                    	je .L_lambda_simple_env_end_0003
  1788 000005EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1789 000005F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1790 000005F4 48FFC6                  	inc rsi
  1791 000005F7 48FFC2                  	inc rdx
  1792 000005FA EBEA                    	jmp .L_lambda_simple_env_loop_0003
  1793                                  .L_lambda_simple_env_end_0003:
  1794 000005FC 5B                      	pop rbx
  1795 000005FD BE00000000              	mov rsi, 0
  1796                                  .L_lambda_simple_params_loop_0003:	; copy params
  1797 00000602 4883FE00                	cmp rsi, 0
  1798 00000606 740E                    	je .L_lambda_simple_params_end_0003
  1799 00000608 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1800 0000060D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1801 00000611 48FFC6                  	inc rsi
  1802 00000614 EBEC                    	jmp .L_lambda_simple_params_loop_0003
  1803                                  .L_lambda_simple_params_end_0003:
  1804 00000616 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1805 00000619 4889C3                  	mov rbx, rax
  1806 0000061C 58                      	pop rax
  1807 0000061D C60004                  	mov byte [rax], T_closure
  1808 00000620 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1809 00000624 48C74009[31060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  1810 0000062C E9A4000000              	jmp .L_lambda_simple_end_0003
  1811                                  .L_lambda_simple_code_0003:	; lambda-simple body
  1812 00000631 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1813 00000637 740B                    	je .L_lambda_simple_arity_check_ok_0003
  1814 00000639 FF742410                	push qword [rsp + 8 * 2]
  1815 0000063D 6A01                    	push 1
  1816 0000063F E9A4AE0000              	jmp L_error_incorrect_arity_simple
  1817                                  .L_lambda_simple_arity_check_ok_0003:
  1818 00000644 C8000000                	enter 0, 0
  1819                                  	; preparing a tail-call
  1820                                  	; preparing a non-tail-call
  1821 00000648 488B4520                	mov rax, PARAM(0)	; param x
  1822 0000064C 50                      	push rax
  1823 0000064D 6A01                    	push 1	; arg count
  1824 0000064F 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  1825 00000657 803805                  	cmp byte [rax], T_undefined
  1826 0000065A 0F84A2AD0000            	je L_error_fvar_undefined
  1827 00000660 803804                  	cmp byte [rax], T_closure
  1828 00000663 0F851DAE0000            	jne L_error_non_closure
  1829 00000669 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1830 0000066C FF5009                  	call SOB_CLOSURE_CODE(rax)
  1831 0000066F 50                      	push rax
  1832 00000670 6A01                    	push 1	; arg count
  1833 00000672 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  1834 0000067A 803805                  	cmp byte [rax], T_undefined
  1835 0000067D 0F847FAD0000            	je L_error_fvar_undefined
  1836 00000683 803804                  	cmp byte [rax], T_closure
  1837 00000686 0F85FAAD0000            	jne L_error_non_closure
  1838 0000068C FF7001                  	push SOB_CLOSURE_ENV(rax)
  1839 0000068F FF7508                  	push qword [rbp + 8 * 1]
  1840                                   ; old ret addr
  1841 00000692 FF7500                  	push qword [rbp]
  1842                                   ; restore the old rbp
  1843 00000695 BB01000000              	mov rbx, 1
  1844 0000069A 4883C303                	add rbx, 3
  1845 0000069E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  1846 000006A2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  1847 000006A7 4C8D4DF8                	lea r9, [rbp - 8]
  1848 000006AB B905000000              	mov rcx, 5
  1849                                  .L_tc_recycle_frame_loop_0003:
  1850 000006B0 4883F900                	cmp rcx, 0
  1851 000006B4 7413                    	je .L_tc_recycle_frame_done_0003
  1852 000006B6 4D8B11                  	mov r10, qword [r9]
  1853 000006B9 4D8910                  	mov qword [r8], r10
  1854 000006BC 4983E808                	sub r8, 8
  1855 000006C0 4983E908                	sub r9, 8
  1856 000006C4 48FFC9                  	dec rcx
  1857 000006C7 EBE7                    	jmp .L_tc_recycle_frame_loop_0003
  1858                                  .L_tc_recycle_frame_done_0003:
  1859 000006C9 498D6008                	lea rsp, [r8 + 8]
  1860 000006CD 5D                      	pop rbp ; restore the old rbp
  1861 000006CE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1862 000006D1 C9                      	leave
  1863 000006D2 C21800                  	ret AND_KILL_FRAME(1)
  1864                                  .L_lambda_simple_end_0003:	; new closure is in rax
  1865 000006D5 48890425[570E0000]      	mov qword [free_var_56], rax
  1866 000006DD 48B8-                   	mov rax, sob_void
  1866 000006DF [0000000000000000] 
  1867                                  
  1868 000006E7 4889C7                  	mov rdi, rax
  1869 000006EA E895B00000              	call print_sexpr_if_not_void
  1870 000006EF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1871 000006F4 E836AE0000              	call malloc
  1872 000006F9 50                      	push rax
  1873 000006FA BF00000000              	mov rdi, 8 * 0	; new rib
  1874 000006FF E82BAE0000              	call malloc
  1875 00000704 50                      	push rax
  1876 00000705 BF08000000              	mov rdi, 8 * 1	; extended env
  1877 0000070A E820AE0000              	call malloc
  1878 0000070F 488B7D10                	mov rdi, ENV
  1879 00000713 BE00000000              	mov rsi, 0
  1880 00000718 BA01000000              	mov rdx, 1
  1881                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  1882 0000071D 4883FE00                	cmp rsi, 0
  1883 00000721 7410                    	je .L_lambda_simple_env_end_0004
  1884 00000723 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1885 00000727 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1886 0000072B 48FFC6                  	inc rsi
  1887 0000072E 48FFC2                  	inc rdx
  1888 00000731 EBEA                    	jmp .L_lambda_simple_env_loop_0004
  1889                                  .L_lambda_simple_env_end_0004:
  1890 00000733 5B                      	pop rbx
  1891 00000734 BE00000000              	mov rsi, 0
  1892                                  .L_lambda_simple_params_loop_0004:	; copy params
  1893 00000739 4883FE00                	cmp rsi, 0
  1894 0000073D 740E                    	je .L_lambda_simple_params_end_0004
  1895 0000073F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1896 00000744 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1897 00000748 48FFC6                  	inc rsi
  1898 0000074B EBEC                    	jmp .L_lambda_simple_params_loop_0004
  1899                                  .L_lambda_simple_params_end_0004:
  1900 0000074D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1901 00000750 4889C3                  	mov rbx, rax
  1902 00000753 58                      	pop rax
  1903 00000754 C60004                  	mov byte [rax], T_closure
  1904 00000757 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1905 0000075B 48C74009[68070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  1906 00000763 E9A4000000              	jmp .L_lambda_simple_end_0004
  1907                                  .L_lambda_simple_code_0004:	; lambda-simple body
  1908 00000768 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1909 0000076E 740B                    	je .L_lambda_simple_arity_check_ok_0004
  1910 00000770 FF742410                	push qword [rsp + 8 * 2]
  1911 00000774 6A01                    	push 1
  1912 00000776 E96DAD0000              	jmp L_error_incorrect_arity_simple
  1913                                  .L_lambda_simple_arity_check_ok_0004:
  1914 0000077B C8000000                	enter 0, 0
  1915                                  	; preparing a tail-call
  1916                                  	; preparing a non-tail-call
  1917 0000077F 488B4520                	mov rax, PARAM(0)	; param x
  1918 00000783 50                      	push rax
  1919 00000784 6A01                    	push 1	; arg count
  1920 00000786 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  1921 0000078E 803805                  	cmp byte [rax], T_undefined
  1922 00000791 0F846BAC0000            	je L_error_fvar_undefined
  1923 00000797 803804                  	cmp byte [rax], T_closure
  1924 0000079A 0F85E6AC0000            	jne L_error_non_closure
  1925 000007A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1926 000007A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1927 000007A6 50                      	push rax
  1928 000007A7 6A01                    	push 1	; arg count
  1929 000007A9 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  1930 000007B1 803805                  	cmp byte [rax], T_undefined
  1931 000007B4 0F8448AC0000            	je L_error_fvar_undefined
  1932 000007BA 803804                  	cmp byte [rax], T_closure
  1933 000007BD 0F85C3AC0000            	jne L_error_non_closure
  1934 000007C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1935 000007C6 FF7508                  	push qword [rbp + 8 * 1]
  1936                                   ; old ret addr
  1937 000007C9 FF7500                  	push qword [rbp]
  1938                                   ; restore the old rbp
  1939 000007CC BB01000000              	mov rbx, 1
  1940 000007D1 4883C303                	add rbx, 3
  1941 000007D5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  1942 000007D9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  1943 000007DE 4C8D4DF8                	lea r9, [rbp - 8]
  1944 000007E2 B905000000              	mov rcx, 5
  1945                                  .L_tc_recycle_frame_loop_0004:
  1946 000007E7 4883F900                	cmp rcx, 0
  1947 000007EB 7413                    	je .L_tc_recycle_frame_done_0004
  1948 000007ED 4D8B11                  	mov r10, qword [r9]
  1949 000007F0 4D8910                  	mov qword [r8], r10
  1950 000007F3 4983E808                	sub r8, 8
  1951 000007F7 4983E908                	sub r9, 8
  1952 000007FB 48FFC9                  	dec rcx
  1953 000007FE EBE7                    	jmp .L_tc_recycle_frame_loop_0004
  1954                                  .L_tc_recycle_frame_done_0004:
  1955 00000800 498D6008                	lea rsp, [r8 + 8]
  1956 00000804 5D                      	pop rbp ; restore the old rbp
  1957 00000805 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1958 00000808 C9                      	leave
  1959 00000809 C21800                  	ret AND_KILL_FRAME(1)
  1960                                  .L_lambda_simple_end_0004:	; new closure is in rax
  1961 0000080C 48890425[CE0E0000]      	mov qword [free_var_63], rax
  1962 00000814 48B8-                   	mov rax, sob_void
  1962 00000816 [0000000000000000] 
  1963                                  
  1964 0000081E 4889C7                  	mov rdi, rax
  1965 00000821 E85EAF0000              	call print_sexpr_if_not_void
  1966 00000826 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1967 0000082B E8FFAC0000              	call malloc
  1968 00000830 50                      	push rax
  1969 00000831 BF00000000              	mov rdi, 8 * 0	; new rib
  1970 00000836 E8F4AC0000              	call malloc
  1971 0000083B 50                      	push rax
  1972 0000083C BF08000000              	mov rdi, 8 * 1	; extended env
  1973 00000841 E8E9AC0000              	call malloc
  1974 00000846 488B7D10                	mov rdi, ENV
  1975 0000084A BE00000000              	mov rsi, 0
  1976 0000084F BA01000000              	mov rdx, 1
  1977                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  1978 00000854 4883FE00                	cmp rsi, 0
  1979 00000858 7410                    	je .L_lambda_simple_env_end_0005
  1980 0000085A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1981 0000085E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1982 00000862 48FFC6                  	inc rsi
  1983 00000865 48FFC2                  	inc rdx
  1984 00000868 EBEA                    	jmp .L_lambda_simple_env_loop_0005
  1985                                  .L_lambda_simple_env_end_0005:
  1986 0000086A 5B                      	pop rbx
  1987 0000086B BE00000000              	mov rsi, 0
  1988                                  .L_lambda_simple_params_loop_0005:	; copy params
  1989 00000870 4883FE00                	cmp rsi, 0
  1990 00000874 740E                    	je .L_lambda_simple_params_end_0005
  1991 00000876 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1992 0000087B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1993 0000087F 48FFC6                  	inc rsi
  1994 00000882 EBEC                    	jmp .L_lambda_simple_params_loop_0005
  1995                                  .L_lambda_simple_params_end_0005:
  1996 00000884 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1997 00000887 4889C3                  	mov rbx, rax
  1998 0000088A 58                      	pop rax
  1999 0000088B C60004                  	mov byte [rax], T_closure
  2000 0000088E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2001 00000892 48C74009[9F080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2002 0000089A E9A4000000              	jmp .L_lambda_simple_end_0005
  2003                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2004 0000089F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2005 000008A5 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2006 000008A7 FF742410                	push qword [rsp + 8 * 2]
  2007 000008AB 6A01                    	push 1
  2008 000008AD E936AC0000              	jmp L_error_incorrect_arity_simple
  2009                                  .L_lambda_simple_arity_check_ok_0005:
  2010 000008B2 C8000000                	enter 0, 0
  2011                                  	; preparing a tail-call
  2012                                  	; preparing a non-tail-call
  2013 000008B6 488B4520                	mov rax, PARAM(0)	; param x
  2014 000008BA 50                      	push rax
  2015 000008BB 6A01                    	push 1	; arg count
  2016 000008BD 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  2017 000008C5 803805                  	cmp byte [rax], T_undefined
  2018 000008C8 0F8434AB0000            	je L_error_fvar_undefined
  2019 000008CE 803804                  	cmp byte [rax], T_closure
  2020 000008D1 0F85AFAB0000            	jne L_error_non_closure
  2021 000008D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2022 000008DA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2023 000008DD 50                      	push rax
  2024 000008DE 6A01                    	push 1	; arg count
  2025 000008E0 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  2026 000008E8 803805                  	cmp byte [rax], T_undefined
  2027 000008EB 0F8411AB0000            	je L_error_fvar_undefined
  2028 000008F1 803804                  	cmp byte [rax], T_closure
  2029 000008F4 0F858CAB0000            	jne L_error_non_closure
  2030 000008FA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2031 000008FD FF7508                  	push qword [rbp + 8 * 1]
  2032                                   ; old ret addr
  2033 00000900 FF7500                  	push qword [rbp]
  2034                                   ; restore the old rbp
  2035 00000903 BB01000000              	mov rbx, 1
  2036 00000908 4883C303                	add rbx, 3
  2037 0000090C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2038 00000910 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2039 00000915 4C8D4DF8                	lea r9, [rbp - 8]
  2040 00000919 B905000000              	mov rcx, 5
  2041                                  .L_tc_recycle_frame_loop_0005:
  2042 0000091E 4883F900                	cmp rcx, 0
  2043 00000922 7413                    	je .L_tc_recycle_frame_done_0005
  2044 00000924 4D8B11                  	mov r10, qword [r9]
  2045 00000927 4D8910                  	mov qword [r8], r10
  2046 0000092A 4983E808                	sub r8, 8
  2047 0000092E 4983E908                	sub r9, 8
  2048 00000932 48FFC9                  	dec rcx
  2049 00000935 EBE7                    	jmp .L_tc_recycle_frame_loop_0005
  2050                                  .L_tc_recycle_frame_done_0005:
  2051 00000937 498D6008                	lea rsp, [r8 + 8]
  2052 0000093B 5D                      	pop rbp ; restore the old rbp
  2053 0000093C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2054 0000093F C9                      	leave
  2055 00000940 C21800                  	ret AND_KILL_FRAME(1)
  2056                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2057 00000943 48890425[140D0000]      	mov qword [free_var_37], rax
  2058 0000094B 48B8-                   	mov rax, sob_void
  2058 0000094D [0000000000000000] 
  2059                                  
  2060 00000955 4889C7                  	mov rdi, rax
  2061 00000958 E827AE0000              	call print_sexpr_if_not_void
  2062 0000095D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2063 00000962 E8C8AB0000              	call malloc
  2064 00000967 50                      	push rax
  2065 00000968 BF00000000              	mov rdi, 8 * 0	; new rib
  2066 0000096D E8BDAB0000              	call malloc
  2067 00000972 50                      	push rax
  2068 00000973 BF08000000              	mov rdi, 8 * 1	; extended env
  2069 00000978 E8B2AB0000              	call malloc
  2070 0000097D 488B7D10                	mov rdi, ENV
  2071 00000981 BE00000000              	mov rsi, 0
  2072 00000986 BA01000000              	mov rdx, 1
  2073                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2074 0000098B 4883FE00                	cmp rsi, 0
  2075 0000098F 7410                    	je .L_lambda_simple_env_end_0006
  2076 00000991 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2077 00000995 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2078 00000999 48FFC6                  	inc rsi
  2079 0000099C 48FFC2                  	inc rdx
  2080 0000099F EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2081                                  .L_lambda_simple_env_end_0006:
  2082 000009A1 5B                      	pop rbx
  2083 000009A2 BE00000000              	mov rsi, 0
  2084                                  .L_lambda_simple_params_loop_0006:	; copy params
  2085 000009A7 4883FE00                	cmp rsi, 0
  2086 000009AB 740E                    	je .L_lambda_simple_params_end_0006
  2087 000009AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2088 000009B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2089 000009B6 48FFC6                  	inc rsi
  2090 000009B9 EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2091                                  .L_lambda_simple_params_end_0006:
  2092 000009BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2093 000009BE 4889C3                  	mov rbx, rax
  2094 000009C1 58                      	pop rax
  2095 000009C2 C60004                  	mov byte [rax], T_closure
  2096 000009C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2097 000009C9 48C74009[D6090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2098 000009D1 E9A4000000              	jmp .L_lambda_simple_end_0006
  2099                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2100 000009D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2101 000009DC 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2102 000009DE FF742410                	push qword [rsp + 8 * 2]
  2103 000009E2 6A01                    	push 1
  2104 000009E4 E9FFAA0000              	jmp L_error_incorrect_arity_simple
  2105                                  .L_lambda_simple_arity_check_ok_0006:
  2106 000009E9 C8000000                	enter 0, 0
  2107                                  	; preparing a tail-call
  2108                                  	; preparing a non-tail-call
  2109 000009ED 488B4520                	mov rax, PARAM(0)	; param x
  2110 000009F1 50                      	push rax
  2111 000009F2 6A01                    	push 1	; arg count
  2112 000009F4 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  2113 000009FC 803805                  	cmp byte [rax], T_undefined
  2114 000009FF 0F84FDA90000            	je L_error_fvar_undefined
  2115 00000A05 803804                  	cmp byte [rax], T_closure
  2116 00000A08 0F8578AA0000            	jne L_error_non_closure
  2117 00000A0E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2118 00000A11 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2119 00000A14 50                      	push rax
  2120 00000A15 6A01                    	push 1	; arg count
  2121 00000A17 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  2122 00000A1F 803805                  	cmp byte [rax], T_undefined
  2123 00000A22 0F84DAA90000            	je L_error_fvar_undefined
  2124 00000A28 803804                  	cmp byte [rax], T_closure
  2125 00000A2B 0F8555AA0000            	jne L_error_non_closure
  2126 00000A31 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2127 00000A34 FF7508                  	push qword [rbp + 8 * 1]
  2128                                   ; old ret addr
  2129 00000A37 FF7500                  	push qword [rbp]
  2130                                   ; restore the old rbp
  2131 00000A3A BB01000000              	mov rbx, 1
  2132 00000A3F 4883C303                	add rbx, 3
  2133 00000A43 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2134 00000A47 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2135 00000A4C 4C8D4DF8                	lea r9, [rbp - 8]
  2136 00000A50 B905000000              	mov rcx, 5
  2137                                  .L_tc_recycle_frame_loop_0006:
  2138 00000A55 4883F900                	cmp rcx, 0
  2139 00000A59 7413                    	je .L_tc_recycle_frame_done_0006
  2140 00000A5B 4D8B11                  	mov r10, qword [r9]
  2141 00000A5E 4D8910                  	mov qword [r8], r10
  2142 00000A61 4983E808                	sub r8, 8
  2143 00000A65 4983E908                	sub r9, 8
  2144 00000A69 48FFC9                  	dec rcx
  2145 00000A6C EBE7                    	jmp .L_tc_recycle_frame_loop_0006
  2146                                  .L_tc_recycle_frame_done_0006:
  2147 00000A6E 498D6008                	lea rsp, [r8 + 8]
  2148 00000A72 5D                      	pop rbp ; restore the old rbp
  2149 00000A73 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2150 00000A76 C9                      	leave
  2151 00000A77 C21800                  	ret AND_KILL_FRAME(1)
  2152                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2153 00000A7A 48890425[470D0000]      	mov qword [free_var_40], rax
  2154 00000A82 48B8-                   	mov rax, sob_void
  2154 00000A84 [0000000000000000] 
  2155                                  
  2156 00000A8C 4889C7                  	mov rdi, rax
  2157 00000A8F E8F0AC0000              	call print_sexpr_if_not_void
  2158 00000A94 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2159 00000A99 E891AA0000              	call malloc
  2160 00000A9E 50                      	push rax
  2161 00000A9F BF00000000              	mov rdi, 8 * 0	; new rib
  2162 00000AA4 E886AA0000              	call malloc
  2163 00000AA9 50                      	push rax
  2164 00000AAA BF08000000              	mov rdi, 8 * 1	; extended env
  2165 00000AAF E87BAA0000              	call malloc
  2166 00000AB4 488B7D10                	mov rdi, ENV
  2167 00000AB8 BE00000000              	mov rsi, 0
  2168 00000ABD BA01000000              	mov rdx, 1
  2169                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2170 00000AC2 4883FE00                	cmp rsi, 0
  2171 00000AC6 7410                    	je .L_lambda_simple_env_end_0007
  2172 00000AC8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2173 00000ACC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2174 00000AD0 48FFC6                  	inc rsi
  2175 00000AD3 48FFC2                  	inc rdx
  2176 00000AD6 EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2177                                  .L_lambda_simple_env_end_0007:
  2178 00000AD8 5B                      	pop rbx
  2179 00000AD9 BE00000000              	mov rsi, 0
  2180                                  .L_lambda_simple_params_loop_0007:	; copy params
  2181 00000ADE 4883FE00                	cmp rsi, 0
  2182 00000AE2 740E                    	je .L_lambda_simple_params_end_0007
  2183 00000AE4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2184 00000AE9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2185 00000AED 48FFC6                  	inc rsi
  2186 00000AF0 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2187                                  .L_lambda_simple_params_end_0007:
  2188 00000AF2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2189 00000AF5 4889C3                  	mov rbx, rax
  2190 00000AF8 58                      	pop rax
  2191 00000AF9 C60004                  	mov byte [rax], T_closure
  2192 00000AFC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2193 00000B00 48C74009[0D0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2194 00000B08 E9A4000000              	jmp .L_lambda_simple_end_0007
  2195                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2196 00000B0D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2197 00000B13 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2198 00000B15 FF742410                	push qword [rsp + 8 * 2]
  2199 00000B19 6A01                    	push 1
  2200 00000B1B E9C8A90000              	jmp L_error_incorrect_arity_simple
  2201                                  .L_lambda_simple_arity_check_ok_0007:
  2202 00000B20 C8000000                	enter 0, 0
  2203                                  	; preparing a tail-call
  2204                                  	; preparing a non-tail-call
  2205 00000B24 488B4520                	mov rax, PARAM(0)	; param x
  2206 00000B28 50                      	push rax
  2207 00000B29 6A01                    	push 1	; arg count
  2208 00000B2B 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  2209 00000B33 803805                  	cmp byte [rax], T_undefined
  2210 00000B36 0F84C6A80000            	je L_error_fvar_undefined
  2211 00000B3C 803804                  	cmp byte [rax], T_closure
  2212 00000B3F 0F8541A90000            	jne L_error_non_closure
  2213 00000B45 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2214 00000B48 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2215 00000B4B 50                      	push rax
  2216 00000B4C 6A01                    	push 1	; arg count
  2217 00000B4E 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  2218 00000B56 803805                  	cmp byte [rax], T_undefined
  2219 00000B59 0F84A3A80000            	je L_error_fvar_undefined
  2220 00000B5F 803804                  	cmp byte [rax], T_closure
  2221 00000B62 0F851EA90000            	jne L_error_non_closure
  2222 00000B68 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2223 00000B6B FF7508                  	push qword [rbp + 8 * 1]
  2224                                   ; old ret addr
  2225 00000B6E FF7500                  	push qword [rbp]
  2226                                   ; restore the old rbp
  2227 00000B71 BB01000000              	mov rbx, 1
  2228 00000B76 4883C303                	add rbx, 3
  2229 00000B7A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2230 00000B7E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2231 00000B83 4C8D4DF8                	lea r9, [rbp - 8]
  2232 00000B87 B905000000              	mov rcx, 5
  2233                                  .L_tc_recycle_frame_loop_0007:
  2234 00000B8C 4883F900                	cmp rcx, 0
  2235 00000B90 7413                    	je .L_tc_recycle_frame_done_0007
  2236 00000B92 4D8B11                  	mov r10, qword [r9]
  2237 00000B95 4D8910                  	mov qword [r8], r10
  2238 00000B98 4983E808                	sub r8, 8
  2239 00000B9C 4983E908                	sub r9, 8
  2240 00000BA0 48FFC9                  	dec rcx
  2241 00000BA3 EBE7                    	jmp .L_tc_recycle_frame_loop_0007
  2242                                  .L_tc_recycle_frame_done_0007:
  2243 00000BA5 498D6008                	lea rsp, [r8 + 8]
  2244 00000BA9 5D                      	pop rbp ; restore the old rbp
  2245 00000BAA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2246 00000BAD C9                      	leave
  2247 00000BAE C21800                  	ret AND_KILL_FRAME(1)
  2248                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2249 00000BB1 48890425[8B0D0000]      	mov qword [free_var_44], rax
  2250 00000BB9 48B8-                   	mov rax, sob_void
  2250 00000BBB [0000000000000000] 
  2251                                  
  2252 00000BC3 4889C7                  	mov rdi, rax
  2253 00000BC6 E8B9AB0000              	call print_sexpr_if_not_void
  2254 00000BCB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2255 00000BD0 E85AA90000              	call malloc
  2256 00000BD5 50                      	push rax
  2257 00000BD6 BF00000000              	mov rdi, 8 * 0	; new rib
  2258 00000BDB E84FA90000              	call malloc
  2259 00000BE0 50                      	push rax
  2260 00000BE1 BF08000000              	mov rdi, 8 * 1	; extended env
  2261 00000BE6 E844A90000              	call malloc
  2262 00000BEB 488B7D10                	mov rdi, ENV
  2263 00000BEF BE00000000              	mov rsi, 0
  2264 00000BF4 BA01000000              	mov rdx, 1
  2265                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2266 00000BF9 4883FE00                	cmp rsi, 0
  2267 00000BFD 7410                    	je .L_lambda_simple_env_end_0008
  2268 00000BFF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2269 00000C03 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2270 00000C07 48FFC6                  	inc rsi
  2271 00000C0A 48FFC2                  	inc rdx
  2272 00000C0D EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2273                                  .L_lambda_simple_env_end_0008:
  2274 00000C0F 5B                      	pop rbx
  2275 00000C10 BE00000000              	mov rsi, 0
  2276                                  .L_lambda_simple_params_loop_0008:	; copy params
  2277 00000C15 4883FE00                	cmp rsi, 0
  2278 00000C19 740E                    	je .L_lambda_simple_params_end_0008
  2279 00000C1B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2280 00000C20 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2281 00000C24 48FFC6                  	inc rsi
  2282 00000C27 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2283                                  .L_lambda_simple_params_end_0008:
  2284 00000C29 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2285 00000C2C 4889C3                  	mov rbx, rax
  2286 00000C2F 58                      	pop rax
  2287 00000C30 C60004                  	mov byte [rax], T_closure
  2288 00000C33 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2289 00000C37 48C74009[440C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2290 00000C3F E9A4000000              	jmp .L_lambda_simple_end_0008
  2291                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2292 00000C44 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2293 00000C4A 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2294 00000C4C FF742410                	push qword [rsp + 8 * 2]
  2295 00000C50 6A01                    	push 1
  2296 00000C52 E991A80000              	jmp L_error_incorrect_arity_simple
  2297                                  .L_lambda_simple_arity_check_ok_0008:
  2298 00000C57 C8000000                	enter 0, 0
  2299                                  	; preparing a tail-call
  2300                                  	; preparing a non-tail-call
  2301 00000C5B 488B4520                	mov rax, PARAM(0)	; param x
  2302 00000C5F 50                      	push rax
  2303 00000C60 6A01                    	push 1	; arg count
  2304 00000C62 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  2305 00000C6A 803805                  	cmp byte [rax], T_undefined
  2306 00000C6D 0F848FA70000            	je L_error_fvar_undefined
  2307 00000C73 803804                  	cmp byte [rax], T_closure
  2308 00000C76 0F850AA80000            	jne L_error_non_closure
  2309 00000C7C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2310 00000C7F FF5009                  	call SOB_CLOSURE_CODE(rax)
  2311 00000C82 50                      	push rax
  2312 00000C83 6A01                    	push 1	; arg count
  2313 00000C85 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  2314 00000C8D 803805                  	cmp byte [rax], T_undefined
  2315 00000C90 0F846CA70000            	je L_error_fvar_undefined
  2316 00000C96 803804                  	cmp byte [rax], T_closure
  2317 00000C99 0F85E7A70000            	jne L_error_non_closure
  2318 00000C9F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2319 00000CA2 FF7508                  	push qword [rbp + 8 * 1]
  2320                                   ; old ret addr
  2321 00000CA5 FF7500                  	push qword [rbp]
  2322                                   ; restore the old rbp
  2323 00000CA8 BB01000000              	mov rbx, 1
  2324 00000CAD 4883C303                	add rbx, 3
  2325 00000CB1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2326 00000CB5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2327 00000CBA 4C8D4DF8                	lea r9, [rbp - 8]
  2328 00000CBE B905000000              	mov rcx, 5
  2329                                  .L_tc_recycle_frame_loop_0008:
  2330 00000CC3 4883F900                	cmp rcx, 0
  2331 00000CC7 7413                    	je .L_tc_recycle_frame_done_0008
  2332 00000CC9 4D8B11                  	mov r10, qword [r9]
  2333 00000CCC 4D8910                  	mov qword [r8], r10
  2334 00000CCF 4983E808                	sub r8, 8
  2335 00000CD3 4983E908                	sub r9, 8
  2336 00000CD7 48FFC9                  	dec rcx
  2337 00000CDA EBE7                    	jmp .L_tc_recycle_frame_loop_0008
  2338                                  .L_tc_recycle_frame_done_0008:
  2339 00000CDC 498D6008                	lea rsp, [r8 + 8]
  2340 00000CE0 5D                      	pop rbp ; restore the old rbp
  2341 00000CE1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2342 00000CE4 C9                      	leave
  2343 00000CE5 C21800                  	ret AND_KILL_FRAME(1)
  2344                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2345 00000CE8 48890425[BE0D0000]      	mov qword [free_var_47], rax
  2346 00000CF0 48B8-                   	mov rax, sob_void
  2346 00000CF2 [0000000000000000] 
  2347                                  
  2348 00000CFA 4889C7                  	mov rdi, rax
  2349 00000CFD E882AA0000              	call print_sexpr_if_not_void
  2350 00000D02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2351 00000D07 E823A80000              	call malloc
  2352 00000D0C 50                      	push rax
  2353 00000D0D BF00000000              	mov rdi, 8 * 0	; new rib
  2354 00000D12 E818A80000              	call malloc
  2355 00000D17 50                      	push rax
  2356 00000D18 BF08000000              	mov rdi, 8 * 1	; extended env
  2357 00000D1D E80DA80000              	call malloc
  2358 00000D22 488B7D10                	mov rdi, ENV
  2359 00000D26 BE00000000              	mov rsi, 0
  2360 00000D2B BA01000000              	mov rdx, 1
  2361                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2362 00000D30 4883FE00                	cmp rsi, 0
  2363 00000D34 7410                    	je .L_lambda_simple_env_end_0009
  2364 00000D36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2365 00000D3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2366 00000D3E 48FFC6                  	inc rsi
  2367 00000D41 48FFC2                  	inc rdx
  2368 00000D44 EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2369                                  .L_lambda_simple_env_end_0009:
  2370 00000D46 5B                      	pop rbx
  2371 00000D47 BE00000000              	mov rsi, 0
  2372                                  .L_lambda_simple_params_loop_0009:	; copy params
  2373 00000D4C 4883FE00                	cmp rsi, 0
  2374 00000D50 740E                    	je .L_lambda_simple_params_end_0009
  2375 00000D52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2376 00000D57 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2377 00000D5B 48FFC6                  	inc rsi
  2378 00000D5E EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2379                                  .L_lambda_simple_params_end_0009:
  2380 00000D60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2381 00000D63 4889C3                  	mov rbx, rax
  2382 00000D66 58                      	pop rax
  2383 00000D67 C60004                  	mov byte [rax], T_closure
  2384 00000D6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2385 00000D6E 48C74009[7B0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2386 00000D76 E9A4000000              	jmp .L_lambda_simple_end_0009
  2387                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2388 00000D7B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2389 00000D81 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2390 00000D83 FF742410                	push qword [rsp + 8 * 2]
  2391 00000D87 6A01                    	push 1
  2392 00000D89 E95AA70000              	jmp L_error_incorrect_arity_simple
  2393                                  .L_lambda_simple_arity_check_ok_0009:
  2394 00000D8E C8000000                	enter 0, 0
  2395                                  	; preparing a tail-call
  2396                                  	; preparing a non-tail-call
  2397 00000D92 488B4520                	mov rax, PARAM(0)	; param x
  2398 00000D96 50                      	push rax
  2399 00000D97 6A01                    	push 1	; arg count
  2400 00000D99 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  2401 00000DA1 803805                  	cmp byte [rax], T_undefined
  2402 00000DA4 0F8458A60000            	je L_error_fvar_undefined
  2403 00000DAA 803804                  	cmp byte [rax], T_closure
  2404 00000DAD 0F85D3A60000            	jne L_error_non_closure
  2405 00000DB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2406 00000DB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2407 00000DB9 50                      	push rax
  2408 00000DBA 6A01                    	push 1	; arg count
  2409 00000DBC 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  2410 00000DC4 803805                  	cmp byte [rax], T_undefined
  2411 00000DC7 0F8435A60000            	je L_error_fvar_undefined
  2412 00000DCD 803804                  	cmp byte [rax], T_closure
  2413 00000DD0 0F85B0A60000            	jne L_error_non_closure
  2414 00000DD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2415 00000DD9 FF7508                  	push qword [rbp + 8 * 1]
  2416                                   ; old ret addr
  2417 00000DDC FF7500                  	push qword [rbp]
  2418                                   ; restore the old rbp
  2419 00000DDF BB01000000              	mov rbx, 1
  2420 00000DE4 4883C303                	add rbx, 3
  2421 00000DE8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2422 00000DEC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2423 00000DF1 4C8D4DF8                	lea r9, [rbp - 8]
  2424 00000DF5 B905000000              	mov rcx, 5
  2425                                  .L_tc_recycle_frame_loop_0009:
  2426 00000DFA 4883F900                	cmp rcx, 0
  2427 00000DFE 7413                    	je .L_tc_recycle_frame_done_0009
  2428 00000E00 4D8B11                  	mov r10, qword [r9]
  2429 00000E03 4D8910                  	mov qword [r8], r10
  2430 00000E06 4983E808                	sub r8, 8
  2431 00000E0A 4983E908                	sub r9, 8
  2432 00000E0E 48FFC9                  	dec rcx
  2433 00000E11 EBE7                    	jmp .L_tc_recycle_frame_loop_0009
  2434                                  .L_tc_recycle_frame_done_0009:
  2435 00000E13 498D6008                	lea rsp, [r8 + 8]
  2436 00000E17 5D                      	pop rbp ; restore the old rbp
  2437 00000E18 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2438 00000E1B C9                      	leave
  2439 00000E1C C21800                  	ret AND_KILL_FRAME(1)
  2440                                  .L_lambda_simple_end_0009:	; new closure is in rax
  2441 00000E1F 48890425[130E0000]      	mov qword [free_var_52], rax
  2442 00000E27 48B8-                   	mov rax, sob_void
  2442 00000E29 [0000000000000000] 
  2443                                  
  2444 00000E31 4889C7                  	mov rdi, rax
  2445 00000E34 E84BA90000              	call print_sexpr_if_not_void
  2446 00000E39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2447 00000E3E E8ECA60000              	call malloc
  2448 00000E43 50                      	push rax
  2449 00000E44 BF00000000              	mov rdi, 8 * 0	; new rib
  2450 00000E49 E8E1A60000              	call malloc
  2451 00000E4E 50                      	push rax
  2452 00000E4F BF08000000              	mov rdi, 8 * 1	; extended env
  2453 00000E54 E8D6A60000              	call malloc
  2454 00000E59 488B7D10                	mov rdi, ENV
  2455 00000E5D BE00000000              	mov rsi, 0
  2456 00000E62 BA01000000              	mov rdx, 1
  2457                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  2458 00000E67 4883FE00                	cmp rsi, 0
  2459 00000E6B 7410                    	je .L_lambda_simple_env_end_000a
  2460 00000E6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2461 00000E71 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2462 00000E75 48FFC6                  	inc rsi
  2463 00000E78 48FFC2                  	inc rdx
  2464 00000E7B EBEA                    	jmp .L_lambda_simple_env_loop_000a
  2465                                  .L_lambda_simple_env_end_000a:
  2466 00000E7D 5B                      	pop rbx
  2467 00000E7E BE00000000              	mov rsi, 0
  2468                                  .L_lambda_simple_params_loop_000a:	; copy params
  2469 00000E83 4883FE00                	cmp rsi, 0
  2470 00000E87 740E                    	je .L_lambda_simple_params_end_000a
  2471 00000E89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2472 00000E8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2473 00000E92 48FFC6                  	inc rsi
  2474 00000E95 EBEC                    	jmp .L_lambda_simple_params_loop_000a
  2475                                  .L_lambda_simple_params_end_000a:
  2476 00000E97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2477 00000E9A 4889C3                  	mov rbx, rax
  2478 00000E9D 58                      	pop rax
  2479 00000E9E C60004                  	mov byte [rax], T_closure
  2480 00000EA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2481 00000EA5 48C74009[B20E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  2482 00000EAD E9A4000000              	jmp .L_lambda_simple_end_000a
  2483                                  .L_lambda_simple_code_000a:	; lambda-simple body
  2484 00000EB2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2485 00000EB8 740B                    	je .L_lambda_simple_arity_check_ok_000a
  2486 00000EBA FF742410                	push qword [rsp + 8 * 2]
  2487 00000EBE 6A01                    	push 1
  2488 00000EC0 E923A60000              	jmp L_error_incorrect_arity_simple
  2489                                  .L_lambda_simple_arity_check_ok_000a:
  2490 00000EC5 C8000000                	enter 0, 0
  2491                                  	; preparing a tail-call
  2492                                  	; preparing a non-tail-call
  2493 00000EC9 488B4520                	mov rax, PARAM(0)	; param x
  2494 00000ECD 50                      	push rax
  2495 00000ECE 6A01                    	push 1	; arg count
  2496 00000ED0 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  2497 00000ED8 803805                  	cmp byte [rax], T_undefined
  2498 00000EDB 0F8421A50000            	je L_error_fvar_undefined
  2499 00000EE1 803804                  	cmp byte [rax], T_closure
  2500 00000EE4 0F859CA50000            	jne L_error_non_closure
  2501 00000EEA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2502 00000EED FF5009                  	call SOB_CLOSURE_CODE(rax)
  2503 00000EF0 50                      	push rax
  2504 00000EF1 6A01                    	push 1	; arg count
  2505 00000EF3 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  2506 00000EFB 803805                  	cmp byte [rax], T_undefined
  2507 00000EFE 0F84FEA40000            	je L_error_fvar_undefined
  2508 00000F04 803804                  	cmp byte [rax], T_closure
  2509 00000F07 0F8579A50000            	jne L_error_non_closure
  2510 00000F0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  2511 00000F10 FF7508                  	push qword [rbp + 8 * 1]
  2512                                   ; old ret addr
  2513 00000F13 FF7500                  	push qword [rbp]
  2514                                   ; restore the old rbp
  2515 00000F16 BB01000000              	mov rbx, 1
  2516 00000F1B 4883C303                	add rbx, 3
  2517 00000F1F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2518 00000F23 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2519 00000F28 4C8D4DF8                	lea r9, [rbp - 8]
  2520 00000F2C B905000000              	mov rcx, 5
  2521                                  .L_tc_recycle_frame_loop_000a:
  2522 00000F31 4883F900                	cmp rcx, 0
  2523 00000F35 7413                    	je .L_tc_recycle_frame_done_000a
  2524 00000F37 4D8B11                  	mov r10, qword [r9]
  2525 00000F3A 4D8910                  	mov qword [r8], r10
  2526 00000F3D 4983E808                	sub r8, 8
  2527 00000F41 4983E908                	sub r9, 8
  2528 00000F45 48FFC9                  	dec rcx
  2529 00000F48 EBE7                    	jmp .L_tc_recycle_frame_loop_000a
  2530                                  .L_tc_recycle_frame_done_000a:
  2531 00000F4A 498D6008                	lea rsp, [r8 + 8]
  2532 00000F4E 5D                      	pop rbp ; restore the old rbp
  2533 00000F4F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2534 00000F52 C9                      	leave
  2535 00000F53 C21800                  	ret AND_KILL_FRAME(1)
  2536                                  .L_lambda_simple_end_000a:	; new closure is in rax
  2537 00000F56 48890425[460E0000]      	mov qword [free_var_55], rax
  2538 00000F5E 48B8-                   	mov rax, sob_void
  2538 00000F60 [0000000000000000] 
  2539                                  
  2540 00000F68 4889C7                  	mov rdi, rax
  2541 00000F6B E814A80000              	call print_sexpr_if_not_void
  2542 00000F70 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2543 00000F75 E8B5A50000              	call malloc
  2544 00000F7A 50                      	push rax
  2545 00000F7B BF00000000              	mov rdi, 8 * 0	; new rib
  2546 00000F80 E8AAA50000              	call malloc
  2547 00000F85 50                      	push rax
  2548 00000F86 BF08000000              	mov rdi, 8 * 1	; extended env
  2549 00000F8B E89FA50000              	call malloc
  2550 00000F90 488B7D10                	mov rdi, ENV
  2551 00000F94 BE00000000              	mov rsi, 0
  2552 00000F99 BA01000000              	mov rdx, 1
  2553                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  2554 00000F9E 4883FE00                	cmp rsi, 0
  2555 00000FA2 7410                    	je .L_lambda_simple_env_end_000b
  2556 00000FA4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2557 00000FA8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2558 00000FAC 48FFC6                  	inc rsi
  2559 00000FAF 48FFC2                  	inc rdx
  2560 00000FB2 EBEA                    	jmp .L_lambda_simple_env_loop_000b
  2561                                  .L_lambda_simple_env_end_000b:
  2562 00000FB4 5B                      	pop rbx
  2563 00000FB5 BE00000000              	mov rsi, 0
  2564                                  .L_lambda_simple_params_loop_000b:	; copy params
  2565 00000FBA 4883FE00                	cmp rsi, 0
  2566 00000FBE 740E                    	je .L_lambda_simple_params_end_000b
  2567 00000FC0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2568 00000FC5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2569 00000FC9 48FFC6                  	inc rsi
  2570 00000FCC EBEC                    	jmp .L_lambda_simple_params_loop_000b
  2571                                  .L_lambda_simple_params_end_000b:
  2572 00000FCE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2573 00000FD1 4889C3                  	mov rbx, rax
  2574 00000FD4 58                      	pop rax
  2575 00000FD5 C60004                  	mov byte [rax], T_closure
  2576 00000FD8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2577 00000FDC 48C74009[E90F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  2578 00000FE4 E9A4000000              	jmp .L_lambda_simple_end_000b
  2579                                  .L_lambda_simple_code_000b:	; lambda-simple body
  2580 00000FE9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2581 00000FEF 740B                    	je .L_lambda_simple_arity_check_ok_000b
  2582 00000FF1 FF742410                	push qword [rsp + 8 * 2]
  2583 00000FF5 6A01                    	push 1
  2584 00000FF7 E9ECA40000              	jmp L_error_incorrect_arity_simple
  2585                                  .L_lambda_simple_arity_check_ok_000b:
  2586 00000FFC C8000000                	enter 0, 0
  2587                                  	; preparing a tail-call
  2588                                  	; preparing a non-tail-call
  2589 00001000 488B4520                	mov rax, PARAM(0)	; param x
  2590 00001004 50                      	push rax
  2591 00001005 6A01                    	push 1	; arg count
  2592 00001007 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  2593 0000100F 803805                  	cmp byte [rax], T_undefined
  2594 00001012 0F84EAA30000            	je L_error_fvar_undefined
  2595 00001018 803804                  	cmp byte [rax], T_closure
  2596 0000101B 0F8565A40000            	jne L_error_non_closure
  2597 00001021 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2598 00001024 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2599 00001027 50                      	push rax
  2600 00001028 6A01                    	push 1	; arg count
  2601 0000102A 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  2602 00001032 803805                  	cmp byte [rax], T_undefined
  2603 00001035 0F84C7A30000            	je L_error_fvar_undefined
  2604 0000103B 803804                  	cmp byte [rax], T_closure
  2605 0000103E 0F8542A40000            	jne L_error_non_closure
  2606 00001044 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2607 00001047 FF7508                  	push qword [rbp + 8 * 1]
  2608                                   ; old ret addr
  2609 0000104A FF7500                  	push qword [rbp]
  2610                                   ; restore the old rbp
  2611 0000104D BB01000000              	mov rbx, 1
  2612 00001052 4883C303                	add rbx, 3
  2613 00001056 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2614 0000105A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2615 0000105F 4C8D4DF8                	lea r9, [rbp - 8]
  2616 00001063 B905000000              	mov rcx, 5
  2617                                  .L_tc_recycle_frame_loop_000b:
  2618 00001068 4883F900                	cmp rcx, 0
  2619 0000106C 7413                    	je .L_tc_recycle_frame_done_000b
  2620 0000106E 4D8B11                  	mov r10, qword [r9]
  2621 00001071 4D8910                  	mov qword [r8], r10
  2622 00001074 4983E808                	sub r8, 8
  2623 00001078 4983E908                	sub r9, 8
  2624 0000107C 48FFC9                  	dec rcx
  2625 0000107F EBE7                    	jmp .L_tc_recycle_frame_loop_000b
  2626                                  .L_tc_recycle_frame_done_000b:
  2627 00001081 498D6008                	lea rsp, [r8 + 8]
  2628 00001085 5D                      	pop rbp ; restore the old rbp
  2629 00001086 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2630 00001089 C9                      	leave
  2631 0000108A C21800                  	ret AND_KILL_FRAME(1)
  2632                                  .L_lambda_simple_end_000b:	; new closure is in rax
  2633 0000108D 48890425[8A0E0000]      	mov qword [free_var_59], rax
  2634 00001095 48B8-                   	mov rax, sob_void
  2634 00001097 [0000000000000000] 
  2635                                  
  2636 0000109F 4889C7                  	mov rdi, rax
  2637 000010A2 E8DDA60000              	call print_sexpr_if_not_void
  2638 000010A7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2639 000010AC E87EA40000              	call malloc
  2640 000010B1 50                      	push rax
  2641 000010B2 BF00000000              	mov rdi, 8 * 0	; new rib
  2642 000010B7 E873A40000              	call malloc
  2643 000010BC 50                      	push rax
  2644 000010BD BF08000000              	mov rdi, 8 * 1	; extended env
  2645 000010C2 E868A40000              	call malloc
  2646 000010C7 488B7D10                	mov rdi, ENV
  2647 000010CB BE00000000              	mov rsi, 0
  2648 000010D0 BA01000000              	mov rdx, 1
  2649                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  2650 000010D5 4883FE00                	cmp rsi, 0
  2651 000010D9 7410                    	je .L_lambda_simple_env_end_000c
  2652 000010DB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2653 000010DF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2654 000010E3 48FFC6                  	inc rsi
  2655 000010E6 48FFC2                  	inc rdx
  2656 000010E9 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  2657                                  .L_lambda_simple_env_end_000c:
  2658 000010EB 5B                      	pop rbx
  2659 000010EC BE00000000              	mov rsi, 0
  2660                                  .L_lambda_simple_params_loop_000c:	; copy params
  2661 000010F1 4883FE00                	cmp rsi, 0
  2662 000010F5 740E                    	je .L_lambda_simple_params_end_000c
  2663 000010F7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2664 000010FC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2665 00001100 48FFC6                  	inc rsi
  2666 00001103 EBEC                    	jmp .L_lambda_simple_params_loop_000c
  2667                                  .L_lambda_simple_params_end_000c:
  2668 00001105 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2669 00001108 4889C3                  	mov rbx, rax
  2670 0000110B 58                      	pop rax
  2671 0000110C C60004                  	mov byte [rax], T_closure
  2672 0000110F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2673 00001113 48C74009[20110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  2674 0000111B E9A4000000              	jmp .L_lambda_simple_end_000c
  2675                                  .L_lambda_simple_code_000c:	; lambda-simple body
  2676 00001120 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2677 00001126 740B                    	je .L_lambda_simple_arity_check_ok_000c
  2678 00001128 FF742410                	push qword [rsp + 8 * 2]
  2679 0000112C 6A01                    	push 1
  2680 0000112E E9B5A30000              	jmp L_error_incorrect_arity_simple
  2681                                  .L_lambda_simple_arity_check_ok_000c:
  2682 00001133 C8000000                	enter 0, 0
  2683                                  	; preparing a tail-call
  2684                                  	; preparing a non-tail-call
  2685 00001137 488B4520                	mov rax, PARAM(0)	; param x
  2686 0000113B 50                      	push rax
  2687 0000113C 6A01                    	push 1	; arg count
  2688 0000113E 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  2689 00001146 803805                  	cmp byte [rax], T_undefined
  2690 00001149 0F84B3A20000            	je L_error_fvar_undefined
  2691 0000114F 803804                  	cmp byte [rax], T_closure
  2692 00001152 0F852EA30000            	jne L_error_non_closure
  2693 00001158 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2694 0000115B FF5009                  	call SOB_CLOSURE_CODE(rax)
  2695 0000115E 50                      	push rax
  2696 0000115F 6A01                    	push 1	; arg count
  2697 00001161 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  2698 00001169 803805                  	cmp byte [rax], T_undefined
  2699 0000116C 0F8490A20000            	je L_error_fvar_undefined
  2700 00001172 803804                  	cmp byte [rax], T_closure
  2701 00001175 0F850BA30000            	jne L_error_non_closure
  2702 0000117B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2703 0000117E FF7508                  	push qword [rbp + 8 * 1]
  2704                                   ; old ret addr
  2705 00001181 FF7500                  	push qword [rbp]
  2706                                   ; restore the old rbp
  2707 00001184 BB01000000              	mov rbx, 1
  2708 00001189 4883C303                	add rbx, 3
  2709 0000118D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2710 00001191 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2711 00001196 4C8D4DF8                	lea r9, [rbp - 8]
  2712 0000119A B905000000              	mov rcx, 5
  2713                                  .L_tc_recycle_frame_loop_000c:
  2714 0000119F 4883F900                	cmp rcx, 0
  2715 000011A3 7413                    	je .L_tc_recycle_frame_done_000c
  2716 000011A5 4D8B11                  	mov r10, qword [r9]
  2717 000011A8 4D8910                  	mov qword [r8], r10
  2718 000011AB 4983E808                	sub r8, 8
  2719 000011AF 4983E908                	sub r9, 8
  2720 000011B3 48FFC9                  	dec rcx
  2721 000011B6 EBE7                    	jmp .L_tc_recycle_frame_loop_000c
  2722                                  .L_tc_recycle_frame_done_000c:
  2723 000011B8 498D6008                	lea rsp, [r8 + 8]
  2724 000011BC 5D                      	pop rbp ; restore the old rbp
  2725 000011BD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2726 000011C0 C9                      	leave
  2727 000011C1 C21800                  	ret AND_KILL_FRAME(1)
  2728                                  .L_lambda_simple_end_000c:	; new closure is in rax
  2729 000011C4 48890425[BD0E0000]      	mov qword [free_var_62], rax
  2730 000011CC 48B8-                   	mov rax, sob_void
  2730 000011CE [0000000000000000] 
  2731                                  
  2732 000011D6 4889C7                  	mov rdi, rax
  2733 000011D9 E8A6A50000              	call print_sexpr_if_not_void
  2734 000011DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2735 000011E3 E847A30000              	call malloc
  2736 000011E8 50                      	push rax
  2737 000011E9 BF00000000              	mov rdi, 8 * 0	; new rib
  2738 000011EE E83CA30000              	call malloc
  2739 000011F3 50                      	push rax
  2740 000011F4 BF08000000              	mov rdi, 8 * 1	; extended env
  2741 000011F9 E831A30000              	call malloc
  2742 000011FE 488B7D10                	mov rdi, ENV
  2743 00001202 BE00000000              	mov rsi, 0
  2744 00001207 BA01000000              	mov rdx, 1
  2745                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  2746 0000120C 4883FE00                	cmp rsi, 0
  2747 00001210 7410                    	je .L_lambda_simple_env_end_000d
  2748 00001212 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2749 00001216 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2750 0000121A 48FFC6                  	inc rsi
  2751 0000121D 48FFC2                  	inc rdx
  2752 00001220 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  2753                                  .L_lambda_simple_env_end_000d:
  2754 00001222 5B                      	pop rbx
  2755 00001223 BE00000000              	mov rsi, 0
  2756                                  .L_lambda_simple_params_loop_000d:	; copy params
  2757 00001228 4883FE00                	cmp rsi, 0
  2758 0000122C 740E                    	je .L_lambda_simple_params_end_000d
  2759 0000122E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2760 00001233 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2761 00001237 48FFC6                  	inc rsi
  2762 0000123A EBEC                    	jmp .L_lambda_simple_params_loop_000d
  2763                                  .L_lambda_simple_params_end_000d:
  2764 0000123C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2765 0000123F 4889C3                  	mov rbx, rax
  2766 00001242 58                      	pop rax
  2767 00001243 C60004                  	mov byte [rax], T_closure
  2768 00001246 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2769 0000124A 48C74009[57120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  2770 00001252 E9A4000000              	jmp .L_lambda_simple_end_000d
  2771                                  .L_lambda_simple_code_000d:	; lambda-simple body
  2772 00001257 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2773 0000125D 740B                    	je .L_lambda_simple_arity_check_ok_000d
  2774 0000125F FF742410                	push qword [rsp + 8 * 2]
  2775 00001263 6A01                    	push 1
  2776 00001265 E97EA20000              	jmp L_error_incorrect_arity_simple
  2777                                  .L_lambda_simple_arity_check_ok_000d:
  2778 0000126A C8000000                	enter 0, 0
  2779                                  	; preparing a tail-call
  2780                                  	; preparing a non-tail-call
  2781 0000126E 488B4520                	mov rax, PARAM(0)	; param x
  2782 00001272 50                      	push rax
  2783 00001273 6A01                    	push 1	; arg count
  2784 00001275 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  2785 0000127D 803805                  	cmp byte [rax], T_undefined
  2786 00001280 0F847CA10000            	je L_error_fvar_undefined
  2787 00001286 803804                  	cmp byte [rax], T_closure
  2788 00001289 0F85F7A10000            	jne L_error_non_closure
  2789 0000128F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2790 00001292 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2791 00001295 50                      	push rax
  2792 00001296 6A01                    	push 1	; arg count
  2793 00001298 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  2794 000012A0 803805                  	cmp byte [rax], T_undefined
  2795 000012A3 0F8459A10000            	je L_error_fvar_undefined
  2796 000012A9 803804                  	cmp byte [rax], T_closure
  2797 000012AC 0F85D4A10000            	jne L_error_non_closure
  2798 000012B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2799 000012B5 FF7508                  	push qword [rbp + 8 * 1]
  2800                                   ; old ret addr
  2801 000012B8 FF7500                  	push qword [rbp]
  2802                                   ; restore the old rbp
  2803 000012BB BB01000000              	mov rbx, 1
  2804 000012C0 4883C303                	add rbx, 3
  2805 000012C4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2806 000012C8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2807 000012CD 4C8D4DF8                	lea r9, [rbp - 8]
  2808 000012D1 B905000000              	mov rcx, 5
  2809                                  .L_tc_recycle_frame_loop_000d:
  2810 000012D6 4883F900                	cmp rcx, 0
  2811 000012DA 7413                    	je .L_tc_recycle_frame_done_000d
  2812 000012DC 4D8B11                  	mov r10, qword [r9]
  2813 000012DF 4D8910                  	mov qword [r8], r10
  2814 000012E2 4983E808                	sub r8, 8
  2815 000012E6 4983E908                	sub r9, 8
  2816 000012EA 48FFC9                  	dec rcx
  2817 000012ED EBE7                    	jmp .L_tc_recycle_frame_loop_000d
  2818                                  .L_tc_recycle_frame_done_000d:
  2819 000012EF 498D6008                	lea rsp, [r8 + 8]
  2820 000012F3 5D                      	pop rbp ; restore the old rbp
  2821 000012F4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2822 000012F7 C9                      	leave
  2823 000012F8 C21800                  	ret AND_KILL_FRAME(1)
  2824                                  .L_lambda_simple_end_000d:	; new closure is in rax
  2825 000012FB 48890425[F20C0000]      	mov qword [free_var_35], rax
  2826 00001303 48B8-                   	mov rax, sob_void
  2826 00001305 [0000000000000000] 
  2827                                  
  2828 0000130D 4889C7                  	mov rdi, rax
  2829 00001310 E86FA40000              	call print_sexpr_if_not_void
  2830 00001315 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2831 0000131A E810A20000              	call malloc
  2832 0000131F 50                      	push rax
  2833 00001320 BF00000000              	mov rdi, 8 * 0	; new rib
  2834 00001325 E805A20000              	call malloc
  2835 0000132A 50                      	push rax
  2836 0000132B BF08000000              	mov rdi, 8 * 1	; extended env
  2837 00001330 E8FAA10000              	call malloc
  2838 00001335 488B7D10                	mov rdi, ENV
  2839 00001339 BE00000000              	mov rsi, 0
  2840 0000133E BA01000000              	mov rdx, 1
  2841                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  2842 00001343 4883FE00                	cmp rsi, 0
  2843 00001347 7410                    	je .L_lambda_simple_env_end_000e
  2844 00001349 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2845 0000134D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2846 00001351 48FFC6                  	inc rsi
  2847 00001354 48FFC2                  	inc rdx
  2848 00001357 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  2849                                  .L_lambda_simple_env_end_000e:
  2850 00001359 5B                      	pop rbx
  2851 0000135A BE00000000              	mov rsi, 0
  2852                                  .L_lambda_simple_params_loop_000e:	; copy params
  2853 0000135F 4883FE00                	cmp rsi, 0
  2854 00001363 740E                    	je .L_lambda_simple_params_end_000e
  2855 00001365 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2856 0000136A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2857 0000136E 48FFC6                  	inc rsi
  2858 00001371 EBEC                    	jmp .L_lambda_simple_params_loop_000e
  2859                                  .L_lambda_simple_params_end_000e:
  2860 00001373 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2861 00001376 4889C3                  	mov rbx, rax
  2862 00001379 58                      	pop rax
  2863 0000137A C60004                  	mov byte [rax], T_closure
  2864 0000137D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2865 00001381 48C74009[8E130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  2866 00001389 E9A4000000              	jmp .L_lambda_simple_end_000e
  2867                                  .L_lambda_simple_code_000e:	; lambda-simple body
  2868 0000138E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2869 00001394 740B                    	je .L_lambda_simple_arity_check_ok_000e
  2870 00001396 FF742410                	push qword [rsp + 8 * 2]
  2871 0000139A 6A01                    	push 1
  2872 0000139C E947A10000              	jmp L_error_incorrect_arity_simple
  2873                                  .L_lambda_simple_arity_check_ok_000e:
  2874 000013A1 C8000000                	enter 0, 0
  2875                                  	; preparing a tail-call
  2876                                  	; preparing a non-tail-call
  2877 000013A5 488B4520                	mov rax, PARAM(0)	; param x
  2878 000013A9 50                      	push rax
  2879 000013AA 6A01                    	push 1	; arg count
  2880 000013AC 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  2881 000013B4 803805                  	cmp byte [rax], T_undefined
  2882 000013B7 0F8445A00000            	je L_error_fvar_undefined
  2883 000013BD 803804                  	cmp byte [rax], T_closure
  2884 000013C0 0F85C0A00000            	jne L_error_non_closure
  2885 000013C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2886 000013C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2887 000013CC 50                      	push rax
  2888 000013CD 6A01                    	push 1	; arg count
  2889 000013CF 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  2890 000013D7 803805                  	cmp byte [rax], T_undefined
  2891 000013DA 0F8422A00000            	je L_error_fvar_undefined
  2892 000013E0 803804                  	cmp byte [rax], T_closure
  2893 000013E3 0F859DA00000            	jne L_error_non_closure
  2894 000013E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2895 000013EC FF7508                  	push qword [rbp + 8 * 1]
  2896                                   ; old ret addr
  2897 000013EF FF7500                  	push qword [rbp]
  2898                                   ; restore the old rbp
  2899 000013F2 BB01000000              	mov rbx, 1
  2900 000013F7 4883C303                	add rbx, 3
  2901 000013FB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2902 000013FF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2903 00001404 4C8D4DF8                	lea r9, [rbp - 8]
  2904 00001408 B905000000              	mov rcx, 5
  2905                                  .L_tc_recycle_frame_loop_000e:
  2906 0000140D 4883F900                	cmp rcx, 0
  2907 00001411 7413                    	je .L_tc_recycle_frame_done_000e
  2908 00001413 4D8B11                  	mov r10, qword [r9]
  2909 00001416 4D8910                  	mov qword [r8], r10
  2910 00001419 4983E808                	sub r8, 8
  2911 0000141D 4983E908                	sub r9, 8
  2912 00001421 48FFC9                  	dec rcx
  2913 00001424 EBE7                    	jmp .L_tc_recycle_frame_loop_000e
  2914                                  .L_tc_recycle_frame_done_000e:
  2915 00001426 498D6008                	lea rsp, [r8 + 8]
  2916 0000142A 5D                      	pop rbp ; restore the old rbp
  2917 0000142B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2918 0000142E C9                      	leave
  2919 0000142F C21800                  	ret AND_KILL_FRAME(1)
  2920                                  .L_lambda_simple_end_000e:	; new closure is in rax
  2921 00001432 48890425[030D0000]      	mov qword [free_var_36], rax
  2922 0000143A 48B8-                   	mov rax, sob_void
  2922 0000143C [0000000000000000] 
  2923                                  
  2924 00001444 4889C7                  	mov rdi, rax
  2925 00001447 E838A30000              	call print_sexpr_if_not_void
  2926 0000144C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2927 00001451 E8D9A00000              	call malloc
  2928 00001456 50                      	push rax
  2929 00001457 BF00000000              	mov rdi, 8 * 0	; new rib
  2930 0000145C E8CEA00000              	call malloc
  2931 00001461 50                      	push rax
  2932 00001462 BF08000000              	mov rdi, 8 * 1	; extended env
  2933 00001467 E8C3A00000              	call malloc
  2934 0000146C 488B7D10                	mov rdi, ENV
  2935 00001470 BE00000000              	mov rsi, 0
  2936 00001475 BA01000000              	mov rdx, 1
  2937                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  2938 0000147A 4883FE00                	cmp rsi, 0
  2939 0000147E 7410                    	je .L_lambda_simple_env_end_000f
  2940 00001480 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2941 00001484 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2942 00001488 48FFC6                  	inc rsi
  2943 0000148B 48FFC2                  	inc rdx
  2944 0000148E EBEA                    	jmp .L_lambda_simple_env_loop_000f
  2945                                  .L_lambda_simple_env_end_000f:
  2946 00001490 5B                      	pop rbx
  2947 00001491 BE00000000              	mov rsi, 0
  2948                                  .L_lambda_simple_params_loop_000f:	; copy params
  2949 00001496 4883FE00                	cmp rsi, 0
  2950 0000149A 740E                    	je .L_lambda_simple_params_end_000f
  2951 0000149C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2952 000014A1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2953 000014A5 48FFC6                  	inc rsi
  2954 000014A8 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  2955                                  .L_lambda_simple_params_end_000f:
  2956 000014AA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2957 000014AD 4889C3                  	mov rbx, rax
  2958 000014B0 58                      	pop rax
  2959 000014B1 C60004                  	mov byte [rax], T_closure
  2960 000014B4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2961 000014B8 48C74009[C5140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  2962 000014C0 E9A4000000              	jmp .L_lambda_simple_end_000f
  2963                                  .L_lambda_simple_code_000f:	; lambda-simple body
  2964 000014C5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2965 000014CB 740B                    	je .L_lambda_simple_arity_check_ok_000f
  2966 000014CD FF742410                	push qword [rsp + 8 * 2]
  2967 000014D1 6A01                    	push 1
  2968 000014D3 E910A00000              	jmp L_error_incorrect_arity_simple
  2969                                  .L_lambda_simple_arity_check_ok_000f:
  2970 000014D8 C8000000                	enter 0, 0
  2971                                  	; preparing a tail-call
  2972                                  	; preparing a non-tail-call
  2973 000014DC 488B4520                	mov rax, PARAM(0)	; param x
  2974 000014E0 50                      	push rax
  2975 000014E1 6A01                    	push 1	; arg count
  2976 000014E3 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  2977 000014EB 803805                  	cmp byte [rax], T_undefined
  2978 000014EE 0F840E9F0000            	je L_error_fvar_undefined
  2979 000014F4 803804                  	cmp byte [rax], T_closure
  2980 000014F7 0F85899F0000            	jne L_error_non_closure
  2981 000014FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  2982 00001500 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2983 00001503 50                      	push rax
  2984 00001504 6A01                    	push 1	; arg count
  2985 00001506 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  2986 0000150E 803805                  	cmp byte [rax], T_undefined
  2987 00001511 0F84EB9E0000            	je L_error_fvar_undefined
  2988 00001517 803804                  	cmp byte [rax], T_closure
  2989 0000151A 0F85669F0000            	jne L_error_non_closure
  2990 00001520 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2991 00001523 FF7508                  	push qword [rbp + 8 * 1]
  2992                                   ; old ret addr
  2993 00001526 FF7500                  	push qword [rbp]
  2994                                   ; restore the old rbp
  2995 00001529 BB01000000              	mov rbx, 1
  2996 0000152E 4883C303                	add rbx, 3
  2997 00001532 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2998 00001536 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2999 0000153B 4C8D4DF8                	lea r9, [rbp - 8]
  3000 0000153F B905000000              	mov rcx, 5
  3001                                  .L_tc_recycle_frame_loop_000f:
  3002 00001544 4883F900                	cmp rcx, 0
  3003 00001548 7413                    	je .L_tc_recycle_frame_done_000f
  3004 0000154A 4D8B11                  	mov r10, qword [r9]
  3005 0000154D 4D8910                  	mov qword [r8], r10
  3006 00001550 4983E808                	sub r8, 8
  3007 00001554 4983E908                	sub r9, 8
  3008 00001558 48FFC9                  	dec rcx
  3009 0000155B EBE7                    	jmp .L_tc_recycle_frame_loop_000f
  3010                                  .L_tc_recycle_frame_done_000f:
  3011 0000155D 498D6008                	lea rsp, [r8 + 8]
  3012 00001561 5D                      	pop rbp ; restore the old rbp
  3013 00001562 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3014 00001565 C9                      	leave
  3015 00001566 C21800                  	ret AND_KILL_FRAME(1)
  3016                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3017 00001569 48890425[250D0000]      	mov qword [free_var_38], rax
  3018 00001571 48B8-                   	mov rax, sob_void
  3018 00001573 [0000000000000000] 
  3019                                  
  3020 0000157B 4889C7                  	mov rdi, rax
  3021 0000157E E801A20000              	call print_sexpr_if_not_void
  3022 00001583 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3023 00001588 E8A29F0000              	call malloc
  3024 0000158D 50                      	push rax
  3025 0000158E BF00000000              	mov rdi, 8 * 0	; new rib
  3026 00001593 E8979F0000              	call malloc
  3027 00001598 50                      	push rax
  3028 00001599 BF08000000              	mov rdi, 8 * 1	; extended env
  3029 0000159E E88C9F0000              	call malloc
  3030 000015A3 488B7D10                	mov rdi, ENV
  3031 000015A7 BE00000000              	mov rsi, 0
  3032 000015AC BA01000000              	mov rdx, 1
  3033                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3034 000015B1 4883FE00                	cmp rsi, 0
  3035 000015B5 7410                    	je .L_lambda_simple_env_end_0010
  3036 000015B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3037 000015BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3038 000015BF 48FFC6                  	inc rsi
  3039 000015C2 48FFC2                  	inc rdx
  3040 000015C5 EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3041                                  .L_lambda_simple_env_end_0010:
  3042 000015C7 5B                      	pop rbx
  3043 000015C8 BE00000000              	mov rsi, 0
  3044                                  .L_lambda_simple_params_loop_0010:	; copy params
  3045 000015CD 4883FE00                	cmp rsi, 0
  3046 000015D1 740E                    	je .L_lambda_simple_params_end_0010
  3047 000015D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3048 000015D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3049 000015DC 48FFC6                  	inc rsi
  3050 000015DF EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3051                                  .L_lambda_simple_params_end_0010:
  3052 000015E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3053 000015E4 4889C3                  	mov rbx, rax
  3054 000015E7 58                      	pop rax
  3055 000015E8 C60004                  	mov byte [rax], T_closure
  3056 000015EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3057 000015EF 48C74009[FC150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3058 000015F7 E9A4000000              	jmp .L_lambda_simple_end_0010
  3059                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3060 000015FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3061 00001602 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3062 00001604 FF742410                	push qword [rsp + 8 * 2]
  3063 00001608 6A01                    	push 1
  3064 0000160A E9D99E0000              	jmp L_error_incorrect_arity_simple
  3065                                  .L_lambda_simple_arity_check_ok_0010:
  3066 0000160F C8000000                	enter 0, 0
  3067                                  	; preparing a tail-call
  3068                                  	; preparing a non-tail-call
  3069 00001613 488B4520                	mov rax, PARAM(0)	; param x
  3070 00001617 50                      	push rax
  3071 00001618 6A01                    	push 1	; arg count
  3072 0000161A 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  3073 00001622 803805                  	cmp byte [rax], T_undefined
  3074 00001625 0F84D79D0000            	je L_error_fvar_undefined
  3075 0000162B 803804                  	cmp byte [rax], T_closure
  3076 0000162E 0F85529E0000            	jne L_error_non_closure
  3077 00001634 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3078 00001637 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3079 0000163A 50                      	push rax
  3080 0000163B 6A01                    	push 1	; arg count
  3081 0000163D 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  3082 00001645 803805                  	cmp byte [rax], T_undefined
  3083 00001648 0F84B49D0000            	je L_error_fvar_undefined
  3084 0000164E 803804                  	cmp byte [rax], T_closure
  3085 00001651 0F852F9E0000            	jne L_error_non_closure
  3086 00001657 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3087 0000165A FF7508                  	push qword [rbp + 8 * 1]
  3088                                   ; old ret addr
  3089 0000165D FF7500                  	push qword [rbp]
  3090                                   ; restore the old rbp
  3091 00001660 BB01000000              	mov rbx, 1
  3092 00001665 4883C303                	add rbx, 3
  3093 00001669 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3094 0000166D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3095 00001672 4C8D4DF8                	lea r9, [rbp - 8]
  3096 00001676 B905000000              	mov rcx, 5
  3097                                  .L_tc_recycle_frame_loop_0010:
  3098 0000167B 4883F900                	cmp rcx, 0
  3099 0000167F 7413                    	je .L_tc_recycle_frame_done_0010
  3100 00001681 4D8B11                  	mov r10, qword [r9]
  3101 00001684 4D8910                  	mov qword [r8], r10
  3102 00001687 4983E808                	sub r8, 8
  3103 0000168B 4983E908                	sub r9, 8
  3104 0000168F 48FFC9                  	dec rcx
  3105 00001692 EBE7                    	jmp .L_tc_recycle_frame_loop_0010
  3106                                  .L_tc_recycle_frame_done_0010:
  3107 00001694 498D6008                	lea rsp, [r8 + 8]
  3108 00001698 5D                      	pop rbp ; restore the old rbp
  3109 00001699 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3110 0000169C C9                      	leave
  3111 0000169D C21800                  	ret AND_KILL_FRAME(1)
  3112                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3113 000016A0 48890425[360D0000]      	mov qword [free_var_39], rax
  3114 000016A8 48B8-                   	mov rax, sob_void
  3114 000016AA [0000000000000000] 
  3115                                  
  3116 000016B2 4889C7                  	mov rdi, rax
  3117 000016B5 E8CAA00000              	call print_sexpr_if_not_void
  3118 000016BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3119 000016BF E86B9E0000              	call malloc
  3120 000016C4 50                      	push rax
  3121 000016C5 BF00000000              	mov rdi, 8 * 0	; new rib
  3122 000016CA E8609E0000              	call malloc
  3123 000016CF 50                      	push rax
  3124 000016D0 BF08000000              	mov rdi, 8 * 1	; extended env
  3125 000016D5 E8559E0000              	call malloc
  3126 000016DA 488B7D10                	mov rdi, ENV
  3127 000016DE BE00000000              	mov rsi, 0
  3128 000016E3 BA01000000              	mov rdx, 1
  3129                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3130 000016E8 4883FE00                	cmp rsi, 0
  3131 000016EC 7410                    	je .L_lambda_simple_env_end_0011
  3132 000016EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3133 000016F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3134 000016F6 48FFC6                  	inc rsi
  3135 000016F9 48FFC2                  	inc rdx
  3136 000016FC EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3137                                  .L_lambda_simple_env_end_0011:
  3138 000016FE 5B                      	pop rbx
  3139 000016FF BE00000000              	mov rsi, 0
  3140                                  .L_lambda_simple_params_loop_0011:	; copy params
  3141 00001704 4883FE00                	cmp rsi, 0
  3142 00001708 740E                    	je .L_lambda_simple_params_end_0011
  3143 0000170A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3144 0000170F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3145 00001713 48FFC6                  	inc rsi
  3146 00001716 EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3147                                  .L_lambda_simple_params_end_0011:
  3148 00001718 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3149 0000171B 4889C3                  	mov rbx, rax
  3150 0000171E 58                      	pop rax
  3151 0000171F C60004                  	mov byte [rax], T_closure
  3152 00001722 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3153 00001726 48C74009[33170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3154 0000172E E9A4000000              	jmp .L_lambda_simple_end_0011
  3155                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3156 00001733 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3157 00001739 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3158 0000173B FF742410                	push qword [rsp + 8 * 2]
  3159 0000173F 6A01                    	push 1
  3160 00001741 E9A29D0000              	jmp L_error_incorrect_arity_simple
  3161                                  .L_lambda_simple_arity_check_ok_0011:
  3162 00001746 C8000000                	enter 0, 0
  3163                                  	; preparing a tail-call
  3164                                  	; preparing a non-tail-call
  3165 0000174A 488B4520                	mov rax, PARAM(0)	; param x
  3166 0000174E 50                      	push rax
  3167 0000174F 6A01                    	push 1	; arg count
  3168 00001751 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  3169 00001759 803805                  	cmp byte [rax], T_undefined
  3170 0000175C 0F84A09C0000            	je L_error_fvar_undefined
  3171 00001762 803804                  	cmp byte [rax], T_closure
  3172 00001765 0F851B9D0000            	jne L_error_non_closure
  3173 0000176B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3174 0000176E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3175 00001771 50                      	push rax
  3176 00001772 6A01                    	push 1	; arg count
  3177 00001774 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  3178 0000177C 803805                  	cmp byte [rax], T_undefined
  3179 0000177F 0F847D9C0000            	je L_error_fvar_undefined
  3180 00001785 803804                  	cmp byte [rax], T_closure
  3181 00001788 0F85F89C0000            	jne L_error_non_closure
  3182 0000178E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3183 00001791 FF7508                  	push qword [rbp + 8 * 1]
  3184                                   ; old ret addr
  3185 00001794 FF7500                  	push qword [rbp]
  3186                                   ; restore the old rbp
  3187 00001797 BB01000000              	mov rbx, 1
  3188 0000179C 4883C303                	add rbx, 3
  3189 000017A0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3190 000017A4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3191 000017A9 4C8D4DF8                	lea r9, [rbp - 8]
  3192 000017AD B905000000              	mov rcx, 5
  3193                                  .L_tc_recycle_frame_loop_0011:
  3194 000017B2 4883F900                	cmp rcx, 0
  3195 000017B6 7413                    	je .L_tc_recycle_frame_done_0011
  3196 000017B8 4D8B11                  	mov r10, qword [r9]
  3197 000017BB 4D8910                  	mov qword [r8], r10
  3198 000017BE 4983E808                	sub r8, 8
  3199 000017C2 4983E908                	sub r9, 8
  3200 000017C6 48FFC9                  	dec rcx
  3201 000017C9 EBE7                    	jmp .L_tc_recycle_frame_loop_0011
  3202                                  .L_tc_recycle_frame_done_0011:
  3203 000017CB 498D6008                	lea rsp, [r8 + 8]
  3204 000017CF 5D                      	pop rbp ; restore the old rbp
  3205 000017D0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3206 000017D3 C9                      	leave
  3207 000017D4 C21800                  	ret AND_KILL_FRAME(1)
  3208                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3209 000017D7 48890425[690D0000]      	mov qword [free_var_42], rax
  3210 000017DF 48B8-                   	mov rax, sob_void
  3210 000017E1 [0000000000000000] 
  3211                                  
  3212 000017E9 4889C7                  	mov rdi, rax
  3213 000017EC E8939F0000              	call print_sexpr_if_not_void
  3214 000017F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3215 000017F6 E8349D0000              	call malloc
  3216 000017FB 50                      	push rax
  3217 000017FC BF00000000              	mov rdi, 8 * 0	; new rib
  3218 00001801 E8299D0000              	call malloc
  3219 00001806 50                      	push rax
  3220 00001807 BF08000000              	mov rdi, 8 * 1	; extended env
  3221 0000180C E81E9D0000              	call malloc
  3222 00001811 488B7D10                	mov rdi, ENV
  3223 00001815 BE00000000              	mov rsi, 0
  3224 0000181A BA01000000              	mov rdx, 1
  3225                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3226 0000181F 4883FE00                	cmp rsi, 0
  3227 00001823 7410                    	je .L_lambda_simple_env_end_0012
  3228 00001825 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3229 00001829 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3230 0000182D 48FFC6                  	inc rsi
  3231 00001830 48FFC2                  	inc rdx
  3232 00001833 EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3233                                  .L_lambda_simple_env_end_0012:
  3234 00001835 5B                      	pop rbx
  3235 00001836 BE00000000              	mov rsi, 0
  3236                                  .L_lambda_simple_params_loop_0012:	; copy params
  3237 0000183B 4883FE00                	cmp rsi, 0
  3238 0000183F 740E                    	je .L_lambda_simple_params_end_0012
  3239 00001841 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3240 00001846 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3241 0000184A 48FFC6                  	inc rsi
  3242 0000184D EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3243                                  .L_lambda_simple_params_end_0012:
  3244 0000184F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3245 00001852 4889C3                  	mov rbx, rax
  3246 00001855 58                      	pop rax
  3247 00001856 C60004                  	mov byte [rax], T_closure
  3248 00001859 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3249 0000185D 48C74009[6A180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3250 00001865 E9A4000000              	jmp .L_lambda_simple_end_0012
  3251                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3252 0000186A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3253 00001870 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3254 00001872 FF742410                	push qword [rsp + 8 * 2]
  3255 00001876 6A01                    	push 1
  3256 00001878 E96B9C0000              	jmp L_error_incorrect_arity_simple
  3257                                  .L_lambda_simple_arity_check_ok_0012:
  3258 0000187D C8000000                	enter 0, 0
  3259                                  	; preparing a tail-call
  3260                                  	; preparing a non-tail-call
  3261 00001881 488B4520                	mov rax, PARAM(0)	; param x
  3262 00001885 50                      	push rax
  3263 00001886 6A01                    	push 1	; arg count
  3264 00001888 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  3265 00001890 803805                  	cmp byte [rax], T_undefined
  3266 00001893 0F84699B0000            	je L_error_fvar_undefined
  3267 00001899 803804                  	cmp byte [rax], T_closure
  3268 0000189C 0F85E49B0000            	jne L_error_non_closure
  3269 000018A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3270 000018A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3271 000018A8 50                      	push rax
  3272 000018A9 6A01                    	push 1	; arg count
  3273 000018AB 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  3274 000018B3 803805                  	cmp byte [rax], T_undefined
  3275 000018B6 0F84469B0000            	je L_error_fvar_undefined
  3276 000018BC 803804                  	cmp byte [rax], T_closure
  3277 000018BF 0F85C19B0000            	jne L_error_non_closure
  3278 000018C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3279 000018C8 FF7508                  	push qword [rbp + 8 * 1]
  3280                                   ; old ret addr
  3281 000018CB FF7500                  	push qword [rbp]
  3282                                   ; restore the old rbp
  3283 000018CE BB01000000              	mov rbx, 1
  3284 000018D3 4883C303                	add rbx, 3
  3285 000018D7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3286 000018DB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3287 000018E0 4C8D4DF8                	lea r9, [rbp - 8]
  3288 000018E4 B905000000              	mov rcx, 5
  3289                                  .L_tc_recycle_frame_loop_0012:
  3290 000018E9 4883F900                	cmp rcx, 0
  3291 000018ED 7413                    	je .L_tc_recycle_frame_done_0012
  3292 000018EF 4D8B11                  	mov r10, qword [r9]
  3293 000018F2 4D8910                  	mov qword [r8], r10
  3294 000018F5 4983E808                	sub r8, 8
  3295 000018F9 4983E908                	sub r9, 8
  3296 000018FD 48FFC9                  	dec rcx
  3297 00001900 EBE7                    	jmp .L_tc_recycle_frame_loop_0012
  3298                                  .L_tc_recycle_frame_done_0012:
  3299 00001902 498D6008                	lea rsp, [r8 + 8]
  3300 00001906 5D                      	pop rbp ; restore the old rbp
  3301 00001907 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3302 0000190A C9                      	leave
  3303 0000190B C21800                  	ret AND_KILL_FRAME(1)
  3304                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3305 0000190E 48890425[7A0D0000]      	mov qword [free_var_43], rax
  3306 00001916 48B8-                   	mov rax, sob_void
  3306 00001918 [0000000000000000] 
  3307                                  
  3308 00001920 4889C7                  	mov rdi, rax
  3309 00001923 E85C9E0000              	call print_sexpr_if_not_void
  3310 00001928 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3311 0000192D E8FD9B0000              	call malloc
  3312 00001932 50                      	push rax
  3313 00001933 BF00000000              	mov rdi, 8 * 0	; new rib
  3314 00001938 E8F29B0000              	call malloc
  3315 0000193D 50                      	push rax
  3316 0000193E BF08000000              	mov rdi, 8 * 1	; extended env
  3317 00001943 E8E79B0000              	call malloc
  3318 00001948 488B7D10                	mov rdi, ENV
  3319 0000194C BE00000000              	mov rsi, 0
  3320 00001951 BA01000000              	mov rdx, 1
  3321                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3322 00001956 4883FE00                	cmp rsi, 0
  3323 0000195A 7410                    	je .L_lambda_simple_env_end_0013
  3324 0000195C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3325 00001960 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3326 00001964 48FFC6                  	inc rsi
  3327 00001967 48FFC2                  	inc rdx
  3328 0000196A EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3329                                  .L_lambda_simple_env_end_0013:
  3330 0000196C 5B                      	pop rbx
  3331 0000196D BE00000000              	mov rsi, 0
  3332                                  .L_lambda_simple_params_loop_0013:	; copy params
  3333 00001972 4883FE00                	cmp rsi, 0
  3334 00001976 740E                    	je .L_lambda_simple_params_end_0013
  3335 00001978 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3336 0000197D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3337 00001981 48FFC6                  	inc rsi
  3338 00001984 EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3339                                  .L_lambda_simple_params_end_0013:
  3340 00001986 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3341 00001989 4889C3                  	mov rbx, rax
  3342 0000198C 58                      	pop rax
  3343 0000198D C60004                  	mov byte [rax], T_closure
  3344 00001990 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3345 00001994 48C74009[A1190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3346 0000199C E9A4000000              	jmp .L_lambda_simple_end_0013
  3347                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3348 000019A1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3349 000019A7 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3350 000019A9 FF742410                	push qword [rsp + 8 * 2]
  3351 000019AD 6A01                    	push 1
  3352 000019AF E9349B0000              	jmp L_error_incorrect_arity_simple
  3353                                  .L_lambda_simple_arity_check_ok_0013:
  3354 000019B4 C8000000                	enter 0, 0
  3355                                  	; preparing a tail-call
  3356                                  	; preparing a non-tail-call
  3357 000019B8 488B4520                	mov rax, PARAM(0)	; param x
  3358 000019BC 50                      	push rax
  3359 000019BD 6A01                    	push 1	; arg count
  3360 000019BF 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  3361 000019C7 803805                  	cmp byte [rax], T_undefined
  3362 000019CA 0F84329A0000            	je L_error_fvar_undefined
  3363 000019D0 803804                  	cmp byte [rax], T_closure
  3364 000019D3 0F85AD9A0000            	jne L_error_non_closure
  3365 000019D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3366 000019DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  3367 000019DF 50                      	push rax
  3368 000019E0 6A01                    	push 1	; arg count
  3369 000019E2 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  3370 000019EA 803805                  	cmp byte [rax], T_undefined
  3371 000019ED 0F840F9A0000            	je L_error_fvar_undefined
  3372 000019F3 803804                  	cmp byte [rax], T_closure
  3373 000019F6 0F858A9A0000            	jne L_error_non_closure
  3374 000019FC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3375 000019FF FF7508                  	push qword [rbp + 8 * 1]
  3376                                   ; old ret addr
  3377 00001A02 FF7500                  	push qword [rbp]
  3378                                   ; restore the old rbp
  3379 00001A05 BB01000000              	mov rbx, 1
  3380 00001A0A 4883C303                	add rbx, 3
  3381 00001A0E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3382 00001A12 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3383 00001A17 4C8D4DF8                	lea r9, [rbp - 8]
  3384 00001A1B B905000000              	mov rcx, 5
  3385                                  .L_tc_recycle_frame_loop_0013:
  3386 00001A20 4883F900                	cmp rcx, 0
  3387 00001A24 7413                    	je .L_tc_recycle_frame_done_0013
  3388 00001A26 4D8B11                  	mov r10, qword [r9]
  3389 00001A29 4D8910                  	mov qword [r8], r10
  3390 00001A2C 4983E808                	sub r8, 8
  3391 00001A30 4983E908                	sub r9, 8
  3392 00001A34 48FFC9                  	dec rcx
  3393 00001A37 EBE7                    	jmp .L_tc_recycle_frame_loop_0013
  3394                                  .L_tc_recycle_frame_done_0013:
  3395 00001A39 498D6008                	lea rsp, [r8 + 8]
  3396 00001A3D 5D                      	pop rbp ; restore the old rbp
  3397 00001A3E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3398 00001A41 C9                      	leave
  3399 00001A42 C21800                  	ret AND_KILL_FRAME(1)
  3400                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3401 00001A45 48890425[9C0D0000]      	mov qword [free_var_45], rax
  3402 00001A4D 48B8-                   	mov rax, sob_void
  3402 00001A4F [0000000000000000] 
  3403                                  
  3404 00001A57 4889C7                  	mov rdi, rax
  3405 00001A5A E8259D0000              	call print_sexpr_if_not_void
  3406 00001A5F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3407 00001A64 E8C69A0000              	call malloc
  3408 00001A69 50                      	push rax
  3409 00001A6A BF00000000              	mov rdi, 8 * 0	; new rib
  3410 00001A6F E8BB9A0000              	call malloc
  3411 00001A74 50                      	push rax
  3412 00001A75 BF08000000              	mov rdi, 8 * 1	; extended env
  3413 00001A7A E8B09A0000              	call malloc
  3414 00001A7F 488B7D10                	mov rdi, ENV
  3415 00001A83 BE00000000              	mov rsi, 0
  3416 00001A88 BA01000000              	mov rdx, 1
  3417                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  3418 00001A8D 4883FE00                	cmp rsi, 0
  3419 00001A91 7410                    	je .L_lambda_simple_env_end_0014
  3420 00001A93 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3421 00001A97 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3422 00001A9B 48FFC6                  	inc rsi
  3423 00001A9E 48FFC2                  	inc rdx
  3424 00001AA1 EBEA                    	jmp .L_lambda_simple_env_loop_0014
  3425                                  .L_lambda_simple_env_end_0014:
  3426 00001AA3 5B                      	pop rbx
  3427 00001AA4 BE00000000              	mov rsi, 0
  3428                                  .L_lambda_simple_params_loop_0014:	; copy params
  3429 00001AA9 4883FE00                	cmp rsi, 0
  3430 00001AAD 740E                    	je .L_lambda_simple_params_end_0014
  3431 00001AAF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3432 00001AB4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3433 00001AB8 48FFC6                  	inc rsi
  3434 00001ABB EBEC                    	jmp .L_lambda_simple_params_loop_0014
  3435                                  .L_lambda_simple_params_end_0014:
  3436 00001ABD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3437 00001AC0 4889C3                  	mov rbx, rax
  3438 00001AC3 58                      	pop rax
  3439 00001AC4 C60004                  	mov byte [rax], T_closure
  3440 00001AC7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3441 00001ACB 48C74009[D81A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  3442 00001AD3 E9A4000000              	jmp .L_lambda_simple_end_0014
  3443                                  .L_lambda_simple_code_0014:	; lambda-simple body
  3444 00001AD8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3445 00001ADE 740B                    	je .L_lambda_simple_arity_check_ok_0014
  3446 00001AE0 FF742410                	push qword [rsp + 8 * 2]
  3447 00001AE4 6A01                    	push 1
  3448 00001AE6 E9FD990000              	jmp L_error_incorrect_arity_simple
  3449                                  .L_lambda_simple_arity_check_ok_0014:
  3450 00001AEB C8000000                	enter 0, 0
  3451                                  	; preparing a tail-call
  3452                                  	; preparing a non-tail-call
  3453 00001AEF 488B4520                	mov rax, PARAM(0)	; param x
  3454 00001AF3 50                      	push rax
  3455 00001AF4 6A01                    	push 1	; arg count
  3456 00001AF6 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  3457 00001AFE 803805                  	cmp byte [rax], T_undefined
  3458 00001B01 0F84FB980000            	je L_error_fvar_undefined
  3459 00001B07 803804                  	cmp byte [rax], T_closure
  3460 00001B0A 0F8576990000            	jne L_error_non_closure
  3461 00001B10 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3462 00001B13 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3463 00001B16 50                      	push rax
  3464 00001B17 6A01                    	push 1	; arg count
  3465 00001B19 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  3466 00001B21 803805                  	cmp byte [rax], T_undefined
  3467 00001B24 0F84D8980000            	je L_error_fvar_undefined
  3468 00001B2A 803804                  	cmp byte [rax], T_closure
  3469 00001B2D 0F8553990000            	jne L_error_non_closure
  3470 00001B33 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3471 00001B36 FF7508                  	push qword [rbp + 8 * 1]
  3472                                   ; old ret addr
  3473 00001B39 FF7500                  	push qword [rbp]
  3474                                   ; restore the old rbp
  3475 00001B3C BB01000000              	mov rbx, 1
  3476 00001B41 4883C303                	add rbx, 3
  3477 00001B45 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3478 00001B49 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3479 00001B4E 4C8D4DF8                	lea r9, [rbp - 8]
  3480 00001B52 B905000000              	mov rcx, 5
  3481                                  .L_tc_recycle_frame_loop_0014:
  3482 00001B57 4883F900                	cmp rcx, 0
  3483 00001B5B 7413                    	je .L_tc_recycle_frame_done_0014
  3484 00001B5D 4D8B11                  	mov r10, qword [r9]
  3485 00001B60 4D8910                  	mov qword [r8], r10
  3486 00001B63 4983E808                	sub r8, 8
  3487 00001B67 4983E908                	sub r9, 8
  3488 00001B6B 48FFC9                  	dec rcx
  3489 00001B6E EBE7                    	jmp .L_tc_recycle_frame_loop_0014
  3490                                  .L_tc_recycle_frame_done_0014:
  3491 00001B70 498D6008                	lea rsp, [r8 + 8]
  3492 00001B74 5D                      	pop rbp ; restore the old rbp
  3493 00001B75 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3494 00001B78 C9                      	leave
  3495 00001B79 C21800                  	ret AND_KILL_FRAME(1)
  3496                                  .L_lambda_simple_end_0014:	; new closure is in rax
  3497 00001B7C 48890425[AD0D0000]      	mov qword [free_var_46], rax
  3498 00001B84 48B8-                   	mov rax, sob_void
  3498 00001B86 [0000000000000000] 
  3499                                  
  3500 00001B8E 4889C7                  	mov rdi, rax
  3501 00001B91 E8EE9B0000              	call print_sexpr_if_not_void
  3502 00001B96 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3503 00001B9B E88F990000              	call malloc
  3504 00001BA0 50                      	push rax
  3505 00001BA1 BF00000000              	mov rdi, 8 * 0	; new rib
  3506 00001BA6 E884990000              	call malloc
  3507 00001BAB 50                      	push rax
  3508 00001BAC BF08000000              	mov rdi, 8 * 1	; extended env
  3509 00001BB1 E879990000              	call malloc
  3510 00001BB6 488B7D10                	mov rdi, ENV
  3511 00001BBA BE00000000              	mov rsi, 0
  3512 00001BBF BA01000000              	mov rdx, 1
  3513                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  3514 00001BC4 4883FE00                	cmp rsi, 0
  3515 00001BC8 7410                    	je .L_lambda_simple_env_end_0015
  3516 00001BCA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3517 00001BCE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3518 00001BD2 48FFC6                  	inc rsi
  3519 00001BD5 48FFC2                  	inc rdx
  3520 00001BD8 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  3521                                  .L_lambda_simple_env_end_0015:
  3522 00001BDA 5B                      	pop rbx
  3523 00001BDB BE00000000              	mov rsi, 0
  3524                                  .L_lambda_simple_params_loop_0015:	; copy params
  3525 00001BE0 4883FE00                	cmp rsi, 0
  3526 00001BE4 740E                    	je .L_lambda_simple_params_end_0015
  3527 00001BE6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3528 00001BEB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3529 00001BEF 48FFC6                  	inc rsi
  3530 00001BF2 EBEC                    	jmp .L_lambda_simple_params_loop_0015
  3531                                  .L_lambda_simple_params_end_0015:
  3532 00001BF4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3533 00001BF7 4889C3                  	mov rbx, rax
  3534 00001BFA 58                      	pop rax
  3535 00001BFB C60004                  	mov byte [rax], T_closure
  3536 00001BFE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3537 00001C02 48C74009[0F1C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  3538 00001C0A E9A4000000              	jmp .L_lambda_simple_end_0015
  3539                                  .L_lambda_simple_code_0015:	; lambda-simple body
  3540 00001C0F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3541 00001C15 740B                    	je .L_lambda_simple_arity_check_ok_0015
  3542 00001C17 FF742410                	push qword [rsp + 8 * 2]
  3543 00001C1B 6A01                    	push 1
  3544 00001C1D E9C6980000              	jmp L_error_incorrect_arity_simple
  3545                                  .L_lambda_simple_arity_check_ok_0015:
  3546 00001C22 C8000000                	enter 0, 0
  3547                                  	; preparing a tail-call
  3548                                  	; preparing a non-tail-call
  3549 00001C26 488B4520                	mov rax, PARAM(0)	; param x
  3550 00001C2A 50                      	push rax
  3551 00001C2B 6A01                    	push 1	; arg count
  3552 00001C2D 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  3553 00001C35 803805                  	cmp byte [rax], T_undefined
  3554 00001C38 0F84C4970000            	je L_error_fvar_undefined
  3555 00001C3E 803804                  	cmp byte [rax], T_closure
  3556 00001C41 0F853F980000            	jne L_error_non_closure
  3557 00001C47 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3558 00001C4A FF5009                  	call SOB_CLOSURE_CODE(rax)
  3559 00001C4D 50                      	push rax
  3560 00001C4E 6A01                    	push 1	; arg count
  3561 00001C50 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  3562 00001C58 803805                  	cmp byte [rax], T_undefined
  3563 00001C5B 0F84A1970000            	je L_error_fvar_undefined
  3564 00001C61 803804                  	cmp byte [rax], T_closure
  3565 00001C64 0F851C980000            	jne L_error_non_closure
  3566 00001C6A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3567 00001C6D FF7508                  	push qword [rbp + 8 * 1]
  3568                                   ; old ret addr
  3569 00001C70 FF7500                  	push qword [rbp]
  3570                                   ; restore the old rbp
  3571 00001C73 BB01000000              	mov rbx, 1
  3572 00001C78 4883C303                	add rbx, 3
  3573 00001C7C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3574 00001C80 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3575 00001C85 4C8D4DF8                	lea r9, [rbp - 8]
  3576 00001C89 B905000000              	mov rcx, 5
  3577                                  .L_tc_recycle_frame_loop_0015:
  3578 00001C8E 4883F900                	cmp rcx, 0
  3579 00001C92 7413                    	je .L_tc_recycle_frame_done_0015
  3580 00001C94 4D8B11                  	mov r10, qword [r9]
  3581 00001C97 4D8910                  	mov qword [r8], r10
  3582 00001C9A 4983E808                	sub r8, 8
  3583 00001C9E 4983E908                	sub r9, 8
  3584 00001CA2 48FFC9                  	dec rcx
  3585 00001CA5 EBE7                    	jmp .L_tc_recycle_frame_loop_0015
  3586                                  .L_tc_recycle_frame_done_0015:
  3587 00001CA7 498D6008                	lea rsp, [r8 + 8]
  3588 00001CAB 5D                      	pop rbp ; restore the old rbp
  3589 00001CAC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3590 00001CAF C9                      	leave
  3591 00001CB0 C21800                  	ret AND_KILL_FRAME(1)
  3592                                  .L_lambda_simple_end_0015:	; new closure is in rax
  3593 00001CB3 48890425[F10D0000]      	mov qword [free_var_50], rax
  3594 00001CBB 48B8-                   	mov rax, sob_void
  3594 00001CBD [0000000000000000] 
  3595                                  
  3596 00001CC5 4889C7                  	mov rdi, rax
  3597 00001CC8 E8B79A0000              	call print_sexpr_if_not_void
  3598 00001CCD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3599 00001CD2 E858980000              	call malloc
  3600 00001CD7 50                      	push rax
  3601 00001CD8 BF00000000              	mov rdi, 8 * 0	; new rib
  3602 00001CDD E84D980000              	call malloc
  3603 00001CE2 50                      	push rax
  3604 00001CE3 BF08000000              	mov rdi, 8 * 1	; extended env
  3605 00001CE8 E842980000              	call malloc
  3606 00001CED 488B7D10                	mov rdi, ENV
  3607 00001CF1 BE00000000              	mov rsi, 0
  3608 00001CF6 BA01000000              	mov rdx, 1
  3609                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  3610 00001CFB 4883FE00                	cmp rsi, 0
  3611 00001CFF 7410                    	je .L_lambda_simple_env_end_0016
  3612 00001D01 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3613 00001D05 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3614 00001D09 48FFC6                  	inc rsi
  3615 00001D0C 48FFC2                  	inc rdx
  3616 00001D0F EBEA                    	jmp .L_lambda_simple_env_loop_0016
  3617                                  .L_lambda_simple_env_end_0016:
  3618 00001D11 5B                      	pop rbx
  3619 00001D12 BE00000000              	mov rsi, 0
  3620                                  .L_lambda_simple_params_loop_0016:	; copy params
  3621 00001D17 4883FE00                	cmp rsi, 0
  3622 00001D1B 740E                    	je .L_lambda_simple_params_end_0016
  3623 00001D1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3624 00001D22 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3625 00001D26 48FFC6                  	inc rsi
  3626 00001D29 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  3627                                  .L_lambda_simple_params_end_0016:
  3628 00001D2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3629 00001D2E 4889C3                  	mov rbx, rax
  3630 00001D31 58                      	pop rax
  3631 00001D32 C60004                  	mov byte [rax], T_closure
  3632 00001D35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3633 00001D39 48C74009[461D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  3634 00001D41 E9A4000000              	jmp .L_lambda_simple_end_0016
  3635                                  .L_lambda_simple_code_0016:	; lambda-simple body
  3636 00001D46 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3637 00001D4C 740B                    	je .L_lambda_simple_arity_check_ok_0016
  3638 00001D4E FF742410                	push qword [rsp + 8 * 2]
  3639 00001D52 6A01                    	push 1
  3640 00001D54 E98F970000              	jmp L_error_incorrect_arity_simple
  3641                                  .L_lambda_simple_arity_check_ok_0016:
  3642 00001D59 C8000000                	enter 0, 0
  3643                                  	; preparing a tail-call
  3644                                  	; preparing a non-tail-call
  3645 00001D5D 488B4520                	mov rax, PARAM(0)	; param x
  3646 00001D61 50                      	push rax
  3647 00001D62 6A01                    	push 1	; arg count
  3648 00001D64 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  3649 00001D6C 803805                  	cmp byte [rax], T_undefined
  3650 00001D6F 0F848D960000            	je L_error_fvar_undefined
  3651 00001D75 803804                  	cmp byte [rax], T_closure
  3652 00001D78 0F8508970000            	jne L_error_non_closure
  3653 00001D7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3654 00001D81 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3655 00001D84 50                      	push rax
  3656 00001D85 6A01                    	push 1	; arg count
  3657 00001D87 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  3658 00001D8F 803805                  	cmp byte [rax], T_undefined
  3659 00001D92 0F846A960000            	je L_error_fvar_undefined
  3660 00001D98 803804                  	cmp byte [rax], T_closure
  3661 00001D9B 0F85E5960000            	jne L_error_non_closure
  3662 00001DA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3663 00001DA4 FF7508                  	push qword [rbp + 8 * 1]
  3664                                   ; old ret addr
  3665 00001DA7 FF7500                  	push qword [rbp]
  3666                                   ; restore the old rbp
  3667 00001DAA BB01000000              	mov rbx, 1
  3668 00001DAF 4883C303                	add rbx, 3
  3669 00001DB3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3670 00001DB7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3671 00001DBC 4C8D4DF8                	lea r9, [rbp - 8]
  3672 00001DC0 B905000000              	mov rcx, 5
  3673                                  .L_tc_recycle_frame_loop_0016:
  3674 00001DC5 4883F900                	cmp rcx, 0
  3675 00001DC9 7413                    	je .L_tc_recycle_frame_done_0016
  3676 00001DCB 4D8B11                  	mov r10, qword [r9]
  3677 00001DCE 4D8910                  	mov qword [r8], r10
  3678 00001DD1 4983E808                	sub r8, 8
  3679 00001DD5 4983E908                	sub r9, 8
  3680 00001DD9 48FFC9                  	dec rcx
  3681 00001DDC EBE7                    	jmp .L_tc_recycle_frame_loop_0016
  3682                                  .L_tc_recycle_frame_done_0016:
  3683 00001DDE 498D6008                	lea rsp, [r8 + 8]
  3684 00001DE2 5D                      	pop rbp ; restore the old rbp
  3685 00001DE3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3686 00001DE6 C9                      	leave
  3687 00001DE7 C21800                  	ret AND_KILL_FRAME(1)
  3688                                  .L_lambda_simple_end_0016:	; new closure is in rax
  3689 00001DEA 48890425[020E0000]      	mov qword [free_var_51], rax
  3690 00001DF2 48B8-                   	mov rax, sob_void
  3690 00001DF4 [0000000000000000] 
  3691                                  
  3692 00001DFC 4889C7                  	mov rdi, rax
  3693 00001DFF E880990000              	call print_sexpr_if_not_void
  3694 00001E04 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3695 00001E09 E821970000              	call malloc
  3696 00001E0E 50                      	push rax
  3697 00001E0F BF00000000              	mov rdi, 8 * 0	; new rib
  3698 00001E14 E816970000              	call malloc
  3699 00001E19 50                      	push rax
  3700 00001E1A BF08000000              	mov rdi, 8 * 1	; extended env
  3701 00001E1F E80B970000              	call malloc
  3702 00001E24 488B7D10                	mov rdi, ENV
  3703 00001E28 BE00000000              	mov rsi, 0
  3704 00001E2D BA01000000              	mov rdx, 1
  3705                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  3706 00001E32 4883FE00                	cmp rsi, 0
  3707 00001E36 7410                    	je .L_lambda_simple_env_end_0017
  3708 00001E38 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3709 00001E3C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3710 00001E40 48FFC6                  	inc rsi
  3711 00001E43 48FFC2                  	inc rdx
  3712 00001E46 EBEA                    	jmp .L_lambda_simple_env_loop_0017
  3713                                  .L_lambda_simple_env_end_0017:
  3714 00001E48 5B                      	pop rbx
  3715 00001E49 BE00000000              	mov rsi, 0
  3716                                  .L_lambda_simple_params_loop_0017:	; copy params
  3717 00001E4E 4883FE00                	cmp rsi, 0
  3718 00001E52 740E                    	je .L_lambda_simple_params_end_0017
  3719 00001E54 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3720 00001E59 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3721 00001E5D 48FFC6                  	inc rsi
  3722 00001E60 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  3723                                  .L_lambda_simple_params_end_0017:
  3724 00001E62 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3725 00001E65 4889C3                  	mov rbx, rax
  3726 00001E68 58                      	pop rax
  3727 00001E69 C60004                  	mov byte [rax], T_closure
  3728 00001E6C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3729 00001E70 48C74009[7D1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  3730 00001E78 E9A4000000              	jmp .L_lambda_simple_end_0017
  3731                                  .L_lambda_simple_code_0017:	; lambda-simple body
  3732 00001E7D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3733 00001E83 740B                    	je .L_lambda_simple_arity_check_ok_0017
  3734 00001E85 FF742410                	push qword [rsp + 8 * 2]
  3735 00001E89 6A01                    	push 1
  3736 00001E8B E958960000              	jmp L_error_incorrect_arity_simple
  3737                                  .L_lambda_simple_arity_check_ok_0017:
  3738 00001E90 C8000000                	enter 0, 0
  3739                                  	; preparing a tail-call
  3740                                  	; preparing a non-tail-call
  3741 00001E94 488B4520                	mov rax, PARAM(0)	; param x
  3742 00001E98 50                      	push rax
  3743 00001E99 6A01                    	push 1	; arg count
  3744 00001E9B 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  3745 00001EA3 803805                  	cmp byte [rax], T_undefined
  3746 00001EA6 0F8456950000            	je L_error_fvar_undefined
  3747 00001EAC 803804                  	cmp byte [rax], T_closure
  3748 00001EAF 0F85D1950000            	jne L_error_non_closure
  3749 00001EB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3750 00001EB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3751 00001EBB 50                      	push rax
  3752 00001EBC 6A01                    	push 1	; arg count
  3753 00001EBE 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  3754 00001EC6 803805                  	cmp byte [rax], T_undefined
  3755 00001EC9 0F8433950000            	je L_error_fvar_undefined
  3756 00001ECF 803804                  	cmp byte [rax], T_closure
  3757 00001ED2 0F85AE950000            	jne L_error_non_closure
  3758 00001ED8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3759 00001EDB FF7508                  	push qword [rbp + 8 * 1]
  3760                                   ; old ret addr
  3761 00001EDE FF7500                  	push qword [rbp]
  3762                                   ; restore the old rbp
  3763 00001EE1 BB01000000              	mov rbx, 1
  3764 00001EE6 4883C303                	add rbx, 3
  3765 00001EEA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3766 00001EEE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3767 00001EF3 4C8D4DF8                	lea r9, [rbp - 8]
  3768 00001EF7 B905000000              	mov rcx, 5
  3769                                  .L_tc_recycle_frame_loop_0017:
  3770 00001EFC 4883F900                	cmp rcx, 0
  3771 00001F00 7413                    	je .L_tc_recycle_frame_done_0017
  3772 00001F02 4D8B11                  	mov r10, qword [r9]
  3773 00001F05 4D8910                  	mov qword [r8], r10
  3774 00001F08 4983E808                	sub r8, 8
  3775 00001F0C 4983E908                	sub r9, 8
  3776 00001F10 48FFC9                  	dec rcx
  3777 00001F13 EBE7                    	jmp .L_tc_recycle_frame_loop_0017
  3778                                  .L_tc_recycle_frame_done_0017:
  3779 00001F15 498D6008                	lea rsp, [r8 + 8]
  3780 00001F19 5D                      	pop rbp ; restore the old rbp
  3781 00001F1A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3782 00001F1D C9                      	leave
  3783 00001F1E C21800                  	ret AND_KILL_FRAME(1)
  3784                                  .L_lambda_simple_end_0017:	; new closure is in rax
  3785 00001F21 48890425[240E0000]      	mov qword [free_var_53], rax
  3786 00001F29 48B8-                   	mov rax, sob_void
  3786 00001F2B [0000000000000000] 
  3787                                  
  3788 00001F33 4889C7                  	mov rdi, rax
  3789 00001F36 E849980000              	call print_sexpr_if_not_void
  3790 00001F3B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3791 00001F40 E8EA950000              	call malloc
  3792 00001F45 50                      	push rax
  3793 00001F46 BF00000000              	mov rdi, 8 * 0	; new rib
  3794 00001F4B E8DF950000              	call malloc
  3795 00001F50 50                      	push rax
  3796 00001F51 BF08000000              	mov rdi, 8 * 1	; extended env
  3797 00001F56 E8D4950000              	call malloc
  3798 00001F5B 488B7D10                	mov rdi, ENV
  3799 00001F5F BE00000000              	mov rsi, 0
  3800 00001F64 BA01000000              	mov rdx, 1
  3801                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  3802 00001F69 4883FE00                	cmp rsi, 0
  3803 00001F6D 7410                    	je .L_lambda_simple_env_end_0018
  3804 00001F6F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3805 00001F73 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3806 00001F77 48FFC6                  	inc rsi
  3807 00001F7A 48FFC2                  	inc rdx
  3808 00001F7D EBEA                    	jmp .L_lambda_simple_env_loop_0018
  3809                                  .L_lambda_simple_env_end_0018:
  3810 00001F7F 5B                      	pop rbx
  3811 00001F80 BE00000000              	mov rsi, 0
  3812                                  .L_lambda_simple_params_loop_0018:	; copy params
  3813 00001F85 4883FE00                	cmp rsi, 0
  3814 00001F89 740E                    	je .L_lambda_simple_params_end_0018
  3815 00001F8B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3816 00001F90 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3817 00001F94 48FFC6                  	inc rsi
  3818 00001F97 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  3819                                  .L_lambda_simple_params_end_0018:
  3820 00001F99 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3821 00001F9C 4889C3                  	mov rbx, rax
  3822 00001F9F 58                      	pop rax
  3823 00001FA0 C60004                  	mov byte [rax], T_closure
  3824 00001FA3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3825 00001FA7 48C74009[B41F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  3826 00001FAF E9A4000000              	jmp .L_lambda_simple_end_0018
  3827                                  .L_lambda_simple_code_0018:	; lambda-simple body
  3828 00001FB4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3829 00001FBA 740B                    	je .L_lambda_simple_arity_check_ok_0018
  3830 00001FBC FF742410                	push qword [rsp + 8 * 2]
  3831 00001FC0 6A01                    	push 1
  3832 00001FC2 E921950000              	jmp L_error_incorrect_arity_simple
  3833                                  .L_lambda_simple_arity_check_ok_0018:
  3834 00001FC7 C8000000                	enter 0, 0
  3835                                  	; preparing a tail-call
  3836                                  	; preparing a non-tail-call
  3837 00001FCB 488B4520                	mov rax, PARAM(0)	; param x
  3838 00001FCF 50                      	push rax
  3839 00001FD0 6A01                    	push 1	; arg count
  3840 00001FD2 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  3841 00001FDA 803805                  	cmp byte [rax], T_undefined
  3842 00001FDD 0F841F940000            	je L_error_fvar_undefined
  3843 00001FE3 803804                  	cmp byte [rax], T_closure
  3844 00001FE6 0F859A940000            	jne L_error_non_closure
  3845 00001FEC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3846 00001FEF FF5009                  	call SOB_CLOSURE_CODE(rax)
  3847 00001FF2 50                      	push rax
  3848 00001FF3 6A01                    	push 1	; arg count
  3849 00001FF5 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  3850 00001FFD 803805                  	cmp byte [rax], T_undefined
  3851 00002000 0F84FC930000            	je L_error_fvar_undefined
  3852 00002006 803804                  	cmp byte [rax], T_closure
  3853 00002009 0F8577940000            	jne L_error_non_closure
  3854 0000200F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3855 00002012 FF7508                  	push qword [rbp + 8 * 1]
  3856                                   ; old ret addr
  3857 00002015 FF7500                  	push qword [rbp]
  3858                                   ; restore the old rbp
  3859 00002018 BB01000000              	mov rbx, 1
  3860 0000201D 4883C303                	add rbx, 3
  3861 00002021 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3862 00002025 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3863 0000202A 4C8D4DF8                	lea r9, [rbp - 8]
  3864 0000202E B905000000              	mov rcx, 5
  3865                                  .L_tc_recycle_frame_loop_0018:
  3866 00002033 4883F900                	cmp rcx, 0
  3867 00002037 7413                    	je .L_tc_recycle_frame_done_0018
  3868 00002039 4D8B11                  	mov r10, qword [r9]
  3869 0000203C 4D8910                  	mov qword [r8], r10
  3870 0000203F 4983E808                	sub r8, 8
  3871 00002043 4983E908                	sub r9, 8
  3872 00002047 48FFC9                  	dec rcx
  3873 0000204A EBE7                    	jmp .L_tc_recycle_frame_loop_0018
  3874                                  .L_tc_recycle_frame_done_0018:
  3875 0000204C 498D6008                	lea rsp, [r8 + 8]
  3876 00002050 5D                      	pop rbp ; restore the old rbp
  3877 00002051 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3878 00002054 C9                      	leave
  3879 00002055 C21800                  	ret AND_KILL_FRAME(1)
  3880                                  .L_lambda_simple_end_0018:	; new closure is in rax
  3881 00002058 48890425[350E0000]      	mov qword [free_var_54], rax
  3882 00002060 48B8-                   	mov rax, sob_void
  3882 00002062 [0000000000000000] 
  3883                                  
  3884 0000206A 4889C7                  	mov rdi, rax
  3885 0000206D E812970000              	call print_sexpr_if_not_void
  3886 00002072 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3887 00002077 E8B3940000              	call malloc
  3888 0000207C 50                      	push rax
  3889 0000207D BF00000000              	mov rdi, 8 * 0	; new rib
  3890 00002082 E8A8940000              	call malloc
  3891 00002087 50                      	push rax
  3892 00002088 BF08000000              	mov rdi, 8 * 1	; extended env
  3893 0000208D E89D940000              	call malloc
  3894 00002092 488B7D10                	mov rdi, ENV
  3895 00002096 BE00000000              	mov rsi, 0
  3896 0000209B BA01000000              	mov rdx, 1
  3897                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  3898 000020A0 4883FE00                	cmp rsi, 0
  3899 000020A4 7410                    	je .L_lambda_simple_env_end_0019
  3900 000020A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3901 000020AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3902 000020AE 48FFC6                  	inc rsi
  3903 000020B1 48FFC2                  	inc rdx
  3904 000020B4 EBEA                    	jmp .L_lambda_simple_env_loop_0019
  3905                                  .L_lambda_simple_env_end_0019:
  3906 000020B6 5B                      	pop rbx
  3907 000020B7 BE00000000              	mov rsi, 0
  3908                                  .L_lambda_simple_params_loop_0019:	; copy params
  3909 000020BC 4883FE00                	cmp rsi, 0
  3910 000020C0 740E                    	je .L_lambda_simple_params_end_0019
  3911 000020C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3912 000020C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3913 000020CB 48FFC6                  	inc rsi
  3914 000020CE EBEC                    	jmp .L_lambda_simple_params_loop_0019
  3915                                  .L_lambda_simple_params_end_0019:
  3916 000020D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3917 000020D3 4889C3                  	mov rbx, rax
  3918 000020D6 58                      	pop rax
  3919 000020D7 C60004                  	mov byte [rax], T_closure
  3920 000020DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3921 000020DE 48C74009[EB200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  3922 000020E6 E9A4000000              	jmp .L_lambda_simple_end_0019
  3923                                  .L_lambda_simple_code_0019:	; lambda-simple body
  3924 000020EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3925 000020F1 740B                    	je .L_lambda_simple_arity_check_ok_0019
  3926 000020F3 FF742410                	push qword [rsp + 8 * 2]
  3927 000020F7 6A01                    	push 1
  3928 000020F9 E9EA930000              	jmp L_error_incorrect_arity_simple
  3929                                  .L_lambda_simple_arity_check_ok_0019:
  3930 000020FE C8000000                	enter 0, 0
  3931                                  	; preparing a tail-call
  3932                                  	; preparing a non-tail-call
  3933 00002102 488B4520                	mov rax, PARAM(0)	; param x
  3934 00002106 50                      	push rax
  3935 00002107 6A01                    	push 1	; arg count
  3936 00002109 488B0425[580D0000]      	mov rax, qword [free_var_41]	; free var caar
  3937 00002111 803805                  	cmp byte [rax], T_undefined
  3938 00002114 0F84E8920000            	je L_error_fvar_undefined
  3939 0000211A 803804                  	cmp byte [rax], T_closure
  3940 0000211D 0F8563930000            	jne L_error_non_closure
  3941 00002123 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3942 00002126 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3943 00002129 50                      	push rax
  3944 0000212A 6A01                    	push 1	; arg count
  3945 0000212C 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  3946 00002134 803805                  	cmp byte [rax], T_undefined
  3947 00002137 0F84C5920000            	je L_error_fvar_undefined
  3948 0000213D 803804                  	cmp byte [rax], T_closure
  3949 00002140 0F8540930000            	jne L_error_non_closure
  3950 00002146 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3951 00002149 FF7508                  	push qword [rbp + 8 * 1]
  3952                                   ; old ret addr
  3953 0000214C FF7500                  	push qword [rbp]
  3954                                   ; restore the old rbp
  3955 0000214F BB01000000              	mov rbx, 1
  3956 00002154 4883C303                	add rbx, 3
  3957 00002158 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3958 0000215C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3959 00002161 4C8D4DF8                	lea r9, [rbp - 8]
  3960 00002165 B905000000              	mov rcx, 5
  3961                                  .L_tc_recycle_frame_loop_0019:
  3962 0000216A 4883F900                	cmp rcx, 0
  3963 0000216E 7413                    	je .L_tc_recycle_frame_done_0019
  3964 00002170 4D8B11                  	mov r10, qword [r9]
  3965 00002173 4D8910                  	mov qword [r8], r10
  3966 00002176 4983E808                	sub r8, 8
  3967 0000217A 4983E908                	sub r9, 8
  3968 0000217E 48FFC9                  	dec rcx
  3969 00002181 EBE7                    	jmp .L_tc_recycle_frame_loop_0019
  3970                                  .L_tc_recycle_frame_done_0019:
  3971 00002183 498D6008                	lea rsp, [r8 + 8]
  3972 00002187 5D                      	pop rbp ; restore the old rbp
  3973 00002188 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3974 0000218B C9                      	leave
  3975 0000218C C21800                  	ret AND_KILL_FRAME(1)
  3976                                  .L_lambda_simple_end_0019:	; new closure is in rax
  3977 0000218F 48890425[680E0000]      	mov qword [free_var_57], rax
  3978 00002197 48B8-                   	mov rax, sob_void
  3978 00002199 [0000000000000000] 
  3979                                  
  3980 000021A1 4889C7                  	mov rdi, rax
  3981 000021A4 E8DB950000              	call print_sexpr_if_not_void
  3982 000021A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3983 000021AE E87C930000              	call malloc
  3984 000021B3 50                      	push rax
  3985 000021B4 BF00000000              	mov rdi, 8 * 0	; new rib
  3986 000021B9 E871930000              	call malloc
  3987 000021BE 50                      	push rax
  3988 000021BF BF08000000              	mov rdi, 8 * 1	; extended env
  3989 000021C4 E866930000              	call malloc
  3990 000021C9 488B7D10                	mov rdi, ENV
  3991 000021CD BE00000000              	mov rsi, 0
  3992 000021D2 BA01000000              	mov rdx, 1
  3993                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  3994 000021D7 4883FE00                	cmp rsi, 0
  3995 000021DB 7410                    	je .L_lambda_simple_env_end_001a
  3996 000021DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3997 000021E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3998 000021E5 48FFC6                  	inc rsi
  3999 000021E8 48FFC2                  	inc rdx
  4000 000021EB EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4001                                  .L_lambda_simple_env_end_001a:
  4002 000021ED 5B                      	pop rbx
  4003 000021EE BE00000000              	mov rsi, 0
  4004                                  .L_lambda_simple_params_loop_001a:	; copy params
  4005 000021F3 4883FE00                	cmp rsi, 0
  4006 000021F7 740E                    	je .L_lambda_simple_params_end_001a
  4007 000021F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4008 000021FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4009 00002202 48FFC6                  	inc rsi
  4010 00002205 EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4011                                  .L_lambda_simple_params_end_001a:
  4012 00002207 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4013 0000220A 4889C3                  	mov rbx, rax
  4014 0000220D 58                      	pop rax
  4015 0000220E C60004                  	mov byte [rax], T_closure
  4016 00002211 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4017 00002215 48C74009[22220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4018 0000221D E9A4000000              	jmp .L_lambda_simple_end_001a
  4019                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4020 00002222 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4021 00002228 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4022 0000222A FF742410                	push qword [rsp + 8 * 2]
  4023 0000222E 6A01                    	push 1
  4024 00002230 E9B3920000              	jmp L_error_incorrect_arity_simple
  4025                                  .L_lambda_simple_arity_check_ok_001a:
  4026 00002235 C8000000                	enter 0, 0
  4027                                  	; preparing a tail-call
  4028                                  	; preparing a non-tail-call
  4029 00002239 488B4520                	mov rax, PARAM(0)	; param x
  4030 0000223D 50                      	push rax
  4031 0000223E 6A01                    	push 1	; arg count
  4032 00002240 488B0425[CF0D0000]      	mov rax, qword [free_var_48]	; free var cadr
  4033 00002248 803805                  	cmp byte [rax], T_undefined
  4034 0000224B 0F84B1910000            	je L_error_fvar_undefined
  4035 00002251 803804                  	cmp byte [rax], T_closure
  4036 00002254 0F852C920000            	jne L_error_non_closure
  4037 0000225A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4038 0000225D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4039 00002260 50                      	push rax
  4040 00002261 6A01                    	push 1	; arg count
  4041 00002263 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  4042 0000226B 803805                  	cmp byte [rax], T_undefined
  4043 0000226E 0F848E910000            	je L_error_fvar_undefined
  4044 00002274 803804                  	cmp byte [rax], T_closure
  4045 00002277 0F8509920000            	jne L_error_non_closure
  4046 0000227D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4047 00002280 FF7508                  	push qword [rbp + 8 * 1]
  4048                                   ; old ret addr
  4049 00002283 FF7500                  	push qword [rbp]
  4050                                   ; restore the old rbp
  4051 00002286 BB01000000              	mov rbx, 1
  4052 0000228B 4883C303                	add rbx, 3
  4053 0000228F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4054 00002293 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4055 00002298 4C8D4DF8                	lea r9, [rbp - 8]
  4056 0000229C B905000000              	mov rcx, 5
  4057                                  .L_tc_recycle_frame_loop_001a:
  4058 000022A1 4883F900                	cmp rcx, 0
  4059 000022A5 7413                    	je .L_tc_recycle_frame_done_001a
  4060 000022A7 4D8B11                  	mov r10, qword [r9]
  4061 000022AA 4D8910                  	mov qword [r8], r10
  4062 000022AD 4983E808                	sub r8, 8
  4063 000022B1 4983E908                	sub r9, 8
  4064 000022B5 48FFC9                  	dec rcx
  4065 000022B8 EBE7                    	jmp .L_tc_recycle_frame_loop_001a
  4066                                  .L_tc_recycle_frame_done_001a:
  4067 000022BA 498D6008                	lea rsp, [r8 + 8]
  4068 000022BE 5D                      	pop rbp ; restore the old rbp
  4069 000022BF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4070 000022C2 C9                      	leave
  4071 000022C3 C21800                  	ret AND_KILL_FRAME(1)
  4072                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4073 000022C6 48890425[790E0000]      	mov qword [free_var_58], rax
  4074 000022CE 48B8-                   	mov rax, sob_void
  4074 000022D0 [0000000000000000] 
  4075                                  
  4076 000022D8 4889C7                  	mov rdi, rax
  4077 000022DB E8A4940000              	call print_sexpr_if_not_void
  4078 000022E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4079 000022E5 E845920000              	call malloc
  4080 000022EA 50                      	push rax
  4081 000022EB BF00000000              	mov rdi, 8 * 0	; new rib
  4082 000022F0 E83A920000              	call malloc
  4083 000022F5 50                      	push rax
  4084 000022F6 BF08000000              	mov rdi, 8 * 1	; extended env
  4085 000022FB E82F920000              	call malloc
  4086 00002300 488B7D10                	mov rdi, ENV
  4087 00002304 BE00000000              	mov rsi, 0
  4088 00002309 BA01000000              	mov rdx, 1
  4089                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4090 0000230E 4883FE00                	cmp rsi, 0
  4091 00002312 7410                    	je .L_lambda_simple_env_end_001b
  4092 00002314 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4093 00002318 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4094 0000231C 48FFC6                  	inc rsi
  4095 0000231F 48FFC2                  	inc rdx
  4096 00002322 EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4097                                  .L_lambda_simple_env_end_001b:
  4098 00002324 5B                      	pop rbx
  4099 00002325 BE00000000              	mov rsi, 0
  4100                                  .L_lambda_simple_params_loop_001b:	; copy params
  4101 0000232A 4883FE00                	cmp rsi, 0
  4102 0000232E 740E                    	je .L_lambda_simple_params_end_001b
  4103 00002330 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4104 00002335 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4105 00002339 48FFC6                  	inc rsi
  4106 0000233C EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4107                                  .L_lambda_simple_params_end_001b:
  4108 0000233E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4109 00002341 4889C3                  	mov rbx, rax
  4110 00002344 58                      	pop rax
  4111 00002345 C60004                  	mov byte [rax], T_closure
  4112 00002348 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4113 0000234C 48C74009[59230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4114 00002354 E9A4000000              	jmp .L_lambda_simple_end_001b
  4115                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4116 00002359 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4117 0000235F 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4118 00002361 FF742410                	push qword [rsp + 8 * 2]
  4119 00002365 6A01                    	push 1
  4120 00002367 E97C910000              	jmp L_error_incorrect_arity_simple
  4121                                  .L_lambda_simple_arity_check_ok_001b:
  4122 0000236C C8000000                	enter 0, 0
  4123                                  	; preparing a tail-call
  4124                                  	; preparing a non-tail-call
  4125 00002370 488B4520                	mov rax, PARAM(0)	; param x
  4126 00002374 50                      	push rax
  4127 00002375 6A01                    	push 1	; arg count
  4128 00002377 488B0425[570E0000]      	mov rax, qword [free_var_56]	; free var cdar
  4129 0000237F 803805                  	cmp byte [rax], T_undefined
  4130 00002382 0F847A900000            	je L_error_fvar_undefined
  4131 00002388 803804                  	cmp byte [rax], T_closure
  4132 0000238B 0F85F5900000            	jne L_error_non_closure
  4133 00002391 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4134 00002394 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4135 00002397 50                      	push rax
  4136 00002398 6A01                    	push 1	; arg count
  4137 0000239A 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  4138 000023A2 803805                  	cmp byte [rax], T_undefined
  4139 000023A5 0F8457900000            	je L_error_fvar_undefined
  4140 000023AB 803804                  	cmp byte [rax], T_closure
  4141 000023AE 0F85D2900000            	jne L_error_non_closure
  4142 000023B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4143 000023B7 FF7508                  	push qword [rbp + 8 * 1]
  4144                                   ; old ret addr
  4145 000023BA FF7500                  	push qword [rbp]
  4146                                   ; restore the old rbp
  4147 000023BD BB01000000              	mov rbx, 1
  4148 000023C2 4883C303                	add rbx, 3
  4149 000023C6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4150 000023CA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4151 000023CF 4C8D4DF8                	lea r9, [rbp - 8]
  4152 000023D3 B905000000              	mov rcx, 5
  4153                                  .L_tc_recycle_frame_loop_001b:
  4154 000023D8 4883F900                	cmp rcx, 0
  4155 000023DC 7413                    	je .L_tc_recycle_frame_done_001b
  4156 000023DE 4D8B11                  	mov r10, qword [r9]
  4157 000023E1 4D8910                  	mov qword [r8], r10
  4158 000023E4 4983E808                	sub r8, 8
  4159 000023E8 4983E908                	sub r9, 8
  4160 000023EC 48FFC9                  	dec rcx
  4161 000023EF EBE7                    	jmp .L_tc_recycle_frame_loop_001b
  4162                                  .L_tc_recycle_frame_done_001b:
  4163 000023F1 498D6008                	lea rsp, [r8 + 8]
  4164 000023F5 5D                      	pop rbp ; restore the old rbp
  4165 000023F6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4166 000023F9 C9                      	leave
  4167 000023FA C21800                  	ret AND_KILL_FRAME(1)
  4168                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4169 000023FD 48890425[9B0E0000]      	mov qword [free_var_60], rax
  4170 00002405 48B8-                   	mov rax, sob_void
  4170 00002407 [0000000000000000] 
  4171                                  
  4172 0000240F 4889C7                  	mov rdi, rax
  4173 00002412 E86D930000              	call print_sexpr_if_not_void
  4174 00002417 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4175 0000241C E80E910000              	call malloc
  4176 00002421 50                      	push rax
  4177 00002422 BF00000000              	mov rdi, 8 * 0	; new rib
  4178 00002427 E803910000              	call malloc
  4179 0000242C 50                      	push rax
  4180 0000242D BF08000000              	mov rdi, 8 * 1	; extended env
  4181 00002432 E8F8900000              	call malloc
  4182 00002437 488B7D10                	mov rdi, ENV
  4183 0000243B BE00000000              	mov rsi, 0
  4184 00002440 BA01000000              	mov rdx, 1
  4185                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4186 00002445 4883FE00                	cmp rsi, 0
  4187 00002449 7410                    	je .L_lambda_simple_env_end_001c
  4188 0000244B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4189 0000244F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4190 00002453 48FFC6                  	inc rsi
  4191 00002456 48FFC2                  	inc rdx
  4192 00002459 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4193                                  .L_lambda_simple_env_end_001c:
  4194 0000245B 5B                      	pop rbx
  4195 0000245C BE00000000              	mov rsi, 0
  4196                                  .L_lambda_simple_params_loop_001c:	; copy params
  4197 00002461 4883FE00                	cmp rsi, 0
  4198 00002465 740E                    	je .L_lambda_simple_params_end_001c
  4199 00002467 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4200 0000246C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4201 00002470 48FFC6                  	inc rsi
  4202 00002473 EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4203                                  .L_lambda_simple_params_end_001c:
  4204 00002475 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4205 00002478 4889C3                  	mov rbx, rax
  4206 0000247B 58                      	pop rax
  4207 0000247C C60004                  	mov byte [rax], T_closure
  4208 0000247F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4209 00002483 48C74009[90240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4210 0000248B E9A4000000              	jmp .L_lambda_simple_end_001c
  4211                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4212 00002490 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4213 00002496 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4214 00002498 FF742410                	push qword [rsp + 8 * 2]
  4215 0000249C 6A01                    	push 1
  4216 0000249E E945900000              	jmp L_error_incorrect_arity_simple
  4217                                  .L_lambda_simple_arity_check_ok_001c:
  4218 000024A3 C8000000                	enter 0, 0
  4219                                  	; preparing a tail-call
  4220                                  	; preparing a non-tail-call
  4221 000024A7 488B4520                	mov rax, PARAM(0)	; param x
  4222 000024AB 50                      	push rax
  4223 000024AC 6A01                    	push 1	; arg count
  4224 000024AE 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  4225 000024B6 803805                  	cmp byte [rax], T_undefined
  4226 000024B9 0F84438F0000            	je L_error_fvar_undefined
  4227 000024BF 803804                  	cmp byte [rax], T_closure
  4228 000024C2 0F85BE8F0000            	jne L_error_non_closure
  4229 000024C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4230 000024CB FF5009                  	call SOB_CLOSURE_CODE(rax)
  4231 000024CE 50                      	push rax
  4232 000024CF 6A01                    	push 1	; arg count
  4233 000024D1 488B0425[CE0E0000]      	mov rax, qword [free_var_63]	; free var cddr
  4234 000024D9 803805                  	cmp byte [rax], T_undefined
  4235 000024DC 0F84208F0000            	je L_error_fvar_undefined
  4236 000024E2 803804                  	cmp byte [rax], T_closure
  4237 000024E5 0F859B8F0000            	jne L_error_non_closure
  4238 000024EB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4239 000024EE FF7508                  	push qword [rbp + 8 * 1]
  4240                                   ; old ret addr
  4241 000024F1 FF7500                  	push qword [rbp]
  4242                                   ; restore the old rbp
  4243 000024F4 BB01000000              	mov rbx, 1
  4244 000024F9 4883C303                	add rbx, 3
  4245 000024FD 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4246 00002501 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4247 00002506 4C8D4DF8                	lea r9, [rbp - 8]
  4248 0000250A B905000000              	mov rcx, 5
  4249                                  .L_tc_recycle_frame_loop_001c:
  4250 0000250F 4883F900                	cmp rcx, 0
  4251 00002513 7413                    	je .L_tc_recycle_frame_done_001c
  4252 00002515 4D8B11                  	mov r10, qword [r9]
  4253 00002518 4D8910                  	mov qword [r8], r10
  4254 0000251B 4983E808                	sub r8, 8
  4255 0000251F 4983E908                	sub r9, 8
  4256 00002523 48FFC9                  	dec rcx
  4257 00002526 EBE7                    	jmp .L_tc_recycle_frame_loop_001c
  4258                                  .L_tc_recycle_frame_done_001c:
  4259 00002528 498D6008                	lea rsp, [r8 + 8]
  4260 0000252C 5D                      	pop rbp ; restore the old rbp
  4261 0000252D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4262 00002530 C9                      	leave
  4263 00002531 C21800                  	ret AND_KILL_FRAME(1)
  4264                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4265 00002534 48890425[AC0E0000]      	mov qword [free_var_61], rax
  4266 0000253C 48B8-                   	mov rax, sob_void
  4266 0000253E [0000000000000000] 
  4267                                  
  4268 00002546 4889C7                  	mov rdi, rax
  4269 00002549 E836920000              	call print_sexpr_if_not_void
  4270 0000254E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4271 00002553 E8D78F0000              	call malloc
  4272 00002558 50                      	push rax
  4273 00002559 BF00000000              	mov rdi, 8 * 0	; new rib
  4274 0000255E E8CC8F0000              	call malloc
  4275 00002563 50                      	push rax
  4276 00002564 BF08000000              	mov rdi, 8 * 1	; extended env
  4277 00002569 E8C18F0000              	call malloc
  4278 0000256E 488B7D10                	mov rdi, ENV
  4279 00002572 BE00000000              	mov rsi, 0
  4280 00002577 BA01000000              	mov rdx, 1
  4281                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4282 0000257C 4883FE00                	cmp rsi, 0
  4283 00002580 7410                    	je .L_lambda_simple_env_end_001d
  4284 00002582 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4285 00002586 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4286 0000258A 48FFC6                  	inc rsi
  4287 0000258D 48FFC2                  	inc rdx
  4288 00002590 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4289                                  .L_lambda_simple_env_end_001d:
  4290 00002592 5B                      	pop rbx
  4291 00002593 BE00000000              	mov rsi, 0
  4292                                  .L_lambda_simple_params_loop_001d:	; copy params
  4293 00002598 4883FE00                	cmp rsi, 0
  4294 0000259C 740E                    	je .L_lambda_simple_params_end_001d
  4295 0000259E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4296 000025A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4297 000025A7 48FFC6                  	inc rsi
  4298 000025AA EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4299                                  .L_lambda_simple_params_end_001d:
  4300 000025AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4301 000025AF 4889C3                  	mov rbx, rax
  4302 000025B2 58                      	pop rax
  4303 000025B3 C60004                  	mov byte [rax], T_closure
  4304 000025B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4305 000025BA 48C74009[C7250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4306 000025C2 E91E010000              	jmp .L_lambda_simple_end_001d
  4307                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4308 000025C7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4309 000025CD 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4310 000025CF FF742410                	push qword [rsp + 8 * 2]
  4311 000025D3 6A01                    	push 1
  4312 000025D5 E90E8F0000              	jmp L_error_incorrect_arity_simple
  4313                                  .L_lambda_simple_arity_check_ok_001d:
  4314 000025DA C8000000                	enter 0, 0
  4315                                  	; preparing a non-tail-call
  4316 000025DE 488B4520                	mov rax, PARAM(0)	; param e
  4317 000025E2 50                      	push rax
  4318 000025E3 6A01                    	push 1	; arg count
  4319 000025E5 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  4320 000025ED 803805                  	cmp byte [rax], T_undefined
  4321 000025F0 0F840C8E0000            	je L_error_fvar_undefined
  4322 000025F6 803804                  	cmp byte [rax], T_closure
  4323 000025F9 0F85878E0000            	jne L_error_non_closure
  4324 000025FF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4325 00002602 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4326 00002605 483D[02000000]          	cmp rax, sob_boolean_false
  4327 0000260B 0F84D0000000            	je .L_or_end_0001
  4328                                  
  4329                                  	; preparing a non-tail-call
  4330 00002611 488B4520                	mov rax, PARAM(0)	; param e
  4331 00002615 50                      	push rax
  4332 00002616 6A01                    	push 1	; arg count
  4333 00002618 488B0425[AA100000]      	mov rax, qword [free_var_91]	; free var pair?
  4334 00002620 803805                  	cmp byte [rax], T_undefined
  4335 00002623 0F84D98D0000            	je L_error_fvar_undefined
  4336 00002629 803804                  	cmp byte [rax], T_closure
  4337 0000262C 0F85548E0000            	jne L_error_non_closure
  4338 00002632 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4339 00002635 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4340 00002638 483D[02000000]          	cmp rax, sob_boolean_false
  4341 0000263E 0F848B000000            	je .L_if_else_0001
  4342                                  	; preparing a tail-call
  4343                                  	; preparing a non-tail-call
  4344 00002644 488B4520                	mov rax, PARAM(0)	; param e
  4345 00002648 50                      	push rax
  4346 00002649 6A01                    	push 1	; arg count
  4347 0000264B 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  4348 00002653 803805                  	cmp byte [rax], T_undefined
  4349 00002656 0F84A68D0000            	je L_error_fvar_undefined
  4350 0000265C 803804                  	cmp byte [rax], T_closure
  4351 0000265F 0F85218E0000            	jne L_error_non_closure
  4352 00002665 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4353 00002668 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4354 0000266B 50                      	push rax
  4355 0000266C 6A01                    	push 1	; arg count
  4356 0000266E 488B0425[55100000]      	mov rax, qword [free_var_86]	; free var list?
  4357 00002676 803805                  	cmp byte [rax], T_undefined
  4358 00002679 0F84838D0000            	je L_error_fvar_undefined
  4359 0000267F 803804                  	cmp byte [rax], T_closure
  4360 00002682 0F85FE8D0000            	jne L_error_non_closure
  4361 00002688 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4362 0000268B FF7508                  	push qword [rbp + 8 * 1]
  4363                                   ; old ret addr
  4364 0000268E FF7500                  	push qword [rbp]
  4365                                   ; restore the old rbp
  4366 00002691 BB01000000              	mov rbx, 1
  4367 00002696 4883C303                	add rbx, 3
  4368 0000269A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4369 0000269E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4370 000026A3 4C8D4DF8                	lea r9, [rbp - 8]
  4371 000026A7 B905000000              	mov rcx, 5
  4372                                  .L_tc_recycle_frame_loop_001d:
  4373 000026AC 4883F900                	cmp rcx, 0
  4374 000026B0 7413                    	je .L_tc_recycle_frame_done_001d
  4375 000026B2 4D8B11                  	mov r10, qword [r9]
  4376 000026B5 4D8910                  	mov qword [r8], r10
  4377 000026B8 4983E808                	sub r8, 8
  4378 000026BC 4983E908                	sub r9, 8
  4379 000026C0 48FFC9                  	dec rcx
  4380 000026C3 EBE7                    	jmp .L_tc_recycle_frame_loop_001d
  4381                                  .L_tc_recycle_frame_done_001d:
  4382 000026C5 498D6008                	lea rsp, [r8 + 8]
  4383 000026C9 5D                      	pop rbp ; restore the old rbp
  4384 000026CA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4385 000026CD EB0A                    	jmp .L_if_end_0001
  4386                                  .L_if_else_0001:
  4387 000026CF 48B8-                   	mov rax, L_constants + 2
  4387 000026D1 [0200000000000000] 
  4388                                  .L_if_end_0001:
  4389 000026D9 483D[02000000]          	cmp rax, sob_boolean_false
  4390 000026DF 7400                    	je .L_or_end_0001
  4391                                  .L_or_end_0001:
  4392 000026E1 C9                      	leave
  4393 000026E2 C21800                  	ret AND_KILL_FRAME(1)
  4394                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4395 000026E5 48890425[55100000]      	mov qword [free_var_86], rax
  4396 000026ED 48B8-                   	mov rax, sob_void
  4396 000026EF [0000000000000000] 
  4397                                  
  4398 000026F7 4889C7                  	mov rdi, rax
  4399 000026FA E885900000              	call print_sexpr_if_not_void
  4400 000026FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4401 00002704 E8268E0000              	call malloc
  4402 00002709 50                      	push rax
  4403 0000270A BF08000000              	mov rdi, 8 * 1	; new rib
  4404 0000270F E81B8E0000              	call malloc
  4405 00002714 50                      	push rax
  4406 00002715 BF08000000              	mov rdi, 8 * 1	; extended env
  4407 0000271A E8108E0000              	call malloc
  4408 0000271F 488B7D10                	mov rdi, ENV
  4409 00002723 BE00000000              	mov rsi, 0
  4410 00002728 BA01000000              	mov rdx, 1
  4411                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  4412 0000272D 4883FE00                	cmp rsi, 0
  4413 00002731 7410                    	je .L_lambda_opt_env_end_0001
  4414 00002733 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4415 00002737 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4416 0000273B 48FFC6                  	inc rsi
  4417 0000273E 48FFC2                  	inc rdx
  4418 00002741 EBEA                    	jmp .L_lambda_opt_env_loop_0001
  4419                                  .L_lambda_opt_env_end_0001:
  4420 00002743 5B                      	pop rbx
  4421 00002744 BE00000000              	mov rsi, 0
  4422                                  .L_lambda_opt_params_loop_0001:	; copy params
  4423 00002749 4883FE00                	cmp rsi, 0
  4424 0000274D 740E                    	je .L_lambda_opt_params_end_0001
  4425 0000274F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4426 00002754 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4427 00002758 48FFC6                  	inc rsi
  4428 0000275B EBEC                    	jmp .L_lambda_opt_params_loop_0001
  4429                                  .L_lambda_opt_params_end_0001:
  4430 0000275D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4431 00002760 4889C3                  	mov rbx, rax
  4432 00002763 58                      	pop rax
  4433 00002764 C60004                  	mov byte [rax], T_closure
  4434 00002767 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4435 0000276B 48C74009[78270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  4436 00002773 E995000000              	jmp .L_lambda_opt_end_0001
  4437                                  .L_lambda_opt_code_0001:	; lambda-opt body
  4438 00002778 48837C241000            	cmp qword [rsp + 8 * 2], 0
  4439 0000277E 745E                    	je .L_lambda_opt_arity_check_exact_0001
  4440 00002780 7F0B                    	jg .L_lambda_opt_arity_check_more_0001
  4441 00002782 FF742410                	push qword [rsp + 8 * 2]
  4442 00002786 6A00                    	push 0
  4443 00002788 E95B8D0000              	jmp L_error_incorrect_arity_simple
  4444                                  .L_lambda_opt_arity_check_more_0001:
  4445 0000278D 53                      push rbx
  4446 0000278E 51                      push rcx
  4447 0000278F 488B4D10                mov rcx, [rbp + 8*2]
  4448 00002793 BB00000000              mov rbx , 0
  4449 00002798 4829D9                  sub rcx, rbx
  4450 0000279B 48FFC3                  inc rbx
  4451 0000279E 48895D10                mov [rbp + 8*2], rbx
  4452 000027A2 4889CF                  	 mov rdi, rcx 
  4453 000027A5 48C1E703                	 shl rdi, 3 
  4454 000027A9 E8818D0000              	call malloc
  4455 000027AE 50                      	push rax
  4456 000027AF 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  4457 000027B4 4831FF                  xor rdi, rdi
  4458                                  .L_lambda_opt_stack_shrink_loop_0001:
  4459 000027B7 4839CF                  	cmp rdi, rcx
  4460 000027BA 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0001
  4461 000027BC 488904FC                mov [rsp + rdi*8], rax
  4462 000027C0 48FFC7                  	inc rdi
  4463 000027C3 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  4464 000027CB 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  4465 000027D0 498B04D9                mov rax,[r9 + rbx*8] 
  4466 000027D4 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0001
  4467                                  .L_lambda_opt_stack_shrink_loop_exit_0001:
  4468 000027D6 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  4469 000027DA 5B                      pop rbx
  4470 000027DB 53                      push rbx
  4471 000027DC EB16                    jmp .L_lambda_opt_stack_adjusted_0001
  4472                                  .L_lambda_opt_arity_check_exact_0001:
  4473 000027DE 48B8-                   	mov rax, L_constants + 1
  4473 000027E0 [0100000000000000] 
  4474 000027E8 53                      push rbx
  4475 000027E9 488B5C2410              mov rbx , [rsp + 8*2]
  4476 000027EE 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  4477 000027F3 5B                      pop rbx
  4478                                  .L_lambda_opt_stack_adjusted_0001:	; new closure is in rax
  4479 000027F4 C8000000                	enter 0, 0
  4480 000027F8 488B0425[E10C0000]      	mov rax, qword [free_var_34]	; free var args
  4481 00002800 803805                  	cmp byte [rax], T_undefined
  4482 00002803 0F84F98B0000            	je L_error_fvar_undefined
  4483 00002809 C9                      	leave
  4484 0000280A C21000                  	ret AND_KILL_FRAME(0)
  4485                                  .L_lambda_opt_end_0001:	; new closure is in rax
  4486 0000280D 48890425[33100000]      	mov qword [free_var_84], rax
  4487 00002815 48B8-                   	mov rax, sob_void
  4487 00002817 [0000000000000000] 
  4488                                  
  4489 0000281F 4889C7                  	mov rdi, rax
  4490 00002822 E85D8F0000              	call print_sexpr_if_not_void
  4491 00002827 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4492 0000282C E8FE8C0000              	call malloc
  4493 00002831 50                      	push rax
  4494 00002832 BF00000000              	mov rdi, 8 * 0	; new rib
  4495 00002837 E8F38C0000              	call malloc
  4496 0000283C 50                      	push rax
  4497 0000283D BF08000000              	mov rdi, 8 * 1	; extended env
  4498 00002842 E8E88C0000              	call malloc
  4499 00002847 488B7D10                	mov rdi, ENV
  4500 0000284B BE00000000              	mov rsi, 0
  4501 00002850 BA01000000              	mov rdx, 1
  4502                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  4503 00002855 4883FE00                	cmp rsi, 0
  4504 00002859 7410                    	je .L_lambda_simple_env_end_001e
  4505 0000285B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4506 0000285F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4507 00002863 48FFC6                  	inc rsi
  4508 00002866 48FFC2                  	inc rdx
  4509 00002869 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  4510                                  .L_lambda_simple_env_end_001e:
  4511 0000286B 5B                      	pop rbx
  4512 0000286C BE00000000              	mov rsi, 0
  4513                                  .L_lambda_simple_params_loop_001e:	; copy params
  4514 00002871 4883FE00                	cmp rsi, 0
  4515 00002875 740E                    	je .L_lambda_simple_params_end_001e
  4516 00002877 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4517 0000287C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4518 00002880 48FFC6                  	inc rsi
  4519 00002883 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  4520                                  .L_lambda_simple_params_end_001e:
  4521 00002885 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4522 00002888 4889C3                  	mov rbx, rax
  4523 0000288B 58                      	pop rax
  4524 0000288C C60004                  	mov byte [rax], T_closure
  4525 0000288F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4526 00002893 48C74009[9D280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  4527 0000289B EB3D                    	jmp .L_lambda_simple_end_001e
  4528                                  .L_lambda_simple_code_001e:	; lambda-simple body
  4529 0000289D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4530 000028A3 740B                    	je .L_lambda_simple_arity_check_ok_001e
  4531 000028A5 FF742410                	push qword [rsp + 8 * 2]
  4532 000028A9 6A01                    	push 1
  4533 000028AB E9388C0000              	jmp L_error_incorrect_arity_simple
  4534                                  .L_lambda_simple_arity_check_ok_001e:
  4535 000028B0 C8000000                	enter 0, 0
  4536 000028B4 488B4520                	mov rax, PARAM(0)	; param x
  4537 000028B8 483D[02000000]          	cmp rax, sob_boolean_false
  4538 000028BE 740C                    	je .L_if_else_0002
  4539 000028C0 48B8-                   	mov rax, L_constants + 2
  4539 000028C2 [0200000000000000] 
  4540 000028CA EB0A                    	jmp .L_if_end_0002
  4541                                  .L_if_else_0002:
  4542 000028CC 48B8-                   	mov rax, L_constants + 3
  4542 000028CE [0300000000000000] 
  4543                                  .L_if_end_0002:
  4544 000028D6 C9                      	leave
  4545 000028D7 C21800                  	ret AND_KILL_FRAME(1)
  4546                                  .L_lambda_simple_end_001e:	; new closure is in rax
  4547 000028DA 48890425[77100000]      	mov qword [free_var_88], rax
  4548 000028E2 48B8-                   	mov rax, sob_void
  4548 000028E4 [0000000000000000] 
  4549                                  
  4550 000028EC 4889C7                  	mov rdi, rax
  4551 000028EF E8908E0000              	call print_sexpr_if_not_void
  4552 000028F4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4553 000028F9 E8318C0000              	call malloc
  4554 000028FE 50                      	push rax
  4555 000028FF BF00000000              	mov rdi, 8 * 0	; new rib
  4556 00002904 E8268C0000              	call malloc
  4557 00002909 50                      	push rax
  4558 0000290A BF08000000              	mov rdi, 8 * 1	; extended env
  4559 0000290F E81B8C0000              	call malloc
  4560 00002914 488B7D10                	mov rdi, ENV
  4561 00002918 BE00000000              	mov rsi, 0
  4562 0000291D BA01000000              	mov rdx, 1
  4563                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  4564 00002922 4883FE00                	cmp rsi, 0
  4565 00002926 7410                    	je .L_lambda_simple_env_end_001f
  4566 00002928 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4567 0000292C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4568 00002930 48FFC6                  	inc rsi
  4569 00002933 48FFC2                  	inc rdx
  4570 00002936 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  4571                                  .L_lambda_simple_env_end_001f:
  4572 00002938 5B                      	pop rbx
  4573 00002939 BE00000000              	mov rsi, 0
  4574                                  .L_lambda_simple_params_loop_001f:	; copy params
  4575 0000293E 4883FE00                	cmp rsi, 0
  4576 00002942 740E                    	je .L_lambda_simple_params_end_001f
  4577 00002944 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4578 00002949 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4579 0000294D 48FFC6                  	inc rsi
  4580 00002950 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  4581                                  .L_lambda_simple_params_end_001f:
  4582 00002952 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4583 00002955 4889C3                  	mov rbx, rax
  4584 00002958 58                      	pop rax
  4585 00002959 C60004                  	mov byte [rax], T_closure
  4586 0000295C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4587 00002960 48C74009[6D290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  4588 00002968 E9B8000000              	jmp .L_lambda_simple_end_001f
  4589                                  .L_lambda_simple_code_001f:	; lambda-simple body
  4590 0000296D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4591 00002973 740B                    	je .L_lambda_simple_arity_check_ok_001f
  4592 00002975 FF742410                	push qword [rsp + 8 * 2]
  4593 00002979 6A01                    	push 1
  4594 0000297B E9688B0000              	jmp L_error_incorrect_arity_simple
  4595                                  .L_lambda_simple_arity_check_ok_001f:
  4596 00002980 C8000000                	enter 0, 0
  4597                                  	; preparing a non-tail-call
  4598 00002984 488B4520                	mov rax, PARAM(0)	; param q
  4599 00002988 50                      	push rax
  4600 00002989 6A01                    	push 1	; arg count
  4601 0000298B 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  4602 00002993 803805                  	cmp byte [rax], T_undefined
  4603 00002996 0F84668A0000            	je L_error_fvar_undefined
  4604 0000299C 803804                  	cmp byte [rax], T_closure
  4605 0000299F 0F85E18A0000            	jne L_error_non_closure
  4606 000029A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4607 000029A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4608 000029AB 483D[02000000]          	cmp rax, sob_boolean_false
  4609 000029B1 746E                    	je .L_or_end_0002
  4610                                  
  4611                                  	; preparing a tail-call
  4612 000029B3 488B4520                	mov rax, PARAM(0)	; param q
  4613 000029B7 50                      	push rax
  4614 000029B8 6A01                    	push 1	; arg count
  4615 000029BA 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  4616 000029C2 803805                  	cmp byte [rax], T_undefined
  4617 000029C5 0F84378A0000            	je L_error_fvar_undefined
  4618 000029CB 803804                  	cmp byte [rax], T_closure
  4619 000029CE 0F85B28A0000            	jne L_error_non_closure
  4620 000029D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4621 000029D7 FF7508                  	push qword [rbp + 8 * 1]
  4622                                   ; old ret addr
  4623 000029DA FF7500                  	push qword [rbp]
  4624                                   ; restore the old rbp
  4625 000029DD BB01000000              	mov rbx, 1
  4626 000029E2 4883C303                	add rbx, 3
  4627 000029E6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4628 000029EA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4629 000029EF 4C8D4DF8                	lea r9, [rbp - 8]
  4630 000029F3 B905000000              	mov rcx, 5
  4631                                  .L_tc_recycle_frame_loop_001e:
  4632 000029F8 4883F900                	cmp rcx, 0
  4633 000029FC 7413                    	je .L_tc_recycle_frame_done_001e
  4634 000029FE 4D8B11                  	mov r10, qword [r9]
  4635 00002A01 4D8910                  	mov qword [r8], r10
  4636 00002A04 4983E808                	sub r8, 8
  4637 00002A08 4983E908                	sub r9, 8
  4638 00002A0C 48FFC9                  	dec rcx
  4639 00002A0F EBE7                    	jmp .L_tc_recycle_frame_loop_001e
  4640                                  .L_tc_recycle_frame_done_001e:
  4641 00002A11 498D6008                	lea rsp, [r8 + 8]
  4642 00002A15 5D                      	pop rbp ; restore the old rbp
  4643 00002A16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4644 00002A19 483D[02000000]          	cmp rax, sob_boolean_false
  4645 00002A1F 7400                    	je .L_or_end_0002
  4646                                  .L_or_end_0002:
  4647 00002A21 C9                      	leave
  4648 00002A22 C21800                  	ret AND_KILL_FRAME(1)
  4649                                  .L_lambda_simple_end_001f:	; new closure is in rax
  4650 00002A25 48890425[BB100000]      	mov qword [free_var_92], rax
  4651 00002A2D 48B8-                   	mov rax, sob_void
  4651 00002A2F [0000000000000000] 
  4652                                  
  4653 00002A37 4889C7                  	mov rdi, rax
  4654 00002A3A E8458D0000              	call print_sexpr_if_not_void
  4655                                  	; preparing a non-tail-call
  4656 00002A3F 48B8-                   	mov rax, L_constants + 2016
  4656 00002A41 [E007000000000000] 
  4657 00002A49 50                      	push rax
  4658 00002A4A 6A01                    	push 1	; arg count
  4659 00002A4C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4660 00002A51 E8D98A0000              	call malloc
  4661 00002A56 50                      	push rax
  4662 00002A57 BF00000000              	mov rdi, 8 * 0	; new rib
  4663 00002A5C E8CE8A0000              	call malloc
  4664 00002A61 50                      	push rax
  4665 00002A62 BF08000000              	mov rdi, 8 * 1	; extended env
  4666 00002A67 E8C38A0000              	call malloc
  4667 00002A6C 488B7D10                	mov rdi, ENV
  4668 00002A70 BE00000000              	mov rsi, 0
  4669 00002A75 BA01000000              	mov rdx, 1
  4670                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  4671 00002A7A 4883FE00                	cmp rsi, 0
  4672 00002A7E 7410                    	je .L_lambda_simple_env_end_0020
  4673 00002A80 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4674 00002A84 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4675 00002A88 48FFC6                  	inc rsi
  4676 00002A8B 48FFC2                  	inc rdx
  4677 00002A8E EBEA                    	jmp .L_lambda_simple_env_loop_0020
  4678                                  .L_lambda_simple_env_end_0020:
  4679 00002A90 5B                      	pop rbx
  4680 00002A91 BE00000000              	mov rsi, 0
  4681                                  .L_lambda_simple_params_loop_0020:	; copy params
  4682 00002A96 4883FE00                	cmp rsi, 0
  4683 00002A9A 740E                    	je .L_lambda_simple_params_end_0020
  4684 00002A9C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4685 00002AA1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4686 00002AA5 48FFC6                  	inc rsi
  4687 00002AA8 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  4688                                  .L_lambda_simple_params_end_0020:
  4689 00002AAA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4690 00002AAD 4889C3                  	mov rbx, rax
  4691 00002AB0 58                      	pop rax
  4692 00002AB1 C60004                  	mov byte [rax], T_closure
  4693 00002AB4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4694 00002AB8 48C74009[C52A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  4695 00002AC0 E95D030000              	jmp .L_lambda_simple_end_0020
  4696                                  .L_lambda_simple_code_0020:	; lambda-simple body
  4697 00002AC5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4698 00002ACB 740B                    	je .L_lambda_simple_arity_check_ok_0020
  4699 00002ACD FF742410                	push qword [rsp + 8 * 2]
  4700 00002AD1 6A01                    	push 1
  4701 00002AD3 E9108A0000              	jmp L_error_incorrect_arity_simple
  4702                                  .L_lambda_simple_arity_check_ok_0020:
  4703 00002AD8 C8000000                	enter 0, 0
  4704 00002ADC BF08000000              	mov rdi, 8*1
  4705 00002AE1 E8498A0000              	call malloc
  4706 00002AE6 488B5D20                	mov rbx, PARAM(0)
  4707 00002AEA 488918                  	mov qword [rax], rbx
  4708 00002AED 48894520                	mov PARAM(0), rax
  4709 00002AF1 48B8-                   	mov rax, sob_void
  4709 00002AF3 [0000000000000000] 
  4710                                  
  4711 00002AFB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4712 00002B00 E82A8A0000              	call malloc
  4713 00002B05 50                      	push rax
  4714 00002B06 BF08000000              	mov rdi, 8 * 1	; new rib
  4715 00002B0B E81F8A0000              	call malloc
  4716 00002B10 50                      	push rax
  4717 00002B11 BF10000000              	mov rdi, 8 * 2	; extended env
  4718 00002B16 E8148A0000              	call malloc
  4719 00002B1B 488B7D10                	mov rdi, ENV
  4720 00002B1F BE00000000              	mov rsi, 0
  4721 00002B24 BA01000000              	mov rdx, 1
  4722                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  4723 00002B29 4883FE01                	cmp rsi, 1
  4724 00002B2D 7410                    	je .L_lambda_simple_env_end_0021
  4725 00002B2F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4726 00002B33 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4727 00002B37 48FFC6                  	inc rsi
  4728 00002B3A 48FFC2                  	inc rdx
  4729 00002B3D EBEA                    	jmp .L_lambda_simple_env_loop_0021
  4730                                  .L_lambda_simple_env_end_0021:
  4731 00002B3F 5B                      	pop rbx
  4732 00002B40 BE00000000              	mov rsi, 0
  4733                                  .L_lambda_simple_params_loop_0021:	; copy params
  4734 00002B45 4883FE01                	cmp rsi, 1
  4735 00002B49 740E                    	je .L_lambda_simple_params_end_0021
  4736 00002B4B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4737 00002B50 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4738 00002B54 48FFC6                  	inc rsi
  4739 00002B57 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  4740                                  .L_lambda_simple_params_end_0021:
  4741 00002B59 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4742 00002B5C 4889C3                  	mov rbx, rax
  4743 00002B5F 58                      	pop rax
  4744 00002B60 C60004                  	mov byte [rax], T_closure
  4745 00002B63 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4746 00002B67 48C74009[742B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  4747 00002B6F E928010000              	jmp .L_lambda_simple_end_0021
  4748                                  .L_lambda_simple_code_0021:	; lambda-simple body
  4749 00002B74 48837C241002            	cmp qword [rsp + 8 * 2], 2
  4750 00002B7A 740B                    	je .L_lambda_simple_arity_check_ok_0021
  4751 00002B7C FF742410                	push qword [rsp + 8 * 2]
  4752 00002B80 6A02                    	push 2
  4753 00002B82 E961890000              	jmp L_error_incorrect_arity_simple
  4754                                  .L_lambda_simple_arity_check_ok_0021:
  4755 00002B87 C8000000                	enter 0, 0
  4756                                  	; preparing a non-tail-call
  4757 00002B8B 488B4528                	mov rax, PARAM(1)	; param s
  4758 00002B8F 50                      	push rax
  4759 00002B90 6A01                    	push 1	; arg count
  4760 00002B92 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  4761 00002B9A 803805                  	cmp byte [rax], T_undefined
  4762 00002B9D 0F845F880000            	je L_error_fvar_undefined
  4763 00002BA3 803804                  	cmp byte [rax], T_closure
  4764 00002BA6 0F85DA880000            	jne L_error_non_closure
  4765 00002BAC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4766 00002BAF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4767 00002BB2 483D[02000000]          	cmp rax, sob_boolean_false
  4768 00002BB8 7409                    	je .L_if_else_0003
  4769 00002BBA 488B4520                	mov rax, PARAM(0)	; param a
  4770 00002BBE E9D5000000              	jmp .L_if_end_0003
  4771                                  .L_if_else_0003:
  4772                                  	; preparing a tail-call
  4773                                  	; preparing a non-tail-call
  4774                                  	; preparing a non-tail-call
  4775 00002BC3 488B4528                	mov rax, PARAM(1)	; param s
  4776 00002BC7 50                      	push rax
  4777 00002BC8 6A01                    	push 1	; arg count
  4778 00002BCA 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  4779 00002BD2 803805                  	cmp byte [rax], T_undefined
  4780 00002BD5 0F8427880000            	je L_error_fvar_undefined
  4781 00002BDB 803804                  	cmp byte [rax], T_closure
  4782 00002BDE 0F85A2880000            	jne L_error_non_closure
  4783 00002BE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4784 00002BE7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4785 00002BEA 50                      	push rax
  4786                                  	; preparing a non-tail-call
  4787 00002BEB 488B4528                	mov rax, PARAM(1)	; param s
  4788 00002BEF 50                      	push rax
  4789 00002BF0 6A01                    	push 1	; arg count
  4790 00002BF2 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  4791 00002BFA 803805                  	cmp byte [rax], T_undefined
  4792 00002BFD 0F84FF870000            	je L_error_fvar_undefined
  4793 00002C03 803804                  	cmp byte [rax], T_closure
  4794 00002C06 0F857A880000            	jne L_error_non_closure
  4795 00002C0C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4796 00002C0F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4797 00002C12 50                      	push rax
  4798 00002C13 6A02                    	push 2	; arg count
  4799 00002C15 488B4510                	mov rax, ENV
  4800 00002C19 488B00                  	mov rax, qword [rax + 8 * 0]
  4801 00002C1C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  4802 00002C1F 488B00                  	mov rax, qword [rax]
  4803 00002C22 803804                  	cmp byte [rax], T_closure
  4804 00002C25 0F855B880000            	jne L_error_non_closure
  4805 00002C2B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4806 00002C2E FF5009                  	call SOB_CLOSURE_CODE(rax)
  4807 00002C31 50                      	push rax
  4808 00002C32 488B4520                	mov rax, PARAM(0)	; param a
  4809 00002C36 50                      	push rax
  4810 00002C37 6A02                    	push 2	; arg count
  4811 00002C39 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  4812 00002C41 803805                  	cmp byte [rax], T_undefined
  4813 00002C44 0F84B8870000            	je L_error_fvar_undefined
  4814 00002C4A 803804                  	cmp byte [rax], T_closure
  4815 00002C4D 0F8533880000            	jne L_error_non_closure
  4816 00002C53 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4817 00002C56 FF7508                  	push qword [rbp + 8 * 1]
  4818                                   ; old ret addr
  4819 00002C59 FF7500                  	push qword [rbp]
  4820                                   ; restore the old rbp
  4821 00002C5C BB02000000              	mov rbx, 2
  4822 00002C61 4883C303                	add rbx, 3
  4823 00002C65 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4824 00002C69 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4825 00002C6E 4C8D4DF8                	lea r9, [rbp - 8]
  4826 00002C72 B906000000              	mov rcx, 6
  4827                                  .L_tc_recycle_frame_loop_001f:
  4828 00002C77 4883F900                	cmp rcx, 0
  4829 00002C7B 7413                    	je .L_tc_recycle_frame_done_001f
  4830 00002C7D 4D8B11                  	mov r10, qword [r9]
  4831 00002C80 4D8910                  	mov qword [r8], r10
  4832 00002C83 4983E808                	sub r8, 8
  4833 00002C87 4983E908                	sub r9, 8
  4834 00002C8B 48FFC9                  	dec rcx
  4835 00002C8E EBE7                    	jmp .L_tc_recycle_frame_loop_001f
  4836                                  .L_tc_recycle_frame_done_001f:
  4837 00002C90 498D6008                	lea rsp, [r8 + 8]
  4838 00002C94 5D                      	pop rbp ; restore the old rbp
  4839 00002C95 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4840                                  .L_if_end_0003:
  4841 00002C98 C9                      	leave
  4842 00002C99 C22000                  	ret AND_KILL_FRAME(2)
  4843                                  .L_lambda_simple_end_0021:	; new closure is in rax
  4844 00002C9C 50                      	push rax
  4845 00002C9D 488B4520                	mov rax, PARAM(0)	; param run
  4846 00002CA1 8F00                    	pop qword [rax]
  4847 00002CA3 48B8-                   	mov rax, sob_void
  4847 00002CA5 [0000000000000000] 
  4848                                  
  4849 00002CAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4850 00002CB2 E878880000              	call malloc
  4851 00002CB7 50                      	push rax
  4852 00002CB8 BF10000000              	mov rdi, 8 * 2	; new rib
  4853 00002CBD E86D880000              	call malloc
  4854 00002CC2 50                      	push rax
  4855 00002CC3 BF10000000              	mov rdi, 8 * 2	; extended env
  4856 00002CC8 E862880000              	call malloc
  4857 00002CCD 488B7D10                	mov rdi, ENV
  4858 00002CD1 BE00000000              	mov rsi, 0
  4859 00002CD6 BA01000000              	mov rdx, 1
  4860                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  4861 00002CDB 4883FE01                	cmp rsi, 1
  4862 00002CDF 7410                    	je .L_lambda_opt_env_end_0002
  4863 00002CE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4864 00002CE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4865 00002CE9 48FFC6                  	inc rsi
  4866 00002CEC 48FFC2                  	inc rdx
  4867 00002CEF EBEA                    	jmp .L_lambda_opt_env_loop_0002
  4868                                  .L_lambda_opt_env_end_0002:
  4869 00002CF1 5B                      	pop rbx
  4870 00002CF2 BE00000000              	mov rsi, 0
  4871                                  .L_lambda_opt_params_loop_0002:	; copy params
  4872 00002CF7 4883FE01                	cmp rsi, 1
  4873 00002CFB 740E                    	je .L_lambda_opt_params_end_0002
  4874 00002CFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4875 00002D02 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4876 00002D06 48FFC6                  	inc rsi
  4877 00002D09 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  4878                                  .L_lambda_opt_params_end_0002:
  4879 00002D0B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4880 00002D0E 4889C3                  	mov rbx, rax
  4881 00002D11 58                      	pop rax
  4882 00002D12 C60004                  	mov byte [rax], T_closure
  4883 00002D15 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4884 00002D19 48C74009[262D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  4885 00002D21 E9F8000000              	jmp .L_lambda_opt_end_0002
  4886                                  .L_lambda_opt_code_0002:	; lambda-opt body
  4887 00002D26 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4888 00002D2C 745E                    	je .L_lambda_opt_arity_check_exact_0002
  4889 00002D2E 7F0B                    	jg .L_lambda_opt_arity_check_more_0002
  4890 00002D30 FF742410                	push qword [rsp + 8 * 2]
  4891 00002D34 6A01                    	push 1
  4892 00002D36 E9AD870000              	jmp L_error_incorrect_arity_simple
  4893                                  .L_lambda_opt_arity_check_more_0002:
  4894 00002D3B 53                      push rbx
  4895 00002D3C 51                      push rcx
  4896 00002D3D 488B4D10                mov rcx, [rbp + 8*2]
  4897 00002D41 BB01000000              mov rbx , 1
  4898 00002D46 4829D9                  sub rcx, rbx
  4899 00002D49 48FFC3                  inc rbx
  4900 00002D4C 48895D10                mov [rbp + 8*2], rbx
  4901 00002D50 4889CF                  	 mov rdi, rcx 
  4902 00002D53 48C1E703                	 shl rdi, 3 
  4903 00002D57 E8D3870000              	call malloc
  4904 00002D5C 50                      	push rax
  4905 00002D5D 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  4906 00002D62 4831FF                  xor rdi, rdi
  4907                                  .L_lambda_opt_stack_shrink_loop_0002:
  4908 00002D65 4839CF                  	cmp rdi, rcx
  4909 00002D68 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0002
  4910 00002D6A 488904FC                mov [rsp + rdi*8], rax
  4911 00002D6E 48FFC7                  	inc rdi
  4912 00002D71 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  4913 00002D79 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  4914 00002D7E 498B04D9                mov rax,[r9 + rbx*8] 
  4915 00002D82 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0002
  4916                                  .L_lambda_opt_stack_shrink_loop_exit_0002:
  4917 00002D84 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  4918 00002D88 5B                      pop rbx
  4919 00002D89 53                      push rbx
  4920 00002D8A EB16                    jmp .L_lambda_opt_stack_adjusted_0002
  4921                                  .L_lambda_opt_arity_check_exact_0002:
  4922 00002D8C 48B8-                   	mov rax, L_constants + 1
  4922 00002D8E [0100000000000000] 
  4923 00002D96 53                      push rbx
  4924 00002D97 488B5C2410              mov rbx , [rsp + 8*2]
  4925 00002D9C 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  4926 00002DA1 5B                      pop rbx
  4927                                  .L_lambda_opt_stack_adjusted_0002:	; new closure is in rax
  4928 00002DA2 C8000000                	enter 0, 0
  4929                                  	; preparing a tail-call
  4930 00002DA6 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  4931 00002DAE 803805                  	cmp byte [rax], T_undefined
  4932 00002DB1 0F844B860000            	je L_error_fvar_undefined
  4933 00002DB7 50                      	push rax
  4934 00002DB8 488B4520                	mov rax, PARAM(0)	; param a
  4935 00002DBC 50                      	push rax
  4936 00002DBD 6A02                    	push 2	; arg count
  4937 00002DBF 488B4510                	mov rax, ENV
  4938 00002DC3 488B00                  	mov rax, qword [rax + 8 * 0]
  4939 00002DC6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  4940 00002DC9 488B00                  	mov rax, qword [rax]
  4941 00002DCC 803804                  	cmp byte [rax], T_closure
  4942 00002DCF 0F85B1860000            	jne L_error_non_closure
  4943 00002DD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4944 00002DD8 FF7508                  	push qword [rbp + 8 * 1]
  4945                                   ; old ret addr
  4946 00002DDB FF7500                  	push qword [rbp]
  4947                                   ; restore the old rbp
  4948 00002DDE BB02000000              	mov rbx, 2
  4949 00002DE3 4883C303                	add rbx, 3
  4950 00002DE7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4951 00002DEB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4952 00002DF0 4C8D4DF8                	lea r9, [rbp - 8]
  4953 00002DF4 B906000000              	mov rcx, 6
  4954                                  .L_tc_recycle_frame_loop_0020:
  4955 00002DF9 4883F900                	cmp rcx, 0
  4956 00002DFD 7413                    	je .L_tc_recycle_frame_done_0020
  4957 00002DFF 4D8B11                  	mov r10, qword [r9]
  4958 00002E02 4D8910                  	mov qword [r8], r10
  4959 00002E05 4983E808                	sub r8, 8
  4960 00002E09 4983E908                	sub r9, 8
  4961 00002E0D 48FFC9                  	dec rcx
  4962 00002E10 EBE7                    	jmp .L_tc_recycle_frame_loop_0020
  4963                                  .L_tc_recycle_frame_done_0020:
  4964 00002E12 498D6008                	lea rsp, [r8 + 8]
  4965 00002E16 5D                      	pop rbp ; restore the old rbp
  4966 00002E17 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4967 00002E1A C9                      	leave
  4968 00002E1B C21800                  	ret AND_KILL_FRAME(1)
  4969                                  .L_lambda_opt_end_0002:	; new closure is in rax
  4970 00002E1E C9                      	leave
  4971 00002E1F C21800                  	ret AND_KILL_FRAME(1)
  4972                                  .L_lambda_simple_end_0020:	; new closure is in rax
  4973 00002E22 803804                  	cmp byte [rax], T_closure
  4974 00002E25 0F855B860000            	jne L_error_non_closure
  4975 00002E2B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4976 00002E2E FF5009                  	call SOB_CLOSURE_CODE(rax)
  4977 00002E31 48890425[44100000]      	mov qword [free_var_85], rax
  4978 00002E39 48B8-                   	mov rax, sob_void
  4978 00002E3B [0000000000000000] 
  4979                                  
  4980 00002E43 4889C7                  	mov rdi, rax
  4981 00002E46 E839890000              	call print_sexpr_if_not_void
  4982                                  	; preparing a non-tail-call
  4983 00002E4B 48B8-                   	mov rax, L_constants + 2016
  4983 00002E4D [E007000000000000] 
  4984 00002E55 50                      	push rax
  4985 00002E56 6A01                    	push 1	; arg count
  4986 00002E58 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4987 00002E5D E8CD860000              	call malloc
  4988 00002E62 50                      	push rax
  4989 00002E63 BF00000000              	mov rdi, 8 * 0	; new rib
  4990 00002E68 E8C2860000              	call malloc
  4991 00002E6D 50                      	push rax
  4992 00002E6E BF08000000              	mov rdi, 8 * 1	; extended env
  4993 00002E73 E8B7860000              	call malloc
  4994 00002E78 488B7D10                	mov rdi, ENV
  4995 00002E7C BE00000000              	mov rsi, 0
  4996 00002E81 BA01000000              	mov rdx, 1
  4997                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  4998 00002E86 4883FE00                	cmp rsi, 0
  4999 00002E8A 7410                    	je .L_lambda_simple_env_end_0022
  5000 00002E8C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5001 00002E90 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5002 00002E94 48FFC6                  	inc rsi
  5003 00002E97 48FFC2                  	inc rdx
  5004 00002E9A EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5005                                  .L_lambda_simple_env_end_0022:
  5006 00002E9C 5B                      	pop rbx
  5007 00002E9D BE00000000              	mov rsi, 0
  5008                                  .L_lambda_simple_params_loop_0022:	; copy params
  5009 00002EA2 4883FE00                	cmp rsi, 0
  5010 00002EA6 740E                    	je .L_lambda_simple_params_end_0022
  5011 00002EA8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5012 00002EAD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5013 00002EB1 48FFC6                  	inc rsi
  5014 00002EB4 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5015                                  .L_lambda_simple_params_end_0022:
  5016 00002EB6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5017 00002EB9 4889C3                  	mov rbx, rax
  5018 00002EBC 58                      	pop rax
  5019 00002EBD C60004                  	mov byte [rax], T_closure
  5020 00002EC0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5021 00002EC4 48C74009[D12E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5022 00002ECC E9D9030000              	jmp .L_lambda_simple_end_0022
  5023                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5024 00002ED1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5025 00002ED7 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5026 00002ED9 FF742410                	push qword [rsp + 8 * 2]
  5027 00002EDD 6A01                    	push 1
  5028 00002EDF E904860000              	jmp L_error_incorrect_arity_simple
  5029                                  .L_lambda_simple_arity_check_ok_0022:
  5030 00002EE4 C8000000                	enter 0, 0
  5031 00002EE8 BF08000000              	mov rdi, 8*1
  5032 00002EED E83D860000              	call malloc
  5033 00002EF2 488B5D20                	mov rbx, PARAM(0)
  5034 00002EF6 488918                  	mov qword [rax], rbx
  5035 00002EF9 48894520                	mov PARAM(0), rax
  5036 00002EFD 48B8-                   	mov rax, sob_void
  5036 00002EFF [0000000000000000] 
  5037                                  
  5038 00002F07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5039 00002F0C E81E860000              	call malloc
  5040 00002F11 50                      	push rax
  5041 00002F12 BF08000000              	mov rdi, 8 * 1	; new rib
  5042 00002F17 E813860000              	call malloc
  5043 00002F1C 50                      	push rax
  5044 00002F1D BF10000000              	mov rdi, 8 * 2	; extended env
  5045 00002F22 E808860000              	call malloc
  5046 00002F27 488B7D10                	mov rdi, ENV
  5047 00002F2B BE00000000              	mov rsi, 0
  5048 00002F30 BA01000000              	mov rdx, 1
  5049                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5050 00002F35 4883FE01                	cmp rsi, 1
  5051 00002F39 7410                    	je .L_lambda_simple_env_end_0023
  5052 00002F3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5053 00002F3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5054 00002F43 48FFC6                  	inc rsi
  5055 00002F46 48FFC2                  	inc rdx
  5056 00002F49 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5057                                  .L_lambda_simple_env_end_0023:
  5058 00002F4B 5B                      	pop rbx
  5059 00002F4C BE00000000              	mov rsi, 0
  5060                                  .L_lambda_simple_params_loop_0023:	; copy params
  5061 00002F51 4883FE01                	cmp rsi, 1
  5062 00002F55 740E                    	je .L_lambda_simple_params_end_0023
  5063 00002F57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5064 00002F5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5065 00002F60 48FFC6                  	inc rsi
  5066 00002F63 EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5067                                  .L_lambda_simple_params_end_0023:
  5068 00002F65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5069 00002F68 4889C3                  	mov rbx, rax
  5070 00002F6B 58                      	pop rax
  5071 00002F6C C60004                  	mov byte [rax], T_closure
  5072 00002F6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5073 00002F73 48C74009[802F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5074 00002F7B E929010000              	jmp .L_lambda_simple_end_0023
  5075                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5076 00002F80 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5077 00002F86 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5078 00002F88 FF742410                	push qword [rsp + 8 * 2]
  5079 00002F8C 6A02                    	push 2
  5080 00002F8E E955850000              	jmp L_error_incorrect_arity_simple
  5081                                  .L_lambda_simple_arity_check_ok_0023:
  5082 00002F93 C8000000                	enter 0, 0
  5083                                  	; preparing a non-tail-call
  5084 00002F97 488B4528                	mov rax, PARAM(1)	; param s
  5085 00002F9B 50                      	push rax
  5086 00002F9C 6A01                    	push 1	; arg count
  5087 00002F9E 488B0425[AA100000]      	mov rax, qword [free_var_91]	; free var pair?
  5088 00002FA6 803805                  	cmp byte [rax], T_undefined
  5089 00002FA9 0F8453840000            	je L_error_fvar_undefined
  5090 00002FAF 803804                  	cmp byte [rax], T_closure
  5091 00002FB2 0F85CE840000            	jne L_error_non_closure
  5092 00002FB8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5093 00002FBB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5094 00002FBE 483D[02000000]          	cmp rax, sob_boolean_false
  5095 00002FC4 0F84D7000000            	je .L_if_else_0004
  5096                                  	; preparing a tail-call
  5097                                  	; preparing a non-tail-call
  5098                                  	; preparing a non-tail-call
  5099 00002FCA 488B4528                	mov rax, PARAM(1)	; param s
  5100 00002FCE 50                      	push rax
  5101 00002FCF 6A01                    	push 1	; arg count
  5102 00002FD1 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  5103 00002FD9 803805                  	cmp byte [rax], T_undefined
  5104 00002FDC 0F8420840000            	je L_error_fvar_undefined
  5105 00002FE2 803804                  	cmp byte [rax], T_closure
  5106 00002FE5 0F859B840000            	jne L_error_non_closure
  5107 00002FEB FF7001                  	push SOB_CLOSURE_ENV(rax)
  5108 00002FEE FF5009                  	call SOB_CLOSURE_CODE(rax)
  5109 00002FF1 50                      	push rax
  5110                                  	; preparing a non-tail-call
  5111 00002FF2 488B4528                	mov rax, PARAM(1)	; param s
  5112 00002FF6 50                      	push rax
  5113 00002FF7 6A01                    	push 1	; arg count
  5114 00002FF9 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  5115 00003001 803805                  	cmp byte [rax], T_undefined
  5116 00003004 0F84F8830000            	je L_error_fvar_undefined
  5117 0000300A 803804                  	cmp byte [rax], T_closure
  5118 0000300D 0F8573840000            	jne L_error_non_closure
  5119 00003013 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5120 00003016 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5121 00003019 50                      	push rax
  5122 0000301A 6A02                    	push 2	; arg count
  5123 0000301C 488B4510                	mov rax, ENV
  5124 00003020 488B00                  	mov rax, qword [rax + 8 * 0]
  5125 00003023 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5126 00003026 488B00                  	mov rax, qword [rax]
  5127 00003029 803804                  	cmp byte [rax], T_closure
  5128 0000302C 0F8554840000            	jne L_error_non_closure
  5129 00003032 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5130 00003035 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5131 00003038 50                      	push rax
  5132 00003039 488B4520                	mov rax, PARAM(0)	; param a
  5133 0000303D 50                      	push rax
  5134 0000303E 6A02                    	push 2	; arg count
  5135 00003040 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  5136 00003048 803805                  	cmp byte [rax], T_undefined
  5137 0000304B 0F84B1830000            	je L_error_fvar_undefined
  5138 00003051 803804                  	cmp byte [rax], T_closure
  5139 00003054 0F852C840000            	jne L_error_non_closure
  5140 0000305A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5141 0000305D FF7508                  	push qword [rbp + 8 * 1]
  5142                                   ; old ret addr
  5143 00003060 FF7500                  	push qword [rbp]
  5144                                   ; restore the old rbp
  5145 00003063 BB02000000              	mov rbx, 2
  5146 00003068 4883C303                	add rbx, 3
  5147 0000306C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5148 00003070 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5149 00003075 4C8D4DF8                	lea r9, [rbp - 8]
  5150 00003079 B906000000              	mov rcx, 6
  5151                                  .L_tc_recycle_frame_loop_0021:
  5152 0000307E 4883F900                	cmp rcx, 0
  5153 00003082 7413                    	je .L_tc_recycle_frame_done_0021
  5154 00003084 4D8B11                  	mov r10, qword [r9]
  5155 00003087 4D8910                  	mov qword [r8], r10
  5156 0000308A 4983E808                	sub r8, 8
  5157 0000308E 4983E908                	sub r9, 8
  5158 00003092 48FFC9                  	dec rcx
  5159 00003095 EBE7                    	jmp .L_tc_recycle_frame_loop_0021
  5160                                  .L_tc_recycle_frame_done_0021:
  5161 00003097 498D6008                	lea rsp, [r8 + 8]
  5162 0000309B 5D                      	pop rbp ; restore the old rbp
  5163 0000309C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5164 0000309F EB04                    	jmp .L_if_end_0004
  5165                                  .L_if_else_0004:
  5166 000030A1 488B4520                	mov rax, PARAM(0)	; param a
  5167                                  .L_if_end_0004:
  5168 000030A5 C9                      	leave
  5169 000030A6 C22000                  	ret AND_KILL_FRAME(2)
  5170                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5171 000030A9 50                      	push rax
  5172 000030AA 488B4520                	mov rax, PARAM(0)	; param run
  5173 000030AE 8F00                    	pop qword [rax]
  5174 000030B0 48B8-                   	mov rax, sob_void
  5174 000030B2 [0000000000000000] 
  5175                                  
  5176 000030BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5177 000030BF E86B840000              	call malloc
  5178 000030C4 50                      	push rax
  5179 000030C5 BF10000000              	mov rdi, 8 * 2	; new rib
  5180 000030CA E860840000              	call malloc
  5181 000030CF 50                      	push rax
  5182 000030D0 BF10000000              	mov rdi, 8 * 2	; extended env
  5183 000030D5 E855840000              	call malloc
  5184 000030DA 488B7D10                	mov rdi, ENV
  5185 000030DE BE00000000              	mov rsi, 0
  5186 000030E3 BA01000000              	mov rdx, 1
  5187                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5188 000030E8 4883FE01                	cmp rsi, 1
  5189 000030EC 7410                    	je .L_lambda_opt_env_end_0003
  5190 000030EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5191 000030F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5192 000030F6 48FFC6                  	inc rsi
  5193 000030F9 48FFC2                  	inc rdx
  5194 000030FC EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5195                                  .L_lambda_opt_env_end_0003:
  5196 000030FE 5B                      	pop rbx
  5197 000030FF BE00000000              	mov rsi, 0
  5198                                  .L_lambda_opt_params_loop_0003:	; copy params
  5199 00003104 4883FE01                	cmp rsi, 1
  5200 00003108 740E                    	je .L_lambda_opt_params_end_0003
  5201 0000310A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5202 0000310F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5203 00003113 48FFC6                  	inc rsi
  5204 00003116 EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5205                                  .L_lambda_opt_params_end_0003:
  5206 00003118 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5207 0000311B 4889C3                  	mov rbx, rax
  5208 0000311E 58                      	pop rax
  5209 0000311F C60004                  	mov byte [rax], T_closure
  5210 00003122 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5211 00003126 48C74009[33310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5212 0000312E E973010000              	jmp .L_lambda_opt_end_0003
  5213                                  .L_lambda_opt_code_0003:	; lambda-opt body
  5214 00003133 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5215 00003139 745E                    	je .L_lambda_opt_arity_check_exact_0003
  5216 0000313B 7F0B                    	jg .L_lambda_opt_arity_check_more_0003
  5217 0000313D FF742410                	push qword [rsp + 8 * 2]
  5218 00003141 6A01                    	push 1
  5219 00003143 E9A0830000              	jmp L_error_incorrect_arity_simple
  5220                                  .L_lambda_opt_arity_check_more_0003:
  5221 00003148 53                      push rbx
  5222 00003149 51                      push rcx
  5223 0000314A 488B4D10                mov rcx, [rbp + 8*2]
  5224 0000314E BB01000000              mov rbx , 1
  5225 00003153 4829D9                  sub rcx, rbx
  5226 00003156 48FFC3                  inc rbx
  5227 00003159 48895D10                mov [rbp + 8*2], rbx
  5228 0000315D 4889CF                  	 mov rdi, rcx 
  5229 00003160 48C1E703                	 shl rdi, 3 
  5230 00003164 E8C6830000              	call malloc
  5231 00003169 50                      	push rax
  5232 0000316A 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  5233 0000316F 4831FF                  xor rdi, rdi
  5234                                  .L_lambda_opt_stack_shrink_loop_0003:
  5235 00003172 4839CF                  	cmp rdi, rcx
  5236 00003175 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0003
  5237 00003177 488904FC                mov [rsp + rdi*8], rax
  5238 0000317B 48FFC7                  	inc rdi
  5239 0000317E 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  5240 00003186 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  5241 0000318B 498B04D9                mov rax,[r9 + rbx*8] 
  5242 0000318F EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0003
  5243                                  .L_lambda_opt_stack_shrink_loop_exit_0003:
  5244 00003191 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  5245 00003195 5B                      pop rbx
  5246 00003196 53                      push rbx
  5247 00003197 EB16                    jmp .L_lambda_opt_stack_adjusted_0003
  5248                                  .L_lambda_opt_arity_check_exact_0003:
  5249 00003199 48B8-                   	mov rax, L_constants + 1
  5249 0000319B [0100000000000000] 
  5250 000031A3 53                      push rbx
  5251 000031A4 488B5C2410              mov rbx , [rsp + 8*2]
  5252 000031A9 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  5253 000031AE 5B                      pop rbx
  5254                                  .L_lambda_opt_stack_adjusted_0003:	; new closure is in rax
  5255 000031AF C8000000                	enter 0, 0
  5256                                  	; preparing a tail-call
  5257                                  	; preparing a non-tail-call
  5258                                  	; preparing a non-tail-call
  5259 000031B3 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  5260 000031BB 803805                  	cmp byte [rax], T_undefined
  5261 000031BE 0F843E820000            	je L_error_fvar_undefined
  5262 000031C4 50                      	push rax
  5263 000031C5 6A01                    	push 1	; arg count
  5264 000031C7 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  5265 000031CF 803805                  	cmp byte [rax], T_undefined
  5266 000031D2 0F842A820000            	je L_error_fvar_undefined
  5267 000031D8 803804                  	cmp byte [rax], T_closure
  5268 000031DB 0F85A5820000            	jne L_error_non_closure
  5269 000031E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5270 000031E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5271 000031E7 50                      	push rax
  5272                                  	; preparing a non-tail-call
  5273 000031E8 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  5274 000031F0 803805                  	cmp byte [rax], T_undefined
  5275 000031F3 0F8409820000            	je L_error_fvar_undefined
  5276 000031F9 50                      	push rax
  5277 000031FA 6A01                    	push 1	; arg count
  5278 000031FC 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  5279 00003204 803805                  	cmp byte [rax], T_undefined
  5280 00003207 0F84F5810000            	je L_error_fvar_undefined
  5281 0000320D 803804                  	cmp byte [rax], T_closure
  5282 00003210 0F8570820000            	jne L_error_non_closure
  5283 00003216 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5284 00003219 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5285 0000321C 50                      	push rax
  5286 0000321D 6A02                    	push 2	; arg count
  5287 0000321F 488B4510                	mov rax, ENV
  5288 00003223 488B00                  	mov rax, qword [rax + 8 * 0]
  5289 00003226 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5290 00003229 488B00                  	mov rax, qword [rax]
  5291 0000322C 803804                  	cmp byte [rax], T_closure
  5292 0000322F 0F8551820000            	jne L_error_non_closure
  5293 00003235 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5294 00003238 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5295 0000323B 50                      	push rax
  5296 0000323C 488B4520                	mov rax, PARAM(0)	; param f
  5297 00003240 50                      	push rax
  5298 00003241 6A02                    	push 2	; arg count
  5299 00003243 488B0425[6B0B0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5300 0000324B 803805                  	cmp byte [rax], T_undefined
  5301 0000324E 0F84AE810000            	je L_error_fvar_undefined
  5302 00003254 803804                  	cmp byte [rax], T_closure
  5303 00003257 0F8529820000            	jne L_error_non_closure
  5304 0000325D FF7001                  	push SOB_CLOSURE_ENV(rax)
  5305 00003260 FF7508                  	push qword [rbp + 8 * 1]
  5306                                   ; old ret addr
  5307 00003263 FF7500                  	push qword [rbp]
  5308                                   ; restore the old rbp
  5309 00003266 BB02000000              	mov rbx, 2
  5310 0000326B 4883C303                	add rbx, 3
  5311 0000326F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5312 00003273 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5313 00003278 4C8D4DF8                	lea r9, [rbp - 8]
  5314 0000327C B906000000              	mov rcx, 6
  5315                                  .L_tc_recycle_frame_loop_0022:
  5316 00003281 4883F900                	cmp rcx, 0
  5317 00003285 7413                    	je .L_tc_recycle_frame_done_0022
  5318 00003287 4D8B11                  	mov r10, qword [r9]
  5319 0000328A 4D8910                  	mov qword [r8], r10
  5320 0000328D 4983E808                	sub r8, 8
  5321 00003291 4983E908                	sub r9, 8
  5322 00003295 48FFC9                  	dec rcx
  5323 00003298 EBE7                    	jmp .L_tc_recycle_frame_loop_0022
  5324                                  .L_tc_recycle_frame_done_0022:
  5325 0000329A 498D6008                	lea rsp, [r8 + 8]
  5326 0000329E 5D                      	pop rbp ; restore the old rbp
  5327 0000329F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5328 000032A2 C9                      	leave
  5329 000032A3 C21800                  	ret AND_KILL_FRAME(1)
  5330                                  .L_lambda_opt_end_0003:	; new closure is in rax
  5331 000032A6 C9                      	leave
  5332 000032A7 C21800                  	ret AND_KILL_FRAME(1)
  5333                                  .L_lambda_simple_end_0022:	; new closure is in rax
  5334 000032AA 803804                  	cmp byte [rax], T_closure
  5335 000032AD 0F85D3810000            	jne L_error_non_closure
  5336 000032B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5337 000032B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5338 000032B9 48890425[BF0C0000]      	mov qword [free_var_32], rax
  5339 000032C1 48B8-                   	mov rax, sob_void
  5339 000032C3 [0000000000000000] 
  5340                                  
  5341 000032CB 4889C7                  	mov rdi, rax
  5342 000032CE E8B1840000              	call print_sexpr_if_not_void
  5343 000032D3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5344 000032D8 E852820000              	call malloc
  5345 000032DD 50                      	push rax
  5346 000032DE BF08000000              	mov rdi, 8 * 1	; new rib
  5347 000032E3 E847820000              	call malloc
  5348 000032E8 50                      	push rax
  5349 000032E9 BF08000000              	mov rdi, 8 * 1	; extended env
  5350 000032EE E83C820000              	call malloc
  5351 000032F3 488B7D10                	mov rdi, ENV
  5352 000032F7 BE00000000              	mov rsi, 0
  5353 000032FC BA01000000              	mov rdx, 1
  5354                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  5355 00003301 4883FE00                	cmp rsi, 0
  5356 00003305 7410                    	je .L_lambda_opt_env_end_0004
  5357 00003307 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5358 0000330B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5359 0000330F 48FFC6                  	inc rsi
  5360 00003312 48FFC2                  	inc rdx
  5361 00003315 EBEA                    	jmp .L_lambda_opt_env_loop_0004
  5362                                  .L_lambda_opt_env_end_0004:
  5363 00003317 5B                      	pop rbx
  5364 00003318 BE00000000              	mov rsi, 0
  5365                                  .L_lambda_opt_params_loop_0004:	; copy params
  5366 0000331D 4883FE00                	cmp rsi, 0
  5367 00003321 740E                    	je .L_lambda_opt_params_end_0004
  5368 00003323 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5369 00003328 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5370 0000332C 48FFC6                  	inc rsi
  5371 0000332F EBEC                    	jmp .L_lambda_opt_params_loop_0004
  5372                                  .L_lambda_opt_params_end_0004:
  5373 00003331 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5374 00003334 4889C3                  	mov rbx, rax
  5375 00003337 58                      	pop rax
  5376 00003338 C60004                  	mov byte [rax], T_closure
  5377 0000333B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5378 0000333F 48C74009[4C330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  5379 00003347 E95D040000              	jmp .L_lambda_opt_end_0004
  5380                                  .L_lambda_opt_code_0004:	; lambda-opt body
  5381 0000334C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5382 00003352 745E                    	je .L_lambda_opt_arity_check_exact_0004
  5383 00003354 7F0B                    	jg .L_lambda_opt_arity_check_more_0004
  5384 00003356 FF742410                	push qword [rsp + 8 * 2]
  5385 0000335A 6A01                    	push 1
  5386 0000335C E987810000              	jmp L_error_incorrect_arity_simple
  5387                                  .L_lambda_opt_arity_check_more_0004:
  5388 00003361 53                      push rbx
  5389 00003362 51                      push rcx
  5390 00003363 488B4D10                mov rcx, [rbp + 8*2]
  5391 00003367 BB01000000              mov rbx , 1
  5392 0000336C 4829D9                  sub rcx, rbx
  5393 0000336F 48FFC3                  inc rbx
  5394 00003372 48895D10                mov [rbp + 8*2], rbx
  5395 00003376 4889CF                  	 mov rdi, rcx 
  5396 00003379 48C1E703                	 shl rdi, 3 
  5397 0000337D E8AD810000              	call malloc
  5398 00003382 50                      	push rax
  5399 00003383 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  5400 00003388 4831FF                  xor rdi, rdi
  5401                                  .L_lambda_opt_stack_shrink_loop_0004:
  5402 0000338B 4839CF                  	cmp rdi, rcx
  5403 0000338E 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0004
  5404 00003390 488904FC                mov [rsp + rdi*8], rax
  5405 00003394 48FFC7                  	inc rdi
  5406 00003397 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  5407 0000339F 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  5408 000033A4 498B04D9                mov rax,[r9 + rbx*8] 
  5409 000033A8 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0004
  5410                                  .L_lambda_opt_stack_shrink_loop_exit_0004:
  5411 000033AA 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  5412 000033AE 5B                      pop rbx
  5413 000033AF 53                      push rbx
  5414 000033B0 EB16                    jmp .L_lambda_opt_stack_adjusted_0004
  5415                                  .L_lambda_opt_arity_check_exact_0004:
  5416 000033B2 48B8-                   	mov rax, L_constants + 1
  5416 000033B4 [0100000000000000] 
  5417 000033BC 53                      push rbx
  5418 000033BD 488B5C2410              mov rbx , [rsp + 8*2]
  5419 000033C2 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  5420 000033C7 5B                      pop rbx
  5421                                  .L_lambda_opt_stack_adjusted_0004:	; new closure is in rax
  5422 000033C8 C8000000                	enter 0, 0
  5423                                  	; preparing a tail-call
  5424 000033CC 48B8-                   	mov rax, L_constants + 2016
  5424 000033CE [E007000000000000] 
  5425 000033D6 50                      	push rax
  5426 000033D7 6A01                    	push 1	; arg count
  5427 000033D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5428 000033DE E84C810000              	call malloc
  5429 000033E3 50                      	push rax
  5430 000033E4 BF08000000              	mov rdi, 8 * 1	; new rib
  5431 000033E9 E841810000              	call malloc
  5432 000033EE 50                      	push rax
  5433 000033EF BF10000000              	mov rdi, 8 * 2	; extended env
  5434 000033F4 E836810000              	call malloc
  5435 000033F9 488B7D10                	mov rdi, ENV
  5436 000033FD BE00000000              	mov rsi, 0
  5437 00003402 BA01000000              	mov rdx, 1
  5438                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  5439 00003407 4883FE01                	cmp rsi, 1
  5440 0000340B 7410                    	je .L_lambda_simple_env_end_0024
  5441 0000340D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5442 00003411 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5443 00003415 48FFC6                  	inc rsi
  5444 00003418 48FFC2                  	inc rdx
  5445 0000341B EBEA                    	jmp .L_lambda_simple_env_loop_0024
  5446                                  .L_lambda_simple_env_end_0024:
  5447 0000341D 5B                      	pop rbx
  5448 0000341E BE00000000              	mov rsi, 0
  5449                                  .L_lambda_simple_params_loop_0024:	; copy params
  5450 00003423 4883FE01                	cmp rsi, 1
  5451 00003427 740E                    	je .L_lambda_simple_params_end_0024
  5452 00003429 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5453 0000342E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5454 00003432 48FFC6                  	inc rsi
  5455 00003435 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  5456                                  .L_lambda_simple_params_end_0024:
  5457 00003437 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5458 0000343A 4889C3                  	mov rbx, rax
  5459 0000343D 58                      	pop rax
  5460 0000343E C60004                  	mov byte [rax], T_closure
  5461 00003441 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5462 00003445 48C74009[52340000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  5463 0000344D E905030000              	jmp .L_lambda_simple_end_0024
  5464                                  .L_lambda_simple_code_0024:	; lambda-simple body
  5465 00003452 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5466 00003458 740B                    	je .L_lambda_simple_arity_check_ok_0024
  5467 0000345A FF742410                	push qword [rsp + 8 * 2]
  5468 0000345E 6A01                    	push 1
  5469 00003460 E983800000              	jmp L_error_incorrect_arity_simple
  5470                                  .L_lambda_simple_arity_check_ok_0024:
  5471 00003465 C8000000                	enter 0, 0
  5472 00003469 BF08000000              	mov rdi, 8*1
  5473 0000346E E8BC800000              	call malloc
  5474 00003473 488B5D20                	mov rbx, PARAM(0)
  5475 00003477 488918                  	mov qword [rax], rbx
  5476 0000347A 48894520                	mov PARAM(0), rax
  5477 0000347E 48B8-                   	mov rax, sob_void
  5477 00003480 [0000000000000000] 
  5478                                  
  5479 00003488 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5480 0000348D E89D800000              	call malloc
  5481 00003492 50                      	push rax
  5482 00003493 BF08000000              	mov rdi, 8 * 1	; new rib
  5483 00003498 E892800000              	call malloc
  5484 0000349D 50                      	push rax
  5485 0000349E BF18000000              	mov rdi, 8 * 3	; extended env
  5486 000034A3 E887800000              	call malloc
  5487 000034A8 488B7D10                	mov rdi, ENV
  5488 000034AC BE00000000              	mov rsi, 0
  5489 000034B1 BA01000000              	mov rdx, 1
  5490                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  5491 000034B6 4883FE02                	cmp rsi, 2
  5492 000034BA 7410                    	je .L_lambda_simple_env_end_0025
  5493 000034BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5494 000034C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5495 000034C4 48FFC6                  	inc rsi
  5496 000034C7 48FFC2                  	inc rdx
  5497 000034CA EBEA                    	jmp .L_lambda_simple_env_loop_0025
  5498                                  .L_lambda_simple_env_end_0025:
  5499 000034CC 5B                      	pop rbx
  5500 000034CD BE00000000              	mov rsi, 0
  5501                                  .L_lambda_simple_params_loop_0025:	; copy params
  5502 000034D2 4883FE01                	cmp rsi, 1
  5503 000034D6 740E                    	je .L_lambda_simple_params_end_0025
  5504 000034D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5505 000034DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5506 000034E1 48FFC6                  	inc rsi
  5507 000034E4 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  5508                                  .L_lambda_simple_params_end_0025:
  5509 000034E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5510 000034E9 4889C3                  	mov rbx, rax
  5511 000034EC 58                      	pop rax
  5512 000034ED C60004                  	mov byte [rax], T_closure
  5513 000034F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5514 000034F4 48C74009[01350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  5515 000034FC E990010000              	jmp .L_lambda_simple_end_0025
  5516                                  .L_lambda_simple_code_0025:	; lambda-simple body
  5517 00003501 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5518 00003507 740B                    	je .L_lambda_simple_arity_check_ok_0025
  5519 00003509 FF742410                	push qword [rsp + 8 * 2]
  5520 0000350D 6A01                    	push 1
  5521 0000350F E9D47F0000              	jmp L_error_incorrect_arity_simple
  5522                                  .L_lambda_simple_arity_check_ok_0025:
  5523 00003514 C8000000                	enter 0, 0
  5524                                  	; preparing a non-tail-call
  5525                                  	; preparing a non-tail-call
  5526 00003518 488B4520                	mov rax, PARAM(0)	; param s
  5527 0000351C 50                      	push rax
  5528 0000351D 6A01                    	push 1	; arg count
  5529 0000351F 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  5530 00003527 803805                  	cmp byte [rax], T_undefined
  5531 0000352A 0F84D27E0000            	je L_error_fvar_undefined
  5532 00003530 803804                  	cmp byte [rax], T_closure
  5533 00003533 0F854D7F0000            	jne L_error_non_closure
  5534 00003539 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5535 0000353C FF5009                  	call SOB_CLOSURE_CODE(rax)
  5536 0000353F 50                      	push rax
  5537 00003540 6A01                    	push 1	; arg count
  5538 00003542 488B0425[AA100000]      	mov rax, qword [free_var_91]	; free var pair?
  5539 0000354A 803805                  	cmp byte [rax], T_undefined
  5540 0000354D 0F84AF7E0000            	je L_error_fvar_undefined
  5541 00003553 803804                  	cmp byte [rax], T_closure
  5542 00003556 0F852A7F0000            	jne L_error_non_closure
  5543 0000355C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5544 0000355F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5545 00003562 483D[02000000]          	cmp rax, sob_boolean_false
  5546 00003568 0F8415010000            	je .L_if_else_0005
  5547                                  	; preparing a non-tail-call
  5548                                  	; preparing a non-tail-call
  5549 0000356E 488B4520                	mov rax, PARAM(0)	; param s
  5550 00003572 50                      	push rax
  5551 00003573 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  5552 0000357B 803805                  	cmp byte [rax], T_undefined
  5553 0000357E 0F847E7E0000            	je L_error_fvar_undefined
  5554 00003584 50                      	push rax
  5555 00003585 6A02                    	push 2	; arg count
  5556 00003587 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  5557 0000358F 803805                  	cmp byte [rax], T_undefined
  5558 00003592 0F846A7E0000            	je L_error_fvar_undefined
  5559 00003598 803804                  	cmp byte [rax], T_closure
  5560 0000359B 0F85E57E0000            	jne L_error_non_closure
  5561 000035A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5562 000035A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5563 000035A7 50                      	push rax
  5564 000035A8 488B4510                	mov rax, ENV
  5565 000035AC 488B4008                	mov rax, qword [rax + 8 * 1]
  5566 000035B0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  5567 000035B3 50                      	push rax
  5568 000035B4 6A02                    	push 2	; arg count
  5569 000035B6 488B0425[BF0C0000]      	mov rax, qword [free_var_32]	; free var apply
  5570 000035BE 803805                  	cmp byte [rax], T_undefined
  5571 000035C1 0F843B7E0000            	je L_error_fvar_undefined
  5572 000035C7 803804                  	cmp byte [rax], T_closure
  5573 000035CA 0F85B67E0000            	jne L_error_non_closure
  5574 000035D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5575 000035D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5576 000035D6 483D[02000000]          	cmp rax, sob_boolean_false
  5577 000035DC 0F849F000000            	je .L_or_end_0003
  5578                                  
  5579                                  	; preparing a tail-call
  5580                                  	; preparing a non-tail-call
  5581 000035E2 488B4520                	mov rax, PARAM(0)	; param s
  5582 000035E6 50                      	push rax
  5583 000035E7 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  5584 000035EF 803805                  	cmp byte [rax], T_undefined
  5585 000035F2 0F840A7E0000            	je L_error_fvar_undefined
  5586 000035F8 50                      	push rax
  5587 000035F9 6A02                    	push 2	; arg count
  5588 000035FB 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  5589 00003603 803805                  	cmp byte [rax], T_undefined
  5590 00003606 0F84F67D0000            	je L_error_fvar_undefined
  5591 0000360C 803804                  	cmp byte [rax], T_closure
  5592 0000360F 0F85717E0000            	jne L_error_non_closure
  5593 00003615 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5594 00003618 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5595 0000361B 50                      	push rax
  5596 0000361C 6A01                    	push 1	; arg count
  5597 0000361E 488B4510                	mov rax, ENV
  5598 00003622 488B00                  	mov rax, qword [rax + 8 * 0]
  5599 00003625 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  5600 00003628 488B00                  	mov rax, qword [rax]
  5601 0000362B 803804                  	cmp byte [rax], T_closure
  5602 0000362E 0F85527E0000            	jne L_error_non_closure
  5603 00003634 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5604 00003637 FF7508                  	push qword [rbp + 8 * 1]
  5605                                   ; old ret addr
  5606 0000363A FF7500                  	push qword [rbp]
  5607                                   ; restore the old rbp
  5608 0000363D BB01000000              	mov rbx, 1
  5609 00003642 4883C303                	add rbx, 3
  5610 00003646 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5611 0000364A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5612 0000364F 4C8D4DF8                	lea r9, [rbp - 8]
  5613 00003653 B905000000              	mov rcx, 5
  5614                                  .L_tc_recycle_frame_loop_0024:
  5615 00003658 4883F900                	cmp rcx, 0
  5616 0000365C 7413                    	je .L_tc_recycle_frame_done_0024
  5617 0000365E 4D8B11                  	mov r10, qword [r9]
  5618 00003661 4D8910                  	mov qword [r8], r10
  5619 00003664 4983E808                	sub r8, 8
  5620 00003668 4983E908                	sub r9, 8
  5621 0000366C 48FFC9                  	dec rcx
  5622 0000366F EBE7                    	jmp .L_tc_recycle_frame_loop_0024
  5623                                  .L_tc_recycle_frame_done_0024:
  5624 00003671 498D6008                	lea rsp, [r8 + 8]
  5625 00003675 5D                      	pop rbp ; restore the old rbp
  5626 00003676 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5627 00003679 483D[02000000]          	cmp rax, sob_boolean_false
  5628 0000367F 7400                    	je .L_or_end_0003
  5629                                  .L_or_end_0003:
  5630 00003681 EB0A                    	jmp .L_if_end_0005
  5631                                  .L_if_else_0005:
  5632 00003683 48B8-                   	mov rax, L_constants + 2
  5632 00003685 [0200000000000000] 
  5633                                  .L_if_end_0005:
  5634 0000368D C9                      	leave
  5635 0000368E C21800                  	ret AND_KILL_FRAME(1)
  5636                                  .L_lambda_simple_end_0025:	; new closure is in rax
  5637 00003691 50                      	push rax
  5638 00003692 488B4520                	mov rax, PARAM(0)	; param loop
  5639 00003696 8F00                    	pop qword [rax]
  5640 00003698 48B8-                   	mov rax, sob_void
  5640 0000369A [0000000000000000] 
  5641                                  
  5642                                  	; preparing a non-tail-call
  5643 000036A2 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  5644 000036AA 803805                  	cmp byte [rax], T_undefined
  5645 000036AD 0F844F7D0000            	je L_error_fvar_undefined
  5646 000036B3 50                      	push rax
  5647 000036B4 6A01                    	push 1	; arg count
  5648 000036B6 488B0425[AA100000]      	mov rax, qword [free_var_91]	; free var pair?
  5649 000036BE 803805                  	cmp byte [rax], T_undefined
  5650 000036C1 0F843B7D0000            	je L_error_fvar_undefined
  5651 000036C7 803804                  	cmp byte [rax], T_closure
  5652 000036CA 0F85B67D0000            	jne L_error_non_closure
  5653 000036D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5654 000036D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5655 000036D6 483D[02000000]          	cmp rax, sob_boolean_false
  5656 000036DC 746B                    	je .L_if_else_0006
  5657                                  	; preparing a tail-call
  5658 000036DE 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  5659 000036E6 803805                  	cmp byte [rax], T_undefined
  5660 000036E9 0F84137D0000            	je L_error_fvar_undefined
  5661 000036EF 50                      	push rax
  5662 000036F0 6A01                    	push 1	; arg count
  5663 000036F2 488B4520                	mov rax, PARAM(0)	; param loop
  5664 000036F6 488B00                  	mov rax, qword [rax]
  5665 000036F9 803804                  	cmp byte [rax], T_closure
  5666 000036FC 0F85847D0000            	jne L_error_non_closure
  5667 00003702 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5668 00003705 FF7508                  	push qword [rbp + 8 * 1]
  5669                                   ; old ret addr
  5670 00003708 FF7500                  	push qword [rbp]
  5671                                   ; restore the old rbp
  5672 0000370B BB01000000              	mov rbx, 1
  5673 00003710 4883C303                	add rbx, 3
  5674 00003714 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5675 00003718 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5676 0000371D 4C8D4DF8                	lea r9, [rbp - 8]
  5677 00003721 B905000000              	mov rcx, 5
  5678                                  .L_tc_recycle_frame_loop_0025:
  5679 00003726 4883F900                	cmp rcx, 0
  5680 0000372A 7413                    	je .L_tc_recycle_frame_done_0025
  5681 0000372C 4D8B11                  	mov r10, qword [r9]
  5682 0000372F 4D8910                  	mov qword [r8], r10
  5683 00003732 4983E808                	sub r8, 8
  5684 00003736 4983E908                	sub r9, 8
  5685 0000373A 48FFC9                  	dec rcx
  5686 0000373D EBE7                    	jmp .L_tc_recycle_frame_loop_0025
  5687                                  .L_tc_recycle_frame_done_0025:
  5688 0000373F 498D6008                	lea rsp, [r8 + 8]
  5689 00003743 5D                      	pop rbp ; restore the old rbp
  5690 00003744 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5691 00003747 EB0A                    	jmp .L_if_end_0006
  5692                                  .L_if_else_0006:
  5693 00003749 48B8-                   	mov rax, L_constants + 2
  5693 0000374B [0200000000000000] 
  5694                                  .L_if_end_0006:
  5695 00003753 C9                      	leave
  5696 00003754 C21800                  	ret AND_KILL_FRAME(1)
  5697                                  .L_lambda_simple_end_0024:	; new closure is in rax
  5698 00003757 803804                  	cmp byte [rax], T_closure
  5699 0000375A 0F85267D0000            	jne L_error_non_closure
  5700 00003760 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5701 00003763 FF7508                  	push qword [rbp + 8 * 1]
  5702                                   ; old ret addr
  5703 00003766 FF7500                  	push qword [rbp]
  5704                                   ; restore the old rbp
  5705 00003769 BB01000000              	mov rbx, 1
  5706 0000376E 4883C303                	add rbx, 3
  5707 00003772 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5708 00003776 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5709 0000377B 4C8D4DF8                	lea r9, [rbp - 8]
  5710 0000377F B905000000              	mov rcx, 5
  5711                                  .L_tc_recycle_frame_loop_0023:
  5712 00003784 4883F900                	cmp rcx, 0
  5713 00003788 7413                    	je .L_tc_recycle_frame_done_0023
  5714 0000378A 4D8B11                  	mov r10, qword [r9]
  5715 0000378D 4D8910                  	mov qword [r8], r10
  5716 00003790 4983E808                	sub r8, 8
  5717 00003794 4983E908                	sub r9, 8
  5718 00003798 48FFC9                  	dec rcx
  5719 0000379B EBE7                    	jmp .L_tc_recycle_frame_loop_0023
  5720                                  .L_tc_recycle_frame_done_0023:
  5721 0000379D 498D6008                	lea rsp, [r8 + 8]
  5722 000037A1 5D                      	pop rbp ; restore the old rbp
  5723 000037A2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5724 000037A5 C9                      	leave
  5725 000037A6 C21800                  	ret AND_KILL_FRAME(1)
  5726                                  .L_lambda_opt_end_0004:	; new closure is in rax
  5727 000037A9 48890425[99100000]      	mov qword [free_var_90], rax
  5728 000037B1 48B8-                   	mov rax, sob_void
  5728 000037B3 [0000000000000000] 
  5729                                  
  5730 000037BB 4889C7                  	mov rdi, rax
  5731 000037BE E8C17F0000              	call print_sexpr_if_not_void
  5732 000037C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5733 000037C8 E8627D0000              	call malloc
  5734 000037CD 50                      	push rax
  5735 000037CE BF08000000              	mov rdi, 8 * 1	; new rib
  5736 000037D3 E8577D0000              	call malloc
  5737 000037D8 50                      	push rax
  5738 000037D9 BF08000000              	mov rdi, 8 * 1	; extended env
  5739 000037DE E84C7D0000              	call malloc
  5740 000037E3 488B7D10                	mov rdi, ENV
  5741 000037E7 BE00000000              	mov rsi, 0
  5742 000037EC BA01000000              	mov rdx, 1
  5743                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  5744 000037F1 4883FE00                	cmp rsi, 0
  5745 000037F5 7410                    	je .L_lambda_opt_env_end_0005
  5746 000037F7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5747 000037FB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5748 000037FF 48FFC6                  	inc rsi
  5749 00003802 48FFC2                  	inc rdx
  5750 00003805 EBEA                    	jmp .L_lambda_opt_env_loop_0005
  5751                                  .L_lambda_opt_env_end_0005:
  5752 00003807 5B                      	pop rbx
  5753 00003808 BE00000000              	mov rsi, 0
  5754                                  .L_lambda_opt_params_loop_0005:	; copy params
  5755 0000380D 4883FE00                	cmp rsi, 0
  5756 00003811 740E                    	je .L_lambda_opt_params_end_0005
  5757 00003813 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5758 00003818 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5759 0000381C 48FFC6                  	inc rsi
  5760 0000381F EBEC                    	jmp .L_lambda_opt_params_loop_0005
  5761                                  .L_lambda_opt_params_end_0005:
  5762 00003821 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5763 00003824 4889C3                  	mov rbx, rax
  5764 00003827 58                      	pop rax
  5765 00003828 C60004                  	mov byte [rax], T_closure
  5766 0000382B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5767 0000382F 48C74009[3C380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  5768 00003837 E9A5040000              	jmp .L_lambda_opt_end_0005
  5769                                  .L_lambda_opt_code_0005:	; lambda-opt body
  5770 0000383C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5771 00003842 745E                    	je .L_lambda_opt_arity_check_exact_0005
  5772 00003844 7F0B                    	jg .L_lambda_opt_arity_check_more_0005
  5773 00003846 FF742410                	push qword [rsp + 8 * 2]
  5774 0000384A 6A01                    	push 1
  5775 0000384C E9977C0000              	jmp L_error_incorrect_arity_simple
  5776                                  .L_lambda_opt_arity_check_more_0005:
  5777 00003851 53                      push rbx
  5778 00003852 51                      push rcx
  5779 00003853 488B4D10                mov rcx, [rbp + 8*2]
  5780 00003857 BB01000000              mov rbx , 1
  5781 0000385C 4829D9                  sub rcx, rbx
  5782 0000385F 48FFC3                  inc rbx
  5783 00003862 48895D10                mov [rbp + 8*2], rbx
  5784 00003866 4889CF                  	 mov rdi, rcx 
  5785 00003869 48C1E703                	 shl rdi, 3 
  5786 0000386D E8BD7C0000              	call malloc
  5787 00003872 50                      	push rax
  5788 00003873 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  5789 00003878 4831FF                  xor rdi, rdi
  5790                                  .L_lambda_opt_stack_shrink_loop_0005:
  5791 0000387B 4839CF                  	cmp rdi, rcx
  5792 0000387E 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0005
  5793 00003880 488904FC                mov [rsp + rdi*8], rax
  5794 00003884 48FFC7                  	inc rdi
  5795 00003887 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  5796 0000388F 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  5797 00003894 498B04D9                mov rax,[r9 + rbx*8] 
  5798 00003898 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0005
  5799                                  .L_lambda_opt_stack_shrink_loop_exit_0005:
  5800 0000389A 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  5801 0000389E 5B                      pop rbx
  5802 0000389F 53                      push rbx
  5803 000038A0 EB16                    jmp .L_lambda_opt_stack_adjusted_0005
  5804                                  .L_lambda_opt_arity_check_exact_0005:
  5805 000038A2 48B8-                   	mov rax, L_constants + 1
  5805 000038A4 [0100000000000000] 
  5806 000038AC 53                      push rbx
  5807 000038AD 488B5C2410              mov rbx , [rsp + 8*2]
  5808 000038B2 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  5809 000038B7 5B                      pop rbx
  5810                                  .L_lambda_opt_stack_adjusted_0005:	; new closure is in rax
  5811 000038B8 C8000000                	enter 0, 0
  5812                                  	; preparing a tail-call
  5813 000038BC 48B8-                   	mov rax, L_constants + 2016
  5813 000038BE [E007000000000000] 
  5814 000038C6 50                      	push rax
  5815 000038C7 6A01                    	push 1	; arg count
  5816 000038C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5817 000038CE E85C7C0000              	call malloc
  5818 000038D3 50                      	push rax
  5819 000038D4 BF08000000              	mov rdi, 8 * 1	; new rib
  5820 000038D9 E8517C0000              	call malloc
  5821 000038DE 50                      	push rax
  5822 000038DF BF10000000              	mov rdi, 8 * 2	; extended env
  5823 000038E4 E8467C0000              	call malloc
  5824 000038E9 488B7D10                	mov rdi, ENV
  5825 000038ED BE00000000              	mov rsi, 0
  5826 000038F2 BA01000000              	mov rdx, 1
  5827                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  5828 000038F7 4883FE01                	cmp rsi, 1
  5829 000038FB 7410                    	je .L_lambda_simple_env_end_0026
  5830 000038FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5831 00003901 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5832 00003905 48FFC6                  	inc rsi
  5833 00003908 48FFC2                  	inc rdx
  5834 0000390B EBEA                    	jmp .L_lambda_simple_env_loop_0026
  5835                                  .L_lambda_simple_env_end_0026:
  5836 0000390D 5B                      	pop rbx
  5837 0000390E BE00000000              	mov rsi, 0
  5838                                  .L_lambda_simple_params_loop_0026:	; copy params
  5839 00003913 4883FE01                	cmp rsi, 1
  5840 00003917 740E                    	je .L_lambda_simple_params_end_0026
  5841 00003919 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5842 0000391E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5843 00003922 48FFC6                  	inc rsi
  5844 00003925 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  5845                                  .L_lambda_simple_params_end_0026:
  5846 00003927 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5847 0000392A 4889C3                  	mov rbx, rax
  5848 0000392D 58                      	pop rax
  5849 0000392E C60004                  	mov byte [rax], T_closure
  5850 00003931 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5851 00003935 48C74009[42390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  5852 0000393D E94D030000              	jmp .L_lambda_simple_end_0026
  5853                                  .L_lambda_simple_code_0026:	; lambda-simple body
  5854 00003942 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5855 00003948 740B                    	je .L_lambda_simple_arity_check_ok_0026
  5856 0000394A FF742410                	push qword [rsp + 8 * 2]
  5857 0000394E 6A01                    	push 1
  5858 00003950 E9937B0000              	jmp L_error_incorrect_arity_simple
  5859                                  .L_lambda_simple_arity_check_ok_0026:
  5860 00003955 C8000000                	enter 0, 0
  5861 00003959 BF08000000              	mov rdi, 8*1
  5862 0000395E E8CC7B0000              	call malloc
  5863 00003963 488B5D20                	mov rbx, PARAM(0)
  5864 00003967 488918                  	mov qword [rax], rbx
  5865 0000396A 48894520                	mov PARAM(0), rax
  5866 0000396E 48B8-                   	mov rax, sob_void
  5866 00003970 [0000000000000000] 
  5867                                  
  5868 00003978 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5869 0000397D E8AD7B0000              	call malloc
  5870 00003982 50                      	push rax
  5871 00003983 BF08000000              	mov rdi, 8 * 1	; new rib
  5872 00003988 E8A27B0000              	call malloc
  5873 0000398D 50                      	push rax
  5874 0000398E BF18000000              	mov rdi, 8 * 3	; extended env
  5875 00003993 E8977B0000              	call malloc
  5876 00003998 488B7D10                	mov rdi, ENV
  5877 0000399C BE00000000              	mov rsi, 0
  5878 000039A1 BA01000000              	mov rdx, 1
  5879                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  5880 000039A6 4883FE02                	cmp rsi, 2
  5881 000039AA 7410                    	je .L_lambda_simple_env_end_0027
  5882 000039AC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5883 000039B0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5884 000039B4 48FFC6                  	inc rsi
  5885 000039B7 48FFC2                  	inc rdx
  5886 000039BA EBEA                    	jmp .L_lambda_simple_env_loop_0027
  5887                                  .L_lambda_simple_env_end_0027:
  5888 000039BC 5B                      	pop rbx
  5889 000039BD BE00000000              	mov rsi, 0
  5890                                  .L_lambda_simple_params_loop_0027:	; copy params
  5891 000039C2 4883FE01                	cmp rsi, 1
  5892 000039C6 740E                    	je .L_lambda_simple_params_end_0027
  5893 000039C8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5894 000039CD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5895 000039D1 48FFC6                  	inc rsi
  5896 000039D4 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  5897                                  .L_lambda_simple_params_end_0027:
  5898 000039D6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5899 000039D9 4889C3                  	mov rbx, rax
  5900 000039DC 58                      	pop rax
  5901 000039DD C60004                  	mov byte [rax], T_closure
  5902 000039E0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5903 000039E4 48C74009[F1390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  5904 000039EC E990010000              	jmp .L_lambda_simple_end_0027
  5905                                  .L_lambda_simple_code_0027:	; lambda-simple body
  5906 000039F1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5907 000039F7 740B                    	je .L_lambda_simple_arity_check_ok_0027
  5908 000039F9 FF742410                	push qword [rsp + 8 * 2]
  5909 000039FD 6A01                    	push 1
  5910 000039FF E9E47A0000              	jmp L_error_incorrect_arity_simple
  5911                                  .L_lambda_simple_arity_check_ok_0027:
  5912 00003A04 C8000000                	enter 0, 0
  5913                                  	; preparing a non-tail-call
  5914                                  	; preparing a non-tail-call
  5915 00003A08 488B4520                	mov rax, PARAM(0)	; param s
  5916 00003A0C 50                      	push rax
  5917 00003A0D 6A01                    	push 1	; arg count
  5918 00003A0F 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  5919 00003A17 803805                  	cmp byte [rax], T_undefined
  5920 00003A1A 0F84E2790000            	je L_error_fvar_undefined
  5921 00003A20 803804                  	cmp byte [rax], T_closure
  5922 00003A23 0F855D7A0000            	jne L_error_non_closure
  5923 00003A29 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5924 00003A2C FF5009                  	call SOB_CLOSURE_CODE(rax)
  5925 00003A2F 50                      	push rax
  5926 00003A30 6A01                    	push 1	; arg count
  5927 00003A32 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  5928 00003A3A 803805                  	cmp byte [rax], T_undefined
  5929 00003A3D 0F84BF790000            	je L_error_fvar_undefined
  5930 00003A43 803804                  	cmp byte [rax], T_closure
  5931 00003A46 0F853A7A0000            	jne L_error_non_closure
  5932 00003A4C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5933 00003A4F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5934 00003A52 483D[02000000]          	cmp rax, sob_boolean_false
  5935 00003A58 0F841F010000            	je .L_or_end_0004
  5936                                  
  5937                                  	; preparing a non-tail-call
  5938                                  	; preparing a non-tail-call
  5939 00003A5E 488B4520                	mov rax, PARAM(0)	; param s
  5940 00003A62 50                      	push rax
  5941 00003A63 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  5942 00003A6B 803805                  	cmp byte [rax], T_undefined
  5943 00003A6E 0F848E790000            	je L_error_fvar_undefined
  5944 00003A74 50                      	push rax
  5945 00003A75 6A02                    	push 2	; arg count
  5946 00003A77 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  5947 00003A7F 803805                  	cmp byte [rax], T_undefined
  5948 00003A82 0F847A790000            	je L_error_fvar_undefined
  5949 00003A88 803804                  	cmp byte [rax], T_closure
  5950 00003A8B 0F85F5790000            	jne L_error_non_closure
  5951 00003A91 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5952 00003A94 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5953 00003A97 50                      	push rax
  5954 00003A98 488B4510                	mov rax, ENV
  5955 00003A9C 488B4008                	mov rax, qword [rax + 8 * 1]
  5956 00003AA0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  5957 00003AA3 50                      	push rax
  5958 00003AA4 6A02                    	push 2	; arg count
  5959 00003AA6 488B0425[BF0C0000]      	mov rax, qword [free_var_32]	; free var apply
  5960 00003AAE 803805                  	cmp byte [rax], T_undefined
  5961 00003AB1 0F844B790000            	je L_error_fvar_undefined
  5962 00003AB7 803804                  	cmp byte [rax], T_closure
  5963 00003ABA 0F85C6790000            	jne L_error_non_closure
  5964 00003AC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5965 00003AC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5966 00003AC6 483D[02000000]          	cmp rax, sob_boolean_false
  5967 00003ACC 0F8499000000            	je .L_if_else_0007
  5968                                  	; preparing a tail-call
  5969                                  	; preparing a non-tail-call
  5970 00003AD2 488B4520                	mov rax, PARAM(0)	; param s
  5971 00003AD6 50                      	push rax
  5972 00003AD7 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  5973 00003ADF 803805                  	cmp byte [rax], T_undefined
  5974 00003AE2 0F841A790000            	je L_error_fvar_undefined
  5975 00003AE8 50                      	push rax
  5976 00003AE9 6A02                    	push 2	; arg count
  5977 00003AEB 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  5978 00003AF3 803805                  	cmp byte [rax], T_undefined
  5979 00003AF6 0F8406790000            	je L_error_fvar_undefined
  5980 00003AFC 803804                  	cmp byte [rax], T_closure
  5981 00003AFF 0F8581790000            	jne L_error_non_closure
  5982 00003B05 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5983 00003B08 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5984 00003B0B 50                      	push rax
  5985 00003B0C 6A01                    	push 1	; arg count
  5986 00003B0E 488B4510                	mov rax, ENV
  5987 00003B12 488B00                  	mov rax, qword [rax + 8 * 0]
  5988 00003B15 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  5989 00003B18 488B00                  	mov rax, qword [rax]
  5990 00003B1B 803804                  	cmp byte [rax], T_closure
  5991 00003B1E 0F8562790000            	jne L_error_non_closure
  5992 00003B24 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5993 00003B27 FF7508                  	push qword [rbp + 8 * 1]
  5994                                   ; old ret addr
  5995 00003B2A FF7500                  	push qword [rbp]
  5996                                   ; restore the old rbp
  5997 00003B2D BB01000000              	mov rbx, 1
  5998 00003B32 4883C303                	add rbx, 3
  5999 00003B36 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6000 00003B3A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6001 00003B3F 4C8D4DF8                	lea r9, [rbp - 8]
  6002 00003B43 B905000000              	mov rcx, 5
  6003                                  .L_tc_recycle_frame_loop_0027:
  6004 00003B48 4883F900                	cmp rcx, 0
  6005 00003B4C 7413                    	je .L_tc_recycle_frame_done_0027
  6006 00003B4E 4D8B11                  	mov r10, qword [r9]
  6007 00003B51 4D8910                  	mov qword [r8], r10
  6008 00003B54 4983E808                	sub r8, 8
  6009 00003B58 4983E908                	sub r9, 8
  6010 00003B5C 48FFC9                  	dec rcx
  6011 00003B5F EBE7                    	jmp .L_tc_recycle_frame_loop_0027
  6012                                  .L_tc_recycle_frame_done_0027:
  6013 00003B61 498D6008                	lea rsp, [r8 + 8]
  6014 00003B65 5D                      	pop rbp ; restore the old rbp
  6015 00003B66 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6016 00003B69 EB0A                    	jmp .L_if_end_0007
  6017                                  .L_if_else_0007:
  6018 00003B6B 48B8-                   	mov rax, L_constants + 2
  6018 00003B6D [0200000000000000] 
  6019                                  .L_if_end_0007:
  6020 00003B75 483D[02000000]          	cmp rax, sob_boolean_false
  6021 00003B7B 7400                    	je .L_or_end_0004
  6022                                  .L_or_end_0004:
  6023 00003B7D C9                      	leave
  6024 00003B7E C21800                  	ret AND_KILL_FRAME(1)
  6025                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6026 00003B81 50                      	push rax
  6027 00003B82 488B4520                	mov rax, PARAM(0)	; param loop
  6028 00003B86 8F00                    	pop qword [rax]
  6029 00003B88 48B8-                   	mov rax, sob_void
  6029 00003B8A [0000000000000000] 
  6030                                  
  6031                                  	; preparing a non-tail-call
  6032 00003B92 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  6033 00003B9A 803805                  	cmp byte [rax], T_undefined
  6034 00003B9D 0F845F780000            	je L_error_fvar_undefined
  6035 00003BA3 50                      	push rax
  6036 00003BA4 6A01                    	push 1	; arg count
  6037 00003BA6 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  6038 00003BAE 803805                  	cmp byte [rax], T_undefined
  6039 00003BB1 0F844B780000            	je L_error_fvar_undefined
  6040 00003BB7 803804                  	cmp byte [rax], T_closure
  6041 00003BBA 0F85C6780000            	jne L_error_non_closure
  6042 00003BC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6043 00003BC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6044 00003BC6 483D[02000000]          	cmp rax, sob_boolean_false
  6045 00003BCC 0F84B9000000            	je .L_or_end_0005
  6046                                  
  6047                                  	; preparing a non-tail-call
  6048 00003BD2 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  6049 00003BDA 803805                  	cmp byte [rax], T_undefined
  6050 00003BDD 0F841F780000            	je L_error_fvar_undefined
  6051 00003BE3 50                      	push rax
  6052 00003BE4 6A01                    	push 1	; arg count
  6053 00003BE6 488B0425[AA100000]      	mov rax, qword [free_var_91]	; free var pair?
  6054 00003BEE 803805                  	cmp byte [rax], T_undefined
  6055 00003BF1 0F840B780000            	je L_error_fvar_undefined
  6056 00003BF7 803804                  	cmp byte [rax], T_closure
  6057 00003BFA 0F8586780000            	jne L_error_non_closure
  6058 00003C00 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6059 00003C03 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6060 00003C06 483D[02000000]          	cmp rax, sob_boolean_false
  6061 00003C0C 746B                    	je .L_if_else_0008
  6062                                  	; preparing a tail-call
  6063 00003C0E 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  6064 00003C16 803805                  	cmp byte [rax], T_undefined
  6065 00003C19 0F84E3770000            	je L_error_fvar_undefined
  6066 00003C1F 50                      	push rax
  6067 00003C20 6A01                    	push 1	; arg count
  6068 00003C22 488B4520                	mov rax, PARAM(0)	; param loop
  6069 00003C26 488B00                  	mov rax, qword [rax]
  6070 00003C29 803804                  	cmp byte [rax], T_closure
  6071 00003C2C 0F8554780000            	jne L_error_non_closure
  6072 00003C32 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6073 00003C35 FF7508                  	push qword [rbp + 8 * 1]
  6074                                   ; old ret addr
  6075 00003C38 FF7500                  	push qword [rbp]
  6076                                   ; restore the old rbp
  6077 00003C3B BB01000000              	mov rbx, 1
  6078 00003C40 4883C303                	add rbx, 3
  6079 00003C44 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6080 00003C48 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6081 00003C4D 4C8D4DF8                	lea r9, [rbp - 8]
  6082 00003C51 B905000000              	mov rcx, 5
  6083                                  .L_tc_recycle_frame_loop_0028:
  6084 00003C56 4883F900                	cmp rcx, 0
  6085 00003C5A 7413                    	je .L_tc_recycle_frame_done_0028
  6086 00003C5C 4D8B11                  	mov r10, qword [r9]
  6087 00003C5F 4D8910                  	mov qword [r8], r10
  6088 00003C62 4983E808                	sub r8, 8
  6089 00003C66 4983E908                	sub r9, 8
  6090 00003C6A 48FFC9                  	dec rcx
  6091 00003C6D EBE7                    	jmp .L_tc_recycle_frame_loop_0028
  6092                                  .L_tc_recycle_frame_done_0028:
  6093 00003C6F 498D6008                	lea rsp, [r8 + 8]
  6094 00003C73 5D                      	pop rbp ; restore the old rbp
  6095 00003C74 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6096 00003C77 EB0A                    	jmp .L_if_end_0008
  6097                                  .L_if_else_0008:
  6098 00003C79 48B8-                   	mov rax, L_constants + 2
  6098 00003C7B [0200000000000000] 
  6099                                  .L_if_end_0008:
  6100 00003C83 483D[02000000]          	cmp rax, sob_boolean_false
  6101 00003C89 7400                    	je .L_or_end_0005
  6102                                  .L_or_end_0005:
  6103 00003C8B C9                      	leave
  6104 00003C8C C21800                  	ret AND_KILL_FRAME(1)
  6105                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6106 00003C8F 803804                  	cmp byte [rax], T_closure
  6107 00003C92 0F85EE770000            	jne L_error_non_closure
  6108 00003C98 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6109 00003C9B FF7508                  	push qword [rbp + 8 * 1]
  6110                                   ; old ret addr
  6111 00003C9E FF7500                  	push qword [rbp]
  6112                                   ; restore the old rbp
  6113 00003CA1 BB01000000              	mov rbx, 1
  6114 00003CA6 4883C303                	add rbx, 3
  6115 00003CAA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6116 00003CAE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6117 00003CB3 4C8D4DF8                	lea r9, [rbp - 8]
  6118 00003CB7 B905000000              	mov rcx, 5
  6119                                  .L_tc_recycle_frame_loop_0026:
  6120 00003CBC 4883F900                	cmp rcx, 0
  6121 00003CC0 7413                    	je .L_tc_recycle_frame_done_0026
  6122 00003CC2 4D8B11                  	mov r10, qword [r9]
  6123 00003CC5 4D8910                  	mov qword [r8], r10
  6124 00003CC8 4983E808                	sub r8, 8
  6125 00003CCC 4983E908                	sub r9, 8
  6126 00003CD0 48FFC9                  	dec rcx
  6127 00003CD3 EBE7                    	jmp .L_tc_recycle_frame_loop_0026
  6128                                  .L_tc_recycle_frame_done_0026:
  6129 00003CD5 498D6008                	lea rsp, [r8 + 8]
  6130 00003CD9 5D                      	pop rbp ; restore the old rbp
  6131 00003CDA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6132 00003CDD C9                      	leave
  6133 00003CDE C21800                  	ret AND_KILL_FRAME(1)
  6134                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6135 00003CE1 48890425[9D0C0000]      	mov qword [free_var_30], rax
  6136 00003CE9 48B8-                   	mov rax, sob_void
  6136 00003CEB [0000000000000000] 
  6137                                  
  6138 00003CF3 4889C7                  	mov rdi, rax
  6139 00003CF6 E8897A0000              	call print_sexpr_if_not_void
  6140                                  	; preparing a non-tail-call
  6141 00003CFB 48B8-                   	mov rax, L_constants + 2016
  6141 00003CFD [E007000000000000] 
  6142 00003D05 50                      	push rax
  6143 00003D06 48B8-                   	mov rax, L_constants + 2016
  6143 00003D08 [E007000000000000] 
  6144 00003D10 50                      	push rax
  6145 00003D11 6A02                    	push 2	; arg count
  6146 00003D13 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6147 00003D18 E812780000              	call malloc
  6148 00003D1D 50                      	push rax
  6149 00003D1E BF00000000              	mov rdi, 8 * 0	; new rib
  6150 00003D23 E807780000              	call malloc
  6151 00003D28 50                      	push rax
  6152 00003D29 BF08000000              	mov rdi, 8 * 1	; extended env
  6153 00003D2E E8FC770000              	call malloc
  6154 00003D33 488B7D10                	mov rdi, ENV
  6155 00003D37 BE00000000              	mov rsi, 0
  6156 00003D3C BA01000000              	mov rdx, 1
  6157                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6158 00003D41 4883FE00                	cmp rsi, 0
  6159 00003D45 7410                    	je .L_lambda_simple_env_end_0028
  6160 00003D47 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6161 00003D4B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6162 00003D4F 48FFC6                  	inc rsi
  6163 00003D52 48FFC2                  	inc rdx
  6164 00003D55 EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6165                                  .L_lambda_simple_env_end_0028:
  6166 00003D57 5B                      	pop rbx
  6167 00003D58 BE00000000              	mov rsi, 0
  6168                                  .L_lambda_simple_params_loop_0028:	; copy params
  6169 00003D5D 4883FE00                	cmp rsi, 0
  6170 00003D61 740E                    	je .L_lambda_simple_params_end_0028
  6171 00003D63 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6172 00003D68 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6173 00003D6C 48FFC6                  	inc rsi
  6174 00003D6F EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6175                                  .L_lambda_simple_params_end_0028:
  6176 00003D71 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6177 00003D74 4889C3                  	mov rbx, rax
  6178 00003D77 58                      	pop rax
  6179 00003D78 C60004                  	mov byte [rax], T_closure
  6180 00003D7B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6181 00003D7F 48C74009[8C3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6182 00003D87 E901060000              	jmp .L_lambda_simple_end_0028
  6183                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6184 00003D8C 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6185 00003D92 740B                    	je .L_lambda_simple_arity_check_ok_0028
  6186 00003D94 FF742410                	push qword [rsp + 8 * 2]
  6187 00003D98 6A02                    	push 2
  6188 00003D9A E949770000              	jmp L_error_incorrect_arity_simple
  6189                                  .L_lambda_simple_arity_check_ok_0028:
  6190 00003D9F C8000000                	enter 0, 0
  6191 00003DA3 BF08000000              	mov rdi, 8*1
  6192 00003DA8 E882770000              	call malloc
  6193 00003DAD 488B5D20                	mov rbx, PARAM(0)
  6194 00003DB1 488918                  	mov qword [rax], rbx
  6195 00003DB4 48894520                	mov PARAM(0), rax
  6196 00003DB8 48B8-                   	mov rax, sob_void
  6196 00003DBA [0000000000000000] 
  6197                                  
  6198 00003DC2 BF08000000              	mov rdi, 8*1
  6199 00003DC7 E863770000              	call malloc
  6200 00003DCC 488B5D28                	mov rbx, PARAM(1)
  6201 00003DD0 488918                  	mov qword [rax], rbx
  6202 00003DD3 48894528                	mov PARAM(1), rax
  6203 00003DD7 48B8-                   	mov rax, sob_void
  6203 00003DD9 [0000000000000000] 
  6204                                  
  6205 00003DE1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6206 00003DE6 E844770000              	call malloc
  6207 00003DEB 50                      	push rax
  6208 00003DEC BF10000000              	mov rdi, 8 * 2	; new rib
  6209 00003DF1 E839770000              	call malloc
  6210 00003DF6 50                      	push rax
  6211 00003DF7 BF10000000              	mov rdi, 8 * 2	; extended env
  6212 00003DFC E82E770000              	call malloc
  6213 00003E01 488B7D10                	mov rdi, ENV
  6214 00003E05 BE00000000              	mov rsi, 0
  6215 00003E0A BA01000000              	mov rdx, 1
  6216                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6217 00003E0F 4883FE01                	cmp rsi, 1
  6218 00003E13 7410                    	je .L_lambda_simple_env_end_0029
  6219 00003E15 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6220 00003E19 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6221 00003E1D 48FFC6                  	inc rsi
  6222 00003E20 48FFC2                  	inc rdx
  6223 00003E23 EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6224                                  .L_lambda_simple_env_end_0029:
  6225 00003E25 5B                      	pop rbx
  6226 00003E26 BE00000000              	mov rsi, 0
  6227                                  .L_lambda_simple_params_loop_0029:	; copy params
  6228 00003E2B 4883FE02                	cmp rsi, 2
  6229 00003E2F 740E                    	je .L_lambda_simple_params_end_0029
  6230 00003E31 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6231 00003E36 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6232 00003E3A 48FFC6                  	inc rsi
  6233 00003E3D EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6234                                  .L_lambda_simple_params_end_0029:
  6235 00003E3F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6236 00003E42 4889C3                  	mov rbx, rax
  6237 00003E45 58                      	pop rax
  6238 00003E46 C60004                  	mov byte [rax], T_closure
  6239 00003E49 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6240 00003E4D 48C74009[5A3E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6241 00003E55 E944010000              	jmp .L_lambda_simple_end_0029
  6242                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6243 00003E5A 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6244 00003E60 740B                    	je .L_lambda_simple_arity_check_ok_0029
  6245 00003E62 FF742410                	push qword [rsp + 8 * 2]
  6246 00003E66 6A02                    	push 2
  6247 00003E68 E97B760000              	jmp L_error_incorrect_arity_simple
  6248                                  .L_lambda_simple_arity_check_ok_0029:
  6249 00003E6D C8000000                	enter 0, 0
  6250                                  	; preparing a non-tail-call
  6251 00003E71 488B4528                	mov rax, PARAM(1)	; param s
  6252 00003E75 50                      	push rax
  6253 00003E76 6A01                    	push 1	; arg count
  6254 00003E78 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  6255 00003E80 803805                  	cmp byte [rax], T_undefined
  6256 00003E83 0F8479750000            	je L_error_fvar_undefined
  6257 00003E89 803804                  	cmp byte [rax], T_closure
  6258 00003E8C 0F85F4750000            	jne L_error_non_closure
  6259 00003E92 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6260 00003E95 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6261 00003E98 483D[02000000]          	cmp rax, sob_boolean_false
  6262 00003E9E 740F                    	je .L_if_else_0009
  6263 00003EA0 48B8-                   	mov rax, L_constants + 1
  6263 00003EA2 [0100000000000000] 
  6264 00003EAA E9EB000000              	jmp .L_if_end_0009
  6265                                  .L_if_else_0009:
  6266                                  	; preparing a tail-call
  6267                                  	; preparing a non-tail-call
  6268                                  	; preparing a non-tail-call
  6269 00003EAF 488B4528                	mov rax, PARAM(1)	; param s
  6270 00003EB3 50                      	push rax
  6271 00003EB4 6A01                    	push 1	; arg count
  6272 00003EB6 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  6273 00003EBE 803805                  	cmp byte [rax], T_undefined
  6274 00003EC1 0F843B750000            	je L_error_fvar_undefined
  6275 00003EC7 803804                  	cmp byte [rax], T_closure
  6276 00003ECA 0F85B6750000            	jne L_error_non_closure
  6277 00003ED0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6278 00003ED3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6279 00003ED6 50                      	push rax
  6280 00003ED7 488B4520                	mov rax, PARAM(0)	; param f
  6281 00003EDB 50                      	push rax
  6282 00003EDC 6A02                    	push 2	; arg count
  6283 00003EDE 488B4510                	mov rax, ENV
  6284 00003EE2 488B00                  	mov rax, qword [rax + 8 * 0]
  6285 00003EE5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6286 00003EE8 488B00                  	mov rax, qword [rax]
  6287 00003EEB 803804                  	cmp byte [rax], T_closure
  6288 00003EEE 0F8592750000            	jne L_error_non_closure
  6289 00003EF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6290 00003EF7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6291 00003EFA 50                      	push rax
  6292                                  	; preparing a non-tail-call
  6293                                  	; preparing a non-tail-call
  6294 00003EFB 488B4528                	mov rax, PARAM(1)	; param s
  6295 00003EFF 50                      	push rax
  6296 00003F00 6A01                    	push 1	; arg count
  6297 00003F02 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  6298 00003F0A 803805                  	cmp byte [rax], T_undefined
  6299 00003F0D 0F84EF740000            	je L_error_fvar_undefined
  6300 00003F13 803804                  	cmp byte [rax], T_closure
  6301 00003F16 0F856A750000            	jne L_error_non_closure
  6302 00003F1C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6303 00003F1F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6304 00003F22 50                      	push rax
  6305 00003F23 6A01                    	push 1	; arg count
  6306 00003F25 488B4520                	mov rax, PARAM(0)	; param f
  6307 00003F29 803804                  	cmp byte [rax], T_closure
  6308 00003F2C 0F8554750000            	jne L_error_non_closure
  6309 00003F32 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6310 00003F35 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6311 00003F38 50                      	push rax
  6312 00003F39 6A02                    	push 2	; arg count
  6313 00003F3B 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  6314 00003F43 803805                  	cmp byte [rax], T_undefined
  6315 00003F46 0F84B6740000            	je L_error_fvar_undefined
  6316 00003F4C 803804                  	cmp byte [rax], T_closure
  6317 00003F4F 0F8531750000            	jne L_error_non_closure
  6318 00003F55 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6319 00003F58 FF7508                  	push qword [rbp + 8 * 1]
  6320                                   ; old ret addr
  6321 00003F5B FF7500                  	push qword [rbp]
  6322                                   ; restore the old rbp
  6323 00003F5E BB02000000              	mov rbx, 2
  6324 00003F63 4883C303                	add rbx, 3
  6325 00003F67 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6326 00003F6B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6327 00003F70 4C8D4DF8                	lea r9, [rbp - 8]
  6328 00003F74 B906000000              	mov rcx, 6
  6329                                  .L_tc_recycle_frame_loop_0029:
  6330 00003F79 4883F900                	cmp rcx, 0
  6331 00003F7D 7413                    	je .L_tc_recycle_frame_done_0029
  6332 00003F7F 4D8B11                  	mov r10, qword [r9]
  6333 00003F82 4D8910                  	mov qword [r8], r10
  6334 00003F85 4983E808                	sub r8, 8
  6335 00003F89 4983E908                	sub r9, 8
  6336 00003F8D 48FFC9                  	dec rcx
  6337 00003F90 EBE7                    	jmp .L_tc_recycle_frame_loop_0029
  6338                                  .L_tc_recycle_frame_done_0029:
  6339 00003F92 498D6008                	lea rsp, [r8 + 8]
  6340 00003F96 5D                      	pop rbp ; restore the old rbp
  6341 00003F97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6342                                  .L_if_end_0009:
  6343 00003F9A C9                      	leave
  6344 00003F9B C22000                  	ret AND_KILL_FRAME(2)
  6345                                  .L_lambda_simple_end_0029:	; new closure is in rax
  6346 00003F9E 50                      	push rax
  6347 00003F9F 488B4520                	mov rax, PARAM(0)	; param map1
  6348 00003FA3 8F00                    	pop qword [rax]
  6349 00003FA5 48B8-                   	mov rax, sob_void
  6349 00003FA7 [0000000000000000] 
  6350                                  
  6351 00003FAF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6352 00003FB4 E876750000              	call malloc
  6353 00003FB9 50                      	push rax
  6354 00003FBA BF10000000              	mov rdi, 8 * 2	; new rib
  6355 00003FBF E86B750000              	call malloc
  6356 00003FC4 50                      	push rax
  6357 00003FC5 BF10000000              	mov rdi, 8 * 2	; extended env
  6358 00003FCA E860750000              	call malloc
  6359 00003FCF 488B7D10                	mov rdi, ENV
  6360 00003FD3 BE00000000              	mov rsi, 0
  6361 00003FD8 BA01000000              	mov rdx, 1
  6362                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  6363 00003FDD 4883FE01                	cmp rsi, 1
  6364 00003FE1 7410                    	je .L_lambda_simple_env_end_002a
  6365 00003FE3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6366 00003FE7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6367 00003FEB 48FFC6                  	inc rsi
  6368 00003FEE 48FFC2                  	inc rdx
  6369 00003FF1 EBEA                    	jmp .L_lambda_simple_env_loop_002a
  6370                                  .L_lambda_simple_env_end_002a:
  6371 00003FF3 5B                      	pop rbx
  6372 00003FF4 BE00000000              	mov rsi, 0
  6373                                  .L_lambda_simple_params_loop_002a:	; copy params
  6374 00003FF9 4883FE02                	cmp rsi, 2
  6375 00003FFD 740E                    	je .L_lambda_simple_params_end_002a
  6376 00003FFF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6377 00004004 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6378 00004008 48FFC6                  	inc rsi
  6379 0000400B EBEC                    	jmp .L_lambda_simple_params_loop_002a
  6380                                  .L_lambda_simple_params_end_002a:
  6381 0000400D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6382 00004010 4889C3                  	mov rbx, rax
  6383 00004013 58                      	pop rax
  6384 00004014 C60004                  	mov byte [rax], T_closure
  6385 00004017 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6386 0000401B 48C74009[28400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  6387 00004023 E996010000              	jmp .L_lambda_simple_end_002a
  6388                                  .L_lambda_simple_code_002a:	; lambda-simple body
  6389 00004028 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6390 0000402E 740B                    	je .L_lambda_simple_arity_check_ok_002a
  6391 00004030 FF742410                	push qword [rsp + 8 * 2]
  6392 00004034 6A02                    	push 2
  6393 00004036 E9AD740000              	jmp L_error_incorrect_arity_simple
  6394                                  .L_lambda_simple_arity_check_ok_002a:
  6395 0000403B C8000000                	enter 0, 0
  6396                                  	; preparing a non-tail-call
  6397                                  	; preparing a non-tail-call
  6398 0000403F 488B4528                	mov rax, PARAM(1)	; param s
  6399 00004043 50                      	push rax
  6400 00004044 6A01                    	push 1	; arg count
  6401 00004046 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  6402 0000404E 803805                  	cmp byte [rax], T_undefined
  6403 00004051 0F84AB730000            	je L_error_fvar_undefined
  6404 00004057 803804                  	cmp byte [rax], T_closure
  6405 0000405A 0F8526740000            	jne L_error_non_closure
  6406 00004060 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6407 00004063 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6408 00004066 50                      	push rax
  6409 00004067 6A01                    	push 1	; arg count
  6410 00004069 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  6411 00004071 803805                  	cmp byte [rax], T_undefined
  6412 00004074 0F8488730000            	je L_error_fvar_undefined
  6413 0000407A 803804                  	cmp byte [rax], T_closure
  6414 0000407D 0F8503740000            	jne L_error_non_closure
  6415 00004083 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6416 00004086 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6417 00004089 483D[02000000]          	cmp rax, sob_boolean_false
  6418 0000408F 740F                    	je .L_if_else_000a
  6419 00004091 48B8-                   	mov rax, L_constants + 1
  6419 00004093 [0100000000000000] 
  6420 0000409B E91A010000              	jmp .L_if_end_000a
  6421                                  .L_if_else_000a:
  6422                                  	; preparing a tail-call
  6423                                  	; preparing a non-tail-call
  6424                                  	; preparing a non-tail-call
  6425 000040A0 488B4528                	mov rax, PARAM(1)	; param s
  6426 000040A4 50                      	push rax
  6427 000040A5 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  6428 000040AD 803805                  	cmp byte [rax], T_undefined
  6429 000040B0 0F844C730000            	je L_error_fvar_undefined
  6430 000040B6 50                      	push rax
  6431 000040B7 6A02                    	push 2	; arg count
  6432 000040B9 488B4510                	mov rax, ENV
  6433 000040BD 488B00                  	mov rax, qword [rax + 8 * 0]
  6434 000040C0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6435 000040C3 488B00                  	mov rax, qword [rax]
  6436 000040C6 803804                  	cmp byte [rax], T_closure
  6437 000040C9 0F85B7730000            	jne L_error_non_closure
  6438 000040CF FF7001                  	push SOB_CLOSURE_ENV(rax)
  6439 000040D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6440 000040D5 50                      	push rax
  6441 000040D6 488B4520                	mov rax, PARAM(0)	; param f
  6442 000040DA 50                      	push rax
  6443 000040DB 6A02                    	push 2	; arg count
  6444 000040DD 488B4510                	mov rax, ENV
  6445 000040E1 488B00                  	mov rax, qword [rax + 8 * 0]
  6446 000040E4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  6447 000040E8 488B00                  	mov rax, qword [rax]
  6448 000040EB 803804                  	cmp byte [rax], T_closure
  6449 000040EE 0F8592730000            	jne L_error_non_closure
  6450 000040F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6451 000040F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6452 000040FA 50                      	push rax
  6453                                  	; preparing a non-tail-call
  6454                                  	; preparing a non-tail-call
  6455 000040FB 488B4528                	mov rax, PARAM(1)	; param s
  6456 000040FF 50                      	push rax
  6457 00004100 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  6458 00004108 803805                  	cmp byte [rax], T_undefined
  6459 0000410B 0F84F1720000            	je L_error_fvar_undefined
  6460 00004111 50                      	push rax
  6461 00004112 6A02                    	push 2	; arg count
  6462 00004114 488B4510                	mov rax, ENV
  6463 00004118 488B00                  	mov rax, qword [rax + 8 * 0]
  6464 0000411B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6465 0000411E 488B00                  	mov rax, qword [rax]
  6466 00004121 803804                  	cmp byte [rax], T_closure
  6467 00004124 0F855C730000            	jne L_error_non_closure
  6468 0000412A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6469 0000412D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6470 00004130 50                      	push rax
  6471 00004131 488B4520                	mov rax, PARAM(0)	; param f
  6472 00004135 50                      	push rax
  6473 00004136 6A02                    	push 2	; arg count
  6474 00004138 488B0425[BF0C0000]      	mov rax, qword [free_var_32]	; free var apply
  6475 00004140 803805                  	cmp byte [rax], T_undefined
  6476 00004143 0F84B9720000            	je L_error_fvar_undefined
  6477 00004149 803804                  	cmp byte [rax], T_closure
  6478 0000414C 0F8534730000            	jne L_error_non_closure
  6479 00004152 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6480 00004155 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6481 00004158 50                      	push rax
  6482 00004159 6A02                    	push 2	; arg count
  6483 0000415B 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  6484 00004163 803805                  	cmp byte [rax], T_undefined
  6485 00004166 0F8496720000            	je L_error_fvar_undefined
  6486 0000416C 803804                  	cmp byte [rax], T_closure
  6487 0000416F 0F8511730000            	jne L_error_non_closure
  6488 00004175 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6489 00004178 FF7508                  	push qword [rbp + 8 * 1]
  6490                                   ; old ret addr
  6491 0000417B FF7500                  	push qword [rbp]
  6492                                   ; restore the old rbp
  6493 0000417E BB02000000              	mov rbx, 2
  6494 00004183 4883C303                	add rbx, 3
  6495 00004187 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6496 0000418B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6497 00004190 4C8D4DF8                	lea r9, [rbp - 8]
  6498 00004194 B906000000              	mov rcx, 6
  6499                                  .L_tc_recycle_frame_loop_002a:
  6500 00004199 4883F900                	cmp rcx, 0
  6501 0000419D 7413                    	je .L_tc_recycle_frame_done_002a
  6502 0000419F 4D8B11                  	mov r10, qword [r9]
  6503 000041A2 4D8910                  	mov qword [r8], r10
  6504 000041A5 4983E808                	sub r8, 8
  6505 000041A9 4983E908                	sub r9, 8
  6506 000041AD 48FFC9                  	dec rcx
  6507 000041B0 EBE7                    	jmp .L_tc_recycle_frame_loop_002a
  6508                                  .L_tc_recycle_frame_done_002a:
  6509 000041B2 498D6008                	lea rsp, [r8 + 8]
  6510 000041B6 5D                      	pop rbp ; restore the old rbp
  6511 000041B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6512                                  .L_if_end_000a:
  6513 000041BA C9                      	leave
  6514 000041BB C22000                  	ret AND_KILL_FRAME(2)
  6515                                  .L_lambda_simple_end_002a:	; new closure is in rax
  6516 000041BE 50                      	push rax
  6517 000041BF 488B4528                	mov rax, PARAM(1)	; param map-list
  6518 000041C3 8F00                    	pop qword [rax]
  6519 000041C5 48B8-                   	mov rax, sob_void
  6519 000041C7 [0000000000000000] 
  6520                                  
  6521 000041CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6522 000041D4 E856730000              	call malloc
  6523 000041D9 50                      	push rax
  6524 000041DA BF18000000              	mov rdi, 8 * 3	; new rib
  6525 000041DF E84B730000              	call malloc
  6526 000041E4 50                      	push rax
  6527 000041E5 BF10000000              	mov rdi, 8 * 2	; extended env
  6528 000041EA E840730000              	call malloc
  6529 000041EF 488B7D10                	mov rdi, ENV
  6530 000041F3 BE00000000              	mov rsi, 0
  6531 000041F8 BA01000000              	mov rdx, 1
  6532                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  6533 000041FD 4883FE01                	cmp rsi, 1
  6534 00004201 7410                    	je .L_lambda_opt_env_end_0006
  6535 00004203 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6536 00004207 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6537 0000420B 48FFC6                  	inc rsi
  6538 0000420E 48FFC2                  	inc rdx
  6539 00004211 EBEA                    	jmp .L_lambda_opt_env_loop_0006
  6540                                  .L_lambda_opt_env_end_0006:
  6541 00004213 5B                      	pop rbx
  6542 00004214 BE00000000              	mov rsi, 0
  6543                                  .L_lambda_opt_params_loop_0006:	; copy params
  6544 00004219 4883FE02                	cmp rsi, 2
  6545 0000421D 740E                    	je .L_lambda_opt_params_end_0006
  6546 0000421F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6547 00004224 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6548 00004228 48FFC6                  	inc rsi
  6549 0000422B EBEC                    	jmp .L_lambda_opt_params_loop_0006
  6550                                  .L_lambda_opt_params_end_0006:
  6551 0000422D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6552 00004230 4889C3                  	mov rbx, rax
  6553 00004233 58                      	pop rax
  6554 00004234 C60004                  	mov byte [rax], T_closure
  6555 00004237 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6556 0000423B 48C74009[48420000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  6557 00004243 E941010000              	jmp .L_lambda_opt_end_0006
  6558                                  .L_lambda_opt_code_0006:	; lambda-opt body
  6559 00004248 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6560 0000424E 745E                    	je .L_lambda_opt_arity_check_exact_0006
  6561 00004250 7F0B                    	jg .L_lambda_opt_arity_check_more_0006
  6562 00004252 FF742410                	push qword [rsp + 8 * 2]
  6563 00004256 6A01                    	push 1
  6564 00004258 E98B720000              	jmp L_error_incorrect_arity_simple
  6565                                  .L_lambda_opt_arity_check_more_0006:
  6566 0000425D 53                      push rbx
  6567 0000425E 51                      push rcx
  6568 0000425F 488B4D10                mov rcx, [rbp + 8*2]
  6569 00004263 BB01000000              mov rbx , 1
  6570 00004268 4829D9                  sub rcx, rbx
  6571 0000426B 48FFC3                  inc rbx
  6572 0000426E 48895D10                mov [rbp + 8*2], rbx
  6573 00004272 4889CF                  	 mov rdi, rcx 
  6574 00004275 48C1E703                	 shl rdi, 3 
  6575 00004279 E8B1720000              	call malloc
  6576 0000427E 50                      	push rax
  6577 0000427F 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  6578 00004284 4831FF                  xor rdi, rdi
  6579                                  .L_lambda_opt_stack_shrink_loop_0006:
  6580 00004287 4839CF                  	cmp rdi, rcx
  6581 0000428A 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0006
  6582 0000428C 488904FC                mov [rsp + rdi*8], rax
  6583 00004290 48FFC7                  	inc rdi
  6584 00004293 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  6585 0000429B 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  6586 000042A0 498B04D9                mov rax,[r9 + rbx*8] 
  6587 000042A4 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0006
  6588                                  .L_lambda_opt_stack_shrink_loop_exit_0006:
  6589 000042A6 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  6590 000042AA 5B                      pop rbx
  6591 000042AB 53                      push rbx
  6592 000042AC EB16                    jmp .L_lambda_opt_stack_adjusted_0006
  6593                                  .L_lambda_opt_arity_check_exact_0006:
  6594 000042AE 48B8-                   	mov rax, L_constants + 1
  6594 000042B0 [0100000000000000] 
  6595 000042B8 53                      push rbx
  6596 000042B9 488B5C2410              mov rbx , [rsp + 8*2]
  6597 000042BE 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  6598 000042C3 5B                      pop rbx
  6599                                  .L_lambda_opt_stack_adjusted_0006:	; new closure is in rax
  6600 000042C4 C8000000                	enter 0, 0
  6601                                  	; preparing a non-tail-call
  6602 000042C8 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  6603 000042D0 803805                  	cmp byte [rax], T_undefined
  6604 000042D3 0F8429710000            	je L_error_fvar_undefined
  6605 000042D9 50                      	push rax
  6606 000042DA 6A01                    	push 1	; arg count
  6607 000042DC 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  6608 000042E4 803805                  	cmp byte [rax], T_undefined
  6609 000042E7 0F8415710000            	je L_error_fvar_undefined
  6610 000042ED 803804                  	cmp byte [rax], T_closure
  6611 000042F0 0F8590710000            	jne L_error_non_closure
  6612 000042F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6613 000042F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6614 000042FC 483D[02000000]          	cmp rax, sob_boolean_false
  6615 00004302 740C                    	je .L_if_else_000b
  6616 00004304 48B8-                   	mov rax, L_constants + 1
  6616 00004306 [0100000000000000] 
  6617 0000430E EB75                    	jmp .L_if_end_000b
  6618                                  .L_if_else_000b:
  6619                                  	; preparing a tail-call
  6620 00004310 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  6621 00004318 803805                  	cmp byte [rax], T_undefined
  6622 0000431B 0F84E1700000            	je L_error_fvar_undefined
  6623 00004321 50                      	push rax
  6624 00004322 488B4520                	mov rax, PARAM(0)	; param f
  6625 00004326 50                      	push rax
  6626 00004327 6A02                    	push 2	; arg count
  6627 00004329 488B4510                	mov rax, ENV
  6628 0000432D 488B00                  	mov rax, qword [rax + 8 * 0]
  6629 00004330 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  6630 00004334 488B00                  	mov rax, qword [rax]
  6631 00004337 803804                  	cmp byte [rax], T_closure
  6632 0000433A 0F8546710000            	jne L_error_non_closure
  6633 00004340 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6634 00004343 FF7508                  	push qword [rbp + 8 * 1]
  6635                                   ; old ret addr
  6636 00004346 FF7500                  	push qword [rbp]
  6637                                   ; restore the old rbp
  6638 00004349 BB02000000              	mov rbx, 2
  6639 0000434E 4883C303                	add rbx, 3
  6640 00004352 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6641 00004356 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6642 0000435B 4C8D4DF8                	lea r9, [rbp - 8]
  6643 0000435F B906000000              	mov rcx, 6
  6644                                  .L_tc_recycle_frame_loop_002b:
  6645 00004364 4883F900                	cmp rcx, 0
  6646 00004368 7413                    	je .L_tc_recycle_frame_done_002b
  6647 0000436A 4D8B11                  	mov r10, qword [r9]
  6648 0000436D 4D8910                  	mov qword [r8], r10
  6649 00004370 4983E808                	sub r8, 8
  6650 00004374 4983E908                	sub r9, 8
  6651 00004378 48FFC9                  	dec rcx
  6652 0000437B EBE7                    	jmp .L_tc_recycle_frame_loop_002b
  6653                                  .L_tc_recycle_frame_done_002b:
  6654 0000437D 498D6008                	lea rsp, [r8 + 8]
  6655 00004381 5D                      	pop rbp ; restore the old rbp
  6656 00004382 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6657                                  .L_if_end_000b:
  6658 00004385 C9                      	leave
  6659 00004386 C21800                  	ret AND_KILL_FRAME(1)
  6660                                  .L_lambda_opt_end_0006:	; new closure is in rax
  6661 00004389 C9                      	leave
  6662 0000438A C22000                  	ret AND_KILL_FRAME(2)
  6663                                  .L_lambda_simple_end_0028:	; new closure is in rax
  6664 0000438D 803804                  	cmp byte [rax], T_closure
  6665 00004390 0F85F0700000            	jne L_error_non_closure
  6666 00004396 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6667 00004399 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6668 0000439C 48890425[66100000]      	mov qword [free_var_87], rax
  6669 000043A4 48B8-                   	mov rax, sob_void
  6669 000043A6 [0000000000000000] 
  6670                                  
  6671 000043AE 4889C7                  	mov rdi, rax
  6672 000043B1 E8CE730000              	call print_sexpr_if_not_void
  6673 000043B6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6674 000043BB E86F710000              	call malloc
  6675 000043C0 50                      	push rax
  6676 000043C1 BF00000000              	mov rdi, 8 * 0	; new rib
  6677 000043C6 E864710000              	call malloc
  6678 000043CB 50                      	push rax
  6679 000043CC BF08000000              	mov rdi, 8 * 1	; extended env
  6680 000043D1 E859710000              	call malloc
  6681 000043D6 488B7D10                	mov rdi, ENV
  6682 000043DA BE00000000              	mov rsi, 0
  6683 000043DF BA01000000              	mov rdx, 1
  6684                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  6685 000043E4 4883FE00                	cmp rsi, 0
  6686 000043E8 7410                    	je .L_lambda_simple_env_end_002b
  6687 000043EA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6688 000043EE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6689 000043F2 48FFC6                  	inc rsi
  6690 000043F5 48FFC2                  	inc rdx
  6691 000043F8 EBEA                    	jmp .L_lambda_simple_env_loop_002b
  6692                                  .L_lambda_simple_env_end_002b:
  6693 000043FA 5B                      	pop rbx
  6694 000043FB BE00000000              	mov rsi, 0
  6695                                  .L_lambda_simple_params_loop_002b:	; copy params
  6696 00004400 4883FE00                	cmp rsi, 0
  6697 00004404 740E                    	je .L_lambda_simple_params_end_002b
  6698 00004406 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6699 0000440B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6700 0000440F 48FFC6                  	inc rsi
  6701 00004412 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  6702                                  .L_lambda_simple_params_end_002b:
  6703 00004414 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6704 00004417 4889C3                  	mov rbx, rax
  6705 0000441A 58                      	pop rax
  6706 0000441B C60004                  	mov byte [rax], T_closure
  6707 0000441E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6708 00004422 48C74009[2F440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  6709 0000442A E98C010000              	jmp .L_lambda_simple_end_002b
  6710                                  .L_lambda_simple_code_002b:	; lambda-simple body
  6711 0000442F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6712 00004435 740B                    	je .L_lambda_simple_arity_check_ok_002b
  6713 00004437 FF742410                	push qword [rsp + 8 * 2]
  6714 0000443B 6A01                    	push 1
  6715 0000443D E9A6700000              	jmp L_error_incorrect_arity_simple
  6716                                  .L_lambda_simple_arity_check_ok_002b:
  6717 00004442 C8000000                	enter 0, 0
  6718                                  	; preparing a tail-call
  6719 00004446 488B4520                	mov rax, PARAM(0)	; param s
  6720 0000444A 50                      	push rax
  6721 0000444B 48B8-                   	mov rax, L_constants + 1
  6721 0000444D [0100000000000000] 
  6722 00004455 50                      	push rax
  6723 00004456 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6724 0000445B E8CF700000              	call malloc
  6725 00004460 50                      	push rax
  6726 00004461 BF08000000              	mov rdi, 8 * 1	; new rib
  6727 00004466 E8C4700000              	call malloc
  6728 0000446B 50                      	push rax
  6729 0000446C BF10000000              	mov rdi, 8 * 2	; extended env
  6730 00004471 E8B9700000              	call malloc
  6731 00004476 488B7D10                	mov rdi, ENV
  6732 0000447A BE00000000              	mov rsi, 0
  6733 0000447F BA01000000              	mov rdx, 1
  6734                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  6735 00004484 4883FE01                	cmp rsi, 1
  6736 00004488 7410                    	je .L_lambda_simple_env_end_002c
  6737 0000448A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6738 0000448E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6739 00004492 48FFC6                  	inc rsi
  6740 00004495 48FFC2                  	inc rdx
  6741 00004498 EBEA                    	jmp .L_lambda_simple_env_loop_002c
  6742                                  .L_lambda_simple_env_end_002c:
  6743 0000449A 5B                      	pop rbx
  6744 0000449B BE00000000              	mov rsi, 0
  6745                                  .L_lambda_simple_params_loop_002c:	; copy params
  6746 000044A0 4883FE01                	cmp rsi, 1
  6747 000044A4 740E                    	je .L_lambda_simple_params_end_002c
  6748 000044A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6749 000044AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6750 000044AF 48FFC6                  	inc rsi
  6751 000044B2 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  6752                                  .L_lambda_simple_params_end_002c:
  6753 000044B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6754 000044B7 4889C3                  	mov rbx, rax
  6755 000044BA 58                      	pop rax
  6756 000044BB C60004                  	mov byte [rax], T_closure
  6757 000044BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6758 000044C2 48C74009[CF440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  6759 000044CA E986000000              	jmp .L_lambda_simple_end_002c
  6760                                  .L_lambda_simple_code_002c:	; lambda-simple body
  6761 000044CF 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6762 000044D5 740B                    	je .L_lambda_simple_arity_check_ok_002c
  6763 000044D7 FF742410                	push qword [rsp + 8 * 2]
  6764 000044DB 6A02                    	push 2
  6765 000044DD E906700000              	jmp L_error_incorrect_arity_simple
  6766                                  .L_lambda_simple_arity_check_ok_002c:
  6767 000044E2 C8000000                	enter 0, 0
  6768                                  	; preparing a tail-call
  6769 000044E6 488B4520                	mov rax, PARAM(0)	; param r
  6770 000044EA 50                      	push rax
  6771 000044EB 488B4528                	mov rax, PARAM(1)	; param a
  6772 000044EF 50                      	push rax
  6773 000044F0 6A02                    	push 2	; arg count
  6774 000044F2 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  6775 000044FA 803805                  	cmp byte [rax], T_undefined
  6776 000044FD 0F84FF6E0000            	je L_error_fvar_undefined
  6777 00004503 803804                  	cmp byte [rax], T_closure
  6778 00004506 0F857A6F0000            	jne L_error_non_closure
  6779 0000450C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6780 0000450F FF7508                  	push qword [rbp + 8 * 1]
  6781                                   ; old ret addr
  6782 00004512 FF7500                  	push qword [rbp]
  6783                                   ; restore the old rbp
  6784 00004515 BB02000000              	mov rbx, 2
  6785 0000451A 4883C303                	add rbx, 3
  6786 0000451E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6787 00004522 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6788 00004527 4C8D4DF8                	lea r9, [rbp - 8]
  6789 0000452B B906000000              	mov rcx, 6
  6790                                  .L_tc_recycle_frame_loop_002d:
  6791 00004530 4883F900                	cmp rcx, 0
  6792 00004534 7413                    	je .L_tc_recycle_frame_done_002d
  6793 00004536 4D8B11                  	mov r10, qword [r9]
  6794 00004539 4D8910                  	mov qword [r8], r10
  6795 0000453C 4983E808                	sub r8, 8
  6796 00004540 4983E908                	sub r9, 8
  6797 00004544 48FFC9                  	dec rcx
  6798 00004547 EBE7                    	jmp .L_tc_recycle_frame_loop_002d
  6799                                  .L_tc_recycle_frame_done_002d:
  6800 00004549 498D6008                	lea rsp, [r8 + 8]
  6801 0000454D 5D                      	pop rbp ; restore the old rbp
  6802 0000454E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6803 00004551 C9                      	leave
  6804 00004552 C22000                  	ret AND_KILL_FRAME(2)
  6805                                  .L_lambda_simple_end_002c:	; new closure is in rax
  6806 00004555 50                      	push rax
  6807 00004556 6A03                    	push 3	; arg count
  6808 00004558 488B0425[AB0F0000]      	mov rax, qword [free_var_76]	; free var fold-left
  6809 00004560 803805                  	cmp byte [rax], T_undefined
  6810 00004563 0F84996E0000            	je L_error_fvar_undefined
  6811 00004569 803804                  	cmp byte [rax], T_closure
  6812 0000456C 0F85146F0000            	jne L_error_non_closure
  6813 00004572 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6814 00004575 FF7508                  	push qword [rbp + 8 * 1]
  6815                                   ; old ret addr
  6816 00004578 FF7500                  	push qword [rbp]
  6817                                   ; restore the old rbp
  6818 0000457B BB03000000              	mov rbx, 3
  6819 00004580 4883C303                	add rbx, 3
  6820 00004584 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6821 00004588 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6822 0000458D 4C8D4DF8                	lea r9, [rbp - 8]
  6823 00004591 B907000000              	mov rcx, 7
  6824                                  .L_tc_recycle_frame_loop_002c:
  6825 00004596 4883F900                	cmp rcx, 0
  6826 0000459A 7413                    	je .L_tc_recycle_frame_done_002c
  6827 0000459C 4D8B11                  	mov r10, qword [r9]
  6828 0000459F 4D8910                  	mov qword [r8], r10
  6829 000045A2 4983E808                	sub r8, 8
  6830 000045A6 4983E908                	sub r9, 8
  6831 000045AA 48FFC9                  	dec rcx
  6832 000045AD EBE7                    	jmp .L_tc_recycle_frame_loop_002c
  6833                                  .L_tc_recycle_frame_done_002c:
  6834 000045AF 498D6008                	lea rsp, [r8 + 8]
  6835 000045B3 5D                      	pop rbp ; restore the old rbp
  6836 000045B4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6837 000045B7 C9                      	leave
  6838 000045B8 C21800                  	ret AND_KILL_FRAME(1)
  6839                                  .L_lambda_simple_end_002b:	; new closure is in rax
  6840 000045BB 48890425[EE100000]      	mov qword [free_var_95], rax
  6841 000045C3 48B8-                   	mov rax, sob_void
  6841 000045C5 [0000000000000000] 
  6842                                  
  6843 000045CD 4889C7                  	mov rdi, rax
  6844 000045D0 E8AF710000              	call print_sexpr_if_not_void
  6845                                  	; preparing a non-tail-call
  6846 000045D5 48B8-                   	mov rax, L_constants + 2016
  6846 000045D7 [E007000000000000] 
  6847 000045DF 50                      	push rax
  6848 000045E0 48B8-                   	mov rax, L_constants + 2016
  6848 000045E2 [E007000000000000] 
  6849 000045EA 50                      	push rax
  6850 000045EB 6A02                    	push 2	; arg count
  6851 000045ED BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6852 000045F2 E8386F0000              	call malloc
  6853 000045F7 50                      	push rax
  6854 000045F8 BF00000000              	mov rdi, 8 * 0	; new rib
  6855 000045FD E82D6F0000              	call malloc
  6856 00004602 50                      	push rax
  6857 00004603 BF08000000              	mov rdi, 8 * 1	; extended env
  6858 00004608 E8226F0000              	call malloc
  6859 0000460D 488B7D10                	mov rdi, ENV
  6860 00004611 BE00000000              	mov rsi, 0
  6861 00004616 BA01000000              	mov rdx, 1
  6862                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  6863 0000461B 4883FE00                	cmp rsi, 0
  6864 0000461F 7410                    	je .L_lambda_simple_env_end_002d
  6865 00004621 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6866 00004625 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6867 00004629 48FFC6                  	inc rsi
  6868 0000462C 48FFC2                  	inc rdx
  6869 0000462F EBEA                    	jmp .L_lambda_simple_env_loop_002d
  6870                                  .L_lambda_simple_env_end_002d:
  6871 00004631 5B                      	pop rbx
  6872 00004632 BE00000000              	mov rsi, 0
  6873                                  .L_lambda_simple_params_loop_002d:	; copy params
  6874 00004637 4883FE00                	cmp rsi, 0
  6875 0000463B 740E                    	je .L_lambda_simple_params_end_002d
  6876 0000463D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6877 00004642 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6878 00004646 48FFC6                  	inc rsi
  6879 00004649 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  6880                                  .L_lambda_simple_params_end_002d:
  6881 0000464B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6882 0000464E 4889C3                  	mov rbx, rax
  6883 00004651 58                      	pop rax
  6884 00004652 C60004                  	mov byte [rax], T_closure
  6885 00004655 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6886 00004659 48C74009[66460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  6887 00004661 E9CA050000              	jmp .L_lambda_simple_end_002d
  6888                                  .L_lambda_simple_code_002d:	; lambda-simple body
  6889 00004666 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6890 0000466C 740B                    	je .L_lambda_simple_arity_check_ok_002d
  6891 0000466E FF742410                	push qword [rsp + 8 * 2]
  6892 00004672 6A02                    	push 2
  6893 00004674 E96F6E0000              	jmp L_error_incorrect_arity_simple
  6894                                  .L_lambda_simple_arity_check_ok_002d:
  6895 00004679 C8000000                	enter 0, 0
  6896 0000467D BF08000000              	mov rdi, 8*1
  6897 00004682 E8A86E0000              	call malloc
  6898 00004687 488B5D20                	mov rbx, PARAM(0)
  6899 0000468B 488918                  	mov qword [rax], rbx
  6900 0000468E 48894520                	mov PARAM(0), rax
  6901 00004692 48B8-                   	mov rax, sob_void
  6901 00004694 [0000000000000000] 
  6902                                  
  6903 0000469C BF08000000              	mov rdi, 8*1
  6904 000046A1 E8896E0000              	call malloc
  6905 000046A6 488B5D28                	mov rbx, PARAM(1)
  6906 000046AA 488918                  	mov qword [rax], rbx
  6907 000046AD 48894528                	mov PARAM(1), rax
  6908 000046B1 48B8-                   	mov rax, sob_void
  6908 000046B3 [0000000000000000] 
  6909                                  
  6910 000046BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6911 000046C0 E86A6E0000              	call malloc
  6912 000046C5 50                      	push rax
  6913 000046C6 BF10000000              	mov rdi, 8 * 2	; new rib
  6914 000046CB E85F6E0000              	call malloc
  6915 000046D0 50                      	push rax
  6916 000046D1 BF10000000              	mov rdi, 8 * 2	; extended env
  6917 000046D6 E8546E0000              	call malloc
  6918 000046DB 488B7D10                	mov rdi, ENV
  6919 000046DF BE00000000              	mov rsi, 0
  6920 000046E4 BA01000000              	mov rdx, 1
  6921                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  6922 000046E9 4883FE01                	cmp rsi, 1
  6923 000046ED 7410                    	je .L_lambda_simple_env_end_002e
  6924 000046EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6925 000046F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6926 000046F7 48FFC6                  	inc rsi
  6927 000046FA 48FFC2                  	inc rdx
  6928 000046FD EBEA                    	jmp .L_lambda_simple_env_loop_002e
  6929                                  .L_lambda_simple_env_end_002e:
  6930 000046FF 5B                      	pop rbx
  6931 00004700 BE00000000              	mov rsi, 0
  6932                                  .L_lambda_simple_params_loop_002e:	; copy params
  6933 00004705 4883FE02                	cmp rsi, 2
  6934 00004709 740E                    	je .L_lambda_simple_params_end_002e
  6935 0000470B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6936 00004710 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6937 00004714 48FFC6                  	inc rsi
  6938 00004717 EBEC                    	jmp .L_lambda_simple_params_loop_002e
  6939                                  .L_lambda_simple_params_end_002e:
  6940 00004719 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6941 0000471C 4889C3                  	mov rbx, rax
  6942 0000471F 58                      	pop rax
  6943 00004720 C60004                  	mov byte [rax], T_closure
  6944 00004723 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6945 00004727 48C74009[34470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  6946 0000472F E925010000              	jmp .L_lambda_simple_end_002e
  6947                                  .L_lambda_simple_code_002e:	; lambda-simple body
  6948 00004734 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6949 0000473A 740B                    	je .L_lambda_simple_arity_check_ok_002e
  6950 0000473C FF742410                	push qword [rsp + 8 * 2]
  6951 00004740 6A02                    	push 2
  6952 00004742 E9A16D0000              	jmp L_error_incorrect_arity_simple
  6953                                  .L_lambda_simple_arity_check_ok_002e:
  6954 00004747 C8000000                	enter 0, 0
  6955                                  	; preparing a non-tail-call
  6956 0000474B 488B4528                	mov rax, PARAM(1)	; param sr
  6957 0000474F 50                      	push rax
  6958 00004750 6A01                    	push 1	; arg count
  6959 00004752 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  6960 0000475A 803805                  	cmp byte [rax], T_undefined
  6961 0000475D 0F849F6C0000            	je L_error_fvar_undefined
  6962 00004763 803804                  	cmp byte [rax], T_closure
  6963 00004766 0F851A6D0000            	jne L_error_non_closure
  6964 0000476C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6965 0000476F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6966 00004772 483D[02000000]          	cmp rax, sob_boolean_false
  6967 00004778 7409                    	je .L_if_else_000c
  6968 0000477A 488B4520                	mov rax, PARAM(0)	; param s1
  6969 0000477E E9D2000000              	jmp .L_if_end_000c
  6970                                  .L_if_else_000c:
  6971                                  	; preparing a tail-call
  6972                                  	; preparing a non-tail-call
  6973                                  	; preparing a non-tail-call
  6974 00004783 488B4528                	mov rax, PARAM(1)	; param sr
  6975 00004787 50                      	push rax
  6976 00004788 6A01                    	push 1	; arg count
  6977 0000478A 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  6978 00004792 803805                  	cmp byte [rax], T_undefined
  6979 00004795 0F84676C0000            	je L_error_fvar_undefined
  6980 0000479B 803804                  	cmp byte [rax], T_closure
  6981 0000479E 0F85E26C0000            	jne L_error_non_closure
  6982 000047A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6983 000047A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6984 000047AA 50                      	push rax
  6985                                  	; preparing a non-tail-call
  6986 000047AB 488B4528                	mov rax, PARAM(1)	; param sr
  6987 000047AF 50                      	push rax
  6988 000047B0 6A01                    	push 1	; arg count
  6989 000047B2 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  6990 000047BA 803805                  	cmp byte [rax], T_undefined
  6991 000047BD 0F843F6C0000            	je L_error_fvar_undefined
  6992 000047C3 803804                  	cmp byte [rax], T_closure
  6993 000047C6 0F85BA6C0000            	jne L_error_non_closure
  6994 000047CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  6995 000047CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  6996 000047D2 50                      	push rax
  6997 000047D3 6A02                    	push 2	; arg count
  6998 000047D5 488B4510                	mov rax, ENV
  6999 000047D9 488B00                  	mov rax, qword [rax + 8 * 0]
  7000 000047DC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7001 000047DF 488B00                  	mov rax, qword [rax]
  7002 000047E2 803804                  	cmp byte [rax], T_closure
  7003 000047E5 0F859B6C0000            	jne L_error_non_closure
  7004 000047EB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7005 000047EE FF5009                  	call SOB_CLOSURE_CODE(rax)
  7006 000047F1 50                      	push rax
  7007 000047F2 488B4520                	mov rax, PARAM(0)	; param s1
  7008 000047F6 50                      	push rax
  7009 000047F7 6A02                    	push 2	; arg count
  7010 000047F9 488B4510                	mov rax, ENV
  7011 000047FD 488B00                  	mov rax, qword [rax + 8 * 0]
  7012 00004800 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7013 00004804 488B00                  	mov rax, qword [rax]
  7014 00004807 803804                  	cmp byte [rax], T_closure
  7015 0000480A 0F85766C0000            	jne L_error_non_closure
  7016 00004810 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7017 00004813 FF7508                  	push qword [rbp + 8 * 1]
  7018                                   ; old ret addr
  7019 00004816 FF7500                  	push qword [rbp]
  7020                                   ; restore the old rbp
  7021 00004819 BB02000000              	mov rbx, 2
  7022 0000481E 4883C303                	add rbx, 3
  7023 00004822 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7024 00004826 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7025 0000482B 4C8D4DF8                	lea r9, [rbp - 8]
  7026 0000482F B906000000              	mov rcx, 6
  7027                                  .L_tc_recycle_frame_loop_002e:
  7028 00004834 4883F900                	cmp rcx, 0
  7029 00004838 7413                    	je .L_tc_recycle_frame_done_002e
  7030 0000483A 4D8B11                  	mov r10, qword [r9]
  7031 0000483D 4D8910                  	mov qword [r8], r10
  7032 00004840 4983E808                	sub r8, 8
  7033 00004844 4983E908                	sub r9, 8
  7034 00004848 48FFC9                  	dec rcx
  7035 0000484B EBE7                    	jmp .L_tc_recycle_frame_loop_002e
  7036                                  .L_tc_recycle_frame_done_002e:
  7037 0000484D 498D6008                	lea rsp, [r8 + 8]
  7038 00004851 5D                      	pop rbp ; restore the old rbp
  7039 00004852 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7040                                  .L_if_end_000c:
  7041 00004855 C9                      	leave
  7042 00004856 C22000                  	ret AND_KILL_FRAME(2)
  7043                                  .L_lambda_simple_end_002e:	; new closure is in rax
  7044 00004859 50                      	push rax
  7045 0000485A 488B4520                	mov rax, PARAM(0)	; param run-1
  7046 0000485E 8F00                    	pop qword [rax]
  7047 00004860 48B8-                   	mov rax, sob_void
  7047 00004862 [0000000000000000] 
  7048                                  
  7049 0000486A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7050 0000486F E8BB6C0000              	call malloc
  7051 00004874 50                      	push rax
  7052 00004875 BF10000000              	mov rdi, 8 * 2	; new rib
  7053 0000487A E8B06C0000              	call malloc
  7054 0000487F 50                      	push rax
  7055 00004880 BF10000000              	mov rdi, 8 * 2	; extended env
  7056 00004885 E8A56C0000              	call malloc
  7057 0000488A 488B7D10                	mov rdi, ENV
  7058 0000488E BE00000000              	mov rsi, 0
  7059 00004893 BA01000000              	mov rdx, 1
  7060                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7061 00004898 4883FE01                	cmp rsi, 1
  7062 0000489C 7410                    	je .L_lambda_simple_env_end_002f
  7063 0000489E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7064 000048A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7065 000048A6 48FFC6                  	inc rsi
  7066 000048A9 48FFC2                  	inc rdx
  7067 000048AC EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7068                                  .L_lambda_simple_env_end_002f:
  7069 000048AE 5B                      	pop rbx
  7070 000048AF BE00000000              	mov rsi, 0
  7071                                  .L_lambda_simple_params_loop_002f:	; copy params
  7072 000048B4 4883FE02                	cmp rsi, 2
  7073 000048B8 740E                    	je .L_lambda_simple_params_end_002f
  7074 000048BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7075 000048BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7076 000048C3 48FFC6                  	inc rsi
  7077 000048C6 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7078                                  .L_lambda_simple_params_end_002f:
  7079 000048C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7080 000048CB 4889C3                  	mov rbx, rax
  7081 000048CE 58                      	pop rax
  7082 000048CF C60004                  	mov byte [rax], T_closure
  7083 000048D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7084 000048D6 48C74009[E3480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7085 000048DE E929010000              	jmp .L_lambda_simple_end_002f
  7086                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7087 000048E3 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7088 000048E9 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7089 000048EB FF742410                	push qword [rsp + 8 * 2]
  7090 000048EF 6A02                    	push 2
  7091 000048F1 E9F26B0000              	jmp L_error_incorrect_arity_simple
  7092                                  .L_lambda_simple_arity_check_ok_002f:
  7093 000048F6 C8000000                	enter 0, 0
  7094                                  	; preparing a non-tail-call
  7095 000048FA 488B4520                	mov rax, PARAM(0)	; param s1
  7096 000048FE 50                      	push rax
  7097 000048FF 6A01                    	push 1	; arg count
  7098 00004901 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  7099 00004909 803805                  	cmp byte [rax], T_undefined
  7100 0000490C 0F84F06A0000            	je L_error_fvar_undefined
  7101 00004912 803804                  	cmp byte [rax], T_closure
  7102 00004915 0F856B6B0000            	jne L_error_non_closure
  7103 0000491B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7104 0000491E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7105 00004921 483D[02000000]          	cmp rax, sob_boolean_false
  7106 00004927 7409                    	je .L_if_else_000d
  7107 00004929 488B4528                	mov rax, PARAM(1)	; param s2
  7108 0000492D E9D6000000              	jmp .L_if_end_000d
  7109                                  .L_if_else_000d:
  7110                                  	; preparing a tail-call
  7111                                  	; preparing a non-tail-call
  7112 00004932 488B4528                	mov rax, PARAM(1)	; param s2
  7113 00004936 50                      	push rax
  7114                                  	; preparing a non-tail-call
  7115 00004937 488B4520                	mov rax, PARAM(0)	; param s1
  7116 0000493B 50                      	push rax
  7117 0000493C 6A01                    	push 1	; arg count
  7118 0000493E 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  7119 00004946 803805                  	cmp byte [rax], T_undefined
  7120 00004949 0F84B36A0000            	je L_error_fvar_undefined
  7121 0000494F 803804                  	cmp byte [rax], T_closure
  7122 00004952 0F852E6B0000            	jne L_error_non_closure
  7123 00004958 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7124 0000495B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7125 0000495E 50                      	push rax
  7126 0000495F 6A02                    	push 2	; arg count
  7127 00004961 488B4510                	mov rax, ENV
  7128 00004965 488B00                  	mov rax, qword [rax + 8 * 0]
  7129 00004968 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7130 0000496C 488B00                  	mov rax, qword [rax]
  7131 0000496F 803804                  	cmp byte [rax], T_closure
  7132 00004972 0F850E6B0000            	jne L_error_non_closure
  7133 00004978 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7134 0000497B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7135 0000497E 50                      	push rax
  7136                                  	; preparing a non-tail-call
  7137 0000497F 488B4520                	mov rax, PARAM(0)	; param s1
  7138 00004983 50                      	push rax
  7139 00004984 6A01                    	push 1	; arg count
  7140 00004986 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  7141 0000498E 803805                  	cmp byte [rax], T_undefined
  7142 00004991 0F846B6A0000            	je L_error_fvar_undefined
  7143 00004997 803804                  	cmp byte [rax], T_closure
  7144 0000499A 0F85E66A0000            	jne L_error_non_closure
  7145 000049A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7146 000049A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7147 000049A6 50                      	push rax
  7148 000049A7 6A02                    	push 2	; arg count
  7149 000049A9 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  7150 000049B1 803805                  	cmp byte [rax], T_undefined
  7151 000049B4 0F84486A0000            	je L_error_fvar_undefined
  7152 000049BA 803804                  	cmp byte [rax], T_closure
  7153 000049BD 0F85C36A0000            	jne L_error_non_closure
  7154 000049C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7155 000049C6 FF7508                  	push qword [rbp + 8 * 1]
  7156                                   ; old ret addr
  7157 000049C9 FF7500                  	push qword [rbp]
  7158                                   ; restore the old rbp
  7159 000049CC BB02000000              	mov rbx, 2
  7160 000049D1 4883C303                	add rbx, 3
  7161 000049D5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7162 000049D9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7163 000049DE 4C8D4DF8                	lea r9, [rbp - 8]
  7164 000049E2 B906000000              	mov rcx, 6
  7165                                  .L_tc_recycle_frame_loop_002f:
  7166 000049E7 4883F900                	cmp rcx, 0
  7167 000049EB 7413                    	je .L_tc_recycle_frame_done_002f
  7168 000049ED 4D8B11                  	mov r10, qword [r9]
  7169 000049F0 4D8910                  	mov qword [r8], r10
  7170 000049F3 4983E808                	sub r8, 8
  7171 000049F7 4983E908                	sub r9, 8
  7172 000049FB 48FFC9                  	dec rcx
  7173 000049FE EBE7                    	jmp .L_tc_recycle_frame_loop_002f
  7174                                  .L_tc_recycle_frame_done_002f:
  7175 00004A00 498D6008                	lea rsp, [r8 + 8]
  7176 00004A04 5D                      	pop rbp ; restore the old rbp
  7177 00004A05 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7178                                  .L_if_end_000d:
  7179 00004A08 C9                      	leave
  7180 00004A09 C22000                  	ret AND_KILL_FRAME(2)
  7181                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7182 00004A0C 50                      	push rax
  7183 00004A0D 488B4528                	mov rax, PARAM(1)	; param run-2
  7184 00004A11 8F00                    	pop qword [rax]
  7185 00004A13 48B8-                   	mov rax, sob_void
  7185 00004A15 [0000000000000000] 
  7186                                  
  7187 00004A1D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7188 00004A22 E8086B0000              	call malloc
  7189 00004A27 50                      	push rax
  7190 00004A28 BF18000000              	mov rdi, 8 * 3	; new rib
  7191 00004A2D E8FD6A0000              	call malloc
  7192 00004A32 50                      	push rax
  7193 00004A33 BF10000000              	mov rdi, 8 * 2	; extended env
  7194 00004A38 E8F26A0000              	call malloc
  7195 00004A3D 488B7D10                	mov rdi, ENV
  7196 00004A41 BE00000000              	mov rsi, 0
  7197 00004A46 BA01000000              	mov rdx, 1
  7198                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  7199 00004A4B 4883FE01                	cmp rsi, 1
  7200 00004A4F 7410                    	je .L_lambda_opt_env_end_0007
  7201 00004A51 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7202 00004A55 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7203 00004A59 48FFC6                  	inc rsi
  7204 00004A5C 48FFC2                  	inc rdx
  7205 00004A5F EBEA                    	jmp .L_lambda_opt_env_loop_0007
  7206                                  .L_lambda_opt_env_end_0007:
  7207 00004A61 5B                      	pop rbx
  7208 00004A62 BE00000000              	mov rsi, 0
  7209                                  .L_lambda_opt_params_loop_0007:	; copy params
  7210 00004A67 4883FE02                	cmp rsi, 2
  7211 00004A6B 740E                    	je .L_lambda_opt_params_end_0007
  7212 00004A6D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7213 00004A72 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7214 00004A76 48FFC6                  	inc rsi
  7215 00004A79 EBEC                    	jmp .L_lambda_opt_params_loop_0007
  7216                                  .L_lambda_opt_params_end_0007:
  7217 00004A7B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7218 00004A7E 4889C3                  	mov rbx, rax
  7219 00004A81 58                      	pop rax
  7220 00004A82 C60004                  	mov byte [rax], T_closure
  7221 00004A85 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7222 00004A89 48C74009[964A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  7223 00004A91 E996010000              	jmp .L_lambda_opt_end_0007
  7224                                  .L_lambda_opt_code_0007:	; lambda-opt body
  7225 00004A96 48837C241000            	cmp qword [rsp + 8 * 2], 0
  7226 00004A9C 745E                    	je .L_lambda_opt_arity_check_exact_0007
  7227 00004A9E 7F0B                    	jg .L_lambda_opt_arity_check_more_0007
  7228 00004AA0 FF742410                	push qword [rsp + 8 * 2]
  7229 00004AA4 6A00                    	push 0
  7230 00004AA6 E93D6A0000              	jmp L_error_incorrect_arity_simple
  7231                                  .L_lambda_opt_arity_check_more_0007:
  7232 00004AAB 53                      push rbx
  7233 00004AAC 51                      push rcx
  7234 00004AAD 488B4D10                mov rcx, [rbp + 8*2]
  7235 00004AB1 BB00000000              mov rbx , 0
  7236 00004AB6 4829D9                  sub rcx, rbx
  7237 00004AB9 48FFC3                  inc rbx
  7238 00004ABC 48895D10                mov [rbp + 8*2], rbx
  7239 00004AC0 4889CF                  	 mov rdi, rcx 
  7240 00004AC3 48C1E703                	 shl rdi, 3 
  7241 00004AC7 E8636A0000              	call malloc
  7242 00004ACC 50                      	push rax
  7243 00004ACD 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  7244 00004AD2 4831FF                  xor rdi, rdi
  7245                                  .L_lambda_opt_stack_shrink_loop_0007:
  7246 00004AD5 4839CF                  	cmp rdi, rcx
  7247 00004AD8 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0007
  7248 00004ADA 488904FC                mov [rsp + rdi*8], rax
  7249 00004ADE 48FFC7                  	inc rdi
  7250 00004AE1 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  7251 00004AE9 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  7252 00004AEE 498B04D9                mov rax,[r9 + rbx*8] 
  7253 00004AF2 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0007
  7254                                  .L_lambda_opt_stack_shrink_loop_exit_0007:
  7255 00004AF4 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  7256 00004AF8 5B                      pop rbx
  7257 00004AF9 53                      push rbx
  7258 00004AFA EB16                    jmp .L_lambda_opt_stack_adjusted_0007
  7259                                  .L_lambda_opt_arity_check_exact_0007:
  7260 00004AFC 48B8-                   	mov rax, L_constants + 1
  7260 00004AFE [0100000000000000] 
  7261 00004B06 53                      push rbx
  7262 00004B07 488B5C2410              mov rbx , [rsp + 8*2]
  7263 00004B0C 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  7264 00004B11 5B                      pop rbx
  7265                                  .L_lambda_opt_stack_adjusted_0007:	; new closure is in rax
  7266 00004B12 C8000000                	enter 0, 0
  7267                                  	; preparing a non-tail-call
  7268 00004B16 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  7269 00004B1E 803805                  	cmp byte [rax], T_undefined
  7270 00004B21 0F84DB680000            	je L_error_fvar_undefined
  7271 00004B27 50                      	push rax
  7272 00004B28 6A01                    	push 1	; arg count
  7273 00004B2A 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  7274 00004B32 803805                  	cmp byte [rax], T_undefined
  7275 00004B35 0F84C7680000            	je L_error_fvar_undefined
  7276 00004B3B 803804                  	cmp byte [rax], T_closure
  7277 00004B3E 0F8542690000            	jne L_error_non_closure
  7278 00004B44 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7279 00004B47 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7280 00004B4A 483D[02000000]          	cmp rax, sob_boolean_false
  7281 00004B50 740F                    	je .L_if_else_000e
  7282 00004B52 48B8-                   	mov rax, L_constants + 1
  7282 00004B54 [0100000000000000] 
  7283 00004B5C E9C7000000              	jmp .L_if_end_000e
  7284                                  .L_if_else_000e:
  7285                                  	; preparing a tail-call
  7286                                  	; preparing a non-tail-call
  7287 00004B61 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  7288 00004B69 803805                  	cmp byte [rax], T_undefined
  7289 00004B6C 0F8490680000            	je L_error_fvar_undefined
  7290 00004B72 50                      	push rax
  7291 00004B73 6A01                    	push 1	; arg count
  7292 00004B75 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  7293 00004B7D 803805                  	cmp byte [rax], T_undefined
  7294 00004B80 0F847C680000            	je L_error_fvar_undefined
  7295 00004B86 803804                  	cmp byte [rax], T_closure
  7296 00004B89 0F85F7680000            	jne L_error_non_closure
  7297 00004B8F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7298 00004B92 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7299 00004B95 50                      	push rax
  7300                                  	; preparing a non-tail-call
  7301 00004B96 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  7302 00004B9E 803805                  	cmp byte [rax], T_undefined
  7303 00004BA1 0F845B680000            	je L_error_fvar_undefined
  7304 00004BA7 50                      	push rax
  7305 00004BA8 6A01                    	push 1	; arg count
  7306 00004BAA 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  7307 00004BB2 803805                  	cmp byte [rax], T_undefined
  7308 00004BB5 0F8447680000            	je L_error_fvar_undefined
  7309 00004BBB 803804                  	cmp byte [rax], T_closure
  7310 00004BBE 0F85C2680000            	jne L_error_non_closure
  7311 00004BC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7312 00004BC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7313 00004BCA 50                      	push rax
  7314 00004BCB 6A02                    	push 2	; arg count
  7315 00004BCD 488B4510                	mov rax, ENV
  7316 00004BD1 488B00                  	mov rax, qword [rax + 8 * 0]
  7317 00004BD4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7318 00004BD7 488B00                  	mov rax, qword [rax]
  7319 00004BDA 803804                  	cmp byte [rax], T_closure
  7320 00004BDD 0F85A3680000            	jne L_error_non_closure
  7321 00004BE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7322 00004BE6 FF7508                  	push qword [rbp + 8 * 1]
  7323                                   ; old ret addr
  7324 00004BE9 FF7500                  	push qword [rbp]
  7325                                   ; restore the old rbp
  7326 00004BEC BB02000000              	mov rbx, 2
  7327 00004BF1 4883C303                	add rbx, 3
  7328 00004BF5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7329 00004BF9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7330 00004BFE 4C8D4DF8                	lea r9, [rbp - 8]
  7331 00004C02 B906000000              	mov rcx, 6
  7332                                  .L_tc_recycle_frame_loop_0030:
  7333 00004C07 4883F900                	cmp rcx, 0
  7334 00004C0B 7413                    	je .L_tc_recycle_frame_done_0030
  7335 00004C0D 4D8B11                  	mov r10, qword [r9]
  7336 00004C10 4D8910                  	mov qword [r8], r10
  7337 00004C13 4983E808                	sub r8, 8
  7338 00004C17 4983E908                	sub r9, 8
  7339 00004C1B 48FFC9                  	dec rcx
  7340 00004C1E EBE7                    	jmp .L_tc_recycle_frame_loop_0030
  7341                                  .L_tc_recycle_frame_done_0030:
  7342 00004C20 498D6008                	lea rsp, [r8 + 8]
  7343 00004C24 5D                      	pop rbp ; restore the old rbp
  7344 00004C25 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7345                                  .L_if_end_000e:
  7346 00004C28 C9                      	leave
  7347 00004C29 C21000                  	ret AND_KILL_FRAME(0)
  7348                                  .L_lambda_opt_end_0007:	; new closure is in rax
  7349 00004C2C C9                      	leave
  7350 00004C2D C22000                  	ret AND_KILL_FRAME(2)
  7351                                  .L_lambda_simple_end_002d:	; new closure is in rax
  7352 00004C30 803804                  	cmp byte [rax], T_closure
  7353 00004C33 0F854D680000            	jne L_error_non_closure
  7354 00004C39 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7355 00004C3C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7356 00004C3F 48890425[AE0C0000]      	mov qword [free_var_31], rax
  7357 00004C47 48B8-                   	mov rax, sob_void
  7357 00004C49 [0000000000000000] 
  7358                                  
  7359 00004C51 4889C7                  	mov rdi, rax
  7360 00004C54 E82B6B0000              	call print_sexpr_if_not_void
  7361                                  	; preparing a non-tail-call
  7362 00004C59 48B8-                   	mov rax, L_constants + 2016
  7362 00004C5B [E007000000000000] 
  7363 00004C63 50                      	push rax
  7364 00004C64 6A01                    	push 1	; arg count
  7365 00004C66 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7366 00004C6B E8BF680000              	call malloc
  7367 00004C70 50                      	push rax
  7368 00004C71 BF00000000              	mov rdi, 8 * 0	; new rib
  7369 00004C76 E8B4680000              	call malloc
  7370 00004C7B 50                      	push rax
  7371 00004C7C BF08000000              	mov rdi, 8 * 1	; extended env
  7372 00004C81 E8A9680000              	call malloc
  7373 00004C86 488B7D10                	mov rdi, ENV
  7374 00004C8A BE00000000              	mov rsi, 0
  7375 00004C8F BA01000000              	mov rdx, 1
  7376                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  7377 00004C94 4883FE00                	cmp rsi, 0
  7378 00004C98 7410                    	je .L_lambda_simple_env_end_0030
  7379 00004C9A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7380 00004C9E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7381 00004CA2 48FFC6                  	inc rsi
  7382 00004CA5 48FFC2                  	inc rdx
  7383 00004CA8 EBEA                    	jmp .L_lambda_simple_env_loop_0030
  7384                                  .L_lambda_simple_env_end_0030:
  7385 00004CAA 5B                      	pop rbx
  7386 00004CAB BE00000000              	mov rsi, 0
  7387                                  .L_lambda_simple_params_loop_0030:	; copy params
  7388 00004CB0 4883FE00                	cmp rsi, 0
  7389 00004CB4 740E                    	je .L_lambda_simple_params_end_0030
  7390 00004CB6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7391 00004CBB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7392 00004CBF 48FFC6                  	inc rsi
  7393 00004CC2 EBEC                    	jmp .L_lambda_simple_params_loop_0030
  7394                                  .L_lambda_simple_params_end_0030:
  7395 00004CC4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7396 00004CC7 4889C3                  	mov rbx, rax
  7397 00004CCA 58                      	pop rax
  7398 00004CCB C60004                  	mov byte [rax], T_closure
  7399 00004CCE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7400 00004CD2 48C74009[DF4C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  7401 00004CDA E9A2030000              	jmp .L_lambda_simple_end_0030
  7402                                  .L_lambda_simple_code_0030:	; lambda-simple body
  7403 00004CDF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7404 00004CE5 740B                    	je .L_lambda_simple_arity_check_ok_0030
  7405 00004CE7 FF742410                	push qword [rsp + 8 * 2]
  7406 00004CEB 6A01                    	push 1
  7407 00004CED E9F6670000              	jmp L_error_incorrect_arity_simple
  7408                                  .L_lambda_simple_arity_check_ok_0030:
  7409 00004CF2 C8000000                	enter 0, 0
  7410 00004CF6 BF08000000              	mov rdi, 8*1
  7411 00004CFB E82F680000              	call malloc
  7412 00004D00 488B5D20                	mov rbx, PARAM(0)
  7413 00004D04 488918                  	mov qword [rax], rbx
  7414 00004D07 48894520                	mov PARAM(0), rax
  7415 00004D0B 48B8-                   	mov rax, sob_void
  7415 00004D0D [0000000000000000] 
  7416                                  
  7417 00004D15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7418 00004D1A E810680000              	call malloc
  7419 00004D1F 50                      	push rax
  7420 00004D20 BF08000000              	mov rdi, 8 * 1	; new rib
  7421 00004D25 E805680000              	call malloc
  7422 00004D2A 50                      	push rax
  7423 00004D2B BF10000000              	mov rdi, 8 * 2	; extended env
  7424 00004D30 E8FA670000              	call malloc
  7425 00004D35 488B7D10                	mov rdi, ENV
  7426 00004D39 BE00000000              	mov rsi, 0
  7427 00004D3E BA01000000              	mov rdx, 1
  7428                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  7429 00004D43 4883FE01                	cmp rsi, 1
  7430 00004D47 7410                    	je .L_lambda_simple_env_end_0031
  7431 00004D49 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7432 00004D4D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7433 00004D51 48FFC6                  	inc rsi
  7434 00004D54 48FFC2                  	inc rdx
  7435 00004D57 EBEA                    	jmp .L_lambda_simple_env_loop_0031
  7436                                  .L_lambda_simple_env_end_0031:
  7437 00004D59 5B                      	pop rbx
  7438 00004D5A BE00000000              	mov rsi, 0
  7439                                  .L_lambda_simple_params_loop_0031:	; copy params
  7440 00004D5F 4883FE01                	cmp rsi, 1
  7441 00004D63 740E                    	je .L_lambda_simple_params_end_0031
  7442 00004D65 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7443 00004D6A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7444 00004D6E 48FFC6                  	inc rsi
  7445 00004D71 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  7446                                  .L_lambda_simple_params_end_0031:
  7447 00004D73 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7448 00004D76 4889C3                  	mov rbx, rax
  7449 00004D79 58                      	pop rax
  7450 00004D7A C60004                  	mov byte [rax], T_closure
  7451 00004D7D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7452 00004D81 48C74009[8E4D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  7453 00004D89 E968010000              	jmp .L_lambda_simple_end_0031
  7454                                  .L_lambda_simple_code_0031:	; lambda-simple body
  7455 00004D8E 48837C241003            	cmp qword [rsp + 8 * 2], 3
  7456 00004D94 740B                    	je .L_lambda_simple_arity_check_ok_0031
  7457 00004D96 FF742410                	push qword [rsp + 8 * 2]
  7458 00004D9A 6A03                    	push 3
  7459 00004D9C E947670000              	jmp L_error_incorrect_arity_simple
  7460                                  .L_lambda_simple_arity_check_ok_0031:
  7461 00004DA1 C8000000                	enter 0, 0
  7462                                  	; preparing a non-tail-call
  7463 00004DA5 488B4530                	mov rax, PARAM(2)	; param ss
  7464 00004DA9 50                      	push rax
  7465 00004DAA 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  7466 00004DB2 803805                  	cmp byte [rax], T_undefined
  7467 00004DB5 0F8447660000            	je L_error_fvar_undefined
  7468 00004DBB 50                      	push rax
  7469 00004DBC 6A02                    	push 2	; arg count
  7470 00004DBE 488B0425[99100000]      	mov rax, qword [free_var_90]	; free var ormap
  7471 00004DC6 803805                  	cmp byte [rax], T_undefined
  7472 00004DC9 0F8433660000            	je L_error_fvar_undefined
  7473 00004DCF 803804                  	cmp byte [rax], T_closure
  7474 00004DD2 0F85AE660000            	jne L_error_non_closure
  7475 00004DD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7476 00004DDB FF5009                  	call SOB_CLOSURE_CODE(rax)
  7477 00004DDE 483D[02000000]          	cmp rax, sob_boolean_false
  7478 00004DE4 7409                    	je .L_if_else_000f
  7479 00004DE6 488B4528                	mov rax, PARAM(1)	; param unit
  7480 00004DEA E903010000              	jmp .L_if_end_000f
  7481                                  .L_if_else_000f:
  7482                                  	; preparing a tail-call
  7483                                  	; preparing a non-tail-call
  7484 00004DEF 488B4530                	mov rax, PARAM(2)	; param ss
  7485 00004DF3 50                      	push rax
  7486 00004DF4 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  7487 00004DFC 803805                  	cmp byte [rax], T_undefined
  7488 00004DFF 0F84FD650000            	je L_error_fvar_undefined
  7489 00004E05 50                      	push rax
  7490 00004E06 6A02                    	push 2	; arg count
  7491 00004E08 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  7492 00004E10 803805                  	cmp byte [rax], T_undefined
  7493 00004E13 0F84E9650000            	je L_error_fvar_undefined
  7494 00004E19 803804                  	cmp byte [rax], T_closure
  7495 00004E1C 0F8564660000            	jne L_error_non_closure
  7496 00004E22 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7497 00004E25 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7498 00004E28 50                      	push rax
  7499                                  	; preparing a non-tail-call
  7500                                  	; preparing a non-tail-call
  7501 00004E29 488B4530                	mov rax, PARAM(2)	; param ss
  7502 00004E2D 50                      	push rax
  7503 00004E2E 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  7504 00004E36 803805                  	cmp byte [rax], T_undefined
  7505 00004E39 0F84C3650000            	je L_error_fvar_undefined
  7506 00004E3F 50                      	push rax
  7507 00004E40 6A02                    	push 2	; arg count
  7508 00004E42 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  7509 00004E4A 803805                  	cmp byte [rax], T_undefined
  7510 00004E4D 0F84AF650000            	je L_error_fvar_undefined
  7511 00004E53 803804                  	cmp byte [rax], T_closure
  7512 00004E56 0F852A660000            	jne L_error_non_closure
  7513 00004E5C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7514 00004E5F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7515 00004E62 50                      	push rax
  7516 00004E63 488B4528                	mov rax, PARAM(1)	; param unit
  7517 00004E67 50                      	push rax
  7518 00004E68 488B4520                	mov rax, PARAM(0)	; param f
  7519 00004E6C 50                      	push rax
  7520 00004E6D 6A03                    	push 3	; arg count
  7521 00004E6F 488B0425[BF0C0000]      	mov rax, qword [free_var_32]	; free var apply
  7522 00004E77 803805                  	cmp byte [rax], T_undefined
  7523 00004E7A 0F8482650000            	je L_error_fvar_undefined
  7524 00004E80 803804                  	cmp byte [rax], T_closure
  7525 00004E83 0F85FD650000            	jne L_error_non_closure
  7526 00004E89 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7527 00004E8C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7528 00004E8F 50                      	push rax
  7529 00004E90 488B4520                	mov rax, PARAM(0)	; param f
  7530 00004E94 50                      	push rax
  7531 00004E95 6A03                    	push 3	; arg count
  7532 00004E97 488B4510                	mov rax, ENV
  7533 00004E9B 488B00                  	mov rax, qword [rax + 8 * 0]
  7534 00004E9E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  7535 00004EA1 488B00                  	mov rax, qword [rax]
  7536 00004EA4 803804                  	cmp byte [rax], T_closure
  7537 00004EA7 0F85D9650000            	jne L_error_non_closure
  7538 00004EAD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7539 00004EB0 FF7508                  	push qword [rbp + 8 * 1]
  7540                                   ; old ret addr
  7541 00004EB3 FF7500                  	push qword [rbp]
  7542                                   ; restore the old rbp
  7543 00004EB6 BB03000000              	mov rbx, 3
  7544 00004EBB 4883C303                	add rbx, 3
  7545 00004EBF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7546 00004EC3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7547 00004EC8 4C8D4DF8                	lea r9, [rbp - 8]
  7548 00004ECC B907000000              	mov rcx, 7
  7549                                  .L_tc_recycle_frame_loop_0031:
  7550 00004ED1 4883F900                	cmp rcx, 0
  7551 00004ED5 7413                    	je .L_tc_recycle_frame_done_0031
  7552 00004ED7 4D8B11                  	mov r10, qword [r9]
  7553 00004EDA 4D8910                  	mov qword [r8], r10
  7554 00004EDD 4983E808                	sub r8, 8
  7555 00004EE1 4983E908                	sub r9, 8
  7556 00004EE5 48FFC9                  	dec rcx
  7557 00004EE8 EBE7                    	jmp .L_tc_recycle_frame_loop_0031
  7558                                  .L_tc_recycle_frame_done_0031:
  7559 00004EEA 498D6008                	lea rsp, [r8 + 8]
  7560 00004EEE 5D                      	pop rbp ; restore the old rbp
  7561 00004EEF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7562                                  .L_if_end_000f:
  7563 00004EF2 C9                      	leave
  7564 00004EF3 C22800                  	ret AND_KILL_FRAME(3)
  7565                                  .L_lambda_simple_end_0031:	; new closure is in rax
  7566 00004EF6 50                      	push rax
  7567 00004EF7 488B4520                	mov rax, PARAM(0)	; param run
  7568 00004EFB 8F00                    	pop qword [rax]
  7569 00004EFD 48B8-                   	mov rax, sob_void
  7569 00004EFF [0000000000000000] 
  7570                                  
  7571 00004F07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7572 00004F0C E81E660000              	call malloc
  7573 00004F11 50                      	push rax
  7574 00004F12 BF10000000              	mov rdi, 8 * 2	; new rib
  7575 00004F17 E813660000              	call malloc
  7576 00004F1C 50                      	push rax
  7577 00004F1D BF10000000              	mov rdi, 8 * 2	; extended env
  7578 00004F22 E808660000              	call malloc
  7579 00004F27 488B7D10                	mov rdi, ENV
  7580 00004F2B BE00000000              	mov rsi, 0
  7581 00004F30 BA01000000              	mov rdx, 1
  7582                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  7583 00004F35 4883FE01                	cmp rsi, 1
  7584 00004F39 7410                    	je .L_lambda_opt_env_end_0008
  7585 00004F3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7586 00004F3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7587 00004F43 48FFC6                  	inc rsi
  7588 00004F46 48FFC2                  	inc rdx
  7589 00004F49 EBEA                    	jmp .L_lambda_opt_env_loop_0008
  7590                                  .L_lambda_opt_env_end_0008:
  7591 00004F4B 5B                      	pop rbx
  7592 00004F4C BE00000000              	mov rsi, 0
  7593                                  .L_lambda_opt_params_loop_0008:	; copy params
  7594 00004F51 4883FE01                	cmp rsi, 1
  7595 00004F55 740E                    	je .L_lambda_opt_params_end_0008
  7596 00004F57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7597 00004F5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7598 00004F60 48FFC6                  	inc rsi
  7599 00004F63 EBEC                    	jmp .L_lambda_opt_params_loop_0008
  7600                                  .L_lambda_opt_params_end_0008:
  7601 00004F65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7602 00004F68 4889C3                  	mov rbx, rax
  7603 00004F6B 58                      	pop rax
  7604 00004F6C C60004                  	mov byte [rax], T_closure
  7605 00004F6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7606 00004F73 48C74009[804F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  7607 00004F7B E9FD000000              	jmp .L_lambda_opt_end_0008
  7608                                  .L_lambda_opt_code_0008:	; lambda-opt body
  7609 00004F80 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7610 00004F86 745E                    	je .L_lambda_opt_arity_check_exact_0008
  7611 00004F88 7F0B                    	jg .L_lambda_opt_arity_check_more_0008
  7612 00004F8A FF742410                	push qword [rsp + 8 * 2]
  7613 00004F8E 6A02                    	push 2
  7614 00004F90 E953650000              	jmp L_error_incorrect_arity_simple
  7615                                  .L_lambda_opt_arity_check_more_0008:
  7616 00004F95 53                      push rbx
  7617 00004F96 51                      push rcx
  7618 00004F97 488B4D10                mov rcx, [rbp + 8*2]
  7619 00004F9B BB02000000              mov rbx , 2
  7620 00004FA0 4829D9                  sub rcx, rbx
  7621 00004FA3 48FFC3                  inc rbx
  7622 00004FA6 48895D10                mov [rbp + 8*2], rbx
  7623 00004FAA 4889CF                  	 mov rdi, rcx 
  7624 00004FAD 48C1E703                	 shl rdi, 3 
  7625 00004FB1 E879650000              	call malloc
  7626 00004FB6 50                      	push rax
  7627 00004FB7 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  7628 00004FBC 4831FF                  xor rdi, rdi
  7629                                  .L_lambda_opt_stack_shrink_loop_0008:
  7630 00004FBF 4839CF                  	cmp rdi, rcx
  7631 00004FC2 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0008
  7632 00004FC4 488904FC                mov [rsp + rdi*8], rax
  7633 00004FC8 48FFC7                  	inc rdi
  7634 00004FCB 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  7635 00004FD3 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  7636 00004FD8 498B04D9                mov rax,[r9 + rbx*8] 
  7637 00004FDC EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0008
  7638                                  .L_lambda_opt_stack_shrink_loop_exit_0008:
  7639 00004FDE 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  7640 00004FE2 5B                      pop rbx
  7641 00004FE3 53                      push rbx
  7642 00004FE4 EB16                    jmp .L_lambda_opt_stack_adjusted_0008
  7643                                  .L_lambda_opt_arity_check_exact_0008:
  7644 00004FE6 48B8-                   	mov rax, L_constants + 1
  7644 00004FE8 [0100000000000000] 
  7645 00004FF0 53                      push rbx
  7646 00004FF1 488B5C2410              mov rbx , [rsp + 8*2]
  7647 00004FF6 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  7648 00004FFB 5B                      pop rbx
  7649                                  .L_lambda_opt_stack_adjusted_0008:	; new closure is in rax
  7650 00004FFC C8000000                	enter 0, 0
  7651                                  	; preparing a tail-call
  7652 00005000 488B0425[10110000]      	mov rax, qword [free_var_97]	; free var ss
  7653 00005008 803805                  	cmp byte [rax], T_undefined
  7654 0000500B 0F84F1630000            	je L_error_fvar_undefined
  7655 00005011 50                      	push rax
  7656 00005012 488B4528                	mov rax, PARAM(1)	; param unit
  7657 00005016 50                      	push rax
  7658 00005017 488B4520                	mov rax, PARAM(0)	; param f
  7659 0000501B 50                      	push rax
  7660 0000501C 6A03                    	push 3	; arg count
  7661 0000501E 488B4510                	mov rax, ENV
  7662 00005022 488B00                  	mov rax, qword [rax + 8 * 0]
  7663 00005025 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  7664 00005028 488B00                  	mov rax, qword [rax]
  7665 0000502B 803804                  	cmp byte [rax], T_closure
  7666 0000502E 0F8552640000            	jne L_error_non_closure
  7667 00005034 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7668 00005037 FF7508                  	push qword [rbp + 8 * 1]
  7669                                   ; old ret addr
  7670 0000503A FF7500                  	push qword [rbp]
  7671                                   ; restore the old rbp
  7672 0000503D BB03000000              	mov rbx, 3
  7673 00005042 4883C303                	add rbx, 3
  7674 00005046 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7675 0000504A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7676 0000504F 4C8D4DF8                	lea r9, [rbp - 8]
  7677 00005053 B907000000              	mov rcx, 7
  7678                                  .L_tc_recycle_frame_loop_0032:
  7679 00005058 4883F900                	cmp rcx, 0
  7680 0000505C 7413                    	je .L_tc_recycle_frame_done_0032
  7681 0000505E 4D8B11                  	mov r10, qword [r9]
  7682 00005061 4D8910                  	mov qword [r8], r10
  7683 00005064 4983E808                	sub r8, 8
  7684 00005068 4983E908                	sub r9, 8
  7685 0000506C 48FFC9                  	dec rcx
  7686 0000506F EBE7                    	jmp .L_tc_recycle_frame_loop_0032
  7687                                  .L_tc_recycle_frame_done_0032:
  7688 00005071 498D6008                	lea rsp, [r8 + 8]
  7689 00005075 5D                      	pop rbp ; restore the old rbp
  7690 00005076 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7691 00005079 C9                      	leave
  7692 0000507A C22000                  	ret AND_KILL_FRAME(2)
  7693                                  .L_lambda_opt_end_0008:	; new closure is in rax
  7694 0000507D C9                      	leave
  7695 0000507E C21800                  	ret AND_KILL_FRAME(1)
  7696                                  .L_lambda_simple_end_0030:	; new closure is in rax
  7697 00005081 803804                  	cmp byte [rax], T_closure
  7698 00005084 0F85FC630000            	jne L_error_non_closure
  7699 0000508A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7700 0000508D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7701 00005090 48890425[AB0F0000]      	mov qword [free_var_76], rax
  7702 00005098 48B8-                   	mov rax, sob_void
  7702 0000509A [0000000000000000] 
  7703                                  
  7704 000050A2 4889C7                  	mov rdi, rax
  7705 000050A5 E8DA660000              	call print_sexpr_if_not_void
  7706                                  	; preparing a non-tail-call
  7707 000050AA 48B8-                   	mov rax, L_constants + 2016
  7707 000050AC [E007000000000000] 
  7708 000050B4 50                      	push rax
  7709 000050B5 6A01                    	push 1	; arg count
  7710 000050B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7711 000050BC E86E640000              	call malloc
  7712 000050C1 50                      	push rax
  7713 000050C2 BF00000000              	mov rdi, 8 * 0	; new rib
  7714 000050C7 E863640000              	call malloc
  7715 000050CC 50                      	push rax
  7716 000050CD BF08000000              	mov rdi, 8 * 1	; extended env
  7717 000050D2 E858640000              	call malloc
  7718 000050D7 488B7D10                	mov rdi, ENV
  7719 000050DB BE00000000              	mov rsi, 0
  7720 000050E0 BA01000000              	mov rdx, 1
  7721                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  7722 000050E5 4883FE00                	cmp rsi, 0
  7723 000050E9 7410                    	je .L_lambda_simple_env_end_0032
  7724 000050EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7725 000050EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7726 000050F3 48FFC6                  	inc rsi
  7727 000050F6 48FFC2                  	inc rdx
  7728 000050F9 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  7729                                  .L_lambda_simple_env_end_0032:
  7730 000050FB 5B                      	pop rbx
  7731 000050FC BE00000000              	mov rsi, 0
  7732                                  .L_lambda_simple_params_loop_0032:	; copy params
  7733 00005101 4883FE00                	cmp rsi, 0
  7734 00005105 740E                    	je .L_lambda_simple_params_end_0032
  7735 00005107 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7736 0000510C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7737 00005110 48FFC6                  	inc rsi
  7738 00005113 EBEC                    	jmp .L_lambda_simple_params_loop_0032
  7739                                  .L_lambda_simple_params_end_0032:
  7740 00005115 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7741 00005118 4889C3                  	mov rbx, rax
  7742 0000511B 58                      	pop rax
  7743 0000511C C60004                  	mov byte [rax], T_closure
  7744 0000511F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7745 00005123 48C74009[30510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  7746 0000512B E9F3030000              	jmp .L_lambda_simple_end_0032
  7747                                  .L_lambda_simple_code_0032:	; lambda-simple body
  7748 00005130 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7749 00005136 740B                    	je .L_lambda_simple_arity_check_ok_0032
  7750 00005138 FF742410                	push qword [rsp + 8 * 2]
  7751 0000513C 6A01                    	push 1
  7752 0000513E E9A5630000              	jmp L_error_incorrect_arity_simple
  7753                                  .L_lambda_simple_arity_check_ok_0032:
  7754 00005143 C8000000                	enter 0, 0
  7755 00005147 BF08000000              	mov rdi, 8*1
  7756 0000514C E8DE630000              	call malloc
  7757 00005151 488B5D20                	mov rbx, PARAM(0)
  7758 00005155 488918                  	mov qword [rax], rbx
  7759 00005158 48894520                	mov PARAM(0), rax
  7760 0000515C 48B8-                   	mov rax, sob_void
  7760 0000515E [0000000000000000] 
  7761                                  
  7762 00005166 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7763 0000516B E8BF630000              	call malloc
  7764 00005170 50                      	push rax
  7765 00005171 BF08000000              	mov rdi, 8 * 1	; new rib
  7766 00005176 E8B4630000              	call malloc
  7767 0000517B 50                      	push rax
  7768 0000517C BF10000000              	mov rdi, 8 * 2	; extended env
  7769 00005181 E8A9630000              	call malloc
  7770 00005186 488B7D10                	mov rdi, ENV
  7771 0000518A BE00000000              	mov rsi, 0
  7772 0000518F BA01000000              	mov rdx, 1
  7773                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  7774 00005194 4883FE01                	cmp rsi, 1
  7775 00005198 7410                    	je .L_lambda_simple_env_end_0033
  7776 0000519A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7777 0000519E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7778 000051A2 48FFC6                  	inc rsi
  7779 000051A5 48FFC2                  	inc rdx
  7780 000051A8 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  7781                                  .L_lambda_simple_env_end_0033:
  7782 000051AA 5B                      	pop rbx
  7783 000051AB BE00000000              	mov rsi, 0
  7784                                  .L_lambda_simple_params_loop_0033:	; copy params
  7785 000051B0 4883FE01                	cmp rsi, 1
  7786 000051B4 740E                    	je .L_lambda_simple_params_end_0033
  7787 000051B6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7788 000051BB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7789 000051BF 48FFC6                  	inc rsi
  7790 000051C2 EBEC                    	jmp .L_lambda_simple_params_loop_0033
  7791                                  .L_lambda_simple_params_end_0033:
  7792 000051C4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7793 000051C7 4889C3                  	mov rbx, rax
  7794 000051CA 58                      	pop rax
  7795 000051CB C60004                  	mov byte [rax], T_closure
  7796 000051CE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7797 000051D2 48C74009[DF510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  7798 000051DA E9B9010000              	jmp .L_lambda_simple_end_0033
  7799                                  .L_lambda_simple_code_0033:	; lambda-simple body
  7800 000051DF 48837C241003            	cmp qword [rsp + 8 * 2], 3
  7801 000051E5 740B                    	je .L_lambda_simple_arity_check_ok_0033
  7802 000051E7 FF742410                	push qword [rsp + 8 * 2]
  7803 000051EB 6A03                    	push 3
  7804 000051ED E9F6620000              	jmp L_error_incorrect_arity_simple
  7805                                  .L_lambda_simple_arity_check_ok_0033:
  7806 000051F2 C8000000                	enter 0, 0
  7807                                  	; preparing a non-tail-call
  7808 000051F6 488B4530                	mov rax, PARAM(2)	; param ss
  7809 000051FA 50                      	push rax
  7810 000051FB 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
  7811 00005203 803805                  	cmp byte [rax], T_undefined
  7812 00005206 0F84F6610000            	je L_error_fvar_undefined
  7813 0000520C 50                      	push rax
  7814 0000520D 6A02                    	push 2	; arg count
  7815 0000520F 488B0425[99100000]      	mov rax, qword [free_var_90]	; free var ormap
  7816 00005217 803805                  	cmp byte [rax], T_undefined
  7817 0000521A 0F84E2610000            	je L_error_fvar_undefined
  7818 00005220 803804                  	cmp byte [rax], T_closure
  7819 00005223 0F855D620000            	jne L_error_non_closure
  7820 00005229 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7821 0000522C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7822 0000522F 483D[02000000]          	cmp rax, sob_boolean_false
  7823 00005235 7409                    	je .L_if_else_0010
  7824 00005237 488B4528                	mov rax, PARAM(1)	; param unit
  7825 0000523B E954010000              	jmp .L_if_end_0010
  7826                                  .L_if_else_0010:
  7827                                  	; preparing a tail-call
  7828                                  	; preparing a non-tail-call
  7829                                  	; preparing a non-tail-call
  7830 00005240 48B8-                   	mov rax, L_constants + 1
  7830 00005242 [0100000000000000] 
  7831 0000524A 50                      	push rax
  7832                                  	; preparing a non-tail-call
  7833                                  	; preparing a non-tail-call
  7834 0000524B 488B4530                	mov rax, PARAM(2)	; param ss
  7835 0000524F 50                      	push rax
  7836 00005250 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
  7837 00005258 803805                  	cmp byte [rax], T_undefined
  7838 0000525B 0F84A1610000            	je L_error_fvar_undefined
  7839 00005261 50                      	push rax
  7840 00005262 6A02                    	push 2	; arg count
  7841 00005264 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  7842 0000526C 803805                  	cmp byte [rax], T_undefined
  7843 0000526F 0F848D610000            	je L_error_fvar_undefined
  7844 00005275 803804                  	cmp byte [rax], T_closure
  7845 00005278 0F8508620000            	jne L_error_non_closure
  7846 0000527E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7847 00005281 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7848 00005284 50                      	push rax
  7849 00005285 488B4528                	mov rax, PARAM(1)	; param unit
  7850 00005289 50                      	push rax
  7851 0000528A 488B4520                	mov rax, PARAM(0)	; param f
  7852 0000528E 50                      	push rax
  7853 0000528F 6A03                    	push 3	; arg count
  7854 00005291 488B4510                	mov rax, ENV
  7855 00005295 488B00                  	mov rax, qword [rax + 8 * 0]
  7856 00005298 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  7857 0000529B 488B00                  	mov rax, qword [rax]
  7858 0000529E 803804                  	cmp byte [rax], T_closure
  7859 000052A1 0F85DF610000            	jne L_error_non_closure
  7860 000052A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7861 000052AA FF5009                  	call SOB_CLOSURE_CODE(rax)
  7862 000052AD 50                      	push rax
  7863 000052AE 6A02                    	push 2	; arg count
  7864 000052B0 488B0425[780F0000]      	mov rax, qword [free_var_73]	; free var cons
  7865 000052B8 803805                  	cmp byte [rax], T_undefined
  7866 000052BB 0F8441610000            	je L_error_fvar_undefined
  7867 000052C1 803804                  	cmp byte [rax], T_closure
  7868 000052C4 0F85BC610000            	jne L_error_non_closure
  7869 000052CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7870 000052CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7871 000052D0 50                      	push rax
  7872                                  	; preparing a non-tail-call
  7873 000052D1 488B4530                	mov rax, PARAM(2)	; param ss
  7874 000052D5 50                      	push rax
  7875 000052D6 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
  7876 000052DE 803805                  	cmp byte [rax], T_undefined
  7877 000052E1 0F841B610000            	je L_error_fvar_undefined
  7878 000052E7 50                      	push rax
  7879 000052E8 6A02                    	push 2	; arg count
  7880 000052EA 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
  7881 000052F2 803805                  	cmp byte [rax], T_undefined
  7882 000052F5 0F8407610000            	je L_error_fvar_undefined
  7883 000052FB 803804                  	cmp byte [rax], T_closure
  7884 000052FE 0F8582610000            	jne L_error_non_closure
  7885 00005304 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7886 00005307 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7887 0000530A 50                      	push rax
  7888 0000530B 6A02                    	push 2	; arg count
  7889 0000530D 488B0425[AE0C0000]      	mov rax, qword [free_var_31]	; free var append
  7890 00005315 803805                  	cmp byte [rax], T_undefined
  7891 00005318 0F84E4600000            	je L_error_fvar_undefined
  7892 0000531E 803804                  	cmp byte [rax], T_closure
  7893 00005321 0F855F610000            	jne L_error_non_closure
  7894 00005327 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7895 0000532A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7896 0000532D 50                      	push rax
  7897 0000532E 488B4520                	mov rax, PARAM(0)	; param f
  7898 00005332 50                      	push rax
  7899 00005333 6A02                    	push 2	; arg count
  7900 00005335 488B0425[BF0C0000]      	mov rax, qword [free_var_32]	; free var apply
  7901 0000533D 803805                  	cmp byte [rax], T_undefined
  7902 00005340 0F84BC600000            	je L_error_fvar_undefined
  7903 00005346 803804                  	cmp byte [rax], T_closure
  7904 00005349 0F8537610000            	jne L_error_non_closure
  7905 0000534F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7906 00005352 FF7508                  	push qword [rbp + 8 * 1]
  7907                                   ; old ret addr
  7908 00005355 FF7500                  	push qword [rbp]
  7909                                   ; restore the old rbp
  7910 00005358 BB02000000              	mov rbx, 2
  7911 0000535D 4883C303                	add rbx, 3
  7912 00005361 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7913 00005365 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7914 0000536A 4C8D4DF8                	lea r9, [rbp - 8]
  7915 0000536E B906000000              	mov rcx, 6
  7916                                  .L_tc_recycle_frame_loop_0033:
  7917 00005373 4883F900                	cmp rcx, 0
  7918 00005377 7413                    	je .L_tc_recycle_frame_done_0033
  7919 00005379 4D8B11                  	mov r10, qword [r9]
  7920 0000537C 4D8910                  	mov qword [r8], r10
  7921 0000537F 4983E808                	sub r8, 8
  7922 00005383 4983E908                	sub r9, 8
  7923 00005387 48FFC9                  	dec rcx
  7924 0000538A EBE7                    	jmp .L_tc_recycle_frame_loop_0033
  7925                                  .L_tc_recycle_frame_done_0033:
  7926 0000538C 498D6008                	lea rsp, [r8 + 8]
  7927 00005390 5D                      	pop rbp ; restore the old rbp
  7928 00005391 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7929                                  .L_if_end_0010:
  7930 00005394 C9                      	leave
  7931 00005395 C22800                  	ret AND_KILL_FRAME(3)
  7932                                  .L_lambda_simple_end_0033:	; new closure is in rax
  7933 00005398 50                      	push rax
  7934 00005399 488B4520                	mov rax, PARAM(0)	; param run
  7935 0000539D 8F00                    	pop qword [rax]
  7936 0000539F 48B8-                   	mov rax, sob_void
  7936 000053A1 [0000000000000000] 
  7937                                  
  7938 000053A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7939 000053AE E87C610000              	call malloc
  7940 000053B3 50                      	push rax
  7941 000053B4 BF10000000              	mov rdi, 8 * 2	; new rib
  7942 000053B9 E871610000              	call malloc
  7943 000053BE 50                      	push rax
  7944 000053BF BF10000000              	mov rdi, 8 * 2	; extended env
  7945 000053C4 E866610000              	call malloc
  7946 000053C9 488B7D10                	mov rdi, ENV
  7947 000053CD BE00000000              	mov rsi, 0
  7948 000053D2 BA01000000              	mov rdx, 1
  7949                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  7950 000053D7 4883FE01                	cmp rsi, 1
  7951 000053DB 7410                    	je .L_lambda_opt_env_end_0009
  7952 000053DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7953 000053E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7954 000053E5 48FFC6                  	inc rsi
  7955 000053E8 48FFC2                  	inc rdx
  7956 000053EB EBEA                    	jmp .L_lambda_opt_env_loop_0009
  7957                                  .L_lambda_opt_env_end_0009:
  7958 000053ED 5B                      	pop rbx
  7959 000053EE BE00000000              	mov rsi, 0
  7960                                  .L_lambda_opt_params_loop_0009:	; copy params
  7961 000053F3 4883FE01                	cmp rsi, 1
  7962 000053F7 740E                    	je .L_lambda_opt_params_end_0009
  7963 000053F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7964 000053FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7965 00005402 48FFC6                  	inc rsi
  7966 00005405 EBEC                    	jmp .L_lambda_opt_params_loop_0009
  7967                                  .L_lambda_opt_params_end_0009:
  7968 00005407 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7969 0000540A 4889C3                  	mov rbx, rax
  7970 0000540D 58                      	pop rax
  7971 0000540E C60004                  	mov byte [rax], T_closure
  7972 00005411 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7973 00005415 48C74009[22540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  7974 0000541D E9FD000000              	jmp .L_lambda_opt_end_0009
  7975                                  .L_lambda_opt_code_0009:	; lambda-opt body
  7976 00005422 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7977 00005428 745E                    	je .L_lambda_opt_arity_check_exact_0009
  7978 0000542A 7F0B                    	jg .L_lambda_opt_arity_check_more_0009
  7979 0000542C FF742410                	push qword [rsp + 8 * 2]
  7980 00005430 6A02                    	push 2
  7981 00005432 E9B1600000              	jmp L_error_incorrect_arity_simple
  7982                                  .L_lambda_opt_arity_check_more_0009:
  7983 00005437 53                      push rbx
  7984 00005438 51                      push rcx
  7985 00005439 488B4D10                mov rcx, [rbp + 8*2]
  7986 0000543D BB02000000              mov rbx , 2
  7987 00005442 4829D9                  sub rcx, rbx
  7988 00005445 48FFC3                  inc rbx
  7989 00005448 48895D10                mov [rbp + 8*2], rbx
  7990 0000544C 4889CF                  	 mov rdi, rcx 
  7991 0000544F 48C1E703                	 shl rdi, 3 
  7992 00005453 E8D7600000              	call malloc
  7993 00005458 50                      	push rax
  7994 00005459 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  7995 0000545E 4831FF                  xor rdi, rdi
  7996                                  .L_lambda_opt_stack_shrink_loop_0009:
  7997 00005461 4839CF                  	cmp rdi, rcx
  7998 00005464 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_0009
  7999 00005466 488904FC                mov [rsp + rdi*8], rax
  8000 0000546A 48FFC7                  	inc rdi
  8001 0000546D 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  8002 00005475 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  8003 0000547A 498B04D9                mov rax,[r9 + rbx*8] 
  8004 0000547E EBE1                    jmp .L_lambda_opt_stack_shrink_loop_0009
  8005                                  .L_lambda_opt_stack_shrink_loop_exit_0009:
  8006 00005480 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  8007 00005484 5B                      pop rbx
  8008 00005485 53                      push rbx
  8009 00005486 EB16                    jmp .L_lambda_opt_stack_adjusted_0009
  8010                                  .L_lambda_opt_arity_check_exact_0009:
  8011 00005488 48B8-                   	mov rax, L_constants + 1
  8011 0000548A [0100000000000000] 
  8012 00005492 53                      push rbx
  8013 00005493 488B5C2410              mov rbx , [rsp + 8*2]
  8014 00005498 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  8015 0000549D 5B                      pop rbx
  8016                                  .L_lambda_opt_stack_adjusted_0009:	; new closure is in rax
  8017 0000549E C8000000                	enter 0, 0
  8018                                  	; preparing a tail-call
  8019 000054A2 488B0425[10110000]      	mov rax, qword [free_var_97]	; free var ss
  8020 000054AA 803805                  	cmp byte [rax], T_undefined
  8021 000054AD 0F844F5F0000            	je L_error_fvar_undefined
  8022 000054B3 50                      	push rax
  8023 000054B4 488B4528                	mov rax, PARAM(1)	; param unit
  8024 000054B8 50                      	push rax
  8025 000054B9 488B4520                	mov rax, PARAM(0)	; param f
  8026 000054BD 50                      	push rax
  8027 000054BE 6A03                    	push 3	; arg count
  8028 000054C0 488B4510                	mov rax, ENV
  8029 000054C4 488B00                  	mov rax, qword [rax + 8 * 0]
  8030 000054C7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8031 000054CA 488B00                  	mov rax, qword [rax]
  8032 000054CD 803804                  	cmp byte [rax], T_closure
  8033 000054D0 0F85B05F0000            	jne L_error_non_closure
  8034 000054D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8035 000054D9 FF7508                  	push qword [rbp + 8 * 1]
  8036                                   ; old ret addr
  8037 000054DC FF7500                  	push qword [rbp]
  8038                                   ; restore the old rbp
  8039 000054DF BB03000000              	mov rbx, 3
  8040 000054E4 4883C303                	add rbx, 3
  8041 000054E8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8042 000054EC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8043 000054F1 4C8D4DF8                	lea r9, [rbp - 8]
  8044 000054F5 B907000000              	mov rcx, 7
  8045                                  .L_tc_recycle_frame_loop_0034:
  8046 000054FA 4883F900                	cmp rcx, 0
  8047 000054FE 7413                    	je .L_tc_recycle_frame_done_0034
  8048 00005500 4D8B11                  	mov r10, qword [r9]
  8049 00005503 4D8910                  	mov qword [r8], r10
  8050 00005506 4983E808                	sub r8, 8
  8051 0000550A 4983E908                	sub r9, 8
  8052 0000550E 48FFC9                  	dec rcx
  8053 00005511 EBE7                    	jmp .L_tc_recycle_frame_loop_0034
  8054                                  .L_tc_recycle_frame_done_0034:
  8055 00005513 498D6008                	lea rsp, [r8 + 8]
  8056 00005517 5D                      	pop rbp ; restore the old rbp
  8057 00005518 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8058 0000551B C9                      	leave
  8059 0000551C C22000                  	ret AND_KILL_FRAME(2)
  8060                                  .L_lambda_opt_end_0009:	; new closure is in rax
  8061 0000551F C9                      	leave
  8062 00005520 C21800                  	ret AND_KILL_FRAME(1)
  8063                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8064 00005523 803804                  	cmp byte [rax], T_closure
  8065 00005526 0F855A5F0000            	jne L_error_non_closure
  8066 0000552C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8067 0000552F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8068 00005532 48890425[BC0F0000]      	mov qword [free_var_77], rax
  8069 0000553A 48B8-                   	mov rax, sob_void
  8069 0000553C [0000000000000000] 
  8070                                  
  8071 00005544 4889C7                  	mov rdi, rax
  8072 00005547 E838620000              	call print_sexpr_if_not_void
  8073                                  	; preparing a non-tail-call
  8074 0000554C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8075 00005551 E8D95F0000              	call malloc
  8076 00005556 50                      	push rax
  8077 00005557 BF00000000              	mov rdi, 8 * 0	; new rib
  8078 0000555C E8CE5F0000              	call malloc
  8079 00005561 50                      	push rax
  8080 00005562 BF08000000              	mov rdi, 8 * 1	; extended env
  8081 00005567 E8C35F0000              	call malloc
  8082 0000556C 488B7D10                	mov rdi, ENV
  8083 00005570 BE00000000              	mov rsi, 0
  8084 00005575 BA01000000              	mov rdx, 1
  8085                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8086 0000557A 4883FE00                	cmp rsi, 0
  8087 0000557E 7410                    	je .L_lambda_simple_env_end_0034
  8088 00005580 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8089 00005584 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8090 00005588 48FFC6                  	inc rsi
  8091 0000558B 48FFC2                  	inc rdx
  8092 0000558E EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8093                                  .L_lambda_simple_env_end_0034:
  8094 00005590 5B                      	pop rbx
  8095 00005591 BE00000000              	mov rsi, 0
  8096                                  .L_lambda_simple_params_loop_0034:	; copy params
  8097 00005596 4883FE00                	cmp rsi, 0
  8098 0000559A 740E                    	je .L_lambda_simple_params_end_0034
  8099 0000559C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8100 000055A1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8101 000055A5 48FFC6                  	inc rsi
  8102 000055A8 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8103                                  .L_lambda_simple_params_end_0034:
  8104 000055AA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8105 000055AD 4889C3                  	mov rbx, rax
  8106 000055B0 58                      	pop rax
  8107 000055B1 C60004                  	mov byte [rax], T_closure
  8108 000055B4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8109 000055B8 48C74009[C5550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8110 000055C0 E992000000              	jmp .L_lambda_simple_end_0034
  8111                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8112 000055C5 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8113 000055CB 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8114 000055CD FF742410                	push qword [rsp + 8 * 2]
  8115 000055D1 6A00                    	push 0
  8116 000055D3 E9105F0000              	jmp L_error_incorrect_arity_simple
  8117                                  .L_lambda_simple_arity_check_ok_0034:
  8118 000055D8 C8000000                	enter 0, 0
  8119                                  	; preparing a tail-call
  8120 000055DC 48B8-                   	mov rax, L_constants + 2221
  8120 000055DE [AD08000000000000] 
  8121 000055E6 50                      	push rax
  8122 000055E7 48B8-                   	mov rax, L_constants + 2212
  8122 000055E9 [A408000000000000] 
  8123 000055F1 50                      	push rax
  8124 000055F2 6A02                    	push 2	; arg count
  8125 000055F4 488B0425[890F0000]      	mov rax, qword [free_var_74]	; free var error
  8126 000055FC 803805                  	cmp byte [rax], T_undefined
  8127 000055FF 0F84FD5D0000            	je L_error_fvar_undefined
  8128 00005605 803804                  	cmp byte [rax], T_closure
  8129 00005608 0F85785E0000            	jne L_error_non_closure
  8130 0000560E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8131 00005611 FF7508                  	push qword [rbp + 8 * 1]
  8132                                   ; old ret addr
  8133 00005614 FF7500                  	push qword [rbp]
  8134                                   ; restore the old rbp
  8135 00005617 BB02000000              	mov rbx, 2
  8136 0000561C 4883C303                	add rbx, 3
  8137 00005620 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8138 00005624 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8139 00005629 4C8D4DF8                	lea r9, [rbp - 8]
  8140 0000562D B906000000              	mov rcx, 6
  8141                                  .L_tc_recycle_frame_loop_0035:
  8142 00005632 4883F900                	cmp rcx, 0
  8143 00005636 7413                    	je .L_tc_recycle_frame_done_0035
  8144 00005638 4D8B11                  	mov r10, qword [r9]
  8145 0000563B 4D8910                  	mov qword [r8], r10
  8146 0000563E 4983E808                	sub r8, 8
  8147 00005642 4983E908                	sub r9, 8
  8148 00005646 48FFC9                  	dec rcx
  8149 00005649 EBE7                    	jmp .L_tc_recycle_frame_loop_0035
  8150                                  .L_tc_recycle_frame_done_0035:
  8151 0000564B 498D6008                	lea rsp, [r8 + 8]
  8152 0000564F 5D                      	pop rbp ; restore the old rbp
  8153 00005650 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8154 00005653 C9                      	leave
  8155 00005654 C21000                  	ret AND_KILL_FRAME(0)
  8156                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8157 00005657 50                      	push rax
  8158 00005658 6A01                    	push 1	; arg count
  8159 0000565A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8160 0000565F E8CB5E0000              	call malloc
  8161 00005664 50                      	push rax
  8162 00005665 BF00000000              	mov rdi, 8 * 0	; new rib
  8163 0000566A E8C05E0000              	call malloc
  8164 0000566F 50                      	push rax
  8165 00005670 BF08000000              	mov rdi, 8 * 1	; extended env
  8166 00005675 E8B55E0000              	call malloc
  8167 0000567A 488B7D10                	mov rdi, ENV
  8168 0000567E BE00000000              	mov rsi, 0
  8169 00005683 BA01000000              	mov rdx, 1
  8170                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8171 00005688 4883FE00                	cmp rsi, 0
  8172 0000568C 7410                    	je .L_lambda_simple_env_end_0035
  8173 0000568E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8174 00005692 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8175 00005696 48FFC6                  	inc rsi
  8176 00005699 48FFC2                  	inc rdx
  8177 0000569C EBEA                    	jmp .L_lambda_simple_env_loop_0035
  8178                                  .L_lambda_simple_env_end_0035:
  8179 0000569E 5B                      	pop rbx
  8180 0000569F BE00000000              	mov rsi, 0
  8181                                  .L_lambda_simple_params_loop_0035:	; copy params
  8182 000056A4 4883FE00                	cmp rsi, 0
  8183 000056A8 740E                    	je .L_lambda_simple_params_end_0035
  8184 000056AA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8185 000056AF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8186 000056B3 48FFC6                  	inc rsi
  8187 000056B6 EBEC                    	jmp .L_lambda_simple_params_loop_0035
  8188                                  .L_lambda_simple_params_end_0035:
  8189 000056B8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8190 000056BB 4889C3                  	mov rbx, rax
  8191 000056BE 58                      	pop rax
  8192 000056BF C60004                  	mov byte [rax], T_closure
  8193 000056C2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8194 000056C6 48C74009[D3560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  8195 000056CE E99F0B0000              	jmp .L_lambda_simple_end_0035
  8196                                  .L_lambda_simple_code_0035:	; lambda-simple body
  8197 000056D3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8198 000056D9 740B                    	je .L_lambda_simple_arity_check_ok_0035
  8199 000056DB FF742410                	push qword [rsp + 8 * 2]
  8200 000056DF 6A01                    	push 1
  8201 000056E1 E9025E0000              	jmp L_error_incorrect_arity_simple
  8202                                  .L_lambda_simple_arity_check_ok_0035:
  8203 000056E6 C8000000                	enter 0, 0
  8204                                  	; preparing a tail-call
  8205 000056EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8206 000056EF E83B5E0000              	call malloc
  8207 000056F4 50                      	push rax
  8208 000056F5 BF08000000              	mov rdi, 8 * 1	; new rib
  8209 000056FA E8305E0000              	call malloc
  8210 000056FF 50                      	push rax
  8211 00005700 BF10000000              	mov rdi, 8 * 2	; extended env
  8212 00005705 E8255E0000              	call malloc
  8213 0000570A 488B7D10                	mov rdi, ENV
  8214 0000570E BE00000000              	mov rsi, 0
  8215 00005713 BA01000000              	mov rdx, 1
  8216                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  8217 00005718 4883FE01                	cmp rsi, 1
  8218 0000571C 7410                    	je .L_lambda_simple_env_end_0036
  8219 0000571E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8220 00005722 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8221 00005726 48FFC6                  	inc rsi
  8222 00005729 48FFC2                  	inc rdx
  8223 0000572C EBEA                    	jmp .L_lambda_simple_env_loop_0036
  8224                                  .L_lambda_simple_env_end_0036:
  8225 0000572E 5B                      	pop rbx
  8226 0000572F BE00000000              	mov rsi, 0
  8227                                  .L_lambda_simple_params_loop_0036:	; copy params
  8228 00005734 4883FE01                	cmp rsi, 1
  8229 00005738 740E                    	je .L_lambda_simple_params_end_0036
  8230 0000573A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8231 0000573F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8232 00005743 48FFC6                  	inc rsi
  8233 00005746 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  8234                                  .L_lambda_simple_params_end_0036:
  8235 00005748 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8236 0000574B 4889C3                  	mov rbx, rax
  8237 0000574E 58                      	pop rax
  8238 0000574F C60004                  	mov byte [rax], T_closure
  8239 00005752 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8240 00005756 48C74009[63570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  8241 0000575E E9A0080000              	jmp .L_lambda_simple_end_0036
  8242                                  .L_lambda_simple_code_0036:	; lambda-simple body
  8243 00005763 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8244 00005769 740B                    	je .L_lambda_simple_arity_check_ok_0036
  8245 0000576B FF742410                	push qword [rsp + 8 * 2]
  8246 0000576F 6A02                    	push 2
  8247 00005771 E9725D0000              	jmp L_error_incorrect_arity_simple
  8248                                  .L_lambda_simple_arity_check_ok_0036:
  8249 00005776 C8000000                	enter 0, 0
  8250                                  	; preparing a non-tail-call
  8251 0000577A 488B4520                	mov rax, PARAM(0)	; param a
  8252 0000577E 50                      	push rax
  8253 0000577F 6A01                    	push 1	; arg count
  8254 00005781 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  8255 00005789 803805                  	cmp byte [rax], T_undefined
  8256 0000578C 0F84705C0000            	je L_error_fvar_undefined
  8257 00005792 803804                  	cmp byte [rax], T_closure
  8258 00005795 0F85EB5C0000            	jne L_error_non_closure
  8259 0000579B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8260 0000579E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8261 000057A1 483D[02000000]          	cmp rax, sob_boolean_false
  8262 000057A7 0F8487020000            	je .L_if_else_001c
  8263                                  	; preparing a non-tail-call
  8264 000057AD 488B4528                	mov rax, PARAM(1)	; param b
  8265 000057B1 50                      	push rax
  8266 000057B2 6A01                    	push 1	; arg count
  8267 000057B4 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  8268 000057BC 803805                  	cmp byte [rax], T_undefined
  8269 000057BF 0F843D5C0000            	je L_error_fvar_undefined
  8270 000057C5 803804                  	cmp byte [rax], T_closure
  8271 000057C8 0F85B85C0000            	jne L_error_non_closure
  8272 000057CE FF7001                  	push SOB_CLOSURE_ENV(rax)
  8273 000057D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8274 000057D4 483D[02000000]          	cmp rax, sob_boolean_false
  8275 000057DA 7470                    	je .L_if_else_0013
  8276                                  	; preparing a tail-call
  8277 000057DC 488B4528                	mov rax, PARAM(1)	; param b
  8278 000057E0 50                      	push rax
  8279 000057E1 488B4520                	mov rax, PARAM(0)	; param a
  8280 000057E5 50                      	push rax
  8281 000057E6 6A02                    	push 2	; arg count
  8282 000057E8 488B0425[5A0B0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  8283 000057F0 803805                  	cmp byte [rax], T_undefined
  8284 000057F3 0F84095C0000            	je L_error_fvar_undefined
  8285 000057F9 803804                  	cmp byte [rax], T_closure
  8286 000057FC 0F85845C0000            	jne L_error_non_closure
  8287 00005802 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8288 00005805 FF7508                  	push qword [rbp + 8 * 1]
  8289                                   ; old ret addr
  8290 00005808 FF7500                  	push qword [rbp]
  8291                                   ; restore the old rbp
  8292 0000580B BB02000000              	mov rbx, 2
  8293 00005810 4883C303                	add rbx, 3
  8294 00005814 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8295 00005818 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8296 0000581D 4C8D4DF8                	lea r9, [rbp - 8]
  8297 00005821 B906000000              	mov rcx, 6
  8298                                  .L_tc_recycle_frame_loop_0037:
  8299 00005826 4883F900                	cmp rcx, 0
  8300 0000582A 7413                    	je .L_tc_recycle_frame_done_0037
  8301 0000582C 4D8B11                  	mov r10, qword [r9]
  8302 0000582F 4D8910                  	mov qword [r8], r10
  8303 00005832 4983E808                	sub r8, 8
  8304 00005836 4983E908                	sub r9, 8
  8305 0000583A 48FFC9                  	dec rcx
  8306 0000583D EBE7                    	jmp .L_tc_recycle_frame_loop_0037
  8307                                  .L_tc_recycle_frame_done_0037:
  8308 0000583F 498D6008                	lea rsp, [r8 + 8]
  8309 00005843 5D                      	pop rbp ; restore the old rbp
  8310 00005844 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8311 00005847 E9E3010000              	jmp .L_if_end_0013
  8312                                  .L_if_else_0013:
  8313                                  	; preparing a non-tail-call
  8314 0000584C 488B4528                	mov rax, PARAM(1)	; param b
  8315 00005850 50                      	push rax
  8316 00005851 6A01                    	push 1	; arg count
  8317 00005853 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  8318 0000585B 803805                  	cmp byte [rax], T_undefined
  8319 0000585E 0F849E5B0000            	je L_error_fvar_undefined
  8320 00005864 803804                  	cmp byte [rax], T_closure
  8321 00005867 0F85195C0000            	jne L_error_non_closure
  8322 0000586D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8323 00005870 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8324 00005873 483D[02000000]          	cmp rax, sob_boolean_false
  8325 00005879 0F8493000000            	je .L_if_else_0012
  8326                                  	; preparing a tail-call
  8327 0000587F 488B4528                	mov rax, PARAM(1)	; param b
  8328 00005883 50                      	push rax
  8329                                  	; preparing a non-tail-call
  8330 00005884 488B4520                	mov rax, PARAM(0)	; param a
  8331 00005888 50                      	push rax
  8332 00005889 6A01                    	push 1	; arg count
  8333 0000588B 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  8334 00005893 803805                  	cmp byte [rax], T_undefined
  8335 00005896 0F84665B0000            	je L_error_fvar_undefined
  8336 0000589C 803804                  	cmp byte [rax], T_closure
  8337 0000589F 0F85E15B0000            	jne L_error_non_closure
  8338 000058A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8339 000058A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8340 000058AB 50                      	push rax
  8341 000058AC 6A02                    	push 2	; arg count
  8342 000058AE 488B0425[380B0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8343 000058B6 803805                  	cmp byte [rax], T_undefined
  8344 000058B9 0F84435B0000            	je L_error_fvar_undefined
  8345 000058BF 803804                  	cmp byte [rax], T_closure
  8346 000058C2 0F85BE5B0000            	jne L_error_non_closure
  8347 000058C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8348 000058CB FF7508                  	push qword [rbp + 8 * 1]
  8349                                   ; old ret addr
  8350 000058CE FF7500                  	push qword [rbp]
  8351                                   ; restore the old rbp
  8352 000058D1 BB02000000              	mov rbx, 2
  8353 000058D6 4883C303                	add rbx, 3
  8354 000058DA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8355 000058DE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8356 000058E3 4C8D4DF8                	lea r9, [rbp - 8]
  8357 000058E7 B906000000              	mov rcx, 6
  8358                                  .L_tc_recycle_frame_loop_0038:
  8359 000058EC 4883F900                	cmp rcx, 0
  8360 000058F0 7413                    	je .L_tc_recycle_frame_done_0038
  8361 000058F2 4D8B11                  	mov r10, qword [r9]
  8362 000058F5 4D8910                  	mov qword [r8], r10
  8363 000058F8 4983E808                	sub r8, 8
  8364 000058FC 4983E908                	sub r9, 8
  8365 00005900 48FFC9                  	dec rcx
  8366 00005903 EBE7                    	jmp .L_tc_recycle_frame_loop_0038
  8367                                  .L_tc_recycle_frame_done_0038:
  8368 00005905 498D6008                	lea rsp, [r8 + 8]
  8369 00005909 5D                      	pop rbp ; restore the old rbp
  8370 0000590A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8371 0000590D E91D010000              	jmp .L_if_end_0012
  8372                                  .L_if_else_0012:
  8373                                  	; preparing a non-tail-call
  8374 00005912 488B4528                	mov rax, PARAM(1)	; param b
  8375 00005916 50                      	push rax
  8376 00005917 6A01                    	push 1	; arg count
  8377 00005919 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  8378 00005921 803805                  	cmp byte [rax], T_undefined
  8379 00005924 0F84D85A0000            	je L_error_fvar_undefined
  8380 0000592A 803804                  	cmp byte [rax], T_closure
  8381 0000592D 0F85535B0000            	jne L_error_non_closure
  8382 00005933 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8383 00005936 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8384 00005939 483D[02000000]          	cmp rax, sob_boolean_false
  8385 0000593F 0F8490000000            	je .L_if_else_0011
  8386                                  	; preparing a tail-call
  8387 00005945 488B4528                	mov rax, PARAM(1)	; param b
  8388 00005949 50                      	push rax
  8389                                  	; preparing a non-tail-call
  8390 0000594A 488B4520                	mov rax, PARAM(0)	; param a
  8391 0000594E 50                      	push rax
  8392 0000594F 6A01                    	push 1	; arg count
  8393 00005951 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
  8394 00005959 803805                  	cmp byte [rax], T_undefined
  8395 0000595C 0F84A05A0000            	je L_error_fvar_undefined
  8396 00005962 803804                  	cmp byte [rax], T_closure
  8397 00005965 0F851B5B0000            	jne L_error_non_closure
  8398 0000596B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8399 0000596E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8400 00005971 50                      	push rax
  8401 00005972 6A02                    	push 2	; arg count
  8402 00005974 488B0425[490B0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8403 0000597C 803805                  	cmp byte [rax], T_undefined
  8404 0000597F 0F847D5A0000            	je L_error_fvar_undefined
  8405 00005985 803804                  	cmp byte [rax], T_closure
  8406 00005988 0F85F85A0000            	jne L_error_non_closure
  8407 0000598E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8408 00005991 FF7508                  	push qword [rbp + 8 * 1]
  8409                                   ; old ret addr
  8410 00005994 FF7500                  	push qword [rbp]
  8411                                   ; restore the old rbp
  8412 00005997 BB02000000              	mov rbx, 2
  8413 0000599C 4883C303                	add rbx, 3
  8414 000059A0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8415 000059A4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8416 000059A9 4C8D4DF8                	lea r9, [rbp - 8]
  8417 000059AD B906000000              	mov rcx, 6
  8418                                  .L_tc_recycle_frame_loop_0039:
  8419 000059B2 4883F900                	cmp rcx, 0
  8420 000059B6 7413                    	je .L_tc_recycle_frame_done_0039
  8421 000059B8 4D8B11                  	mov r10, qword [r9]
  8422 000059BB 4D8910                  	mov qword [r8], r10
  8423 000059BE 4983E808                	sub r8, 8
  8424 000059C2 4983E908                	sub r9, 8
  8425 000059C6 48FFC9                  	dec rcx
  8426 000059C9 EBE7                    	jmp .L_tc_recycle_frame_loop_0039
  8427                                  .L_tc_recycle_frame_done_0039:
  8428 000059CB 498D6008                	lea rsp, [r8 + 8]
  8429 000059CF 5D                      	pop rbp ; restore the old rbp
  8430 000059D0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8431 000059D3 EB5A                    	jmp .L_if_end_0011
  8432                                  .L_if_else_0011:
  8433                                  	; preparing a tail-call
  8434 000059D5 6A00                    	push 0	; arg count
  8435 000059D7 488B4510                	mov rax, ENV
  8436 000059DB 488B00                  	mov rax, qword [rax + 8 * 0]
  8437 000059DE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8438 000059E1 803804                  	cmp byte [rax], T_closure
  8439 000059E4 0F859C5A0000            	jne L_error_non_closure
  8440 000059EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8441 000059ED FF7508                  	push qword [rbp + 8 * 1]
  8442                                   ; old ret addr
  8443 000059F0 FF7500                  	push qword [rbp]
  8444                                   ; restore the old rbp
  8445 000059F3 BB00000000              	mov rbx, 0
  8446 000059F8 4883C303                	add rbx, 3
  8447 000059FC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8448 00005A00 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8449 00005A05 4C8D4DF8                	lea r9, [rbp - 8]
  8450 00005A09 B904000000              	mov rcx, 4
  8451                                  .L_tc_recycle_frame_loop_003a:
  8452 00005A0E 4883F900                	cmp rcx, 0
  8453 00005A12 7413                    	je .L_tc_recycle_frame_done_003a
  8454 00005A14 4D8B11                  	mov r10, qword [r9]
  8455 00005A17 4D8910                  	mov qword [r8], r10
  8456 00005A1A 4983E808                	sub r8, 8
  8457 00005A1E 4983E908                	sub r9, 8
  8458 00005A22 48FFC9                  	dec rcx
  8459 00005A25 EBE7                    	jmp .L_tc_recycle_frame_loop_003a
  8460                                  .L_tc_recycle_frame_done_003a:
  8461 00005A27 498D6008                	lea rsp, [r8 + 8]
  8462 00005A2B 5D                      	pop rbp ; restore the old rbp
  8463 00005A2C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8464                                  .L_if_end_0011:
  8465                                  .L_if_end_0012:
  8466                                  .L_if_end_0013:
  8467 00005A2F E9CB050000              	jmp .L_if_end_001c
  8468                                  .L_if_else_001c:
  8469                                  	; preparing a non-tail-call
  8470 00005A34 488B4520                	mov rax, PARAM(0)	; param a
  8471 00005A38 50                      	push rax
  8472 00005A39 6A01                    	push 1	; arg count
  8473 00005A3B 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  8474 00005A43 803805                  	cmp byte [rax], T_undefined
  8475 00005A46 0F84B6590000            	je L_error_fvar_undefined
  8476 00005A4C 803804                  	cmp byte [rax], T_closure
  8477 00005A4F 0F85315A0000            	jne L_error_non_closure
  8478 00005A55 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8479 00005A58 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8480 00005A5B 483D[02000000]          	cmp rax, sob_boolean_false
  8481 00005A61 0F8487020000            	je .L_if_else_001b
  8482                                  	; preparing a non-tail-call
  8483 00005A67 488B4528                	mov rax, PARAM(1)	; param b
  8484 00005A6B 50                      	push rax
  8485 00005A6C 6A01                    	push 1	; arg count
  8486 00005A6E 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  8487 00005A76 803805                  	cmp byte [rax], T_undefined
  8488 00005A79 0F8483590000            	je L_error_fvar_undefined
  8489 00005A7F 803804                  	cmp byte [rax], T_closure
  8490 00005A82 0F85FE590000            	jne L_error_non_closure
  8491 00005A88 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8492 00005A8B FF5009                  	call SOB_CLOSURE_CODE(rax)
  8493 00005A8E 483D[02000000]          	cmp rax, sob_boolean_false
  8494 00005A94 0F8493000000            	je .L_if_else_0016
  8495                                  	; preparing a tail-call
  8496                                  	; preparing a non-tail-call
  8497 00005A9A 488B4528                	mov rax, PARAM(1)	; param b
  8498 00005A9E 50                      	push rax
  8499 00005A9F 6A01                    	push 1	; arg count
  8500 00005AA1 488B0425[7B0C0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  8501 00005AA9 803805                  	cmp byte [rax], T_undefined
  8502 00005AAC 0F8450590000            	je L_error_fvar_undefined
  8503 00005AB2 803804                  	cmp byte [rax], T_closure
  8504 00005AB5 0F85CB590000            	jne L_error_non_closure
  8505 00005ABB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8506 00005ABE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8507 00005AC1 50                      	push rax
  8508 00005AC2 488B4520                	mov rax, PARAM(0)	; param a
  8509 00005AC6 50                      	push rax
  8510 00005AC7 6A02                    	push 2	; arg count
  8511 00005AC9 488B0425[380B0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8512 00005AD1 803805                  	cmp byte [rax], T_undefined
  8513 00005AD4 0F8428590000            	je L_error_fvar_undefined
  8514 00005ADA 803804                  	cmp byte [rax], T_closure
  8515 00005ADD 0F85A3590000            	jne L_error_non_closure
  8516 00005AE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8517 00005AE6 FF7508                  	push qword [rbp + 8 * 1]
  8518                                   ; old ret addr
  8519 00005AE9 FF7500                  	push qword [rbp]
  8520                                   ; restore the old rbp
  8521 00005AEC BB02000000              	mov rbx, 2
  8522 00005AF1 4883C303                	add rbx, 3
  8523 00005AF5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8524 00005AF9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8525 00005AFE 4C8D4DF8                	lea r9, [rbp - 8]
  8526 00005B02 B906000000              	mov rcx, 6
  8527                                  .L_tc_recycle_frame_loop_003b:
  8528 00005B07 4883F900                	cmp rcx, 0
  8529 00005B0B 7413                    	je .L_tc_recycle_frame_done_003b
  8530 00005B0D 4D8B11                  	mov r10, qword [r9]
  8531 00005B10 4D8910                  	mov qword [r8], r10
  8532 00005B13 4983E808                	sub r8, 8
  8533 00005B17 4983E908                	sub r9, 8
  8534 00005B1B 48FFC9                  	dec rcx
  8535 00005B1E EBE7                    	jmp .L_tc_recycle_frame_loop_003b
  8536                                  .L_tc_recycle_frame_done_003b:
  8537 00005B20 498D6008                	lea rsp, [r8 + 8]
  8538 00005B24 5D                      	pop rbp ; restore the old rbp
  8539 00005B25 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8540 00005B28 E9BC010000              	jmp .L_if_end_0016
  8541                                  .L_if_else_0016:
  8542                                  	; preparing a non-tail-call
  8543 00005B2D 488B4528                	mov rax, PARAM(1)	; param b
  8544 00005B31 50                      	push rax
  8545 00005B32 6A01                    	push 1	; arg count
  8546 00005B34 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  8547 00005B3C 803805                  	cmp byte [rax], T_undefined
  8548 00005B3F 0F84BD580000            	je L_error_fvar_undefined
  8549 00005B45 803804                  	cmp byte [rax], T_closure
  8550 00005B48 0F8538590000            	jne L_error_non_closure
  8551 00005B4E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8552 00005B51 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8553 00005B54 483D[02000000]          	cmp rax, sob_boolean_false
  8554 00005B5A 7470                    	je .L_if_else_0015
  8555                                  	; preparing a tail-call
  8556 00005B5C 488B4528                	mov rax, PARAM(1)	; param b
  8557 00005B60 50                      	push rax
  8558 00005B61 488B4520                	mov rax, PARAM(0)	; param a
  8559 00005B65 50                      	push rax
  8560 00005B66 6A02                    	push 2	; arg count
  8561 00005B68 488B0425[380B0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8562 00005B70 803805                  	cmp byte [rax], T_undefined
  8563 00005B73 0F8489580000            	je L_error_fvar_undefined
  8564 00005B79 803804                  	cmp byte [rax], T_closure
  8565 00005B7C 0F8504590000            	jne L_error_non_closure
  8566 00005B82 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8567 00005B85 FF7508                  	push qword [rbp + 8 * 1]
  8568                                   ; old ret addr
  8569 00005B88 FF7500                  	push qword [rbp]
  8570                                   ; restore the old rbp
  8571 00005B8B BB02000000              	mov rbx, 2
  8572 00005B90 4883C303                	add rbx, 3
  8573 00005B94 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8574 00005B98 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8575 00005B9D 4C8D4DF8                	lea r9, [rbp - 8]
  8576 00005BA1 B906000000              	mov rcx, 6
  8577                                  .L_tc_recycle_frame_loop_003c:
  8578 00005BA6 4883F900                	cmp rcx, 0
  8579 00005BAA 7413                    	je .L_tc_recycle_frame_done_003c
  8580 00005BAC 4D8B11                  	mov r10, qword [r9]
  8581 00005BAF 4D8910                  	mov qword [r8], r10
  8582 00005BB2 4983E808                	sub r8, 8
  8583 00005BB6 4983E908                	sub r9, 8
  8584 00005BBA 48FFC9                  	dec rcx
  8585 00005BBD EBE7                    	jmp .L_tc_recycle_frame_loop_003c
  8586                                  .L_tc_recycle_frame_done_003c:
  8587 00005BBF 498D6008                	lea rsp, [r8 + 8]
  8588 00005BC3 5D                      	pop rbp ; restore the old rbp
  8589 00005BC4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8590 00005BC7 E91D010000              	jmp .L_if_end_0015
  8591                                  .L_if_else_0015:
  8592                                  	; preparing a non-tail-call
  8593 00005BCC 488B4528                	mov rax, PARAM(1)	; param b
  8594 00005BD0 50                      	push rax
  8595 00005BD1 6A01                    	push 1	; arg count
  8596 00005BD3 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  8597 00005BDB 803805                  	cmp byte [rax], T_undefined
  8598 00005BDE 0F841E580000            	je L_error_fvar_undefined
  8599 00005BE4 803804                  	cmp byte [rax], T_closure
  8600 00005BE7 0F8599580000            	jne L_error_non_closure
  8601 00005BED FF7001                  	push SOB_CLOSURE_ENV(rax)
  8602 00005BF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8603 00005BF3 483D[02000000]          	cmp rax, sob_boolean_false
  8604 00005BF9 0F8490000000            	je .L_if_else_0014
  8605                                  	; preparing a tail-call
  8606 00005BFF 488B4528                	mov rax, PARAM(1)	; param b
  8607 00005C03 50                      	push rax
  8608                                  	; preparing a non-tail-call
  8609 00005C04 488B4520                	mov rax, PARAM(0)	; param a
  8610 00005C08 50                      	push rax
  8611 00005C09 6A01                    	push 1	; arg count
  8612 00005C0B 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
  8613 00005C13 803805                  	cmp byte [rax], T_undefined
  8614 00005C16 0F84E6570000            	je L_error_fvar_undefined
  8615 00005C1C 803804                  	cmp byte [rax], T_closure
  8616 00005C1F 0F8561580000            	jne L_error_non_closure
  8617 00005C25 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8618 00005C28 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8619 00005C2B 50                      	push rax
  8620 00005C2C 6A02                    	push 2	; arg count
  8621 00005C2E 488B0425[490B0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8622 00005C36 803805                  	cmp byte [rax], T_undefined
  8623 00005C39 0F84C3570000            	je L_error_fvar_undefined
  8624 00005C3F 803804                  	cmp byte [rax], T_closure
  8625 00005C42 0F853E580000            	jne L_error_non_closure
  8626 00005C48 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8627 00005C4B FF7508                  	push qword [rbp + 8 * 1]
  8628                                   ; old ret addr
  8629 00005C4E FF7500                  	push qword [rbp]
  8630                                   ; restore the old rbp
  8631 00005C51 BB02000000              	mov rbx, 2
  8632 00005C56 4883C303                	add rbx, 3
  8633 00005C5A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8634 00005C5E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8635 00005C63 4C8D4DF8                	lea r9, [rbp - 8]
  8636 00005C67 B906000000              	mov rcx, 6
  8637                                  .L_tc_recycle_frame_loop_003d:
  8638 00005C6C 4883F900                	cmp rcx, 0
  8639 00005C70 7413                    	je .L_tc_recycle_frame_done_003d
  8640 00005C72 4D8B11                  	mov r10, qword [r9]
  8641 00005C75 4D8910                  	mov qword [r8], r10
  8642 00005C78 4983E808                	sub r8, 8
  8643 00005C7C 4983E908                	sub r9, 8
  8644 00005C80 48FFC9                  	dec rcx
  8645 00005C83 EBE7                    	jmp .L_tc_recycle_frame_loop_003d
  8646                                  .L_tc_recycle_frame_done_003d:
  8647 00005C85 498D6008                	lea rsp, [r8 + 8]
  8648 00005C89 5D                      	pop rbp ; restore the old rbp
  8649 00005C8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8650 00005C8D EB5A                    	jmp .L_if_end_0014
  8651                                  .L_if_else_0014:
  8652                                  	; preparing a tail-call
  8653 00005C8F 6A00                    	push 0	; arg count
  8654 00005C91 488B4510                	mov rax, ENV
  8655 00005C95 488B00                  	mov rax, qword [rax + 8 * 0]
  8656 00005C98 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8657 00005C9B 803804                  	cmp byte [rax], T_closure
  8658 00005C9E 0F85E2570000            	jne L_error_non_closure
  8659 00005CA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8660 00005CA7 FF7508                  	push qword [rbp + 8 * 1]
  8661                                   ; old ret addr
  8662 00005CAA FF7500                  	push qword [rbp]
  8663                                   ; restore the old rbp
  8664 00005CAD BB00000000              	mov rbx, 0
  8665 00005CB2 4883C303                	add rbx, 3
  8666 00005CB6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8667 00005CBA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8668 00005CBF 4C8D4DF8                	lea r9, [rbp - 8]
  8669 00005CC3 B904000000              	mov rcx, 4
  8670                                  .L_tc_recycle_frame_loop_003e:
  8671 00005CC8 4883F900                	cmp rcx, 0
  8672 00005CCC 7413                    	je .L_tc_recycle_frame_done_003e
  8673 00005CCE 4D8B11                  	mov r10, qword [r9]
  8674 00005CD1 4D8910                  	mov qword [r8], r10
  8675 00005CD4 4983E808                	sub r8, 8
  8676 00005CD8 4983E908                	sub r9, 8
  8677 00005CDC 48FFC9                  	dec rcx
  8678 00005CDF EBE7                    	jmp .L_tc_recycle_frame_loop_003e
  8679                                  .L_tc_recycle_frame_done_003e:
  8680 00005CE1 498D6008                	lea rsp, [r8 + 8]
  8681 00005CE5 5D                      	pop rbp ; restore the old rbp
  8682 00005CE6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8683                                  .L_if_end_0014:
  8684                                  .L_if_end_0015:
  8685                                  .L_if_end_0016:
  8686 00005CE9 E911030000              	jmp .L_if_end_001b
  8687                                  .L_if_else_001b:
  8688                                  	; preparing a non-tail-call
  8689 00005CEE 488B4520                	mov rax, PARAM(0)	; param a
  8690 00005CF2 50                      	push rax
  8691 00005CF3 6A01                    	push 1	; arg count
  8692 00005CF5 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  8693 00005CFD 803805                  	cmp byte [rax], T_undefined
  8694 00005D00 0F84FC560000            	je L_error_fvar_undefined
  8695 00005D06 803804                  	cmp byte [rax], T_closure
  8696 00005D09 0F8577570000            	jne L_error_non_closure
  8697 00005D0F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8698 00005D12 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8699 00005D15 483D[02000000]          	cmp rax, sob_boolean_false
  8700 00005D1B 0F8484020000            	je .L_if_else_001a
  8701                                  	; preparing a non-tail-call
  8702 00005D21 488B4528                	mov rax, PARAM(1)	; param b
  8703 00005D25 50                      	push rax
  8704 00005D26 6A01                    	push 1	; arg count
  8705 00005D28 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  8706 00005D30 803805                  	cmp byte [rax], T_undefined
  8707 00005D33 0F84C9560000            	je L_error_fvar_undefined
  8708 00005D39 803804                  	cmp byte [rax], T_closure
  8709 00005D3C 0F8544570000            	jne L_error_non_closure
  8710 00005D42 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8711 00005D45 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8712 00005D48 483D[02000000]          	cmp rax, sob_boolean_false
  8713 00005D4E 0F8493000000            	je .L_if_else_0019
  8714                                  	; preparing a tail-call
  8715                                  	; preparing a non-tail-call
  8716 00005D54 488B4528                	mov rax, PARAM(1)	; param b
  8717 00005D58 50                      	push rax
  8718 00005D59 6A01                    	push 1	; arg count
  8719 00005D5B 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
  8720 00005D63 803805                  	cmp byte [rax], T_undefined
  8721 00005D66 0F8496560000            	je L_error_fvar_undefined
  8722 00005D6C 803804                  	cmp byte [rax], T_closure
  8723 00005D6F 0F8511570000            	jne L_error_non_closure
  8724 00005D75 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8725 00005D78 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8726 00005D7B 50                      	push rax
  8727 00005D7C 488B4520                	mov rax, PARAM(0)	; param a
  8728 00005D80 50                      	push rax
  8729 00005D81 6A02                    	push 2	; arg count
  8730 00005D83 488B0425[490B0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8731 00005D8B 803805                  	cmp byte [rax], T_undefined
  8732 00005D8E 0F846E560000            	je L_error_fvar_undefined
  8733 00005D94 803804                  	cmp byte [rax], T_closure
  8734 00005D97 0F85E9560000            	jne L_error_non_closure
  8735 00005D9D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8736 00005DA0 FF7508                  	push qword [rbp + 8 * 1]
  8737                                   ; old ret addr
  8738 00005DA3 FF7500                  	push qword [rbp]
  8739                                   ; restore the old rbp
  8740 00005DA6 BB02000000              	mov rbx, 2
  8741 00005DAB 4883C303                	add rbx, 3
  8742 00005DAF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8743 00005DB3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8744 00005DB8 4C8D4DF8                	lea r9, [rbp - 8]
  8745 00005DBC B906000000              	mov rcx, 6
  8746                                  .L_tc_recycle_frame_loop_003f:
  8747 00005DC1 4883F900                	cmp rcx, 0
  8748 00005DC5 7413                    	je .L_tc_recycle_frame_done_003f
  8749 00005DC7 4D8B11                  	mov r10, qword [r9]
  8750 00005DCA 4D8910                  	mov qword [r8], r10
  8751 00005DCD 4983E808                	sub r8, 8
  8752 00005DD1 4983E908                	sub r9, 8
  8753 00005DD5 48FFC9                  	dec rcx
  8754 00005DD8 EBE7                    	jmp .L_tc_recycle_frame_loop_003f
  8755                                  .L_tc_recycle_frame_done_003f:
  8756 00005DDA 498D6008                	lea rsp, [r8 + 8]
  8757 00005DDE 5D                      	pop rbp ; restore the old rbp
  8758 00005DDF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8759 00005DE2 E9BC010000              	jmp .L_if_end_0019
  8760                                  .L_if_else_0019:
  8761                                  	; preparing a non-tail-call
  8762 00005DE7 488B4528                	mov rax, PARAM(1)	; param b
  8763 00005DEB 50                      	push rax
  8764 00005DEC 6A01                    	push 1	; arg count
  8765 00005DEE 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  8766 00005DF6 803805                  	cmp byte [rax], T_undefined
  8767 00005DF9 0F8403560000            	je L_error_fvar_undefined
  8768 00005DFF 803804                  	cmp byte [rax], T_closure
  8769 00005E02 0F857E560000            	jne L_error_non_closure
  8770 00005E08 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8771 00005E0B FF5009                  	call SOB_CLOSURE_CODE(rax)
  8772 00005E0E 483D[02000000]          	cmp rax, sob_boolean_false
  8773 00005E14 0F8493000000            	je .L_if_else_0018
  8774                                  	; preparing a tail-call
  8775                                  	; preparing a non-tail-call
  8776 00005E1A 488B4528                	mov rax, PARAM(1)	; param b
  8777 00005E1E 50                      	push rax
  8778 00005E1F 6A01                    	push 1	; arg count
  8779 00005E21 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
  8780 00005E29 803805                  	cmp byte [rax], T_undefined
  8781 00005E2C 0F84D0550000            	je L_error_fvar_undefined
  8782 00005E32 803804                  	cmp byte [rax], T_closure
  8783 00005E35 0F854B560000            	jne L_error_non_closure
  8784 00005E3B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8785 00005E3E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8786 00005E41 50                      	push rax
  8787 00005E42 488B4520                	mov rax, PARAM(0)	; param a
  8788 00005E46 50                      	push rax
  8789 00005E47 6A02                    	push 2	; arg count
  8790 00005E49 488B0425[490B0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8791 00005E51 803805                  	cmp byte [rax], T_undefined
  8792 00005E54 0F84A8550000            	je L_error_fvar_undefined
  8793 00005E5A 803804                  	cmp byte [rax], T_closure
  8794 00005E5D 0F8523560000            	jne L_error_non_closure
  8795 00005E63 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8796 00005E66 FF7508                  	push qword [rbp + 8 * 1]
  8797                                   ; old ret addr
  8798 00005E69 FF7500                  	push qword [rbp]
  8799                                   ; restore the old rbp
  8800 00005E6C BB02000000              	mov rbx, 2
  8801 00005E71 4883C303                	add rbx, 3
  8802 00005E75 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8803 00005E79 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8804 00005E7E 4C8D4DF8                	lea r9, [rbp - 8]
  8805 00005E82 B906000000              	mov rcx, 6
  8806                                  .L_tc_recycle_frame_loop_0040:
  8807 00005E87 4883F900                	cmp rcx, 0
  8808 00005E8B 7413                    	je .L_tc_recycle_frame_done_0040
  8809 00005E8D 4D8B11                  	mov r10, qword [r9]
  8810 00005E90 4D8910                  	mov qword [r8], r10
  8811 00005E93 4983E808                	sub r8, 8
  8812 00005E97 4983E908                	sub r9, 8
  8813 00005E9B 48FFC9                  	dec rcx
  8814 00005E9E EBE7                    	jmp .L_tc_recycle_frame_loop_0040
  8815                                  .L_tc_recycle_frame_done_0040:
  8816 00005EA0 498D6008                	lea rsp, [r8 + 8]
  8817 00005EA4 5D                      	pop rbp ; restore the old rbp
  8818 00005EA5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8819 00005EA8 E9F6000000              	jmp .L_if_end_0018
  8820                                  .L_if_else_0018:
  8821                                  	; preparing a non-tail-call
  8822 00005EAD 488B4528                	mov rax, PARAM(1)	; param b
  8823 00005EB1 50                      	push rax
  8824 00005EB2 6A01                    	push 1	; arg count
  8825 00005EB4 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  8826 00005EBC 803805                  	cmp byte [rax], T_undefined
  8827 00005EBF 0F843D550000            	je L_error_fvar_undefined
  8828 00005EC5 803804                  	cmp byte [rax], T_closure
  8829 00005EC8 0F85B8550000            	jne L_error_non_closure
  8830 00005ECE FF7001                  	push SOB_CLOSURE_ENV(rax)
  8831 00005ED1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8832 00005ED4 483D[02000000]          	cmp rax, sob_boolean_false
  8833 00005EDA 746D                    	je .L_if_else_0017
  8834                                  	; preparing a tail-call
  8835 00005EDC 488B4528                	mov rax, PARAM(1)	; param b
  8836 00005EE0 50                      	push rax
  8837 00005EE1 488B4520                	mov rax, PARAM(0)	; param a
  8838 00005EE5 50                      	push rax
  8839 00005EE6 6A02                    	push 2	; arg count
  8840 00005EE8 488B0425[490B0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8841 00005EF0 803805                  	cmp byte [rax], T_undefined
  8842 00005EF3 0F8409550000            	je L_error_fvar_undefined
  8843 00005EF9 803804                  	cmp byte [rax], T_closure
  8844 00005EFC 0F8584550000            	jne L_error_non_closure
  8845 00005F02 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8846 00005F05 FF7508                  	push qword [rbp + 8 * 1]
  8847                                   ; old ret addr
  8848 00005F08 FF7500                  	push qword [rbp]
  8849                                   ; restore the old rbp
  8850 00005F0B BB02000000              	mov rbx, 2
  8851 00005F10 4883C303                	add rbx, 3
  8852 00005F14 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8853 00005F18 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8854 00005F1D 4C8D4DF8                	lea r9, [rbp - 8]
  8855 00005F21 B906000000              	mov rcx, 6
  8856                                  .L_tc_recycle_frame_loop_0041:
  8857 00005F26 4883F900                	cmp rcx, 0
  8858 00005F2A 7413                    	je .L_tc_recycle_frame_done_0041
  8859 00005F2C 4D8B11                  	mov r10, qword [r9]
  8860 00005F2F 4D8910                  	mov qword [r8], r10
  8861 00005F32 4983E808                	sub r8, 8
  8862 00005F36 4983E908                	sub r9, 8
  8863 00005F3A 48FFC9                  	dec rcx
  8864 00005F3D EBE7                    	jmp .L_tc_recycle_frame_loop_0041
  8865                                  .L_tc_recycle_frame_done_0041:
  8866 00005F3F 498D6008                	lea rsp, [r8 + 8]
  8867 00005F43 5D                      	pop rbp ; restore the old rbp
  8868 00005F44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8869 00005F47 EB5A                    	jmp .L_if_end_0017
  8870                                  .L_if_else_0017:
  8871                                  	; preparing a tail-call
  8872 00005F49 6A00                    	push 0	; arg count
  8873 00005F4B 488B4510                	mov rax, ENV
  8874 00005F4F 488B00                  	mov rax, qword [rax + 8 * 0]
  8875 00005F52 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8876 00005F55 803804                  	cmp byte [rax], T_closure
  8877 00005F58 0F8528550000            	jne L_error_non_closure
  8878 00005F5E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8879 00005F61 FF7508                  	push qword [rbp + 8 * 1]
  8880                                   ; old ret addr
  8881 00005F64 FF7500                  	push qword [rbp]
  8882                                   ; restore the old rbp
  8883 00005F67 BB00000000              	mov rbx, 0
  8884 00005F6C 4883C303                	add rbx, 3
  8885 00005F70 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8886 00005F74 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8887 00005F79 4C8D4DF8                	lea r9, [rbp - 8]
  8888 00005F7D B904000000              	mov rcx, 4
  8889                                  .L_tc_recycle_frame_loop_0042:
  8890 00005F82 4883F900                	cmp rcx, 0
  8891 00005F86 7413                    	je .L_tc_recycle_frame_done_0042
  8892 00005F88 4D8B11                  	mov r10, qword [r9]
  8893 00005F8B 4D8910                  	mov qword [r8], r10
  8894 00005F8E 4983E808                	sub r8, 8
  8895 00005F92 4983E908                	sub r9, 8
  8896 00005F96 48FFC9                  	dec rcx
  8897 00005F99 EBE7                    	jmp .L_tc_recycle_frame_loop_0042
  8898                                  .L_tc_recycle_frame_done_0042:
  8899 00005F9B 498D6008                	lea rsp, [r8 + 8]
  8900 00005F9F 5D                      	pop rbp ; restore the old rbp
  8901 00005FA0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8902                                  .L_if_end_0017:
  8903                                  .L_if_end_0018:
  8904                                  .L_if_end_0019:
  8905 00005FA3 EB5A                    	jmp .L_if_end_001a
  8906                                  .L_if_else_001a:
  8907                                  	; preparing a tail-call
  8908 00005FA5 6A00                    	push 0	; arg count
  8909 00005FA7 488B4510                	mov rax, ENV
  8910 00005FAB 488B00                  	mov rax, qword [rax + 8 * 0]
  8911 00005FAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8912 00005FB1 803804                  	cmp byte [rax], T_closure
  8913 00005FB4 0F85CC540000            	jne L_error_non_closure
  8914 00005FBA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8915 00005FBD FF7508                  	push qword [rbp + 8 * 1]
  8916                                   ; old ret addr
  8917 00005FC0 FF7500                  	push qword [rbp]
  8918                                   ; restore the old rbp
  8919 00005FC3 BB00000000              	mov rbx, 0
  8920 00005FC8 4883C303                	add rbx, 3
  8921 00005FCC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8922 00005FD0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8923 00005FD5 4C8D4DF8                	lea r9, [rbp - 8]
  8924 00005FD9 B904000000              	mov rcx, 4
  8925                                  .L_tc_recycle_frame_loop_0043:
  8926 00005FDE 4883F900                	cmp rcx, 0
  8927 00005FE2 7413                    	je .L_tc_recycle_frame_done_0043
  8928 00005FE4 4D8B11                  	mov r10, qword [r9]
  8929 00005FE7 4D8910                  	mov qword [r8], r10
  8930 00005FEA 4983E808                	sub r8, 8
  8931 00005FEE 4983E908                	sub r9, 8
  8932 00005FF2 48FFC9                  	dec rcx
  8933 00005FF5 EBE7                    	jmp .L_tc_recycle_frame_loop_0043
  8934                                  .L_tc_recycle_frame_done_0043:
  8935 00005FF7 498D6008                	lea rsp, [r8 + 8]
  8936 00005FFB 5D                      	pop rbp ; restore the old rbp
  8937 00005FFC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8938                                  .L_if_end_001a:
  8939                                  .L_if_end_001b:
  8940                                  .L_if_end_001c:
  8941 00005FFF C9                      	leave
  8942 00006000 C22000                  	ret AND_KILL_FRAME(2)
  8943                                  .L_lambda_simple_end_0036:	; new closure is in rax
  8944 00006003 50                      	push rax
  8945 00006004 6A01                    	push 1	; arg count
  8946 00006006 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8947 0000600B E81F550000              	call malloc
  8948 00006010 50                      	push rax
  8949 00006011 BF08000000              	mov rdi, 8 * 1	; new rib
  8950 00006016 E814550000              	call malloc
  8951 0000601B 50                      	push rax
  8952 0000601C BF10000000              	mov rdi, 8 * 2	; extended env
  8953 00006021 E809550000              	call malloc
  8954 00006026 488B7D10                	mov rdi, ENV
  8955 0000602A BE00000000              	mov rsi, 0
  8956 0000602F BA01000000              	mov rdx, 1
  8957                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  8958 00006034 4883FE01                	cmp rsi, 1
  8959 00006038 7410                    	je .L_lambda_simple_env_end_0037
  8960 0000603A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8961 0000603E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8962 00006042 48FFC6                  	inc rsi
  8963 00006045 48FFC2                  	inc rdx
  8964 00006048 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  8965                                  .L_lambda_simple_env_end_0037:
  8966 0000604A 5B                      	pop rbx
  8967 0000604B BE00000000              	mov rsi, 0
  8968                                  .L_lambda_simple_params_loop_0037:	; copy params
  8969 00006050 4883FE01                	cmp rsi, 1
  8970 00006054 740E                    	je .L_lambda_simple_params_end_0037
  8971 00006056 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8972 0000605B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8973 0000605F 48FFC6                  	inc rsi
  8974 00006062 EBEC                    	jmp .L_lambda_simple_params_loop_0037
  8975                                  .L_lambda_simple_params_end_0037:
  8976 00006064 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8977 00006067 4889C3                  	mov rbx, rax
  8978 0000606A 58                      	pop rax
  8979 0000606B C60004                  	mov byte [rax], T_closure
  8980 0000606E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8981 00006072 48C74009[7F600000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  8982 0000607A E9A1010000              	jmp .L_lambda_simple_end_0037
  8983                                  .L_lambda_simple_code_0037:	; lambda-simple body
  8984 0000607F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8985 00006085 740B                    	je .L_lambda_simple_arity_check_ok_0037
  8986 00006087 FF742410                	push qword [rsp + 8 * 2]
  8987 0000608B 6A01                    	push 1
  8988 0000608D E956540000              	jmp L_error_incorrect_arity_simple
  8989                                  .L_lambda_simple_arity_check_ok_0037:
  8990 00006092 C8000000                	enter 0, 0
  8991 00006096 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8992 0000609B E88F540000              	call malloc
  8993 000060A0 50                      	push rax
  8994 000060A1 BF10000000              	mov rdi, 8 * 2	; new rib
  8995 000060A6 E884540000              	call malloc
  8996 000060AB 50                      	push rax
  8997 000060AC BF18000000              	mov rdi, 8 * 3	; extended env
  8998 000060B1 E879540000              	call malloc
  8999 000060B6 488B7D10                	mov rdi, ENV
  9000 000060BA BE00000000              	mov rsi, 0
  9001 000060BF BA01000000              	mov rdx, 1
  9002                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  9003 000060C4 4883FE02                	cmp rsi, 2
  9004 000060C8 7410                    	je .L_lambda_opt_env_end_000a
  9005 000060CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9006 000060CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9007 000060D2 48FFC6                  	inc rsi
  9008 000060D5 48FFC2                  	inc rdx
  9009 000060D8 EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9010                                  .L_lambda_opt_env_end_000a:
  9011 000060DA 5B                      	pop rbx
  9012 000060DB BE00000000              	mov rsi, 0
  9013                                  .L_lambda_opt_params_loop_000a:	; copy params
  9014 000060E0 4883FE01                	cmp rsi, 1
  9015 000060E4 740E                    	je .L_lambda_opt_params_end_000a
  9016 000060E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9017 000060EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9018 000060EF 48FFC6                  	inc rsi
  9019 000060F2 EBEC                    	jmp .L_lambda_opt_params_loop_000a
  9020                                  .L_lambda_opt_params_end_000a:
  9021 000060F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9022 000060F7 4889C3                  	mov rbx, rax
  9023 000060FA 58                      	pop rax
  9024 000060FB C60004                  	mov byte [rax], T_closure
  9025 000060FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9026 00006102 48C74009[0F610000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9027 0000610A E90D010000              	jmp .L_lambda_opt_end_000a
  9028                                  .L_lambda_opt_code_000a:	; lambda-opt body
  9029 0000610F 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9030 00006115 745E                    	je .L_lambda_opt_arity_check_exact_000a
  9031 00006117 7F0B                    	jg .L_lambda_opt_arity_check_more_000a
  9032 00006119 FF742410                	push qword [rsp + 8 * 2]
  9033 0000611D 6A00                    	push 0
  9034 0000611F E9C4530000              	jmp L_error_incorrect_arity_simple
  9035                                  .L_lambda_opt_arity_check_more_000a:
  9036 00006124 53                      push rbx
  9037 00006125 51                      push rcx
  9038 00006126 488B4D10                mov rcx, [rbp + 8*2]
  9039 0000612A BB00000000              mov rbx , 0
  9040 0000612F 4829D9                  sub rcx, rbx
  9041 00006132 48FFC3                  inc rbx
  9042 00006135 48895D10                mov [rbp + 8*2], rbx
  9043 00006139 4889CF                  	 mov rdi, rcx 
  9044 0000613C 48C1E703                	 shl rdi, 3 
  9045 00006140 E8EA530000              	call malloc
  9046 00006145 50                      	push rax
  9047 00006146 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
  9048 0000614B 4831FF                  xor rdi, rdi
  9049                                  .L_lambda_opt_stack_shrink_loop_000a:
  9050 0000614E 4839CF                  	cmp rdi, rcx
  9051 00006151 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_000a
  9052 00006153 488904FC                mov [rsp + rdi*8], rax
  9053 00006157 48FFC7                  	inc rdi
  9054 0000615A 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
  9055 00006162 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
  9056 00006167 498B04D9                mov rax,[r9 + rbx*8] 
  9057 0000616B EBE1                    jmp .L_lambda_opt_stack_shrink_loop_000a
  9058                                  .L_lambda_opt_stack_shrink_loop_exit_000a:
  9059 0000616D 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
  9060 00006171 5B                      pop rbx
  9061 00006172 53                      push rbx
  9062 00006173 EB16                    jmp .L_lambda_opt_stack_adjusted_000a
  9063                                  .L_lambda_opt_arity_check_exact_000a:
  9064 00006175 48B8-                   	mov rax, L_constants + 1
  9064 00006177 [0100000000000000] 
  9065 0000617F 53                      push rbx
  9066 00006180 488B5C2410              mov rbx , [rsp + 8*2]
  9067 00006185 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
  9068 0000618A 5B                      pop rbx
  9069                                  .L_lambda_opt_stack_adjusted_000a:	; new closure is in rax
  9070 0000618B C8000000                	enter 0, 0
  9071                                  	; preparing a tail-call
  9072 0000618F 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
  9073 00006197 803805                  	cmp byte [rax], T_undefined
  9074 0000619A 0F8462520000            	je L_error_fvar_undefined
  9075 000061A0 50                      	push rax
  9076 000061A1 48B8-                   	mov rax, L_constants + 2169
  9076 000061A3 [7908000000000000] 
  9077 000061AB 50                      	push rax
  9078 000061AC 488B4510                	mov rax, ENV
  9079 000061B0 488B00                  	mov rax, qword [rax + 8 * 0]
  9080 000061B3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9081 000061B6 50                      	push rax
  9082 000061B7 6A03                    	push 3	; arg count
  9083 000061B9 488B0425[AB0F0000]      	mov rax, qword [free_var_76]	; free var fold-left
  9084 000061C1 803805                  	cmp byte [rax], T_undefined
  9085 000061C4 0F8438520000            	je L_error_fvar_undefined
  9086 000061CA 803804                  	cmp byte [rax], T_closure
  9087 000061CD 0F85B3520000            	jne L_error_non_closure
  9088 000061D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9089 000061D6 FF7508                  	push qword [rbp + 8 * 1]
  9090                                   ; old ret addr
  9091 000061D9 FF7500                  	push qword [rbp]
  9092                                   ; restore the old rbp
  9093 000061DC BB03000000              	mov rbx, 3
  9094 000061E1 4883C303                	add rbx, 3
  9095 000061E5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9096 000061E9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9097 000061EE 4C8D4DF8                	lea r9, [rbp - 8]
  9098 000061F2 B907000000              	mov rcx, 7
  9099                                  .L_tc_recycle_frame_loop_0044:
  9100 000061F7 4883F900                	cmp rcx, 0
  9101 000061FB 7413                    	je .L_tc_recycle_frame_done_0044
  9102 000061FD 4D8B11                  	mov r10, qword [r9]
  9103 00006200 4D8910                  	mov qword [r8], r10
  9104 00006203 4983E808                	sub r8, 8
  9105 00006207 4983E908                	sub r9, 8
  9106 0000620B 48FFC9                  	dec rcx
  9107 0000620E EBE7                    	jmp .L_tc_recycle_frame_loop_0044
  9108                                  .L_tc_recycle_frame_done_0044:
  9109 00006210 498D6008                	lea rsp, [r8 + 8]
  9110 00006214 5D                      	pop rbp ; restore the old rbp
  9111 00006215 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9112 00006218 C9                      	leave
  9113 00006219 C21000                  	ret AND_KILL_FRAME(0)
  9114                                  .L_lambda_opt_end_000a:	; new closure is in rax
  9115 0000621C C9                      	leave
  9116 0000621D C21800                  	ret AND_KILL_FRAME(1)
  9117                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9118 00006220 803804                  	cmp byte [rax], T_closure
  9119 00006223 0F855D520000            	jne L_error_non_closure
  9120 00006229 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9121 0000622C FF7508                  	push qword [rbp + 8 * 1]
  9122                                   ; old ret addr
  9123 0000622F FF7500                  	push qword [rbp]
  9124                                   ; restore the old rbp
  9125 00006232 BB01000000              	mov rbx, 1
  9126 00006237 4883C303                	add rbx, 3
  9127 0000623B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9128 0000623F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9129 00006244 4C8D4DF8                	lea r9, [rbp - 8]
  9130 00006248 B905000000              	mov rcx, 5
  9131                                  .L_tc_recycle_frame_loop_0036:
  9132 0000624D 4883F900                	cmp rcx, 0
  9133 00006251 7413                    	je .L_tc_recycle_frame_done_0036
  9134 00006253 4D8B11                  	mov r10, qword [r9]
  9135 00006256 4D8910                  	mov qword [r8], r10
  9136 00006259 4983E808                	sub r8, 8
  9137 0000625D 4983E908                	sub r9, 8
  9138 00006261 48FFC9                  	dec rcx
  9139 00006264 EBE7                    	jmp .L_tc_recycle_frame_loop_0036
  9140                                  .L_tc_recycle_frame_done_0036:
  9141 00006266 498D6008                	lea rsp, [r8 + 8]
  9142 0000626A 5D                      	pop rbp ; restore the old rbp
  9143 0000626B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9144 0000626E C9                      	leave
  9145 0000626F C21800                  	ret AND_KILL_FRAME(1)
  9146                                  .L_lambda_simple_end_0035:	; new closure is in rax
  9147 00006272 803804                  	cmp byte [rax], T_closure
  9148 00006275 0F850B520000            	jne L_error_non_closure
  9149 0000627B FF7001                  	push SOB_CLOSURE_ENV(rax)
  9150 0000627E FF5009                  	call SOB_CLOSURE_CODE(rax)
  9151 00006281 48890425[B00A0000]      	mov qword [free_var_1], rax
  9152 00006289 48B8-                   	mov rax, sob_void
  9152 0000628B [0000000000000000] 
  9153                                  
  9154 00006293 4889C7                  	mov rdi, rax
  9155 00006296 E8E9540000              	call print_sexpr_if_not_void
  9156                                  	; preparing a non-tail-call
  9157 0000629B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9158 000062A0 E88A520000              	call malloc
  9159 000062A5 50                      	push rax
  9160 000062A6 BF00000000              	mov rdi, 8 * 0	; new rib
  9161 000062AB E87F520000              	call malloc
  9162 000062B0 50                      	push rax
  9163 000062B1 BF08000000              	mov rdi, 8 * 1	; extended env
  9164 000062B6 E874520000              	call malloc
  9165 000062BB 488B7D10                	mov rdi, ENV
  9166 000062BF BE00000000              	mov rsi, 0
  9167 000062C4 BA01000000              	mov rdx, 1
  9168                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  9169 000062C9 4883FE00                	cmp rsi, 0
  9170 000062CD 7410                    	je .L_lambda_simple_env_end_0038
  9171 000062CF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9172 000062D3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9173 000062D7 48FFC6                  	inc rsi
  9174 000062DA 48FFC2                  	inc rdx
  9175 000062DD EBEA                    	jmp .L_lambda_simple_env_loop_0038
  9176                                  .L_lambda_simple_env_end_0038:
  9177 000062DF 5B                      	pop rbx
  9178 000062E0 BE00000000              	mov rsi, 0
  9179                                  .L_lambda_simple_params_loop_0038:	; copy params
  9180 000062E5 4883FE00                	cmp rsi, 0
  9181 000062E9 740E                    	je .L_lambda_simple_params_end_0038
  9182 000062EB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9183 000062F0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9184 000062F4 48FFC6                  	inc rsi
  9185 000062F7 EBEC                    	jmp .L_lambda_simple_params_loop_0038
  9186                                  .L_lambda_simple_params_end_0038:
  9187 000062F9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9188 000062FC 4889C3                  	mov rbx, rax
  9189 000062FF 58                      	pop rax
  9190 00006300 C60004                  	mov byte [rax], T_closure
  9191 00006303 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9192 00006307 48C74009[14630000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  9193 0000630F E992000000              	jmp .L_lambda_simple_end_0038
  9194                                  .L_lambda_simple_code_0038:	; lambda-simple body
  9195 00006314 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9196 0000631A 740B                    	je .L_lambda_simple_arity_check_ok_0038
  9197 0000631C FF742410                	push qword [rsp + 8 * 2]
  9198 00006320 6A00                    	push 0
  9199 00006322 E9C1510000              	jmp L_error_incorrect_arity_simple
  9200                                  .L_lambda_simple_arity_check_ok_0038:
  9201 00006327 C8000000                	enter 0, 0
  9202                                  	; preparing a tail-call
  9203 0000632B 48B8-                   	mov rax, L_constants + 2221
  9203 0000632D [AD08000000000000] 
  9204 00006335 50                      	push rax
  9205 00006336 48B8-                   	mov rax, L_constants + 2285
  9205 00006338 [ED08000000000000] 
  9206 00006340 50                      	push rax
  9207 00006341 6A02                    	push 2	; arg count
  9208 00006343 488B0425[890F0000]      	mov rax, qword [free_var_74]	; free var error
  9209 0000634B 803805                  	cmp byte [rax], T_undefined
  9210 0000634E 0F84AE500000            	je L_error_fvar_undefined
  9211 00006354 803804                  	cmp byte [rax], T_closure
  9212 00006357 0F8529510000            	jne L_error_non_closure
  9213 0000635D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9214 00006360 FF7508                  	push qword [rbp + 8 * 1]
  9215                                   ; old ret addr
  9216 00006363 FF7500                  	push qword [rbp]
  9217                                   ; restore the old rbp
  9218 00006366 BB02000000              	mov rbx, 2
  9219 0000636B 4883C303                	add rbx, 3
  9220 0000636F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9221 00006373 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9222 00006378 4C8D4DF8                	lea r9, [rbp - 8]
  9223 0000637C B906000000              	mov rcx, 6
  9224                                  .L_tc_recycle_frame_loop_0045:
  9225 00006381 4883F900                	cmp rcx, 0
  9226 00006385 7413                    	je .L_tc_recycle_frame_done_0045
  9227 00006387 4D8B11                  	mov r10, qword [r9]
  9228 0000638A 4D8910                  	mov qword [r8], r10
  9229 0000638D 4983E808                	sub r8, 8
  9230 00006391 4983E908                	sub r9, 8
  9231 00006395 48FFC9                  	dec rcx
  9232 00006398 EBE7                    	jmp .L_tc_recycle_frame_loop_0045
  9233                                  .L_tc_recycle_frame_done_0045:
  9234 0000639A 498D6008                	lea rsp, [r8 + 8]
  9235 0000639E 5D                      	pop rbp ; restore the old rbp
  9236 0000639F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9237 000063A2 C9                      	leave
  9238 000063A3 C21000                  	ret AND_KILL_FRAME(0)
  9239                                  .L_lambda_simple_end_0038:	; new closure is in rax
  9240 000063A6 50                      	push rax
  9241 000063A7 6A01                    	push 1	; arg count
  9242 000063A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9243 000063AE E87C510000              	call malloc
  9244 000063B3 50                      	push rax
  9245 000063B4 BF00000000              	mov rdi, 8 * 0	; new rib
  9246 000063B9 E871510000              	call malloc
  9247 000063BE 50                      	push rax
  9248 000063BF BF08000000              	mov rdi, 8 * 1	; extended env
  9249 000063C4 E866510000              	call malloc
  9250 000063C9 488B7D10                	mov rdi, ENV
  9251 000063CD BE00000000              	mov rsi, 0
  9252 000063D2 BA01000000              	mov rdx, 1
  9253                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  9254 000063D7 4883FE00                	cmp rsi, 0
  9255 000063DB 7410                    	je .L_lambda_simple_env_end_0039
  9256 000063DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9257 000063E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9258 000063E5 48FFC6                  	inc rsi
  9259 000063E8 48FFC2                  	inc rdx
  9260 000063EB EBEA                    	jmp .L_lambda_simple_env_loop_0039
  9261                                  .L_lambda_simple_env_end_0039:
  9262 000063ED 5B                      	pop rbx
  9263 000063EE BE00000000              	mov rsi, 0
  9264                                  .L_lambda_simple_params_loop_0039:	; copy params
  9265 000063F3 4883FE00                	cmp rsi, 0
  9266 000063F7 740E                    	je .L_lambda_simple_params_end_0039
  9267 000063F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9268 000063FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9269 00006402 48FFC6                  	inc rsi
  9270 00006405 EBEC                    	jmp .L_lambda_simple_params_loop_0039
  9271                                  .L_lambda_simple_params_end_0039:
  9272 00006407 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9273 0000640A 4889C3                  	mov rbx, rax
  9274 0000640D 58                      	pop rax
  9275 0000640E C60004                  	mov byte [rax], T_closure
  9276 00006411 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9277 00006415 48C74009[22640000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
  9278 0000641D E9620D0000              	jmp .L_lambda_simple_end_0039
  9279                                  .L_lambda_simple_code_0039:	; lambda-simple body
  9280 00006422 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9281 00006428 740B                    	je .L_lambda_simple_arity_check_ok_0039
  9282 0000642A FF742410                	push qword [rsp + 8 * 2]
  9283 0000642E 6A01                    	push 1
  9284 00006430 E9B3500000              	jmp L_error_incorrect_arity_simple
  9285                                  .L_lambda_simple_arity_check_ok_0039:
  9286 00006435 C8000000                	enter 0, 0
  9287                                  	; preparing a tail-call
  9288 00006439 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9289 0000643E E8EC500000              	call malloc
  9290 00006443 50                      	push rax
  9291 00006444 BF08000000              	mov rdi, 8 * 1	; new rib
  9292 00006449 E8E1500000              	call malloc
  9293 0000644E 50                      	push rax
  9294 0000644F BF10000000              	mov rdi, 8 * 2	; extended env
  9295 00006454 E8D6500000              	call malloc
  9296 00006459 488B7D10                	mov rdi, ENV
  9297 0000645D BE00000000              	mov rsi, 0
  9298 00006462 BA01000000              	mov rdx, 1
  9299                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
  9300 00006467 4883FE01                	cmp rsi, 1
  9301 0000646B 7410                    	je .L_lambda_simple_env_end_003a
  9302 0000646D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9303 00006471 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9304 00006475 48FFC6                  	inc rsi
  9305 00006478 48FFC2                  	inc rdx
  9306 0000647B EBEA                    	jmp .L_lambda_simple_env_loop_003a
  9307                                  .L_lambda_simple_env_end_003a:
  9308 0000647D 5B                      	pop rbx
  9309 0000647E BE00000000              	mov rsi, 0
  9310                                  .L_lambda_simple_params_loop_003a:	; copy params
  9311 00006483 4883FE01                	cmp rsi, 1
  9312 00006487 740E                    	je .L_lambda_simple_params_end_003a
  9313 00006489 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9314 0000648E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9315 00006492 48FFC6                  	inc rsi
  9316 00006495 EBEC                    	jmp .L_lambda_simple_params_loop_003a
  9317                                  .L_lambda_simple_params_end_003a:
  9318 00006497 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9319 0000649A 4889C3                  	mov rbx, rax
  9320 0000649D 58                      	pop rax
  9321 0000649E C60004                  	mov byte [rax], T_closure
  9322 000064A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9323 000064A5 48C74009[B2640000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
  9324 000064AD E9A0080000              	jmp .L_lambda_simple_end_003a
  9325                                  .L_lambda_simple_code_003a:	; lambda-simple body
  9326 000064B2 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9327 000064B8 740B                    	je .L_lambda_simple_arity_check_ok_003a
  9328 000064BA FF742410                	push qword [rsp + 8 * 2]
  9329 000064BE 6A02                    	push 2
  9330 000064C0 E923500000              	jmp L_error_incorrect_arity_simple
  9331                                  .L_lambda_simple_arity_check_ok_003a:
  9332 000064C5 C8000000                	enter 0, 0
  9333                                  	; preparing a non-tail-call
  9334 000064C9 488B4520                	mov rax, PARAM(0)	; param a
  9335 000064CD 50                      	push rax
  9336 000064CE 6A01                    	push 1	; arg count
  9337 000064D0 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  9338 000064D8 803805                  	cmp byte [rax], T_undefined
  9339 000064DB 0F84214F0000            	je L_error_fvar_undefined
  9340 000064E1 803804                  	cmp byte [rax], T_closure
  9341 000064E4 0F859C4F0000            	jne L_error_non_closure
  9342 000064EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9343 000064ED FF5009                  	call SOB_CLOSURE_CODE(rax)
  9344 000064F0 483D[02000000]          	cmp rax, sob_boolean_false
  9345 000064F6 0F8487020000            	je .L_if_else_0028
  9346                                  	; preparing a non-tail-call
  9347 000064FC 488B4528                	mov rax, PARAM(1)	; param b
  9348 00006500 50                      	push rax
  9349 00006501 6A01                    	push 1	; arg count
  9350 00006503 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  9351 0000650B 803805                  	cmp byte [rax], T_undefined
  9352 0000650E 0F84EE4E0000            	je L_error_fvar_undefined
  9353 00006514 803804                  	cmp byte [rax], T_closure
  9354 00006517 0F85694F0000            	jne L_error_non_closure
  9355 0000651D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9356 00006520 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9357 00006523 483D[02000000]          	cmp rax, sob_boolean_false
  9358 00006529 7470                    	je .L_if_else_001f
  9359                                  	; preparing a tail-call
  9360 0000652B 488B4528                	mov rax, PARAM(1)	; param b
  9361 0000652F 50                      	push rax
  9362 00006530 488B4520                	mov rax, PARAM(0)	; param a
  9363 00006534 50                      	push rax
  9364 00006535 6A02                    	push 2	; arg count
  9365 00006537 488B0425[6A0C0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
  9366 0000653F 803805                  	cmp byte [rax], T_undefined
  9367 00006542 0F84BA4E0000            	je L_error_fvar_undefined
  9368 00006548 803804                  	cmp byte [rax], T_closure
  9369 0000654B 0F85354F0000            	jne L_error_non_closure
  9370 00006551 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9371 00006554 FF7508                  	push qword [rbp + 8 * 1]
  9372                                   ; old ret addr
  9373 00006557 FF7500                  	push qword [rbp]
  9374                                   ; restore the old rbp
  9375 0000655A BB02000000              	mov rbx, 2
  9376 0000655F 4883C303                	add rbx, 3
  9377 00006563 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9378 00006567 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9379 0000656C 4C8D4DF8                	lea r9, [rbp - 8]
  9380 00006570 B906000000              	mov rcx, 6
  9381                                  .L_tc_recycle_frame_loop_0047:
  9382 00006575 4883F900                	cmp rcx, 0
  9383 00006579 7413                    	je .L_tc_recycle_frame_done_0047
  9384 0000657B 4D8B11                  	mov r10, qword [r9]
  9385 0000657E 4D8910                  	mov qword [r8], r10
  9386 00006581 4983E808                	sub r8, 8
  9387 00006585 4983E908                	sub r9, 8
  9388 00006589 48FFC9                  	dec rcx
  9389 0000658C EBE7                    	jmp .L_tc_recycle_frame_loop_0047
  9390                                  .L_tc_recycle_frame_done_0047:
  9391 0000658E 498D6008                	lea rsp, [r8 + 8]
  9392 00006592 5D                      	pop rbp ; restore the old rbp
  9393 00006593 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9394 00006596 E9E3010000              	jmp .L_if_end_001f
  9395                                  .L_if_else_001f:
  9396                                  	; preparing a non-tail-call
  9397 0000659B 488B4528                	mov rax, PARAM(1)	; param b
  9398 0000659F 50                      	push rax
  9399 000065A0 6A01                    	push 1	; arg count
  9400 000065A2 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  9401 000065AA 803805                  	cmp byte [rax], T_undefined
  9402 000065AD 0F844F4E0000            	je L_error_fvar_undefined
  9403 000065B3 803804                  	cmp byte [rax], T_closure
  9404 000065B6 0F85CA4E0000            	jne L_error_non_closure
  9405 000065BC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9406 000065BF FF5009                  	call SOB_CLOSURE_CODE(rax)
  9407 000065C2 483D[02000000]          	cmp rax, sob_boolean_false
  9408 000065C8 0F8493000000            	je .L_if_else_001e
  9409                                  	; preparing a tail-call
  9410 000065CE 488B4528                	mov rax, PARAM(1)	; param b
  9411 000065D2 50                      	push rax
  9412                                  	; preparing a non-tail-call
  9413 000065D3 488B4520                	mov rax, PARAM(0)	; param a
  9414 000065D7 50                      	push rax
  9415 000065D8 6A01                    	push 1	; arg count
  9416 000065DA 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9417 000065E2 803805                  	cmp byte [rax], T_undefined
  9418 000065E5 0F84174E0000            	je L_error_fvar_undefined
  9419 000065EB 803804                  	cmp byte [rax], T_closure
  9420 000065EE 0F85924E0000            	jne L_error_non_closure
  9421 000065F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9422 000065F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9423 000065FA 50                      	push rax
  9424 000065FB 6A02                    	push 2	; arg count
  9425 000065FD 488B0425[480C0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
  9426 00006605 803805                  	cmp byte [rax], T_undefined
  9427 00006608 0F84F44D0000            	je L_error_fvar_undefined
  9428 0000660E 803804                  	cmp byte [rax], T_closure
  9429 00006611 0F856F4E0000            	jne L_error_non_closure
  9430 00006617 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9431 0000661A FF7508                  	push qword [rbp + 8 * 1]
  9432                                   ; old ret addr
  9433 0000661D FF7500                  	push qword [rbp]
  9434                                   ; restore the old rbp
  9435 00006620 BB02000000              	mov rbx, 2
  9436 00006625 4883C303                	add rbx, 3
  9437 00006629 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9438 0000662D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9439 00006632 4C8D4DF8                	lea r9, [rbp - 8]
  9440 00006636 B906000000              	mov rcx, 6
  9441                                  .L_tc_recycle_frame_loop_0048:
  9442 0000663B 4883F900                	cmp rcx, 0
  9443 0000663F 7413                    	je .L_tc_recycle_frame_done_0048
  9444 00006641 4D8B11                  	mov r10, qword [r9]
  9445 00006644 4D8910                  	mov qword [r8], r10
  9446 00006647 4983E808                	sub r8, 8
  9447 0000664B 4983E908                	sub r9, 8
  9448 0000664F 48FFC9                  	dec rcx
  9449 00006652 EBE7                    	jmp .L_tc_recycle_frame_loop_0048
  9450                                  .L_tc_recycle_frame_done_0048:
  9451 00006654 498D6008                	lea rsp, [r8 + 8]
  9452 00006658 5D                      	pop rbp ; restore the old rbp
  9453 00006659 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9454 0000665C E91D010000              	jmp .L_if_end_001e
  9455                                  .L_if_else_001e:
  9456                                  	; preparing a non-tail-call
  9457 00006661 488B4528                	mov rax, PARAM(1)	; param b
  9458 00006665 50                      	push rax
  9459 00006666 6A01                    	push 1	; arg count
  9460 00006668 488B0425[CC100000]      	mov rax, qword [free_var_93]	; free var real
  9461 00006670 803805                  	cmp byte [rax], T_undefined
  9462 00006673 0F84894D0000            	je L_error_fvar_undefined
  9463 00006679 803804                  	cmp byte [rax], T_closure
  9464 0000667C 0F85044E0000            	jne L_error_non_closure
  9465 00006682 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9466 00006685 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9467 00006688 483D[02000000]          	cmp rax, sob_boolean_false
  9468 0000668E 0F8490000000            	je .L_if_else_001d
  9469                                  	; preparing a tail-call
  9470 00006694 488B4528                	mov rax, PARAM(1)	; param b
  9471 00006698 50                      	push rax
  9472                                  	; preparing a non-tail-call
  9473 00006699 488B4520                	mov rax, PARAM(0)	; param a
  9474 0000669D 50                      	push rax
  9475 0000669E 6A01                    	push 1	; arg count
  9476 000066A0 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
  9477 000066A8 803805                  	cmp byte [rax], T_undefined
  9478 000066AB 0F84514D0000            	je L_error_fvar_undefined
  9479 000066B1 803804                  	cmp byte [rax], T_closure
  9480 000066B4 0F85CC4D0000            	jne L_error_non_closure
  9481 000066BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9482 000066BD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9483 000066C0 50                      	push rax
  9484 000066C1 6A02                    	push 2	; arg count
  9485 000066C3 488B0425[590C0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9486 000066CB 803805                  	cmp byte [rax], T_undefined
  9487 000066CE 0F842E4D0000            	je L_error_fvar_undefined
  9488 000066D4 803804                  	cmp byte [rax], T_closure
  9489 000066D7 0F85A94D0000            	jne L_error_non_closure
  9490 000066DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9491 000066E0 FF7508                  	push qword [rbp + 8 * 1]
  9492                                   ; old ret addr
  9493 000066E3 FF7500                  	push qword [rbp]
  9494                                   ; restore the old rbp
  9495 000066E6 BB02000000              	mov rbx, 2
  9496 000066EB 4883C303                	add rbx, 3
  9497 000066EF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9498 000066F3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9499 000066F8 4C8D4DF8                	lea r9, [rbp - 8]
  9500 000066FC B906000000              	mov rcx, 6
  9501                                  .L_tc_recycle_frame_loop_0049:
  9502 00006701 4883F900                	cmp rcx, 0
  9503 00006705 7413                    	je .L_tc_recycle_frame_done_0049
  9504 00006707 4D8B11                  	mov r10, qword [r9]
  9505 0000670A 4D8910                  	mov qword [r8], r10
  9506 0000670D 4983E808                	sub r8, 8
  9507 00006711 4983E908                	sub r9, 8
  9508 00006715 48FFC9                  	dec rcx
  9509 00006718 EBE7                    	jmp .L_tc_recycle_frame_loop_0049
  9510                                  .L_tc_recycle_frame_done_0049:
  9511 0000671A 498D6008                	lea rsp, [r8 + 8]
  9512 0000671E 5D                      	pop rbp ; restore the old rbp
  9513 0000671F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9514 00006722 EB5A                    	jmp .L_if_end_001d
  9515                                  .L_if_else_001d:
  9516                                  	; preparing a tail-call
  9517 00006724 6A00                    	push 0	; arg count
  9518 00006726 488B4510                	mov rax, ENV
  9519 0000672A 488B00                  	mov rax, qword [rax + 8 * 0]
  9520 0000672D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9521 00006730 803804                  	cmp byte [rax], T_closure
  9522 00006733 0F854D4D0000            	jne L_error_non_closure
  9523 00006739 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9524 0000673C FF7508                  	push qword [rbp + 8 * 1]
  9525                                   ; old ret addr
  9526 0000673F FF7500                  	push qword [rbp]
  9527                                   ; restore the old rbp
  9528 00006742 BB00000000              	mov rbx, 0
  9529 00006747 4883C303                	add rbx, 3
  9530 0000674B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9531 0000674F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9532 00006754 4C8D4DF8                	lea r9, [rbp - 8]
  9533 00006758 B904000000              	mov rcx, 4
  9534                                  .L_tc_recycle_frame_loop_004a:
  9535 0000675D 4883F900                	cmp rcx, 0
  9536 00006761 7413                    	je .L_tc_recycle_frame_done_004a
  9537 00006763 4D8B11                  	mov r10, qword [r9]
  9538 00006766 4D8910                  	mov qword [r8], r10
  9539 00006769 4983E808                	sub r8, 8
  9540 0000676D 4983E908                	sub r9, 8
  9541 00006771 48FFC9                  	dec rcx
  9542 00006774 EBE7                    	jmp .L_tc_recycle_frame_loop_004a
  9543                                  .L_tc_recycle_frame_done_004a:
  9544 00006776 498D6008                	lea rsp, [r8 + 8]
  9545 0000677A 5D                      	pop rbp ; restore the old rbp
  9546 0000677B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9547                                  .L_if_end_001d:
  9548                                  .L_if_end_001e:
  9549                                  .L_if_end_001f:
  9550 0000677E E9CB050000              	jmp .L_if_end_0028
  9551                                  .L_if_else_0028:
  9552                                  	; preparing a non-tail-call
  9553 00006783 488B4520                	mov rax, PARAM(0)	; param a
  9554 00006787 50                      	push rax
  9555 00006788 6A01                    	push 1	; arg count
  9556 0000678A 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  9557 00006792 803805                  	cmp byte [rax], T_undefined
  9558 00006795 0F84674C0000            	je L_error_fvar_undefined
  9559 0000679B 803804                  	cmp byte [rax], T_closure
  9560 0000679E 0F85E24C0000            	jne L_error_non_closure
  9561 000067A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9562 000067A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9563 000067AA 483D[02000000]          	cmp rax, sob_boolean_false
  9564 000067B0 0F8487020000            	je .L_if_else_0027
  9565                                  	; preparing a non-tail-call
  9566 000067B6 488B4528                	mov rax, PARAM(1)	; param b
  9567 000067BA 50                      	push rax
  9568 000067BB 6A01                    	push 1	; arg count
  9569 000067BD 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  9570 000067C5 803805                  	cmp byte [rax], T_undefined
  9571 000067C8 0F84344C0000            	je L_error_fvar_undefined
  9572 000067CE 803804                  	cmp byte [rax], T_closure
  9573 000067D1 0F85AF4C0000            	jne L_error_non_closure
  9574 000067D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9575 000067DA FF5009                  	call SOB_CLOSURE_CODE(rax)
  9576 000067DD 483D[02000000]          	cmp rax, sob_boolean_false
  9577 000067E3 0F8493000000            	je .L_if_else_0022
  9578                                  	; preparing a tail-call
  9579                                  	; preparing a non-tail-call
  9580 000067E9 488B4528                	mov rax, PARAM(1)	; param b
  9581 000067ED 50                      	push rax
  9582 000067EE 6A01                    	push 1	; arg count
  9583 000067F0 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9584 000067F8 803805                  	cmp byte [rax], T_undefined
  9585 000067FB 0F84014C0000            	je L_error_fvar_undefined
  9586 00006801 803804                  	cmp byte [rax], T_closure
  9587 00006804 0F857C4C0000            	jne L_error_non_closure
  9588 0000680A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9589 0000680D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9590 00006810 50                      	push rax
  9591 00006811 488B4520                	mov rax, PARAM(0)	; param a
  9592 00006815 50                      	push rax
  9593 00006816 6A02                    	push 2	; arg count
  9594 00006818 488B0425[480C0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
  9595 00006820 803805                  	cmp byte [rax], T_undefined
  9596 00006823 0F84D94B0000            	je L_error_fvar_undefined
  9597 00006829 803804                  	cmp byte [rax], T_closure
  9598 0000682C 0F85544C0000            	jne L_error_non_closure
  9599 00006832 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9600 00006835 FF7508                  	push qword [rbp + 8 * 1]
  9601                                   ; old ret addr
  9602 00006838 FF7500                  	push qword [rbp]
  9603                                   ; restore the old rbp
  9604 0000683B BB02000000              	mov rbx, 2
  9605 00006840 4883C303                	add rbx, 3
  9606 00006844 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9607 00006848 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9608 0000684D 4C8D4DF8                	lea r9, [rbp - 8]
  9609 00006851 B906000000              	mov rcx, 6
  9610                                  .L_tc_recycle_frame_loop_004b:
  9611 00006856 4883F900                	cmp rcx, 0
  9612 0000685A 7413                    	je .L_tc_recycle_frame_done_004b
  9613 0000685C 4D8B11                  	mov r10, qword [r9]
  9614 0000685F 4D8910                  	mov qword [r8], r10
  9615 00006862 4983E808                	sub r8, 8
  9616 00006866 4983E908                	sub r9, 8
  9617 0000686A 48FFC9                  	dec rcx
  9618 0000686D EBE7                    	jmp .L_tc_recycle_frame_loop_004b
  9619                                  .L_tc_recycle_frame_done_004b:
  9620 0000686F 498D6008                	lea rsp, [r8 + 8]
  9621 00006873 5D                      	pop rbp ; restore the old rbp
  9622 00006874 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9623 00006877 E9BC010000              	jmp .L_if_end_0022
  9624                                  .L_if_else_0022:
  9625                                  	; preparing a non-tail-call
  9626 0000687C 488B4528                	mov rax, PARAM(1)	; param b
  9627 00006880 50                      	push rax
  9628 00006881 6A01                    	push 1	; arg count
  9629 00006883 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  9630 0000688B 803805                  	cmp byte [rax], T_undefined
  9631 0000688E 0F846E4B0000            	je L_error_fvar_undefined
  9632 00006894 803804                  	cmp byte [rax], T_closure
  9633 00006897 0F85E94B0000            	jne L_error_non_closure
  9634 0000689D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9635 000068A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9636 000068A3 483D[02000000]          	cmp rax, sob_boolean_false
  9637 000068A9 7470                    	je .L_if_else_0021
  9638                                  	; preparing a tail-call
  9639 000068AB 488B4528                	mov rax, PARAM(1)	; param b
  9640 000068AF 50                      	push rax
  9641 000068B0 488B4520                	mov rax, PARAM(0)	; param a
  9642 000068B4 50                      	push rax
  9643 000068B5 6A02                    	push 2	; arg count
  9644 000068B7 488B0425[480C0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
  9645 000068BF 803805                  	cmp byte [rax], T_undefined
  9646 000068C2 0F843A4B0000            	je L_error_fvar_undefined
  9647 000068C8 803804                  	cmp byte [rax], T_closure
  9648 000068CB 0F85B54B0000            	jne L_error_non_closure
  9649 000068D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9650 000068D4 FF7508                  	push qword [rbp + 8 * 1]
  9651                                   ; old ret addr
  9652 000068D7 FF7500                  	push qword [rbp]
  9653                                   ; restore the old rbp
  9654 000068DA BB02000000              	mov rbx, 2
  9655 000068DF 4883C303                	add rbx, 3
  9656 000068E3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9657 000068E7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9658 000068EC 4C8D4DF8                	lea r9, [rbp - 8]
  9659 000068F0 B906000000              	mov rcx, 6
  9660                                  .L_tc_recycle_frame_loop_004c:
  9661 000068F5 4883F900                	cmp rcx, 0
  9662 000068F9 7413                    	je .L_tc_recycle_frame_done_004c
  9663 000068FB 4D8B11                  	mov r10, qword [r9]
  9664 000068FE 4D8910                  	mov qword [r8], r10
  9665 00006901 4983E808                	sub r8, 8
  9666 00006905 4983E908                	sub r9, 8
  9667 00006909 48FFC9                  	dec rcx
  9668 0000690C EBE7                    	jmp .L_tc_recycle_frame_loop_004c
  9669                                  .L_tc_recycle_frame_done_004c:
  9670 0000690E 498D6008                	lea rsp, [r8 + 8]
  9671 00006912 5D                      	pop rbp ; restore the old rbp
  9672 00006913 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9673 00006916 E91D010000              	jmp .L_if_end_0021
  9674                                  .L_if_else_0021:
  9675                                  	; preparing a non-tail-call
  9676 0000691B 488B4528                	mov rax, PARAM(1)	; param b
  9677 0000691F 50                      	push rax
  9678 00006920 6A01                    	push 1	; arg count
  9679 00006922 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  9680 0000692A 803805                  	cmp byte [rax], T_undefined
  9681 0000692D 0F84CF4A0000            	je L_error_fvar_undefined
  9682 00006933 803804                  	cmp byte [rax], T_closure
  9683 00006936 0F854A4B0000            	jne L_error_non_closure
  9684 0000693C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9685 0000693F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9686 00006942 483D[02000000]          	cmp rax, sob_boolean_false
  9687 00006948 0F8490000000            	je .L_if_else_0020
  9688                                  	; preparing a tail-call
  9689 0000694E 488B4528                	mov rax, PARAM(1)	; param b
  9690 00006952 50                      	push rax
  9691                                  	; preparing a non-tail-call
  9692 00006953 488B4520                	mov rax, PARAM(0)	; param a
  9693 00006957 50                      	push rax
  9694 00006958 6A01                    	push 1	; arg count
  9695 0000695A 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
  9696 00006962 803805                  	cmp byte [rax], T_undefined
  9697 00006965 0F84974A0000            	je L_error_fvar_undefined
  9698 0000696B 803804                  	cmp byte [rax], T_closure
  9699 0000696E 0F85124B0000            	jne L_error_non_closure
  9700 00006974 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9701 00006977 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9702 0000697A 50                      	push rax
  9703 0000697B 6A02                    	push 2	; arg count
  9704 0000697D 488B0425[590C0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9705 00006985 803805                  	cmp byte [rax], T_undefined
  9706 00006988 0F84744A0000            	je L_error_fvar_undefined
  9707 0000698E 803804                  	cmp byte [rax], T_closure
  9708 00006991 0F85EF4A0000            	jne L_error_non_closure
  9709 00006997 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9710 0000699A FF7508                  	push qword [rbp + 8 * 1]
  9711                                   ; old ret addr
  9712 0000699D FF7500                  	push qword [rbp]
  9713                                   ; restore the old rbp
  9714 000069A0 BB02000000              	mov rbx, 2
  9715 000069A5 4883C303                	add rbx, 3
  9716 000069A9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9717 000069AD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9718 000069B2 4C8D4DF8                	lea r9, [rbp - 8]
  9719 000069B6 B906000000              	mov rcx, 6
  9720                                  .L_tc_recycle_frame_loop_004d:
  9721 000069BB 4883F900                	cmp rcx, 0
  9722 000069BF 7413                    	je .L_tc_recycle_frame_done_004d
  9723 000069C1 4D8B11                  	mov r10, qword [r9]
  9724 000069C4 4D8910                  	mov qword [r8], r10
  9725 000069C7 4983E808                	sub r8, 8
  9726 000069CB 4983E908                	sub r9, 8
  9727 000069CF 48FFC9                  	dec rcx
  9728 000069D2 EBE7                    	jmp .L_tc_recycle_frame_loop_004d
  9729                                  .L_tc_recycle_frame_done_004d:
  9730 000069D4 498D6008                	lea rsp, [r8 + 8]
  9731 000069D8 5D                      	pop rbp ; restore the old rbp
  9732 000069D9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9733 000069DC EB5A                    	jmp .L_if_end_0020
  9734                                  .L_if_else_0020:
  9735                                  	; preparing a tail-call
  9736 000069DE 6A00                    	push 0	; arg count
  9737 000069E0 488B4510                	mov rax, ENV
  9738 000069E4 488B00                  	mov rax, qword [rax + 8 * 0]
  9739 000069E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9740 000069EA 803804                  	cmp byte [rax], T_closure
  9741 000069ED 0F85934A0000            	jne L_error_non_closure
  9742 000069F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9743 000069F6 FF7508                  	push qword [rbp + 8 * 1]
  9744                                   ; old ret addr
  9745 000069F9 FF7500                  	push qword [rbp]
  9746                                   ; restore the old rbp
  9747 000069FC BB00000000              	mov rbx, 0
  9748 00006A01 4883C303                	add rbx, 3
  9749 00006A05 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9750 00006A09 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9751 00006A0E 4C8D4DF8                	lea r9, [rbp - 8]
  9752 00006A12 B904000000              	mov rcx, 4
  9753                                  .L_tc_recycle_frame_loop_004e:
  9754 00006A17 4883F900                	cmp rcx, 0
  9755 00006A1B 7413                    	je .L_tc_recycle_frame_done_004e
  9756 00006A1D 4D8B11                  	mov r10, qword [r9]
  9757 00006A20 4D8910                  	mov qword [r8], r10
  9758 00006A23 4983E808                	sub r8, 8
  9759 00006A27 4983E908                	sub r9, 8
  9760 00006A2B 48FFC9                  	dec rcx
  9761 00006A2E EBE7                    	jmp .L_tc_recycle_frame_loop_004e
  9762                                  .L_tc_recycle_frame_done_004e:
  9763 00006A30 498D6008                	lea rsp, [r8 + 8]
  9764 00006A34 5D                      	pop rbp ; restore the old rbp
  9765 00006A35 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9766                                  .L_if_end_0020:
  9767                                  .L_if_end_0021:
  9768                                  .L_if_end_0022:
  9769 00006A38 E911030000              	jmp .L_if_end_0027
  9770                                  .L_if_else_0027:
  9771                                  	; preparing a non-tail-call
  9772 00006A3D 488B4520                	mov rax, PARAM(0)	; param a
  9773 00006A41 50                      	push rax
  9774 00006A42 6A01                    	push 1	; arg count
  9775 00006A44 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  9776 00006A4C 803805                  	cmp byte [rax], T_undefined
  9777 00006A4F 0F84AD490000            	je L_error_fvar_undefined
  9778 00006A55 803804                  	cmp byte [rax], T_closure
  9779 00006A58 0F85284A0000            	jne L_error_non_closure
  9780 00006A5E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9781 00006A61 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9782 00006A64 483D[02000000]          	cmp rax, sob_boolean_false
  9783 00006A6A 0F8484020000            	je .L_if_else_0026
  9784                                  	; preparing a non-tail-call
  9785 00006A70 488B4528                	mov rax, PARAM(1)	; param b
  9786 00006A74 50                      	push rax
  9787 00006A75 6A01                    	push 1	; arg count
  9788 00006A77 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
  9789 00006A7F 803805                  	cmp byte [rax], T_undefined
  9790 00006A82 0F847A490000            	je L_error_fvar_undefined
  9791 00006A88 803804                  	cmp byte [rax], T_closure
  9792 00006A8B 0F85F5490000            	jne L_error_non_closure
  9793 00006A91 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9794 00006A94 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9795 00006A97 483D[02000000]          	cmp rax, sob_boolean_false
  9796 00006A9D 0F8493000000            	je .L_if_else_0025
  9797                                  	; preparing a tail-call
  9798                                  	; preparing a non-tail-call
  9799 00006AA3 488B4528                	mov rax, PARAM(1)	; param b
  9800 00006AA7 50                      	push rax
  9801 00006AA8 6A01                    	push 1	; arg count
  9802 00006AAA 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
  9803 00006AB2 803805                  	cmp byte [rax], T_undefined
  9804 00006AB5 0F8447490000            	je L_error_fvar_undefined
  9805 00006ABB 803804                  	cmp byte [rax], T_closure
  9806 00006ABE 0F85C2490000            	jne L_error_non_closure
  9807 00006AC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9808 00006AC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9809 00006ACA 50                      	push rax
  9810 00006ACB 488B4520                	mov rax, PARAM(0)	; param a
  9811 00006ACF 50                      	push rax
  9812 00006AD0 6A02                    	push 2	; arg count
  9813 00006AD2 488B0425[590C0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9814 00006ADA 803805                  	cmp byte [rax], T_undefined
  9815 00006ADD 0F841F490000            	je L_error_fvar_undefined
  9816 00006AE3 803804                  	cmp byte [rax], T_closure
  9817 00006AE6 0F859A490000            	jne L_error_non_closure
  9818 00006AEC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9819 00006AEF FF7508                  	push qword [rbp + 8 * 1]
  9820                                   ; old ret addr
  9821 00006AF2 FF7500                  	push qword [rbp]
  9822                                   ; restore the old rbp
  9823 00006AF5 BB02000000              	mov rbx, 2
  9824 00006AFA 4883C303                	add rbx, 3
  9825 00006AFE 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9826 00006B02 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9827 00006B07 4C8D4DF8                	lea r9, [rbp - 8]
  9828 00006B0B B906000000              	mov rcx, 6
  9829                                  .L_tc_recycle_frame_loop_004f:
  9830 00006B10 4883F900                	cmp rcx, 0
  9831 00006B14 7413                    	je .L_tc_recycle_frame_done_004f
  9832 00006B16 4D8B11                  	mov r10, qword [r9]
  9833 00006B19 4D8910                  	mov qword [r8], r10
  9834 00006B1C 4983E808                	sub r8, 8
  9835 00006B20 4983E908                	sub r9, 8
  9836 00006B24 48FFC9                  	dec rcx
  9837 00006B27 EBE7                    	jmp .L_tc_recycle_frame_loop_004f
  9838                                  .L_tc_recycle_frame_done_004f:
  9839 00006B29 498D6008                	lea rsp, [r8 + 8]
  9840 00006B2D 5D                      	pop rbp ; restore the old rbp
  9841 00006B2E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9842 00006B31 E9BC010000              	jmp .L_if_end_0025
  9843                                  .L_if_else_0025:
  9844                                  	; preparing a non-tail-call
  9845 00006B36 488B4528                	mov rax, PARAM(1)	; param b
  9846 00006B3A 50                      	push rax
  9847 00006B3B 6A01                    	push 1	; arg count
  9848 00006B3D 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
  9849 00006B45 803805                  	cmp byte [rax], T_undefined
  9850 00006B48 0F84B4480000            	je L_error_fvar_undefined
  9851 00006B4E 803804                  	cmp byte [rax], T_closure
  9852 00006B51 0F852F490000            	jne L_error_non_closure
  9853 00006B57 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9854 00006B5A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9855 00006B5D 483D[02000000]          	cmp rax, sob_boolean_false
  9856 00006B63 0F8493000000            	je .L_if_else_0024
  9857                                  	; preparing a tail-call
  9858                                  	; preparing a non-tail-call
  9859 00006B69 488B4528                	mov rax, PARAM(1)	; param b
  9860 00006B6D 50                      	push rax
  9861 00006B6E 6A01                    	push 1	; arg count
  9862 00006B70 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
  9863 00006B78 803805                  	cmp byte [rax], T_undefined
  9864 00006B7B 0F8481480000            	je L_error_fvar_undefined
  9865 00006B81 803804                  	cmp byte [rax], T_closure
  9866 00006B84 0F85FC480000            	jne L_error_non_closure
  9867 00006B8A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9868 00006B8D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9869 00006B90 50                      	push rax
  9870 00006B91 488B4520                	mov rax, PARAM(0)	; param a
  9871 00006B95 50                      	push rax
  9872 00006B96 6A02                    	push 2	; arg count
  9873 00006B98 488B0425[590C0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9874 00006BA0 803805                  	cmp byte [rax], T_undefined
  9875 00006BA3 0F8459480000            	je L_error_fvar_undefined
  9876 00006BA9 803804                  	cmp byte [rax], T_closure
  9877 00006BAC 0F85D4480000            	jne L_error_non_closure
  9878 00006BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9879 00006BB5 FF7508                  	push qword [rbp + 8 * 1]
  9880                                   ; old ret addr
  9881 00006BB8 FF7500                  	push qword [rbp]
  9882                                   ; restore the old rbp
  9883 00006BBB BB02000000              	mov rbx, 2
  9884 00006BC0 4883C303                	add rbx, 3
  9885 00006BC4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9886 00006BC8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9887 00006BCD 4C8D4DF8                	lea r9, [rbp - 8]
  9888 00006BD1 B906000000              	mov rcx, 6
  9889                                  .L_tc_recycle_frame_loop_0050:
  9890 00006BD6 4883F900                	cmp rcx, 0
  9891 00006BDA 7413                    	je .L_tc_recycle_frame_done_0050
  9892 00006BDC 4D8B11                  	mov r10, qword [r9]
  9893 00006BDF 4D8910                  	mov qword [r8], r10
  9894 00006BE2 4983E808                	sub r8, 8
  9895 00006BE6 4983E908                	sub r9, 8
  9896 00006BEA 48FFC9                  	dec rcx
  9897 00006BED EBE7                    	jmp .L_tc_recycle_frame_loop_0050
  9898                                  .L_tc_recycle_frame_done_0050:
  9899 00006BEF 498D6008                	lea rsp, [r8 + 8]
  9900 00006BF3 5D                      	pop rbp ; restore the old rbp
  9901 00006BF4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9902 00006BF7 E9F6000000              	jmp .L_if_end_0024
  9903                                  .L_if_else_0024:
  9904                                  	; preparing a non-tail-call
  9905 00006BFC 488B4528                	mov rax, PARAM(1)	; param b
  9906 00006C00 50                      	push rax
  9907 00006C01 6A01                    	push 1	; arg count
  9908 00006C03 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
  9909 00006C0B 803805                  	cmp byte [rax], T_undefined
  9910 00006C0E 0F84EE470000            	je L_error_fvar_undefined
  9911 00006C14 803804                  	cmp byte [rax], T_closure
  9912 00006C17 0F8569480000            	jne L_error_non_closure
  9913 00006C1D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9914 00006C20 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9915 00006C23 483D[02000000]          	cmp rax, sob_boolean_false
  9916 00006C29 746D                    	je .L_if_else_0023
  9917                                  	; preparing a tail-call
  9918 00006C2B 488B4528                	mov rax, PARAM(1)	; param b
  9919 00006C2F 50                      	push rax
  9920 00006C30 488B4520                	mov rax, PARAM(0)	; param a
  9921 00006C34 50                      	push rax
  9922 00006C35 6A02                    	push 2	; arg count
  9923 00006C37 488B0425[590C0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9924 00006C3F 803805                  	cmp byte [rax], T_undefined
  9925 00006C42 0F84BA470000            	je L_error_fvar_undefined
  9926 00006C48 803804                  	cmp byte [rax], T_closure
  9927 00006C4B 0F8535480000            	jne L_error_non_closure
  9928 00006C51 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9929 00006C54 FF7508                  	push qword [rbp + 8 * 1]
  9930                                   ; old ret addr
  9931 00006C57 FF7500                  	push qword [rbp]
  9932                                   ; restore the old rbp
  9933 00006C5A BB02000000              	mov rbx, 2
  9934 00006C5F 4883C303                	add rbx, 3
  9935 00006C63 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9936 00006C67 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9937 00006C6C 4C8D4DF8                	lea r9, [rbp - 8]
  9938 00006C70 B906000000              	mov rcx, 6
  9939                                  .L_tc_recycle_frame_loop_0051:
  9940 00006C75 4883F900                	cmp rcx, 0
  9941 00006C79 7413                    	je .L_tc_recycle_frame_done_0051
  9942 00006C7B 4D8B11                  	mov r10, qword [r9]
  9943 00006C7E 4D8910                  	mov qword [r8], r10
  9944 00006C81 4983E808                	sub r8, 8
  9945 00006C85 4983E908                	sub r9, 8
  9946 00006C89 48FFC9                  	dec rcx
  9947 00006C8C EBE7                    	jmp .L_tc_recycle_frame_loop_0051
  9948                                  .L_tc_recycle_frame_done_0051:
  9949 00006C8E 498D6008                	lea rsp, [r8 + 8]
  9950 00006C92 5D                      	pop rbp ; restore the old rbp
  9951 00006C93 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9952 00006C96 EB5A                    	jmp .L_if_end_0023
  9953                                  .L_if_else_0023:
  9954                                  	; preparing a tail-call
  9955 00006C98 6A00                    	push 0	; arg count
  9956 00006C9A 488B4510                	mov rax, ENV
  9957 00006C9E 488B00                  	mov rax, qword [rax + 8 * 0]
  9958 00006CA1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9959 00006CA4 803804                  	cmp byte [rax], T_closure
  9960 00006CA7 0F85D9470000            	jne L_error_non_closure
  9961 00006CAD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9962 00006CB0 FF7508                  	push qword [rbp + 8 * 1]
  9963                                   ; old ret addr
  9964 00006CB3 FF7500                  	push qword [rbp]
  9965                                   ; restore the old rbp
  9966 00006CB6 BB00000000              	mov rbx, 0
  9967 00006CBB 4883C303                	add rbx, 3
  9968 00006CBF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9969 00006CC3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9970 00006CC8 4C8D4DF8                	lea r9, [rbp - 8]
  9971 00006CCC B904000000              	mov rcx, 4
  9972                                  .L_tc_recycle_frame_loop_0052:
  9973 00006CD1 4883F900                	cmp rcx, 0
  9974 00006CD5 7413                    	je .L_tc_recycle_frame_done_0052
  9975 00006CD7 4D8B11                  	mov r10, qword [r9]
  9976 00006CDA 4D8910                  	mov qword [r8], r10
  9977 00006CDD 4983E808                	sub r8, 8
  9978 00006CE1 4983E908                	sub r9, 8
  9979 00006CE5 48FFC9                  	dec rcx
  9980 00006CE8 EBE7                    	jmp .L_tc_recycle_frame_loop_0052
  9981                                  .L_tc_recycle_frame_done_0052:
  9982 00006CEA 498D6008                	lea rsp, [r8 + 8]
  9983 00006CEE 5D                      	pop rbp ; restore the old rbp
  9984 00006CEF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9985                                  .L_if_end_0023:
  9986                                  .L_if_end_0024:
  9987                                  .L_if_end_0025:
  9988 00006CF2 EB5A                    	jmp .L_if_end_0026
  9989                                  .L_if_else_0026:
  9990                                  	; preparing a tail-call
  9991 00006CF4 6A00                    	push 0	; arg count
  9992 00006CF6 488B4510                	mov rax, ENV
  9993 00006CFA 488B00                  	mov rax, qword [rax + 8 * 0]
  9994 00006CFD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9995 00006D00 803804                  	cmp byte [rax], T_closure
  9996 00006D03 0F857D470000            	jne L_error_non_closure
  9997 00006D09 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9998 00006D0C FF7508                  	push qword [rbp + 8 * 1]
  9999                                   ; old ret addr
 10000 00006D0F FF7500                  	push qword [rbp]
 10001                                   ; restore the old rbp
 10002 00006D12 BB00000000              	mov rbx, 0
 10003 00006D17 4883C303                	add rbx, 3
 10004 00006D1B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10005 00006D1F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10006 00006D24 4C8D4DF8                	lea r9, [rbp - 8]
 10007 00006D28 B904000000              	mov rcx, 4
 10008                                  .L_tc_recycle_frame_loop_0053:
 10009 00006D2D 4883F900                	cmp rcx, 0
 10010 00006D31 7413                    	je .L_tc_recycle_frame_done_0053
 10011 00006D33 4D8B11                  	mov r10, qword [r9]
 10012 00006D36 4D8910                  	mov qword [r8], r10
 10013 00006D39 4983E808                	sub r8, 8
 10014 00006D3D 4983E908                	sub r9, 8
 10015 00006D41 48FFC9                  	dec rcx
 10016 00006D44 EBE7                    	jmp .L_tc_recycle_frame_loop_0053
 10017                                  .L_tc_recycle_frame_done_0053:
 10018 00006D46 498D6008                	lea rsp, [r8 + 8]
 10019 00006D4A 5D                      	pop rbp ; restore the old rbp
 10020 00006D4B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10021                                  .L_if_end_0026:
 10022                                  .L_if_end_0027:
 10023                                  .L_if_end_0028:
 10024 00006D4E C9                      	leave
 10025 00006D4F C22000                  	ret AND_KILL_FRAME(2)
 10026                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10027 00006D52 50                      	push rax
 10028 00006D53 6A01                    	push 1	; arg count
 10029 00006D55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10030 00006D5A E8D0470000              	call malloc
 10031 00006D5F 50                      	push rax
 10032 00006D60 BF08000000              	mov rdi, 8 * 1	; new rib
 10033 00006D65 E8C5470000              	call malloc
 10034 00006D6A 50                      	push rax
 10035 00006D6B BF10000000              	mov rdi, 8 * 2	; extended env
 10036 00006D70 E8BA470000              	call malloc
 10037 00006D75 488B7D10                	mov rdi, ENV
 10038 00006D79 BE00000000              	mov rsi, 0
 10039 00006D7E BA01000000              	mov rdx, 1
 10040                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10041 00006D83 4883FE01                	cmp rsi, 1
 10042 00006D87 7410                    	je .L_lambda_simple_env_end_003b
 10043 00006D89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10044 00006D8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10045 00006D91 48FFC6                  	inc rsi
 10046 00006D94 48FFC2                  	inc rdx
 10047 00006D97 EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10048                                  .L_lambda_simple_env_end_003b:
 10049 00006D99 5B                      	pop rbx
 10050 00006D9A BE00000000              	mov rsi, 0
 10051                                  .L_lambda_simple_params_loop_003b:	; copy params
 10052 00006D9F 4883FE01                	cmp rsi, 1
 10053 00006DA3 740E                    	je .L_lambda_simple_params_end_003b
 10054 00006DA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10055 00006DAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10056 00006DAE 48FFC6                  	inc rsi
 10057 00006DB1 EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10058                                  .L_lambda_simple_params_end_003b:
 10059 00006DB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10060 00006DB6 4889C3                  	mov rbx, rax
 10061 00006DB9 58                      	pop rax
 10062 00006DBA C60004                  	mov byte [rax], T_closure
 10063 00006DBD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10064 00006DC1 48C74009[CE6D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10065 00006DC9 E964030000              	jmp .L_lambda_simple_end_003b
 10066                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10067 00006DCE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10068 00006DD4 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10069 00006DD6 FF742410                	push qword [rsp + 8 * 2]
 10070 00006DDA 6A01                    	push 1
 10071 00006DDC E907470000              	jmp L_error_incorrect_arity_simple
 10072                                  .L_lambda_simple_arity_check_ok_003b:
 10073 00006DE1 C8000000                	enter 0, 0
 10074 00006DE5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10075 00006DEA E840470000              	call malloc
 10076 00006DEF 50                      	push rax
 10077 00006DF0 BF10000000              	mov rdi, 8 * 2	; new rib
 10078 00006DF5 E835470000              	call malloc
 10079 00006DFA 50                      	push rax
 10080 00006DFB BF18000000              	mov rdi, 8 * 3	; extended env
 10081 00006E00 E82A470000              	call malloc
 10082 00006E05 488B7D10                	mov rdi, ENV
 10083 00006E09 BE00000000              	mov rsi, 0
 10084 00006E0E BA01000000              	mov rdx, 1
 10085                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 10086 00006E13 4883FE02                	cmp rsi, 2
 10087 00006E17 7410                    	je .L_lambda_opt_env_end_000b
 10088 00006E19 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10089 00006E1D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10090 00006E21 48FFC6                  	inc rsi
 10091 00006E24 48FFC2                  	inc rdx
 10092 00006E27 EBEA                    	jmp .L_lambda_opt_env_loop_000b
 10093                                  .L_lambda_opt_env_end_000b:
 10094 00006E29 5B                      	pop rbx
 10095 00006E2A BE00000000              	mov rsi, 0
 10096                                  .L_lambda_opt_params_loop_000b:	; copy params
 10097 00006E2F 4883FE01                	cmp rsi, 1
 10098 00006E33 740E                    	je .L_lambda_opt_params_end_000b
 10099 00006E35 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10100 00006E3A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10101 00006E3E 48FFC6                  	inc rsi
 10102 00006E41 EBEC                    	jmp .L_lambda_opt_params_loop_000b
 10103                                  .L_lambda_opt_params_end_000b:
 10104 00006E43 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10105 00006E46 4889C3                  	mov rbx, rax
 10106 00006E49 58                      	pop rax
 10107 00006E4A C60004                  	mov byte [rax], T_closure
 10108 00006E4D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10109 00006E51 48C74009[5E6E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 10110 00006E59 E9D0020000              	jmp .L_lambda_opt_end_000b
 10111                                  .L_lambda_opt_code_000b:	; lambda-opt body
 10112 00006E5E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10113 00006E64 745E                    	je .L_lambda_opt_arity_check_exact_000b
 10114 00006E66 7F0B                    	jg .L_lambda_opt_arity_check_more_000b
 10115 00006E68 FF742410                	push qword [rsp + 8 * 2]
 10116 00006E6C 6A01                    	push 1
 10117 00006E6E E975460000              	jmp L_error_incorrect_arity_simple
 10118                                  .L_lambda_opt_arity_check_more_000b:
 10119 00006E73 53                      push rbx
 10120 00006E74 51                      push rcx
 10121 00006E75 488B4D10                mov rcx, [rbp + 8*2]
 10122 00006E79 BB01000000              mov rbx , 1
 10123 00006E7E 4829D9                  sub rcx, rbx
 10124 00006E81 48FFC3                  inc rbx
 10125 00006E84 48895D10                mov [rbp + 8*2], rbx
 10126 00006E88 4889CF                  	 mov rdi, rcx 
 10127 00006E8B 48C1E703                	 shl rdi, 3 
 10128 00006E8F E89B460000              	call malloc
 10129 00006E94 50                      	push rax
 10130 00006E95 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
 10131 00006E9A 4831FF                  xor rdi, rdi
 10132                                  .L_lambda_opt_stack_shrink_loop_000b:
 10133 00006E9D 4839CF                  	cmp rdi, rcx
 10134 00006EA0 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_000b
 10135 00006EA2 488904FC                mov [rsp + rdi*8], rax
 10136 00006EA6 48FFC7                  	inc rdi
 10137 00006EA9 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
 10138 00006EB1 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
 10139 00006EB6 498B04D9                mov rax,[r9 + rbx*8] 
 10140 00006EBA EBE1                    jmp .L_lambda_opt_stack_shrink_loop_000b
 10141                                  .L_lambda_opt_stack_shrink_loop_exit_000b:
 10142 00006EBC 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
 10143 00006EC0 5B                      pop rbx
 10144 00006EC1 53                      push rbx
 10145 00006EC2 EB16                    jmp .L_lambda_opt_stack_adjusted_000b
 10146                                  .L_lambda_opt_arity_check_exact_000b:
 10147 00006EC4 48B8-                   	mov rax, L_constants + 1
 10147 00006EC6 [0100000000000000] 
 10148 00006ECE 53                      push rbx
 10149 00006ECF 488B5C2410              mov rbx , [rsp + 8*2]
 10150 00006ED4 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
 10151 00006ED9 5B                      pop rbx
 10152                                  .L_lambda_opt_stack_adjusted_000b:	; new closure is in rax
 10153 00006EDA C8000000                	enter 0, 0
 10154                                  	; preparing a non-tail-call
 10155 00006EDE 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 10156 00006EE6 803805                  	cmp byte [rax], T_undefined
 10157 00006EE9 0F8413450000            	je L_error_fvar_undefined
 10158 00006EEF 50                      	push rax
 10159 00006EF0 6A01                    	push 1	; arg count
 10160 00006EF2 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
 10161 00006EFA 803805                  	cmp byte [rax], T_undefined
 10162 00006EFD 0F84FF440000            	je L_error_fvar_undefined
 10163 00006F03 803804                  	cmp byte [rax], T_closure
 10164 00006F06 0F857A450000            	jne L_error_non_closure
 10165 00006F0C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10166 00006F0F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10167 00006F12 483D[02000000]          	cmp rax, sob_boolean_false
 10168 00006F18 746F                    	je .L_if_else_0029
 10169                                  	; preparing a tail-call
 10170 00006F1A 488B4520                	mov rax, PARAM(0)	; param a
 10171 00006F1E 50                      	push rax
 10172 00006F1F 48B8-                   	mov rax, L_constants + 2169
 10172 00006F21 [7908000000000000] 
 10173 00006F29 50                      	push rax
 10174 00006F2A 6A02                    	push 2	; arg count
 10175 00006F2C 488B4510                	mov rax, ENV
 10176 00006F30 488B00                  	mov rax, qword [rax + 8 * 0]
 10177 00006F33 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 10178 00006F36 803804                  	cmp byte [rax], T_closure
 10179 00006F39 0F8547450000            	jne L_error_non_closure
 10180 00006F3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10181 00006F42 FF7508                  	push qword [rbp + 8 * 1]
 10182                                   ; old ret addr
 10183 00006F45 FF7500                  	push qword [rbp]
 10184                                   ; restore the old rbp
 10185 00006F48 BB02000000              	mov rbx, 2
 10186 00006F4D 4883C303                	add rbx, 3
 10187 00006F51 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10188 00006F55 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10189 00006F5A 4C8D4DF8                	lea r9, [rbp - 8]
 10190 00006F5E B906000000              	mov rcx, 6
 10191                                  .L_tc_recycle_frame_loop_0054:
 10192 00006F63 4883F900                	cmp rcx, 0
 10193 00006F67 7413                    	je .L_tc_recycle_frame_done_0054
 10194 00006F69 4D8B11                  	mov r10, qword [r9]
 10195 00006F6C 4D8910                  	mov qword [r8], r10
 10196 00006F6F 4983E808                	sub r8, 8
 10197 00006F73 4983E908                	sub r9, 8
 10198 00006F77 48FFC9                  	dec rcx
 10199 00006F7A EBE7                    	jmp .L_tc_recycle_frame_loop_0054
 10200                                  .L_tc_recycle_frame_done_0054:
 10201 00006F7C 498D6008                	lea rsp, [r8 + 8]
 10202 00006F80 5D                      	pop rbp ; restore the old rbp
 10203 00006F81 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10204 00006F84 E9A1010000              	jmp .L_if_end_0029
 10205                                  .L_if_else_0029:
 10206                                  	; preparing a tail-call
 10207                                  	; preparing a non-tail-call
 10208 00006F89 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 10209 00006F91 803805                  	cmp byte [rax], T_undefined
 10210 00006F94 0F8468440000            	je L_error_fvar_undefined
 10211 00006F9A 50                      	push rax
 10212 00006F9B 48B8-                   	mov rax, L_constants + 2169
 10212 00006F9D [7908000000000000] 
 10213 00006FA5 50                      	push rax
 10214 00006FA6 488B0425[B00A0000]      	mov rax, qword [free_var_1]	; free var +
 10215 00006FAE 803805                  	cmp byte [rax], T_undefined
 10216 00006FB1 0F844B440000            	je L_error_fvar_undefined
 10217 00006FB7 50                      	push rax
 10218 00006FB8 6A03                    	push 3	; arg count
 10219 00006FBA 488B0425[AB0F0000]      	mov rax, qword [free_var_76]	; free var fold-left
 10220 00006FC2 803805                  	cmp byte [rax], T_undefined
 10221 00006FC5 0F8437440000            	je L_error_fvar_undefined
 10222 00006FCB 803804                  	cmp byte [rax], T_closure
 10223 00006FCE 0F85B2440000            	jne L_error_non_closure
 10224 00006FD4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10225 00006FD7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10226 00006FDA 50                      	push rax
 10227 00006FDB 6A01                    	push 1	; arg count
 10228 00006FDD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10229 00006FE2 E848450000              	call malloc
 10230 00006FE7 50                      	push rax
 10231 00006FE8 BF08000000              	mov rdi, 8 * 1	; new rib
 10232 00006FED E83D450000              	call malloc
 10233 00006FF2 50                      	push rax
 10234 00006FF3 BF20000000              	mov rdi, 8 * 4	; extended env
 10235 00006FF8 E832450000              	call malloc
 10236 00006FFD 488B7D10                	mov rdi, ENV
 10237 00007001 BE00000000              	mov rsi, 0
 10238 00007006 BA01000000              	mov rdx, 1
 10239                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 10240 0000700B 4883FE03                	cmp rsi, 3
 10241 0000700F 7410                    	je .L_lambda_simple_env_end_003c
 10242 00007011 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10243 00007015 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10244 00007019 48FFC6                  	inc rsi
 10245 0000701C 48FFC2                  	inc rdx
 10246 0000701F EBEA                    	jmp .L_lambda_simple_env_loop_003c
 10247                                  .L_lambda_simple_env_end_003c:
 10248 00007021 5B                      	pop rbx
 10249 00007022 BE00000000              	mov rsi, 0
 10250                                  .L_lambda_simple_params_loop_003c:	; copy params
 10251 00007027 4883FE01                	cmp rsi, 1
 10252 0000702B 740E                    	je .L_lambda_simple_params_end_003c
 10253 0000702D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10254 00007032 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10255 00007036 48FFC6                  	inc rsi
 10256 00007039 EBEC                    	jmp .L_lambda_simple_params_loop_003c
 10257                                  .L_lambda_simple_params_end_003c:
 10258 0000703B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10259 0000703E 4889C3                  	mov rbx, rax
 10260 00007041 58                      	pop rax
 10261 00007042 C60004                  	mov byte [rax], T_closure
 10262 00007045 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10263 00007049 48C74009[56700000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 10264 00007051 E986000000              	jmp .L_lambda_simple_end_003c
 10265                                  .L_lambda_simple_code_003c:	; lambda-simple body
 10266 00007056 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10267 0000705C 740B                    	je .L_lambda_simple_arity_check_ok_003c
 10268 0000705E FF742410                	push qword [rsp + 8 * 2]
 10269 00007062 6A01                    	push 1
 10270 00007064 E97F440000              	jmp L_error_incorrect_arity_simple
 10271                                  .L_lambda_simple_arity_check_ok_003c:
 10272 00007069 C8000000                	enter 0, 0
 10273                                  	; preparing a tail-call
 10274 0000706D 488B4520                	mov rax, PARAM(0)	; param b
 10275 00007071 50                      	push rax
 10276 00007072 488B4510                	mov rax, ENV
 10277 00007076 488B00                  	mov rax, qword [rax + 8 * 0]
 10278 00007079 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 10279 0000707C 50                      	push rax
 10280 0000707D 6A02                    	push 2	; arg count
 10281 0000707F 488B4510                	mov rax, ENV
 10282 00007083 488B4008                	mov rax, qword [rax + 8 * 1]
 10283 00007087 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 10284 0000708A 803804                  	cmp byte [rax], T_closure
 10285 0000708D 0F85F3430000            	jne L_error_non_closure
 10286 00007093 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10287 00007096 FF7508                  	push qword [rbp + 8 * 1]
 10288                                   ; old ret addr
 10289 00007099 FF7500                  	push qword [rbp]
 10290                                   ; restore the old rbp
 10291 0000709C BB02000000              	mov rbx, 2
 10292 000070A1 4883C303                	add rbx, 3
 10293 000070A5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10294 000070A9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10295 000070AE 4C8D4DF8                	lea r9, [rbp - 8]
 10296 000070B2 B906000000              	mov rcx, 6
 10297                                  .L_tc_recycle_frame_loop_0056:
 10298 000070B7 4883F900                	cmp rcx, 0
 10299 000070BB 7413                    	je .L_tc_recycle_frame_done_0056
 10300 000070BD 4D8B11                  	mov r10, qword [r9]
 10301 000070C0 4D8910                  	mov qword [r8], r10
 10302 000070C3 4983E808                	sub r8, 8
 10303 000070C7 4983E908                	sub r9, 8
 10304 000070CB 48FFC9                  	dec rcx
 10305 000070CE EBE7                    	jmp .L_tc_recycle_frame_loop_0056
 10306                                  .L_tc_recycle_frame_done_0056:
 10307 000070D0 498D6008                	lea rsp, [r8 + 8]
 10308 000070D4 5D                      	pop rbp ; restore the old rbp
 10309 000070D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10310 000070D8 C9                      	leave
 10311 000070D9 C21800                  	ret AND_KILL_FRAME(1)
 10312                                  .L_lambda_simple_end_003c:	; new closure is in rax
 10313 000070DC 803804                  	cmp byte [rax], T_closure
 10314 000070DF 0F85A1430000            	jne L_error_non_closure
 10315 000070E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10316 000070E8 FF7508                  	push qword [rbp + 8 * 1]
 10317                                   ; old ret addr
 10318 000070EB FF7500                  	push qword [rbp]
 10319                                   ; restore the old rbp
 10320 000070EE BB01000000              	mov rbx, 1
 10321 000070F3 4883C303                	add rbx, 3
 10322 000070F7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10323 000070FB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10324 00007100 4C8D4DF8                	lea r9, [rbp - 8]
 10325 00007104 B905000000              	mov rcx, 5
 10326                                  .L_tc_recycle_frame_loop_0055:
 10327 00007109 4883F900                	cmp rcx, 0
 10328 0000710D 7413                    	je .L_tc_recycle_frame_done_0055
 10329 0000710F 4D8B11                  	mov r10, qword [r9]
 10330 00007112 4D8910                  	mov qword [r8], r10
 10331 00007115 4983E808                	sub r8, 8
 10332 00007119 4983E908                	sub r9, 8
 10333 0000711D 48FFC9                  	dec rcx
 10334 00007120 EBE7                    	jmp .L_tc_recycle_frame_loop_0055
 10335                                  .L_tc_recycle_frame_done_0055:
 10336 00007122 498D6008                	lea rsp, [r8 + 8]
 10337 00007126 5D                      	pop rbp ; restore the old rbp
 10338 00007127 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10339                                  .L_if_end_0029:
 10340 0000712A C9                      	leave
 10341 0000712B C21800                  	ret AND_KILL_FRAME(1)
 10342                                  .L_lambda_opt_end_000b:	; new closure is in rax
 10343 0000712E C9                      	leave
 10344 0000712F C21800                  	ret AND_KILL_FRAME(1)
 10345                                  .L_lambda_simple_end_003b:	; new closure is in rax
 10346 00007132 803804                  	cmp byte [rax], T_closure
 10347 00007135 0F854B430000            	jne L_error_non_closure
 10348 0000713B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10349 0000713E FF7508                  	push qword [rbp + 8 * 1]
 10350                                   ; old ret addr
 10351 00007141 FF7500                  	push qword [rbp]
 10352                                   ; restore the old rbp
 10353 00007144 BB01000000              	mov rbx, 1
 10354 00007149 4883C303                	add rbx, 3
 10355 0000714D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10356 00007151 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10357 00007156 4C8D4DF8                	lea r9, [rbp - 8]
 10358 0000715A B905000000              	mov rcx, 5
 10359                                  .L_tc_recycle_frame_loop_0046:
 10360 0000715F 4883F900                	cmp rcx, 0
 10361 00007163 7413                    	je .L_tc_recycle_frame_done_0046
 10362 00007165 4D8B11                  	mov r10, qword [r9]
 10363 00007168 4D8910                  	mov qword [r8], r10
 10364 0000716B 4983E808                	sub r8, 8
 10365 0000716F 4983E908                	sub r9, 8
 10366 00007173 48FFC9                  	dec rcx
 10367 00007176 EBE7                    	jmp .L_tc_recycle_frame_loop_0046
 10368                                  .L_tc_recycle_frame_done_0046:
 10369 00007178 498D6008                	lea rsp, [r8 + 8]
 10370 0000717C 5D                      	pop rbp ; restore the old rbp
 10371 0000717D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10372 00007180 C9                      	leave
 10373 00007181 C21800                  	ret AND_KILL_FRAME(1)
 10374                                  .L_lambda_simple_end_0039:	; new closure is in rax
 10375 00007184 803804                  	cmp byte [rax], T_closure
 10376 00007187 0F85F9420000            	jne L_error_non_closure
 10377 0000718D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10378 00007190 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10379 00007193 48890425[C10A0000]      	mov qword [free_var_2], rax
 10380 0000719B 48B8-                   	mov rax, sob_void
 10380 0000719D [0000000000000000] 
 10381                                  
 10382 000071A5 4889C7                  	mov rdi, rax
 10383 000071A8 E8D7450000              	call print_sexpr_if_not_void
 10384                                  	; preparing a non-tail-call
 10385 000071AD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10386 000071B2 E878430000              	call malloc
 10387 000071B7 50                      	push rax
 10388 000071B8 BF00000000              	mov rdi, 8 * 0	; new rib
 10389 000071BD E86D430000              	call malloc
 10390 000071C2 50                      	push rax
 10391 000071C3 BF08000000              	mov rdi, 8 * 1	; extended env
 10392 000071C8 E862430000              	call malloc
 10393 000071CD 488B7D10                	mov rdi, ENV
 10394 000071D1 BE00000000              	mov rsi, 0
 10395 000071D6 BA01000000              	mov rdx, 1
 10396                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 10397 000071DB 4883FE00                	cmp rsi, 0
 10398 000071DF 7410                    	je .L_lambda_simple_env_end_003d
 10399 000071E1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10400 000071E5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10401 000071E9 48FFC6                  	inc rsi
 10402 000071EC 48FFC2                  	inc rdx
 10403 000071EF EBEA                    	jmp .L_lambda_simple_env_loop_003d
 10404                                  .L_lambda_simple_env_end_003d:
 10405 000071F1 5B                      	pop rbx
 10406 000071F2 BE00000000              	mov rsi, 0
 10407                                  .L_lambda_simple_params_loop_003d:	; copy params
 10408 000071F7 4883FE00                	cmp rsi, 0
 10409 000071FB 740E                    	je .L_lambda_simple_params_end_003d
 10410 000071FD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10411 00007202 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10412 00007206 48FFC6                  	inc rsi
 10413 00007209 EBEC                    	jmp .L_lambda_simple_params_loop_003d
 10414                                  .L_lambda_simple_params_end_003d:
 10415 0000720B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10416 0000720E 4889C3                  	mov rbx, rax
 10417 00007211 58                      	pop rax
 10418 00007212 C60004                  	mov byte [rax], T_closure
 10419 00007215 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10420 00007219 48C74009[26720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 10421 00007221 E992000000              	jmp .L_lambda_simple_end_003d
 10422                                  .L_lambda_simple_code_003d:	; lambda-simple body
 10423 00007226 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10424 0000722C 740B                    	je .L_lambda_simple_arity_check_ok_003d
 10425 0000722E FF742410                	push qword [rsp + 8 * 2]
 10426 00007232 6A00                    	push 0
 10427 00007234 E9AF420000              	jmp L_error_incorrect_arity_simple
 10428                                  .L_lambda_simple_arity_check_ok_003d:
 10429 00007239 C8000000                	enter 0, 0
 10430                                  	; preparing a tail-call
 10431 0000723D 48B8-                   	mov rax, L_constants + 2221
 10431 0000723F [AD08000000000000] 
 10432 00007247 50                      	push rax
 10433 00007248 48B8-                   	mov rax, L_constants + 2313
 10433 0000724A [0909000000000000] 
 10434 00007252 50                      	push rax
 10435 00007253 6A02                    	push 2	; arg count
 10436 00007255 488B0425[890F0000]      	mov rax, qword [free_var_74]	; free var error
 10437 0000725D 803805                  	cmp byte [rax], T_undefined
 10438 00007260 0F849C410000            	je L_error_fvar_undefined
 10439 00007266 803804                  	cmp byte [rax], T_closure
 10440 00007269 0F8517420000            	jne L_error_non_closure
 10441 0000726F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10442 00007272 FF7508                  	push qword [rbp + 8 * 1]
 10443                                   ; old ret addr
 10444 00007275 FF7500                  	push qword [rbp]
 10445                                   ; restore the old rbp
 10446 00007278 BB02000000              	mov rbx, 2
 10447 0000727D 4883C303                	add rbx, 3
 10448 00007281 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10449 00007285 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10450 0000728A 4C8D4DF8                	lea r9, [rbp - 8]
 10451 0000728E B906000000              	mov rcx, 6
 10452                                  .L_tc_recycle_frame_loop_0057:
 10453 00007293 4883F900                	cmp rcx, 0
 10454 00007297 7413                    	je .L_tc_recycle_frame_done_0057
 10455 00007299 4D8B11                  	mov r10, qword [r9]
 10456 0000729C 4D8910                  	mov qword [r8], r10
 10457 0000729F 4983E808                	sub r8, 8
 10458 000072A3 4983E908                	sub r9, 8
 10459 000072A7 48FFC9                  	dec rcx
 10460 000072AA EBE7                    	jmp .L_tc_recycle_frame_loop_0057
 10461                                  .L_tc_recycle_frame_done_0057:
 10462 000072AC 498D6008                	lea rsp, [r8 + 8]
 10463 000072B0 5D                      	pop rbp ; restore the old rbp
 10464 000072B1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10465 000072B4 C9                      	leave
 10466 000072B5 C21000                  	ret AND_KILL_FRAME(0)
 10467                                  .L_lambda_simple_end_003d:	; new closure is in rax
 10468 000072B8 50                      	push rax
 10469 000072B9 6A01                    	push 1	; arg count
 10470 000072BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10471 000072C0 E86A420000              	call malloc
 10472 000072C5 50                      	push rax
 10473 000072C6 BF00000000              	mov rdi, 8 * 0	; new rib
 10474 000072CB E85F420000              	call malloc
 10475 000072D0 50                      	push rax
 10476 000072D1 BF08000000              	mov rdi, 8 * 1	; extended env
 10477 000072D6 E854420000              	call malloc
 10478 000072DB 488B7D10                	mov rdi, ENV
 10479 000072DF BE00000000              	mov rsi, 0
 10480 000072E4 BA01000000              	mov rdx, 1
 10481                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 10482 000072E9 4883FE00                	cmp rsi, 0
 10483 000072ED 7410                    	je .L_lambda_simple_env_end_003e
 10484 000072EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10485 000072F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10486 000072F7 48FFC6                  	inc rsi
 10487 000072FA 48FFC2                  	inc rdx
 10488 000072FD EBEA                    	jmp .L_lambda_simple_env_loop_003e
 10489                                  .L_lambda_simple_env_end_003e:
 10490 000072FF 5B                      	pop rbx
 10491 00007300 BE00000000              	mov rsi, 0
 10492                                  .L_lambda_simple_params_loop_003e:	; copy params
 10493 00007305 4883FE00                	cmp rsi, 0
 10494 00007309 740E                    	je .L_lambda_simple_params_end_003e
 10495 0000730B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10496 00007310 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10497 00007314 48FFC6                  	inc rsi
 10498 00007317 EBEC                    	jmp .L_lambda_simple_params_loop_003e
 10499                                  .L_lambda_simple_params_end_003e:
 10500 00007319 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10501 0000731C 4889C3                  	mov rbx, rax
 10502 0000731F 58                      	pop rax
 10503 00007320 C60004                  	mov byte [rax], T_closure
 10504 00007323 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10505 00007327 48C74009[34730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 10506 0000732F E99F0B0000              	jmp .L_lambda_simple_end_003e
 10507                                  .L_lambda_simple_code_003e:	; lambda-simple body
 10508 00007334 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10509 0000733A 740B                    	je .L_lambda_simple_arity_check_ok_003e
 10510 0000733C FF742410                	push qword [rsp + 8 * 2]
 10511 00007340 6A01                    	push 1
 10512 00007342 E9A1410000              	jmp L_error_incorrect_arity_simple
 10513                                  .L_lambda_simple_arity_check_ok_003e:
 10514 00007347 C8000000                	enter 0, 0
 10515                                  	; preparing a tail-call
 10516 0000734B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10517 00007350 E8DA410000              	call malloc
 10518 00007355 50                      	push rax
 10519 00007356 BF08000000              	mov rdi, 8 * 1	; new rib
 10520 0000735B E8CF410000              	call malloc
 10521 00007360 50                      	push rax
 10522 00007361 BF10000000              	mov rdi, 8 * 2	; extended env
 10523 00007366 E8C4410000              	call malloc
 10524 0000736B 488B7D10                	mov rdi, ENV
 10525 0000736F BE00000000              	mov rsi, 0
 10526 00007374 BA01000000              	mov rdx, 1
 10527                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 10528 00007379 4883FE01                	cmp rsi, 1
 10529 0000737D 7410                    	je .L_lambda_simple_env_end_003f
 10530 0000737F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10531 00007383 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10532 00007387 48FFC6                  	inc rsi
 10533 0000738A 48FFC2                  	inc rdx
 10534 0000738D EBEA                    	jmp .L_lambda_simple_env_loop_003f
 10535                                  .L_lambda_simple_env_end_003f:
 10536 0000738F 5B                      	pop rbx
 10537 00007390 BE00000000              	mov rsi, 0
 10538                                  .L_lambda_simple_params_loop_003f:	; copy params
 10539 00007395 4883FE01                	cmp rsi, 1
 10540 00007399 740E                    	je .L_lambda_simple_params_end_003f
 10541 0000739B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10542 000073A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10543 000073A4 48FFC6                  	inc rsi
 10544 000073A7 EBEC                    	jmp .L_lambda_simple_params_loop_003f
 10545                                  .L_lambda_simple_params_end_003f:
 10546 000073A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10547 000073AC 4889C3                  	mov rbx, rax
 10548 000073AF 58                      	pop rax
 10549 000073B0 C60004                  	mov byte [rax], T_closure
 10550 000073B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10551 000073B7 48C74009[C4730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 10552 000073BF E9A0080000              	jmp .L_lambda_simple_end_003f
 10553                                  .L_lambda_simple_code_003f:	; lambda-simple body
 10554 000073C4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10555 000073CA 740B                    	je .L_lambda_simple_arity_check_ok_003f
 10556 000073CC FF742410                	push qword [rsp + 8 * 2]
 10557 000073D0 6A02                    	push 2
 10558 000073D2 E911410000              	jmp L_error_incorrect_arity_simple
 10559                                  .L_lambda_simple_arity_check_ok_003f:
 10560 000073D7 C8000000                	enter 0, 0
 10561                                  	; preparing a non-tail-call
 10562 000073DB 488B4520                	mov rax, PARAM(0)	; param a
 10563 000073DF 50                      	push rax
 10564 000073E0 6A01                    	push 1	; arg count
 10565 000073E2 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 10566 000073EA 803805                  	cmp byte [rax], T_undefined
 10567 000073ED 0F840F400000            	je L_error_fvar_undefined
 10568 000073F3 803804                  	cmp byte [rax], T_closure
 10569 000073F6 0F858A400000            	jne L_error_non_closure
 10570 000073FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10571 000073FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10572 00007402 483D[02000000]          	cmp rax, sob_boolean_false
 10573 00007408 0F8487020000            	je .L_if_else_0035
 10574                                  	; preparing a non-tail-call
 10575 0000740E 488B4528                	mov rax, PARAM(1)	; param b
 10576 00007412 50                      	push rax
 10577 00007413 6A01                    	push 1	; arg count
 10578 00007415 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 10579 0000741D 803805                  	cmp byte [rax], T_undefined
 10580 00007420 0F84DC3F0000            	je L_error_fvar_undefined
 10581 00007426 803804                  	cmp byte [rax], T_closure
 10582 00007429 0F8557400000            	jne L_error_non_closure
 10583 0000742F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10584 00007432 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10585 00007435 483D[02000000]          	cmp rax, sob_boolean_false
 10586 0000743B 7470                    	je .L_if_else_002c
 10587                                  	; preparing a tail-call
 10588 0000743D 488B4528                	mov rax, PARAM(1)	; param b
 10589 00007441 50                      	push rax
 10590 00007442 488B4520                	mov rax, PARAM(0)	; param a
 10591 00007446 50                      	push rax
 10592 00007447 6A02                    	push 2	; arg count
 10593 00007449 488B0425[370C0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 10594 00007451 803805                  	cmp byte [rax], T_undefined
 10595 00007454 0F84A83F0000            	je L_error_fvar_undefined
 10596 0000745A 803804                  	cmp byte [rax], T_closure
 10597 0000745D 0F8523400000            	jne L_error_non_closure
 10598 00007463 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10599 00007466 FF7508                  	push qword [rbp + 8 * 1]
 10600                                   ; old ret addr
 10601 00007469 FF7500                  	push qword [rbp]
 10602                                   ; restore the old rbp
 10603 0000746C BB02000000              	mov rbx, 2
 10604 00007471 4883C303                	add rbx, 3
 10605 00007475 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10606 00007479 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10607 0000747E 4C8D4DF8                	lea r9, [rbp - 8]
 10608 00007482 B906000000              	mov rcx, 6
 10609                                  .L_tc_recycle_frame_loop_0059:
 10610 00007487 4883F900                	cmp rcx, 0
 10611 0000748B 7413                    	je .L_tc_recycle_frame_done_0059
 10612 0000748D 4D8B11                  	mov r10, qword [r9]
 10613 00007490 4D8910                  	mov qword [r8], r10
 10614 00007493 4983E808                	sub r8, 8
 10615 00007497 4983E908                	sub r9, 8
 10616 0000749B 48FFC9                  	dec rcx
 10617 0000749E EBE7                    	jmp .L_tc_recycle_frame_loop_0059
 10618                                  .L_tc_recycle_frame_done_0059:
 10619 000074A0 498D6008                	lea rsp, [r8 + 8]
 10620 000074A4 5D                      	pop rbp ; restore the old rbp
 10621 000074A5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10622 000074A8 E9E3010000              	jmp .L_if_end_002c
 10623                                  .L_if_else_002c:
 10624                                  	; preparing a non-tail-call
 10625 000074AD 488B4528                	mov rax, PARAM(1)	; param b
 10626 000074B1 50                      	push rax
 10627 000074B2 6A01                    	push 1	; arg count
 10628 000074B4 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 10629 000074BC 803805                  	cmp byte [rax], T_undefined
 10630 000074BF 0F843D3F0000            	je L_error_fvar_undefined
 10631 000074C5 803804                  	cmp byte [rax], T_closure
 10632 000074C8 0F85B83F0000            	jne L_error_non_closure
 10633 000074CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10634 000074D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10635 000074D4 483D[02000000]          	cmp rax, sob_boolean_false
 10636 000074DA 0F8493000000            	je .L_if_else_002b
 10637                                  	; preparing a tail-call
 10638 000074E0 488B4528                	mov rax, PARAM(1)	; param b
 10639 000074E4 50                      	push rax
 10640                                  	; preparing a non-tail-call
 10641 000074E5 488B4520                	mov rax, PARAM(0)	; param a
 10642 000074E9 50                      	push rax
 10643 000074EA 6A01                    	push 1	; arg count
 10644 000074EC 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10645 000074F4 803805                  	cmp byte [rax], T_undefined
 10646 000074F7 0F84053F0000            	je L_error_fvar_undefined
 10647 000074FD 803804                  	cmp byte [rax], T_closure
 10648 00007500 0F85803F0000            	jne L_error_non_closure
 10649 00007506 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10650 00007509 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10651 0000750C 50                      	push rax
 10652 0000750D 6A02                    	push 2	; arg count
 10653 0000750F 488B0425[150C0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 10654 00007517 803805                  	cmp byte [rax], T_undefined
 10655 0000751A 0F84E23E0000            	je L_error_fvar_undefined
 10656 00007520 803804                  	cmp byte [rax], T_closure
 10657 00007523 0F855D3F0000            	jne L_error_non_closure
 10658 00007529 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10659 0000752C FF7508                  	push qword [rbp + 8 * 1]
 10660                                   ; old ret addr
 10661 0000752F FF7500                  	push qword [rbp]
 10662                                   ; restore the old rbp
 10663 00007532 BB02000000              	mov rbx, 2
 10664 00007537 4883C303                	add rbx, 3
 10665 0000753B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10666 0000753F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10667 00007544 4C8D4DF8                	lea r9, [rbp - 8]
 10668 00007548 B906000000              	mov rcx, 6
 10669                                  .L_tc_recycle_frame_loop_005a:
 10670 0000754D 4883F900                	cmp rcx, 0
 10671 00007551 7413                    	je .L_tc_recycle_frame_done_005a
 10672 00007553 4D8B11                  	mov r10, qword [r9]
 10673 00007556 4D8910                  	mov qword [r8], r10
 10674 00007559 4983E808                	sub r8, 8
 10675 0000755D 4983E908                	sub r9, 8
 10676 00007561 48FFC9                  	dec rcx
 10677 00007564 EBE7                    	jmp .L_tc_recycle_frame_loop_005a
 10678                                  .L_tc_recycle_frame_done_005a:
 10679 00007566 498D6008                	lea rsp, [r8 + 8]
 10680 0000756A 5D                      	pop rbp ; restore the old rbp
 10681 0000756B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10682 0000756E E91D010000              	jmp .L_if_end_002b
 10683                                  .L_if_else_002b:
 10684                                  	; preparing a non-tail-call
 10685 00007573 488B4528                	mov rax, PARAM(1)	; param b
 10686 00007577 50                      	push rax
 10687 00007578 6A01                    	push 1	; arg count
 10688 0000757A 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 10689 00007582 803805                  	cmp byte [rax], T_undefined
 10690 00007585 0F84773E0000            	je L_error_fvar_undefined
 10691 0000758B 803804                  	cmp byte [rax], T_closure
 10692 0000758E 0F85F23E0000            	jne L_error_non_closure
 10693 00007594 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10694 00007597 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10695 0000759A 483D[02000000]          	cmp rax, sob_boolean_false
 10696 000075A0 0F8490000000            	je .L_if_else_002a
 10697                                  	; preparing a tail-call
 10698 000075A6 488B4528                	mov rax, PARAM(1)	; param b
 10699 000075AA 50                      	push rax
 10700                                  	; preparing a non-tail-call
 10701 000075AB 488B4520                	mov rax, PARAM(0)	; param a
 10702 000075AF 50                      	push rax
 10703 000075B0 6A01                    	push 1	; arg count
 10704 000075B2 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
 10705 000075BA 803805                  	cmp byte [rax], T_undefined
 10706 000075BD 0F843F3E0000            	je L_error_fvar_undefined
 10707 000075C3 803804                  	cmp byte [rax], T_closure
 10708 000075C6 0F85BA3E0000            	jne L_error_non_closure
 10709 000075CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10710 000075CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10711 000075D2 50                      	push rax
 10712 000075D3 6A02                    	push 2	; arg count
 10713 000075D5 488B0425[260C0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10714 000075DD 803805                  	cmp byte [rax], T_undefined
 10715 000075E0 0F841C3E0000            	je L_error_fvar_undefined
 10716 000075E6 803804                  	cmp byte [rax], T_closure
 10717 000075E9 0F85973E0000            	jne L_error_non_closure
 10718 000075EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10719 000075F2 FF7508                  	push qword [rbp + 8 * 1]
 10720                                   ; old ret addr
 10721 000075F5 FF7500                  	push qword [rbp]
 10722                                   ; restore the old rbp
 10723 000075F8 BB02000000              	mov rbx, 2
 10724 000075FD 4883C303                	add rbx, 3
 10725 00007601 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10726 00007605 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10727 0000760A 4C8D4DF8                	lea r9, [rbp - 8]
 10728 0000760E B906000000              	mov rcx, 6
 10729                                  .L_tc_recycle_frame_loop_005b:
 10730 00007613 4883F900                	cmp rcx, 0
 10731 00007617 7413                    	je .L_tc_recycle_frame_done_005b
 10732 00007619 4D8B11                  	mov r10, qword [r9]
 10733 0000761C 4D8910                  	mov qword [r8], r10
 10734 0000761F 4983E808                	sub r8, 8
 10735 00007623 4983E908                	sub r9, 8
 10736 00007627 48FFC9                  	dec rcx
 10737 0000762A EBE7                    	jmp .L_tc_recycle_frame_loop_005b
 10738                                  .L_tc_recycle_frame_done_005b:
 10739 0000762C 498D6008                	lea rsp, [r8 + 8]
 10740 00007630 5D                      	pop rbp ; restore the old rbp
 10741 00007631 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10742 00007634 EB5A                    	jmp .L_if_end_002a
 10743                                  .L_if_else_002a:
 10744                                  	; preparing a tail-call
 10745 00007636 6A00                    	push 0	; arg count
 10746 00007638 488B4510                	mov rax, ENV
 10747 0000763C 488B00                  	mov rax, qword [rax + 8 * 0]
 10748 0000763F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10749 00007642 803804                  	cmp byte [rax], T_closure
 10750 00007645 0F853B3E0000            	jne L_error_non_closure
 10751 0000764B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10752 0000764E FF7508                  	push qword [rbp + 8 * 1]
 10753                                   ; old ret addr
 10754 00007651 FF7500                  	push qword [rbp]
 10755                                   ; restore the old rbp
 10756 00007654 BB00000000              	mov rbx, 0
 10757 00007659 4883C303                	add rbx, 3
 10758 0000765D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10759 00007661 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10760 00007666 4C8D4DF8                	lea r9, [rbp - 8]
 10761 0000766A B904000000              	mov rcx, 4
 10762                                  .L_tc_recycle_frame_loop_005c:
 10763 0000766F 4883F900                	cmp rcx, 0
 10764 00007673 7413                    	je .L_tc_recycle_frame_done_005c
 10765 00007675 4D8B11                  	mov r10, qword [r9]
 10766 00007678 4D8910                  	mov qword [r8], r10
 10767 0000767B 4983E808                	sub r8, 8
 10768 0000767F 4983E908                	sub r9, 8
 10769 00007683 48FFC9                  	dec rcx
 10770 00007686 EBE7                    	jmp .L_tc_recycle_frame_loop_005c
 10771                                  .L_tc_recycle_frame_done_005c:
 10772 00007688 498D6008                	lea rsp, [r8 + 8]
 10773 0000768C 5D                      	pop rbp ; restore the old rbp
 10774 0000768D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10775                                  .L_if_end_002a:
 10776                                  .L_if_end_002b:
 10777                                  .L_if_end_002c:
 10778 00007690 E9CB050000              	jmp .L_if_end_0035
 10779                                  .L_if_else_0035:
 10780                                  	; preparing a non-tail-call
 10781 00007695 488B4520                	mov rax, PARAM(0)	; param a
 10782 00007699 50                      	push rax
 10783 0000769A 6A01                    	push 1	; arg count
 10784 0000769C 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 10785 000076A4 803805                  	cmp byte [rax], T_undefined
 10786 000076A7 0F84553D0000            	je L_error_fvar_undefined
 10787 000076AD 803804                  	cmp byte [rax], T_closure
 10788 000076B0 0F85D03D0000            	jne L_error_non_closure
 10789 000076B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10790 000076B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10791 000076BC 483D[02000000]          	cmp rax, sob_boolean_false
 10792 000076C2 0F8487020000            	je .L_if_else_0034
 10793                                  	; preparing a non-tail-call
 10794 000076C8 488B4528                	mov rax, PARAM(1)	; param b
 10795 000076CC 50                      	push rax
 10796 000076CD 6A01                    	push 1	; arg count
 10797 000076CF 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 10798 000076D7 803805                  	cmp byte [rax], T_undefined
 10799 000076DA 0F84223D0000            	je L_error_fvar_undefined
 10800 000076E0 803804                  	cmp byte [rax], T_closure
 10801 000076E3 0F859D3D0000            	jne L_error_non_closure
 10802 000076E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10803 000076EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10804 000076EF 483D[02000000]          	cmp rax, sob_boolean_false
 10805 000076F5 0F8493000000            	je .L_if_else_002f
 10806                                  	; preparing a tail-call
 10807                                  	; preparing a non-tail-call
 10808 000076FB 488B4528                	mov rax, PARAM(1)	; param b
 10809 000076FF 50                      	push rax
 10810 00007700 6A01                    	push 1	; arg count
 10811 00007702 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10812 0000770A 803805                  	cmp byte [rax], T_undefined
 10813 0000770D 0F84EF3C0000            	je L_error_fvar_undefined
 10814 00007713 803804                  	cmp byte [rax], T_closure
 10815 00007716 0F856A3D0000            	jne L_error_non_closure
 10816 0000771C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10817 0000771F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10818 00007722 50                      	push rax
 10819 00007723 488B4520                	mov rax, PARAM(0)	; param a
 10820 00007727 50                      	push rax
 10821 00007728 6A02                    	push 2	; arg count
 10822 0000772A 488B0425[150C0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 10823 00007732 803805                  	cmp byte [rax], T_undefined
 10824 00007735 0F84C73C0000            	je L_error_fvar_undefined
 10825 0000773B 803804                  	cmp byte [rax], T_closure
 10826 0000773E 0F85423D0000            	jne L_error_non_closure
 10827 00007744 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10828 00007747 FF7508                  	push qword [rbp + 8 * 1]
 10829                                   ; old ret addr
 10830 0000774A FF7500                  	push qword [rbp]
 10831                                   ; restore the old rbp
 10832 0000774D BB02000000              	mov rbx, 2
 10833 00007752 4883C303                	add rbx, 3
 10834 00007756 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10835 0000775A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10836 0000775F 4C8D4DF8                	lea r9, [rbp - 8]
 10837 00007763 B906000000              	mov rcx, 6
 10838                                  .L_tc_recycle_frame_loop_005d:
 10839 00007768 4883F900                	cmp rcx, 0
 10840 0000776C 7413                    	je .L_tc_recycle_frame_done_005d
 10841 0000776E 4D8B11                  	mov r10, qword [r9]
 10842 00007771 4D8910                  	mov qword [r8], r10
 10843 00007774 4983E808                	sub r8, 8
 10844 00007778 4983E908                	sub r9, 8
 10845 0000777C 48FFC9                  	dec rcx
 10846 0000777F EBE7                    	jmp .L_tc_recycle_frame_loop_005d
 10847                                  .L_tc_recycle_frame_done_005d:
 10848 00007781 498D6008                	lea rsp, [r8 + 8]
 10849 00007785 5D                      	pop rbp ; restore the old rbp
 10850 00007786 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10851 00007789 E9BC010000              	jmp .L_if_end_002f
 10852                                  .L_if_else_002f:
 10853                                  	; preparing a non-tail-call
 10854 0000778E 488B4528                	mov rax, PARAM(1)	; param b
 10855 00007792 50                      	push rax
 10856 00007793 6A01                    	push 1	; arg count
 10857 00007795 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 10858 0000779D 803805                  	cmp byte [rax], T_undefined
 10859 000077A0 0F845C3C0000            	je L_error_fvar_undefined
 10860 000077A6 803804                  	cmp byte [rax], T_closure
 10861 000077A9 0F85D73C0000            	jne L_error_non_closure
 10862 000077AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10863 000077B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10864 000077B5 483D[02000000]          	cmp rax, sob_boolean_false
 10865 000077BB 7470                    	je .L_if_else_002e
 10866                                  	; preparing a tail-call
 10867 000077BD 488B4528                	mov rax, PARAM(1)	; param b
 10868 000077C1 50                      	push rax
 10869 000077C2 488B4520                	mov rax, PARAM(0)	; param a
 10870 000077C6 50                      	push rax
 10871 000077C7 6A02                    	push 2	; arg count
 10872 000077C9 488B0425[150C0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 10873 000077D1 803805                  	cmp byte [rax], T_undefined
 10874 000077D4 0F84283C0000            	je L_error_fvar_undefined
 10875 000077DA 803804                  	cmp byte [rax], T_closure
 10876 000077DD 0F85A33C0000            	jne L_error_non_closure
 10877 000077E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10878 000077E6 FF7508                  	push qword [rbp + 8 * 1]
 10879                                   ; old ret addr
 10880 000077E9 FF7500                  	push qword [rbp]
 10881                                   ; restore the old rbp
 10882 000077EC BB02000000              	mov rbx, 2
 10883 000077F1 4883C303                	add rbx, 3
 10884 000077F5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10885 000077F9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10886 000077FE 4C8D4DF8                	lea r9, [rbp - 8]
 10887 00007802 B906000000              	mov rcx, 6
 10888                                  .L_tc_recycle_frame_loop_005e:
 10889 00007807 4883F900                	cmp rcx, 0
 10890 0000780B 7413                    	je .L_tc_recycle_frame_done_005e
 10891 0000780D 4D8B11                  	mov r10, qword [r9]
 10892 00007810 4D8910                  	mov qword [r8], r10
 10893 00007813 4983E808                	sub r8, 8
 10894 00007817 4983E908                	sub r9, 8
 10895 0000781B 48FFC9                  	dec rcx
 10896 0000781E EBE7                    	jmp .L_tc_recycle_frame_loop_005e
 10897                                  .L_tc_recycle_frame_done_005e:
 10898 00007820 498D6008                	lea rsp, [r8 + 8]
 10899 00007824 5D                      	pop rbp ; restore the old rbp
 10900 00007825 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10901 00007828 E91D010000              	jmp .L_if_end_002e
 10902                                  .L_if_else_002e:
 10903                                  	; preparing a non-tail-call
 10904 0000782D 488B4528                	mov rax, PARAM(1)	; param b
 10905 00007831 50                      	push rax
 10906 00007832 6A01                    	push 1	; arg count
 10907 00007834 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 10908 0000783C 803805                  	cmp byte [rax], T_undefined
 10909 0000783F 0F84BD3B0000            	je L_error_fvar_undefined
 10910 00007845 803804                  	cmp byte [rax], T_closure
 10911 00007848 0F85383C0000            	jne L_error_non_closure
 10912 0000784E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10913 00007851 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10914 00007854 483D[02000000]          	cmp rax, sob_boolean_false
 10915 0000785A 0F8490000000            	je .L_if_else_002d
 10916                                  	; preparing a tail-call
 10917 00007860 488B4528                	mov rax, PARAM(1)	; param b
 10918 00007864 50                      	push rax
 10919                                  	; preparing a non-tail-call
 10920 00007865 488B4520                	mov rax, PARAM(0)	; param a
 10921 00007869 50                      	push rax
 10922 0000786A 6A01                    	push 1	; arg count
 10923 0000786C 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
 10924 00007874 803805                  	cmp byte [rax], T_undefined
 10925 00007877 0F84853B0000            	je L_error_fvar_undefined
 10926 0000787D 803804                  	cmp byte [rax], T_closure
 10927 00007880 0F85003C0000            	jne L_error_non_closure
 10928 00007886 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10929 00007889 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10930 0000788C 50                      	push rax
 10931 0000788D 6A02                    	push 2	; arg count
 10932 0000788F 488B0425[260C0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10933 00007897 803805                  	cmp byte [rax], T_undefined
 10934 0000789A 0F84623B0000            	je L_error_fvar_undefined
 10935 000078A0 803804                  	cmp byte [rax], T_closure
 10936 000078A3 0F85DD3B0000            	jne L_error_non_closure
 10937 000078A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10938 000078AC FF7508                  	push qword [rbp + 8 * 1]
 10939                                   ; old ret addr
 10940 000078AF FF7500                  	push qword [rbp]
 10941                                   ; restore the old rbp
 10942 000078B2 BB02000000              	mov rbx, 2
 10943 000078B7 4883C303                	add rbx, 3
 10944 000078BB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10945 000078BF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10946 000078C4 4C8D4DF8                	lea r9, [rbp - 8]
 10947 000078C8 B906000000              	mov rcx, 6
 10948                                  .L_tc_recycle_frame_loop_005f:
 10949 000078CD 4883F900                	cmp rcx, 0
 10950 000078D1 7413                    	je .L_tc_recycle_frame_done_005f
 10951 000078D3 4D8B11                  	mov r10, qword [r9]
 10952 000078D6 4D8910                  	mov qword [r8], r10
 10953 000078D9 4983E808                	sub r8, 8
 10954 000078DD 4983E908                	sub r9, 8
 10955 000078E1 48FFC9                  	dec rcx
 10956 000078E4 EBE7                    	jmp .L_tc_recycle_frame_loop_005f
 10957                                  .L_tc_recycle_frame_done_005f:
 10958 000078E6 498D6008                	lea rsp, [r8 + 8]
 10959 000078EA 5D                      	pop rbp ; restore the old rbp
 10960 000078EB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10961 000078EE EB5A                    	jmp .L_if_end_002d
 10962                                  .L_if_else_002d:
 10963                                  	; preparing a tail-call
 10964 000078F0 6A00                    	push 0	; arg count
 10965 000078F2 488B4510                	mov rax, ENV
 10966 000078F6 488B00                  	mov rax, qword [rax + 8 * 0]
 10967 000078F9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10968 000078FC 803804                  	cmp byte [rax], T_closure
 10969 000078FF 0F85813B0000            	jne L_error_non_closure
 10970 00007905 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10971 00007908 FF7508                  	push qword [rbp + 8 * 1]
 10972                                   ; old ret addr
 10973 0000790B FF7500                  	push qword [rbp]
 10974                                   ; restore the old rbp
 10975 0000790E BB00000000              	mov rbx, 0
 10976 00007913 4883C303                	add rbx, 3
 10977 00007917 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10978 0000791B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10979 00007920 4C8D4DF8                	lea r9, [rbp - 8]
 10980 00007924 B904000000              	mov rcx, 4
 10981                                  .L_tc_recycle_frame_loop_0060:
 10982 00007929 4883F900                	cmp rcx, 0
 10983 0000792D 7413                    	je .L_tc_recycle_frame_done_0060
 10984 0000792F 4D8B11                  	mov r10, qword [r9]
 10985 00007932 4D8910                  	mov qword [r8], r10
 10986 00007935 4983E808                	sub r8, 8
 10987 00007939 4983E908                	sub r9, 8
 10988 0000793D 48FFC9                  	dec rcx
 10989 00007940 EBE7                    	jmp .L_tc_recycle_frame_loop_0060
 10990                                  .L_tc_recycle_frame_done_0060:
 10991 00007942 498D6008                	lea rsp, [r8 + 8]
 10992 00007946 5D                      	pop rbp ; restore the old rbp
 10993 00007947 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10994                                  .L_if_end_002d:
 10995                                  .L_if_end_002e:
 10996                                  .L_if_end_002f:
 10997 0000794A E911030000              	jmp .L_if_end_0034
 10998                                  .L_if_else_0034:
 10999                                  	; preparing a non-tail-call
 11000 0000794F 488B4520                	mov rax, PARAM(0)	; param a
 11001 00007953 50                      	push rax
 11002 00007954 6A01                    	push 1	; arg count
 11003 00007956 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 11004 0000795E 803805                  	cmp byte [rax], T_undefined
 11005 00007961 0F849B3A0000            	je L_error_fvar_undefined
 11006 00007967 803804                  	cmp byte [rax], T_closure
 11007 0000796A 0F85163B0000            	jne L_error_non_closure
 11008 00007970 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11009 00007973 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11010 00007976 483D[02000000]          	cmp rax, sob_boolean_false
 11011 0000797C 0F8484020000            	je .L_if_else_0033
 11012                                  	; preparing a non-tail-call
 11013 00007982 488B4528                	mov rax, PARAM(1)	; param b
 11014 00007986 50                      	push rax
 11015 00007987 6A01                    	push 1	; arg count
 11016 00007989 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 11017 00007991 803805                  	cmp byte [rax], T_undefined
 11018 00007994 0F84683A0000            	je L_error_fvar_undefined
 11019 0000799A 803804                  	cmp byte [rax], T_closure
 11020 0000799D 0F85E33A0000            	jne L_error_non_closure
 11021 000079A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11022 000079A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11023 000079A9 483D[02000000]          	cmp rax, sob_boolean_false
 11024 000079AF 0F8493000000            	je .L_if_else_0032
 11025                                  	; preparing a tail-call
 11026                                  	; preparing a non-tail-call
 11027 000079B5 488B4528                	mov rax, PARAM(1)	; param b
 11028 000079B9 50                      	push rax
 11029 000079BA 6A01                    	push 1	; arg count
 11030 000079BC 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
 11031 000079C4 803805                  	cmp byte [rax], T_undefined
 11032 000079C7 0F84353A0000            	je L_error_fvar_undefined
 11033 000079CD 803804                  	cmp byte [rax], T_closure
 11034 000079D0 0F85B03A0000            	jne L_error_non_closure
 11035 000079D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11036 000079D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11037 000079DC 50                      	push rax
 11038 000079DD 488B4520                	mov rax, PARAM(0)	; param a
 11039 000079E1 50                      	push rax
 11040 000079E2 6A02                    	push 2	; arg count
 11041 000079E4 488B0425[260C0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11042 000079EC 803805                  	cmp byte [rax], T_undefined
 11043 000079EF 0F840D3A0000            	je L_error_fvar_undefined
 11044 000079F5 803804                  	cmp byte [rax], T_closure
 11045 000079F8 0F85883A0000            	jne L_error_non_closure
 11046 000079FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11047 00007A01 FF7508                  	push qword [rbp + 8 * 1]
 11048                                   ; old ret addr
 11049 00007A04 FF7500                  	push qword [rbp]
 11050                                   ; restore the old rbp
 11051 00007A07 BB02000000              	mov rbx, 2
 11052 00007A0C 4883C303                	add rbx, 3
 11053 00007A10 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11054 00007A14 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11055 00007A19 4C8D4DF8                	lea r9, [rbp - 8]
 11056 00007A1D B906000000              	mov rcx, 6
 11057                                  .L_tc_recycle_frame_loop_0061:
 11058 00007A22 4883F900                	cmp rcx, 0
 11059 00007A26 7413                    	je .L_tc_recycle_frame_done_0061
 11060 00007A28 4D8B11                  	mov r10, qword [r9]
 11061 00007A2B 4D8910                  	mov qword [r8], r10
 11062 00007A2E 4983E808                	sub r8, 8
 11063 00007A32 4983E908                	sub r9, 8
 11064 00007A36 48FFC9                  	dec rcx
 11065 00007A39 EBE7                    	jmp .L_tc_recycle_frame_loop_0061
 11066                                  .L_tc_recycle_frame_done_0061:
 11067 00007A3B 498D6008                	lea rsp, [r8 + 8]
 11068 00007A3F 5D                      	pop rbp ; restore the old rbp
 11069 00007A40 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11070 00007A43 E9BC010000              	jmp .L_if_end_0032
 11071                                  .L_if_else_0032:
 11072                                  	; preparing a non-tail-call
 11073 00007A48 488B4528                	mov rax, PARAM(1)	; param b
 11074 00007A4C 50                      	push rax
 11075 00007A4D 6A01                    	push 1	; arg count
 11076 00007A4F 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 11077 00007A57 803805                  	cmp byte [rax], T_undefined
 11078 00007A5A 0F84A2390000            	je L_error_fvar_undefined
 11079 00007A60 803804                  	cmp byte [rax], T_closure
 11080 00007A63 0F851D3A0000            	jne L_error_non_closure
 11081 00007A69 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11082 00007A6C FF5009                  	call SOB_CLOSURE_CODE(rax)
 11083 00007A6F 483D[02000000]          	cmp rax, sob_boolean_false
 11084 00007A75 0F8493000000            	je .L_if_else_0031
 11085                                  	; preparing a tail-call
 11086                                  	; preparing a non-tail-call
 11087 00007A7B 488B4528                	mov rax, PARAM(1)	; param b
 11088 00007A7F 50                      	push rax
 11089 00007A80 6A01                    	push 1	; arg count
 11090 00007A82 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
 11091 00007A8A 803805                  	cmp byte [rax], T_undefined
 11092 00007A8D 0F846F390000            	je L_error_fvar_undefined
 11093 00007A93 803804                  	cmp byte [rax], T_closure
 11094 00007A96 0F85EA390000            	jne L_error_non_closure
 11095 00007A9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11096 00007A9F FF5009                  	call SOB_CLOSURE_CODE(rax)
 11097 00007AA2 50                      	push rax
 11098 00007AA3 488B4520                	mov rax, PARAM(0)	; param a
 11099 00007AA7 50                      	push rax
 11100 00007AA8 6A02                    	push 2	; arg count
 11101 00007AAA 488B0425[260C0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11102 00007AB2 803805                  	cmp byte [rax], T_undefined
 11103 00007AB5 0F8447390000            	je L_error_fvar_undefined
 11104 00007ABB 803804                  	cmp byte [rax], T_closure
 11105 00007ABE 0F85C2390000            	jne L_error_non_closure
 11106 00007AC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11107 00007AC7 FF7508                  	push qword [rbp + 8 * 1]
 11108                                   ; old ret addr
 11109 00007ACA FF7500                  	push qword [rbp]
 11110                                   ; restore the old rbp
 11111 00007ACD BB02000000              	mov rbx, 2
 11112 00007AD2 4883C303                	add rbx, 3
 11113 00007AD6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11114 00007ADA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11115 00007ADF 4C8D4DF8                	lea r9, [rbp - 8]
 11116 00007AE3 B906000000              	mov rcx, 6
 11117                                  .L_tc_recycle_frame_loop_0062:
 11118 00007AE8 4883F900                	cmp rcx, 0
 11119 00007AEC 7413                    	je .L_tc_recycle_frame_done_0062
 11120 00007AEE 4D8B11                  	mov r10, qword [r9]
 11121 00007AF1 4D8910                  	mov qword [r8], r10
 11122 00007AF4 4983E808                	sub r8, 8
 11123 00007AF8 4983E908                	sub r9, 8
 11124 00007AFC 48FFC9                  	dec rcx
 11125 00007AFF EBE7                    	jmp .L_tc_recycle_frame_loop_0062
 11126                                  .L_tc_recycle_frame_done_0062:
 11127 00007B01 498D6008                	lea rsp, [r8 + 8]
 11128 00007B05 5D                      	pop rbp ; restore the old rbp
 11129 00007B06 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11130 00007B09 E9F6000000              	jmp .L_if_end_0031
 11131                                  .L_if_else_0031:
 11132                                  	; preparing a non-tail-call
 11133 00007B0E 488B4528                	mov rax, PARAM(1)	; param b
 11134 00007B12 50                      	push rax
 11135 00007B13 6A01                    	push 1	; arg count
 11136 00007B15 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 11137 00007B1D 803805                  	cmp byte [rax], T_undefined
 11138 00007B20 0F84DC380000            	je L_error_fvar_undefined
 11139 00007B26 803804                  	cmp byte [rax], T_closure
 11140 00007B29 0F8557390000            	jne L_error_non_closure
 11141 00007B2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 11142 00007B32 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11143 00007B35 483D[02000000]          	cmp rax, sob_boolean_false
 11144 00007B3B 746D                    	je .L_if_else_0030
 11145                                  	; preparing a tail-call
 11146 00007B3D 488B4528                	mov rax, PARAM(1)	; param b
 11147 00007B41 50                      	push rax
 11148 00007B42 488B4520                	mov rax, PARAM(0)	; param a
 11149 00007B46 50                      	push rax
 11150 00007B47 6A02                    	push 2	; arg count
 11151 00007B49 488B0425[260C0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11152 00007B51 803805                  	cmp byte [rax], T_undefined
 11153 00007B54 0F84A8380000            	je L_error_fvar_undefined
 11154 00007B5A 803804                  	cmp byte [rax], T_closure
 11155 00007B5D 0F8523390000            	jne L_error_non_closure
 11156 00007B63 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11157 00007B66 FF7508                  	push qword [rbp + 8 * 1]
 11158                                   ; old ret addr
 11159 00007B69 FF7500                  	push qword [rbp]
 11160                                   ; restore the old rbp
 11161 00007B6C BB02000000              	mov rbx, 2
 11162 00007B71 4883C303                	add rbx, 3
 11163 00007B75 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11164 00007B79 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11165 00007B7E 4C8D4DF8                	lea r9, [rbp - 8]
 11166 00007B82 B906000000              	mov rcx, 6
 11167                                  .L_tc_recycle_frame_loop_0063:
 11168 00007B87 4883F900                	cmp rcx, 0
 11169 00007B8B 7413                    	je .L_tc_recycle_frame_done_0063
 11170 00007B8D 4D8B11                  	mov r10, qword [r9]
 11171 00007B90 4D8910                  	mov qword [r8], r10
 11172 00007B93 4983E808                	sub r8, 8
 11173 00007B97 4983E908                	sub r9, 8
 11174 00007B9B 48FFC9                  	dec rcx
 11175 00007B9E EBE7                    	jmp .L_tc_recycle_frame_loop_0063
 11176                                  .L_tc_recycle_frame_done_0063:
 11177 00007BA0 498D6008                	lea rsp, [r8 + 8]
 11178 00007BA4 5D                      	pop rbp ; restore the old rbp
 11179 00007BA5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11180 00007BA8 EB5A                    	jmp .L_if_end_0030
 11181                                  .L_if_else_0030:
 11182                                  	; preparing a tail-call
 11183 00007BAA 6A00                    	push 0	; arg count
 11184 00007BAC 488B4510                	mov rax, ENV
 11185 00007BB0 488B00                  	mov rax, qword [rax + 8 * 0]
 11186 00007BB3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11187 00007BB6 803804                  	cmp byte [rax], T_closure
 11188 00007BB9 0F85C7380000            	jne L_error_non_closure
 11189 00007BBF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11190 00007BC2 FF7508                  	push qword [rbp + 8 * 1]
 11191                                   ; old ret addr
 11192 00007BC5 FF7500                  	push qword [rbp]
 11193                                   ; restore the old rbp
 11194 00007BC8 BB00000000              	mov rbx, 0
 11195 00007BCD 4883C303                	add rbx, 3
 11196 00007BD1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11197 00007BD5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11198 00007BDA 4C8D4DF8                	lea r9, [rbp - 8]
 11199 00007BDE B904000000              	mov rcx, 4
 11200                                  .L_tc_recycle_frame_loop_0064:
 11201 00007BE3 4883F900                	cmp rcx, 0
 11202 00007BE7 7413                    	je .L_tc_recycle_frame_done_0064
 11203 00007BE9 4D8B11                  	mov r10, qword [r9]
 11204 00007BEC 4D8910                  	mov qword [r8], r10
 11205 00007BEF 4983E808                	sub r8, 8
 11206 00007BF3 4983E908                	sub r9, 8
 11207 00007BF7 48FFC9                  	dec rcx
 11208 00007BFA EBE7                    	jmp .L_tc_recycle_frame_loop_0064
 11209                                  .L_tc_recycle_frame_done_0064:
 11210 00007BFC 498D6008                	lea rsp, [r8 + 8]
 11211 00007C00 5D                      	pop rbp ; restore the old rbp
 11212 00007C01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11213                                  .L_if_end_0030:
 11214                                  .L_if_end_0031:
 11215                                  .L_if_end_0032:
 11216 00007C04 EB5A                    	jmp .L_if_end_0033
 11217                                  .L_if_else_0033:
 11218                                  	; preparing a tail-call
 11219 00007C06 6A00                    	push 0	; arg count
 11220 00007C08 488B4510                	mov rax, ENV
 11221 00007C0C 488B00                  	mov rax, qword [rax + 8 * 0]
 11222 00007C0F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11223 00007C12 803804                  	cmp byte [rax], T_closure
 11224 00007C15 0F856B380000            	jne L_error_non_closure
 11225 00007C1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11226 00007C1E FF7508                  	push qword [rbp + 8 * 1]
 11227                                   ; old ret addr
 11228 00007C21 FF7500                  	push qword [rbp]
 11229                                   ; restore the old rbp
 11230 00007C24 BB00000000              	mov rbx, 0
 11231 00007C29 4883C303                	add rbx, 3
 11232 00007C2D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11233 00007C31 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11234 00007C36 4C8D4DF8                	lea r9, [rbp - 8]
 11235 00007C3A B904000000              	mov rcx, 4
 11236                                  .L_tc_recycle_frame_loop_0065:
 11237 00007C3F 4883F900                	cmp rcx, 0
 11238 00007C43 7413                    	je .L_tc_recycle_frame_done_0065
 11239 00007C45 4D8B11                  	mov r10, qword [r9]
 11240 00007C48 4D8910                  	mov qword [r8], r10
 11241 00007C4B 4983E808                	sub r8, 8
 11242 00007C4F 4983E908                	sub r9, 8
 11243 00007C53 48FFC9                  	dec rcx
 11244 00007C56 EBE7                    	jmp .L_tc_recycle_frame_loop_0065
 11245                                  .L_tc_recycle_frame_done_0065:
 11246 00007C58 498D6008                	lea rsp, [r8 + 8]
 11247 00007C5C 5D                      	pop rbp ; restore the old rbp
 11248 00007C5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11249                                  .L_if_end_0033:
 11250                                  .L_if_end_0034:
 11251                                  .L_if_end_0035:
 11252 00007C60 C9                      	leave
 11253 00007C61 C22000                  	ret AND_KILL_FRAME(2)
 11254                                  .L_lambda_simple_end_003f:	; new closure is in rax
 11255 00007C64 50                      	push rax
 11256 00007C65 6A01                    	push 1	; arg count
 11257 00007C67 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11258 00007C6C E8BE380000              	call malloc
 11259 00007C71 50                      	push rax
 11260 00007C72 BF08000000              	mov rdi, 8 * 1	; new rib
 11261 00007C77 E8B3380000              	call malloc
 11262 00007C7C 50                      	push rax
 11263 00007C7D BF10000000              	mov rdi, 8 * 2	; extended env
 11264 00007C82 E8A8380000              	call malloc
 11265 00007C87 488B7D10                	mov rdi, ENV
 11266 00007C8B BE00000000              	mov rsi, 0
 11267 00007C90 BA01000000              	mov rdx, 1
 11268                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 11269 00007C95 4883FE01                	cmp rsi, 1
 11270 00007C99 7410                    	je .L_lambda_simple_env_end_0040
 11271 00007C9B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11272 00007C9F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11273 00007CA3 48FFC6                  	inc rsi
 11274 00007CA6 48FFC2                  	inc rdx
 11275 00007CA9 EBEA                    	jmp .L_lambda_simple_env_loop_0040
 11276                                  .L_lambda_simple_env_end_0040:
 11277 00007CAB 5B                      	pop rbx
 11278 00007CAC BE00000000              	mov rsi, 0
 11279                                  .L_lambda_simple_params_loop_0040:	; copy params
 11280 00007CB1 4883FE01                	cmp rsi, 1
 11281 00007CB5 740E                    	je .L_lambda_simple_params_end_0040
 11282 00007CB7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11283 00007CBC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11284 00007CC0 48FFC6                  	inc rsi
 11285 00007CC3 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 11286                                  .L_lambda_simple_params_end_0040:
 11287 00007CC5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11288 00007CC8 4889C3                  	mov rbx, rax
 11289 00007CCB 58                      	pop rax
 11290 00007CCC C60004                  	mov byte [rax], T_closure
 11291 00007CCF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11292 00007CD3 48C74009[E07C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 11293 00007CDB E9A1010000              	jmp .L_lambda_simple_end_0040
 11294                                  .L_lambda_simple_code_0040:	; lambda-simple body
 11295 00007CE0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11296 00007CE6 740B                    	je .L_lambda_simple_arity_check_ok_0040
 11297 00007CE8 FF742410                	push qword [rsp + 8 * 2]
 11298 00007CEC 6A01                    	push 1
 11299 00007CEE E9F5370000              	jmp L_error_incorrect_arity_simple
 11300                                  .L_lambda_simple_arity_check_ok_0040:
 11301 00007CF3 C8000000                	enter 0, 0
 11302 00007CF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11303 00007CFC E82E380000              	call malloc
 11304 00007D01 50                      	push rax
 11305 00007D02 BF10000000              	mov rdi, 8 * 2	; new rib
 11306 00007D07 E823380000              	call malloc
 11307 00007D0C 50                      	push rax
 11308 00007D0D BF18000000              	mov rdi, 8 * 3	; extended env
 11309 00007D12 E818380000              	call malloc
 11310 00007D17 488B7D10                	mov rdi, ENV
 11311 00007D1B BE00000000              	mov rsi, 0
 11312 00007D20 BA01000000              	mov rdx, 1
 11313                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 11314 00007D25 4883FE02                	cmp rsi, 2
 11315 00007D29 7410                    	je .L_lambda_opt_env_end_000c
 11316 00007D2B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11317 00007D2F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11318 00007D33 48FFC6                  	inc rsi
 11319 00007D36 48FFC2                  	inc rdx
 11320 00007D39 EBEA                    	jmp .L_lambda_opt_env_loop_000c
 11321                                  .L_lambda_opt_env_end_000c:
 11322 00007D3B 5B                      	pop rbx
 11323 00007D3C BE00000000              	mov rsi, 0
 11324                                  .L_lambda_opt_params_loop_000c:	; copy params
 11325 00007D41 4883FE01                	cmp rsi, 1
 11326 00007D45 740E                    	je .L_lambda_opt_params_end_000c
 11327 00007D47 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11328 00007D4C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11329 00007D50 48FFC6                  	inc rsi
 11330 00007D53 EBEC                    	jmp .L_lambda_opt_params_loop_000c
 11331                                  .L_lambda_opt_params_end_000c:
 11332 00007D55 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11333 00007D58 4889C3                  	mov rbx, rax
 11334 00007D5B 58                      	pop rax
 11335 00007D5C C60004                  	mov byte [rax], T_closure
 11336 00007D5F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11337 00007D63 48C74009[707D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 11338 00007D6B E90D010000              	jmp .L_lambda_opt_end_000c
 11339                                  .L_lambda_opt_code_000c:	; lambda-opt body
 11340 00007D70 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11341 00007D76 745E                    	je .L_lambda_opt_arity_check_exact_000c
 11342 00007D78 7F0B                    	jg .L_lambda_opt_arity_check_more_000c
 11343 00007D7A FF742410                	push qword [rsp + 8 * 2]
 11344 00007D7E 6A00                    	push 0
 11345 00007D80 E963370000              	jmp L_error_incorrect_arity_simple
 11346                                  .L_lambda_opt_arity_check_more_000c:
 11347 00007D85 53                      push rbx
 11348 00007D86 51                      push rcx
 11349 00007D87 488B4D10                mov rcx, [rbp + 8*2]
 11350 00007D8B BB00000000              mov rbx , 0
 11351 00007D90 4829D9                  sub rcx, rbx
 11352 00007D93 48FFC3                  inc rbx
 11353 00007D96 48895D10                mov [rbp + 8*2], rbx
 11354 00007D9A 4889CF                  	 mov rdi, rcx 
 11355 00007D9D 48C1E703                	 shl rdi, 3 
 11356 00007DA1 E889370000              	call malloc
 11357 00007DA6 50                      	push rax
 11358 00007DA7 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
 11359 00007DAC 4831FF                  xor rdi, rdi
 11360                                  .L_lambda_opt_stack_shrink_loop_000c:
 11361 00007DAF 4839CF                  	cmp rdi, rcx
 11362 00007DB2 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_000c
 11363 00007DB4 488904FC                mov [rsp + rdi*8], rax
 11364 00007DB8 48FFC7                  	inc rdi
 11365 00007DBB 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
 11366 00007DC3 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
 11367 00007DC8 498B04D9                mov rax,[r9 + rbx*8] 
 11368 00007DCC EBE1                    jmp .L_lambda_opt_stack_shrink_loop_000c
 11369                                  .L_lambda_opt_stack_shrink_loop_exit_000c:
 11370 00007DCE 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
 11371 00007DD2 5B                      pop rbx
 11372 00007DD3 53                      push rbx
 11373 00007DD4 EB16                    jmp .L_lambda_opt_stack_adjusted_000c
 11374                                  .L_lambda_opt_arity_check_exact_000c:
 11375 00007DD6 48B8-                   	mov rax, L_constants + 1
 11375 00007DD8 [0100000000000000] 
 11376 00007DE0 53                      push rbx
 11377 00007DE1 488B5C2410              mov rbx , [rsp + 8*2]
 11378 00007DE6 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
 11379 00007DEB 5B                      pop rbx
 11380                                  .L_lambda_opt_stack_adjusted_000c:	; new closure is in rax
 11381 00007DEC C8000000                	enter 0, 0
 11382                                  	; preparing a tail-call
 11383 00007DF0 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 11384 00007DF8 803805                  	cmp byte [rax], T_undefined
 11385 00007DFB 0F8401360000            	je L_error_fvar_undefined
 11386 00007E01 50                      	push rax
 11387 00007E02 48B8-                   	mov rax, L_constants + 2304
 11387 00007E04 [0009000000000000] 
 11388 00007E0C 50                      	push rax
 11389 00007E0D 488B4510                	mov rax, ENV
 11390 00007E11 488B00                  	mov rax, qword [rax + 8 * 0]
 11391 00007E14 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 11392 00007E17 50                      	push rax
 11393 00007E18 6A03                    	push 3	; arg count
 11394 00007E1A 488B0425[AB0F0000]      	mov rax, qword [free_var_76]	; free var fold-left
 11395 00007E22 803805                  	cmp byte [rax], T_undefined
 11396 00007E25 0F84D7350000            	je L_error_fvar_undefined
 11397 00007E2B 803804                  	cmp byte [rax], T_closure
 11398 00007E2E 0F8552360000            	jne L_error_non_closure
 11399 00007E34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11400 00007E37 FF7508                  	push qword [rbp + 8 * 1]
 11401                                   ; old ret addr
 11402 00007E3A FF7500                  	push qword [rbp]
 11403                                   ; restore the old rbp
 11404 00007E3D BB03000000              	mov rbx, 3
 11405 00007E42 4883C303                	add rbx, 3
 11406 00007E46 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11407 00007E4A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11408 00007E4F 4C8D4DF8                	lea r9, [rbp - 8]
 11409 00007E53 B907000000              	mov rcx, 7
 11410                                  .L_tc_recycle_frame_loop_0066:
 11411 00007E58 4883F900                	cmp rcx, 0
 11412 00007E5C 7413                    	je .L_tc_recycle_frame_done_0066
 11413 00007E5E 4D8B11                  	mov r10, qword [r9]
 11414 00007E61 4D8910                  	mov qword [r8], r10
 11415 00007E64 4983E808                	sub r8, 8
 11416 00007E68 4983E908                	sub r9, 8
 11417 00007E6C 48FFC9                  	dec rcx
 11418 00007E6F EBE7                    	jmp .L_tc_recycle_frame_loop_0066
 11419                                  .L_tc_recycle_frame_done_0066:
 11420 00007E71 498D6008                	lea rsp, [r8 + 8]
 11421 00007E75 5D                      	pop rbp ; restore the old rbp
 11422 00007E76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11423 00007E79 C9                      	leave
 11424 00007E7A C21000                  	ret AND_KILL_FRAME(0)
 11425                                  .L_lambda_opt_end_000c:	; new closure is in rax
 11426 00007E7D C9                      	leave
 11427 00007E7E C21800                  	ret AND_KILL_FRAME(1)
 11428                                  .L_lambda_simple_end_0040:	; new closure is in rax
 11429 00007E81 803804                  	cmp byte [rax], T_closure
 11430 00007E84 0F85FC350000            	jne L_error_non_closure
 11431 00007E8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11432 00007E8D FF7508                  	push qword [rbp + 8 * 1]
 11433                                   ; old ret addr
 11434 00007E90 FF7500                  	push qword [rbp]
 11435                                   ; restore the old rbp
 11436 00007E93 BB01000000              	mov rbx, 1
 11437 00007E98 4883C303                	add rbx, 3
 11438 00007E9C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11439 00007EA0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11440 00007EA5 4C8D4DF8                	lea r9, [rbp - 8]
 11441 00007EA9 B905000000              	mov rcx, 5
 11442                                  .L_tc_recycle_frame_loop_0058:
 11443 00007EAE 4883F900                	cmp rcx, 0
 11444 00007EB2 7413                    	je .L_tc_recycle_frame_done_0058
 11445 00007EB4 4D8B11                  	mov r10, qword [r9]
 11446 00007EB7 4D8910                  	mov qword [r8], r10
 11447 00007EBA 4983E808                	sub r8, 8
 11448 00007EBE 4983E908                	sub r9, 8
 11449 00007EC2 48FFC9                  	dec rcx
 11450 00007EC5 EBE7                    	jmp .L_tc_recycle_frame_loop_0058
 11451                                  .L_tc_recycle_frame_done_0058:
 11452 00007EC7 498D6008                	lea rsp, [r8 + 8]
 11453 00007ECB 5D                      	pop rbp ; restore the old rbp
 11454 00007ECC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11455 00007ECF C9                      	leave
 11456 00007ED0 C21800                  	ret AND_KILL_FRAME(1)
 11457                                  .L_lambda_simple_end_003e:	; new closure is in rax
 11458 00007ED3 803804                  	cmp byte [rax], T_closure
 11459 00007ED6 0F85AA350000            	jne L_error_non_closure
 11460 00007EDC FF7001                  	push SOB_CLOSURE_ENV(rax)
 11461 00007EDF FF5009                  	call SOB_CLOSURE_CODE(rax)
 11462 00007EE2 48890425[9F0A0000]      	mov qword [free_var_0], rax
 11463 00007EEA 48B8-                   	mov rax, sob_void
 11463 00007EEC [0000000000000000] 
 11464                                  
 11465 00007EF4 4889C7                  	mov rdi, rax
 11466 00007EF7 E888380000              	call print_sexpr_if_not_void
 11467                                  	; preparing a non-tail-call
 11468 00007EFC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11469 00007F01 E829360000              	call malloc
 11470 00007F06 50                      	push rax
 11471 00007F07 BF00000000              	mov rdi, 8 * 0	; new rib
 11472 00007F0C E81E360000              	call malloc
 11473 00007F11 50                      	push rax
 11474 00007F12 BF08000000              	mov rdi, 8 * 1	; extended env
 11475 00007F17 E813360000              	call malloc
 11476 00007F1C 488B7D10                	mov rdi, ENV
 11477 00007F20 BE00000000              	mov rsi, 0
 11478 00007F25 BA01000000              	mov rdx, 1
 11479                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 11480 00007F2A 4883FE00                	cmp rsi, 0
 11481 00007F2E 7410                    	je .L_lambda_simple_env_end_0041
 11482 00007F30 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11483 00007F34 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11484 00007F38 48FFC6                  	inc rsi
 11485 00007F3B 48FFC2                  	inc rdx
 11486 00007F3E EBEA                    	jmp .L_lambda_simple_env_loop_0041
 11487                                  .L_lambda_simple_env_end_0041:
 11488 00007F40 5B                      	pop rbx
 11489 00007F41 BE00000000              	mov rsi, 0
 11490                                  .L_lambda_simple_params_loop_0041:	; copy params
 11491 00007F46 4883FE00                	cmp rsi, 0
 11492 00007F4A 740E                    	je .L_lambda_simple_params_end_0041
 11493 00007F4C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11494 00007F51 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11495 00007F55 48FFC6                  	inc rsi
 11496 00007F58 EBEC                    	jmp .L_lambda_simple_params_loop_0041
 11497                                  .L_lambda_simple_params_end_0041:
 11498 00007F5A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11499 00007F5D 4889C3                  	mov rbx, rax
 11500 00007F60 58                      	pop rax
 11501 00007F61 C60004                  	mov byte [rax], T_closure
 11502 00007F64 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11503 00007F68 48C74009[757F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 11504 00007F70 E992000000              	jmp .L_lambda_simple_end_0041
 11505                                  .L_lambda_simple_code_0041:	; lambda-simple body
 11506 00007F75 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11507 00007F7B 740B                    	je .L_lambda_simple_arity_check_ok_0041
 11508 00007F7D FF742410                	push qword [rsp + 8 * 2]
 11509 00007F81 6A00                    	push 0
 11510 00007F83 E960350000              	jmp L_error_incorrect_arity_simple
 11511                                  .L_lambda_simple_arity_check_ok_0041:
 11512 00007F88 C8000000                	enter 0, 0
 11513                                  	; preparing a tail-call
 11514 00007F8C 48B8-                   	mov rax, L_constants + 2221
 11514 00007F8E [AD08000000000000] 
 11515 00007F96 50                      	push rax
 11516 00007F97 48B8-                   	mov rax, L_constants + 2332
 11516 00007F99 [1C09000000000000] 
 11517 00007FA1 50                      	push rax
 11518 00007FA2 6A02                    	push 2	; arg count
 11519 00007FA4 488B0425[890F0000]      	mov rax, qword [free_var_74]	; free var error
 11520 00007FAC 803805                  	cmp byte [rax], T_undefined
 11521 00007FAF 0F844D340000            	je L_error_fvar_undefined
 11522 00007FB5 803804                  	cmp byte [rax], T_closure
 11523 00007FB8 0F85C8340000            	jne L_error_non_closure
 11524 00007FBE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11525 00007FC1 FF7508                  	push qword [rbp + 8 * 1]
 11526                                   ; old ret addr
 11527 00007FC4 FF7500                  	push qword [rbp]
 11528                                   ; restore the old rbp
 11529 00007FC7 BB02000000              	mov rbx, 2
 11530 00007FCC 4883C303                	add rbx, 3
 11531 00007FD0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11532 00007FD4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11533 00007FD9 4C8D4DF8                	lea r9, [rbp - 8]
 11534 00007FDD B906000000              	mov rcx, 6
 11535                                  .L_tc_recycle_frame_loop_0067:
 11536 00007FE2 4883F900                	cmp rcx, 0
 11537 00007FE6 7413                    	je .L_tc_recycle_frame_done_0067
 11538 00007FE8 4D8B11                  	mov r10, qword [r9]
 11539 00007FEB 4D8910                  	mov qword [r8], r10
 11540 00007FEE 4983E808                	sub r8, 8
 11541 00007FF2 4983E908                	sub r9, 8
 11542 00007FF6 48FFC9                  	dec rcx
 11543 00007FF9 EBE7                    	jmp .L_tc_recycle_frame_loop_0067
 11544                                  .L_tc_recycle_frame_done_0067:
 11545 00007FFB 498D6008                	lea rsp, [r8 + 8]
 11546 00007FFF 5D                      	pop rbp ; restore the old rbp
 11547 00008000 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11548 00008003 C9                      	leave
 11549 00008004 C21000                  	ret AND_KILL_FRAME(0)
 11550                                  .L_lambda_simple_end_0041:	; new closure is in rax
 11551 00008007 50                      	push rax
 11552 00008008 6A01                    	push 1	; arg count
 11553 0000800A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11554 0000800F E81B350000              	call malloc
 11555 00008014 50                      	push rax
 11556 00008015 BF00000000              	mov rdi, 8 * 0	; new rib
 11557 0000801A E810350000              	call malloc
 11558 0000801F 50                      	push rax
 11559 00008020 BF08000000              	mov rdi, 8 * 1	; extended env
 11560 00008025 E805350000              	call malloc
 11561 0000802A 488B7D10                	mov rdi, ENV
 11562 0000802E BE00000000              	mov rsi, 0
 11563 00008033 BA01000000              	mov rdx, 1
 11564                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 11565 00008038 4883FE00                	cmp rsi, 0
 11566 0000803C 7410                    	je .L_lambda_simple_env_end_0042
 11567 0000803E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11568 00008042 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11569 00008046 48FFC6                  	inc rsi
 11570 00008049 48FFC2                  	inc rdx
 11571 0000804C EBEA                    	jmp .L_lambda_simple_env_loop_0042
 11572                                  .L_lambda_simple_env_end_0042:
 11573 0000804E 5B                      	pop rbx
 11574 0000804F BE00000000              	mov rsi, 0
 11575                                  .L_lambda_simple_params_loop_0042:	; copy params
 11576 00008054 4883FE00                	cmp rsi, 0
 11577 00008058 740E                    	je .L_lambda_simple_params_end_0042
 11578 0000805A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11579 0000805F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11580 00008063 48FFC6                  	inc rsi
 11581 00008066 EBEC                    	jmp .L_lambda_simple_params_loop_0042
 11582                                  .L_lambda_simple_params_end_0042:
 11583 00008068 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11584 0000806B 4889C3                  	mov rbx, rax
 11585 0000806E 58                      	pop rax
 11586 0000806F C60004                  	mov byte [rax], T_closure
 11587 00008072 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11588 00008076 48C74009[83800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 11589 0000807E E9620D0000              	jmp .L_lambda_simple_end_0042
 11590                                  .L_lambda_simple_code_0042:	; lambda-simple body
 11591 00008083 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11592 00008089 740B                    	je .L_lambda_simple_arity_check_ok_0042
 11593 0000808B FF742410                	push qword [rsp + 8 * 2]
 11594 0000808F 6A01                    	push 1
 11595 00008091 E952340000              	jmp L_error_incorrect_arity_simple
 11596                                  .L_lambda_simple_arity_check_ok_0042:
 11597 00008096 C8000000                	enter 0, 0
 11598                                  	; preparing a tail-call
 11599 0000809A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11600 0000809F E88B340000              	call malloc
 11601 000080A4 50                      	push rax
 11602 000080A5 BF08000000              	mov rdi, 8 * 1	; new rib
 11603 000080AA E880340000              	call malloc
 11604 000080AF 50                      	push rax
 11605 000080B0 BF10000000              	mov rdi, 8 * 2	; extended env
 11606 000080B5 E875340000              	call malloc
 11607 000080BA 488B7D10                	mov rdi, ENV
 11608 000080BE BE00000000              	mov rsi, 0
 11609 000080C3 BA01000000              	mov rdx, 1
 11610                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 11611 000080C8 4883FE01                	cmp rsi, 1
 11612 000080CC 7410                    	je .L_lambda_simple_env_end_0043
 11613 000080CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11614 000080D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11615 000080D6 48FFC6                  	inc rsi
 11616 000080D9 48FFC2                  	inc rdx
 11617 000080DC EBEA                    	jmp .L_lambda_simple_env_loop_0043
 11618                                  .L_lambda_simple_env_end_0043:
 11619 000080DE 5B                      	pop rbx
 11620 000080DF BE00000000              	mov rsi, 0
 11621                                  .L_lambda_simple_params_loop_0043:	; copy params
 11622 000080E4 4883FE01                	cmp rsi, 1
 11623 000080E8 740E                    	je .L_lambda_simple_params_end_0043
 11624 000080EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11625 000080EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11626 000080F3 48FFC6                  	inc rsi
 11627 000080F6 EBEC                    	jmp .L_lambda_simple_params_loop_0043
 11628                                  .L_lambda_simple_params_end_0043:
 11629 000080F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11630 000080FB 4889C3                  	mov rbx, rax
 11631 000080FE 58                      	pop rax
 11632 000080FF C60004                  	mov byte [rax], T_closure
 11633 00008102 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11634 00008106 48C74009[13810000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 11635 0000810E E9A0080000              	jmp .L_lambda_simple_end_0043
 11636                                  .L_lambda_simple_code_0043:	; lambda-simple body
 11637 00008113 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11638 00008119 740B                    	je .L_lambda_simple_arity_check_ok_0043
 11639 0000811B FF742410                	push qword [rsp + 8 * 2]
 11640 0000811F 6A02                    	push 2
 11641 00008121 E9C2330000              	jmp L_error_incorrect_arity_simple
 11642                                  .L_lambda_simple_arity_check_ok_0043:
 11643 00008126 C8000000                	enter 0, 0
 11644                                  	; preparing a non-tail-call
 11645 0000812A 488B4520                	mov rax, PARAM(0)	; param a
 11646 0000812E 50                      	push rax
 11647 0000812F 6A01                    	push 1	; arg count
 11648 00008131 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 11649 00008139 803805                  	cmp byte [rax], T_undefined
 11650 0000813C 0F84C0320000            	je L_error_fvar_undefined
 11651 00008142 803804                  	cmp byte [rax], T_closure
 11652 00008145 0F853B330000            	jne L_error_non_closure
 11653 0000814B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11654 0000814E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11655 00008151 483D[02000000]          	cmp rax, sob_boolean_false
 11656 00008157 0F8487020000            	je .L_if_else_0041
 11657                                  	; preparing a non-tail-call
 11658 0000815D 488B4528                	mov rax, PARAM(1)	; param b
 11659 00008161 50                      	push rax
 11660 00008162 6A01                    	push 1	; arg count
 11661 00008164 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 11662 0000816C 803805                  	cmp byte [rax], T_undefined
 11663 0000816F 0F848D320000            	je L_error_fvar_undefined
 11664 00008175 803804                  	cmp byte [rax], T_closure
 11665 00008178 0F8508330000            	jne L_error_non_closure
 11666 0000817E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11667 00008181 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11668 00008184 483D[02000000]          	cmp rax, sob_boolean_false
 11669 0000818A 7470                    	je .L_if_else_0038
 11670                                  	; preparing a tail-call
 11671 0000818C 488B4528                	mov rax, PARAM(1)	; param b
 11672 00008190 50                      	push rax
 11673 00008191 488B4520                	mov rax, PARAM(0)	; param a
 11674 00008195 50                      	push rax
 11675 00008196 6A02                    	push 2	; arg count
 11676 00008198 488B0425[9E0B0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 11677 000081A0 803805                  	cmp byte [rax], T_undefined
 11678 000081A3 0F8459320000            	je L_error_fvar_undefined
 11679 000081A9 803804                  	cmp byte [rax], T_closure
 11680 000081AC 0F85D4320000            	jne L_error_non_closure
 11681 000081B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11682 000081B5 FF7508                  	push qword [rbp + 8 * 1]
 11683                                   ; old ret addr
 11684 000081B8 FF7500                  	push qword [rbp]
 11685                                   ; restore the old rbp
 11686 000081BB BB02000000              	mov rbx, 2
 11687 000081C0 4883C303                	add rbx, 3
 11688 000081C4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11689 000081C8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11690 000081CD 4C8D4DF8                	lea r9, [rbp - 8]
 11691 000081D1 B906000000              	mov rcx, 6
 11692                                  .L_tc_recycle_frame_loop_0069:
 11693 000081D6 4883F900                	cmp rcx, 0
 11694 000081DA 7413                    	je .L_tc_recycle_frame_done_0069
 11695 000081DC 4D8B11                  	mov r10, qword [r9]
 11696 000081DF 4D8910                  	mov qword [r8], r10
 11697 000081E2 4983E808                	sub r8, 8
 11698 000081E6 4983E908                	sub r9, 8
 11699 000081EA 48FFC9                  	dec rcx
 11700 000081ED EBE7                    	jmp .L_tc_recycle_frame_loop_0069
 11701                                  .L_tc_recycle_frame_done_0069:
 11702 000081EF 498D6008                	lea rsp, [r8 + 8]
 11703 000081F3 5D                      	pop rbp ; restore the old rbp
 11704 000081F4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11705 000081F7 E9E3010000              	jmp .L_if_end_0038
 11706                                  .L_if_else_0038:
 11707                                  	; preparing a non-tail-call
 11708 000081FC 488B4528                	mov rax, PARAM(1)	; param b
 11709 00008200 50                      	push rax
 11710 00008201 6A01                    	push 1	; arg count
 11711 00008203 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 11712 0000820B 803805                  	cmp byte [rax], T_undefined
 11713 0000820E 0F84EE310000            	je L_error_fvar_undefined
 11714 00008214 803804                  	cmp byte [rax], T_closure
 11715 00008217 0F8569320000            	jne L_error_non_closure
 11716 0000821D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11717 00008220 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11718 00008223 483D[02000000]          	cmp rax, sob_boolean_false
 11719 00008229 0F8493000000            	je .L_if_else_0037
 11720                                  	; preparing a tail-call
 11721 0000822F 488B4528                	mov rax, PARAM(1)	; param b
 11722 00008233 50                      	push rax
 11723                                  	; preparing a non-tail-call
 11724 00008234 488B4520                	mov rax, PARAM(0)	; param a
 11725 00008238 50                      	push rax
 11726 00008239 6A01                    	push 1	; arg count
 11727 0000823B 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11728 00008243 803805                  	cmp byte [rax], T_undefined
 11729 00008246 0F84B6310000            	je L_error_fvar_undefined
 11730 0000824C 803804                  	cmp byte [rax], T_closure
 11731 0000824F 0F8531320000            	jne L_error_non_closure
 11732 00008255 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11733 00008258 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11734 0000825B 50                      	push rax
 11735 0000825C 6A02                    	push 2	; arg count
 11736 0000825E 488B0425[7C0B0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 11737 00008266 803805                  	cmp byte [rax], T_undefined
 11738 00008269 0F8493310000            	je L_error_fvar_undefined
 11739 0000826F 803804                  	cmp byte [rax], T_closure
 11740 00008272 0F850E320000            	jne L_error_non_closure
 11741 00008278 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11742 0000827B FF7508                  	push qword [rbp + 8 * 1]
 11743                                   ; old ret addr
 11744 0000827E FF7500                  	push qword [rbp]
 11745                                   ; restore the old rbp
 11746 00008281 BB02000000              	mov rbx, 2
 11747 00008286 4883C303                	add rbx, 3
 11748 0000828A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11749 0000828E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11750 00008293 4C8D4DF8                	lea r9, [rbp - 8]
 11751 00008297 B906000000              	mov rcx, 6
 11752                                  .L_tc_recycle_frame_loop_006a:
 11753 0000829C 4883F900                	cmp rcx, 0
 11754 000082A0 7413                    	je .L_tc_recycle_frame_done_006a
 11755 000082A2 4D8B11                  	mov r10, qword [r9]
 11756 000082A5 4D8910                  	mov qword [r8], r10
 11757 000082A8 4983E808                	sub r8, 8
 11758 000082AC 4983E908                	sub r9, 8
 11759 000082B0 48FFC9                  	dec rcx
 11760 000082B3 EBE7                    	jmp .L_tc_recycle_frame_loop_006a
 11761                                  .L_tc_recycle_frame_done_006a:
 11762 000082B5 498D6008                	lea rsp, [r8 + 8]
 11763 000082B9 5D                      	pop rbp ; restore the old rbp
 11764 000082BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11765 000082BD E91D010000              	jmp .L_if_end_0037
 11766                                  .L_if_else_0037:
 11767                                  	; preparing a non-tail-call
 11768 000082C2 488B4528                	mov rax, PARAM(1)	; param b
 11769 000082C6 50                      	push rax
 11770 000082C7 6A01                    	push 1	; arg count
 11771 000082C9 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 11772 000082D1 803805                  	cmp byte [rax], T_undefined
 11773 000082D4 0F8428310000            	je L_error_fvar_undefined
 11774 000082DA 803804                  	cmp byte [rax], T_closure
 11775 000082DD 0F85A3310000            	jne L_error_non_closure
 11776 000082E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11777 000082E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11778 000082E9 483D[02000000]          	cmp rax, sob_boolean_false
 11779 000082EF 0F8490000000            	je .L_if_else_0036
 11780                                  	; preparing a tail-call
 11781 000082F5 488B4528                	mov rax, PARAM(1)	; param b
 11782 000082F9 50                      	push rax
 11783                                  	; preparing a non-tail-call
 11784 000082FA 488B4520                	mov rax, PARAM(0)	; param a
 11785 000082FE 50                      	push rax
 11786 000082FF 6A01                    	push 1	; arg count
 11787 00008301 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
 11788 00008309 803805                  	cmp byte [rax], T_undefined
 11789 0000830C 0F84F0300000            	je L_error_fvar_undefined
 11790 00008312 803804                  	cmp byte [rax], T_closure
 11791 00008315 0F856B310000            	jne L_error_non_closure
 11792 0000831B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11793 0000831E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11794 00008321 50                      	push rax
 11795 00008322 6A02                    	push 2	; arg count
 11796 00008324 488B0425[8D0B0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 11797 0000832C 803805                  	cmp byte [rax], T_undefined
 11798 0000832F 0F84CD300000            	je L_error_fvar_undefined
 11799 00008335 803804                  	cmp byte [rax], T_closure
 11800 00008338 0F8548310000            	jne L_error_non_closure
 11801 0000833E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11802 00008341 FF7508                  	push qword [rbp + 8 * 1]
 11803                                   ; old ret addr
 11804 00008344 FF7500                  	push qword [rbp]
 11805                                   ; restore the old rbp
 11806 00008347 BB02000000              	mov rbx, 2
 11807 0000834C 4883C303                	add rbx, 3
 11808 00008350 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11809 00008354 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11810 00008359 4C8D4DF8                	lea r9, [rbp - 8]
 11811 0000835D B906000000              	mov rcx, 6
 11812                                  .L_tc_recycle_frame_loop_006b:
 11813 00008362 4883F900                	cmp rcx, 0
 11814 00008366 7413                    	je .L_tc_recycle_frame_done_006b
 11815 00008368 4D8B11                  	mov r10, qword [r9]
 11816 0000836B 4D8910                  	mov qword [r8], r10
 11817 0000836E 4983E808                	sub r8, 8
 11818 00008372 4983E908                	sub r9, 8
 11819 00008376 48FFC9                  	dec rcx
 11820 00008379 EBE7                    	jmp .L_tc_recycle_frame_loop_006b
 11821                                  .L_tc_recycle_frame_done_006b:
 11822 0000837B 498D6008                	lea rsp, [r8 + 8]
 11823 0000837F 5D                      	pop rbp ; restore the old rbp
 11824 00008380 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11825 00008383 EB5A                    	jmp .L_if_end_0036
 11826                                  .L_if_else_0036:
 11827                                  	; preparing a tail-call
 11828 00008385 6A00                    	push 0	; arg count
 11829 00008387 488B4510                	mov rax, ENV
 11830 0000838B 488B00                  	mov rax, qword [rax + 8 * 0]
 11831 0000838E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11832 00008391 803804                  	cmp byte [rax], T_closure
 11833 00008394 0F85EC300000            	jne L_error_non_closure
 11834 0000839A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11835 0000839D FF7508                  	push qword [rbp + 8 * 1]
 11836                                   ; old ret addr
 11837 000083A0 FF7500                  	push qword [rbp]
 11838                                   ; restore the old rbp
 11839 000083A3 BB00000000              	mov rbx, 0
 11840 000083A8 4883C303                	add rbx, 3
 11841 000083AC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11842 000083B0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11843 000083B5 4C8D4DF8                	lea r9, [rbp - 8]
 11844 000083B9 B904000000              	mov rcx, 4
 11845                                  .L_tc_recycle_frame_loop_006c:
 11846 000083BE 4883F900                	cmp rcx, 0
 11847 000083C2 7413                    	je .L_tc_recycle_frame_done_006c
 11848 000083C4 4D8B11                  	mov r10, qword [r9]
 11849 000083C7 4D8910                  	mov qword [r8], r10
 11850 000083CA 4983E808                	sub r8, 8
 11851 000083CE 4983E908                	sub r9, 8
 11852 000083D2 48FFC9                  	dec rcx
 11853 000083D5 EBE7                    	jmp .L_tc_recycle_frame_loop_006c
 11854                                  .L_tc_recycle_frame_done_006c:
 11855 000083D7 498D6008                	lea rsp, [r8 + 8]
 11856 000083DB 5D                      	pop rbp ; restore the old rbp
 11857 000083DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11858                                  .L_if_end_0036:
 11859                                  .L_if_end_0037:
 11860                                  .L_if_end_0038:
 11861 000083DF E9CB050000              	jmp .L_if_end_0041
 11862                                  .L_if_else_0041:
 11863                                  	; preparing a non-tail-call
 11864 000083E4 488B4520                	mov rax, PARAM(0)	; param a
 11865 000083E8 50                      	push rax
 11866 000083E9 6A01                    	push 1	; arg count
 11867 000083EB 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 11868 000083F3 803805                  	cmp byte [rax], T_undefined
 11869 000083F6 0F8406300000            	je L_error_fvar_undefined
 11870 000083FC 803804                  	cmp byte [rax], T_closure
 11871 000083FF 0F8581300000            	jne L_error_non_closure
 11872 00008405 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11873 00008408 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11874 0000840B 483D[02000000]          	cmp rax, sob_boolean_false
 11875 00008411 0F8487020000            	je .L_if_else_0040
 11876                                  	; preparing a non-tail-call
 11877 00008417 488B4528                	mov rax, PARAM(1)	; param b
 11878 0000841B 50                      	push rax
 11879 0000841C 6A01                    	push 1	; arg count
 11880 0000841E 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 11881 00008426 803805                  	cmp byte [rax], T_undefined
 11882 00008429 0F84D32F0000            	je L_error_fvar_undefined
 11883 0000842F 803804                  	cmp byte [rax], T_closure
 11884 00008432 0F854E300000            	jne L_error_non_closure
 11885 00008438 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11886 0000843B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11887 0000843E 483D[02000000]          	cmp rax, sob_boolean_false
 11888 00008444 0F8493000000            	je .L_if_else_003b
 11889                                  	; preparing a tail-call
 11890                                  	; preparing a non-tail-call
 11891 0000844A 488B4528                	mov rax, PARAM(1)	; param b
 11892 0000844E 50                      	push rax
 11893 0000844F 6A01                    	push 1	; arg count
 11894 00008451 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11895 00008459 803805                  	cmp byte [rax], T_undefined
 11896 0000845C 0F84A02F0000            	je L_error_fvar_undefined
 11897 00008462 803804                  	cmp byte [rax], T_closure
 11898 00008465 0F851B300000            	jne L_error_non_closure
 11899 0000846B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11900 0000846E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11901 00008471 50                      	push rax
 11902 00008472 488B4520                	mov rax, PARAM(0)	; param a
 11903 00008476 50                      	push rax
 11904 00008477 6A02                    	push 2	; arg count
 11905 00008479 488B0425[7C0B0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 11906 00008481 803805                  	cmp byte [rax], T_undefined
 11907 00008484 0F84782F0000            	je L_error_fvar_undefined
 11908 0000848A 803804                  	cmp byte [rax], T_closure
 11909 0000848D 0F85F32F0000            	jne L_error_non_closure
 11910 00008493 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11911 00008496 FF7508                  	push qword [rbp + 8 * 1]
 11912                                   ; old ret addr
 11913 00008499 FF7500                  	push qword [rbp]
 11914                                   ; restore the old rbp
 11915 0000849C BB02000000              	mov rbx, 2
 11916 000084A1 4883C303                	add rbx, 3
 11917 000084A5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11918 000084A9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11919 000084AE 4C8D4DF8                	lea r9, [rbp - 8]
 11920 000084B2 B906000000              	mov rcx, 6
 11921                                  .L_tc_recycle_frame_loop_006d:
 11922 000084B7 4883F900                	cmp rcx, 0
 11923 000084BB 7413                    	je .L_tc_recycle_frame_done_006d
 11924 000084BD 4D8B11                  	mov r10, qword [r9]
 11925 000084C0 4D8910                  	mov qword [r8], r10
 11926 000084C3 4983E808                	sub r8, 8
 11927 000084C7 4983E908                	sub r9, 8
 11928 000084CB 48FFC9                  	dec rcx
 11929 000084CE EBE7                    	jmp .L_tc_recycle_frame_loop_006d
 11930                                  .L_tc_recycle_frame_done_006d:
 11931 000084D0 498D6008                	lea rsp, [r8 + 8]
 11932 000084D4 5D                      	pop rbp ; restore the old rbp
 11933 000084D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11934 000084D8 E9BC010000              	jmp .L_if_end_003b
 11935                                  .L_if_else_003b:
 11936                                  	; preparing a non-tail-call
 11937 000084DD 488B4528                	mov rax, PARAM(1)	; param b
 11938 000084E1 50                      	push rax
 11939 000084E2 6A01                    	push 1	; arg count
 11940 000084E4 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 11941 000084EC 803805                  	cmp byte [rax], T_undefined
 11942 000084EF 0F840D2F0000            	je L_error_fvar_undefined
 11943 000084F5 803804                  	cmp byte [rax], T_closure
 11944 000084F8 0F85882F0000            	jne L_error_non_closure
 11945 000084FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11946 00008501 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11947 00008504 483D[02000000]          	cmp rax, sob_boolean_false
 11948 0000850A 7470                    	je .L_if_else_003a
 11949                                  	; preparing a tail-call
 11950 0000850C 488B4528                	mov rax, PARAM(1)	; param b
 11951 00008510 50                      	push rax
 11952 00008511 488B4520                	mov rax, PARAM(0)	; param a
 11953 00008515 50                      	push rax
 11954 00008516 6A02                    	push 2	; arg count
 11955 00008518 488B0425[7C0B0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 11956 00008520 803805                  	cmp byte [rax], T_undefined
 11957 00008523 0F84D92E0000            	je L_error_fvar_undefined
 11958 00008529 803804                  	cmp byte [rax], T_closure
 11959 0000852C 0F85542F0000            	jne L_error_non_closure
 11960 00008532 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11961 00008535 FF7508                  	push qword [rbp + 8 * 1]
 11962                                   ; old ret addr
 11963 00008538 FF7500                  	push qword [rbp]
 11964                                   ; restore the old rbp
 11965 0000853B BB02000000              	mov rbx, 2
 11966 00008540 4883C303                	add rbx, 3
 11967 00008544 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11968 00008548 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11969 0000854D 4C8D4DF8                	lea r9, [rbp - 8]
 11970 00008551 B906000000              	mov rcx, 6
 11971                                  .L_tc_recycle_frame_loop_006e:
 11972 00008556 4883F900                	cmp rcx, 0
 11973 0000855A 7413                    	je .L_tc_recycle_frame_done_006e
 11974 0000855C 4D8B11                  	mov r10, qword [r9]
 11975 0000855F 4D8910                  	mov qword [r8], r10
 11976 00008562 4983E808                	sub r8, 8
 11977 00008566 4983E908                	sub r9, 8
 11978 0000856A 48FFC9                  	dec rcx
 11979 0000856D EBE7                    	jmp .L_tc_recycle_frame_loop_006e
 11980                                  .L_tc_recycle_frame_done_006e:
 11981 0000856F 498D6008                	lea rsp, [r8 + 8]
 11982 00008573 5D                      	pop rbp ; restore the old rbp
 11983 00008574 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11984 00008577 E91D010000              	jmp .L_if_end_003a
 11985                                  .L_if_else_003a:
 11986                                  	; preparing a non-tail-call
 11987 0000857C 488B4528                	mov rax, PARAM(1)	; param b
 11988 00008580 50                      	push rax
 11989 00008581 6A01                    	push 1	; arg count
 11990 00008583 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 11991 0000858B 803805                  	cmp byte [rax], T_undefined
 11992 0000858E 0F846E2E0000            	je L_error_fvar_undefined
 11993 00008594 803804                  	cmp byte [rax], T_closure
 11994 00008597 0F85E92E0000            	jne L_error_non_closure
 11995 0000859D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11996 000085A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11997 000085A3 483D[02000000]          	cmp rax, sob_boolean_false
 11998 000085A9 0F8490000000            	je .L_if_else_0039
 11999                                  	; preparing a tail-call
 12000 000085AF 488B4528                	mov rax, PARAM(1)	; param b
 12001 000085B3 50                      	push rax
 12002                                  	; preparing a non-tail-call
 12003 000085B4 488B4520                	mov rax, PARAM(0)	; param a
 12004 000085B8 50                      	push rax
 12005 000085B9 6A01                    	push 1	; arg count
 12006 000085BB 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
 12007 000085C3 803805                  	cmp byte [rax], T_undefined
 12008 000085C6 0F84362E0000            	je L_error_fvar_undefined
 12009 000085CC 803804                  	cmp byte [rax], T_closure
 12010 000085CF 0F85B12E0000            	jne L_error_non_closure
 12011 000085D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12012 000085D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12013 000085DB 50                      	push rax
 12014 000085DC 6A02                    	push 2	; arg count
 12015 000085DE 488B0425[8D0B0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12016 000085E6 803805                  	cmp byte [rax], T_undefined
 12017 000085E9 0F84132E0000            	je L_error_fvar_undefined
 12018 000085EF 803804                  	cmp byte [rax], T_closure
 12019 000085F2 0F858E2E0000            	jne L_error_non_closure
 12020 000085F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12021 000085FB FF7508                  	push qword [rbp + 8 * 1]
 12022                                   ; old ret addr
 12023 000085FE FF7500                  	push qword [rbp]
 12024                                   ; restore the old rbp
 12025 00008601 BB02000000              	mov rbx, 2
 12026 00008606 4883C303                	add rbx, 3
 12027 0000860A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12028 0000860E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12029 00008613 4C8D4DF8                	lea r9, [rbp - 8]
 12030 00008617 B906000000              	mov rcx, 6
 12031                                  .L_tc_recycle_frame_loop_006f:
 12032 0000861C 4883F900                	cmp rcx, 0
 12033 00008620 7413                    	je .L_tc_recycle_frame_done_006f
 12034 00008622 4D8B11                  	mov r10, qword [r9]
 12035 00008625 4D8910                  	mov qword [r8], r10
 12036 00008628 4983E808                	sub r8, 8
 12037 0000862C 4983E908                	sub r9, 8
 12038 00008630 48FFC9                  	dec rcx
 12039 00008633 EBE7                    	jmp .L_tc_recycle_frame_loop_006f
 12040                                  .L_tc_recycle_frame_done_006f:
 12041 00008635 498D6008                	lea rsp, [r8 + 8]
 12042 00008639 5D                      	pop rbp ; restore the old rbp
 12043 0000863A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12044 0000863D EB5A                    	jmp .L_if_end_0039
 12045                                  .L_if_else_0039:
 12046                                  	; preparing a tail-call
 12047 0000863F 6A00                    	push 0	; arg count
 12048 00008641 488B4510                	mov rax, ENV
 12049 00008645 488B00                  	mov rax, qword [rax + 8 * 0]
 12050 00008648 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12051 0000864B 803804                  	cmp byte [rax], T_closure
 12052 0000864E 0F85322E0000            	jne L_error_non_closure
 12053 00008654 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12054 00008657 FF7508                  	push qword [rbp + 8 * 1]
 12055                                   ; old ret addr
 12056 0000865A FF7500                  	push qword [rbp]
 12057                                   ; restore the old rbp
 12058 0000865D BB00000000              	mov rbx, 0
 12059 00008662 4883C303                	add rbx, 3
 12060 00008666 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12061 0000866A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12062 0000866F 4C8D4DF8                	lea r9, [rbp - 8]
 12063 00008673 B904000000              	mov rcx, 4
 12064                                  .L_tc_recycle_frame_loop_0070:
 12065 00008678 4883F900                	cmp rcx, 0
 12066 0000867C 7413                    	je .L_tc_recycle_frame_done_0070
 12067 0000867E 4D8B11                  	mov r10, qword [r9]
 12068 00008681 4D8910                  	mov qword [r8], r10
 12069 00008684 4983E808                	sub r8, 8
 12070 00008688 4983E908                	sub r9, 8
 12071 0000868C 48FFC9                  	dec rcx
 12072 0000868F EBE7                    	jmp .L_tc_recycle_frame_loop_0070
 12073                                  .L_tc_recycle_frame_done_0070:
 12074 00008691 498D6008                	lea rsp, [r8 + 8]
 12075 00008695 5D                      	pop rbp ; restore the old rbp
 12076 00008696 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12077                                  .L_if_end_0039:
 12078                                  .L_if_end_003a:
 12079                                  .L_if_end_003b:
 12080 00008699 E911030000              	jmp .L_if_end_0040
 12081                                  .L_if_else_0040:
 12082                                  	; preparing a non-tail-call
 12083 0000869E 488B4520                	mov rax, PARAM(0)	; param a
 12084 000086A2 50                      	push rax
 12085 000086A3 6A01                    	push 1	; arg count
 12086 000086A5 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 12087 000086AD 803805                  	cmp byte [rax], T_undefined
 12088 000086B0 0F844C2D0000            	je L_error_fvar_undefined
 12089 000086B6 803804                  	cmp byte [rax], T_closure
 12090 000086B9 0F85C72D0000            	jne L_error_non_closure
 12091 000086BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12092 000086C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12093 000086C5 483D[02000000]          	cmp rax, sob_boolean_false
 12094 000086CB 0F8484020000            	je .L_if_else_003f
 12095                                  	; preparing a non-tail-call
 12096 000086D1 488B4528                	mov rax, PARAM(1)	; param b
 12097 000086D5 50                      	push rax
 12098 000086D6 6A01                    	push 1	; arg count
 12099 000086D8 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 12100 000086E0 803805                  	cmp byte [rax], T_undefined
 12101 000086E3 0F84192D0000            	je L_error_fvar_undefined
 12102 000086E9 803804                  	cmp byte [rax], T_closure
 12103 000086EC 0F85942D0000            	jne L_error_non_closure
 12104 000086F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12105 000086F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12106 000086F8 483D[02000000]          	cmp rax, sob_boolean_false
 12107 000086FE 0F8493000000            	je .L_if_else_003e
 12108                                  	; preparing a tail-call
 12109                                  	; preparing a non-tail-call
 12110 00008704 488B4528                	mov rax, PARAM(1)	; param b
 12111 00008708 50                      	push rax
 12112 00008709 6A01                    	push 1	; arg count
 12113 0000870B 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
 12114 00008713 803805                  	cmp byte [rax], T_undefined
 12115 00008716 0F84E62C0000            	je L_error_fvar_undefined
 12116 0000871C 803804                  	cmp byte [rax], T_closure
 12117 0000871F 0F85612D0000            	jne L_error_non_closure
 12118 00008725 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12119 00008728 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12120 0000872B 50                      	push rax
 12121 0000872C 488B4520                	mov rax, PARAM(0)	; param a
 12122 00008730 50                      	push rax
 12123 00008731 6A02                    	push 2	; arg count
 12124 00008733 488B0425[8D0B0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12125 0000873B 803805                  	cmp byte [rax], T_undefined
 12126 0000873E 0F84BE2C0000            	je L_error_fvar_undefined
 12127 00008744 803804                  	cmp byte [rax], T_closure
 12128 00008747 0F85392D0000            	jne L_error_non_closure
 12129 0000874D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12130 00008750 FF7508                  	push qword [rbp + 8 * 1]
 12131                                   ; old ret addr
 12132 00008753 FF7500                  	push qword [rbp]
 12133                                   ; restore the old rbp
 12134 00008756 BB02000000              	mov rbx, 2
 12135 0000875B 4883C303                	add rbx, 3
 12136 0000875F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12137 00008763 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12138 00008768 4C8D4DF8                	lea r9, [rbp - 8]
 12139 0000876C B906000000              	mov rcx, 6
 12140                                  .L_tc_recycle_frame_loop_0071:
 12141 00008771 4883F900                	cmp rcx, 0
 12142 00008775 7413                    	je .L_tc_recycle_frame_done_0071
 12143 00008777 4D8B11                  	mov r10, qword [r9]
 12144 0000877A 4D8910                  	mov qword [r8], r10
 12145 0000877D 4983E808                	sub r8, 8
 12146 00008781 4983E908                	sub r9, 8
 12147 00008785 48FFC9                  	dec rcx
 12148 00008788 EBE7                    	jmp .L_tc_recycle_frame_loop_0071
 12149                                  .L_tc_recycle_frame_done_0071:
 12150 0000878A 498D6008                	lea rsp, [r8 + 8]
 12151 0000878E 5D                      	pop rbp ; restore the old rbp
 12152 0000878F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12153 00008792 E9BC010000              	jmp .L_if_end_003e
 12154                                  .L_if_else_003e:
 12155                                  	; preparing a non-tail-call
 12156 00008797 488B4528                	mov rax, PARAM(1)	; param b
 12157 0000879B 50                      	push rax
 12158 0000879C 6A01                    	push 1	; arg count
 12159 0000879E 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 12160 000087A6 803805                  	cmp byte [rax], T_undefined
 12161 000087A9 0F84532C0000            	je L_error_fvar_undefined
 12162 000087AF 803804                  	cmp byte [rax], T_closure
 12163 000087B2 0F85CE2C0000            	jne L_error_non_closure
 12164 000087B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12165 000087BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12166 000087BE 483D[02000000]          	cmp rax, sob_boolean_false
 12167 000087C4 0F8493000000            	je .L_if_else_003d
 12168                                  	; preparing a tail-call
 12169                                  	; preparing a non-tail-call
 12170 000087CA 488B4528                	mov rax, PARAM(1)	; param b
 12171 000087CE 50                      	push rax
 12172 000087CF 6A01                    	push 1	; arg count
 12173 000087D1 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
 12174 000087D9 803805                  	cmp byte [rax], T_undefined
 12175 000087DC 0F84202C0000            	je L_error_fvar_undefined
 12176 000087E2 803804                  	cmp byte [rax], T_closure
 12177 000087E5 0F859B2C0000            	jne L_error_non_closure
 12178 000087EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12179 000087EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 12180 000087F1 50                      	push rax
 12181 000087F2 488B4520                	mov rax, PARAM(0)	; param a
 12182 000087F6 50                      	push rax
 12183 000087F7 6A02                    	push 2	; arg count
 12184 000087F9 488B0425[8D0B0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12185 00008801 803805                  	cmp byte [rax], T_undefined
 12186 00008804 0F84F82B0000            	je L_error_fvar_undefined
 12187 0000880A 803804                  	cmp byte [rax], T_closure
 12188 0000880D 0F85732C0000            	jne L_error_non_closure
 12189 00008813 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12190 00008816 FF7508                  	push qword [rbp + 8 * 1]
 12191                                   ; old ret addr
 12192 00008819 FF7500                  	push qword [rbp]
 12193                                   ; restore the old rbp
 12194 0000881C BB02000000              	mov rbx, 2
 12195 00008821 4883C303                	add rbx, 3
 12196 00008825 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12197 00008829 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12198 0000882E 4C8D4DF8                	lea r9, [rbp - 8]
 12199 00008832 B906000000              	mov rcx, 6
 12200                                  .L_tc_recycle_frame_loop_0072:
 12201 00008837 4883F900                	cmp rcx, 0
 12202 0000883B 7413                    	je .L_tc_recycle_frame_done_0072
 12203 0000883D 4D8B11                  	mov r10, qword [r9]
 12204 00008840 4D8910                  	mov qword [r8], r10
 12205 00008843 4983E808                	sub r8, 8
 12206 00008847 4983E908                	sub r9, 8
 12207 0000884B 48FFC9                  	dec rcx
 12208 0000884E EBE7                    	jmp .L_tc_recycle_frame_loop_0072
 12209                                  .L_tc_recycle_frame_done_0072:
 12210 00008850 498D6008                	lea rsp, [r8 + 8]
 12211 00008854 5D                      	pop rbp ; restore the old rbp
 12212 00008855 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12213 00008858 E9F6000000              	jmp .L_if_end_003d
 12214                                  .L_if_else_003d:
 12215                                  	; preparing a non-tail-call
 12216 0000885D 488B4528                	mov rax, PARAM(1)	; param b
 12217 00008861 50                      	push rax
 12218 00008862 6A01                    	push 1	; arg count
 12219 00008864 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 12220 0000886C 803805                  	cmp byte [rax], T_undefined
 12221 0000886F 0F848D2B0000            	je L_error_fvar_undefined
 12222 00008875 803804                  	cmp byte [rax], T_closure
 12223 00008878 0F85082C0000            	jne L_error_non_closure
 12224 0000887E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12225 00008881 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12226 00008884 483D[02000000]          	cmp rax, sob_boolean_false
 12227 0000888A 746D                    	je .L_if_else_003c
 12228                                  	; preparing a tail-call
 12229 0000888C 488B4528                	mov rax, PARAM(1)	; param b
 12230 00008890 50                      	push rax
 12231 00008891 488B4520                	mov rax, PARAM(0)	; param a
 12232 00008895 50                      	push rax
 12233 00008896 6A02                    	push 2	; arg count
 12234 00008898 488B0425[8D0B0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12235 000088A0 803805                  	cmp byte [rax], T_undefined
 12236 000088A3 0F84592B0000            	je L_error_fvar_undefined
 12237 000088A9 803804                  	cmp byte [rax], T_closure
 12238 000088AC 0F85D42B0000            	jne L_error_non_closure
 12239 000088B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12240 000088B5 FF7508                  	push qword [rbp + 8 * 1]
 12241                                   ; old ret addr
 12242 000088B8 FF7500                  	push qword [rbp]
 12243                                   ; restore the old rbp
 12244 000088BB BB02000000              	mov rbx, 2
 12245 000088C0 4883C303                	add rbx, 3
 12246 000088C4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12247 000088C8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12248 000088CD 4C8D4DF8                	lea r9, [rbp - 8]
 12249 000088D1 B906000000              	mov rcx, 6
 12250                                  .L_tc_recycle_frame_loop_0073:
 12251 000088D6 4883F900                	cmp rcx, 0
 12252 000088DA 7413                    	je .L_tc_recycle_frame_done_0073
 12253 000088DC 4D8B11                  	mov r10, qword [r9]
 12254 000088DF 4D8910                  	mov qword [r8], r10
 12255 000088E2 4983E808                	sub r8, 8
 12256 000088E6 4983E908                	sub r9, 8
 12257 000088EA 48FFC9                  	dec rcx
 12258 000088ED EBE7                    	jmp .L_tc_recycle_frame_loop_0073
 12259                                  .L_tc_recycle_frame_done_0073:
 12260 000088EF 498D6008                	lea rsp, [r8 + 8]
 12261 000088F3 5D                      	pop rbp ; restore the old rbp
 12262 000088F4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12263 000088F7 EB5A                    	jmp .L_if_end_003c
 12264                                  .L_if_else_003c:
 12265                                  	; preparing a tail-call
 12266 000088F9 6A00                    	push 0	; arg count
 12267 000088FB 488B4510                	mov rax, ENV
 12268 000088FF 488B00                  	mov rax, qword [rax + 8 * 0]
 12269 00008902 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12270 00008905 803804                  	cmp byte [rax], T_closure
 12271 00008908 0F85782B0000            	jne L_error_non_closure
 12272 0000890E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12273 00008911 FF7508                  	push qword [rbp + 8 * 1]
 12274                                   ; old ret addr
 12275 00008914 FF7500                  	push qword [rbp]
 12276                                   ; restore the old rbp
 12277 00008917 BB00000000              	mov rbx, 0
 12278 0000891C 4883C303                	add rbx, 3
 12279 00008920 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12280 00008924 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12281 00008929 4C8D4DF8                	lea r9, [rbp - 8]
 12282 0000892D B904000000              	mov rcx, 4
 12283                                  .L_tc_recycle_frame_loop_0074:
 12284 00008932 4883F900                	cmp rcx, 0
 12285 00008936 7413                    	je .L_tc_recycle_frame_done_0074
 12286 00008938 4D8B11                  	mov r10, qword [r9]
 12287 0000893B 4D8910                  	mov qword [r8], r10
 12288 0000893E 4983E808                	sub r8, 8
 12289 00008942 4983E908                	sub r9, 8
 12290 00008946 48FFC9                  	dec rcx
 12291 00008949 EBE7                    	jmp .L_tc_recycle_frame_loop_0074
 12292                                  .L_tc_recycle_frame_done_0074:
 12293 0000894B 498D6008                	lea rsp, [r8 + 8]
 12294 0000894F 5D                      	pop rbp ; restore the old rbp
 12295 00008950 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12296                                  .L_if_end_003c:
 12297                                  .L_if_end_003d:
 12298                                  .L_if_end_003e:
 12299 00008953 EB5A                    	jmp .L_if_end_003f
 12300                                  .L_if_else_003f:
 12301                                  	; preparing a tail-call
 12302 00008955 6A00                    	push 0	; arg count
 12303 00008957 488B4510                	mov rax, ENV
 12304 0000895B 488B00                  	mov rax, qword [rax + 8 * 0]
 12305 0000895E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12306 00008961 803804                  	cmp byte [rax], T_closure
 12307 00008964 0F851C2B0000            	jne L_error_non_closure
 12308 0000896A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12309 0000896D FF7508                  	push qword [rbp + 8 * 1]
 12310                                   ; old ret addr
 12311 00008970 FF7500                  	push qword [rbp]
 12312                                   ; restore the old rbp
 12313 00008973 BB00000000              	mov rbx, 0
 12314 00008978 4883C303                	add rbx, 3
 12315 0000897C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12316 00008980 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12317 00008985 4C8D4DF8                	lea r9, [rbp - 8]
 12318 00008989 B904000000              	mov rcx, 4
 12319                                  .L_tc_recycle_frame_loop_0075:
 12320 0000898E 4883F900                	cmp rcx, 0
 12321 00008992 7413                    	je .L_tc_recycle_frame_done_0075
 12322 00008994 4D8B11                  	mov r10, qword [r9]
 12323 00008997 4D8910                  	mov qword [r8], r10
 12324 0000899A 4983E808                	sub r8, 8
 12325 0000899E 4983E908                	sub r9, 8
 12326 000089A2 48FFC9                  	dec rcx
 12327 000089A5 EBE7                    	jmp .L_tc_recycle_frame_loop_0075
 12328                                  .L_tc_recycle_frame_done_0075:
 12329 000089A7 498D6008                	lea rsp, [r8 + 8]
 12330 000089AB 5D                      	pop rbp ; restore the old rbp
 12331 000089AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12332                                  .L_if_end_003f:
 12333                                  .L_if_end_0040:
 12334                                  .L_if_end_0041:
 12335 000089AF C9                      	leave
 12336 000089B0 C22000                  	ret AND_KILL_FRAME(2)
 12337                                  .L_lambda_simple_end_0043:	; new closure is in rax
 12338 000089B3 50                      	push rax
 12339 000089B4 6A01                    	push 1	; arg count
 12340 000089B6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12341 000089BB E86F2B0000              	call malloc
 12342 000089C0 50                      	push rax
 12343 000089C1 BF08000000              	mov rdi, 8 * 1	; new rib
 12344 000089C6 E8642B0000              	call malloc
 12345 000089CB 50                      	push rax
 12346 000089CC BF10000000              	mov rdi, 8 * 2	; extended env
 12347 000089D1 E8592B0000              	call malloc
 12348 000089D6 488B7D10                	mov rdi, ENV
 12349 000089DA BE00000000              	mov rsi, 0
 12350 000089DF BA01000000              	mov rdx, 1
 12351                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 12352 000089E4 4883FE01                	cmp rsi, 1
 12353 000089E8 7410                    	je .L_lambda_simple_env_end_0044
 12354 000089EA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12355 000089EE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12356 000089F2 48FFC6                  	inc rsi
 12357 000089F5 48FFC2                  	inc rdx
 12358 000089F8 EBEA                    	jmp .L_lambda_simple_env_loop_0044
 12359                                  .L_lambda_simple_env_end_0044:
 12360 000089FA 5B                      	pop rbx
 12361 000089FB BE00000000              	mov rsi, 0
 12362                                  .L_lambda_simple_params_loop_0044:	; copy params
 12363 00008A00 4883FE01                	cmp rsi, 1
 12364 00008A04 740E                    	je .L_lambda_simple_params_end_0044
 12365 00008A06 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12366 00008A0B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12367 00008A0F 48FFC6                  	inc rsi
 12368 00008A12 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 12369                                  .L_lambda_simple_params_end_0044:
 12370 00008A14 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12371 00008A17 4889C3                  	mov rbx, rax
 12372 00008A1A 58                      	pop rax
 12373 00008A1B C60004                  	mov byte [rax], T_closure
 12374 00008A1E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12375 00008A22 48C74009[2F8A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 12376 00008A2A E964030000              	jmp .L_lambda_simple_end_0044
 12377                                  .L_lambda_simple_code_0044:	; lambda-simple body
 12378 00008A2F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12379 00008A35 740B                    	je .L_lambda_simple_arity_check_ok_0044
 12380 00008A37 FF742410                	push qword [rsp + 8 * 2]
 12381 00008A3B 6A01                    	push 1
 12382 00008A3D E9A62A0000              	jmp L_error_incorrect_arity_simple
 12383                                  .L_lambda_simple_arity_check_ok_0044:
 12384 00008A42 C8000000                	enter 0, 0
 12385 00008A46 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12386 00008A4B E8DF2A0000              	call malloc
 12387 00008A50 50                      	push rax
 12388 00008A51 BF10000000              	mov rdi, 8 * 2	; new rib
 12389 00008A56 E8D42A0000              	call malloc
 12390 00008A5B 50                      	push rax
 12391 00008A5C BF18000000              	mov rdi, 8 * 3	; extended env
 12392 00008A61 E8C92A0000              	call malloc
 12393 00008A66 488B7D10                	mov rdi, ENV
 12394 00008A6A BE00000000              	mov rsi, 0
 12395 00008A6F BA01000000              	mov rdx, 1
 12396                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 12397 00008A74 4883FE02                	cmp rsi, 2
 12398 00008A78 7410                    	je .L_lambda_opt_env_end_000d
 12399 00008A7A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12400 00008A7E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12401 00008A82 48FFC6                  	inc rsi
 12402 00008A85 48FFC2                  	inc rdx
 12403 00008A88 EBEA                    	jmp .L_lambda_opt_env_loop_000d
 12404                                  .L_lambda_opt_env_end_000d:
 12405 00008A8A 5B                      	pop rbx
 12406 00008A8B BE00000000              	mov rsi, 0
 12407                                  .L_lambda_opt_params_loop_000d:	; copy params
 12408 00008A90 4883FE01                	cmp rsi, 1
 12409 00008A94 740E                    	je .L_lambda_opt_params_end_000d
 12410 00008A96 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12411 00008A9B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12412 00008A9F 48FFC6                  	inc rsi
 12413 00008AA2 EBEC                    	jmp .L_lambda_opt_params_loop_000d
 12414                                  .L_lambda_opt_params_end_000d:
 12415 00008AA4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12416 00008AA7 4889C3                  	mov rbx, rax
 12417 00008AAA 58                      	pop rax
 12418 00008AAB C60004                  	mov byte [rax], T_closure
 12419 00008AAE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12420 00008AB2 48C74009[BF8A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 12421 00008ABA E9D0020000              	jmp .L_lambda_opt_end_000d
 12422                                  .L_lambda_opt_code_000d:	; lambda-opt body
 12423 00008ABF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12424 00008AC5 745E                    	je .L_lambda_opt_arity_check_exact_000d
 12425 00008AC7 7F0B                    	jg .L_lambda_opt_arity_check_more_000d
 12426 00008AC9 FF742410                	push qword [rsp + 8 * 2]
 12427 00008ACD 6A01                    	push 1
 12428 00008ACF E9142A0000              	jmp L_error_incorrect_arity_simple
 12429                                  .L_lambda_opt_arity_check_more_000d:
 12430 00008AD4 53                      push rbx
 12431 00008AD5 51                      push rcx
 12432 00008AD6 488B4D10                mov rcx, [rbp + 8*2]
 12433 00008ADA BB01000000              mov rbx , 1
 12434 00008ADF 4829D9                  sub rcx, rbx
 12435 00008AE2 48FFC3                  inc rbx
 12436 00008AE5 48895D10                mov [rbp + 8*2], rbx
 12437 00008AE9 4889CF                  	 mov rdi, rcx 
 12438 00008AEC 48C1E703                	 shl rdi, 3 
 12439 00008AF0 E83A2A0000              	call malloc
 12440 00008AF5 50                      	push rax
 12441 00008AF6 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
 12442 00008AFB 4831FF                  xor rdi, rdi
 12443                                  .L_lambda_opt_stack_shrink_loop_000d:
 12444 00008AFE 4839CF                  	cmp rdi, rcx
 12445 00008B01 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_000d
 12446 00008B03 488904FC                mov [rsp + rdi*8], rax
 12447 00008B07 48FFC7                  	inc rdi
 12448 00008B0A 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
 12449 00008B12 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
 12450 00008B17 498B04D9                mov rax,[r9 + rbx*8] 
 12451 00008B1B EBE1                    jmp .L_lambda_opt_stack_shrink_loop_000d
 12452                                  .L_lambda_opt_stack_shrink_loop_exit_000d:
 12453 00008B1D 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
 12454 00008B21 5B                      pop rbx
 12455 00008B22 53                      push rbx
 12456 00008B23 EB16                    jmp .L_lambda_opt_stack_adjusted_000d
 12457                                  .L_lambda_opt_arity_check_exact_000d:
 12458 00008B25 48B8-                   	mov rax, L_constants + 1
 12458 00008B27 [0100000000000000] 
 12459 00008B2F 53                      push rbx
 12460 00008B30 488B5C2410              mov rbx , [rsp + 8*2]
 12461 00008B35 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
 12462 00008B3A 5B                      pop rbx
 12463                                  .L_lambda_opt_stack_adjusted_000d:	; new closure is in rax
 12464 00008B3B C8000000                	enter 0, 0
 12465                                  	; preparing a non-tail-call
 12466 00008B3F 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 12467 00008B47 803805                  	cmp byte [rax], T_undefined
 12468 00008B4A 0F84B2280000            	je L_error_fvar_undefined
 12469 00008B50 50                      	push rax
 12470 00008B51 6A01                    	push 1	; arg count
 12471 00008B53 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
 12472 00008B5B 803805                  	cmp byte [rax], T_undefined
 12473 00008B5E 0F849E280000            	je L_error_fvar_undefined
 12474 00008B64 803804                  	cmp byte [rax], T_closure
 12475 00008B67 0F8519290000            	jne L_error_non_closure
 12476 00008B6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12477 00008B70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12478 00008B73 483D[02000000]          	cmp rax, sob_boolean_false
 12479 00008B79 746F                    	je .L_if_else_0042
 12480                                  	; preparing a tail-call
 12481 00008B7B 488B4520                	mov rax, PARAM(0)	; param a
 12482 00008B7F 50                      	push rax
 12483 00008B80 48B8-                   	mov rax, L_constants + 2304
 12483 00008B82 [0009000000000000] 
 12484 00008B8A 50                      	push rax
 12485 00008B8B 6A02                    	push 2	; arg count
 12486 00008B8D 488B4510                	mov rax, ENV
 12487 00008B91 488B00                  	mov rax, qword [rax + 8 * 0]
 12488 00008B94 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 12489 00008B97 803804                  	cmp byte [rax], T_closure
 12490 00008B9A 0F85E6280000            	jne L_error_non_closure
 12491 00008BA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12492 00008BA3 FF7508                  	push qword [rbp + 8 * 1]
 12493                                   ; old ret addr
 12494 00008BA6 FF7500                  	push qword [rbp]
 12495                                   ; restore the old rbp
 12496 00008BA9 BB02000000              	mov rbx, 2
 12497 00008BAE 4883C303                	add rbx, 3
 12498 00008BB2 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12499 00008BB6 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12500 00008BBB 4C8D4DF8                	lea r9, [rbp - 8]
 12501 00008BBF B906000000              	mov rcx, 6
 12502                                  .L_tc_recycle_frame_loop_0076:
 12503 00008BC4 4883F900                	cmp rcx, 0
 12504 00008BC8 7413                    	je .L_tc_recycle_frame_done_0076
 12505 00008BCA 4D8B11                  	mov r10, qword [r9]
 12506 00008BCD 4D8910                  	mov qword [r8], r10
 12507 00008BD0 4983E808                	sub r8, 8
 12508 00008BD4 4983E908                	sub r9, 8
 12509 00008BD8 48FFC9                  	dec rcx
 12510 00008BDB EBE7                    	jmp .L_tc_recycle_frame_loop_0076
 12511                                  .L_tc_recycle_frame_done_0076:
 12512 00008BDD 498D6008                	lea rsp, [r8 + 8]
 12513 00008BE1 5D                      	pop rbp ; restore the old rbp
 12514 00008BE2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12515 00008BE5 E9A1010000              	jmp .L_if_end_0042
 12516                                  .L_if_else_0042:
 12517                                  	; preparing a tail-call
 12518                                  	; preparing a non-tail-call
 12519 00008BEA 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 12520 00008BF2 803805                  	cmp byte [rax], T_undefined
 12521 00008BF5 0F8407280000            	je L_error_fvar_undefined
 12522 00008BFB 50                      	push rax
 12523 00008BFC 48B8-                   	mov rax, L_constants + 2304
 12523 00008BFE [0009000000000000] 
 12524 00008C06 50                      	push rax
 12525 00008C07 488B0425[9F0A0000]      	mov rax, qword [free_var_0]	; free var *
 12526 00008C0F 803805                  	cmp byte [rax], T_undefined
 12527 00008C12 0F84EA270000            	je L_error_fvar_undefined
 12528 00008C18 50                      	push rax
 12529 00008C19 6A03                    	push 3	; arg count
 12530 00008C1B 488B0425[AB0F0000]      	mov rax, qword [free_var_76]	; free var fold-left
 12531 00008C23 803805                  	cmp byte [rax], T_undefined
 12532 00008C26 0F84D6270000            	je L_error_fvar_undefined
 12533 00008C2C 803804                  	cmp byte [rax], T_closure
 12534 00008C2F 0F8551280000            	jne L_error_non_closure
 12535 00008C35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12536 00008C38 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12537 00008C3B 50                      	push rax
 12538 00008C3C 6A01                    	push 1	; arg count
 12539 00008C3E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12540 00008C43 E8E7280000              	call malloc
 12541 00008C48 50                      	push rax
 12542 00008C49 BF08000000              	mov rdi, 8 * 1	; new rib
 12543 00008C4E E8DC280000              	call malloc
 12544 00008C53 50                      	push rax
 12545 00008C54 BF20000000              	mov rdi, 8 * 4	; extended env
 12546 00008C59 E8D1280000              	call malloc
 12547 00008C5E 488B7D10                	mov rdi, ENV
 12548 00008C62 BE00000000              	mov rsi, 0
 12549 00008C67 BA01000000              	mov rdx, 1
 12550                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 12551 00008C6C 4883FE03                	cmp rsi, 3
 12552 00008C70 7410                    	je .L_lambda_simple_env_end_0045
 12553 00008C72 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12554 00008C76 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12555 00008C7A 48FFC6                  	inc rsi
 12556 00008C7D 48FFC2                  	inc rdx
 12557 00008C80 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 12558                                  .L_lambda_simple_env_end_0045:
 12559 00008C82 5B                      	pop rbx
 12560 00008C83 BE00000000              	mov rsi, 0
 12561                                  .L_lambda_simple_params_loop_0045:	; copy params
 12562 00008C88 4883FE01                	cmp rsi, 1
 12563 00008C8C 740E                    	je .L_lambda_simple_params_end_0045
 12564 00008C8E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12565 00008C93 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12566 00008C97 48FFC6                  	inc rsi
 12567 00008C9A EBEC                    	jmp .L_lambda_simple_params_loop_0045
 12568                                  .L_lambda_simple_params_end_0045:
 12569 00008C9C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12570 00008C9F 4889C3                  	mov rbx, rax
 12571 00008CA2 58                      	pop rax
 12572 00008CA3 C60004                  	mov byte [rax], T_closure
 12573 00008CA6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12574 00008CAA 48C74009[B78C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 12575 00008CB2 E986000000              	jmp .L_lambda_simple_end_0045
 12576                                  .L_lambda_simple_code_0045:	; lambda-simple body
 12577 00008CB7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12578 00008CBD 740B                    	je .L_lambda_simple_arity_check_ok_0045
 12579 00008CBF FF742410                	push qword [rsp + 8 * 2]
 12580 00008CC3 6A01                    	push 1
 12581 00008CC5 E91E280000              	jmp L_error_incorrect_arity_simple
 12582                                  .L_lambda_simple_arity_check_ok_0045:
 12583 00008CCA C8000000                	enter 0, 0
 12584                                  	; preparing a tail-call
 12585 00008CCE 488B4520                	mov rax, PARAM(0)	; param b
 12586 00008CD2 50                      	push rax
 12587 00008CD3 488B4510                	mov rax, ENV
 12588 00008CD7 488B00                  	mov rax, qword [rax + 8 * 0]
 12589 00008CDA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 12590 00008CDD 50                      	push rax
 12591 00008CDE 6A02                    	push 2	; arg count
 12592 00008CE0 488B4510                	mov rax, ENV
 12593 00008CE4 488B4008                	mov rax, qword [rax + 8 * 1]
 12594 00008CE8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 12595 00008CEB 803804                  	cmp byte [rax], T_closure
 12596 00008CEE 0F8592270000            	jne L_error_non_closure
 12597 00008CF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12598 00008CF7 FF7508                  	push qword [rbp + 8 * 1]
 12599                                   ; old ret addr
 12600 00008CFA FF7500                  	push qword [rbp]
 12601                                   ; restore the old rbp
 12602 00008CFD BB02000000              	mov rbx, 2
 12603 00008D02 4883C303                	add rbx, 3
 12604 00008D06 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12605 00008D0A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12606 00008D0F 4C8D4DF8                	lea r9, [rbp - 8]
 12607 00008D13 B906000000              	mov rcx, 6
 12608                                  .L_tc_recycle_frame_loop_0078:
 12609 00008D18 4883F900                	cmp rcx, 0
 12610 00008D1C 7413                    	je .L_tc_recycle_frame_done_0078
 12611 00008D1E 4D8B11                  	mov r10, qword [r9]
 12612 00008D21 4D8910                  	mov qword [r8], r10
 12613 00008D24 4983E808                	sub r8, 8
 12614 00008D28 4983E908                	sub r9, 8
 12615 00008D2C 48FFC9                  	dec rcx
 12616 00008D2F EBE7                    	jmp .L_tc_recycle_frame_loop_0078
 12617                                  .L_tc_recycle_frame_done_0078:
 12618 00008D31 498D6008                	lea rsp, [r8 + 8]
 12619 00008D35 5D                      	pop rbp ; restore the old rbp
 12620 00008D36 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12621 00008D39 C9                      	leave
 12622 00008D3A C21800                  	ret AND_KILL_FRAME(1)
 12623                                  .L_lambda_simple_end_0045:	; new closure is in rax
 12624 00008D3D 803804                  	cmp byte [rax], T_closure
 12625 00008D40 0F8540270000            	jne L_error_non_closure
 12626 00008D46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12627 00008D49 FF7508                  	push qword [rbp + 8 * 1]
 12628                                   ; old ret addr
 12629 00008D4C FF7500                  	push qword [rbp]
 12630                                   ; restore the old rbp
 12631 00008D4F BB01000000              	mov rbx, 1
 12632 00008D54 4883C303                	add rbx, 3
 12633 00008D58 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12634 00008D5C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12635 00008D61 4C8D4DF8                	lea r9, [rbp - 8]
 12636 00008D65 B905000000              	mov rcx, 5
 12637                                  .L_tc_recycle_frame_loop_0077:
 12638 00008D6A 4883F900                	cmp rcx, 0
 12639 00008D6E 7413                    	je .L_tc_recycle_frame_done_0077
 12640 00008D70 4D8B11                  	mov r10, qword [r9]
 12641 00008D73 4D8910                  	mov qword [r8], r10
 12642 00008D76 4983E808                	sub r8, 8
 12643 00008D7A 4983E908                	sub r9, 8
 12644 00008D7E 48FFC9                  	dec rcx
 12645 00008D81 EBE7                    	jmp .L_tc_recycle_frame_loop_0077
 12646                                  .L_tc_recycle_frame_done_0077:
 12647 00008D83 498D6008                	lea rsp, [r8 + 8]
 12648 00008D87 5D                      	pop rbp ; restore the old rbp
 12649 00008D88 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12650                                  .L_if_end_0042:
 12651 00008D8B C9                      	leave
 12652 00008D8C C21800                  	ret AND_KILL_FRAME(1)
 12653                                  .L_lambda_opt_end_000d:	; new closure is in rax
 12654 00008D8F C9                      	leave
 12655 00008D90 C21800                  	ret AND_KILL_FRAME(1)
 12656                                  .L_lambda_simple_end_0044:	; new closure is in rax
 12657 00008D93 803804                  	cmp byte [rax], T_closure
 12658 00008D96 0F85EA260000            	jne L_error_non_closure
 12659 00008D9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12660 00008D9F FF7508                  	push qword [rbp + 8 * 1]
 12661                                   ; old ret addr
 12662 00008DA2 FF7500                  	push qword [rbp]
 12663                                   ; restore the old rbp
 12664 00008DA5 BB01000000              	mov rbx, 1
 12665 00008DAA 4883C303                	add rbx, 3
 12666 00008DAE 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12667 00008DB2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12668 00008DB7 4C8D4DF8                	lea r9, [rbp - 8]
 12669 00008DBB B905000000              	mov rcx, 5
 12670                                  .L_tc_recycle_frame_loop_0068:
 12671 00008DC0 4883F900                	cmp rcx, 0
 12672 00008DC4 7413                    	je .L_tc_recycle_frame_done_0068
 12673 00008DC6 4D8B11                  	mov r10, qword [r9]
 12674 00008DC9 4D8910                  	mov qword [r8], r10
 12675 00008DCC 4983E808                	sub r8, 8
 12676 00008DD0 4983E908                	sub r9, 8
 12677 00008DD4 48FFC9                  	dec rcx
 12678 00008DD7 EBE7                    	jmp .L_tc_recycle_frame_loop_0068
 12679                                  .L_tc_recycle_frame_done_0068:
 12680 00008DD9 498D6008                	lea rsp, [r8 + 8]
 12681 00008DDD 5D                      	pop rbp ; restore the old rbp
 12682 00008DDE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12683 00008DE1 C9                      	leave
 12684 00008DE2 C21800                  	ret AND_KILL_FRAME(1)
 12685                                  .L_lambda_simple_end_0042:	; new closure is in rax
 12686 00008DE5 803804                  	cmp byte [rax], T_closure
 12687 00008DE8 0F8598260000            	jne L_error_non_closure
 12688 00008DEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 12689 00008DF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12690 00008DF4 48890425[D20A0000]      	mov qword [free_var_3], rax
 12691 00008DFC 48B8-                   	mov rax, sob_void
 12691 00008DFE [0000000000000000] 
 12692                                  
 12693 00008E06 4889C7                  	mov rdi, rax
 12694 00008E09 E876290000              	call print_sexpr_if_not_void
 12695 00008E0E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12696 00008E13 E817270000              	call malloc
 12697 00008E18 50                      	push rax
 12698 00008E19 BF00000000              	mov rdi, 8 * 0	; new rib
 12699 00008E1E E80C270000              	call malloc
 12700 00008E23 50                      	push rax
 12701 00008E24 BF08000000              	mov rdi, 8 * 1	; extended env
 12702 00008E29 E801270000              	call malloc
 12703 00008E2E 488B7D10                	mov rdi, ENV
 12704 00008E32 BE00000000              	mov rsi, 0
 12705 00008E37 BA01000000              	mov rdx, 1
 12706                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 12707 00008E3C 4883FE00                	cmp rsi, 0
 12708 00008E40 7410                    	je .L_lambda_simple_env_end_0046
 12709 00008E42 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12710 00008E46 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12711 00008E4A 48FFC6                  	inc rsi
 12712 00008E4D 48FFC2                  	inc rdx
 12713 00008E50 EBEA                    	jmp .L_lambda_simple_env_loop_0046
 12714                                  .L_lambda_simple_env_end_0046:
 12715 00008E52 5B                      	pop rbx
 12716 00008E53 BE00000000              	mov rsi, 0
 12717                                  .L_lambda_simple_params_loop_0046:	; copy params
 12718 00008E58 4883FE00                	cmp rsi, 0
 12719 00008E5C 740E                    	je .L_lambda_simple_params_end_0046
 12720 00008E5E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12721 00008E63 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12722 00008E67 48FFC6                  	inc rsi
 12723 00008E6A EBEC                    	jmp .L_lambda_simple_params_loop_0046
 12724                                  .L_lambda_simple_params_end_0046:
 12725 00008E6C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12726 00008E6F 4889C3                  	mov rbx, rax
 12727 00008E72 58                      	pop rax
 12728 00008E73 C60004                  	mov byte [rax], T_closure
 12729 00008E76 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12730 00008E7A 48C74009[878E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 12731 00008E82 E915010000              	jmp .L_lambda_simple_end_0046
 12732                                  .L_lambda_simple_code_0046:	; lambda-simple body
 12733 00008E87 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12734 00008E8D 740B                    	je .L_lambda_simple_arity_check_ok_0046
 12735 00008E8F FF742410                	push qword [rsp + 8 * 2]
 12736 00008E93 6A01                    	push 1
 12737 00008E95 E94E260000              	jmp L_error_incorrect_arity_simple
 12738                                  .L_lambda_simple_arity_check_ok_0046:
 12739 00008E9A C8000000                	enter 0, 0
 12740                                  	; preparing a non-tail-call
 12741 00008E9E 488B4520                	mov rax, PARAM(0)	; param n
 12742 00008EA2 50                      	push rax
 12743 00008EA3 6A01                    	push 1	; arg count
 12744 00008EA5 488B0425[32110000]      	mov rax, qword [free_var_99]	; free var zero?
 12745 00008EAD 803805                  	cmp byte [rax], T_undefined
 12746 00008EB0 0F844C250000            	je L_error_fvar_undefined
 12747 00008EB6 803804                  	cmp byte [rax], T_closure
 12748 00008EB9 0F85C7250000            	jne L_error_non_closure
 12749 00008EBF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12750 00008EC2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12751 00008EC5 483D[02000000]          	cmp rax, sob_boolean_false
 12752 00008ECB 740F                    	je .L_if_else_0043
 12753 00008ECD 48B8-                   	mov rax, L_constants + 2304
 12753 00008ECF [0009000000000000] 
 12754 00008ED7 E9BC000000              	jmp .L_if_end_0043
 12755                                  .L_if_else_0043:
 12756                                  	; preparing a tail-call
 12757                                  	; preparing a non-tail-call
 12758                                  	; preparing a non-tail-call
 12759 00008EDC 48B8-                   	mov rax, L_constants + 2304
 12759 00008EDE [0009000000000000] 
 12760 00008EE6 50                      	push rax
 12761 00008EE7 488B4520                	mov rax, PARAM(0)	; param n
 12762 00008EEB 50                      	push rax
 12763 00008EEC 6A02                    	push 2	; arg count
 12764 00008EEE 488B0425[C10A0000]      	mov rax, qword [free_var_2]	; free var -
 12765 00008EF6 803805                  	cmp byte [rax], T_undefined
 12766 00008EF9 0F8403250000            	je L_error_fvar_undefined
 12767 00008EFF 803804                  	cmp byte [rax], T_closure
 12768 00008F02 0F857E250000            	jne L_error_non_closure
 12769 00008F08 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12770 00008F0B FF5009                  	call SOB_CLOSURE_CODE(rax)
 12771 00008F0E 50                      	push rax
 12772 00008F0F 6A01                    	push 1	; arg count
 12773 00008F11 488B0425[9A0F0000]      	mov rax, qword [free_var_75]	; free var fact
 12774 00008F19 803805                  	cmp byte [rax], T_undefined
 12775 00008F1C 0F84E0240000            	je L_error_fvar_undefined
 12776 00008F22 803804                  	cmp byte [rax], T_closure
 12777 00008F25 0F855B250000            	jne L_error_non_closure
 12778 00008F2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12779 00008F2E FF5009                  	call SOB_CLOSURE_CODE(rax)
 12780 00008F31 50                      	push rax
 12781 00008F32 488B4520                	mov rax, PARAM(0)	; param n
 12782 00008F36 50                      	push rax
 12783 00008F37 6A02                    	push 2	; arg count
 12784 00008F39 488B0425[9F0A0000]      	mov rax, qword [free_var_0]	; free var *
 12785 00008F41 803805                  	cmp byte [rax], T_undefined
 12786 00008F44 0F84B8240000            	je L_error_fvar_undefined
 12787 00008F4A 803804                  	cmp byte [rax], T_closure
 12788 00008F4D 0F8533250000            	jne L_error_non_closure
 12789 00008F53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12790 00008F56 FF7508                  	push qword [rbp + 8 * 1]
 12791                                   ; old ret addr
 12792 00008F59 FF7500                  	push qword [rbp]
 12793                                   ; restore the old rbp
 12794 00008F5C BB02000000              	mov rbx, 2
 12795 00008F61 4883C303                	add rbx, 3
 12796 00008F65 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12797 00008F69 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12798 00008F6E 4C8D4DF8                	lea r9, [rbp - 8]
 12799 00008F72 B906000000              	mov rcx, 6
 12800                                  .L_tc_recycle_frame_loop_0079:
 12801 00008F77 4883F900                	cmp rcx, 0
 12802 00008F7B 7413                    	je .L_tc_recycle_frame_done_0079
 12803 00008F7D 4D8B11                  	mov r10, qword [r9]
 12804 00008F80 4D8910                  	mov qword [r8], r10
 12805 00008F83 4983E808                	sub r8, 8
 12806 00008F87 4983E908                	sub r9, 8
 12807 00008F8B 48FFC9                  	dec rcx
 12808 00008F8E EBE7                    	jmp .L_tc_recycle_frame_loop_0079
 12809                                  .L_tc_recycle_frame_done_0079:
 12810 00008F90 498D6008                	lea rsp, [r8 + 8]
 12811 00008F94 5D                      	pop rbp ; restore the old rbp
 12812 00008F95 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12813                                  .L_if_end_0043:
 12814 00008F98 C9                      	leave
 12815 00008F99 C21800                  	ret AND_KILL_FRAME(1)
 12816                                  .L_lambda_simple_end_0046:	; new closure is in rax
 12817 00008F9C 48890425[9A0F0000]      	mov qword [free_var_75], rax
 12818 00008FA4 48B8-                   	mov rax, sob_void
 12818 00008FA6 [0000000000000000] 
 12819                                  
 12820 00008FAE 4889C7                  	mov rdi, rax
 12821 00008FB1 E8CE270000              	call print_sexpr_if_not_void
 12822 00008FB6 48B8-                   	mov rax, L_constants + 0
 12822 00008FB8 [0000000000000000] 
 12823 00008FC0 48890425[E30A0000]      	mov qword [free_var_4], rax
 12824 00008FC8 48B8-                   	mov rax, sob_void
 12824 00008FCA [0000000000000000] 
 12825                                  
 12826 00008FD2 4889C7                  	mov rdi, rax
 12827 00008FD5 E8AA270000              	call print_sexpr_if_not_void
 12828 00008FDA 48B8-                   	mov rax, L_constants + 0
 12828 00008FDC [0000000000000000] 
 12829 00008FE4 48890425[F40A0000]      	mov qword [free_var_5], rax
 12830 00008FEC 48B8-                   	mov rax, sob_void
 12830 00008FEE [0000000000000000] 
 12831                                  
 12832 00008FF6 4889C7                  	mov rdi, rax
 12833 00008FF9 E886270000              	call print_sexpr_if_not_void
 12834 00008FFE 48B8-                   	mov rax, L_constants + 0
 12834 00009000 [0000000000000000] 
 12835 00009008 48890425[160B0000]      	mov qword [free_var_7], rax
 12836 00009010 48B8-                   	mov rax, sob_void
 12836 00009012 [0000000000000000] 
 12837                                  
 12838 0000901A 4889C7                  	mov rdi, rax
 12839 0000901D E862270000              	call print_sexpr_if_not_void
 12840 00009022 48B8-                   	mov rax, L_constants + 0
 12840 00009024 [0000000000000000] 
 12841 0000902C 48890425[270B0000]      	mov qword [free_var_8], rax
 12842 00009034 48B8-                   	mov rax, sob_void
 12842 00009036 [0000000000000000] 
 12843                                  
 12844 0000903E 4889C7                  	mov rdi, rax
 12845 00009041 E83E270000              	call print_sexpr_if_not_void
 12846 00009046 48B8-                   	mov rax, L_constants + 0
 12846 00009048 [0000000000000000] 
 12847 00009050 48890425[050B0000]      	mov qword [free_var_6], rax
 12848 00009058 48B8-                   	mov rax, sob_void
 12848 0000905A [0000000000000000] 
 12849                                  
 12850 00009062 4889C7                  	mov rdi, rax
 12851 00009065 E81A270000              	call print_sexpr_if_not_void
 12852                                  	; preparing a non-tail-call
 12853 0000906A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12854 0000906F E8BB240000              	call malloc
 12855 00009074 50                      	push rax
 12856 00009075 BF00000000              	mov rdi, 8 * 0	; new rib
 12857 0000907A E8B0240000              	call malloc
 12858 0000907F 50                      	push rax
 12859 00009080 BF08000000              	mov rdi, 8 * 1	; extended env
 12860 00009085 E8A5240000              	call malloc
 12861 0000908A 488B7D10                	mov rdi, ENV
 12862 0000908E BE00000000              	mov rsi, 0
 12863 00009093 BA01000000              	mov rdx, 1
 12864                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 12865 00009098 4883FE00                	cmp rsi, 0
 12866 0000909C 7410                    	je .L_lambda_simple_env_end_0047
 12867 0000909E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12868 000090A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12869 000090A6 48FFC6                  	inc rsi
 12870 000090A9 48FFC2                  	inc rdx
 12871 000090AC EBEA                    	jmp .L_lambda_simple_env_loop_0047
 12872                                  .L_lambda_simple_env_end_0047:
 12873 000090AE 5B                      	pop rbx
 12874 000090AF BE00000000              	mov rsi, 0
 12875                                  .L_lambda_simple_params_loop_0047:	; copy params
 12876 000090B4 4883FE00                	cmp rsi, 0
 12877 000090B8 740E                    	je .L_lambda_simple_params_end_0047
 12878 000090BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12879 000090BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12880 000090C3 48FFC6                  	inc rsi
 12881 000090C6 EBEC                    	jmp .L_lambda_simple_params_loop_0047
 12882                                  .L_lambda_simple_params_end_0047:
 12883 000090C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12884 000090CB 4889C3                  	mov rbx, rax
 12885 000090CE 58                      	pop rax
 12886 000090CF C60004                  	mov byte [rax], T_closure
 12887 000090D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12888 000090D6 48C74009[E3900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 12889 000090DE E992000000              	jmp .L_lambda_simple_end_0047
 12890                                  .L_lambda_simple_code_0047:	; lambda-simple body
 12891 000090E3 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12892 000090E9 740B                    	je .L_lambda_simple_arity_check_ok_0047
 12893 000090EB FF742410                	push qword [rsp + 8 * 2]
 12894 000090EF 6A00                    	push 0
 12895 000090F1 E9F2230000              	jmp L_error_incorrect_arity_simple
 12896                                  .L_lambda_simple_arity_check_ok_0047:
 12897 000090F6 C8000000                	enter 0, 0
 12898                                  	; preparing a tail-call
 12899 000090FA 48B8-                   	mov rax, L_constants + 2442
 12899 000090FC [8A09000000000000] 
 12900 00009104 50                      	push rax
 12901 00009105 48B8-                   	mov rax, L_constants + 2433
 12901 00009107 [8109000000000000] 
 12902 0000910F 50                      	push rax
 12903 00009110 6A02                    	push 2	; arg count
 12904 00009112 488B0425[890F0000]      	mov rax, qword [free_var_74]	; free var error
 12905 0000911A 803805                  	cmp byte [rax], T_undefined
 12906 0000911D 0F84DF220000            	je L_error_fvar_undefined
 12907 00009123 803804                  	cmp byte [rax], T_closure
 12908 00009126 0F855A230000            	jne L_error_non_closure
 12909 0000912C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12910 0000912F FF7508                  	push qword [rbp + 8 * 1]
 12911                                   ; old ret addr
 12912 00009132 FF7500                  	push qword [rbp]
 12913                                   ; restore the old rbp
 12914 00009135 BB02000000              	mov rbx, 2
 12915 0000913A 4883C303                	add rbx, 3
 12916 0000913E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12917 00009142 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12918 00009147 4C8D4DF8                	lea r9, [rbp - 8]
 12919 0000914B B906000000              	mov rcx, 6
 12920                                  .L_tc_recycle_frame_loop_007a:
 12921 00009150 4883F900                	cmp rcx, 0
 12922 00009154 7413                    	je .L_tc_recycle_frame_done_007a
 12923 00009156 4D8B11                  	mov r10, qword [r9]
 12924 00009159 4D8910                  	mov qword [r8], r10
 12925 0000915C 4983E808                	sub r8, 8
 12926 00009160 4983E908                	sub r9, 8
 12927 00009164 48FFC9                  	dec rcx
 12928 00009167 EBE7                    	jmp .L_tc_recycle_frame_loop_007a
 12929                                  .L_tc_recycle_frame_done_007a:
 12930 00009169 498D6008                	lea rsp, [r8 + 8]
 12931 0000916D 5D                      	pop rbp ; restore the old rbp
 12932 0000916E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12933 00009171 C9                      	leave
 12934 00009172 C21000                  	ret AND_KILL_FRAME(0)
 12935                                  .L_lambda_simple_end_0047:	; new closure is in rax
 12936 00009175 50                      	push rax
 12937 00009176 6A01                    	push 1	; arg count
 12938 00009178 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12939 0000917D E8AD230000              	call malloc
 12940 00009182 50                      	push rax
 12941 00009183 BF00000000              	mov rdi, 8 * 0	; new rib
 12942 00009188 E8A2230000              	call malloc
 12943 0000918D 50                      	push rax
 12944 0000918E BF08000000              	mov rdi, 8 * 1	; extended env
 12945 00009193 E897230000              	call malloc
 12946 00009198 488B7D10                	mov rdi, ENV
 12947 0000919C BE00000000              	mov rsi, 0
 12948 000091A1 BA01000000              	mov rdx, 1
 12949                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 12950 000091A6 4883FE00                	cmp rsi, 0
 12951 000091AA 7410                    	je .L_lambda_simple_env_end_0048
 12952 000091AC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12953 000091B0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12954 000091B4 48FFC6                  	inc rsi
 12955 000091B7 48FFC2                  	inc rdx
 12956 000091BA EBEA                    	jmp .L_lambda_simple_env_loop_0048
 12957                                  .L_lambda_simple_env_end_0048:
 12958 000091BC 5B                      	pop rbx
 12959 000091BD BE00000000              	mov rsi, 0
 12960                                  .L_lambda_simple_params_loop_0048:	; copy params
 12961 000091C2 4883FE00                	cmp rsi, 0
 12962 000091C6 740E                    	je .L_lambda_simple_params_end_0048
 12963 000091C8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12964 000091CD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12965 000091D1 48FFC6                  	inc rsi
 12966 000091D4 EBEC                    	jmp .L_lambda_simple_params_loop_0048
 12967                                  .L_lambda_simple_params_end_0048:
 12968 000091D6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12969 000091D9 4889C3                  	mov rbx, rax
 12970 000091DC 58                      	pop rax
 12971 000091DD C60004                  	mov byte [rax], T_closure
 12972 000091E0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12973 000091E4 48C74009[F1910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 12974 000091EC E9A3190000              	jmp .L_lambda_simple_end_0048
 12975                                  .L_lambda_simple_code_0048:	; lambda-simple body
 12976 000091F1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12977 000091F7 740B                    	je .L_lambda_simple_arity_check_ok_0048
 12978 000091F9 FF742410                	push qword [rsp + 8 * 2]
 12979 000091FD 6A01                    	push 1
 12980 000091FF E9E4220000              	jmp L_error_incorrect_arity_simple
 12981                                  .L_lambda_simple_arity_check_ok_0048:
 12982 00009204 C8000000                	enter 0, 0
 12983                                  	; preparing a tail-call
 12984 00009208 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12985 0000920D E81D230000              	call malloc
 12986 00009212 50                      	push rax
 12987 00009213 BF08000000              	mov rdi, 8 * 1	; new rib
 12988 00009218 E812230000              	call malloc
 12989 0000921D 50                      	push rax
 12990 0000921E BF10000000              	mov rdi, 8 * 2	; extended env
 12991 00009223 E807230000              	call malloc
 12992 00009228 488B7D10                	mov rdi, ENV
 12993 0000922C BE00000000              	mov rsi, 0
 12994 00009231 BA01000000              	mov rdx, 1
 12995                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 12996 00009236 4883FE01                	cmp rsi, 1
 12997 0000923A 7410                    	je .L_lambda_simple_env_end_0049
 12998 0000923C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12999 00009240 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13000 00009244 48FFC6                  	inc rsi
 13001 00009247 48FFC2                  	inc rdx
 13002 0000924A EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13003                                  .L_lambda_simple_env_end_0049:
 13004 0000924C 5B                      	pop rbx
 13005 0000924D BE00000000              	mov rsi, 0
 13006                                  .L_lambda_simple_params_loop_0049:	; copy params
 13007 00009252 4883FE01                	cmp rsi, 1
 13008 00009256 740E                    	je .L_lambda_simple_params_end_0049
 13009 00009258 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13010 0000925D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13011 00009261 48FFC6                  	inc rsi
 13012 00009264 EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13013                                  .L_lambda_simple_params_end_0049:
 13014 00009266 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13015 00009269 4889C3                  	mov rbx, rax
 13016 0000926C 58                      	pop rax
 13017 0000926D C60004                  	mov byte [rax], T_closure
 13018 00009270 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13019 00009274 48C74009[81920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13020 0000927C E901090000              	jmp .L_lambda_simple_end_0049
 13021                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13022 00009281 48837C241003            	cmp qword [rsp + 8 * 2], 3
 13023 00009287 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13024 00009289 FF742410                	push qword [rsp + 8 * 2]
 13025 0000928D 6A03                    	push 3
 13026 0000928F E954220000              	jmp L_error_incorrect_arity_simple
 13027                                  .L_lambda_simple_arity_check_ok_0049:
 13028 00009294 C8000000                	enter 0, 0
 13029 00009298 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13030 0000929D E88D220000              	call malloc
 13031 000092A2 50                      	push rax
 13032 000092A3 BF18000000              	mov rdi, 8 * 3	; new rib
 13033 000092A8 E882220000              	call malloc
 13034 000092AD 50                      	push rax
 13035 000092AE BF18000000              	mov rdi, 8 * 3	; extended env
 13036 000092B3 E877220000              	call malloc
 13037 000092B8 488B7D10                	mov rdi, ENV
 13038 000092BC BE00000000              	mov rsi, 0
 13039 000092C1 BA01000000              	mov rdx, 1
 13040                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13041 000092C6 4883FE02                	cmp rsi, 2
 13042 000092CA 7410                    	je .L_lambda_simple_env_end_004a
 13043 000092CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13044 000092D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13045 000092D4 48FFC6                  	inc rsi
 13046 000092D7 48FFC2                  	inc rdx
 13047 000092DA EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13048                                  .L_lambda_simple_env_end_004a:
 13049 000092DC 5B                      	pop rbx
 13050 000092DD BE00000000              	mov rsi, 0
 13051                                  .L_lambda_simple_params_loop_004a:	; copy params
 13052 000092E2 4883FE03                	cmp rsi, 3
 13053 000092E6 740E                    	je .L_lambda_simple_params_end_004a
 13054 000092E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13055 000092ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13056 000092F1 48FFC6                  	inc rsi
 13057 000092F4 EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13058                                  .L_lambda_simple_params_end_004a:
 13059 000092F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13060 000092F9 4889C3                  	mov rbx, rax
 13061 000092FC 58                      	pop rax
 13062 000092FD C60004                  	mov byte [rax], T_closure
 13063 00009300 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13064 00009304 48C74009[11930000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 13065 0000930C E96D080000              	jmp .L_lambda_simple_end_004a
 13066                                  .L_lambda_simple_code_004a:	; lambda-simple body
 13067 00009311 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13068 00009317 740B                    	je .L_lambda_simple_arity_check_ok_004a
 13069 00009319 FF742410                	push qword [rsp + 8 * 2]
 13070 0000931D 6A02                    	push 2
 13071 0000931F E9C4210000              	jmp L_error_incorrect_arity_simple
 13072                                  .L_lambda_simple_arity_check_ok_004a:
 13073 00009324 C8000000                	enter 0, 0
 13074                                  	; preparing a non-tail-call
 13075 00009328 488B4520                	mov rax, PARAM(0)	; param a
 13076 0000932C 50                      	push rax
 13077 0000932D 6A01                    	push 1	; arg count
 13078 0000932F 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 13079 00009337 803805                  	cmp byte [rax], T_undefined
 13080 0000933A 0F84C2200000            	je L_error_fvar_undefined
 13081 00009340 803804                  	cmp byte [rax], T_closure
 13082 00009343 0F853D210000            	jne L_error_non_closure
 13083 00009349 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13084 0000934C FF5009                  	call SOB_CLOSURE_CODE(rax)
 13085 0000934F 483D[02000000]          	cmp rax, sob_boolean_false
 13086 00009355 0F8475020000            	je .L_if_else_004f
 13087                                  	; preparing a non-tail-call
 13088 0000935B 488B4528                	mov rax, PARAM(1)	; param b
 13089 0000935F 50                      	push rax
 13090 00009360 6A01                    	push 1	; arg count
 13091 00009362 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 13092 0000936A 803805                  	cmp byte [rax], T_undefined
 13093 0000936D 0F848F200000            	je L_error_fvar_undefined
 13094 00009373 803804                  	cmp byte [rax], T_closure
 13095 00009376 0F850A210000            	jne L_error_non_closure
 13096 0000937C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13097 0000937F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13098 00009382 483D[02000000]          	cmp rax, sob_boolean_false
 13099 00009388 7469                    	je .L_if_else_0046
 13100                                  	; preparing a tail-call
 13101 0000938A 488B4528                	mov rax, PARAM(1)	; param b
 13102 0000938E 50                      	push rax
 13103 0000938F 488B4520                	mov rax, PARAM(0)	; param a
 13104 00009393 50                      	push rax
 13105 00009394 6A02                    	push 2	; arg count
 13106 00009396 488B4510                	mov rax, ENV
 13107 0000939A 488B00                  	mov rax, qword [rax + 8 * 0]
 13108 0000939D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 13109 000093A0 803804                  	cmp byte [rax], T_closure
 13110 000093A3 0F85DD200000            	jne L_error_non_closure
 13111 000093A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13112 000093AC FF7508                  	push qword [rbp + 8 * 1]
 13113                                   ; old ret addr
 13114 000093AF FF7500                  	push qword [rbp]
 13115                                   ; restore the old rbp
 13116 000093B2 BB02000000              	mov rbx, 2
 13117 000093B7 4883C303                	add rbx, 3
 13118 000093BB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13119 000093BF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13120 000093C4 4C8D4DF8                	lea r9, [rbp - 8]
 13121 000093C8 B906000000              	mov rcx, 6
 13122                                  .L_tc_recycle_frame_loop_007c:
 13123 000093CD 4883F900                	cmp rcx, 0
 13124 000093D1 7413                    	je .L_tc_recycle_frame_done_007c
 13125 000093D3 4D8B11                  	mov r10, qword [r9]
 13126 000093D6 4D8910                  	mov qword [r8], r10
 13127 000093D9 4983E808                	sub r8, 8
 13128 000093DD 4983E908                	sub r9, 8
 13129 000093E1 48FFC9                  	dec rcx
 13130 000093E4 EBE7                    	jmp .L_tc_recycle_frame_loop_007c
 13131                                  .L_tc_recycle_frame_done_007c:
 13132 000093E6 498D6008                	lea rsp, [r8 + 8]
 13133 000093EA 5D                      	pop rbp ; restore the old rbp
 13134 000093EB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13135 000093EE E9D8010000              	jmp .L_if_end_0046
 13136                                  .L_if_else_0046:
 13137                                  	; preparing a non-tail-call
 13138 000093F3 488B4528                	mov rax, PARAM(1)	; param b
 13139 000093F7 50                      	push rax
 13140 000093F8 6A01                    	push 1	; arg count
 13141 000093FA 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 13142 00009402 803805                  	cmp byte [rax], T_undefined
 13143 00009405 0F84F71F0000            	je L_error_fvar_undefined
 13144 0000940B 803804                  	cmp byte [rax], T_closure
 13145 0000940E 0F8572200000            	jne L_error_non_closure
 13146 00009414 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13147 00009417 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13148 0000941A 483D[02000000]          	cmp rax, sob_boolean_false
 13149 00009420 0F848D000000            	je .L_if_else_0045
 13150                                  	; preparing a tail-call
 13151 00009426 488B4528                	mov rax, PARAM(1)	; param b
 13152 0000942A 50                      	push rax
 13153                                  	; preparing a non-tail-call
 13154 0000942B 488B4520                	mov rax, PARAM(0)	; param a
 13155 0000942F 50                      	push rax
 13156 00009430 6A01                    	push 1	; arg count
 13157 00009432 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13158 0000943A 803805                  	cmp byte [rax], T_undefined
 13159 0000943D 0F84BF1F0000            	je L_error_fvar_undefined
 13160 00009443 803804                  	cmp byte [rax], T_closure
 13161 00009446 0F853A200000            	jne L_error_non_closure
 13162 0000944C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13163 0000944F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13164 00009452 50                      	push rax
 13165 00009453 6A02                    	push 2	; arg count
 13166 00009455 488B4510                	mov rax, ENV
 13167 00009459 488B00                  	mov rax, qword [rax + 8 * 0]
 13168 0000945C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13169 00009460 803804                  	cmp byte [rax], T_closure
 13170 00009463 0F851D200000            	jne L_error_non_closure
 13171 00009469 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13172 0000946C FF7508                  	push qword [rbp + 8 * 1]
 13173                                   ; old ret addr
 13174 0000946F FF7500                  	push qword [rbp]
 13175                                   ; restore the old rbp
 13176 00009472 BB02000000              	mov rbx, 2
 13177 00009477 4883C303                	add rbx, 3
 13178 0000947B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13179 0000947F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13180 00009484 4C8D4DF8                	lea r9, [rbp - 8]
 13181 00009488 B906000000              	mov rcx, 6
 13182                                  .L_tc_recycle_frame_loop_007d:
 13183 0000948D 4883F900                	cmp rcx, 0
 13184 00009491 7413                    	je .L_tc_recycle_frame_done_007d
 13185 00009493 4D8B11                  	mov r10, qword [r9]
 13186 00009496 4D8910                  	mov qword [r8], r10
 13187 00009499 4983E808                	sub r8, 8
 13188 0000949D 4983E908                	sub r9, 8
 13189 000094A1 48FFC9                  	dec rcx
 13190 000094A4 EBE7                    	jmp .L_tc_recycle_frame_loop_007d
 13191                                  .L_tc_recycle_frame_done_007d:
 13192 000094A6 498D6008                	lea rsp, [r8 + 8]
 13193 000094AA 5D                      	pop rbp ; restore the old rbp
 13194 000094AB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13195 000094AE E918010000              	jmp .L_if_end_0045
 13196                                  .L_if_else_0045:
 13197                                  	; preparing a non-tail-call
 13198 000094B3 488B4528                	mov rax, PARAM(1)	; param b
 13199 000094B7 50                      	push rax
 13200 000094B8 6A01                    	push 1	; arg count
 13201 000094BA 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 13202 000094C2 803805                  	cmp byte [rax], T_undefined
 13203 000094C5 0F84371F0000            	je L_error_fvar_undefined
 13204 000094CB 803804                  	cmp byte [rax], T_closure
 13205 000094CE 0F85B21F0000            	jne L_error_non_closure
 13206 000094D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13207 000094D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13208 000094DA 483D[02000000]          	cmp rax, sob_boolean_false
 13209 000094E0 0F848A000000            	je .L_if_else_0044
 13210                                  	; preparing a tail-call
 13211 000094E6 488B4528                	mov rax, PARAM(1)	; param b
 13212 000094EA 50                      	push rax
 13213                                  	; preparing a non-tail-call
 13214 000094EB 488B4520                	mov rax, PARAM(0)	; param a
 13215 000094EF 50                      	push rax
 13216 000094F0 6A01                    	push 1	; arg count
 13217 000094F2 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
 13218 000094FA 803805                  	cmp byte [rax], T_undefined
 13219 000094FD 0F84FF1E0000            	je L_error_fvar_undefined
 13220 00009503 803804                  	cmp byte [rax], T_closure
 13221 00009506 0F857A1F0000            	jne L_error_non_closure
 13222 0000950C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13223 0000950F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13224 00009512 50                      	push rax
 13225 00009513 6A02                    	push 2	; arg count
 13226 00009515 488B4510                	mov rax, ENV
 13227 00009519 488B00                  	mov rax, qword [rax + 8 * 0]
 13228 0000951C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13229 00009520 803804                  	cmp byte [rax], T_closure
 13230 00009523 0F855D1F0000            	jne L_error_non_closure
 13231 00009529 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13232 0000952C FF7508                  	push qword [rbp + 8 * 1]
 13233                                   ; old ret addr
 13234 0000952F FF7500                  	push qword [rbp]
 13235                                   ; restore the old rbp
 13236 00009532 BB02000000              	mov rbx, 2
 13237 00009537 4883C303                	add rbx, 3
 13238 0000953B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13239 0000953F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13240 00009544 4C8D4DF8                	lea r9, [rbp - 8]
 13241 00009548 B906000000              	mov rcx, 6
 13242                                  .L_tc_recycle_frame_loop_007e:
 13243 0000954D 4883F900                	cmp rcx, 0
 13244 00009551 7413                    	je .L_tc_recycle_frame_done_007e
 13245 00009553 4D8B11                  	mov r10, qword [r9]
 13246 00009556 4D8910                  	mov qword [r8], r10
 13247 00009559 4983E808                	sub r8, 8
 13248 0000955D 4983E908                	sub r9, 8
 13249 00009561 48FFC9                  	dec rcx
 13250 00009564 EBE7                    	jmp .L_tc_recycle_frame_loop_007e
 13251                                  .L_tc_recycle_frame_done_007e:
 13252 00009566 498D6008                	lea rsp, [r8 + 8]
 13253 0000956A 5D                      	pop rbp ; restore the old rbp
 13254 0000956B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13255 0000956E EB5B                    	jmp .L_if_end_0044
 13256                                  .L_if_else_0044:
 13257                                  	; preparing a tail-call
 13258 00009570 6A00                    	push 0	; arg count
 13259 00009572 488B4510                	mov rax, ENV
 13260 00009576 488B4008                	mov rax, qword [rax + 8 * 1]
 13261 0000957A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13262 0000957D 803804                  	cmp byte [rax], T_closure
 13263 00009580 0F85001F0000            	jne L_error_non_closure
 13264 00009586 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13265 00009589 FF7508                  	push qword [rbp + 8 * 1]
 13266                                   ; old ret addr
 13267 0000958C FF7500                  	push qword [rbp]
 13268                                   ; restore the old rbp
 13269 0000958F BB00000000              	mov rbx, 0
 13270 00009594 4883C303                	add rbx, 3
 13271 00009598 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13272 0000959C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13273 000095A1 4C8D4DF8                	lea r9, [rbp - 8]
 13274 000095A5 B904000000              	mov rcx, 4
 13275                                  .L_tc_recycle_frame_loop_007f:
 13276 000095AA 4883F900                	cmp rcx, 0
 13277 000095AE 7413                    	je .L_tc_recycle_frame_done_007f
 13278 000095B0 4D8B11                  	mov r10, qword [r9]
 13279 000095B3 4D8910                  	mov qword [r8], r10
 13280 000095B6 4983E808                	sub r8, 8
 13281 000095BA 4983E908                	sub r9, 8
 13282 000095BE 48FFC9                  	dec rcx
 13283 000095C1 EBE7                    	jmp .L_tc_recycle_frame_loop_007f
 13284                                  .L_tc_recycle_frame_done_007f:
 13285 000095C3 498D6008                	lea rsp, [r8 + 8]
 13286 000095C7 5D                      	pop rbp ; restore the old rbp
 13287 000095C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13288                                  .L_if_end_0044:
 13289                                  .L_if_end_0045:
 13290                                  .L_if_end_0046:
 13291 000095CB E9AA050000              	jmp .L_if_end_004f
 13292                                  .L_if_else_004f:
 13293                                  	; preparing a non-tail-call
 13294 000095D0 488B4520                	mov rax, PARAM(0)	; param a
 13295 000095D4 50                      	push rax
 13296 000095D5 6A01                    	push 1	; arg count
 13297 000095D7 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 13298 000095DF 803805                  	cmp byte [rax], T_undefined
 13299 000095E2 0F841A1E0000            	je L_error_fvar_undefined
 13300 000095E8 803804                  	cmp byte [rax], T_closure
 13301 000095EB 0F85951E0000            	jne L_error_non_closure
 13302 000095F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13303 000095F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13304 000095F7 483D[02000000]          	cmp rax, sob_boolean_false
 13305 000095FD 0F8476020000            	je .L_if_else_004e
 13306                                  	; preparing a non-tail-call
 13307 00009603 488B4528                	mov rax, PARAM(1)	; param b
 13308 00009607 50                      	push rax
 13309 00009608 6A01                    	push 1	; arg count
 13310 0000960A 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 13311 00009612 803805                  	cmp byte [rax], T_undefined
 13312 00009615 0F84E71D0000            	je L_error_fvar_undefined
 13313 0000961B 803804                  	cmp byte [rax], T_closure
 13314 0000961E 0F85621E0000            	jne L_error_non_closure
 13315 00009624 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13316 00009627 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13317 0000962A 483D[02000000]          	cmp rax, sob_boolean_false
 13318 00009630 0F848D000000            	je .L_if_else_0049
 13319                                  	; preparing a tail-call
 13320                                  	; preparing a non-tail-call
 13321 00009636 488B4528                	mov rax, PARAM(1)	; param b
 13322 0000963A 50                      	push rax
 13323 0000963B 6A01                    	push 1	; arg count
 13324 0000963D 488B0425[8C0C0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13325 00009645 803805                  	cmp byte [rax], T_undefined
 13326 00009648 0F84B41D0000            	je L_error_fvar_undefined
 13327 0000964E 803804                  	cmp byte [rax], T_closure
 13328 00009651 0F852F1E0000            	jne L_error_non_closure
 13329 00009657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13330 0000965A FF5009                  	call SOB_CLOSURE_CODE(rax)
 13331 0000965D 50                      	push rax
 13332 0000965E 488B4520                	mov rax, PARAM(0)	; param a
 13333 00009662 50                      	push rax
 13334 00009663 6A02                    	push 2	; arg count
 13335 00009665 488B4510                	mov rax, ENV
 13336 00009669 488B00                  	mov rax, qword [rax + 8 * 0]
 13337 0000966C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13338 00009670 803804                  	cmp byte [rax], T_closure
 13339 00009673 0F850D1E0000            	jne L_error_non_closure
 13340 00009679 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13341 0000967C FF7508                  	push qword [rbp + 8 * 1]
 13342                                   ; old ret addr
 13343 0000967F FF7500                  	push qword [rbp]
 13344                                   ; restore the old rbp
 13345 00009682 BB02000000              	mov rbx, 2
 13346 00009687 4883C303                	add rbx, 3
 13347 0000968B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13348 0000968F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13349 00009694 4C8D4DF8                	lea r9, [rbp - 8]
 13350 00009698 B906000000              	mov rcx, 6
 13351                                  .L_tc_recycle_frame_loop_0080:
 13352 0000969D 4883F900                	cmp rcx, 0
 13353 000096A1 7413                    	je .L_tc_recycle_frame_done_0080
 13354 000096A3 4D8B11                  	mov r10, qword [r9]
 13355 000096A6 4D8910                  	mov qword [r8], r10
 13356 000096A9 4983E808                	sub r8, 8
 13357 000096AD 4983E908                	sub r9, 8
 13358 000096B1 48FFC9                  	dec rcx
 13359 000096B4 EBE7                    	jmp .L_tc_recycle_frame_loop_0080
 13360                                  .L_tc_recycle_frame_done_0080:
 13361 000096B6 498D6008                	lea rsp, [r8 + 8]
 13362 000096BA 5D                      	pop rbp ; restore the old rbp
 13363 000096BB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13364 000096BE E9B1010000              	jmp .L_if_end_0049
 13365                                  .L_if_else_0049:
 13366                                  	; preparing a non-tail-call
 13367 000096C3 488B4528                	mov rax, PARAM(1)	; param b
 13368 000096C7 50                      	push rax
 13369 000096C8 6A01                    	push 1	; arg count
 13370 000096CA 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 13371 000096D2 803805                  	cmp byte [rax], T_undefined
 13372 000096D5 0F84271D0000            	je L_error_fvar_undefined
 13373 000096DB 803804                  	cmp byte [rax], T_closure
 13374 000096DE 0F85A21D0000            	jne L_error_non_closure
 13375 000096E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13376 000096E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13377 000096EA 483D[02000000]          	cmp rax, sob_boolean_false
 13378 000096F0 746A                    	je .L_if_else_0048
 13379                                  	; preparing a tail-call
 13380 000096F2 488B4528                	mov rax, PARAM(1)	; param b
 13381 000096F6 50                      	push rax
 13382 000096F7 488B4520                	mov rax, PARAM(0)	; param a
 13383 000096FB 50                      	push rax
 13384 000096FC 6A02                    	push 2	; arg count
 13385 000096FE 488B4510                	mov rax, ENV
 13386 00009702 488B00                  	mov rax, qword [rax + 8 * 0]
 13387 00009705 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 13388 00009709 803804                  	cmp byte [rax], T_closure
 13389 0000970C 0F85741D0000            	jne L_error_non_closure
 13390 00009712 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13391 00009715 FF7508                  	push qword [rbp + 8 * 1]
 13392                                   ; old ret addr
 13393 00009718 FF7500                  	push qword [rbp]
 13394                                   ; restore the old rbp
 13395 0000971B BB02000000              	mov rbx, 2
 13396 00009720 4883C303                	add rbx, 3
 13397 00009724 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13398 00009728 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13399 0000972D 4C8D4DF8                	lea r9, [rbp - 8]
 13400 00009731 B906000000              	mov rcx, 6
 13401                                  .L_tc_recycle_frame_loop_0081:
 13402 00009736 4883F900                	cmp rcx, 0
 13403 0000973A 7413                    	je .L_tc_recycle_frame_done_0081
 13404 0000973C 4D8B11                  	mov r10, qword [r9]
 13405 0000973F 4D8910                  	mov qword [r8], r10
 13406 00009742 4983E808                	sub r8, 8
 13407 00009746 4983E908                	sub r9, 8
 13408 0000974A 48FFC9                  	dec rcx
 13409 0000974D EBE7                    	jmp .L_tc_recycle_frame_loop_0081
 13410                                  .L_tc_recycle_frame_done_0081:
 13411 0000974F 498D6008                	lea rsp, [r8 + 8]
 13412 00009753 5D                      	pop rbp ; restore the old rbp
 13413 00009754 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13414 00009757 E918010000              	jmp .L_if_end_0048
 13415                                  .L_if_else_0048:
 13416                                  	; preparing a non-tail-call
 13417 0000975C 488B4528                	mov rax, PARAM(1)	; param b
 13418 00009760 50                      	push rax
 13419 00009761 6A01                    	push 1	; arg count
 13420 00009763 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 13421 0000976B 803805                  	cmp byte [rax], T_undefined
 13422 0000976E 0F848E1C0000            	je L_error_fvar_undefined
 13423 00009774 803804                  	cmp byte [rax], T_closure
 13424 00009777 0F85091D0000            	jne L_error_non_closure
 13425 0000977D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13426 00009780 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13427 00009783 483D[02000000]          	cmp rax, sob_boolean_false
 13428 00009789 0F848A000000            	je .L_if_else_0047
 13429                                  	; preparing a tail-call
 13430 0000978F 488B4528                	mov rax, PARAM(1)	; param b
 13431 00009793 50                      	push rax
 13432                                  	; preparing a non-tail-call
 13433 00009794 488B4520                	mov rax, PARAM(0)	; param a
 13434 00009798 50                      	push rax
 13435 00009799 6A01                    	push 1	; arg count
 13436 0000979B 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
 13437 000097A3 803805                  	cmp byte [rax], T_undefined
 13438 000097A6 0F84561C0000            	je L_error_fvar_undefined
 13439 000097AC 803804                  	cmp byte [rax], T_closure
 13440 000097AF 0F85D11C0000            	jne L_error_non_closure
 13441 000097B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13442 000097B8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13443 000097BB 50                      	push rax
 13444 000097BC 6A02                    	push 2	; arg count
 13445 000097BE 488B4510                	mov rax, ENV
 13446 000097C2 488B00                  	mov rax, qword [rax + 8 * 0]
 13447 000097C5 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13448 000097C9 803804                  	cmp byte [rax], T_closure
 13449 000097CC 0F85B41C0000            	jne L_error_non_closure
 13450 000097D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13451 000097D5 FF7508                  	push qword [rbp + 8 * 1]
 13452                                   ; old ret addr
 13453 000097D8 FF7500                  	push qword [rbp]
 13454                                   ; restore the old rbp
 13455 000097DB BB02000000              	mov rbx, 2
 13456 000097E0 4883C303                	add rbx, 3
 13457 000097E4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13458 000097E8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13459 000097ED 4C8D4DF8                	lea r9, [rbp - 8]
 13460 000097F1 B906000000              	mov rcx, 6
 13461                                  .L_tc_recycle_frame_loop_0082:
 13462 000097F6 4883F900                	cmp rcx, 0
 13463 000097FA 7413                    	je .L_tc_recycle_frame_done_0082
 13464 000097FC 4D8B11                  	mov r10, qword [r9]
 13465 000097FF 4D8910                  	mov qword [r8], r10
 13466 00009802 4983E808                	sub r8, 8
 13467 00009806 4983E908                	sub r9, 8
 13468 0000980A 48FFC9                  	dec rcx
 13469 0000980D EBE7                    	jmp .L_tc_recycle_frame_loop_0082
 13470                                  .L_tc_recycle_frame_done_0082:
 13471 0000980F 498D6008                	lea rsp, [r8 + 8]
 13472 00009813 5D                      	pop rbp ; restore the old rbp
 13473 00009814 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13474 00009817 EB5B                    	jmp .L_if_end_0047
 13475                                  .L_if_else_0047:
 13476                                  	; preparing a tail-call
 13477 00009819 6A00                    	push 0	; arg count
 13478 0000981B 488B4510                	mov rax, ENV
 13479 0000981F 488B4008                	mov rax, qword [rax + 8 * 1]
 13480 00009823 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13481 00009826 803804                  	cmp byte [rax], T_closure
 13482 00009829 0F85571C0000            	jne L_error_non_closure
 13483 0000982F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13484 00009832 FF7508                  	push qword [rbp + 8 * 1]
 13485                                   ; old ret addr
 13486 00009835 FF7500                  	push qword [rbp]
 13487                                   ; restore the old rbp
 13488 00009838 BB00000000              	mov rbx, 0
 13489 0000983D 4883C303                	add rbx, 3
 13490 00009841 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13491 00009845 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13492 0000984A 4C8D4DF8                	lea r9, [rbp - 8]
 13493 0000984E B904000000              	mov rcx, 4
 13494                                  .L_tc_recycle_frame_loop_0083:
 13495 00009853 4883F900                	cmp rcx, 0
 13496 00009857 7413                    	je .L_tc_recycle_frame_done_0083
 13497 00009859 4D8B11                  	mov r10, qword [r9]
 13498 0000985C 4D8910                  	mov qword [r8], r10
 13499 0000985F 4983E808                	sub r8, 8
 13500 00009863 4983E908                	sub r9, 8
 13501 00009867 48FFC9                  	dec rcx
 13502 0000986A EBE7                    	jmp .L_tc_recycle_frame_loop_0083
 13503                                  .L_tc_recycle_frame_done_0083:
 13504 0000986C 498D6008                	lea rsp, [r8 + 8]
 13505 00009870 5D                      	pop rbp ; restore the old rbp
 13506 00009871 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13507                                  .L_if_end_0047:
 13508                                  .L_if_end_0048:
 13509                                  .L_if_end_0049:
 13510 00009874 E901030000              	jmp .L_if_end_004e
 13511                                  .L_if_else_004e:
 13512                                  	; preparing a non-tail-call
 13513 00009879 488B4520                	mov rax, PARAM(0)	; param a
 13514 0000987D 50                      	push rax
 13515 0000987E 6A01                    	push 1	; arg count
 13516 00009880 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 13517 00009888 803805                  	cmp byte [rax], T_undefined
 13518 0000988B 0F84711B0000            	je L_error_fvar_undefined
 13519 00009891 803804                  	cmp byte [rax], T_closure
 13520 00009894 0F85EC1B0000            	jne L_error_non_closure
 13521 0000989A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13522 0000989D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13523 000098A0 483D[02000000]          	cmp rax, sob_boolean_false
 13524 000098A6 0F8473020000            	je .L_if_else_004d
 13525                                  	; preparing a non-tail-call
 13526 000098AC 488B4528                	mov rax, PARAM(1)	; param b
 13527 000098B0 50                      	push rax
 13528 000098B1 6A01                    	push 1	; arg count
 13529 000098B3 488B0425[22100000]      	mov rax, qword [free_var_83]	; free var integer?
 13530 000098BB 803805                  	cmp byte [rax], T_undefined
 13531 000098BE 0F843E1B0000            	je L_error_fvar_undefined
 13532 000098C4 803804                  	cmp byte [rax], T_closure
 13533 000098C7 0F85B91B0000            	jne L_error_non_closure
 13534 000098CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 13535 000098D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13536 000098D3 483D[02000000]          	cmp rax, sob_boolean_false
 13537 000098D9 0F848D000000            	je .L_if_else_004c
 13538                                  	; preparing a tail-call
 13539                                  	; preparing a non-tail-call
 13540 000098DF 488B4528                	mov rax, PARAM(1)	; param b
 13541 000098E3 50                      	push rax
 13542 000098E4 6A01                    	push 1	; arg count
 13543 000098E6 488B0425[11100000]      	mov rax, qword [free_var_82]	; free var integer->real
 13544 000098EE 803805                  	cmp byte [rax], T_undefined
 13545 000098F1 0F840B1B0000            	je L_error_fvar_undefined
 13546 000098F7 803804                  	cmp byte [rax], T_closure
 13547 000098FA 0F85861B0000            	jne L_error_non_closure
 13548 00009900 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13549 00009903 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13550 00009906 50                      	push rax
 13551 00009907 488B4520                	mov rax, PARAM(0)	; param a
 13552 0000990B 50                      	push rax
 13553 0000990C 6A02                    	push 2	; arg count
 13554 0000990E 488B4510                	mov rax, ENV
 13555 00009912 488B00                  	mov rax, qword [rax + 8 * 0]
 13556 00009915 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13557 00009919 803804                  	cmp byte [rax], T_closure
 13558 0000991C 0F85641B0000            	jne L_error_non_closure
 13559 00009922 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13560 00009925 FF7508                  	push qword [rbp + 8 * 1]
 13561                                   ; old ret addr
 13562 00009928 FF7500                  	push qword [rbp]
 13563                                   ; restore the old rbp
 13564 0000992B BB02000000              	mov rbx, 2
 13565 00009930 4883C303                	add rbx, 3
 13566 00009934 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13567 00009938 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13568 0000993D 4C8D4DF8                	lea r9, [rbp - 8]
 13569 00009941 B906000000              	mov rcx, 6
 13570                                  .L_tc_recycle_frame_loop_0084:
 13571 00009946 4883F900                	cmp rcx, 0
 13572 0000994A 7413                    	je .L_tc_recycle_frame_done_0084
 13573 0000994C 4D8B11                  	mov r10, qword [r9]
 13574 0000994F 4D8910                  	mov qword [r8], r10
 13575 00009952 4983E808                	sub r8, 8
 13576 00009956 4983E908                	sub r9, 8
 13577 0000995A 48FFC9                  	dec rcx
 13578 0000995D EBE7                    	jmp .L_tc_recycle_frame_loop_0084
 13579                                  .L_tc_recycle_frame_done_0084:
 13580 0000995F 498D6008                	lea rsp, [r8 + 8]
 13581 00009963 5D                      	pop rbp ; restore the old rbp
 13582 00009964 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13583 00009967 E9B1010000              	jmp .L_if_end_004c
 13584                                  .L_if_else_004c:
 13585                                  	; preparing a non-tail-call
 13586 0000996C 488B4528                	mov rax, PARAM(1)	; param b
 13587 00009970 50                      	push rax
 13588 00009971 6A01                    	push 1	; arg count
 13589 00009973 488B0425[DE0F0000]      	mov rax, qword [free_var_79]	; free var fraction?
 13590 0000997B 803805                  	cmp byte [rax], T_undefined
 13591 0000997E 0F847E1A0000            	je L_error_fvar_undefined
 13592 00009984 803804                  	cmp byte [rax], T_closure
 13593 00009987 0F85F91A0000            	jne L_error_non_closure
 13594 0000998D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13595 00009990 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13596 00009993 483D[02000000]          	cmp rax, sob_boolean_false
 13597 00009999 0F848D000000            	je .L_if_else_004b
 13598                                  	; preparing a tail-call
 13599                                  	; preparing a non-tail-call
 13600 0000999F 488B4528                	mov rax, PARAM(1)	; param b
 13601 000099A3 50                      	push rax
 13602 000099A4 6A01                    	push 1	; arg count
 13603 000099A6 488B0425[CD0F0000]      	mov rax, qword [free_var_78]	; free var fraction->real
 13604 000099AE 803805                  	cmp byte [rax], T_undefined
 13605 000099B1 0F844B1A0000            	je L_error_fvar_undefined
 13606 000099B7 803804                  	cmp byte [rax], T_closure
 13607 000099BA 0F85C61A0000            	jne L_error_non_closure
 13608 000099C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13609 000099C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13610 000099C6 50                      	push rax
 13611 000099C7 488B4520                	mov rax, PARAM(0)	; param a
 13612 000099CB 50                      	push rax
 13613 000099CC 6A02                    	push 2	; arg count
 13614 000099CE 488B4510                	mov rax, ENV
 13615 000099D2 488B00                  	mov rax, qword [rax + 8 * 0]
 13616 000099D5 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13617 000099D9 803804                  	cmp byte [rax], T_closure
 13618 000099DC 0F85A41A0000            	jne L_error_non_closure
 13619 000099E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13620 000099E5 FF7508                  	push qword [rbp + 8 * 1]
 13621                                   ; old ret addr
 13622 000099E8 FF7500                  	push qword [rbp]
 13623                                   ; restore the old rbp
 13624 000099EB BB02000000              	mov rbx, 2
 13625 000099F0 4883C303                	add rbx, 3
 13626 000099F4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13627 000099F8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13628 000099FD 4C8D4DF8                	lea r9, [rbp - 8]
 13629 00009A01 B906000000              	mov rcx, 6
 13630                                  .L_tc_recycle_frame_loop_0085:
 13631 00009A06 4883F900                	cmp rcx, 0
 13632 00009A0A 7413                    	je .L_tc_recycle_frame_done_0085
 13633 00009A0C 4D8B11                  	mov r10, qword [r9]
 13634 00009A0F 4D8910                  	mov qword [r8], r10
 13635 00009A12 4983E808                	sub r8, 8
 13636 00009A16 4983E908                	sub r9, 8
 13637 00009A1A 48FFC9                  	dec rcx
 13638 00009A1D EBE7                    	jmp .L_tc_recycle_frame_loop_0085
 13639                                  .L_tc_recycle_frame_done_0085:
 13640 00009A1F 498D6008                	lea rsp, [r8 + 8]
 13641 00009A23 5D                      	pop rbp ; restore the old rbp
 13642 00009A24 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13643 00009A27 E9F1000000              	jmp .L_if_end_004b
 13644                                  .L_if_else_004b:
 13645                                  	; preparing a non-tail-call
 13646 00009A2C 488B4528                	mov rax, PARAM(1)	; param b
 13647 00009A30 50                      	push rax
 13648 00009A31 6A01                    	push 1	; arg count
 13649 00009A33 488B0425[DD100000]      	mov rax, qword [free_var_94]	; free var real?
 13650 00009A3B 803805                  	cmp byte [rax], T_undefined
 13651 00009A3E 0F84BE190000            	je L_error_fvar_undefined
 13652 00009A44 803804                  	cmp byte [rax], T_closure
 13653 00009A47 0F85391A0000            	jne L_error_non_closure
 13654 00009A4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13655 00009A50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13656 00009A53 483D[02000000]          	cmp rax, sob_boolean_false
 13657 00009A59 7467                    	je .L_if_else_004a
 13658                                  	; preparing a tail-call
 13659 00009A5B 488B4528                	mov rax, PARAM(1)	; param b
 13660 00009A5F 50                      	push rax
 13661 00009A60 488B4520                	mov rax, PARAM(0)	; param a
 13662 00009A64 50                      	push rax
 13663 00009A65 6A02                    	push 2	; arg count
 13664 00009A67 488B4510                	mov rax, ENV
 13665 00009A6B 488B00                  	mov rax, qword [rax + 8 * 0]
 13666 00009A6E 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 13667 00009A72 803804                  	cmp byte [rax], T_closure
 13668 00009A75 0F850B1A0000            	jne L_error_non_closure
 13669 00009A7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13670 00009A7E FF7508                  	push qword [rbp + 8 * 1]
 13671                                   ; old ret addr
 13672 00009A81 FF7500                  	push qword [rbp]
 13673                                   ; restore the old rbp
 13674 00009A84 BB02000000              	mov rbx, 2
 13675 00009A89 4883C303                	add rbx, 3
 13676 00009A8D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13677 00009A91 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13678 00009A96 4C8D4DF8                	lea r9, [rbp - 8]
 13679 00009A9A B906000000              	mov rcx, 6
 13680                                  .L_tc_recycle_frame_loop_0086:
 13681 00009A9F 4883F900                	cmp rcx, 0
 13682 00009AA3 7413                    	je .L_tc_recycle_frame_done_0086
 13683 00009AA5 4D8B11                  	mov r10, qword [r9]
 13684 00009AA8 4D8910                  	mov qword [r8], r10
 13685 00009AAB 4983E808                	sub r8, 8
 13686 00009AAF 4983E908                	sub r9, 8
 13687 00009AB3 48FFC9                  	dec rcx
 13688 00009AB6 EBE7                    	jmp .L_tc_recycle_frame_loop_0086
 13689                                  .L_tc_recycle_frame_done_0086:
 13690 00009AB8 498D6008                	lea rsp, [r8 + 8]
 13691 00009ABC 5D                      	pop rbp ; restore the old rbp
 13692 00009ABD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13693 00009AC0 EB5B                    	jmp .L_if_end_004a
 13694                                  .L_if_else_004a:
 13695                                  	; preparing a tail-call
 13696 00009AC2 6A00                    	push 0	; arg count
 13697 00009AC4 488B4510                	mov rax, ENV
 13698 00009AC8 488B4008                	mov rax, qword [rax + 8 * 1]
 13699 00009ACC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13700 00009ACF 803804                  	cmp byte [rax], T_closure
 13701 00009AD2 0F85AE190000            	jne L_error_non_closure
 13702 00009AD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13703 00009ADB FF7508                  	push qword [rbp + 8 * 1]
 13704                                   ; old ret addr
 13705 00009ADE FF7500                  	push qword [rbp]
 13706                                   ; restore the old rbp
 13707 00009AE1 BB00000000              	mov rbx, 0
 13708 00009AE6 4883C303                	add rbx, 3
 13709 00009AEA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13710 00009AEE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13711 00009AF3 4C8D4DF8                	lea r9, [rbp - 8]
 13712 00009AF7 B904000000              	mov rcx, 4
 13713                                  .L_tc_recycle_frame_loop_0087:
 13714 00009AFC 4883F900                	cmp rcx, 0
 13715 00009B00 7413                    	je .L_tc_recycle_frame_done_0087
 13716 00009B02 4D8B11                  	mov r10, qword [r9]
 13717 00009B05 4D8910                  	mov qword [r8], r10
 13718 00009B08 4983E808                	sub r8, 8
 13719 00009B0C 4983E908                	sub r9, 8
 13720 00009B10 48FFC9                  	dec rcx
 13721 00009B13 EBE7                    	jmp .L_tc_recycle_frame_loop_0087
 13722                                  .L_tc_recycle_frame_done_0087:
 13723 00009B15 498D6008                	lea rsp, [r8 + 8]
 13724 00009B19 5D                      	pop rbp ; restore the old rbp
 13725 00009B1A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13726                                  .L_if_end_004a:
 13727                                  .L_if_end_004b:
 13728                                  .L_if_end_004c:
 13729 00009B1D EB5B                    	jmp .L_if_end_004d
 13730                                  .L_if_else_004d:
 13731                                  	; preparing a tail-call
 13732 00009B1F 6A00                    	push 0	; arg count
 13733 00009B21 488B4510                	mov rax, ENV
 13734 00009B25 488B4008                	mov rax, qword [rax + 8 * 1]
 13735 00009B29 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 13736 00009B2C 803804                  	cmp byte [rax], T_closure
 13737 00009B2F 0F8551190000            	jne L_error_non_closure
 13738 00009B35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13739 00009B38 FF7508                  	push qword [rbp + 8 * 1]
 13740                                   ; old ret addr
 13741 00009B3B FF7500                  	push qword [rbp]
 13742                                   ; restore the old rbp
 13743 00009B3E BB00000000              	mov rbx, 0
 13744 00009B43 4883C303                	add rbx, 3
 13745 00009B47 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13746 00009B4B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13747 00009B50 4C8D4DF8                	lea r9, [rbp - 8]
 13748 00009B54 B904000000              	mov rcx, 4
 13749                                  .L_tc_recycle_frame_loop_0088:
 13750 00009B59 4883F900                	cmp rcx, 0
 13751 00009B5D 7413                    	je .L_tc_recycle_frame_done_0088
 13752 00009B5F 4D8B11                  	mov r10, qword [r9]
 13753 00009B62 4D8910                  	mov qword [r8], r10
 13754 00009B65 4983E808                	sub r8, 8
 13755 00009B69 4983E908                	sub r9, 8
 13756 00009B6D 48FFC9                  	dec rcx
 13757 00009B70 EBE7                    	jmp .L_tc_recycle_frame_loop_0088
 13758                                  .L_tc_recycle_frame_done_0088:
 13759 00009B72 498D6008                	lea rsp, [r8 + 8]
 13760 00009B76 5D                      	pop rbp ; restore the old rbp
 13761 00009B77 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13762                                  .L_if_end_004d:
 13763                                  .L_if_end_004e:
 13764                                  .L_if_end_004f:
 13765 00009B7A C9                      	leave
 13766 00009B7B C22000                  	ret AND_KILL_FRAME(2)
 13767                                  .L_lambda_simple_end_004a:	; new closure is in rax
 13768 00009B7E C9                      	leave
 13769 00009B7F C22800                  	ret AND_KILL_FRAME(3)
 13770                                  .L_lambda_simple_end_0049:	; new closure is in rax
 13771 00009B82 50                      	push rax
 13772 00009B83 6A01                    	push 1	; arg count
 13773 00009B85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13774 00009B8A E8A0190000              	call malloc
 13775 00009B8F 50                      	push rax
 13776 00009B90 BF08000000              	mov rdi, 8 * 1	; new rib
 13777 00009B95 E895190000              	call malloc
 13778 00009B9A 50                      	push rax
 13779 00009B9B BF10000000              	mov rdi, 8 * 2	; extended env
 13780 00009BA0 E88A190000              	call malloc
 13781 00009BA5 488B7D10                	mov rdi, ENV
 13782 00009BA9 BE00000000              	mov rsi, 0
 13783 00009BAE BA01000000              	mov rdx, 1
 13784                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 13785 00009BB3 4883FE01                	cmp rsi, 1
 13786 00009BB7 7410                    	je .L_lambda_simple_env_end_004b
 13787 00009BB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13788 00009BBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13789 00009BC1 48FFC6                  	inc rsi
 13790 00009BC4 48FFC2                  	inc rdx
 13791 00009BC7 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 13792                                  .L_lambda_simple_env_end_004b:
 13793 00009BC9 5B                      	pop rbx
 13794 00009BCA BE00000000              	mov rsi, 0
 13795                                  .L_lambda_simple_params_loop_004b:	; copy params
 13796 00009BCF 4883FE01                	cmp rsi, 1
 13797 00009BD3 740E                    	je .L_lambda_simple_params_end_004b
 13798 00009BD5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13799 00009BDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13800 00009BDE 48FFC6                  	inc rsi
 13801 00009BE1 EBEC                    	jmp .L_lambda_simple_params_loop_004b
 13802                                  .L_lambda_simple_params_end_004b:
 13803 00009BE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13804 00009BE6 4889C3                  	mov rbx, rax
 13805 00009BE9 58                      	pop rax
 13806 00009BEA C60004                  	mov byte [rax], T_closure
 13807 00009BED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13808 00009BF1 48C74009[FE9B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 13809 00009BF9 E9440F0000              	jmp .L_lambda_simple_end_004b
 13810                                  .L_lambda_simple_code_004b:	; lambda-simple body
 13811 00009BFE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13812 00009C04 740B                    	je .L_lambda_simple_arity_check_ok_004b
 13813 00009C06 FF742410                	push qword [rsp + 8 * 2]
 13814 00009C0A 6A01                    	push 1
 13815 00009C0C E9D7180000              	jmp L_error_incorrect_arity_simple
 13816                                  .L_lambda_simple_arity_check_ok_004b:
 13817 00009C11 C8000000                	enter 0, 0
 13818                                  	; preparing a tail-call
 13819                                  	; preparing a non-tail-call
 13820 00009C15 488B0425[F30B0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 13821 00009C1D 803805                  	cmp byte [rax], T_undefined
 13822 00009C20 0F84DC170000            	je L_error_fvar_undefined
 13823 00009C26 50                      	push rax
 13824 00009C27 488B0425[E20B0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 13825 00009C2F 803805                  	cmp byte [rax], T_undefined
 13826 00009C32 0F84CA170000            	je L_error_fvar_undefined
 13827 00009C38 50                      	push rax
 13828 00009C39 488B0425[040C0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 13829 00009C41 803805                  	cmp byte [rax], T_undefined
 13830 00009C44 0F84B8170000            	je L_error_fvar_undefined
 13831 00009C4A 50                      	push rax
 13832 00009C4B 6A03                    	push 3	; arg count
 13833 00009C4D 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 13834 00009C51 803804                  	cmp byte [rax], T_closure
 13835 00009C54 0F852C180000            	jne L_error_non_closure
 13836 00009C5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13837 00009C5D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13838 00009C60 50                      	push rax
 13839 00009C61 6A01                    	push 1	; arg count
 13840 00009C63 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13841 00009C68 E8C2180000              	call malloc
 13842 00009C6D 50                      	push rax
 13843 00009C6E BF08000000              	mov rdi, 8 * 1	; new rib
 13844 00009C73 E8B7180000              	call malloc
 13845 00009C78 50                      	push rax
 13846 00009C79 BF18000000              	mov rdi, 8 * 3	; extended env
 13847 00009C7E E8AC180000              	call malloc
 13848 00009C83 488B7D10                	mov rdi, ENV
 13849 00009C87 BE00000000              	mov rsi, 0
 13850 00009C8C BA01000000              	mov rdx, 1
 13851                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 13852 00009C91 4883FE02                	cmp rsi, 2
 13853 00009C95 7410                    	je .L_lambda_simple_env_end_004c
 13854 00009C97 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13855 00009C9B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13856 00009C9F 48FFC6                  	inc rsi
 13857 00009CA2 48FFC2                  	inc rdx
 13858 00009CA5 EBEA                    	jmp .L_lambda_simple_env_loop_004c
 13859                                  .L_lambda_simple_env_end_004c:
 13860 00009CA7 5B                      	pop rbx
 13861 00009CA8 BE00000000              	mov rsi, 0
 13862                                  .L_lambda_simple_params_loop_004c:	; copy params
 13863 00009CAD 4883FE01                	cmp rsi, 1
 13864 00009CB1 740E                    	je .L_lambda_simple_params_end_004c
 13865 00009CB3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13866 00009CB8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13867 00009CBC 48FFC6                  	inc rsi
 13868 00009CBF EBEC                    	jmp .L_lambda_simple_params_loop_004c
 13869                                  .L_lambda_simple_params_end_004c:
 13870 00009CC1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13871 00009CC4 4889C3                  	mov rbx, rax
 13872 00009CC7 58                      	pop rax
 13873 00009CC8 C60004                  	mov byte [rax], T_closure
 13874 00009CCB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13875 00009CCF 48C74009[DC9C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 13876 00009CD7 E9140E0000              	jmp .L_lambda_simple_end_004c
 13877                                  .L_lambda_simple_code_004c:	; lambda-simple body
 13878 00009CDC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13879 00009CE2 740B                    	je .L_lambda_simple_arity_check_ok_004c
 13880 00009CE4 FF742410                	push qword [rsp + 8 * 2]
 13881 00009CE8 6A01                    	push 1
 13882 00009CEA E9F9170000              	jmp L_error_incorrect_arity_simple
 13883                                  .L_lambda_simple_arity_check_ok_004c:
 13884 00009CEF C8000000                	enter 0, 0
 13885                                  	; preparing a tail-call
 13886                                  	; preparing a non-tail-call
 13887 00009CF3 488B0425[C00B0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 13888 00009CFB 803805                  	cmp byte [rax], T_undefined
 13889 00009CFE 0F84FE160000            	je L_error_fvar_undefined
 13890 00009D04 50                      	push rax
 13891 00009D05 488B0425[AF0B0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 13892 00009D0D 803805                  	cmp byte [rax], T_undefined
 13893 00009D10 0F84EC160000            	je L_error_fvar_undefined
 13894 00009D16 50                      	push rax
 13895 00009D17 488B0425[D10B0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 13896 00009D1F 803805                  	cmp byte [rax], T_undefined
 13897 00009D22 0F84DA160000            	je L_error_fvar_undefined
 13898 00009D28 50                      	push rax
 13899 00009D29 6A03                    	push 3	; arg count
 13900 00009D2B 488B4510                	mov rax, ENV
 13901 00009D2F 488B00                  	mov rax, qword [rax + 8 * 0]
 13902 00009D32 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 13903 00009D35 803804                  	cmp byte [rax], T_closure
 13904 00009D38 0F8548170000            	jne L_error_non_closure
 13905 00009D3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13906 00009D41 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13907 00009D44 50                      	push rax
 13908 00009D45 6A01                    	push 1	; arg count
 13909 00009D47 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13910 00009D4C E8DE170000              	call malloc
 13911 00009D51 50                      	push rax
 13912 00009D52 BF08000000              	mov rdi, 8 * 1	; new rib
 13913 00009D57 E8D3170000              	call malloc
 13914 00009D5C 50                      	push rax
 13915 00009D5D BF20000000              	mov rdi, 8 * 4	; extended env
 13916 00009D62 E8C8170000              	call malloc
 13917 00009D67 488B7D10                	mov rdi, ENV
 13918 00009D6B BE00000000              	mov rsi, 0
 13919 00009D70 BA01000000              	mov rdx, 1
 13920                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 13921 00009D75 4883FE03                	cmp rsi, 3
 13922 00009D79 7410                    	je .L_lambda_simple_env_end_004d
 13923 00009D7B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13924 00009D7F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13925 00009D83 48FFC6                  	inc rsi
 13926 00009D86 48FFC2                  	inc rdx
 13927 00009D89 EBEA                    	jmp .L_lambda_simple_env_loop_004d
 13928                                  .L_lambda_simple_env_end_004d:
 13929 00009D8B 5B                      	pop rbx
 13930 00009D8C BE00000000              	mov rsi, 0
 13931                                  .L_lambda_simple_params_loop_004d:	; copy params
 13932 00009D91 4883FE01                	cmp rsi, 1
 13933 00009D95 740E                    	je .L_lambda_simple_params_end_004d
 13934 00009D97 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13935 00009D9C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13936 00009DA0 48FFC6                  	inc rsi
 13937 00009DA3 EBEC                    	jmp .L_lambda_simple_params_loop_004d
 13938                                  .L_lambda_simple_params_end_004d:
 13939 00009DA5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13940 00009DA8 4889C3                  	mov rbx, rax
 13941 00009DAB 58                      	pop rax
 13942 00009DAC C60004                  	mov byte [rax], T_closure
 13943 00009DAF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13944 00009DB3 48C74009[C09D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 13945 00009DBB E9DE0C0000              	jmp .L_lambda_simple_end_004d
 13946                                  .L_lambda_simple_code_004d:	; lambda-simple body
 13947 00009DC0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13948 00009DC6 740B                    	je .L_lambda_simple_arity_check_ok_004d
 13949 00009DC8 FF742410                	push qword [rsp + 8 * 2]
 13950 00009DCC 6A01                    	push 1
 13951 00009DCE E915170000              	jmp L_error_incorrect_arity_simple
 13952                                  .L_lambda_simple_arity_check_ok_004d:
 13953 00009DD3 C8000000                	enter 0, 0
 13954                                  	; preparing a tail-call
 13955 00009DD7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13956 00009DDC E84E170000              	call malloc
 13957 00009DE1 50                      	push rax
 13958 00009DE2 BF08000000              	mov rdi, 8 * 1	; new rib
 13959 00009DE7 E843170000              	call malloc
 13960 00009DEC 50                      	push rax
 13961 00009DED BF28000000              	mov rdi, 8 * 5	; extended env
 13962 00009DF2 E838170000              	call malloc
 13963 00009DF7 488B7D10                	mov rdi, ENV
 13964 00009DFB BE00000000              	mov rsi, 0
 13965 00009E00 BA01000000              	mov rdx, 1
 13966                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 13967 00009E05 4883FE04                	cmp rsi, 4
 13968 00009E09 7410                    	je .L_lambda_simple_env_end_004e
 13969 00009E0B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13970 00009E0F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13971 00009E13 48FFC6                  	inc rsi
 13972 00009E16 48FFC2                  	inc rdx
 13973 00009E19 EBEA                    	jmp .L_lambda_simple_env_loop_004e
 13974                                  .L_lambda_simple_env_end_004e:
 13975 00009E1B 5B                      	pop rbx
 13976 00009E1C BE00000000              	mov rsi, 0
 13977                                  .L_lambda_simple_params_loop_004e:	; copy params
 13978 00009E21 4883FE01                	cmp rsi, 1
 13979 00009E25 740E                    	je .L_lambda_simple_params_end_004e
 13980 00009E27 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13981 00009E2C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13982 00009E30 48FFC6                  	inc rsi
 13983 00009E33 EBEC                    	jmp .L_lambda_simple_params_loop_004e
 13984                                  .L_lambda_simple_params_end_004e:
 13985 00009E35 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13986 00009E38 4889C3                  	mov rbx, rax
 13987 00009E3B 58                      	pop rax
 13988 00009E3C C60004                  	mov byte [rax], T_closure
 13989 00009E3F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13990 00009E43 48C74009[509E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 13991 00009E4B E9A3000000              	jmp .L_lambda_simple_end_004e
 13992                                  .L_lambda_simple_code_004e:	; lambda-simple body
 13993 00009E50 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13994 00009E56 740B                    	je .L_lambda_simple_arity_check_ok_004e
 13995 00009E58 FF742410                	push qword [rsp + 8 * 2]
 13996 00009E5C 6A02                    	push 2
 13997 00009E5E E985160000              	jmp L_error_incorrect_arity_simple
 13998                                  .L_lambda_simple_arity_check_ok_004e:
 13999 00009E63 C8000000                	enter 0, 0
 14000                                  	; preparing a tail-call
 14001                                  	; preparing a non-tail-call
 14002 00009E67 488B4528                	mov rax, PARAM(1)	; param b
 14003 00009E6B 50                      	push rax
 14004 00009E6C 488B4520                	mov rax, PARAM(0)	; param a
 14005 00009E70 50                      	push rax
 14006 00009E71 6A02                    	push 2	; arg count
 14007 00009E73 488B4510                	mov rax, ENV
 14008 00009E77 488B4008                	mov rax, qword [rax + 8 * 1]
 14009 00009E7B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14010 00009E7E 803804                  	cmp byte [rax], T_closure
 14011 00009E81 0F85FF150000            	jne L_error_non_closure
 14012 00009E87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14013 00009E8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14014 00009E8D 50                      	push rax
 14015 00009E8E 6A01                    	push 1	; arg count
 14016 00009E90 488B0425[77100000]      	mov rax, qword [free_var_88]	; free var not
 14017 00009E98 803805                  	cmp byte [rax], T_undefined
 14018 00009E9B 0F8461150000            	je L_error_fvar_undefined
 14019 00009EA1 803804                  	cmp byte [rax], T_closure
 14020 00009EA4 0F85DC150000            	jne L_error_non_closure
 14021 00009EAA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14022 00009EAD FF7508                  	push qword [rbp + 8 * 1]
 14023                                   ; old ret addr
 14024 00009EB0 FF7500                  	push qword [rbp]
 14025                                   ; restore the old rbp
 14026 00009EB3 BB01000000              	mov rbx, 1
 14027 00009EB8 4883C303                	add rbx, 3
 14028 00009EBC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14029 00009EC0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14030 00009EC5 4C8D4DF8                	lea r9, [rbp - 8]
 14031 00009EC9 B905000000              	mov rcx, 5
 14032                                  .L_tc_recycle_frame_loop_008c:
 14033 00009ECE 4883F900                	cmp rcx, 0
 14034 00009ED2 7413                    	je .L_tc_recycle_frame_done_008c
 14035 00009ED4 4D8B11                  	mov r10, qword [r9]
 14036 00009ED7 4D8910                  	mov qword [r8], r10
 14037 00009EDA 4983E808                	sub r8, 8
 14038 00009EDE 4983E908                	sub r9, 8
 14039 00009EE2 48FFC9                  	dec rcx
 14040 00009EE5 EBE7                    	jmp .L_tc_recycle_frame_loop_008c
 14041                                  .L_tc_recycle_frame_done_008c:
 14042 00009EE7 498D6008                	lea rsp, [r8 + 8]
 14043 00009EEB 5D                      	pop rbp ; restore the old rbp
 14044 00009EEC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14045 00009EEF C9                      	leave
 14046 00009EF0 C22000                  	ret AND_KILL_FRAME(2)
 14047                                  .L_lambda_simple_end_004e:	; new closure is in rax
 14048 00009EF3 50                      	push rax
 14049 00009EF4 6A01                    	push 1	; arg count
 14050 00009EF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14051 00009EFB E82F160000              	call malloc
 14052 00009F00 50                      	push rax
 14053 00009F01 BF08000000              	mov rdi, 8 * 1	; new rib
 14054 00009F06 E824160000              	call malloc
 14055 00009F0B 50                      	push rax
 14056 00009F0C BF28000000              	mov rdi, 8 * 5	; extended env
 14057 00009F11 E819160000              	call malloc
 14058 00009F16 488B7D10                	mov rdi, ENV
 14059 00009F1A BE00000000              	mov rsi, 0
 14060 00009F1F BA01000000              	mov rdx, 1
 14061                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14062 00009F24 4883FE04                	cmp rsi, 4
 14063 00009F28 7410                    	je .L_lambda_simple_env_end_004f
 14064 00009F2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14065 00009F2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14066 00009F32 48FFC6                  	inc rsi
 14067 00009F35 48FFC2                  	inc rdx
 14068 00009F38 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14069                                  .L_lambda_simple_env_end_004f:
 14070 00009F3A 5B                      	pop rbx
 14071 00009F3B BE00000000              	mov rsi, 0
 14072                                  .L_lambda_simple_params_loop_004f:	; copy params
 14073 00009F40 4883FE01                	cmp rsi, 1
 14074 00009F44 740E                    	je .L_lambda_simple_params_end_004f
 14075 00009F46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14076 00009F4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14077 00009F4F 48FFC6                  	inc rsi
 14078 00009F52 EBEC                    	jmp .L_lambda_simple_params_loop_004f
 14079                                  .L_lambda_simple_params_end_004f:
 14080 00009F54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14081 00009F57 4889C3                  	mov rbx, rax
 14082 00009F5A 58                      	pop rax
 14083 00009F5B C60004                  	mov byte [rax], T_closure
 14084 00009F5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14085 00009F62 48C74009[6F9F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 14086 00009F6A E9DD0A0000              	jmp .L_lambda_simple_end_004f
 14087                                  .L_lambda_simple_code_004f:	; lambda-simple body
 14088 00009F6F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14089 00009F75 740B                    	je .L_lambda_simple_arity_check_ok_004f
 14090 00009F77 FF742410                	push qword [rsp + 8 * 2]
 14091 00009F7B 6A01                    	push 1
 14092 00009F7D E966150000              	jmp L_error_incorrect_arity_simple
 14093                                  .L_lambda_simple_arity_check_ok_004f:
 14094 00009F82 C8000000                	enter 0, 0
 14095                                  	; preparing a tail-call
 14096 00009F86 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14097 00009F8B E89F150000              	call malloc
 14098 00009F90 50                      	push rax
 14099 00009F91 BF08000000              	mov rdi, 8 * 1	; new rib
 14100 00009F96 E894150000              	call malloc
 14101 00009F9B 50                      	push rax
 14102 00009F9C BF30000000              	mov rdi, 8 * 6	; extended env
 14103 00009FA1 E889150000              	call malloc
 14104 00009FA6 488B7D10                	mov rdi, ENV
 14105 00009FAA BE00000000              	mov rsi, 0
 14106 00009FAF BA01000000              	mov rdx, 1
 14107                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 14108 00009FB4 4883FE05                	cmp rsi, 5
 14109 00009FB8 7410                    	je .L_lambda_simple_env_end_0050
 14110 00009FBA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14111 00009FBE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14112 00009FC2 48FFC6                  	inc rsi
 14113 00009FC5 48FFC2                  	inc rdx
 14114 00009FC8 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 14115                                  .L_lambda_simple_env_end_0050:
 14116 00009FCA 5B                      	pop rbx
 14117 00009FCB BE00000000              	mov rsi, 0
 14118                                  .L_lambda_simple_params_loop_0050:	; copy params
 14119 00009FD0 4883FE01                	cmp rsi, 1
 14120 00009FD4 740E                    	je .L_lambda_simple_params_end_0050
 14121 00009FD6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14122 00009FDB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14123 00009FDF 48FFC6                  	inc rsi
 14124 00009FE2 EBEC                    	jmp .L_lambda_simple_params_loop_0050
 14125                                  .L_lambda_simple_params_end_0050:
 14126 00009FE4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14127 00009FE7 4889C3                  	mov rbx, rax
 14128 00009FEA 58                      	pop rax
 14129 00009FEB C60004                  	mov byte [rax], T_closure
 14130 00009FEE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14131 00009FF2 48C74009[FF9F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 14132 00009FFA E980000000              	jmp .L_lambda_simple_end_0050
 14133                                  .L_lambda_simple_code_0050:	; lambda-simple body
 14134 00009FFF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14135 0000A005 740B                    	je .L_lambda_simple_arity_check_ok_0050
 14136 0000A007 FF742410                	push qword [rsp + 8 * 2]
 14137 0000A00B 6A02                    	push 2
 14138 0000A00D E9D6140000              	jmp L_error_incorrect_arity_simple
 14139                                  .L_lambda_simple_arity_check_ok_0050:
 14140 0000A012 C8000000                	enter 0, 0
 14141                                  	; preparing a tail-call
 14142 0000A016 488B4520                	mov rax, PARAM(0)	; param a
 14143 0000A01A 50                      	push rax
 14144 0000A01B 488B4528                	mov rax, PARAM(1)	; param b
 14145 0000A01F 50                      	push rax
 14146 0000A020 6A02                    	push 2	; arg count
 14147 0000A022 488B4510                	mov rax, ENV
 14148 0000A026 488B4010                	mov rax, qword [rax + 8 * 2]
 14149 0000A02A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14150 0000A02D 803804                  	cmp byte [rax], T_closure
 14151 0000A030 0F8550140000            	jne L_error_non_closure
 14152 0000A036 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14153 0000A039 FF7508                  	push qword [rbp + 8 * 1]
 14154                                   ; old ret addr
 14155 0000A03C FF7500                  	push qword [rbp]
 14156                                   ; restore the old rbp
 14157 0000A03F BB02000000              	mov rbx, 2
 14158 0000A044 4883C303                	add rbx, 3
 14159 0000A048 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14160 0000A04C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14161 0000A051 4C8D4DF8                	lea r9, [rbp - 8]
 14162 0000A055 B906000000              	mov rcx, 6
 14163                                  .L_tc_recycle_frame_loop_008e:
 14164 0000A05A 4883F900                	cmp rcx, 0
 14165 0000A05E 7413                    	je .L_tc_recycle_frame_done_008e
 14166 0000A060 4D8B11                  	mov r10, qword [r9]
 14167 0000A063 4D8910                  	mov qword [r8], r10
 14168 0000A066 4983E808                	sub r8, 8
 14169 0000A06A 4983E908                	sub r9, 8
 14170 0000A06E 48FFC9                  	dec rcx
 14171 0000A071 EBE7                    	jmp .L_tc_recycle_frame_loop_008e
 14172                                  .L_tc_recycle_frame_done_008e:
 14173 0000A073 498D6008                	lea rsp, [r8 + 8]
 14174 0000A077 5D                      	pop rbp ; restore the old rbp
 14175 0000A078 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14176 0000A07B C9                      	leave
 14177 0000A07C C22000                  	ret AND_KILL_FRAME(2)
 14178                                  .L_lambda_simple_end_0050:	; new closure is in rax
 14179 0000A07F 50                      	push rax
 14180 0000A080 6A01                    	push 1	; arg count
 14181 0000A082 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14182 0000A087 E8A3140000              	call malloc
 14183 0000A08C 50                      	push rax
 14184 0000A08D BF08000000              	mov rdi, 8 * 1	; new rib
 14185 0000A092 E898140000              	call malloc
 14186 0000A097 50                      	push rax
 14187 0000A098 BF30000000              	mov rdi, 8 * 6	; extended env
 14188 0000A09D E88D140000              	call malloc
 14189 0000A0A2 488B7D10                	mov rdi, ENV
 14190 0000A0A6 BE00000000              	mov rsi, 0
 14191 0000A0AB BA01000000              	mov rdx, 1
 14192                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 14193 0000A0B0 4883FE05                	cmp rsi, 5
 14194 0000A0B4 7410                    	je .L_lambda_simple_env_end_0051
 14195 0000A0B6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14196 0000A0BA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14197 0000A0BE 48FFC6                  	inc rsi
 14198 0000A0C1 48FFC2                  	inc rdx
 14199 0000A0C4 EBEA                    	jmp .L_lambda_simple_env_loop_0051
 14200                                  .L_lambda_simple_env_end_0051:
 14201 0000A0C6 5B                      	pop rbx
 14202 0000A0C7 BE00000000              	mov rsi, 0
 14203                                  .L_lambda_simple_params_loop_0051:	; copy params
 14204 0000A0CC 4883FE01                	cmp rsi, 1
 14205 0000A0D0 740E                    	je .L_lambda_simple_params_end_0051
 14206 0000A0D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14207 0000A0D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14208 0000A0DB 48FFC6                  	inc rsi
 14209 0000A0DE EBEC                    	jmp .L_lambda_simple_params_loop_0051
 14210                                  .L_lambda_simple_params_end_0051:
 14211 0000A0E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14212 0000A0E3 4889C3                  	mov rbx, rax
 14213 0000A0E6 58                      	pop rax
 14214 0000A0E7 C60004                  	mov byte [rax], T_closure
 14215 0000A0EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14216 0000A0EE 48C74009[FBA00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 14217 0000A0F6 E9FF080000              	jmp .L_lambda_simple_end_0051
 14218                                  .L_lambda_simple_code_0051:	; lambda-simple body
 14219 0000A0FB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14220 0000A101 740B                    	je .L_lambda_simple_arity_check_ok_0051
 14221 0000A103 FF742410                	push qword [rsp + 8 * 2]
 14222 0000A107 6A01                    	push 1
 14223 0000A109 E9DA130000              	jmp L_error_incorrect_arity_simple
 14224                                  .L_lambda_simple_arity_check_ok_0051:
 14225 0000A10E C8000000                	enter 0, 0
 14226                                  	; preparing a tail-call
 14227 0000A112 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14228 0000A117 E813140000              	call malloc
 14229 0000A11C 50                      	push rax
 14230 0000A11D BF08000000              	mov rdi, 8 * 1	; new rib
 14231 0000A122 E808140000              	call malloc
 14232 0000A127 50                      	push rax
 14233 0000A128 BF38000000              	mov rdi, 8 * 7	; extended env
 14234 0000A12D E8FD130000              	call malloc
 14235 0000A132 488B7D10                	mov rdi, ENV
 14236 0000A136 BE00000000              	mov rsi, 0
 14237 0000A13B BA01000000              	mov rdx, 1
 14238                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 14239 0000A140 4883FE06                	cmp rsi, 6
 14240 0000A144 7410                    	je .L_lambda_simple_env_end_0052
 14241 0000A146 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14242 0000A14A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14243 0000A14E 48FFC6                  	inc rsi
 14244 0000A151 48FFC2                  	inc rdx
 14245 0000A154 EBEA                    	jmp .L_lambda_simple_env_loop_0052
 14246                                  .L_lambda_simple_env_end_0052:
 14247 0000A156 5B                      	pop rbx
 14248 0000A157 BE00000000              	mov rsi, 0
 14249                                  .L_lambda_simple_params_loop_0052:	; copy params
 14250 0000A15C 4883FE01                	cmp rsi, 1
 14251 0000A160 740E                    	je .L_lambda_simple_params_end_0052
 14252 0000A162 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14253 0000A167 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14254 0000A16B 48FFC6                  	inc rsi
 14255 0000A16E EBEC                    	jmp .L_lambda_simple_params_loop_0052
 14256                                  .L_lambda_simple_params_end_0052:
 14257 0000A170 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14258 0000A173 4889C3                  	mov rbx, rax
 14259 0000A176 58                      	pop rax
 14260 0000A177 C60004                  	mov byte [rax], T_closure
 14261 0000A17A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14262 0000A17E 48C74009[8BA10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 14263 0000A186 E9A2000000              	jmp .L_lambda_simple_end_0052
 14264                                  .L_lambda_simple_code_0052:	; lambda-simple body
 14265 0000A18B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14266 0000A191 740B                    	je .L_lambda_simple_arity_check_ok_0052
 14267 0000A193 FF742410                	push qword [rsp + 8 * 2]
 14268 0000A197 6A02                    	push 2
 14269 0000A199 E94A130000              	jmp L_error_incorrect_arity_simple
 14270                                  .L_lambda_simple_arity_check_ok_0052:
 14271 0000A19E C8000000                	enter 0, 0
 14272                                  	; preparing a tail-call
 14273                                  	; preparing a non-tail-call
 14274 0000A1A2 488B4528                	mov rax, PARAM(1)	; param b
 14275 0000A1A6 50                      	push rax
 14276 0000A1A7 488B4520                	mov rax, PARAM(0)	; param a
 14277 0000A1AB 50                      	push rax
 14278 0000A1AC 6A02                    	push 2	; arg count
 14279 0000A1AE 488B4510                	mov rax, ENV
 14280 0000A1B2 488B00                  	mov rax, qword [rax + 8 * 0]
 14281 0000A1B5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 14282 0000A1B8 803804                  	cmp byte [rax], T_closure
 14283 0000A1BB 0F85C5120000            	jne L_error_non_closure
 14284 0000A1C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14285 0000A1C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14286 0000A1C7 50                      	push rax
 14287 0000A1C8 6A01                    	push 1	; arg count
 14288 0000A1CA 488B0425[77100000]      	mov rax, qword [free_var_88]	; free var not
 14289 0000A1D2 803805                  	cmp byte [rax], T_undefined
 14290 0000A1D5 0F8427120000            	je L_error_fvar_undefined
 14291 0000A1DB 803804                  	cmp byte [rax], T_closure
 14292 0000A1DE 0F85A2120000            	jne L_error_non_closure
 14293 0000A1E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14294 0000A1E7 FF7508                  	push qword [rbp + 8 * 1]
 14295                                   ; old ret addr
 14296 0000A1EA FF7500                  	push qword [rbp]
 14297                                   ; restore the old rbp
 14298 0000A1ED BB01000000              	mov rbx, 1
 14299 0000A1F2 4883C303                	add rbx, 3
 14300 0000A1F6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14301 0000A1FA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14302 0000A1FF 4C8D4DF8                	lea r9, [rbp - 8]
 14303 0000A203 B905000000              	mov rcx, 5
 14304                                  .L_tc_recycle_frame_loop_0090:
 14305 0000A208 4883F900                	cmp rcx, 0
 14306 0000A20C 7413                    	je .L_tc_recycle_frame_done_0090
 14307 0000A20E 4D8B11                  	mov r10, qword [r9]
 14308 0000A211 4D8910                  	mov qword [r8], r10
 14309 0000A214 4983E808                	sub r8, 8
 14310 0000A218 4983E908                	sub r9, 8
 14311 0000A21C 48FFC9                  	dec rcx
 14312 0000A21F EBE7                    	jmp .L_tc_recycle_frame_loop_0090
 14313                                  .L_tc_recycle_frame_done_0090:
 14314 0000A221 498D6008                	lea rsp, [r8 + 8]
 14315 0000A225 5D                      	pop rbp ; restore the old rbp
 14316 0000A226 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14317 0000A229 C9                      	leave
 14318 0000A22A C22000                  	ret AND_KILL_FRAME(2)
 14319                                  .L_lambda_simple_end_0052:	; new closure is in rax
 14320 0000A22D 50                      	push rax
 14321 0000A22E 6A01                    	push 1	; arg count
 14322 0000A230 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14323 0000A235 E8F5120000              	call malloc
 14324 0000A23A 50                      	push rax
 14325 0000A23B BF08000000              	mov rdi, 8 * 1	; new rib
 14326 0000A240 E8EA120000              	call malloc
 14327 0000A245 50                      	push rax
 14328 0000A246 BF38000000              	mov rdi, 8 * 7	; extended env
 14329 0000A24B E8DF120000              	call malloc
 14330 0000A250 488B7D10                	mov rdi, ENV
 14331 0000A254 BE00000000              	mov rsi, 0
 14332 0000A259 BA01000000              	mov rdx, 1
 14333                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 14334 0000A25E 4883FE06                	cmp rsi, 6
 14335 0000A262 7410                    	je .L_lambda_simple_env_end_0053
 14336 0000A264 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14337 0000A268 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14338 0000A26C 48FFC6                  	inc rsi
 14339 0000A26F 48FFC2                  	inc rdx
 14340 0000A272 EBEA                    	jmp .L_lambda_simple_env_loop_0053
 14341                                  .L_lambda_simple_env_end_0053:
 14342 0000A274 5B                      	pop rbx
 14343 0000A275 BE00000000              	mov rsi, 0
 14344                                  .L_lambda_simple_params_loop_0053:	; copy params
 14345 0000A27A 4883FE01                	cmp rsi, 1
 14346 0000A27E 740E                    	je .L_lambda_simple_params_end_0053
 14347 0000A280 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14348 0000A285 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14349 0000A289 48FFC6                  	inc rsi
 14350 0000A28C EBEC                    	jmp .L_lambda_simple_params_loop_0053
 14351                                  .L_lambda_simple_params_end_0053:
 14352 0000A28E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14353 0000A291 4889C3                  	mov rbx, rax
 14354 0000A294 58                      	pop rax
 14355 0000A295 C60004                  	mov byte [rax], T_closure
 14356 0000A298 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14357 0000A29C 48C74009[A9A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 14358 0000A2A4 E9FF060000              	jmp .L_lambda_simple_end_0053
 14359                                  .L_lambda_simple_code_0053:	; lambda-simple body
 14360 0000A2A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14361 0000A2AF 740B                    	je .L_lambda_simple_arity_check_ok_0053
 14362 0000A2B1 FF742410                	push qword [rsp + 8 * 2]
 14363 0000A2B5 6A01                    	push 1
 14364 0000A2B7 E92C120000              	jmp L_error_incorrect_arity_simple
 14365                                  .L_lambda_simple_arity_check_ok_0053:
 14366 0000A2BC C8000000                	enter 0, 0
 14367                                  	; preparing a tail-call
 14368 0000A2C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14369 0000A2C5 E865120000              	call malloc
 14370 0000A2CA 50                      	push rax
 14371 0000A2CB BF08000000              	mov rdi, 8 * 1	; new rib
 14372 0000A2D0 E85A120000              	call malloc
 14373 0000A2D5 50                      	push rax
 14374 0000A2D6 BF40000000              	mov rdi, 8 * 8	; extended env
 14375 0000A2DB E84F120000              	call malloc
 14376 0000A2E0 488B7D10                	mov rdi, ENV
 14377 0000A2E4 BE00000000              	mov rsi, 0
 14378 0000A2E9 BA01000000              	mov rdx, 1
 14379                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 14380 0000A2EE 4883FE07                	cmp rsi, 7
 14381 0000A2F2 7410                    	je .L_lambda_simple_env_end_0054
 14382 0000A2F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14383 0000A2F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14384 0000A2FC 48FFC6                  	inc rsi
 14385 0000A2FF 48FFC2                  	inc rdx
 14386 0000A302 EBEA                    	jmp .L_lambda_simple_env_loop_0054
 14387                                  .L_lambda_simple_env_end_0054:
 14388 0000A304 5B                      	pop rbx
 14389 0000A305 BE00000000              	mov rsi, 0
 14390                                  .L_lambda_simple_params_loop_0054:	; copy params
 14391 0000A30A 4883FE01                	cmp rsi, 1
 14392 0000A30E 740E                    	je .L_lambda_simple_params_end_0054
 14393 0000A310 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14394 0000A315 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14395 0000A319 48FFC6                  	inc rsi
 14396 0000A31C EBEC                    	jmp .L_lambda_simple_params_loop_0054
 14397                                  .L_lambda_simple_params_end_0054:
 14398 0000A31E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14399 0000A321 4889C3                  	mov rbx, rax
 14400 0000A324 58                      	pop rax
 14401 0000A325 C60004                  	mov byte [rax], T_closure
 14402 0000A328 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14403 0000A32C 48C74009[39A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 14404 0000A334 E988040000              	jmp .L_lambda_simple_end_0054
 14405                                  .L_lambda_simple_code_0054:	; lambda-simple body
 14406 0000A339 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14407 0000A33F 740B                    	je .L_lambda_simple_arity_check_ok_0054
 14408 0000A341 FF742410                	push qword [rsp + 8 * 2]
 14409 0000A345 6A01                    	push 1
 14410 0000A347 E99C110000              	jmp L_error_incorrect_arity_simple
 14411                                  .L_lambda_simple_arity_check_ok_0054:
 14412 0000A34C C8000000                	enter 0, 0
 14413                                  	; preparing a tail-call
 14414 0000A350 48B8-                   	mov rax, L_constants + 2016
 14414 0000A352 [E007000000000000] 
 14415 0000A35A 50                      	push rax
 14416 0000A35B 6A01                    	push 1	; arg count
 14417 0000A35D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14418 0000A362 E8C8110000              	call malloc
 14419 0000A367 50                      	push rax
 14420 0000A368 BF08000000              	mov rdi, 8 * 1	; new rib
 14421 0000A36D E8BD110000              	call malloc
 14422 0000A372 50                      	push rax
 14423 0000A373 BF48000000              	mov rdi, 8 * 9	; extended env
 14424 0000A378 E8B2110000              	call malloc
 14425 0000A37D 488B7D10                	mov rdi, ENV
 14426 0000A381 BE00000000              	mov rsi, 0
 14427 0000A386 BA01000000              	mov rdx, 1
 14428                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 14429 0000A38B 4883FE08                	cmp rsi, 8
 14430 0000A38F 7410                    	je .L_lambda_simple_env_end_0055
 14431 0000A391 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14432 0000A395 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14433 0000A399 48FFC6                  	inc rsi
 14434 0000A39C 48FFC2                  	inc rdx
 14435 0000A39F EBEA                    	jmp .L_lambda_simple_env_loop_0055
 14436                                  .L_lambda_simple_env_end_0055:
 14437 0000A3A1 5B                      	pop rbx
 14438 0000A3A2 BE00000000              	mov rsi, 0
 14439                                  .L_lambda_simple_params_loop_0055:	; copy params
 14440 0000A3A7 4883FE01                	cmp rsi, 1
 14441 0000A3AB 740E                    	je .L_lambda_simple_params_end_0055
 14442 0000A3AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14443 0000A3B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14444 0000A3B6 48FFC6                  	inc rsi
 14445 0000A3B9 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 14446                                  .L_lambda_simple_params_end_0055:
 14447 0000A3BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14448 0000A3BE 4889C3                  	mov rbx, rax
 14449 0000A3C1 58                      	pop rax
 14450 0000A3C2 C60004                  	mov byte [rax], T_closure
 14451 0000A3C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14452 0000A3C9 48C74009[D6A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 14453 0000A3D1 E999030000              	jmp .L_lambda_simple_end_0055
 14454                                  .L_lambda_simple_code_0055:	; lambda-simple body
 14455 0000A3D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14456 0000A3DC 740B                    	je .L_lambda_simple_arity_check_ok_0055
 14457 0000A3DE FF742410                	push qword [rsp + 8 * 2]
 14458 0000A3E2 6A01                    	push 1
 14459 0000A3E4 E9FF100000              	jmp L_error_incorrect_arity_simple
 14460                                  .L_lambda_simple_arity_check_ok_0055:
 14461 0000A3E9 C8000000                	enter 0, 0
 14462 0000A3ED BF08000000              	mov rdi, 8*1
 14463 0000A3F2 E838110000              	call malloc
 14464 0000A3F7 488B5D20                	mov rbx, PARAM(0)
 14465 0000A3FB 488918                  	mov qword [rax], rbx
 14466 0000A3FE 48894520                	mov PARAM(0), rax
 14467 0000A402 48B8-                   	mov rax, sob_void
 14467 0000A404 [0000000000000000] 
 14468                                  
 14469 0000A40C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14470 0000A411 E819110000              	call malloc
 14471 0000A416 50                      	push rax
 14472 0000A417 BF08000000              	mov rdi, 8 * 1	; new rib
 14473 0000A41C E80E110000              	call malloc
 14474 0000A421 50                      	push rax
 14475 0000A422 BF50000000              	mov rdi, 8 * 10	; extended env
 14476 0000A427 E803110000              	call malloc
 14477 0000A42C 488B7D10                	mov rdi, ENV
 14478 0000A430 BE00000000              	mov rsi, 0
 14479 0000A435 BA01000000              	mov rdx, 1
 14480                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 14481 0000A43A 4883FE09                	cmp rsi, 9
 14482 0000A43E 7410                    	je .L_lambda_simple_env_end_0056
 14483 0000A440 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14484 0000A444 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14485 0000A448 48FFC6                  	inc rsi
 14486 0000A44B 48FFC2                  	inc rdx
 14487 0000A44E EBEA                    	jmp .L_lambda_simple_env_loop_0056
 14488                                  .L_lambda_simple_env_end_0056:
 14489 0000A450 5B                      	pop rbx
 14490 0000A451 BE00000000              	mov rsi, 0
 14491                                  .L_lambda_simple_params_loop_0056:	; copy params
 14492 0000A456 4883FE01                	cmp rsi, 1
 14493 0000A45A 740E                    	je .L_lambda_simple_params_end_0056
 14494 0000A45C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14495 0000A461 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14496 0000A465 48FFC6                  	inc rsi
 14497 0000A468 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 14498                                  .L_lambda_simple_params_end_0056:
 14499 0000A46A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14500 0000A46D 4889C3                  	mov rbx, rax
 14501 0000A470 58                      	pop rax
 14502 0000A471 C60004                  	mov byte [rax], T_closure
 14503 0000A474 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14504 0000A478 48C74009[85A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 14505 0000A480 E964010000              	jmp .L_lambda_simple_end_0056
 14506                                  .L_lambda_simple_code_0056:	; lambda-simple body
 14507 0000A485 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14508 0000A48B 740B                    	je .L_lambda_simple_arity_check_ok_0056
 14509 0000A48D FF742410                	push qword [rsp + 8 * 2]
 14510 0000A491 6A02                    	push 2
 14511 0000A493 E950100000              	jmp L_error_incorrect_arity_simple
 14512                                  .L_lambda_simple_arity_check_ok_0056:
 14513 0000A498 C8000000                	enter 0, 0
 14514                                  	; preparing a non-tail-call
 14515 0000A49C 488B4528                	mov rax, PARAM(1)	; param s
 14516 0000A4A0 50                      	push rax
 14517 0000A4A1 6A01                    	push 1	; arg count
 14518 0000A4A3 488B0425[88100000]      	mov rax, qword [free_var_89]	; free var null?
 14519 0000A4AB 803805                  	cmp byte [rax], T_undefined
 14520 0000A4AE 0F844E0F0000            	je L_error_fvar_undefined
 14521 0000A4B4 803804                  	cmp byte [rax], T_closure
 14522 0000A4B7 0F85C90F0000            	jne L_error_non_closure
 14523 0000A4BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 14524 0000A4C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14525 0000A4C3 483D[02000000]          	cmp rax, sob_boolean_false
 14526 0000A4C9 0F8416010000            	je .L_or_end_0006
 14527                                  
 14528                                  	; preparing a non-tail-call
 14529                                  	; preparing a non-tail-call
 14530 0000A4CF 488B4528                	mov rax, PARAM(1)	; param s
 14531 0000A4D3 50                      	push rax
 14532 0000A4D4 6A01                    	push 1	; arg count
 14533 0000A4D6 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
 14534 0000A4DE 803805                  	cmp byte [rax], T_undefined
 14535 0000A4E1 0F841B0F0000            	je L_error_fvar_undefined
 14536 0000A4E7 803804                  	cmp byte [rax], T_closure
 14537 0000A4EA 0F85960F0000            	jne L_error_non_closure
 14538 0000A4F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14539 0000A4F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14540 0000A4F6 50                      	push rax
 14541 0000A4F7 488B4520                	mov rax, PARAM(0)	; param a
 14542 0000A4FB 50                      	push rax
 14543 0000A4FC 6A02                    	push 2	; arg count
 14544 0000A4FE 488B4510                	mov rax, ENV
 14545 0000A502 488B4008                	mov rax, qword [rax + 8 * 1]
 14546 0000A506 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 14547 0000A509 803804                  	cmp byte [rax], T_closure
 14548 0000A50C 0F85740F0000            	jne L_error_non_closure
 14549 0000A512 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14550 0000A515 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14551 0000A518 483D[02000000]          	cmp rax, sob_boolean_false
 14552 0000A51E 0F84AF000000            	je .L_if_else_0050
 14553                                  	; preparing a tail-call
 14554                                  	; preparing a non-tail-call
 14555 0000A524 488B4528                	mov rax, PARAM(1)	; param s
 14556 0000A528 50                      	push rax
 14557 0000A529 6A01                    	push 1	; arg count
 14558 0000A52B 488B0425[DF0E0000]      	mov rax, qword [free_var_64]	; free var cdr
 14559 0000A533 803805                  	cmp byte [rax], T_undefined
 14560 0000A536 0F84C60E0000            	je L_error_fvar_undefined
 14561 0000A53C 803804                  	cmp byte [rax], T_closure
 14562 0000A53F 0F85410F0000            	jne L_error_non_closure
 14563 0000A545 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14564 0000A548 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14565 0000A54B 50                      	push rax
 14566                                  	; preparing a non-tail-call
 14567 0000A54C 488B4528                	mov rax, PARAM(1)	; param s
 14568 0000A550 50                      	push rax
 14569 0000A551 6A01                    	push 1	; arg count
 14570 0000A553 488B0425[E00D0000]      	mov rax, qword [free_var_49]	; free var car
 14571 0000A55B 803805                  	cmp byte [rax], T_undefined
 14572 0000A55E 0F849E0E0000            	je L_error_fvar_undefined
 14573 0000A564 803804                  	cmp byte [rax], T_closure
 14574 0000A567 0F85190F0000            	jne L_error_non_closure
 14575 0000A56D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14576 0000A570 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14577 0000A573 50                      	push rax
 14578 0000A574 6A02                    	push 2	; arg count
 14579 0000A576 488B4510                	mov rax, ENV
 14580 0000A57A 488B00                  	mov rax, qword [rax + 8 * 0]
 14581 0000A57D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 14582 0000A580 488B00                  	mov rax, qword [rax]
 14583 0000A583 803804                  	cmp byte [rax], T_closure
 14584 0000A586 0F85FA0E0000            	jne L_error_non_closure
 14585 0000A58C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14586 0000A58F FF7508                  	push qword [rbp + 8 * 1]
 14587                                   ; old ret addr
 14588 0000A592 FF7500                  	push qword [rbp]
 14589                                   ; restore the old rbp
 14590 0000A595 BB02000000              	mov rbx, 2
 14591 0000A59A 4883C303                	add rbx, 3
 14592 0000A59E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14593 0000A5A2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14594 0000A5A7 4C8D4DF8                	lea r9, [rbp - 8]
 14595 0000A5AB B906000000              	mov rcx, 6
 14596                                  .L_tc_recycle_frame_loop_0093:
 14597 0000A5B0 4883F900                	cmp rcx, 0
 14598 0000A5B4 7413                    	je .L_tc_recycle_frame_done_0093
 14599 0000A5B6 4D8B11                  	mov r10, qword [r9]
 14600 0000A5B9 4D8910                  	mov qword [r8], r10
 14601 0000A5BC 4983E808                	sub r8, 8
 14602 0000A5C0 4983E908                	sub r9, 8
 14603 0000A5C4 48FFC9                  	dec rcx
 14604 0000A5C7 EBE7                    	jmp .L_tc_recycle_frame_loop_0093
 14605                                  .L_tc_recycle_frame_done_0093:
 14606 0000A5C9 498D6008                	lea rsp, [r8 + 8]
 14607 0000A5CD 5D                      	pop rbp ; restore the old rbp
 14608 0000A5CE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14609 0000A5D1 EB0A                    	jmp .L_if_end_0050
 14610                                  .L_if_else_0050:
 14611 0000A5D3 48B8-                   	mov rax, L_constants + 2
 14611 0000A5D5 [0200000000000000] 
 14612                                  .L_if_end_0050:
 14613 0000A5DD 483D[02000000]          	cmp rax, sob_boolean_false
 14614 0000A5E3 7400                    	je .L_or_end_0006
 14615                                  .L_or_end_0006:
 14616 0000A5E5 C9                      	leave
 14617 0000A5E6 C22000                  	ret AND_KILL_FRAME(2)
 14618                                  .L_lambda_simple_end_0056:	; new closure is in rax
 14619 0000A5E9 50                      	push rax
 14620 0000A5EA 488B4520                	mov rax, PARAM(0)	; param run
 14621 0000A5EE 8F00                    	pop qword [rax]
 14622 0000A5F0 48B8-                   	mov rax, sob_void
 14622 0000A5F2 [0000000000000000] 
 14623                                  
 14624 0000A5FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14625 0000A5FF E82B0F0000              	call malloc
 14626 0000A604 50                      	push rax
 14627 0000A605 BF10000000              	mov rdi, 8 * 2	; new rib
 14628 0000A60A E8200F0000              	call malloc
 14629 0000A60F 50                      	push rax
 14630 0000A610 BF50000000              	mov rdi, 8 * 10	; extended env
 14631 0000A615 E8150F0000              	call malloc
 14632 0000A61A 488B7D10                	mov rdi, ENV
 14633 0000A61E BE00000000              	mov rsi, 0
 14634 0000A623 BA01000000              	mov rdx, 1
 14635                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 14636 0000A628 4883FE09                	cmp rsi, 9
 14637 0000A62C 7410                    	je .L_lambda_opt_env_end_000e
 14638 0000A62E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14639 0000A632 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14640 0000A636 48FFC6                  	inc rsi
 14641 0000A639 48FFC2                  	inc rdx
 14642 0000A63C EBEA                    	jmp .L_lambda_opt_env_loop_000e
 14643                                  .L_lambda_opt_env_end_000e:
 14644 0000A63E 5B                      	pop rbx
 14645 0000A63F BE00000000              	mov rsi, 0
 14646                                  .L_lambda_opt_params_loop_000e:	; copy params
 14647 0000A644 4883FE01                	cmp rsi, 1
 14648 0000A648 740E                    	je .L_lambda_opt_params_end_000e
 14649 0000A64A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14650 0000A64F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14651 0000A653 48FFC6                  	inc rsi
 14652 0000A656 EBEC                    	jmp .L_lambda_opt_params_loop_000e
 14653                                  .L_lambda_opt_params_end_000e:
 14654 0000A658 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14655 0000A65B 4889C3                  	mov rbx, rax
 14656 0000A65E 58                      	pop rax
 14657 0000A65F C60004                  	mov byte [rax], T_closure
 14658 0000A662 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14659 0000A666 48C74009[73A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 14660 0000A66E E9F8000000              	jmp .L_lambda_opt_end_000e
 14661                                  .L_lambda_opt_code_000e:	; lambda-opt body
 14662 0000A673 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14663 0000A679 745E                    	je .L_lambda_opt_arity_check_exact_000e
 14664 0000A67B 7F0B                    	jg .L_lambda_opt_arity_check_more_000e
 14665 0000A67D FF742410                	push qword [rsp + 8 * 2]
 14666 0000A681 6A01                    	push 1
 14667 0000A683 E9600E0000              	jmp L_error_incorrect_arity_simple
 14668                                  .L_lambda_opt_arity_check_more_000e:
 14669 0000A688 53                      push rbx
 14670 0000A689 51                      push rcx
 14671 0000A68A 488B4D10                mov rcx, [rbp + 8*2]
 14672 0000A68E BB01000000              mov rbx , 1
 14673 0000A693 4829D9                  sub rcx, rbx
 14674 0000A696 48FFC3                  inc rbx
 14675 0000A699 48895D10                mov [rbp + 8*2], rbx
 14676 0000A69D 4889CF                  	 mov rdi, rcx 
 14677 0000A6A0 48C1E703                	 shl rdi, 3 
 14678 0000A6A4 E8860E0000              	call malloc
 14679 0000A6A9 50                      	push rax
 14680 0000A6AA 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
 14681 0000A6AF 4831FF                  xor rdi, rdi
 14682                                  .L_lambda_opt_stack_shrink_loop_000e:
 14683 0000A6B2 4839CF                  	cmp rdi, rcx
 14684 0000A6B5 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_000e
 14685 0000A6B7 488904FC                mov [rsp + rdi*8], rax
 14686 0000A6BB 48FFC7                  	inc rdi
 14687 0000A6BE 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
 14688 0000A6C6 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
 14689 0000A6CB 498B04D9                mov rax,[r9 + rbx*8] 
 14690 0000A6CF EBE1                    jmp .L_lambda_opt_stack_shrink_loop_000e
 14691                                  .L_lambda_opt_stack_shrink_loop_exit_000e:
 14692 0000A6D1 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
 14693 0000A6D5 5B                      pop rbx
 14694 0000A6D6 53                      push rbx
 14695 0000A6D7 EB16                    jmp .L_lambda_opt_stack_adjusted_000e
 14696                                  .L_lambda_opt_arity_check_exact_000e:
 14697 0000A6D9 48B8-                   	mov rax, L_constants + 1
 14697 0000A6DB [0100000000000000] 
 14698 0000A6E3 53                      push rbx
 14699 0000A6E4 488B5C2410              mov rbx , [rsp + 8*2]
 14700 0000A6E9 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
 14701 0000A6EE 5B                      pop rbx
 14702                                  .L_lambda_opt_stack_adjusted_000e:	; new closure is in rax
 14703 0000A6EF C8000000                	enter 0, 0
 14704                                  	; preparing a tail-call
 14705 0000A6F3 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 14706 0000A6FB 803805                  	cmp byte [rax], T_undefined
 14707 0000A6FE 0F84FE0C0000            	je L_error_fvar_undefined
 14708 0000A704 50                      	push rax
 14709 0000A705 488B4520                	mov rax, PARAM(0)	; param a
 14710 0000A709 50                      	push rax
 14711 0000A70A 6A02                    	push 2	; arg count
 14712 0000A70C 488B4510                	mov rax, ENV
 14713 0000A710 488B00                  	mov rax, qword [rax + 8 * 0]
 14714 0000A713 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 14715 0000A716 488B00                  	mov rax, qword [rax]
 14716 0000A719 803804                  	cmp byte [rax], T_closure
 14717 0000A71C 0F85640D0000            	jne L_error_non_closure
 14718 0000A722 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14719 0000A725 FF7508                  	push qword [rbp + 8 * 1]
 14720                                   ; old ret addr
 14721 0000A728 FF7500                  	push qword [rbp]
 14722                                   ; restore the old rbp
 14723 0000A72B BB02000000              	mov rbx, 2
 14724 0000A730 4883C303                	add rbx, 3
 14725 0000A734 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14726 0000A738 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14727 0000A73D 4C8D4DF8                	lea r9, [rbp - 8]
 14728 0000A741 B906000000              	mov rcx, 6
 14729                                  .L_tc_recycle_frame_loop_0094:
 14730 0000A746 4883F900                	cmp rcx, 0
 14731 0000A74A 7413                    	je .L_tc_recycle_frame_done_0094
 14732 0000A74C 4D8B11                  	mov r10, qword [r9]
 14733 0000A74F 4D8910                  	mov qword [r8], r10
 14734 0000A752 4983E808                	sub r8, 8
 14735 0000A756 4983E908                	sub r9, 8
 14736 0000A75A 48FFC9                  	dec rcx
 14737 0000A75D EBE7                    	jmp .L_tc_recycle_frame_loop_0094
 14738                                  .L_tc_recycle_frame_done_0094:
 14739 0000A75F 498D6008                	lea rsp, [r8 + 8]
 14740 0000A763 5D                      	pop rbp ; restore the old rbp
 14741 0000A764 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14742 0000A767 C9                      	leave
 14743 0000A768 C21800                  	ret AND_KILL_FRAME(1)
 14744                                  .L_lambda_opt_end_000e:	; new closure is in rax
 14745 0000A76B C9                      	leave
 14746 0000A76C C21800                  	ret AND_KILL_FRAME(1)
 14747                                  .L_lambda_simple_end_0055:	; new closure is in rax
 14748 0000A76F 803804                  	cmp byte [rax], T_closure
 14749 0000A772 0F850E0D0000            	jne L_error_non_closure
 14750 0000A778 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14751 0000A77B FF7508                  	push qword [rbp + 8 * 1]
 14752                                   ; old ret addr
 14753 0000A77E FF7500                  	push qword [rbp]
 14754                                   ; restore the old rbp
 14755 0000A781 BB01000000              	mov rbx, 1
 14756 0000A786 4883C303                	add rbx, 3
 14757 0000A78A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14758 0000A78E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14759 0000A793 4C8D4DF8                	lea r9, [rbp - 8]
 14760 0000A797 B905000000              	mov rcx, 5
 14761                                  .L_tc_recycle_frame_loop_0092:
 14762 0000A79C 4883F900                	cmp rcx, 0
 14763 0000A7A0 7413                    	je .L_tc_recycle_frame_done_0092
 14764 0000A7A2 4D8B11                  	mov r10, qword [r9]
 14765 0000A7A5 4D8910                  	mov qword [r8], r10
 14766 0000A7A8 4983E808                	sub r8, 8
 14767 0000A7AC 4983E908                	sub r9, 8
 14768 0000A7B0 48FFC9                  	dec rcx
 14769 0000A7B3 EBE7                    	jmp .L_tc_recycle_frame_loop_0092
 14770                                  .L_tc_recycle_frame_done_0092:
 14771 0000A7B5 498D6008                	lea rsp, [r8 + 8]
 14772 0000A7B9 5D                      	pop rbp ; restore the old rbp
 14773 0000A7BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14774 0000A7BD C9                      	leave
 14775 0000A7BE C21800                  	ret AND_KILL_FRAME(1)
 14776                                  .L_lambda_simple_end_0054:	; new closure is in rax
 14777 0000A7C1 50                      	push rax
 14778 0000A7C2 6A01                    	push 1	; arg count
 14779 0000A7C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14780 0000A7C9 E8610D0000              	call malloc
 14781 0000A7CE 50                      	push rax
 14782 0000A7CF BF08000000              	mov rdi, 8 * 1	; new rib
 14783 0000A7D4 E8560D0000              	call malloc
 14784 0000A7D9 50                      	push rax
 14785 0000A7DA BF40000000              	mov rdi, 8 * 8	; extended env
 14786 0000A7DF E84B0D0000              	call malloc
 14787 0000A7E4 488B7D10                	mov rdi, ENV
 14788 0000A7E8 BE00000000              	mov rsi, 0
 14789 0000A7ED BA01000000              	mov rdx, 1
 14790                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 14791 0000A7F2 4883FE07                	cmp rsi, 7
 14792 0000A7F6 7410                    	je .L_lambda_simple_env_end_0057
 14793 0000A7F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14794 0000A7FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14795 0000A800 48FFC6                  	inc rsi
 14796 0000A803 48FFC2                  	inc rdx
 14797 0000A806 EBEA                    	jmp .L_lambda_simple_env_loop_0057
 14798                                  .L_lambda_simple_env_end_0057:
 14799 0000A808 5B                      	pop rbx
 14800 0000A809 BE00000000              	mov rsi, 0
 14801                                  .L_lambda_simple_params_loop_0057:	; copy params
 14802 0000A80E 4883FE01                	cmp rsi, 1
 14803 0000A812 740E                    	je .L_lambda_simple_params_end_0057
 14804 0000A814 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14805 0000A819 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14806 0000A81D 48FFC6                  	inc rsi
 14807 0000A820 EBEC                    	jmp .L_lambda_simple_params_loop_0057
 14808                                  .L_lambda_simple_params_end_0057:
 14809 0000A822 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14810 0000A825 4889C3                  	mov rbx, rax
 14811 0000A828 58                      	pop rax
 14812 0000A829 C60004                  	mov byte [rax], T_closure
 14813 0000A82C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14814 0000A830 48C74009[3DA80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 14815 0000A838 E919010000              	jmp .L_lambda_simple_end_0057
 14816                                  .L_lambda_simple_code_0057:	; lambda-simple body
 14817 0000A83D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14818 0000A843 740B                    	je .L_lambda_simple_arity_check_ok_0057
 14819 0000A845 FF742410                	push qword [rsp + 8 * 2]
 14820 0000A849 6A01                    	push 1
 14821 0000A84B E9980C0000              	jmp L_error_incorrect_arity_simple
 14822                                  .L_lambda_simple_arity_check_ok_0057:
 14823 0000A850 C8000000                	enter 0, 0
 14824                                  	; preparing a non-tail-call
 14825 0000A854 488B4510                	mov rax, ENV
 14826 0000A858 488B4020                	mov rax, qword [rax + 8 * 4]
 14827 0000A85C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14828 0000A85F 50                      	push rax
 14829 0000A860 6A01                    	push 1	; arg count
 14830 0000A862 488B4520                	mov rax, PARAM(0)	; param make-run
 14831 0000A866 803804                  	cmp byte [rax], T_closure
 14832 0000A869 0F85170C0000            	jne L_error_non_closure
 14833 0000A86F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14834 0000A872 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14835 0000A875 48890425[E30A0000]      	mov qword [free_var_4], rax
 14836 0000A87D 48B8-                   	mov rax, sob_void
 14836 0000A87F [0000000000000000] 
 14837                                  
 14838                                  	; preparing a non-tail-call
 14839 0000A887 488B4510                	mov rax, ENV
 14840 0000A88B 488B00                  	mov rax, qword [rax + 8 * 0]
 14841 0000A88E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 14842 0000A891 50                      	push rax
 14843 0000A892 6A01                    	push 1	; arg count
 14844 0000A894 488B4520                	mov rax, PARAM(0)	; param make-run
 14845 0000A898 803804                  	cmp byte [rax], T_closure
 14846 0000A89B 0F85E50B0000            	jne L_error_non_closure
 14847 0000A8A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14848 0000A8A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14849 0000A8A7 48890425[F40A0000]      	mov qword [free_var_5], rax
 14850 0000A8AF 48B8-                   	mov rax, sob_void
 14850 0000A8B1 [0000000000000000] 
 14851                                  
 14852                                  	; preparing a non-tail-call
 14853 0000A8B9 488B4510                	mov rax, ENV
 14854 0000A8BD 488B4008                	mov rax, qword [rax + 8 * 1]
 14855 0000A8C1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 14856 0000A8C4 50                      	push rax
 14857 0000A8C5 6A01                    	push 1	; arg count
 14858 0000A8C7 488B4520                	mov rax, PARAM(0)	; param make-run
 14859 0000A8CB 803804                  	cmp byte [rax], T_closure
 14860 0000A8CE 0F85B20B0000            	jne L_error_non_closure
 14861 0000A8D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14862 0000A8D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14863 0000A8DA 48890425[160B0000]      	mov qword [free_var_7], rax
 14864 0000A8E2 48B8-                   	mov rax, sob_void
 14864 0000A8E4 [0000000000000000] 
 14865                                  
 14866                                  	; preparing a non-tail-call
 14867 0000A8EC 488B4510                	mov rax, ENV
 14868 0000A8F0 488B4010                	mov rax, qword [rax + 8 * 2]
 14869 0000A8F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 14870 0000A8F7 50                      	push rax
 14871 0000A8F8 6A01                    	push 1	; arg count
 14872 0000A8FA 488B4520                	mov rax, PARAM(0)	; param make-run
 14873 0000A8FE 803804                  	cmp byte [rax], T_closure
 14874 0000A901 0F857F0B0000            	jne L_error_non_closure
 14875 0000A907 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14876 0000A90A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14877 0000A90D 48890425[270B0000]      	mov qword [free_var_8], rax
 14878 0000A915 48B8-                   	mov rax, sob_void
 14878 0000A917 [0000000000000000] 
 14879                                  
 14880                                  	; preparing a non-tail-call
 14881 0000A91F 488B4510                	mov rax, ENV
 14882 0000A923 488B4018                	mov rax, qword [rax + 8 * 3]
 14883 0000A927 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 14884 0000A92A 50                      	push rax
 14885 0000A92B 6A01                    	push 1	; arg count
 14886 0000A92D 488B4520                	mov rax, PARAM(0)	; param make-run
 14887 0000A931 803804                  	cmp byte [rax], T_closure
 14888 0000A934 0F854C0B0000            	jne L_error_non_closure
 14889 0000A93A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14890 0000A93D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14891 0000A940 48890425[050B0000]      	mov qword [free_var_6], rax
 14892 0000A948 48B8-                   	mov rax, sob_void
 14892 0000A94A [0000000000000000] 
 14893 0000A952 C9                      	leave
 14894 0000A953 C21800                  	ret AND_KILL_FRAME(1)
 14895                                  .L_lambda_simple_end_0057:	; new closure is in rax
 14896 0000A956 803804                  	cmp byte [rax], T_closure
 14897 0000A959 0F85270B0000            	jne L_error_non_closure
 14898 0000A95F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14899 0000A962 FF7508                  	push qword [rbp + 8 * 1]
 14900                                   ; old ret addr
 14901 0000A965 FF7500                  	push qword [rbp]
 14902                                   ; restore the old rbp
 14903 0000A968 BB01000000              	mov rbx, 1
 14904 0000A96D 4883C303                	add rbx, 3
 14905 0000A971 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14906 0000A975 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14907 0000A97A 4C8D4DF8                	lea r9, [rbp - 8]
 14908 0000A97E B905000000              	mov rcx, 5
 14909                                  .L_tc_recycle_frame_loop_0091:
 14910 0000A983 4883F900                	cmp rcx, 0
 14911 0000A987 7413                    	je .L_tc_recycle_frame_done_0091
 14912 0000A989 4D8B11                  	mov r10, qword [r9]
 14913 0000A98C 4D8910                  	mov qword [r8], r10
 14914 0000A98F 4983E808                	sub r8, 8
 14915 0000A993 4983E908                	sub r9, 8
 14916 0000A997 48FFC9                  	dec rcx
 14917 0000A99A EBE7                    	jmp .L_tc_recycle_frame_loop_0091
 14918                                  .L_tc_recycle_frame_done_0091:
 14919 0000A99C 498D6008                	lea rsp, [r8 + 8]
 14920 0000A9A0 5D                      	pop rbp ; restore the old rbp
 14921 0000A9A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14922 0000A9A4 C9                      	leave
 14923 0000A9A5 C21800                  	ret AND_KILL_FRAME(1)
 14924                                  .L_lambda_simple_end_0053:	; new closure is in rax
 14925 0000A9A8 803804                  	cmp byte [rax], T_closure
 14926 0000A9AB 0F85D50A0000            	jne L_error_non_closure
 14927 0000A9B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14928 0000A9B4 FF7508                  	push qword [rbp + 8 * 1]
 14929                                   ; old ret addr
 14930 0000A9B7 FF7500                  	push qword [rbp]
 14931                                   ; restore the old rbp
 14932 0000A9BA BB01000000              	mov rbx, 1
 14933 0000A9BF 4883C303                	add rbx, 3
 14934 0000A9C3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14935 0000A9C7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14936 0000A9CC 4C8D4DF8                	lea r9, [rbp - 8]
 14937 0000A9D0 B905000000              	mov rcx, 5
 14938                                  .L_tc_recycle_frame_loop_008f:
 14939 0000A9D5 4883F900                	cmp rcx, 0
 14940 0000A9D9 7413                    	je .L_tc_recycle_frame_done_008f
 14941 0000A9DB 4D8B11                  	mov r10, qword [r9]
 14942 0000A9DE 4D8910                  	mov qword [r8], r10
 14943 0000A9E1 4983E808                	sub r8, 8
 14944 0000A9E5 4983E908                	sub r9, 8
 14945 0000A9E9 48FFC9                  	dec rcx
 14946 0000A9EC EBE7                    	jmp .L_tc_recycle_frame_loop_008f
 14947                                  .L_tc_recycle_frame_done_008f:
 14948 0000A9EE 498D6008                	lea rsp, [r8 + 8]
 14949 0000A9F2 5D                      	pop rbp ; restore the old rbp
 14950 0000A9F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14951 0000A9F6 C9                      	leave
 14952 0000A9F7 C21800                  	ret AND_KILL_FRAME(1)
 14953                                  .L_lambda_simple_end_0051:	; new closure is in rax
 14954 0000A9FA 803804                  	cmp byte [rax], T_closure
 14955 0000A9FD 0F85830A0000            	jne L_error_non_closure
 14956 0000AA03 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14957 0000AA06 FF7508                  	push qword [rbp + 8 * 1]
 14958                                   ; old ret addr
 14959 0000AA09 FF7500                  	push qword [rbp]
 14960                                   ; restore the old rbp
 14961 0000AA0C BB01000000              	mov rbx, 1
 14962 0000AA11 4883C303                	add rbx, 3
 14963 0000AA15 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14964 0000AA19 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14965 0000AA1E 4C8D4DF8                	lea r9, [rbp - 8]
 14966 0000AA22 B905000000              	mov rcx, 5
 14967                                  .L_tc_recycle_frame_loop_008d:
 14968 0000AA27 4883F900                	cmp rcx, 0
 14969 0000AA2B 7413                    	je .L_tc_recycle_frame_done_008d
 14970 0000AA2D 4D8B11                  	mov r10, qword [r9]
 14971 0000AA30 4D8910                  	mov qword [r8], r10
 14972 0000AA33 4983E808                	sub r8, 8
 14973 0000AA37 4983E908                	sub r9, 8
 14974 0000AA3B 48FFC9                  	dec rcx
 14975 0000AA3E EBE7                    	jmp .L_tc_recycle_frame_loop_008d
 14976                                  .L_tc_recycle_frame_done_008d:
 14977 0000AA40 498D6008                	lea rsp, [r8 + 8]
 14978 0000AA44 5D                      	pop rbp ; restore the old rbp
 14979 0000AA45 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14980 0000AA48 C9                      	leave
 14981 0000AA49 C21800                  	ret AND_KILL_FRAME(1)
 14982                                  .L_lambda_simple_end_004f:	; new closure is in rax
 14983 0000AA4C 803804                  	cmp byte [rax], T_closure
 14984 0000AA4F 0F85310A0000            	jne L_error_non_closure
 14985 0000AA55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14986 0000AA58 FF7508                  	push qword [rbp + 8 * 1]
 14987                                   ; old ret addr
 14988 0000AA5B FF7500                  	push qword [rbp]
 14989                                   ; restore the old rbp
 14990 0000AA5E BB01000000              	mov rbx, 1
 14991 0000AA63 4883C303                	add rbx, 3
 14992 0000AA67 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14993 0000AA6B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14994 0000AA70 4C8D4DF8                	lea r9, [rbp - 8]
 14995 0000AA74 B905000000              	mov rcx, 5
 14996                                  .L_tc_recycle_frame_loop_008b:
 14997 0000AA79 4883F900                	cmp rcx, 0
 14998 0000AA7D 7413                    	je .L_tc_recycle_frame_done_008b
 14999 0000AA7F 4D8B11                  	mov r10, qword [r9]
 15000 0000AA82 4D8910                  	mov qword [r8], r10
 15001 0000AA85 4983E808                	sub r8, 8
 15002 0000AA89 4983E908                	sub r9, 8
 15003 0000AA8D 48FFC9                  	dec rcx
 15004 0000AA90 EBE7                    	jmp .L_tc_recycle_frame_loop_008b
 15005                                  .L_tc_recycle_frame_done_008b:
 15006 0000AA92 498D6008                	lea rsp, [r8 + 8]
 15007 0000AA96 5D                      	pop rbp ; restore the old rbp
 15008 0000AA97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15009 0000AA9A C9                      	leave
 15010 0000AA9B C21800                  	ret AND_KILL_FRAME(1)
 15011                                  .L_lambda_simple_end_004d:	; new closure is in rax
 15012 0000AA9E 803804                  	cmp byte [rax], T_closure
 15013 0000AAA1 0F85DF090000            	jne L_error_non_closure
 15014 0000AAA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15015 0000AAAA FF7508                  	push qword [rbp + 8 * 1]
 15016                                   ; old ret addr
 15017 0000AAAD FF7500                  	push qword [rbp]
 15018                                   ; restore the old rbp
 15019 0000AAB0 BB01000000              	mov rbx, 1
 15020 0000AAB5 4883C303                	add rbx, 3
 15021 0000AAB9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15022 0000AABD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15023 0000AAC2 4C8D4DF8                	lea r9, [rbp - 8]
 15024 0000AAC6 B905000000              	mov rcx, 5
 15025                                  .L_tc_recycle_frame_loop_008a:
 15026 0000AACB 4883F900                	cmp rcx, 0
 15027 0000AACF 7413                    	je .L_tc_recycle_frame_done_008a
 15028 0000AAD1 4D8B11                  	mov r10, qword [r9]
 15029 0000AAD4 4D8910                  	mov qword [r8], r10
 15030 0000AAD7 4983E808                	sub r8, 8
 15031 0000AADB 4983E908                	sub r9, 8
 15032 0000AADF 48FFC9                  	dec rcx
 15033 0000AAE2 EBE7                    	jmp .L_tc_recycle_frame_loop_008a
 15034                                  .L_tc_recycle_frame_done_008a:
 15035 0000AAE4 498D6008                	lea rsp, [r8 + 8]
 15036 0000AAE8 5D                      	pop rbp ; restore the old rbp
 15037 0000AAE9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15038 0000AAEC C9                      	leave
 15039 0000AAED C21800                  	ret AND_KILL_FRAME(1)
 15040                                  .L_lambda_simple_end_004c:	; new closure is in rax
 15041 0000AAF0 803804                  	cmp byte [rax], T_closure
 15042 0000AAF3 0F858D090000            	jne L_error_non_closure
 15043 0000AAF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15044 0000AAFC FF7508                  	push qword [rbp + 8 * 1]
 15045                                   ; old ret addr
 15046 0000AAFF FF7500                  	push qword [rbp]
 15047                                   ; restore the old rbp
 15048 0000AB02 BB01000000              	mov rbx, 1
 15049 0000AB07 4883C303                	add rbx, 3
 15050 0000AB0B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15051 0000AB0F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15052 0000AB14 4C8D4DF8                	lea r9, [rbp - 8]
 15053 0000AB18 B905000000              	mov rcx, 5
 15054                                  .L_tc_recycle_frame_loop_0089:
 15055 0000AB1D 4883F900                	cmp rcx, 0
 15056 0000AB21 7413                    	je .L_tc_recycle_frame_done_0089
 15057 0000AB23 4D8B11                  	mov r10, qword [r9]
 15058 0000AB26 4D8910                  	mov qword [r8], r10
 15059 0000AB29 4983E808                	sub r8, 8
 15060 0000AB2D 4983E908                	sub r9, 8
 15061 0000AB31 48FFC9                  	dec rcx
 15062 0000AB34 EBE7                    	jmp .L_tc_recycle_frame_loop_0089
 15063                                  .L_tc_recycle_frame_done_0089:
 15064 0000AB36 498D6008                	lea rsp, [r8 + 8]
 15065 0000AB3A 5D                      	pop rbp ; restore the old rbp
 15066 0000AB3B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15067 0000AB3E C9                      	leave
 15068 0000AB3F C21800                  	ret AND_KILL_FRAME(1)
 15069                                  .L_lambda_simple_end_004b:	; new closure is in rax
 15070 0000AB42 803804                  	cmp byte [rax], T_closure
 15071 0000AB45 0F853B090000            	jne L_error_non_closure
 15072 0000AB4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15073 0000AB4E FF7508                  	push qword [rbp + 8 * 1]
 15074                                   ; old ret addr
 15075 0000AB51 FF7500                  	push qword [rbp]
 15076                                   ; restore the old rbp
 15077 0000AB54 BB01000000              	mov rbx, 1
 15078 0000AB59 4883C303                	add rbx, 3
 15079 0000AB5D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15080 0000AB61 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15081 0000AB66 4C8D4DF8                	lea r9, [rbp - 8]
 15082 0000AB6A B905000000              	mov rcx, 5
 15083                                  .L_tc_recycle_frame_loop_007b:
 15084 0000AB6F 4883F900                	cmp rcx, 0
 15085 0000AB73 7413                    	je .L_tc_recycle_frame_done_007b
 15086 0000AB75 4D8B11                  	mov r10, qword [r9]
 15087 0000AB78 4D8910                  	mov qword [r8], r10
 15088 0000AB7B 4983E808                	sub r8, 8
 15089 0000AB7F 4983E908                	sub r9, 8
 15090 0000AB83 48FFC9                  	dec rcx
 15091 0000AB86 EBE7                    	jmp .L_tc_recycle_frame_loop_007b
 15092                                  .L_tc_recycle_frame_done_007b:
 15093 0000AB88 498D6008                	lea rsp, [r8 + 8]
 15094 0000AB8C 5D                      	pop rbp ; restore the old rbp
 15095 0000AB8D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15096 0000AB90 C9                      	leave
 15097 0000AB91 C21800                  	ret AND_KILL_FRAME(1)
 15098                                  .L_lambda_simple_end_0048:	; new closure is in rax
 15099 0000AB94 803804                  	cmp byte [rax], T_closure
 15100 0000AB97 0F85E9080000            	jne L_error_non_closure
 15101 0000AB9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15102 0000ABA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15103                                  
 15104 0000ABA3 4889C7                  	mov rdi, rax
 15105 0000ABA6 E8D90B0000              	call print_sexpr_if_not_void
 15106 0000ABAB 48B8-                   	mov rax, L_constants + 0
 15106 0000ABAD [0000000000000000] 
 15107 0000ABB5 48890425[340F0000]      	mov qword [free_var_69], rax
 15108 0000ABBD 48B8-                   	mov rax, sob_void
 15108 0000ABBF [0000000000000000] 
 15109                                  
 15110 0000ABC7 4889C7                  	mov rdi, rax
 15111 0000ABCA E8B50B0000              	call print_sexpr_if_not_void
 15112 0000ABCF 48B8-                   	mov rax, L_constants + 0
 15112 0000ABD1 [0000000000000000] 
 15113 0000ABD9 48890425[230F0000]      	mov qword [free_var_68], rax
 15114 0000ABE1 48B8-                   	mov rax, sob_void
 15114 0000ABE3 [0000000000000000] 
 15115                                  
 15116 0000ABEB 4889C7                  	mov rdi, rax
 15117 0000ABEE E8910B0000              	call print_sexpr_if_not_void
 15118 0000ABF3 48B8-                   	mov rax, L_constants + 0
 15118 0000ABF5 [0000000000000000] 
 15119 0000ABFD 48890425[450F0000]      	mov qword [free_var_70], rax
 15120 0000AC05 48B8-                   	mov rax, sob_void
 15120 0000AC07 [0000000000000000] 
 15121                                  
 15122 0000AC0F 4889C7                  	mov rdi, rax
 15123 0000AC12 E86D0B0000              	call print_sexpr_if_not_void
 15124 0000AC17 48B8-                   	mov rax, L_constants + 0
 15124 0000AC19 [0000000000000000] 
 15125 0000AC21 48890425[670F0000]      	mov qword [free_var_72], rax
 15126 0000AC29 48B8-                   	mov rax, sob_void
 15126 0000AC2B [0000000000000000] 
 15127                                  
 15128 0000AC33 4889C7                  	mov rdi, rax
 15129 0000AC36 E8490B0000              	call print_sexpr_if_not_void
 15130 0000AC3B 48B8-                   	mov rax, L_constants + 0
 15130 0000AC3D [0000000000000000] 
 15131 0000AC45 48890425[560F0000]      	mov qword [free_var_71], rax
 15132 0000AC4D 48B8-                   	mov rax, sob_void
 15132 0000AC4F [0000000000000000] 
 15133                                  
 15134 0000AC57 4889C7                  	mov rdi, rax
 15135 0000AC5A E8250B0000              	call print_sexpr_if_not_void
 15136                                  	; preparing a non-tail-call
 15137 0000AC5F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15138 0000AC64 E8C6080000              	call malloc
 15139 0000AC69 50                      	push rax
 15140 0000AC6A BF00000000              	mov rdi, 8 * 0	; new rib
 15141 0000AC6F E8BB080000              	call malloc
 15142 0000AC74 50                      	push rax
 15143 0000AC75 BF08000000              	mov rdi, 8 * 1	; extended env
 15144 0000AC7A E8B0080000              	call malloc
 15145 0000AC7F 488B7D10                	mov rdi, ENV
 15146 0000AC83 BE00000000              	mov rsi, 0
 15147 0000AC88 BA01000000              	mov rdx, 1
 15148                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 15149 0000AC8D 4883FE00                	cmp rsi, 0
 15150 0000AC91 7410                    	je .L_lambda_simple_env_end_0058
 15151 0000AC93 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15152 0000AC97 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15153 0000AC9B 48FFC6                  	inc rsi
 15154 0000AC9E 48FFC2                  	inc rdx
 15155 0000ACA1 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 15156                                  .L_lambda_simple_env_end_0058:
 15157 0000ACA3 5B                      	pop rbx
 15158 0000ACA4 BE00000000              	mov rsi, 0
 15159                                  .L_lambda_simple_params_loop_0058:	; copy params
 15160 0000ACA9 4883FE00                	cmp rsi, 0
 15161 0000ACAD 740E                    	je .L_lambda_simple_params_end_0058
 15162 0000ACAF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15163 0000ACB4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15164 0000ACB8 48FFC6                  	inc rsi
 15165 0000ACBB EBEC                    	jmp .L_lambda_simple_params_loop_0058
 15166                                  .L_lambda_simple_params_end_0058:
 15167 0000ACBD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15168 0000ACC0 4889C3                  	mov rbx, rax
 15169 0000ACC3 58                      	pop rax
 15170 0000ACC4 C60004                  	mov byte [rax], T_closure
 15171 0000ACC7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15172 0000ACCB 48C74009[D8AC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 15173 0000ACD3 E9CB010000              	jmp .L_lambda_simple_end_0058
 15174                                  .L_lambda_simple_code_0058:	; lambda-simple body
 15175 0000ACD8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15176 0000ACDE 740B                    	je .L_lambda_simple_arity_check_ok_0058
 15177 0000ACE0 FF742410                	push qword [rsp + 8 * 2]
 15178 0000ACE4 6A01                    	push 1
 15179 0000ACE6 E9FD070000              	jmp L_error_incorrect_arity_simple
 15180                                  .L_lambda_simple_arity_check_ok_0058:
 15181 0000ACEB C8000000                	enter 0, 0
 15182 0000ACEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15183 0000ACF4 E836080000              	call malloc
 15184 0000ACF9 50                      	push rax
 15185 0000ACFA BF10000000              	mov rdi, 8 * 2	; new rib
 15186 0000ACFF E82B080000              	call malloc
 15187 0000AD04 50                      	push rax
 15188 0000AD05 BF10000000              	mov rdi, 8 * 2	; extended env
 15189 0000AD0A E820080000              	call malloc
 15190 0000AD0F 488B7D10                	mov rdi, ENV
 15191 0000AD13 BE00000000              	mov rsi, 0
 15192 0000AD18 BA01000000              	mov rdx, 1
 15193                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 15194 0000AD1D 4883FE01                	cmp rsi, 1
 15195 0000AD21 7410                    	je .L_lambda_opt_env_end_000f
 15196 0000AD23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15197 0000AD27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15198 0000AD2B 48FFC6                  	inc rsi
 15199 0000AD2E 48FFC2                  	inc rdx
 15200 0000AD31 EBEA                    	jmp .L_lambda_opt_env_loop_000f
 15201                                  .L_lambda_opt_env_end_000f:
 15202 0000AD33 5B                      	pop rbx
 15203 0000AD34 BE00000000              	mov rsi, 0
 15204                                  .L_lambda_opt_params_loop_000f:	; copy params
 15205 0000AD39 4883FE01                	cmp rsi, 1
 15206 0000AD3D 740E                    	je .L_lambda_opt_params_end_000f
 15207 0000AD3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15208 0000AD44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15209 0000AD48 48FFC6                  	inc rsi
 15210 0000AD4B EBEC                    	jmp .L_lambda_opt_params_loop_000f
 15211                                  .L_lambda_opt_params_end_000f:
 15212 0000AD4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15213 0000AD50 4889C3                  	mov rbx, rax
 15214 0000AD53 58                      	pop rax
 15215 0000AD54 C60004                  	mov byte [rax], T_closure
 15216 0000AD57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15217 0000AD5B 48C74009[68AD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 15218 0000AD63 E937010000              	jmp .L_lambda_opt_end_000f
 15219                                  .L_lambda_opt_code_000f:	; lambda-opt body
 15220 0000AD68 48837C241000            	cmp qword [rsp + 8 * 2], 0
 15221 0000AD6E 745E                    	je .L_lambda_opt_arity_check_exact_000f
 15222 0000AD70 7F0B                    	jg .L_lambda_opt_arity_check_more_000f
 15223 0000AD72 FF742410                	push qword [rsp + 8 * 2]
 15224 0000AD76 6A00                    	push 0
 15225 0000AD78 E96B070000              	jmp L_error_incorrect_arity_simple
 15226                                  .L_lambda_opt_arity_check_more_000f:
 15227 0000AD7D 53                      push rbx
 15228 0000AD7E 51                      push rcx
 15229 0000AD7F 488B4D10                mov rcx, [rbp + 8*2]
 15230 0000AD83 BB00000000              mov rbx , 0
 15231 0000AD88 4829D9                  sub rcx, rbx
 15232 0000AD8B 48FFC3                  inc rbx
 15233 0000AD8E 48895D10                mov [rbp + 8*2], rbx
 15234 0000AD92 4889CF                  	 mov rdi, rcx 
 15235 0000AD95 48C1E703                	 shl rdi, 3 
 15236 0000AD99 E891070000              	call malloc
 15237 0000AD9E 50                      	push rax
 15238 0000AD9F 488B44DD18              	mov rax, [rbp + 8*2 + rbx*8 + 8]
 15239 0000ADA4 4831FF                  xor rdi, rdi
 15240                                  .L_lambda_opt_stack_shrink_loop_000f:
 15241 0000ADA7 4839CF                  	cmp rdi, rcx
 15242 0000ADAA 741A                    	je .L_lambda_opt_stack_shrink_loop_exit_000f
 15243 0000ADAC 488904FC                mov [rsp + rdi*8], rax
 15244 0000ADB0 48FFC7                  	inc rdi
 15245 0000ADB3 4C8B04FD08000000        	mov r8, [rdi*8 + 8]
 15246 0000ADBB 4E8B4C0510              	mov r9, [rbp + r8 + 8*2]
 15247 0000ADC0 498B04D9                mov rax,[r9 + rbx*8] 
 15248 0000ADC4 EBE1                    jmp .L_lambda_opt_stack_shrink_loop_000f
 15249                                  .L_lambda_opt_stack_shrink_loop_exit_000f:
 15250 0000ADC6 8F44DD18                	pop qword [rbp + 8*2 + rbx*8 + 8]
 15251 0000ADCA 5B                      pop rbx
 15252 0000ADCB 53                      push rbx
 15253 0000ADCC EB16                    jmp .L_lambda_opt_stack_adjusted_000f
 15254                                  .L_lambda_opt_arity_check_exact_000f:
 15255 0000ADCE 48B8-                   	mov rax, L_constants + 1
 15255 0000ADD0 [0100000000000000] 
 15256 0000ADD8 53                      push rbx
 15257 0000ADD9 488B5C2410              mov rbx , [rsp + 8*2]
 15258 0000ADDE 488944DC10              mov [rsp + 8 * rbx + 8 * 2], rax
 15259 0000ADE3 5B                      pop rbx
 15260                                  .L_lambda_opt_stack_adjusted_000f:	; new closure is in rax
 15261 0000ADE4 C8000000                	enter 0, 0
 15262                                  	; preparing a tail-call
 15263                                  	; preparing a non-tail-call
 15264 0000ADE8 488B0425[FF100000]      	mov rax, qword [free_var_96]	; free var s
 15265 0000ADF0 803805                  	cmp byte [rax], T_undefined
 15266 0000ADF3 0F8409060000            	je L_error_fvar_undefined
 15267 0000ADF9 50                      	push rax
 15268 0000ADFA 488B0425[F00E0000]      	mov rax, qword [free_var_65]	; free var char->integer
 15269 0000AE02 803805                  	cmp byte [rax], T_undefined
 15270 0000AE05 0F84F7050000            	je L_error_fvar_undefined
 15271 0000AE0B 50                      	push rax
 15272 0000AE0C 6A02                    	push 2	; arg count
 15273 0000AE0E 488B0425[66100000]      	mov rax, qword [free_var_87]	; free var map
 15274 0000AE16 803805                  	cmp byte [rax], T_undefined
 15275 0000AE19 0F84E3050000            	je L_error_fvar_undefined
 15276 0000AE1F 803804                  	cmp byte [rax], T_closure
 15277 0000AE22 0F855E060000            	jne L_error_non_closure
 15278 0000AE28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15279 0000AE2B FF5009                  	call SOB_CLOSURE_CODE(rax)
 15280 0000AE2E 50                      	push rax
 15281 0000AE2F 488B4510                	mov rax, ENV
 15282 0000AE33 488B00                  	mov rax, qword [rax + 8 * 0]
 15283 0000AE36 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 15284 0000AE39 50                      	push rax
 15285 0000AE3A 6A02                    	push 2	; arg count
 15286 0000AE3C 488B0425[BF0C0000]      	mov rax, qword [free_var_32]	; free var apply
 15287 0000AE44 803805                  	cmp byte [rax], T_undefined
 15288 0000AE47 0F84B5050000            	je L_error_fvar_undefined
 15289 0000AE4D 803804                  	cmp byte [rax], T_closure
 15290 0000AE50 0F8530060000            	jne L_error_non_closure
 15291 0000AE56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15292 0000AE59 FF7508                  	push qword [rbp + 8 * 1]
 15293                                   ; old ret addr
 15294 0000AE5C FF7500                  	push qword [rbp]
 15295                                   ; restore the old rbp
 15296 0000AE5F BB02000000              	mov rbx, 2
 15297 0000AE64 4883C303                	add rbx, 3
 15298 0000AE68 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15299 0000AE6C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15300 0000AE71 4C8D4DF8                	lea r9, [rbp - 8]
 15301 0000AE75 B906000000              	mov rcx, 6
 15302                                  .L_tc_recycle_frame_loop_0095:
 15303 0000AE7A 4883F900                	cmp rcx, 0
 15304 0000AE7E 7413                    	je .L_tc_recycle_frame_done_0095
 15305 0000AE80 4D8B11                  	mov r10, qword [r9]
 15306 0000AE83 4D8910                  	mov qword [r8], r10
 15307 0000AE86 4983E808                	sub r8, 8
 15308 0000AE8A 4983E908                	sub r9, 8
 15309 0000AE8E 48FFC9                  	dec rcx
 15310 0000AE91 EBE7                    	jmp .L_tc_recycle_frame_loop_0095
 15311                                  .L_tc_recycle_frame_done_0095:
 15312 0000AE93 498D6008                	lea rsp, [r8 + 8]
 15313 0000AE97 5D                      	pop rbp ; restore the old rbp
 15314 0000AE98 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15315 0000AE9B C9                      	leave
 15316 0000AE9C C21000                  	ret AND_KILL_FRAME(0)
 15317                                  .L_lambda_opt_end_000f:	; new closure is in rax
 15318 0000AE9F C9                      	leave
 15319 0000AEA0 C21800                  	ret AND_KILL_FRAME(1)
 15320                                  .L_lambda_simple_end_0058:	; new closure is in rax
 15321 0000AEA3 50                      	push rax
 15322 0000AEA4 6A01                    	push 1	; arg count
 15323 0000AEA6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15324 0000AEAB E87F060000              	call malloc
 15325 0000AEB0 50                      	push rax
 15326 0000AEB1 BF00000000              	mov rdi, 8 * 0	; new rib
 15327 0000AEB6 E874060000              	call malloc
 15328 0000AEBB 50                      	push rax
 15329 0000AEBC BF08000000              	mov rdi, 8 * 1	; extended env
 15330 0000AEC1 E869060000              	call malloc
 15331 0000AEC6 488B7D10                	mov rdi, ENV
 15332 0000AECA BE00000000              	mov rsi, 0
 15333 0000AECF BA01000000              	mov rdx, 1
 15334                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 15335 0000AED4 4883FE00                	cmp rsi, 0
 15336 0000AED8 7410                    	je .L_lambda_simple_env_end_0059
 15337 0000AEDA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15338 0000AEDE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15339 0000AEE2 48FFC6                  	inc rsi
 15340 0000AEE5 48FFC2                  	inc rdx
 15341 0000AEE8 EBEA                    	jmp .L_lambda_simple_env_loop_0059
 15342                                  .L_lambda_simple_env_end_0059:
 15343 0000AEEA 5B                      	pop rbx
 15344 0000AEEB BE00000000              	mov rsi, 0
 15345                                  .L_lambda_simple_params_loop_0059:	; copy params
 15346 0000AEF0 4883FE00                	cmp rsi, 0
 15347 0000AEF4 740E                    	je .L_lambda_simple_params_end_0059
 15348 0000AEF6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15349 0000AEFB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15350 0000AEFF 48FFC6                  	inc rsi
 15351 0000AF02 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 15352                                  .L_lambda_simple_params_end_0059:
 15353 0000AF04 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15354 0000AF07 4889C3                  	mov rbx, rax
 15355 0000AF0A 58                      	pop rax
 15356 0000AF0B C60004                  	mov byte [rax], T_closure
 15357 0000AF0E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15358 0000AF12 48C74009[1FAF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 15359 0000AF1A E938010000              	jmp .L_lambda_simple_end_0059
 15360                                  .L_lambda_simple_code_0059:	; lambda-simple body
 15361 0000AF1F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15362 0000AF25 740B                    	je .L_lambda_simple_arity_check_ok_0059
 15363 0000AF27 FF742410                	push qword [rsp + 8 * 2]
 15364 0000AF2B 6A01                    	push 1
 15365 0000AF2D E9B6050000              	jmp L_error_incorrect_arity_simple
 15366                                  .L_lambda_simple_arity_check_ok_0059:
 15367 0000AF32 C8000000                	enter 0, 0
 15368                                  	; preparing a non-tail-call
 15369 0000AF36 488B0425[E30A0000]      	mov rax, qword [free_var_4]	; free var <
 15370 0000AF3E 803805                  	cmp byte [rax], T_undefined
 15371 0000AF41 0F84BB040000            	je L_error_fvar_undefined
 15372 0000AF47 50                      	push rax
 15373 0000AF48 6A01                    	push 1	; arg count
 15374 0000AF4A 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15375 0000AF4E 803804                  	cmp byte [rax], T_closure
 15376 0000AF51 0F852F050000            	jne L_error_non_closure
 15377 0000AF57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15378 0000AF5A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15379 0000AF5D 48890425[340F0000]      	mov qword [free_var_69], rax
 15380 0000AF65 48B8-                   	mov rax, sob_void
 15380 0000AF67 [0000000000000000] 
 15381                                  
 15382                                  	; preparing a non-tail-call
 15383 0000AF6F 488B0425[F40A0000]      	mov rax, qword [free_var_5]	; free var <=
 15384 0000AF77 803805                  	cmp byte [rax], T_undefined
 15385 0000AF7A 0F8482040000            	je L_error_fvar_undefined
 15386 0000AF80 50                      	push rax
 15387 0000AF81 6A01                    	push 1	; arg count
 15388 0000AF83 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15389 0000AF87 803804                  	cmp byte [rax], T_closure
 15390 0000AF8A 0F85F6040000            	jne L_error_non_closure
 15391 0000AF90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15392 0000AF93 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15393 0000AF96 48890425[230F0000]      	mov qword [free_var_68], rax
 15394 0000AF9E 48B8-                   	mov rax, sob_void
 15394 0000AFA0 [0000000000000000] 
 15395                                  
 15396                                  	; preparing a non-tail-call
 15397 0000AFA8 488B0425[050B0000]      	mov rax, qword [free_var_6]	; free var =
 15398 0000AFB0 803805                  	cmp byte [rax], T_undefined
 15399 0000AFB3 0F8449040000            	je L_error_fvar_undefined
 15400 0000AFB9 50                      	push rax
 15401 0000AFBA 6A01                    	push 1	; arg count
 15402 0000AFBC 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15403 0000AFC0 803804                  	cmp byte [rax], T_closure
 15404 0000AFC3 0F85BD040000            	jne L_error_non_closure
 15405 0000AFC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15406 0000AFCC FF5009                  	call SOB_CLOSURE_CODE(rax)
 15407 0000AFCF 48890425[450F0000]      	mov qword [free_var_70], rax
 15408 0000AFD7 48B8-                   	mov rax, sob_void
 15408 0000AFD9 [0000000000000000] 
 15409                                  
 15410                                  	; preparing a non-tail-call
 15411 0000AFE1 488B0425[160B0000]      	mov rax, qword [free_var_7]	; free var >
 15412 0000AFE9 803805                  	cmp byte [rax], T_undefined
 15413 0000AFEC 0F8410040000            	je L_error_fvar_undefined
 15414 0000AFF2 50                      	push rax
 15415 0000AFF3 6A01                    	push 1	; arg count
 15416 0000AFF5 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15417 0000AFF9 803804                  	cmp byte [rax], T_closure
 15418 0000AFFC 0F8584040000            	jne L_error_non_closure
 15419 0000B002 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15420 0000B005 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15421 0000B008 48890425[670F0000]      	mov qword [free_var_72], rax
 15422 0000B010 48B8-                   	mov rax, sob_void
 15422 0000B012 [0000000000000000] 
 15423                                  
 15424                                  	; preparing a non-tail-call
 15425 0000B01A 488B0425[270B0000]      	mov rax, qword [free_var_8]	; free var >=
 15426 0000B022 803805                  	cmp byte [rax], T_undefined
 15427 0000B025 0F84D7030000            	je L_error_fvar_undefined
 15428 0000B02B 50                      	push rax
 15429 0000B02C 6A01                    	push 1	; arg count
 15430 0000B02E 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 15431 0000B032 803804                  	cmp byte [rax], T_closure
 15432 0000B035 0F854B040000            	jne L_error_non_closure
 15433 0000B03B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15434 0000B03E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15435 0000B041 48890425[560F0000]      	mov qword [free_var_71], rax
 15436 0000B049 48B8-                   	mov rax, sob_void
 15436 0000B04B [0000000000000000] 
 15437 0000B053 C9                      	leave
 15438 0000B054 C21800                  	ret AND_KILL_FRAME(1)
 15439                                  .L_lambda_simple_end_0059:	; new closure is in rax
 15440 0000B057 803804                  	cmp byte [rax], T_closure
 15441 0000B05A 0F8526040000            	jne L_error_non_closure
 15442 0000B060 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15443 0000B063 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15444                                  
 15445 0000B066 4889C7                  	mov rdi, rax
 15446 0000B069 E816070000              	call print_sexpr_if_not_void
 15447 0000B06E 48B8-                   	mov rax, L_constants + 0
 15447 0000B070 [0000000000000000] 
 15448 0000B078 48890425[010F0000]      	mov qword [free_var_66], rax
 15449 0000B080 48B8-                   	mov rax, sob_void
 15449 0000B082 [0000000000000000] 
 15450                                  
 15451 0000B08A 4889C7                  	mov rdi, rax
 15452 0000B08D E8F2060000              	call print_sexpr_if_not_void
 15453 0000B092 48B8-                   	mov rax, L_constants + 0
 15453 0000B094 [0000000000000000] 
 15454 0000B09C 48890425[120F0000]      	mov qword [free_var_67], rax
 15455 0000B0A4 48B8-                   	mov rax, sob_void
 15455 0000B0A6 [0000000000000000] 
 15456                                  
 15457 0000B0AE 4889C7                  	mov rdi, rax
 15458 0000B0B1 E8CE060000              	call print_sexpr_if_not_void
 15459 0000B0B6 48B8-                   	mov rax, L_constants + 2620
 15459 0000B0B8 [3C0A000000000000] 
 15460 0000B0C0 48890425[EF0F0000]      	mov qword [free_var_80], rax
 15461 0000B0C8 48B8-                   	mov rax, sob_void
 15461 0000B0CA [0000000000000000] 
 15462                                  
 15463 0000B0D2 4889C7                  	mov rdi, rax
 15464 0000B0D5 E8AA060000              	call print_sexpr_if_not_void
 15465 0000B0DA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15466 0000B0DF E84B040000              	call malloc
 15467 0000B0E4 50                      	push rax
 15468 0000B0E5 BF00000000              	mov rdi, 8 * 0	; new rib
 15469 0000B0EA E840040000              	call malloc
 15470 0000B0EF 50                      	push rax
 15471 0000B0F0 BF08000000              	mov rdi, 8 * 1	; extended env
 15472 0000B0F5 E835040000              	call malloc
 15473 0000B0FA 488B7D10                	mov rdi, ENV
 15474 0000B0FE BE00000000              	mov rsi, 0
 15475 0000B103 BA01000000              	mov rdx, 1
 15476                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 15477 0000B108 4883FE00                	cmp rsi, 0
 15478 0000B10C 7410                    	je .L_lambda_simple_env_end_005a
 15479 0000B10E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15480 0000B112 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15481 0000B116 48FFC6                  	inc rsi
 15482 0000B119 48FFC2                  	inc rdx
 15483 0000B11C EBEA                    	jmp .L_lambda_simple_env_loop_005a
 15484                                  .L_lambda_simple_env_end_005a:
 15485 0000B11E 5B                      	pop rbx
 15486 0000B11F BE00000000              	mov rsi, 0
 15487                                  .L_lambda_simple_params_loop_005a:	; copy params
 15488 0000B124 4883FE00                	cmp rsi, 0
 15489 0000B128 740E                    	je .L_lambda_simple_params_end_005a
 15490 0000B12A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15491 0000B12F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15492 0000B133 48FFC6                  	inc rsi
 15493 0000B136 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 15494                                  .L_lambda_simple_params_end_005a:
 15495 0000B138 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15496 0000B13B 4889C3                  	mov rbx, rax
 15497 0000B13E 58                      	pop rax
 15498 0000B13F C60004                  	mov byte [rax], T_closure
 15499 0000B142 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15500 0000B146 48C74009[50B10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 15501 0000B14E EB74                    	jmp .L_lambda_simple_end_005a
 15502                                  .L_lambda_simple_code_005a:	; lambda-simple body
 15503 0000B150 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15504 0000B156 740B                    	je .L_lambda_simple_arity_check_ok_005a
 15505 0000B158 FF742410                	push qword [rsp + 8 * 2]
 15506 0000B15C 6A02                    	push 2
 15507 0000B15E E985030000              	jmp L_error_incorrect_arity_simple
 15508                                  .L_lambda_simple_arity_check_ok_005a:
 15509 0000B163 C8000000                	enter 0, 0
 15510                                  	; preparing a tail-call
 15511 0000B167 488B4520                	mov rax, PARAM(0)	; param x
 15512 0000B16B 50                      	push rax
 15513 0000B16C 6A01                    	push 1	; arg count
 15514 0000B16E 488B4528                	mov rax, PARAM(1)	; param f
 15515 0000B172 803804                  	cmp byte [rax], T_closure
 15516 0000B175 0F850B030000            	jne L_error_non_closure
 15517 0000B17B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15518 0000B17E FF7508                  	push qword [rbp + 8 * 1]
 15519                                   ; old ret addr
 15520 0000B181 FF7500                  	push qword [rbp]
 15521                                   ; restore the old rbp
 15522 0000B184 BB01000000              	mov rbx, 1
 15523 0000B189 4883C303                	add rbx, 3
 15524 0000B18D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15525 0000B191 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15526 0000B196 4C8D4DF8                	lea r9, [rbp - 8]
 15527 0000B19A B905000000              	mov rcx, 5
 15528                                  .L_tc_recycle_frame_loop_0096:
 15529 0000B19F 4883F900                	cmp rcx, 0
 15530 0000B1A3 7413                    	je .L_tc_recycle_frame_done_0096
 15531 0000B1A5 4D8B11                  	mov r10, qword [r9]
 15532 0000B1A8 4D8910                  	mov qword [r8], r10
 15533 0000B1AB 4983E808                	sub r8, 8
 15534 0000B1AF 4983E908                	sub r9, 8
 15535 0000B1B3 48FFC9                  	dec rcx
 15536 0000B1B6 EBE7                    	jmp .L_tc_recycle_frame_loop_0096
 15537                                  .L_tc_recycle_frame_done_0096:
 15538 0000B1B8 498D6008                	lea rsp, [r8 + 8]
 15539 0000B1BC 5D                      	pop rbp ; restore the old rbp
 15540 0000B1BD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15541 0000B1C0 C9                      	leave
 15542 0000B1C1 C22000                  	ret AND_KILL_FRAME(2)
 15543                                  .L_lambda_simple_end_005a:	; new closure is in rax
 15544 0000B1C4 48890425[21110000]      	mov qword [free_var_98], rax
 15545 0000B1CC 48B8-                   	mov rax, sob_void
 15545 0000B1CE [0000000000000000] 
 15546                                  
 15547 0000B1D6 4889C7                  	mov rdi, rax
 15548 0000B1D9 E8A6050000              	call print_sexpr_if_not_void
 15549 0000B1DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15550 0000B1E3 E847030000              	call malloc
 15551 0000B1E8 50                      	push rax
 15552 0000B1E9 BF00000000              	mov rdi, 8 * 0	; new rib
 15553 0000B1EE E83C030000              	call malloc
 15554 0000B1F3 50                      	push rax
 15555 0000B1F4 BF08000000              	mov rdi, 8 * 1	; extended env
 15556 0000B1F9 E831030000              	call malloc
 15557 0000B1FE 488B7D10                	mov rdi, ENV
 15558 0000B202 BE00000000              	mov rsi, 0
 15559 0000B207 BA01000000              	mov rdx, 1
 15560                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 15561 0000B20C 4883FE00                	cmp rsi, 0
 15562 0000B210 7410                    	je .L_lambda_simple_env_end_005b
 15563 0000B212 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15564 0000B216 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15565 0000B21A 48FFC6                  	inc rsi
 15566 0000B21D 48FFC2                  	inc rdx
 15567 0000B220 EBEA                    	jmp .L_lambda_simple_env_loop_005b
 15568                                  .L_lambda_simple_env_end_005b:
 15569 0000B222 5B                      	pop rbx
 15570 0000B223 BE00000000              	mov rsi, 0
 15571                                  .L_lambda_simple_params_loop_005b:	; copy params
 15572 0000B228 4883FE00                	cmp rsi, 0
 15573 0000B22C 740E                    	je .L_lambda_simple_params_end_005b
 15574 0000B22E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15575 0000B233 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15576 0000B237 48FFC6                  	inc rsi
 15577 0000B23A EBEC                    	jmp .L_lambda_simple_params_loop_005b
 15578                                  .L_lambda_simple_params_end_005b:
 15579 0000B23C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15580 0000B23F 4889C3                  	mov rbx, rax
 15581 0000B242 58                      	pop rax
 15582 0000B243 C60004                  	mov byte [rax], T_closure
 15583 0000B246 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15584 0000B24A 48C74009[54B20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 15585 0000B252 EB1F                    	jmp .L_lambda_simple_end_005b
 15586                                  .L_lambda_simple_code_005b:	; lambda-simple body
 15587 0000B254 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15588 0000B25A 740B                    	je .L_lambda_simple_arity_check_ok_005b
 15589 0000B25C FF742410                	push qword [rsp + 8 * 2]
 15590 0000B260 6A01                    	push 1
 15591 0000B262 E981020000              	jmp L_error_incorrect_arity_simple
 15592                                  .L_lambda_simple_arity_check_ok_005b:
 15593 0000B267 C8000000                	enter 0, 0
 15594 0000B26B 488B4520                	mov rax, PARAM(0)	; param x
 15595 0000B26F C9                      	leave
 15596 0000B270 C21800                  	ret AND_KILL_FRAME(1)
 15597                                  .L_lambda_simple_end_005b:	; new closure is in rax
 15598 0000B273 48890425[D00C0000]      	mov qword [free_var_33], rax
 15599 0000B27B 48B8-                   	mov rax, sob_void
 15599 0000B27D [0000000000000000] 
 15600                                  
 15601 0000B285 4889C7                  	mov rdi, rax
 15602 0000B288 E8F7040000              	call print_sexpr_if_not_void
 15603 0000B28D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15604 0000B292 E898020000              	call malloc
 15605 0000B297 50                      	push rax
 15606 0000B298 BF00000000              	mov rdi, 8 * 0	; new rib
 15607 0000B29D E88D020000              	call malloc
 15608 0000B2A2 50                      	push rax
 15609 0000B2A3 BF08000000              	mov rdi, 8 * 1	; extended env
 15610 0000B2A8 E882020000              	call malloc
 15611 0000B2AD 488B7D10                	mov rdi, ENV
 15612 0000B2B1 BE00000000              	mov rsi, 0
 15613 0000B2B6 BA01000000              	mov rdx, 1
 15614                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 15615 0000B2BB 4883FE00                	cmp rsi, 0
 15616 0000B2BF 7410                    	je .L_lambda_simple_env_end_005c
 15617 0000B2C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15618 0000B2C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15619 0000B2C9 48FFC6                  	inc rsi
 15620 0000B2CC 48FFC2                  	inc rdx
 15621 0000B2CF EBEA                    	jmp .L_lambda_simple_env_loop_005c
 15622                                  .L_lambda_simple_env_end_005c:
 15623 0000B2D1 5B                      	pop rbx
 15624 0000B2D2 BE00000000              	mov rsi, 0
 15625                                  .L_lambda_simple_params_loop_005c:	; copy params
 15626 0000B2D7 4883FE00                	cmp rsi, 0
 15627 0000B2DB 740E                    	je .L_lambda_simple_params_end_005c
 15628 0000B2DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15629 0000B2E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15630 0000B2E6 48FFC6                  	inc rsi
 15631 0000B2E9 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 15632                                  .L_lambda_simple_params_end_005c:
 15633 0000B2EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15634 0000B2EE 4889C3                  	mov rbx, rax
 15635 0000B2F1 58                      	pop rax
 15636 0000B2F2 C60004                  	mov byte [rax], T_closure
 15637 0000B2F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15638 0000B2F9 48C74009[03B30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 15639 0000B301 EB2C                    	jmp .L_lambda_simple_end_005c
 15640                                  .L_lambda_simple_code_005c:	; lambda-simple body
 15641 0000B303 48837C241000            	cmp qword [rsp + 8 * 2], 0
 15642 0000B309 740B                    	je .L_lambda_simple_arity_check_ok_005c
 15643 0000B30B FF742410                	push qword [rsp + 8 * 2]
 15644 0000B30F 6A00                    	push 0
 15645 0000B311 E9D2010000              	jmp L_error_incorrect_arity_simple
 15646                                  .L_lambda_simple_arity_check_ok_005c:
 15647 0000B316 C8000000                	enter 0, 0
 15648 0000B31A 488B0425[EF0F0000]      	mov rax, qword [free_var_80]	; free var free_var
 15649 0000B322 803805                  	cmp byte [rax], T_undefined
 15650 0000B325 0F84D7000000            	je L_error_fvar_undefined
 15651 0000B32B C9                      	leave
 15652 0000B32C C21000                  	ret AND_KILL_FRAME(0)
 15653                                  .L_lambda_simple_end_005c:	; new closure is in rax
 15654 0000B32F 48890425[00100000]      	mov qword [free_var_81], rax
 15655 0000B337 48B8-                   	mov rax, sob_void
 15655 0000B339 [0000000000000000] 
 15656                                  
 15657 0000B341 4889C7                  	mov rdi, rax
 15658 0000B344 E83B040000              	call print_sexpr_if_not_void
 15659                                  	; preparing a non-tail-call
 15660 0000B349 488B0425[D00C0000]      	mov rax, qword [free_var_33]	; free var arg_lambda
 15661 0000B351 803805                  	cmp byte [rax], T_undefined
 15662 0000B354 0F84A8000000            	je L_error_fvar_undefined
 15663 0000B35A 50                      	push rax
 15664 0000B35B 48B8-                   	mov rax, L_constants + 2692
 15664 0000B35D [840A000000000000] 
 15665 0000B365 50                      	push rax
 15666 0000B366 6A02                    	push 2	; arg count
 15667 0000B368 488B0425[21110000]      	mov rax, qword [free_var_98]	; free var tail_lambda
 15668 0000B370 803805                  	cmp byte [rax], T_undefined
 15669 0000B373 0F8489000000            	je L_error_fvar_undefined
 15670 0000B379 803804                  	cmp byte [rax], T_closure
 15671 0000B37C 0F8504010000            	jne L_error_non_closure
 15672 0000B382 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15673 0000B385 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15674                                  
 15675 0000B388 4889C7                  	mov rdi, rax
 15676 0000B38B E8F4030000              	call print_sexpr_if_not_void
 15677                                  	; preparing a non-tail-call
 15678 0000B390 48B8-                   	mov rax, L_constants + 2710
 15678 0000B392 [960A000000000000] 
 15679 0000B39A 50                      	push rax
 15680 0000B39B 48B8-                   	mov rax, L_constants + 2701
 15680 0000B39D [8D0A000000000000] 
 15681 0000B3A5 50                      	push rax
 15682 0000B3A6 6A02                    	push 2	; arg count
 15683 0000B3A8 488B0425[B00A0000]      	mov rax, qword [free_var_1]	; free var +
 15684 0000B3B0 803805                  	cmp byte [rax], T_undefined
 15685 0000B3B3 744D                    	je L_error_fvar_undefined
 15686 0000B3B5 803804                  	cmp byte [rax], T_closure
 15687 0000B3B8 0F85C8000000            	jne L_error_non_closure
 15688 0000B3BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15689 0000B3C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15690                                  Lend:
 15691 0000B3C4 4889C7                  	mov rdi, rax
 15692 0000B3C7 E8B8030000              	call print_sexpr_if_not_void
 15693                                  
 15694 0000B3CC 48BF-                           mov rdi, fmt_memory_usage
 15694 0000B3CE [DB11000000000000] 
 15695 0000B3D6 488B3425[61120000]              mov rsi, qword [top_of_memory]
 15696 0000B3DE 4881EE[00000000]                sub rsi, memory
 15697 0000B3E5 B800000000                      mov rax, 0
 15698                                          ENTER
    44 0000B3EA C8000000            <1>  enter 0, 0
    45 0000B3EE 4883E4F0            <1>  and rsp, ~15
 15699 0000B3F2 E8(00000000)                    call printf
 15700                                          LEAVE
    49 0000B3F7 C9                  <1>  leave
 15701 0000B3F8 B800000000                      mov rax, 0
 15702 0000B3FD E8(00000000)                    call exit
 15703                                  
 15704                                  L_error_fvar_undefined:
 15705 0000B402 50                              push rax
 15706 0000B403 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 15707 0000B40B 48BE-                           mov rsi, fmt_undefined_free_var_1
 15707 0000B40D [4311000000000000] 
 15708 0000B415 B800000000                      mov rax, 0
 15709                                          ENTER
    44 0000B41A C8000000            <1>  enter 0, 0
    45 0000B41E 4883E4F0            <1>  and rsp, ~15
 15710 0000B422 E8(00000000)                    call fprintf
 15711                                          LEAVE
    49 0000B427 C9                  <1>  leave
 15712 0000B428 58                              pop rax
 15713 0000B429 488B4001                        mov rax, qword [rax + 1] ; string
 15714 0000B42D 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 15715 0000B431 BE01000000                      mov rsi, 1               ; sizeof(char)
 15716 0000B436 488B5001                        mov rdx, qword [rax + 1] ; string-length
 15717 0000B43A 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 15718 0000B442 B800000000                      mov rax, 0
 15719                                          ENTER
    44 0000B447 C8000000            <1>  enter 0, 0
    45 0000B44B 4883E4F0            <1>  and rsp, ~15
 15720 0000B44F E8(00000000)                    call fwrite
 15721                                          LEAVE
    49 0000B454 C9                  <1>  leave
 15722 0000B455 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 15723 0000B45D 48BE-                           mov rsi, fmt_undefined_free_var_2
 15723 0000B45F [5A11000000000000] 
 15724 0000B467 B800000000                      mov rax, 0
 15725                                          ENTER
    44 0000B46C C8000000            <1>  enter 0, 0
    45 0000B470 4883E4F0            <1>  and rsp, ~15
 15726 0000B474 E8(00000000)                    call fprintf
 15727                                          LEAVE
    49 0000B479 C9                  <1>  leave
 15728 0000B47A 48C7C0F6FFFFFF                  mov rax, -10
 15729 0000B481 E8(00000000)                    call exit
 15730                                  
 15731                                  L_error_non_closure:
 15732 0000B486 488B3C25[00000000]              mov rdi, qword [stderr]
 15733 0000B48E 48BE-                           mov rsi, fmt_non_closure
 15733 0000B490 [1112000000000000] 
 15734 0000B498 B800000000                      mov rax, 0
 15735                                          ENTER
    44 0000B49D C8000000            <1>  enter 0, 0
    45 0000B4A1 4883E4F0            <1>  and rsp, ~15
 15736 0000B4A5 E8(00000000)                    call fprintf
 15737                                          LEAVE
    49 0000B4AA C9                  <1>  leave
 15738 0000B4AB 48C7C0FEFFFFFF                  mov rax, -2
 15739 0000B4B2 E8(00000000)                    call exit
 15740                                  
 15741                                  L_error_improper_list:
 15742 0000B4B7 488B3C25[00000000]      	mov rdi, qword [stderr]
 15743 0000B4BF 48BE-                   	mov rsi, fmt_error_improper_list
 15743 0000B4C1 [3912000000000000] 
 15744 0000B4C9 B800000000              	mov rax, 0
 15745                                          ENTER
    44 0000B4CE C8000000            <1>  enter 0, 0
    45 0000B4D2 4883E4F0            <1>  and rsp, ~15
 15746 0000B4D6 E8(00000000)            	call fprintf
 15747                                          LEAVE
    49 0000B4DB C9                  <1>  leave
 15748 0000B4DC 48C7C0F9FFFFFF          	mov rax, -7
 15749 0000B4E3 E8(00000000)            	call exit
 15750                                  
 15751                                  L_error_incorrect_arity_simple:
 15752 0000B4E8 488B3C25[00000000]              mov rdi, qword [stderr]
 15753 0000B4F0 48BE-                           mov rsi, fmt_incorrect_arity_simple
 15753 0000B4F2 [7C11000000000000] 
 15754 0000B4FA EB12                            jmp L_error_incorrect_arity_common
 15755                                  L_error_incorrect_arity_opt:
 15756 0000B4FC 488B3C25[00000000]              mov rdi, qword [stderr]
 15757 0000B504 48BE-                           mov rsi, fmt_incorrect_arity_opt
 15757 0000B506 [A711000000000000] 
 15758                                  L_error_incorrect_arity_common:
 15759 0000B50E 5A                              pop rdx
 15760 0000B50F 59                              pop rcx
 15761 0000B510 B800000000                      mov rax, 0
 15762                                          ENTER
    44 0000B515 C8000000            <1>  enter 0, 0
    45 0000B519 4883E4F0            <1>  and rsp, ~15
 15763 0000B51D E8(00000000)                    call fprintf
 15764                                          LEAVE
    49 0000B522 C9                  <1>  leave
 15765 0000B523 48C7C0FAFFFFFF                  mov rax, -6
 15766 0000B52A E8(00000000)                    call exit
 15767                                  
 15768                                  section .data
 15769                                  fmt_undefined_free_var_1:
 15770 00001143 212121205468652066-             db `!!! The free variable \0`
 15770 0000114C 726565207661726961-
 15770 00001155 626C652000         
 15771                                  fmt_undefined_free_var_2:
 15772 0000115A 207761732075736564-             db ` was used before it was defined.\n\0`
 15772 00001163 206265666F72652069-
 15772 0000116C 742077617320646566-
 15772 00001175 696E65642E0A00     
 15773                                  fmt_incorrect_arity_simple:
 15774 0000117C 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 15774 00001185 74656420256C642061-
 15774 0000118E 7267756D656E74732C-
 15774 00001197 206275742067697665-
 15774 000011A0 6E20256C640A00     
 15775                                  fmt_incorrect_arity_opt:
 15776 000011A7 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 15776 000011B0 746564206174206C65-
 15776 000011B9 61737420256C642061-
 15776 000011C2 7267756D656E74732C-
 15776 000011CB 206275742067697665-
 15776 000011D4 6E20256C640A00     
 15777                                  fmt_memory_usage:
 15778 000011DB 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 15778 000011E4 20256C642062797465-
 15778 000011ED 73206F662064796E61-
 15778 000011F6 6D6963616C6C792D61-
 15778 000011FF 6C6C6F636174656420-
 15778 00001208 6D656D6F72790A0A00 
 15779                                  fmt_non_closure:
 15780 00001211 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 15780 0000121A 7074696E6720746F20-
 15780 00001223 6170706C792061206E-
 15780 0000122C 6F6E2D636C6F737572-
 15780 00001235 65210A00           
 15781                                  fmt_error_improper_list:
 15782 00001239 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 15782 00001242 7267756D656E742069-
 15782 0000124B 73206E6F7420612070-
 15782 00001254 726F706572206C6973-
 15782 0000125D 74210A00           
 15783                                  
 15784                                  section .bss
 15785                                  memory:
 15786 00000000 <res 40000000h>         	resb gbytes(1)
 15787                                  
 15788                                  section .data
 15789                                  top_of_memory:
 15790 00001261 [0000000000000000]              dq memory
 15791                                  
 15792                                  section .text
 15793                                  malloc:
 15794 0000B52F 488B0425[61120000]              mov rax, qword [top_of_memory]
 15795 0000B537 48013C25[61120000]              add qword [top_of_memory], rdi
 15796 0000B53F C3                              ret
 15797                                  
 15798                                  L_code_ptr_return:
 15799 0000B540 48837C241002            	cmp qword [rsp + 8*2], 2
 15800 0000B546 0F85E31C0000            	jne L_error_arg_count_2
 15801 0000B54C 488B4C2418              	mov rcx, qword [rsp + 8*3]
 15802                                  	assert_integer(rcx)
    53 0000B551 803911              <1>  cmp byte [%1], %2
    54 0000B554 0F85741D0000        <1>  jne L_error_incorrect_type
 15803 0000B55A 488B4901                	mov rcx, qword [rcx + 1]
 15804 0000B55E 4883F900                	cmp rcx, 0
 15805 0000B562 0F8CFB1B0000            	jl L_error_integer_range
 15806 0000B568 488B442420              	mov rax, qword [rsp + 8*4]
 15807                                  .L0:
 15808 0000B56D 4883F900                        cmp rcx, 0
 15809 0000B571 7409                            je .L1
 15810 0000B573 488B6D00                	mov rbp, qword [rbp]
 15811 0000B577 48FFC9                  	dec rcx
 15812 0000B57A 7FF1                    	jg .L0
 15813                                  .L1:
 15814 0000B57C 4889EC                  	mov rsp, rbp
 15815 0000B57F 5D                      	pop rbp
 15816 0000B580 5B                              pop rbx
 15817 0000B581 488B4C2408                      mov rcx, qword [rsp + 8*1]
 15818 0000B586 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 15819 0000B58B FFE3                    	jmp rbx
 15820                                  
 15821                                  L_code_ptr_make_list:
 15822 0000B58D C8000000                	enter 0, 0
 15823 0000B591 48837D1801                      cmp COUNT, 1
 15824 0000B596 740C                            je .L0
 15825 0000B598 48837D1802                      cmp COUNT, 2
 15826 0000B59D 7411                            je .L1
 15827 0000B59F E9C01C0000                      jmp L_error_arg_count_12
 15828                                  .L0:
 15829 0000B5A4 49B9-                           mov r9, sob_void
 15829 0000B5A6 [0000000000000000] 
 15830 0000B5AE EB04                            jmp .L2
 15831                                  .L1:
 15832 0000B5B0 4C8B4D28                        mov r9, PARAM(1)
 15833                                  .L2:
 15834 0000B5B4 488B4D20                        mov rcx, PARAM(0)
 15835                                          assert_integer(rcx)
    53 0000B5B8 803911              <1>  cmp byte [%1], %2
    54 0000B5BB 0F850D1D0000        <1>  jne L_error_incorrect_type
 15836 0000B5C1 488B4901                        mov rcx, qword [rcx + 1]
 15837 0000B5C5 4883F900                        cmp rcx, 0
 15838 0000B5C9 0F8CC51B0000                    jl L_error_arg_negative
 15839 0000B5CF 49B8-                           mov r8, sob_nil
 15839 0000B5D1 [0100000000000000] 
 15840                                  .L3:
 15841 0000B5D9 4883F900                        cmp rcx, 0
 15842 0000B5DD 7E1D                            jle .L4
 15843 0000B5DF BF11000000                      mov rdi, 1 + 8 + 8
 15844 0000B5E4 E846FFFFFF                      call malloc
 15845 0000B5E9 C60021                          mov byte [rax], T_pair
 15846 0000B5EC 4C894801                        mov qword [rax + 1], r9
 15847 0000B5F0 4C894009                        mov qword [rax + 1 + 8], r8
 15848 0000B5F4 4989C0                          mov r8, rax
 15849 0000B5F7 48FFC9                          dec rcx
 15850 0000B5FA EBDD                            jmp .L3
 15851                                  .L4:
 15852 0000B5FC 4C89C0                          mov rax, r8
 15853 0000B5FF 48837D1802                      cmp COUNT, 2
 15854 0000B604 7404                            je .L5
 15855 0000B606 C9                              leave
 15856 0000B607 C21800                          ret AND_KILL_FRAME(1)
 15857                                  .L5:
 15858 0000B60A C9                      	leave
 15859 0000B60B C22000                  	ret AND_KILL_FRAME(2)
 15860                                  
 15861                                  L_code_ptr_is_primitive:
 15862 0000B60E C8000000                	enter 0, 0
 15863 0000B612 48837D1801              	cmp COUNT, 1
 15864 0000B617 0F85DD1B0000            	jne L_error_arg_count_1
 15865 0000B61D 488B4520                	mov rax, PARAM(0)
 15866                                  	assert_closure(rax)
    53 0000B621 803804              <1>  cmp byte [%1], %2
    54 0000B624 0F85A41C0000        <1>  jne L_error_incorrect_type
 15867 0000B62A 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 15868 0000B62F 750C                    	jne .L_false
 15869 0000B631 48B8-                   	mov rax, sob_boolean_true
 15869 0000B633 [0300000000000000] 
 15870 0000B63B EB0A                    	jmp .L_end
 15871                                  .L_false:
 15872 0000B63D 48B8-                   	mov rax, sob_boolean_false
 15872 0000B63F [0200000000000000] 
 15873                                  .L_end:
 15874 0000B647 C9                      	leave
 15875 0000B648 C21800                  	ret AND_KILL_FRAME(1)
 15876                                  
 15877                                  L_code_ptr_length:
 15878 0000B64B C8000000                	enter 0, 0
 15879 0000B64F 48837D1801              	cmp COUNT, 1
 15880 0000B654 0F85A01B0000            	jne L_error_arg_count_1
 15881 0000B65A 488B5D20                	mov rbx, PARAM(0)
 15882 0000B65E BF00000000              	mov rdi, 0
 15883                                  .L:
 15884 0000B663 803B01                  	cmp byte [rbx], T_nil
 15885 0000B666 7412                    	je .L_end
 15886                                  	assert_pair(rbx)
    53 0000B668 803B21              <1>  cmp byte [%1], %2
    54 0000B66B 0F855D1C0000        <1>  jne L_error_incorrect_type
 15887 0000B671 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 15888 0000B675 48FFC7                  	inc rdi
 15889 0000B678 EBE9                    	jmp .L
 15890                                  .L_end:
 15891 0000B67A E8CA1A0000              	call make_integer
 15892 0000B67F C9                      	leave
 15893 0000B680 C21800                  	ret AND_KILL_FRAME(1)
 15894                                  
 15895                                  L_code_ptr_break:
 15896 0000B683 48837C241000                    cmp qword [rsp + 8 * 2], 0
 15897 0000B689 0F85361B0000                    jne L_error_arg_count_0
 15898 0000B68F CC                              int3
 15899 0000B690 48B8-                           mov rax, sob_void
 15899 0000B692 [0000000000000000] 
 15900 0000B69A C21000                          ret AND_KILL_FRAME(0)        
 15901                                  
 15902                                  L_code_ptr_frame:
 15903 0000B69D C8000000                        enter 0, 0
 15904 0000B6A1 48837D1800                      cmp COUNT, 0
 15905 0000B6A6 0F85191B0000                    jne L_error_arg_count_0
 15906                                  
 15907 0000B6AC 48BF-                           mov rdi, fmt_frame
 15907 0000B6AE [6912000000000000] 
 15908 0000B6B6 488B7500                        mov rsi, qword [rbp]    ; old rbp
 15909 0000B6BA 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 15910 0000B6BE 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 15911 0000B6C2 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 15912 0000B6C6 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 15913 0000B6CA 6A00                            push 0
 15914 0000B6CC 4151                            push r9
 15915 0000B6CE 4150                            push r8                   ; we'll use it when printing the params
 15916 0000B6D0 B800000000                      mov rax, 0
 15917                                          
 15918                                          ENTER
    44 0000B6D5 C8000000            <1>  enter 0, 0
    45 0000B6D9 4883E4F0            <1>  and rsp, ~15
 15919 0000B6DD E8(00000000)                    call printf
 15920                                          LEAVE
    49 0000B6E2 C9                  <1>  leave
 15921                                  
 15922                                  .L:
 15923 0000B6E3 488B0C24                        mov rcx, qword [rsp]
 15924 0000B6E7 4883F900                        cmp rcx, 0
 15925 0000B6EB 7467                            je .L_out
 15926 0000B6ED 48BF-                           mov rdi, fmt_frame_param_prefix
 15926 0000B6EF [A212000000000000] 
 15927 0000B6F7 488B742410                      mov rsi, qword [rsp + 8*2]
 15928 0000B6FC B800000000                      mov rax, 0
 15929                                          
 15930                                          ENTER
    44 0000B701 C8000000            <1>  enter 0, 0
    45 0000B705 4883E4F0            <1>  and rsp, ~15
 15931 0000B709 E8(00000000)                    call printf
 15932                                          LEAVE
    49 0000B70E C9                  <1>  leave
 15933                                  
 15934 0000B70F 488B0C24                        mov rcx, qword [rsp]
 15935 0000B713 48FFC9                          dec rcx
 15936 0000B716 48890C24                        mov qword [rsp], rcx    ; dec arg count
 15937 0000B71A 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 15938 0000B71F 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 15939 0000B724 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 15940 0000B728 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 15941 0000B72D 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 15942 0000B730 E87B000000                      call print_sexpr
 15943 0000B735 48BF-                           mov rdi, fmt_newline
 15943 0000B737 [CE12000000000000] 
 15944 0000B73F B800000000                      mov rax, 0
 15945                                          ENTER
    44 0000B744 C8000000            <1>  enter 0, 0
    45 0000B748 4883E4F0            <1>  and rsp, ~15
 15946 0000B74C E8(00000000)                    call printf
 15947                                          LEAVE
    49 0000B751 C9                  <1>  leave
 15948 0000B752 EB8F                            jmp .L
 15949                                  .L_out:
 15950 0000B754 48BF-                           mov rdi, fmt_frame_continue
 15950 0000B756 [B312000000000000] 
 15951 0000B75E B800000000                      mov rax, 0
 15952                                          ENTER
    44 0000B763 C8000000            <1>  enter 0, 0
    45 0000B767 4883E4F0            <1>  and rsp, ~15
 15953 0000B76B E8(00000000)                    call printf
 15954 0000B770 E8(00000000)                    call getchar
 15955                                          LEAVE
    49 0000B775 C9                  <1>  leave
 15956                                          
 15957 0000B776 48B8-                           mov rax, sob_void
 15957 0000B778 [0000000000000000] 
 15958 0000B780 C9                              leave
 15959 0000B781 C21000                          ret AND_KILL_FRAME(0)
 15960                                          
 15961                                  print_sexpr_if_not_void:
 15962 0000B784 4881FF[00000000]        	cmp rdi, sob_void
 15963 0000B78B 7422                    	je .done
 15964 0000B78D E81E000000              	call print_sexpr
 15965 0000B792 48BF-                   	mov rdi, fmt_newline
 15965 0000B794 [CE12000000000000] 
 15966 0000B79C B800000000              	mov rax, 0
 15967                                  	ENTER
    44 0000B7A1 C8000000            <1>  enter 0, 0
    45 0000B7A5 4883E4F0            <1>  and rsp, ~15
 15968 0000B7A9 E8(00000000)            	call printf
 15969                                  	LEAVE
    49 0000B7AE C9                  <1>  leave
 15970                                  .done:
 15971 0000B7AF C3                      	ret
 15972                                  
 15973                                  section .data
 15974                                  fmt_frame:
 15975 00001269 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 15975 00001272 207265742061646472-
 15975 0000127B 203D2025703B206C65-
 15975 00001284 7820656E76203D2025-
 15975 0000128D 703B20706172616D20-
 15975 00001296 636F756E74203D2025-
 15975 0000129F 640A00             
 15976                                  fmt_frame_param_prefix:
 15977 000012A2 3D3D5B706172616D20-             db `==[param %d]==> \0`
 15977 000012AB 25645D3D3D3E2000   
 15978                                  fmt_frame_continue:
 15979 000012B3 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 15979 000012BC 723E20746F20636F6E-
 15979 000012C5 74696E75652E2E2E00 
 15980                                  fmt_newline:
 15981 000012CE 0A00                    	db `\n\0`
 15982                                  fmt_void:
 15983 000012D0 233C766F69643E00        	db `#<void>\0`
 15984                                  fmt_nil:
 15985 000012D8 282900                  	db `()\0`
 15986                                  fmt_boolean_false:
 15987 000012DB 236600                  	db `#f\0`
 15988                                  fmt_boolean_true:
 15989 000012DE 237400                  	db `#t\0`
 15990                                  fmt_char_backslash:
 15991 000012E1 235C5C00                	db `#\\\\\0`
 15992                                  fmt_char_dquote:
 15993 000012E5 235C2200                	db `#\\"\0`
 15994                                  fmt_char_simple:
 15995 000012E9 235C256300              	db `#\\%c\0`
 15996                                  fmt_char_null:
 15997 000012EE 235C6E756C00            	db `#\\nul\0`
 15998                                  fmt_char_bell:
 15999 000012F4 235C62656C6C00          	db `#\\bell\0`
 16000                                  fmt_char_backspace:
 16001 000012FB 235C6261636B737061-     	db `#\\backspace\0`
 16001 00001304 636500             
 16002                                  fmt_char_tab:
 16003 00001307 235C74616200            	db `#\\tab\0`
 16004                                  fmt_char_newline:
 16005 0000130D 235C6E65776C696E65-     	db `#\\newline\0`
 16005 00001316 00                 
 16006                                  fmt_char_formfeed:
 16007 00001317 235C7061676500          	db `#\\page\0`
 16008                                  fmt_char_return:
 16009 0000131E 235C72657475726E00      	db `#\\return\0`
 16010                                  fmt_char_escape:
 16011 00001327 235C65736300            	db `#\\esc\0`
 16012                                  fmt_char_space:
 16013 0000132D 235C737061636500        	db `#\\space\0`
 16014                                  fmt_char_hex:
 16015 00001335 235C782530325800        	db `#\\x%02X\0`
 16016                                  fmt_gensym:
 16017 0000133D 47256C6400                      db `G%ld\0`
 16018                                  fmt_closure:
 16019 00001342 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 16019 0000134B 206174203078253038-
 16019 00001354 5820656E763D307825-
 16019 0000135D 30385820636F64653D-
 16019 00001366 3078253038583E00   
 16020                                  fmt_lparen:
 16021 0000136E 2800                    	db `(\0`
 16022                                  fmt_dotted_pair:
 16023 00001370 202E2000                	db ` . \0`
 16024                                  fmt_rparen:
 16025 00001374 2900                    	db `)\0`
 16026                                  fmt_space:
 16027 00001376 2000                    	db ` \0`
 16028                                  fmt_empty_vector:
 16029 00001378 23282900                	db `#()\0`
 16030                                  fmt_vector:
 16031 0000137C 232800                  	db `#(\0`
 16032                                  fmt_real:
 16033 0000137F 256600                  	db `%f\0`
 16034                                  fmt_fraction:
 16035 00001382 256C642F256C6400        	db `%ld/%ld\0`
 16036                                  fmt_zero:
 16037 0000138A 3000                    	db `0\0`
 16038                                  fmt_int:
 16039 0000138C 256C6400                	db `%ld\0`
 16040                                  fmt_unknown_scheme_object_error:
 16041 00001390 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 16041 00001399 6F723A20556E6B6E6F-
 16041 000013A2 776E20536368656D65-
 16041 000013AB 2D6F626A6563742028-
 16041 000013B4 525454492030782530-
 16041 000013BD 32582920           
 16042 000013C1 617420616464726573-     	db `at address 0x%08X\n\n\0`
 16042 000013CA 73203078253038580A-
 16042 000013D3 0A00               
 16043                                  fmt_dquote:
 16044 000013D5 2200                    	db `\"\0`
 16045                                  fmt_string_char:
 16046 000013D7 256300                          db `%c\0`
 16047                                  fmt_string_char_7:
 16048 000013DA 5C6100                          db `\\a\0`
 16049                                  fmt_string_char_8:
 16050 000013DD 5C6200                          db `\\b\0`
 16051                                  fmt_string_char_9:
 16052 000013E0 5C7400                          db `\\t\0`
 16053                                  fmt_string_char_10:
 16054 000013E3 5C6E00                          db `\\n\0`
 16055                                  fmt_string_char_11:
 16056 000013E6 5C7600                          db `\\v\0`
 16057                                  fmt_string_char_12:
 16058 000013E9 5C6600                          db `\\f\0`
 16059                                  fmt_string_char_13:
 16060 000013EC 5C7200                          db `\\r\0`
 16061                                  fmt_string_char_34:
 16062 000013EF 5C2200                          db `\\"\0`
 16063                                  fmt_string_char_92:
 16064 000013F2 5C5C00                          db `\\\\\0`
 16065                                  fmt_string_char_hex:
 16066 000013F5 5C7825583B00                    db `\\x%X;\0`
 16067                                  
 16068                                  section .text
 16069                                  
 16070                                  print_sexpr:
 16071 0000B7B0 C8000000                	enter 0, 0
 16072 0000B7B4 8A07                    	mov al, byte [rdi]
 16073 0000B7B6 3C00                    	cmp al, T_void
 16074 0000B7B8 7465                    	je .Lvoid
 16075 0000B7BA 3C01                    	cmp al, T_nil
 16076 0000B7BC 7470                    	je .Lnil
 16077 0000B7BE 3C09                    	cmp al, T_boolean_false
 16078 0000B7C0 747B                    	je .Lboolean_false
 16079 0000B7C2 3C0A                    	cmp al, T_boolean_true
 16080 0000B7C4 0F8482000000            	je .Lboolean_true
 16081 0000B7CA 3C02                    	cmp al, T_char
 16082 0000B7CC 0F8489000000            	je .Lchar
 16083 0000B7D2 3C41                    	cmp al, T_interned_symbol
 16084 0000B7D4 0F84CB010000            	je .Linterned_symbol
 16085 0000B7DA 3C42                            cmp al, T_uninterned_symbol
 16086 0000B7DC 0F84EF010000                    je .Luninterned_symbol
 16087 0000B7E2 3C21                    	cmp al, T_pair
 16088 0000B7E4 0F84FA010000            	je .Lpair
 16089 0000B7EA 3C22                    	cmp al, T_vector
 16090 0000B7EC 0F84C3020000            	je .Lvector
 16091 0000B7F2 3C04                    	cmp al, T_closure
 16092 0000B7F4 0F8491010000            	je .Lclosure
 16093 0000B7FA 3C13                    	cmp al, T_real
 16094 0000B7FC 0F8454030000            	je .Lreal
 16095 0000B802 3C12                    	cmp al, T_fraction
 16096 0000B804 0F847A030000            	je .Lfraction
 16097 0000B80A 3C11                    	cmp al, T_integer
 16098 0000B80C 0F84B3030000            	je .Linteger
 16099 0000B812 3C03                    	cmp al, T_string
 16100 0000B814 0F84BE030000            	je .Lstring
 16101                                  
 16102 0000B81A E9F6040000              	jmp .Lunknown_sexpr_type
 16103                                  
 16104                                  .Lvoid:
 16105 0000B81F 48BF-                   	mov rdi, fmt_void
 16105 0000B821 [D012000000000000] 
 16106 0000B829 E91A050000              	jmp .Lemit
 16107                                  
 16108                                  .Lnil:
 16109 0000B82E 48BF-                   	mov rdi, fmt_nil
 16109 0000B830 [D812000000000000] 
 16110 0000B838 E90B050000              	jmp .Lemit
 16111                                  
 16112                                  .Lboolean_false:
 16113 0000B83D 48BF-                   	mov rdi, fmt_boolean_false
 16113 0000B83F [DB12000000000000] 
 16114 0000B847 E9FC040000              	jmp .Lemit
 16115                                  
 16116                                  .Lboolean_true:
 16117 0000B84C 48BF-                   	mov rdi, fmt_boolean_true
 16117 0000B84E [DE12000000000000] 
 16118 0000B856 E9ED040000              	jmp .Lemit
 16119                                  
 16120                                  .Lchar:
 16121 0000B85B 8A4701                  	mov al, byte [rdi + 1]
 16122 0000B85E 3C20                    	cmp al, ' '
 16123 0000B860 7E28                    	jle .Lchar_whitespace
 16124 0000B862 3C5C                    	cmp al, 92 		; backslash
 16125 0000B864 0F847C000000            	je .Lchar_backslash
 16126 0000B86A 3C22                    	cmp al, '"'
 16127 0000B86C 0F8483000000            	je .Lchar_dquote
 16128 0000B872 4825FF000000            	and rax, 255
 16129 0000B878 48BF-                   	mov rdi, fmt_char_simple
 16129 0000B87A [E912000000000000] 
 16130 0000B882 4889C6                  	mov rsi, rax
 16131 0000B885 E9BE040000              	jmp .Lemit
 16132                                  
 16133                                  .Lchar_whitespace:
 16134 0000B88A 3C00                    	cmp al, 0
 16135 0000B88C 7476                    	je .Lchar_null
 16136 0000B88E 3C07                    	cmp al, 7
 16137 0000B890 0F847D000000            	je .Lchar_bell
 16138 0000B896 3C08                    	cmp al, 8
 16139 0000B898 0F8484000000            	je .Lchar_backspace
 16140 0000B89E 3C09                    	cmp al, 9
 16141 0000B8A0 0F848B000000            	je .Lchar_tab
 16142 0000B8A6 3C0A                    	cmp al, 10
 16143 0000B8A8 0F8492000000            	je .Lchar_newline
 16144 0000B8AE 3C0C                    	cmp al, 12
 16145 0000B8B0 0F8499000000            	je .Lchar_formfeed
 16146 0000B8B6 3C0D                    	cmp al, 13
 16147 0000B8B8 0F84A0000000            	je .Lchar_return
 16148 0000B8BE 3C1B                    	cmp al, 27
 16149 0000B8C0 0F84A7000000            	je .Lchar_escape
 16150 0000B8C6 4825FF000000            	and rax, 255
 16151 0000B8CC 3C20                    	cmp al, ' '
 16152 0000B8CE 0F84A8000000            	je .Lchar_space
 16153 0000B8D4 48BF-                   	mov rdi, fmt_char_hex
 16153 0000B8D6 [3513000000000000] 
 16154 0000B8DE 4889C6                  	mov rsi, rax
 16155 0000B8E1 E962040000              	jmp .Lemit	
 16156                                  
 16157                                  .Lchar_backslash:
 16158 0000B8E6 48BF-                   	mov rdi, fmt_char_backslash
 16158 0000B8E8 [E112000000000000] 
 16159 0000B8F0 E953040000              	jmp .Lemit
 16160                                  
 16161                                  .Lchar_dquote:
 16162 0000B8F5 48BF-                   	mov rdi, fmt_char_dquote
 16162 0000B8F7 [E512000000000000] 
 16163 0000B8FF E944040000              	jmp .Lemit
 16164                                  
 16165                                  .Lchar_null:
 16166 0000B904 48BF-                   	mov rdi, fmt_char_null
 16166 0000B906 [EE12000000000000] 
 16167 0000B90E E935040000              	jmp .Lemit
 16168                                  
 16169                                  .Lchar_bell:
 16170 0000B913 48BF-                   	mov rdi, fmt_char_bell
 16170 0000B915 [F412000000000000] 
 16171 0000B91D E926040000              	jmp .Lemit
 16172                                  
 16173                                  .Lchar_backspace:
 16174 0000B922 48BF-                   	mov rdi, fmt_char_backspace
 16174 0000B924 [FB12000000000000] 
 16175 0000B92C E917040000              	jmp .Lemit
 16176                                  
 16177                                  .Lchar_tab:
 16178 0000B931 48BF-                   	mov rdi, fmt_char_tab
 16178 0000B933 [0713000000000000] 
 16179 0000B93B E908040000              	jmp .Lemit
 16180                                  
 16181                                  .Lchar_newline:
 16182 0000B940 48BF-                   	mov rdi, fmt_char_newline
 16182 0000B942 [0D13000000000000] 
 16183 0000B94A E9F9030000              	jmp .Lemit
 16184                                  
 16185                                  .Lchar_formfeed:
 16186 0000B94F 48BF-                   	mov rdi, fmt_char_formfeed
 16186 0000B951 [1713000000000000] 
 16187 0000B959 E9EA030000              	jmp .Lemit
 16188                                  
 16189                                  .Lchar_return:
 16190 0000B95E 48BF-                   	mov rdi, fmt_char_return
 16190 0000B960 [1E13000000000000] 
 16191 0000B968 E9DB030000              	jmp .Lemit
 16192                                  
 16193                                  .Lchar_escape:
 16194 0000B96D 48BF-                   	mov rdi, fmt_char_escape
 16194 0000B96F [2713000000000000] 
 16195 0000B977 E9CC030000              	jmp .Lemit
 16196                                  
 16197                                  .Lchar_space:
 16198 0000B97C 48BF-                   	mov rdi, fmt_char_space
 16198 0000B97E [2D13000000000000] 
 16199 0000B986 E9BD030000              	jmp .Lemit
 16200                                  
 16201                                  .Lclosure:
 16202 0000B98B 4889FE                  	mov rsi, qword rdi
 16203 0000B98E 48BF-                   	mov rdi, fmt_closure
 16203 0000B990 [4213000000000000] 
 16204 0000B998 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 16205 0000B99C 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 16206 0000B9A0 E9A3030000              	jmp .Lemit
 16207                                  
 16208                                  .Linterned_symbol:
 16209 0000B9A5 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 16210 0000B9A9 BE01000000              	mov rsi, 1		 ; size = 1 byte
 16211 0000B9AE 488B5701                	mov rdx, qword [rdi + 1] ; length
 16212 0000B9B2 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 16213 0000B9B6 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 16214                                  	ENTER
    44 0000B9BE C8000000            <1>  enter 0, 0
    45 0000B9C2 4883E4F0            <1>  and rsp, ~15
 16215 0000B9C6 E8(00000000)            	call fwrite
 16216                                  	LEAVE
    49 0000B9CB C9                  <1>  leave
 16217 0000B9CC E98C030000              	jmp .Lend
 16218                                  
 16219                                  .Luninterned_symbol:
 16220 0000B9D1 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 16221 0000B9D5 48BF-                           mov rdi, fmt_gensym
 16221 0000B9D7 [3D13000000000000] 
 16222 0000B9DF E964030000                      jmp .Lemit
 16223                                  	
 16224                                  .Lpair:
 16225 0000B9E4 57                      	push rdi
 16226 0000B9E5 48BF-                   	mov rdi, fmt_lparen
 16226 0000B9E7 [6E13000000000000] 
 16227 0000B9EF B800000000              	mov rax, 0
 16228                                          ENTER
    44 0000B9F4 C8000000            <1>  enter 0, 0
    45 0000B9F8 4883E4F0            <1>  and rsp, ~15
 16229 0000B9FC E8(00000000)            	call printf
 16230                                          LEAVE
    49 0000BA01 C9                  <1>  leave
 16231 0000BA02 488B3C24                	mov rdi, qword [rsp] 	; pair
 16232 0000BA06 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 16233 0000BA0A E8A1FDFFFF              	call print_sexpr
 16234 0000BA0F 5F                      	pop rdi 		; pair
 16235 0000BA10 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 16236                                  .Lcdr:
 16237 0000BA14 8A07                    	mov al, byte [rdi]
 16238 0000BA16 3C01                    	cmp al, T_nil
 16239 0000BA18 7447                    	je .Lcdr_nil
 16240 0000BA1A 3C21                    	cmp al, T_pair
 16241 0000BA1C 7462                    	je .Lcdr_pair
 16242 0000BA1E 57                      	push rdi
 16243 0000BA1F 48BF-                   	mov rdi, fmt_dotted_pair
 16243 0000BA21 [7013000000000000] 
 16244 0000BA29 B800000000              	mov rax, 0
 16245                                          ENTER
    44 0000BA2E C8000000            <1>  enter 0, 0
    45 0000BA32 4883E4F0            <1>  and rsp, ~15
 16246 0000BA36 E8(00000000)            	call printf
 16247                                          LEAVE
    49 0000BA3B C9                  <1>  leave
 16248 0000BA3C 5F                      	pop rdi
 16249 0000BA3D E86EFDFFFF              	call print_sexpr
 16250 0000BA42 48BF-                   	mov rdi, fmt_rparen
 16250 0000BA44 [7413000000000000] 
 16251 0000BA4C B800000000              	mov rax, 0
 16252                                          ENTER
    44 0000BA51 C8000000            <1>  enter 0, 0
    45 0000BA55 4883E4F0            <1>  and rsp, ~15
 16253 0000BA59 E8(00000000)            	call printf
 16254                                          LEAVE
    49 0000BA5E C9                  <1>  leave
 16255 0000BA5F C9                      	leave
 16256 0000BA60 C3                      	ret
 16257                                  
 16258                                  .Lcdr_nil:
 16259 0000BA61 48BF-                   	mov rdi, fmt_rparen
 16259 0000BA63 [7413000000000000] 
 16260 0000BA6B B800000000              	mov rax, 0
 16261                                          ENTER
    44 0000BA70 C8000000            <1>  enter 0, 0
    45 0000BA74 4883E4F0            <1>  and rsp, ~15
 16262 0000BA78 E8(00000000)            	call printf
 16263                                          LEAVE
    49 0000BA7D C9                  <1>  leave
 16264 0000BA7E C9                      	leave
 16265 0000BA7F C3                      	ret
 16266                                  
 16267                                  .Lcdr_pair:
 16268 0000BA80 57                      	push rdi
 16269 0000BA81 48BF-                   	mov rdi, fmt_space
 16269 0000BA83 [7613000000000000] 
 16270 0000BA8B B800000000              	mov rax, 0
 16271                                          ENTER
    44 0000BA90 C8000000            <1>  enter 0, 0
    45 0000BA94 4883E4F0            <1>  and rsp, ~15
 16272 0000BA98 E8(00000000)            	call printf
 16273                                          LEAVE
    49 0000BA9D C9                  <1>  leave
 16274 0000BA9E 488B3C24                	mov rdi, qword [rsp]
 16275 0000BAA2 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 16276 0000BAA6 E805FDFFFF              	call print_sexpr
 16277 0000BAAB 5F                      	pop rdi
 16278 0000BAAC 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 16279 0000BAB0 E95FFFFFFF              	jmp .Lcdr
 16280                                  
 16281                                  .Lvector:
 16282 0000BAB5 488B4701                	mov rax, qword [rdi + 1] ; length
 16283 0000BAB9 4883F800                	cmp rax, 0
 16284 0000BABD 0F8484000000            	je .Lvector_empty
 16285 0000BAC3 57                      	push rdi
 16286 0000BAC4 48BF-                   	mov rdi, fmt_vector
 16286 0000BAC6 [7C13000000000000] 
 16287 0000BACE B800000000              	mov rax, 0
 16288                                          ENTER
    44 0000BAD3 C8000000            <1>  enter 0, 0
    45 0000BAD7 4883E4F0            <1>  and rsp, ~15
 16289 0000BADB E8(00000000)            	call printf
 16290                                          LEAVE
    49 0000BAE0 C9                  <1>  leave
 16291 0000BAE1 488B3C24                	mov rdi, qword [rsp]
 16292 0000BAE5 FF7701                  	push qword [rdi + 1]
 16293 0000BAE8 6A01                    	push 1
 16294 0000BAEA 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 16295 0000BAEE E8BDFCFFFF              	call print_sexpr
 16296                                  .Lvector_loop:
 16297                                  	; [rsp] index
 16298                                  	; [rsp + 8*1] limit
 16299                                  	; [rsp + 8*2] vector
 16300 0000BAF3 488B0424                	mov rax, qword [rsp]
 16301 0000BAF7 483B442408              	cmp rax, qword [rsp + 8*1]
 16302 0000BAFC 7436                    	je .Lvector_end
 16303 0000BAFE 48BF-                   	mov rdi, fmt_space
 16303 0000BB00 [7613000000000000] 
 16304 0000BB08 B800000000              	mov rax, 0
 16305                                          ENTER
    44 0000BB0D C8000000            <1>  enter 0, 0
    45 0000BB11 4883E4F0            <1>  and rsp, ~15
 16306 0000BB15 E8(00000000)            	call printf
 16307                                          LEAVE
    49 0000BB1A C9                  <1>  leave
 16308 0000BB1B 488B0424                	mov rax, qword [rsp]
 16309 0000BB1F 488B5C2410              	mov rbx, qword [rsp + 8*2]
 16310 0000BB24 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 16311 0000BB29 E882FCFFFF              	call print_sexpr
 16312 0000BB2E 48FF0424                	inc qword [rsp]
 16313 0000BB32 EBBF                    	jmp .Lvector_loop
 16314                                  
 16315                                  .Lvector_end:
 16316 0000BB34 4883C418                	add rsp, 8*3
 16317 0000BB38 48BF-                   	mov rdi, fmt_rparen
 16317 0000BB3A [7413000000000000] 
 16318 0000BB42 E901020000              	jmp .Lemit	
 16319                                  
 16320                                  .Lvector_empty:
 16321 0000BB47 48BF-                   	mov rdi, fmt_empty_vector
 16321 0000BB49 [7813000000000000] 
 16322 0000BB51 E9F2010000              	jmp .Lemit
 16323                                  
 16324                                  .Lreal:
 16325 0000BB56 FF7701                  	push qword [rdi + 1]
 16326 0000BB59 F20F100424              	movsd xmm0, qword [rsp]
 16327 0000BB5E 4883C408                	add rsp, 8*1
 16328 0000BB62 48BF-                   	mov rdi, fmt_real
 16328 0000BB64 [7F13000000000000] 
 16329 0000BB6C B801000000              	mov rax, 1
 16330                                  	ENTER
    44 0000BB71 C8000000            <1>  enter 0, 0
    45 0000BB75 4883E4F0            <1>  and rsp, ~15
 16331 0000BB79 E8(00000000)            	call printf
 16332                                  	LEAVE
    49 0000BB7E C9                  <1>  leave
 16333 0000BB7F E9D9010000              	jmp .Lend
 16334                                  
 16335                                  .Lfraction:
 16336 0000BB84 488B7701                	mov rsi, qword [rdi + 1]
 16337 0000BB88 488B5709                	mov rdx, qword [rdi + 1 + 8]
 16338 0000BB8C 4883FE00                	cmp rsi, 0
 16339 0000BB90 7415                    	je .Lrat_zero
 16340 0000BB92 4883FA01                	cmp rdx, 1
 16341 0000BB96 741E                    	je .Lrat_int
 16342 0000BB98 48BF-                   	mov rdi, fmt_fraction
 16342 0000BB9A [8213000000000000] 
 16343 0000BBA2 E9A1010000              	jmp .Lemit
 16344                                  
 16345                                  .Lrat_zero:
 16346 0000BBA7 48BF-                   	mov rdi, fmt_zero
 16346 0000BBA9 [8A13000000000000] 
 16347 0000BBB1 E992010000              	jmp .Lemit
 16348                                  
 16349                                  .Lrat_int:
 16350 0000BBB6 48BF-                   	mov rdi, fmt_int
 16350 0000BBB8 [8C13000000000000] 
 16351 0000BBC0 E983010000              	jmp .Lemit
 16352                                  
 16353                                  .Linteger:
 16354 0000BBC5 488B7701                	mov rsi, qword [rdi + 1]
 16355 0000BBC9 48BF-                   	mov rdi, fmt_int
 16355 0000BBCB [8C13000000000000] 
 16356 0000BBD3 E970010000              	jmp .Lemit
 16357                                  
 16358                                  .Lstring:
 16359 0000BBD8 488D4709                	lea rax, [rdi + 1 + 8]
 16360 0000BBDC 50                      	push rax
 16361 0000BBDD FF7701                  	push qword [rdi + 1]
 16362 0000BBE0 48BF-                   	mov rdi, fmt_dquote
 16362 0000BBE2 [D513000000000000] 
 16363 0000BBEA B800000000              	mov rax, 0
 16364                                  	ENTER
    44 0000BBEF C8000000            <1>  enter 0, 0
    45 0000BBF3 4883E4F0            <1>  and rsp, ~15
 16365 0000BBF7 E8(00000000)            	call printf
 16366                                  	LEAVE
    49 0000BBFC C9                  <1>  leave
 16367                                  .Lstring_loop:
 16368                                  	; qword [rsp]: limit
 16369                                  	; qword [rsp + 8*1]: char *
 16370 0000BBFD 48833C2400              	cmp qword [rsp], 0
 16371 0000BC02 0F84FD000000            	je .Lstring_end
 16372 0000BC08 488B442408              	mov rax, qword [rsp + 8*1]
 16373 0000BC0D 8A00                    	mov al, byte [rax]
 16374 0000BC0F 4825FF000000            	and rax, 255
 16375 0000BC15 3C07                    	cmp al, 7
 16376 0000BC17 7468                            je .Lstring_char_7
 16377 0000BC19 3C08                            cmp al, 8
 16378 0000BC1B 7470                            je .Lstring_char_8
 16379 0000BC1D 3C09                            cmp al, 9
 16380 0000BC1F 7478                            je .Lstring_char_9
 16381 0000BC21 3C0A                            cmp al, 10
 16382 0000BC23 0F847C000000                    je .Lstring_char_10
 16383 0000BC29 3C0B                            cmp al, 11
 16384 0000BC2B 0F8480000000                    je .Lstring_char_11
 16385 0000BC31 3C0C                            cmp al, 12
 16386 0000BC33 0F8484000000                    je .Lstring_char_12
 16387 0000BC39 3C0D                            cmp al, 13
 16388 0000BC3B 0F8488000000                    je .Lstring_char_13
 16389 0000BC41 3C22                            cmp al, 34
 16390 0000BC43 0F848C000000                    je .Lstring_char_34
 16391 0000BC49 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 16393 0000BC4B 3C20                            cmp al, ' '
 16394 0000BC4D 0F8CA0000000                    jl .Lstring_char_hex
 16395 0000BC53 48BF-                           mov rdi, fmt_string_char
 16395 0000BC55 [D713000000000000] 
 16396 0000BC5D 4889C6                          mov rsi, rax
 16397                                  .Lstring_char_emit:
 16398 0000BC60 B800000000                      mov rax, 0
 16399                                          ENTER
    44 0000BC65 C8000000            <1>  enter 0, 0
    45 0000BC69 4883E4F0            <1>  and rsp, ~15
 16400 0000BC6D E8(00000000)                    call printf
 16401                                          LEAVE
    49 0000BC72 C9                  <1>  leave
 16402 0000BC73 48FF0C24                        dec qword [rsp]
 16403 0000BC77 48FF442408                      inc qword [rsp + 8*1]
 16404 0000BC7C E97CFFFFFF                      jmp .Lstring_loop
 16405                                  
 16406                                  .Lstring_char_7:
 16407 0000BC81 48BF-                           mov rdi, fmt_string_char_7
 16407 0000BC83 [DA13000000000000] 
 16408 0000BC8B EBD3                            jmp .Lstring_char_emit
 16409                                  
 16410                                  .Lstring_char_8:
 16411 0000BC8D 48BF-                           mov rdi, fmt_string_char_8
 16411 0000BC8F [DD13000000000000] 
 16412 0000BC97 EBC7                            jmp .Lstring_char_emit
 16413                                          
 16414                                  .Lstring_char_9:
 16415 0000BC99 48BF-                           mov rdi, fmt_string_char_9
 16415 0000BC9B [E013000000000000] 
 16416 0000BCA3 EBBB                            jmp .Lstring_char_emit
 16417                                  
 16418                                  .Lstring_char_10:
 16419 0000BCA5 48BF-                           mov rdi, fmt_string_char_10
 16419 0000BCA7 [E313000000000000] 
 16420 0000BCAF EBAF                            jmp .Lstring_char_emit
 16421                                  
 16422                                  .Lstring_char_11:
 16423 0000BCB1 48BF-                           mov rdi, fmt_string_char_11
 16423 0000BCB3 [E613000000000000] 
 16424 0000BCBB EBA3                            jmp .Lstring_char_emit
 16425                                  
 16426                                  .Lstring_char_12:
 16427 0000BCBD 48BF-                           mov rdi, fmt_string_char_12
 16427 0000BCBF [E913000000000000] 
 16428 0000BCC7 EB97                            jmp .Lstring_char_emit
 16429                                  
 16430                                  .Lstring_char_13:
 16431 0000BCC9 48BF-                           mov rdi, fmt_string_char_13
 16431 0000BCCB [EC13000000000000] 
 16432 0000BCD3 EB8B                            jmp .Lstring_char_emit
 16433                                  
 16434                                  .Lstring_char_34:
 16435 0000BCD5 48BF-                           mov rdi, fmt_string_char_34
 16435 0000BCD7 [EF13000000000000] 
 16436 0000BCDF E97CFFFFFF                      jmp .Lstring_char_emit
 16437                                  
 16438                                  .Lstring_char_92:
 16439 0000BCE4 48BF-                           mov rdi, fmt_string_char_92
 16439 0000BCE6 [F213000000000000] 
 16440 0000BCEE E96DFFFFFF                      jmp .Lstring_char_emit
 16441                                  
 16442                                  .Lstring_char_hex:
 16443 0000BCF3 48BF-                           mov rdi, fmt_string_char_hex
 16443 0000BCF5 [F513000000000000] 
 16444 0000BCFD 4889C6                          mov rsi, rax
 16445 0000BD00 E95BFFFFFF                      jmp .Lstring_char_emit        
 16446                                  
 16447                                  .Lstring_end:
 16448 0000BD05 4883C410                	add rsp, 8 * 2
 16449 0000BD09 48BF-                   	mov rdi, fmt_dquote
 16449 0000BD0B [D513000000000000] 
 16450 0000BD13 EB33                    	jmp .Lemit
 16451                                  
 16452                                  .Lunknown_sexpr_type:
 16453 0000BD15 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 16453 0000BD17 [9013000000000000] 
 16454 0000BD1F 4825FF000000            	and rax, 255
 16455 0000BD25 4889C2                  	mov rdx, rax
 16456 0000BD28 4889F9                  	mov rcx, rdi
 16457 0000BD2B 488B3C25[00000000]      	mov rdi, qword [stderr]
 16458 0000BD33 B800000000              	mov rax, 0
 16459                                          ENTER
    44 0000BD38 C8000000            <1>  enter 0, 0
    45 0000BD3C 4883E4F0            <1>  and rsp, ~15
 16460 0000BD40 E8(00000000)            	call fprintf
 16461                                          LEAVE
    49 0000BD45 C9                  <1>  leave
 16462 0000BD46 C9                              leave
 16463 0000BD47 C3                              ret
 16464                                  
 16465                                  .Lemit:
 16466 0000BD48 B800000000              	mov rax, 0
 16467                                          ENTER
    44 0000BD4D C8000000            <1>  enter 0, 0
    45 0000BD51 4883E4F0            <1>  and rsp, ~15
 16468 0000BD55 E8(00000000)            	call printf
 16469                                          LEAVE
    49 0000BD5A C9                  <1>  leave
 16470 0000BD5B EB00                    	jmp .Lend
 16471                                  
 16472                                  .Lend:
 16473                                  	LEAVE
    49 0000BD5D C9                  <1>  leave
 16474 0000BD5E C3                      	ret
 16475                                  
 16476                                  ;;; rdi: address of free variable
 16477                                  ;;; rsi: address of code-pointer
 16478                                  bind_primitive:
 16479 0000BD5F C8000000                        enter 0, 0
 16480 0000BD63 57                              push rdi
 16481 0000BD64 BF11000000                      mov rdi, (1 + 8 + 8)
 16482 0000BD69 E8C1F7FFFF                      call malloc
 16483 0000BD6E 5F                              pop rdi
 16484 0000BD6F C60004                          mov byte [rax], T_closure
 16485 0000BD72 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 16486 0000BD7A 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 16487 0000BD7E 488907                          mov qword [rdi], rax
 16488 0000BD81 48B8-                           mov rax, sob_void
 16488 0000BD83 [0000000000000000] 
 16489 0000BD8B C9                              leave
 16490 0000BD8C C3                              ret
 16491                                  
 16492                                  L_code_ptr_ash:
 16493 0000BD8D C8000000                        enter 0, 0
 16494 0000BD91 48837D1802                      cmp COUNT, 2
 16495 0000BD96 0F8593140000                    jne L_error_arg_count_2
 16496 0000BD9C 488B7D20                        mov rdi, PARAM(0)
 16497                                          assert_integer(rdi)
    53 0000BDA0 803F11              <1>  cmp byte [%1], %2
    54 0000BDA3 0F8525150000        <1>  jne L_error_incorrect_type
 16498 0000BDA9 488B4D28                        mov rcx, PARAM(1)
 16499                                          assert_integer(rcx)
    53 0000BDAD 803911              <1>  cmp byte [%1], %2
    54 0000BDB0 0F8518150000        <1>  jne L_error_incorrect_type
 16500 0000BDB6 488B7F01                        mov rdi, qword [rdi + 1]
 16501 0000BDBA 488B4901                        mov rcx, qword [rcx + 1]
 16502 0000BDBE 4883F900                        cmp rcx, 0
 16503 0000BDC2 7C0F                            jl .L_negative
 16504                                  .L_loop_positive:
 16505 0000BDC4 4883F900                        cmp rcx, 0
 16506 0000BDC8 741B                            je .L_exit
 16507 0000BDCA 48D3E7                          sal rdi, cl
 16508 0000BDCD 48C1E908                        shr rcx, 8
 16509 0000BDD1 EBF1                            jmp .L_loop_positive
 16510                                  .L_negative:
 16511 0000BDD3 48F7D9                          neg rcx
 16512                                  .L_loop_negative:
 16513 0000BDD6 4883F900                        cmp rcx, 0
 16514 0000BDDA 7409                            je .L_exit
 16515 0000BDDC 48D3FF                          sar rdi, cl
 16516 0000BDDF 48C1E908                        shr rcx, 8
 16517 0000BDE3 EBF1                            jmp .L_loop_negative
 16518                                  .L_exit:
 16519 0000BDE5 E85F130000                      call make_integer
 16520 0000BDEA C9                              leave
 16521 0000BDEB C22000                          ret AND_KILL_FRAME(2)
 16522                                  
 16523                                  L_code_ptr_logand:
 16524 0000BDEE C8000000                        enter 0, 0
 16525 0000BDF2 48837D1802                      cmp COUNT, 2
 16526 0000BDF7 0F8532140000                    jne L_error_arg_count_2
 16527 0000BDFD 4C8B4520                        mov r8, PARAM(0)
 16528                                          assert_integer(r8)
    53 0000BE01 41803811            <1>  cmp byte [%1], %2
    54 0000BE05 0F85C3140000        <1>  jne L_error_incorrect_type
 16529 0000BE0B 4C8B4D28                        mov r9, PARAM(1)
 16530                                          assert_integer(r9)
    53 0000BE0F 41803911            <1>  cmp byte [%1], %2
    54 0000BE13 0F85B5140000        <1>  jne L_error_incorrect_type
 16531 0000BE19 498B7801                        mov rdi, qword [r8 + 1]
 16532 0000BE1D 49237901                        and rdi, qword [r9 + 1]
 16533 0000BE21 E823130000                      call make_integer
 16534 0000BE26 C9                              leave
 16535 0000BE27 C22000                          ret AND_KILL_FRAME(2)
 16536                                  
 16537                                  L_code_ptr_logor:
 16538 0000BE2A C8000000                        enter 0, 0
 16539 0000BE2E 48837D1802                      cmp COUNT, 2
 16540 0000BE33 0F85F6130000                    jne L_error_arg_count_2
 16541 0000BE39 4C8B4520                        mov r8, PARAM(0)
 16542                                          assert_integer(r8)
    53 0000BE3D 41803811            <1>  cmp byte [%1], %2
    54 0000BE41 0F8587140000        <1>  jne L_error_incorrect_type
 16543 0000BE47 4C8B4D28                        mov r9, PARAM(1)
 16544                                          assert_integer(r9)
    53 0000BE4B 41803911            <1>  cmp byte [%1], %2
    54 0000BE4F 0F8579140000        <1>  jne L_error_incorrect_type
 16545 0000BE55 498B7801                        mov rdi, qword [r8 + 1]
 16546 0000BE59 490B7901                        or rdi, qword [r9 + 1]
 16547 0000BE5D E8E7120000                      call make_integer
 16548 0000BE62 C9                              leave
 16549 0000BE63 C22000                          ret AND_KILL_FRAME(2)
 16550                                  
 16551                                  L_code_ptr_logxor:
 16552 0000BE66 C8000000                        enter 0, 0
 16553 0000BE6A 48837D1802                      cmp COUNT, 2
 16554 0000BE6F 0F85BA130000                    jne L_error_arg_count_2
 16555 0000BE75 4C8B4520                        mov r8, PARAM(0)
 16556                                          assert_integer(r8)
    53 0000BE79 41803811            <1>  cmp byte [%1], %2
    54 0000BE7D 0F854B140000        <1>  jne L_error_incorrect_type
 16557 0000BE83 4C8B4D28                        mov r9, PARAM(1)
 16558                                          assert_integer(r9)
    53 0000BE87 41803911            <1>  cmp byte [%1], %2
    54 0000BE8B 0F853D140000        <1>  jne L_error_incorrect_type
 16559 0000BE91 498B7801                        mov rdi, qword [r8 + 1]
 16560 0000BE95 49337901                        xor rdi, qword [r9 + 1]
 16561 0000BE99 E8AB120000                      call make_integer
 16562                                          LEAVE
    49 0000BE9E C9                  <1>  leave
 16563 0000BE9F C22000                          ret AND_KILL_FRAME(2)
 16564                                  
 16565                                  L_code_ptr_lognot:
 16566 0000BEA2 C8000000                        enter 0, 0
 16567 0000BEA6 48837D1801                      cmp COUNT, 1
 16568 0000BEAB 0F8549130000                    jne L_error_arg_count_1
 16569 0000BEB1 4C8B4520                        mov r8, PARAM(0)
 16570                                          assert_integer(r8)
    53 0000BEB5 41803811            <1>  cmp byte [%1], %2
    54 0000BEB9 0F850F140000        <1>  jne L_error_incorrect_type
 16571 0000BEBF 498B7801                        mov rdi, qword [r8 + 1]
 16572 0000BEC3 48F7D7                          not rdi
 16573 0000BEC6 E87E120000                      call make_integer
 16574 0000BECB C9                              leave
 16575 0000BECC C21800                          ret AND_KILL_FRAME(1)
 16576                                  
 16577                                  L_code_ptr_bin_apply:
 16578 0000BECF C8000000                        enter 0, 0        
 16579                                          ;2. Calc the number of the args - argv[1].length
 16580 0000BED3 488B7528                        mov rsi, PARAM(1); rsi - point to the first var in the list
 16581 0000BED7 4889F7                  	mov rdi, rsi
 16582 0000BEDA B900000000              	mov rcx, 0
 16583                                  .L_bin_apply_calc_new_argc_loop:
 16584 0000BEDF 4881FF[01000000]        	cmp rdi, sob_nil
 16585 0000BEE6 7412                    	je .L_bin_apply_end_calc_loop
 16586                                  	assert_pair(rdi)
    53 0000BEE8 803F21              <1>  cmp byte [%1], %2
    54 0000BEEB 0F85DD130000        <1>  jne L_error_incorrect_type
 16587 0000BEF1 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 16588 0000BEF5 48FFC1                  	inc rcx
 16589 0000BEF8 EBE5                    	jmp .L_bin_apply_calc_new_argc_loop
 16590                                  .L_bin_apply_end_calc_loop:
 16591                                          
 16592                                          ;3. Update rsp -> rsp - 8 * argv[1].length
 16593 0000BEFA 4C8D1CCDE8FFFFFF                lea r11, [8*(rcx - 3)]
 16594 0000BF02 4C29DC                          sub rsp, r11
 16595                                  
 16596                                          ;4. Save RET_ADDR
 16597 0000BF05 4C8B5508                        mov r10, RET_ADDR
 16598 0000BF09 4C891424                        mov qword [rsp], r10
 16599                                  
 16600                                          ;5. Save SOB_CLOSURE_ENV(proc)
 16601 0000BF0D 4C8B5520                        mov r10, PARAM(0)
 16602                                          assert_closure(r10)
    53 0000BF11 41803A04            <1>  cmp byte [%1], %2
    54 0000BF15 0F85B3130000        <1>  jne L_error_incorrect_type
 16603 0000BF1B 498B4201                        mov rax, SOB_CLOSURE_ENV(r10)
 16604 0000BF1F 4889442408                      mov qword [rsp + 8 * 1], rax
 16605                                  
 16606                                          ;6. Save new argc = argv[1].length
 16607 0000BF24 48894C2410                      mov qword [rsp + 8 * 2], rcx
 16608                                          
 16609                                          ;5. Push all args in argv[1] to the stack
 16610 0000BF29 4C8D4C2418                      lea r9, [rsp + 8 * 3]
 16611 0000BF2E 4889F7                  	mov rdi, rsi; rsi - point to the first var in the list
 16612                                  .L_bin_apply_recycle_frame_loop:
 16613 0000BF31 4881FF[01000000]        	cmp rdi, sob_nil
 16614 0000BF38 7411                    	je .L_bin_apply_recycle_frame_done
 16615 0000BF3A 488B4701                        mov rax, SOB_PAIR_CAR(rdi)
 16616 0000BF3E 498901                          mov qword [r9], rax
 16617 0000BF41 4983C108                        add r9, 8
 16618 0000BF45 488B7F09                        mov rdi, SOB_PAIR_CDR(rdi)
 16619 0000BF49 EBE6                    	jmp .L_bin_apply_recycle_frame_loop
 16620                                  .L_bin_apply_recycle_frame_done:
 16621 0000BF4B 4C89C5                          mov  rbp, r8
 16622 0000BF4E 41FF6209                        jmp SOB_CLOSURE_CODE(r10)
 16623                                  
 16624                                  L_code_ptr_is_null:
 16625 0000BF52 C8000000                        enter 0, 0
 16626 0000BF56 48837D1801                      cmp COUNT, 1
 16627 0000BF5B 0F8599120000                    jne L_error_arg_count_1
 16628 0000BF61 488B4520                        mov rax, PARAM(0)
 16629 0000BF65 803801                          cmp byte [rax], T_nil
 16630 0000BF68 750C                            jne .L_false
 16631 0000BF6A 48B8-                           mov rax, sob_boolean_true
 16631 0000BF6C [0300000000000000] 
 16632 0000BF74 EB0A                            jmp .L_end
 16633                                  .L_false:
 16634 0000BF76 48B8-                           mov rax, sob_boolean_false
 16634 0000BF78 [0200000000000000] 
 16635                                  .L_end:
 16636 0000BF80 C9                              leave
 16637 0000BF81 C21800                          ret AND_KILL_FRAME(1)
 16638                                  
 16639                                  L_code_ptr_is_pair:
 16640 0000BF84 C8000000                        enter 0, 0
 16641 0000BF88 48837D1801                      cmp COUNT, 1
 16642 0000BF8D 0F8567120000                    jne L_error_arg_count_1
 16643 0000BF93 488B4520                        mov rax, PARAM(0)
 16644 0000BF97 803821                          cmp byte [rax], T_pair
 16645 0000BF9A 750C                            jne .L_false
 16646 0000BF9C 48B8-                           mov rax, sob_boolean_true
 16646 0000BF9E [0300000000000000] 
 16647 0000BFA6 EB0A                            jmp .L_end
 16648                                  .L_false:
 16649 0000BFA8 48B8-                           mov rax, sob_boolean_false
 16649 0000BFAA [0200000000000000] 
 16650                                  .L_end:
 16651 0000BFB2 C9                              leave
 16652 0000BFB3 C21800                          ret AND_KILL_FRAME(1)
 16653                                          
 16654                                  L_code_ptr_is_void:
 16655 0000BFB6 C8000000                        enter 0, 0
 16656 0000BFBA 48837D1801                      cmp COUNT, 1
 16657 0000BFBF 0F8535120000                    jne L_error_arg_count_1
 16658 0000BFC5 488B4520                        mov rax, PARAM(0)
 16659 0000BFC9 803800                          cmp byte [rax], T_void
 16660 0000BFCC 750C                            jne .L_false
 16661 0000BFCE 48B8-                           mov rax, sob_boolean_true
 16661 0000BFD0 [0300000000000000] 
 16662 0000BFD8 EB0A                            jmp .L_end
 16663                                  .L_false:
 16664 0000BFDA 48B8-                           mov rax, sob_boolean_false
 16664 0000BFDC [0200000000000000] 
 16665                                  .L_end:
 16666 0000BFE4 C9                              leave
 16667 0000BFE5 C21800                          ret AND_KILL_FRAME(1)
 16668                                  
 16669                                  L_code_ptr_is_char:
 16670 0000BFE8 C8000000                        enter 0, 0
 16671 0000BFEC 48837D1801                      cmp COUNT, 1
 16672 0000BFF1 0F8503120000                    jne L_error_arg_count_1
 16673 0000BFF7 488B4520                        mov rax, PARAM(0)
 16674 0000BFFB 803802                          cmp byte [rax], T_char
 16675 0000BFFE 750C                            jne .L_false
 16676 0000C000 48B8-                           mov rax, sob_boolean_true
 16676 0000C002 [0300000000000000] 
 16677 0000C00A EB0A                            jmp .L_end
 16678                                  .L_false:
 16679 0000C00C 48B8-                           mov rax, sob_boolean_false
 16679 0000C00E [0200000000000000] 
 16680                                  .L_end:
 16681 0000C016 C9                              leave
 16682 0000C017 C21800                          ret AND_KILL_FRAME(1)
 16683                                  
 16684                                  L_code_ptr_is_string:
 16685 0000C01A C8000000                        enter 0, 0
 16686 0000C01E 48837D1801                      cmp COUNT, 1
 16687 0000C023 0F85D1110000                    jne L_error_arg_count_1
 16688 0000C029 488B4520                        mov rax, PARAM(0)
 16689 0000C02D 803803                          cmp byte [rax], T_string
 16690 0000C030 750C                            jne .L_false
 16691 0000C032 48B8-                           mov rax, sob_boolean_true
 16691 0000C034 [0300000000000000] 
 16692 0000C03C EB0A                            jmp .L_end
 16693                                  .L_false:
 16694 0000C03E 48B8-                           mov rax, sob_boolean_false
 16694 0000C040 [0200000000000000] 
 16695                                  .L_end:
 16696 0000C048 C9                              leave
 16697 0000C049 C21800                          ret AND_KILL_FRAME(1)
 16698                                  
 16699                                  L_code_ptr_is_symbol:
 16700 0000C04C C8000000                        enter 0, 0
 16701 0000C050 48837D1801                      cmp COUNT, 1
 16702 0000C055 0F859F110000                    jne L_error_arg_count_1
 16703 0000C05B 4C8B4520                        mov r8, PARAM(0)
 16704 0000C05F 41802040                        and byte [r8], T_symbol
 16705 0000C063 740C                            jz .L_false
 16706 0000C065 48B8-                           mov rax, sob_boolean_true
 16706 0000C067 [0300000000000000] 
 16707 0000C06F EB0A                            jmp .L_exit
 16708                                  .L_false:
 16709 0000C071 48B8-                           mov rax, sob_boolean_false
 16709 0000C073 [0200000000000000] 
 16710                                  .L_exit:
 16711 0000C07B C9                              leave
 16712 0000C07C C21800                          ret AND_KILL_FRAME(1)
 16713                                  
 16714                                  L_code_ptr_is_uninterned_symbol:
 16715 0000C07F C8000000                        enter 0, 0
 16716 0000C083 48837D1801                      cmp COUNT, 1
 16717 0000C088 0F856C110000                    jne L_error_arg_count_1
 16718 0000C08E 4C8B4520                        mov r8, PARAM(0)
 16719 0000C092 41803842                        cmp byte [r8], T_uninterned_symbol
 16720 0000C096 750C                            jne .L_false
 16721 0000C098 48B8-                           mov rax, sob_boolean_true
 16721 0000C09A [0300000000000000] 
 16722 0000C0A2 EB0A                            jmp .L_exit
 16723                                  .L_false:
 16724 0000C0A4 48B8-                           mov rax, sob_boolean_false
 16724 0000C0A6 [0200000000000000] 
 16725                                  .L_exit:
 16726 0000C0AE C9                              leave
 16727 0000C0AF C21800                          ret AND_KILL_FRAME(1)
 16728                                  
 16729                                  L_code_ptr_is_interned_symbol:
 16730 0000C0B2 C8000000                        enter 0, 0
 16731 0000C0B6 48837D1801                      cmp COUNT, 1
 16732 0000C0BB 0F8539110000                    jne L_error_arg_count_1
 16733 0000C0C1 488B4520                        mov rax, PARAM(0)
 16734 0000C0C5 803841                          cmp byte [rax], T_interned_symbol
 16735 0000C0C8 750C                            jne .L_false
 16736 0000C0CA 48B8-                           mov rax, sob_boolean_true
 16736 0000C0CC [0300000000000000] 
 16737 0000C0D4 EB0A                            jmp .L_end
 16738                                  .L_false:
 16739 0000C0D6 48B8-                           mov rax, sob_boolean_false
 16739 0000C0D8 [0200000000000000] 
 16740                                  .L_end:
 16741 0000C0E0 C9                              leave
 16742 0000C0E1 C21800                          ret AND_KILL_FRAME(1)
 16743                                  
 16744                                  L_code_ptr_gensym:
 16745 0000C0E4 C8000000                        enter 0, 0
 16746 0000C0E8 48837D1800                      cmp COUNT, 0
 16747 0000C0ED 0F85D2100000                    jne L_error_arg_count_0
 16748 0000C0F3 48FF0425[FB130000]              inc qword [gensym_count]
 16749 0000C0FB BF09000000                      mov rdi, (1 + 8)
 16750 0000C100 E82AF4FFFF                      call malloc
 16751 0000C105 C60042                          mov byte [rax], T_uninterned_symbol
 16752 0000C108 488B0C25[FB130000]              mov rcx, qword [gensym_count]
 16753 0000C110 48894801                        mov qword [rax + 1], rcx
 16754 0000C114 C9                              leave
 16755 0000C115 C21000                          ret AND_KILL_FRAME(0)
 16756                                  
 16757                                  L_code_ptr_is_vector:
 16758 0000C118 C8000000                        enter 0, 0
 16759 0000C11C 48837D1801                      cmp COUNT, 1
 16760 0000C121 0F85D3100000                    jne L_error_arg_count_1
 16761 0000C127 488B4520                        mov rax, PARAM(0)
 16762 0000C12B 803822                          cmp byte [rax], T_vector
 16763 0000C12E 750C                            jne .L_false
 16764 0000C130 48B8-                           mov rax, sob_boolean_true
 16764 0000C132 [0300000000000000] 
 16765 0000C13A EB0A                            jmp .L_end
 16766                                  .L_false:
 16767 0000C13C 48B8-                           mov rax, sob_boolean_false
 16767 0000C13E [0200000000000000] 
 16768                                  .L_end:
 16769 0000C146 C9                              leave
 16770 0000C147 C21800                          ret AND_KILL_FRAME(1)
 16771                                  
 16772                                  L_code_ptr_is_closure:
 16773 0000C14A C8000000                        enter 0, 0
 16774 0000C14E 48837D1801                      cmp COUNT, 1
 16775 0000C153 0F85A1100000                    jne L_error_arg_count_1
 16776 0000C159 488B4520                        mov rax, PARAM(0)
 16777 0000C15D 803804                          cmp byte [rax], T_closure
 16778 0000C160 750C                            jne .L_false
 16779 0000C162 48B8-                           mov rax, sob_boolean_true
 16779 0000C164 [0300000000000000] 
 16780 0000C16C EB0A                            jmp .L_end
 16781                                  .L_false:
 16782 0000C16E 48B8-                           mov rax, sob_boolean_false
 16782 0000C170 [0200000000000000] 
 16783                                  .L_end:
 16784 0000C178 C9                              leave
 16785 0000C179 C21800                          ret AND_KILL_FRAME(1)
 16786                                  
 16787                                  L_code_ptr_is_real:
 16788 0000C17C C8000000                        enter 0, 0
 16789 0000C180 48837D1801                      cmp COUNT, 1
 16790 0000C185 0F856F100000                    jne L_error_arg_count_1
 16791 0000C18B 488B4520                        mov rax, PARAM(0)
 16792 0000C18F 803813                          cmp byte [rax], T_real
 16793 0000C192 750C                            jne .L_false
 16794 0000C194 48B8-                           mov rax, sob_boolean_true
 16794 0000C196 [0300000000000000] 
 16795 0000C19E EB0A                            jmp .L_end
 16796                                  .L_false:
 16797 0000C1A0 48B8-                           mov rax, sob_boolean_false
 16797 0000C1A2 [0200000000000000] 
 16798                                  .L_end:
 16799 0000C1AA C9                              leave
 16800 0000C1AB C21800                          ret AND_KILL_FRAME(1)
 16801                                  
 16802                                  L_code_ptr_is_fraction:
 16803 0000C1AE C8000000                        enter 0, 0
 16804 0000C1B2 48837D1801                      cmp COUNT, 1
 16805 0000C1B7 0F853D100000                    jne L_error_arg_count_1
 16806 0000C1BD 488B4520                        mov rax, PARAM(0)
 16807 0000C1C1 803812                          cmp byte [rax], T_fraction
 16808 0000C1C4 750C                            jne .L_false
 16809 0000C1C6 48B8-                           mov rax, sob_boolean_true
 16809 0000C1C8 [0300000000000000] 
 16810 0000C1D0 EB0A                            jmp .L_end
 16811                                  .L_false:
 16812 0000C1D2 48B8-                           mov rax, sob_boolean_false
 16812 0000C1D4 [0200000000000000] 
 16813                                  .L_end:
 16814 0000C1DC C9                              leave
 16815 0000C1DD C21800                          ret AND_KILL_FRAME(1)
 16816                                  
 16817                                  L_code_ptr_is_boolean:
 16818 0000C1E0 C8000000                        enter 0, 0
 16819 0000C1E4 48837D1801                      cmp COUNT, 1
 16820 0000C1E9 0F850B100000                    jne L_error_arg_count_1
 16821 0000C1EF 488B4520                        mov rax, PARAM(0)
 16822 0000C1F3 8A18                            mov bl, byte [rax]
 16823 0000C1F5 80E308                          and bl, T_boolean
 16824 0000C1F8 740C                            je .L_false
 16825 0000C1FA 48B8-                           mov rax, sob_boolean_true
 16825 0000C1FC [0300000000000000] 
 16826 0000C204 EB0A                            jmp .L_end
 16827                                  .L_false:
 16828 0000C206 48B8-                           mov rax, sob_boolean_false
 16828 0000C208 [0200000000000000] 
 16829                                  .L_end:
 16830 0000C210 C9                              leave
 16831 0000C211 C21800                          ret AND_KILL_FRAME(1)
 16832                                          
 16833                                  L_code_ptr_is_boolean_false:
 16834 0000C214 C8000000                        enter 0, 0
 16835 0000C218 48837D1801                      cmp COUNT, 1
 16836 0000C21D 0F85D70F0000                    jne L_error_arg_count_1
 16837 0000C223 488B4520                        mov rax, PARAM(0)
 16838 0000C227 8A18                            mov bl, byte [rax]
 16839 0000C229 80FB09                          cmp bl, T_boolean_false
 16840 0000C22C 750C                            jne .L_false
 16841 0000C22E 48B8-                           mov rax, sob_boolean_true
 16841 0000C230 [0300000000000000] 
 16842 0000C238 EB0A                            jmp .L_end
 16843                                  .L_false:
 16844 0000C23A 48B8-                           mov rax, sob_boolean_false
 16844 0000C23C [0200000000000000] 
 16845                                  .L_end:
 16846 0000C244 C9                              leave
 16847 0000C245 C21800                          ret AND_KILL_FRAME(1)
 16848                                  
 16849                                  L_code_ptr_is_boolean_true:
 16850 0000C248 C8000000                        enter 0, 0
 16851 0000C24C 48837D1801                      cmp COUNT, 1
 16852 0000C251 0F85A30F0000                    jne L_error_arg_count_1
 16853 0000C257 488B4520                        mov rax, PARAM(0)
 16854 0000C25B 8A18                            mov bl, byte [rax]
 16855 0000C25D 80FB0A                          cmp bl, T_boolean_true
 16856 0000C260 750C                            jne .L_false
 16857 0000C262 48B8-                           mov rax, sob_boolean_true
 16857 0000C264 [0300000000000000] 
 16858 0000C26C EB0A                            jmp .L_end
 16859                                  .L_false:
 16860 0000C26E 48B8-                           mov rax, sob_boolean_false
 16860 0000C270 [0200000000000000] 
 16861                                  .L_end:
 16862 0000C278 C9                              leave
 16863 0000C279 C21800                          ret AND_KILL_FRAME(1)
 16864                                  
 16865                                  L_code_ptr_is_number:
 16866 0000C27C C8000000                        enter 0, 0
 16867 0000C280 48837D1801                      cmp COUNT, 1
 16868 0000C285 0F856F0F0000                    jne L_error_arg_count_1
 16869 0000C28B 488B4520                        mov rax, PARAM(0)
 16870 0000C28F 8A18                            mov bl, byte [rax]
 16871 0000C291 80E310                          and bl, T_number
 16872 0000C294 740C                            jz .L_false
 16873 0000C296 48B8-                           mov rax, sob_boolean_true
 16873 0000C298 [0300000000000000] 
 16874 0000C2A0 EB0A                            jmp .L_end
 16875                                  .L_false:
 16876 0000C2A2 48B8-                           mov rax, sob_boolean_false
 16876 0000C2A4 [0200000000000000] 
 16877                                  .L_end:
 16878 0000C2AC C9                              leave
 16879 0000C2AD C21800                          ret AND_KILL_FRAME(1)
 16880                                          
 16881                                  L_code_ptr_is_collection:
 16882 0000C2B0 C8000000                        enter 0, 0
 16883 0000C2B4 48837D1801                      cmp COUNT, 1
 16884 0000C2B9 0F853B0F0000                    jne L_error_arg_count_1
 16885 0000C2BF 488B4520                        mov rax, PARAM(0)
 16886 0000C2C3 8A18                            mov bl, byte [rax]
 16887 0000C2C5 80E320                          and bl, T_collection
 16888 0000C2C8 740C                            je .L_false
 16889 0000C2CA 48B8-                           mov rax, sob_boolean_true
 16889 0000C2CC [0300000000000000] 
 16890 0000C2D4 EB0A                            jmp .L_end
 16891                                  .L_false:
 16892 0000C2D6 48B8-                           mov rax, sob_boolean_false
 16892 0000C2D8 [0200000000000000] 
 16893                                  .L_end:
 16894 0000C2E0 C9                              leave
 16895 0000C2E1 C21800                          ret AND_KILL_FRAME(1)
 16896                                  
 16897                                  L_code_ptr_cons:
 16898 0000C2E4 C8000000                        enter 0, 0
 16899 0000C2E8 48837D1802                      cmp COUNT, 2
 16900 0000C2ED 0F853C0F0000                    jne L_error_arg_count_2
 16901 0000C2F3 BF11000000                      mov rdi, (1 + 8 + 8)
 16902 0000C2F8 E832F2FFFF                      call malloc
 16903 0000C2FD C60021                          mov byte [rax], T_pair
 16904 0000C300 488B5D20                        mov rbx, PARAM(0)
 16905 0000C304 48895801                        mov SOB_PAIR_CAR(rax), rbx
 16906 0000C308 488B5D28                        mov rbx, PARAM(1)
 16907 0000C30C 48895809                        mov SOB_PAIR_CDR(rax), rbx
 16908 0000C310 C9                              leave
 16909 0000C311 C22000                          ret AND_KILL_FRAME(2)
 16910                                  
 16911                                  L_code_ptr_display_sexpr:
 16912 0000C314 C8000000                        enter 0, 0
 16913 0000C318 48837D1801                      cmp COUNT, 1
 16914 0000C31D 0F85D70E0000                    jne L_error_arg_count_1
 16915 0000C323 488B7D20                        mov rdi, PARAM(0)
 16916 0000C327 E884F4FFFF                      call print_sexpr
 16917 0000C32C 48B8-                           mov rax, sob_void
 16917 0000C32E [0000000000000000] 
 16918 0000C336 C9                              leave
 16919 0000C337 C21800                          ret AND_KILL_FRAME(1)
 16920                                  
 16921                                  L_code_ptr_write_char:
 16922 0000C33A C8000000                        enter 0, 0
 16923 0000C33E 48837D1801                      cmp COUNT, 1
 16924 0000C343 0F85B10E0000                    jne L_error_arg_count_1
 16925 0000C349 488B4520                        mov rax, PARAM(0)
 16926                                          assert_char(rax)
    53 0000C34D 803802              <1>  cmp byte [%1], %2
    54 0000C350 0F85780F0000        <1>  jne L_error_incorrect_type
 16927 0000C356 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 16928 0000C359 4825FF000000                    and rax, 255
 16929 0000C35F 48BF-                           mov rdi, fmt_char
 16929 0000C361 [0314000000000000] 
 16930 0000C369 4889C6                          mov rsi, rax
 16931 0000C36C B800000000                      mov rax, 0
 16932                                          ENTER
    44 0000C371 C8000000            <1>  enter 0, 0
    45 0000C375 4883E4F0            <1>  and rsp, ~15
 16933 0000C379 E8(00000000)                    call printf
 16934                                          LEAVE
    49 0000C37E C9                  <1>  leave
 16935 0000C37F 48B8-                           mov rax, sob_void
 16935 0000C381 [0000000000000000] 
 16936 0000C389 C9                              leave
 16937 0000C38A C21800                          ret AND_KILL_FRAME(1)
 16938                                  
 16939                                  L_code_ptr_car:
 16940 0000C38D C8000000                        enter 0, 0
 16941 0000C391 48837D1801                      cmp COUNT, 1
 16942 0000C396 0F855E0E0000                    jne L_error_arg_count_1
 16943 0000C39C 488B4520                        mov rax, PARAM(0)
 16944                                          assert_pair(rax)
    53 0000C3A0 803821              <1>  cmp byte [%1], %2
    54 0000C3A3 0F85250F0000        <1>  jne L_error_incorrect_type
 16945 0000C3A9 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 16946 0000C3AD C9                              leave
 16947 0000C3AE C21800                          ret AND_KILL_FRAME(1)
 16948                                          
 16949                                  L_code_ptr_cdr:
 16950 0000C3B1 C8000000                        enter 0, 0
 16951 0000C3B5 48837D1801                      cmp COUNT, 1
 16952 0000C3BA 0F853A0E0000                    jne L_error_arg_count_1
 16953 0000C3C0 488B4520                        mov rax, PARAM(0)
 16954                                          assert_pair(rax)
    53 0000C3C4 803821              <1>  cmp byte [%1], %2
    54 0000C3C7 0F85010F0000        <1>  jne L_error_incorrect_type
 16955 0000C3CD 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 16956 0000C3D1 C9                              leave
 16957 0000C3D2 C21800                          ret AND_KILL_FRAME(1)
 16958                                          
 16959                                  L_code_ptr_string_length:
 16960 0000C3D5 C8000000                        enter 0, 0
 16961 0000C3D9 48837D1801                      cmp COUNT, 1
 16962 0000C3DE 0F85160E0000                    jne L_error_arg_count_1
 16963 0000C3E4 488B4520                        mov rax, PARAM(0)
 16964                                          assert_string(rax)
    53 0000C3E8 803803              <1>  cmp byte [%1], %2
    54 0000C3EB 0F85DD0E0000        <1>  jne L_error_incorrect_type
 16965 0000C3F1 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 16966 0000C3F5 E84F0D0000                      call make_integer
 16967 0000C3FA C9                              leave
 16968 0000C3FB C21800                          ret AND_KILL_FRAME(1)
 16969                                  
 16970                                  L_code_ptr_vector_length:
 16971 0000C3FE C8000000                        enter 0, 0
 16972 0000C402 48837D1801                      cmp COUNT, 1
 16973 0000C407 0F85ED0D0000                    jne L_error_arg_count_1
 16974 0000C40D 488B4520                        mov rax, PARAM(0)
 16975                                          assert_vector(rax)
    53 0000C411 803822              <1>  cmp byte [%1], %2
    54 0000C414 0F85B40E0000        <1>  jne L_error_incorrect_type
 16976 0000C41A 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 16977 0000C41E E8260D0000                      call make_integer
 16978 0000C423 C9                              leave
 16979 0000C424 C21800                          ret AND_KILL_FRAME(1)
 16980                                  
 16981                                  L_code_ptr_real_to_integer:
 16982 0000C427 C8000000                        enter 0, 0
 16983 0000C42B 48837D1801                      cmp COUNT, 1
 16984 0000C430 0F85C40D0000                    jne L_error_arg_count_1
 16985 0000C436 488B5D20                        mov rbx, PARAM(0)
 16986                                          assert_real(rbx)
    53 0000C43A 803B13              <1>  cmp byte [%1], %2
    54 0000C43D 0F858B0E0000        <1>  jne L_error_incorrect_type
 16987 0000C443 F20F104301                      movsd xmm0, qword [rbx + 1]
 16988 0000C448 F2480F2CF8                      cvttsd2si rdi, xmm0
 16989 0000C44D E8F70C0000                      call make_integer
 16990 0000C452 C9                              leave
 16991 0000C453 C21800                          ret AND_KILL_FRAME(1)
 16992                                  
 16993                                  L_code_ptr_exit:
 16994 0000C456 C8000000                        enter 0, 0
 16995 0000C45A 48837D1800                      cmp COUNT, 0
 16996 0000C45F 0F85600D0000                    jne L_error_arg_count_0
 16997 0000C465 B800000000                      mov rax, 0
 16998 0000C46A E8(00000000)                    call exit
 16999                                  
 17000                                  L_code_ptr_integer_to_real:
 17001 0000C46F C8000000                        enter 0, 0
 17002 0000C473 48837D1801                      cmp COUNT, 1
 17003 0000C478 0F857C0D0000                    jne L_error_arg_count_1
 17004 0000C47E 488B4520                        mov rax, PARAM(0)
 17005                                          assert_integer(rax)
    53 0000C482 803811              <1>  cmp byte [%1], %2
    54 0000C485 0F85430E0000        <1>  jne L_error_incorrect_type
 17006 0000C48B FF7001                          push qword [rax + 1]
 17007 0000C48E F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 17008 0000C494 E8980C0000                      call make_real
 17009 0000C499 C9                              leave
 17010 0000C49A C21800                          ret AND_KILL_FRAME(1)
 17011                                  
 17012                                  L_code_ptr_fraction_to_real:
 17013 0000C49D C8000000                        enter 0, 0
 17014 0000C4A1 48837D1801                      cmp COUNT, 1
 17015 0000C4A6 0F854E0D0000                    jne L_error_arg_count_1
 17016 0000C4AC 488B4520                        mov rax, PARAM(0)
 17017                                          assert_fraction(rax)
    53 0000C4B0 803812              <1>  cmp byte [%1], %2
    54 0000C4B3 0F85150E0000        <1>  jne L_error_incorrect_type
 17018 0000C4B9 FF7001                          push qword [rax + 1]
 17019 0000C4BC F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 17020 0000C4C2 FF7009                          push qword [rax + 1 + 8]
 17021 0000C4C5 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 17022 0000C4CB F20F5EC1                        divsd xmm0, xmm1
 17023 0000C4CF E85D0C0000                      call make_real
 17024 0000C4D4 C9                              leave
 17025 0000C4D5 C21800                          ret AND_KILL_FRAME(1)
 17026                                  
 17027                                  L_code_ptr_char_to_integer:
 17028 0000C4D8 C8000000                        enter 0, 0
 17029 0000C4DC 48837D1801                      cmp COUNT, 1
 17030 0000C4E1 0F85130D0000                    jne L_error_arg_count_1
 17031 0000C4E7 488B4520                        mov rax, PARAM(0)
 17032                                          assert_char(rax)
    53 0000C4EB 803802              <1>  cmp byte [%1], %2
    54 0000C4EE 0F85DA0D0000        <1>  jne L_error_incorrect_type
 17033 0000C4F4 8A4001                          mov al, byte [rax + 1]
 17034 0000C4F7 4825FF000000                    and rax, 255
 17035 0000C4FD 4889C7                          mov rdi, rax
 17036 0000C500 E8440C0000                      call make_integer
 17037 0000C505 C9                              leave
 17038 0000C506 C21800                          ret AND_KILL_FRAME(1)
 17039                                  
 17040                                  L_code_ptr_integer_to_fraction:
 17041 0000C509 C8000000                        enter 0, 0
 17042 0000C50D 48837D1801                      cmp COUNT, 1
 17043 0000C512 0F85E20C0000                    jne L_error_arg_count_1
 17044 0000C518 4C8B4520                        mov r8, PARAM(0)
 17045                                          assert_integer(r8)
    53 0000C51C 41803811            <1>  cmp byte [%1], %2
    54 0000C520 0F85A80D0000        <1>  jne L_error_incorrect_type
 17046 0000C526 BF11000000                      mov rdi, (1 + 8 + 8)
 17047 0000C52B E8FFEFFFFF                      call malloc
 17048 0000C530 498B5801                        mov rbx, qword [r8 + 1]
 17049 0000C534 C60012                          mov byte [rax], T_fraction
 17050 0000C537 48895801                        mov qword [rax + 1], rbx
 17051 0000C53B 48C7400901000000                mov qword [rax + 1 + 8], 1
 17052 0000C543 C9                              leave
 17053 0000C544 C21800                          ret AND_KILL_FRAME(1)
 17054                                  
 17055                                  L_code_ptr_integer_to_char:
 17056 0000C547 C8000000                        enter 0, 0
 17057 0000C54B 48837D1801                      cmp COUNT, 1
 17058 0000C550 0F85A40C0000                    jne L_error_arg_count_1
 17059 0000C556 488B4520                        mov rax, PARAM(0)
 17060                                          assert_integer(rax)
    53 0000C55A 803811              <1>  cmp byte [%1], %2
    54 0000C55D 0F856B0D0000        <1>  jne L_error_incorrect_type
 17061 0000C563 488B5801                        mov rbx, qword [rax + 1]
 17062 0000C567 4883FB00                        cmp rbx, 0
 17063 0000C56B 0F8EF20B0000                    jle L_error_integer_range
 17064 0000C571 4881FB00010000                  cmp rbx, 256
 17065 0000C578 0F8DE50B0000                    jge L_error_integer_range
 17066 0000C57E BF02000000                      mov rdi, (1 + 1)
 17067 0000C583 E8A7EFFFFF                      call malloc
 17068 0000C588 C60002                          mov byte [rax], T_char
 17069 0000C58B 885801                          mov byte [rax + 1], bl
 17070 0000C58E C9                              leave
 17071 0000C58F C21800                          ret AND_KILL_FRAME(1)
 17072                                  
 17073                                  L_code_ptr_trng:
 17074 0000C592 C8000000                        enter 0, 0
 17075 0000C596 48837D1800                      cmp COUNT, 0
 17076 0000C59B 0F85240C0000                    jne L_error_arg_count_0
 17077 0000C5A1 480FC7F7                        rdrand rdi
 17078 0000C5A5 48D1EF                          shr rdi, 1
 17079 0000C5A8 E89C0B0000                      call make_integer
 17080 0000C5AD C9                              leave
 17081 0000C5AE C21000                          ret AND_KILL_FRAME(0)
 17082                                  
 17083                                  L_code_ptr_is_zero:
 17084 0000C5B1 C8000000                        enter 0, 0
 17085 0000C5B5 48837D1801                      cmp COUNT, 1
 17086 0000C5BA 0F853A0C0000                    jne L_error_arg_count_1
 17087 0000C5C0 488B4520                        mov rax, PARAM(0)
 17088 0000C5C4 803811                          cmp byte [rax], T_integer
 17089 0000C5C7 740F                            je .L_integer
 17090 0000C5C9 803812                          cmp byte [rax], T_fraction
 17091 0000C5CC 7413                            je .L_fraction
 17092 0000C5CE 803813                          cmp byte [rax], T_real
 17093 0000C5D1 7417                            je .L_real
 17094 0000C5D3 E9F60C0000                      jmp L_error_incorrect_type
 17095                                  .L_integer:
 17096 0000C5D8 4883780100                      cmp qword [rax + 1], 0
 17097 0000C5DD 7429                            je .L_zero
 17098 0000C5DF EB1B                            jmp .L_not_zero
 17099                                  .L_fraction:
 17100 0000C5E1 4883780100                      cmp qword [rax + 1], 0
 17101 0000C5E6 7420                            je .L_zero
 17102 0000C5E8 EB12                            jmp .L_not_zero
 17103                                  .L_real:
 17104 0000C5EA 660FEFC0                        pxor xmm0, xmm0
 17105 0000C5EE FF7001                          push qword [rax + 1]
 17106 0000C5F1 F20F100C24                      movsd xmm1, qword [rsp]
 17107 0000C5F6 660F2EC1                        ucomisd xmm0, xmm1
 17108 0000C5FA 740C                            je .L_zero
 17109                                  .L_not_zero:
 17110 0000C5FC 48B8-                           mov rax, sob_boolean_false
 17110 0000C5FE [0200000000000000] 
 17111 0000C606 EB0A                            jmp .L_end
 17112                                  .L_zero:
 17113 0000C608 48B8-                           mov rax, sob_boolean_true
 17113 0000C60A [0300000000000000] 
 17114                                  .L_end:
 17115 0000C612 C9                              leave
 17116 0000C613 C21800                          ret AND_KILL_FRAME(1)
 17117                                  
 17118                                  L_code_ptr_is_integer:
 17119 0000C616 C8000000                        enter 0, 0
 17120 0000C61A 48837D1801                      cmp COUNT, 1
 17121 0000C61F 0F85D50B0000                    jne L_error_arg_count_1
 17122 0000C625 488B4520                        mov rax, PARAM(0)
 17123 0000C629 803811                          cmp byte [rax], T_integer
 17124 0000C62C 750C                            jne .L_false
 17125 0000C62E 48B8-                           mov rax, sob_boolean_true
 17125 0000C630 [0300000000000000] 
 17126 0000C638 EB0A                            jmp .L_exit
 17127                                  .L_false:
 17128 0000C63A 48B8-                           mov rax, sob_boolean_false
 17128 0000C63C [0200000000000000] 
 17129                                  .L_exit:
 17130 0000C644 C9                              leave
 17131 0000C645 C21800                          ret AND_KILL_FRAME(1)
 17132                                  
 17133                                  L_code_ptr_raw_bin_add_rr:
 17134 0000C648 C8000000                        enter 0, 0
 17135 0000C64C 48837D1802                      cmp COUNT, 2
 17136 0000C651 0F85D80B0000                    jne L_error_arg_count_2
 17137 0000C657 488B5D20                        mov rbx, PARAM(0)
 17138                                          assert_real(rbx)
    53 0000C65B 803B13              <1>  cmp byte [%1], %2
    54 0000C65E 0F856A0C0000        <1>  jne L_error_incorrect_type
 17139 0000C664 488B4D28                        mov rcx, PARAM(1)
 17140                                          assert_real(rcx)
    53 0000C668 803913              <1>  cmp byte [%1], %2
    54 0000C66B 0F855D0C0000        <1>  jne L_error_incorrect_type
 17141 0000C671 F20F104301                      movsd xmm0, qword [rbx + 1]
 17142 0000C676 F20F104901                      movsd xmm1, qword [rcx + 1]
 17143 0000C67B F20F58C1                        addsd xmm0, xmm1
 17144 0000C67F E8AD0A0000                      call make_real
 17145 0000C684 C9                              leave
 17146 0000C685 C22000                          ret AND_KILL_FRAME(2)
 17147                                  
 17148                                  L_code_ptr_raw_bin_sub_rr:
 17149 0000C688 C8000000                        enter 0, 0
 17150 0000C68C 48837D1802                      cmp COUNT, 2
 17151 0000C691 0F85980B0000                    jne L_error_arg_count_2
 17152 0000C697 488B5D20                        mov rbx, PARAM(0)
 17153                                          assert_real(rbx)
    53 0000C69B 803B13              <1>  cmp byte [%1], %2
    54 0000C69E 0F852A0C0000        <1>  jne L_error_incorrect_type
 17154 0000C6A4 488B4D28                        mov rcx, PARAM(1)
 17155                                          assert_real(rcx)
    53 0000C6A8 803913              <1>  cmp byte [%1], %2
    54 0000C6AB 0F851D0C0000        <1>  jne L_error_incorrect_type
 17156 0000C6B1 F20F104301                      movsd xmm0, qword [rbx + 1]
 17157 0000C6B6 F20F104901                      movsd xmm1, qword [rcx + 1]
 17158 0000C6BB F20F5CC1                        subsd xmm0, xmm1
 17159 0000C6BF E86D0A0000                      call make_real
 17160 0000C6C4 C9                              leave
 17161 0000C6C5 C22000                          ret AND_KILL_FRAME(2)
 17162                                  
 17163                                  L_code_ptr_raw_bin_mul_rr:
 17164 0000C6C8 C8000000                        enter 0, 0
 17165 0000C6CC 48837D1802                      cmp COUNT, 2
 17166 0000C6D1 0F85580B0000                    jne L_error_arg_count_2
 17167 0000C6D7 488B5D20                        mov rbx, PARAM(0)
 17168                                          assert_real(rbx)
    53 0000C6DB 803B13              <1>  cmp byte [%1], %2
    54 0000C6DE 0F85EA0B0000        <1>  jne L_error_incorrect_type
 17169 0000C6E4 488B4D28                        mov rcx, PARAM(1)
 17170                                          assert_real(rcx)
    53 0000C6E8 803913              <1>  cmp byte [%1], %2
    54 0000C6EB 0F85DD0B0000        <1>  jne L_error_incorrect_type
 17171 0000C6F1 F20F104301                      movsd xmm0, qword [rbx + 1]
 17172 0000C6F6 F20F104901                      movsd xmm1, qword [rcx + 1]
 17173 0000C6FB F20F59C1                        mulsd xmm0, xmm1
 17174 0000C6FF E82D0A0000                      call make_real
 17175 0000C704 C9                              leave
 17176 0000C705 C22000                          ret AND_KILL_FRAME(2)
 17177                                  
 17178                                  L_code_ptr_raw_bin_div_rr:
 17179 0000C708 C8000000                        enter 0, 0
 17180 0000C70C 48837D1802                      cmp COUNT, 2
 17181 0000C711 0F85180B0000                    jne L_error_arg_count_2
 17182 0000C717 488B5D20                        mov rbx, PARAM(0)
 17183                                          assert_real(rbx)
    53 0000C71B 803B13              <1>  cmp byte [%1], %2
    54 0000C71E 0F85AA0B0000        <1>  jne L_error_incorrect_type
 17184 0000C724 488B4D28                        mov rcx, PARAM(1)
 17185                                          assert_real(rcx)
    53 0000C728 803913              <1>  cmp byte [%1], %2
    54 0000C72B 0F859D0B0000        <1>  jne L_error_incorrect_type
 17186 0000C731 F20F104301                      movsd xmm0, qword [rbx + 1]
 17187 0000C736 F20F104901                      movsd xmm1, qword [rcx + 1]
 17188 0000C73B 660FEFD2                        pxor xmm2, xmm2
 17189 0000C73F 660F2ECA                        ucomisd xmm1, xmm2
 17190 0000C743 0F84B60B0000                    je L_error_division_by_zero
 17191 0000C749 F20F5EC1                        divsd xmm0, xmm1
 17192 0000C74D E8DF090000                      call make_real
 17193 0000C752 C9                              leave
 17194 0000C753 C22000                          ret AND_KILL_FRAME(2)
 17195                                  
 17196                                  L_code_ptr_raw_bin_add_zz:
 17197 0000C756 C8000000                	enter 0, 0
 17198 0000C75A 48837D1802              	cmp COUNT, 2
 17199 0000C75F 0F85CA0A0000            	jne L_error_arg_count_2
 17200 0000C765 4C8B4520                	mov r8, PARAM(0)
 17201                                  	assert_integer(r8)
    53 0000C769 41803811            <1>  cmp byte [%1], %2
    54 0000C76D 0F855B0B0000        <1>  jne L_error_incorrect_type
 17202 0000C773 4C8B4D28                	mov r9, PARAM(1)
 17203                                  	assert_integer(r9)
    53 0000C777 41803911            <1>  cmp byte [%1], %2
    54 0000C77B 0F854D0B0000        <1>  jne L_error_incorrect_type
 17204 0000C781 498B7801                	mov rdi, qword [r8 + 1]
 17205 0000C785 49037901                	add rdi, qword [r9 + 1]
 17206 0000C789 E8BB090000              	call make_integer
 17207 0000C78E C9                      	leave
 17208 0000C78F C22000                  	ret AND_KILL_FRAME(2)
 17209                                  
 17210                                  L_code_ptr_raw_bin_add_qq:
 17211 0000C792 C8000000                        enter 0, 0
 17212 0000C796 48837D1802                      cmp COUNT, 2
 17213 0000C79B 0F858E0A0000                    jne L_error_arg_count_2
 17214 0000C7A1 4C8B4520                        mov r8, PARAM(0)
 17215                                          assert_fraction(r8)
    53 0000C7A5 41803812            <1>  cmp byte [%1], %2
    54 0000C7A9 0F851F0B0000        <1>  jne L_error_incorrect_type
 17216 0000C7AF 4C8B4D28                        mov r9, PARAM(1)
 17217                                          assert_fraction(r9)
    53 0000C7B3 41803912            <1>  cmp byte [%1], %2
    54 0000C7B7 0F85110B0000        <1>  jne L_error_incorrect_type
 17218 0000C7BD 498B4001                        mov rax, qword [r8 + 1] ; num1
 17219 0000C7C1 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 17220 0000C7C5 4899                            cqo
 17221 0000C7C7 48F7EB                          imul rbx
 17222 0000C7CA 4889C6                          mov rsi, rax
 17223 0000C7CD 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 17224 0000C7D1 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 17225 0000C7D5 4899                            cqo
 17226 0000C7D7 48F7EB                          imul rbx
 17227 0000C7DA 4801C6                          add rsi, rax
 17228 0000C7DD 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 17229 0000C7E1 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 17230 0000C7E5 4899                            cqo
 17231 0000C7E7 48F7EB                          imul rbx
 17232 0000C7EA 4889C7                          mov rdi, rax
 17233 0000C7ED E8DE010000                      call normalize_fraction
 17234 0000C7F2 C9                              leave
 17235 0000C7F3 C22000                          ret AND_KILL_FRAME(2)
 17236                                  
 17237                                  L_code_ptr_raw_bin_sub_zz:
 17238 0000C7F6 C8000000                	enter 0, 0
 17239 0000C7FA 48837D1802              	cmp COUNT, 2
 17240 0000C7FF 0F852A0A0000            	jne L_error_arg_count_2
 17241 0000C805 4C8B4520                	mov r8, PARAM(0)
 17242                                  	assert_integer(r8)
    53 0000C809 41803811            <1>  cmp byte [%1], %2
    54 0000C80D 0F85BB0A0000        <1>  jne L_error_incorrect_type
 17243 0000C813 4C8B4D28                	mov r9, PARAM(1)
 17244                                  	assert_integer(r9)
    53 0000C817 41803911            <1>  cmp byte [%1], %2
    54 0000C81B 0F85AD0A0000        <1>  jne L_error_incorrect_type
 17245 0000C821 498B7801                	mov rdi, qword [r8 + 1]
 17246 0000C825 492B7901                	sub rdi, qword [r9 + 1]
 17247 0000C829 E81B090000              	call make_integer
 17248 0000C82E C9                      	leave
 17249 0000C82F C22000                  	ret AND_KILL_FRAME(2)
 17250                                  
 17251                                  L_code_ptr_raw_bin_sub_qq:
 17252 0000C832 C8000000                        enter 0, 0
 17253 0000C836 48837D1802                      cmp COUNT, 2
 17254 0000C83B 0F85EE090000                    jne L_error_arg_count_2
 17255 0000C841 4C8B4520                        mov r8, PARAM(0)
 17256                                          assert_fraction(r8)
    53 0000C845 41803812            <1>  cmp byte [%1], %2
    54 0000C849 0F857F0A0000        <1>  jne L_error_incorrect_type
 17257 0000C84F 4C8B4D28                        mov r9, PARAM(1)
 17258                                          assert_fraction(r9)
    53 0000C853 41803912            <1>  cmp byte [%1], %2
    54 0000C857 0F85710A0000        <1>  jne L_error_incorrect_type
 17259 0000C85D 498B4001                        mov rax, qword [r8 + 1] ; num1
 17260 0000C861 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 17261 0000C865 4899                            cqo
 17262 0000C867 48F7EB                          imul rbx
 17263 0000C86A 4889C6                          mov rsi, rax
 17264 0000C86D 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 17265 0000C871 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 17266 0000C875 4899                            cqo
 17267 0000C877 48F7EB                          imul rbx
 17268 0000C87A 4829C6                          sub rsi, rax
 17269 0000C87D 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 17270 0000C881 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 17271 0000C885 4899                            cqo
 17272 0000C887 48F7EB                          imul rbx
 17273 0000C88A 4889C7                          mov rdi, rax
 17274 0000C88D E83E010000                      call normalize_fraction
 17275 0000C892 C9                              leave
 17276 0000C893 C22000                          ret AND_KILL_FRAME(2)
 17277                                  
 17278                                  L_code_ptr_raw_bin_mul_zz:
 17279 0000C896 C8000000                	enter 0, 0
 17280 0000C89A 48837D1802              	cmp COUNT, 2
 17281 0000C89F 0F858A090000            	jne L_error_arg_count_2
 17282 0000C8A5 4C8B4520                	mov r8, PARAM(0)
 17283                                  	assert_integer(r8)
    53 0000C8A9 41803811            <1>  cmp byte [%1], %2
    54 0000C8AD 0F851B0A0000        <1>  jne L_error_incorrect_type
 17284 0000C8B3 4C8B4D28                	mov r9, PARAM(1)
 17285                                  	assert_integer(r9)
    53 0000C8B7 41803911            <1>  cmp byte [%1], %2
    54 0000C8BB 0F850D0A0000        <1>  jne L_error_incorrect_type
 17286 0000C8C1 4899                    	cqo
 17287 0000C8C3 498B4001                	mov rax, qword [r8 + 1]
 17288 0000C8C7 49F76101                	mul qword [r9 + 1]
 17289 0000C8CB 4889C7                  	mov rdi, rax
 17290 0000C8CE E876080000              	call make_integer
 17291 0000C8D3 C9                      	leave
 17292 0000C8D4 C22000                  	ret AND_KILL_FRAME(2)
 17293                                  
 17294                                  L_code_ptr_raw_bin_mul_qq:
 17295 0000C8D7 C8000000                        enter 0, 0
 17296 0000C8DB 48837D1802                      cmp COUNT, 2
 17297 0000C8E0 0F8549090000                    jne L_error_arg_count_2
 17298 0000C8E6 4C8B4520                        mov r8, PARAM(0)
 17299                                          assert_fraction(r8)
    53 0000C8EA 41803812            <1>  cmp byte [%1], %2
    54 0000C8EE 0F85DA090000        <1>  jne L_error_incorrect_type
 17300 0000C8F4 4C8B4D28                        mov r9, PARAM(1)
 17301                                          assert_fraction(r9)
    53 0000C8F8 41803912            <1>  cmp byte [%1], %2
    54 0000C8FC 0F85CC090000        <1>  jne L_error_incorrect_type
 17302 0000C902 498B4001                        mov rax, qword [r8 + 1] ; num1
 17303 0000C906 498B5901                        mov rbx, qword [r9 + 1] ; num2
 17304 0000C90A 4899                            cqo
 17305 0000C90C 48F7EB                          imul rbx
 17306 0000C90F 4889C6                          mov rsi, rax
 17307 0000C912 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 17308 0000C916 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 17309 0000C91A 4899                            cqo
 17310 0000C91C 48F7EB                          imul rbx
 17311 0000C91F 4889C7                          mov rdi, rax
 17312 0000C922 E8A9000000                      call normalize_fraction
 17313 0000C927 C9                              leave
 17314 0000C928 C22000                          ret AND_KILL_FRAME(2)
 17315                                          
 17316                                  L_code_ptr_raw_bin_div_zz:
 17317 0000C92B C8000000                	enter 0, 0
 17318 0000C92F 48837D1802              	cmp COUNT, 2
 17319 0000C934 0F85F5080000            	jne L_error_arg_count_2
 17320 0000C93A 4C8B4520                	mov r8, PARAM(0)
 17321                                  	assert_integer(r8)
    53 0000C93E 41803811            <1>  cmp byte [%1], %2
    54 0000C942 0F8586090000        <1>  jne L_error_incorrect_type
 17322 0000C948 4C8B4D28                	mov r9, PARAM(1)
 17323                                  	assert_integer(r9)
    53 0000C94C 41803911            <1>  cmp byte [%1], %2
    54 0000C950 0F8578090000        <1>  jne L_error_incorrect_type
 17324 0000C956 498B7901                	mov rdi, qword [r9 + 1]
 17325 0000C95A 4883FF00                	cmp rdi, 0
 17326 0000C95E 0F849B090000            	je L_error_division_by_zero
 17327 0000C964 498B7001                	mov rsi, qword [r8 + 1]
 17328 0000C968 E863000000              	call normalize_fraction
 17329 0000C96D C9                      	leave
 17330 0000C96E C22000                  	ret AND_KILL_FRAME(2)
 17331                                  
 17332                                  L_code_ptr_raw_bin_div_qq:
 17333 0000C971 C8000000                        enter 0, 0
 17334 0000C975 48837D1802                      cmp COUNT, 2
 17335 0000C97A 0F85AF080000                    jne L_error_arg_count_2
 17336 0000C980 4C8B4520                        mov r8, PARAM(0)
 17337                                          assert_fraction(r8)
    53 0000C984 41803812            <1>  cmp byte [%1], %2
    54 0000C988 0F8540090000        <1>  jne L_error_incorrect_type
 17338 0000C98E 4C8B4D28                        mov r9, PARAM(1)
 17339                                          assert_fraction(r9)
    53 0000C992 41803912            <1>  cmp byte [%1], %2
    54 0000C996 0F8532090000        <1>  jne L_error_incorrect_type
 17340 0000C99C 4983790100                      cmp qword [r9 + 1], 0
 17341 0000C9A1 0F8458090000                    je L_error_division_by_zero
 17342 0000C9A7 498B4001                        mov rax, qword [r8 + 1] ; num1
 17343 0000C9AB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 17344 0000C9AF 4899                            cqo
 17345 0000C9B1 48F7EB                          imul rbx
 17346 0000C9B4 4889C6                          mov rsi, rax
 17347 0000C9B7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 17348 0000C9BB 498B5901                        mov rbx, qword [r9 + 1] ; num2
 17349 0000C9BF 4899                            cqo
 17350 0000C9C1 48F7EB                          imul rbx
 17351 0000C9C4 4889C7                          mov rdi, rax
 17352 0000C9C7 E804000000                      call normalize_fraction
 17353 0000C9CC C9                              leave
 17354 0000C9CD C22000                          ret AND_KILL_FRAME(2)
 17355                                          
 17356                                  normalize_fraction:
 17357 0000C9D0 56                              push rsi
 17358 0000C9D1 57                              push rdi
 17359 0000C9D2 E859000000                      call gcd
 17360 0000C9D7 4889C3                          mov rbx, rax
 17361 0000C9DA 58                              pop rax
 17362 0000C9DB 4899                            cqo
 17363 0000C9DD 48F7FB                          idiv rbx
 17364 0000C9E0 4989C0                          mov r8, rax
 17365 0000C9E3 58                              pop rax
 17366 0000C9E4 4899                            cqo
 17367 0000C9E6 48F7FB                          idiv rbx
 17368 0000C9E9 4989C1                          mov r9, rax
 17369 0000C9EC 4983F900                        cmp r9, 0
 17370 0000C9F0 741C                            je .L_zero
 17371 0000C9F2 4983F801                        cmp r8, 1
 17372 0000C9F6 7421                            je .L_int
 17373 0000C9F8 BF11000000                      mov rdi, (1 + 8 + 8)
 17374 0000C9FD E82DEBFFFF                      call malloc
 17375 0000CA02 C60012                          mov byte [rax], T_fraction
 17376 0000CA05 4C894801                        mov qword [rax + 1], r9
 17377 0000CA09 4C894009                        mov qword [rax + 1 + 8], r8
 17378 0000CA0D C3                              ret
 17379                                  .L_zero:
 17380 0000CA0E BF00000000                      mov rdi, 0
 17381 0000CA13 E831070000                      call make_integer
 17382 0000CA18 C3                              ret
 17383                                  .L_int:
 17384 0000CA19 4C89CF                          mov rdi, r9
 17385 0000CA1C E828070000                      call make_integer
 17386 0000CA21 C3                              ret
 17387                                  
 17388                                  iabs:
 17389 0000CA22 4889F8                          mov rax, rdi
 17390 0000CA25 4883F800                        cmp rax, 0
 17391 0000CA29 7C01                            jl .Lneg
 17392 0000CA2B C3                              ret
 17393                                  .Lneg:
 17394 0000CA2C 48F7D8                          neg rax
 17395 0000CA2F C3                              ret
 17396                                  
 17397                                  gcd:
 17398 0000CA30 E8EDFFFFFF                      call iabs
 17399 0000CA35 4889C3                          mov rbx, rax
 17400 0000CA38 4889F7                          mov rdi, rsi
 17401 0000CA3B E8E2FFFFFF                      call iabs
 17402 0000CA40 4883F800                        cmp rax, 0
 17403 0000CA44 7502                            jne .L0
 17404 0000CA46 4893                            xchg rax, rbx
 17405                                  .L0:
 17406 0000CA48 4883FB00                        cmp rbx, 0
 17407 0000CA4C 740C                            je .L1
 17408 0000CA4E 4899                            cqo
 17409 0000CA50 48F7F3                          div rbx
 17410 0000CA53 4889D0                          mov rax, rdx
 17411 0000CA56 4893                            xchg rax, rbx
 17412 0000CA58 EBEE                            jmp .L0
 17413                                  .L1:
 17414 0000CA5A C3                              ret
 17415                                  
 17416                                  L_code_ptr_error:
 17417 0000CA5B C8000000                        enter 0, 0
 17418 0000CA5F 48837D1802                      cmp COUNT, 2
 17419 0000CA64 0F85C5070000                    jne L_error_arg_count_2
 17420 0000CA6A 488B7520                        mov rsi, PARAM(0)
 17421                                          assert_interned_symbol(rsi)
    53 0000CA6E 803E41              <1>  cmp byte [%1], %2
    54 0000CA71 0F8557080000        <1>  jne L_error_incorrect_type
 17422 0000CA77 488B7528                        mov rsi, PARAM(1)
 17423                                          assert_string(rsi)
    53 0000CA7B 803E03              <1>  cmp byte [%1], %2
    54 0000CA7E 0F854A080000        <1>  jne L_error_incorrect_type
 17424 0000CA84 48BF-                           mov rdi, fmt_scheme_error_part_1
 17424 0000CA86 [6115000000000000] 
 17425 0000CA8E B800000000                      mov rax, 0
 17426                                          ENTER
    44 0000CA93 C8000000            <1>  enter 0, 0
    45 0000CA97 4883E4F0            <1>  and rsp, ~15
 17427 0000CA9B E8(00000000)                    call printf
 17428                                          LEAVE
    49 0000CAA0 C9                  <1>  leave
 17429 0000CAA1 488B7D20                        mov rdi, PARAM(0)
 17430 0000CAA5 E806EDFFFF                      call print_sexpr
 17431 0000CAAA 48BF-                           mov rdi, fmt_scheme_error_part_2
 17431 0000CAAC [7515000000000000] 
 17432 0000CAB4 B800000000                      mov rax, 0
 17433                                          ENTER
    44 0000CAB9 C8000000            <1>  enter 0, 0
    45 0000CABD 4883E4F0            <1>  and rsp, ~15
 17434 0000CAC1 E8(00000000)                    call printf
 17435                                          LEAVE
    49 0000CAC6 C9                  <1>  leave
 17436 0000CAC7 488B4528                        mov rax, PARAM(1)       ; sob_string
 17437 0000CACB BE01000000                      mov rsi, 1              ; size = 1 byte
 17438 0000CAD0 488B5001                        mov rdx, qword [rax + 1] ; length
 17439 0000CAD4 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 17440 0000CAD8 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 17441                                  	ENTER
    44 0000CAE0 C8000000            <1>  enter 0, 0
    45 0000CAE4 4883E4F0            <1>  and rsp, ~15
 17442 0000CAE8 E8(00000000)                    call fwrite
 17443                                  	LEAVE
    49 0000CAED C9                  <1>  leave
 17444 0000CAEE 48BF-                           mov rdi, fmt_scheme_error_part_3
 17444 0000CAF0 [B715000000000000] 
 17445 0000CAF8 B800000000                      mov rax, 0
 17446                                          ENTER
    44 0000CAFD C8000000            <1>  enter 0, 0
    45 0000CB01 4883E4F0            <1>  and rsp, ~15
 17447 0000CB05 E8(00000000)                    call printf
 17448                                          LEAVE
    49 0000CB0A C9                  <1>  leave
 17449 0000CB0B 48C7C0F7FFFFFF                  mov rax, -9
 17450 0000CB12 E8(00000000)                    call exit
 17451                                  
 17452                                  L_code_ptr_raw_less_than_rr:
 17453 0000CB17 C8000000                        enter 0, 0
 17454 0000CB1B 48837D1802                      cmp COUNT, 2
 17455 0000CB20 0F8509070000                    jne L_error_arg_count_2
 17456 0000CB26 488B7520                        mov rsi, PARAM(0)
 17457                                          assert_real(rsi)
    53 0000CB2A 803E13              <1>  cmp byte [%1], %2
    54 0000CB2D 0F859B070000        <1>  jne L_error_incorrect_type
 17458 0000CB33 488B7D28                        mov rdi, PARAM(1)
 17459                                          assert_real(rdi)
    53 0000CB37 803F13              <1>  cmp byte [%1], %2
    54 0000CB3A 0F858E070000        <1>  jne L_error_incorrect_type
 17460 0000CB40 F20F104601                      movsd xmm0, qword [rsi + 1]
 17461 0000CB45 F20F104F01                      movsd xmm1, qword [rdi + 1]
 17462 0000CB4A 660F2FC1                        comisd xmm0, xmm1
 17463 0000CB4E 730C                            jae .L_false
 17464 0000CB50 48B8-                           mov rax, sob_boolean_true
 17464 0000CB52 [0300000000000000] 
 17465 0000CB5A EB0A                            jmp .L_exit
 17466                                  .L_false:
 17467 0000CB5C 48B8-                           mov rax, sob_boolean_false
 17467 0000CB5E [0200000000000000] 
 17468                                  .L_exit:
 17469 0000CB66 C9                              leave
 17470 0000CB67 C22000                          ret AND_KILL_FRAME(2)
 17471                                          
 17472                                  L_code_ptr_raw_less_than_zz:
 17473 0000CB6A C8000000                	enter 0, 0
 17474 0000CB6E 48837D1802              	cmp COUNT, 2
 17475 0000CB73 0F85B6060000            	jne L_error_arg_count_2
 17476 0000CB79 4C8B4520                	mov r8, PARAM(0)
 17477                                  	assert_integer(r8)
    53 0000CB7D 41803811            <1>  cmp byte [%1], %2
    54 0000CB81 0F8547070000        <1>  jne L_error_incorrect_type
 17478 0000CB87 4C8B4D28                	mov r9, PARAM(1)
 17479                                  	assert_integer(r9)
    53 0000CB8B 41803911            <1>  cmp byte [%1], %2
    54 0000CB8F 0F8539070000        <1>  jne L_error_incorrect_type
 17480 0000CB95 498B7801                	mov rdi, qword [r8 + 1]
 17481 0000CB99 493B7901                	cmp rdi, qword [r9 + 1]
 17482 0000CB9D 7D0C                    	jge .L_false
 17483 0000CB9F 48B8-                   	mov rax, sob_boolean_true
 17483 0000CBA1 [0300000000000000] 
 17484 0000CBA9 EB0A                    	jmp .L_exit
 17485                                  .L_false:
 17486 0000CBAB 48B8-                   	mov rax, sob_boolean_false
 17486 0000CBAD [0200000000000000] 
 17487                                  .L_exit:
 17488 0000CBB5 C9                      	leave
 17489 0000CBB6 C22000                  	ret AND_KILL_FRAME(2)
 17490                                  
 17491                                  L_code_ptr_raw_less_than_qq:
 17492 0000CBB9 C8000000                        enter 0, 0
 17493 0000CBBD 48837D1802                      cmp COUNT, 2
 17494 0000CBC2 0F8567060000                    jne L_error_arg_count_2
 17495 0000CBC8 488B7520                        mov rsi, PARAM(0)
 17496                                          assert_fraction(rsi)
    53 0000CBCC 803E12              <1>  cmp byte [%1], %2
    54 0000CBCF 0F85F9060000        <1>  jne L_error_incorrect_type
 17497 0000CBD5 488B7D28                        mov rdi, PARAM(1)
 17498                                          assert_fraction(rdi)
    53 0000CBD9 803F12              <1>  cmp byte [%1], %2
    54 0000CBDC 0F85EC060000        <1>  jne L_error_incorrect_type
 17499 0000CBE2 488B4601                        mov rax, qword [rsi + 1] ; num1
 17500 0000CBE6 4899                            cqo
 17501 0000CBE8 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 17502 0000CBEC 4889C1                          mov rcx, rax
 17503 0000CBEF 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 17504 0000CBF3 4899                            cqo
 17505 0000CBF5 48F76F01                        imul qword [rdi + 1]          ; num2
 17506 0000CBF9 4829C1                          sub rcx, rax
 17507 0000CBFC 7D0C                            jge .L_false
 17508 0000CBFE 48B8-                           mov rax, sob_boolean_true
 17508 0000CC00 [0300000000000000] 
 17509 0000CC08 EB0A                            jmp .L_exit
 17510                                  .L_false:
 17511 0000CC0A 48B8-                           mov rax, sob_boolean_false
 17511 0000CC0C [0200000000000000] 
 17512                                  .L_exit:
 17513 0000CC14 C9                              leave
 17514 0000CC15 C22000                          ret AND_KILL_FRAME(2)
 17515                                  
 17516                                  L_code_ptr_raw_equal_rr:
 17517 0000CC18 C8000000                        enter 0, 0
 17518 0000CC1C 48837D1802                      cmp COUNT, 2
 17519 0000CC21 0F8508060000                    jne L_error_arg_count_2
 17520 0000CC27 488B7520                        mov rsi, PARAM(0)
 17521                                          assert_real(rsi)
    53 0000CC2B 803E13              <1>  cmp byte [%1], %2
    54 0000CC2E 0F859A060000        <1>  jne L_error_incorrect_type
 17522 0000CC34 488B7D28                        mov rdi, PARAM(1)
 17523                                          assert_real(rdi)
    53 0000CC38 803F13              <1>  cmp byte [%1], %2
    54 0000CC3B 0F858D060000        <1>  jne L_error_incorrect_type
 17524 0000CC41 F20F104601                      movsd xmm0, qword [rsi + 1]
 17525 0000CC46 F20F104F01                      movsd xmm1, qword [rdi + 1]
 17526 0000CC4B 660F2FC1                        comisd xmm0, xmm1
 17527 0000CC4F 750C                            jne .L_false
 17528 0000CC51 48B8-                           mov rax, sob_boolean_true
 17528 0000CC53 [0300000000000000] 
 17529 0000CC5B EB0A                            jmp .L_exit
 17530                                  .L_false:
 17531 0000CC5D 48B8-                           mov rax, sob_boolean_false
 17531 0000CC5F [0200000000000000] 
 17532                                  .L_exit:
 17533 0000CC67 C9                              leave
 17534 0000CC68 C22000                          ret AND_KILL_FRAME(2)
 17535                                          
 17536                                  L_code_ptr_raw_equal_zz:
 17537 0000CC6B C8000000                	enter 0, 0
 17538 0000CC6F 48837D1802              	cmp COUNT, 2
 17539 0000CC74 0F85B5050000            	jne L_error_arg_count_2
 17540 0000CC7A 4C8B4520                	mov r8, PARAM(0)
 17541                                  	assert_integer(r8)
    53 0000CC7E 41803811            <1>  cmp byte [%1], %2
    54 0000CC82 0F8546060000        <1>  jne L_error_incorrect_type
 17542 0000CC88 4C8B4D28                	mov r9, PARAM(1)
 17543                                  	assert_integer(r9)
    53 0000CC8C 41803911            <1>  cmp byte [%1], %2
    54 0000CC90 0F8538060000        <1>  jne L_error_incorrect_type
 17544 0000CC96 498B7801                	mov rdi, qword [r8 + 1]
 17545 0000CC9A 493B7901                	cmp rdi, qword [r9 + 1]
 17546 0000CC9E 750C                    	jne .L_false
 17547 0000CCA0 48B8-                   	mov rax, sob_boolean_true
 17547 0000CCA2 [0300000000000000] 
 17548 0000CCAA EB0A                    	jmp .L_exit
 17549                                  .L_false:
 17550 0000CCAC 48B8-                   	mov rax, sob_boolean_false
 17550 0000CCAE [0200000000000000] 
 17551                                  .L_exit:
 17552 0000CCB6 C9                      	leave
 17553 0000CCB7 C22000                  	ret AND_KILL_FRAME(2)
 17554                                  
 17555                                  L_code_ptr_raw_equal_qq:
 17556 0000CCBA C8000000                        enter 0, 0
 17557 0000CCBE 48837D1802                      cmp COUNT, 2
 17558 0000CCC3 0F8566050000                    jne L_error_arg_count_2
 17559 0000CCC9 488B7520                        mov rsi, PARAM(0)
 17560                                          assert_fraction(rsi)
    53 0000CCCD 803E12              <1>  cmp byte [%1], %2
    54 0000CCD0 0F85F8050000        <1>  jne L_error_incorrect_type
 17561 0000CCD6 488B7D28                        mov rdi, PARAM(1)
 17562                                          assert_fraction(rdi)
    53 0000CCDA 803F12              <1>  cmp byte [%1], %2
    54 0000CCDD 0F85EB050000        <1>  jne L_error_incorrect_type
 17563 0000CCE3 488B4601                        mov rax, qword [rsi + 1] ; num1
 17564 0000CCE7 4899                            cqo
 17565 0000CCE9 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 17566 0000CCED 4889C1                          mov rcx, rax
 17567 0000CCF0 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 17568 0000CCF4 4899                            cqo
 17569 0000CCF6 48F76F01                        imul qword [rdi + 1]          ; num2
 17570 0000CCFA 4829C1                          sub rcx, rax
 17571 0000CCFD 750C                            jne .L_false
 17572 0000CCFF 48B8-                           mov rax, sob_boolean_true
 17572 0000CD01 [0300000000000000] 
 17573 0000CD09 EB0A                            jmp .L_exit
 17574                                  .L_false:
 17575 0000CD0B 48B8-                           mov rax, sob_boolean_false
 17575 0000CD0D [0200000000000000] 
 17576                                  .L_exit:
 17577 0000CD15 C9                              leave
 17578 0000CD16 C22000                          ret AND_KILL_FRAME(2)
 17579                                  
 17580                                  L_code_ptr_quotient:
 17581 0000CD19 C8000000                        enter 0, 0
 17582 0000CD1D 48837D1802                      cmp COUNT, 2
 17583 0000CD22 0F8507050000                    jne L_error_arg_count_2
 17584 0000CD28 488B7520                        mov rsi, PARAM(0)
 17585                                          assert_integer(rsi)
    53 0000CD2C 803E11              <1>  cmp byte [%1], %2
    54 0000CD2F 0F8599050000        <1>  jne L_error_incorrect_type
 17586 0000CD35 488B7D28                        mov rdi, PARAM(1)
 17587                                          assert_integer(rdi)
    53 0000CD39 803F11              <1>  cmp byte [%1], %2
    54 0000CD3C 0F858C050000        <1>  jne L_error_incorrect_type
 17588 0000CD42 488B4601                        mov rax, qword [rsi + 1]
 17589 0000CD46 488B5F01                        mov rbx, qword [rdi + 1]
 17590 0000CD4A 4883FB00                        cmp rbx, 0
 17591 0000CD4E 0F84AB050000                    je L_error_division_by_zero
 17592 0000CD54 4899                            cqo
 17593 0000CD56 48F7FB                          idiv rbx
 17594 0000CD59 4889C7                          mov rdi, rax
 17595 0000CD5C E8E8030000                      call make_integer
 17596 0000CD61 C9                              leave
 17597 0000CD62 C22000                          ret AND_KILL_FRAME(2)
 17598                                          
 17599                                  L_code_ptr_remainder:
 17600 0000CD65 C8000000                        enter 0, 0
 17601 0000CD69 48837D1802                      cmp COUNT, 2
 17602 0000CD6E 0F85BB040000                    jne L_error_arg_count_2
 17603 0000CD74 488B7520                        mov rsi, PARAM(0)
 17604                                          assert_integer(rsi)
    53 0000CD78 803E11              <1>  cmp byte [%1], %2
    54 0000CD7B 0F854D050000        <1>  jne L_error_incorrect_type
 17605 0000CD81 488B7D28                        mov rdi, PARAM(1)
 17606                                          assert_integer(rdi)
    53 0000CD85 803F11              <1>  cmp byte [%1], %2
    54 0000CD88 0F8540050000        <1>  jne L_error_incorrect_type
 17607 0000CD8E 488B4601                        mov rax, qword [rsi + 1]
 17608 0000CD92 488B5F01                        mov rbx, qword [rdi + 1]
 17609 0000CD96 4883FB00                        cmp rbx, 0
 17610 0000CD9A 0F845F050000                    je L_error_division_by_zero
 17611 0000CDA0 4899                            cqo
 17612 0000CDA2 48F7FB                          idiv rbx
 17613 0000CDA5 4889D7                          mov rdi, rdx
 17614 0000CDA8 E89C030000                      call make_integer
 17615 0000CDAD C9                              leave
 17616 0000CDAE C22000                          ret AND_KILL_FRAME(2)
 17617                                  
 17618                                  L_code_ptr_set_car:
 17619 0000CDB1 C8000000                        enter 0, 0
 17620 0000CDB5 48837D1802                      cmp COUNT, 2
 17621 0000CDBA 0F856F040000                    jne L_error_arg_count_2
 17622 0000CDC0 488B4520                        mov rax, PARAM(0)
 17623                                          assert_pair(rax)
    53 0000CDC4 803821              <1>  cmp byte [%1], %2
    54 0000CDC7 0F8501050000        <1>  jne L_error_incorrect_type
 17624 0000CDCD 488B5D28                        mov rbx, PARAM(1)
 17625 0000CDD1 48895801                        mov SOB_PAIR_CAR(rax), rbx
 17626 0000CDD5 48B8-                           mov rax, sob_void
 17626 0000CDD7 [0000000000000000] 
 17627 0000CDDF C9                              leave
 17628 0000CDE0 C22000                          ret AND_KILL_FRAME(2)
 17629                                  
 17630                                  L_code_ptr_set_cdr:
 17631 0000CDE3 C8000000                        enter 0, 0
 17632 0000CDE7 48837D1802                      cmp COUNT, 2
 17633 0000CDEC 0F853D040000                    jne L_error_arg_count_2
 17634 0000CDF2 488B4520                        mov rax, PARAM(0)
 17635                                          assert_pair(rax)
    53 0000CDF6 803821              <1>  cmp byte [%1], %2
    54 0000CDF9 0F85CF040000        <1>  jne L_error_incorrect_type
 17636 0000CDFF 488B5D28                        mov rbx, PARAM(1)
 17637 0000CE03 48895809                        mov SOB_PAIR_CDR(rax), rbx
 17638 0000CE07 48B8-                           mov rax, sob_void
 17638 0000CE09 [0000000000000000] 
 17639 0000CE11 C9                              leave
 17640 0000CE12 C22000                          ret AND_KILL_FRAME(2)
 17641                                  
 17642                                  L_code_ptr_string_ref:
 17643 0000CE15 C8000000                        enter 0, 0
 17644 0000CE19 48837D1802                      cmp COUNT, 2
 17645 0000CE1E 0F850B040000                    jne L_error_arg_count_2
 17646 0000CE24 488B7D20                        mov rdi, PARAM(0)
 17647                                          assert_string(rdi)
    53 0000CE28 803F03              <1>  cmp byte [%1], %2
    54 0000CE2B 0F859D040000        <1>  jne L_error_incorrect_type
 17648 0000CE31 488B7528                        mov rsi, PARAM(1)
 17649                                          assert_integer(rsi)
    53 0000CE35 803E11              <1>  cmp byte [%1], %2
    54 0000CE38 0F8590040000        <1>  jne L_error_incorrect_type
 17650 0000CE3E 488B5701                        mov rdx, qword [rdi + 1]
 17651 0000CE42 488B4E01                        mov rcx, qword [rsi + 1]
 17652 0000CE46 4839D1                          cmp rcx, rdx
 17653 0000CE49 0F8D14030000                    jge L_error_integer_range
 17654 0000CE4F 4883F900                        cmp rcx, 0
 17655 0000CE53 0F8C0A030000                    jl L_error_integer_range
 17656 0000CE59 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 17657 0000CE5D BF02000000                      mov rdi, 2
 17658 0000CE62 E8C8E6FFFF                      call malloc
 17659 0000CE67 C60002                          mov byte [rax], T_char
 17660 0000CE6A 885801                          mov byte [rax + 1], bl
 17661 0000CE6D C9                              leave
 17662 0000CE6E C22000                          ret AND_KILL_FRAME(2)
 17663                                  
 17664                                  L_code_ptr_vector_ref:
 17665 0000CE71 C8000000                        enter 0, 0
 17666 0000CE75 48837D1802                      cmp COUNT, 2
 17667 0000CE7A 0F85AF030000                    jne L_error_arg_count_2
 17668 0000CE80 488B7D20                        mov rdi, PARAM(0)
 17669                                          assert_vector(rdi)
    53 0000CE84 803F22              <1>  cmp byte [%1], %2
    54 0000CE87 0F8541040000        <1>  jne L_error_incorrect_type
 17670 0000CE8D 488B7528                        mov rsi, PARAM(1)
 17671                                          assert_integer(rsi)
    53 0000CE91 803E11              <1>  cmp byte [%1], %2
    54 0000CE94 0F8534040000        <1>  jne L_error_incorrect_type
 17672 0000CE9A 488B5701                        mov rdx, qword [rdi + 1]
 17673 0000CE9E 488B4E01                        mov rcx, qword [rsi + 1]
 17674 0000CEA2 4839D1                          cmp rcx, rdx
 17675 0000CEA5 0F8DB8020000                    jge L_error_integer_range
 17676 0000CEAB 4883F900                        cmp rcx, 0
 17677 0000CEAF 0F8CAE020000                    jl L_error_integer_range
 17678 0000CEB5 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 17679 0000CEBA C9                              leave
 17680 0000CEBB C22000                          ret AND_KILL_FRAME(2)
 17681                                  
 17682                                  L_code_ptr_vector_set:
 17683 0000CEBE C8000000                        enter 0, 0
 17684 0000CEC2 48837D1803                      cmp COUNT, 3
 17685 0000CEC7 0F85CC030000                    jne L_error_arg_count_3
 17686 0000CECD 488B7D20                        mov rdi, PARAM(0)
 17687                                          assert_vector(rdi)
    53 0000CED1 803F22              <1>  cmp byte [%1], %2
    54 0000CED4 0F85F4030000        <1>  jne L_error_incorrect_type
 17688 0000CEDA 488B7528                        mov rsi, PARAM(1)
 17689                                          assert_integer(rsi)
    53 0000CEDE 803E11              <1>  cmp byte [%1], %2
    54 0000CEE1 0F85E7030000        <1>  jne L_error_incorrect_type
 17690 0000CEE7 488B5701                        mov rdx, qword [rdi + 1]
 17691 0000CEEB 488B4E01                        mov rcx, qword [rsi + 1]
 17692 0000CEEF 4839D1                          cmp rcx, rdx
 17693 0000CEF2 0F8D6B020000                    jge L_error_integer_range
 17694 0000CEF8 4883F900                        cmp rcx, 0
 17695 0000CEFC 0F8C61020000                    jl L_error_integer_range
 17696 0000CF02 488B4530                        mov rax, PARAM(2)
 17697 0000CF06 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 17698 0000CF0B 48B8-                           mov rax, sob_void
 17698 0000CF0D [0000000000000000] 
 17699 0000CF15 C9                              leave
 17700 0000CF16 C22800                          ret AND_KILL_FRAME(3)
 17701                                  
 17702                                  L_code_ptr_string_set:
 17703 0000CF19 C8000000                        enter 0, 0
 17704 0000CF1D 48837D1803                      cmp COUNT, 3
 17705 0000CF22 0F8571030000                    jne L_error_arg_count_3
 17706 0000CF28 488B7D20                        mov rdi, PARAM(0)
 17707                                          assert_string(rdi)
    53 0000CF2C 803F03              <1>  cmp byte [%1], %2
    54 0000CF2F 0F8599030000        <1>  jne L_error_incorrect_type
 17708 0000CF35 488B7528                        mov rsi, PARAM(1)
 17709                                          assert_integer(rsi)
    53 0000CF39 803E11              <1>  cmp byte [%1], %2
    54 0000CF3C 0F858C030000        <1>  jne L_error_incorrect_type
 17710 0000CF42 488B5701                        mov rdx, qword [rdi + 1]
 17711 0000CF46 488B4E01                        mov rcx, qword [rsi + 1]
 17712 0000CF4A 4839D1                          cmp rcx, rdx
 17713 0000CF4D 0F8D10020000                    jge L_error_integer_range
 17714 0000CF53 4883F900                        cmp rcx, 0
 17715 0000CF57 0F8C06020000                    jl L_error_integer_range
 17716 0000CF5D 488B4530                        mov rax, PARAM(2)
 17717                                          assert_char(rax)
    53 0000CF61 803802              <1>  cmp byte [%1], %2
    54 0000CF64 0F8564030000        <1>  jne L_error_incorrect_type
 17718 0000CF6A 8A4001                          mov al, byte [rax + 1]
 17719 0000CF6D 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 17720 0000CF71 48B8-                           mov rax, sob_void
 17720 0000CF73 [0000000000000000] 
 17721 0000CF7B C9                              leave
 17722 0000CF7C C22800                          ret AND_KILL_FRAME(3)
 17723                                  
 17724                                  L_code_ptr_make_vector:
 17725 0000CF7F C8000000                        enter 0, 0
 17726 0000CF83 48837D1802                      cmp COUNT, 2
 17727 0000CF88 0F85A1020000                    jne L_error_arg_count_2
 17728 0000CF8E 488B4D20                        mov rcx, PARAM(0)
 17729                                          assert_integer(rcx)
    53 0000CF92 803911              <1>  cmp byte [%1], %2
    54 0000CF95 0F8533030000        <1>  jne L_error_incorrect_type
 17730 0000CF9B 488B4901                        mov rcx, qword [rcx + 1]
 17731 0000CF9F 4883F900                        cmp rcx, 0
 17732 0000CFA3 0F8CBA010000                    jl L_error_integer_range
 17733 0000CFA9 488B5528                        mov rdx, PARAM(1)
 17734 0000CFAD 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 17735 0000CFB5 E875E5FFFF                      call malloc
 17736 0000CFBA C60022                          mov byte [rax], T_vector
 17737 0000CFBD 48894801                        mov qword [rax + 1], rcx
 17738 0000CFC1 41B800000000                    mov r8, 0
 17739                                  .L0:
 17740 0000CFC7 4939C8                          cmp r8, rcx
 17741 0000CFCA 740A                            je .L1
 17742 0000CFCC 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 17743 0000CFD1 49FFC0                          inc r8
 17744 0000CFD4 EBF1                            jmp .L0
 17745                                  .L1:
 17746 0000CFD6 C9                              leave
 17747 0000CFD7 C22000                          ret AND_KILL_FRAME(2)
 17748                                          
 17749                                  L_code_ptr_make_string:
 17750 0000CFDA C8000000                        enter 0, 0
 17751 0000CFDE 48837D1802                      cmp COUNT, 2
 17752 0000CFE3 0F8546020000                    jne L_error_arg_count_2
 17753 0000CFE9 488B4D20                        mov rcx, PARAM(0)
 17754                                          assert_integer(rcx)
    53 0000CFED 803911              <1>  cmp byte [%1], %2
    54 0000CFF0 0F85D8020000        <1>  jne L_error_incorrect_type
 17755 0000CFF6 488B4901                        mov rcx, qword [rcx + 1]
 17756 0000CFFA 4883F900                        cmp rcx, 0
 17757 0000CFFE 0F8C5F010000                    jl L_error_integer_range
 17758 0000D004 488B5528                        mov rdx, PARAM(1)
 17759                                          assert_char(rdx)
    53 0000D008 803A02              <1>  cmp byte [%1], %2
    54 0000D00B 0F85BD020000        <1>  jne L_error_incorrect_type
 17760 0000D011 8A5201                          mov dl, byte [rdx + 1]
 17761 0000D014 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 17762 0000D018 E812E5FFFF                      call malloc
 17763 0000D01D C60003                          mov byte [rax], T_string
 17764 0000D020 48894801                        mov qword [rax + 1], rcx
 17765 0000D024 41B800000000                    mov r8, 0
 17766                                  .L0:
 17767 0000D02A 4939C8                          cmp r8, rcx
 17768 0000D02D 740A                            je .L1
 17769 0000D02F 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 17770 0000D034 49FFC0                          inc r8
 17771 0000D037 EBF1                            jmp .L0
 17772                                  .L1:
 17773 0000D039 C9                              leave
 17774 0000D03A C22000                          ret AND_KILL_FRAME(2)
 17775                                  
 17776                                  L_code_ptr_numerator:
 17777 0000D03D C8000000                        enter 0, 0
 17778 0000D041 48837D1801                      cmp COUNT, 1
 17779 0000D046 0F85AE010000                    jne L_error_arg_count_1
 17780 0000D04C 488B4520                        mov rax, PARAM(0)
 17781                                          assert_fraction(rax)
    53 0000D050 803812              <1>  cmp byte [%1], %2
    54 0000D053 0F8575020000        <1>  jne L_error_incorrect_type
 17782 0000D059 488B7801                        mov rdi, qword [rax + 1]
 17783 0000D05D E8E7000000                      call make_integer
 17784 0000D062 C9                              leave
 17785 0000D063 C21800                          ret AND_KILL_FRAME(1)
 17786                                          
 17787                                  L_code_ptr_denominator:
 17788 0000D066 C8000000                        enter 0, 0
 17789 0000D06A 48837D1801                      cmp COUNT, 1
 17790 0000D06F 0F8585010000                    jne L_error_arg_count_1
 17791 0000D075 488B4520                        mov rax, PARAM(0)
 17792                                          assert_fraction(rax)
    53 0000D079 803812              <1>  cmp byte [%1], %2
    54 0000D07C 0F854C020000        <1>  jne L_error_incorrect_type
 17793 0000D082 488B7809                        mov rdi, qword [rax + 1 + 8]
 17794 0000D086 E8BE000000                      call make_integer
 17795 0000D08B C9                              leave
 17796 0000D08C C21800                          ret AND_KILL_FRAME(1)
 17797                                  
 17798                                  L_code_ptr_is_eq:
 17799 0000D08F C8000000                	enter 0, 0
 17800 0000D093 48837D1802              	cmp COUNT, 2
 17801 0000D098 0F8591010000            	jne L_error_arg_count_2
 17802 0000D09E 488B7D20                	mov rdi, PARAM(0)
 17803 0000D0A2 488B7528                	mov rsi, PARAM(1)
 17804 0000D0A6 4839F7                  	cmp rdi, rsi
 17805 0000D0A9 746C                    	je .L_eq_true
 17806 0000D0AB 8A17                    	mov dl, byte [rdi]
 17807 0000D0AD 3A16                    	cmp dl, byte [rsi]
 17808 0000D0AF 7572                    	jne .L_eq_false
 17809 0000D0B1 80FA02                  	cmp dl, T_char
 17810 0000D0B4 7459                    	je .L_char
 17811 0000D0B6 80FA41                  	cmp dl, T_interned_symbol
 17812 0000D0B9 7440                    	je .L_interned_symbol
 17813 0000D0BB 80FA42                          cmp dl, T_uninterned_symbol
 17814 0000D0BE 7443                            je .L_uninterned_symbol
 17815 0000D0C0 80FA13                  	cmp dl, T_real
 17816 0000D0C3 742E                    	je .L_real
 17817 0000D0C5 80FA12                  	cmp dl, T_fraction
 17818 0000D0C8 7413                    	je .L_fraction
 17819 0000D0CA 80FA11                          cmp dl, T_integer
 17820 0000D0CD 7402                            je .L_integer
 17821 0000D0CF EB52                    	jmp .L_eq_false
 17822                                  .L_integer:
 17823 0000D0D1 488B4601                        mov rax, qword [rsi + 1]
 17824 0000D0D5 483B4701                        cmp rax, qword [rdi + 1]
 17825 0000D0D9 7548                            jne .L_eq_false
 17826 0000D0DB EB3A                            jmp .L_eq_true
 17827                                  .L_fraction:
 17828 0000D0DD 488B4601                	mov rax, qword [rsi + 1]
 17829 0000D0E1 483B4701                	cmp rax, qword [rdi + 1]
 17830 0000D0E5 753C                    	jne .L_eq_false
 17831 0000D0E7 488B4609                	mov rax, qword [rsi + 1 + 8]
 17832 0000D0EB 483B4709                	cmp rax, qword [rdi + 1 + 8]
 17833 0000D0EF 7532                    	jne .L_eq_false
 17834 0000D0F1 EB24                    	jmp .L_eq_true
 17835                                  .L_real:
 17836 0000D0F3 488B4601                	mov rax, qword [rsi + 1]
 17837 0000D0F7 483B4701                	cmp rax, qword [rdi + 1]
 17838                                  .L_interned_symbol:
 17839                                  	; never reached, because interned_symbols are static!
 17840                                  	; but I'm keeping it in case, I'll ever change
 17841                                  	; the implementation
 17842 0000D0FB 488B4601                	mov rax, qword [rsi + 1]
 17843 0000D0FF 483B4701                	cmp rax, qword [rdi + 1]
 17844                                  .L_uninterned_symbol:
 17845 0000D103 4C8B4701                        mov r8, qword [rdi + 1]
 17846 0000D107 4C3B4601                        cmp r8, qword [rsi + 1]
 17847 0000D10B 7516                            jne .L_eq_false
 17848 0000D10D EB08                            jmp .L_eq_true
 17849                                  .L_char:
 17850 0000D10F 8A5E01                  	mov bl, byte [rsi + 1]
 17851 0000D112 3A5F01                  	cmp bl, byte [rdi + 1]
 17852 0000D115 750C                    	jne .L_eq_false
 17853                                  .L_eq_true:
 17854 0000D117 48B8-                   	mov rax, sob_boolean_true
 17854 0000D119 [0300000000000000] 
 17855 0000D121 EB0A                    	jmp .L_eq_exit
 17856                                  .L_eq_false:
 17857 0000D123 48B8-                   	mov rax, sob_boolean_false
 17857 0000D125 [0200000000000000] 
 17858                                  .L_eq_exit:
 17859 0000D12D C9                      	leave
 17860 0000D12E C22000                  	ret AND_KILL_FRAME(2)
 17861                                  
 17862                                  make_real:
 17863 0000D131 C8000000                        enter 0, 0
 17864 0000D135 BF09000000                      mov rdi, (1 + 8)
 17865 0000D13A E8F0E3FFFF                      call malloc
 17866 0000D13F C60013                          mov byte [rax], T_real
 17867 0000D142 F20F114001                      movsd qword [rax + 1], xmm0
 17868 0000D147 C9                              leave 
 17869 0000D148 C3                              ret
 17870                                          
 17871                                  make_integer:
 17872 0000D149 C8000000                        enter 0, 0
 17873 0000D14D 4889FE                          mov rsi, rdi
 17874 0000D150 BF09000000                      mov rdi, (1 + 8)
 17875 0000D155 E8D5E3FFFF                      call malloc
 17876 0000D15A C60011                          mov byte [rax], T_integer
 17877 0000D15D 48897001                        mov qword [rax + 1], rsi
 17878 0000D161 C9                              leave
 17879 0000D162 C3                              ret
 17880                                          
 17881                                  L_error_integer_range:
 17882 0000D163 488B3C25[00000000]              mov rdi, qword [stderr]
 17883 0000D16B 48BE-                           mov rsi, fmt_integer_range
 17883 0000D16D [2E15000000000000] 
 17884 0000D175 B800000000                      mov rax, 0
 17885                                          ENTER
    44 0000D17A C8000000            <1>  enter 0, 0
    45 0000D17E 4883E4F0            <1>  and rsp, ~15
 17886 0000D182 E8(00000000)                    call fprintf
 17887                                          LEAVE
    49 0000D187 C9                  <1>  leave
 17888 0000D188 48C7C0FBFFFFFF                  mov rax, -5
 17889 0000D18F E8(00000000)                    call exit
 17890                                  
 17891                                  L_error_arg_negative:
 17892 0000D194 488B3C25[00000000]              mov rdi, qword [stderr]
 17893 0000D19C 48BE-                           mov rsi, fmt_arg_negative
 17893 0000D19E [0614000000000000] 
 17894 0000D1A6 B800000000                      mov rax, 0
 17895                                          ENTER
    44 0000D1AB C8000000            <1>  enter 0, 0
    45 0000D1AF 4883E4F0            <1>  and rsp, ~15
 17896 0000D1B3 E8(00000000)                    call fprintf
 17897                                          LEAVE
    49 0000D1B8 C9                  <1>  leave
 17898 0000D1B9 48C7C0FDFFFFFF                  mov rax, -3
 17899 0000D1C0 E8(00000000)                    call exit
 17900                                  
 17901                                  L_error_arg_count_0:
 17902 0000D1C5 488B3C25[00000000]              mov rdi, qword [stderr]
 17903 0000D1CD 48BE-                           mov rsi, fmt_arg_count_0
 17903 0000D1CF [2C14000000000000] 
 17904 0000D1D7 488B5518                        mov rdx, COUNT
 17905 0000D1DB B800000000                      mov rax, 0
 17906                                          ENTER
    44 0000D1E0 C8000000            <1>  enter 0, 0
    45 0000D1E4 4883E4F0            <1>  and rsp, ~15
 17907 0000D1E8 E8(00000000)                    call fprintf
 17908                                          LEAVE
    49 0000D1ED C9                  <1>  leave
 17909 0000D1EE 48C7C0FDFFFFFF                  mov rax, -3
 17910 0000D1F5 E8(00000000)                    call exit
 17911                                  
 17912                                  L_error_arg_count_1:
 17913 0000D1FA 488B3C25[00000000]              mov rdi, qword [stderr]
 17914 0000D202 48BE-                           mov rsi, fmt_arg_count_1
 17914 0000D204 [5414000000000000] 
 17915 0000D20C 488B5518                        mov rdx, COUNT
 17916 0000D210 B800000000                      mov rax, 0
 17917                                          ENTER
    44 0000D215 C8000000            <1>  enter 0, 0
    45 0000D219 4883E4F0            <1>  and rsp, ~15
 17918 0000D21D E8(00000000)                    call fprintf
 17919                                          LEAVE
    49 0000D222 C9                  <1>  leave
 17920 0000D223 48C7C0FDFFFFFF                  mov rax, -3
 17921 0000D22A E8(00000000)                    call exit
 17922                                  
 17923                                  L_error_arg_count_2:
 17924 0000D22F 488B3C25[00000000]              mov rdi, qword [stderr]
 17925 0000D237 48BE-                           mov rsi, fmt_arg_count_2
 17925 0000D239 [BA14000000000000] 
 17926 0000D241 488B5518                        mov rdx, COUNT
 17927 0000D245 B800000000                      mov rax, 0
 17928                                          ENTER
    44 0000D24A C8000000            <1>  enter 0, 0
    45 0000D24E 4883E4F0            <1>  and rsp, ~15
 17929 0000D252 E8(00000000)                    call fprintf
 17930                                          LEAVE
    49 0000D257 C9                  <1>  leave
 17931 0000D258 48C7C0FDFFFFFF                  mov rax, -3
 17932 0000D25F E8(00000000)                    call exit
 17933                                  
 17934                                  L_error_arg_count_12:
 17935 0000D264 488B3C25[00000000]              mov rdi, qword [stderr]
 17936 0000D26C 48BE-                           mov rsi, fmt_arg_count_12
 17936 0000D26E [7A14000000000000] 
 17937 0000D276 488B5518                        mov rdx, COUNT
 17938 0000D27A B800000000                      mov rax, 0
 17939                                          ENTER
    44 0000D27F C8000000            <1>  enter 0, 0
    45 0000D283 4883E4F0            <1>  and rsp, ~15
 17940 0000D287 E8(00000000)                    call fprintf
 17941                                          LEAVE
    49 0000D28C C9                  <1>  leave
 17942 0000D28D 48C7C0FDFFFFFF                  mov rax, -3
 17943 0000D294 E8(00000000)                    call exit
 17944                                  
 17945                                  L_error_arg_count_3:
 17946 0000D299 488B3C25[00000000]              mov rdi, qword [stderr]
 17947 0000D2A1 48BE-                           mov rsi, fmt_arg_count_3
 17947 0000D2A3 [E114000000000000] 
 17948 0000D2AB 488B5518                        mov rdx, COUNT
 17949 0000D2AF B800000000                      mov rax, 0
 17950                                          ENTER
    44 0000D2B4 C8000000            <1>  enter 0, 0
    45 0000D2B8 4883E4F0            <1>  and rsp, ~15
 17951 0000D2BC E8(00000000)                    call fprintf
 17952                                          LEAVE
    49 0000D2C1 C9                  <1>  leave
 17953 0000D2C2 48C7C0FDFFFFFF                  mov rax, -3
 17954 0000D2C9 E8(00000000)                    call exit
 17955                                          
 17956                                  L_error_incorrect_type:
 17957 0000D2CE 488B3C25[00000000]              mov rdi, qword [stderr]
 17958 0000D2D6 48BE-                           mov rsi, fmt_type
 17958 0000D2D8 [0A15000000000000] 
 17959 0000D2E0 B800000000                      mov rax, 0
 17960                                          ENTER
    44 0000D2E5 C8000000            <1>  enter 0, 0
    45 0000D2E9 4883E4F0            <1>  and rsp, ~15
 17961 0000D2ED E8(00000000)                    call fprintf
 17962                                          LEAVE
    49 0000D2F2 C9                  <1>  leave
 17963 0000D2F3 48C7C0FCFFFFFF                  mov rax, -4
 17964 0000D2FA E8(00000000)                    call exit
 17965                                  
 17966                                  L_error_division_by_zero:
 17967 0000D2FF 488B3C25[00000000]              mov rdi, qword [stderr]
 17968 0000D307 48BE-                           mov rsi, fmt_division_by_zero
 17968 0000D309 [4B15000000000000] 
 17969 0000D311 B800000000                      mov rax, 0
 17970                                          ENTER
    44 0000D316 C8000000            <1>  enter 0, 0
    45 0000D31A 4883E4F0            <1>  and rsp, ~15
 17971 0000D31E E8(00000000)                    call fprintf
 17972                                          LEAVE
    49 0000D323 C9                  <1>  leave
 17973 0000D324 48C7C0F8FFFFFF                  mov rax, -8
 17974 0000D32B E8(00000000)                    call exit
 17975                                  
 17976                                  section .data
 17977                                  gensym_count:
 17978 000013FB 0000000000000000                dq 0
 17979                                  fmt_char:
 17980 00001403 256300                          db `%c\0`
 17981                                  fmt_arg_negative:
 17982 00001406 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 17982 0000140F 7267756D656E742063-
 17982 00001418 616E6E6F7420626520-
 17982 00001421 6E656761746976652E-
 17982 0000142A 0A00               
 17983                                  fmt_arg_count_0:
 17984 0000142C 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 17984 00001435 74696E67207A65726F-
 17984 0000143E 20617267756D656E74-
 17984 00001447 732E20466F756E6420-
 17984 00001450 25640A00           
 17985                                  fmt_arg_count_1:
 17986 00001454 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 17986 0000145D 74696E67206F6E6520-
 17986 00001466 617267756D656E742E-
 17986 0000146F 20466F756E64202564-
 17986 00001478 0A00               
 17987                                  fmt_arg_count_12:
 17988 0000147A 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 17988 00001483 74696E67206F6E6520-
 17988 0000148C 726571756972656420-
 17988 00001495 616E64206F6E65206F-
 17988 0000149E 7074696F6E616C2061-
 17988 000014A7 7267756D656E742E20-
 17988 000014B0 466F756E642025640A-
 17988 000014B9 00                 
 17989                                  fmt_arg_count_2:
 17990 000014BA 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 17990 000014C3 74696E672074776F20-
 17990 000014CC 617267756D656E7473-
 17990 000014D5 2E20466F756E642025-
 17990 000014DE 640A00             
 17991                                  fmt_arg_count_3:
 17992 000014E1 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 17992 000014EA 74696E672074687265-
 17992 000014F3 6520617267756D656E-
 17992 000014FC 74732E20466F756E64-
 17992 00001505 2025640A00         
 17993                                  fmt_type:
 17994 0000150A 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 17994 00001513 696F6E207061737365-
 17994 0000151C 6420696E636F727265-
 17994 00001525 637420747970650A00 
 17995                                  fmt_integer_range:
 17996 0000152E 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 17996 00001537 7265637420696E7465-
 17996 00001540 6765722072616E6765-
 17996 00001549 0A00               
 17997                                  fmt_division_by_zero:
 17998 0000154B 212121204469766973-             db `!!! Division by zero\n\0`
 17998 00001554 696F6E206279207A65-
 17998 0000155D 726F0A00           
 17999                                  fmt_scheme_error_part_1:
 18000 00001561 0A2121212054686520-             db `\n!!! The procedure \0`
 18000 0000156A 70726F636564757265-
 18000 00001573 2000               
 18001                                  fmt_scheme_error_part_2:
 18002 00001575 2061736B656420746F-             db ` asked to terminate the program\n`
 18002 0000157E 207465726D696E6174-
 18002 00001587 65207468652070726F-
 18002 00001590 6772616D0A         
 18003 00001595 202020207769746820-             db `    with the following message:\n\n\0`
 18003 0000159E 74686520666F6C6C6F-
 18003 000015A7 77696E67206D657373-
 18003 000015B0 6167653A0A0A00     
 18004                                  fmt_scheme_error_part_3:
 18005 000015B7 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 18005 000015C0 210A0A00           
