     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [4804000000000000]      	dq L_constants + 1096
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [5C04000000000000]      	dq L_constants + 1116
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  free_var_0:	; location of *
  1005 00000DC5 [CD0D000000000000]      	dq .undefined_object
  1006                                  .undefined_object:
  1007 00000DCD 05                      	db T_undefined
  1008 00000DCE [D408000000000000]      	dq L_constants + 2260
  1009                                  
  1010                                  free_var_1:	; location of +
  1011 00000DD6 [DE0D000000000000]      	dq .undefined_object
  1012                                  .undefined_object:
  1013 00000DDE 05                      	db T_undefined
  1014 00000DDF [4D08000000000000]      	dq L_constants + 2125
  1015                                  
  1016                                  free_var_2:	; location of -
  1017 00000DE7 [EF0D000000000000]      	dq .undefined_object
  1018                                  .undefined_object:
  1019 00000DEF 05                      	db T_undefined
  1020 00000DF0 [B408000000000000]      	dq L_constants + 2228
  1021                                  
  1022                                  free_var_3:	; location of /
  1023 00000DF8 [000E000000000000]      	dq .undefined_object
  1024                                  .undefined_object:
  1025 00000E00 05                      	db T_undefined
  1026 00000E01 [F008000000000000]      	dq L_constants + 2288
  1027                                  
  1028                                  free_var_4:	; location of <
  1029 00000E09 [110E000000000000]      	dq .undefined_object
  1030                                  .undefined_object:
  1031 00000E11 05                      	db T_undefined
  1032 00000E12 [1009000000000000]      	dq L_constants + 2320
  1033                                  
  1034                                  free_var_5:	; location of <=
  1035 00000E1A [220E000000000000]      	dq .undefined_object
  1036                                  .undefined_object:
  1037 00000E22 05                      	db T_undefined
  1038 00000E23 [1A09000000000000]      	dq L_constants + 2330
  1039                                  
  1040                                  free_var_6:	; location of =
  1041 00000E2B [330E000000000000]      	dq .undefined_object
  1042                                  .undefined_object:
  1043 00000E33 05                      	db T_undefined
  1044 00000E34 [3A09000000000000]      	dq L_constants + 2362
  1045                                  
  1046                                  free_var_7:	; location of >
  1047 00000E3C [440E000000000000]      	dq .undefined_object
  1048                                  .undefined_object:
  1049 00000E44 05                      	db T_undefined
  1050 00000E45 [2509000000000000]      	dq L_constants + 2341
  1051                                  
  1052                                  free_var_8:	; location of >=
  1053 00000E4D [550E000000000000]      	dq .undefined_object
  1054                                  .undefined_object:
  1055 00000E55 05                      	db T_undefined
  1056 00000E56 [2F09000000000000]      	dq L_constants + 2351
  1057                                  
  1058                                  free_var_9:	; location of __bin-add-qq
  1059 00000E5E [660E000000000000]      	dq .undefined_object
  1060                                  .undefined_object:
  1061 00000E66 05                      	db T_undefined
  1062 00000E67 [6902000000000000]      	dq L_constants + 617
  1063                                  
  1064                                  free_var_10:	; location of __bin-add-rr
  1065 00000E6F [770E000000000000]      	dq .undefined_object
  1066                                  .undefined_object:
  1067 00000E77 05                      	db T_undefined
  1068 00000E78 [1502000000000000]      	dq L_constants + 533
  1069                                  
  1070                                  free_var_11:	; location of __bin-add-zz
  1071 00000E80 [880E000000000000]      	dq .undefined_object
  1072                                  .undefined_object:
  1073 00000E88 05                      	db T_undefined
  1074 00000E89 [BD02000000000000]      	dq L_constants + 701
  1075                                  
  1076                                  free_var_12:	; location of __bin-apply
  1077 00000E91 [990E000000000000]      	dq .undefined_object
  1078                                  .undefined_object:
  1079 00000E99 05                      	db T_undefined
  1080 00000E9A [0102000000000000]      	dq L_constants + 513
  1081                                  
  1082                                  free_var_13:	; location of __bin-div-qq
  1083 00000EA2 [AA0E000000000000]      	dq .undefined_object
  1084                                  .undefined_object:
  1085 00000EAA 05                      	db T_undefined
  1086 00000EAB [A802000000000000]      	dq L_constants + 680
  1087                                  
  1088                                  free_var_14:	; location of __bin-div-rr
  1089 00000EB3 [BB0E000000000000]      	dq .undefined_object
  1090                                  .undefined_object:
  1091 00000EBB 05                      	db T_undefined
  1092 00000EBC [5402000000000000]      	dq L_constants + 596
  1093                                  
  1094                                  free_var_15:	; location of __bin-div-zz
  1095 00000EC4 [CC0E000000000000]      	dq .undefined_object
  1096                                  .undefined_object:
  1097 00000ECC 05                      	db T_undefined
  1098 00000ECD [FC02000000000000]      	dq L_constants + 764
  1099                                  
  1100                                  free_var_16:	; location of __bin-equal-qq
  1101 00000ED5 [DD0E000000000000]      	dq .undefined_object
  1102                                  .undefined_object:
  1103 00000EDD 05                      	db T_undefined
  1104 00000EDE [8703000000000000]      	dq L_constants + 903
  1105                                  
  1106                                  free_var_17:	; location of __bin-equal-rr
  1107 00000EE6 [EE0E000000000000]      	dq .undefined_object
  1108                                  .undefined_object:
  1109 00000EEE 05                      	db T_undefined
  1110 00000EEF [7003000000000000]      	dq L_constants + 880
  1111                                  
  1112                                  free_var_18:	; location of __bin-equal-zz
  1113 00000EF7 [FF0E000000000000]      	dq .undefined_object
  1114                                  .undefined_object:
  1115 00000EFF 05                      	db T_undefined
  1116 00000F00 [9E03000000000000]      	dq L_constants + 926
  1117                                  
  1118                                  free_var_19:	; location of __bin-less-than-qq
  1119 00000F08 [100F000000000000]      	dq .undefined_object
  1120                                  .undefined_object:
  1121 00000F10 05                      	db T_undefined
  1122 00000F11 [3A03000000000000]      	dq L_constants + 826
  1123                                  
  1124                                  free_var_20:	; location of __bin-less-than-rr
  1125 00000F19 [210F000000000000]      	dq .undefined_object
  1126                                  .undefined_object:
  1127 00000F21 05                      	db T_undefined
  1128 00000F22 [1F03000000000000]      	dq L_constants + 799
  1129                                  
  1130                                  free_var_21:	; location of __bin-less-than-zz
  1131 00000F2A [320F000000000000]      	dq .undefined_object
  1132                                  .undefined_object:
  1133 00000F32 05                      	db T_undefined
  1134 00000F33 [5503000000000000]      	dq L_constants + 853
  1135                                  
  1136                                  free_var_22:	; location of __bin-mul-qq
  1137 00000F3B [430F000000000000]      	dq .undefined_object
  1138                                  .undefined_object:
  1139 00000F43 05                      	db T_undefined
  1140 00000F44 [9302000000000000]      	dq L_constants + 659
  1141                                  
  1142                                  free_var_23:	; location of __bin-mul-rr
  1143 00000F4C [540F000000000000]      	dq .undefined_object
  1144                                  .undefined_object:
  1145 00000F54 05                      	db T_undefined
  1146 00000F55 [3F02000000000000]      	dq L_constants + 575
  1147                                  
  1148                                  free_var_24:	; location of __bin-mul-zz
  1149 00000F5D [650F000000000000]      	dq .undefined_object
  1150                                  .undefined_object:
  1151 00000F65 05                      	db T_undefined
  1152 00000F66 [E702000000000000]      	dq L_constants + 743
  1153                                  
  1154                                  free_var_25:	; location of __bin-sub-qq
  1155 00000F6E [760F000000000000]      	dq .undefined_object
  1156                                  .undefined_object:
  1157 00000F76 05                      	db T_undefined
  1158 00000F77 [7E02000000000000]      	dq L_constants + 638
  1159                                  
  1160                                  free_var_26:	; location of __bin-sub-rr
  1161 00000F7F [870F000000000000]      	dq .undefined_object
  1162                                  .undefined_object:
  1163 00000F87 05                      	db T_undefined
  1164 00000F88 [2A02000000000000]      	dq L_constants + 554
  1165                                  
  1166                                  free_var_27:	; location of __bin-sub-zz
  1167 00000F90 [980F000000000000]      	dq .undefined_object
  1168                                  .undefined_object:
  1169 00000F98 05                      	db T_undefined
  1170 00000F99 [D202000000000000]      	dq L_constants + 722
  1171                                  
  1172                                  free_var_28:	; location of __bin_integer_to_fraction
  1173 00000FA1 [A90F000000000000]      	dq .undefined_object
  1174                                  .undefined_object:
  1175 00000FA9 05                      	db T_undefined
  1176 00000FAA [6008000000000000]      	dq L_constants + 2144
  1177                                  
  1178                                  free_var_29:	; location of __integer-to-fraction
  1179 00000FB2 [BA0F000000000000]      	dq .undefined_object
  1180                                  .undefined_object:
  1181 00000FBA 05                      	db T_undefined
  1182 00000FBB [A204000000000000]      	dq L_constants + 1186
  1183                                  
  1184                                  free_var_30:	; location of abs
  1185 00000FC3 [CB0F000000000000]      	dq .undefined_object
  1186                                  .undefined_object:
  1187 00000FCB 05                      	db T_undefined
  1188 00000FCC [8C0C000000000000]      	dq L_constants + 3212
  1189                                  
  1190                                  free_var_31:	; location of andmap
  1191 00000FD4 [DC0F000000000000]      	dq .undefined_object
  1192                                  .undefined_object:
  1193 00000FDC 05                      	db T_undefined
  1194 00000FDD [FA07000000000000]      	dq L_constants + 2042
  1195                                  
  1196                                  free_var_32:	; location of append
  1197 00000FE5 [ED0F000000000000]      	dq .undefined_object
  1198                                  .undefined_object:
  1199 00000FED 05                      	db T_undefined
  1200 00000FEE [2B08000000000000]      	dq L_constants + 2091
  1201                                  
  1202                                  free_var_33:	; location of apply
  1203 00000FF6 [FE0F000000000000]      	dq .undefined_object
  1204                                  .undefined_object:
  1205 00000FFE 05                      	db T_undefined
  1206 00000FFF [D207000000000000]      	dq L_constants + 2002
  1207                                  
  1208                                  free_var_34:	; location of assoc
  1209 00001007 [0F10000000000000]      	dq .undefined_object
  1210                                  .undefined_object:
  1211 0000100F 05                      	db T_undefined
  1212 00001010 [A70C000000000000]      	dq L_constants + 3239
  1213                                  
  1214                                  free_var_35:	; location of caaaar
  1215 00001018 [2010000000000000]      	dq .undefined_object
  1216                                  .undefined_object:
  1217 00001020 05                      	db T_undefined
  1218 00001021 [8106000000000000]      	dq L_constants + 1665
  1219                                  
  1220                                  free_var_36:	; location of caaadr
  1221 00001029 [3110000000000000]      	dq .undefined_object
  1222                                  .undefined_object:
  1223 00001031 05                      	db T_undefined
  1224 00001032 [9006000000000000]      	dq L_constants + 1680
  1225                                  
  1226                                  free_var_37:	; location of caaar
  1227 0000103A [4210000000000000]      	dq .undefined_object
  1228                                  .undefined_object:
  1229 00001042 05                      	db T_undefined
  1230 00001043 [1106000000000000]      	dq L_constants + 1553
  1231                                  
  1232                                  free_var_38:	; location of caadar
  1233 0000104B [5310000000000000]      	dq .undefined_object
  1234                                  .undefined_object:
  1235 00001053 05                      	db T_undefined
  1236 00001054 [9F06000000000000]      	dq L_constants + 1695
  1237                                  
  1238                                  free_var_39:	; location of caaddr
  1239 0000105C [6410000000000000]      	dq .undefined_object
  1240                                  .undefined_object:
  1241 00001064 05                      	db T_undefined
  1242 00001065 [AE06000000000000]      	dq L_constants + 1710
  1243                                  
  1244                                  free_var_40:	; location of caadr
  1245 0000106D [7510000000000000]      	dq .undefined_object
  1246                                  .undefined_object:
  1247 00001075 05                      	db T_undefined
  1248 00001076 [1F06000000000000]      	dq L_constants + 1567
  1249                                  
  1250                                  free_var_41:	; location of caar
  1251 0000107E [8610000000000000]      	dq .undefined_object
  1252                                  .undefined_object:
  1253 00001086 05                      	db T_undefined
  1254 00001087 [DD05000000000000]      	dq L_constants + 1501
  1255                                  
  1256                                  free_var_42:	; location of cadaar
  1257 0000108F [9710000000000000]      	dq .undefined_object
  1258                                  .undefined_object:
  1259 00001097 05                      	db T_undefined
  1260 00001098 [BD06000000000000]      	dq L_constants + 1725
  1261                                  
  1262                                  free_var_43:	; location of cadadr
  1263 000010A0 [A810000000000000]      	dq .undefined_object
  1264                                  .undefined_object:
  1265 000010A8 05                      	db T_undefined
  1266 000010A9 [CC06000000000000]      	dq L_constants + 1740
  1267                                  
  1268                                  free_var_44:	; location of cadar
  1269 000010B1 [B910000000000000]      	dq .undefined_object
  1270                                  .undefined_object:
  1271 000010B9 05                      	db T_undefined
  1272 000010BA [2D06000000000000]      	dq L_constants + 1581
  1273                                  
  1274                                  free_var_45:	; location of caddar
  1275 000010C2 [CA10000000000000]      	dq .undefined_object
  1276                                  .undefined_object:
  1277 000010CA 05                      	db T_undefined
  1278 000010CB [DB06000000000000]      	dq L_constants + 1755
  1279                                  
  1280                                  free_var_46:	; location of cadddr
  1281 000010D3 [DB10000000000000]      	dq .undefined_object
  1282                                  .undefined_object:
  1283 000010DB 05                      	db T_undefined
  1284 000010DC [EA06000000000000]      	dq L_constants + 1770
  1285                                  
  1286                                  free_var_47:	; location of caddr
  1287 000010E4 [EC10000000000000]      	dq .undefined_object
  1288                                  .undefined_object:
  1289 000010EC 05                      	db T_undefined
  1290 000010ED [3B06000000000000]      	dq L_constants + 1595
  1291                                  
  1292                                  free_var_48:	; location of cadr
  1293 000010F5 [FD10000000000000]      	dq .undefined_object
  1294                                  .undefined_object:
  1295 000010FD 05                      	db T_undefined
  1296 000010FE [EA05000000000000]      	dq L_constants + 1514
  1297                                  
  1298                                  free_var_49:	; location of car
  1299 00001106 [0E11000000000000]      	dq .undefined_object
  1300                                  .undefined_object:
  1301 0000110E 05                      	db T_undefined
  1302 0000110F [1501000000000000]      	dq L_constants + 277
  1303                                  
  1304                                  free_var_50:	; location of cdaaar
  1305 00001117 [1F11000000000000]      	dq .undefined_object
  1306                                  .undefined_object:
  1307 0000111F 05                      	db T_undefined
  1308 00001120 [F906000000000000]      	dq L_constants + 1785
  1309                                  
  1310                                  free_var_51:	; location of cdaadr
  1311 00001128 [3011000000000000]      	dq .undefined_object
  1312                                  .undefined_object:
  1313 00001130 05                      	db T_undefined
  1314 00001131 [0807000000000000]      	dq L_constants + 1800
  1315                                  
  1316                                  free_var_52:	; location of cdaar
  1317 00001139 [4111000000000000]      	dq .undefined_object
  1318                                  .undefined_object:
  1319 00001141 05                      	db T_undefined
  1320 00001142 [4906000000000000]      	dq L_constants + 1609
  1321                                  
  1322                                  free_var_53:	; location of cdadar
  1323 0000114A [5211000000000000]      	dq .undefined_object
  1324                                  .undefined_object:
  1325 00001152 05                      	db T_undefined
  1326 00001153 [1707000000000000]      	dq L_constants + 1815
  1327                                  
  1328                                  free_var_54:	; location of cdaddr
  1329 0000115B [6311000000000000]      	dq .undefined_object
  1330                                  .undefined_object:
  1331 00001163 05                      	db T_undefined
  1332 00001164 [2607000000000000]      	dq L_constants + 1830
  1333                                  
  1334                                  free_var_55:	; location of cdadr
  1335 0000116C [7411000000000000]      	dq .undefined_object
  1336                                  .undefined_object:
  1337 00001174 05                      	db T_undefined
  1338 00001175 [5706000000000000]      	dq L_constants + 1623
  1339                                  
  1340                                  free_var_56:	; location of cdar
  1341 0000117D [8511000000000000]      	dq .undefined_object
  1342                                  .undefined_object:
  1343 00001185 05                      	db T_undefined
  1344 00001186 [F705000000000000]      	dq L_constants + 1527
  1345                                  
  1346                                  free_var_57:	; location of cddaar
  1347 0000118E [9611000000000000]      	dq .undefined_object
  1348                                  .undefined_object:
  1349 00001196 05                      	db T_undefined
  1350 00001197 [3507000000000000]      	dq L_constants + 1845
  1351                                  
  1352                                  free_var_58:	; location of cddadr
  1353 0000119F [A711000000000000]      	dq .undefined_object
  1354                                  .undefined_object:
  1355 000011A7 05                      	db T_undefined
  1356 000011A8 [4407000000000000]      	dq L_constants + 1860
  1357                                  
  1358                                  free_var_59:	; location of cddar
  1359 000011B0 [B811000000000000]      	dq .undefined_object
  1360                                  .undefined_object:
  1361 000011B8 05                      	db T_undefined
  1362 000011B9 [6506000000000000]      	dq L_constants + 1637
  1363                                  
  1364                                  free_var_60:	; location of cdddar
  1365 000011C1 [C911000000000000]      	dq .undefined_object
  1366                                  .undefined_object:
  1367 000011C9 05                      	db T_undefined
  1368 000011CA [5307000000000000]      	dq L_constants + 1875
  1369                                  
  1370                                  free_var_61:	; location of cddddr
  1371 000011D2 [DA11000000000000]      	dq .undefined_object
  1372                                  .undefined_object:
  1373 000011DA 05                      	db T_undefined
  1374 000011DB [6207000000000000]      	dq L_constants + 1890
  1375                                  
  1376                                  free_var_62:	; location of cdddr
  1377 000011E3 [EB11000000000000]      	dq .undefined_object
  1378                                  .undefined_object:
  1379 000011EB 05                      	db T_undefined
  1380 000011EC [7306000000000000]      	dq L_constants + 1651
  1381                                  
  1382                                  free_var_63:	; location of cddr
  1383 000011F4 [FC11000000000000]      	dq .undefined_object
  1384                                  .undefined_object:
  1385 000011FC 05                      	db T_undefined
  1386 000011FD [0406000000000000]      	dq L_constants + 1540
  1387                                  
  1388                                  free_var_64:	; location of cdr
  1389 00001205 [0D12000000000000]      	dq .undefined_object
  1390                                  .undefined_object:
  1391 0000120D 05                      	db T_undefined
  1392 0000120E [2101000000000000]      	dq L_constants + 289
  1393                                  
  1394                                  free_var_65:	; location of char->integer
  1395 00001216 [1E12000000000000]      	dq .undefined_object
  1396                                  .undefined_object:
  1397 0000121E 05                      	db T_undefined
  1398 0000121F [A901000000000000]      	dq L_constants + 425
  1399                                  
  1400                                  free_var_66:	; location of char-ci<=?
  1401 00001227 [2F12000000000000]      	dq .undefined_object
  1402                                  .undefined_object:
  1403 0000122F 05                      	db T_undefined
  1404 00001230 [230A000000000000]      	dq L_constants + 2595
  1405                                  
  1406                                  free_var_67:	; location of char-ci<?
  1407 00001238 [4012000000000000]      	dq .undefined_object
  1408                                  .undefined_object:
  1409 00001240 05                      	db T_undefined
  1410 00001241 [110A000000000000]      	dq L_constants + 2577
  1411                                  
  1412                                  free_var_68:	; location of char-ci=?
  1413 00001249 [5112000000000000]      	dq .undefined_object
  1414                                  .undefined_object:
  1415 00001251 05                      	db T_undefined
  1416 00001252 [360A000000000000]      	dq L_constants + 2614
  1417                                  
  1418                                  free_var_69:	; location of char-ci>=?
  1419 0000125A [6212000000000000]      	dq .undefined_object
  1420                                  .undefined_object:
  1421 00001262 05                      	db T_undefined
  1422 00001263 [5A0A000000000000]      	dq L_constants + 2650
  1423                                  
  1424                                  free_var_70:	; location of char-ci>?
  1425 0000126B [7312000000000000]      	dq .undefined_object
  1426                                  .undefined_object:
  1427 00001273 05                      	db T_undefined
  1428 00001274 [480A000000000000]      	dq L_constants + 2632
  1429                                  
  1430                                  free_var_71:	; location of char-downcase
  1431 0000127C [8412000000000000]      	dq .undefined_object
  1432                                  .undefined_object:
  1433 00001284 05                      	db T_undefined
  1434 00001285 [DF09000000000000]      	dq L_constants + 2527
  1435                                  
  1436                                  free_var_72:	; location of char-upcase
  1437 0000128D [9512000000000000]      	dq .undefined_object
  1438                                  .undefined_object:
  1439 00001295 05                      	db T_undefined
  1440 00001296 [F509000000000000]      	dq L_constants + 2549
  1441                                  
  1442                                  free_var_73:	; location of char<=?
  1443 0000129E [A612000000000000]      	dq .undefined_object
  1444                                  .undefined_object:
  1445 000012A6 05                      	db T_undefined
  1446 000012A7 [A109000000000000]      	dq L_constants + 2465
  1447                                  
  1448                                  free_var_74:	; location of char<?
  1449 000012AF [B712000000000000]      	dq .undefined_object
  1450                                  .undefined_object:
  1451 000012B7 05                      	db T_undefined
  1452 000012B8 [9209000000000000]      	dq L_constants + 2450
  1453                                  
  1454                                  free_var_75:	; location of char=?
  1455 000012C0 [C812000000000000]      	dq .undefined_object
  1456                                  .undefined_object:
  1457 000012C8 05                      	db T_undefined
  1458 000012C9 [B109000000000000]      	dq L_constants + 2481
  1459                                  
  1460                                  free_var_76:	; location of char>=?
  1461 000012D1 [D912000000000000]      	dq .undefined_object
  1462                                  .undefined_object:
  1463 000012D9 05                      	db T_undefined
  1464 000012DA [CF09000000000000]      	dq L_constants + 2511
  1465                                  
  1466                                  free_var_77:	; location of char>?
  1467 000012E2 [EA12000000000000]      	dq .undefined_object
  1468                                  .undefined_object:
  1469 000012EA 05                      	db T_undefined
  1470 000012EB [C009000000000000]      	dq L_constants + 2496
  1471                                  
  1472                                  free_var_78:	; location of char?
  1473 000012F3 [FB12000000000000]      	dq .undefined_object
  1474                                  .undefined_object:
  1475 000012FB 05                      	db T_undefined
  1476 000012FC [3000000000000000]      	dq L_constants + 48
  1477                                  
  1478                                  free_var_79:	; location of cons
  1479 00001304 [0C13000000000000]      	dq .undefined_object
  1480                                  .undefined_object:
  1481 0000130C 05                      	db T_undefined
  1482 0000130D [DF00000000000000]      	dq L_constants + 223
  1483                                  
  1484                                  free_var_80:	; location of eq?
  1485 00001315 [1D13000000000000]      	dq .undefined_object
  1486                                  .undefined_object:
  1487 0000131D 05                      	db T_undefined
  1488 0000131E [9604000000000000]      	dq L_constants + 1174
  1489                                  
  1490                                  free_var_81:	; location of equal?
  1491 00001326 [2E13000000000000]      	dq .undefined_object
  1492                                  .undefined_object:
  1493 0000132E 05                      	db T_undefined
  1494 0000132F [980C000000000000]      	dq L_constants + 3224
  1495                                  
  1496                                  free_var_82:	; location of error
  1497 00001337 [3F13000000000000]      	dq .undefined_object
  1498                                  .undefined_object:
  1499 0000133F 05                      	db T_undefined
  1500 00001340 [1103000000000000]      	dq L_constants + 785
  1501                                  
  1502                                  free_var_83:	; location of even?
  1503 00001348 [5013000000000000]      	dq .undefined_object
  1504                                  .undefined_object:
  1505 00001350 05                      	db T_undefined
  1506 00001351 [680C000000000000]      	dq L_constants + 3176
  1507                                  
  1508                                  free_var_84:	; location of fact
  1509 00001359 [6113000000000000]      	dq .undefined_object
  1510                                  .undefined_object:
  1511 00001361 05                      	db T_undefined
  1512 00001362 [0309000000000000]      	dq L_constants + 2307
  1513                                  
  1514                                  free_var_85:	; location of fold-left
  1515 0000136A [7213000000000000]      	dq .undefined_object
  1516                                  .undefined_object:
  1517 00001372 05                      	db T_undefined
  1518 00001373 [1908000000000000]      	dq L_constants + 2073
  1519                                  
  1520                                  free_var_86:	; location of fold-right
  1521 0000137B [8313000000000000]      	dq .undefined_object
  1522                                  .undefined_object:
  1523 00001383 05                      	db T_undefined
  1524 00001384 [3A08000000000000]      	dq L_constants + 2106
  1525                                  
  1526                                  free_var_87:	; location of fraction->real
  1527 0000138C [9413000000000000]      	dq .undefined_object
  1528                                  .undefined_object:
  1529 00001394 05                      	db T_undefined
  1530 00001395 [9201000000000000]      	dq L_constants + 402
  1531                                  
  1532                                  free_var_88:	; location of fraction?
  1533 0000139D [A513000000000000]      	dq .undefined_object
  1534                                  .undefined_object:
  1535 000013A5 05                      	db T_undefined
  1536 000013A6 [9800000000000000]      	dq L_constants + 152
  1537                                  
  1538                                  free_var_89:	; location of integer->char
  1539 000013AE [B613000000000000]      	dq .undefined_object
  1540                                  .undefined_object:
  1541 000013B6 05                      	db T_undefined
  1542 000013B7 [BF01000000000000]      	dq L_constants + 447
  1543                                  
  1544                                  free_var_90:	; location of integer->real
  1545 000013BF [C713000000000000]      	dq .undefined_object
  1546                                  .undefined_object:
  1547 000013C7 05                      	db T_undefined
  1548 000013C8 [7C01000000000000]      	dq L_constants + 380
  1549                                  
  1550                                  free_var_91:	; location of integer?
  1551 000013D0 [D813000000000000]      	dq .undefined_object
  1552                                  .undefined_object:
  1553 000013D8 05                      	db T_undefined
  1554 000013D9 [F001000000000000]      	dq L_constants + 496
  1555                                  
  1556                                  free_var_92:	; location of list
  1557 000013E1 [E913000000000000]      	dq .undefined_object
  1558                                  .undefined_object:
  1559 000013E9 05                      	db T_undefined
  1560 000013EA [7F07000000000000]      	dq L_constants + 1919
  1561                                  
  1562                                  free_var_93:	; location of list*
  1563 000013F2 [FA13000000000000]      	dq .undefined_object
  1564                                  .undefined_object:
  1565 000013FA 05                      	db T_undefined
  1566 000013FB [AA07000000000000]      	dq L_constants + 1962
  1567                                  
  1568                                  free_var_94:	; location of list->string
  1569 00001403 [0B14000000000000]      	dq .undefined_object
  1570                                  .undefined_object:
  1571 0000140B 05                      	db T_undefined
  1572 0000140C [9B0A000000000000]      	dq L_constants + 2715
  1573                                  
  1574                                  free_var_95:	; location of list->vector
  1575 00001414 [1C14000000000000]      	dq .undefined_object
  1576                                  .undefined_object:
  1577 0000141C 05                      	db T_undefined
  1578 0000141D [FC0B000000000000]      	dq L_constants + 3068
  1579                                  
  1580                                  free_var_96:	; location of list?
  1581 00001425 [2D14000000000000]      	dq .undefined_object
  1582                                  .undefined_object:
  1583 0000142D 05                      	db T_undefined
  1584 0000142E [7107000000000000]      	dq L_constants + 1905
  1585                                  
  1586                                  free_var_97:	; location of logarithm
  1587 00001436 [3E14000000000000]      	dq .undefined_object
  1588                                  .undefined_object:
  1589 0000143E 05                      	db T_undefined
  1590 0000143F [8B0D000000000000]      	dq L_constants + 3467
  1591                                  
  1592                                  free_var_98:	; location of make-list-thunk
  1593 00001447 [4F14000000000000]      	dq .undefined_object
  1594                                  .undefined_object:
  1595 0000144F 05                      	db T_undefined
  1596 00001450 [3F0D000000000000]      	dq L_constants + 3391
  1597                                  
  1598                                  free_var_99:	; location of make-string
  1599 00001458 [6014000000000000]      	dq .undefined_object
  1600                                  .undefined_object:
  1601 00001460 05                      	db T_undefined
  1602 00001461 [5C04000000000000]      	dq L_constants + 1116
  1603                                  
  1604                                  free_var_100:	; location of make-string-thunk
  1605 00001469 [7114000000000000]      	dq .undefined_object
  1606                                  .undefined_object:
  1607 00001471 05                      	db T_undefined
  1608 00001472 [570D000000000000]      	dq L_constants + 3415
  1609                                  
  1610                                  free_var_101:	; location of make-vector
  1611 0000147A [8214000000000000]      	dq .undefined_object
  1612                                  .undefined_object:
  1613 00001482 05                      	db T_undefined
  1614 00001483 [4804000000000000]      	dq L_constants + 1096
  1615                                  
  1616                                  free_var_102:	; location of make-vector-thunk
  1617 0000148B [9314000000000000]      	dq .undefined_object
  1618                                  .undefined_object:
  1619 00001493 05                      	db T_undefined
  1620 00001494 [710D000000000000]      	dq L_constants + 3441
  1621                                  
  1622                                  free_var_103:	; location of map
  1623 0000149C [A414000000000000]      	dq .undefined_object
  1624                                  .undefined_object:
  1625 000014A4 05                      	db T_undefined
  1626 000014A5 [EE07000000000000]      	dq L_constants + 2030
  1627                                  
  1628                                  free_var_104:	; location of negative?
  1629 000014AD [B514000000000000]      	dq .undefined_object
  1630                                  .undefined_object:
  1631 000014B5 05                      	db T_undefined
  1632 000014B6 [560C000000000000]      	dq L_constants + 3158
  1633                                  
  1634                                  free_var_105:	; location of newline
  1635 000014BE [C614000000000000]      	dq .undefined_object
  1636                                  .undefined_object:
  1637 000014C6 05                      	db T_undefined
  1638 000014C7 [A60D000000000000]      	dq L_constants + 3494
  1639                                  
  1640                                  free_var_106:	; location of not
  1641 000014CF [D714000000000000]      	dq .undefined_object
  1642                                  .undefined_object:
  1643 000014D7 05                      	db T_undefined
  1644 000014D8 [8C07000000000000]      	dq L_constants + 1932
  1645                                  
  1646                                  free_var_107:	; location of null?
  1647 000014E0 [E814000000000000]      	dq .undefined_object
  1648                                  .undefined_object:
  1649 000014E8 05                      	db T_undefined
  1650 000014E9 [0600000000000000]      	dq L_constants + 6
  1651                                  
  1652                                  free_var_108:	; location of number?
  1653 000014F1 [F914000000000000]      	dq .undefined_object
  1654                                  .undefined_object:
  1655 000014F9 05                      	db T_undefined
  1656 000014FA [BB00000000000000]      	dq L_constants + 187
  1657                                  
  1658                                  free_var_109:	; location of odd?
  1659 00001502 [0A15000000000000]      	dq .undefined_object
  1660                                  .undefined_object:
  1661 0000150A 05                      	db T_undefined
  1662 0000150B [7F0C000000000000]      	dq L_constants + 3199
  1663                                  
  1664                                  free_var_110:	; location of ormap
  1665 00001513 [1B15000000000000]      	dq .undefined_object
  1666                                  .undefined_object:
  1667 0000151B 05                      	db T_undefined
  1668 0000151C [E007000000000000]      	dq L_constants + 2016
  1669                                  
  1670                                  free_var_111:	; location of pair?
  1671 00001524 [2C15000000000000]      	dq .undefined_object
  1672                                  .undefined_object:
  1673 0000152C 05                      	db T_undefined
  1674 0000152D [1400000000000000]      	dq L_constants + 20
  1675                                  
  1676                                  free_var_112:	; location of positive?
  1677 00001535 [3D15000000000000]      	dq .undefined_object
  1678                                  .undefined_object:
  1679 0000153D 05                      	db T_undefined
  1680 0000153E [440C000000000000]      	dq L_constants + 3140
  1681                                  
  1682                                  free_var_113:	; location of random
  1683 00001546 [4E15000000000000]      	dq .undefined_object
  1684                                  .undefined_object:
  1685 0000154E 05                      	db T_undefined
  1686 0000154F [350C000000000000]      	dq L_constants + 3125
  1687                                  
  1688                                  free_var_114:	; location of rational?
  1689 00001557 [5F15000000000000]      	dq .undefined_object
  1690                                  .undefined_object:
  1691 0000155F 05                      	db T_undefined
  1692 00001560 [9807000000000000]      	dq L_constants + 1944
  1693                                  
  1694                                  free_var_115:	; location of real
  1695 00001568 [7015000000000000]      	dq .undefined_object
  1696                                  .undefined_object:
  1697 00001570 05                      	db T_undefined
  1698 00001571 [BE08000000000000]      	dq L_constants + 2238
  1699                                  
  1700                                  free_var_116:	; location of real?
  1701 00001579 [8115000000000000]      	dq .undefined_object
  1702                                  .undefined_object:
  1703 00001581 05                      	db T_undefined
  1704 00001582 [8A00000000000000]      	dq L_constants + 138
  1705                                  
  1706                                  free_var_117:	; location of remainder
  1707 0000158A [9215000000000000]      	dq .undefined_object
  1708                                  .undefined_object:
  1709 00001592 05                      	db T_undefined
  1710 00001593 [C603000000000000]      	dq L_constants + 966
  1711                                  
  1712                                  free_var_118:	; location of reverse
  1713 0000159B [A315000000000000]      	dq .undefined_object
  1714                                  .undefined_object:
  1715 000015A3 05                      	db T_undefined
  1716 000015A4 [0908000000000000]      	dq L_constants + 2057
  1717                                  
  1718                                  free_var_119:	; location of string->list
  1719 000015AC [B415000000000000]      	dq .undefined_object
  1720                                  .undefined_object:
  1721 000015B4 05                      	db T_undefined
  1722 000015B5 [B00A000000000000]      	dq L_constants + 2736
  1723                                  
  1724                                  free_var_120:	; location of string-append
  1725 000015BD [C515000000000000]      	dq .undefined_object
  1726                                  .undefined_object:
  1727 000015C5 05                      	db T_undefined
  1728 000015C6 [B50C000000000000]      	dq L_constants + 3253
  1729                                  
  1730                                  free_var_121:	; location of string-ci<=?
  1731 000015CE [D615000000000000]      	dq .undefined_object
  1732                                  .undefined_object:
  1733 000015D6 05                      	db T_undefined
  1734 000015D7 [300B000000000000]      	dq L_constants + 2864
  1735                                  
  1736                                  free_var_122:	; location of string-ci<?
  1737 000015DF [E715000000000000]      	dq .undefined_object
  1738                                  .undefined_object:
  1739 000015E7 05                      	db T_undefined
  1740 000015E8 [1C0B000000000000]      	dq L_constants + 2844
  1741                                  
  1742                                  free_var_123:	; location of string-ci=?
  1743 000015F0 [F815000000000000]      	dq .undefined_object
  1744                                  .undefined_object:
  1745 000015F8 05                      	db T_undefined
  1746 000015F9 [450B000000000000]      	dq L_constants + 2885
  1747                                  
  1748                                  free_var_124:	; location of string-ci>=?
  1749 00001601 [0916000000000000]      	dq .undefined_object
  1750                                  .undefined_object:
  1751 00001609 05                      	db T_undefined
  1752 0000160A [590B000000000000]      	dq L_constants + 2905
  1753                                  
  1754                                  free_var_125:	; location of string-ci>?
  1755 00001612 [1A16000000000000]      	dq .undefined_object
  1756                                  .undefined_object:
  1757 0000161A 05                      	db T_undefined
  1758 0000161B [6E0B000000000000]      	dq L_constants + 2926
  1759                                  
  1760                                  free_var_126:	; location of string-downcase
  1761 00001623 [2B16000000000000]      	dq .undefined_object
  1762                                  .undefined_object:
  1763 0000162B 05                      	db T_undefined
  1764 0000162C [6D0A000000000000]      	dq L_constants + 2669
  1765                                  
  1766                                  free_var_127:	; location of string-length
  1767 00001634 [3C16000000000000]      	dq .undefined_object
  1768                                  .undefined_object:
  1769 0000163C 05                      	db T_undefined
  1770 0000163D [2D01000000000000]      	dq L_constants + 301
  1771                                  
  1772                                  free_var_128:	; location of string-ref
  1773 00001645 [4D16000000000000]      	dq .undefined_object
  1774                                  .undefined_object:
  1775 0000164D 05                      	db T_undefined
  1776 0000164E [FA03000000000000]      	dq L_constants + 1018
  1777                                  
  1778                                  free_var_129:	; location of string-reverse
  1779 00001656 [5E16000000000000]      	dq .undefined_object
  1780                                  .undefined_object:
  1781 0000165E 05                      	db T_undefined
  1782 0000165F [E10C000000000000]      	dq L_constants + 3297
  1783                                  
  1784                                  free_var_130:	; location of string-reverse!
  1785 00001667 [6F16000000000000]      	dq .undefined_object
  1786                                  .undefined_object:
  1787 0000166F 05                      	db T_undefined
  1788 00001670 [0F0D000000000000]      	dq L_constants + 3343
  1789                                  
  1790                                  free_var_131:	; location of string-set!
  1791 00001678 [8016000000000000]      	dq .undefined_object
  1792                                  .undefined_object:
  1793 00001680 05                      	db T_undefined
  1794 00001681 [3404000000000000]      	dq L_constants + 1076
  1795                                  
  1796                                  free_var_132:	; location of string-upcase
  1797 00001689 [9116000000000000]      	dq .undefined_object
  1798                                  .undefined_object:
  1799 00001691 05                      	db T_undefined
  1800 00001692 [850A000000000000]      	dq L_constants + 2693
  1801                                  
  1802                                  free_var_133:	; location of string<=?
  1803 0000169A [A216000000000000]      	dq .undefined_object
  1804                                  .undefined_object:
  1805 000016A2 05                      	db T_undefined
  1806 000016A3 [D60A000000000000]      	dq L_constants + 2774
  1807                                  
  1808                                  free_var_134:	; location of string<?
  1809 000016AB [B316000000000000]      	dq .undefined_object
  1810                                  .undefined_object:
  1811 000016B3 05                      	db T_undefined
  1812 000016B4 [C50A000000000000]      	dq L_constants + 2757
  1813                                  
  1814                                  free_var_135:	; location of string=?
  1815 000016BC [C416000000000000]      	dq .undefined_object
  1816                                  .undefined_object:
  1817 000016C4 05                      	db T_undefined
  1818 000016C5 [E80A000000000000]      	dq L_constants + 2792
  1819                                  
  1820                                  free_var_136:	; location of string>=?
  1821 000016CD [D516000000000000]      	dq .undefined_object
  1822                                  .undefined_object:
  1823 000016D5 05                      	db T_undefined
  1824 000016D6 [F90A000000000000]      	dq L_constants + 2809
  1825                                  
  1826                                  free_var_137:	; location of string>?
  1827 000016DE [E616000000000000]      	dq .undefined_object
  1828                                  .undefined_object:
  1829 000016E6 05                      	db T_undefined
  1830 000016E7 [0B0B000000000000]      	dq L_constants + 2827
  1831                                  
  1832                                  free_var_138:	; location of string?
  1833 000016EF [F716000000000000]      	dq .undefined_object
  1834                                  .undefined_object:
  1835 000016F7 05                      	db T_undefined
  1836 000016F8 [3E00000000000000]      	dq L_constants + 62
  1837                                  
  1838                                  free_var_139:	; location of trng
  1839 00001700 [0817000000000000]      	dq .undefined_object
  1840                                  .undefined_object:
  1841 00001708 05                      	db T_undefined
  1842 00001709 [D501000000000000]      	dq L_constants + 469
  1843                                  
  1844                                  free_var_140:	; location of vector
  1845 00001711 [1917000000000000]      	dq .undefined_object
  1846                                  .undefined_object:
  1847 00001719 05                      	db T_undefined
  1848 0000171A [110C000000000000]      	dq L_constants + 3089
  1849                                  
  1850                                  free_var_141:	; location of vector->list
  1851 00001722 [2A17000000000000]      	dq .undefined_object
  1852                                  .undefined_object:
  1853 0000172A 05                      	db T_undefined
  1854 0000172B [200C000000000000]      	dq L_constants + 3104
  1855                                  
  1856                                  free_var_142:	; location of vector-append
  1857 00001733 [3B17000000000000]      	dq .undefined_object
  1858                                  .undefined_object:
  1859 0000173B 05                      	db T_undefined
  1860 0000173C [CB0C000000000000]      	dq L_constants + 3275
  1861                                  
  1862                                  free_var_143:	; location of vector-length
  1863 00001744 [4C17000000000000]      	dq .undefined_object
  1864                                  .undefined_object:
  1865 0000174C 05                      	db T_undefined
  1866 0000174D [4301000000000000]      	dq L_constants + 323
  1867                                  
  1868                                  free_var_144:	; location of vector-ref
  1869 00001755 [5D17000000000000]      	dq .undefined_object
  1870                                  .undefined_object:
  1871 0000175D 05                      	db T_undefined
  1872 0000175E [0D04000000000000]      	dq L_constants + 1037
  1873                                  
  1874                                  free_var_145:	; location of vector-reverse
  1875 00001766 [6E17000000000000]      	dq .undefined_object
  1876                                  .undefined_object:
  1877 0000176E 05                      	db T_undefined
  1878 0000176F [F80C000000000000]      	dq L_constants + 3320
  1879                                  
  1880                                  free_var_146:	; location of vector-reverse!
  1881 00001777 [7F17000000000000]      	dq .undefined_object
  1882                                  .undefined_object:
  1883 0000177F 05                      	db T_undefined
  1884 00001780 [270D000000000000]      	dq L_constants + 3367
  1885                                  
  1886                                  free_var_147:	; location of vector-set!
  1887 00001788 [9017000000000000]      	dq .undefined_object
  1888                                  .undefined_object:
  1889 00001790 05                      	db T_undefined
  1890 00001791 [2004000000000000]      	dq L_constants + 1056
  1891                                  
  1892                                  free_var_148:	; location of vector?
  1893 00001799 [A117000000000000]      	dq .undefined_object
  1894                                  .undefined_object:
  1895 000017A1 05                      	db T_undefined
  1896 000017A2 [6700000000000000]      	dq L_constants + 103
  1897                                  
  1898                                  free_var_149:	; location of void
  1899 000017AA [B217000000000000]      	dq .undefined_object
  1900                                  .undefined_object:
  1901 000017B2 05                      	db T_undefined
  1902 000017B3 [B80D000000000000]      	dq L_constants + 3512
  1903                                  
  1904                                  free_var_150:	; location of write-char
  1905 000017BB [C317000000000000]      	dq .undefined_object
  1906                                  .undefined_object:
  1907 000017C3 05                      	db T_undefined
  1908 000017C4 [0201000000000000]      	dq L_constants + 258
  1909                                  
  1910                                  free_var_151:	; location of zero?
  1911 000017CC [D417000000000000]      	dq .undefined_object
  1912                                  .undefined_object:
  1913 000017D4 05                      	db T_undefined
  1914 000017D5 [E201000000000000]      	dq L_constants + 482
  1915                                  
  1916                                  
  1917                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1918                                  global main
  1919                                  section .text
  1920                                  main:
  1921 00000000 C8000000                        enter 0, 0
  1922 00000004 6A00                            push 0
  1923 00000006 6A00                            push 0
  1924 00000008 68[8A740100]                    push Lend
  1925 0000000D C8000000                        enter 0, 0
  1926                                  	; building closure for null?
  1927 00000011 48BF-                   	mov rdi, free_var_107
  1927 00000013 [E014000000000000] 
  1928 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1928 0000001D [1C80010000000000] 
  1929 00000025 E8FB7D0100              	call bind_primitive
  1930                                  
  1931                                  	; building closure for pair?
  1932 0000002A 48BF-                   	mov rdi, free_var_111
  1932 0000002C [2415000000000000] 
  1933 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1933 00000036 [4E80010000000000] 
  1934 0000003E E8E27D0100              	call bind_primitive
  1935                                  
  1936                                  	; building closure for char?
  1937 00000043 48BF-                   	mov rdi, free_var_78
  1937 00000045 [F312000000000000] 
  1938 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1938 0000004F [B280010000000000] 
  1939 00000057 E8C97D0100              	call bind_primitive
  1940                                  
  1941                                  	; building closure for string?
  1942 0000005C 48BF-                   	mov rdi, free_var_138
  1942 0000005E [EF16000000000000] 
  1943 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1943 00000068 [E480010000000000] 
  1944 00000070 E8B07D0100              	call bind_primitive
  1945                                  
  1946                                  	; building closure for vector?
  1947 00000075 48BF-                   	mov rdi, free_var_148
  1947 00000077 [9917000000000000] 
  1948 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1948 00000081 [E281010000000000] 
  1949 00000089 E8977D0100              	call bind_primitive
  1950                                  
  1951                                  	; building closure for real?
  1952 0000008E 48BF-                   	mov rdi, free_var_116
  1952 00000090 [7915000000000000] 
  1953 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1953 0000009A [4682010000000000] 
  1954 000000A2 E87E7D0100              	call bind_primitive
  1955                                  
  1956                                  	; building closure for fraction?
  1957 000000A7 48BF-                   	mov rdi, free_var_88
  1957 000000A9 [9D13000000000000] 
  1958 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1958 000000B3 [7882010000000000] 
  1959 000000BB E8657D0100              	call bind_primitive
  1960                                  
  1961                                  	; building closure for number?
  1962 000000C0 48BF-                   	mov rdi, free_var_108
  1962 000000C2 [F114000000000000] 
  1963 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1963 000000CC [4683010000000000] 
  1964 000000D4 E84C7D0100              	call bind_primitive
  1965                                  
  1966                                  	; building closure for cons
  1967 000000D9 48BF-                   	mov rdi, free_var_79
  1967 000000DB [0413000000000000] 
  1968 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1968 000000E5 [AE83010000000000] 
  1969 000000ED E8337D0100              	call bind_primitive
  1970                                  
  1971                                  	; building closure for write-char
  1972 000000F2 48BF-                   	mov rdi, free_var_150
  1972 000000F4 [BB17000000000000] 
  1973 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  1973 000000FE [0484010000000000] 
  1974 00000106 E81A7D0100              	call bind_primitive
  1975                                  
  1976                                  	; building closure for car
  1977 0000010B 48BF-                   	mov rdi, free_var_49
  1977 0000010D [0611000000000000] 
  1978 00000115 48BE-                   	mov rsi, L_code_ptr_car
  1978 00000117 [5784010000000000] 
  1979 0000011F E8017D0100              	call bind_primitive
  1980                                  
  1981                                  	; building closure for cdr
  1982 00000124 48BF-                   	mov rdi, free_var_64
  1982 00000126 [0512000000000000] 
  1983 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  1983 00000130 [7B84010000000000] 
  1984 00000138 E8E87C0100              	call bind_primitive
  1985                                  
  1986                                  	; building closure for string-length
  1987 0000013D 48BF-                   	mov rdi, free_var_127
  1987 0000013F [3416000000000000] 
  1988 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  1988 00000149 [9F84010000000000] 
  1989 00000151 E8CF7C0100              	call bind_primitive
  1990                                  
  1991                                  	; building closure for vector-length
  1992 00000156 48BF-                   	mov rdi, free_var_143
  1992 00000158 [4417000000000000] 
  1993 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  1993 00000162 [C884010000000000] 
  1994 0000016A E8B67C0100              	call bind_primitive
  1995                                  
  1996                                  	; building closure for integer->real
  1997 0000016F 48BF-                   	mov rdi, free_var_90
  1997 00000171 [BF13000000000000] 
  1998 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  1998 0000017B [3985010000000000] 
  1999 00000183 E89D7C0100              	call bind_primitive
  2000                                  
  2001                                  	; building closure for fraction->real
  2002 00000188 48BF-                   	mov rdi, free_var_87
  2002 0000018A [8C13000000000000] 
  2003 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2003 00000194 [6785010000000000] 
  2004 0000019C E8847C0100              	call bind_primitive
  2005                                  
  2006                                  	; building closure for char->integer
  2007 000001A1 48BF-                   	mov rdi, free_var_65
  2007 000001A3 [1612000000000000] 
  2008 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2008 000001AD [A285010000000000] 
  2009 000001B5 E86B7C0100              	call bind_primitive
  2010                                  
  2011                                  	; building closure for integer->char
  2012 000001BA 48BF-                   	mov rdi, free_var_89
  2012 000001BC [AE13000000000000] 
  2013 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2013 000001C6 [1186010000000000] 
  2014 000001CE E8527C0100              	call bind_primitive
  2015                                  
  2016                                  	; building closure for trng
  2017 000001D3 48BF-                   	mov rdi, free_var_139
  2017 000001D5 [0017000000000000] 
  2018 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2018 000001DF [5C86010000000000] 
  2019 000001E7 E8397C0100              	call bind_primitive
  2020                                  
  2021                                  	; building closure for zero?
  2022 000001EC 48BF-                   	mov rdi, free_var_151
  2022 000001EE [CC17000000000000] 
  2023 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2023 000001F8 [7B86010000000000] 
  2024 00000200 E8207C0100              	call bind_primitive
  2025                                  
  2026                                  	; building closure for integer?
  2027 00000205 48BF-                   	mov rdi, free_var_91
  2027 00000207 [D013000000000000] 
  2028 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2028 00000211 [E086010000000000] 
  2029 00000219 E8077C0100              	call bind_primitive
  2030                                  
  2031                                  	; building closure for __bin-apply
  2032 0000021E 48BF-                   	mov rdi, free_var_12
  2032 00000220 [910E000000000000] 
  2033 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2033 0000022A [957F010000000000] 
  2034 00000232 E8EE7B0100              	call bind_primitive
  2035                                  
  2036                                  	; building closure for __bin-add-rr
  2037 00000237 48BF-                   	mov rdi, free_var_10
  2037 00000239 [6F0E000000000000] 
  2038 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2038 00000243 [1287010000000000] 
  2039 0000024B E8D57B0100              	call bind_primitive
  2040                                  
  2041                                  	; building closure for __bin-sub-rr
  2042 00000250 48BF-                   	mov rdi, free_var_26
  2042 00000252 [7F0F000000000000] 
  2043 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2043 0000025C [5287010000000000] 
  2044 00000264 E8BC7B0100              	call bind_primitive
  2045                                  
  2046                                  	; building closure for __bin-mul-rr
  2047 00000269 48BF-                   	mov rdi, free_var_23
  2047 0000026B [4C0F000000000000] 
  2048 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2048 00000275 [9287010000000000] 
  2049 0000027D E8A37B0100              	call bind_primitive
  2050                                  
  2051                                  	; building closure for __bin-div-rr
  2052 00000282 48BF-                   	mov rdi, free_var_14
  2052 00000284 [B30E000000000000] 
  2053 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2053 0000028E [D287010000000000] 
  2054 00000296 E88A7B0100              	call bind_primitive
  2055                                  
  2056                                  	; building closure for __bin-add-qq
  2057 0000029B 48BF-                   	mov rdi, free_var_9
  2057 0000029D [5E0E000000000000] 
  2058 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2058 000002A7 [5C88010000000000] 
  2059 000002AF E8717B0100              	call bind_primitive
  2060                                  
  2061                                  	; building closure for __bin-sub-qq
  2062 000002B4 48BF-                   	mov rdi, free_var_25
  2062 000002B6 [6E0F000000000000] 
  2063 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2063 000002C0 [FC88010000000000] 
  2064 000002C8 E8587B0100              	call bind_primitive
  2065                                  
  2066                                  	; building closure for __bin-mul-qq
  2067 000002CD 48BF-                   	mov rdi, free_var_22
  2067 000002CF [3B0F000000000000] 
  2068 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2068 000002D9 [A189010000000000] 
  2069 000002E1 E83F7B0100              	call bind_primitive
  2070                                  
  2071                                  	; building closure for __bin-div-qq
  2072 000002E6 48BF-                   	mov rdi, free_var_13
  2072 000002E8 [A20E000000000000] 
  2073 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2073 000002F2 [3B8A010000000000] 
  2074 000002FA E8267B0100              	call bind_primitive
  2075                                  
  2076                                  	; building closure for __bin-add-zz
  2077 000002FF 48BF-                   	mov rdi, free_var_11
  2077 00000301 [800E000000000000] 
  2078 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2078 0000030B [2088010000000000] 
  2079 00000313 E80D7B0100              	call bind_primitive
  2080                                  
  2081                                  	; building closure for __bin-sub-zz
  2082 00000318 48BF-                   	mov rdi, free_var_27
  2082 0000031A [900F000000000000] 
  2083 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2083 00000324 [C088010000000000] 
  2084 0000032C E8F47A0100              	call bind_primitive
  2085                                  
  2086                                  	; building closure for __bin-mul-zz
  2087 00000331 48BF-                   	mov rdi, free_var_24
  2087 00000333 [5D0F000000000000] 
  2088 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2088 0000033D [6089010000000000] 
  2089 00000345 E8DB7A0100              	call bind_primitive
  2090                                  
  2091                                  	; building closure for __bin-div-zz
  2092 0000034A 48BF-                   	mov rdi, free_var_15
  2092 0000034C [C40E000000000000] 
  2093 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2093 00000356 [F589010000000000] 
  2094 0000035E E8C27A0100              	call bind_primitive
  2095                                  
  2096                                  	; building closure for error
  2097 00000363 48BF-                   	mov rdi, free_var_82
  2097 00000365 [3713000000000000] 
  2098 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2098 0000036F [258B010000000000] 
  2099 00000377 E8A97A0100              	call bind_primitive
  2100                                  
  2101                                  	; building closure for __bin-less-than-rr
  2102 0000037C 48BF-                   	mov rdi, free_var_20
  2102 0000037E [190F000000000000] 
  2103 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2103 00000388 [E18B010000000000] 
  2104 00000390 E8907A0100              	call bind_primitive
  2105                                  
  2106                                  	; building closure for __bin-less-than-qq
  2107 00000395 48BF-                   	mov rdi, free_var_19
  2107 00000397 [080F000000000000] 
  2108 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2108 000003A1 [838C010000000000] 
  2109 000003A9 E8777A0100              	call bind_primitive
  2110                                  
  2111                                  	; building closure for __bin-less-than-zz
  2112 000003AE 48BF-                   	mov rdi, free_var_21
  2112 000003B0 [2A0F000000000000] 
  2113 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2113 000003BA [348C010000000000] 
  2114 000003C2 E85E7A0100              	call bind_primitive
  2115                                  
  2116                                  	; building closure for __bin-equal-rr
  2117 000003C7 48BF-                   	mov rdi, free_var_17
  2117 000003C9 [E60E000000000000] 
  2118 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2118 000003D3 [E28C010000000000] 
  2119 000003DB E8457A0100              	call bind_primitive
  2120                                  
  2121                                  	; building closure for __bin-equal-qq
  2122 000003E0 48BF-                   	mov rdi, free_var_16
  2122 000003E2 [D50E000000000000] 
  2123 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2123 000003EC [848D010000000000] 
  2124 000003F4 E82C7A0100              	call bind_primitive
  2125                                  
  2126                                  	; building closure for __bin-equal-zz
  2127 000003F9 48BF-                   	mov rdi, free_var_18
  2127 000003FB [F70E000000000000] 
  2128 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2128 00000405 [358D010000000000] 
  2129 0000040D E8137A0100              	call bind_primitive
  2130                                  
  2131                                  	; building closure for remainder
  2132 00000412 48BF-                   	mov rdi, free_var_117
  2132 00000414 [8A15000000000000] 
  2133 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2133 0000041E [2F8E010000000000] 
  2134 00000426 E8FA790100              	call bind_primitive
  2135                                  
  2136                                  	; building closure for string-ref
  2137 0000042B 48BF-                   	mov rdi, free_var_128
  2137 0000042D [4516000000000000] 
  2138 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2138 00000437 [DF8E010000000000] 
  2139 0000043F E8E1790100              	call bind_primitive
  2140                                  
  2141                                  	; building closure for vector-ref
  2142 00000444 48BF-                   	mov rdi, free_var_144
  2142 00000446 [5517000000000000] 
  2143 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2143 00000450 [3B8F010000000000] 
  2144 00000458 E8C8790100              	call bind_primitive
  2145                                  
  2146                                  	; building closure for vector-set!
  2147 0000045D 48BF-                   	mov rdi, free_var_147
  2147 0000045F [8817000000000000] 
  2148 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2148 00000469 [888F010000000000] 
  2149 00000471 E8AF790100              	call bind_primitive
  2150                                  
  2151                                  	; building closure for string-set!
  2152 00000476 48BF-                   	mov rdi, free_var_131
  2152 00000478 [7816000000000000] 
  2153 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2153 00000482 [E38F010000000000] 
  2154 0000048A E896790100              	call bind_primitive
  2155                                  
  2156                                  	; building closure for make-vector
  2157 0000048F 48BF-                   	mov rdi, free_var_101
  2157 00000491 [7A14000000000000] 
  2158 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2158 0000049B [4990010000000000] 
  2159 000004A3 E87D790100              	call bind_primitive
  2160                                  
  2161                                  	; building closure for make-string
  2162 000004A8 48BF-                   	mov rdi, free_var_99
  2162 000004AA [5814000000000000] 
  2163 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2163 000004B4 [A490010000000000] 
  2164 000004BC E864790100              	call bind_primitive
  2165                                  
  2166                                  	; building closure for eq?
  2167 000004C1 48BF-                   	mov rdi, free_var_80
  2167 000004C3 [1513000000000000] 
  2168 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2168 000004CD [5991010000000000] 
  2169 000004D5 E84B790100              	call bind_primitive
  2170                                  
  2171                                  	; building closure for __integer-to-fraction
  2172 000004DA 48BF-                   	mov rdi, free_var_29
  2172 000004DC [B20F000000000000] 
  2173 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2173 000004E6 [D385010000000000] 
  2174 000004EE E832790100              	call bind_primitive
  2175                                  
  2176 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2177 000004F8 E8F8700100              	call malloc
  2178 000004FD 50                      	push rax
  2179 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2180 00000503 E8ED700100              	call malloc
  2181 00000508 50                      	push rax
  2182 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2183 0000050E E8E2700100              	call malloc
  2184 00000513 488B7D10                	mov rdi, ENV
  2185 00000517 BE00000000              	mov rsi, 0
  2186 0000051C BA01000000              	mov rdx, 1
  2187                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  2188 00000521 4883FE00                	cmp rsi, 0
  2189 00000525 7410                    	je .L_lambda_simple_env_end_0001
  2190 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2191 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2192 0000052F 48FFC6                  	inc rsi
  2193 00000532 48FFC2                  	inc rdx
  2194 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_0001
  2195                                  .L_lambda_simple_env_end_0001:
  2196 00000537 5B                      	pop rbx
  2197 00000538 BE00000000              	mov rsi, 0
  2198                                  .L_lambda_simple_params_loop_0001:	; copy params
  2199 0000053D 4883FE00                	cmp rsi, 0
  2200 00000541 740E                    	je .L_lambda_simple_params_end_0001
  2201 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2202 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2203 0000054C 48FFC6                  	inc rsi
  2204 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_0001
  2205                                  .L_lambda_simple_params_end_0001:
  2206 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2207 00000554 4889C3                  	mov rbx, rax
  2208 00000557 58                      	pop rax
  2209 00000558 C60004                  	mov byte [rax], T_closure
  2210 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2211 0000055F 48C74009[6C050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  2212 00000567 E9A4000000              	jmp .L_lambda_simple_end_0001
  2213                                  .L_lambda_simple_code_0001:	; lambda-simple body
  2214 0000056C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2215 00000572 740B                    	je .L_lambda_simple_arity_check_ok_0001
  2216 00000574 FF742410                	push qword [rsp + 8 * 2]
  2217 00000578 6A01                    	push 1
  2218 0000057A E92F700100              	jmp L_error_incorrect_arity_simple
  2219                                  .L_lambda_simple_arity_check_ok_0001:
  2220 0000057F C8000000                	enter 0, 0
  2221                                  	; preparing a tail-call
  2222                                  	; preparing a non-tail-call
  2223 00000583 488B4520                	mov rax, PARAM(0)	; param x
  2224 00000587 50                      	push rax
  2225 00000588 6A01                    	push 1	; arg count
  2226 0000058A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2227 00000592 803805                  	cmp byte [rax], T_undefined
  2228 00000595 0F842D6F0100            	je L_error_fvar_undefined
  2229 0000059B 803804                  	cmp byte [rax], T_closure
  2230 0000059E 0F85A86F0100            	jne L_error_non_closure
  2231 000005A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2232 000005A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2233 000005AA 50                      	push rax
  2234 000005AB 6A01                    	push 1	; arg count
  2235 000005AD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2236 000005B5 803805                  	cmp byte [rax], T_undefined
  2237 000005B8 0F840A6F0100            	je L_error_fvar_undefined
  2238 000005BE 803804                  	cmp byte [rax], T_closure
  2239 000005C1 0F85856F0100            	jne L_error_non_closure
  2240 000005C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2241 000005CA FF7508                  	push qword [rbp + 8 * 1]
  2242                                   ; old ret addr
  2243 000005CD FF7500                  	push qword [rbp]
  2244                                   ; restore the old rbp
  2245 000005D0 BB01000000              	mov rbx, 1
  2246 000005D5 4883C303                	add rbx, 3
  2247 000005D9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2248 000005DD 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2249 000005E2 4C8D4DF8                	lea r9, [rbp - 8]
  2250 000005E6 B905000000              	mov rcx, 5
  2251                                  .L_tc_recycle_frame_loop_0001:
  2252 000005EB 4883F900                	cmp rcx, 0
  2253 000005EF 7413                    	je .L_tc_recycle_frame_done_0001
  2254 000005F1 4D8B11                  	mov r10, qword [r9]
  2255 000005F4 4D8910                  	mov qword [r8], r10
  2256 000005F7 4983E808                	sub r8, 8
  2257 000005FB 4983E908                	sub r9, 8
  2258 000005FF 48FFC9                  	dec rcx
  2259 00000602 EBE7                    	jmp .L_tc_recycle_frame_loop_0001
  2260                                  .L_tc_recycle_frame_done_0001:
  2261 00000604 498D6008                	lea rsp, [r8 + 8]
  2262 00000608 5D                      	pop rbp ; restore the old rbp
  2263 00000609 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2264 0000060C C9                      	leave
  2265 0000060D C21800                  	ret AND_KILL_FRAME(1)
  2266                                  .L_lambda_simple_end_0001:	; new closure is in rax
  2267 00000610 48890425[7E100000]      	mov qword [free_var_41], rax
  2268 00000618 48B8-                   	mov rax, sob_void
  2268 0000061A [0000000000000000] 
  2269                                  
  2270 00000622 4889C7                  	mov rdi, rax
  2271 00000625 E820720100              	call print_sexpr_if_not_void
  2272 0000062A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2273 0000062F E8C16F0100              	call malloc
  2274 00000634 50                      	push rax
  2275 00000635 BF00000000              	mov rdi, 8 * 0	; new rib
  2276 0000063A E8B66F0100              	call malloc
  2277 0000063F 50                      	push rax
  2278 00000640 BF08000000              	mov rdi, 8 * 1	; extended env
  2279 00000645 E8AB6F0100              	call malloc
  2280 0000064A 488B7D10                	mov rdi, ENV
  2281 0000064E BE00000000              	mov rsi, 0
  2282 00000653 BA01000000              	mov rdx, 1
  2283                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  2284 00000658 4883FE00                	cmp rsi, 0
  2285 0000065C 7410                    	je .L_lambda_simple_env_end_0002
  2286 0000065E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2287 00000662 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2288 00000666 48FFC6                  	inc rsi
  2289 00000669 48FFC2                  	inc rdx
  2290 0000066C EBEA                    	jmp .L_lambda_simple_env_loop_0002
  2291                                  .L_lambda_simple_env_end_0002:
  2292 0000066E 5B                      	pop rbx
  2293 0000066F BE00000000              	mov rsi, 0
  2294                                  .L_lambda_simple_params_loop_0002:	; copy params
  2295 00000674 4883FE00                	cmp rsi, 0
  2296 00000678 740E                    	je .L_lambda_simple_params_end_0002
  2297 0000067A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2298 0000067F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2299 00000683 48FFC6                  	inc rsi
  2300 00000686 EBEC                    	jmp .L_lambda_simple_params_loop_0002
  2301                                  .L_lambda_simple_params_end_0002:
  2302 00000688 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2303 0000068B 4889C3                  	mov rbx, rax
  2304 0000068E 58                      	pop rax
  2305 0000068F C60004                  	mov byte [rax], T_closure
  2306 00000692 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2307 00000696 48C74009[A3060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  2308 0000069E E9A4000000              	jmp .L_lambda_simple_end_0002
  2309                                  .L_lambda_simple_code_0002:	; lambda-simple body
  2310 000006A3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2311 000006A9 740B                    	je .L_lambda_simple_arity_check_ok_0002
  2312 000006AB FF742410                	push qword [rsp + 8 * 2]
  2313 000006AF 6A01                    	push 1
  2314 000006B1 E9F86E0100              	jmp L_error_incorrect_arity_simple
  2315                                  .L_lambda_simple_arity_check_ok_0002:
  2316 000006B6 C8000000                	enter 0, 0
  2317                                  	; preparing a tail-call
  2318                                  	; preparing a non-tail-call
  2319 000006BA 488B4520                	mov rax, PARAM(0)	; param x
  2320 000006BE 50                      	push rax
  2321 000006BF 6A01                    	push 1	; arg count
  2322 000006C1 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2323 000006C9 803805                  	cmp byte [rax], T_undefined
  2324 000006CC 0F84F66D0100            	je L_error_fvar_undefined
  2325 000006D2 803804                  	cmp byte [rax], T_closure
  2326 000006D5 0F85716E0100            	jne L_error_non_closure
  2327 000006DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2328 000006DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  2329 000006E1 50                      	push rax
  2330 000006E2 6A01                    	push 1	; arg count
  2331 000006E4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2332 000006EC 803805                  	cmp byte [rax], T_undefined
  2333 000006EF 0F84D36D0100            	je L_error_fvar_undefined
  2334 000006F5 803804                  	cmp byte [rax], T_closure
  2335 000006F8 0F854E6E0100            	jne L_error_non_closure
  2336 000006FE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2337 00000701 FF7508                  	push qword [rbp + 8 * 1]
  2338                                   ; old ret addr
  2339 00000704 FF7500                  	push qword [rbp]
  2340                                   ; restore the old rbp
  2341 00000707 BB01000000              	mov rbx, 1
  2342 0000070C 4883C303                	add rbx, 3
  2343 00000710 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2344 00000714 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2345 00000719 4C8D4DF8                	lea r9, [rbp - 8]
  2346 0000071D B905000000              	mov rcx, 5
  2347                                  .L_tc_recycle_frame_loop_0002:
  2348 00000722 4883F900                	cmp rcx, 0
  2349 00000726 7413                    	je .L_tc_recycle_frame_done_0002
  2350 00000728 4D8B11                  	mov r10, qword [r9]
  2351 0000072B 4D8910                  	mov qword [r8], r10
  2352 0000072E 4983E808                	sub r8, 8
  2353 00000732 4983E908                	sub r9, 8
  2354 00000736 48FFC9                  	dec rcx
  2355 00000739 EBE7                    	jmp .L_tc_recycle_frame_loop_0002
  2356                                  .L_tc_recycle_frame_done_0002:
  2357 0000073B 498D6008                	lea rsp, [r8 + 8]
  2358 0000073F 5D                      	pop rbp ; restore the old rbp
  2359 00000740 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2360 00000743 C9                      	leave
  2361 00000744 C21800                  	ret AND_KILL_FRAME(1)
  2362                                  .L_lambda_simple_end_0002:	; new closure is in rax
  2363 00000747 48890425[F5100000]      	mov qword [free_var_48], rax
  2364 0000074F 48B8-                   	mov rax, sob_void
  2364 00000751 [0000000000000000] 
  2365                                  
  2366 00000759 4889C7                  	mov rdi, rax
  2367 0000075C E8E9700100              	call print_sexpr_if_not_void
  2368 00000761 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2369 00000766 E88A6E0100              	call malloc
  2370 0000076B 50                      	push rax
  2371 0000076C BF00000000              	mov rdi, 8 * 0	; new rib
  2372 00000771 E87F6E0100              	call malloc
  2373 00000776 50                      	push rax
  2374 00000777 BF08000000              	mov rdi, 8 * 1	; extended env
  2375 0000077C E8746E0100              	call malloc
  2376 00000781 488B7D10                	mov rdi, ENV
  2377 00000785 BE00000000              	mov rsi, 0
  2378 0000078A BA01000000              	mov rdx, 1
  2379                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  2380 0000078F 4883FE00                	cmp rsi, 0
  2381 00000793 7410                    	je .L_lambda_simple_env_end_0003
  2382 00000795 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2383 00000799 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2384 0000079D 48FFC6                  	inc rsi
  2385 000007A0 48FFC2                  	inc rdx
  2386 000007A3 EBEA                    	jmp .L_lambda_simple_env_loop_0003
  2387                                  .L_lambda_simple_env_end_0003:
  2388 000007A5 5B                      	pop rbx
  2389 000007A6 BE00000000              	mov rsi, 0
  2390                                  .L_lambda_simple_params_loop_0003:	; copy params
  2391 000007AB 4883FE00                	cmp rsi, 0
  2392 000007AF 740E                    	je .L_lambda_simple_params_end_0003
  2393 000007B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2394 000007B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2395 000007BA 48FFC6                  	inc rsi
  2396 000007BD EBEC                    	jmp .L_lambda_simple_params_loop_0003
  2397                                  .L_lambda_simple_params_end_0003:
  2398 000007BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2399 000007C2 4889C3                  	mov rbx, rax
  2400 000007C5 58                      	pop rax
  2401 000007C6 C60004                  	mov byte [rax], T_closure
  2402 000007C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2403 000007CD 48C74009[DA070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  2404 000007D5 E9A4000000              	jmp .L_lambda_simple_end_0003
  2405                                  .L_lambda_simple_code_0003:	; lambda-simple body
  2406 000007DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2407 000007E0 740B                    	je .L_lambda_simple_arity_check_ok_0003
  2408 000007E2 FF742410                	push qword [rsp + 8 * 2]
  2409 000007E6 6A01                    	push 1
  2410 000007E8 E9C16D0100              	jmp L_error_incorrect_arity_simple
  2411                                  .L_lambda_simple_arity_check_ok_0003:
  2412 000007ED C8000000                	enter 0, 0
  2413                                  	; preparing a tail-call
  2414                                  	; preparing a non-tail-call
  2415 000007F1 488B4520                	mov rax, PARAM(0)	; param x
  2416 000007F5 50                      	push rax
  2417 000007F6 6A01                    	push 1	; arg count
  2418 000007F8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2419 00000800 803805                  	cmp byte [rax], T_undefined
  2420 00000803 0F84BF6C0100            	je L_error_fvar_undefined
  2421 00000809 803804                  	cmp byte [rax], T_closure
  2422 0000080C 0F853A6D0100            	jne L_error_non_closure
  2423 00000812 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2424 00000815 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2425 00000818 50                      	push rax
  2426 00000819 6A01                    	push 1	; arg count
  2427 0000081B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2428 00000823 803805                  	cmp byte [rax], T_undefined
  2429 00000826 0F849C6C0100            	je L_error_fvar_undefined
  2430 0000082C 803804                  	cmp byte [rax], T_closure
  2431 0000082F 0F85176D0100            	jne L_error_non_closure
  2432 00000835 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2433 00000838 FF7508                  	push qword [rbp + 8 * 1]
  2434                                   ; old ret addr
  2435 0000083B FF7500                  	push qword [rbp]
  2436                                   ; restore the old rbp
  2437 0000083E BB01000000              	mov rbx, 1
  2438 00000843 4883C303                	add rbx, 3
  2439 00000847 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2440 0000084B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2441 00000850 4C8D4DF8                	lea r9, [rbp - 8]
  2442 00000854 B905000000              	mov rcx, 5
  2443                                  .L_tc_recycle_frame_loop_0003:
  2444 00000859 4883F900                	cmp rcx, 0
  2445 0000085D 7413                    	je .L_tc_recycle_frame_done_0003
  2446 0000085F 4D8B11                  	mov r10, qword [r9]
  2447 00000862 4D8910                  	mov qword [r8], r10
  2448 00000865 4983E808                	sub r8, 8
  2449 00000869 4983E908                	sub r9, 8
  2450 0000086D 48FFC9                  	dec rcx
  2451 00000870 EBE7                    	jmp .L_tc_recycle_frame_loop_0003
  2452                                  .L_tc_recycle_frame_done_0003:
  2453 00000872 498D6008                	lea rsp, [r8 + 8]
  2454 00000876 5D                      	pop rbp ; restore the old rbp
  2455 00000877 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2456 0000087A C9                      	leave
  2457 0000087B C21800                  	ret AND_KILL_FRAME(1)
  2458                                  .L_lambda_simple_end_0003:	; new closure is in rax
  2459 0000087E 48890425[7D110000]      	mov qword [free_var_56], rax
  2460 00000886 48B8-                   	mov rax, sob_void
  2460 00000888 [0000000000000000] 
  2461                                  
  2462 00000890 4889C7                  	mov rdi, rax
  2463 00000893 E8B26F0100              	call print_sexpr_if_not_void
  2464 00000898 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2465 0000089D E8536D0100              	call malloc
  2466 000008A2 50                      	push rax
  2467 000008A3 BF00000000              	mov rdi, 8 * 0	; new rib
  2468 000008A8 E8486D0100              	call malloc
  2469 000008AD 50                      	push rax
  2470 000008AE BF08000000              	mov rdi, 8 * 1	; extended env
  2471 000008B3 E83D6D0100              	call malloc
  2472 000008B8 488B7D10                	mov rdi, ENV
  2473 000008BC BE00000000              	mov rsi, 0
  2474 000008C1 BA01000000              	mov rdx, 1
  2475                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  2476 000008C6 4883FE00                	cmp rsi, 0
  2477 000008CA 7410                    	je .L_lambda_simple_env_end_0004
  2478 000008CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2479 000008D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2480 000008D4 48FFC6                  	inc rsi
  2481 000008D7 48FFC2                  	inc rdx
  2482 000008DA EBEA                    	jmp .L_lambda_simple_env_loop_0004
  2483                                  .L_lambda_simple_env_end_0004:
  2484 000008DC 5B                      	pop rbx
  2485 000008DD BE00000000              	mov rsi, 0
  2486                                  .L_lambda_simple_params_loop_0004:	; copy params
  2487 000008E2 4883FE00                	cmp rsi, 0
  2488 000008E6 740E                    	je .L_lambda_simple_params_end_0004
  2489 000008E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2490 000008ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2491 000008F1 48FFC6                  	inc rsi
  2492 000008F4 EBEC                    	jmp .L_lambda_simple_params_loop_0004
  2493                                  .L_lambda_simple_params_end_0004:
  2494 000008F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2495 000008F9 4889C3                  	mov rbx, rax
  2496 000008FC 58                      	pop rax
  2497 000008FD C60004                  	mov byte [rax], T_closure
  2498 00000900 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2499 00000904 48C74009[11090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  2500 0000090C E9A4000000              	jmp .L_lambda_simple_end_0004
  2501                                  .L_lambda_simple_code_0004:	; lambda-simple body
  2502 00000911 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2503 00000917 740B                    	je .L_lambda_simple_arity_check_ok_0004
  2504 00000919 FF742410                	push qword [rsp + 8 * 2]
  2505 0000091D 6A01                    	push 1
  2506 0000091F E98A6C0100              	jmp L_error_incorrect_arity_simple
  2507                                  .L_lambda_simple_arity_check_ok_0004:
  2508 00000924 C8000000                	enter 0, 0
  2509                                  	; preparing a tail-call
  2510                                  	; preparing a non-tail-call
  2511 00000928 488B4520                	mov rax, PARAM(0)	; param x
  2512 0000092C 50                      	push rax
  2513 0000092D 6A01                    	push 1	; arg count
  2514 0000092F 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2515 00000937 803805                  	cmp byte [rax], T_undefined
  2516 0000093A 0F84886B0100            	je L_error_fvar_undefined
  2517 00000940 803804                  	cmp byte [rax], T_closure
  2518 00000943 0F85036C0100            	jne L_error_non_closure
  2519 00000949 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2520 0000094C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2521 0000094F 50                      	push rax
  2522 00000950 6A01                    	push 1	; arg count
  2523 00000952 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2524 0000095A 803805                  	cmp byte [rax], T_undefined
  2525 0000095D 0F84656B0100            	je L_error_fvar_undefined
  2526 00000963 803804                  	cmp byte [rax], T_closure
  2527 00000966 0F85E06B0100            	jne L_error_non_closure
  2528 0000096C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2529 0000096F FF7508                  	push qword [rbp + 8 * 1]
  2530                                   ; old ret addr
  2531 00000972 FF7500                  	push qword [rbp]
  2532                                   ; restore the old rbp
  2533 00000975 BB01000000              	mov rbx, 1
  2534 0000097A 4883C303                	add rbx, 3
  2535 0000097E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2536 00000982 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2537 00000987 4C8D4DF8                	lea r9, [rbp - 8]
  2538 0000098B B905000000              	mov rcx, 5
  2539                                  .L_tc_recycle_frame_loop_0004:
  2540 00000990 4883F900                	cmp rcx, 0
  2541 00000994 7413                    	je .L_tc_recycle_frame_done_0004
  2542 00000996 4D8B11                  	mov r10, qword [r9]
  2543 00000999 4D8910                  	mov qword [r8], r10
  2544 0000099C 4983E808                	sub r8, 8
  2545 000009A0 4983E908                	sub r9, 8
  2546 000009A4 48FFC9                  	dec rcx
  2547 000009A7 EBE7                    	jmp .L_tc_recycle_frame_loop_0004
  2548                                  .L_tc_recycle_frame_done_0004:
  2549 000009A9 498D6008                	lea rsp, [r8 + 8]
  2550 000009AD 5D                      	pop rbp ; restore the old rbp
  2551 000009AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2552 000009B1 C9                      	leave
  2553 000009B2 C21800                  	ret AND_KILL_FRAME(1)
  2554                                  .L_lambda_simple_end_0004:	; new closure is in rax
  2555 000009B5 48890425[F4110000]      	mov qword [free_var_63], rax
  2556 000009BD 48B8-                   	mov rax, sob_void
  2556 000009BF [0000000000000000] 
  2557                                  
  2558 000009C7 4889C7                  	mov rdi, rax
  2559 000009CA E87B6E0100              	call print_sexpr_if_not_void
  2560 000009CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2561 000009D4 E81C6C0100              	call malloc
  2562 000009D9 50                      	push rax
  2563 000009DA BF00000000              	mov rdi, 8 * 0	; new rib
  2564 000009DF E8116C0100              	call malloc
  2565 000009E4 50                      	push rax
  2566 000009E5 BF08000000              	mov rdi, 8 * 1	; extended env
  2567 000009EA E8066C0100              	call malloc
  2568 000009EF 488B7D10                	mov rdi, ENV
  2569 000009F3 BE00000000              	mov rsi, 0
  2570 000009F8 BA01000000              	mov rdx, 1
  2571                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  2572 000009FD 4883FE00                	cmp rsi, 0
  2573 00000A01 7410                    	je .L_lambda_simple_env_end_0005
  2574 00000A03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2575 00000A07 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2576 00000A0B 48FFC6                  	inc rsi
  2577 00000A0E 48FFC2                  	inc rdx
  2578 00000A11 EBEA                    	jmp .L_lambda_simple_env_loop_0005
  2579                                  .L_lambda_simple_env_end_0005:
  2580 00000A13 5B                      	pop rbx
  2581 00000A14 BE00000000              	mov rsi, 0
  2582                                  .L_lambda_simple_params_loop_0005:	; copy params
  2583 00000A19 4883FE00                	cmp rsi, 0
  2584 00000A1D 740E                    	je .L_lambda_simple_params_end_0005
  2585 00000A1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2586 00000A24 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2587 00000A28 48FFC6                  	inc rsi
  2588 00000A2B EBEC                    	jmp .L_lambda_simple_params_loop_0005
  2589                                  .L_lambda_simple_params_end_0005:
  2590 00000A2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2591 00000A30 4889C3                  	mov rbx, rax
  2592 00000A33 58                      	pop rax
  2593 00000A34 C60004                  	mov byte [rax], T_closure
  2594 00000A37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2595 00000A3B 48C74009[480A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2596 00000A43 E9A4000000              	jmp .L_lambda_simple_end_0005
  2597                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2598 00000A48 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2599 00000A4E 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2600 00000A50 FF742410                	push qword [rsp + 8 * 2]
  2601 00000A54 6A01                    	push 1
  2602 00000A56 E9536B0100              	jmp L_error_incorrect_arity_simple
  2603                                  .L_lambda_simple_arity_check_ok_0005:
  2604 00000A5B C8000000                	enter 0, 0
  2605                                  	; preparing a tail-call
  2606                                  	; preparing a non-tail-call
  2607 00000A5F 488B4520                	mov rax, PARAM(0)	; param x
  2608 00000A63 50                      	push rax
  2609 00000A64 6A01                    	push 1	; arg count
  2610 00000A66 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2611 00000A6E 803805                  	cmp byte [rax], T_undefined
  2612 00000A71 0F84516A0100            	je L_error_fvar_undefined
  2613 00000A77 803804                  	cmp byte [rax], T_closure
  2614 00000A7A 0F85CC6A0100            	jne L_error_non_closure
  2615 00000A80 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2616 00000A83 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2617 00000A86 50                      	push rax
  2618 00000A87 6A01                    	push 1	; arg count
  2619 00000A89 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2620 00000A91 803805                  	cmp byte [rax], T_undefined
  2621 00000A94 0F842E6A0100            	je L_error_fvar_undefined
  2622 00000A9A 803804                  	cmp byte [rax], T_closure
  2623 00000A9D 0F85A96A0100            	jne L_error_non_closure
  2624 00000AA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2625 00000AA6 FF7508                  	push qword [rbp + 8 * 1]
  2626                                   ; old ret addr
  2627 00000AA9 FF7500                  	push qword [rbp]
  2628                                   ; restore the old rbp
  2629 00000AAC BB01000000              	mov rbx, 1
  2630 00000AB1 4883C303                	add rbx, 3
  2631 00000AB5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2632 00000AB9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2633 00000ABE 4C8D4DF8                	lea r9, [rbp - 8]
  2634 00000AC2 B905000000              	mov rcx, 5
  2635                                  .L_tc_recycle_frame_loop_0005:
  2636 00000AC7 4883F900                	cmp rcx, 0
  2637 00000ACB 7413                    	je .L_tc_recycle_frame_done_0005
  2638 00000ACD 4D8B11                  	mov r10, qword [r9]
  2639 00000AD0 4D8910                  	mov qword [r8], r10
  2640 00000AD3 4983E808                	sub r8, 8
  2641 00000AD7 4983E908                	sub r9, 8
  2642 00000ADB 48FFC9                  	dec rcx
  2643 00000ADE EBE7                    	jmp .L_tc_recycle_frame_loop_0005
  2644                                  .L_tc_recycle_frame_done_0005:
  2645 00000AE0 498D6008                	lea rsp, [r8 + 8]
  2646 00000AE4 5D                      	pop rbp ; restore the old rbp
  2647 00000AE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2648 00000AE8 C9                      	leave
  2649 00000AE9 C21800                  	ret AND_KILL_FRAME(1)
  2650                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2651 00000AEC 48890425[3A100000]      	mov qword [free_var_37], rax
  2652 00000AF4 48B8-                   	mov rax, sob_void
  2652 00000AF6 [0000000000000000] 
  2653                                  
  2654 00000AFE 4889C7                  	mov rdi, rax
  2655 00000B01 E8446D0100              	call print_sexpr_if_not_void
  2656 00000B06 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2657 00000B0B E8E56A0100              	call malloc
  2658 00000B10 50                      	push rax
  2659 00000B11 BF00000000              	mov rdi, 8 * 0	; new rib
  2660 00000B16 E8DA6A0100              	call malloc
  2661 00000B1B 50                      	push rax
  2662 00000B1C BF08000000              	mov rdi, 8 * 1	; extended env
  2663 00000B21 E8CF6A0100              	call malloc
  2664 00000B26 488B7D10                	mov rdi, ENV
  2665 00000B2A BE00000000              	mov rsi, 0
  2666 00000B2F BA01000000              	mov rdx, 1
  2667                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2668 00000B34 4883FE00                	cmp rsi, 0
  2669 00000B38 7410                    	je .L_lambda_simple_env_end_0006
  2670 00000B3A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2671 00000B3E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2672 00000B42 48FFC6                  	inc rsi
  2673 00000B45 48FFC2                  	inc rdx
  2674 00000B48 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2675                                  .L_lambda_simple_env_end_0006:
  2676 00000B4A 5B                      	pop rbx
  2677 00000B4B BE00000000              	mov rsi, 0
  2678                                  .L_lambda_simple_params_loop_0006:	; copy params
  2679 00000B50 4883FE00                	cmp rsi, 0
  2680 00000B54 740E                    	je .L_lambda_simple_params_end_0006
  2681 00000B56 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2682 00000B5B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2683 00000B5F 48FFC6                  	inc rsi
  2684 00000B62 EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2685                                  .L_lambda_simple_params_end_0006:
  2686 00000B64 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2687 00000B67 4889C3                  	mov rbx, rax
  2688 00000B6A 58                      	pop rax
  2689 00000B6B C60004                  	mov byte [rax], T_closure
  2690 00000B6E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2691 00000B72 48C74009[7F0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2692 00000B7A E9A4000000              	jmp .L_lambda_simple_end_0006
  2693                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2694 00000B7F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2695 00000B85 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2696 00000B87 FF742410                	push qword [rsp + 8 * 2]
  2697 00000B8B 6A01                    	push 1
  2698 00000B8D E91C6A0100              	jmp L_error_incorrect_arity_simple
  2699                                  .L_lambda_simple_arity_check_ok_0006:
  2700 00000B92 C8000000                	enter 0, 0
  2701                                  	; preparing a tail-call
  2702                                  	; preparing a non-tail-call
  2703 00000B96 488B4520                	mov rax, PARAM(0)	; param x
  2704 00000B9A 50                      	push rax
  2705 00000B9B 6A01                    	push 1	; arg count
  2706 00000B9D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  2707 00000BA5 803805                  	cmp byte [rax], T_undefined
  2708 00000BA8 0F841A690100            	je L_error_fvar_undefined
  2709 00000BAE 803804                  	cmp byte [rax], T_closure
  2710 00000BB1 0F8595690100            	jne L_error_non_closure
  2711 00000BB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2712 00000BBA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2713 00000BBD 50                      	push rax
  2714 00000BBE 6A01                    	push 1	; arg count
  2715 00000BC0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2716 00000BC8 803805                  	cmp byte [rax], T_undefined
  2717 00000BCB 0F84F7680100            	je L_error_fvar_undefined
  2718 00000BD1 803804                  	cmp byte [rax], T_closure
  2719 00000BD4 0F8572690100            	jne L_error_non_closure
  2720 00000BDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2721 00000BDD FF7508                  	push qword [rbp + 8 * 1]
  2722                                   ; old ret addr
  2723 00000BE0 FF7500                  	push qword [rbp]
  2724                                   ; restore the old rbp
  2725 00000BE3 BB01000000              	mov rbx, 1
  2726 00000BE8 4883C303                	add rbx, 3
  2727 00000BEC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2728 00000BF0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2729 00000BF5 4C8D4DF8                	lea r9, [rbp - 8]
  2730 00000BF9 B905000000              	mov rcx, 5
  2731                                  .L_tc_recycle_frame_loop_0006:
  2732 00000BFE 4883F900                	cmp rcx, 0
  2733 00000C02 7413                    	je .L_tc_recycle_frame_done_0006
  2734 00000C04 4D8B11                  	mov r10, qword [r9]
  2735 00000C07 4D8910                  	mov qword [r8], r10
  2736 00000C0A 4983E808                	sub r8, 8
  2737 00000C0E 4983E908                	sub r9, 8
  2738 00000C12 48FFC9                  	dec rcx
  2739 00000C15 EBE7                    	jmp .L_tc_recycle_frame_loop_0006
  2740                                  .L_tc_recycle_frame_done_0006:
  2741 00000C17 498D6008                	lea rsp, [r8 + 8]
  2742 00000C1B 5D                      	pop rbp ; restore the old rbp
  2743 00000C1C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2744 00000C1F C9                      	leave
  2745 00000C20 C21800                  	ret AND_KILL_FRAME(1)
  2746                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2747 00000C23 48890425[6D100000]      	mov qword [free_var_40], rax
  2748 00000C2B 48B8-                   	mov rax, sob_void
  2748 00000C2D [0000000000000000] 
  2749                                  
  2750 00000C35 4889C7                  	mov rdi, rax
  2751 00000C38 E80D6C0100              	call print_sexpr_if_not_void
  2752 00000C3D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2753 00000C42 E8AE690100              	call malloc
  2754 00000C47 50                      	push rax
  2755 00000C48 BF00000000              	mov rdi, 8 * 0	; new rib
  2756 00000C4D E8A3690100              	call malloc
  2757 00000C52 50                      	push rax
  2758 00000C53 BF08000000              	mov rdi, 8 * 1	; extended env
  2759 00000C58 E898690100              	call malloc
  2760 00000C5D 488B7D10                	mov rdi, ENV
  2761 00000C61 BE00000000              	mov rsi, 0
  2762 00000C66 BA01000000              	mov rdx, 1
  2763                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2764 00000C6B 4883FE00                	cmp rsi, 0
  2765 00000C6F 7410                    	je .L_lambda_simple_env_end_0007
  2766 00000C71 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2767 00000C75 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2768 00000C79 48FFC6                  	inc rsi
  2769 00000C7C 48FFC2                  	inc rdx
  2770 00000C7F EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2771                                  .L_lambda_simple_env_end_0007:
  2772 00000C81 5B                      	pop rbx
  2773 00000C82 BE00000000              	mov rsi, 0
  2774                                  .L_lambda_simple_params_loop_0007:	; copy params
  2775 00000C87 4883FE00                	cmp rsi, 0
  2776 00000C8B 740E                    	je .L_lambda_simple_params_end_0007
  2777 00000C8D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2778 00000C92 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2779 00000C96 48FFC6                  	inc rsi
  2780 00000C99 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2781                                  .L_lambda_simple_params_end_0007:
  2782 00000C9B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2783 00000C9E 4889C3                  	mov rbx, rax
  2784 00000CA1 58                      	pop rax
  2785 00000CA2 C60004                  	mov byte [rax], T_closure
  2786 00000CA5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2787 00000CA9 48C74009[B60C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2788 00000CB1 E9A4000000              	jmp .L_lambda_simple_end_0007
  2789                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2790 00000CB6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2791 00000CBC 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2792 00000CBE FF742410                	push qword [rsp + 8 * 2]
  2793 00000CC2 6A01                    	push 1
  2794 00000CC4 E9E5680100              	jmp L_error_incorrect_arity_simple
  2795                                  .L_lambda_simple_arity_check_ok_0007:
  2796 00000CC9 C8000000                	enter 0, 0
  2797                                  	; preparing a tail-call
  2798                                  	; preparing a non-tail-call
  2799 00000CCD 488B4520                	mov rax, PARAM(0)	; param x
  2800 00000CD1 50                      	push rax
  2801 00000CD2 6A01                    	push 1	; arg count
  2802 00000CD4 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  2803 00000CDC 803805                  	cmp byte [rax], T_undefined
  2804 00000CDF 0F84E3670100            	je L_error_fvar_undefined
  2805 00000CE5 803804                  	cmp byte [rax], T_closure
  2806 00000CE8 0F855E680100            	jne L_error_non_closure
  2807 00000CEE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2808 00000CF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2809 00000CF4 50                      	push rax
  2810 00000CF5 6A01                    	push 1	; arg count
  2811 00000CF7 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2812 00000CFF 803805                  	cmp byte [rax], T_undefined
  2813 00000D02 0F84C0670100            	je L_error_fvar_undefined
  2814 00000D08 803804                  	cmp byte [rax], T_closure
  2815 00000D0B 0F853B680100            	jne L_error_non_closure
  2816 00000D11 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2817 00000D14 FF7508                  	push qword [rbp + 8 * 1]
  2818                                   ; old ret addr
  2819 00000D17 FF7500                  	push qword [rbp]
  2820                                   ; restore the old rbp
  2821 00000D1A BB01000000              	mov rbx, 1
  2822 00000D1F 4883C303                	add rbx, 3
  2823 00000D23 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2824 00000D27 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2825 00000D2C 4C8D4DF8                	lea r9, [rbp - 8]
  2826 00000D30 B905000000              	mov rcx, 5
  2827                                  .L_tc_recycle_frame_loop_0007:
  2828 00000D35 4883F900                	cmp rcx, 0
  2829 00000D39 7413                    	je .L_tc_recycle_frame_done_0007
  2830 00000D3B 4D8B11                  	mov r10, qword [r9]
  2831 00000D3E 4D8910                  	mov qword [r8], r10
  2832 00000D41 4983E808                	sub r8, 8
  2833 00000D45 4983E908                	sub r9, 8
  2834 00000D49 48FFC9                  	dec rcx
  2835 00000D4C EBE7                    	jmp .L_tc_recycle_frame_loop_0007
  2836                                  .L_tc_recycle_frame_done_0007:
  2837 00000D4E 498D6008                	lea rsp, [r8 + 8]
  2838 00000D52 5D                      	pop rbp ; restore the old rbp
  2839 00000D53 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2840 00000D56 C9                      	leave
  2841 00000D57 C21800                  	ret AND_KILL_FRAME(1)
  2842                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2843 00000D5A 48890425[B1100000]      	mov qword [free_var_44], rax
  2844 00000D62 48B8-                   	mov rax, sob_void
  2844 00000D64 [0000000000000000] 
  2845                                  
  2846 00000D6C 4889C7                  	mov rdi, rax
  2847 00000D6F E8D66A0100              	call print_sexpr_if_not_void
  2848 00000D74 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2849 00000D79 E877680100              	call malloc
  2850 00000D7E 50                      	push rax
  2851 00000D7F BF00000000              	mov rdi, 8 * 0	; new rib
  2852 00000D84 E86C680100              	call malloc
  2853 00000D89 50                      	push rax
  2854 00000D8A BF08000000              	mov rdi, 8 * 1	; extended env
  2855 00000D8F E861680100              	call malloc
  2856 00000D94 488B7D10                	mov rdi, ENV
  2857 00000D98 BE00000000              	mov rsi, 0
  2858 00000D9D BA01000000              	mov rdx, 1
  2859                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2860 00000DA2 4883FE00                	cmp rsi, 0
  2861 00000DA6 7410                    	je .L_lambda_simple_env_end_0008
  2862 00000DA8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2863 00000DAC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2864 00000DB0 48FFC6                  	inc rsi
  2865 00000DB3 48FFC2                  	inc rdx
  2866 00000DB6 EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2867                                  .L_lambda_simple_env_end_0008:
  2868 00000DB8 5B                      	pop rbx
  2869 00000DB9 BE00000000              	mov rsi, 0
  2870                                  .L_lambda_simple_params_loop_0008:	; copy params
  2871 00000DBE 4883FE00                	cmp rsi, 0
  2872 00000DC2 740E                    	je .L_lambda_simple_params_end_0008
  2873 00000DC4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2874 00000DC9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2875 00000DCD 48FFC6                  	inc rsi
  2876 00000DD0 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2877                                  .L_lambda_simple_params_end_0008:
  2878 00000DD2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2879 00000DD5 4889C3                  	mov rbx, rax
  2880 00000DD8 58                      	pop rax
  2881 00000DD9 C60004                  	mov byte [rax], T_closure
  2882 00000DDC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2883 00000DE0 48C74009[ED0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2884 00000DE8 E9A4000000              	jmp .L_lambda_simple_end_0008
  2885                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2886 00000DED 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2887 00000DF3 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2888 00000DF5 FF742410                	push qword [rsp + 8 * 2]
  2889 00000DF9 6A01                    	push 1
  2890 00000DFB E9AE670100              	jmp L_error_incorrect_arity_simple
  2891                                  .L_lambda_simple_arity_check_ok_0008:
  2892 00000E00 C8000000                	enter 0, 0
  2893                                  	; preparing a tail-call
  2894                                  	; preparing a non-tail-call
  2895 00000E04 488B4520                	mov rax, PARAM(0)	; param x
  2896 00000E08 50                      	push rax
  2897 00000E09 6A01                    	push 1	; arg count
  2898 00000E0B 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  2899 00000E13 803805                  	cmp byte [rax], T_undefined
  2900 00000E16 0F84AC660100            	je L_error_fvar_undefined
  2901 00000E1C 803804                  	cmp byte [rax], T_closure
  2902 00000E1F 0F8527670100            	jne L_error_non_closure
  2903 00000E25 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2904 00000E28 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2905 00000E2B 50                      	push rax
  2906 00000E2C 6A01                    	push 1	; arg count
  2907 00000E2E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2908 00000E36 803805                  	cmp byte [rax], T_undefined
  2909 00000E39 0F8489660100            	je L_error_fvar_undefined
  2910 00000E3F 803804                  	cmp byte [rax], T_closure
  2911 00000E42 0F8504670100            	jne L_error_non_closure
  2912 00000E48 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2913 00000E4B FF7508                  	push qword [rbp + 8 * 1]
  2914                                   ; old ret addr
  2915 00000E4E FF7500                  	push qword [rbp]
  2916                                   ; restore the old rbp
  2917 00000E51 BB01000000              	mov rbx, 1
  2918 00000E56 4883C303                	add rbx, 3
  2919 00000E5A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2920 00000E5E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2921 00000E63 4C8D4DF8                	lea r9, [rbp - 8]
  2922 00000E67 B905000000              	mov rcx, 5
  2923                                  .L_tc_recycle_frame_loop_0008:
  2924 00000E6C 4883F900                	cmp rcx, 0
  2925 00000E70 7413                    	je .L_tc_recycle_frame_done_0008
  2926 00000E72 4D8B11                  	mov r10, qword [r9]
  2927 00000E75 4D8910                  	mov qword [r8], r10
  2928 00000E78 4983E808                	sub r8, 8
  2929 00000E7C 4983E908                	sub r9, 8
  2930 00000E80 48FFC9                  	dec rcx
  2931 00000E83 EBE7                    	jmp .L_tc_recycle_frame_loop_0008
  2932                                  .L_tc_recycle_frame_done_0008:
  2933 00000E85 498D6008                	lea rsp, [r8 + 8]
  2934 00000E89 5D                      	pop rbp ; restore the old rbp
  2935 00000E8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2936 00000E8D C9                      	leave
  2937 00000E8E C21800                  	ret AND_KILL_FRAME(1)
  2938                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2939 00000E91 48890425[E4100000]      	mov qword [free_var_47], rax
  2940 00000E99 48B8-                   	mov rax, sob_void
  2940 00000E9B [0000000000000000] 
  2941                                  
  2942 00000EA3 4889C7                  	mov rdi, rax
  2943 00000EA6 E89F690100              	call print_sexpr_if_not_void
  2944 00000EAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2945 00000EB0 E840670100              	call malloc
  2946 00000EB5 50                      	push rax
  2947 00000EB6 BF00000000              	mov rdi, 8 * 0	; new rib
  2948 00000EBB E835670100              	call malloc
  2949 00000EC0 50                      	push rax
  2950 00000EC1 BF08000000              	mov rdi, 8 * 1	; extended env
  2951 00000EC6 E82A670100              	call malloc
  2952 00000ECB 488B7D10                	mov rdi, ENV
  2953 00000ECF BE00000000              	mov rsi, 0
  2954 00000ED4 BA01000000              	mov rdx, 1
  2955                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2956 00000ED9 4883FE00                	cmp rsi, 0
  2957 00000EDD 7410                    	je .L_lambda_simple_env_end_0009
  2958 00000EDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2959 00000EE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2960 00000EE7 48FFC6                  	inc rsi
  2961 00000EEA 48FFC2                  	inc rdx
  2962 00000EED EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2963                                  .L_lambda_simple_env_end_0009:
  2964 00000EEF 5B                      	pop rbx
  2965 00000EF0 BE00000000              	mov rsi, 0
  2966                                  .L_lambda_simple_params_loop_0009:	; copy params
  2967 00000EF5 4883FE00                	cmp rsi, 0
  2968 00000EF9 740E                    	je .L_lambda_simple_params_end_0009
  2969 00000EFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2970 00000F00 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2971 00000F04 48FFC6                  	inc rsi
  2972 00000F07 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2973                                  .L_lambda_simple_params_end_0009:
  2974 00000F09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2975 00000F0C 4889C3                  	mov rbx, rax
  2976 00000F0F 58                      	pop rax
  2977 00000F10 C60004                  	mov byte [rax], T_closure
  2978 00000F13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2979 00000F17 48C74009[240F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2980 00000F1F E9A4000000              	jmp .L_lambda_simple_end_0009
  2981                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2982 00000F24 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2983 00000F2A 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2984 00000F2C FF742410                	push qword [rsp + 8 * 2]
  2985 00000F30 6A01                    	push 1
  2986 00000F32 E977660100              	jmp L_error_incorrect_arity_simple
  2987                                  .L_lambda_simple_arity_check_ok_0009:
  2988 00000F37 C8000000                	enter 0, 0
  2989                                  	; preparing a tail-call
  2990                                  	; preparing a non-tail-call
  2991 00000F3B 488B4520                	mov rax, PARAM(0)	; param x
  2992 00000F3F 50                      	push rax
  2993 00000F40 6A01                    	push 1	; arg count
  2994 00000F42 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2995 00000F4A 803805                  	cmp byte [rax], T_undefined
  2996 00000F4D 0F8475650100            	je L_error_fvar_undefined
  2997 00000F53 803804                  	cmp byte [rax], T_closure
  2998 00000F56 0F85F0650100            	jne L_error_non_closure
  2999 00000F5C FF7001                  	push SOB_CLOSURE_ENV(rax)
  3000 00000F5F FF5009                  	call SOB_CLOSURE_CODE(rax)
  3001 00000F62 50                      	push rax
  3002 00000F63 6A01                    	push 1	; arg count
  3003 00000F65 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3004 00000F6D 803805                  	cmp byte [rax], T_undefined
  3005 00000F70 0F8452650100            	je L_error_fvar_undefined
  3006 00000F76 803804                  	cmp byte [rax], T_closure
  3007 00000F79 0F85CD650100            	jne L_error_non_closure
  3008 00000F7F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3009 00000F82 FF7508                  	push qword [rbp + 8 * 1]
  3010                                   ; old ret addr
  3011 00000F85 FF7500                  	push qword [rbp]
  3012                                   ; restore the old rbp
  3013 00000F88 BB01000000              	mov rbx, 1
  3014 00000F8D 4883C303                	add rbx, 3
  3015 00000F91 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3016 00000F95 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3017 00000F9A 4C8D4DF8                	lea r9, [rbp - 8]
  3018 00000F9E B905000000              	mov rcx, 5
  3019                                  .L_tc_recycle_frame_loop_0009:
  3020 00000FA3 4883F900                	cmp rcx, 0
  3021 00000FA7 7413                    	je .L_tc_recycle_frame_done_0009
  3022 00000FA9 4D8B11                  	mov r10, qword [r9]
  3023 00000FAC 4D8910                  	mov qword [r8], r10
  3024 00000FAF 4983E808                	sub r8, 8
  3025 00000FB3 4983E908                	sub r9, 8
  3026 00000FB7 48FFC9                  	dec rcx
  3027 00000FBA EBE7                    	jmp .L_tc_recycle_frame_loop_0009
  3028                                  .L_tc_recycle_frame_done_0009:
  3029 00000FBC 498D6008                	lea rsp, [r8 + 8]
  3030 00000FC0 5D                      	pop rbp ; restore the old rbp
  3031 00000FC1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3032 00000FC4 C9                      	leave
  3033 00000FC5 C21800                  	ret AND_KILL_FRAME(1)
  3034                                  .L_lambda_simple_end_0009:	; new closure is in rax
  3035 00000FC8 48890425[39110000]      	mov qword [free_var_52], rax
  3036 00000FD0 48B8-                   	mov rax, sob_void
  3036 00000FD2 [0000000000000000] 
  3037                                  
  3038 00000FDA 4889C7                  	mov rdi, rax
  3039 00000FDD E868680100              	call print_sexpr_if_not_void
  3040 00000FE2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3041 00000FE7 E809660100              	call malloc
  3042 00000FEC 50                      	push rax
  3043 00000FED BF00000000              	mov rdi, 8 * 0	; new rib
  3044 00000FF2 E8FE650100              	call malloc
  3045 00000FF7 50                      	push rax
  3046 00000FF8 BF08000000              	mov rdi, 8 * 1	; extended env
  3047 00000FFD E8F3650100              	call malloc
  3048 00001002 488B7D10                	mov rdi, ENV
  3049 00001006 BE00000000              	mov rsi, 0
  3050 0000100B BA01000000              	mov rdx, 1
  3051                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  3052 00001010 4883FE00                	cmp rsi, 0
  3053 00001014 7410                    	je .L_lambda_simple_env_end_000a
  3054 00001016 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3055 0000101A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3056 0000101E 48FFC6                  	inc rsi
  3057 00001021 48FFC2                  	inc rdx
  3058 00001024 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  3059                                  .L_lambda_simple_env_end_000a:
  3060 00001026 5B                      	pop rbx
  3061 00001027 BE00000000              	mov rsi, 0
  3062                                  .L_lambda_simple_params_loop_000a:	; copy params
  3063 0000102C 4883FE00                	cmp rsi, 0
  3064 00001030 740E                    	je .L_lambda_simple_params_end_000a
  3065 00001032 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3066 00001037 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3067 0000103B 48FFC6                  	inc rsi
  3068 0000103E EBEC                    	jmp .L_lambda_simple_params_loop_000a
  3069                                  .L_lambda_simple_params_end_000a:
  3070 00001040 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3071 00001043 4889C3                  	mov rbx, rax
  3072 00001046 58                      	pop rax
  3073 00001047 C60004                  	mov byte [rax], T_closure
  3074 0000104A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3075 0000104E 48C74009[5B100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  3076 00001056 E9A4000000              	jmp .L_lambda_simple_end_000a
  3077                                  .L_lambda_simple_code_000a:	; lambda-simple body
  3078 0000105B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3079 00001061 740B                    	je .L_lambda_simple_arity_check_ok_000a
  3080 00001063 FF742410                	push qword [rsp + 8 * 2]
  3081 00001067 6A01                    	push 1
  3082 00001069 E940650100              	jmp L_error_incorrect_arity_simple
  3083                                  .L_lambda_simple_arity_check_ok_000a:
  3084 0000106E C8000000                	enter 0, 0
  3085                                  	; preparing a tail-call
  3086                                  	; preparing a non-tail-call
  3087 00001072 488B4520                	mov rax, PARAM(0)	; param x
  3088 00001076 50                      	push rax
  3089 00001077 6A01                    	push 1	; arg count
  3090 00001079 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3091 00001081 803805                  	cmp byte [rax], T_undefined
  3092 00001084 0F843E640100            	je L_error_fvar_undefined
  3093 0000108A 803804                  	cmp byte [rax], T_closure
  3094 0000108D 0F85B9640100            	jne L_error_non_closure
  3095 00001093 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3096 00001096 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3097 00001099 50                      	push rax
  3098 0000109A 6A01                    	push 1	; arg count
  3099 0000109C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3100 000010A4 803805                  	cmp byte [rax], T_undefined
  3101 000010A7 0F841B640100            	je L_error_fvar_undefined
  3102 000010AD 803804                  	cmp byte [rax], T_closure
  3103 000010B0 0F8596640100            	jne L_error_non_closure
  3104 000010B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3105 000010B9 FF7508                  	push qword [rbp + 8 * 1]
  3106                                   ; old ret addr
  3107 000010BC FF7500                  	push qword [rbp]
  3108                                   ; restore the old rbp
  3109 000010BF BB01000000              	mov rbx, 1
  3110 000010C4 4883C303                	add rbx, 3
  3111 000010C8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3112 000010CC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3113 000010D1 4C8D4DF8                	lea r9, [rbp - 8]
  3114 000010D5 B905000000              	mov rcx, 5
  3115                                  .L_tc_recycle_frame_loop_000a:
  3116 000010DA 4883F900                	cmp rcx, 0
  3117 000010DE 7413                    	je .L_tc_recycle_frame_done_000a
  3118 000010E0 4D8B11                  	mov r10, qword [r9]
  3119 000010E3 4D8910                  	mov qword [r8], r10
  3120 000010E6 4983E808                	sub r8, 8
  3121 000010EA 4983E908                	sub r9, 8
  3122 000010EE 48FFC9                  	dec rcx
  3123 000010F1 EBE7                    	jmp .L_tc_recycle_frame_loop_000a
  3124                                  .L_tc_recycle_frame_done_000a:
  3125 000010F3 498D6008                	lea rsp, [r8 + 8]
  3126 000010F7 5D                      	pop rbp ; restore the old rbp
  3127 000010F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3128 000010FB C9                      	leave
  3129 000010FC C21800                  	ret AND_KILL_FRAME(1)
  3130                                  .L_lambda_simple_end_000a:	; new closure is in rax
  3131 000010FF 48890425[6C110000]      	mov qword [free_var_55], rax
  3132 00001107 48B8-                   	mov rax, sob_void
  3132 00001109 [0000000000000000] 
  3133                                  
  3134 00001111 4889C7                  	mov rdi, rax
  3135 00001114 E831670100              	call print_sexpr_if_not_void
  3136 00001119 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3137 0000111E E8D2640100              	call malloc
  3138 00001123 50                      	push rax
  3139 00001124 BF00000000              	mov rdi, 8 * 0	; new rib
  3140 00001129 E8C7640100              	call malloc
  3141 0000112E 50                      	push rax
  3142 0000112F BF08000000              	mov rdi, 8 * 1	; extended env
  3143 00001134 E8BC640100              	call malloc
  3144 00001139 488B7D10                	mov rdi, ENV
  3145 0000113D BE00000000              	mov rsi, 0
  3146 00001142 BA01000000              	mov rdx, 1
  3147                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  3148 00001147 4883FE00                	cmp rsi, 0
  3149 0000114B 7410                    	je .L_lambda_simple_env_end_000b
  3150 0000114D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3151 00001151 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3152 00001155 48FFC6                  	inc rsi
  3153 00001158 48FFC2                  	inc rdx
  3154 0000115B EBEA                    	jmp .L_lambda_simple_env_loop_000b
  3155                                  .L_lambda_simple_env_end_000b:
  3156 0000115D 5B                      	pop rbx
  3157 0000115E BE00000000              	mov rsi, 0
  3158                                  .L_lambda_simple_params_loop_000b:	; copy params
  3159 00001163 4883FE00                	cmp rsi, 0
  3160 00001167 740E                    	je .L_lambda_simple_params_end_000b
  3161 00001169 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3162 0000116E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3163 00001172 48FFC6                  	inc rsi
  3164 00001175 EBEC                    	jmp .L_lambda_simple_params_loop_000b
  3165                                  .L_lambda_simple_params_end_000b:
  3166 00001177 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3167 0000117A 4889C3                  	mov rbx, rax
  3168 0000117D 58                      	pop rax
  3169 0000117E C60004                  	mov byte [rax], T_closure
  3170 00001181 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3171 00001185 48C74009[92110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  3172 0000118D E9A4000000              	jmp .L_lambda_simple_end_000b
  3173                                  .L_lambda_simple_code_000b:	; lambda-simple body
  3174 00001192 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3175 00001198 740B                    	je .L_lambda_simple_arity_check_ok_000b
  3176 0000119A FF742410                	push qword [rsp + 8 * 2]
  3177 0000119E 6A01                    	push 1
  3178 000011A0 E909640100              	jmp L_error_incorrect_arity_simple
  3179                                  .L_lambda_simple_arity_check_ok_000b:
  3180 000011A5 C8000000                	enter 0, 0
  3181                                  	; preparing a tail-call
  3182                                  	; preparing a non-tail-call
  3183 000011A9 488B4520                	mov rax, PARAM(0)	; param x
  3184 000011AD 50                      	push rax
  3185 000011AE 6A01                    	push 1	; arg count
  3186 000011B0 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3187 000011B8 803805                  	cmp byte [rax], T_undefined
  3188 000011BB 0F8407630100            	je L_error_fvar_undefined
  3189 000011C1 803804                  	cmp byte [rax], T_closure
  3190 000011C4 0F8582630100            	jne L_error_non_closure
  3191 000011CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  3192 000011CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  3193 000011D0 50                      	push rax
  3194 000011D1 6A01                    	push 1	; arg count
  3195 000011D3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3196 000011DB 803805                  	cmp byte [rax], T_undefined
  3197 000011DE 0F84E4620100            	je L_error_fvar_undefined
  3198 000011E4 803804                  	cmp byte [rax], T_closure
  3199 000011E7 0F855F630100            	jne L_error_non_closure
  3200 000011ED FF7001                  	push SOB_CLOSURE_ENV(rax)
  3201 000011F0 FF7508                  	push qword [rbp + 8 * 1]
  3202                                   ; old ret addr
  3203 000011F3 FF7500                  	push qword [rbp]
  3204                                   ; restore the old rbp
  3205 000011F6 BB01000000              	mov rbx, 1
  3206 000011FB 4883C303                	add rbx, 3
  3207 000011FF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3208 00001203 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3209 00001208 4C8D4DF8                	lea r9, [rbp - 8]
  3210 0000120C B905000000              	mov rcx, 5
  3211                                  .L_tc_recycle_frame_loop_000b:
  3212 00001211 4883F900                	cmp rcx, 0
  3213 00001215 7413                    	je .L_tc_recycle_frame_done_000b
  3214 00001217 4D8B11                  	mov r10, qword [r9]
  3215 0000121A 4D8910                  	mov qword [r8], r10
  3216 0000121D 4983E808                	sub r8, 8
  3217 00001221 4983E908                	sub r9, 8
  3218 00001225 48FFC9                  	dec rcx
  3219 00001228 EBE7                    	jmp .L_tc_recycle_frame_loop_000b
  3220                                  .L_tc_recycle_frame_done_000b:
  3221 0000122A 498D6008                	lea rsp, [r8 + 8]
  3222 0000122E 5D                      	pop rbp ; restore the old rbp
  3223 0000122F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3224 00001232 C9                      	leave
  3225 00001233 C21800                  	ret AND_KILL_FRAME(1)
  3226                                  .L_lambda_simple_end_000b:	; new closure is in rax
  3227 00001236 48890425[B0110000]      	mov qword [free_var_59], rax
  3228 0000123E 48B8-                   	mov rax, sob_void
  3228 00001240 [0000000000000000] 
  3229                                  
  3230 00001248 4889C7                  	mov rdi, rax
  3231 0000124B E8FA650100              	call print_sexpr_if_not_void
  3232 00001250 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3233 00001255 E89B630100              	call malloc
  3234 0000125A 50                      	push rax
  3235 0000125B BF00000000              	mov rdi, 8 * 0	; new rib
  3236 00001260 E890630100              	call malloc
  3237 00001265 50                      	push rax
  3238 00001266 BF08000000              	mov rdi, 8 * 1	; extended env
  3239 0000126B E885630100              	call malloc
  3240 00001270 488B7D10                	mov rdi, ENV
  3241 00001274 BE00000000              	mov rsi, 0
  3242 00001279 BA01000000              	mov rdx, 1
  3243                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  3244 0000127E 4883FE00                	cmp rsi, 0
  3245 00001282 7410                    	je .L_lambda_simple_env_end_000c
  3246 00001284 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3247 00001288 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3248 0000128C 48FFC6                  	inc rsi
  3249 0000128F 48FFC2                  	inc rdx
  3250 00001292 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  3251                                  .L_lambda_simple_env_end_000c:
  3252 00001294 5B                      	pop rbx
  3253 00001295 BE00000000              	mov rsi, 0
  3254                                  .L_lambda_simple_params_loop_000c:	; copy params
  3255 0000129A 4883FE00                	cmp rsi, 0
  3256 0000129E 740E                    	je .L_lambda_simple_params_end_000c
  3257 000012A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3258 000012A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3259 000012A9 48FFC6                  	inc rsi
  3260 000012AC EBEC                    	jmp .L_lambda_simple_params_loop_000c
  3261                                  .L_lambda_simple_params_end_000c:
  3262 000012AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3263 000012B1 4889C3                  	mov rbx, rax
  3264 000012B4 58                      	pop rax
  3265 000012B5 C60004                  	mov byte [rax], T_closure
  3266 000012B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3267 000012BC 48C74009[C9120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  3268 000012C4 E9A4000000              	jmp .L_lambda_simple_end_000c
  3269                                  .L_lambda_simple_code_000c:	; lambda-simple body
  3270 000012C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3271 000012CF 740B                    	je .L_lambda_simple_arity_check_ok_000c
  3272 000012D1 FF742410                	push qword [rsp + 8 * 2]
  3273 000012D5 6A01                    	push 1
  3274 000012D7 E9D2620100              	jmp L_error_incorrect_arity_simple
  3275                                  .L_lambda_simple_arity_check_ok_000c:
  3276 000012DC C8000000                	enter 0, 0
  3277                                  	; preparing a tail-call
  3278                                  	; preparing a non-tail-call
  3279 000012E0 488B4520                	mov rax, PARAM(0)	; param x
  3280 000012E4 50                      	push rax
  3281 000012E5 6A01                    	push 1	; arg count
  3282 000012E7 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3283 000012EF 803805                  	cmp byte [rax], T_undefined
  3284 000012F2 0F84D0610100            	je L_error_fvar_undefined
  3285 000012F8 803804                  	cmp byte [rax], T_closure
  3286 000012FB 0F854B620100            	jne L_error_non_closure
  3287 00001301 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3288 00001304 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3289 00001307 50                      	push rax
  3290 00001308 6A01                    	push 1	; arg count
  3291 0000130A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3292 00001312 803805                  	cmp byte [rax], T_undefined
  3293 00001315 0F84AD610100            	je L_error_fvar_undefined
  3294 0000131B 803804                  	cmp byte [rax], T_closure
  3295 0000131E 0F8528620100            	jne L_error_non_closure
  3296 00001324 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3297 00001327 FF7508                  	push qword [rbp + 8 * 1]
  3298                                   ; old ret addr
  3299 0000132A FF7500                  	push qword [rbp]
  3300                                   ; restore the old rbp
  3301 0000132D BB01000000              	mov rbx, 1
  3302 00001332 4883C303                	add rbx, 3
  3303 00001336 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3304 0000133A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3305 0000133F 4C8D4DF8                	lea r9, [rbp - 8]
  3306 00001343 B905000000              	mov rcx, 5
  3307                                  .L_tc_recycle_frame_loop_000c:
  3308 00001348 4883F900                	cmp rcx, 0
  3309 0000134C 7413                    	je .L_tc_recycle_frame_done_000c
  3310 0000134E 4D8B11                  	mov r10, qword [r9]
  3311 00001351 4D8910                  	mov qword [r8], r10
  3312 00001354 4983E808                	sub r8, 8
  3313 00001358 4983E908                	sub r9, 8
  3314 0000135C 48FFC9                  	dec rcx
  3315 0000135F EBE7                    	jmp .L_tc_recycle_frame_loop_000c
  3316                                  .L_tc_recycle_frame_done_000c:
  3317 00001361 498D6008                	lea rsp, [r8 + 8]
  3318 00001365 5D                      	pop rbp ; restore the old rbp
  3319 00001366 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3320 00001369 C9                      	leave
  3321 0000136A C21800                  	ret AND_KILL_FRAME(1)
  3322                                  .L_lambda_simple_end_000c:	; new closure is in rax
  3323 0000136D 48890425[E3110000]      	mov qword [free_var_62], rax
  3324 00001375 48B8-                   	mov rax, sob_void
  3324 00001377 [0000000000000000] 
  3325                                  
  3326 0000137F 4889C7                  	mov rdi, rax
  3327 00001382 E8C3640100              	call print_sexpr_if_not_void
  3328 00001387 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3329 0000138C E864620100              	call malloc
  3330 00001391 50                      	push rax
  3331 00001392 BF00000000              	mov rdi, 8 * 0	; new rib
  3332 00001397 E859620100              	call malloc
  3333 0000139C 50                      	push rax
  3334 0000139D BF08000000              	mov rdi, 8 * 1	; extended env
  3335 000013A2 E84E620100              	call malloc
  3336 000013A7 488B7D10                	mov rdi, ENV
  3337 000013AB BE00000000              	mov rsi, 0
  3338 000013B0 BA01000000              	mov rdx, 1
  3339                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  3340 000013B5 4883FE00                	cmp rsi, 0
  3341 000013B9 7410                    	je .L_lambda_simple_env_end_000d
  3342 000013BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3343 000013BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3344 000013C3 48FFC6                  	inc rsi
  3345 000013C6 48FFC2                  	inc rdx
  3346 000013C9 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  3347                                  .L_lambda_simple_env_end_000d:
  3348 000013CB 5B                      	pop rbx
  3349 000013CC BE00000000              	mov rsi, 0
  3350                                  .L_lambda_simple_params_loop_000d:	; copy params
  3351 000013D1 4883FE00                	cmp rsi, 0
  3352 000013D5 740E                    	je .L_lambda_simple_params_end_000d
  3353 000013D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3354 000013DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3355 000013E0 48FFC6                  	inc rsi
  3356 000013E3 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  3357                                  .L_lambda_simple_params_end_000d:
  3358 000013E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3359 000013E8 4889C3                  	mov rbx, rax
  3360 000013EB 58                      	pop rax
  3361 000013EC C60004                  	mov byte [rax], T_closure
  3362 000013EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3363 000013F3 48C74009[00140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  3364 000013FB E9A4000000              	jmp .L_lambda_simple_end_000d
  3365                                  .L_lambda_simple_code_000d:	; lambda-simple body
  3366 00001400 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3367 00001406 740B                    	je .L_lambda_simple_arity_check_ok_000d
  3368 00001408 FF742410                	push qword [rsp + 8 * 2]
  3369 0000140C 6A01                    	push 1
  3370 0000140E E99B610100              	jmp L_error_incorrect_arity_simple
  3371                                  .L_lambda_simple_arity_check_ok_000d:
  3372 00001413 C8000000                	enter 0, 0
  3373                                  	; preparing a tail-call
  3374                                  	; preparing a non-tail-call
  3375 00001417 488B4520                	mov rax, PARAM(0)	; param x
  3376 0000141B 50                      	push rax
  3377 0000141C 6A01                    	push 1	; arg count
  3378 0000141E 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3379 00001426 803805                  	cmp byte [rax], T_undefined
  3380 00001429 0F8499600100            	je L_error_fvar_undefined
  3381 0000142F 803804                  	cmp byte [rax], T_closure
  3382 00001432 0F8514610100            	jne L_error_non_closure
  3383 00001438 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3384 0000143B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3385 0000143E 50                      	push rax
  3386 0000143F 6A01                    	push 1	; arg count
  3387 00001441 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3388 00001449 803805                  	cmp byte [rax], T_undefined
  3389 0000144C 0F8476600100            	je L_error_fvar_undefined
  3390 00001452 803804                  	cmp byte [rax], T_closure
  3391 00001455 0F85F1600100            	jne L_error_non_closure
  3392 0000145B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3393 0000145E FF7508                  	push qword [rbp + 8 * 1]
  3394                                   ; old ret addr
  3395 00001461 FF7500                  	push qword [rbp]
  3396                                   ; restore the old rbp
  3397 00001464 BB01000000              	mov rbx, 1
  3398 00001469 4883C303                	add rbx, 3
  3399 0000146D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3400 00001471 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3401 00001476 4C8D4DF8                	lea r9, [rbp - 8]
  3402 0000147A B905000000              	mov rcx, 5
  3403                                  .L_tc_recycle_frame_loop_000d:
  3404 0000147F 4883F900                	cmp rcx, 0
  3405 00001483 7413                    	je .L_tc_recycle_frame_done_000d
  3406 00001485 4D8B11                  	mov r10, qword [r9]
  3407 00001488 4D8910                  	mov qword [r8], r10
  3408 0000148B 4983E808                	sub r8, 8
  3409 0000148F 4983E908                	sub r9, 8
  3410 00001493 48FFC9                  	dec rcx
  3411 00001496 EBE7                    	jmp .L_tc_recycle_frame_loop_000d
  3412                                  .L_tc_recycle_frame_done_000d:
  3413 00001498 498D6008                	lea rsp, [r8 + 8]
  3414 0000149C 5D                      	pop rbp ; restore the old rbp
  3415 0000149D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3416 000014A0 C9                      	leave
  3417 000014A1 C21800                  	ret AND_KILL_FRAME(1)
  3418                                  .L_lambda_simple_end_000d:	; new closure is in rax
  3419 000014A4 48890425[18100000]      	mov qword [free_var_35], rax
  3420 000014AC 48B8-                   	mov rax, sob_void
  3420 000014AE [0000000000000000] 
  3421                                  
  3422 000014B6 4889C7                  	mov rdi, rax
  3423 000014B9 E88C630100              	call print_sexpr_if_not_void
  3424 000014BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3425 000014C3 E82D610100              	call malloc
  3426 000014C8 50                      	push rax
  3427 000014C9 BF00000000              	mov rdi, 8 * 0	; new rib
  3428 000014CE E822610100              	call malloc
  3429 000014D3 50                      	push rax
  3430 000014D4 BF08000000              	mov rdi, 8 * 1	; extended env
  3431 000014D9 E817610100              	call malloc
  3432 000014DE 488B7D10                	mov rdi, ENV
  3433 000014E2 BE00000000              	mov rsi, 0
  3434 000014E7 BA01000000              	mov rdx, 1
  3435                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  3436 000014EC 4883FE00                	cmp rsi, 0
  3437 000014F0 7410                    	je .L_lambda_simple_env_end_000e
  3438 000014F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3439 000014F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3440 000014FA 48FFC6                  	inc rsi
  3441 000014FD 48FFC2                  	inc rdx
  3442 00001500 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  3443                                  .L_lambda_simple_env_end_000e:
  3444 00001502 5B                      	pop rbx
  3445 00001503 BE00000000              	mov rsi, 0
  3446                                  .L_lambda_simple_params_loop_000e:	; copy params
  3447 00001508 4883FE00                	cmp rsi, 0
  3448 0000150C 740E                    	je .L_lambda_simple_params_end_000e
  3449 0000150E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3450 00001513 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3451 00001517 48FFC6                  	inc rsi
  3452 0000151A EBEC                    	jmp .L_lambda_simple_params_loop_000e
  3453                                  .L_lambda_simple_params_end_000e:
  3454 0000151C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3455 0000151F 4889C3                  	mov rbx, rax
  3456 00001522 58                      	pop rax
  3457 00001523 C60004                  	mov byte [rax], T_closure
  3458 00001526 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3459 0000152A 48C74009[37150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  3460 00001532 E9A4000000              	jmp .L_lambda_simple_end_000e
  3461                                  .L_lambda_simple_code_000e:	; lambda-simple body
  3462 00001537 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3463 0000153D 740B                    	je .L_lambda_simple_arity_check_ok_000e
  3464 0000153F FF742410                	push qword [rsp + 8 * 2]
  3465 00001543 6A01                    	push 1
  3466 00001545 E964600100              	jmp L_error_incorrect_arity_simple
  3467                                  .L_lambda_simple_arity_check_ok_000e:
  3468 0000154A C8000000                	enter 0, 0
  3469                                  	; preparing a tail-call
  3470                                  	; preparing a non-tail-call
  3471 0000154E 488B4520                	mov rax, PARAM(0)	; param x
  3472 00001552 50                      	push rax
  3473 00001553 6A01                    	push 1	; arg count
  3474 00001555 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3475 0000155D 803805                  	cmp byte [rax], T_undefined
  3476 00001560 0F84625F0100            	je L_error_fvar_undefined
  3477 00001566 803804                  	cmp byte [rax], T_closure
  3478 00001569 0F85DD5F0100            	jne L_error_non_closure
  3479 0000156F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3480 00001572 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3481 00001575 50                      	push rax
  3482 00001576 6A01                    	push 1	; arg count
  3483 00001578 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3484 00001580 803805                  	cmp byte [rax], T_undefined
  3485 00001583 0F843F5F0100            	je L_error_fvar_undefined
  3486 00001589 803804                  	cmp byte [rax], T_closure
  3487 0000158C 0F85BA5F0100            	jne L_error_non_closure
  3488 00001592 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3489 00001595 FF7508                  	push qword [rbp + 8 * 1]
  3490                                   ; old ret addr
  3491 00001598 FF7500                  	push qword [rbp]
  3492                                   ; restore the old rbp
  3493 0000159B BB01000000              	mov rbx, 1
  3494 000015A0 4883C303                	add rbx, 3
  3495 000015A4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3496 000015A8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3497 000015AD 4C8D4DF8                	lea r9, [rbp - 8]
  3498 000015B1 B905000000              	mov rcx, 5
  3499                                  .L_tc_recycle_frame_loop_000e:
  3500 000015B6 4883F900                	cmp rcx, 0
  3501 000015BA 7413                    	je .L_tc_recycle_frame_done_000e
  3502 000015BC 4D8B11                  	mov r10, qword [r9]
  3503 000015BF 4D8910                  	mov qword [r8], r10
  3504 000015C2 4983E808                	sub r8, 8
  3505 000015C6 4983E908                	sub r9, 8
  3506 000015CA 48FFC9                  	dec rcx
  3507 000015CD EBE7                    	jmp .L_tc_recycle_frame_loop_000e
  3508                                  .L_tc_recycle_frame_done_000e:
  3509 000015CF 498D6008                	lea rsp, [r8 + 8]
  3510 000015D3 5D                      	pop rbp ; restore the old rbp
  3511 000015D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3512 000015D7 C9                      	leave
  3513 000015D8 C21800                  	ret AND_KILL_FRAME(1)
  3514                                  .L_lambda_simple_end_000e:	; new closure is in rax
  3515 000015DB 48890425[29100000]      	mov qword [free_var_36], rax
  3516 000015E3 48B8-                   	mov rax, sob_void
  3516 000015E5 [0000000000000000] 
  3517                                  
  3518 000015ED 4889C7                  	mov rdi, rax
  3519 000015F0 E855620100              	call print_sexpr_if_not_void
  3520 000015F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3521 000015FA E8F65F0100              	call malloc
  3522 000015FF 50                      	push rax
  3523 00001600 BF00000000              	mov rdi, 8 * 0	; new rib
  3524 00001605 E8EB5F0100              	call malloc
  3525 0000160A 50                      	push rax
  3526 0000160B BF08000000              	mov rdi, 8 * 1	; extended env
  3527 00001610 E8E05F0100              	call malloc
  3528 00001615 488B7D10                	mov rdi, ENV
  3529 00001619 BE00000000              	mov rsi, 0
  3530 0000161E BA01000000              	mov rdx, 1
  3531                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  3532 00001623 4883FE00                	cmp rsi, 0
  3533 00001627 7410                    	je .L_lambda_simple_env_end_000f
  3534 00001629 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3535 0000162D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3536 00001631 48FFC6                  	inc rsi
  3537 00001634 48FFC2                  	inc rdx
  3538 00001637 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  3539                                  .L_lambda_simple_env_end_000f:
  3540 00001639 5B                      	pop rbx
  3541 0000163A BE00000000              	mov rsi, 0
  3542                                  .L_lambda_simple_params_loop_000f:	; copy params
  3543 0000163F 4883FE00                	cmp rsi, 0
  3544 00001643 740E                    	je .L_lambda_simple_params_end_000f
  3545 00001645 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3546 0000164A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3547 0000164E 48FFC6                  	inc rsi
  3548 00001651 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  3549                                  .L_lambda_simple_params_end_000f:
  3550 00001653 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3551 00001656 4889C3                  	mov rbx, rax
  3552 00001659 58                      	pop rax
  3553 0000165A C60004                  	mov byte [rax], T_closure
  3554 0000165D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3555 00001661 48C74009[6E160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  3556 00001669 E9A4000000              	jmp .L_lambda_simple_end_000f
  3557                                  .L_lambda_simple_code_000f:	; lambda-simple body
  3558 0000166E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3559 00001674 740B                    	je .L_lambda_simple_arity_check_ok_000f
  3560 00001676 FF742410                	push qword [rsp + 8 * 2]
  3561 0000167A 6A01                    	push 1
  3562 0000167C E92D5F0100              	jmp L_error_incorrect_arity_simple
  3563                                  .L_lambda_simple_arity_check_ok_000f:
  3564 00001681 C8000000                	enter 0, 0
  3565                                  	; preparing a tail-call
  3566                                  	; preparing a non-tail-call
  3567 00001685 488B4520                	mov rax, PARAM(0)	; param x
  3568 00001689 50                      	push rax
  3569 0000168A 6A01                    	push 1	; arg count
  3570 0000168C 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3571 00001694 803805                  	cmp byte [rax], T_undefined
  3572 00001697 0F842B5E0100            	je L_error_fvar_undefined
  3573 0000169D 803804                  	cmp byte [rax], T_closure
  3574 000016A0 0F85A65E0100            	jne L_error_non_closure
  3575 000016A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3576 000016A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3577 000016AC 50                      	push rax
  3578 000016AD 6A01                    	push 1	; arg count
  3579 000016AF 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3580 000016B7 803805                  	cmp byte [rax], T_undefined
  3581 000016BA 0F84085E0100            	je L_error_fvar_undefined
  3582 000016C0 803804                  	cmp byte [rax], T_closure
  3583 000016C3 0F85835E0100            	jne L_error_non_closure
  3584 000016C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3585 000016CC FF7508                  	push qword [rbp + 8 * 1]
  3586                                   ; old ret addr
  3587 000016CF FF7500                  	push qword [rbp]
  3588                                   ; restore the old rbp
  3589 000016D2 BB01000000              	mov rbx, 1
  3590 000016D7 4883C303                	add rbx, 3
  3591 000016DB 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3592 000016DF 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3593 000016E4 4C8D4DF8                	lea r9, [rbp - 8]
  3594 000016E8 B905000000              	mov rcx, 5
  3595                                  .L_tc_recycle_frame_loop_000f:
  3596 000016ED 4883F900                	cmp rcx, 0
  3597 000016F1 7413                    	je .L_tc_recycle_frame_done_000f
  3598 000016F3 4D8B11                  	mov r10, qword [r9]
  3599 000016F6 4D8910                  	mov qword [r8], r10
  3600 000016F9 4983E808                	sub r8, 8
  3601 000016FD 4983E908                	sub r9, 8
  3602 00001701 48FFC9                  	dec rcx
  3603 00001704 EBE7                    	jmp .L_tc_recycle_frame_loop_000f
  3604                                  .L_tc_recycle_frame_done_000f:
  3605 00001706 498D6008                	lea rsp, [r8 + 8]
  3606 0000170A 5D                      	pop rbp ; restore the old rbp
  3607 0000170B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3608 0000170E C9                      	leave
  3609 0000170F C21800                  	ret AND_KILL_FRAME(1)
  3610                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3611 00001712 48890425[4B100000]      	mov qword [free_var_38], rax
  3612 0000171A 48B8-                   	mov rax, sob_void
  3612 0000171C [0000000000000000] 
  3613                                  
  3614 00001724 4889C7                  	mov rdi, rax
  3615 00001727 E81E610100              	call print_sexpr_if_not_void
  3616 0000172C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3617 00001731 E8BF5E0100              	call malloc
  3618 00001736 50                      	push rax
  3619 00001737 BF00000000              	mov rdi, 8 * 0	; new rib
  3620 0000173C E8B45E0100              	call malloc
  3621 00001741 50                      	push rax
  3622 00001742 BF08000000              	mov rdi, 8 * 1	; extended env
  3623 00001747 E8A95E0100              	call malloc
  3624 0000174C 488B7D10                	mov rdi, ENV
  3625 00001750 BE00000000              	mov rsi, 0
  3626 00001755 BA01000000              	mov rdx, 1
  3627                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3628 0000175A 4883FE00                	cmp rsi, 0
  3629 0000175E 7410                    	je .L_lambda_simple_env_end_0010
  3630 00001760 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3631 00001764 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3632 00001768 48FFC6                  	inc rsi
  3633 0000176B 48FFC2                  	inc rdx
  3634 0000176E EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3635                                  .L_lambda_simple_env_end_0010:
  3636 00001770 5B                      	pop rbx
  3637 00001771 BE00000000              	mov rsi, 0
  3638                                  .L_lambda_simple_params_loop_0010:	; copy params
  3639 00001776 4883FE00                	cmp rsi, 0
  3640 0000177A 740E                    	je .L_lambda_simple_params_end_0010
  3641 0000177C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3642 00001781 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3643 00001785 48FFC6                  	inc rsi
  3644 00001788 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3645                                  .L_lambda_simple_params_end_0010:
  3646 0000178A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3647 0000178D 4889C3                  	mov rbx, rax
  3648 00001790 58                      	pop rax
  3649 00001791 C60004                  	mov byte [rax], T_closure
  3650 00001794 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3651 00001798 48C74009[A5170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3652 000017A0 E9A4000000              	jmp .L_lambda_simple_end_0010
  3653                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3654 000017A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3655 000017AB 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3656 000017AD FF742410                	push qword [rsp + 8 * 2]
  3657 000017B1 6A01                    	push 1
  3658 000017B3 E9F65D0100              	jmp L_error_incorrect_arity_simple
  3659                                  .L_lambda_simple_arity_check_ok_0010:
  3660 000017B8 C8000000                	enter 0, 0
  3661                                  	; preparing a tail-call
  3662                                  	; preparing a non-tail-call
  3663 000017BC 488B4520                	mov rax, PARAM(0)	; param x
  3664 000017C0 50                      	push rax
  3665 000017C1 6A01                    	push 1	; arg count
  3666 000017C3 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3667 000017CB 803805                  	cmp byte [rax], T_undefined
  3668 000017CE 0F84F45C0100            	je L_error_fvar_undefined
  3669 000017D4 803804                  	cmp byte [rax], T_closure
  3670 000017D7 0F856F5D0100            	jne L_error_non_closure
  3671 000017DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3672 000017E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3673 000017E3 50                      	push rax
  3674 000017E4 6A01                    	push 1	; arg count
  3675 000017E6 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3676 000017EE 803805                  	cmp byte [rax], T_undefined
  3677 000017F1 0F84D15C0100            	je L_error_fvar_undefined
  3678 000017F7 803804                  	cmp byte [rax], T_closure
  3679 000017FA 0F854C5D0100            	jne L_error_non_closure
  3680 00001800 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3681 00001803 FF7508                  	push qword [rbp + 8 * 1]
  3682                                   ; old ret addr
  3683 00001806 FF7500                  	push qword [rbp]
  3684                                   ; restore the old rbp
  3685 00001809 BB01000000              	mov rbx, 1
  3686 0000180E 4883C303                	add rbx, 3
  3687 00001812 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3688 00001816 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3689 0000181B 4C8D4DF8                	lea r9, [rbp - 8]
  3690 0000181F B905000000              	mov rcx, 5
  3691                                  .L_tc_recycle_frame_loop_0010:
  3692 00001824 4883F900                	cmp rcx, 0
  3693 00001828 7413                    	je .L_tc_recycle_frame_done_0010
  3694 0000182A 4D8B11                  	mov r10, qword [r9]
  3695 0000182D 4D8910                  	mov qword [r8], r10
  3696 00001830 4983E808                	sub r8, 8
  3697 00001834 4983E908                	sub r9, 8
  3698 00001838 48FFC9                  	dec rcx
  3699 0000183B EBE7                    	jmp .L_tc_recycle_frame_loop_0010
  3700                                  .L_tc_recycle_frame_done_0010:
  3701 0000183D 498D6008                	lea rsp, [r8 + 8]
  3702 00001841 5D                      	pop rbp ; restore the old rbp
  3703 00001842 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3704 00001845 C9                      	leave
  3705 00001846 C21800                  	ret AND_KILL_FRAME(1)
  3706                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3707 00001849 48890425[5C100000]      	mov qword [free_var_39], rax
  3708 00001851 48B8-                   	mov rax, sob_void
  3708 00001853 [0000000000000000] 
  3709                                  
  3710 0000185B 4889C7                  	mov rdi, rax
  3711 0000185E E8E75F0100              	call print_sexpr_if_not_void
  3712 00001863 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3713 00001868 E8885D0100              	call malloc
  3714 0000186D 50                      	push rax
  3715 0000186E BF00000000              	mov rdi, 8 * 0	; new rib
  3716 00001873 E87D5D0100              	call malloc
  3717 00001878 50                      	push rax
  3718 00001879 BF08000000              	mov rdi, 8 * 1	; extended env
  3719 0000187E E8725D0100              	call malloc
  3720 00001883 488B7D10                	mov rdi, ENV
  3721 00001887 BE00000000              	mov rsi, 0
  3722 0000188C BA01000000              	mov rdx, 1
  3723                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3724 00001891 4883FE00                	cmp rsi, 0
  3725 00001895 7410                    	je .L_lambda_simple_env_end_0011
  3726 00001897 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3727 0000189B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3728 0000189F 48FFC6                  	inc rsi
  3729 000018A2 48FFC2                  	inc rdx
  3730 000018A5 EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3731                                  .L_lambda_simple_env_end_0011:
  3732 000018A7 5B                      	pop rbx
  3733 000018A8 BE00000000              	mov rsi, 0
  3734                                  .L_lambda_simple_params_loop_0011:	; copy params
  3735 000018AD 4883FE00                	cmp rsi, 0
  3736 000018B1 740E                    	je .L_lambda_simple_params_end_0011
  3737 000018B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3738 000018B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3739 000018BC 48FFC6                  	inc rsi
  3740 000018BF EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3741                                  .L_lambda_simple_params_end_0011:
  3742 000018C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3743 000018C4 4889C3                  	mov rbx, rax
  3744 000018C7 58                      	pop rax
  3745 000018C8 C60004                  	mov byte [rax], T_closure
  3746 000018CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3747 000018CF 48C74009[DC180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3748 000018D7 E9A4000000              	jmp .L_lambda_simple_end_0011
  3749                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3750 000018DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3751 000018E2 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3752 000018E4 FF742410                	push qword [rsp + 8 * 2]
  3753 000018E8 6A01                    	push 1
  3754 000018EA E9BF5C0100              	jmp L_error_incorrect_arity_simple
  3755                                  .L_lambda_simple_arity_check_ok_0011:
  3756 000018EF C8000000                	enter 0, 0
  3757                                  	; preparing a tail-call
  3758                                  	; preparing a non-tail-call
  3759 000018F3 488B4520                	mov rax, PARAM(0)	; param x
  3760 000018F7 50                      	push rax
  3761 000018F8 6A01                    	push 1	; arg count
  3762 000018FA 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3763 00001902 803805                  	cmp byte [rax], T_undefined
  3764 00001905 0F84BD5B0100            	je L_error_fvar_undefined
  3765 0000190B 803804                  	cmp byte [rax], T_closure
  3766 0000190E 0F85385C0100            	jne L_error_non_closure
  3767 00001914 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3768 00001917 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3769 0000191A 50                      	push rax
  3770 0000191B 6A01                    	push 1	; arg count
  3771 0000191D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3772 00001925 803805                  	cmp byte [rax], T_undefined
  3773 00001928 0F849A5B0100            	je L_error_fvar_undefined
  3774 0000192E 803804                  	cmp byte [rax], T_closure
  3775 00001931 0F85155C0100            	jne L_error_non_closure
  3776 00001937 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3777 0000193A FF7508                  	push qword [rbp + 8 * 1]
  3778                                   ; old ret addr
  3779 0000193D FF7500                  	push qword [rbp]
  3780                                   ; restore the old rbp
  3781 00001940 BB01000000              	mov rbx, 1
  3782 00001945 4883C303                	add rbx, 3
  3783 00001949 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3784 0000194D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3785 00001952 4C8D4DF8                	lea r9, [rbp - 8]
  3786 00001956 B905000000              	mov rcx, 5
  3787                                  .L_tc_recycle_frame_loop_0011:
  3788 0000195B 4883F900                	cmp rcx, 0
  3789 0000195F 7413                    	je .L_tc_recycle_frame_done_0011
  3790 00001961 4D8B11                  	mov r10, qword [r9]
  3791 00001964 4D8910                  	mov qword [r8], r10
  3792 00001967 4983E808                	sub r8, 8
  3793 0000196B 4983E908                	sub r9, 8
  3794 0000196F 48FFC9                  	dec rcx
  3795 00001972 EBE7                    	jmp .L_tc_recycle_frame_loop_0011
  3796                                  .L_tc_recycle_frame_done_0011:
  3797 00001974 498D6008                	lea rsp, [r8 + 8]
  3798 00001978 5D                      	pop rbp ; restore the old rbp
  3799 00001979 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3800 0000197C C9                      	leave
  3801 0000197D C21800                  	ret AND_KILL_FRAME(1)
  3802                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3803 00001980 48890425[8F100000]      	mov qword [free_var_42], rax
  3804 00001988 48B8-                   	mov rax, sob_void
  3804 0000198A [0000000000000000] 
  3805                                  
  3806 00001992 4889C7                  	mov rdi, rax
  3807 00001995 E8B05E0100              	call print_sexpr_if_not_void
  3808 0000199A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3809 0000199F E8515C0100              	call malloc
  3810 000019A4 50                      	push rax
  3811 000019A5 BF00000000              	mov rdi, 8 * 0	; new rib
  3812 000019AA E8465C0100              	call malloc
  3813 000019AF 50                      	push rax
  3814 000019B0 BF08000000              	mov rdi, 8 * 1	; extended env
  3815 000019B5 E83B5C0100              	call malloc
  3816 000019BA 488B7D10                	mov rdi, ENV
  3817 000019BE BE00000000              	mov rsi, 0
  3818 000019C3 BA01000000              	mov rdx, 1
  3819                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3820 000019C8 4883FE00                	cmp rsi, 0
  3821 000019CC 7410                    	je .L_lambda_simple_env_end_0012
  3822 000019CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3823 000019D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3824 000019D6 48FFC6                  	inc rsi
  3825 000019D9 48FFC2                  	inc rdx
  3826 000019DC EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3827                                  .L_lambda_simple_env_end_0012:
  3828 000019DE 5B                      	pop rbx
  3829 000019DF BE00000000              	mov rsi, 0
  3830                                  .L_lambda_simple_params_loop_0012:	; copy params
  3831 000019E4 4883FE00                	cmp rsi, 0
  3832 000019E8 740E                    	je .L_lambda_simple_params_end_0012
  3833 000019EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3834 000019EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3835 000019F3 48FFC6                  	inc rsi
  3836 000019F6 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3837                                  .L_lambda_simple_params_end_0012:
  3838 000019F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3839 000019FB 4889C3                  	mov rbx, rax
  3840 000019FE 58                      	pop rax
  3841 000019FF C60004                  	mov byte [rax], T_closure
  3842 00001A02 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3843 00001A06 48C74009[131A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3844 00001A0E E9A4000000              	jmp .L_lambda_simple_end_0012
  3845                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3846 00001A13 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3847 00001A19 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3848 00001A1B FF742410                	push qword [rsp + 8 * 2]
  3849 00001A1F 6A01                    	push 1
  3850 00001A21 E9885B0100              	jmp L_error_incorrect_arity_simple
  3851                                  .L_lambda_simple_arity_check_ok_0012:
  3852 00001A26 C8000000                	enter 0, 0
  3853                                  	; preparing a tail-call
  3854                                  	; preparing a non-tail-call
  3855 00001A2A 488B4520                	mov rax, PARAM(0)	; param x
  3856 00001A2E 50                      	push rax
  3857 00001A2F 6A01                    	push 1	; arg count
  3858 00001A31 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3859 00001A39 803805                  	cmp byte [rax], T_undefined
  3860 00001A3C 0F84865A0100            	je L_error_fvar_undefined
  3861 00001A42 803804                  	cmp byte [rax], T_closure
  3862 00001A45 0F85015B0100            	jne L_error_non_closure
  3863 00001A4B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3864 00001A4E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3865 00001A51 50                      	push rax
  3866 00001A52 6A01                    	push 1	; arg count
  3867 00001A54 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3868 00001A5C 803805                  	cmp byte [rax], T_undefined
  3869 00001A5F 0F84635A0100            	je L_error_fvar_undefined
  3870 00001A65 803804                  	cmp byte [rax], T_closure
  3871 00001A68 0F85DE5A0100            	jne L_error_non_closure
  3872 00001A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3873 00001A71 FF7508                  	push qword [rbp + 8 * 1]
  3874                                   ; old ret addr
  3875 00001A74 FF7500                  	push qword [rbp]
  3876                                   ; restore the old rbp
  3877 00001A77 BB01000000              	mov rbx, 1
  3878 00001A7C 4883C303                	add rbx, 3
  3879 00001A80 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3880 00001A84 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3881 00001A89 4C8D4DF8                	lea r9, [rbp - 8]
  3882 00001A8D B905000000              	mov rcx, 5
  3883                                  .L_tc_recycle_frame_loop_0012:
  3884 00001A92 4883F900                	cmp rcx, 0
  3885 00001A96 7413                    	je .L_tc_recycle_frame_done_0012
  3886 00001A98 4D8B11                  	mov r10, qword [r9]
  3887 00001A9B 4D8910                  	mov qword [r8], r10
  3888 00001A9E 4983E808                	sub r8, 8
  3889 00001AA2 4983E908                	sub r9, 8
  3890 00001AA6 48FFC9                  	dec rcx
  3891 00001AA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0012
  3892                                  .L_tc_recycle_frame_done_0012:
  3893 00001AAB 498D6008                	lea rsp, [r8 + 8]
  3894 00001AAF 5D                      	pop rbp ; restore the old rbp
  3895 00001AB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3896 00001AB3 C9                      	leave
  3897 00001AB4 C21800                  	ret AND_KILL_FRAME(1)
  3898                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3899 00001AB7 48890425[A0100000]      	mov qword [free_var_43], rax
  3900 00001ABF 48B8-                   	mov rax, sob_void
  3900 00001AC1 [0000000000000000] 
  3901                                  
  3902 00001AC9 4889C7                  	mov rdi, rax
  3903 00001ACC E8795D0100              	call print_sexpr_if_not_void
  3904 00001AD1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3905 00001AD6 E81A5B0100              	call malloc
  3906 00001ADB 50                      	push rax
  3907 00001ADC BF00000000              	mov rdi, 8 * 0	; new rib
  3908 00001AE1 E80F5B0100              	call malloc
  3909 00001AE6 50                      	push rax
  3910 00001AE7 BF08000000              	mov rdi, 8 * 1	; extended env
  3911 00001AEC E8045B0100              	call malloc
  3912 00001AF1 488B7D10                	mov rdi, ENV
  3913 00001AF5 BE00000000              	mov rsi, 0
  3914 00001AFA BA01000000              	mov rdx, 1
  3915                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3916 00001AFF 4883FE00                	cmp rsi, 0
  3917 00001B03 7410                    	je .L_lambda_simple_env_end_0013
  3918 00001B05 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3919 00001B09 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3920 00001B0D 48FFC6                  	inc rsi
  3921 00001B10 48FFC2                  	inc rdx
  3922 00001B13 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3923                                  .L_lambda_simple_env_end_0013:
  3924 00001B15 5B                      	pop rbx
  3925 00001B16 BE00000000              	mov rsi, 0
  3926                                  .L_lambda_simple_params_loop_0013:	; copy params
  3927 00001B1B 4883FE00                	cmp rsi, 0
  3928 00001B1F 740E                    	je .L_lambda_simple_params_end_0013
  3929 00001B21 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3930 00001B26 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3931 00001B2A 48FFC6                  	inc rsi
  3932 00001B2D EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3933                                  .L_lambda_simple_params_end_0013:
  3934 00001B2F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3935 00001B32 4889C3                  	mov rbx, rax
  3936 00001B35 58                      	pop rax
  3937 00001B36 C60004                  	mov byte [rax], T_closure
  3938 00001B39 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3939 00001B3D 48C74009[4A1B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3940 00001B45 E9A4000000              	jmp .L_lambda_simple_end_0013
  3941                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3942 00001B4A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3943 00001B50 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3944 00001B52 FF742410                	push qword [rsp + 8 * 2]
  3945 00001B56 6A01                    	push 1
  3946 00001B58 E9515A0100              	jmp L_error_incorrect_arity_simple
  3947                                  .L_lambda_simple_arity_check_ok_0013:
  3948 00001B5D C8000000                	enter 0, 0
  3949                                  	; preparing a tail-call
  3950                                  	; preparing a non-tail-call
  3951 00001B61 488B4520                	mov rax, PARAM(0)	; param x
  3952 00001B65 50                      	push rax
  3953 00001B66 6A01                    	push 1	; arg count
  3954 00001B68 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3955 00001B70 803805                  	cmp byte [rax], T_undefined
  3956 00001B73 0F844F590100            	je L_error_fvar_undefined
  3957 00001B79 803804                  	cmp byte [rax], T_closure
  3958 00001B7C 0F85CA590100            	jne L_error_non_closure
  3959 00001B82 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3960 00001B85 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3961 00001B88 50                      	push rax
  3962 00001B89 6A01                    	push 1	; arg count
  3963 00001B8B 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3964 00001B93 803805                  	cmp byte [rax], T_undefined
  3965 00001B96 0F842C590100            	je L_error_fvar_undefined
  3966 00001B9C 803804                  	cmp byte [rax], T_closure
  3967 00001B9F 0F85A7590100            	jne L_error_non_closure
  3968 00001BA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3969 00001BA8 FF7508                  	push qword [rbp + 8 * 1]
  3970                                   ; old ret addr
  3971 00001BAB FF7500                  	push qword [rbp]
  3972                                   ; restore the old rbp
  3973 00001BAE BB01000000              	mov rbx, 1
  3974 00001BB3 4883C303                	add rbx, 3
  3975 00001BB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3976 00001BBB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3977 00001BC0 4C8D4DF8                	lea r9, [rbp - 8]
  3978 00001BC4 B905000000              	mov rcx, 5
  3979                                  .L_tc_recycle_frame_loop_0013:
  3980 00001BC9 4883F900                	cmp rcx, 0
  3981 00001BCD 7413                    	je .L_tc_recycle_frame_done_0013
  3982 00001BCF 4D8B11                  	mov r10, qword [r9]
  3983 00001BD2 4D8910                  	mov qword [r8], r10
  3984 00001BD5 4983E808                	sub r8, 8
  3985 00001BD9 4983E908                	sub r9, 8
  3986 00001BDD 48FFC9                  	dec rcx
  3987 00001BE0 EBE7                    	jmp .L_tc_recycle_frame_loop_0013
  3988                                  .L_tc_recycle_frame_done_0013:
  3989 00001BE2 498D6008                	lea rsp, [r8 + 8]
  3990 00001BE6 5D                      	pop rbp ; restore the old rbp
  3991 00001BE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3992 00001BEA C9                      	leave
  3993 00001BEB C21800                  	ret AND_KILL_FRAME(1)
  3994                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3995 00001BEE 48890425[C2100000]      	mov qword [free_var_45], rax
  3996 00001BF6 48B8-                   	mov rax, sob_void
  3996 00001BF8 [0000000000000000] 
  3997                                  
  3998 00001C00 4889C7                  	mov rdi, rax
  3999 00001C03 E8425C0100              	call print_sexpr_if_not_void
  4000 00001C08 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4001 00001C0D E8E3590100              	call malloc
  4002 00001C12 50                      	push rax
  4003 00001C13 BF00000000              	mov rdi, 8 * 0	; new rib
  4004 00001C18 E8D8590100              	call malloc
  4005 00001C1D 50                      	push rax
  4006 00001C1E BF08000000              	mov rdi, 8 * 1	; extended env
  4007 00001C23 E8CD590100              	call malloc
  4008 00001C28 488B7D10                	mov rdi, ENV
  4009 00001C2C BE00000000              	mov rsi, 0
  4010 00001C31 BA01000000              	mov rdx, 1
  4011                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  4012 00001C36 4883FE00                	cmp rsi, 0
  4013 00001C3A 7410                    	je .L_lambda_simple_env_end_0014
  4014 00001C3C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4015 00001C40 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4016 00001C44 48FFC6                  	inc rsi
  4017 00001C47 48FFC2                  	inc rdx
  4018 00001C4A EBEA                    	jmp .L_lambda_simple_env_loop_0014
  4019                                  .L_lambda_simple_env_end_0014:
  4020 00001C4C 5B                      	pop rbx
  4021 00001C4D BE00000000              	mov rsi, 0
  4022                                  .L_lambda_simple_params_loop_0014:	; copy params
  4023 00001C52 4883FE00                	cmp rsi, 0
  4024 00001C56 740E                    	je .L_lambda_simple_params_end_0014
  4025 00001C58 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4026 00001C5D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4027 00001C61 48FFC6                  	inc rsi
  4028 00001C64 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  4029                                  .L_lambda_simple_params_end_0014:
  4030 00001C66 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4031 00001C69 4889C3                  	mov rbx, rax
  4032 00001C6C 58                      	pop rax
  4033 00001C6D C60004                  	mov byte [rax], T_closure
  4034 00001C70 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4035 00001C74 48C74009[811C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  4036 00001C7C E9A4000000              	jmp .L_lambda_simple_end_0014
  4037                                  .L_lambda_simple_code_0014:	; lambda-simple body
  4038 00001C81 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4039 00001C87 740B                    	je .L_lambda_simple_arity_check_ok_0014
  4040 00001C89 FF742410                	push qword [rsp + 8 * 2]
  4041 00001C8D 6A01                    	push 1
  4042 00001C8F E91A590100              	jmp L_error_incorrect_arity_simple
  4043                                  .L_lambda_simple_arity_check_ok_0014:
  4044 00001C94 C8000000                	enter 0, 0
  4045                                  	; preparing a tail-call
  4046                                  	; preparing a non-tail-call
  4047 00001C98 488B4520                	mov rax, PARAM(0)	; param x
  4048 00001C9C 50                      	push rax
  4049 00001C9D 6A01                    	push 1	; arg count
  4050 00001C9F 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4051 00001CA7 803805                  	cmp byte [rax], T_undefined
  4052 00001CAA 0F8418580100            	je L_error_fvar_undefined
  4053 00001CB0 803804                  	cmp byte [rax], T_closure
  4054 00001CB3 0F8593580100            	jne L_error_non_closure
  4055 00001CB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4056 00001CBC FF5009                  	call SOB_CLOSURE_CODE(rax)
  4057 00001CBF 50                      	push rax
  4058 00001CC0 6A01                    	push 1	; arg count
  4059 00001CC2 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4060 00001CCA 803805                  	cmp byte [rax], T_undefined
  4061 00001CCD 0F84F5570100            	je L_error_fvar_undefined
  4062 00001CD3 803804                  	cmp byte [rax], T_closure
  4063 00001CD6 0F8570580100            	jne L_error_non_closure
  4064 00001CDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4065 00001CDF FF7508                  	push qword [rbp + 8 * 1]
  4066                                   ; old ret addr
  4067 00001CE2 FF7500                  	push qword [rbp]
  4068                                   ; restore the old rbp
  4069 00001CE5 BB01000000              	mov rbx, 1
  4070 00001CEA 4883C303                	add rbx, 3
  4071 00001CEE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4072 00001CF2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4073 00001CF7 4C8D4DF8                	lea r9, [rbp - 8]
  4074 00001CFB B905000000              	mov rcx, 5
  4075                                  .L_tc_recycle_frame_loop_0014:
  4076 00001D00 4883F900                	cmp rcx, 0
  4077 00001D04 7413                    	je .L_tc_recycle_frame_done_0014
  4078 00001D06 4D8B11                  	mov r10, qword [r9]
  4079 00001D09 4D8910                  	mov qword [r8], r10
  4080 00001D0C 4983E808                	sub r8, 8
  4081 00001D10 4983E908                	sub r9, 8
  4082 00001D14 48FFC9                  	dec rcx
  4083 00001D17 EBE7                    	jmp .L_tc_recycle_frame_loop_0014
  4084                                  .L_tc_recycle_frame_done_0014:
  4085 00001D19 498D6008                	lea rsp, [r8 + 8]
  4086 00001D1D 5D                      	pop rbp ; restore the old rbp
  4087 00001D1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4088 00001D21 C9                      	leave
  4089 00001D22 C21800                  	ret AND_KILL_FRAME(1)
  4090                                  .L_lambda_simple_end_0014:	; new closure is in rax
  4091 00001D25 48890425[D3100000]      	mov qword [free_var_46], rax
  4092 00001D2D 48B8-                   	mov rax, sob_void
  4092 00001D2F [0000000000000000] 
  4093                                  
  4094 00001D37 4889C7                  	mov rdi, rax
  4095 00001D3A E80B5B0100              	call print_sexpr_if_not_void
  4096 00001D3F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4097 00001D44 E8AC580100              	call malloc
  4098 00001D49 50                      	push rax
  4099 00001D4A BF00000000              	mov rdi, 8 * 0	; new rib
  4100 00001D4F E8A1580100              	call malloc
  4101 00001D54 50                      	push rax
  4102 00001D55 BF08000000              	mov rdi, 8 * 1	; extended env
  4103 00001D5A E896580100              	call malloc
  4104 00001D5F 488B7D10                	mov rdi, ENV
  4105 00001D63 BE00000000              	mov rsi, 0
  4106 00001D68 BA01000000              	mov rdx, 1
  4107                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  4108 00001D6D 4883FE00                	cmp rsi, 0
  4109 00001D71 7410                    	je .L_lambda_simple_env_end_0015
  4110 00001D73 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4111 00001D77 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4112 00001D7B 48FFC6                  	inc rsi
  4113 00001D7E 48FFC2                  	inc rdx
  4114 00001D81 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  4115                                  .L_lambda_simple_env_end_0015:
  4116 00001D83 5B                      	pop rbx
  4117 00001D84 BE00000000              	mov rsi, 0
  4118                                  .L_lambda_simple_params_loop_0015:	; copy params
  4119 00001D89 4883FE00                	cmp rsi, 0
  4120 00001D8D 740E                    	je .L_lambda_simple_params_end_0015
  4121 00001D8F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4122 00001D94 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4123 00001D98 48FFC6                  	inc rsi
  4124 00001D9B EBEC                    	jmp .L_lambda_simple_params_loop_0015
  4125                                  .L_lambda_simple_params_end_0015:
  4126 00001D9D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4127 00001DA0 4889C3                  	mov rbx, rax
  4128 00001DA3 58                      	pop rax
  4129 00001DA4 C60004                  	mov byte [rax], T_closure
  4130 00001DA7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4131 00001DAB 48C74009[B81D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  4132 00001DB3 E9A4000000              	jmp .L_lambda_simple_end_0015
  4133                                  .L_lambda_simple_code_0015:	; lambda-simple body
  4134 00001DB8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4135 00001DBE 740B                    	je .L_lambda_simple_arity_check_ok_0015
  4136 00001DC0 FF742410                	push qword [rsp + 8 * 2]
  4137 00001DC4 6A01                    	push 1
  4138 00001DC6 E9E3570100              	jmp L_error_incorrect_arity_simple
  4139                                  .L_lambda_simple_arity_check_ok_0015:
  4140 00001DCB C8000000                	enter 0, 0
  4141                                  	; preparing a tail-call
  4142                                  	; preparing a non-tail-call
  4143 00001DCF 488B4520                	mov rax, PARAM(0)	; param x
  4144 00001DD3 50                      	push rax
  4145 00001DD4 6A01                    	push 1	; arg count
  4146 00001DD6 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4147 00001DDE 803805                  	cmp byte [rax], T_undefined
  4148 00001DE1 0F84E1560100            	je L_error_fvar_undefined
  4149 00001DE7 803804                  	cmp byte [rax], T_closure
  4150 00001DEA 0F855C570100            	jne L_error_non_closure
  4151 00001DF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4152 00001DF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4153 00001DF6 50                      	push rax
  4154 00001DF7 6A01                    	push 1	; arg count
  4155 00001DF9 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4156 00001E01 803805                  	cmp byte [rax], T_undefined
  4157 00001E04 0F84BE560100            	je L_error_fvar_undefined
  4158 00001E0A 803804                  	cmp byte [rax], T_closure
  4159 00001E0D 0F8539570100            	jne L_error_non_closure
  4160 00001E13 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4161 00001E16 FF7508                  	push qword [rbp + 8 * 1]
  4162                                   ; old ret addr
  4163 00001E19 FF7500                  	push qword [rbp]
  4164                                   ; restore the old rbp
  4165 00001E1C BB01000000              	mov rbx, 1
  4166 00001E21 4883C303                	add rbx, 3
  4167 00001E25 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4168 00001E29 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4169 00001E2E 4C8D4DF8                	lea r9, [rbp - 8]
  4170 00001E32 B905000000              	mov rcx, 5
  4171                                  .L_tc_recycle_frame_loop_0015:
  4172 00001E37 4883F900                	cmp rcx, 0
  4173 00001E3B 7413                    	je .L_tc_recycle_frame_done_0015
  4174 00001E3D 4D8B11                  	mov r10, qword [r9]
  4175 00001E40 4D8910                  	mov qword [r8], r10
  4176 00001E43 4983E808                	sub r8, 8
  4177 00001E47 4983E908                	sub r9, 8
  4178 00001E4B 48FFC9                  	dec rcx
  4179 00001E4E EBE7                    	jmp .L_tc_recycle_frame_loop_0015
  4180                                  .L_tc_recycle_frame_done_0015:
  4181 00001E50 498D6008                	lea rsp, [r8 + 8]
  4182 00001E54 5D                      	pop rbp ; restore the old rbp
  4183 00001E55 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4184 00001E58 C9                      	leave
  4185 00001E59 C21800                  	ret AND_KILL_FRAME(1)
  4186                                  .L_lambda_simple_end_0015:	; new closure is in rax
  4187 00001E5C 48890425[17110000]      	mov qword [free_var_50], rax
  4188 00001E64 48B8-                   	mov rax, sob_void
  4188 00001E66 [0000000000000000] 
  4189                                  
  4190 00001E6E 4889C7                  	mov rdi, rax
  4191 00001E71 E8D4590100              	call print_sexpr_if_not_void
  4192 00001E76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4193 00001E7B E875570100              	call malloc
  4194 00001E80 50                      	push rax
  4195 00001E81 BF00000000              	mov rdi, 8 * 0	; new rib
  4196 00001E86 E86A570100              	call malloc
  4197 00001E8B 50                      	push rax
  4198 00001E8C BF08000000              	mov rdi, 8 * 1	; extended env
  4199 00001E91 E85F570100              	call malloc
  4200 00001E96 488B7D10                	mov rdi, ENV
  4201 00001E9A BE00000000              	mov rsi, 0
  4202 00001E9F BA01000000              	mov rdx, 1
  4203                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  4204 00001EA4 4883FE00                	cmp rsi, 0
  4205 00001EA8 7410                    	je .L_lambda_simple_env_end_0016
  4206 00001EAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4207 00001EAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4208 00001EB2 48FFC6                  	inc rsi
  4209 00001EB5 48FFC2                  	inc rdx
  4210 00001EB8 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  4211                                  .L_lambda_simple_env_end_0016:
  4212 00001EBA 5B                      	pop rbx
  4213 00001EBB BE00000000              	mov rsi, 0
  4214                                  .L_lambda_simple_params_loop_0016:	; copy params
  4215 00001EC0 4883FE00                	cmp rsi, 0
  4216 00001EC4 740E                    	je .L_lambda_simple_params_end_0016
  4217 00001EC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4218 00001ECB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4219 00001ECF 48FFC6                  	inc rsi
  4220 00001ED2 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  4221                                  .L_lambda_simple_params_end_0016:
  4222 00001ED4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4223 00001ED7 4889C3                  	mov rbx, rax
  4224 00001EDA 58                      	pop rax
  4225 00001EDB C60004                  	mov byte [rax], T_closure
  4226 00001EDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4227 00001EE2 48C74009[EF1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  4228 00001EEA E9A4000000              	jmp .L_lambda_simple_end_0016
  4229                                  .L_lambda_simple_code_0016:	; lambda-simple body
  4230 00001EEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4231 00001EF5 740B                    	je .L_lambda_simple_arity_check_ok_0016
  4232 00001EF7 FF742410                	push qword [rsp + 8 * 2]
  4233 00001EFB 6A01                    	push 1
  4234 00001EFD E9AC560100              	jmp L_error_incorrect_arity_simple
  4235                                  .L_lambda_simple_arity_check_ok_0016:
  4236 00001F02 C8000000                	enter 0, 0
  4237                                  	; preparing a tail-call
  4238                                  	; preparing a non-tail-call
  4239 00001F06 488B4520                	mov rax, PARAM(0)	; param x
  4240 00001F0A 50                      	push rax
  4241 00001F0B 6A01                    	push 1	; arg count
  4242 00001F0D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4243 00001F15 803805                  	cmp byte [rax], T_undefined
  4244 00001F18 0F84AA550100            	je L_error_fvar_undefined
  4245 00001F1E 803804                  	cmp byte [rax], T_closure
  4246 00001F21 0F8525560100            	jne L_error_non_closure
  4247 00001F27 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4248 00001F2A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4249 00001F2D 50                      	push rax
  4250 00001F2E 6A01                    	push 1	; arg count
  4251 00001F30 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4252 00001F38 803805                  	cmp byte [rax], T_undefined
  4253 00001F3B 0F8487550100            	je L_error_fvar_undefined
  4254 00001F41 803804                  	cmp byte [rax], T_closure
  4255 00001F44 0F8502560100            	jne L_error_non_closure
  4256 00001F4A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4257 00001F4D FF7508                  	push qword [rbp + 8 * 1]
  4258                                   ; old ret addr
  4259 00001F50 FF7500                  	push qword [rbp]
  4260                                   ; restore the old rbp
  4261 00001F53 BB01000000              	mov rbx, 1
  4262 00001F58 4883C303                	add rbx, 3
  4263 00001F5C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4264 00001F60 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4265 00001F65 4C8D4DF8                	lea r9, [rbp - 8]
  4266 00001F69 B905000000              	mov rcx, 5
  4267                                  .L_tc_recycle_frame_loop_0016:
  4268 00001F6E 4883F900                	cmp rcx, 0
  4269 00001F72 7413                    	je .L_tc_recycle_frame_done_0016
  4270 00001F74 4D8B11                  	mov r10, qword [r9]
  4271 00001F77 4D8910                  	mov qword [r8], r10
  4272 00001F7A 4983E808                	sub r8, 8
  4273 00001F7E 4983E908                	sub r9, 8
  4274 00001F82 48FFC9                  	dec rcx
  4275 00001F85 EBE7                    	jmp .L_tc_recycle_frame_loop_0016
  4276                                  .L_tc_recycle_frame_done_0016:
  4277 00001F87 498D6008                	lea rsp, [r8 + 8]
  4278 00001F8B 5D                      	pop rbp ; restore the old rbp
  4279 00001F8C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4280 00001F8F C9                      	leave
  4281 00001F90 C21800                  	ret AND_KILL_FRAME(1)
  4282                                  .L_lambda_simple_end_0016:	; new closure is in rax
  4283 00001F93 48890425[28110000]      	mov qword [free_var_51], rax
  4284 00001F9B 48B8-                   	mov rax, sob_void
  4284 00001F9D [0000000000000000] 
  4285                                  
  4286 00001FA5 4889C7                  	mov rdi, rax
  4287 00001FA8 E89D580100              	call print_sexpr_if_not_void
  4288 00001FAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4289 00001FB2 E83E560100              	call malloc
  4290 00001FB7 50                      	push rax
  4291 00001FB8 BF00000000              	mov rdi, 8 * 0	; new rib
  4292 00001FBD E833560100              	call malloc
  4293 00001FC2 50                      	push rax
  4294 00001FC3 BF08000000              	mov rdi, 8 * 1	; extended env
  4295 00001FC8 E828560100              	call malloc
  4296 00001FCD 488B7D10                	mov rdi, ENV
  4297 00001FD1 BE00000000              	mov rsi, 0
  4298 00001FD6 BA01000000              	mov rdx, 1
  4299                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  4300 00001FDB 4883FE00                	cmp rsi, 0
  4301 00001FDF 7410                    	je .L_lambda_simple_env_end_0017
  4302 00001FE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4303 00001FE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4304 00001FE9 48FFC6                  	inc rsi
  4305 00001FEC 48FFC2                  	inc rdx
  4306 00001FEF EBEA                    	jmp .L_lambda_simple_env_loop_0017
  4307                                  .L_lambda_simple_env_end_0017:
  4308 00001FF1 5B                      	pop rbx
  4309 00001FF2 BE00000000              	mov rsi, 0
  4310                                  .L_lambda_simple_params_loop_0017:	; copy params
  4311 00001FF7 4883FE00                	cmp rsi, 0
  4312 00001FFB 740E                    	je .L_lambda_simple_params_end_0017
  4313 00001FFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4314 00002002 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4315 00002006 48FFC6                  	inc rsi
  4316 00002009 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  4317                                  .L_lambda_simple_params_end_0017:
  4318 0000200B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4319 0000200E 4889C3                  	mov rbx, rax
  4320 00002011 58                      	pop rax
  4321 00002012 C60004                  	mov byte [rax], T_closure
  4322 00002015 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4323 00002019 48C74009[26200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  4324 00002021 E9A4000000              	jmp .L_lambda_simple_end_0017
  4325                                  .L_lambda_simple_code_0017:	; lambda-simple body
  4326 00002026 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4327 0000202C 740B                    	je .L_lambda_simple_arity_check_ok_0017
  4328 0000202E FF742410                	push qword [rsp + 8 * 2]
  4329 00002032 6A01                    	push 1
  4330 00002034 E975550100              	jmp L_error_incorrect_arity_simple
  4331                                  .L_lambda_simple_arity_check_ok_0017:
  4332 00002039 C8000000                	enter 0, 0
  4333                                  	; preparing a tail-call
  4334                                  	; preparing a non-tail-call
  4335 0000203D 488B4520                	mov rax, PARAM(0)	; param x
  4336 00002041 50                      	push rax
  4337 00002042 6A01                    	push 1	; arg count
  4338 00002044 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4339 0000204C 803805                  	cmp byte [rax], T_undefined
  4340 0000204F 0F8473540100            	je L_error_fvar_undefined
  4341 00002055 803804                  	cmp byte [rax], T_closure
  4342 00002058 0F85EE540100            	jne L_error_non_closure
  4343 0000205E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4344 00002061 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4345 00002064 50                      	push rax
  4346 00002065 6A01                    	push 1	; arg count
  4347 00002067 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4348 0000206F 803805                  	cmp byte [rax], T_undefined
  4349 00002072 0F8450540100            	je L_error_fvar_undefined
  4350 00002078 803804                  	cmp byte [rax], T_closure
  4351 0000207B 0F85CB540100            	jne L_error_non_closure
  4352 00002081 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4353 00002084 FF7508                  	push qword [rbp + 8 * 1]
  4354                                   ; old ret addr
  4355 00002087 FF7500                  	push qword [rbp]
  4356                                   ; restore the old rbp
  4357 0000208A BB01000000              	mov rbx, 1
  4358 0000208F 4883C303                	add rbx, 3
  4359 00002093 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4360 00002097 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4361 0000209C 4C8D4DF8                	lea r9, [rbp - 8]
  4362 000020A0 B905000000              	mov rcx, 5
  4363                                  .L_tc_recycle_frame_loop_0017:
  4364 000020A5 4883F900                	cmp rcx, 0
  4365 000020A9 7413                    	je .L_tc_recycle_frame_done_0017
  4366 000020AB 4D8B11                  	mov r10, qword [r9]
  4367 000020AE 4D8910                  	mov qword [r8], r10
  4368 000020B1 4983E808                	sub r8, 8
  4369 000020B5 4983E908                	sub r9, 8
  4370 000020B9 48FFC9                  	dec rcx
  4371 000020BC EBE7                    	jmp .L_tc_recycle_frame_loop_0017
  4372                                  .L_tc_recycle_frame_done_0017:
  4373 000020BE 498D6008                	lea rsp, [r8 + 8]
  4374 000020C2 5D                      	pop rbp ; restore the old rbp
  4375 000020C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4376 000020C6 C9                      	leave
  4377 000020C7 C21800                  	ret AND_KILL_FRAME(1)
  4378                                  .L_lambda_simple_end_0017:	; new closure is in rax
  4379 000020CA 48890425[4A110000]      	mov qword [free_var_53], rax
  4380 000020D2 48B8-                   	mov rax, sob_void
  4380 000020D4 [0000000000000000] 
  4381                                  
  4382 000020DC 4889C7                  	mov rdi, rax
  4383 000020DF E866570100              	call print_sexpr_if_not_void
  4384 000020E4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4385 000020E9 E807550100              	call malloc
  4386 000020EE 50                      	push rax
  4387 000020EF BF00000000              	mov rdi, 8 * 0	; new rib
  4388 000020F4 E8FC540100              	call malloc
  4389 000020F9 50                      	push rax
  4390 000020FA BF08000000              	mov rdi, 8 * 1	; extended env
  4391 000020FF E8F1540100              	call malloc
  4392 00002104 488B7D10                	mov rdi, ENV
  4393 00002108 BE00000000              	mov rsi, 0
  4394 0000210D BA01000000              	mov rdx, 1
  4395                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  4396 00002112 4883FE00                	cmp rsi, 0
  4397 00002116 7410                    	je .L_lambda_simple_env_end_0018
  4398 00002118 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4399 0000211C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4400 00002120 48FFC6                  	inc rsi
  4401 00002123 48FFC2                  	inc rdx
  4402 00002126 EBEA                    	jmp .L_lambda_simple_env_loop_0018
  4403                                  .L_lambda_simple_env_end_0018:
  4404 00002128 5B                      	pop rbx
  4405 00002129 BE00000000              	mov rsi, 0
  4406                                  .L_lambda_simple_params_loop_0018:	; copy params
  4407 0000212E 4883FE00                	cmp rsi, 0
  4408 00002132 740E                    	je .L_lambda_simple_params_end_0018
  4409 00002134 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4410 00002139 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4411 0000213D 48FFC6                  	inc rsi
  4412 00002140 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  4413                                  .L_lambda_simple_params_end_0018:
  4414 00002142 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4415 00002145 4889C3                  	mov rbx, rax
  4416 00002148 58                      	pop rax
  4417 00002149 C60004                  	mov byte [rax], T_closure
  4418 0000214C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4419 00002150 48C74009[5D210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  4420 00002158 E9A4000000              	jmp .L_lambda_simple_end_0018
  4421                                  .L_lambda_simple_code_0018:	; lambda-simple body
  4422 0000215D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4423 00002163 740B                    	je .L_lambda_simple_arity_check_ok_0018
  4424 00002165 FF742410                	push qword [rsp + 8 * 2]
  4425 00002169 6A01                    	push 1
  4426 0000216B E93E540100              	jmp L_error_incorrect_arity_simple
  4427                                  .L_lambda_simple_arity_check_ok_0018:
  4428 00002170 C8000000                	enter 0, 0
  4429                                  	; preparing a tail-call
  4430                                  	; preparing a non-tail-call
  4431 00002174 488B4520                	mov rax, PARAM(0)	; param x
  4432 00002178 50                      	push rax
  4433 00002179 6A01                    	push 1	; arg count
  4434 0000217B 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4435 00002183 803805                  	cmp byte [rax], T_undefined
  4436 00002186 0F843C530100            	je L_error_fvar_undefined
  4437 0000218C 803804                  	cmp byte [rax], T_closure
  4438 0000218F 0F85B7530100            	jne L_error_non_closure
  4439 00002195 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4440 00002198 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4441 0000219B 50                      	push rax
  4442 0000219C 6A01                    	push 1	; arg count
  4443 0000219E 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4444 000021A6 803805                  	cmp byte [rax], T_undefined
  4445 000021A9 0F8419530100            	je L_error_fvar_undefined
  4446 000021AF 803804                  	cmp byte [rax], T_closure
  4447 000021B2 0F8594530100            	jne L_error_non_closure
  4448 000021B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4449 000021BB FF7508                  	push qword [rbp + 8 * 1]
  4450                                   ; old ret addr
  4451 000021BE FF7500                  	push qword [rbp]
  4452                                   ; restore the old rbp
  4453 000021C1 BB01000000              	mov rbx, 1
  4454 000021C6 4883C303                	add rbx, 3
  4455 000021CA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4456 000021CE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4457 000021D3 4C8D4DF8                	lea r9, [rbp - 8]
  4458 000021D7 B905000000              	mov rcx, 5
  4459                                  .L_tc_recycle_frame_loop_0018:
  4460 000021DC 4883F900                	cmp rcx, 0
  4461 000021E0 7413                    	je .L_tc_recycle_frame_done_0018
  4462 000021E2 4D8B11                  	mov r10, qword [r9]
  4463 000021E5 4D8910                  	mov qword [r8], r10
  4464 000021E8 4983E808                	sub r8, 8
  4465 000021EC 4983E908                	sub r9, 8
  4466 000021F0 48FFC9                  	dec rcx
  4467 000021F3 EBE7                    	jmp .L_tc_recycle_frame_loop_0018
  4468                                  .L_tc_recycle_frame_done_0018:
  4469 000021F5 498D6008                	lea rsp, [r8 + 8]
  4470 000021F9 5D                      	pop rbp ; restore the old rbp
  4471 000021FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4472 000021FD C9                      	leave
  4473 000021FE C21800                  	ret AND_KILL_FRAME(1)
  4474                                  .L_lambda_simple_end_0018:	; new closure is in rax
  4475 00002201 48890425[5B110000]      	mov qword [free_var_54], rax
  4476 00002209 48B8-                   	mov rax, sob_void
  4476 0000220B [0000000000000000] 
  4477                                  
  4478 00002213 4889C7                  	mov rdi, rax
  4479 00002216 E82F560100              	call print_sexpr_if_not_void
  4480 0000221B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4481 00002220 E8D0530100              	call malloc
  4482 00002225 50                      	push rax
  4483 00002226 BF00000000              	mov rdi, 8 * 0	; new rib
  4484 0000222B E8C5530100              	call malloc
  4485 00002230 50                      	push rax
  4486 00002231 BF08000000              	mov rdi, 8 * 1	; extended env
  4487 00002236 E8BA530100              	call malloc
  4488 0000223B 488B7D10                	mov rdi, ENV
  4489 0000223F BE00000000              	mov rsi, 0
  4490 00002244 BA01000000              	mov rdx, 1
  4491                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4492 00002249 4883FE00                	cmp rsi, 0
  4493 0000224D 7410                    	je .L_lambda_simple_env_end_0019
  4494 0000224F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4495 00002253 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4496 00002257 48FFC6                  	inc rsi
  4497 0000225A 48FFC2                  	inc rdx
  4498 0000225D EBEA                    	jmp .L_lambda_simple_env_loop_0019
  4499                                  .L_lambda_simple_env_end_0019:
  4500 0000225F 5B                      	pop rbx
  4501 00002260 BE00000000              	mov rsi, 0
  4502                                  .L_lambda_simple_params_loop_0019:	; copy params
  4503 00002265 4883FE00                	cmp rsi, 0
  4504 00002269 740E                    	je .L_lambda_simple_params_end_0019
  4505 0000226B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4506 00002270 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4507 00002274 48FFC6                  	inc rsi
  4508 00002277 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  4509                                  .L_lambda_simple_params_end_0019:
  4510 00002279 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4511 0000227C 4889C3                  	mov rbx, rax
  4512 0000227F 58                      	pop rax
  4513 00002280 C60004                  	mov byte [rax], T_closure
  4514 00002283 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4515 00002287 48C74009[94220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  4516 0000228F E9A4000000              	jmp .L_lambda_simple_end_0019
  4517                                  .L_lambda_simple_code_0019:	; lambda-simple body
  4518 00002294 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4519 0000229A 740B                    	je .L_lambda_simple_arity_check_ok_0019
  4520 0000229C FF742410                	push qword [rsp + 8 * 2]
  4521 000022A0 6A01                    	push 1
  4522 000022A2 E907530100              	jmp L_error_incorrect_arity_simple
  4523                                  .L_lambda_simple_arity_check_ok_0019:
  4524 000022A7 C8000000                	enter 0, 0
  4525                                  	; preparing a tail-call
  4526                                  	; preparing a non-tail-call
  4527 000022AB 488B4520                	mov rax, PARAM(0)	; param x
  4528 000022AF 50                      	push rax
  4529 000022B0 6A01                    	push 1	; arg count
  4530 000022B2 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4531 000022BA 803805                  	cmp byte [rax], T_undefined
  4532 000022BD 0F8405520100            	je L_error_fvar_undefined
  4533 000022C3 803804                  	cmp byte [rax], T_closure
  4534 000022C6 0F8580520100            	jne L_error_non_closure
  4535 000022CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4536 000022CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4537 000022D2 50                      	push rax
  4538 000022D3 6A01                    	push 1	; arg count
  4539 000022D5 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4540 000022DD 803805                  	cmp byte [rax], T_undefined
  4541 000022E0 0F84E2510100            	je L_error_fvar_undefined
  4542 000022E6 803804                  	cmp byte [rax], T_closure
  4543 000022E9 0F855D520100            	jne L_error_non_closure
  4544 000022EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4545 000022F2 FF7508                  	push qword [rbp + 8 * 1]
  4546                                   ; old ret addr
  4547 000022F5 FF7500                  	push qword [rbp]
  4548                                   ; restore the old rbp
  4549 000022F8 BB01000000              	mov rbx, 1
  4550 000022FD 4883C303                	add rbx, 3
  4551 00002301 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4552 00002305 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4553 0000230A 4C8D4DF8                	lea r9, [rbp - 8]
  4554 0000230E B905000000              	mov rcx, 5
  4555                                  .L_tc_recycle_frame_loop_0019:
  4556 00002313 4883F900                	cmp rcx, 0
  4557 00002317 7413                    	je .L_tc_recycle_frame_done_0019
  4558 00002319 4D8B11                  	mov r10, qword [r9]
  4559 0000231C 4D8910                  	mov qword [r8], r10
  4560 0000231F 4983E808                	sub r8, 8
  4561 00002323 4983E908                	sub r9, 8
  4562 00002327 48FFC9                  	dec rcx
  4563 0000232A EBE7                    	jmp .L_tc_recycle_frame_loop_0019
  4564                                  .L_tc_recycle_frame_done_0019:
  4565 0000232C 498D6008                	lea rsp, [r8 + 8]
  4566 00002330 5D                      	pop rbp ; restore the old rbp
  4567 00002331 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4568 00002334 C9                      	leave
  4569 00002335 C21800                  	ret AND_KILL_FRAME(1)
  4570                                  .L_lambda_simple_end_0019:	; new closure is in rax
  4571 00002338 48890425[8E110000]      	mov qword [free_var_57], rax
  4572 00002340 48B8-                   	mov rax, sob_void
  4572 00002342 [0000000000000000] 
  4573                                  
  4574 0000234A 4889C7                  	mov rdi, rax
  4575 0000234D E8F8540100              	call print_sexpr_if_not_void
  4576 00002352 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4577 00002357 E899520100              	call malloc
  4578 0000235C 50                      	push rax
  4579 0000235D BF00000000              	mov rdi, 8 * 0	; new rib
  4580 00002362 E88E520100              	call malloc
  4581 00002367 50                      	push rax
  4582 00002368 BF08000000              	mov rdi, 8 * 1	; extended env
  4583 0000236D E883520100              	call malloc
  4584 00002372 488B7D10                	mov rdi, ENV
  4585 00002376 BE00000000              	mov rsi, 0
  4586 0000237B BA01000000              	mov rdx, 1
  4587                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4588 00002380 4883FE00                	cmp rsi, 0
  4589 00002384 7410                    	je .L_lambda_simple_env_end_001a
  4590 00002386 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4591 0000238A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4592 0000238E 48FFC6                  	inc rsi
  4593 00002391 48FFC2                  	inc rdx
  4594 00002394 EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4595                                  .L_lambda_simple_env_end_001a:
  4596 00002396 5B                      	pop rbx
  4597 00002397 BE00000000              	mov rsi, 0
  4598                                  .L_lambda_simple_params_loop_001a:	; copy params
  4599 0000239C 4883FE00                	cmp rsi, 0
  4600 000023A0 740E                    	je .L_lambda_simple_params_end_001a
  4601 000023A2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4602 000023A7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4603 000023AB 48FFC6                  	inc rsi
  4604 000023AE EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4605                                  .L_lambda_simple_params_end_001a:
  4606 000023B0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4607 000023B3 4889C3                  	mov rbx, rax
  4608 000023B6 58                      	pop rax
  4609 000023B7 C60004                  	mov byte [rax], T_closure
  4610 000023BA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4611 000023BE 48C74009[CB230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4612 000023C6 E9A4000000              	jmp .L_lambda_simple_end_001a
  4613                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4614 000023CB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4615 000023D1 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4616 000023D3 FF742410                	push qword [rsp + 8 * 2]
  4617 000023D7 6A01                    	push 1
  4618 000023D9 E9D0510100              	jmp L_error_incorrect_arity_simple
  4619                                  .L_lambda_simple_arity_check_ok_001a:
  4620 000023DE C8000000                	enter 0, 0
  4621                                  	; preparing a tail-call
  4622                                  	; preparing a non-tail-call
  4623 000023E2 488B4520                	mov rax, PARAM(0)	; param x
  4624 000023E6 50                      	push rax
  4625 000023E7 6A01                    	push 1	; arg count
  4626 000023E9 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4627 000023F1 803805                  	cmp byte [rax], T_undefined
  4628 000023F4 0F84CE500100            	je L_error_fvar_undefined
  4629 000023FA 803804                  	cmp byte [rax], T_closure
  4630 000023FD 0F8549510100            	jne L_error_non_closure
  4631 00002403 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4632 00002406 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4633 00002409 50                      	push rax
  4634 0000240A 6A01                    	push 1	; arg count
  4635 0000240C 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4636 00002414 803805                  	cmp byte [rax], T_undefined
  4637 00002417 0F84AB500100            	je L_error_fvar_undefined
  4638 0000241D 803804                  	cmp byte [rax], T_closure
  4639 00002420 0F8526510100            	jne L_error_non_closure
  4640 00002426 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4641 00002429 FF7508                  	push qword [rbp + 8 * 1]
  4642                                   ; old ret addr
  4643 0000242C FF7500                  	push qword [rbp]
  4644                                   ; restore the old rbp
  4645 0000242F BB01000000              	mov rbx, 1
  4646 00002434 4883C303                	add rbx, 3
  4647 00002438 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4648 0000243C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4649 00002441 4C8D4DF8                	lea r9, [rbp - 8]
  4650 00002445 B905000000              	mov rcx, 5
  4651                                  .L_tc_recycle_frame_loop_001a:
  4652 0000244A 4883F900                	cmp rcx, 0
  4653 0000244E 7413                    	je .L_tc_recycle_frame_done_001a
  4654 00002450 4D8B11                  	mov r10, qword [r9]
  4655 00002453 4D8910                  	mov qword [r8], r10
  4656 00002456 4983E808                	sub r8, 8
  4657 0000245A 4983E908                	sub r9, 8
  4658 0000245E 48FFC9                  	dec rcx
  4659 00002461 EBE7                    	jmp .L_tc_recycle_frame_loop_001a
  4660                                  .L_tc_recycle_frame_done_001a:
  4661 00002463 498D6008                	lea rsp, [r8 + 8]
  4662 00002467 5D                      	pop rbp ; restore the old rbp
  4663 00002468 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4664 0000246B C9                      	leave
  4665 0000246C C21800                  	ret AND_KILL_FRAME(1)
  4666                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4667 0000246F 48890425[9F110000]      	mov qword [free_var_58], rax
  4668 00002477 48B8-                   	mov rax, sob_void
  4668 00002479 [0000000000000000] 
  4669                                  
  4670 00002481 4889C7                  	mov rdi, rax
  4671 00002484 E8C1530100              	call print_sexpr_if_not_void
  4672 00002489 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4673 0000248E E862510100              	call malloc
  4674 00002493 50                      	push rax
  4675 00002494 BF00000000              	mov rdi, 8 * 0	; new rib
  4676 00002499 E857510100              	call malloc
  4677 0000249E 50                      	push rax
  4678 0000249F BF08000000              	mov rdi, 8 * 1	; extended env
  4679 000024A4 E84C510100              	call malloc
  4680 000024A9 488B7D10                	mov rdi, ENV
  4681 000024AD BE00000000              	mov rsi, 0
  4682 000024B2 BA01000000              	mov rdx, 1
  4683                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4684 000024B7 4883FE00                	cmp rsi, 0
  4685 000024BB 7410                    	je .L_lambda_simple_env_end_001b
  4686 000024BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4687 000024C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4688 000024C5 48FFC6                  	inc rsi
  4689 000024C8 48FFC2                  	inc rdx
  4690 000024CB EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4691                                  .L_lambda_simple_env_end_001b:
  4692 000024CD 5B                      	pop rbx
  4693 000024CE BE00000000              	mov rsi, 0
  4694                                  .L_lambda_simple_params_loop_001b:	; copy params
  4695 000024D3 4883FE00                	cmp rsi, 0
  4696 000024D7 740E                    	je .L_lambda_simple_params_end_001b
  4697 000024D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4698 000024DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4699 000024E2 48FFC6                  	inc rsi
  4700 000024E5 EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4701                                  .L_lambda_simple_params_end_001b:
  4702 000024E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4703 000024EA 4889C3                  	mov rbx, rax
  4704 000024ED 58                      	pop rax
  4705 000024EE C60004                  	mov byte [rax], T_closure
  4706 000024F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4707 000024F5 48C74009[02250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4708 000024FD E9A4000000              	jmp .L_lambda_simple_end_001b
  4709                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4710 00002502 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4711 00002508 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4712 0000250A FF742410                	push qword [rsp + 8 * 2]
  4713 0000250E 6A01                    	push 1
  4714 00002510 E999500100              	jmp L_error_incorrect_arity_simple
  4715                                  .L_lambda_simple_arity_check_ok_001b:
  4716 00002515 C8000000                	enter 0, 0
  4717                                  	; preparing a tail-call
  4718                                  	; preparing a non-tail-call
  4719 00002519 488B4520                	mov rax, PARAM(0)	; param x
  4720 0000251D 50                      	push rax
  4721 0000251E 6A01                    	push 1	; arg count
  4722 00002520 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4723 00002528 803805                  	cmp byte [rax], T_undefined
  4724 0000252B 0F84974F0100            	je L_error_fvar_undefined
  4725 00002531 803804                  	cmp byte [rax], T_closure
  4726 00002534 0F8512500100            	jne L_error_non_closure
  4727 0000253A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4728 0000253D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4729 00002540 50                      	push rax
  4730 00002541 6A01                    	push 1	; arg count
  4731 00002543 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4732 0000254B 803805                  	cmp byte [rax], T_undefined
  4733 0000254E 0F84744F0100            	je L_error_fvar_undefined
  4734 00002554 803804                  	cmp byte [rax], T_closure
  4735 00002557 0F85EF4F0100            	jne L_error_non_closure
  4736 0000255D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4737 00002560 FF7508                  	push qword [rbp + 8 * 1]
  4738                                   ; old ret addr
  4739 00002563 FF7500                  	push qword [rbp]
  4740                                   ; restore the old rbp
  4741 00002566 BB01000000              	mov rbx, 1
  4742 0000256B 4883C303                	add rbx, 3
  4743 0000256F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4744 00002573 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4745 00002578 4C8D4DF8                	lea r9, [rbp - 8]
  4746 0000257C B905000000              	mov rcx, 5
  4747                                  .L_tc_recycle_frame_loop_001b:
  4748 00002581 4883F900                	cmp rcx, 0
  4749 00002585 7413                    	je .L_tc_recycle_frame_done_001b
  4750 00002587 4D8B11                  	mov r10, qword [r9]
  4751 0000258A 4D8910                  	mov qword [r8], r10
  4752 0000258D 4983E808                	sub r8, 8
  4753 00002591 4983E908                	sub r9, 8
  4754 00002595 48FFC9                  	dec rcx
  4755 00002598 EBE7                    	jmp .L_tc_recycle_frame_loop_001b
  4756                                  .L_tc_recycle_frame_done_001b:
  4757 0000259A 498D6008                	lea rsp, [r8 + 8]
  4758 0000259E 5D                      	pop rbp ; restore the old rbp
  4759 0000259F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4760 000025A2 C9                      	leave
  4761 000025A3 C21800                  	ret AND_KILL_FRAME(1)
  4762                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4763 000025A6 48890425[C1110000]      	mov qword [free_var_60], rax
  4764 000025AE 48B8-                   	mov rax, sob_void
  4764 000025B0 [0000000000000000] 
  4765                                  
  4766 000025B8 4889C7                  	mov rdi, rax
  4767 000025BB E88A520100              	call print_sexpr_if_not_void
  4768 000025C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4769 000025C5 E82B500100              	call malloc
  4770 000025CA 50                      	push rax
  4771 000025CB BF00000000              	mov rdi, 8 * 0	; new rib
  4772 000025D0 E820500100              	call malloc
  4773 000025D5 50                      	push rax
  4774 000025D6 BF08000000              	mov rdi, 8 * 1	; extended env
  4775 000025DB E815500100              	call malloc
  4776 000025E0 488B7D10                	mov rdi, ENV
  4777 000025E4 BE00000000              	mov rsi, 0
  4778 000025E9 BA01000000              	mov rdx, 1
  4779                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4780 000025EE 4883FE00                	cmp rsi, 0
  4781 000025F2 7410                    	je .L_lambda_simple_env_end_001c
  4782 000025F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4783 000025F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4784 000025FC 48FFC6                  	inc rsi
  4785 000025FF 48FFC2                  	inc rdx
  4786 00002602 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4787                                  .L_lambda_simple_env_end_001c:
  4788 00002604 5B                      	pop rbx
  4789 00002605 BE00000000              	mov rsi, 0
  4790                                  .L_lambda_simple_params_loop_001c:	; copy params
  4791 0000260A 4883FE00                	cmp rsi, 0
  4792 0000260E 740E                    	je .L_lambda_simple_params_end_001c
  4793 00002610 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4794 00002615 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4795 00002619 48FFC6                  	inc rsi
  4796 0000261C EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4797                                  .L_lambda_simple_params_end_001c:
  4798 0000261E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4799 00002621 4889C3                  	mov rbx, rax
  4800 00002624 58                      	pop rax
  4801 00002625 C60004                  	mov byte [rax], T_closure
  4802 00002628 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4803 0000262C 48C74009[39260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4804 00002634 E9A4000000              	jmp .L_lambda_simple_end_001c
  4805                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4806 00002639 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4807 0000263F 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4808 00002641 FF742410                	push qword [rsp + 8 * 2]
  4809 00002645 6A01                    	push 1
  4810 00002647 E9624F0100              	jmp L_error_incorrect_arity_simple
  4811                                  .L_lambda_simple_arity_check_ok_001c:
  4812 0000264C C8000000                	enter 0, 0
  4813                                  	; preparing a tail-call
  4814                                  	; preparing a non-tail-call
  4815 00002650 488B4520                	mov rax, PARAM(0)	; param x
  4816 00002654 50                      	push rax
  4817 00002655 6A01                    	push 1	; arg count
  4818 00002657 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4819 0000265F 803805                  	cmp byte [rax], T_undefined
  4820 00002662 0F84604E0100            	je L_error_fvar_undefined
  4821 00002668 803804                  	cmp byte [rax], T_closure
  4822 0000266B 0F85DB4E0100            	jne L_error_non_closure
  4823 00002671 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4824 00002674 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4825 00002677 50                      	push rax
  4826 00002678 6A01                    	push 1	; arg count
  4827 0000267A 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4828 00002682 803805                  	cmp byte [rax], T_undefined
  4829 00002685 0F843D4E0100            	je L_error_fvar_undefined
  4830 0000268B 803804                  	cmp byte [rax], T_closure
  4831 0000268E 0F85B84E0100            	jne L_error_non_closure
  4832 00002694 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4833 00002697 FF7508                  	push qword [rbp + 8 * 1]
  4834                                   ; old ret addr
  4835 0000269A FF7500                  	push qword [rbp]
  4836                                   ; restore the old rbp
  4837 0000269D BB01000000              	mov rbx, 1
  4838 000026A2 4883C303                	add rbx, 3
  4839 000026A6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4840 000026AA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4841 000026AF 4C8D4DF8                	lea r9, [rbp - 8]
  4842 000026B3 B905000000              	mov rcx, 5
  4843                                  .L_tc_recycle_frame_loop_001c:
  4844 000026B8 4883F900                	cmp rcx, 0
  4845 000026BC 7413                    	je .L_tc_recycle_frame_done_001c
  4846 000026BE 4D8B11                  	mov r10, qword [r9]
  4847 000026C1 4D8910                  	mov qword [r8], r10
  4848 000026C4 4983E808                	sub r8, 8
  4849 000026C8 4983E908                	sub r9, 8
  4850 000026CC 48FFC9                  	dec rcx
  4851 000026CF EBE7                    	jmp .L_tc_recycle_frame_loop_001c
  4852                                  .L_tc_recycle_frame_done_001c:
  4853 000026D1 498D6008                	lea rsp, [r8 + 8]
  4854 000026D5 5D                      	pop rbp ; restore the old rbp
  4855 000026D6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4856 000026D9 C9                      	leave
  4857 000026DA C21800                  	ret AND_KILL_FRAME(1)
  4858                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4859 000026DD 48890425[D2110000]      	mov qword [free_var_61], rax
  4860 000026E5 48B8-                   	mov rax, sob_void
  4860 000026E7 [0000000000000000] 
  4861                                  
  4862 000026EF 4889C7                  	mov rdi, rax
  4863 000026F2 E853510100              	call print_sexpr_if_not_void
  4864 000026F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4865 000026FC E8F44E0100              	call malloc
  4866 00002701 50                      	push rax
  4867 00002702 BF00000000              	mov rdi, 8 * 0	; new rib
  4868 00002707 E8E94E0100              	call malloc
  4869 0000270C 50                      	push rax
  4870 0000270D BF08000000              	mov rdi, 8 * 1	; extended env
  4871 00002712 E8DE4E0100              	call malloc
  4872 00002717 488B7D10                	mov rdi, ENV
  4873 0000271B BE00000000              	mov rsi, 0
  4874 00002720 BA01000000              	mov rdx, 1
  4875                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4876 00002725 4883FE00                	cmp rsi, 0
  4877 00002729 7410                    	je .L_lambda_simple_env_end_001d
  4878 0000272B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4879 0000272F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4880 00002733 48FFC6                  	inc rsi
  4881 00002736 48FFC2                  	inc rdx
  4882 00002739 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4883                                  .L_lambda_simple_env_end_001d:
  4884 0000273B 5B                      	pop rbx
  4885 0000273C BE00000000              	mov rsi, 0
  4886                                  .L_lambda_simple_params_loop_001d:	; copy params
  4887 00002741 4883FE00                	cmp rsi, 0
  4888 00002745 740E                    	je .L_lambda_simple_params_end_001d
  4889 00002747 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4890 0000274C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4891 00002750 48FFC6                  	inc rsi
  4892 00002753 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4893                                  .L_lambda_simple_params_end_001d:
  4894 00002755 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4895 00002758 4889C3                  	mov rbx, rax
  4896 0000275B 58                      	pop rax
  4897 0000275C C60004                  	mov byte [rax], T_closure
  4898 0000275F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4899 00002763 48C74009[70270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4900 0000276B E916010000              	jmp .L_lambda_simple_end_001d
  4901                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4902 00002770 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4903 00002776 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4904 00002778 FF742410                	push qword [rsp + 8 * 2]
  4905 0000277C 6A01                    	push 1
  4906 0000277E E92B4E0100              	jmp L_error_incorrect_arity_simple
  4907                                  .L_lambda_simple_arity_check_ok_001d:
  4908 00002783 C8000000                	enter 0, 0
  4909                                  	; preparing a non-tail-call
  4910 00002787 488B4520                	mov rax, PARAM(0)	; param e
  4911 0000278B 50                      	push rax
  4912 0000278C 6A01                    	push 1	; arg count
  4913 0000278E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  4914 00002796 803805                  	cmp byte [rax], T_undefined
  4915 00002799 0F84294D0100            	je L_error_fvar_undefined
  4916 0000279F 803804                  	cmp byte [rax], T_closure
  4917 000027A2 0F85A44D0100            	jne L_error_non_closure
  4918 000027A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4919 000027AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  4920 000027AE 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  4921 000027B4 0F85C8000000            	jne .L_or_end_0001; if its not false (true) then we need to return it and not the last element
  4922                                  	; preparing a non-tail-call
  4923 000027BA 488B4520                	mov rax, PARAM(0)	; param e
  4924 000027BE 50                      	push rax
  4925 000027BF 6A01                    	push 1	; arg count
  4926 000027C1 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  4927 000027C9 803805                  	cmp byte [rax], T_undefined
  4928 000027CC 0F84F64C0100            	je L_error_fvar_undefined
  4929 000027D2 803804                  	cmp byte [rax], T_closure
  4930 000027D5 0F85714D0100            	jne L_error_non_closure
  4931 000027DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4932 000027DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  4933 000027E1 483D[02000000]          	cmp rax, sob_boolean_false
  4934 000027E7 0F848B000000            	je .L_if_else_0001
  4935                                  	; preparing a tail-call
  4936                                  	; preparing a non-tail-call
  4937 000027ED 488B4520                	mov rax, PARAM(0)	; param e
  4938 000027F1 50                      	push rax
  4939 000027F2 6A01                    	push 1	; arg count
  4940 000027F4 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  4941 000027FC 803805                  	cmp byte [rax], T_undefined
  4942 000027FF 0F84C34C0100            	je L_error_fvar_undefined
  4943 00002805 803804                  	cmp byte [rax], T_closure
  4944 00002808 0F853E4D0100            	jne L_error_non_closure
  4945 0000280E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4946 00002811 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4947 00002814 50                      	push rax
  4948 00002815 6A01                    	push 1	; arg count
  4949 00002817 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
  4950 0000281F 803805                  	cmp byte [rax], T_undefined
  4951 00002822 0F84A04C0100            	je L_error_fvar_undefined
  4952 00002828 803804                  	cmp byte [rax], T_closure
  4953 0000282B 0F851B4D0100            	jne L_error_non_closure
  4954 00002831 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4955 00002834 FF7508                  	push qword [rbp + 8 * 1]
  4956                                   ; old ret addr
  4957 00002837 FF7500                  	push qword [rbp]
  4958                                   ; restore the old rbp
  4959 0000283A BB01000000              	mov rbx, 1
  4960 0000283F 4883C303                	add rbx, 3
  4961 00002843 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4962 00002847 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4963 0000284C 4C8D4DF8                	lea r9, [rbp - 8]
  4964 00002850 B905000000              	mov rcx, 5
  4965                                  .L_tc_recycle_frame_loop_001d:
  4966 00002855 4883F900                	cmp rcx, 0
  4967 00002859 7413                    	je .L_tc_recycle_frame_done_001d
  4968 0000285B 4D8B11                  	mov r10, qword [r9]
  4969 0000285E 4D8910                  	mov qword [r8], r10
  4970 00002861 4983E808                	sub r8, 8
  4971 00002865 4983E908                	sub r9, 8
  4972 00002869 48FFC9                  	dec rcx
  4973 0000286C EBE7                    	jmp .L_tc_recycle_frame_loop_001d
  4974                                  .L_tc_recycle_frame_done_001d:
  4975 0000286E 498D6008                	lea rsp, [r8 + 8]
  4976 00002872 5D                      	pop rbp ; restore the old rbp
  4977 00002873 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4978 00002876 EB0A                    	jmp .L_if_end_0001
  4979                                  .L_if_else_0001:
  4980 00002878 48B8-                   	mov rax, L_constants + 2
  4980 0000287A [0200000000000000] 
  4981                                  .L_if_end_0001:
  4982                                  .L_or_end_0001:
  4983 00002882 C9                      	leave
  4984 00002883 C21800                  	ret AND_KILL_FRAME(1)
  4985                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4986 00002886 48890425[25140000]      	mov qword [free_var_96], rax
  4987 0000288E 48B8-                   	mov rax, sob_void
  4987 00002890 [0000000000000000] 
  4988                                  
  4989 00002898 4889C7                  	mov rdi, rax
  4990 0000289B E8AA4F0100              	call print_sexpr_if_not_void
  4991 000028A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4992 000028A5 E84B4D0100              	call malloc
  4993 000028AA 50                      	push rax
  4994 000028AB BF00000000              	mov rdi, 8 * 0	; new rib
  4995 000028B0 E8404D0100              	call malloc
  4996 000028B5 50                      	push rax
  4997 000028B6 BF08000000              	mov rdi, 8 * 1	; extended env
  4998 000028BB E8354D0100              	call malloc
  4999 000028C0 488B7D10                	mov rdi, ENV
  5000 000028C4 4831F6                  	 xor rsi, rsi
  5001 000028C7 4831D2                  	 xor rdx, rdx
  5002 000028CA 48FFC2                  	inc rdx
  5003                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  5004 000028CD 4883FE00                	cmp rsi, 0
  5005 000028D1 7410                    	je .L_lambda_opt_env_end_0001
  5006 000028D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5007 000028D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5008 000028DB 48FFC6                  	inc rsi
  5009 000028DE 48FFC2                  	inc rdx
  5010 000028E1 EBEA                    	jmp .L_lambda_opt_env_loop_0001
  5011                                  .L_lambda_opt_env_end_0001:
  5012 000028E3 5B                      	pop rbx
  5013 000028E4 4831F6                  	xor rsi, rsi
  5014                                  .L_lambda_opt_params_loop_0001:	; copy params
  5015 000028E7 4883FE00                	cmp rsi, 0
  5016 000028EB 740E                    	je .L_lambda_opt_params_end_0001
  5017 000028ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5018 000028F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5019 000028F6 48FFC6                  	inc rsi
  5020 000028F9 EBEC                    	jmp .L_lambda_opt_params_loop_0001
  5021                                  .L_lambda_opt_params_end_0001:
  5022 000028FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5023 000028FE 4889C3                  	mov rbx, rax
  5024 00002901 58                      	pop rax
  5025 00002902 C60004                  	mov byte [rax], T_closure
  5026 00002905 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5027 00002909 48C74009[16290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  5028 00002911 E9FA000000              	jmp .L_lambda_opt_end_0001
  5029                                  .L_lambda_opt_code_0001:; lambda opt body
  5030 00002916 48837C241000            	cmp qword [rsp + 8 * 2], 0
  5031 0000291C 7409                    	je .L_lambda_opt_arity_check_exact_0001
  5032 0000291E 7F57                    	jg .L_lambda_opt_arity_check_more_0001
  5033 00002920 6A00                    	push 0
  5034 00002922 E99B4C0100              	jmp L_error_incorrect_arity_opt
  5035                                  .L_lambda_opt_arity_check_exact_0001:
  5036 00002927 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  5037 0000292B 4C894C24F8              	mov qword [rsp -8], r9
  5038 00002930 4C8B4C2408              	mov r9, qword [rsp +8]
  5039 00002935 4C890C24                	mov qword [rsp +8 * 0], r9
  5040 00002939 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  5041 0000293E 4C89C9                  	mov rcx, r9
  5042 00002941 49FFC1                  	inc r9
  5043 00002944 4C894C2408              	mov qword [rsp +8], r9
  5044 00002949 4889E2                  	mov rdx, rsp
  5045 0000294C 4883C218                	add rdx, 24
  5046                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0001:
  5047 00002950 4883F900                	cmp rcx, 0
  5048 00002954 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0001
  5049 00002956 4C8B02                  	mov r8, qword [rdx]
  5050 00002959 4C8942F8                	mov qword [rdx - 8], r8
  5051 0000295D 4883C208                	add rdx, 8
  5052 00002961 48FFC9                  	dec rcx
  5053 00002964 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0001
  5054                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0001:
  5055 00002966 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5056 0000296E 4883EC08                	sub rsp, 8
  5057 00002972 E984000000              	jmp .L_lambda_opt_stack_adjusted_0001
  5058                                  .L_lambda_opt_arity_check_more_0001:
  5059 00002977 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5060 0000297C 4D89C4                  	mov r12, r8
  5061 0000297F 4C89C1                  	mov rcx, r8
  5062 00002982 4D8D5002                	lea r10, [r8 + 2] 
  5063 00002986 4883E900                	sub rcx, 0
  5064 0000298A 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  5065 0000298F 49B9-                   	mov r9, sob_nil
  5065 00002991 [0100000000000000] 
  5066                                  .L_lambda_opt_create_list_of_opt_params_0001:
  5067 00002999 4883F900                	cmp rcx, 0
  5068 0000299D 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0001
  5069 0000299F BF11000000              	mov rdi, 17
  5070 000029A4 E84C4C0100              	call malloc
  5071 000029A9 C60021                  	mov byte [rax], T_pair
  5072 000029AC 498B1B                  	mov rbx, qword [r11]
  5073 000029AF 48895801                	mov qword [rax +1], rbx
  5074 000029B3 4C894809                	mov qword [rax + 1 + 8], r9
  5075 000029B7 4989C1                  	mov r9, rax
  5076 000029BA 48FFC9                  	dec rcx
  5077 000029BD 4983EB08                	sub r11, 8
  5078 000029C1 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0001
  5079                                  .L_lambda_opt_create_list_of_opt_params_end_0001:
  5080 000029C3 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
  5081 000029C8 4D8908                  	mov qword [r8], r9
  5082 000029CB 4E8D14D500000000        	lea r10, [8 * r10]
  5083 000029D3 4901E2                  	add r10, rsp
  5084 000029D6 B904000000              	mov rcx, 4 + 0
  5085                                  .L_lambda_opt_stack_shrink_loop_0001:
  5086 000029DB 4883F900                	cmp rcx, 0
  5087 000029DF 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0001
  5088 000029E1 4D8B18                  	mov r11, qword [r8]
  5089 000029E4 4D891A                  	mov qword [r10], r11
  5090 000029E7 4983E808                	sub r8, 8
  5091 000029EB 4983EA08                	sub r10, 8
  5092 000029EF 48FFC9                  	dec rcx
  5093 000029F2 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  5094                                  .L_lambda_opt_stack_shrink_loop_exit_0001:
  5095 000029F4 4983C208                	add r10, 8
  5096 000029F8 4C89D4                  	mov rsp, r10
  5097                                  .L_lambda_opt_stack_adjusted_0001:;continue with the code, the stack is ok
  5098 000029FB 48C744241001000000      	mov qword [rsp + 8*2], 1
  5099 00002A04 C8000000                	enter 0, 0
  5100 00002A08 488B4520                	mov rax, PARAM(0)	; param args
  5101 00002A0C C9                      	leave
  5102 00002A0D C21800                  	ret 8 * (2 + 1)
  5103                                  .L_lambda_opt_end_0001:	; new closure is in rax
  5104 00002A10 48890425[E1130000]      	mov qword [free_var_92], rax
  5105 00002A18 48B8-                   	mov rax, sob_void
  5105 00002A1A [0000000000000000] 
  5106                                  
  5107 00002A22 4889C7                  	mov rdi, rax
  5108 00002A25 E8204E0100              	call print_sexpr_if_not_void
  5109 00002A2A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5110 00002A2F E8C14B0100              	call malloc
  5111 00002A34 50                      	push rax
  5112 00002A35 BF00000000              	mov rdi, 8 * 0	; new rib
  5113 00002A3A E8B64B0100              	call malloc
  5114 00002A3F 50                      	push rax
  5115 00002A40 BF08000000              	mov rdi, 8 * 1	; extended env
  5116 00002A45 E8AB4B0100              	call malloc
  5117 00002A4A 488B7D10                	mov rdi, ENV
  5118 00002A4E BE00000000              	mov rsi, 0
  5119 00002A53 BA01000000              	mov rdx, 1
  5120                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  5121 00002A58 4883FE00                	cmp rsi, 0
  5122 00002A5C 7410                    	je .L_lambda_simple_env_end_001e
  5123 00002A5E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5124 00002A62 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5125 00002A66 48FFC6                  	inc rsi
  5126 00002A69 48FFC2                  	inc rdx
  5127 00002A6C EBEA                    	jmp .L_lambda_simple_env_loop_001e
  5128                                  .L_lambda_simple_env_end_001e:
  5129 00002A6E 5B                      	pop rbx
  5130 00002A6F BE00000000              	mov rsi, 0
  5131                                  .L_lambda_simple_params_loop_001e:	; copy params
  5132 00002A74 4883FE00                	cmp rsi, 0
  5133 00002A78 740E                    	je .L_lambda_simple_params_end_001e
  5134 00002A7A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5135 00002A7F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5136 00002A83 48FFC6                  	inc rsi
  5137 00002A86 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  5138                                  .L_lambda_simple_params_end_001e:
  5139 00002A88 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5140 00002A8B 4889C3                  	mov rbx, rax
  5141 00002A8E 58                      	pop rax
  5142 00002A8F C60004                  	mov byte [rax], T_closure
  5143 00002A92 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5144 00002A96 48C74009[A02A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  5145 00002A9E EB3D                    	jmp .L_lambda_simple_end_001e
  5146                                  .L_lambda_simple_code_001e:	; lambda-simple body
  5147 00002AA0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5148 00002AA6 740B                    	je .L_lambda_simple_arity_check_ok_001e
  5149 00002AA8 FF742410                	push qword [rsp + 8 * 2]
  5150 00002AAC 6A01                    	push 1
  5151 00002AAE E9FB4A0100              	jmp L_error_incorrect_arity_simple
  5152                                  .L_lambda_simple_arity_check_ok_001e:
  5153 00002AB3 C8000000                	enter 0, 0
  5154 00002AB7 488B4520                	mov rax, PARAM(0)	; param x
  5155 00002ABB 483D[02000000]          	cmp rax, sob_boolean_false
  5156 00002AC1 740C                    	je .L_if_else_0002
  5157 00002AC3 48B8-                   	mov rax, L_constants + 2
  5157 00002AC5 [0200000000000000] 
  5158 00002ACD EB0A                    	jmp .L_if_end_0002
  5159                                  .L_if_else_0002:
  5160 00002ACF 48B8-                   	mov rax, L_constants + 3
  5160 00002AD1 [0300000000000000] 
  5161                                  .L_if_end_0002:
  5162 00002AD9 C9                      	leave
  5163 00002ADA C21800                  	ret AND_KILL_FRAME(1)
  5164                                  .L_lambda_simple_end_001e:	; new closure is in rax
  5165 00002ADD 48890425[CF140000]      	mov qword [free_var_106], rax
  5166 00002AE5 48B8-                   	mov rax, sob_void
  5166 00002AE7 [0000000000000000] 
  5167                                  
  5168 00002AEF 4889C7                  	mov rdi, rax
  5169 00002AF2 E8534D0100              	call print_sexpr_if_not_void
  5170 00002AF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5171 00002AFC E8F44A0100              	call malloc
  5172 00002B01 50                      	push rax
  5173 00002B02 BF00000000              	mov rdi, 8 * 0	; new rib
  5174 00002B07 E8E94A0100              	call malloc
  5175 00002B0C 50                      	push rax
  5176 00002B0D BF08000000              	mov rdi, 8 * 1	; extended env
  5177 00002B12 E8DE4A0100              	call malloc
  5178 00002B17 488B7D10                	mov rdi, ENV
  5179 00002B1B BE00000000              	mov rsi, 0
  5180 00002B20 BA01000000              	mov rdx, 1
  5181                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  5182 00002B25 4883FE00                	cmp rsi, 0
  5183 00002B29 7410                    	je .L_lambda_simple_env_end_001f
  5184 00002B2B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5185 00002B2F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5186 00002B33 48FFC6                  	inc rsi
  5187 00002B36 48FFC2                  	inc rdx
  5188 00002B39 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  5189                                  .L_lambda_simple_env_end_001f:
  5190 00002B3B 5B                      	pop rbx
  5191 00002B3C BE00000000              	mov rsi, 0
  5192                                  .L_lambda_simple_params_loop_001f:	; copy params
  5193 00002B41 4883FE00                	cmp rsi, 0
  5194 00002B45 740E                    	je .L_lambda_simple_params_end_001f
  5195 00002B47 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5196 00002B4C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5197 00002B50 48FFC6                  	inc rsi
  5198 00002B53 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  5199                                  .L_lambda_simple_params_end_001f:
  5200 00002B55 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5201 00002B58 4889C3                  	mov rbx, rax
  5202 00002B5B 58                      	pop rax
  5203 00002B5C C60004                  	mov byte [rax], T_closure
  5204 00002B5F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5205 00002B63 48C74009[702B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  5206 00002B6B E9B0000000              	jmp .L_lambda_simple_end_001f
  5207                                  .L_lambda_simple_code_001f:	; lambda-simple body
  5208 00002B70 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5209 00002B76 740B                    	je .L_lambda_simple_arity_check_ok_001f
  5210 00002B78 FF742410                	push qword [rsp + 8 * 2]
  5211 00002B7C 6A01                    	push 1
  5212 00002B7E E92B4A0100              	jmp L_error_incorrect_arity_simple
  5213                                  .L_lambda_simple_arity_check_ok_001f:
  5214 00002B83 C8000000                	enter 0, 0
  5215                                  	; preparing a non-tail-call
  5216 00002B87 488B4520                	mov rax, PARAM(0)	; param q
  5217 00002B8B 50                      	push rax
  5218 00002B8C 6A01                    	push 1	; arg count
  5219 00002B8E 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  5220 00002B96 803805                  	cmp byte [rax], T_undefined
  5221 00002B99 0F8429490100            	je L_error_fvar_undefined
  5222 00002B9F 803804                  	cmp byte [rax], T_closure
  5223 00002BA2 0F85A4490100            	jne L_error_non_closure
  5224 00002BA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5225 00002BAB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5226 00002BAE 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  5227 00002BB4 7566                    	jne .L_or_end_0002; if its not false (true) then we need to return it and not the last element
  5228                                  	; preparing a tail-call
  5229 00002BB6 488B4520                	mov rax, PARAM(0)	; param q
  5230 00002BBA 50                      	push rax
  5231 00002BBB 6A01                    	push 1	; arg count
  5232 00002BBD 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  5233 00002BC5 803805                  	cmp byte [rax], T_undefined
  5234 00002BC8 0F84FA480100            	je L_error_fvar_undefined
  5235 00002BCE 803804                  	cmp byte [rax], T_closure
  5236 00002BD1 0F8575490100            	jne L_error_non_closure
  5237 00002BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5238 00002BDA FF7508                  	push qword [rbp + 8 * 1]
  5239                                   ; old ret addr
  5240 00002BDD FF7500                  	push qword [rbp]
  5241                                   ; restore the old rbp
  5242 00002BE0 BB01000000              	mov rbx, 1
  5243 00002BE5 4883C303                	add rbx, 3
  5244 00002BE9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5245 00002BED 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5246 00002BF2 4C8D4DF8                	lea r9, [rbp - 8]
  5247 00002BF6 B905000000              	mov rcx, 5
  5248                                  .L_tc_recycle_frame_loop_001e:
  5249 00002BFB 4883F900                	cmp rcx, 0
  5250 00002BFF 7413                    	je .L_tc_recycle_frame_done_001e
  5251 00002C01 4D8B11                  	mov r10, qword [r9]
  5252 00002C04 4D8910                  	mov qword [r8], r10
  5253 00002C07 4983E808                	sub r8, 8
  5254 00002C0B 4983E908                	sub r9, 8
  5255 00002C0F 48FFC9                  	dec rcx
  5256 00002C12 EBE7                    	jmp .L_tc_recycle_frame_loop_001e
  5257                                  .L_tc_recycle_frame_done_001e:
  5258 00002C14 498D6008                	lea rsp, [r8 + 8]
  5259 00002C18 5D                      	pop rbp ; restore the old rbp
  5260 00002C19 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5261                                  .L_or_end_0002:
  5262 00002C1C C9                      	leave
  5263 00002C1D C21800                  	ret AND_KILL_FRAME(1)
  5264                                  .L_lambda_simple_end_001f:	; new closure is in rax
  5265 00002C20 48890425[57150000]      	mov qword [free_var_114], rax
  5266 00002C28 48B8-                   	mov rax, sob_void
  5266 00002C2A [0000000000000000] 
  5267                                  
  5268 00002C32 4889C7                  	mov rdi, rax
  5269 00002C35 E8104C0100              	call print_sexpr_if_not_void
  5270                                  	; preparing a non-tail-call
  5271 00002C3A 48B8-                   	mov rax, L_constants + 1993
  5271 00002C3C [C907000000000000] 
  5272 00002C44 50                      	push rax
  5273 00002C45 6A01                    	push 1	; arg count
  5274 00002C47 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5275 00002C4C E8A4490100              	call malloc
  5276 00002C51 50                      	push rax
  5277 00002C52 BF00000000              	mov rdi, 8 * 0	; new rib
  5278 00002C57 E899490100              	call malloc
  5279 00002C5C 50                      	push rax
  5280 00002C5D BF08000000              	mov rdi, 8 * 1	; extended env
  5281 00002C62 E88E490100              	call malloc
  5282 00002C67 488B7D10                	mov rdi, ENV
  5283 00002C6B BE00000000              	mov rsi, 0
  5284 00002C70 BA01000000              	mov rdx, 1
  5285                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  5286 00002C75 4883FE00                	cmp rsi, 0
  5287 00002C79 7410                    	je .L_lambda_simple_env_end_0020
  5288 00002C7B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5289 00002C7F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5290 00002C83 48FFC6                  	inc rsi
  5291 00002C86 48FFC2                  	inc rdx
  5292 00002C89 EBEA                    	jmp .L_lambda_simple_env_loop_0020
  5293                                  .L_lambda_simple_env_end_0020:
  5294 00002C8B 5B                      	pop rbx
  5295 00002C8C BE00000000              	mov rsi, 0
  5296                                  .L_lambda_simple_params_loop_0020:	; copy params
  5297 00002C91 4883FE00                	cmp rsi, 0
  5298 00002C95 740E                    	je .L_lambda_simple_params_end_0020
  5299 00002C97 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5300 00002C9C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5301 00002CA0 48FFC6                  	inc rsi
  5302 00002CA3 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  5303                                  .L_lambda_simple_params_end_0020:
  5304 00002CA5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5305 00002CA8 4889C3                  	mov rbx, rax
  5306 00002CAB 58                      	pop rax
  5307 00002CAC C60004                  	mov byte [rax], T_closure
  5308 00002CAF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5309 00002CB3 48C74009[C02C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  5310 00002CBB E9BF030000              	jmp .L_lambda_simple_end_0020
  5311                                  .L_lambda_simple_code_0020:	; lambda-simple body
  5312 00002CC0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5313 00002CC6 740B                    	je .L_lambda_simple_arity_check_ok_0020
  5314 00002CC8 FF742410                	push qword [rsp + 8 * 2]
  5315 00002CCC 6A01                    	push 1
  5316 00002CCE E9DB480100              	jmp L_error_incorrect_arity_simple
  5317                                  .L_lambda_simple_arity_check_ok_0020:
  5318 00002CD3 C8000000                	enter 0, 0
  5319 00002CD7 BF08000000              	mov rdi, 8*1
  5320 00002CDC E814490100              	call malloc
  5321 00002CE1 488B5D20                	mov rbx, PARAM(0)
  5322 00002CE5 488918                  	mov qword [rax], rbx
  5323 00002CE8 48894520                	mov PARAM(0), rax
  5324 00002CEC 48B8-                   	mov rax, sob_void
  5324 00002CEE [0000000000000000] 
  5325                                  
  5326 00002CF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5327 00002CFB E8F5480100              	call malloc
  5328 00002D00 50                      	push rax
  5329 00002D01 BF08000000              	mov rdi, 8 * 1	; new rib
  5330 00002D06 E8EA480100              	call malloc
  5331 00002D0B 50                      	push rax
  5332 00002D0C BF10000000              	mov rdi, 8 * 2	; extended env
  5333 00002D11 E8DF480100              	call malloc
  5334 00002D16 488B7D10                	mov rdi, ENV
  5335 00002D1A BE00000000              	mov rsi, 0
  5336 00002D1F BA01000000              	mov rdx, 1
  5337                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  5338 00002D24 4883FE01                	cmp rsi, 1
  5339 00002D28 7410                    	je .L_lambda_simple_env_end_0021
  5340 00002D2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5341 00002D2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5342 00002D32 48FFC6                  	inc rsi
  5343 00002D35 48FFC2                  	inc rdx
  5344 00002D38 EBEA                    	jmp .L_lambda_simple_env_loop_0021
  5345                                  .L_lambda_simple_env_end_0021:
  5346 00002D3A 5B                      	pop rbx
  5347 00002D3B BE00000000              	mov rsi, 0
  5348                                  .L_lambda_simple_params_loop_0021:	; copy params
  5349 00002D40 4883FE01                	cmp rsi, 1
  5350 00002D44 740E                    	je .L_lambda_simple_params_end_0021
  5351 00002D46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5352 00002D4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5353 00002D4F 48FFC6                  	inc rsi
  5354 00002D52 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  5355                                  .L_lambda_simple_params_end_0021:
  5356 00002D54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5357 00002D57 4889C3                  	mov rbx, rax
  5358 00002D5A 58                      	pop rax
  5359 00002D5B C60004                  	mov byte [rax], T_closure
  5360 00002D5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5361 00002D62 48C74009[6F2D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  5362 00002D6A E928010000              	jmp .L_lambda_simple_end_0021
  5363                                  .L_lambda_simple_code_0021:	; lambda-simple body
  5364 00002D6F 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5365 00002D75 740B                    	je .L_lambda_simple_arity_check_ok_0021
  5366 00002D77 FF742410                	push qword [rsp + 8 * 2]
  5367 00002D7B 6A02                    	push 2
  5368 00002D7D E92C480100              	jmp L_error_incorrect_arity_simple
  5369                                  .L_lambda_simple_arity_check_ok_0021:
  5370 00002D82 C8000000                	enter 0, 0
  5371                                  	; preparing a non-tail-call
  5372 00002D86 488B4528                	mov rax, PARAM(1)	; param s
  5373 00002D8A 50                      	push rax
  5374 00002D8B 6A01                    	push 1	; arg count
  5375 00002D8D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  5376 00002D95 803805                  	cmp byte [rax], T_undefined
  5377 00002D98 0F842A470100            	je L_error_fvar_undefined
  5378 00002D9E 803804                  	cmp byte [rax], T_closure
  5379 00002DA1 0F85A5470100            	jne L_error_non_closure
  5380 00002DA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5381 00002DAA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5382 00002DAD 483D[02000000]          	cmp rax, sob_boolean_false
  5383 00002DB3 7409                    	je .L_if_else_0003
  5384 00002DB5 488B4520                	mov rax, PARAM(0)	; param a
  5385 00002DB9 E9D5000000              	jmp .L_if_end_0003
  5386                                  .L_if_else_0003:
  5387                                  	; preparing a tail-call
  5388                                  	; preparing a non-tail-call
  5389                                  	; preparing a non-tail-call
  5390 00002DBE 488B4528                	mov rax, PARAM(1)	; param s
  5391 00002DC2 50                      	push rax
  5392 00002DC3 6A01                    	push 1	; arg count
  5393 00002DC5 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5394 00002DCD 803805                  	cmp byte [rax], T_undefined
  5395 00002DD0 0F84F2460100            	je L_error_fvar_undefined
  5396 00002DD6 803804                  	cmp byte [rax], T_closure
  5397 00002DD9 0F856D470100            	jne L_error_non_closure
  5398 00002DDF FF7001                  	push SOB_CLOSURE_ENV(rax)
  5399 00002DE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5400 00002DE5 50                      	push rax
  5401                                  	; preparing a non-tail-call
  5402 00002DE6 488B4528                	mov rax, PARAM(1)	; param s
  5403 00002DEA 50                      	push rax
  5404 00002DEB 6A01                    	push 1	; arg count
  5405 00002DED 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5406 00002DF5 803805                  	cmp byte [rax], T_undefined
  5407 00002DF8 0F84CA460100            	je L_error_fvar_undefined
  5408 00002DFE 803804                  	cmp byte [rax], T_closure
  5409 00002E01 0F8545470100            	jne L_error_non_closure
  5410 00002E07 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5411 00002E0A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5412 00002E0D 50                      	push rax
  5413 00002E0E 6A02                    	push 2	; arg count
  5414 00002E10 488B4510                	mov rax, ENV
  5415 00002E14 488B00                  	mov rax, qword [rax + 8 * 0]
  5416 00002E17 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5417 00002E1A 488B00                  	mov rax, qword [rax]
  5418 00002E1D 803804                  	cmp byte [rax], T_closure
  5419 00002E20 0F8526470100            	jne L_error_non_closure
  5420 00002E26 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5421 00002E29 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5422 00002E2C 50                      	push rax
  5423 00002E2D 488B4520                	mov rax, PARAM(0)	; param a
  5424 00002E31 50                      	push rax
  5425 00002E32 6A02                    	push 2	; arg count
  5426 00002E34 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5427 00002E3C 803805                  	cmp byte [rax], T_undefined
  5428 00002E3F 0F8483460100            	je L_error_fvar_undefined
  5429 00002E45 803804                  	cmp byte [rax], T_closure
  5430 00002E48 0F85FE460100            	jne L_error_non_closure
  5431 00002E4E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5432 00002E51 FF7508                  	push qword [rbp + 8 * 1]
  5433                                   ; old ret addr
  5434 00002E54 FF7500                  	push qword [rbp]
  5435                                   ; restore the old rbp
  5436 00002E57 BB02000000              	mov rbx, 2
  5437 00002E5C 4883C303                	add rbx, 3
  5438 00002E60 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5439 00002E64 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5440 00002E69 4C8D4DF8                	lea r9, [rbp - 8]
  5441 00002E6D B906000000              	mov rcx, 6
  5442                                  .L_tc_recycle_frame_loop_001f:
  5443 00002E72 4883F900                	cmp rcx, 0
  5444 00002E76 7413                    	je .L_tc_recycle_frame_done_001f
  5445 00002E78 4D8B11                  	mov r10, qword [r9]
  5446 00002E7B 4D8910                  	mov qword [r8], r10
  5447 00002E7E 4983E808                	sub r8, 8
  5448 00002E82 4983E908                	sub r9, 8
  5449 00002E86 48FFC9                  	dec rcx
  5450 00002E89 EBE7                    	jmp .L_tc_recycle_frame_loop_001f
  5451                                  .L_tc_recycle_frame_done_001f:
  5452 00002E8B 498D6008                	lea rsp, [r8 + 8]
  5453 00002E8F 5D                      	pop rbp ; restore the old rbp
  5454 00002E90 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5455                                  .L_if_end_0003:
  5456 00002E93 C9                      	leave
  5457 00002E94 C22000                  	ret AND_KILL_FRAME(2)
  5458                                  .L_lambda_simple_end_0021:	; new closure is in rax
  5459 00002E97 50                      	push rax
  5460 00002E98 488B4520                	mov rax, PARAM(0)	; param run
  5461 00002E9C 8F00                    	pop qword [rax]
  5462 00002E9E 48B8-                   	mov rax, sob_void
  5462 00002EA0 [0000000000000000] 
  5463                                  
  5464 00002EA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5465 00002EAD E843470100              	call malloc
  5466 00002EB2 50                      	push rax
  5467 00002EB3 BF08000000              	mov rdi, 8 * 1	; new rib
  5468 00002EB8 E838470100              	call malloc
  5469 00002EBD 50                      	push rax
  5470 00002EBE BF10000000              	mov rdi, 8 * 2	; extended env
  5471 00002EC3 E82D470100              	call malloc
  5472 00002EC8 488B7D10                	mov rdi, ENV
  5473 00002ECC 4831F6                  	 xor rsi, rsi
  5474 00002ECF 4831D2                  	 xor rdx, rdx
  5475 00002ED2 48FFC2                  	inc rdx
  5476                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  5477 00002ED5 4883FE01                	cmp rsi, 1
  5478 00002ED9 7410                    	je .L_lambda_opt_env_end_0002
  5479 00002EDB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5480 00002EDF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5481 00002EE3 48FFC6                  	inc rsi
  5482 00002EE6 48FFC2                  	inc rdx
  5483 00002EE9 EBEA                    	jmp .L_lambda_opt_env_loop_0002
  5484                                  .L_lambda_opt_env_end_0002:
  5485 00002EEB 5B                      	pop rbx
  5486 00002EEC 4831F6                  	xor rsi, rsi
  5487                                  .L_lambda_opt_params_loop_0002:	; copy params
  5488 00002EEF 4883FE01                	cmp rsi, 1
  5489 00002EF3 740E                    	je .L_lambda_opt_params_end_0002
  5490 00002EF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5491 00002EFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5492 00002EFE 48FFC6                  	inc rsi
  5493 00002F01 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  5494                                  .L_lambda_opt_params_end_0002:
  5495 00002F03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5496 00002F06 4889C3                  	mov rbx, rax
  5497 00002F09 58                      	pop rax
  5498 00002F0A C60004                  	mov byte [rax], T_closure
  5499 00002F0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5500 00002F11 48C74009[1E2F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5501 00002F19 E95D010000              	jmp .L_lambda_opt_end_0002
  5502                                  .L_lambda_opt_code_0002:; lambda opt body
  5503 00002F1E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5504 00002F24 7409                    	je .L_lambda_opt_arity_check_exact_0002
  5505 00002F26 7F57                    	jg .L_lambda_opt_arity_check_more_0002
  5506 00002F28 6A01                    	push 1
  5507 00002F2A E993460100              	jmp L_error_incorrect_arity_opt
  5508                                  .L_lambda_opt_arity_check_exact_0002:
  5509 00002F2F 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  5510 00002F33 4C894C24F8              	mov qword [rsp -8], r9
  5511 00002F38 4C8B4C2408              	mov r9, qword [rsp +8]
  5512 00002F3D 4C890C24                	mov qword [rsp +8 * 0], r9
  5513 00002F41 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  5514 00002F46 4C89C9                  	mov rcx, r9
  5515 00002F49 49FFC1                  	inc r9
  5516 00002F4C 4C894C2408              	mov qword [rsp +8], r9
  5517 00002F51 4889E2                  	mov rdx, rsp
  5518 00002F54 4883C218                	add rdx, 24
  5519                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0002:
  5520 00002F58 4883F900                	cmp rcx, 0
  5521 00002F5C 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0002
  5522 00002F5E 4C8B02                  	mov r8, qword [rdx]
  5523 00002F61 4C8942F8                	mov qword [rdx - 8], r8
  5524 00002F65 4883C208                	add rdx, 8
  5525 00002F69 48FFC9                  	dec rcx
  5526 00002F6C EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0002
  5527                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0002:
  5528 00002F6E 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5529 00002F76 4883EC08                	sub rsp, 8
  5530 00002F7A E984000000              	jmp .L_lambda_opt_stack_adjusted_0002
  5531                                  .L_lambda_opt_arity_check_more_0002:
  5532 00002F7F 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5533 00002F84 4D89C4                  	mov r12, r8
  5534 00002F87 4C89C1                  	mov rcx, r8
  5535 00002F8A 4D8D5002                	lea r10, [r8 + 2] 
  5536 00002F8E 4883E901                	sub rcx, 1
  5537 00002F92 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  5538 00002F97 49B9-                   	mov r9, sob_nil
  5538 00002F99 [0100000000000000] 
  5539                                  .L_lambda_opt_create_list_of_opt_params_0002:
  5540 00002FA1 4883F900                	cmp rcx, 0
  5541 00002FA5 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0002
  5542 00002FA7 BF11000000              	mov rdi, 17
  5543 00002FAC E844460100              	call malloc
  5544 00002FB1 C60021                  	mov byte [rax], T_pair
  5545 00002FB4 498B1B                  	mov rbx, qword [r11]
  5546 00002FB7 48895801                	mov qword [rax +1], rbx
  5547 00002FBB 4C894809                	mov qword [rax + 1 + 8], r9
  5548 00002FBF 4989C1                  	mov r9, rax
  5549 00002FC2 48FFC9                  	dec rcx
  5550 00002FC5 4983EB08                	sub r11, 8
  5551 00002FC9 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0002
  5552                                  .L_lambda_opt_create_list_of_opt_params_end_0002:
  5553 00002FCB 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  5554 00002FD0 4D8908                  	mov qword [r8], r9
  5555 00002FD3 4E8D14D500000000        	lea r10, [8 * r10]
  5556 00002FDB 4901E2                  	add r10, rsp
  5557 00002FDE B905000000              	mov rcx, 4 + 1
  5558                                  .L_lambda_opt_stack_shrink_loop_0002:
  5559 00002FE3 4883F900                	cmp rcx, 0
  5560 00002FE7 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0002
  5561 00002FE9 4D8B18                  	mov r11, qword [r8]
  5562 00002FEC 4D891A                  	mov qword [r10], r11
  5563 00002FEF 4983E808                	sub r8, 8
  5564 00002FF3 4983EA08                	sub r10, 8
  5565 00002FF7 48FFC9                  	dec rcx
  5566 00002FFA EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5567                                  .L_lambda_opt_stack_shrink_loop_exit_0002:
  5568 00002FFC 4983C208                	add r10, 8
  5569 00003000 4C89D4                  	mov rsp, r10
  5570                                  .L_lambda_opt_stack_adjusted_0002:;continue with the code, the stack is ok
  5571 00003003 48C744241002000000      	mov qword [rsp + 8*2], 2
  5572 0000300C C8000000                	enter 0, 0
  5573                                  	; preparing a tail-call
  5574 00003010 488B4528                	mov rax, PARAM(1)	; param s
  5575 00003014 50                      	push rax
  5576 00003015 488B4520                	mov rax, PARAM(0)	; param a
  5577 00003019 50                      	push rax
  5578 0000301A 6A02                    	push 2	; arg count
  5579 0000301C 488B4510                	mov rax, ENV
  5580 00003020 488B00                  	mov rax, qword [rax + 8 * 0]
  5581 00003023 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5582 00003026 488B00                  	mov rax, qword [rax]
  5583 00003029 803804                  	cmp byte [rax], T_closure
  5584 0000302C 0F851A450100            	jne L_error_non_closure
  5585 00003032 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5586 00003035 FF7508                  	push qword [rbp + 8 * 1]
  5587                                   ; old ret addr
  5588 00003038 FF7500                  	push qword [rbp]
  5589                                   ; restore the old rbp
  5590 0000303B BB02000000              	mov rbx, 2
  5591 00003040 4883C303                	add rbx, 3
  5592 00003044 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5593 00003048 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5594 0000304D 4C8D4DF8                	lea r9, [rbp - 8]
  5595 00003051 B906000000              	mov rcx, 6
  5596                                  .L_tc_recycle_frame_loop_0020:
  5597 00003056 4883F900                	cmp rcx, 0
  5598 0000305A 7413                    	je .L_tc_recycle_frame_done_0020
  5599 0000305C 4D8B11                  	mov r10, qword [r9]
  5600 0000305F 4D8910                  	mov qword [r8], r10
  5601 00003062 4983E808                	sub r8, 8
  5602 00003066 4983E908                	sub r9, 8
  5603 0000306A 48FFC9                  	dec rcx
  5604 0000306D EBE7                    	jmp .L_tc_recycle_frame_loop_0020
  5605                                  .L_tc_recycle_frame_done_0020:
  5606 0000306F 498D6008                	lea rsp, [r8 + 8]
  5607 00003073 5D                      	pop rbp ; restore the old rbp
  5608 00003074 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5609 00003077 C9                      	leave
  5610 00003078 C22000                  	ret 8 * (2 + 2)
  5611                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5612 0000307B C9                      	leave
  5613 0000307C C21800                  	ret AND_KILL_FRAME(1)
  5614                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5615 0000307F 803804                  	cmp byte [rax], T_closure
  5616 00003082 0F85C4440100            	jne L_error_non_closure
  5617 00003088 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5618 0000308B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5619 0000308E 48890425[F2130000]      	mov qword [free_var_93], rax
  5620 00003096 48B8-                   	mov rax, sob_void
  5620 00003098 [0000000000000000] 
  5621                                  
  5622 000030A0 4889C7                  	mov rdi, rax
  5623 000030A3 E8A2470100              	call print_sexpr_if_not_void
  5624                                  	; preparing a non-tail-call
  5625 000030A8 48B8-                   	mov rax, L_constants + 1993
  5625 000030AA [C907000000000000] 
  5626 000030B2 50                      	push rax
  5627 000030B3 6A01                    	push 1	; arg count
  5628 000030B5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5629 000030BA E836450100              	call malloc
  5630 000030BF 50                      	push rax
  5631 000030C0 BF00000000              	mov rdi, 8 * 0	; new rib
  5632 000030C5 E82B450100              	call malloc
  5633 000030CA 50                      	push rax
  5634 000030CB BF08000000              	mov rdi, 8 * 1	; extended env
  5635 000030D0 E820450100              	call malloc
  5636 000030D5 488B7D10                	mov rdi, ENV
  5637 000030D9 BE00000000              	mov rsi, 0
  5638 000030DE BA01000000              	mov rdx, 1
  5639                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5640 000030E3 4883FE00                	cmp rsi, 0
  5641 000030E7 7410                    	je .L_lambda_simple_env_end_0022
  5642 000030E9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5643 000030ED 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5644 000030F1 48FFC6                  	inc rsi
  5645 000030F4 48FFC2                  	inc rdx
  5646 000030F7 EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5647                                  .L_lambda_simple_env_end_0022:
  5648 000030F9 5B                      	pop rbx
  5649 000030FA BE00000000              	mov rsi, 0
  5650                                  .L_lambda_simple_params_loop_0022:	; copy params
  5651 000030FF 4883FE00                	cmp rsi, 0
  5652 00003103 740E                    	je .L_lambda_simple_params_end_0022
  5653 00003105 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5654 0000310A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5655 0000310E 48FFC6                  	inc rsi
  5656 00003111 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5657                                  .L_lambda_simple_params_end_0022:
  5658 00003113 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5659 00003116 4889C3                  	mov rbx, rax
  5660 00003119 58                      	pop rax
  5661 0000311A C60004                  	mov byte [rax], T_closure
  5662 0000311D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5663 00003121 48C74009[2E310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5664 00003129 E92E040000              	jmp .L_lambda_simple_end_0022
  5665                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5666 0000312E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5667 00003134 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5668 00003136 FF742410                	push qword [rsp + 8 * 2]
  5669 0000313A 6A01                    	push 1
  5670 0000313C E96D440100              	jmp L_error_incorrect_arity_simple
  5671                                  .L_lambda_simple_arity_check_ok_0022:
  5672 00003141 C8000000                	enter 0, 0
  5673 00003145 BF08000000              	mov rdi, 8*1
  5674 0000314A E8A6440100              	call malloc
  5675 0000314F 488B5D20                	mov rbx, PARAM(0)
  5676 00003153 488918                  	mov qword [rax], rbx
  5677 00003156 48894520                	mov PARAM(0), rax
  5678 0000315A 48B8-                   	mov rax, sob_void
  5678 0000315C [0000000000000000] 
  5679                                  
  5680 00003164 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5681 00003169 E887440100              	call malloc
  5682 0000316E 50                      	push rax
  5683 0000316F BF08000000              	mov rdi, 8 * 1	; new rib
  5684 00003174 E87C440100              	call malloc
  5685 00003179 50                      	push rax
  5686 0000317A BF10000000              	mov rdi, 8 * 2	; extended env
  5687 0000317F E871440100              	call malloc
  5688 00003184 488B7D10                	mov rdi, ENV
  5689 00003188 BE00000000              	mov rsi, 0
  5690 0000318D BA01000000              	mov rdx, 1
  5691                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5692 00003192 4883FE01                	cmp rsi, 1
  5693 00003196 7410                    	je .L_lambda_simple_env_end_0023
  5694 00003198 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5695 0000319C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5696 000031A0 48FFC6                  	inc rsi
  5697 000031A3 48FFC2                  	inc rdx
  5698 000031A6 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5699                                  .L_lambda_simple_env_end_0023:
  5700 000031A8 5B                      	pop rbx
  5701 000031A9 BE00000000              	mov rsi, 0
  5702                                  .L_lambda_simple_params_loop_0023:	; copy params
  5703 000031AE 4883FE01                	cmp rsi, 1
  5704 000031B2 740E                    	je .L_lambda_simple_params_end_0023
  5705 000031B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5706 000031B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5707 000031BD 48FFC6                  	inc rsi
  5708 000031C0 EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5709                                  .L_lambda_simple_params_end_0023:
  5710 000031C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5711 000031C5 4889C3                  	mov rbx, rax
  5712 000031C8 58                      	pop rax
  5713 000031C9 C60004                  	mov byte [rax], T_closure
  5714 000031CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5715 000031D0 48C74009[DD310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5716 000031D8 E929010000              	jmp .L_lambda_simple_end_0023
  5717                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5718 000031DD 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5719 000031E3 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5720 000031E5 FF742410                	push qword [rsp + 8 * 2]
  5721 000031E9 6A02                    	push 2
  5722 000031EB E9BE430100              	jmp L_error_incorrect_arity_simple
  5723                                  .L_lambda_simple_arity_check_ok_0023:
  5724 000031F0 C8000000                	enter 0, 0
  5725                                  	; preparing a non-tail-call
  5726 000031F4 488B4528                	mov rax, PARAM(1)	; param s
  5727 000031F8 50                      	push rax
  5728 000031F9 6A01                    	push 1	; arg count
  5729 000031FB 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5730 00003203 803805                  	cmp byte [rax], T_undefined
  5731 00003206 0F84BC420100            	je L_error_fvar_undefined
  5732 0000320C 803804                  	cmp byte [rax], T_closure
  5733 0000320F 0F8537430100            	jne L_error_non_closure
  5734 00003215 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5735 00003218 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5736 0000321B 483D[02000000]          	cmp rax, sob_boolean_false
  5737 00003221 0F84D7000000            	je .L_if_else_0004
  5738                                  	; preparing a tail-call
  5739                                  	; preparing a non-tail-call
  5740                                  	; preparing a non-tail-call
  5741 00003227 488B4528                	mov rax, PARAM(1)	; param s
  5742 0000322B 50                      	push rax
  5743 0000322C 6A01                    	push 1	; arg count
  5744 0000322E 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5745 00003236 803805                  	cmp byte [rax], T_undefined
  5746 00003239 0F8489420100            	je L_error_fvar_undefined
  5747 0000323F 803804                  	cmp byte [rax], T_closure
  5748 00003242 0F8504430100            	jne L_error_non_closure
  5749 00003248 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5750 0000324B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5751 0000324E 50                      	push rax
  5752                                  	; preparing a non-tail-call
  5753 0000324F 488B4528                	mov rax, PARAM(1)	; param s
  5754 00003253 50                      	push rax
  5755 00003254 6A01                    	push 1	; arg count
  5756 00003256 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5757 0000325E 803805                  	cmp byte [rax], T_undefined
  5758 00003261 0F8461420100            	je L_error_fvar_undefined
  5759 00003267 803804                  	cmp byte [rax], T_closure
  5760 0000326A 0F85DC420100            	jne L_error_non_closure
  5761 00003270 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5762 00003273 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5763 00003276 50                      	push rax
  5764 00003277 6A02                    	push 2	; arg count
  5765 00003279 488B4510                	mov rax, ENV
  5766 0000327D 488B00                  	mov rax, qword [rax + 8 * 0]
  5767 00003280 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5768 00003283 488B00                  	mov rax, qword [rax]
  5769 00003286 803804                  	cmp byte [rax], T_closure
  5770 00003289 0F85BD420100            	jne L_error_non_closure
  5771 0000328F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5772 00003292 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5773 00003295 50                      	push rax
  5774 00003296 488B4520                	mov rax, PARAM(0)	; param a
  5775 0000329A 50                      	push rax
  5776 0000329B 6A02                    	push 2	; arg count
  5777 0000329D 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5778 000032A5 803805                  	cmp byte [rax], T_undefined
  5779 000032A8 0F841A420100            	je L_error_fvar_undefined
  5780 000032AE 803804                  	cmp byte [rax], T_closure
  5781 000032B1 0F8595420100            	jne L_error_non_closure
  5782 000032B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5783 000032BA FF7508                  	push qword [rbp + 8 * 1]
  5784                                   ; old ret addr
  5785 000032BD FF7500                  	push qword [rbp]
  5786                                   ; restore the old rbp
  5787 000032C0 BB02000000              	mov rbx, 2
  5788 000032C5 4883C303                	add rbx, 3
  5789 000032C9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5790 000032CD 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5791 000032D2 4C8D4DF8                	lea r9, [rbp - 8]
  5792 000032D6 B906000000              	mov rcx, 6
  5793                                  .L_tc_recycle_frame_loop_0021:
  5794 000032DB 4883F900                	cmp rcx, 0
  5795 000032DF 7413                    	je .L_tc_recycle_frame_done_0021
  5796 000032E1 4D8B11                  	mov r10, qword [r9]
  5797 000032E4 4D8910                  	mov qword [r8], r10
  5798 000032E7 4983E808                	sub r8, 8
  5799 000032EB 4983E908                	sub r9, 8
  5800 000032EF 48FFC9                  	dec rcx
  5801 000032F2 EBE7                    	jmp .L_tc_recycle_frame_loop_0021
  5802                                  .L_tc_recycle_frame_done_0021:
  5803 000032F4 498D6008                	lea rsp, [r8 + 8]
  5804 000032F8 5D                      	pop rbp ; restore the old rbp
  5805 000032F9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5806 000032FC EB04                    	jmp .L_if_end_0004
  5807                                  .L_if_else_0004:
  5808 000032FE 488B4520                	mov rax, PARAM(0)	; param a
  5809                                  .L_if_end_0004:
  5810 00003302 C9                      	leave
  5811 00003303 C22000                  	ret AND_KILL_FRAME(2)
  5812                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5813 00003306 50                      	push rax
  5814 00003307 488B4520                	mov rax, PARAM(0)	; param run
  5815 0000330B 8F00                    	pop qword [rax]
  5816 0000330D 48B8-                   	mov rax, sob_void
  5816 0000330F [0000000000000000] 
  5817                                  
  5818 00003317 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5819 0000331C E8D4420100              	call malloc
  5820 00003321 50                      	push rax
  5821 00003322 BF08000000              	mov rdi, 8 * 1	; new rib
  5822 00003327 E8C9420100              	call malloc
  5823 0000332C 50                      	push rax
  5824 0000332D BF10000000              	mov rdi, 8 * 2	; extended env
  5825 00003332 E8BE420100              	call malloc
  5826 00003337 488B7D10                	mov rdi, ENV
  5827 0000333B 4831F6                  	 xor rsi, rsi
  5828 0000333E 4831D2                  	 xor rdx, rdx
  5829 00003341 48FFC2                  	inc rdx
  5830                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5831 00003344 4883FE01                	cmp rsi, 1
  5832 00003348 7410                    	je .L_lambda_opt_env_end_0003
  5833 0000334A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5834 0000334E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5835 00003352 48FFC6                  	inc rsi
  5836 00003355 48FFC2                  	inc rdx
  5837 00003358 EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5838                                  .L_lambda_opt_env_end_0003:
  5839 0000335A 5B                      	pop rbx
  5840 0000335B 4831F6                  	xor rsi, rsi
  5841                                  .L_lambda_opt_params_loop_0003:	; copy params
  5842 0000335E 4883FE01                	cmp rsi, 1
  5843 00003362 740E                    	je .L_lambda_opt_params_end_0003
  5844 00003364 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5845 00003369 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5846 0000336D 48FFC6                  	inc rsi
  5847 00003370 EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5848                                  .L_lambda_opt_params_end_0003:
  5849 00003372 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5850 00003375 4889C3                  	mov rbx, rax
  5851 00003378 58                      	pop rax
  5852 00003379 C60004                  	mov byte [rax], T_closure
  5853 0000337C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5854 00003380 48C74009[8D330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5855 00003388 E9CB010000              	jmp .L_lambda_opt_end_0003
  5856                                  .L_lambda_opt_code_0003:; lambda opt body
  5857 0000338D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5858 00003393 7409                    	je .L_lambda_opt_arity_check_exact_0003
  5859 00003395 7F57                    	jg .L_lambda_opt_arity_check_more_0003
  5860 00003397 6A01                    	push 1
  5861 00003399 E924420100              	jmp L_error_incorrect_arity_opt
  5862                                  .L_lambda_opt_arity_check_exact_0003:
  5863 0000339E 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  5864 000033A2 4C894C24F8              	mov qword [rsp -8], r9
  5865 000033A7 4C8B4C2408              	mov r9, qword [rsp +8]
  5866 000033AC 4C890C24                	mov qword [rsp +8 * 0], r9
  5867 000033B0 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  5868 000033B5 4C89C9                  	mov rcx, r9
  5869 000033B8 49FFC1                  	inc r9
  5870 000033BB 4C894C2408              	mov qword [rsp +8], r9
  5871 000033C0 4889E2                  	mov rdx, rsp
  5872 000033C3 4883C218                	add rdx, 24
  5873                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0003:
  5874 000033C7 4883F900                	cmp rcx, 0
  5875 000033CB 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0003
  5876 000033CD 4C8B02                  	mov r8, qword [rdx]
  5877 000033D0 4C8942F8                	mov qword [rdx - 8], r8
  5878 000033D4 4883C208                	add rdx, 8
  5879 000033D8 48FFC9                  	dec rcx
  5880 000033DB EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0003
  5881                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0003:
  5882 000033DD 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5883 000033E5 4883EC08                	sub rsp, 8
  5884 000033E9 E984000000              	jmp .L_lambda_opt_stack_adjusted_0003
  5885                                  .L_lambda_opt_arity_check_more_0003:
  5886 000033EE 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5887 000033F3 4D89C4                  	mov r12, r8
  5888 000033F6 4C89C1                  	mov rcx, r8
  5889 000033F9 4D8D5002                	lea r10, [r8 + 2] 
  5890 000033FD 4883E901                	sub rcx, 1
  5891 00003401 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  5892 00003406 49B9-                   	mov r9, sob_nil
  5892 00003408 [0100000000000000] 
  5893                                  .L_lambda_opt_create_list_of_opt_params_0003:
  5894 00003410 4883F900                	cmp rcx, 0
  5895 00003414 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0003
  5896 00003416 BF11000000              	mov rdi, 17
  5897 0000341B E8D5410100              	call malloc
  5898 00003420 C60021                  	mov byte [rax], T_pair
  5899 00003423 498B1B                  	mov rbx, qword [r11]
  5900 00003426 48895801                	mov qword [rax +1], rbx
  5901 0000342A 4C894809                	mov qword [rax + 1 + 8], r9
  5902 0000342E 4989C1                  	mov r9, rax
  5903 00003431 48FFC9                  	dec rcx
  5904 00003434 4983EB08                	sub r11, 8
  5905 00003438 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0003
  5906                                  .L_lambda_opt_create_list_of_opt_params_end_0003:
  5907 0000343A 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  5908 0000343F 4D8908                  	mov qword [r8], r9
  5909 00003442 4E8D14D500000000        	lea r10, [8 * r10]
  5910 0000344A 4901E2                  	add r10, rsp
  5911 0000344D B905000000              	mov rcx, 4 + 1
  5912                                  .L_lambda_opt_stack_shrink_loop_0003:
  5913 00003452 4883F900                	cmp rcx, 0
  5914 00003456 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0003
  5915 00003458 4D8B18                  	mov r11, qword [r8]
  5916 0000345B 4D891A                  	mov qword [r10], r11
  5917 0000345E 4983E808                	sub r8, 8
  5918 00003462 4983EA08                	sub r10, 8
  5919 00003466 48FFC9                  	dec rcx
  5920 00003469 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5921                                  .L_lambda_opt_stack_shrink_loop_exit_0003:
  5922 0000346B 4983C208                	add r10, 8
  5923 0000346F 4C89D4                  	mov rsp, r10
  5924                                  .L_lambda_opt_stack_adjusted_0003:;continue with the code, the stack is ok
  5925 00003472 48C744241002000000      	mov qword [rsp + 8*2], 2
  5926 0000347B C8000000                	enter 0, 0
  5927                                  	; preparing a tail-call
  5928                                  	; preparing a non-tail-call
  5929                                  	; preparing a non-tail-call
  5930 0000347F 488B4528                	mov rax, PARAM(1)	; param s
  5931 00003483 50                      	push rax
  5932 00003484 6A01                    	push 1	; arg count
  5933 00003486 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5934 0000348E 803805                  	cmp byte [rax], T_undefined
  5935 00003491 0F8431400100            	je L_error_fvar_undefined
  5936 00003497 803804                  	cmp byte [rax], T_closure
  5937 0000349A 0F85AC400100            	jne L_error_non_closure
  5938 000034A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5939 000034A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5940 000034A6 50                      	push rax
  5941                                  	; preparing a non-tail-call
  5942 000034A7 488B4528                	mov rax, PARAM(1)	; param s
  5943 000034AB 50                      	push rax
  5944 000034AC 6A01                    	push 1	; arg count
  5945 000034AE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5946 000034B6 803805                  	cmp byte [rax], T_undefined
  5947 000034B9 0F8409400100            	je L_error_fvar_undefined
  5948 000034BF 803804                  	cmp byte [rax], T_closure
  5949 000034C2 0F8584400100            	jne L_error_non_closure
  5950 000034C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5951 000034CB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5952 000034CE 50                      	push rax
  5953 000034CF 6A02                    	push 2	; arg count
  5954 000034D1 488B4510                	mov rax, ENV
  5955 000034D5 488B00                  	mov rax, qword [rax + 8 * 0]
  5956 000034D8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5957 000034DB 488B00                  	mov rax, qword [rax]
  5958 000034DE 803804                  	cmp byte [rax], T_closure
  5959 000034E1 0F8565400100            	jne L_error_non_closure
  5960 000034E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5961 000034EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5962 000034ED 50                      	push rax
  5963 000034EE 488B4520                	mov rax, PARAM(0)	; param f
  5964 000034F2 50                      	push rax
  5965 000034F3 6A02                    	push 2	; arg count
  5966 000034F5 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5967 000034FD 803805                  	cmp byte [rax], T_undefined
  5968 00003500 0F84C23F0100            	je L_error_fvar_undefined
  5969 00003506 803804                  	cmp byte [rax], T_closure
  5970 00003509 0F853D400100            	jne L_error_non_closure
  5971 0000350F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5972 00003512 FF7508                  	push qword [rbp + 8 * 1]
  5973                                   ; old ret addr
  5974 00003515 FF7500                  	push qword [rbp]
  5975                                   ; restore the old rbp
  5976 00003518 BB02000000              	mov rbx, 2
  5977 0000351D 4883C303                	add rbx, 3
  5978 00003521 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5979 00003525 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5980 0000352A 4C8D4DF8                	lea r9, [rbp - 8]
  5981 0000352E B906000000              	mov rcx, 6
  5982                                  .L_tc_recycle_frame_loop_0022:
  5983 00003533 4883F900                	cmp rcx, 0
  5984 00003537 7413                    	je .L_tc_recycle_frame_done_0022
  5985 00003539 4D8B11                  	mov r10, qword [r9]
  5986 0000353C 4D8910                  	mov qword [r8], r10
  5987 0000353F 4983E808                	sub r8, 8
  5988 00003543 4983E908                	sub r9, 8
  5989 00003547 48FFC9                  	dec rcx
  5990 0000354A EBE7                    	jmp .L_tc_recycle_frame_loop_0022
  5991                                  .L_tc_recycle_frame_done_0022:
  5992 0000354C 498D6008                	lea rsp, [r8 + 8]
  5993 00003550 5D                      	pop rbp ; restore the old rbp
  5994 00003551 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5995 00003554 C9                      	leave
  5996 00003555 C22000                  	ret 8 * (2 + 2)
  5997                                  .L_lambda_opt_end_0003:	; new closure is in rax
  5998 00003558 C9                      	leave
  5999 00003559 C21800                  	ret AND_KILL_FRAME(1)
  6000                                  .L_lambda_simple_end_0022:	; new closure is in rax
  6001 0000355C 803804                  	cmp byte [rax], T_closure
  6002 0000355F 0F85E73F0100            	jne L_error_non_closure
  6003 00003565 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6004 00003568 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6005 0000356B 48890425[F60F0000]      	mov qword [free_var_33], rax
  6006 00003573 48B8-                   	mov rax, sob_void
  6006 00003575 [0000000000000000] 
  6007                                  
  6008 0000357D 4889C7                  	mov rdi, rax
  6009 00003580 E8C5420100              	call print_sexpr_if_not_void
  6010 00003585 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6011 0000358A E866400100              	call malloc
  6012 0000358F 50                      	push rax
  6013 00003590 BF00000000              	mov rdi, 8 * 0	; new rib
  6014 00003595 E85B400100              	call malloc
  6015 0000359A 50                      	push rax
  6016 0000359B BF08000000              	mov rdi, 8 * 1	; extended env
  6017 000035A0 E850400100              	call malloc
  6018 000035A5 488B7D10                	mov rdi, ENV
  6019 000035A9 4831F6                  	 xor rsi, rsi
  6020 000035AC 4831D2                  	 xor rdx, rdx
  6021 000035AF 48FFC2                  	inc rdx
  6022                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  6023 000035B2 4883FE00                	cmp rsi, 0
  6024 000035B6 7410                    	je .L_lambda_opt_env_end_0004
  6025 000035B8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6026 000035BC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6027 000035C0 48FFC6                  	inc rsi
  6028 000035C3 48FFC2                  	inc rdx
  6029 000035C6 EBEA                    	jmp .L_lambda_opt_env_loop_0004
  6030                                  .L_lambda_opt_env_end_0004:
  6031 000035C8 5B                      	pop rbx
  6032 000035C9 4831F6                  	xor rsi, rsi
  6033                                  .L_lambda_opt_params_loop_0004:	; copy params
  6034 000035CC 4883FE00                	cmp rsi, 0
  6035 000035D0 740E                    	je .L_lambda_opt_params_end_0004
  6036 000035D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6037 000035D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6038 000035DB 48FFC6                  	inc rsi
  6039 000035DE EBEC                    	jmp .L_lambda_opt_params_loop_0004
  6040                                  .L_lambda_opt_params_end_0004:
  6041 000035E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6042 000035E3 4889C3                  	mov rbx, rax
  6043 000035E6 58                      	pop rax
  6044 000035E7 C60004                  	mov byte [rax], T_closure
  6045 000035EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6046 000035EE 48C74009[FB350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  6047 000035F6 E9BB040000              	jmp .L_lambda_opt_end_0004
  6048                                  .L_lambda_opt_code_0004:; lambda opt body
  6049 000035FB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6050 00003601 7409                    	je .L_lambda_opt_arity_check_exact_0004
  6051 00003603 7F57                    	jg .L_lambda_opt_arity_check_more_0004
  6052 00003605 6A01                    	push 1
  6053 00003607 E9B63F0100              	jmp L_error_incorrect_arity_opt
  6054                                  .L_lambda_opt_arity_check_exact_0004:
  6055 0000360C 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  6056 00003610 4C894C24F8              	mov qword [rsp -8], r9
  6057 00003615 4C8B4C2408              	mov r9, qword [rsp +8]
  6058 0000361A 4C890C24                	mov qword [rsp +8 * 0], r9
  6059 0000361E 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  6060 00003623 4C89C9                  	mov rcx, r9
  6061 00003626 49FFC1                  	inc r9
  6062 00003629 4C894C2408              	mov qword [rsp +8], r9
  6063 0000362E 4889E2                  	mov rdx, rsp
  6064 00003631 4883C218                	add rdx, 24
  6065                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0004:
  6066 00003635 4883F900                	cmp rcx, 0
  6067 00003639 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0004
  6068 0000363B 4C8B02                  	mov r8, qword [rdx]
  6069 0000363E 4C8942F8                	mov qword [rdx - 8], r8
  6070 00003642 4883C208                	add rdx, 8
  6071 00003646 48FFC9                  	dec rcx
  6072 00003649 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0004
  6073                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0004:
  6074 0000364B 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  6075 00003653 4883EC08                	sub rsp, 8
  6076 00003657 E984000000              	jmp .L_lambda_opt_stack_adjusted_0004
  6077                                  .L_lambda_opt_arity_check_more_0004:
  6078 0000365C 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6079 00003661 4D89C4                  	mov r12, r8
  6080 00003664 4C89C1                  	mov rcx, r8
  6081 00003667 4D8D5002                	lea r10, [r8 + 2] 
  6082 0000366B 4883E901                	sub rcx, 1
  6083 0000366F 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  6084 00003674 49B9-                   	mov r9, sob_nil
  6084 00003676 [0100000000000000] 
  6085                                  .L_lambda_opt_create_list_of_opt_params_0004:
  6086 0000367E 4883F900                	cmp rcx, 0
  6087 00003682 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0004
  6088 00003684 BF11000000              	mov rdi, 17
  6089 00003689 E8673F0100              	call malloc
  6090 0000368E C60021                  	mov byte [rax], T_pair
  6091 00003691 498B1B                  	mov rbx, qword [r11]
  6092 00003694 48895801                	mov qword [rax +1], rbx
  6093 00003698 4C894809                	mov qword [rax + 1 + 8], r9
  6094 0000369C 4989C1                  	mov r9, rax
  6095 0000369F 48FFC9                  	dec rcx
  6096 000036A2 4983EB08                	sub r11, 8
  6097 000036A6 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0004
  6098                                  .L_lambda_opt_create_list_of_opt_params_end_0004:
  6099 000036A8 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  6100 000036AD 4D8908                  	mov qword [r8], r9
  6101 000036B0 4E8D14D500000000        	lea r10, [8 * r10]
  6102 000036B8 4901E2                  	add r10, rsp
  6103 000036BB B905000000              	mov rcx, 4 + 1
  6104                                  .L_lambda_opt_stack_shrink_loop_0004:
  6105 000036C0 4883F900                	cmp rcx, 0
  6106 000036C4 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0004
  6107 000036C6 4D8B18                  	mov r11, qword [r8]
  6108 000036C9 4D891A                  	mov qword [r10], r11
  6109 000036CC 4983E808                	sub r8, 8
  6110 000036D0 4983EA08                	sub r10, 8
  6111 000036D4 48FFC9                  	dec rcx
  6112 000036D7 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6113                                  .L_lambda_opt_stack_shrink_loop_exit_0004:
  6114 000036D9 4983C208                	add r10, 8
  6115 000036DD 4C89D4                  	mov rsp, r10
  6116                                  .L_lambda_opt_stack_adjusted_0004:;continue with the code, the stack is ok
  6117 000036E0 48C744241002000000      	mov qword [rsp + 8*2], 2
  6118 000036E9 C8000000                	enter 0, 0
  6119                                  	; preparing a tail-call
  6120 000036ED 48B8-                   	mov rax, L_constants + 1993
  6120 000036EF [C907000000000000] 
  6121 000036F7 50                      	push rax
  6122 000036F8 6A01                    	push 1	; arg count
  6123 000036FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6124 000036FF E8F13E0100              	call malloc
  6125 00003704 50                      	push rax
  6126 00003705 BF10000000              	mov rdi, 8 * 2	; new rib
  6127 0000370A E8E63E0100              	call malloc
  6128 0000370F 50                      	push rax
  6129 00003710 BF10000000              	mov rdi, 8 * 2	; extended env
  6130 00003715 E8DB3E0100              	call malloc
  6131 0000371A 488B7D10                	mov rdi, ENV
  6132 0000371E BE00000000              	mov rsi, 0
  6133 00003723 BA01000000              	mov rdx, 1
  6134                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  6135 00003728 4883FE01                	cmp rsi, 1
  6136 0000372C 7410                    	je .L_lambda_simple_env_end_0024
  6137 0000372E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6138 00003732 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6139 00003736 48FFC6                  	inc rsi
  6140 00003739 48FFC2                  	inc rdx
  6141 0000373C EBEA                    	jmp .L_lambda_simple_env_loop_0024
  6142                                  .L_lambda_simple_env_end_0024:
  6143 0000373E 5B                      	pop rbx
  6144 0000373F BE00000000              	mov rsi, 0
  6145                                  .L_lambda_simple_params_loop_0024:	; copy params
  6146 00003744 4883FE02                	cmp rsi, 2
  6147 00003748 740E                    	je .L_lambda_simple_params_end_0024
  6148 0000374A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6149 0000374F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6150 00003753 48FFC6                  	inc rsi
  6151 00003756 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  6152                                  .L_lambda_simple_params_end_0024:
  6153 00003758 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6154 0000375B 4889C3                  	mov rbx, rax
  6155 0000375E 58                      	pop rax
  6156 0000375F C60004                  	mov byte [rax], T_closure
  6157 00003762 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6158 00003766 48C74009[73370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  6159 0000376E E9F1020000              	jmp .L_lambda_simple_end_0024
  6160                                  .L_lambda_simple_code_0024:	; lambda-simple body
  6161 00003773 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6162 00003779 740B                    	je .L_lambda_simple_arity_check_ok_0024
  6163 0000377B FF742410                	push qword [rsp + 8 * 2]
  6164 0000377F 6A01                    	push 1
  6165 00003781 E9283E0100              	jmp L_error_incorrect_arity_simple
  6166                                  .L_lambda_simple_arity_check_ok_0024:
  6167 00003786 C8000000                	enter 0, 0
  6168 0000378A BF08000000              	mov rdi, 8*1
  6169 0000378F E8613E0100              	call malloc
  6170 00003794 488B5D20                	mov rbx, PARAM(0)
  6171 00003798 488918                  	mov qword [rax], rbx
  6172 0000379B 48894520                	mov PARAM(0), rax
  6173 0000379F 48B8-                   	mov rax, sob_void
  6173 000037A1 [0000000000000000] 
  6174                                  
  6175 000037A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6176 000037AE E8423E0100              	call malloc
  6177 000037B3 50                      	push rax
  6178 000037B4 BF08000000              	mov rdi, 8 * 1	; new rib
  6179 000037B9 E8373E0100              	call malloc
  6180 000037BE 50                      	push rax
  6181 000037BF BF18000000              	mov rdi, 8 * 3	; extended env
  6182 000037C4 E82C3E0100              	call malloc
  6183 000037C9 488B7D10                	mov rdi, ENV
  6184 000037CD BE00000000              	mov rsi, 0
  6185 000037D2 BA01000000              	mov rdx, 1
  6186                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  6187 000037D7 4883FE02                	cmp rsi, 2
  6188 000037DB 7410                    	je .L_lambda_simple_env_end_0025
  6189 000037DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6190 000037E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6191 000037E5 48FFC6                  	inc rsi
  6192 000037E8 48FFC2                  	inc rdx
  6193 000037EB EBEA                    	jmp .L_lambda_simple_env_loop_0025
  6194                                  .L_lambda_simple_env_end_0025:
  6195 000037ED 5B                      	pop rbx
  6196 000037EE BE00000000              	mov rsi, 0
  6197                                  .L_lambda_simple_params_loop_0025:	; copy params
  6198 000037F3 4883FE01                	cmp rsi, 1
  6199 000037F7 740E                    	je .L_lambda_simple_params_end_0025
  6200 000037F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6201 000037FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6202 00003802 48FFC6                  	inc rsi
  6203 00003805 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  6204                                  .L_lambda_simple_params_end_0025:
  6205 00003807 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6206 0000380A 4889C3                  	mov rbx, rax
  6207 0000380D 58                      	pop rax
  6208 0000380E C60004                  	mov byte [rax], T_closure
  6209 00003811 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6210 00003815 48C74009[22380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  6211 0000381D E988010000              	jmp .L_lambda_simple_end_0025
  6212                                  .L_lambda_simple_code_0025:	; lambda-simple body
  6213 00003822 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6214 00003828 740B                    	je .L_lambda_simple_arity_check_ok_0025
  6215 0000382A FF742410                	push qword [rsp + 8 * 2]
  6216 0000382E 6A01                    	push 1
  6217 00003830 E9793D0100              	jmp L_error_incorrect_arity_simple
  6218                                  .L_lambda_simple_arity_check_ok_0025:
  6219 00003835 C8000000                	enter 0, 0
  6220                                  	; preparing a non-tail-call
  6221                                  	; preparing a non-tail-call
  6222 00003839 488B4520                	mov rax, PARAM(0)	; param s
  6223 0000383D 50                      	push rax
  6224 0000383E 6A01                    	push 1	; arg count
  6225 00003840 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6226 00003848 803805                  	cmp byte [rax], T_undefined
  6227 0000384B 0F84773C0100            	je L_error_fvar_undefined
  6228 00003851 803804                  	cmp byte [rax], T_closure
  6229 00003854 0F85F23C0100            	jne L_error_non_closure
  6230 0000385A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6231 0000385D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6232 00003860 50                      	push rax
  6233 00003861 6A01                    	push 1	; arg count
  6234 00003863 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6235 0000386B 803805                  	cmp byte [rax], T_undefined
  6236 0000386E 0F84543C0100            	je L_error_fvar_undefined
  6237 00003874 803804                  	cmp byte [rax], T_closure
  6238 00003877 0F85CF3C0100            	jne L_error_non_closure
  6239 0000387D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6240 00003880 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6241 00003883 483D[02000000]          	cmp rax, sob_boolean_false
  6242 00003889 0F840D010000            	je .L_if_else_0005
  6243                                  	; preparing a non-tail-call
  6244                                  	; preparing a non-tail-call
  6245 0000388F 488B4520                	mov rax, PARAM(0)	; param s
  6246 00003893 50                      	push rax
  6247 00003894 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6248 0000389C 803805                  	cmp byte [rax], T_undefined
  6249 0000389F 0F84233C0100            	je L_error_fvar_undefined
  6250 000038A5 50                      	push rax
  6251 000038A6 6A02                    	push 2	; arg count
  6252 000038A8 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6253 000038B0 803805                  	cmp byte [rax], T_undefined
  6254 000038B3 0F840F3C0100            	je L_error_fvar_undefined
  6255 000038B9 803804                  	cmp byte [rax], T_closure
  6256 000038BC 0F858A3C0100            	jne L_error_non_closure
  6257 000038C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6258 000038C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6259 000038C8 50                      	push rax
  6260 000038C9 488B4510                	mov rax, ENV
  6261 000038CD 488B4008                	mov rax, qword [rax + 8 * 1]
  6262 000038D1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6263 000038D4 50                      	push rax
  6264 000038D5 6A02                    	push 2	; arg count
  6265 000038D7 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6266 000038DF 803805                  	cmp byte [rax], T_undefined
  6267 000038E2 0F84E03B0100            	je L_error_fvar_undefined
  6268 000038E8 803804                  	cmp byte [rax], T_closure
  6269 000038EB 0F855B3C0100            	jne L_error_non_closure
  6270 000038F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6271 000038F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6272 000038F7 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  6273 000038FD 0F8597000000            	jne .L_or_end_0003; if its not false (true) then we need to return it and not the last element
  6274                                  	; preparing a tail-call
  6275                                  	; preparing a non-tail-call
  6276 00003903 488B4520                	mov rax, PARAM(0)	; param s
  6277 00003907 50                      	push rax
  6278 00003908 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6279 00003910 803805                  	cmp byte [rax], T_undefined
  6280 00003913 0F84AF3B0100            	je L_error_fvar_undefined
  6281 00003919 50                      	push rax
  6282 0000391A 6A02                    	push 2	; arg count
  6283 0000391C 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6284 00003924 803805                  	cmp byte [rax], T_undefined
  6285 00003927 0F849B3B0100            	je L_error_fvar_undefined
  6286 0000392D 803804                  	cmp byte [rax], T_closure
  6287 00003930 0F85163C0100            	jne L_error_non_closure
  6288 00003936 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6289 00003939 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6290 0000393C 50                      	push rax
  6291 0000393D 6A01                    	push 1	; arg count
  6292 0000393F 488B4510                	mov rax, ENV
  6293 00003943 488B00                  	mov rax, qword [rax + 8 * 0]
  6294 00003946 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6295 00003949 488B00                  	mov rax, qword [rax]
  6296 0000394C 803804                  	cmp byte [rax], T_closure
  6297 0000394F 0F85F73B0100            	jne L_error_non_closure
  6298 00003955 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6299 00003958 FF7508                  	push qword [rbp + 8 * 1]
  6300                                   ; old ret addr
  6301 0000395B FF7500                  	push qword [rbp]
  6302                                   ; restore the old rbp
  6303 0000395E BB01000000              	mov rbx, 1
  6304 00003963 4883C303                	add rbx, 3
  6305 00003967 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6306 0000396B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6307 00003970 4C8D4DF8                	lea r9, [rbp - 8]
  6308 00003974 B905000000              	mov rcx, 5
  6309                                  .L_tc_recycle_frame_loop_0024:
  6310 00003979 4883F900                	cmp rcx, 0
  6311 0000397D 7413                    	je .L_tc_recycle_frame_done_0024
  6312 0000397F 4D8B11                  	mov r10, qword [r9]
  6313 00003982 4D8910                  	mov qword [r8], r10
  6314 00003985 4983E808                	sub r8, 8
  6315 00003989 4983E908                	sub r9, 8
  6316 0000398D 48FFC9                  	dec rcx
  6317 00003990 EBE7                    	jmp .L_tc_recycle_frame_loop_0024
  6318                                  .L_tc_recycle_frame_done_0024:
  6319 00003992 498D6008                	lea rsp, [r8 + 8]
  6320 00003996 5D                      	pop rbp ; restore the old rbp
  6321 00003997 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6322                                  .L_or_end_0003:
  6323 0000399A EB0A                    	jmp .L_if_end_0005
  6324                                  .L_if_else_0005:
  6325 0000399C 48B8-                   	mov rax, L_constants + 2
  6325 0000399E [0200000000000000] 
  6326                                  .L_if_end_0005:
  6327 000039A6 C9                      	leave
  6328 000039A7 C21800                  	ret AND_KILL_FRAME(1)
  6329                                  .L_lambda_simple_end_0025:	; new closure is in rax
  6330 000039AA 50                      	push rax
  6331 000039AB 488B4520                	mov rax, PARAM(0)	; param loop
  6332 000039AF 8F00                    	pop qword [rax]
  6333 000039B1 48B8-                   	mov rax, sob_void
  6333 000039B3 [0000000000000000] 
  6334                                  
  6335                                  	; preparing a non-tail-call
  6336 000039BB 488B4510                	mov rax, ENV
  6337 000039BF 488B00                  	mov rax, qword [rax + 8 * 0]
  6338 000039C2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6339 000039C6 50                      	push rax
  6340 000039C7 6A01                    	push 1	; arg count
  6341 000039C9 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6342 000039D1 803805                  	cmp byte [rax], T_undefined
  6343 000039D4 0F84EE3A0100            	je L_error_fvar_undefined
  6344 000039DA 803804                  	cmp byte [rax], T_closure
  6345 000039DD 0F85693B0100            	jne L_error_non_closure
  6346 000039E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6347 000039E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6348 000039E9 483D[02000000]          	cmp rax, sob_boolean_false
  6349 000039EF 7465                    	je .L_if_else_0006
  6350                                  	; preparing a tail-call
  6351 000039F1 488B4510                	mov rax, ENV
  6352 000039F5 488B00                  	mov rax, qword [rax + 8 * 0]
  6353 000039F8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6354 000039FC 50                      	push rax
  6355 000039FD 6A01                    	push 1	; arg count
  6356 000039FF 488B4520                	mov rax, PARAM(0)	; param loop
  6357 00003A03 488B00                  	mov rax, qword [rax]
  6358 00003A06 803804                  	cmp byte [rax], T_closure
  6359 00003A09 0F853D3B0100            	jne L_error_non_closure
  6360 00003A0F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6361 00003A12 FF7508                  	push qword [rbp + 8 * 1]
  6362                                   ; old ret addr
  6363 00003A15 FF7500                  	push qword [rbp]
  6364                                   ; restore the old rbp
  6365 00003A18 BB01000000              	mov rbx, 1
  6366 00003A1D 4883C303                	add rbx, 3
  6367 00003A21 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6368 00003A25 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6369 00003A2A 4C8D4DF8                	lea r9, [rbp - 8]
  6370 00003A2E B905000000              	mov rcx, 5
  6371                                  .L_tc_recycle_frame_loop_0025:
  6372 00003A33 4883F900                	cmp rcx, 0
  6373 00003A37 7413                    	je .L_tc_recycle_frame_done_0025
  6374 00003A39 4D8B11                  	mov r10, qword [r9]
  6375 00003A3C 4D8910                  	mov qword [r8], r10
  6376 00003A3F 4983E808                	sub r8, 8
  6377 00003A43 4983E908                	sub r9, 8
  6378 00003A47 48FFC9                  	dec rcx
  6379 00003A4A EBE7                    	jmp .L_tc_recycle_frame_loop_0025
  6380                                  .L_tc_recycle_frame_done_0025:
  6381 00003A4C 498D6008                	lea rsp, [r8 + 8]
  6382 00003A50 5D                      	pop rbp ; restore the old rbp
  6383 00003A51 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6384 00003A54 EB0A                    	jmp .L_if_end_0006
  6385                                  .L_if_else_0006:
  6386 00003A56 48B8-                   	mov rax, L_constants + 2
  6386 00003A58 [0200000000000000] 
  6387                                  .L_if_end_0006:
  6388 00003A60 C9                      	leave
  6389 00003A61 C21800                  	ret AND_KILL_FRAME(1)
  6390                                  .L_lambda_simple_end_0024:	; new closure is in rax
  6391 00003A64 803804                  	cmp byte [rax], T_closure
  6392 00003A67 0F85DF3A0100            	jne L_error_non_closure
  6393 00003A6D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6394 00003A70 FF7508                  	push qword [rbp + 8 * 1]
  6395                                   ; old ret addr
  6396 00003A73 FF7500                  	push qword [rbp]
  6397                                   ; restore the old rbp
  6398 00003A76 BB01000000              	mov rbx, 1
  6399 00003A7B 4883C303                	add rbx, 3
  6400 00003A7F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6401 00003A83 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6402 00003A88 4C8D4DF8                	lea r9, [rbp - 8]
  6403 00003A8C B905000000              	mov rcx, 5
  6404                                  .L_tc_recycle_frame_loop_0023:
  6405 00003A91 4883F900                	cmp rcx, 0
  6406 00003A95 7413                    	je .L_tc_recycle_frame_done_0023
  6407 00003A97 4D8B11                  	mov r10, qword [r9]
  6408 00003A9A 4D8910                  	mov qword [r8], r10
  6409 00003A9D 4983E808                	sub r8, 8
  6410 00003AA1 4983E908                	sub r9, 8
  6411 00003AA5 48FFC9                  	dec rcx
  6412 00003AA8 EBE7                    	jmp .L_tc_recycle_frame_loop_0023
  6413                                  .L_tc_recycle_frame_done_0023:
  6414 00003AAA 498D6008                	lea rsp, [r8 + 8]
  6415 00003AAE 5D                      	pop rbp ; restore the old rbp
  6416 00003AAF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6417 00003AB2 C9                      	leave
  6418 00003AB3 C22000                  	ret 8 * (2 + 2)
  6419                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6420 00003AB6 48890425[13150000]      	mov qword [free_var_110], rax
  6421 00003ABE 48B8-                   	mov rax, sob_void
  6421 00003AC0 [0000000000000000] 
  6422                                  
  6423 00003AC8 4889C7                  	mov rdi, rax
  6424 00003ACB E87A3D0100              	call print_sexpr_if_not_void
  6425 00003AD0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6426 00003AD5 E81B3B0100              	call malloc
  6427 00003ADA 50                      	push rax
  6428 00003ADB BF00000000              	mov rdi, 8 * 0	; new rib
  6429 00003AE0 E8103B0100              	call malloc
  6430 00003AE5 50                      	push rax
  6431 00003AE6 BF08000000              	mov rdi, 8 * 1	; extended env
  6432 00003AEB E8053B0100              	call malloc
  6433 00003AF0 488B7D10                	mov rdi, ENV
  6434 00003AF4 4831F6                  	 xor rsi, rsi
  6435 00003AF7 4831D2                  	 xor rdx, rdx
  6436 00003AFA 48FFC2                  	inc rdx
  6437                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  6438 00003AFD 4883FE00                	cmp rsi, 0
  6439 00003B01 7410                    	je .L_lambda_opt_env_end_0005
  6440 00003B03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6441 00003B07 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6442 00003B0B 48FFC6                  	inc rsi
  6443 00003B0E 48FFC2                  	inc rdx
  6444 00003B11 EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6445                                  .L_lambda_opt_env_end_0005:
  6446 00003B13 5B                      	pop rbx
  6447 00003B14 4831F6                  	xor rsi, rsi
  6448                                  .L_lambda_opt_params_loop_0005:	; copy params
  6449 00003B17 4883FE00                	cmp rsi, 0
  6450 00003B1B 740E                    	je .L_lambda_opt_params_end_0005
  6451 00003B1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6452 00003B22 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6453 00003B26 48FFC6                  	inc rsi
  6454 00003B29 EBEC                    	jmp .L_lambda_opt_params_loop_0005
  6455                                  .L_lambda_opt_params_end_0005:
  6456 00003B2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6457 00003B2E 4889C3                  	mov rbx, rax
  6458 00003B31 58                      	pop rax
  6459 00003B32 C60004                  	mov byte [rax], T_closure
  6460 00003B35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6461 00003B39 48C74009[463B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6462 00003B41 E9F5040000              	jmp .L_lambda_opt_end_0005
  6463                                  .L_lambda_opt_code_0005:; lambda opt body
  6464 00003B46 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6465 00003B4C 7409                    	je .L_lambda_opt_arity_check_exact_0005
  6466 00003B4E 7F57                    	jg .L_lambda_opt_arity_check_more_0005
  6467 00003B50 6A01                    	push 1
  6468 00003B52 E96B3A0100              	jmp L_error_incorrect_arity_opt
  6469                                  .L_lambda_opt_arity_check_exact_0005:
  6470 00003B57 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  6471 00003B5B 4C894C24F8              	mov qword [rsp -8], r9
  6472 00003B60 4C8B4C2408              	mov r9, qword [rsp +8]
  6473 00003B65 4C890C24                	mov qword [rsp +8 * 0], r9
  6474 00003B69 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  6475 00003B6E 4C89C9                  	mov rcx, r9
  6476 00003B71 49FFC1                  	inc r9
  6477 00003B74 4C894C2408              	mov qword [rsp +8], r9
  6478 00003B79 4889E2                  	mov rdx, rsp
  6479 00003B7C 4883C218                	add rdx, 24
  6480                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0005:
  6481 00003B80 4883F900                	cmp rcx, 0
  6482 00003B84 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0005
  6483 00003B86 4C8B02                  	mov r8, qword [rdx]
  6484 00003B89 4C8942F8                	mov qword [rdx - 8], r8
  6485 00003B8D 4883C208                	add rdx, 8
  6486 00003B91 48FFC9                  	dec rcx
  6487 00003B94 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0005
  6488                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0005:
  6489 00003B96 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  6490 00003B9E 4883EC08                	sub rsp, 8
  6491 00003BA2 E984000000              	jmp .L_lambda_opt_stack_adjusted_0005
  6492                                  .L_lambda_opt_arity_check_more_0005:
  6493 00003BA7 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6494 00003BAC 4D89C4                  	mov r12, r8
  6495 00003BAF 4C89C1                  	mov rcx, r8
  6496 00003BB2 4D8D5002                	lea r10, [r8 + 2] 
  6497 00003BB6 4883E901                	sub rcx, 1
  6498 00003BBA 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  6499 00003BBF 49B9-                   	mov r9, sob_nil
  6499 00003BC1 [0100000000000000] 
  6500                                  .L_lambda_opt_create_list_of_opt_params_0005:
  6501 00003BC9 4883F900                	cmp rcx, 0
  6502 00003BCD 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0005
  6503 00003BCF BF11000000              	mov rdi, 17
  6504 00003BD4 E81C3A0100              	call malloc
  6505 00003BD9 C60021                  	mov byte [rax], T_pair
  6506 00003BDC 498B1B                  	mov rbx, qword [r11]
  6507 00003BDF 48895801                	mov qword [rax +1], rbx
  6508 00003BE3 4C894809                	mov qword [rax + 1 + 8], r9
  6509 00003BE7 4989C1                  	mov r9, rax
  6510 00003BEA 48FFC9                  	dec rcx
  6511 00003BED 4983EB08                	sub r11, 8
  6512 00003BF1 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0005
  6513                                  .L_lambda_opt_create_list_of_opt_params_end_0005:
  6514 00003BF3 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  6515 00003BF8 4D8908                  	mov qword [r8], r9
  6516 00003BFB 4E8D14D500000000        	lea r10, [8 * r10]
  6517 00003C03 4901E2                  	add r10, rsp
  6518 00003C06 B905000000              	mov rcx, 4 + 1
  6519                                  .L_lambda_opt_stack_shrink_loop_0005:
  6520 00003C0B 4883F900                	cmp rcx, 0
  6521 00003C0F 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0005
  6522 00003C11 4D8B18                  	mov r11, qword [r8]
  6523 00003C14 4D891A                  	mov qword [r10], r11
  6524 00003C17 4983E808                	sub r8, 8
  6525 00003C1B 4983EA08                	sub r10, 8
  6526 00003C1F 48FFC9                  	dec rcx
  6527 00003C22 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6528                                  .L_lambda_opt_stack_shrink_loop_exit_0005:
  6529 00003C24 4983C208                	add r10, 8
  6530 00003C28 4C89D4                  	mov rsp, r10
  6531                                  .L_lambda_opt_stack_adjusted_0005:;continue with the code, the stack is ok
  6532 00003C2B 48C744241002000000      	mov qword [rsp + 8*2], 2
  6533 00003C34 C8000000                	enter 0, 0
  6534                                  	; preparing a tail-call
  6535 00003C38 48B8-                   	mov rax, L_constants + 1993
  6535 00003C3A [C907000000000000] 
  6536 00003C42 50                      	push rax
  6537 00003C43 6A01                    	push 1	; arg count
  6538 00003C45 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6539 00003C4A E8A6390100              	call malloc
  6540 00003C4F 50                      	push rax
  6541 00003C50 BF10000000              	mov rdi, 8 * 2	; new rib
  6542 00003C55 E89B390100              	call malloc
  6543 00003C5A 50                      	push rax
  6544 00003C5B BF10000000              	mov rdi, 8 * 2	; extended env
  6545 00003C60 E890390100              	call malloc
  6546 00003C65 488B7D10                	mov rdi, ENV
  6547 00003C69 BE00000000              	mov rsi, 0
  6548 00003C6E BA01000000              	mov rdx, 1
  6549                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  6550 00003C73 4883FE01                	cmp rsi, 1
  6551 00003C77 7410                    	je .L_lambda_simple_env_end_0026
  6552 00003C79 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6553 00003C7D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6554 00003C81 48FFC6                  	inc rsi
  6555 00003C84 48FFC2                  	inc rdx
  6556 00003C87 EBEA                    	jmp .L_lambda_simple_env_loop_0026
  6557                                  .L_lambda_simple_env_end_0026:
  6558 00003C89 5B                      	pop rbx
  6559 00003C8A BE00000000              	mov rsi, 0
  6560                                  .L_lambda_simple_params_loop_0026:	; copy params
  6561 00003C8F 4883FE02                	cmp rsi, 2
  6562 00003C93 740E                    	je .L_lambda_simple_params_end_0026
  6563 00003C95 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6564 00003C9A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6565 00003C9E 48FFC6                  	inc rsi
  6566 00003CA1 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6567                                  .L_lambda_simple_params_end_0026:
  6568 00003CA3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6569 00003CA6 4889C3                  	mov rbx, rax
  6570 00003CA9 58                      	pop rax
  6571 00003CAA C60004                  	mov byte [rax], T_closure
  6572 00003CAD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6573 00003CB1 48C74009[BE3C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6574 00003CB9 E92B030000              	jmp .L_lambda_simple_end_0026
  6575                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6576 00003CBE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6577 00003CC4 740B                    	je .L_lambda_simple_arity_check_ok_0026
  6578 00003CC6 FF742410                	push qword [rsp + 8 * 2]
  6579 00003CCA 6A01                    	push 1
  6580 00003CCC E9DD380100              	jmp L_error_incorrect_arity_simple
  6581                                  .L_lambda_simple_arity_check_ok_0026:
  6582 00003CD1 C8000000                	enter 0, 0
  6583 00003CD5 BF08000000              	mov rdi, 8*1
  6584 00003CDA E816390100              	call malloc
  6585 00003CDF 488B5D20                	mov rbx, PARAM(0)
  6586 00003CE3 488918                  	mov qword [rax], rbx
  6587 00003CE6 48894520                	mov PARAM(0), rax
  6588 00003CEA 48B8-                   	mov rax, sob_void
  6588 00003CEC [0000000000000000] 
  6589                                  
  6590 00003CF4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6591 00003CF9 E8F7380100              	call malloc
  6592 00003CFE 50                      	push rax
  6593 00003CFF BF08000000              	mov rdi, 8 * 1	; new rib
  6594 00003D04 E8EC380100              	call malloc
  6595 00003D09 50                      	push rax
  6596 00003D0A BF18000000              	mov rdi, 8 * 3	; extended env
  6597 00003D0F E8E1380100              	call malloc
  6598 00003D14 488B7D10                	mov rdi, ENV
  6599 00003D18 BE00000000              	mov rsi, 0
  6600 00003D1D BA01000000              	mov rdx, 1
  6601                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6602 00003D22 4883FE02                	cmp rsi, 2
  6603 00003D26 7410                    	je .L_lambda_simple_env_end_0027
  6604 00003D28 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6605 00003D2C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6606 00003D30 48FFC6                  	inc rsi
  6607 00003D33 48FFC2                  	inc rdx
  6608 00003D36 EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6609                                  .L_lambda_simple_env_end_0027:
  6610 00003D38 5B                      	pop rbx
  6611 00003D39 BE00000000              	mov rsi, 0
  6612                                  .L_lambda_simple_params_loop_0027:	; copy params
  6613 00003D3E 4883FE01                	cmp rsi, 1
  6614 00003D42 740E                    	je .L_lambda_simple_params_end_0027
  6615 00003D44 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6616 00003D49 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6617 00003D4D 48FFC6                  	inc rsi
  6618 00003D50 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6619                                  .L_lambda_simple_params_end_0027:
  6620 00003D52 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6621 00003D55 4889C3                  	mov rbx, rax
  6622 00003D58 58                      	pop rax
  6623 00003D59 C60004                  	mov byte [rax], T_closure
  6624 00003D5C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6625 00003D60 48C74009[6D3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6626 00003D68 E988010000              	jmp .L_lambda_simple_end_0027
  6627                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6628 00003D6D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6629 00003D73 740B                    	je .L_lambda_simple_arity_check_ok_0027
  6630 00003D75 FF742410                	push qword [rsp + 8 * 2]
  6631 00003D79 6A01                    	push 1
  6632 00003D7B E92E380100              	jmp L_error_incorrect_arity_simple
  6633                                  .L_lambda_simple_arity_check_ok_0027:
  6634 00003D80 C8000000                	enter 0, 0
  6635                                  	; preparing a non-tail-call
  6636                                  	; preparing a non-tail-call
  6637 00003D84 488B4520                	mov rax, PARAM(0)	; param s
  6638 00003D88 50                      	push rax
  6639 00003D89 6A01                    	push 1	; arg count
  6640 00003D8B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6641 00003D93 803805                  	cmp byte [rax], T_undefined
  6642 00003D96 0F842C370100            	je L_error_fvar_undefined
  6643 00003D9C 803804                  	cmp byte [rax], T_closure
  6644 00003D9F 0F85A7370100            	jne L_error_non_closure
  6645 00003DA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6646 00003DA8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6647 00003DAB 50                      	push rax
  6648 00003DAC 6A01                    	push 1	; arg count
  6649 00003DAE 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6650 00003DB6 803805                  	cmp byte [rax], T_undefined
  6651 00003DB9 0F8409370100            	je L_error_fvar_undefined
  6652 00003DBF 803804                  	cmp byte [rax], T_closure
  6653 00003DC2 0F8584370100            	jne L_error_non_closure
  6654 00003DC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6655 00003DCB FF5009                  	call SOB_CLOSURE_CODE(rax)
  6656 00003DCE 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  6657 00003DD4 0F8517010000            	jne .L_or_end_0004; if its not false (true) then we need to return it and not the last element
  6658                                  	; preparing a non-tail-call
  6659                                  	; preparing a non-tail-call
  6660 00003DDA 488B4520                	mov rax, PARAM(0)	; param s
  6661 00003DDE 50                      	push rax
  6662 00003DDF 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6663 00003DE7 803805                  	cmp byte [rax], T_undefined
  6664 00003DEA 0F84D8360100            	je L_error_fvar_undefined
  6665 00003DF0 50                      	push rax
  6666 00003DF1 6A02                    	push 2	; arg count
  6667 00003DF3 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6668 00003DFB 803805                  	cmp byte [rax], T_undefined
  6669 00003DFE 0F84C4360100            	je L_error_fvar_undefined
  6670 00003E04 803804                  	cmp byte [rax], T_closure
  6671 00003E07 0F853F370100            	jne L_error_non_closure
  6672 00003E0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6673 00003E10 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6674 00003E13 50                      	push rax
  6675 00003E14 488B4510                	mov rax, ENV
  6676 00003E18 488B4008                	mov rax, qword [rax + 8 * 1]
  6677 00003E1C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6678 00003E1F 50                      	push rax
  6679 00003E20 6A02                    	push 2	; arg count
  6680 00003E22 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6681 00003E2A 803805                  	cmp byte [rax], T_undefined
  6682 00003E2D 0F8495360100            	je L_error_fvar_undefined
  6683 00003E33 803804                  	cmp byte [rax], T_closure
  6684 00003E36 0F8510370100            	jne L_error_non_closure
  6685 00003E3C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6686 00003E3F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6687 00003E42 483D[02000000]          	cmp rax, sob_boolean_false
  6688 00003E48 0F8499000000            	je .L_if_else_0007
  6689                                  	; preparing a tail-call
  6690                                  	; preparing a non-tail-call
  6691 00003E4E 488B4520                	mov rax, PARAM(0)	; param s
  6692 00003E52 50                      	push rax
  6693 00003E53 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6694 00003E5B 803805                  	cmp byte [rax], T_undefined
  6695 00003E5E 0F8464360100            	je L_error_fvar_undefined
  6696 00003E64 50                      	push rax
  6697 00003E65 6A02                    	push 2	; arg count
  6698 00003E67 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6699 00003E6F 803805                  	cmp byte [rax], T_undefined
  6700 00003E72 0F8450360100            	je L_error_fvar_undefined
  6701 00003E78 803804                  	cmp byte [rax], T_closure
  6702 00003E7B 0F85CB360100            	jne L_error_non_closure
  6703 00003E81 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6704 00003E84 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6705 00003E87 50                      	push rax
  6706 00003E88 6A01                    	push 1	; arg count
  6707 00003E8A 488B4510                	mov rax, ENV
  6708 00003E8E 488B00                  	mov rax, qword [rax + 8 * 0]
  6709 00003E91 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6710 00003E94 488B00                  	mov rax, qword [rax]
  6711 00003E97 803804                  	cmp byte [rax], T_closure
  6712 00003E9A 0F85AC360100            	jne L_error_non_closure
  6713 00003EA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6714 00003EA3 FF7508                  	push qword [rbp + 8 * 1]
  6715                                   ; old ret addr
  6716 00003EA6 FF7500                  	push qword [rbp]
  6717                                   ; restore the old rbp
  6718 00003EA9 BB01000000              	mov rbx, 1
  6719 00003EAE 4883C303                	add rbx, 3
  6720 00003EB2 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6721 00003EB6 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6722 00003EBB 4C8D4DF8                	lea r9, [rbp - 8]
  6723 00003EBF B905000000              	mov rcx, 5
  6724                                  .L_tc_recycle_frame_loop_0027:
  6725 00003EC4 4883F900                	cmp rcx, 0
  6726 00003EC8 7413                    	je .L_tc_recycle_frame_done_0027
  6727 00003ECA 4D8B11                  	mov r10, qword [r9]
  6728 00003ECD 4D8910                  	mov qword [r8], r10
  6729 00003ED0 4983E808                	sub r8, 8
  6730 00003ED4 4983E908                	sub r9, 8
  6731 00003ED8 48FFC9                  	dec rcx
  6732 00003EDB EBE7                    	jmp .L_tc_recycle_frame_loop_0027
  6733                                  .L_tc_recycle_frame_done_0027:
  6734 00003EDD 498D6008                	lea rsp, [r8 + 8]
  6735 00003EE1 5D                      	pop rbp ; restore the old rbp
  6736 00003EE2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6737 00003EE5 EB0A                    	jmp .L_if_end_0007
  6738                                  .L_if_else_0007:
  6739 00003EE7 48B8-                   	mov rax, L_constants + 2
  6739 00003EE9 [0200000000000000] 
  6740                                  .L_if_end_0007:
  6741                                  .L_or_end_0004:
  6742 00003EF1 C9                      	leave
  6743 00003EF2 C21800                  	ret AND_KILL_FRAME(1)
  6744                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6745 00003EF5 50                      	push rax
  6746 00003EF6 488B4520                	mov rax, PARAM(0)	; param loop
  6747 00003EFA 8F00                    	pop qword [rax]
  6748 00003EFC 48B8-                   	mov rax, sob_void
  6748 00003EFE [0000000000000000] 
  6749                                  
  6750                                  	; preparing a non-tail-call
  6751 00003F06 488B4510                	mov rax, ENV
  6752 00003F0A 488B00                  	mov rax, qword [rax + 8 * 0]
  6753 00003F0D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6754 00003F11 50                      	push rax
  6755 00003F12 6A01                    	push 1	; arg count
  6756 00003F14 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6757 00003F1C 803805                  	cmp byte [rax], T_undefined
  6758 00003F1F 0F84A3350100            	je L_error_fvar_undefined
  6759 00003F25 803804                  	cmp byte [rax], T_closure
  6760 00003F28 0F851E360100            	jne L_error_non_closure
  6761 00003F2E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6762 00003F31 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6763 00003F34 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  6764 00003F3A 0F85A5000000            	jne .L_or_end_0005; if its not false (true) then we need to return it and not the last element
  6765                                  	; preparing a non-tail-call
  6766 00003F40 488B4510                	mov rax, ENV
  6767 00003F44 488B00                  	mov rax, qword [rax + 8 * 0]
  6768 00003F47 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6769 00003F4B 50                      	push rax
  6770 00003F4C 6A01                    	push 1	; arg count
  6771 00003F4E 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6772 00003F56 803805                  	cmp byte [rax], T_undefined
  6773 00003F59 0F8469350100            	je L_error_fvar_undefined
  6774 00003F5F 803804                  	cmp byte [rax], T_closure
  6775 00003F62 0F85E4350100            	jne L_error_non_closure
  6776 00003F68 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6777 00003F6B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6778 00003F6E 483D[02000000]          	cmp rax, sob_boolean_false
  6779 00003F74 7465                    	je .L_if_else_0008
  6780                                  	; preparing a tail-call
  6781 00003F76 488B4510                	mov rax, ENV
  6782 00003F7A 488B00                  	mov rax, qword [rax + 8 * 0]
  6783 00003F7D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6784 00003F81 50                      	push rax
  6785 00003F82 6A01                    	push 1	; arg count
  6786 00003F84 488B4520                	mov rax, PARAM(0)	; param loop
  6787 00003F88 488B00                  	mov rax, qword [rax]
  6788 00003F8B 803804                  	cmp byte [rax], T_closure
  6789 00003F8E 0F85B8350100            	jne L_error_non_closure
  6790 00003F94 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6791 00003F97 FF7508                  	push qword [rbp + 8 * 1]
  6792                                   ; old ret addr
  6793 00003F9A FF7500                  	push qword [rbp]
  6794                                   ; restore the old rbp
  6795 00003F9D BB01000000              	mov rbx, 1
  6796 00003FA2 4883C303                	add rbx, 3
  6797 00003FA6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6798 00003FAA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6799 00003FAF 4C8D4DF8                	lea r9, [rbp - 8]
  6800 00003FB3 B905000000              	mov rcx, 5
  6801                                  .L_tc_recycle_frame_loop_0028:
  6802 00003FB8 4883F900                	cmp rcx, 0
  6803 00003FBC 7413                    	je .L_tc_recycle_frame_done_0028
  6804 00003FBE 4D8B11                  	mov r10, qword [r9]
  6805 00003FC1 4D8910                  	mov qword [r8], r10
  6806 00003FC4 4983E808                	sub r8, 8
  6807 00003FC8 4983E908                	sub r9, 8
  6808 00003FCC 48FFC9                  	dec rcx
  6809 00003FCF EBE7                    	jmp .L_tc_recycle_frame_loop_0028
  6810                                  .L_tc_recycle_frame_done_0028:
  6811 00003FD1 498D6008                	lea rsp, [r8 + 8]
  6812 00003FD5 5D                      	pop rbp ; restore the old rbp
  6813 00003FD6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6814 00003FD9 EB0A                    	jmp .L_if_end_0008
  6815                                  .L_if_else_0008:
  6816 00003FDB 48B8-                   	mov rax, L_constants + 2
  6816 00003FDD [0200000000000000] 
  6817                                  .L_if_end_0008:
  6818                                  .L_or_end_0005:
  6819 00003FE5 C9                      	leave
  6820 00003FE6 C21800                  	ret AND_KILL_FRAME(1)
  6821                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6822 00003FE9 803804                  	cmp byte [rax], T_closure
  6823 00003FEC 0F855A350100            	jne L_error_non_closure
  6824 00003FF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6825 00003FF5 FF7508                  	push qword [rbp + 8 * 1]
  6826                                   ; old ret addr
  6827 00003FF8 FF7500                  	push qword [rbp]
  6828                                   ; restore the old rbp
  6829 00003FFB BB01000000              	mov rbx, 1
  6830 00004000 4883C303                	add rbx, 3
  6831 00004004 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6832 00004008 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6833 0000400D 4C8D4DF8                	lea r9, [rbp - 8]
  6834 00004011 B905000000              	mov rcx, 5
  6835                                  .L_tc_recycle_frame_loop_0026:
  6836 00004016 4883F900                	cmp rcx, 0
  6837 0000401A 7413                    	je .L_tc_recycle_frame_done_0026
  6838 0000401C 4D8B11                  	mov r10, qword [r9]
  6839 0000401F 4D8910                  	mov qword [r8], r10
  6840 00004022 4983E808                	sub r8, 8
  6841 00004026 4983E908                	sub r9, 8
  6842 0000402A 48FFC9                  	dec rcx
  6843 0000402D EBE7                    	jmp .L_tc_recycle_frame_loop_0026
  6844                                  .L_tc_recycle_frame_done_0026:
  6845 0000402F 498D6008                	lea rsp, [r8 + 8]
  6846 00004033 5D                      	pop rbp ; restore the old rbp
  6847 00004034 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6848 00004037 C9                      	leave
  6849 00004038 C22000                  	ret 8 * (2 + 2)
  6850                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6851 0000403B 48890425[D40F0000]      	mov qword [free_var_31], rax
  6852 00004043 48B8-                   	mov rax, sob_void
  6852 00004045 [0000000000000000] 
  6853                                  
  6854 0000404D 4889C7                  	mov rdi, rax
  6855 00004050 E8F5370100              	call print_sexpr_if_not_void
  6856                                  	; preparing a non-tail-call
  6857 00004055 48B8-                   	mov rax, L_constants + 1993
  6857 00004057 [C907000000000000] 
  6858 0000405F 50                      	push rax
  6859 00004060 48B8-                   	mov rax, L_constants + 1993
  6859 00004062 [C907000000000000] 
  6860 0000406A 50                      	push rax
  6861 0000406B 6A02                    	push 2	; arg count
  6862 0000406D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6863 00004072 E87E350100              	call malloc
  6864 00004077 50                      	push rax
  6865 00004078 BF00000000              	mov rdi, 8 * 0	; new rib
  6866 0000407D E873350100              	call malloc
  6867 00004082 50                      	push rax
  6868 00004083 BF08000000              	mov rdi, 8 * 1	; extended env
  6869 00004088 E868350100              	call malloc
  6870 0000408D 488B7D10                	mov rdi, ENV
  6871 00004091 BE00000000              	mov rsi, 0
  6872 00004096 BA01000000              	mov rdx, 1
  6873                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6874 0000409B 4883FE00                	cmp rsi, 0
  6875 0000409F 7410                    	je .L_lambda_simple_env_end_0028
  6876 000040A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6877 000040A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6878 000040A9 48FFC6                  	inc rsi
  6879 000040AC 48FFC2                  	inc rdx
  6880 000040AF EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6881                                  .L_lambda_simple_env_end_0028:
  6882 000040B1 5B                      	pop rbx
  6883 000040B2 BE00000000              	mov rsi, 0
  6884                                  .L_lambda_simple_params_loop_0028:	; copy params
  6885 000040B7 4883FE00                	cmp rsi, 0
  6886 000040BB 740E                    	je .L_lambda_simple_params_end_0028
  6887 000040BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6888 000040C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6889 000040C6 48FFC6                  	inc rsi
  6890 000040C9 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6891                                  .L_lambda_simple_params_end_0028:
  6892 000040CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6893 000040CE 4889C3                  	mov rbx, rax
  6894 000040D1 58                      	pop rax
  6895 000040D2 C60004                  	mov byte [rax], T_closure
  6896 000040D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6897 000040D9 48C74009[E6400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6898 000040E1 E956060000              	jmp .L_lambda_simple_end_0028
  6899                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6900 000040E6 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6901 000040EC 740B                    	je .L_lambda_simple_arity_check_ok_0028
  6902 000040EE FF742410                	push qword [rsp + 8 * 2]
  6903 000040F2 6A02                    	push 2
  6904 000040F4 E9B5340100              	jmp L_error_incorrect_arity_simple
  6905                                  .L_lambda_simple_arity_check_ok_0028:
  6906 000040F9 C8000000                	enter 0, 0
  6907 000040FD BF08000000              	mov rdi, 8*1
  6908 00004102 E8EE340100              	call malloc
  6909 00004107 488B5D20                	mov rbx, PARAM(0)
  6910 0000410B 488918                  	mov qword [rax], rbx
  6911 0000410E 48894520                	mov PARAM(0), rax
  6912 00004112 48B8-                   	mov rax, sob_void
  6912 00004114 [0000000000000000] 
  6913                                  
  6914 0000411C BF08000000              	mov rdi, 8*1
  6915 00004121 E8CF340100              	call malloc
  6916 00004126 488B5D28                	mov rbx, PARAM(1)
  6917 0000412A 488918                  	mov qword [rax], rbx
  6918 0000412D 48894528                	mov PARAM(1), rax
  6919 00004131 48B8-                   	mov rax, sob_void
  6919 00004133 [0000000000000000] 
  6920                                  
  6921 0000413B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6922 00004140 E8B0340100              	call malloc
  6923 00004145 50                      	push rax
  6924 00004146 BF10000000              	mov rdi, 8 * 2	; new rib
  6925 0000414B E8A5340100              	call malloc
  6926 00004150 50                      	push rax
  6927 00004151 BF10000000              	mov rdi, 8 * 2	; extended env
  6928 00004156 E89A340100              	call malloc
  6929 0000415B 488B7D10                	mov rdi, ENV
  6930 0000415F BE00000000              	mov rsi, 0
  6931 00004164 BA01000000              	mov rdx, 1
  6932                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6933 00004169 4883FE01                	cmp rsi, 1
  6934 0000416D 7410                    	je .L_lambda_simple_env_end_0029
  6935 0000416F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6936 00004173 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6937 00004177 48FFC6                  	inc rsi
  6938 0000417A 48FFC2                  	inc rdx
  6939 0000417D EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6940                                  .L_lambda_simple_env_end_0029:
  6941 0000417F 5B                      	pop rbx
  6942 00004180 BE00000000              	mov rsi, 0
  6943                                  .L_lambda_simple_params_loop_0029:	; copy params
  6944 00004185 4883FE02                	cmp rsi, 2
  6945 00004189 740E                    	je .L_lambda_simple_params_end_0029
  6946 0000418B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6947 00004190 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6948 00004194 48FFC6                  	inc rsi
  6949 00004197 EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6950                                  .L_lambda_simple_params_end_0029:
  6951 00004199 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6952 0000419C 4889C3                  	mov rbx, rax
  6953 0000419F 58                      	pop rax
  6954 000041A0 C60004                  	mov byte [rax], T_closure
  6955 000041A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6956 000041A7 48C74009[B4410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6957 000041AF E944010000              	jmp .L_lambda_simple_end_0029
  6958                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6959 000041B4 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6960 000041BA 740B                    	je .L_lambda_simple_arity_check_ok_0029
  6961 000041BC FF742410                	push qword [rsp + 8 * 2]
  6962 000041C0 6A02                    	push 2
  6963 000041C2 E9E7330100              	jmp L_error_incorrect_arity_simple
  6964                                  .L_lambda_simple_arity_check_ok_0029:
  6965 000041C7 C8000000                	enter 0, 0
  6966                                  	; preparing a non-tail-call
  6967 000041CB 488B4528                	mov rax, PARAM(1)	; param s
  6968 000041CF 50                      	push rax
  6969 000041D0 6A01                    	push 1	; arg count
  6970 000041D2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6971 000041DA 803805                  	cmp byte [rax], T_undefined
  6972 000041DD 0F84E5320100            	je L_error_fvar_undefined
  6973 000041E3 803804                  	cmp byte [rax], T_closure
  6974 000041E6 0F8560330100            	jne L_error_non_closure
  6975 000041EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  6976 000041EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  6977 000041F2 483D[02000000]          	cmp rax, sob_boolean_false
  6978 000041F8 740F                    	je .L_if_else_0009
  6979 000041FA 48B8-                   	mov rax, L_constants + 1
  6979 000041FC [0100000000000000] 
  6980 00004204 E9EB000000              	jmp .L_if_end_0009
  6981                                  .L_if_else_0009:
  6982                                  	; preparing a tail-call
  6983                                  	; preparing a non-tail-call
  6984                                  	; preparing a non-tail-call
  6985 00004209 488B4528                	mov rax, PARAM(1)	; param s
  6986 0000420D 50                      	push rax
  6987 0000420E 6A01                    	push 1	; arg count
  6988 00004210 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6989 00004218 803805                  	cmp byte [rax], T_undefined
  6990 0000421B 0F84A7320100            	je L_error_fvar_undefined
  6991 00004221 803804                  	cmp byte [rax], T_closure
  6992 00004224 0F8522330100            	jne L_error_non_closure
  6993 0000422A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6994 0000422D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6995 00004230 50                      	push rax
  6996 00004231 488B4520                	mov rax, PARAM(0)	; param f
  6997 00004235 50                      	push rax
  6998 00004236 6A02                    	push 2	; arg count
  6999 00004238 488B4510                	mov rax, ENV
  7000 0000423C 488B00                  	mov rax, qword [rax + 8 * 0]
  7001 0000423F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7002 00004242 488B00                  	mov rax, qword [rax]
  7003 00004245 803804                  	cmp byte [rax], T_closure
  7004 00004248 0F85FE320100            	jne L_error_non_closure
  7005 0000424E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7006 00004251 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7007 00004254 50                      	push rax
  7008                                  	; preparing a non-tail-call
  7009                                  	; preparing a non-tail-call
  7010 00004255 488B4528                	mov rax, PARAM(1)	; param s
  7011 00004259 50                      	push rax
  7012 0000425A 6A01                    	push 1	; arg count
  7013 0000425C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7014 00004264 803805                  	cmp byte [rax], T_undefined
  7015 00004267 0F845B320100            	je L_error_fvar_undefined
  7016 0000426D 803804                  	cmp byte [rax], T_closure
  7017 00004270 0F85D6320100            	jne L_error_non_closure
  7018 00004276 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7019 00004279 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7020 0000427C 50                      	push rax
  7021 0000427D 6A01                    	push 1	; arg count
  7022 0000427F 488B4520                	mov rax, PARAM(0)	; param f
  7023 00004283 803804                  	cmp byte [rax], T_closure
  7024 00004286 0F85C0320100            	jne L_error_non_closure
  7025 0000428C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7026 0000428F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7027 00004292 50                      	push rax
  7028 00004293 6A02                    	push 2	; arg count
  7029 00004295 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7030 0000429D 803805                  	cmp byte [rax], T_undefined
  7031 000042A0 0F8422320100            	je L_error_fvar_undefined
  7032 000042A6 803804                  	cmp byte [rax], T_closure
  7033 000042A9 0F859D320100            	jne L_error_non_closure
  7034 000042AF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7035 000042B2 FF7508                  	push qword [rbp + 8 * 1]
  7036                                   ; old ret addr
  7037 000042B5 FF7500                  	push qword [rbp]
  7038                                   ; restore the old rbp
  7039 000042B8 BB02000000              	mov rbx, 2
  7040 000042BD 4883C303                	add rbx, 3
  7041 000042C1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7042 000042C5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7043 000042CA 4C8D4DF8                	lea r9, [rbp - 8]
  7044 000042CE B906000000              	mov rcx, 6
  7045                                  .L_tc_recycle_frame_loop_0029:
  7046 000042D3 4883F900                	cmp rcx, 0
  7047 000042D7 7413                    	je .L_tc_recycle_frame_done_0029
  7048 000042D9 4D8B11                  	mov r10, qword [r9]
  7049 000042DC 4D8910                  	mov qword [r8], r10
  7050 000042DF 4983E808                	sub r8, 8
  7051 000042E3 4983E908                	sub r9, 8
  7052 000042E7 48FFC9                  	dec rcx
  7053 000042EA EBE7                    	jmp .L_tc_recycle_frame_loop_0029
  7054                                  .L_tc_recycle_frame_done_0029:
  7055 000042EC 498D6008                	lea rsp, [r8 + 8]
  7056 000042F0 5D                      	pop rbp ; restore the old rbp
  7057 000042F1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7058                                  .L_if_end_0009:
  7059 000042F4 C9                      	leave
  7060 000042F5 C22000                  	ret AND_KILL_FRAME(2)
  7061                                  .L_lambda_simple_end_0029:	; new closure is in rax
  7062 000042F8 50                      	push rax
  7063 000042F9 488B4520                	mov rax, PARAM(0)	; param map1
  7064 000042FD 8F00                    	pop qword [rax]
  7065 000042FF 48B8-                   	mov rax, sob_void
  7065 00004301 [0000000000000000] 
  7066                                  
  7067 00004309 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7068 0000430E E8E2320100              	call malloc
  7069 00004313 50                      	push rax
  7070 00004314 BF10000000              	mov rdi, 8 * 2	; new rib
  7071 00004319 E8D7320100              	call malloc
  7072 0000431E 50                      	push rax
  7073 0000431F BF10000000              	mov rdi, 8 * 2	; extended env
  7074 00004324 E8CC320100              	call malloc
  7075 00004329 488B7D10                	mov rdi, ENV
  7076 0000432D BE00000000              	mov rsi, 0
  7077 00004332 BA01000000              	mov rdx, 1
  7078                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  7079 00004337 4883FE01                	cmp rsi, 1
  7080 0000433B 7410                    	je .L_lambda_simple_env_end_002a
  7081 0000433D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7082 00004341 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7083 00004345 48FFC6                  	inc rsi
  7084 00004348 48FFC2                  	inc rdx
  7085 0000434B EBEA                    	jmp .L_lambda_simple_env_loop_002a
  7086                                  .L_lambda_simple_env_end_002a:
  7087 0000434D 5B                      	pop rbx
  7088 0000434E BE00000000              	mov rsi, 0
  7089                                  .L_lambda_simple_params_loop_002a:	; copy params
  7090 00004353 4883FE02                	cmp rsi, 2
  7091 00004357 740E                    	je .L_lambda_simple_params_end_002a
  7092 00004359 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7093 0000435E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7094 00004362 48FFC6                  	inc rsi
  7095 00004365 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  7096                                  .L_lambda_simple_params_end_002a:
  7097 00004367 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7098 0000436A 4889C3                  	mov rbx, rax
  7099 0000436D 58                      	pop rax
  7100 0000436E C60004                  	mov byte [rax], T_closure
  7101 00004371 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7102 00004375 48C74009[82430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  7103 0000437D E996010000              	jmp .L_lambda_simple_end_002a
  7104                                  .L_lambda_simple_code_002a:	; lambda-simple body
  7105 00004382 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7106 00004388 740B                    	je .L_lambda_simple_arity_check_ok_002a
  7107 0000438A FF742410                	push qword [rsp + 8 * 2]
  7108 0000438E 6A02                    	push 2
  7109 00004390 E919320100              	jmp L_error_incorrect_arity_simple
  7110                                  .L_lambda_simple_arity_check_ok_002a:
  7111 00004395 C8000000                	enter 0, 0
  7112                                  	; preparing a non-tail-call
  7113                                  	; preparing a non-tail-call
  7114 00004399 488B4528                	mov rax, PARAM(1)	; param s
  7115 0000439D 50                      	push rax
  7116 0000439E 6A01                    	push 1	; arg count
  7117 000043A0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7118 000043A8 803805                  	cmp byte [rax], T_undefined
  7119 000043AB 0F8417310100            	je L_error_fvar_undefined
  7120 000043B1 803804                  	cmp byte [rax], T_closure
  7121 000043B4 0F8592310100            	jne L_error_non_closure
  7122 000043BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7123 000043BD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7124 000043C0 50                      	push rax
  7125 000043C1 6A01                    	push 1	; arg count
  7126 000043C3 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7127 000043CB 803805                  	cmp byte [rax], T_undefined
  7128 000043CE 0F84F4300100            	je L_error_fvar_undefined
  7129 000043D4 803804                  	cmp byte [rax], T_closure
  7130 000043D7 0F856F310100            	jne L_error_non_closure
  7131 000043DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7132 000043E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7133 000043E3 483D[02000000]          	cmp rax, sob_boolean_false
  7134 000043E9 740F                    	je .L_if_else_000a
  7135 000043EB 48B8-                   	mov rax, L_constants + 1
  7135 000043ED [0100000000000000] 
  7136 000043F5 E91A010000              	jmp .L_if_end_000a
  7137                                  .L_if_else_000a:
  7138                                  	; preparing a tail-call
  7139                                  	; preparing a non-tail-call
  7140                                  	; preparing a non-tail-call
  7141 000043FA 488B4528                	mov rax, PARAM(1)	; param s
  7142 000043FE 50                      	push rax
  7143 000043FF 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7144 00004407 803805                  	cmp byte [rax], T_undefined
  7145 0000440A 0F84B8300100            	je L_error_fvar_undefined
  7146 00004410 50                      	push rax
  7147 00004411 6A02                    	push 2	; arg count
  7148 00004413 488B4510                	mov rax, ENV
  7149 00004417 488B00                  	mov rax, qword [rax + 8 * 0]
  7150 0000441A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7151 0000441D 488B00                  	mov rax, qword [rax]
  7152 00004420 803804                  	cmp byte [rax], T_closure
  7153 00004423 0F8523310100            	jne L_error_non_closure
  7154 00004429 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7155 0000442C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7156 0000442F 50                      	push rax
  7157 00004430 488B4520                	mov rax, PARAM(0)	; param f
  7158 00004434 50                      	push rax
  7159 00004435 6A02                    	push 2	; arg count
  7160 00004437 488B4510                	mov rax, ENV
  7161 0000443B 488B00                  	mov rax, qword [rax + 8 * 0]
  7162 0000443E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7163 00004442 488B00                  	mov rax, qword [rax]
  7164 00004445 803804                  	cmp byte [rax], T_closure
  7165 00004448 0F85FE300100            	jne L_error_non_closure
  7166 0000444E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7167 00004451 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7168 00004454 50                      	push rax
  7169                                  	; preparing a non-tail-call
  7170                                  	; preparing a non-tail-call
  7171 00004455 488B4528                	mov rax, PARAM(1)	; param s
  7172 00004459 50                      	push rax
  7173 0000445A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7174 00004462 803805                  	cmp byte [rax], T_undefined
  7175 00004465 0F845D300100            	je L_error_fvar_undefined
  7176 0000446B 50                      	push rax
  7177 0000446C 6A02                    	push 2	; arg count
  7178 0000446E 488B4510                	mov rax, ENV
  7179 00004472 488B00                  	mov rax, qword [rax + 8 * 0]
  7180 00004475 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7181 00004478 488B00                  	mov rax, qword [rax]
  7182 0000447B 803804                  	cmp byte [rax], T_closure
  7183 0000447E 0F85C8300100            	jne L_error_non_closure
  7184 00004484 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7185 00004487 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7186 0000448A 50                      	push rax
  7187 0000448B 488B4520                	mov rax, PARAM(0)	; param f
  7188 0000448F 50                      	push rax
  7189 00004490 6A02                    	push 2	; arg count
  7190 00004492 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  7191 0000449A 803805                  	cmp byte [rax], T_undefined
  7192 0000449D 0F8425300100            	je L_error_fvar_undefined
  7193 000044A3 803804                  	cmp byte [rax], T_closure
  7194 000044A6 0F85A0300100            	jne L_error_non_closure
  7195 000044AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7196 000044AF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7197 000044B2 50                      	push rax
  7198 000044B3 6A02                    	push 2	; arg count
  7199 000044B5 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7200 000044BD 803805                  	cmp byte [rax], T_undefined
  7201 000044C0 0F8402300100            	je L_error_fvar_undefined
  7202 000044C6 803804                  	cmp byte [rax], T_closure
  7203 000044C9 0F857D300100            	jne L_error_non_closure
  7204 000044CF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7205 000044D2 FF7508                  	push qword [rbp + 8 * 1]
  7206                                   ; old ret addr
  7207 000044D5 FF7500                  	push qword [rbp]
  7208                                   ; restore the old rbp
  7209 000044D8 BB02000000              	mov rbx, 2
  7210 000044DD 4883C303                	add rbx, 3
  7211 000044E1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7212 000044E5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7213 000044EA 4C8D4DF8                	lea r9, [rbp - 8]
  7214 000044EE B906000000              	mov rcx, 6
  7215                                  .L_tc_recycle_frame_loop_002a:
  7216 000044F3 4883F900                	cmp rcx, 0
  7217 000044F7 7413                    	je .L_tc_recycle_frame_done_002a
  7218 000044F9 4D8B11                  	mov r10, qword [r9]
  7219 000044FC 4D8910                  	mov qword [r8], r10
  7220 000044FF 4983E808                	sub r8, 8
  7221 00004503 4983E908                	sub r9, 8
  7222 00004507 48FFC9                  	dec rcx
  7223 0000450A EBE7                    	jmp .L_tc_recycle_frame_loop_002a
  7224                                  .L_tc_recycle_frame_done_002a:
  7225 0000450C 498D6008                	lea rsp, [r8 + 8]
  7226 00004510 5D                      	pop rbp ; restore the old rbp
  7227 00004511 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7228                                  .L_if_end_000a:
  7229 00004514 C9                      	leave
  7230 00004515 C22000                  	ret AND_KILL_FRAME(2)
  7231                                  .L_lambda_simple_end_002a:	; new closure is in rax
  7232 00004518 50                      	push rax
  7233 00004519 488B4528                	mov rax, PARAM(1)	; param map-list
  7234 0000451D 8F00                    	pop qword [rax]
  7235 0000451F 48B8-                   	mov rax, sob_void
  7235 00004521 [0000000000000000] 
  7236                                  
  7237 00004529 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7238 0000452E E8C2300100              	call malloc
  7239 00004533 50                      	push rax
  7240 00004534 BF10000000              	mov rdi, 8 * 2	; new rib
  7241 00004539 E8B7300100              	call malloc
  7242 0000453E 50                      	push rax
  7243 0000453F BF10000000              	mov rdi, 8 * 2	; extended env
  7244 00004544 E8AC300100              	call malloc
  7245 00004549 488B7D10                	mov rdi, ENV
  7246 0000454D 4831F6                  	 xor rsi, rsi
  7247 00004550 4831D2                  	 xor rdx, rdx
  7248 00004553 48FFC2                  	inc rdx
  7249                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  7250 00004556 4883FE01                	cmp rsi, 1
  7251 0000455A 7410                    	je .L_lambda_opt_env_end_0006
  7252 0000455C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7253 00004560 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7254 00004564 48FFC6                  	inc rsi
  7255 00004567 48FFC2                  	inc rdx
  7256 0000456A EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7257                                  .L_lambda_opt_env_end_0006:
  7258 0000456C 5B                      	pop rbx
  7259 0000456D 4831F6                  	xor rsi, rsi
  7260                                  .L_lambda_opt_params_loop_0006:	; copy params
  7261 00004570 4883FE02                	cmp rsi, 2
  7262 00004574 740E                    	je .L_lambda_opt_params_end_0006
  7263 00004576 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7264 0000457B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7265 0000457F 48FFC6                  	inc rsi
  7266 00004582 EBEC                    	jmp .L_lambda_opt_params_loop_0006
  7267                                  .L_lambda_opt_params_end_0006:
  7268 00004584 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7269 00004587 4889C3                  	mov rbx, rax
  7270 0000458A 58                      	pop rax
  7271 0000458B C60004                  	mov byte [rax], T_closure
  7272 0000458E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7273 00004592 48C74009[9F450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7274 0000459A E999010000              	jmp .L_lambda_opt_end_0006
  7275                                  .L_lambda_opt_code_0006:; lambda opt body
  7276 0000459F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7277 000045A5 7409                    	je .L_lambda_opt_arity_check_exact_0006
  7278 000045A7 7F57                    	jg .L_lambda_opt_arity_check_more_0006
  7279 000045A9 6A01                    	push 1
  7280 000045AB E912300100              	jmp L_error_incorrect_arity_opt
  7281                                  .L_lambda_opt_arity_check_exact_0006:
  7282 000045B0 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  7283 000045B4 4C894C24F8              	mov qword [rsp -8], r9
  7284 000045B9 4C8B4C2408              	mov r9, qword [rsp +8]
  7285 000045BE 4C890C24                	mov qword [rsp +8 * 0], r9
  7286 000045C2 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  7287 000045C7 4C89C9                  	mov rcx, r9
  7288 000045CA 49FFC1                  	inc r9
  7289 000045CD 4C894C2408              	mov qword [rsp +8], r9
  7290 000045D2 4889E2                  	mov rdx, rsp
  7291 000045D5 4883C218                	add rdx, 24
  7292                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0006:
  7293 000045D9 4883F900                	cmp rcx, 0
  7294 000045DD 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0006
  7295 000045DF 4C8B02                  	mov r8, qword [rdx]
  7296 000045E2 4C8942F8                	mov qword [rdx - 8], r8
  7297 000045E6 4883C208                	add rdx, 8
  7298 000045EA 48FFC9                  	dec rcx
  7299 000045ED EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0006
  7300                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0006:
  7301 000045EF 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  7302 000045F7 4883EC08                	sub rsp, 8
  7303 000045FB E984000000              	jmp .L_lambda_opt_stack_adjusted_0006
  7304                                  .L_lambda_opt_arity_check_more_0006:
  7305 00004600 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  7306 00004605 4D89C4                  	mov r12, r8
  7307 00004608 4C89C1                  	mov rcx, r8
  7308 0000460B 4D8D5002                	lea r10, [r8 + 2] 
  7309 0000460F 4883E901                	sub rcx, 1
  7310 00004613 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  7311 00004618 49B9-                   	mov r9, sob_nil
  7311 0000461A [0100000000000000] 
  7312                                  .L_lambda_opt_create_list_of_opt_params_0006:
  7313 00004622 4883F900                	cmp rcx, 0
  7314 00004626 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0006
  7315 00004628 BF11000000              	mov rdi, 17
  7316 0000462D E8C32F0100              	call malloc
  7317 00004632 C60021                  	mov byte [rax], T_pair
  7318 00004635 498B1B                  	mov rbx, qword [r11]
  7319 00004638 48895801                	mov qword [rax +1], rbx
  7320 0000463C 4C894809                	mov qword [rax + 1 + 8], r9
  7321 00004640 4989C1                  	mov r9, rax
  7322 00004643 48FFC9                  	dec rcx
  7323 00004646 4983EB08                	sub r11, 8
  7324 0000464A EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0006
  7325                                  .L_lambda_opt_create_list_of_opt_params_end_0006:
  7326 0000464C 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  7327 00004651 4D8908                  	mov qword [r8], r9
  7328 00004654 4E8D14D500000000        	lea r10, [8 * r10]
  7329 0000465C 4901E2                  	add r10, rsp
  7330 0000465F B905000000              	mov rcx, 4 + 1
  7331                                  .L_lambda_opt_stack_shrink_loop_0006:
  7332 00004664 4883F900                	cmp rcx, 0
  7333 00004668 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0006
  7334 0000466A 4D8B18                  	mov r11, qword [r8]
  7335 0000466D 4D891A                  	mov qword [r10], r11
  7336 00004670 4983E808                	sub r8, 8
  7337 00004674 4983EA08                	sub r10, 8
  7338 00004678 48FFC9                  	dec rcx
  7339 0000467B EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7340                                  .L_lambda_opt_stack_shrink_loop_exit_0006:
  7341 0000467D 4983C208                	add r10, 8
  7342 00004681 4C89D4                  	mov rsp, r10
  7343                                  .L_lambda_opt_stack_adjusted_0006:;continue with the code, the stack is ok
  7344 00004684 48C744241002000000      	mov qword [rsp + 8*2], 2
  7345 0000468D C8000000                	enter 0, 0
  7346                                  	; preparing a non-tail-call
  7347 00004691 488B4528                	mov rax, PARAM(1)	; param s
  7348 00004695 50                      	push rax
  7349 00004696 6A01                    	push 1	; arg count
  7350 00004698 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7351 000046A0 803805                  	cmp byte [rax], T_undefined
  7352 000046A3 0F841F2E0100            	je L_error_fvar_undefined
  7353 000046A9 803804                  	cmp byte [rax], T_closure
  7354 000046AC 0F859A2E0100            	jne L_error_non_closure
  7355 000046B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7356 000046B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7357 000046B8 483D[02000000]          	cmp rax, sob_boolean_false
  7358 000046BE 740C                    	je .L_if_else_000b
  7359 000046C0 48B8-                   	mov rax, L_constants + 1
  7359 000046C2 [0100000000000000] 
  7360 000046CA EB68                    	jmp .L_if_end_000b
  7361                                  .L_if_else_000b:
  7362                                  	; preparing a tail-call
  7363 000046CC 488B4528                	mov rax, PARAM(1)	; param s
  7364 000046D0 50                      	push rax
  7365 000046D1 488B4520                	mov rax, PARAM(0)	; param f
  7366 000046D5 50                      	push rax
  7367 000046D6 6A02                    	push 2	; arg count
  7368 000046D8 488B4510                	mov rax, ENV
  7369 000046DC 488B00                  	mov rax, qword [rax + 8 * 0]
  7370 000046DF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7371 000046E3 488B00                  	mov rax, qword [rax]
  7372 000046E6 803804                  	cmp byte [rax], T_closure
  7373 000046E9 0F855D2E0100            	jne L_error_non_closure
  7374 000046EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7375 000046F2 FF7508                  	push qword [rbp + 8 * 1]
  7376                                   ; old ret addr
  7377 000046F5 FF7500                  	push qword [rbp]
  7378                                   ; restore the old rbp
  7379 000046F8 BB02000000              	mov rbx, 2
  7380 000046FD 4883C303                	add rbx, 3
  7381 00004701 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7382 00004705 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7383 0000470A 4C8D4DF8                	lea r9, [rbp - 8]
  7384 0000470E B906000000              	mov rcx, 6
  7385                                  .L_tc_recycle_frame_loop_002b:
  7386 00004713 4883F900                	cmp rcx, 0
  7387 00004717 7413                    	je .L_tc_recycle_frame_done_002b
  7388 00004719 4D8B11                  	mov r10, qword [r9]
  7389 0000471C 4D8910                  	mov qword [r8], r10
  7390 0000471F 4983E808                	sub r8, 8
  7391 00004723 4983E908                	sub r9, 8
  7392 00004727 48FFC9                  	dec rcx
  7393 0000472A EBE7                    	jmp .L_tc_recycle_frame_loop_002b
  7394                                  .L_tc_recycle_frame_done_002b:
  7395 0000472C 498D6008                	lea rsp, [r8 + 8]
  7396 00004730 5D                      	pop rbp ; restore the old rbp
  7397 00004731 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7398                                  .L_if_end_000b:
  7399 00004734 C9                      	leave
  7400 00004735 C22000                  	ret 8 * (2 + 2)
  7401                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7402 00004738 C9                      	leave
  7403 00004739 C22000                  	ret AND_KILL_FRAME(2)
  7404                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7405 0000473C 803804                  	cmp byte [rax], T_closure
  7406 0000473F 0F85072E0100            	jne L_error_non_closure
  7407 00004745 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7408 00004748 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7409 0000474B 48890425[9C140000]      	mov qword [free_var_103], rax
  7410 00004753 48B8-                   	mov rax, sob_void
  7410 00004755 [0000000000000000] 
  7411                                  
  7412 0000475D 4889C7                  	mov rdi, rax
  7413 00004760 E8E5300100              	call print_sexpr_if_not_void
  7414 00004765 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7415 0000476A E8862E0100              	call malloc
  7416 0000476F 50                      	push rax
  7417 00004770 BF00000000              	mov rdi, 8 * 0	; new rib
  7418 00004775 E87B2E0100              	call malloc
  7419 0000477A 50                      	push rax
  7420 0000477B BF08000000              	mov rdi, 8 * 1	; extended env
  7421 00004780 E8702E0100              	call malloc
  7422 00004785 488B7D10                	mov rdi, ENV
  7423 00004789 BE00000000              	mov rsi, 0
  7424 0000478E BA01000000              	mov rdx, 1
  7425                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  7426 00004793 4883FE00                	cmp rsi, 0
  7427 00004797 7410                    	je .L_lambda_simple_env_end_002b
  7428 00004799 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7429 0000479D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7430 000047A1 48FFC6                  	inc rsi
  7431 000047A4 48FFC2                  	inc rdx
  7432 000047A7 EBEA                    	jmp .L_lambda_simple_env_loop_002b
  7433                                  .L_lambda_simple_env_end_002b:
  7434 000047A9 5B                      	pop rbx
  7435 000047AA BE00000000              	mov rsi, 0
  7436                                  .L_lambda_simple_params_loop_002b:	; copy params
  7437 000047AF 4883FE00                	cmp rsi, 0
  7438 000047B3 740E                    	je .L_lambda_simple_params_end_002b
  7439 000047B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7440 000047BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7441 000047BE 48FFC6                  	inc rsi
  7442 000047C1 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  7443                                  .L_lambda_simple_params_end_002b:
  7444 000047C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7445 000047C6 4889C3                  	mov rbx, rax
  7446 000047C9 58                      	pop rax
  7447 000047CA C60004                  	mov byte [rax], T_closure
  7448 000047CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7449 000047D1 48C74009[DE470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  7450 000047D9 E98C010000              	jmp .L_lambda_simple_end_002b
  7451                                  .L_lambda_simple_code_002b:	; lambda-simple body
  7452 000047DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7453 000047E4 740B                    	je .L_lambda_simple_arity_check_ok_002b
  7454 000047E6 FF742410                	push qword [rsp + 8 * 2]
  7455 000047EA 6A01                    	push 1
  7456 000047EC E9BD2D0100              	jmp L_error_incorrect_arity_simple
  7457                                  .L_lambda_simple_arity_check_ok_002b:
  7458 000047F1 C8000000                	enter 0, 0
  7459                                  	; preparing a tail-call
  7460 000047F5 488B4520                	mov rax, PARAM(0)	; param s
  7461 000047F9 50                      	push rax
  7462 000047FA 48B8-                   	mov rax, L_constants + 1
  7462 000047FC [0100000000000000] 
  7463 00004804 50                      	push rax
  7464 00004805 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7465 0000480A E8E62D0100              	call malloc
  7466 0000480F 50                      	push rax
  7467 00004810 BF08000000              	mov rdi, 8 * 1	; new rib
  7468 00004815 E8DB2D0100              	call malloc
  7469 0000481A 50                      	push rax
  7470 0000481B BF10000000              	mov rdi, 8 * 2	; extended env
  7471 00004820 E8D02D0100              	call malloc
  7472 00004825 488B7D10                	mov rdi, ENV
  7473 00004829 BE00000000              	mov rsi, 0
  7474 0000482E BA01000000              	mov rdx, 1
  7475                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7476 00004833 4883FE01                	cmp rsi, 1
  7477 00004837 7410                    	je .L_lambda_simple_env_end_002c
  7478 00004839 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7479 0000483D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7480 00004841 48FFC6                  	inc rsi
  7481 00004844 48FFC2                  	inc rdx
  7482 00004847 EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7483                                  .L_lambda_simple_env_end_002c:
  7484 00004849 5B                      	pop rbx
  7485 0000484A BE00000000              	mov rsi, 0
  7486                                  .L_lambda_simple_params_loop_002c:	; copy params
  7487 0000484F 4883FE01                	cmp rsi, 1
  7488 00004853 740E                    	je .L_lambda_simple_params_end_002c
  7489 00004855 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7490 0000485A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7491 0000485E 48FFC6                  	inc rsi
  7492 00004861 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7493                                  .L_lambda_simple_params_end_002c:
  7494 00004863 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7495 00004866 4889C3                  	mov rbx, rax
  7496 00004869 58                      	pop rax
  7497 0000486A C60004                  	mov byte [rax], T_closure
  7498 0000486D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7499 00004871 48C74009[7E480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7500 00004879 E986000000              	jmp .L_lambda_simple_end_002c
  7501                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7502 0000487E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7503 00004884 740B                    	je .L_lambda_simple_arity_check_ok_002c
  7504 00004886 FF742410                	push qword [rsp + 8 * 2]
  7505 0000488A 6A02                    	push 2
  7506 0000488C E91D2D0100              	jmp L_error_incorrect_arity_simple
  7507                                  .L_lambda_simple_arity_check_ok_002c:
  7508 00004891 C8000000                	enter 0, 0
  7509                                  	; preparing a tail-call
  7510 00004895 488B4520                	mov rax, PARAM(0)	; param r
  7511 00004899 50                      	push rax
  7512 0000489A 488B4528                	mov rax, PARAM(1)	; param a
  7513 0000489E 50                      	push rax
  7514 0000489F 6A02                    	push 2	; arg count
  7515 000048A1 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7516 000048A9 803805                  	cmp byte [rax], T_undefined
  7517 000048AC 0F84162C0100            	je L_error_fvar_undefined
  7518 000048B2 803804                  	cmp byte [rax], T_closure
  7519 000048B5 0F85912C0100            	jne L_error_non_closure
  7520 000048BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7521 000048BE FF7508                  	push qword [rbp + 8 * 1]
  7522                                   ; old ret addr
  7523 000048C1 FF7500                  	push qword [rbp]
  7524                                   ; restore the old rbp
  7525 000048C4 BB02000000              	mov rbx, 2
  7526 000048C9 4883C303                	add rbx, 3
  7527 000048CD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7528 000048D1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7529 000048D6 4C8D4DF8                	lea r9, [rbp - 8]
  7530 000048DA B906000000              	mov rcx, 6
  7531                                  .L_tc_recycle_frame_loop_002d:
  7532 000048DF 4883F900                	cmp rcx, 0
  7533 000048E3 7413                    	je .L_tc_recycle_frame_done_002d
  7534 000048E5 4D8B11                  	mov r10, qword [r9]
  7535 000048E8 4D8910                  	mov qword [r8], r10
  7536 000048EB 4983E808                	sub r8, 8
  7537 000048EF 4983E908                	sub r9, 8
  7538 000048F3 48FFC9                  	dec rcx
  7539 000048F6 EBE7                    	jmp .L_tc_recycle_frame_loop_002d
  7540                                  .L_tc_recycle_frame_done_002d:
  7541 000048F8 498D6008                	lea rsp, [r8 + 8]
  7542 000048FC 5D                      	pop rbp ; restore the old rbp
  7543 000048FD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7544 00004900 C9                      	leave
  7545 00004901 C22000                  	ret AND_KILL_FRAME(2)
  7546                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7547 00004904 50                      	push rax
  7548 00004905 6A03                    	push 3	; arg count
  7549 00004907 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7550 0000490F 803805                  	cmp byte [rax], T_undefined
  7551 00004912 0F84B02B0100            	je L_error_fvar_undefined
  7552 00004918 803804                  	cmp byte [rax], T_closure
  7553 0000491B 0F852B2C0100            	jne L_error_non_closure
  7554 00004921 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7555 00004924 FF7508                  	push qword [rbp + 8 * 1]
  7556                                   ; old ret addr
  7557 00004927 FF7500                  	push qword [rbp]
  7558                                   ; restore the old rbp
  7559 0000492A BB03000000              	mov rbx, 3
  7560 0000492F 4883C303                	add rbx, 3
  7561 00004933 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7562 00004937 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7563 0000493C 4C8D4DF8                	lea r9, [rbp - 8]
  7564 00004940 B907000000              	mov rcx, 7
  7565                                  .L_tc_recycle_frame_loop_002c:
  7566 00004945 4883F900                	cmp rcx, 0
  7567 00004949 7413                    	je .L_tc_recycle_frame_done_002c
  7568 0000494B 4D8B11                  	mov r10, qword [r9]
  7569 0000494E 4D8910                  	mov qword [r8], r10
  7570 00004951 4983E808                	sub r8, 8
  7571 00004955 4983E908                	sub r9, 8
  7572 00004959 48FFC9                  	dec rcx
  7573 0000495C EBE7                    	jmp .L_tc_recycle_frame_loop_002c
  7574                                  .L_tc_recycle_frame_done_002c:
  7575 0000495E 498D6008                	lea rsp, [r8 + 8]
  7576 00004962 5D                      	pop rbp ; restore the old rbp
  7577 00004963 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7578 00004966 C9                      	leave
  7579 00004967 C21800                  	ret AND_KILL_FRAME(1)
  7580                                  .L_lambda_simple_end_002b:	; new closure is in rax
  7581 0000496A 48890425[9B150000]      	mov qword [free_var_118], rax
  7582 00004972 48B8-                   	mov rax, sob_void
  7582 00004974 [0000000000000000] 
  7583                                  
  7584 0000497C 4889C7                  	mov rdi, rax
  7585 0000497F E8C62E0100              	call print_sexpr_if_not_void
  7586                                  	; preparing a non-tail-call
  7587 00004984 48B8-                   	mov rax, L_constants + 1993
  7587 00004986 [C907000000000000] 
  7588 0000498E 50                      	push rax
  7589 0000498F 48B8-                   	mov rax, L_constants + 1993
  7589 00004991 [C907000000000000] 
  7590 00004999 50                      	push rax
  7591 0000499A 6A02                    	push 2	; arg count
  7592 0000499C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7593 000049A1 E84F2C0100              	call malloc
  7594 000049A6 50                      	push rax
  7595 000049A7 BF00000000              	mov rdi, 8 * 0	; new rib
  7596 000049AC E8442C0100              	call malloc
  7597 000049B1 50                      	push rax
  7598 000049B2 BF08000000              	mov rdi, 8 * 1	; extended env
  7599 000049B7 E8392C0100              	call malloc
  7600 000049BC 488B7D10                	mov rdi, ENV
  7601 000049C0 BE00000000              	mov rsi, 0
  7602 000049C5 BA01000000              	mov rdx, 1
  7603                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7604 000049CA 4883FE00                	cmp rsi, 0
  7605 000049CE 7410                    	je .L_lambda_simple_env_end_002d
  7606 000049D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7607 000049D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7608 000049D8 48FFC6                  	inc rsi
  7609 000049DB 48FFC2                  	inc rdx
  7610 000049DE EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7611                                  .L_lambda_simple_env_end_002d:
  7612 000049E0 5B                      	pop rbx
  7613 000049E1 BE00000000              	mov rsi, 0
  7614                                  .L_lambda_simple_params_loop_002d:	; copy params
  7615 000049E6 4883FE00                	cmp rsi, 0
  7616 000049EA 740E                    	je .L_lambda_simple_params_end_002d
  7617 000049EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7618 000049F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7619 000049F5 48FFC6                  	inc rsi
  7620 000049F8 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7621                                  .L_lambda_simple_params_end_002d:
  7622 000049FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7623 000049FD 4889C3                  	mov rbx, rax
  7624 00004A00 58                      	pop rax
  7625 00004A01 C60004                  	mov byte [rax], T_closure
  7626 00004A04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7627 00004A08 48C74009[154A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7628 00004A10 E912060000              	jmp .L_lambda_simple_end_002d
  7629                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7630 00004A15 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7631 00004A1B 740B                    	je .L_lambda_simple_arity_check_ok_002d
  7632 00004A1D FF742410                	push qword [rsp + 8 * 2]
  7633 00004A21 6A02                    	push 2
  7634 00004A23 E9862B0100              	jmp L_error_incorrect_arity_simple
  7635                                  .L_lambda_simple_arity_check_ok_002d:
  7636 00004A28 C8000000                	enter 0, 0
  7637 00004A2C BF08000000              	mov rdi, 8*1
  7638 00004A31 E8BF2B0100              	call malloc
  7639 00004A36 488B5D20                	mov rbx, PARAM(0)
  7640 00004A3A 488918                  	mov qword [rax], rbx
  7641 00004A3D 48894520                	mov PARAM(0), rax
  7642 00004A41 48B8-                   	mov rax, sob_void
  7642 00004A43 [0000000000000000] 
  7643                                  
  7644 00004A4B BF08000000              	mov rdi, 8*1
  7645 00004A50 E8A02B0100              	call malloc
  7646 00004A55 488B5D28                	mov rbx, PARAM(1)
  7647 00004A59 488918                  	mov qword [rax], rbx
  7648 00004A5C 48894528                	mov PARAM(1), rax
  7649 00004A60 48B8-                   	mov rax, sob_void
  7649 00004A62 [0000000000000000] 
  7650                                  
  7651 00004A6A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7652 00004A6F E8812B0100              	call malloc
  7653 00004A74 50                      	push rax
  7654 00004A75 BF10000000              	mov rdi, 8 * 2	; new rib
  7655 00004A7A E8762B0100              	call malloc
  7656 00004A7F 50                      	push rax
  7657 00004A80 BF10000000              	mov rdi, 8 * 2	; extended env
  7658 00004A85 E86B2B0100              	call malloc
  7659 00004A8A 488B7D10                	mov rdi, ENV
  7660 00004A8E BE00000000              	mov rsi, 0
  7661 00004A93 BA01000000              	mov rdx, 1
  7662                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7663 00004A98 4883FE01                	cmp rsi, 1
  7664 00004A9C 7410                    	je .L_lambda_simple_env_end_002e
  7665 00004A9E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7666 00004AA2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7667 00004AA6 48FFC6                  	inc rsi
  7668 00004AA9 48FFC2                  	inc rdx
  7669 00004AAC EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7670                                  .L_lambda_simple_env_end_002e:
  7671 00004AAE 5B                      	pop rbx
  7672 00004AAF BE00000000              	mov rsi, 0
  7673                                  .L_lambda_simple_params_loop_002e:	; copy params
  7674 00004AB4 4883FE02                	cmp rsi, 2
  7675 00004AB8 740E                    	je .L_lambda_simple_params_end_002e
  7676 00004ABA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7677 00004ABF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7678 00004AC3 48FFC6                  	inc rsi
  7679 00004AC6 EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7680                                  .L_lambda_simple_params_end_002e:
  7681 00004AC8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7682 00004ACB 4889C3                  	mov rbx, rax
  7683 00004ACE 58                      	pop rax
  7684 00004ACF C60004                  	mov byte [rax], T_closure
  7685 00004AD2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7686 00004AD6 48C74009[E34A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7687 00004ADE E925010000              	jmp .L_lambda_simple_end_002e
  7688                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7689 00004AE3 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7690 00004AE9 740B                    	je .L_lambda_simple_arity_check_ok_002e
  7691 00004AEB FF742410                	push qword [rsp + 8 * 2]
  7692 00004AEF 6A02                    	push 2
  7693 00004AF1 E9B82A0100              	jmp L_error_incorrect_arity_simple
  7694                                  .L_lambda_simple_arity_check_ok_002e:
  7695 00004AF6 C8000000                	enter 0, 0
  7696                                  	; preparing a non-tail-call
  7697 00004AFA 488B4528                	mov rax, PARAM(1)	; param sr
  7698 00004AFE 50                      	push rax
  7699 00004AFF 6A01                    	push 1	; arg count
  7700 00004B01 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7701 00004B09 803805                  	cmp byte [rax], T_undefined
  7702 00004B0C 0F84B6290100            	je L_error_fvar_undefined
  7703 00004B12 803804                  	cmp byte [rax], T_closure
  7704 00004B15 0F85312A0100            	jne L_error_non_closure
  7705 00004B1B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7706 00004B1E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7707 00004B21 483D[02000000]          	cmp rax, sob_boolean_false
  7708 00004B27 7409                    	je .L_if_else_000c
  7709 00004B29 488B4520                	mov rax, PARAM(0)	; param s1
  7710 00004B2D E9D2000000              	jmp .L_if_end_000c
  7711                                  .L_if_else_000c:
  7712                                  	; preparing a tail-call
  7713                                  	; preparing a non-tail-call
  7714                                  	; preparing a non-tail-call
  7715 00004B32 488B4528                	mov rax, PARAM(1)	; param sr
  7716 00004B36 50                      	push rax
  7717 00004B37 6A01                    	push 1	; arg count
  7718 00004B39 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7719 00004B41 803805                  	cmp byte [rax], T_undefined
  7720 00004B44 0F847E290100            	je L_error_fvar_undefined
  7721 00004B4A 803804                  	cmp byte [rax], T_closure
  7722 00004B4D 0F85F9290100            	jne L_error_non_closure
  7723 00004B53 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7724 00004B56 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7725 00004B59 50                      	push rax
  7726                                  	; preparing a non-tail-call
  7727 00004B5A 488B4528                	mov rax, PARAM(1)	; param sr
  7728 00004B5E 50                      	push rax
  7729 00004B5F 6A01                    	push 1	; arg count
  7730 00004B61 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7731 00004B69 803805                  	cmp byte [rax], T_undefined
  7732 00004B6C 0F8456290100            	je L_error_fvar_undefined
  7733 00004B72 803804                  	cmp byte [rax], T_closure
  7734 00004B75 0F85D1290100            	jne L_error_non_closure
  7735 00004B7B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7736 00004B7E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7737 00004B81 50                      	push rax
  7738 00004B82 6A02                    	push 2	; arg count
  7739 00004B84 488B4510                	mov rax, ENV
  7740 00004B88 488B00                  	mov rax, qword [rax + 8 * 0]
  7741 00004B8B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7742 00004B8E 488B00                  	mov rax, qword [rax]
  7743 00004B91 803804                  	cmp byte [rax], T_closure
  7744 00004B94 0F85B2290100            	jne L_error_non_closure
  7745 00004B9A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7746 00004B9D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7747 00004BA0 50                      	push rax
  7748 00004BA1 488B4520                	mov rax, PARAM(0)	; param s1
  7749 00004BA5 50                      	push rax
  7750 00004BA6 6A02                    	push 2	; arg count
  7751 00004BA8 488B4510                	mov rax, ENV
  7752 00004BAC 488B00                  	mov rax, qword [rax + 8 * 0]
  7753 00004BAF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7754 00004BB3 488B00                  	mov rax, qword [rax]
  7755 00004BB6 803804                  	cmp byte [rax], T_closure
  7756 00004BB9 0F858D290100            	jne L_error_non_closure
  7757 00004BBF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7758 00004BC2 FF7508                  	push qword [rbp + 8 * 1]
  7759                                   ; old ret addr
  7760 00004BC5 FF7500                  	push qword [rbp]
  7761                                   ; restore the old rbp
  7762 00004BC8 BB02000000              	mov rbx, 2
  7763 00004BCD 4883C303                	add rbx, 3
  7764 00004BD1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7765 00004BD5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7766 00004BDA 4C8D4DF8                	lea r9, [rbp - 8]
  7767 00004BDE B906000000              	mov rcx, 6
  7768                                  .L_tc_recycle_frame_loop_002e:
  7769 00004BE3 4883F900                	cmp rcx, 0
  7770 00004BE7 7413                    	je .L_tc_recycle_frame_done_002e
  7771 00004BE9 4D8B11                  	mov r10, qword [r9]
  7772 00004BEC 4D8910                  	mov qword [r8], r10
  7773 00004BEF 4983E808                	sub r8, 8
  7774 00004BF3 4983E908                	sub r9, 8
  7775 00004BF7 48FFC9                  	dec rcx
  7776 00004BFA EBE7                    	jmp .L_tc_recycle_frame_loop_002e
  7777                                  .L_tc_recycle_frame_done_002e:
  7778 00004BFC 498D6008                	lea rsp, [r8 + 8]
  7779 00004C00 5D                      	pop rbp ; restore the old rbp
  7780 00004C01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7781                                  .L_if_end_000c:
  7782 00004C04 C9                      	leave
  7783 00004C05 C22000                  	ret AND_KILL_FRAME(2)
  7784                                  .L_lambda_simple_end_002e:	; new closure is in rax
  7785 00004C08 50                      	push rax
  7786 00004C09 488B4520                	mov rax, PARAM(0)	; param run-1
  7787 00004C0D 8F00                    	pop qword [rax]
  7788 00004C0F 48B8-                   	mov rax, sob_void
  7788 00004C11 [0000000000000000] 
  7789                                  
  7790 00004C19 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7791 00004C1E E8D2290100              	call malloc
  7792 00004C23 50                      	push rax
  7793 00004C24 BF10000000              	mov rdi, 8 * 2	; new rib
  7794 00004C29 E8C7290100              	call malloc
  7795 00004C2E 50                      	push rax
  7796 00004C2F BF10000000              	mov rdi, 8 * 2	; extended env
  7797 00004C34 E8BC290100              	call malloc
  7798 00004C39 488B7D10                	mov rdi, ENV
  7799 00004C3D BE00000000              	mov rsi, 0
  7800 00004C42 BA01000000              	mov rdx, 1
  7801                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7802 00004C47 4883FE01                	cmp rsi, 1
  7803 00004C4B 7410                    	je .L_lambda_simple_env_end_002f
  7804 00004C4D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7805 00004C51 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7806 00004C55 48FFC6                  	inc rsi
  7807 00004C58 48FFC2                  	inc rdx
  7808 00004C5B EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7809                                  .L_lambda_simple_env_end_002f:
  7810 00004C5D 5B                      	pop rbx
  7811 00004C5E BE00000000              	mov rsi, 0
  7812                                  .L_lambda_simple_params_loop_002f:	; copy params
  7813 00004C63 4883FE02                	cmp rsi, 2
  7814 00004C67 740E                    	je .L_lambda_simple_params_end_002f
  7815 00004C69 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7816 00004C6E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7817 00004C72 48FFC6                  	inc rsi
  7818 00004C75 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7819                                  .L_lambda_simple_params_end_002f:
  7820 00004C77 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7821 00004C7A 4889C3                  	mov rbx, rax
  7822 00004C7D 58                      	pop rax
  7823 00004C7E C60004                  	mov byte [rax], T_closure
  7824 00004C81 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7825 00004C85 48C74009[924C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7826 00004C8D E929010000              	jmp .L_lambda_simple_end_002f
  7827                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7828 00004C92 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7829 00004C98 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7830 00004C9A FF742410                	push qword [rsp + 8 * 2]
  7831 00004C9E 6A02                    	push 2
  7832 00004CA0 E909290100              	jmp L_error_incorrect_arity_simple
  7833                                  .L_lambda_simple_arity_check_ok_002f:
  7834 00004CA5 C8000000                	enter 0, 0
  7835                                  	; preparing a non-tail-call
  7836 00004CA9 488B4520                	mov rax, PARAM(0)	; param s1
  7837 00004CAD 50                      	push rax
  7838 00004CAE 6A01                    	push 1	; arg count
  7839 00004CB0 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7840 00004CB8 803805                  	cmp byte [rax], T_undefined
  7841 00004CBB 0F8407280100            	je L_error_fvar_undefined
  7842 00004CC1 803804                  	cmp byte [rax], T_closure
  7843 00004CC4 0F8582280100            	jne L_error_non_closure
  7844 00004CCA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7845 00004CCD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7846 00004CD0 483D[02000000]          	cmp rax, sob_boolean_false
  7847 00004CD6 7409                    	je .L_if_else_000d
  7848 00004CD8 488B4528                	mov rax, PARAM(1)	; param s2
  7849 00004CDC E9D6000000              	jmp .L_if_end_000d
  7850                                  .L_if_else_000d:
  7851                                  	; preparing a tail-call
  7852                                  	; preparing a non-tail-call
  7853 00004CE1 488B4528                	mov rax, PARAM(1)	; param s2
  7854 00004CE5 50                      	push rax
  7855                                  	; preparing a non-tail-call
  7856 00004CE6 488B4520                	mov rax, PARAM(0)	; param s1
  7857 00004CEA 50                      	push rax
  7858 00004CEB 6A01                    	push 1	; arg count
  7859 00004CED 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7860 00004CF5 803805                  	cmp byte [rax], T_undefined
  7861 00004CF8 0F84CA270100            	je L_error_fvar_undefined
  7862 00004CFE 803804                  	cmp byte [rax], T_closure
  7863 00004D01 0F8545280100            	jne L_error_non_closure
  7864 00004D07 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7865 00004D0A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7866 00004D0D 50                      	push rax
  7867 00004D0E 6A02                    	push 2	; arg count
  7868 00004D10 488B4510                	mov rax, ENV
  7869 00004D14 488B00                  	mov rax, qword [rax + 8 * 0]
  7870 00004D17 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7871 00004D1B 488B00                  	mov rax, qword [rax]
  7872 00004D1E 803804                  	cmp byte [rax], T_closure
  7873 00004D21 0F8525280100            	jne L_error_non_closure
  7874 00004D27 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7875 00004D2A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7876 00004D2D 50                      	push rax
  7877                                  	; preparing a non-tail-call
  7878 00004D2E 488B4520                	mov rax, PARAM(0)	; param s1
  7879 00004D32 50                      	push rax
  7880 00004D33 6A01                    	push 1	; arg count
  7881 00004D35 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7882 00004D3D 803805                  	cmp byte [rax], T_undefined
  7883 00004D40 0F8482270100            	je L_error_fvar_undefined
  7884 00004D46 803804                  	cmp byte [rax], T_closure
  7885 00004D49 0F85FD270100            	jne L_error_non_closure
  7886 00004D4F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7887 00004D52 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7888 00004D55 50                      	push rax
  7889 00004D56 6A02                    	push 2	; arg count
  7890 00004D58 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7891 00004D60 803805                  	cmp byte [rax], T_undefined
  7892 00004D63 0F845F270100            	je L_error_fvar_undefined
  7893 00004D69 803804                  	cmp byte [rax], T_closure
  7894 00004D6C 0F85DA270100            	jne L_error_non_closure
  7895 00004D72 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7896 00004D75 FF7508                  	push qword [rbp + 8 * 1]
  7897                                   ; old ret addr
  7898 00004D78 FF7500                  	push qword [rbp]
  7899                                   ; restore the old rbp
  7900 00004D7B BB02000000              	mov rbx, 2
  7901 00004D80 4883C303                	add rbx, 3
  7902 00004D84 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7903 00004D88 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7904 00004D8D 4C8D4DF8                	lea r9, [rbp - 8]
  7905 00004D91 B906000000              	mov rcx, 6
  7906                                  .L_tc_recycle_frame_loop_002f:
  7907 00004D96 4883F900                	cmp rcx, 0
  7908 00004D9A 7413                    	je .L_tc_recycle_frame_done_002f
  7909 00004D9C 4D8B11                  	mov r10, qword [r9]
  7910 00004D9F 4D8910                  	mov qword [r8], r10
  7911 00004DA2 4983E808                	sub r8, 8
  7912 00004DA6 4983E908                	sub r9, 8
  7913 00004DAA 48FFC9                  	dec rcx
  7914 00004DAD EBE7                    	jmp .L_tc_recycle_frame_loop_002f
  7915                                  .L_tc_recycle_frame_done_002f:
  7916 00004DAF 498D6008                	lea rsp, [r8 + 8]
  7917 00004DB3 5D                      	pop rbp ; restore the old rbp
  7918 00004DB4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7919                                  .L_if_end_000d:
  7920 00004DB7 C9                      	leave
  7921 00004DB8 C22000                  	ret AND_KILL_FRAME(2)
  7922                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7923 00004DBB 50                      	push rax
  7924 00004DBC 488B4528                	mov rax, PARAM(1)	; param run-2
  7925 00004DC0 8F00                    	pop qword [rax]
  7926 00004DC2 48B8-                   	mov rax, sob_void
  7926 00004DC4 [0000000000000000] 
  7927                                  
  7928 00004DCC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7929 00004DD1 E81F280100              	call malloc
  7930 00004DD6 50                      	push rax
  7931 00004DD7 BF10000000              	mov rdi, 8 * 2	; new rib
  7932 00004DDC E814280100              	call malloc
  7933 00004DE1 50                      	push rax
  7934 00004DE2 BF10000000              	mov rdi, 8 * 2	; extended env
  7935 00004DE7 E809280100              	call malloc
  7936 00004DEC 488B7D10                	mov rdi, ENV
  7937 00004DF0 4831F6                  	 xor rsi, rsi
  7938 00004DF3 4831D2                  	 xor rdx, rdx
  7939 00004DF6 48FFC2                  	inc rdx
  7940                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  7941 00004DF9 4883FE01                	cmp rsi, 1
  7942 00004DFD 7410                    	je .L_lambda_opt_env_end_0007
  7943 00004DFF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7944 00004E03 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7945 00004E07 48FFC6                  	inc rsi
  7946 00004E0A 48FFC2                  	inc rdx
  7947 00004E0D EBEA                    	jmp .L_lambda_opt_env_loop_0007
  7948                                  .L_lambda_opt_env_end_0007:
  7949 00004E0F 5B                      	pop rbx
  7950 00004E10 4831F6                  	xor rsi, rsi
  7951                                  .L_lambda_opt_params_loop_0007:	; copy params
  7952 00004E13 4883FE02                	cmp rsi, 2
  7953 00004E17 740E                    	je .L_lambda_opt_params_end_0007
  7954 00004E19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7955 00004E1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7956 00004E22 48FFC6                  	inc rsi
  7957 00004E25 EBEC                    	jmp .L_lambda_opt_params_loop_0007
  7958                                  .L_lambda_opt_params_end_0007:
  7959 00004E27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7960 00004E2A 4889C3                  	mov rbx, rax
  7961 00004E2D 58                      	pop rax
  7962 00004E2E C60004                  	mov byte [rax], T_closure
  7963 00004E31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7964 00004E35 48C74009[424E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  7965 00004E3D E9E1010000              	jmp .L_lambda_opt_end_0007
  7966                                  .L_lambda_opt_code_0007:; lambda opt body
  7967 00004E42 48837C241000            	cmp qword [rsp + 8 * 2], 0
  7968 00004E48 7409                    	je .L_lambda_opt_arity_check_exact_0007
  7969 00004E4A 7F57                    	jg .L_lambda_opt_arity_check_more_0007
  7970 00004E4C 6A00                    	push 0
  7971 00004E4E E96F270100              	jmp L_error_incorrect_arity_opt
  7972                                  .L_lambda_opt_arity_check_exact_0007:
  7973 00004E53 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  7974 00004E57 4C894C24F8              	mov qword [rsp -8], r9
  7975 00004E5C 4C8B4C2408              	mov r9, qword [rsp +8]
  7976 00004E61 4C890C24                	mov qword [rsp +8 * 0], r9
  7977 00004E65 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  7978 00004E6A 4C89C9                  	mov rcx, r9
  7979 00004E6D 49FFC1                  	inc r9
  7980 00004E70 4C894C2408              	mov qword [rsp +8], r9
  7981 00004E75 4889E2                  	mov rdx, rsp
  7982 00004E78 4883C218                	add rdx, 24
  7983                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0007:
  7984 00004E7C 4883F900                	cmp rcx, 0
  7985 00004E80 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0007
  7986 00004E82 4C8B02                  	mov r8, qword [rdx]
  7987 00004E85 4C8942F8                	mov qword [rdx - 8], r8
  7988 00004E89 4883C208                	add rdx, 8
  7989 00004E8D 48FFC9                  	dec rcx
  7990 00004E90 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0007
  7991                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0007:
  7992 00004E92 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  7993 00004E9A 4883EC08                	sub rsp, 8
  7994 00004E9E E984000000              	jmp .L_lambda_opt_stack_adjusted_0007
  7995                                  .L_lambda_opt_arity_check_more_0007:
  7996 00004EA3 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  7997 00004EA8 4D89C4                  	mov r12, r8
  7998 00004EAB 4C89C1                  	mov rcx, r8
  7999 00004EAE 4D8D5002                	lea r10, [r8 + 2] 
  8000 00004EB2 4883E900                	sub rcx, 0
  8001 00004EB6 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  8002 00004EBB 49B9-                   	mov r9, sob_nil
  8002 00004EBD [0100000000000000] 
  8003                                  .L_lambda_opt_create_list_of_opt_params_0007:
  8004 00004EC5 4883F900                	cmp rcx, 0
  8005 00004EC9 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0007
  8006 00004ECB BF11000000              	mov rdi, 17
  8007 00004ED0 E820270100              	call malloc
  8008 00004ED5 C60021                  	mov byte [rax], T_pair
  8009 00004ED8 498B1B                  	mov rbx, qword [r11]
  8010 00004EDB 48895801                	mov qword [rax +1], rbx
  8011 00004EDF 4C894809                	mov qword [rax + 1 + 8], r9
  8012 00004EE3 4989C1                  	mov r9, rax
  8013 00004EE6 48FFC9                  	dec rcx
  8014 00004EE9 4983EB08                	sub r11, 8
  8015 00004EED EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0007
  8016                                  .L_lambda_opt_create_list_of_opt_params_end_0007:
  8017 00004EEF 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
  8018 00004EF4 4D8908                  	mov qword [r8], r9
  8019 00004EF7 4E8D14D500000000        	lea r10, [8 * r10]
  8020 00004EFF 4901E2                  	add r10, rsp
  8021 00004F02 B904000000              	mov rcx, 4 + 0
  8022                                  .L_lambda_opt_stack_shrink_loop_0007:
  8023 00004F07 4883F900                	cmp rcx, 0
  8024 00004F0B 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0007
  8025 00004F0D 4D8B18                  	mov r11, qword [r8]
  8026 00004F10 4D891A                  	mov qword [r10], r11
  8027 00004F13 4983E808                	sub r8, 8
  8028 00004F17 4983EA08                	sub r10, 8
  8029 00004F1B 48FFC9                  	dec rcx
  8030 00004F1E EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  8031                                  .L_lambda_opt_stack_shrink_loop_exit_0007:
  8032 00004F20 4983C208                	add r10, 8
  8033 00004F24 4C89D4                  	mov rsp, r10
  8034                                  .L_lambda_opt_stack_adjusted_0007:;continue with the code, the stack is ok
  8035 00004F27 48C744241001000000      	mov qword [rsp + 8*2], 1
  8036 00004F30 C8000000                	enter 0, 0
  8037                                  	; preparing a non-tail-call
  8038 00004F34 488B4520                	mov rax, PARAM(0)	; param s
  8039 00004F38 50                      	push rax
  8040 00004F39 6A01                    	push 1	; arg count
  8041 00004F3B 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8042 00004F43 803805                  	cmp byte [rax], T_undefined
  8043 00004F46 0F847C250100            	je L_error_fvar_undefined
  8044 00004F4C 803804                  	cmp byte [rax], T_closure
  8045 00004F4F 0F85F7250100            	jne L_error_non_closure
  8046 00004F55 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8047 00004F58 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8048 00004F5B 483D[02000000]          	cmp rax, sob_boolean_false
  8049 00004F61 740F                    	je .L_if_else_000e
  8050 00004F63 48B8-                   	mov rax, L_constants + 1
  8050 00004F65 [0100000000000000] 
  8051 00004F6D E9AD000000              	jmp .L_if_end_000e
  8052                                  .L_if_else_000e:
  8053                                  	; preparing a tail-call
  8054                                  	; preparing a non-tail-call
  8055 00004F72 488B4520                	mov rax, PARAM(0)	; param s
  8056 00004F76 50                      	push rax
  8057 00004F77 6A01                    	push 1	; arg count
  8058 00004F79 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8059 00004F81 803805                  	cmp byte [rax], T_undefined
  8060 00004F84 0F843E250100            	je L_error_fvar_undefined
  8061 00004F8A 803804                  	cmp byte [rax], T_closure
  8062 00004F8D 0F85B9250100            	jne L_error_non_closure
  8063 00004F93 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8064 00004F96 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8065 00004F99 50                      	push rax
  8066                                  	; preparing a non-tail-call
  8067 00004F9A 488B4520                	mov rax, PARAM(0)	; param s
  8068 00004F9E 50                      	push rax
  8069 00004F9F 6A01                    	push 1	; arg count
  8070 00004FA1 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8071 00004FA9 803805                  	cmp byte [rax], T_undefined
  8072 00004FAC 0F8416250100            	je L_error_fvar_undefined
  8073 00004FB2 803804                  	cmp byte [rax], T_closure
  8074 00004FB5 0F8591250100            	jne L_error_non_closure
  8075 00004FBB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8076 00004FBE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8077 00004FC1 50                      	push rax
  8078 00004FC2 6A02                    	push 2	; arg count
  8079 00004FC4 488B4510                	mov rax, ENV
  8080 00004FC8 488B00                  	mov rax, qword [rax + 8 * 0]
  8081 00004FCB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8082 00004FCE 488B00                  	mov rax, qword [rax]
  8083 00004FD1 803804                  	cmp byte [rax], T_closure
  8084 00004FD4 0F8572250100            	jne L_error_non_closure
  8085 00004FDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8086 00004FDD FF7508                  	push qword [rbp + 8 * 1]
  8087                                   ; old ret addr
  8088 00004FE0 FF7500                  	push qword [rbp]
  8089                                   ; restore the old rbp
  8090 00004FE3 BB02000000              	mov rbx, 2
  8091 00004FE8 4883C303                	add rbx, 3
  8092 00004FEC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8093 00004FF0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8094 00004FF5 4C8D4DF8                	lea r9, [rbp - 8]
  8095 00004FF9 B906000000              	mov rcx, 6
  8096                                  .L_tc_recycle_frame_loop_0030:
  8097 00004FFE 4883F900                	cmp rcx, 0
  8098 00005002 7413                    	je .L_tc_recycle_frame_done_0030
  8099 00005004 4D8B11                  	mov r10, qword [r9]
  8100 00005007 4D8910                  	mov qword [r8], r10
  8101 0000500A 4983E808                	sub r8, 8
  8102 0000500E 4983E908                	sub r9, 8
  8103 00005012 48FFC9                  	dec rcx
  8104 00005015 EBE7                    	jmp .L_tc_recycle_frame_loop_0030
  8105                                  .L_tc_recycle_frame_done_0030:
  8106 00005017 498D6008                	lea rsp, [r8 + 8]
  8107 0000501B 5D                      	pop rbp ; restore the old rbp
  8108 0000501C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8109                                  .L_if_end_000e:
  8110 0000501F C9                      	leave
  8111 00005020 C21800                  	ret 8 * (2 + 1)
  8112                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8113 00005023 C9                      	leave
  8114 00005024 C22000                  	ret AND_KILL_FRAME(2)
  8115                                  .L_lambda_simple_end_002d:	; new closure is in rax
  8116 00005027 803804                  	cmp byte [rax], T_closure
  8117 0000502A 0F851C250100            	jne L_error_non_closure
  8118 00005030 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8119 00005033 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8120 00005036 48890425[E50F0000]      	mov qword [free_var_32], rax
  8121 0000503E 48B8-                   	mov rax, sob_void
  8121 00005040 [0000000000000000] 
  8122                                  
  8123 00005048 4889C7                  	mov rdi, rax
  8124 0000504B E8FA270100              	call print_sexpr_if_not_void
  8125                                  	; preparing a non-tail-call
  8126 00005050 48B8-                   	mov rax, L_constants + 1993
  8126 00005052 [C907000000000000] 
  8127 0000505A 50                      	push rax
  8128 0000505B 6A01                    	push 1	; arg count
  8129 0000505D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8130 00005062 E88E250100              	call malloc
  8131 00005067 50                      	push rax
  8132 00005068 BF00000000              	mov rdi, 8 * 0	; new rib
  8133 0000506D E883250100              	call malloc
  8134 00005072 50                      	push rax
  8135 00005073 BF08000000              	mov rdi, 8 * 1	; extended env
  8136 00005078 E878250100              	call malloc
  8137 0000507D 488B7D10                	mov rdi, ENV
  8138 00005081 BE00000000              	mov rsi, 0
  8139 00005086 BA01000000              	mov rdx, 1
  8140                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  8141 0000508B 4883FE00                	cmp rsi, 0
  8142 0000508F 7410                    	je .L_lambda_simple_env_end_0030
  8143 00005091 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8144 00005095 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8145 00005099 48FFC6                  	inc rsi
  8146 0000509C 48FFC2                  	inc rdx
  8147 0000509F EBEA                    	jmp .L_lambda_simple_env_loop_0030
  8148                                  .L_lambda_simple_env_end_0030:
  8149 000050A1 5B                      	pop rbx
  8150 000050A2 BE00000000              	mov rsi, 0
  8151                                  .L_lambda_simple_params_loop_0030:	; copy params
  8152 000050A7 4883FE00                	cmp rsi, 0
  8153 000050AB 740E                    	je .L_lambda_simple_params_end_0030
  8154 000050AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8155 000050B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8156 000050B6 48FFC6                  	inc rsi
  8157 000050B9 EBEC                    	jmp .L_lambda_simple_params_loop_0030
  8158                                  .L_lambda_simple_params_end_0030:
  8159 000050BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8160 000050BE 4889C3                  	mov rbx, rax
  8161 000050C1 58                      	pop rax
  8162 000050C2 C60004                  	mov byte [rax], T_closure
  8163 000050C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8164 000050C9 48C74009[D6500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  8165 000050D1 E904040000              	jmp .L_lambda_simple_end_0030
  8166                                  .L_lambda_simple_code_0030:	; lambda-simple body
  8167 000050D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8168 000050DC 740B                    	je .L_lambda_simple_arity_check_ok_0030
  8169 000050DE FF742410                	push qword [rsp + 8 * 2]
  8170 000050E2 6A01                    	push 1
  8171 000050E4 E9C5240100              	jmp L_error_incorrect_arity_simple
  8172                                  .L_lambda_simple_arity_check_ok_0030:
  8173 000050E9 C8000000                	enter 0, 0
  8174 000050ED BF08000000              	mov rdi, 8*1
  8175 000050F2 E8FE240100              	call malloc
  8176 000050F7 488B5D20                	mov rbx, PARAM(0)
  8177 000050FB 488918                  	mov qword [rax], rbx
  8178 000050FE 48894520                	mov PARAM(0), rax
  8179 00005102 48B8-                   	mov rax, sob_void
  8179 00005104 [0000000000000000] 
  8180                                  
  8181 0000510C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8182 00005111 E8DF240100              	call malloc
  8183 00005116 50                      	push rax
  8184 00005117 BF08000000              	mov rdi, 8 * 1	; new rib
  8185 0000511C E8D4240100              	call malloc
  8186 00005121 50                      	push rax
  8187 00005122 BF10000000              	mov rdi, 8 * 2	; extended env
  8188 00005127 E8C9240100              	call malloc
  8189 0000512C 488B7D10                	mov rdi, ENV
  8190 00005130 BE00000000              	mov rsi, 0
  8191 00005135 BA01000000              	mov rdx, 1
  8192                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  8193 0000513A 4883FE01                	cmp rsi, 1
  8194 0000513E 7410                    	je .L_lambda_simple_env_end_0031
  8195 00005140 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8196 00005144 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8197 00005148 48FFC6                  	inc rsi
  8198 0000514B 48FFC2                  	inc rdx
  8199 0000514E EBEA                    	jmp .L_lambda_simple_env_loop_0031
  8200                                  .L_lambda_simple_env_end_0031:
  8201 00005150 5B                      	pop rbx
  8202 00005151 BE00000000              	mov rsi, 0
  8203                                  .L_lambda_simple_params_loop_0031:	; copy params
  8204 00005156 4883FE01                	cmp rsi, 1
  8205 0000515A 740E                    	je .L_lambda_simple_params_end_0031
  8206 0000515C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8207 00005161 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8208 00005165 48FFC6                  	inc rsi
  8209 00005168 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  8210                                  .L_lambda_simple_params_end_0031:
  8211 0000516A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8212 0000516D 4889C3                  	mov rbx, rax
  8213 00005170 58                      	pop rax
  8214 00005171 C60004                  	mov byte [rax], T_closure
  8215 00005174 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8216 00005178 48C74009[85510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  8217 00005180 E968010000              	jmp .L_lambda_simple_end_0031
  8218                                  .L_lambda_simple_code_0031:	; lambda-simple body
  8219 00005185 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8220 0000518B 740B                    	je .L_lambda_simple_arity_check_ok_0031
  8221 0000518D FF742410                	push qword [rsp + 8 * 2]
  8222 00005191 6A03                    	push 3
  8223 00005193 E916240100              	jmp L_error_incorrect_arity_simple
  8224                                  .L_lambda_simple_arity_check_ok_0031:
  8225 00005198 C8000000                	enter 0, 0
  8226                                  	; preparing a non-tail-call
  8227 0000519C 488B4530                	mov rax, PARAM(2)	; param ss
  8228 000051A0 50                      	push rax
  8229 000051A1 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8230 000051A9 803805                  	cmp byte [rax], T_undefined
  8231 000051AC 0F8416230100            	je L_error_fvar_undefined
  8232 000051B2 50                      	push rax
  8233 000051B3 6A02                    	push 2	; arg count
  8234 000051B5 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8235 000051BD 803805                  	cmp byte [rax], T_undefined
  8236 000051C0 0F8402230100            	je L_error_fvar_undefined
  8237 000051C6 803804                  	cmp byte [rax], T_closure
  8238 000051C9 0F857D230100            	jne L_error_non_closure
  8239 000051CF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8240 000051D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8241 000051D5 483D[02000000]          	cmp rax, sob_boolean_false
  8242 000051DB 7409                    	je .L_if_else_000f
  8243 000051DD 488B4528                	mov rax, PARAM(1)	; param unit
  8244 000051E1 E903010000              	jmp .L_if_end_000f
  8245                                  .L_if_else_000f:
  8246                                  	; preparing a tail-call
  8247                                  	; preparing a non-tail-call
  8248 000051E6 488B4530                	mov rax, PARAM(2)	; param ss
  8249 000051EA 50                      	push rax
  8250 000051EB 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8251 000051F3 803805                  	cmp byte [rax], T_undefined
  8252 000051F6 0F84CC220100            	je L_error_fvar_undefined
  8253 000051FC 50                      	push rax
  8254 000051FD 6A02                    	push 2	; arg count
  8255 000051FF 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8256 00005207 803805                  	cmp byte [rax], T_undefined
  8257 0000520A 0F84B8220100            	je L_error_fvar_undefined
  8258 00005210 803804                  	cmp byte [rax], T_closure
  8259 00005213 0F8533230100            	jne L_error_non_closure
  8260 00005219 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8261 0000521C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8262 0000521F 50                      	push rax
  8263                                  	; preparing a non-tail-call
  8264                                  	; preparing a non-tail-call
  8265 00005220 488B4530                	mov rax, PARAM(2)	; param ss
  8266 00005224 50                      	push rax
  8267 00005225 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8268 0000522D 803805                  	cmp byte [rax], T_undefined
  8269 00005230 0F8492220100            	je L_error_fvar_undefined
  8270 00005236 50                      	push rax
  8271 00005237 6A02                    	push 2	; arg count
  8272 00005239 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8273 00005241 803805                  	cmp byte [rax], T_undefined
  8274 00005244 0F847E220100            	je L_error_fvar_undefined
  8275 0000524A 803804                  	cmp byte [rax], T_closure
  8276 0000524D 0F85F9220100            	jne L_error_non_closure
  8277 00005253 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8278 00005256 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8279 00005259 50                      	push rax
  8280 0000525A 488B4528                	mov rax, PARAM(1)	; param unit
  8281 0000525E 50                      	push rax
  8282 0000525F 488B4520                	mov rax, PARAM(0)	; param f
  8283 00005263 50                      	push rax
  8284 00005264 6A03                    	push 3	; arg count
  8285 00005266 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8286 0000526E 803805                  	cmp byte [rax], T_undefined
  8287 00005271 0F8451220100            	je L_error_fvar_undefined
  8288 00005277 803804                  	cmp byte [rax], T_closure
  8289 0000527A 0F85CC220100            	jne L_error_non_closure
  8290 00005280 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8291 00005283 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8292 00005286 50                      	push rax
  8293 00005287 488B4520                	mov rax, PARAM(0)	; param f
  8294 0000528B 50                      	push rax
  8295 0000528C 6A03                    	push 3	; arg count
  8296 0000528E 488B4510                	mov rax, ENV
  8297 00005292 488B00                  	mov rax, qword [rax + 8 * 0]
  8298 00005295 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8299 00005298 488B00                  	mov rax, qword [rax]
  8300 0000529B 803804                  	cmp byte [rax], T_closure
  8301 0000529E 0F85A8220100            	jne L_error_non_closure
  8302 000052A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8303 000052A7 FF7508                  	push qword [rbp + 8 * 1]
  8304                                   ; old ret addr
  8305 000052AA FF7500                  	push qword [rbp]
  8306                                   ; restore the old rbp
  8307 000052AD BB03000000              	mov rbx, 3
  8308 000052B2 4883C303                	add rbx, 3
  8309 000052B6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8310 000052BA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8311 000052BF 4C8D4DF8                	lea r9, [rbp - 8]
  8312 000052C3 B907000000              	mov rcx, 7
  8313                                  .L_tc_recycle_frame_loop_0031:
  8314 000052C8 4883F900                	cmp rcx, 0
  8315 000052CC 7413                    	je .L_tc_recycle_frame_done_0031
  8316 000052CE 4D8B11                  	mov r10, qword [r9]
  8317 000052D1 4D8910                  	mov qword [r8], r10
  8318 000052D4 4983E808                	sub r8, 8
  8319 000052D8 4983E908                	sub r9, 8
  8320 000052DC 48FFC9                  	dec rcx
  8321 000052DF EBE7                    	jmp .L_tc_recycle_frame_loop_0031
  8322                                  .L_tc_recycle_frame_done_0031:
  8323 000052E1 498D6008                	lea rsp, [r8 + 8]
  8324 000052E5 5D                      	pop rbp ; restore the old rbp
  8325 000052E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8326                                  .L_if_end_000f:
  8327 000052E9 C9                      	leave
  8328 000052EA C22800                  	ret AND_KILL_FRAME(3)
  8329                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8330 000052ED 50                      	push rax
  8331 000052EE 488B4520                	mov rax, PARAM(0)	; param run
  8332 000052F2 8F00                    	pop qword [rax]
  8333 000052F4 48B8-                   	mov rax, sob_void
  8333 000052F6 [0000000000000000] 
  8334                                  
  8335 000052FE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8336 00005303 E8ED220100              	call malloc
  8337 00005308 50                      	push rax
  8338 00005309 BF08000000              	mov rdi, 8 * 1	; new rib
  8339 0000530E E8E2220100              	call malloc
  8340 00005313 50                      	push rax
  8341 00005314 BF10000000              	mov rdi, 8 * 2	; extended env
  8342 00005319 E8D7220100              	call malloc
  8343 0000531E 488B7D10                	mov rdi, ENV
  8344 00005322 4831F6                  	 xor rsi, rsi
  8345 00005325 4831D2                  	 xor rdx, rdx
  8346 00005328 48FFC2                  	inc rdx
  8347                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  8348 0000532B 4883FE01                	cmp rsi, 1
  8349 0000532F 7410                    	je .L_lambda_opt_env_end_0008
  8350 00005331 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8351 00005335 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8352 00005339 48FFC6                  	inc rsi
  8353 0000533C 48FFC2                  	inc rdx
  8354 0000533F EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8355                                  .L_lambda_opt_env_end_0008:
  8356 00005341 5B                      	pop rbx
  8357 00005342 4831F6                  	xor rsi, rsi
  8358                                  .L_lambda_opt_params_loop_0008:	; copy params
  8359 00005345 4883FE01                	cmp rsi, 1
  8360 00005349 740E                    	je .L_lambda_opt_params_end_0008
  8361 0000534B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8362 00005350 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8363 00005354 48FFC6                  	inc rsi
  8364 00005357 EBEC                    	jmp .L_lambda_opt_params_loop_0008
  8365                                  .L_lambda_opt_params_end_0008:
  8366 00005359 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8367 0000535C 4889C3                  	mov rbx, rax
  8368 0000535F 58                      	pop rax
  8369 00005360 C60004                  	mov byte [rax], T_closure
  8370 00005363 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8371 00005367 48C74009[74530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8372 0000536F E962010000              	jmp .L_lambda_opt_end_0008
  8373                                  .L_lambda_opt_code_0008:; lambda opt body
  8374 00005374 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8375 0000537A 7409                    	je .L_lambda_opt_arity_check_exact_0008
  8376 0000537C 7F57                    	jg .L_lambda_opt_arity_check_more_0008
  8377 0000537E 6A02                    	push 2
  8378 00005380 E93D220100              	jmp L_error_incorrect_arity_opt
  8379                                  .L_lambda_opt_arity_check_exact_0008:
  8380 00005385 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  8381 00005389 4C894C24F8              	mov qword [rsp -8], r9
  8382 0000538E 4C8B4C2408              	mov r9, qword [rsp +8]
  8383 00005393 4C890C24                	mov qword [rsp +8 * 0], r9
  8384 00005397 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  8385 0000539C 4C89C9                  	mov rcx, r9
  8386 0000539F 49FFC1                  	inc r9
  8387 000053A2 4C894C2408              	mov qword [rsp +8], r9
  8388 000053A7 4889E2                  	mov rdx, rsp
  8389 000053AA 4883C218                	add rdx, 24
  8390                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0008:
  8391 000053AE 4883F900                	cmp rcx, 0
  8392 000053B2 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0008
  8393 000053B4 4C8B02                  	mov r8, qword [rdx]
  8394 000053B7 4C8942F8                	mov qword [rdx - 8], r8
  8395 000053BB 4883C208                	add rdx, 8
  8396 000053BF 48FFC9                  	dec rcx
  8397 000053C2 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0008
  8398                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0008:
  8399 000053C4 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8400 000053CC 4883EC08                	sub rsp, 8
  8401 000053D0 E984000000              	jmp .L_lambda_opt_stack_adjusted_0008
  8402                                  .L_lambda_opt_arity_check_more_0008:
  8403 000053D5 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8404 000053DA 4D89C4                  	mov r12, r8
  8405 000053DD 4C89C1                  	mov rcx, r8
  8406 000053E0 4D8D5002                	lea r10, [r8 + 2] 
  8407 000053E4 4883E902                	sub rcx, 2
  8408 000053E8 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  8409 000053ED 49B9-                   	mov r9, sob_nil
  8409 000053EF [0100000000000000] 
  8410                                  .L_lambda_opt_create_list_of_opt_params_0008:
  8411 000053F7 4883F900                	cmp rcx, 0
  8412 000053FB 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0008
  8413 000053FD BF11000000              	mov rdi, 17
  8414 00005402 E8EE210100              	call malloc
  8415 00005407 C60021                  	mov byte [rax], T_pair
  8416 0000540A 498B1B                  	mov rbx, qword [r11]
  8417 0000540D 48895801                	mov qword [rax +1], rbx
  8418 00005411 4C894809                	mov qword [rax + 1 + 8], r9
  8419 00005415 4989C1                  	mov r9, rax
  8420 00005418 48FFC9                  	dec rcx
  8421 0000541B 4983EB08                	sub r11, 8
  8422 0000541F EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0008
  8423                                  .L_lambda_opt_create_list_of_opt_params_end_0008:
  8424 00005421 4C8D442428              	lea r8, [rsp + 2*8 + 8*3]
  8425 00005426 4D8908                  	mov qword [r8], r9
  8426 00005429 4E8D14D500000000        	lea r10, [8 * r10]
  8427 00005431 4901E2                  	add r10, rsp
  8428 00005434 B906000000              	mov rcx, 4 + 2
  8429                                  .L_lambda_opt_stack_shrink_loop_0008:
  8430 00005439 4883F900                	cmp rcx, 0
  8431 0000543D 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0008
  8432 0000543F 4D8B18                  	mov r11, qword [r8]
  8433 00005442 4D891A                  	mov qword [r10], r11
  8434 00005445 4983E808                	sub r8, 8
  8435 00005449 4983EA08                	sub r10, 8
  8436 0000544D 48FFC9                  	dec rcx
  8437 00005450 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8438                                  .L_lambda_opt_stack_shrink_loop_exit_0008:
  8439 00005452 4983C208                	add r10, 8
  8440 00005456 4C89D4                  	mov rsp, r10
  8441                                  .L_lambda_opt_stack_adjusted_0008:;continue with the code, the stack is ok
  8442 00005459 48C744241003000000      	mov qword [rsp + 8*2], 3
  8443 00005462 C8000000                	enter 0, 0
  8444                                  	; preparing a tail-call
  8445 00005466 488B4530                	mov rax, PARAM(2)	; param ss
  8446 0000546A 50                      	push rax
  8447 0000546B 488B4528                	mov rax, PARAM(1)	; param unit
  8448 0000546F 50                      	push rax
  8449 00005470 488B4520                	mov rax, PARAM(0)	; param f
  8450 00005474 50                      	push rax
  8451 00005475 6A03                    	push 3	; arg count
  8452 00005477 488B4510                	mov rax, ENV
  8453 0000547B 488B00                  	mov rax, qword [rax + 8 * 0]
  8454 0000547E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8455 00005481 488B00                  	mov rax, qword [rax]
  8456 00005484 803804                  	cmp byte [rax], T_closure
  8457 00005487 0F85BF200100            	jne L_error_non_closure
  8458 0000548D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8459 00005490 FF7508                  	push qword [rbp + 8 * 1]
  8460                                   ; old ret addr
  8461 00005493 FF7500                  	push qword [rbp]
  8462                                   ; restore the old rbp
  8463 00005496 BB03000000              	mov rbx, 3
  8464 0000549B 4883C303                	add rbx, 3
  8465 0000549F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8466 000054A3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8467 000054A8 4C8D4DF8                	lea r9, [rbp - 8]
  8468 000054AC B907000000              	mov rcx, 7
  8469                                  .L_tc_recycle_frame_loop_0032:
  8470 000054B1 4883F900                	cmp rcx, 0
  8471 000054B5 7413                    	je .L_tc_recycle_frame_done_0032
  8472 000054B7 4D8B11                  	mov r10, qword [r9]
  8473 000054BA 4D8910                  	mov qword [r8], r10
  8474 000054BD 4983E808                	sub r8, 8
  8475 000054C1 4983E908                	sub r9, 8
  8476 000054C5 48FFC9                  	dec rcx
  8477 000054C8 EBE7                    	jmp .L_tc_recycle_frame_loop_0032
  8478                                  .L_tc_recycle_frame_done_0032:
  8479 000054CA 498D6008                	lea rsp, [r8 + 8]
  8480 000054CE 5D                      	pop rbp ; restore the old rbp
  8481 000054CF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8482 000054D2 C9                      	leave
  8483 000054D3 C22800                  	ret 8 * (2 + 3)
  8484                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8485 000054D6 C9                      	leave
  8486 000054D7 C21800                  	ret AND_KILL_FRAME(1)
  8487                                  .L_lambda_simple_end_0030:	; new closure is in rax
  8488 000054DA 803804                  	cmp byte [rax], T_closure
  8489 000054DD 0F8569200100            	jne L_error_non_closure
  8490 000054E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8491 000054E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8492 000054E9 48890425[6A130000]      	mov qword [free_var_85], rax
  8493 000054F1 48B8-                   	mov rax, sob_void
  8493 000054F3 [0000000000000000] 
  8494                                  
  8495 000054FB 4889C7                  	mov rdi, rax
  8496 000054FE E847230100              	call print_sexpr_if_not_void
  8497                                  	; preparing a non-tail-call
  8498 00005503 48B8-                   	mov rax, L_constants + 1993
  8498 00005505 [C907000000000000] 
  8499 0000550D 50                      	push rax
  8500 0000550E 6A01                    	push 1	; arg count
  8501 00005510 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8502 00005515 E8DB200100              	call malloc
  8503 0000551A 50                      	push rax
  8504 0000551B BF00000000              	mov rdi, 8 * 0	; new rib
  8505 00005520 E8D0200100              	call malloc
  8506 00005525 50                      	push rax
  8507 00005526 BF08000000              	mov rdi, 8 * 1	; extended env
  8508 0000552B E8C5200100              	call malloc
  8509 00005530 488B7D10                	mov rdi, ENV
  8510 00005534 BE00000000              	mov rsi, 0
  8511 00005539 BA01000000              	mov rdx, 1
  8512                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8513 0000553E 4883FE00                	cmp rsi, 0
  8514 00005542 7410                    	je .L_lambda_simple_env_end_0032
  8515 00005544 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8516 00005548 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8517 0000554C 48FFC6                  	inc rsi
  8518 0000554F 48FFC2                  	inc rdx
  8519 00005552 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8520                                  .L_lambda_simple_env_end_0032:
  8521 00005554 5B                      	pop rbx
  8522 00005555 BE00000000              	mov rsi, 0
  8523                                  .L_lambda_simple_params_loop_0032:	; copy params
  8524 0000555A 4883FE00                	cmp rsi, 0
  8525 0000555E 740E                    	je .L_lambda_simple_params_end_0032
  8526 00005560 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8527 00005565 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8528 00005569 48FFC6                  	inc rsi
  8529 0000556C EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8530                                  .L_lambda_simple_params_end_0032:
  8531 0000556E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8532 00005571 4889C3                  	mov rbx, rax
  8533 00005574 58                      	pop rax
  8534 00005575 C60004                  	mov byte [rax], T_closure
  8535 00005578 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8536 0000557C 48C74009[89550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8537 00005584 E955040000              	jmp .L_lambda_simple_end_0032
  8538                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8539 00005589 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8540 0000558F 740B                    	je .L_lambda_simple_arity_check_ok_0032
  8541 00005591 FF742410                	push qword [rsp + 8 * 2]
  8542 00005595 6A01                    	push 1
  8543 00005597 E912200100              	jmp L_error_incorrect_arity_simple
  8544                                  .L_lambda_simple_arity_check_ok_0032:
  8545 0000559C C8000000                	enter 0, 0
  8546 000055A0 BF08000000              	mov rdi, 8*1
  8547 000055A5 E84B200100              	call malloc
  8548 000055AA 488B5D20                	mov rbx, PARAM(0)
  8549 000055AE 488918                  	mov qword [rax], rbx
  8550 000055B1 48894520                	mov PARAM(0), rax
  8551 000055B5 48B8-                   	mov rax, sob_void
  8551 000055B7 [0000000000000000] 
  8552                                  
  8553 000055BF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8554 000055C4 E82C200100              	call malloc
  8555 000055C9 50                      	push rax
  8556 000055CA BF08000000              	mov rdi, 8 * 1	; new rib
  8557 000055CF E821200100              	call malloc
  8558 000055D4 50                      	push rax
  8559 000055D5 BF10000000              	mov rdi, 8 * 2	; extended env
  8560 000055DA E816200100              	call malloc
  8561 000055DF 488B7D10                	mov rdi, ENV
  8562 000055E3 BE00000000              	mov rsi, 0
  8563 000055E8 BA01000000              	mov rdx, 1
  8564                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8565 000055ED 4883FE01                	cmp rsi, 1
  8566 000055F1 7410                    	je .L_lambda_simple_env_end_0033
  8567 000055F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8568 000055F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8569 000055FB 48FFC6                  	inc rsi
  8570 000055FE 48FFC2                  	inc rdx
  8571 00005601 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8572                                  .L_lambda_simple_env_end_0033:
  8573 00005603 5B                      	pop rbx
  8574 00005604 BE00000000              	mov rsi, 0
  8575                                  .L_lambda_simple_params_loop_0033:	; copy params
  8576 00005609 4883FE01                	cmp rsi, 1
  8577 0000560D 740E                    	je .L_lambda_simple_params_end_0033
  8578 0000560F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8579 00005614 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8580 00005618 48FFC6                  	inc rsi
  8581 0000561B EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8582                                  .L_lambda_simple_params_end_0033:
  8583 0000561D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8584 00005620 4889C3                  	mov rbx, rax
  8585 00005623 58                      	pop rax
  8586 00005624 C60004                  	mov byte [rax], T_closure
  8587 00005627 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8588 0000562B 48C74009[38560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8589 00005633 E9B9010000              	jmp .L_lambda_simple_end_0033
  8590                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8591 00005638 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8592 0000563E 740B                    	je .L_lambda_simple_arity_check_ok_0033
  8593 00005640 FF742410                	push qword [rsp + 8 * 2]
  8594 00005644 6A03                    	push 3
  8595 00005646 E9631F0100              	jmp L_error_incorrect_arity_simple
  8596                                  .L_lambda_simple_arity_check_ok_0033:
  8597 0000564B C8000000                	enter 0, 0
  8598                                  	; preparing a non-tail-call
  8599 0000564F 488B4530                	mov rax, PARAM(2)	; param ss
  8600 00005653 50                      	push rax
  8601 00005654 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8602 0000565C 803805                  	cmp byte [rax], T_undefined
  8603 0000565F 0F84631E0100            	je L_error_fvar_undefined
  8604 00005665 50                      	push rax
  8605 00005666 6A02                    	push 2	; arg count
  8606 00005668 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8607 00005670 803805                  	cmp byte [rax], T_undefined
  8608 00005673 0F844F1E0100            	je L_error_fvar_undefined
  8609 00005679 803804                  	cmp byte [rax], T_closure
  8610 0000567C 0F85CA1E0100            	jne L_error_non_closure
  8611 00005682 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8612 00005685 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8613 00005688 483D[02000000]          	cmp rax, sob_boolean_false
  8614 0000568E 7409                    	je .L_if_else_0010
  8615 00005690 488B4528                	mov rax, PARAM(1)	; param unit
  8616 00005694 E954010000              	jmp .L_if_end_0010
  8617                                  .L_if_else_0010:
  8618                                  	; preparing a tail-call
  8619                                  	; preparing a non-tail-call
  8620                                  	; preparing a non-tail-call
  8621 00005699 48B8-                   	mov rax, L_constants + 1
  8621 0000569B [0100000000000000] 
  8622 000056A3 50                      	push rax
  8623                                  	; preparing a non-tail-call
  8624                                  	; preparing a non-tail-call
  8625 000056A4 488B4530                	mov rax, PARAM(2)	; param ss
  8626 000056A8 50                      	push rax
  8627 000056A9 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8628 000056B1 803805                  	cmp byte [rax], T_undefined
  8629 000056B4 0F840E1E0100            	je L_error_fvar_undefined
  8630 000056BA 50                      	push rax
  8631 000056BB 6A02                    	push 2	; arg count
  8632 000056BD 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8633 000056C5 803805                  	cmp byte [rax], T_undefined
  8634 000056C8 0F84FA1D0100            	je L_error_fvar_undefined
  8635 000056CE 803804                  	cmp byte [rax], T_closure
  8636 000056D1 0F85751E0100            	jne L_error_non_closure
  8637 000056D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8638 000056DA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8639 000056DD 50                      	push rax
  8640 000056DE 488B4528                	mov rax, PARAM(1)	; param unit
  8641 000056E2 50                      	push rax
  8642 000056E3 488B4520                	mov rax, PARAM(0)	; param f
  8643 000056E7 50                      	push rax
  8644 000056E8 6A03                    	push 3	; arg count
  8645 000056EA 488B4510                	mov rax, ENV
  8646 000056EE 488B00                  	mov rax, qword [rax + 8 * 0]
  8647 000056F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8648 000056F4 488B00                  	mov rax, qword [rax]
  8649 000056F7 803804                  	cmp byte [rax], T_closure
  8650 000056FA 0F854C1E0100            	jne L_error_non_closure
  8651 00005700 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8652 00005703 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8653 00005706 50                      	push rax
  8654 00005707 6A02                    	push 2	; arg count
  8655 00005709 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  8656 00005711 803805                  	cmp byte [rax], T_undefined
  8657 00005714 0F84AE1D0100            	je L_error_fvar_undefined
  8658 0000571A 803804                  	cmp byte [rax], T_closure
  8659 0000571D 0F85291E0100            	jne L_error_non_closure
  8660 00005723 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8661 00005726 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8662 00005729 50                      	push rax
  8663                                  	; preparing a non-tail-call
  8664 0000572A 488B4530                	mov rax, PARAM(2)	; param ss
  8665 0000572E 50                      	push rax
  8666 0000572F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8667 00005737 803805                  	cmp byte [rax], T_undefined
  8668 0000573A 0F84881D0100            	je L_error_fvar_undefined
  8669 00005740 50                      	push rax
  8670 00005741 6A02                    	push 2	; arg count
  8671 00005743 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8672 0000574B 803805                  	cmp byte [rax], T_undefined
  8673 0000574E 0F84741D0100            	je L_error_fvar_undefined
  8674 00005754 803804                  	cmp byte [rax], T_closure
  8675 00005757 0F85EF1D0100            	jne L_error_non_closure
  8676 0000575D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8677 00005760 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8678 00005763 50                      	push rax
  8679 00005764 6A02                    	push 2	; arg count
  8680 00005766 488B0425[E50F0000]      	mov rax, qword [free_var_32]	; free var append
  8681 0000576E 803805                  	cmp byte [rax], T_undefined
  8682 00005771 0F84511D0100            	je L_error_fvar_undefined
  8683 00005777 803804                  	cmp byte [rax], T_closure
  8684 0000577A 0F85CC1D0100            	jne L_error_non_closure
  8685 00005780 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8686 00005783 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8687 00005786 50                      	push rax
  8688 00005787 488B4520                	mov rax, PARAM(0)	; param f
  8689 0000578B 50                      	push rax
  8690 0000578C 6A02                    	push 2	; arg count
  8691 0000578E 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8692 00005796 803805                  	cmp byte [rax], T_undefined
  8693 00005799 0F84291D0100            	je L_error_fvar_undefined
  8694 0000579F 803804                  	cmp byte [rax], T_closure
  8695 000057A2 0F85A41D0100            	jne L_error_non_closure
  8696 000057A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8697 000057AB FF7508                  	push qword [rbp + 8 * 1]
  8698                                   ; old ret addr
  8699 000057AE FF7500                  	push qword [rbp]
  8700                                   ; restore the old rbp
  8701 000057B1 BB02000000              	mov rbx, 2
  8702 000057B6 4883C303                	add rbx, 3
  8703 000057BA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8704 000057BE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8705 000057C3 4C8D4DF8                	lea r9, [rbp - 8]
  8706 000057C7 B906000000              	mov rcx, 6
  8707                                  .L_tc_recycle_frame_loop_0033:
  8708 000057CC 4883F900                	cmp rcx, 0
  8709 000057D0 7413                    	je .L_tc_recycle_frame_done_0033
  8710 000057D2 4D8B11                  	mov r10, qword [r9]
  8711 000057D5 4D8910                  	mov qword [r8], r10
  8712 000057D8 4983E808                	sub r8, 8
  8713 000057DC 4983E908                	sub r9, 8
  8714 000057E0 48FFC9                  	dec rcx
  8715 000057E3 EBE7                    	jmp .L_tc_recycle_frame_loop_0033
  8716                                  .L_tc_recycle_frame_done_0033:
  8717 000057E5 498D6008                	lea rsp, [r8 + 8]
  8718 000057E9 5D                      	pop rbp ; restore the old rbp
  8719 000057EA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8720                                  .L_if_end_0010:
  8721 000057ED C9                      	leave
  8722 000057EE C22800                  	ret AND_KILL_FRAME(3)
  8723                                  .L_lambda_simple_end_0033:	; new closure is in rax
  8724 000057F1 50                      	push rax
  8725 000057F2 488B4520                	mov rax, PARAM(0)	; param run
  8726 000057F6 8F00                    	pop qword [rax]
  8727 000057F8 48B8-                   	mov rax, sob_void
  8727 000057FA [0000000000000000] 
  8728                                  
  8729 00005802 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8730 00005807 E8E91D0100              	call malloc
  8731 0000580C 50                      	push rax
  8732 0000580D BF08000000              	mov rdi, 8 * 1	; new rib
  8733 00005812 E8DE1D0100              	call malloc
  8734 00005817 50                      	push rax
  8735 00005818 BF10000000              	mov rdi, 8 * 2	; extended env
  8736 0000581D E8D31D0100              	call malloc
  8737 00005822 488B7D10                	mov rdi, ENV
  8738 00005826 4831F6                  	 xor rsi, rsi
  8739 00005829 4831D2                  	 xor rdx, rdx
  8740 0000582C 48FFC2                  	inc rdx
  8741                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  8742 0000582F 4883FE01                	cmp rsi, 1
  8743 00005833 7410                    	je .L_lambda_opt_env_end_0009
  8744 00005835 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8745 00005839 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8746 0000583D 48FFC6                  	inc rsi
  8747 00005840 48FFC2                  	inc rdx
  8748 00005843 EBEA                    	jmp .L_lambda_opt_env_loop_0009
  8749                                  .L_lambda_opt_env_end_0009:
  8750 00005845 5B                      	pop rbx
  8751 00005846 4831F6                  	xor rsi, rsi
  8752                                  .L_lambda_opt_params_loop_0009:	; copy params
  8753 00005849 4883FE01                	cmp rsi, 1
  8754 0000584D 740E                    	je .L_lambda_opt_params_end_0009
  8755 0000584F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8756 00005854 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8757 00005858 48FFC6                  	inc rsi
  8758 0000585B EBEC                    	jmp .L_lambda_opt_params_loop_0009
  8759                                  .L_lambda_opt_params_end_0009:
  8760 0000585D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8761 00005860 4889C3                  	mov rbx, rax
  8762 00005863 58                      	pop rax
  8763 00005864 C60004                  	mov byte [rax], T_closure
  8764 00005867 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8765 0000586B 48C74009[78580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  8766 00005873 E962010000              	jmp .L_lambda_opt_end_0009
  8767                                  .L_lambda_opt_code_0009:; lambda opt body
  8768 00005878 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8769 0000587E 7409                    	je .L_lambda_opt_arity_check_exact_0009
  8770 00005880 7F57                    	jg .L_lambda_opt_arity_check_more_0009
  8771 00005882 6A02                    	push 2
  8772 00005884 E9391D0100              	jmp L_error_incorrect_arity_opt
  8773                                  .L_lambda_opt_arity_check_exact_0009:
  8774 00005889 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  8775 0000588D 4C894C24F8              	mov qword [rsp -8], r9
  8776 00005892 4C8B4C2408              	mov r9, qword [rsp +8]
  8777 00005897 4C890C24                	mov qword [rsp +8 * 0], r9
  8778 0000589B 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  8779 000058A0 4C89C9                  	mov rcx, r9
  8780 000058A3 49FFC1                  	inc r9
  8781 000058A6 4C894C2408              	mov qword [rsp +8], r9
  8782 000058AB 4889E2                  	mov rdx, rsp
  8783 000058AE 4883C218                	add rdx, 24
  8784                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0009:
  8785 000058B2 4883F900                	cmp rcx, 0
  8786 000058B6 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0009
  8787 000058B8 4C8B02                  	mov r8, qword [rdx]
  8788 000058BB 4C8942F8                	mov qword [rdx - 8], r8
  8789 000058BF 4883C208                	add rdx, 8
  8790 000058C3 48FFC9                  	dec rcx
  8791 000058C6 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0009
  8792                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0009:
  8793 000058C8 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8794 000058D0 4883EC08                	sub rsp, 8
  8795 000058D4 E984000000              	jmp .L_lambda_opt_stack_adjusted_0009
  8796                                  .L_lambda_opt_arity_check_more_0009:
  8797 000058D9 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8798 000058DE 4D89C4                  	mov r12, r8
  8799 000058E1 4C89C1                  	mov rcx, r8
  8800 000058E4 4D8D5002                	lea r10, [r8 + 2] 
  8801 000058E8 4883E902                	sub rcx, 2
  8802 000058EC 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  8803 000058F1 49B9-                   	mov r9, sob_nil
  8803 000058F3 [0100000000000000] 
  8804                                  .L_lambda_opt_create_list_of_opt_params_0009:
  8805 000058FB 4883F900                	cmp rcx, 0
  8806 000058FF 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0009
  8807 00005901 BF11000000              	mov rdi, 17
  8808 00005906 E8EA1C0100              	call malloc
  8809 0000590B C60021                  	mov byte [rax], T_pair
  8810 0000590E 498B1B                  	mov rbx, qword [r11]
  8811 00005911 48895801                	mov qword [rax +1], rbx
  8812 00005915 4C894809                	mov qword [rax + 1 + 8], r9
  8813 00005919 4989C1                  	mov r9, rax
  8814 0000591C 48FFC9                  	dec rcx
  8815 0000591F 4983EB08                	sub r11, 8
  8816 00005923 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0009
  8817                                  .L_lambda_opt_create_list_of_opt_params_end_0009:
  8818 00005925 4C8D442428              	lea r8, [rsp + 2*8 + 8*3]
  8819 0000592A 4D8908                  	mov qword [r8], r9
  8820 0000592D 4E8D14D500000000        	lea r10, [8 * r10]
  8821 00005935 4901E2                  	add r10, rsp
  8822 00005938 B906000000              	mov rcx, 4 + 2
  8823                                  .L_lambda_opt_stack_shrink_loop_0009:
  8824 0000593D 4883F900                	cmp rcx, 0
  8825 00005941 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0009
  8826 00005943 4D8B18                  	mov r11, qword [r8]
  8827 00005946 4D891A                  	mov qword [r10], r11
  8828 00005949 4983E808                	sub r8, 8
  8829 0000594D 4983EA08                	sub r10, 8
  8830 00005951 48FFC9                  	dec rcx
  8831 00005954 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8832                                  .L_lambda_opt_stack_shrink_loop_exit_0009:
  8833 00005956 4983C208                	add r10, 8
  8834 0000595A 4C89D4                  	mov rsp, r10
  8835                                  .L_lambda_opt_stack_adjusted_0009:;continue with the code, the stack is ok
  8836 0000595D 48C744241003000000      	mov qword [rsp + 8*2], 3
  8837 00005966 C8000000                	enter 0, 0
  8838                                  	; preparing a tail-call
  8839 0000596A 488B4530                	mov rax, PARAM(2)	; param ss
  8840 0000596E 50                      	push rax
  8841 0000596F 488B4528                	mov rax, PARAM(1)	; param unit
  8842 00005973 50                      	push rax
  8843 00005974 488B4520                	mov rax, PARAM(0)	; param f
  8844 00005978 50                      	push rax
  8845 00005979 6A03                    	push 3	; arg count
  8846 0000597B 488B4510                	mov rax, ENV
  8847 0000597F 488B00                  	mov rax, qword [rax + 8 * 0]
  8848 00005982 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8849 00005985 488B00                  	mov rax, qword [rax]
  8850 00005988 803804                  	cmp byte [rax], T_closure
  8851 0000598B 0F85BB1B0100            	jne L_error_non_closure
  8852 00005991 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8853 00005994 FF7508                  	push qword [rbp + 8 * 1]
  8854                                   ; old ret addr
  8855 00005997 FF7500                  	push qword [rbp]
  8856                                   ; restore the old rbp
  8857 0000599A BB03000000              	mov rbx, 3
  8858 0000599F 4883C303                	add rbx, 3
  8859 000059A3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8860 000059A7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8861 000059AC 4C8D4DF8                	lea r9, [rbp - 8]
  8862 000059B0 B907000000              	mov rcx, 7
  8863                                  .L_tc_recycle_frame_loop_0034:
  8864 000059B5 4883F900                	cmp rcx, 0
  8865 000059B9 7413                    	je .L_tc_recycle_frame_done_0034
  8866 000059BB 4D8B11                  	mov r10, qword [r9]
  8867 000059BE 4D8910                  	mov qword [r8], r10
  8868 000059C1 4983E808                	sub r8, 8
  8869 000059C5 4983E908                	sub r9, 8
  8870 000059C9 48FFC9                  	dec rcx
  8871 000059CC EBE7                    	jmp .L_tc_recycle_frame_loop_0034
  8872                                  .L_tc_recycle_frame_done_0034:
  8873 000059CE 498D6008                	lea rsp, [r8 + 8]
  8874 000059D2 5D                      	pop rbp ; restore the old rbp
  8875 000059D3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8876 000059D6 C9                      	leave
  8877 000059D7 C22800                  	ret 8 * (2 + 3)
  8878                                  .L_lambda_opt_end_0009:	; new closure is in rax
  8879 000059DA C9                      	leave
  8880 000059DB C21800                  	ret AND_KILL_FRAME(1)
  8881                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8882 000059DE 803804                  	cmp byte [rax], T_closure
  8883 000059E1 0F85651B0100            	jne L_error_non_closure
  8884 000059E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8885 000059EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8886 000059ED 48890425[7B130000]      	mov qword [free_var_86], rax
  8887 000059F5 48B8-                   	mov rax, sob_void
  8887 000059F7 [0000000000000000] 
  8888                                  
  8889 000059FF 4889C7                  	mov rdi, rax
  8890 00005A02 E8431E0100              	call print_sexpr_if_not_void
  8891                                  	; preparing a non-tail-call
  8892 00005A07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8893 00005A0C E8E41B0100              	call malloc
  8894 00005A11 50                      	push rax
  8895 00005A12 BF00000000              	mov rdi, 8 * 0	; new rib
  8896 00005A17 E8D91B0100              	call malloc
  8897 00005A1C 50                      	push rax
  8898 00005A1D BF08000000              	mov rdi, 8 * 1	; extended env
  8899 00005A22 E8CE1B0100              	call malloc
  8900 00005A27 488B7D10                	mov rdi, ENV
  8901 00005A2B BE00000000              	mov rsi, 0
  8902 00005A30 BA01000000              	mov rdx, 1
  8903                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8904 00005A35 4883FE00                	cmp rsi, 0
  8905 00005A39 7410                    	je .L_lambda_simple_env_end_0034
  8906 00005A3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8907 00005A3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8908 00005A43 48FFC6                  	inc rsi
  8909 00005A46 48FFC2                  	inc rdx
  8910 00005A49 EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8911                                  .L_lambda_simple_env_end_0034:
  8912 00005A4B 5B                      	pop rbx
  8913 00005A4C BE00000000              	mov rsi, 0
  8914                                  .L_lambda_simple_params_loop_0034:	; copy params
  8915 00005A51 4883FE00                	cmp rsi, 0
  8916 00005A55 740E                    	je .L_lambda_simple_params_end_0034
  8917 00005A57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8918 00005A5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8919 00005A60 48FFC6                  	inc rsi
  8920 00005A63 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8921                                  .L_lambda_simple_params_end_0034:
  8922 00005A65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8923 00005A68 4889C3                  	mov rbx, rax
  8924 00005A6B 58                      	pop rax
  8925 00005A6C C60004                  	mov byte [rax], T_closure
  8926 00005A6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8927 00005A73 48C74009[805A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8928 00005A7B E992000000              	jmp .L_lambda_simple_end_0034
  8929                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8930 00005A80 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8931 00005A86 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8932 00005A88 FF742410                	push qword [rsp + 8 * 2]
  8933 00005A8C 6A00                    	push 0
  8934 00005A8E E91B1B0100              	jmp L_error_incorrect_arity_simple
  8935                                  .L_lambda_simple_arity_check_ok_0034:
  8936 00005A93 C8000000                	enter 0, 0
  8937                                  	; preparing a tail-call
  8938 00005A97 48B8-                   	mov rax, L_constants + 2187
  8938 00005A99 [8B08000000000000] 
  8939 00005AA1 50                      	push rax
  8940 00005AA2 48B8-                   	mov rax, L_constants + 2178
  8940 00005AA4 [8208000000000000] 
  8941 00005AAC 50                      	push rax
  8942 00005AAD 6A02                    	push 2	; arg count
  8943 00005AAF 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  8944 00005AB7 803805                  	cmp byte [rax], T_undefined
  8945 00005ABA 0F84081A0100            	je L_error_fvar_undefined
  8946 00005AC0 803804                  	cmp byte [rax], T_closure
  8947 00005AC3 0F85831A0100            	jne L_error_non_closure
  8948 00005AC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8949 00005ACC FF7508                  	push qword [rbp + 8 * 1]
  8950                                   ; old ret addr
  8951 00005ACF FF7500                  	push qword [rbp]
  8952                                   ; restore the old rbp
  8953 00005AD2 BB02000000              	mov rbx, 2
  8954 00005AD7 4883C303                	add rbx, 3
  8955 00005ADB 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8956 00005ADF 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8957 00005AE4 4C8D4DF8                	lea r9, [rbp - 8]
  8958 00005AE8 B906000000              	mov rcx, 6
  8959                                  .L_tc_recycle_frame_loop_0035:
  8960 00005AED 4883F900                	cmp rcx, 0
  8961 00005AF1 7413                    	je .L_tc_recycle_frame_done_0035
  8962 00005AF3 4D8B11                  	mov r10, qword [r9]
  8963 00005AF6 4D8910                  	mov qword [r8], r10
  8964 00005AF9 4983E808                	sub r8, 8
  8965 00005AFD 4983E908                	sub r9, 8
  8966 00005B01 48FFC9                  	dec rcx
  8967 00005B04 EBE7                    	jmp .L_tc_recycle_frame_loop_0035
  8968                                  .L_tc_recycle_frame_done_0035:
  8969 00005B06 498D6008                	lea rsp, [r8 + 8]
  8970 00005B0A 5D                      	pop rbp ; restore the old rbp
  8971 00005B0B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8972 00005B0E C9                      	leave
  8973 00005B0F C21000                  	ret AND_KILL_FRAME(0)
  8974                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8975 00005B12 50                      	push rax
  8976 00005B13 6A01                    	push 1	; arg count
  8977 00005B15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8978 00005B1A E8D61A0100              	call malloc
  8979 00005B1F 50                      	push rax
  8980 00005B20 BF00000000              	mov rdi, 8 * 0	; new rib
  8981 00005B25 E8CB1A0100              	call malloc
  8982 00005B2A 50                      	push rax
  8983 00005B2B BF08000000              	mov rdi, 8 * 1	; extended env
  8984 00005B30 E8C01A0100              	call malloc
  8985 00005B35 488B7D10                	mov rdi, ENV
  8986 00005B39 BE00000000              	mov rsi, 0
  8987 00005B3E BA01000000              	mov rdx, 1
  8988                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8989 00005B43 4883FE00                	cmp rsi, 0
  8990 00005B47 7410                    	je .L_lambda_simple_env_end_0035
  8991 00005B49 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8992 00005B4D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8993 00005B51 48FFC6                  	inc rsi
  8994 00005B54 48FFC2                  	inc rdx
  8995 00005B57 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  8996                                  .L_lambda_simple_env_end_0035:
  8997 00005B59 5B                      	pop rbx
  8998 00005B5A BE00000000              	mov rsi, 0
  8999                                  .L_lambda_simple_params_loop_0035:	; copy params
  9000 00005B5F 4883FE00                	cmp rsi, 0
  9001 00005B63 740E                    	je .L_lambda_simple_params_end_0035
  9002 00005B65 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9003 00005B6A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9004 00005B6E 48FFC6                  	inc rsi
  9005 00005B71 EBEC                    	jmp .L_lambda_simple_params_loop_0035
  9006                                  .L_lambda_simple_params_end_0035:
  9007 00005B73 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9008 00005B76 4889C3                  	mov rbx, rax
  9009 00005B79 58                      	pop rax
  9010 00005B7A C60004                  	mov byte [rax], T_closure
  9011 00005B7D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9012 00005B81 48C74009[8E5B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  9013 00005B89 E9010C0000              	jmp .L_lambda_simple_end_0035
  9014                                  .L_lambda_simple_code_0035:	; lambda-simple body
  9015 00005B8E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9016 00005B94 740B                    	je .L_lambda_simple_arity_check_ok_0035
  9017 00005B96 FF742410                	push qword [rsp + 8 * 2]
  9018 00005B9A 6A01                    	push 1
  9019 00005B9C E90D1A0100              	jmp L_error_incorrect_arity_simple
  9020                                  .L_lambda_simple_arity_check_ok_0035:
  9021 00005BA1 C8000000                	enter 0, 0
  9022                                  	; preparing a tail-call
  9023 00005BA5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9024 00005BAA E8461A0100              	call malloc
  9025 00005BAF 50                      	push rax
  9026 00005BB0 BF08000000              	mov rdi, 8 * 1	; new rib
  9027 00005BB5 E83B1A0100              	call malloc
  9028 00005BBA 50                      	push rax
  9029 00005BBB BF10000000              	mov rdi, 8 * 2	; extended env
  9030 00005BC0 E8301A0100              	call malloc
  9031 00005BC5 488B7D10                	mov rdi, ENV
  9032 00005BC9 BE00000000              	mov rsi, 0
  9033 00005BCE BA01000000              	mov rdx, 1
  9034                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  9035 00005BD3 4883FE01                	cmp rsi, 1
  9036 00005BD7 7410                    	je .L_lambda_simple_env_end_0036
  9037 00005BD9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9038 00005BDD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9039 00005BE1 48FFC6                  	inc rsi
  9040 00005BE4 48FFC2                  	inc rdx
  9041 00005BE7 EBEA                    	jmp .L_lambda_simple_env_loop_0036
  9042                                  .L_lambda_simple_env_end_0036:
  9043 00005BE9 5B                      	pop rbx
  9044 00005BEA BE00000000              	mov rsi, 0
  9045                                  .L_lambda_simple_params_loop_0036:	; copy params
  9046 00005BEF 4883FE01                	cmp rsi, 1
  9047 00005BF3 740E                    	je .L_lambda_simple_params_end_0036
  9048 00005BF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9049 00005BFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9050 00005BFE 48FFC6                  	inc rsi
  9051 00005C01 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  9052                                  .L_lambda_simple_params_end_0036:
  9053 00005C03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9054 00005C06 4889C3                  	mov rbx, rax
  9055 00005C09 58                      	pop rax
  9056 00005C0A C60004                  	mov byte [rax], T_closure
  9057 00005C0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9058 00005C11 48C74009[1E5C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  9059 00005C19 E9A0080000              	jmp .L_lambda_simple_end_0036
  9060                                  .L_lambda_simple_code_0036:	; lambda-simple body
  9061 00005C1E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9062 00005C24 740B                    	je .L_lambda_simple_arity_check_ok_0036
  9063 00005C26 FF742410                	push qword [rsp + 8 * 2]
  9064 00005C2A 6A02                    	push 2
  9065 00005C2C E97D190100              	jmp L_error_incorrect_arity_simple
  9066                                  .L_lambda_simple_arity_check_ok_0036:
  9067 00005C31 C8000000                	enter 0, 0
  9068                                  	; preparing a non-tail-call
  9069 00005C35 488B4520                	mov rax, PARAM(0)	; param a
  9070 00005C39 50                      	push rax
  9071 00005C3A 6A01                    	push 1	; arg count
  9072 00005C3C 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9073 00005C44 803805                  	cmp byte [rax], T_undefined
  9074 00005C47 0F847B180100            	je L_error_fvar_undefined
  9075 00005C4D 803804                  	cmp byte [rax], T_closure
  9076 00005C50 0F85F6180100            	jne L_error_non_closure
  9077 00005C56 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9078 00005C59 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9079 00005C5C 483D[02000000]          	cmp rax, sob_boolean_false
  9080 00005C62 0F8487020000            	je .L_if_else_001c
  9081                                  	; preparing a non-tail-call
  9082 00005C68 488B4528                	mov rax, PARAM(1)	; param b
  9083 00005C6C 50                      	push rax
  9084 00005C6D 6A01                    	push 1	; arg count
  9085 00005C6F 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9086 00005C77 803805                  	cmp byte [rax], T_undefined
  9087 00005C7A 0F8448180100            	je L_error_fvar_undefined
  9088 00005C80 803804                  	cmp byte [rax], T_closure
  9089 00005C83 0F85C3180100            	jne L_error_non_closure
  9090 00005C89 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9091 00005C8C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9092 00005C8F 483D[02000000]          	cmp rax, sob_boolean_false
  9093 00005C95 7470                    	je .L_if_else_0013
  9094                                  	; preparing a tail-call
  9095 00005C97 488B4528                	mov rax, PARAM(1)	; param b
  9096 00005C9B 50                      	push rax
  9097 00005C9C 488B4520                	mov rax, PARAM(0)	; param a
  9098 00005CA0 50                      	push rax
  9099 00005CA1 6A02                    	push 2	; arg count
  9100 00005CA3 488B0425[800E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9101 00005CAB 803805                  	cmp byte [rax], T_undefined
  9102 00005CAE 0F8414180100            	je L_error_fvar_undefined
  9103 00005CB4 803804                  	cmp byte [rax], T_closure
  9104 00005CB7 0F858F180100            	jne L_error_non_closure
  9105 00005CBD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9106 00005CC0 FF7508                  	push qword [rbp + 8 * 1]
  9107                                   ; old ret addr
  9108 00005CC3 FF7500                  	push qword [rbp]
  9109                                   ; restore the old rbp
  9110 00005CC6 BB02000000              	mov rbx, 2
  9111 00005CCB 4883C303                	add rbx, 3
  9112 00005CCF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9113 00005CD3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9114 00005CD8 4C8D4DF8                	lea r9, [rbp - 8]
  9115 00005CDC B906000000              	mov rcx, 6
  9116                                  .L_tc_recycle_frame_loop_0037:
  9117 00005CE1 4883F900                	cmp rcx, 0
  9118 00005CE5 7413                    	je .L_tc_recycle_frame_done_0037
  9119 00005CE7 4D8B11                  	mov r10, qword [r9]
  9120 00005CEA 4D8910                  	mov qword [r8], r10
  9121 00005CED 4983E808                	sub r8, 8
  9122 00005CF1 4983E908                	sub r9, 8
  9123 00005CF5 48FFC9                  	dec rcx
  9124 00005CF8 EBE7                    	jmp .L_tc_recycle_frame_loop_0037
  9125                                  .L_tc_recycle_frame_done_0037:
  9126 00005CFA 498D6008                	lea rsp, [r8 + 8]
  9127 00005CFE 5D                      	pop rbp ; restore the old rbp
  9128 00005CFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9129 00005D02 E9E3010000              	jmp .L_if_end_0013
  9130                                  .L_if_else_0013:
  9131                                  	; preparing a non-tail-call
  9132 00005D07 488B4528                	mov rax, PARAM(1)	; param b
  9133 00005D0B 50                      	push rax
  9134 00005D0C 6A01                    	push 1	; arg count
  9135 00005D0E 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9136 00005D16 803805                  	cmp byte [rax], T_undefined
  9137 00005D19 0F84A9170100            	je L_error_fvar_undefined
  9138 00005D1F 803804                  	cmp byte [rax], T_closure
  9139 00005D22 0F8524180100            	jne L_error_non_closure
  9140 00005D28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9141 00005D2B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9142 00005D2E 483D[02000000]          	cmp rax, sob_boolean_false
  9143 00005D34 0F8493000000            	je .L_if_else_0012
  9144                                  	; preparing a tail-call
  9145 00005D3A 488B4528                	mov rax, PARAM(1)	; param b
  9146 00005D3E 50                      	push rax
  9147                                  	; preparing a non-tail-call
  9148 00005D3F 488B4520                	mov rax, PARAM(0)	; param a
  9149 00005D43 50                      	push rax
  9150 00005D44 6A01                    	push 1	; arg count
  9151 00005D46 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9152 00005D4E 803805                  	cmp byte [rax], T_undefined
  9153 00005D51 0F8471170100            	je L_error_fvar_undefined
  9154 00005D57 803804                  	cmp byte [rax], T_closure
  9155 00005D5A 0F85EC170100            	jne L_error_non_closure
  9156 00005D60 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9157 00005D63 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9158 00005D66 50                      	push rax
  9159 00005D67 6A02                    	push 2	; arg count
  9160 00005D69 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9161 00005D71 803805                  	cmp byte [rax], T_undefined
  9162 00005D74 0F844E170100            	je L_error_fvar_undefined
  9163 00005D7A 803804                  	cmp byte [rax], T_closure
  9164 00005D7D 0F85C9170100            	jne L_error_non_closure
  9165 00005D83 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9166 00005D86 FF7508                  	push qword [rbp + 8 * 1]
  9167                                   ; old ret addr
  9168 00005D89 FF7500                  	push qword [rbp]
  9169                                   ; restore the old rbp
  9170 00005D8C BB02000000              	mov rbx, 2
  9171 00005D91 4883C303                	add rbx, 3
  9172 00005D95 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9173 00005D99 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9174 00005D9E 4C8D4DF8                	lea r9, [rbp - 8]
  9175 00005DA2 B906000000              	mov rcx, 6
  9176                                  .L_tc_recycle_frame_loop_0038:
  9177 00005DA7 4883F900                	cmp rcx, 0
  9178 00005DAB 7413                    	je .L_tc_recycle_frame_done_0038
  9179 00005DAD 4D8B11                  	mov r10, qword [r9]
  9180 00005DB0 4D8910                  	mov qword [r8], r10
  9181 00005DB3 4983E808                	sub r8, 8
  9182 00005DB7 4983E908                	sub r9, 8
  9183 00005DBB 48FFC9                  	dec rcx
  9184 00005DBE EBE7                    	jmp .L_tc_recycle_frame_loop_0038
  9185                                  .L_tc_recycle_frame_done_0038:
  9186 00005DC0 498D6008                	lea rsp, [r8 + 8]
  9187 00005DC4 5D                      	pop rbp ; restore the old rbp
  9188 00005DC5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9189 00005DC8 E91D010000              	jmp .L_if_end_0012
  9190                                  .L_if_else_0012:
  9191                                  	; preparing a non-tail-call
  9192 00005DCD 488B4528                	mov rax, PARAM(1)	; param b
  9193 00005DD1 50                      	push rax
  9194 00005DD2 6A01                    	push 1	; arg count
  9195 00005DD4 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9196 00005DDC 803805                  	cmp byte [rax], T_undefined
  9197 00005DDF 0F84E3160100            	je L_error_fvar_undefined
  9198 00005DE5 803804                  	cmp byte [rax], T_closure
  9199 00005DE8 0F855E170100            	jne L_error_non_closure
  9200 00005DEE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9201 00005DF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9202 00005DF4 483D[02000000]          	cmp rax, sob_boolean_false
  9203 00005DFA 0F8490000000            	je .L_if_else_0011
  9204                                  	; preparing a tail-call
  9205 00005E00 488B4528                	mov rax, PARAM(1)	; param b
  9206 00005E04 50                      	push rax
  9207                                  	; preparing a non-tail-call
  9208 00005E05 488B4520                	mov rax, PARAM(0)	; param a
  9209 00005E09 50                      	push rax
  9210 00005E0A 6A01                    	push 1	; arg count
  9211 00005E0C 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9212 00005E14 803805                  	cmp byte [rax], T_undefined
  9213 00005E17 0F84AB160100            	je L_error_fvar_undefined
  9214 00005E1D 803804                  	cmp byte [rax], T_closure
  9215 00005E20 0F8526170100            	jne L_error_non_closure
  9216 00005E26 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9217 00005E29 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9218 00005E2C 50                      	push rax
  9219 00005E2D 6A02                    	push 2	; arg count
  9220 00005E2F 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9221 00005E37 803805                  	cmp byte [rax], T_undefined
  9222 00005E3A 0F8488160100            	je L_error_fvar_undefined
  9223 00005E40 803804                  	cmp byte [rax], T_closure
  9224 00005E43 0F8503170100            	jne L_error_non_closure
  9225 00005E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9226 00005E4C FF7508                  	push qword [rbp + 8 * 1]
  9227                                   ; old ret addr
  9228 00005E4F FF7500                  	push qword [rbp]
  9229                                   ; restore the old rbp
  9230 00005E52 BB02000000              	mov rbx, 2
  9231 00005E57 4883C303                	add rbx, 3
  9232 00005E5B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9233 00005E5F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9234 00005E64 4C8D4DF8                	lea r9, [rbp - 8]
  9235 00005E68 B906000000              	mov rcx, 6
  9236                                  .L_tc_recycle_frame_loop_0039:
  9237 00005E6D 4883F900                	cmp rcx, 0
  9238 00005E71 7413                    	je .L_tc_recycle_frame_done_0039
  9239 00005E73 4D8B11                  	mov r10, qword [r9]
  9240 00005E76 4D8910                  	mov qword [r8], r10
  9241 00005E79 4983E808                	sub r8, 8
  9242 00005E7D 4983E908                	sub r9, 8
  9243 00005E81 48FFC9                  	dec rcx
  9244 00005E84 EBE7                    	jmp .L_tc_recycle_frame_loop_0039
  9245                                  .L_tc_recycle_frame_done_0039:
  9246 00005E86 498D6008                	lea rsp, [r8 + 8]
  9247 00005E8A 5D                      	pop rbp ; restore the old rbp
  9248 00005E8B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9249 00005E8E EB5A                    	jmp .L_if_end_0011
  9250                                  .L_if_else_0011:
  9251                                  	; preparing a tail-call
  9252 00005E90 6A00                    	push 0	; arg count
  9253 00005E92 488B4510                	mov rax, ENV
  9254 00005E96 488B00                  	mov rax, qword [rax + 8 * 0]
  9255 00005E99 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9256 00005E9C 803804                  	cmp byte [rax], T_closure
  9257 00005E9F 0F85A7160100            	jne L_error_non_closure
  9258 00005EA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9259 00005EA8 FF7508                  	push qword [rbp + 8 * 1]
  9260                                   ; old ret addr
  9261 00005EAB FF7500                  	push qword [rbp]
  9262                                   ; restore the old rbp
  9263 00005EAE BB00000000              	mov rbx, 0
  9264 00005EB3 4883C303                	add rbx, 3
  9265 00005EB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9266 00005EBB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9267 00005EC0 4C8D4DF8                	lea r9, [rbp - 8]
  9268 00005EC4 B904000000              	mov rcx, 4
  9269                                  .L_tc_recycle_frame_loop_003a:
  9270 00005EC9 4883F900                	cmp rcx, 0
  9271 00005ECD 7413                    	je .L_tc_recycle_frame_done_003a
  9272 00005ECF 4D8B11                  	mov r10, qword [r9]
  9273 00005ED2 4D8910                  	mov qword [r8], r10
  9274 00005ED5 4983E808                	sub r8, 8
  9275 00005ED9 4983E908                	sub r9, 8
  9276 00005EDD 48FFC9                  	dec rcx
  9277 00005EE0 EBE7                    	jmp .L_tc_recycle_frame_loop_003a
  9278                                  .L_tc_recycle_frame_done_003a:
  9279 00005EE2 498D6008                	lea rsp, [r8 + 8]
  9280 00005EE6 5D                      	pop rbp ; restore the old rbp
  9281 00005EE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9282                                  .L_if_end_0011:
  9283                                  .L_if_end_0012:
  9284                                  .L_if_end_0013:
  9285 00005EEA E9CB050000              	jmp .L_if_end_001c
  9286                                  .L_if_else_001c:
  9287                                  	; preparing a non-tail-call
  9288 00005EEF 488B4520                	mov rax, PARAM(0)	; param a
  9289 00005EF3 50                      	push rax
  9290 00005EF4 6A01                    	push 1	; arg count
  9291 00005EF6 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9292 00005EFE 803805                  	cmp byte [rax], T_undefined
  9293 00005F01 0F84C1150100            	je L_error_fvar_undefined
  9294 00005F07 803804                  	cmp byte [rax], T_closure
  9295 00005F0A 0F853C160100            	jne L_error_non_closure
  9296 00005F10 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9297 00005F13 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9298 00005F16 483D[02000000]          	cmp rax, sob_boolean_false
  9299 00005F1C 0F8487020000            	je .L_if_else_001b
  9300                                  	; preparing a non-tail-call
  9301 00005F22 488B4528                	mov rax, PARAM(1)	; param b
  9302 00005F26 50                      	push rax
  9303 00005F27 6A01                    	push 1	; arg count
  9304 00005F29 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9305 00005F31 803805                  	cmp byte [rax], T_undefined
  9306 00005F34 0F848E150100            	je L_error_fvar_undefined
  9307 00005F3A 803804                  	cmp byte [rax], T_closure
  9308 00005F3D 0F8509160100            	jne L_error_non_closure
  9309 00005F43 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9310 00005F46 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9311 00005F49 483D[02000000]          	cmp rax, sob_boolean_false
  9312 00005F4F 0F8493000000            	je .L_if_else_0016
  9313                                  	; preparing a tail-call
  9314                                  	; preparing a non-tail-call
  9315 00005F55 488B4528                	mov rax, PARAM(1)	; param b
  9316 00005F59 50                      	push rax
  9317 00005F5A 6A01                    	push 1	; arg count
  9318 00005F5C 488B0425[A10F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9319 00005F64 803805                  	cmp byte [rax], T_undefined
  9320 00005F67 0F845B150100            	je L_error_fvar_undefined
  9321 00005F6D 803804                  	cmp byte [rax], T_closure
  9322 00005F70 0F85D6150100            	jne L_error_non_closure
  9323 00005F76 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9324 00005F79 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9325 00005F7C 50                      	push rax
  9326 00005F7D 488B4520                	mov rax, PARAM(0)	; param a
  9327 00005F81 50                      	push rax
  9328 00005F82 6A02                    	push 2	; arg count
  9329 00005F84 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9330 00005F8C 803805                  	cmp byte [rax], T_undefined
  9331 00005F8F 0F8433150100            	je L_error_fvar_undefined
  9332 00005F95 803804                  	cmp byte [rax], T_closure
  9333 00005F98 0F85AE150100            	jne L_error_non_closure
  9334 00005F9E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9335 00005FA1 FF7508                  	push qword [rbp + 8 * 1]
  9336                                   ; old ret addr
  9337 00005FA4 FF7500                  	push qword [rbp]
  9338                                   ; restore the old rbp
  9339 00005FA7 BB02000000              	mov rbx, 2
  9340 00005FAC 4883C303                	add rbx, 3
  9341 00005FB0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9342 00005FB4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9343 00005FB9 4C8D4DF8                	lea r9, [rbp - 8]
  9344 00005FBD B906000000              	mov rcx, 6
  9345                                  .L_tc_recycle_frame_loop_003b:
  9346 00005FC2 4883F900                	cmp rcx, 0
  9347 00005FC6 7413                    	je .L_tc_recycle_frame_done_003b
  9348 00005FC8 4D8B11                  	mov r10, qword [r9]
  9349 00005FCB 4D8910                  	mov qword [r8], r10
  9350 00005FCE 4983E808                	sub r8, 8
  9351 00005FD2 4983E908                	sub r9, 8
  9352 00005FD6 48FFC9                  	dec rcx
  9353 00005FD9 EBE7                    	jmp .L_tc_recycle_frame_loop_003b
  9354                                  .L_tc_recycle_frame_done_003b:
  9355 00005FDB 498D6008                	lea rsp, [r8 + 8]
  9356 00005FDF 5D                      	pop rbp ; restore the old rbp
  9357 00005FE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9358 00005FE3 E9BC010000              	jmp .L_if_end_0016
  9359                                  .L_if_else_0016:
  9360                                  	; preparing a non-tail-call
  9361 00005FE8 488B4528                	mov rax, PARAM(1)	; param b
  9362 00005FEC 50                      	push rax
  9363 00005FED 6A01                    	push 1	; arg count
  9364 00005FEF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9365 00005FF7 803805                  	cmp byte [rax], T_undefined
  9366 00005FFA 0F84C8140100            	je L_error_fvar_undefined
  9367 00006000 803804                  	cmp byte [rax], T_closure
  9368 00006003 0F8543150100            	jne L_error_non_closure
  9369 00006009 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9370 0000600C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9371 0000600F 483D[02000000]          	cmp rax, sob_boolean_false
  9372 00006015 7470                    	je .L_if_else_0015
  9373                                  	; preparing a tail-call
  9374 00006017 488B4528                	mov rax, PARAM(1)	; param b
  9375 0000601B 50                      	push rax
  9376 0000601C 488B4520                	mov rax, PARAM(0)	; param a
  9377 00006020 50                      	push rax
  9378 00006021 6A02                    	push 2	; arg count
  9379 00006023 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9380 0000602B 803805                  	cmp byte [rax], T_undefined
  9381 0000602E 0F8494140100            	je L_error_fvar_undefined
  9382 00006034 803804                  	cmp byte [rax], T_closure
  9383 00006037 0F850F150100            	jne L_error_non_closure
  9384 0000603D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9385 00006040 FF7508                  	push qword [rbp + 8 * 1]
  9386                                   ; old ret addr
  9387 00006043 FF7500                  	push qword [rbp]
  9388                                   ; restore the old rbp
  9389 00006046 BB02000000              	mov rbx, 2
  9390 0000604B 4883C303                	add rbx, 3
  9391 0000604F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9392 00006053 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9393 00006058 4C8D4DF8                	lea r9, [rbp - 8]
  9394 0000605C B906000000              	mov rcx, 6
  9395                                  .L_tc_recycle_frame_loop_003c:
  9396 00006061 4883F900                	cmp rcx, 0
  9397 00006065 7413                    	je .L_tc_recycle_frame_done_003c
  9398 00006067 4D8B11                  	mov r10, qword [r9]
  9399 0000606A 4D8910                  	mov qword [r8], r10
  9400 0000606D 4983E808                	sub r8, 8
  9401 00006071 4983E908                	sub r9, 8
  9402 00006075 48FFC9                  	dec rcx
  9403 00006078 EBE7                    	jmp .L_tc_recycle_frame_loop_003c
  9404                                  .L_tc_recycle_frame_done_003c:
  9405 0000607A 498D6008                	lea rsp, [r8 + 8]
  9406 0000607E 5D                      	pop rbp ; restore the old rbp
  9407 0000607F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9408 00006082 E91D010000              	jmp .L_if_end_0015
  9409                                  .L_if_else_0015:
  9410                                  	; preparing a non-tail-call
  9411 00006087 488B4528                	mov rax, PARAM(1)	; param b
  9412 0000608B 50                      	push rax
  9413 0000608C 6A01                    	push 1	; arg count
  9414 0000608E 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9415 00006096 803805                  	cmp byte [rax], T_undefined
  9416 00006099 0F8429140100            	je L_error_fvar_undefined
  9417 0000609F 803804                  	cmp byte [rax], T_closure
  9418 000060A2 0F85A4140100            	jne L_error_non_closure
  9419 000060A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9420 000060AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  9421 000060AE 483D[02000000]          	cmp rax, sob_boolean_false
  9422 000060B4 0F8490000000            	je .L_if_else_0014
  9423                                  	; preparing a tail-call
  9424 000060BA 488B4528                	mov rax, PARAM(1)	; param b
  9425 000060BE 50                      	push rax
  9426                                  	; preparing a non-tail-call
  9427 000060BF 488B4520                	mov rax, PARAM(0)	; param a
  9428 000060C3 50                      	push rax
  9429 000060C4 6A01                    	push 1	; arg count
  9430 000060C6 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9431 000060CE 803805                  	cmp byte [rax], T_undefined
  9432 000060D1 0F84F1130100            	je L_error_fvar_undefined
  9433 000060D7 803804                  	cmp byte [rax], T_closure
  9434 000060DA 0F856C140100            	jne L_error_non_closure
  9435 000060E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9436 000060E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9437 000060E6 50                      	push rax
  9438 000060E7 6A02                    	push 2	; arg count
  9439 000060E9 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9440 000060F1 803805                  	cmp byte [rax], T_undefined
  9441 000060F4 0F84CE130100            	je L_error_fvar_undefined
  9442 000060FA 803804                  	cmp byte [rax], T_closure
  9443 000060FD 0F8549140100            	jne L_error_non_closure
  9444 00006103 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9445 00006106 FF7508                  	push qword [rbp + 8 * 1]
  9446                                   ; old ret addr
  9447 00006109 FF7500                  	push qword [rbp]
  9448                                   ; restore the old rbp
  9449 0000610C BB02000000              	mov rbx, 2
  9450 00006111 4883C303                	add rbx, 3
  9451 00006115 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9452 00006119 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9453 0000611E 4C8D4DF8                	lea r9, [rbp - 8]
  9454 00006122 B906000000              	mov rcx, 6
  9455                                  .L_tc_recycle_frame_loop_003d:
  9456 00006127 4883F900                	cmp rcx, 0
  9457 0000612B 7413                    	je .L_tc_recycle_frame_done_003d
  9458 0000612D 4D8B11                  	mov r10, qword [r9]
  9459 00006130 4D8910                  	mov qword [r8], r10
  9460 00006133 4983E808                	sub r8, 8
  9461 00006137 4983E908                	sub r9, 8
  9462 0000613B 48FFC9                  	dec rcx
  9463 0000613E EBE7                    	jmp .L_tc_recycle_frame_loop_003d
  9464                                  .L_tc_recycle_frame_done_003d:
  9465 00006140 498D6008                	lea rsp, [r8 + 8]
  9466 00006144 5D                      	pop rbp ; restore the old rbp
  9467 00006145 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9468 00006148 EB5A                    	jmp .L_if_end_0014
  9469                                  .L_if_else_0014:
  9470                                  	; preparing a tail-call
  9471 0000614A 6A00                    	push 0	; arg count
  9472 0000614C 488B4510                	mov rax, ENV
  9473 00006150 488B00                  	mov rax, qword [rax + 8 * 0]
  9474 00006153 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9475 00006156 803804                  	cmp byte [rax], T_closure
  9476 00006159 0F85ED130100            	jne L_error_non_closure
  9477 0000615F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9478 00006162 FF7508                  	push qword [rbp + 8 * 1]
  9479                                   ; old ret addr
  9480 00006165 FF7500                  	push qword [rbp]
  9481                                   ; restore the old rbp
  9482 00006168 BB00000000              	mov rbx, 0
  9483 0000616D 4883C303                	add rbx, 3
  9484 00006171 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9485 00006175 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9486 0000617A 4C8D4DF8                	lea r9, [rbp - 8]
  9487 0000617E B904000000              	mov rcx, 4
  9488                                  .L_tc_recycle_frame_loop_003e:
  9489 00006183 4883F900                	cmp rcx, 0
  9490 00006187 7413                    	je .L_tc_recycle_frame_done_003e
  9491 00006189 4D8B11                  	mov r10, qword [r9]
  9492 0000618C 4D8910                  	mov qword [r8], r10
  9493 0000618F 4983E808                	sub r8, 8
  9494 00006193 4983E908                	sub r9, 8
  9495 00006197 48FFC9                  	dec rcx
  9496 0000619A EBE7                    	jmp .L_tc_recycle_frame_loop_003e
  9497                                  .L_tc_recycle_frame_done_003e:
  9498 0000619C 498D6008                	lea rsp, [r8 + 8]
  9499 000061A0 5D                      	pop rbp ; restore the old rbp
  9500 000061A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9501                                  .L_if_end_0014:
  9502                                  .L_if_end_0015:
  9503                                  .L_if_end_0016:
  9504 000061A4 E911030000              	jmp .L_if_end_001b
  9505                                  .L_if_else_001b:
  9506                                  	; preparing a non-tail-call
  9507 000061A9 488B4520                	mov rax, PARAM(0)	; param a
  9508 000061AD 50                      	push rax
  9509 000061AE 6A01                    	push 1	; arg count
  9510 000061B0 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9511 000061B8 803805                  	cmp byte [rax], T_undefined
  9512 000061BB 0F8407130100            	je L_error_fvar_undefined
  9513 000061C1 803804                  	cmp byte [rax], T_closure
  9514 000061C4 0F8582130100            	jne L_error_non_closure
  9515 000061CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9516 000061CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9517 000061D0 483D[02000000]          	cmp rax, sob_boolean_false
  9518 000061D6 0F8484020000            	je .L_if_else_001a
  9519                                  	; preparing a non-tail-call
  9520 000061DC 488B4528                	mov rax, PARAM(1)	; param b
  9521 000061E0 50                      	push rax
  9522 000061E1 6A01                    	push 1	; arg count
  9523 000061E3 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9524 000061EB 803805                  	cmp byte [rax], T_undefined
  9525 000061EE 0F84D4120100            	je L_error_fvar_undefined
  9526 000061F4 803804                  	cmp byte [rax], T_closure
  9527 000061F7 0F854F130100            	jne L_error_non_closure
  9528 000061FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9529 00006200 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9530 00006203 483D[02000000]          	cmp rax, sob_boolean_false
  9531 00006209 0F8493000000            	je .L_if_else_0019
  9532                                  	; preparing a tail-call
  9533                                  	; preparing a non-tail-call
  9534 0000620F 488B4528                	mov rax, PARAM(1)	; param b
  9535 00006213 50                      	push rax
  9536 00006214 6A01                    	push 1	; arg count
  9537 00006216 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9538 0000621E 803805                  	cmp byte [rax], T_undefined
  9539 00006221 0F84A1120100            	je L_error_fvar_undefined
  9540 00006227 803804                  	cmp byte [rax], T_closure
  9541 0000622A 0F851C130100            	jne L_error_non_closure
  9542 00006230 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9543 00006233 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9544 00006236 50                      	push rax
  9545 00006237 488B4520                	mov rax, PARAM(0)	; param a
  9546 0000623B 50                      	push rax
  9547 0000623C 6A02                    	push 2	; arg count
  9548 0000623E 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9549 00006246 803805                  	cmp byte [rax], T_undefined
  9550 00006249 0F8479120100            	je L_error_fvar_undefined
  9551 0000624F 803804                  	cmp byte [rax], T_closure
  9552 00006252 0F85F4120100            	jne L_error_non_closure
  9553 00006258 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9554 0000625B FF7508                  	push qword [rbp + 8 * 1]
  9555                                   ; old ret addr
  9556 0000625E FF7500                  	push qword [rbp]
  9557                                   ; restore the old rbp
  9558 00006261 BB02000000              	mov rbx, 2
  9559 00006266 4883C303                	add rbx, 3
  9560 0000626A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9561 0000626E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9562 00006273 4C8D4DF8                	lea r9, [rbp - 8]
  9563 00006277 B906000000              	mov rcx, 6
  9564                                  .L_tc_recycle_frame_loop_003f:
  9565 0000627C 4883F900                	cmp rcx, 0
  9566 00006280 7413                    	je .L_tc_recycle_frame_done_003f
  9567 00006282 4D8B11                  	mov r10, qword [r9]
  9568 00006285 4D8910                  	mov qword [r8], r10
  9569 00006288 4983E808                	sub r8, 8
  9570 0000628C 4983E908                	sub r9, 8
  9571 00006290 48FFC9                  	dec rcx
  9572 00006293 EBE7                    	jmp .L_tc_recycle_frame_loop_003f
  9573                                  .L_tc_recycle_frame_done_003f:
  9574 00006295 498D6008                	lea rsp, [r8 + 8]
  9575 00006299 5D                      	pop rbp ; restore the old rbp
  9576 0000629A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9577 0000629D E9BC010000              	jmp .L_if_end_0019
  9578                                  .L_if_else_0019:
  9579                                  	; preparing a non-tail-call
  9580 000062A2 488B4528                	mov rax, PARAM(1)	; param b
  9581 000062A6 50                      	push rax
  9582 000062A7 6A01                    	push 1	; arg count
  9583 000062A9 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9584 000062B1 803805                  	cmp byte [rax], T_undefined
  9585 000062B4 0F840E120100            	je L_error_fvar_undefined
  9586 000062BA 803804                  	cmp byte [rax], T_closure
  9587 000062BD 0F8589120100            	jne L_error_non_closure
  9588 000062C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9589 000062C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9590 000062C9 483D[02000000]          	cmp rax, sob_boolean_false
  9591 000062CF 0F8493000000            	je .L_if_else_0018
  9592                                  	; preparing a tail-call
  9593                                  	; preparing a non-tail-call
  9594 000062D5 488B4528                	mov rax, PARAM(1)	; param b
  9595 000062D9 50                      	push rax
  9596 000062DA 6A01                    	push 1	; arg count
  9597 000062DC 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9598 000062E4 803805                  	cmp byte [rax], T_undefined
  9599 000062E7 0F84DB110100            	je L_error_fvar_undefined
  9600 000062ED 803804                  	cmp byte [rax], T_closure
  9601 000062F0 0F8556120100            	jne L_error_non_closure
  9602 000062F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9603 000062F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9604 000062FC 50                      	push rax
  9605 000062FD 488B4520                	mov rax, PARAM(0)	; param a
  9606 00006301 50                      	push rax
  9607 00006302 6A02                    	push 2	; arg count
  9608 00006304 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9609 0000630C 803805                  	cmp byte [rax], T_undefined
  9610 0000630F 0F84B3110100            	je L_error_fvar_undefined
  9611 00006315 803804                  	cmp byte [rax], T_closure
  9612 00006318 0F852E120100            	jne L_error_non_closure
  9613 0000631E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9614 00006321 FF7508                  	push qword [rbp + 8 * 1]
  9615                                   ; old ret addr
  9616 00006324 FF7500                  	push qword [rbp]
  9617                                   ; restore the old rbp
  9618 00006327 BB02000000              	mov rbx, 2
  9619 0000632C 4883C303                	add rbx, 3
  9620 00006330 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9621 00006334 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9622 00006339 4C8D4DF8                	lea r9, [rbp - 8]
  9623 0000633D B906000000              	mov rcx, 6
  9624                                  .L_tc_recycle_frame_loop_0040:
  9625 00006342 4883F900                	cmp rcx, 0
  9626 00006346 7413                    	je .L_tc_recycle_frame_done_0040
  9627 00006348 4D8B11                  	mov r10, qword [r9]
  9628 0000634B 4D8910                  	mov qword [r8], r10
  9629 0000634E 4983E808                	sub r8, 8
  9630 00006352 4983E908                	sub r9, 8
  9631 00006356 48FFC9                  	dec rcx
  9632 00006359 EBE7                    	jmp .L_tc_recycle_frame_loop_0040
  9633                                  .L_tc_recycle_frame_done_0040:
  9634 0000635B 498D6008                	lea rsp, [r8 + 8]
  9635 0000635F 5D                      	pop rbp ; restore the old rbp
  9636 00006360 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9637 00006363 E9F6000000              	jmp .L_if_end_0018
  9638                                  .L_if_else_0018:
  9639                                  	; preparing a non-tail-call
  9640 00006368 488B4528                	mov rax, PARAM(1)	; param b
  9641 0000636C 50                      	push rax
  9642 0000636D 6A01                    	push 1	; arg count
  9643 0000636F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9644 00006377 803805                  	cmp byte [rax], T_undefined
  9645 0000637A 0F8448110100            	je L_error_fvar_undefined
  9646 00006380 803804                  	cmp byte [rax], T_closure
  9647 00006383 0F85C3110100            	jne L_error_non_closure
  9648 00006389 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9649 0000638C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9650 0000638F 483D[02000000]          	cmp rax, sob_boolean_false
  9651 00006395 746D                    	je .L_if_else_0017
  9652                                  	; preparing a tail-call
  9653 00006397 488B4528                	mov rax, PARAM(1)	; param b
  9654 0000639B 50                      	push rax
  9655 0000639C 488B4520                	mov rax, PARAM(0)	; param a
  9656 000063A0 50                      	push rax
  9657 000063A1 6A02                    	push 2	; arg count
  9658 000063A3 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9659 000063AB 803805                  	cmp byte [rax], T_undefined
  9660 000063AE 0F8414110100            	je L_error_fvar_undefined
  9661 000063B4 803804                  	cmp byte [rax], T_closure
  9662 000063B7 0F858F110100            	jne L_error_non_closure
  9663 000063BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9664 000063C0 FF7508                  	push qword [rbp + 8 * 1]
  9665                                   ; old ret addr
  9666 000063C3 FF7500                  	push qword [rbp]
  9667                                   ; restore the old rbp
  9668 000063C6 BB02000000              	mov rbx, 2
  9669 000063CB 4883C303                	add rbx, 3
  9670 000063CF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9671 000063D3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9672 000063D8 4C8D4DF8                	lea r9, [rbp - 8]
  9673 000063DC B906000000              	mov rcx, 6
  9674                                  .L_tc_recycle_frame_loop_0041:
  9675 000063E1 4883F900                	cmp rcx, 0
  9676 000063E5 7413                    	je .L_tc_recycle_frame_done_0041
  9677 000063E7 4D8B11                  	mov r10, qword [r9]
  9678 000063EA 4D8910                  	mov qword [r8], r10
  9679 000063ED 4983E808                	sub r8, 8
  9680 000063F1 4983E908                	sub r9, 8
  9681 000063F5 48FFC9                  	dec rcx
  9682 000063F8 EBE7                    	jmp .L_tc_recycle_frame_loop_0041
  9683                                  .L_tc_recycle_frame_done_0041:
  9684 000063FA 498D6008                	lea rsp, [r8 + 8]
  9685 000063FE 5D                      	pop rbp ; restore the old rbp
  9686 000063FF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9687 00006402 EB5A                    	jmp .L_if_end_0017
  9688                                  .L_if_else_0017:
  9689                                  	; preparing a tail-call
  9690 00006404 6A00                    	push 0	; arg count
  9691 00006406 488B4510                	mov rax, ENV
  9692 0000640A 488B00                  	mov rax, qword [rax + 8 * 0]
  9693 0000640D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9694 00006410 803804                  	cmp byte [rax], T_closure
  9695 00006413 0F8533110100            	jne L_error_non_closure
  9696 00006419 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9697 0000641C FF7508                  	push qword [rbp + 8 * 1]
  9698                                   ; old ret addr
  9699 0000641F FF7500                  	push qword [rbp]
  9700                                   ; restore the old rbp
  9701 00006422 BB00000000              	mov rbx, 0
  9702 00006427 4883C303                	add rbx, 3
  9703 0000642B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9704 0000642F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9705 00006434 4C8D4DF8                	lea r9, [rbp - 8]
  9706 00006438 B904000000              	mov rcx, 4
  9707                                  .L_tc_recycle_frame_loop_0042:
  9708 0000643D 4883F900                	cmp rcx, 0
  9709 00006441 7413                    	je .L_tc_recycle_frame_done_0042
  9710 00006443 4D8B11                  	mov r10, qword [r9]
  9711 00006446 4D8910                  	mov qword [r8], r10
  9712 00006449 4983E808                	sub r8, 8
  9713 0000644D 4983E908                	sub r9, 8
  9714 00006451 48FFC9                  	dec rcx
  9715 00006454 EBE7                    	jmp .L_tc_recycle_frame_loop_0042
  9716                                  .L_tc_recycle_frame_done_0042:
  9717 00006456 498D6008                	lea rsp, [r8 + 8]
  9718 0000645A 5D                      	pop rbp ; restore the old rbp
  9719 0000645B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9720                                  .L_if_end_0017:
  9721                                  .L_if_end_0018:
  9722                                  .L_if_end_0019:
  9723 0000645E EB5A                    	jmp .L_if_end_001a
  9724                                  .L_if_else_001a:
  9725                                  	; preparing a tail-call
  9726 00006460 6A00                    	push 0	; arg count
  9727 00006462 488B4510                	mov rax, ENV
  9728 00006466 488B00                  	mov rax, qword [rax + 8 * 0]
  9729 00006469 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9730 0000646C 803804                  	cmp byte [rax], T_closure
  9731 0000646F 0F85D7100100            	jne L_error_non_closure
  9732 00006475 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9733 00006478 FF7508                  	push qword [rbp + 8 * 1]
  9734                                   ; old ret addr
  9735 0000647B FF7500                  	push qword [rbp]
  9736                                   ; restore the old rbp
  9737 0000647E BB00000000              	mov rbx, 0
  9738 00006483 4883C303                	add rbx, 3
  9739 00006487 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9740 0000648B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9741 00006490 4C8D4DF8                	lea r9, [rbp - 8]
  9742 00006494 B904000000              	mov rcx, 4
  9743                                  .L_tc_recycle_frame_loop_0043:
  9744 00006499 4883F900                	cmp rcx, 0
  9745 0000649D 7413                    	je .L_tc_recycle_frame_done_0043
  9746 0000649F 4D8B11                  	mov r10, qword [r9]
  9747 000064A2 4D8910                  	mov qword [r8], r10
  9748 000064A5 4983E808                	sub r8, 8
  9749 000064A9 4983E908                	sub r9, 8
  9750 000064AD 48FFC9                  	dec rcx
  9751 000064B0 EBE7                    	jmp .L_tc_recycle_frame_loop_0043
  9752                                  .L_tc_recycle_frame_done_0043:
  9753 000064B2 498D6008                	lea rsp, [r8 + 8]
  9754 000064B6 5D                      	pop rbp ; restore the old rbp
  9755 000064B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9756                                  .L_if_end_001a:
  9757                                  .L_if_end_001b:
  9758                                  .L_if_end_001c:
  9759 000064BA C9                      	leave
  9760 000064BB C22000                  	ret AND_KILL_FRAME(2)
  9761                                  .L_lambda_simple_end_0036:	; new closure is in rax
  9762 000064BE 50                      	push rax
  9763 000064BF 6A01                    	push 1	; arg count
  9764 000064C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9765 000064C6 E82A110100              	call malloc
  9766 000064CB 50                      	push rax
  9767 000064CC BF08000000              	mov rdi, 8 * 1	; new rib
  9768 000064D1 E81F110100              	call malloc
  9769 000064D6 50                      	push rax
  9770 000064D7 BF10000000              	mov rdi, 8 * 2	; extended env
  9771 000064DC E814110100              	call malloc
  9772 000064E1 488B7D10                	mov rdi, ENV
  9773 000064E5 BE00000000              	mov rsi, 0
  9774 000064EA BA01000000              	mov rdx, 1
  9775                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9776 000064EF 4883FE01                	cmp rsi, 1
  9777 000064F3 7410                    	je .L_lambda_simple_env_end_0037
  9778 000064F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9779 000064F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9780 000064FD 48FFC6                  	inc rsi
  9781 00006500 48FFC2                  	inc rdx
  9782 00006503 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9783                                  .L_lambda_simple_env_end_0037:
  9784 00006505 5B                      	pop rbx
  9785 00006506 BE00000000              	mov rsi, 0
  9786                                  .L_lambda_simple_params_loop_0037:	; copy params
  9787 0000650B 4883FE01                	cmp rsi, 1
  9788 0000650F 740E                    	je .L_lambda_simple_params_end_0037
  9789 00006511 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9790 00006516 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9791 0000651A 48FFC6                  	inc rsi
  9792 0000651D EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9793                                  .L_lambda_simple_params_end_0037:
  9794 0000651F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9795 00006522 4889C3                  	mov rbx, rax
  9796 00006525 58                      	pop rax
  9797 00006526 C60004                  	mov byte [rax], T_closure
  9798 00006529 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9799 0000652D 48C74009[3A650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9800 00006535 E903020000              	jmp .L_lambda_simple_end_0037
  9801                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9802 0000653A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9803 00006540 740B                    	je .L_lambda_simple_arity_check_ok_0037
  9804 00006542 FF742410                	push qword [rsp + 8 * 2]
  9805 00006546 6A01                    	push 1
  9806 00006548 E961100100              	jmp L_error_incorrect_arity_simple
  9807                                  .L_lambda_simple_arity_check_ok_0037:
  9808 0000654D C8000000                	enter 0, 0
  9809 00006551 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9810 00006556 E89A100100              	call malloc
  9811 0000655B 50                      	push rax
  9812 0000655C BF08000000              	mov rdi, 8 * 1	; new rib
  9813 00006561 E88F100100              	call malloc
  9814 00006566 50                      	push rax
  9815 00006567 BF18000000              	mov rdi, 8 * 3	; extended env
  9816 0000656C E884100100              	call malloc
  9817 00006571 488B7D10                	mov rdi, ENV
  9818 00006575 4831F6                  	 xor rsi, rsi
  9819 00006578 4831D2                  	 xor rdx, rdx
  9820 0000657B 48FFC2                  	inc rdx
  9821                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  9822 0000657E 4883FE02                	cmp rsi, 2
  9823 00006582 7410                    	je .L_lambda_opt_env_end_000a
  9824 00006584 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9825 00006588 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9826 0000658C 48FFC6                  	inc rsi
  9827 0000658F 48FFC2                  	inc rdx
  9828 00006592 EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9829                                  .L_lambda_opt_env_end_000a:
  9830 00006594 5B                      	pop rbx
  9831 00006595 4831F6                  	xor rsi, rsi
  9832                                  .L_lambda_opt_params_loop_000a:	; copy params
  9833 00006598 4883FE01                	cmp rsi, 1
  9834 0000659C 740E                    	je .L_lambda_opt_params_end_000a
  9835 0000659E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9836 000065A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9837 000065A7 48FFC6                  	inc rsi
  9838 000065AA EBEC                    	jmp .L_lambda_opt_params_loop_000a
  9839                                  .L_lambda_opt_params_end_000a:
  9840 000065AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9841 000065AF 4889C3                  	mov rbx, rax
  9842 000065B2 58                      	pop rax
  9843 000065B3 C60004                  	mov byte [rax], T_closure
  9844 000065B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9845 000065BA 48C74009[C7650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9846 000065C2 E972010000              	jmp .L_lambda_opt_end_000a
  9847                                  .L_lambda_opt_code_000a:; lambda opt body
  9848 000065C7 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9849 000065CD 7409                    	je .L_lambda_opt_arity_check_exact_000a
  9850 000065CF 7F57                    	jg .L_lambda_opt_arity_check_more_000a
  9851 000065D1 6A00                    	push 0
  9852 000065D3 E9EA0F0100              	jmp L_error_incorrect_arity_opt
  9853                                  .L_lambda_opt_arity_check_exact_000a:
  9854 000065D8 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  9855 000065DC 4C894C24F8              	mov qword [rsp -8], r9
  9856 000065E1 4C8B4C2408              	mov r9, qword [rsp +8]
  9857 000065E6 4C890C24                	mov qword [rsp +8 * 0], r9
  9858 000065EA 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  9859 000065EF 4C89C9                  	mov rcx, r9
  9860 000065F2 49FFC1                  	inc r9
  9861 000065F5 4C894C2408              	mov qword [rsp +8], r9
  9862 000065FA 4889E2                  	mov rdx, rsp
  9863 000065FD 4883C218                	add rdx, 24
  9864                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000a:
  9865 00006601 4883F900                	cmp rcx, 0
  9866 00006605 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000a
  9867 00006607 4C8B02                  	mov r8, qword [rdx]
  9868 0000660A 4C8942F8                	mov qword [rdx - 8], r8
  9869 0000660E 4883C208                	add rdx, 8
  9870 00006612 48FFC9                  	dec rcx
  9871 00006615 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000a
  9872                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000a:
  9873 00006617 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  9874 0000661F 4883EC08                	sub rsp, 8
  9875 00006623 E984000000              	jmp .L_lambda_opt_stack_adjusted_000a
  9876                                  .L_lambda_opt_arity_check_more_000a:
  9877 00006628 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  9878 0000662D 4D89C4                  	mov r12, r8
  9879 00006630 4C89C1                  	mov rcx, r8
  9880 00006633 4D8D5002                	lea r10, [r8 + 2] 
  9881 00006637 4883E900                	sub rcx, 0
  9882 0000663B 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  9883 00006640 49B9-                   	mov r9, sob_nil
  9883 00006642 [0100000000000000] 
  9884                                  .L_lambda_opt_create_list_of_opt_params_000a:
  9885 0000664A 4883F900                	cmp rcx, 0
  9886 0000664E 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000a
  9887 00006650 BF11000000              	mov rdi, 17
  9888 00006655 E89B0F0100              	call malloc
  9889 0000665A C60021                  	mov byte [rax], T_pair
  9890 0000665D 498B1B                  	mov rbx, qword [r11]
  9891 00006660 48895801                	mov qword [rax +1], rbx
  9892 00006664 4C894809                	mov qword [rax + 1 + 8], r9
  9893 00006668 4989C1                  	mov r9, rax
  9894 0000666B 48FFC9                  	dec rcx
  9895 0000666E 4983EB08                	sub r11, 8
  9896 00006672 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000a
  9897                                  .L_lambda_opt_create_list_of_opt_params_end_000a:
  9898 00006674 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
  9899 00006679 4D8908                  	mov qword [r8], r9
  9900 0000667C 4E8D14D500000000        	lea r10, [8 * r10]
  9901 00006684 4901E2                  	add r10, rsp
  9902 00006687 B904000000              	mov rcx, 4 + 0
  9903                                  .L_lambda_opt_stack_shrink_loop_000a:
  9904 0000668C 4883F900                	cmp rcx, 0
  9905 00006690 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000a
  9906 00006692 4D8B18                  	mov r11, qword [r8]
  9907 00006695 4D891A                  	mov qword [r10], r11
  9908 00006698 4983E808                	sub r8, 8
  9909 0000669C 4983EA08                	sub r10, 8
  9910 000066A0 48FFC9                  	dec rcx
  9911 000066A3 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9912                                  .L_lambda_opt_stack_shrink_loop_exit_000a:
  9913 000066A5 4983C208                	add r10, 8
  9914 000066A9 4C89D4                  	mov rsp, r10
  9915                                  .L_lambda_opt_stack_adjusted_000a:;continue with the code, the stack is ok
  9916 000066AC 48C744241001000000      	mov qword [rsp + 8*2], 1
  9917 000066B5 C8000000                	enter 0, 0
  9918                                  	; preparing a tail-call
  9919 000066B9 488B4520                	mov rax, PARAM(0)	; param s
  9920 000066BD 50                      	push rax
  9921 000066BE 48B8-                   	mov rax, L_constants + 2135
  9921 000066C0 [5708000000000000] 
  9922 000066C8 50                      	push rax
  9923 000066C9 488B4510                	mov rax, ENV
  9924 000066CD 488B00                  	mov rax, qword [rax + 8 * 0]
  9925 000066D0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9926 000066D3 50                      	push rax
  9927 000066D4 6A03                    	push 3	; arg count
  9928 000066D6 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9929 000066DE 803805                  	cmp byte [rax], T_undefined
  9930 000066E1 0F84E10D0100            	je L_error_fvar_undefined
  9931 000066E7 803804                  	cmp byte [rax], T_closure
  9932 000066EA 0F855C0E0100            	jne L_error_non_closure
  9933 000066F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9934 000066F3 FF7508                  	push qword [rbp + 8 * 1]
  9935                                   ; old ret addr
  9936 000066F6 FF7500                  	push qword [rbp]
  9937                                   ; restore the old rbp
  9938 000066F9 BB03000000              	mov rbx, 3
  9939 000066FE 4883C303                	add rbx, 3
  9940 00006702 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9941 00006706 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9942 0000670B 4C8D4DF8                	lea r9, [rbp - 8]
  9943 0000670F B907000000              	mov rcx, 7
  9944                                  .L_tc_recycle_frame_loop_0044:
  9945 00006714 4883F900                	cmp rcx, 0
  9946 00006718 7413                    	je .L_tc_recycle_frame_done_0044
  9947 0000671A 4D8B11                  	mov r10, qword [r9]
  9948 0000671D 4D8910                  	mov qword [r8], r10
  9949 00006720 4983E808                	sub r8, 8
  9950 00006724 4983E908                	sub r9, 8
  9951 00006728 48FFC9                  	dec rcx
  9952 0000672B EBE7                    	jmp .L_tc_recycle_frame_loop_0044
  9953                                  .L_tc_recycle_frame_done_0044:
  9954 0000672D 498D6008                	lea rsp, [r8 + 8]
  9955 00006731 5D                      	pop rbp ; restore the old rbp
  9956 00006732 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9957 00006735 C9                      	leave
  9958 00006736 C21800                  	ret 8 * (2 + 1)
  9959                                  .L_lambda_opt_end_000a:	; new closure is in rax
  9960 00006739 C9                      	leave
  9961 0000673A C21800                  	ret AND_KILL_FRAME(1)
  9962                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9963 0000673D 803804                  	cmp byte [rax], T_closure
  9964 00006740 0F85060E0100            	jne L_error_non_closure
  9965 00006746 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9966 00006749 FF7508                  	push qword [rbp + 8 * 1]
  9967                                   ; old ret addr
  9968 0000674C FF7500                  	push qword [rbp]
  9969                                   ; restore the old rbp
  9970 0000674F BB01000000              	mov rbx, 1
  9971 00006754 4883C303                	add rbx, 3
  9972 00006758 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9973 0000675C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9974 00006761 4C8D4DF8                	lea r9, [rbp - 8]
  9975 00006765 B905000000              	mov rcx, 5
  9976                                  .L_tc_recycle_frame_loop_0036:
  9977 0000676A 4883F900                	cmp rcx, 0
  9978 0000676E 7413                    	je .L_tc_recycle_frame_done_0036
  9979 00006770 4D8B11                  	mov r10, qword [r9]
  9980 00006773 4D8910                  	mov qword [r8], r10
  9981 00006776 4983E808                	sub r8, 8
  9982 0000677A 4983E908                	sub r9, 8
  9983 0000677E 48FFC9                  	dec rcx
  9984 00006781 EBE7                    	jmp .L_tc_recycle_frame_loop_0036
  9985                                  .L_tc_recycle_frame_done_0036:
  9986 00006783 498D6008                	lea rsp, [r8 + 8]
  9987 00006787 5D                      	pop rbp ; restore the old rbp
  9988 00006788 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9989 0000678B C9                      	leave
  9990 0000678C C21800                  	ret AND_KILL_FRAME(1)
  9991                                  .L_lambda_simple_end_0035:	; new closure is in rax
  9992 0000678F 803804                  	cmp byte [rax], T_closure
  9993 00006792 0F85B40D0100            	jne L_error_non_closure
  9994 00006798 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9995 0000679B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9996 0000679E 48890425[D60D0000]      	mov qword [free_var_1], rax
  9997 000067A6 48B8-                   	mov rax, sob_void
  9997 000067A8 [0000000000000000] 
  9998                                  
  9999 000067B0 4889C7                  	mov rdi, rax
 10000 000067B3 E892100100              	call print_sexpr_if_not_void
 10001                                  	; preparing a non-tail-call
 10002 000067B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10003 000067BD E8330E0100              	call malloc
 10004 000067C2 50                      	push rax
 10005 000067C3 BF00000000              	mov rdi, 8 * 0	; new rib
 10006 000067C8 E8280E0100              	call malloc
 10007 000067CD 50                      	push rax
 10008 000067CE BF08000000              	mov rdi, 8 * 1	; extended env
 10009 000067D3 E81D0E0100              	call malloc
 10010 000067D8 488B7D10                	mov rdi, ENV
 10011 000067DC BE00000000              	mov rsi, 0
 10012 000067E1 BA01000000              	mov rdx, 1
 10013                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
 10014 000067E6 4883FE00                	cmp rsi, 0
 10015 000067EA 7410                    	je .L_lambda_simple_env_end_0038
 10016 000067EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10017 000067F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10018 000067F4 48FFC6                  	inc rsi
 10019 000067F7 48FFC2                  	inc rdx
 10020 000067FA EBEA                    	jmp .L_lambda_simple_env_loop_0038
 10021                                  .L_lambda_simple_env_end_0038:
 10022 000067FC 5B                      	pop rbx
 10023 000067FD BE00000000              	mov rsi, 0
 10024                                  .L_lambda_simple_params_loop_0038:	; copy params
 10025 00006802 4883FE00                	cmp rsi, 0
 10026 00006806 740E                    	je .L_lambda_simple_params_end_0038
 10027 00006808 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10028 0000680D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10029 00006811 48FFC6                  	inc rsi
 10030 00006814 EBEC                    	jmp .L_lambda_simple_params_loop_0038
 10031                                  .L_lambda_simple_params_end_0038:
 10032 00006816 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10033 00006819 4889C3                  	mov rbx, rax
 10034 0000681C 58                      	pop rax
 10035 0000681D C60004                  	mov byte [rax], T_closure
 10036 00006820 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10037 00006824 48C74009[31680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
 10038 0000682C E992000000              	jmp .L_lambda_simple_end_0038
 10039                                  .L_lambda_simple_code_0038:	; lambda-simple body
 10040 00006831 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10041 00006837 740B                    	je .L_lambda_simple_arity_check_ok_0038
 10042 00006839 FF742410                	push qword [rsp + 8 * 2]
 10043 0000683D 6A00                    	push 0
 10044 0000683F E96A0D0100              	jmp L_error_incorrect_arity_simple
 10045                                  .L_lambda_simple_arity_check_ok_0038:
 10046 00006844 C8000000                	enter 0, 0
 10047                                  	; preparing a tail-call
 10048 00006848 48B8-                   	mov rax, L_constants + 2187
 10048 0000684A [8B08000000000000] 
 10049 00006852 50                      	push rax
 10050 00006853 48B8-                   	mov rax, L_constants + 2251
 10050 00006855 [CB08000000000000] 
 10051 0000685D 50                      	push rax
 10052 0000685E 6A02                    	push 2	; arg count
 10053 00006860 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 10054 00006868 803805                  	cmp byte [rax], T_undefined
 10055 0000686B 0F84570C0100            	je L_error_fvar_undefined
 10056 00006871 803804                  	cmp byte [rax], T_closure
 10057 00006874 0F85D20C0100            	jne L_error_non_closure
 10058 0000687A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10059 0000687D FF7508                  	push qword [rbp + 8 * 1]
 10060                                   ; old ret addr
 10061 00006880 FF7500                  	push qword [rbp]
 10062                                   ; restore the old rbp
 10063 00006883 BB02000000              	mov rbx, 2
 10064 00006888 4883C303                	add rbx, 3
 10065 0000688C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10066 00006890 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10067 00006895 4C8D4DF8                	lea r9, [rbp - 8]
 10068 00006899 B906000000              	mov rcx, 6
 10069                                  .L_tc_recycle_frame_loop_0045:
 10070 0000689E 4883F900                	cmp rcx, 0
 10071 000068A2 7413                    	je .L_tc_recycle_frame_done_0045
 10072 000068A4 4D8B11                  	mov r10, qword [r9]
 10073 000068A7 4D8910                  	mov qword [r8], r10
 10074 000068AA 4983E808                	sub r8, 8
 10075 000068AE 4983E908                	sub r9, 8
 10076 000068B2 48FFC9                  	dec rcx
 10077 000068B5 EBE7                    	jmp .L_tc_recycle_frame_loop_0045
 10078                                  .L_tc_recycle_frame_done_0045:
 10079 000068B7 498D6008                	lea rsp, [r8 + 8]
 10080 000068BB 5D                      	pop rbp ; restore the old rbp
 10081 000068BC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10082 000068BF C9                      	leave
 10083 000068C0 C21000                  	ret AND_KILL_FRAME(0)
 10084                                  .L_lambda_simple_end_0038:	; new closure is in rax
 10085 000068C3 50                      	push rax
 10086 000068C4 6A01                    	push 1	; arg count
 10087 000068C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10088 000068CB E8250D0100              	call malloc
 10089 000068D0 50                      	push rax
 10090 000068D1 BF00000000              	mov rdi, 8 * 0	; new rib
 10091 000068D6 E81A0D0100              	call malloc
 10092 000068DB 50                      	push rax
 10093 000068DC BF08000000              	mov rdi, 8 * 1	; extended env
 10094 000068E1 E80F0D0100              	call malloc
 10095 000068E6 488B7D10                	mov rdi, ENV
 10096 000068EA BE00000000              	mov rsi, 0
 10097 000068EF BA01000000              	mov rdx, 1
 10098                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
 10099 000068F4 4883FE00                	cmp rsi, 0
 10100 000068F8 7410                    	je .L_lambda_simple_env_end_0039
 10101 000068FA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10102 000068FE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10103 00006902 48FFC6                  	inc rsi
 10104 00006905 48FFC2                  	inc rdx
 10105 00006908 EBEA                    	jmp .L_lambda_simple_env_loop_0039
 10106                                  .L_lambda_simple_env_end_0039:
 10107 0000690A 5B                      	pop rbx
 10108 0000690B BE00000000              	mov rsi, 0
 10109                                  .L_lambda_simple_params_loop_0039:	; copy params
 10110 00006910 4883FE00                	cmp rsi, 0
 10111 00006914 740E                    	je .L_lambda_simple_params_end_0039
 10112 00006916 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10113 0000691B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10114 0000691F 48FFC6                  	inc rsi
 10115 00006922 EBEC                    	jmp .L_lambda_simple_params_loop_0039
 10116                                  .L_lambda_simple_params_end_0039:
 10117 00006924 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10118 00006927 4889C3                  	mov rbx, rax
 10119 0000692A 58                      	pop rax
 10120 0000692B C60004                  	mov byte [rax], T_closure
 10121 0000692E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10122 00006932 48C74009[3F690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
 10123 0000693A E9B70D0000              	jmp .L_lambda_simple_end_0039
 10124                                  .L_lambda_simple_code_0039:	; lambda-simple body
 10125 0000693F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10126 00006945 740B                    	je .L_lambda_simple_arity_check_ok_0039
 10127 00006947 FF742410                	push qword [rsp + 8 * 2]
 10128 0000694B 6A01                    	push 1
 10129 0000694D E95C0C0100              	jmp L_error_incorrect_arity_simple
 10130                                  .L_lambda_simple_arity_check_ok_0039:
 10131 00006952 C8000000                	enter 0, 0
 10132                                  	; preparing a tail-call
 10133 00006956 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10134 0000695B E8950C0100              	call malloc
 10135 00006960 50                      	push rax
 10136 00006961 BF08000000              	mov rdi, 8 * 1	; new rib
 10137 00006966 E88A0C0100              	call malloc
 10138 0000696B 50                      	push rax
 10139 0000696C BF10000000              	mov rdi, 8 * 2	; extended env
 10140 00006971 E87F0C0100              	call malloc
 10141 00006976 488B7D10                	mov rdi, ENV
 10142 0000697A BE00000000              	mov rsi, 0
 10143 0000697F BA01000000              	mov rdx, 1
 10144                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
 10145 00006984 4883FE01                	cmp rsi, 1
 10146 00006988 7410                    	je .L_lambda_simple_env_end_003a
 10147 0000698A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10148 0000698E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10149 00006992 48FFC6                  	inc rsi
 10150 00006995 48FFC2                  	inc rdx
 10151 00006998 EBEA                    	jmp .L_lambda_simple_env_loop_003a
 10152                                  .L_lambda_simple_env_end_003a:
 10153 0000699A 5B                      	pop rbx
 10154 0000699B BE00000000              	mov rsi, 0
 10155                                  .L_lambda_simple_params_loop_003a:	; copy params
 10156 000069A0 4883FE01                	cmp rsi, 1
 10157 000069A4 740E                    	je .L_lambda_simple_params_end_003a
 10158 000069A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10159 000069AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10160 000069AF 48FFC6                  	inc rsi
 10161 000069B2 EBEC                    	jmp .L_lambda_simple_params_loop_003a
 10162                                  .L_lambda_simple_params_end_003a:
 10163 000069B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10164 000069B7 4889C3                  	mov rbx, rax
 10165 000069BA 58                      	pop rax
 10166 000069BB C60004                  	mov byte [rax], T_closure
 10167 000069BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10168 000069C2 48C74009[CF690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
 10169 000069CA E9A0080000              	jmp .L_lambda_simple_end_003a
 10170                                  .L_lambda_simple_code_003a:	; lambda-simple body
 10171 000069CF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10172 000069D5 740B                    	je .L_lambda_simple_arity_check_ok_003a
 10173 000069D7 FF742410                	push qword [rsp + 8 * 2]
 10174 000069DB 6A02                    	push 2
 10175 000069DD E9CC0B0100              	jmp L_error_incorrect_arity_simple
 10176                                  .L_lambda_simple_arity_check_ok_003a:
 10177 000069E2 C8000000                	enter 0, 0
 10178                                  	; preparing a non-tail-call
 10179 000069E6 488B4520                	mov rax, PARAM(0)	; param a
 10180 000069EA 50                      	push rax
 10181 000069EB 6A01                    	push 1	; arg count
 10182 000069ED 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10183 000069F5 803805                  	cmp byte [rax], T_undefined
 10184 000069F8 0F84CA0A0100            	je L_error_fvar_undefined
 10185 000069FE 803804                  	cmp byte [rax], T_closure
 10186 00006A01 0F85450B0100            	jne L_error_non_closure
 10187 00006A07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10188 00006A0A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10189 00006A0D 483D[02000000]          	cmp rax, sob_boolean_false
 10190 00006A13 0F8487020000            	je .L_if_else_0028
 10191                                  	; preparing a non-tail-call
 10192 00006A19 488B4528                	mov rax, PARAM(1)	; param b
 10193 00006A1D 50                      	push rax
 10194 00006A1E 6A01                    	push 1	; arg count
 10195 00006A20 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10196 00006A28 803805                  	cmp byte [rax], T_undefined
 10197 00006A2B 0F84970A0100            	je L_error_fvar_undefined
 10198 00006A31 803804                  	cmp byte [rax], T_closure
 10199 00006A34 0F85120B0100            	jne L_error_non_closure
 10200 00006A3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10201 00006A3D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10202 00006A40 483D[02000000]          	cmp rax, sob_boolean_false
 10203 00006A46 7470                    	je .L_if_else_001f
 10204                                  	; preparing a tail-call
 10205 00006A48 488B4528                	mov rax, PARAM(1)	; param b
 10206 00006A4C 50                      	push rax
 10207 00006A4D 488B4520                	mov rax, PARAM(0)	; param a
 10208 00006A51 50                      	push rax
 10209 00006A52 6A02                    	push 2	; arg count
 10210 00006A54 488B0425[900F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10211 00006A5C 803805                  	cmp byte [rax], T_undefined
 10212 00006A5F 0F84630A0100            	je L_error_fvar_undefined
 10213 00006A65 803804                  	cmp byte [rax], T_closure
 10214 00006A68 0F85DE0A0100            	jne L_error_non_closure
 10215 00006A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10216 00006A71 FF7508                  	push qword [rbp + 8 * 1]
 10217                                   ; old ret addr
 10218 00006A74 FF7500                  	push qword [rbp]
 10219                                   ; restore the old rbp
 10220 00006A77 BB02000000              	mov rbx, 2
 10221 00006A7C 4883C303                	add rbx, 3
 10222 00006A80 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10223 00006A84 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10224 00006A89 4C8D4DF8                	lea r9, [rbp - 8]
 10225 00006A8D B906000000              	mov rcx, 6
 10226                                  .L_tc_recycle_frame_loop_0047:
 10227 00006A92 4883F900                	cmp rcx, 0
 10228 00006A96 7413                    	je .L_tc_recycle_frame_done_0047
 10229 00006A98 4D8B11                  	mov r10, qword [r9]
 10230 00006A9B 4D8910                  	mov qword [r8], r10
 10231 00006A9E 4983E808                	sub r8, 8
 10232 00006AA2 4983E908                	sub r9, 8
 10233 00006AA6 48FFC9                  	dec rcx
 10234 00006AA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0047
 10235                                  .L_tc_recycle_frame_done_0047:
 10236 00006AAB 498D6008                	lea rsp, [r8 + 8]
 10237 00006AAF 5D                      	pop rbp ; restore the old rbp
 10238 00006AB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10239 00006AB3 E9E3010000              	jmp .L_if_end_001f
 10240                                  .L_if_else_001f:
 10241                                  	; preparing a non-tail-call
 10242 00006AB8 488B4528                	mov rax, PARAM(1)	; param b
 10243 00006ABC 50                      	push rax
 10244 00006ABD 6A01                    	push 1	; arg count
 10245 00006ABF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10246 00006AC7 803805                  	cmp byte [rax], T_undefined
 10247 00006ACA 0F84F8090100            	je L_error_fvar_undefined
 10248 00006AD0 803804                  	cmp byte [rax], T_closure
 10249 00006AD3 0F85730A0100            	jne L_error_non_closure
 10250 00006AD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10251 00006ADC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10252 00006ADF 483D[02000000]          	cmp rax, sob_boolean_false
 10253 00006AE5 0F8493000000            	je .L_if_else_001e
 10254                                  	; preparing a tail-call
 10255 00006AEB 488B4528                	mov rax, PARAM(1)	; param b
 10256 00006AEF 50                      	push rax
 10257                                  	; preparing a non-tail-call
 10258 00006AF0 488B4520                	mov rax, PARAM(0)	; param a
 10259 00006AF4 50                      	push rax
 10260 00006AF5 6A01                    	push 1	; arg count
 10261 00006AF7 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10262 00006AFF 803805                  	cmp byte [rax], T_undefined
 10263 00006B02 0F84C0090100            	je L_error_fvar_undefined
 10264 00006B08 803804                  	cmp byte [rax], T_closure
 10265 00006B0B 0F853B0A0100            	jne L_error_non_closure
 10266 00006B11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10267 00006B14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10268 00006B17 50                      	push rax
 10269 00006B18 6A02                    	push 2	; arg count
 10270 00006B1A 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10271 00006B22 803805                  	cmp byte [rax], T_undefined
 10272 00006B25 0F849D090100            	je L_error_fvar_undefined
 10273 00006B2B 803804                  	cmp byte [rax], T_closure
 10274 00006B2E 0F85180A0100            	jne L_error_non_closure
 10275 00006B34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10276 00006B37 FF7508                  	push qword [rbp + 8 * 1]
 10277                                   ; old ret addr
 10278 00006B3A FF7500                  	push qword [rbp]
 10279                                   ; restore the old rbp
 10280 00006B3D BB02000000              	mov rbx, 2
 10281 00006B42 4883C303                	add rbx, 3
 10282 00006B46 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10283 00006B4A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10284 00006B4F 4C8D4DF8                	lea r9, [rbp - 8]
 10285 00006B53 B906000000              	mov rcx, 6
 10286                                  .L_tc_recycle_frame_loop_0048:
 10287 00006B58 4883F900                	cmp rcx, 0
 10288 00006B5C 7413                    	je .L_tc_recycle_frame_done_0048
 10289 00006B5E 4D8B11                  	mov r10, qword [r9]
 10290 00006B61 4D8910                  	mov qword [r8], r10
 10291 00006B64 4983E808                	sub r8, 8
 10292 00006B68 4983E908                	sub r9, 8
 10293 00006B6C 48FFC9                  	dec rcx
 10294 00006B6F EBE7                    	jmp .L_tc_recycle_frame_loop_0048
 10295                                  .L_tc_recycle_frame_done_0048:
 10296 00006B71 498D6008                	lea rsp, [r8 + 8]
 10297 00006B75 5D                      	pop rbp ; restore the old rbp
 10298 00006B76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10299 00006B79 E91D010000              	jmp .L_if_end_001e
 10300                                  .L_if_else_001e:
 10301                                  	; preparing a non-tail-call
 10302 00006B7E 488B4528                	mov rax, PARAM(1)	; param b
 10303 00006B82 50                      	push rax
 10304 00006B83 6A01                    	push 1	; arg count
 10305 00006B85 488B0425[68150000]      	mov rax, qword [free_var_115]	; free var real
 10306 00006B8D 803805                  	cmp byte [rax], T_undefined
 10307 00006B90 0F8432090100            	je L_error_fvar_undefined
 10308 00006B96 803804                  	cmp byte [rax], T_closure
 10309 00006B99 0F85AD090100            	jne L_error_non_closure
 10310 00006B9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10311 00006BA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10312 00006BA5 483D[02000000]          	cmp rax, sob_boolean_false
 10313 00006BAB 0F8490000000            	je .L_if_else_001d
 10314                                  	; preparing a tail-call
 10315 00006BB1 488B4528                	mov rax, PARAM(1)	; param b
 10316 00006BB5 50                      	push rax
 10317                                  	; preparing a non-tail-call
 10318 00006BB6 488B4520                	mov rax, PARAM(0)	; param a
 10319 00006BBA 50                      	push rax
 10320 00006BBB 6A01                    	push 1	; arg count
 10321 00006BBD 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10322 00006BC5 803805                  	cmp byte [rax], T_undefined
 10323 00006BC8 0F84FA080100            	je L_error_fvar_undefined
 10324 00006BCE 803804                  	cmp byte [rax], T_closure
 10325 00006BD1 0F8575090100            	jne L_error_non_closure
 10326 00006BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10327 00006BDA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10328 00006BDD 50                      	push rax
 10329 00006BDE 6A02                    	push 2	; arg count
 10330 00006BE0 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10331 00006BE8 803805                  	cmp byte [rax], T_undefined
 10332 00006BEB 0F84D7080100            	je L_error_fvar_undefined
 10333 00006BF1 803804                  	cmp byte [rax], T_closure
 10334 00006BF4 0F8552090100            	jne L_error_non_closure
 10335 00006BFA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10336 00006BFD FF7508                  	push qword [rbp + 8 * 1]
 10337                                   ; old ret addr
 10338 00006C00 FF7500                  	push qword [rbp]
 10339                                   ; restore the old rbp
 10340 00006C03 BB02000000              	mov rbx, 2
 10341 00006C08 4883C303                	add rbx, 3
 10342 00006C0C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10343 00006C10 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10344 00006C15 4C8D4DF8                	lea r9, [rbp - 8]
 10345 00006C19 B906000000              	mov rcx, 6
 10346                                  .L_tc_recycle_frame_loop_0049:
 10347 00006C1E 4883F900                	cmp rcx, 0
 10348 00006C22 7413                    	je .L_tc_recycle_frame_done_0049
 10349 00006C24 4D8B11                  	mov r10, qword [r9]
 10350 00006C27 4D8910                  	mov qword [r8], r10
 10351 00006C2A 4983E808                	sub r8, 8
 10352 00006C2E 4983E908                	sub r9, 8
 10353 00006C32 48FFC9                  	dec rcx
 10354 00006C35 EBE7                    	jmp .L_tc_recycle_frame_loop_0049
 10355                                  .L_tc_recycle_frame_done_0049:
 10356 00006C37 498D6008                	lea rsp, [r8 + 8]
 10357 00006C3B 5D                      	pop rbp ; restore the old rbp
 10358 00006C3C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10359 00006C3F EB5A                    	jmp .L_if_end_001d
 10360                                  .L_if_else_001d:
 10361                                  	; preparing a tail-call
 10362 00006C41 6A00                    	push 0	; arg count
 10363 00006C43 488B4510                	mov rax, ENV
 10364 00006C47 488B00                  	mov rax, qword [rax + 8 * 0]
 10365 00006C4A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10366 00006C4D 803804                  	cmp byte [rax], T_closure
 10367 00006C50 0F85F6080100            	jne L_error_non_closure
 10368 00006C56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10369 00006C59 FF7508                  	push qword [rbp + 8 * 1]
 10370                                   ; old ret addr
 10371 00006C5C FF7500                  	push qword [rbp]
 10372                                   ; restore the old rbp
 10373 00006C5F BB00000000              	mov rbx, 0
 10374 00006C64 4883C303                	add rbx, 3
 10375 00006C68 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10376 00006C6C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10377 00006C71 4C8D4DF8                	lea r9, [rbp - 8]
 10378 00006C75 B904000000              	mov rcx, 4
 10379                                  .L_tc_recycle_frame_loop_004a:
 10380 00006C7A 4883F900                	cmp rcx, 0
 10381 00006C7E 7413                    	je .L_tc_recycle_frame_done_004a
 10382 00006C80 4D8B11                  	mov r10, qword [r9]
 10383 00006C83 4D8910                  	mov qword [r8], r10
 10384 00006C86 4983E808                	sub r8, 8
 10385 00006C8A 4983E908                	sub r9, 8
 10386 00006C8E 48FFC9                  	dec rcx
 10387 00006C91 EBE7                    	jmp .L_tc_recycle_frame_loop_004a
 10388                                  .L_tc_recycle_frame_done_004a:
 10389 00006C93 498D6008                	lea rsp, [r8 + 8]
 10390 00006C97 5D                      	pop rbp ; restore the old rbp
 10391 00006C98 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10392                                  .L_if_end_001d:
 10393                                  .L_if_end_001e:
 10394                                  .L_if_end_001f:
 10395 00006C9B E9CB050000              	jmp .L_if_end_0028
 10396                                  .L_if_else_0028:
 10397                                  	; preparing a non-tail-call
 10398 00006CA0 488B4520                	mov rax, PARAM(0)	; param a
 10399 00006CA4 50                      	push rax
 10400 00006CA5 6A01                    	push 1	; arg count
 10401 00006CA7 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10402 00006CAF 803805                  	cmp byte [rax], T_undefined
 10403 00006CB2 0F8410080100            	je L_error_fvar_undefined
 10404 00006CB8 803804                  	cmp byte [rax], T_closure
 10405 00006CBB 0F858B080100            	jne L_error_non_closure
 10406 00006CC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10407 00006CC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10408 00006CC7 483D[02000000]          	cmp rax, sob_boolean_false
 10409 00006CCD 0F8487020000            	je .L_if_else_0027
 10410                                  	; preparing a non-tail-call
 10411 00006CD3 488B4528                	mov rax, PARAM(1)	; param b
 10412 00006CD7 50                      	push rax
 10413 00006CD8 6A01                    	push 1	; arg count
 10414 00006CDA 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10415 00006CE2 803805                  	cmp byte [rax], T_undefined
 10416 00006CE5 0F84DD070100            	je L_error_fvar_undefined
 10417 00006CEB 803804                  	cmp byte [rax], T_closure
 10418 00006CEE 0F8558080100            	jne L_error_non_closure
 10419 00006CF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10420 00006CF7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10421 00006CFA 483D[02000000]          	cmp rax, sob_boolean_false
 10422 00006D00 0F8493000000            	je .L_if_else_0022
 10423                                  	; preparing a tail-call
 10424                                  	; preparing a non-tail-call
 10425 00006D06 488B4528                	mov rax, PARAM(1)	; param b
 10426 00006D0A 50                      	push rax
 10427 00006D0B 6A01                    	push 1	; arg count
 10428 00006D0D 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10429 00006D15 803805                  	cmp byte [rax], T_undefined
 10430 00006D18 0F84AA070100            	je L_error_fvar_undefined
 10431 00006D1E 803804                  	cmp byte [rax], T_closure
 10432 00006D21 0F8525080100            	jne L_error_non_closure
 10433 00006D27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10434 00006D2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10435 00006D2D 50                      	push rax
 10436 00006D2E 488B4520                	mov rax, PARAM(0)	; param a
 10437 00006D32 50                      	push rax
 10438 00006D33 6A02                    	push 2	; arg count
 10439 00006D35 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10440 00006D3D 803805                  	cmp byte [rax], T_undefined
 10441 00006D40 0F8482070100            	je L_error_fvar_undefined
 10442 00006D46 803804                  	cmp byte [rax], T_closure
 10443 00006D49 0F85FD070100            	jne L_error_non_closure
 10444 00006D4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10445 00006D52 FF7508                  	push qword [rbp + 8 * 1]
 10446                                   ; old ret addr
 10447 00006D55 FF7500                  	push qword [rbp]
 10448                                   ; restore the old rbp
 10449 00006D58 BB02000000              	mov rbx, 2
 10450 00006D5D 4883C303                	add rbx, 3
 10451 00006D61 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10452 00006D65 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10453 00006D6A 4C8D4DF8                	lea r9, [rbp - 8]
 10454 00006D6E B906000000              	mov rcx, 6
 10455                                  .L_tc_recycle_frame_loop_004b:
 10456 00006D73 4883F900                	cmp rcx, 0
 10457 00006D77 7413                    	je .L_tc_recycle_frame_done_004b
 10458 00006D79 4D8B11                  	mov r10, qword [r9]
 10459 00006D7C 4D8910                  	mov qword [r8], r10
 10460 00006D7F 4983E808                	sub r8, 8
 10461 00006D83 4983E908                	sub r9, 8
 10462 00006D87 48FFC9                  	dec rcx
 10463 00006D8A EBE7                    	jmp .L_tc_recycle_frame_loop_004b
 10464                                  .L_tc_recycle_frame_done_004b:
 10465 00006D8C 498D6008                	lea rsp, [r8 + 8]
 10466 00006D90 5D                      	pop rbp ; restore the old rbp
 10467 00006D91 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10468 00006D94 E9BC010000              	jmp .L_if_end_0022
 10469                                  .L_if_else_0022:
 10470                                  	; preparing a non-tail-call
 10471 00006D99 488B4528                	mov rax, PARAM(1)	; param b
 10472 00006D9D 50                      	push rax
 10473 00006D9E 6A01                    	push 1	; arg count
 10474 00006DA0 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10475 00006DA8 803805                  	cmp byte [rax], T_undefined
 10476 00006DAB 0F8417070100            	je L_error_fvar_undefined
 10477 00006DB1 803804                  	cmp byte [rax], T_closure
 10478 00006DB4 0F8592070100            	jne L_error_non_closure
 10479 00006DBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10480 00006DBD FF5009                  	call SOB_CLOSURE_CODE(rax)
 10481 00006DC0 483D[02000000]          	cmp rax, sob_boolean_false
 10482 00006DC6 7470                    	je .L_if_else_0021
 10483                                  	; preparing a tail-call
 10484 00006DC8 488B4528                	mov rax, PARAM(1)	; param b
 10485 00006DCC 50                      	push rax
 10486 00006DCD 488B4520                	mov rax, PARAM(0)	; param a
 10487 00006DD1 50                      	push rax
 10488 00006DD2 6A02                    	push 2	; arg count
 10489 00006DD4 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10490 00006DDC 803805                  	cmp byte [rax], T_undefined
 10491 00006DDF 0F84E3060100            	je L_error_fvar_undefined
 10492 00006DE5 803804                  	cmp byte [rax], T_closure
 10493 00006DE8 0F855E070100            	jne L_error_non_closure
 10494 00006DEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10495 00006DF1 FF7508                  	push qword [rbp + 8 * 1]
 10496                                   ; old ret addr
 10497 00006DF4 FF7500                  	push qword [rbp]
 10498                                   ; restore the old rbp
 10499 00006DF7 BB02000000              	mov rbx, 2
 10500 00006DFC 4883C303                	add rbx, 3
 10501 00006E00 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10502 00006E04 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10503 00006E09 4C8D4DF8                	lea r9, [rbp - 8]
 10504 00006E0D B906000000              	mov rcx, 6
 10505                                  .L_tc_recycle_frame_loop_004c:
 10506 00006E12 4883F900                	cmp rcx, 0
 10507 00006E16 7413                    	je .L_tc_recycle_frame_done_004c
 10508 00006E18 4D8B11                  	mov r10, qword [r9]
 10509 00006E1B 4D8910                  	mov qword [r8], r10
 10510 00006E1E 4983E808                	sub r8, 8
 10511 00006E22 4983E908                	sub r9, 8
 10512 00006E26 48FFC9                  	dec rcx
 10513 00006E29 EBE7                    	jmp .L_tc_recycle_frame_loop_004c
 10514                                  .L_tc_recycle_frame_done_004c:
 10515 00006E2B 498D6008                	lea rsp, [r8 + 8]
 10516 00006E2F 5D                      	pop rbp ; restore the old rbp
 10517 00006E30 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10518 00006E33 E91D010000              	jmp .L_if_end_0021
 10519                                  .L_if_else_0021:
 10520                                  	; preparing a non-tail-call
 10521 00006E38 488B4528                	mov rax, PARAM(1)	; param b
 10522 00006E3C 50                      	push rax
 10523 00006E3D 6A01                    	push 1	; arg count
 10524 00006E3F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10525 00006E47 803805                  	cmp byte [rax], T_undefined
 10526 00006E4A 0F8478060100            	je L_error_fvar_undefined
 10527 00006E50 803804                  	cmp byte [rax], T_closure
 10528 00006E53 0F85F3060100            	jne L_error_non_closure
 10529 00006E59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10530 00006E5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10531 00006E5F 483D[02000000]          	cmp rax, sob_boolean_false
 10532 00006E65 0F8490000000            	je .L_if_else_0020
 10533                                  	; preparing a tail-call
 10534 00006E6B 488B4528                	mov rax, PARAM(1)	; param b
 10535 00006E6F 50                      	push rax
 10536                                  	; preparing a non-tail-call
 10537 00006E70 488B4520                	mov rax, PARAM(0)	; param a
 10538 00006E74 50                      	push rax
 10539 00006E75 6A01                    	push 1	; arg count
 10540 00006E77 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10541 00006E7F 803805                  	cmp byte [rax], T_undefined
 10542 00006E82 0F8440060100            	je L_error_fvar_undefined
 10543 00006E88 803804                  	cmp byte [rax], T_closure
 10544 00006E8B 0F85BB060100            	jne L_error_non_closure
 10545 00006E91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10546 00006E94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10547 00006E97 50                      	push rax
 10548 00006E98 6A02                    	push 2	; arg count
 10549 00006E9A 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10550 00006EA2 803805                  	cmp byte [rax], T_undefined
 10551 00006EA5 0F841D060100            	je L_error_fvar_undefined
 10552 00006EAB 803804                  	cmp byte [rax], T_closure
 10553 00006EAE 0F8598060100            	jne L_error_non_closure
 10554 00006EB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10555 00006EB7 FF7508                  	push qword [rbp + 8 * 1]
 10556                                   ; old ret addr
 10557 00006EBA FF7500                  	push qword [rbp]
 10558                                   ; restore the old rbp
 10559 00006EBD BB02000000              	mov rbx, 2
 10560 00006EC2 4883C303                	add rbx, 3
 10561 00006EC6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10562 00006ECA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10563 00006ECF 4C8D4DF8                	lea r9, [rbp - 8]
 10564 00006ED3 B906000000              	mov rcx, 6
 10565                                  .L_tc_recycle_frame_loop_004d:
 10566 00006ED8 4883F900                	cmp rcx, 0
 10567 00006EDC 7413                    	je .L_tc_recycle_frame_done_004d
 10568 00006EDE 4D8B11                  	mov r10, qword [r9]
 10569 00006EE1 4D8910                  	mov qword [r8], r10
 10570 00006EE4 4983E808                	sub r8, 8
 10571 00006EE8 4983E908                	sub r9, 8
 10572 00006EEC 48FFC9                  	dec rcx
 10573 00006EEF EBE7                    	jmp .L_tc_recycle_frame_loop_004d
 10574                                  .L_tc_recycle_frame_done_004d:
 10575 00006EF1 498D6008                	lea rsp, [r8 + 8]
 10576 00006EF5 5D                      	pop rbp ; restore the old rbp
 10577 00006EF6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10578 00006EF9 EB5A                    	jmp .L_if_end_0020
 10579                                  .L_if_else_0020:
 10580                                  	; preparing a tail-call
 10581 00006EFB 6A00                    	push 0	; arg count
 10582 00006EFD 488B4510                	mov rax, ENV
 10583 00006F01 488B00                  	mov rax, qword [rax + 8 * 0]
 10584 00006F04 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10585 00006F07 803804                  	cmp byte [rax], T_closure
 10586 00006F0A 0F853C060100            	jne L_error_non_closure
 10587 00006F10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10588 00006F13 FF7508                  	push qword [rbp + 8 * 1]
 10589                                   ; old ret addr
 10590 00006F16 FF7500                  	push qword [rbp]
 10591                                   ; restore the old rbp
 10592 00006F19 BB00000000              	mov rbx, 0
 10593 00006F1E 4883C303                	add rbx, 3
 10594 00006F22 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10595 00006F26 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10596 00006F2B 4C8D4DF8                	lea r9, [rbp - 8]
 10597 00006F2F B904000000              	mov rcx, 4
 10598                                  .L_tc_recycle_frame_loop_004e:
 10599 00006F34 4883F900                	cmp rcx, 0
 10600 00006F38 7413                    	je .L_tc_recycle_frame_done_004e
 10601 00006F3A 4D8B11                  	mov r10, qword [r9]
 10602 00006F3D 4D8910                  	mov qword [r8], r10
 10603 00006F40 4983E808                	sub r8, 8
 10604 00006F44 4983E908                	sub r9, 8
 10605 00006F48 48FFC9                  	dec rcx
 10606 00006F4B EBE7                    	jmp .L_tc_recycle_frame_loop_004e
 10607                                  .L_tc_recycle_frame_done_004e:
 10608 00006F4D 498D6008                	lea rsp, [r8 + 8]
 10609 00006F51 5D                      	pop rbp ; restore the old rbp
 10610 00006F52 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10611                                  .L_if_end_0020:
 10612                                  .L_if_end_0021:
 10613                                  .L_if_end_0022:
 10614 00006F55 E911030000              	jmp .L_if_end_0027
 10615                                  .L_if_else_0027:
 10616                                  	; preparing a non-tail-call
 10617 00006F5A 488B4520                	mov rax, PARAM(0)	; param a
 10618 00006F5E 50                      	push rax
 10619 00006F5F 6A01                    	push 1	; arg count
 10620 00006F61 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10621 00006F69 803805                  	cmp byte [rax], T_undefined
 10622 00006F6C 0F8456050100            	je L_error_fvar_undefined
 10623 00006F72 803804                  	cmp byte [rax], T_closure
 10624 00006F75 0F85D1050100            	jne L_error_non_closure
 10625 00006F7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10626 00006F7E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10627 00006F81 483D[02000000]          	cmp rax, sob_boolean_false
 10628 00006F87 0F8484020000            	je .L_if_else_0026
 10629                                  	; preparing a non-tail-call
 10630 00006F8D 488B4528                	mov rax, PARAM(1)	; param b
 10631 00006F91 50                      	push rax
 10632 00006F92 6A01                    	push 1	; arg count
 10633 00006F94 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10634 00006F9C 803805                  	cmp byte [rax], T_undefined
 10635 00006F9F 0F8423050100            	je L_error_fvar_undefined
 10636 00006FA5 803804                  	cmp byte [rax], T_closure
 10637 00006FA8 0F859E050100            	jne L_error_non_closure
 10638 00006FAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10639 00006FB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10640 00006FB4 483D[02000000]          	cmp rax, sob_boolean_false
 10641 00006FBA 0F8493000000            	je .L_if_else_0025
 10642                                  	; preparing a tail-call
 10643                                  	; preparing a non-tail-call
 10644 00006FC0 488B4528                	mov rax, PARAM(1)	; param b
 10645 00006FC4 50                      	push rax
 10646 00006FC5 6A01                    	push 1	; arg count
 10647 00006FC7 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10648 00006FCF 803805                  	cmp byte [rax], T_undefined
 10649 00006FD2 0F84F0040100            	je L_error_fvar_undefined
 10650 00006FD8 803804                  	cmp byte [rax], T_closure
 10651 00006FDB 0F856B050100            	jne L_error_non_closure
 10652 00006FE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10653 00006FE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10654 00006FE7 50                      	push rax
 10655 00006FE8 488B4520                	mov rax, PARAM(0)	; param a
 10656 00006FEC 50                      	push rax
 10657 00006FED 6A02                    	push 2	; arg count
 10658 00006FEF 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10659 00006FF7 803805                  	cmp byte [rax], T_undefined
 10660 00006FFA 0F84C8040100            	je L_error_fvar_undefined
 10661 00007000 803804                  	cmp byte [rax], T_closure
 10662 00007003 0F8543050100            	jne L_error_non_closure
 10663 00007009 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10664 0000700C FF7508                  	push qword [rbp + 8 * 1]
 10665                                   ; old ret addr
 10666 0000700F FF7500                  	push qword [rbp]
 10667                                   ; restore the old rbp
 10668 00007012 BB02000000              	mov rbx, 2
 10669 00007017 4883C303                	add rbx, 3
 10670 0000701B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10671 0000701F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10672 00007024 4C8D4DF8                	lea r9, [rbp - 8]
 10673 00007028 B906000000              	mov rcx, 6
 10674                                  .L_tc_recycle_frame_loop_004f:
 10675 0000702D 4883F900                	cmp rcx, 0
 10676 00007031 7413                    	je .L_tc_recycle_frame_done_004f
 10677 00007033 4D8B11                  	mov r10, qword [r9]
 10678 00007036 4D8910                  	mov qword [r8], r10
 10679 00007039 4983E808                	sub r8, 8
 10680 0000703D 4983E908                	sub r9, 8
 10681 00007041 48FFC9                  	dec rcx
 10682 00007044 EBE7                    	jmp .L_tc_recycle_frame_loop_004f
 10683                                  .L_tc_recycle_frame_done_004f:
 10684 00007046 498D6008                	lea rsp, [r8 + 8]
 10685 0000704A 5D                      	pop rbp ; restore the old rbp
 10686 0000704B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10687 0000704E E9BC010000              	jmp .L_if_end_0025
 10688                                  .L_if_else_0025:
 10689                                  	; preparing a non-tail-call
 10690 00007053 488B4528                	mov rax, PARAM(1)	; param b
 10691 00007057 50                      	push rax
 10692 00007058 6A01                    	push 1	; arg count
 10693 0000705A 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10694 00007062 803805                  	cmp byte [rax], T_undefined
 10695 00007065 0F845D040100            	je L_error_fvar_undefined
 10696 0000706B 803804                  	cmp byte [rax], T_closure
 10697 0000706E 0F85D8040100            	jne L_error_non_closure
 10698 00007074 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10699 00007077 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10700 0000707A 483D[02000000]          	cmp rax, sob_boolean_false
 10701 00007080 0F8493000000            	je .L_if_else_0024
 10702                                  	; preparing a tail-call
 10703                                  	; preparing a non-tail-call
 10704 00007086 488B4528                	mov rax, PARAM(1)	; param b
 10705 0000708A 50                      	push rax
 10706 0000708B 6A01                    	push 1	; arg count
 10707 0000708D 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10708 00007095 803805                  	cmp byte [rax], T_undefined
 10709 00007098 0F842A040100            	je L_error_fvar_undefined
 10710 0000709E 803804                  	cmp byte [rax], T_closure
 10711 000070A1 0F85A5040100            	jne L_error_non_closure
 10712 000070A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10713 000070AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10714 000070AD 50                      	push rax
 10715 000070AE 488B4520                	mov rax, PARAM(0)	; param a
 10716 000070B2 50                      	push rax
 10717 000070B3 6A02                    	push 2	; arg count
 10718 000070B5 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10719 000070BD 803805                  	cmp byte [rax], T_undefined
 10720 000070C0 0F8402040100            	je L_error_fvar_undefined
 10721 000070C6 803804                  	cmp byte [rax], T_closure
 10722 000070C9 0F857D040100            	jne L_error_non_closure
 10723 000070CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10724 000070D2 FF7508                  	push qword [rbp + 8 * 1]
 10725                                   ; old ret addr
 10726 000070D5 FF7500                  	push qword [rbp]
 10727                                   ; restore the old rbp
 10728 000070D8 BB02000000              	mov rbx, 2
 10729 000070DD 4883C303                	add rbx, 3
 10730 000070E1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10731 000070E5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10732 000070EA 4C8D4DF8                	lea r9, [rbp - 8]
 10733 000070EE B906000000              	mov rcx, 6
 10734                                  .L_tc_recycle_frame_loop_0050:
 10735 000070F3 4883F900                	cmp rcx, 0
 10736 000070F7 7413                    	je .L_tc_recycle_frame_done_0050
 10737 000070F9 4D8B11                  	mov r10, qword [r9]
 10738 000070FC 4D8910                  	mov qword [r8], r10
 10739 000070FF 4983E808                	sub r8, 8
 10740 00007103 4983E908                	sub r9, 8
 10741 00007107 48FFC9                  	dec rcx
 10742 0000710A EBE7                    	jmp .L_tc_recycle_frame_loop_0050
 10743                                  .L_tc_recycle_frame_done_0050:
 10744 0000710C 498D6008                	lea rsp, [r8 + 8]
 10745 00007110 5D                      	pop rbp ; restore the old rbp
 10746 00007111 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10747 00007114 E9F6000000              	jmp .L_if_end_0024
 10748                                  .L_if_else_0024:
 10749                                  	; preparing a non-tail-call
 10750 00007119 488B4528                	mov rax, PARAM(1)	; param b
 10751 0000711D 50                      	push rax
 10752 0000711E 6A01                    	push 1	; arg count
 10753 00007120 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10754 00007128 803805                  	cmp byte [rax], T_undefined
 10755 0000712B 0F8497030100            	je L_error_fvar_undefined
 10756 00007131 803804                  	cmp byte [rax], T_closure
 10757 00007134 0F8512040100            	jne L_error_non_closure
 10758 0000713A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10759 0000713D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10760 00007140 483D[02000000]          	cmp rax, sob_boolean_false
 10761 00007146 746D                    	je .L_if_else_0023
 10762                                  	; preparing a tail-call
 10763 00007148 488B4528                	mov rax, PARAM(1)	; param b
 10764 0000714C 50                      	push rax
 10765 0000714D 488B4520                	mov rax, PARAM(0)	; param a
 10766 00007151 50                      	push rax
 10767 00007152 6A02                    	push 2	; arg count
 10768 00007154 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10769 0000715C 803805                  	cmp byte [rax], T_undefined
 10770 0000715F 0F8463030100            	je L_error_fvar_undefined
 10771 00007165 803804                  	cmp byte [rax], T_closure
 10772 00007168 0F85DE030100            	jne L_error_non_closure
 10773 0000716E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10774 00007171 FF7508                  	push qword [rbp + 8 * 1]
 10775                                   ; old ret addr
 10776 00007174 FF7500                  	push qword [rbp]
 10777                                   ; restore the old rbp
 10778 00007177 BB02000000              	mov rbx, 2
 10779 0000717C 4883C303                	add rbx, 3
 10780 00007180 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10781 00007184 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10782 00007189 4C8D4DF8                	lea r9, [rbp - 8]
 10783 0000718D B906000000              	mov rcx, 6
 10784                                  .L_tc_recycle_frame_loop_0051:
 10785 00007192 4883F900                	cmp rcx, 0
 10786 00007196 7413                    	je .L_tc_recycle_frame_done_0051
 10787 00007198 4D8B11                  	mov r10, qword [r9]
 10788 0000719B 4D8910                  	mov qword [r8], r10
 10789 0000719E 4983E808                	sub r8, 8
 10790 000071A2 4983E908                	sub r9, 8
 10791 000071A6 48FFC9                  	dec rcx
 10792 000071A9 EBE7                    	jmp .L_tc_recycle_frame_loop_0051
 10793                                  .L_tc_recycle_frame_done_0051:
 10794 000071AB 498D6008                	lea rsp, [r8 + 8]
 10795 000071AF 5D                      	pop rbp ; restore the old rbp
 10796 000071B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10797 000071B3 EB5A                    	jmp .L_if_end_0023
 10798                                  .L_if_else_0023:
 10799                                  	; preparing a tail-call
 10800 000071B5 6A00                    	push 0	; arg count
 10801 000071B7 488B4510                	mov rax, ENV
 10802 000071BB 488B00                  	mov rax, qword [rax + 8 * 0]
 10803 000071BE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10804 000071C1 803804                  	cmp byte [rax], T_closure
 10805 000071C4 0F8582030100            	jne L_error_non_closure
 10806 000071CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10807 000071CD FF7508                  	push qword [rbp + 8 * 1]
 10808                                   ; old ret addr
 10809 000071D0 FF7500                  	push qword [rbp]
 10810                                   ; restore the old rbp
 10811 000071D3 BB00000000              	mov rbx, 0
 10812 000071D8 4883C303                	add rbx, 3
 10813 000071DC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10814 000071E0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10815 000071E5 4C8D4DF8                	lea r9, [rbp - 8]
 10816 000071E9 B904000000              	mov rcx, 4
 10817                                  .L_tc_recycle_frame_loop_0052:
 10818 000071EE 4883F900                	cmp rcx, 0
 10819 000071F2 7413                    	je .L_tc_recycle_frame_done_0052
 10820 000071F4 4D8B11                  	mov r10, qword [r9]
 10821 000071F7 4D8910                  	mov qword [r8], r10
 10822 000071FA 4983E808                	sub r8, 8
 10823 000071FE 4983E908                	sub r9, 8
 10824 00007202 48FFC9                  	dec rcx
 10825 00007205 EBE7                    	jmp .L_tc_recycle_frame_loop_0052
 10826                                  .L_tc_recycle_frame_done_0052:
 10827 00007207 498D6008                	lea rsp, [r8 + 8]
 10828 0000720B 5D                      	pop rbp ; restore the old rbp
 10829 0000720C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10830                                  .L_if_end_0023:
 10831                                  .L_if_end_0024:
 10832                                  .L_if_end_0025:
 10833 0000720F EB5A                    	jmp .L_if_end_0026
 10834                                  .L_if_else_0026:
 10835                                  	; preparing a tail-call
 10836 00007211 6A00                    	push 0	; arg count
 10837 00007213 488B4510                	mov rax, ENV
 10838 00007217 488B00                  	mov rax, qword [rax + 8 * 0]
 10839 0000721A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10840 0000721D 803804                  	cmp byte [rax], T_closure
 10841 00007220 0F8526030100            	jne L_error_non_closure
 10842 00007226 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10843 00007229 FF7508                  	push qword [rbp + 8 * 1]
 10844                                   ; old ret addr
 10845 0000722C FF7500                  	push qword [rbp]
 10846                                   ; restore the old rbp
 10847 0000722F BB00000000              	mov rbx, 0
 10848 00007234 4883C303                	add rbx, 3
 10849 00007238 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10850 0000723C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10851 00007241 4C8D4DF8                	lea r9, [rbp - 8]
 10852 00007245 B904000000              	mov rcx, 4
 10853                                  .L_tc_recycle_frame_loop_0053:
 10854 0000724A 4883F900                	cmp rcx, 0
 10855 0000724E 7413                    	je .L_tc_recycle_frame_done_0053
 10856 00007250 4D8B11                  	mov r10, qword [r9]
 10857 00007253 4D8910                  	mov qword [r8], r10
 10858 00007256 4983E808                	sub r8, 8
 10859 0000725A 4983E908                	sub r9, 8
 10860 0000725E 48FFC9                  	dec rcx
 10861 00007261 EBE7                    	jmp .L_tc_recycle_frame_loop_0053
 10862                                  .L_tc_recycle_frame_done_0053:
 10863 00007263 498D6008                	lea rsp, [r8 + 8]
 10864 00007267 5D                      	pop rbp ; restore the old rbp
 10865 00007268 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10866                                  .L_if_end_0026:
 10867                                  .L_if_end_0027:
 10868                                  .L_if_end_0028:
 10869 0000726B C9                      	leave
 10870 0000726C C22000                  	ret AND_KILL_FRAME(2)
 10871                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10872 0000726F 50                      	push rax
 10873 00007270 6A01                    	push 1	; arg count
 10874 00007272 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10875 00007277 E879030100              	call malloc
 10876 0000727C 50                      	push rax
 10877 0000727D BF08000000              	mov rdi, 8 * 1	; new rib
 10878 00007282 E86E030100              	call malloc
 10879 00007287 50                      	push rax
 10880 00007288 BF10000000              	mov rdi, 8 * 2	; extended env
 10881 0000728D E863030100              	call malloc
 10882 00007292 488B7D10                	mov rdi, ENV
 10883 00007296 BE00000000              	mov rsi, 0
 10884 0000729B BA01000000              	mov rdx, 1
 10885                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10886 000072A0 4883FE01                	cmp rsi, 1
 10887 000072A4 7410                    	je .L_lambda_simple_env_end_003b
 10888 000072A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10889 000072AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10890 000072AE 48FFC6                  	inc rsi
 10891 000072B1 48FFC2                  	inc rdx
 10892 000072B4 EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10893                                  .L_lambda_simple_env_end_003b:
 10894 000072B6 5B                      	pop rbx
 10895 000072B7 BE00000000              	mov rsi, 0
 10896                                  .L_lambda_simple_params_loop_003b:	; copy params
 10897 000072BC 4883FE01                	cmp rsi, 1
 10898 000072C0 740E                    	je .L_lambda_simple_params_end_003b
 10899 000072C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10900 000072C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10901 000072CB 48FFC6                  	inc rsi
 10902 000072CE EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10903                                  .L_lambda_simple_params_end_003b:
 10904 000072D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10905 000072D3 4889C3                  	mov rbx, rax
 10906 000072D6 58                      	pop rax
 10907 000072D7 C60004                  	mov byte [rax], T_closure
 10908 000072DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10909 000072DE 48C74009[EB720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10910 000072E6 E9B9030000              	jmp .L_lambda_simple_end_003b
 10911                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10912 000072EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10913 000072F1 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10914 000072F3 FF742410                	push qword [rsp + 8 * 2]
 10915 000072F7 6A01                    	push 1
 10916 000072F9 E9B0020100              	jmp L_error_incorrect_arity_simple
 10917                                  .L_lambda_simple_arity_check_ok_003b:
 10918 000072FE C8000000                	enter 0, 0
 10919 00007302 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10920 00007307 E8E9020100              	call malloc
 10921 0000730C 50                      	push rax
 10922 0000730D BF08000000              	mov rdi, 8 * 1	; new rib
 10923 00007312 E8DE020100              	call malloc
 10924 00007317 50                      	push rax
 10925 00007318 BF18000000              	mov rdi, 8 * 3	; extended env
 10926 0000731D E8D3020100              	call malloc
 10927 00007322 488B7D10                	mov rdi, ENV
 10928 00007326 4831F6                  	 xor rsi, rsi
 10929 00007329 4831D2                  	 xor rdx, rdx
 10930 0000732C 48FFC2                  	inc rdx
 10931                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 10932 0000732F 4883FE02                	cmp rsi, 2
 10933 00007333 7410                    	je .L_lambda_opt_env_end_000b
 10934 00007335 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10935 00007339 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10936 0000733D 48FFC6                  	inc rsi
 10937 00007340 48FFC2                  	inc rdx
 10938 00007343 EBEA                    	jmp .L_lambda_opt_env_loop_000b
 10939                                  .L_lambda_opt_env_end_000b:
 10940 00007345 5B                      	pop rbx
 10941 00007346 4831F6                  	xor rsi, rsi
 10942                                  .L_lambda_opt_params_loop_000b:	; copy params
 10943 00007349 4883FE01                	cmp rsi, 1
 10944 0000734D 740E                    	je .L_lambda_opt_params_end_000b
 10945 0000734F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10946 00007354 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10947 00007358 48FFC6                  	inc rsi
 10948 0000735B EBEC                    	jmp .L_lambda_opt_params_loop_000b
 10949                                  .L_lambda_opt_params_end_000b:
 10950 0000735D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10951 00007360 4889C3                  	mov rbx, rax
 10952 00007363 58                      	pop rax
 10953 00007364 C60004                  	mov byte [rax], T_closure
 10954 00007367 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10955 0000736B 48C74009[78730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 10956 00007373 E928030000              	jmp .L_lambda_opt_end_000b
 10957                                  .L_lambda_opt_code_000b:; lambda opt body
 10958 00007378 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10959 0000737E 7409                    	je .L_lambda_opt_arity_check_exact_000b
 10960 00007380 7F57                    	jg .L_lambda_opt_arity_check_more_000b
 10961 00007382 6A01                    	push 1
 10962 00007384 E939020100              	jmp L_error_incorrect_arity_opt
 10963                                  .L_lambda_opt_arity_check_exact_000b:
 10964 00007389 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 10965 0000738D 4C894C24F8              	mov qword [rsp -8], r9
 10966 00007392 4C8B4C2408              	mov r9, qword [rsp +8]
 10967 00007397 4C890C24                	mov qword [rsp +8 * 0], r9
 10968 0000739B 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 10969 000073A0 4C89C9                  	mov rcx, r9
 10970 000073A3 49FFC1                  	inc r9
 10971 000073A6 4C894C2408              	mov qword [rsp +8], r9
 10972 000073AB 4889E2                  	mov rdx, rsp
 10973 000073AE 4883C218                	add rdx, 24
 10974                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000b:
 10975 000073B2 4883F900                	cmp rcx, 0
 10976 000073B6 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000b
 10977 000073B8 4C8B02                  	mov r8, qword [rdx]
 10978 000073BB 4C8942F8                	mov qword [rdx - 8], r8
 10979 000073BF 4883C208                	add rdx, 8
 10980 000073C3 48FFC9                  	dec rcx
 10981 000073C6 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000b
 10982                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000b:
 10983 000073C8 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 10984 000073D0 4883EC08                	sub rsp, 8
 10985 000073D4 E984000000              	jmp .L_lambda_opt_stack_adjusted_000b
 10986                                  .L_lambda_opt_arity_check_more_000b:
 10987 000073D9 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 10988 000073DE 4D89C4                  	mov r12, r8
 10989 000073E1 4C89C1                  	mov rcx, r8
 10990 000073E4 4D8D5002                	lea r10, [r8 + 2] 
 10991 000073E8 4883E901                	sub rcx, 1
 10992 000073EC 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 10993 000073F1 49B9-                   	mov r9, sob_nil
 10993 000073F3 [0100000000000000] 
 10994                                  .L_lambda_opt_create_list_of_opt_params_000b:
 10995 000073FB 4883F900                	cmp rcx, 0
 10996 000073FF 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000b
 10997 00007401 BF11000000              	mov rdi, 17
 10998 00007406 E8EA010100              	call malloc
 10999 0000740B C60021                  	mov byte [rax], T_pair
 11000 0000740E 498B1B                  	mov rbx, qword [r11]
 11001 00007411 48895801                	mov qword [rax +1], rbx
 11002 00007415 4C894809                	mov qword [rax + 1 + 8], r9
 11003 00007419 4989C1                  	mov r9, rax
 11004 0000741C 48FFC9                  	dec rcx
 11005 0000741F 4983EB08                	sub r11, 8
 11006 00007423 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000b
 11007                                  .L_lambda_opt_create_list_of_opt_params_end_000b:
 11008 00007425 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 11009 0000742A 4D8908                  	mov qword [r8], r9
 11010 0000742D 4E8D14D500000000        	lea r10, [8 * r10]
 11011 00007435 4901E2                  	add r10, rsp
 11012 00007438 B905000000              	mov rcx, 4 + 1
 11013                                  .L_lambda_opt_stack_shrink_loop_000b:
 11014 0000743D 4883F900                	cmp rcx, 0
 11015 00007441 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000b
 11016 00007443 4D8B18                  	mov r11, qword [r8]
 11017 00007446 4D891A                  	mov qword [r10], r11
 11018 00007449 4983E808                	sub r8, 8
 11019 0000744D 4983EA08                	sub r10, 8
 11020 00007451 48FFC9                  	dec rcx
 11021 00007454 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 11022                                  .L_lambda_opt_stack_shrink_loop_exit_000b:
 11023 00007456 4983C208                	add r10, 8
 11024 0000745A 4C89D4                  	mov rsp, r10
 11025                                  .L_lambda_opt_stack_adjusted_000b:;continue with the code, the stack is ok
 11026 0000745D 48C744241002000000      	mov qword [rsp + 8*2], 2
 11027 00007466 C8000000                	enter 0, 0
 11028                                  	; preparing a non-tail-call
 11029 0000746A 488B4528                	mov rax, PARAM(1)	; param s
 11030 0000746E 50                      	push rax
 11031 0000746F 6A01                    	push 1	; arg count
 11032 00007471 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 11033 00007479 803805                  	cmp byte [rax], T_undefined
 11034 0000747C 0F8446000100            	je L_error_fvar_undefined
 11035 00007482 803804                  	cmp byte [rax], T_closure
 11036 00007485 0F85C1000100            	jne L_error_non_closure
 11037 0000748B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11038 0000748E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11039 00007491 483D[02000000]          	cmp rax, sob_boolean_false
 11040 00007497 746F                    	je .L_if_else_0029
 11041                                  	; preparing a tail-call
 11042 00007499 488B4520                	mov rax, PARAM(0)	; param a
 11043 0000749D 50                      	push rax
 11044 0000749E 48B8-                   	mov rax, L_constants + 2135
 11044 000074A0 [5708000000000000] 
 11045 000074A8 50                      	push rax
 11046 000074A9 6A02                    	push 2	; arg count
 11047 000074AB 488B4510                	mov rax, ENV
 11048 000074AF 488B00                  	mov rax, qword [rax + 8 * 0]
 11049 000074B2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11050 000074B5 803804                  	cmp byte [rax], T_closure
 11051 000074B8 0F858E000100            	jne L_error_non_closure
 11052 000074BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11053 000074C1 FF7508                  	push qword [rbp + 8 * 1]
 11054                                   ; old ret addr
 11055 000074C4 FF7500                  	push qword [rbp]
 11056                                   ; restore the old rbp
 11057 000074C7 BB02000000              	mov rbx, 2
 11058 000074CC 4883C303                	add rbx, 3
 11059 000074D0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11060 000074D4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11061 000074D9 4C8D4DF8                	lea r9, [rbp - 8]
 11062 000074DD B906000000              	mov rcx, 6
 11063                                  .L_tc_recycle_frame_loop_0054:
 11064 000074E2 4883F900                	cmp rcx, 0
 11065 000074E6 7413                    	je .L_tc_recycle_frame_done_0054
 11066 000074E8 4D8B11                  	mov r10, qword [r9]
 11067 000074EB 4D8910                  	mov qword [r8], r10
 11068 000074EE 4983E808                	sub r8, 8
 11069 000074F2 4983E908                	sub r9, 8
 11070 000074F6 48FFC9                  	dec rcx
 11071 000074F9 EBE7                    	jmp .L_tc_recycle_frame_loop_0054
 11072                                  .L_tc_recycle_frame_done_0054:
 11073 000074FB 498D6008                	lea rsp, [r8 + 8]
 11074 000074FF 5D                      	pop rbp ; restore the old rbp
 11075 00007500 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11076 00007503 E994010000              	jmp .L_if_end_0029
 11077                                  .L_if_else_0029:
 11078                                  	; preparing a tail-call
 11079                                  	; preparing a non-tail-call
 11080 00007508 488B4528                	mov rax, PARAM(1)	; param s
 11081 0000750C 50                      	push rax
 11082 0000750D 48B8-                   	mov rax, L_constants + 2135
 11082 0000750F [5708000000000000] 
 11083 00007517 50                      	push rax
 11084 00007518 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 11085 00007520 803805                  	cmp byte [rax], T_undefined
 11086 00007523 0F849FFF0000            	je L_error_fvar_undefined
 11087 00007529 50                      	push rax
 11088 0000752A 6A03                    	push 3	; arg count
 11089 0000752C 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11090 00007534 803805                  	cmp byte [rax], T_undefined
 11091 00007537 0F848BFF0000            	je L_error_fvar_undefined
 11092 0000753D 803804                  	cmp byte [rax], T_closure
 11093 00007540 0F8506000100            	jne L_error_non_closure
 11094 00007546 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11095 00007549 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11096 0000754C 50                      	push rax
 11097 0000754D 6A01                    	push 1	; arg count
 11098 0000754F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11099 00007554 E89C000100              	call malloc
 11100 00007559 50                      	push rax
 11101 0000755A BF10000000              	mov rdi, 8 * 2	; new rib
 11102 0000755F E891000100              	call malloc
 11103 00007564 50                      	push rax
 11104 00007565 BF20000000              	mov rdi, 8 * 4	; extended env
 11105 0000756A E886000100              	call malloc
 11106 0000756F 488B7D10                	mov rdi, ENV
 11107 00007573 BE00000000              	mov rsi, 0
 11108 00007578 BA01000000              	mov rdx, 1
 11109                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 11110 0000757D 4883FE03                	cmp rsi, 3
 11111 00007581 7410                    	je .L_lambda_simple_env_end_003c
 11112 00007583 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11113 00007587 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11114 0000758B 48FFC6                  	inc rsi
 11115 0000758E 48FFC2                  	inc rdx
 11116 00007591 EBEA                    	jmp .L_lambda_simple_env_loop_003c
 11117                                  .L_lambda_simple_env_end_003c:
 11118 00007593 5B                      	pop rbx
 11119 00007594 BE00000000              	mov rsi, 0
 11120                                  .L_lambda_simple_params_loop_003c:	; copy params
 11121 00007599 4883FE02                	cmp rsi, 2
 11122 0000759D 740E                    	je .L_lambda_simple_params_end_003c
 11123 0000759F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11124 000075A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11125 000075A8 48FFC6                  	inc rsi
 11126 000075AB EBEC                    	jmp .L_lambda_simple_params_loop_003c
 11127                                  .L_lambda_simple_params_end_003c:
 11128 000075AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11129 000075B0 4889C3                  	mov rbx, rax
 11130 000075B3 58                      	pop rax
 11131 000075B4 C60004                  	mov byte [rax], T_closure
 11132 000075B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11133 000075BB 48C74009[C8750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 11134 000075C3 E986000000              	jmp .L_lambda_simple_end_003c
 11135                                  .L_lambda_simple_code_003c:	; lambda-simple body
 11136 000075C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11137 000075CE 740B                    	je .L_lambda_simple_arity_check_ok_003c
 11138 000075D0 FF742410                	push qword [rsp + 8 * 2]
 11139 000075D4 6A01                    	push 1
 11140 000075D6 E9D3FF0000              	jmp L_error_incorrect_arity_simple
 11141                                  .L_lambda_simple_arity_check_ok_003c:
 11142 000075DB C8000000                	enter 0, 0
 11143                                  	; preparing a tail-call
 11144 000075DF 488B4520                	mov rax, PARAM(0)	; param b
 11145 000075E3 50                      	push rax
 11146 000075E4 488B4510                	mov rax, ENV
 11147 000075E8 488B00                  	mov rax, qword [rax + 8 * 0]
 11148 000075EB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11149 000075EE 50                      	push rax
 11150 000075EF 6A02                    	push 2	; arg count
 11151 000075F1 488B4510                	mov rax, ENV
 11152 000075F5 488B4008                	mov rax, qword [rax + 8 * 1]
 11153 000075F9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11154 000075FC 803804                  	cmp byte [rax], T_closure
 11155 000075FF 0F8547FF0000            	jne L_error_non_closure
 11156 00007605 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11157 00007608 FF7508                  	push qword [rbp + 8 * 1]
 11158                                   ; old ret addr
 11159 0000760B FF7500                  	push qword [rbp]
 11160                                   ; restore the old rbp
 11161 0000760E BB02000000              	mov rbx, 2
 11162 00007613 4883C303                	add rbx, 3
 11163 00007617 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11164 0000761B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11165 00007620 4C8D4DF8                	lea r9, [rbp - 8]
 11166 00007624 B906000000              	mov rcx, 6
 11167                                  .L_tc_recycle_frame_loop_0056:
 11168 00007629 4883F900                	cmp rcx, 0
 11169 0000762D 7413                    	je .L_tc_recycle_frame_done_0056
 11170 0000762F 4D8B11                  	mov r10, qword [r9]
 11171 00007632 4D8910                  	mov qword [r8], r10
 11172 00007635 4983E808                	sub r8, 8
 11173 00007639 4983E908                	sub r9, 8
 11174 0000763D 48FFC9                  	dec rcx
 11175 00007640 EBE7                    	jmp .L_tc_recycle_frame_loop_0056
 11176                                  .L_tc_recycle_frame_done_0056:
 11177 00007642 498D6008                	lea rsp, [r8 + 8]
 11178 00007646 5D                      	pop rbp ; restore the old rbp
 11179 00007647 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11180 0000764A C9                      	leave
 11181 0000764B C21800                  	ret AND_KILL_FRAME(1)
 11182                                  .L_lambda_simple_end_003c:	; new closure is in rax
 11183 0000764E 803804                  	cmp byte [rax], T_closure
 11184 00007651 0F85F5FE0000            	jne L_error_non_closure
 11185 00007657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11186 0000765A FF7508                  	push qword [rbp + 8 * 1]
 11187                                   ; old ret addr
 11188 0000765D FF7500                  	push qword [rbp]
 11189                                   ; restore the old rbp
 11190 00007660 BB01000000              	mov rbx, 1
 11191 00007665 4883C303                	add rbx, 3
 11192 00007669 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11193 0000766D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11194 00007672 4C8D4DF8                	lea r9, [rbp - 8]
 11195 00007676 B905000000              	mov rcx, 5
 11196                                  .L_tc_recycle_frame_loop_0055:
 11197 0000767B 4883F900                	cmp rcx, 0
 11198 0000767F 7413                    	je .L_tc_recycle_frame_done_0055
 11199 00007681 4D8B11                  	mov r10, qword [r9]
 11200 00007684 4D8910                  	mov qword [r8], r10
 11201 00007687 4983E808                	sub r8, 8
 11202 0000768B 4983E908                	sub r9, 8
 11203 0000768F 48FFC9                  	dec rcx
 11204 00007692 EBE7                    	jmp .L_tc_recycle_frame_loop_0055
 11205                                  .L_tc_recycle_frame_done_0055:
 11206 00007694 498D6008                	lea rsp, [r8 + 8]
 11207 00007698 5D                      	pop rbp ; restore the old rbp
 11208 00007699 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11209                                  .L_if_end_0029:
 11210 0000769C C9                      	leave
 11211 0000769D C22000                  	ret 8 * (2 + 2)
 11212                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11213 000076A0 C9                      	leave
 11214 000076A1 C21800                  	ret AND_KILL_FRAME(1)
 11215                                  .L_lambda_simple_end_003b:	; new closure is in rax
 11216 000076A4 803804                  	cmp byte [rax], T_closure
 11217 000076A7 0F859FFE0000            	jne L_error_non_closure
 11218 000076AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11219 000076B0 FF7508                  	push qword [rbp + 8 * 1]
 11220                                   ; old ret addr
 11221 000076B3 FF7500                  	push qword [rbp]
 11222                                   ; restore the old rbp
 11223 000076B6 BB01000000              	mov rbx, 1
 11224 000076BB 4883C303                	add rbx, 3
 11225 000076BF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11226 000076C3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11227 000076C8 4C8D4DF8                	lea r9, [rbp - 8]
 11228 000076CC B905000000              	mov rcx, 5
 11229                                  .L_tc_recycle_frame_loop_0046:
 11230 000076D1 4883F900                	cmp rcx, 0
 11231 000076D5 7413                    	je .L_tc_recycle_frame_done_0046
 11232 000076D7 4D8B11                  	mov r10, qword [r9]
 11233 000076DA 4D8910                  	mov qword [r8], r10
 11234 000076DD 4983E808                	sub r8, 8
 11235 000076E1 4983E908                	sub r9, 8
 11236 000076E5 48FFC9                  	dec rcx
 11237 000076E8 EBE7                    	jmp .L_tc_recycle_frame_loop_0046
 11238                                  .L_tc_recycle_frame_done_0046:
 11239 000076EA 498D6008                	lea rsp, [r8 + 8]
 11240 000076EE 5D                      	pop rbp ; restore the old rbp
 11241 000076EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11242 000076F2 C9                      	leave
 11243 000076F3 C21800                  	ret AND_KILL_FRAME(1)
 11244                                  .L_lambda_simple_end_0039:	; new closure is in rax
 11245 000076F6 803804                  	cmp byte [rax], T_closure
 11246 000076F9 0F854DFE0000            	jne L_error_non_closure
 11247 000076FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11248 00007702 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11249 00007705 48890425[E70D0000]      	mov qword [free_var_2], rax
 11250 0000770D 48B8-                   	mov rax, sob_void
 11250 0000770F [0000000000000000] 
 11251                                  
 11252 00007717 4889C7                  	mov rdi, rax
 11253 0000771A E82B010100              	call print_sexpr_if_not_void
 11254                                  	; preparing a non-tail-call
 11255 0000771F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11256 00007724 E8CCFE0000              	call malloc
 11257 00007729 50                      	push rax
 11258 0000772A BF00000000              	mov rdi, 8 * 0	; new rib
 11259 0000772F E8C1FE0000              	call malloc
 11260 00007734 50                      	push rax
 11261 00007735 BF08000000              	mov rdi, 8 * 1	; extended env
 11262 0000773A E8B6FE0000              	call malloc
 11263 0000773F 488B7D10                	mov rdi, ENV
 11264 00007743 BE00000000              	mov rsi, 0
 11265 00007748 BA01000000              	mov rdx, 1
 11266                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 11267 0000774D 4883FE00                	cmp rsi, 0
 11268 00007751 7410                    	je .L_lambda_simple_env_end_003d
 11269 00007753 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11270 00007757 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11271 0000775B 48FFC6                  	inc rsi
 11272 0000775E 48FFC2                  	inc rdx
 11273 00007761 EBEA                    	jmp .L_lambda_simple_env_loop_003d
 11274                                  .L_lambda_simple_env_end_003d:
 11275 00007763 5B                      	pop rbx
 11276 00007764 BE00000000              	mov rsi, 0
 11277                                  .L_lambda_simple_params_loop_003d:	; copy params
 11278 00007769 4883FE00                	cmp rsi, 0
 11279 0000776D 740E                    	je .L_lambda_simple_params_end_003d
 11280 0000776F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11281 00007774 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11282 00007778 48FFC6                  	inc rsi
 11283 0000777B EBEC                    	jmp .L_lambda_simple_params_loop_003d
 11284                                  .L_lambda_simple_params_end_003d:
 11285 0000777D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11286 00007780 4889C3                  	mov rbx, rax
 11287 00007783 58                      	pop rax
 11288 00007784 C60004                  	mov byte [rax], T_closure
 11289 00007787 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11290 0000778B 48C74009[98770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 11291 00007793 E992000000              	jmp .L_lambda_simple_end_003d
 11292                                  .L_lambda_simple_code_003d:	; lambda-simple body
 11293 00007798 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11294 0000779E 740B                    	je .L_lambda_simple_arity_check_ok_003d
 11295 000077A0 FF742410                	push qword [rsp + 8 * 2]
 11296 000077A4 6A00                    	push 0
 11297 000077A6 E903FE0000              	jmp L_error_incorrect_arity_simple
 11298                                  .L_lambda_simple_arity_check_ok_003d:
 11299 000077AB C8000000                	enter 0, 0
 11300                                  	; preparing a tail-call
 11301 000077AF 48B8-                   	mov rax, L_constants + 2187
 11301 000077B1 [8B08000000000000] 
 11302 000077B9 50                      	push rax
 11303 000077BA 48B8-                   	mov rax, L_constants + 2279
 11303 000077BC [E708000000000000] 
 11304 000077C4 50                      	push rax
 11305 000077C5 6A02                    	push 2	; arg count
 11306 000077C7 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 11307 000077CF 803805                  	cmp byte [rax], T_undefined
 11308 000077D2 0F84F0FC0000            	je L_error_fvar_undefined
 11309 000077D8 803804                  	cmp byte [rax], T_closure
 11310 000077DB 0F856BFD0000            	jne L_error_non_closure
 11311 000077E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11312 000077E4 FF7508                  	push qword [rbp + 8 * 1]
 11313                                   ; old ret addr
 11314 000077E7 FF7500                  	push qword [rbp]
 11315                                   ; restore the old rbp
 11316 000077EA BB02000000              	mov rbx, 2
 11317 000077EF 4883C303                	add rbx, 3
 11318 000077F3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11319 000077F7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11320 000077FC 4C8D4DF8                	lea r9, [rbp - 8]
 11321 00007800 B906000000              	mov rcx, 6
 11322                                  .L_tc_recycle_frame_loop_0057:
 11323 00007805 4883F900                	cmp rcx, 0
 11324 00007809 7413                    	je .L_tc_recycle_frame_done_0057
 11325 0000780B 4D8B11                  	mov r10, qword [r9]
 11326 0000780E 4D8910                  	mov qword [r8], r10
 11327 00007811 4983E808                	sub r8, 8
 11328 00007815 4983E908                	sub r9, 8
 11329 00007819 48FFC9                  	dec rcx
 11330 0000781C EBE7                    	jmp .L_tc_recycle_frame_loop_0057
 11331                                  .L_tc_recycle_frame_done_0057:
 11332 0000781E 498D6008                	lea rsp, [r8 + 8]
 11333 00007822 5D                      	pop rbp ; restore the old rbp
 11334 00007823 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11335 00007826 C9                      	leave
 11336 00007827 C21000                  	ret AND_KILL_FRAME(0)
 11337                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11338 0000782A 50                      	push rax
 11339 0000782B 6A01                    	push 1	; arg count
 11340 0000782D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11341 00007832 E8BEFD0000              	call malloc
 11342 00007837 50                      	push rax
 11343 00007838 BF00000000              	mov rdi, 8 * 0	; new rib
 11344 0000783D E8B3FD0000              	call malloc
 11345 00007842 50                      	push rax
 11346 00007843 BF08000000              	mov rdi, 8 * 1	; extended env
 11347 00007848 E8A8FD0000              	call malloc
 11348 0000784D 488B7D10                	mov rdi, ENV
 11349 00007851 BE00000000              	mov rsi, 0
 11350 00007856 BA01000000              	mov rdx, 1
 11351                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11352 0000785B 4883FE00                	cmp rsi, 0
 11353 0000785F 7410                    	je .L_lambda_simple_env_end_003e
 11354 00007861 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11355 00007865 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11356 00007869 48FFC6                  	inc rsi
 11357 0000786C 48FFC2                  	inc rdx
 11358 0000786F EBEA                    	jmp .L_lambda_simple_env_loop_003e
 11359                                  .L_lambda_simple_env_end_003e:
 11360 00007871 5B                      	pop rbx
 11361 00007872 BE00000000              	mov rsi, 0
 11362                                  .L_lambda_simple_params_loop_003e:	; copy params
 11363 00007877 4883FE00                	cmp rsi, 0
 11364 0000787B 740E                    	je .L_lambda_simple_params_end_003e
 11365 0000787D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11366 00007882 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11367 00007886 48FFC6                  	inc rsi
 11368 00007889 EBEC                    	jmp .L_lambda_simple_params_loop_003e
 11369                                  .L_lambda_simple_params_end_003e:
 11370 0000788B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11371 0000788E 4889C3                  	mov rbx, rax
 11372 00007891 58                      	pop rax
 11373 00007892 C60004                  	mov byte [rax], T_closure
 11374 00007895 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11375 00007899 48C74009[A6780000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 11376 000078A1 E9010C0000              	jmp .L_lambda_simple_end_003e
 11377                                  .L_lambda_simple_code_003e:	; lambda-simple body
 11378 000078A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11379 000078AC 740B                    	je .L_lambda_simple_arity_check_ok_003e
 11380 000078AE FF742410                	push qword [rsp + 8 * 2]
 11381 000078B2 6A01                    	push 1
 11382 000078B4 E9F5FC0000              	jmp L_error_incorrect_arity_simple
 11383                                  .L_lambda_simple_arity_check_ok_003e:
 11384 000078B9 C8000000                	enter 0, 0
 11385                                  	; preparing a tail-call
 11386 000078BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11387 000078C2 E82EFD0000              	call malloc
 11388 000078C7 50                      	push rax
 11389 000078C8 BF08000000              	mov rdi, 8 * 1	; new rib
 11390 000078CD E823FD0000              	call malloc
 11391 000078D2 50                      	push rax
 11392 000078D3 BF10000000              	mov rdi, 8 * 2	; extended env
 11393 000078D8 E818FD0000              	call malloc
 11394 000078DD 488B7D10                	mov rdi, ENV
 11395 000078E1 BE00000000              	mov rsi, 0
 11396 000078E6 BA01000000              	mov rdx, 1
 11397                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11398 000078EB 4883FE01                	cmp rsi, 1
 11399 000078EF 7410                    	je .L_lambda_simple_env_end_003f
 11400 000078F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11401 000078F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11402 000078F9 48FFC6                  	inc rsi
 11403 000078FC 48FFC2                  	inc rdx
 11404 000078FF EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11405                                  .L_lambda_simple_env_end_003f:
 11406 00007901 5B                      	pop rbx
 11407 00007902 BE00000000              	mov rsi, 0
 11408                                  .L_lambda_simple_params_loop_003f:	; copy params
 11409 00007907 4883FE01                	cmp rsi, 1
 11410 0000790B 740E                    	je .L_lambda_simple_params_end_003f
 11411 0000790D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11412 00007912 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11413 00007916 48FFC6                  	inc rsi
 11414 00007919 EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11415                                  .L_lambda_simple_params_end_003f:
 11416 0000791B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11417 0000791E 4889C3                  	mov rbx, rax
 11418 00007921 58                      	pop rax
 11419 00007922 C60004                  	mov byte [rax], T_closure
 11420 00007925 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11421 00007929 48C74009[36790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11422 00007931 E9A0080000              	jmp .L_lambda_simple_end_003f
 11423                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11424 00007936 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11425 0000793C 740B                    	je .L_lambda_simple_arity_check_ok_003f
 11426 0000793E FF742410                	push qword [rsp + 8 * 2]
 11427 00007942 6A02                    	push 2
 11428 00007944 E965FC0000              	jmp L_error_incorrect_arity_simple
 11429                                  .L_lambda_simple_arity_check_ok_003f:
 11430 00007949 C8000000                	enter 0, 0
 11431                                  	; preparing a non-tail-call
 11432 0000794D 488B4520                	mov rax, PARAM(0)	; param a
 11433 00007951 50                      	push rax
 11434 00007952 6A01                    	push 1	; arg count
 11435 00007954 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11436 0000795C 803805                  	cmp byte [rax], T_undefined
 11437 0000795F 0F8463FB0000            	je L_error_fvar_undefined
 11438 00007965 803804                  	cmp byte [rax], T_closure
 11439 00007968 0F85DEFB0000            	jne L_error_non_closure
 11440 0000796E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11441 00007971 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11442 00007974 483D[02000000]          	cmp rax, sob_boolean_false
 11443 0000797A 0F8487020000            	je .L_if_else_0035
 11444                                  	; preparing a non-tail-call
 11445 00007980 488B4528                	mov rax, PARAM(1)	; param b
 11446 00007984 50                      	push rax
 11447 00007985 6A01                    	push 1	; arg count
 11448 00007987 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11449 0000798F 803805                  	cmp byte [rax], T_undefined
 11450 00007992 0F8430FB0000            	je L_error_fvar_undefined
 11451 00007998 803804                  	cmp byte [rax], T_closure
 11452 0000799B 0F85ABFB0000            	jne L_error_non_closure
 11453 000079A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11454 000079A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11455 000079A7 483D[02000000]          	cmp rax, sob_boolean_false
 11456 000079AD 7470                    	je .L_if_else_002c
 11457                                  	; preparing a tail-call
 11458 000079AF 488B4528                	mov rax, PARAM(1)	; param b
 11459 000079B3 50                      	push rax
 11460 000079B4 488B4520                	mov rax, PARAM(0)	; param a
 11461 000079B8 50                      	push rax
 11462 000079B9 6A02                    	push 2	; arg count
 11463 000079BB 488B0425[5D0F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11464 000079C3 803805                  	cmp byte [rax], T_undefined
 11465 000079C6 0F84FCFA0000            	je L_error_fvar_undefined
 11466 000079CC 803804                  	cmp byte [rax], T_closure
 11467 000079CF 0F8577FB0000            	jne L_error_non_closure
 11468 000079D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11469 000079D8 FF7508                  	push qword [rbp + 8 * 1]
 11470                                   ; old ret addr
 11471 000079DB FF7500                  	push qword [rbp]
 11472                                   ; restore the old rbp
 11473 000079DE BB02000000              	mov rbx, 2
 11474 000079E3 4883C303                	add rbx, 3
 11475 000079E7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11476 000079EB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11477 000079F0 4C8D4DF8                	lea r9, [rbp - 8]
 11478 000079F4 B906000000              	mov rcx, 6
 11479                                  .L_tc_recycle_frame_loop_0059:
 11480 000079F9 4883F900                	cmp rcx, 0
 11481 000079FD 7413                    	je .L_tc_recycle_frame_done_0059
 11482 000079FF 4D8B11                  	mov r10, qword [r9]
 11483 00007A02 4D8910                  	mov qword [r8], r10
 11484 00007A05 4983E808                	sub r8, 8
 11485 00007A09 4983E908                	sub r9, 8
 11486 00007A0D 48FFC9                  	dec rcx
 11487 00007A10 EBE7                    	jmp .L_tc_recycle_frame_loop_0059
 11488                                  .L_tc_recycle_frame_done_0059:
 11489 00007A12 498D6008                	lea rsp, [r8 + 8]
 11490 00007A16 5D                      	pop rbp ; restore the old rbp
 11491 00007A17 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11492 00007A1A E9E3010000              	jmp .L_if_end_002c
 11493                                  .L_if_else_002c:
 11494                                  	; preparing a non-tail-call
 11495 00007A1F 488B4528                	mov rax, PARAM(1)	; param b
 11496 00007A23 50                      	push rax
 11497 00007A24 6A01                    	push 1	; arg count
 11498 00007A26 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11499 00007A2E 803805                  	cmp byte [rax], T_undefined
 11500 00007A31 0F8491FA0000            	je L_error_fvar_undefined
 11501 00007A37 803804                  	cmp byte [rax], T_closure
 11502 00007A3A 0F850CFB0000            	jne L_error_non_closure
 11503 00007A40 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11504 00007A43 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11505 00007A46 483D[02000000]          	cmp rax, sob_boolean_false
 11506 00007A4C 0F8493000000            	je .L_if_else_002b
 11507                                  	; preparing a tail-call
 11508 00007A52 488B4528                	mov rax, PARAM(1)	; param b
 11509 00007A56 50                      	push rax
 11510                                  	; preparing a non-tail-call
 11511 00007A57 488B4520                	mov rax, PARAM(0)	; param a
 11512 00007A5B 50                      	push rax
 11513 00007A5C 6A01                    	push 1	; arg count
 11514 00007A5E 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11515 00007A66 803805                  	cmp byte [rax], T_undefined
 11516 00007A69 0F8459FA0000            	je L_error_fvar_undefined
 11517 00007A6F 803804                  	cmp byte [rax], T_closure
 11518 00007A72 0F85D4FA0000            	jne L_error_non_closure
 11519 00007A78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11520 00007A7B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11521 00007A7E 50                      	push rax
 11522 00007A7F 6A02                    	push 2	; arg count
 11523 00007A81 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11524 00007A89 803805                  	cmp byte [rax], T_undefined
 11525 00007A8C 0F8436FA0000            	je L_error_fvar_undefined
 11526 00007A92 803804                  	cmp byte [rax], T_closure
 11527 00007A95 0F85B1FA0000            	jne L_error_non_closure
 11528 00007A9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11529 00007A9E FF7508                  	push qword [rbp + 8 * 1]
 11530                                   ; old ret addr
 11531 00007AA1 FF7500                  	push qword [rbp]
 11532                                   ; restore the old rbp
 11533 00007AA4 BB02000000              	mov rbx, 2
 11534 00007AA9 4883C303                	add rbx, 3
 11535 00007AAD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11536 00007AB1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11537 00007AB6 4C8D4DF8                	lea r9, [rbp - 8]
 11538 00007ABA B906000000              	mov rcx, 6
 11539                                  .L_tc_recycle_frame_loop_005a:
 11540 00007ABF 4883F900                	cmp rcx, 0
 11541 00007AC3 7413                    	je .L_tc_recycle_frame_done_005a
 11542 00007AC5 4D8B11                  	mov r10, qword [r9]
 11543 00007AC8 4D8910                  	mov qword [r8], r10
 11544 00007ACB 4983E808                	sub r8, 8
 11545 00007ACF 4983E908                	sub r9, 8
 11546 00007AD3 48FFC9                  	dec rcx
 11547 00007AD6 EBE7                    	jmp .L_tc_recycle_frame_loop_005a
 11548                                  .L_tc_recycle_frame_done_005a:
 11549 00007AD8 498D6008                	lea rsp, [r8 + 8]
 11550 00007ADC 5D                      	pop rbp ; restore the old rbp
 11551 00007ADD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11552 00007AE0 E91D010000              	jmp .L_if_end_002b
 11553                                  .L_if_else_002b:
 11554                                  	; preparing a non-tail-call
 11555 00007AE5 488B4528                	mov rax, PARAM(1)	; param b
 11556 00007AE9 50                      	push rax
 11557 00007AEA 6A01                    	push 1	; arg count
 11558 00007AEC 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11559 00007AF4 803805                  	cmp byte [rax], T_undefined
 11560 00007AF7 0F84CBF90000            	je L_error_fvar_undefined
 11561 00007AFD 803804                  	cmp byte [rax], T_closure
 11562 00007B00 0F8546FA0000            	jne L_error_non_closure
 11563 00007B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11564 00007B09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11565 00007B0C 483D[02000000]          	cmp rax, sob_boolean_false
 11566 00007B12 0F8490000000            	je .L_if_else_002a
 11567                                  	; preparing a tail-call
 11568 00007B18 488B4528                	mov rax, PARAM(1)	; param b
 11569 00007B1C 50                      	push rax
 11570                                  	; preparing a non-tail-call
 11571 00007B1D 488B4520                	mov rax, PARAM(0)	; param a
 11572 00007B21 50                      	push rax
 11573 00007B22 6A01                    	push 1	; arg count
 11574 00007B24 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11575 00007B2C 803805                  	cmp byte [rax], T_undefined
 11576 00007B2F 0F8493F90000            	je L_error_fvar_undefined
 11577 00007B35 803804                  	cmp byte [rax], T_closure
 11578 00007B38 0F850EFA0000            	jne L_error_non_closure
 11579 00007B3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11580 00007B41 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11581 00007B44 50                      	push rax
 11582 00007B45 6A02                    	push 2	; arg count
 11583 00007B47 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11584 00007B4F 803805                  	cmp byte [rax], T_undefined
 11585 00007B52 0F8470F90000            	je L_error_fvar_undefined
 11586 00007B58 803804                  	cmp byte [rax], T_closure
 11587 00007B5B 0F85EBF90000            	jne L_error_non_closure
 11588 00007B61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11589 00007B64 FF7508                  	push qword [rbp + 8 * 1]
 11590                                   ; old ret addr
 11591 00007B67 FF7500                  	push qword [rbp]
 11592                                   ; restore the old rbp
 11593 00007B6A BB02000000              	mov rbx, 2
 11594 00007B6F 4883C303                	add rbx, 3
 11595 00007B73 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11596 00007B77 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11597 00007B7C 4C8D4DF8                	lea r9, [rbp - 8]
 11598 00007B80 B906000000              	mov rcx, 6
 11599                                  .L_tc_recycle_frame_loop_005b:
 11600 00007B85 4883F900                	cmp rcx, 0
 11601 00007B89 7413                    	je .L_tc_recycle_frame_done_005b
 11602 00007B8B 4D8B11                  	mov r10, qword [r9]
 11603 00007B8E 4D8910                  	mov qword [r8], r10
 11604 00007B91 4983E808                	sub r8, 8
 11605 00007B95 4983E908                	sub r9, 8
 11606 00007B99 48FFC9                  	dec rcx
 11607 00007B9C EBE7                    	jmp .L_tc_recycle_frame_loop_005b
 11608                                  .L_tc_recycle_frame_done_005b:
 11609 00007B9E 498D6008                	lea rsp, [r8 + 8]
 11610 00007BA2 5D                      	pop rbp ; restore the old rbp
 11611 00007BA3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11612 00007BA6 EB5A                    	jmp .L_if_end_002a
 11613                                  .L_if_else_002a:
 11614                                  	; preparing a tail-call
 11615 00007BA8 6A00                    	push 0	; arg count
 11616 00007BAA 488B4510                	mov rax, ENV
 11617 00007BAE 488B00                  	mov rax, qword [rax + 8 * 0]
 11618 00007BB1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11619 00007BB4 803804                  	cmp byte [rax], T_closure
 11620 00007BB7 0F858FF90000            	jne L_error_non_closure
 11621 00007BBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11622 00007BC0 FF7508                  	push qword [rbp + 8 * 1]
 11623                                   ; old ret addr
 11624 00007BC3 FF7500                  	push qword [rbp]
 11625                                   ; restore the old rbp
 11626 00007BC6 BB00000000              	mov rbx, 0
 11627 00007BCB 4883C303                	add rbx, 3
 11628 00007BCF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11629 00007BD3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11630 00007BD8 4C8D4DF8                	lea r9, [rbp - 8]
 11631 00007BDC B904000000              	mov rcx, 4
 11632                                  .L_tc_recycle_frame_loop_005c:
 11633 00007BE1 4883F900                	cmp rcx, 0
 11634 00007BE5 7413                    	je .L_tc_recycle_frame_done_005c
 11635 00007BE7 4D8B11                  	mov r10, qword [r9]
 11636 00007BEA 4D8910                  	mov qword [r8], r10
 11637 00007BED 4983E808                	sub r8, 8
 11638 00007BF1 4983E908                	sub r9, 8
 11639 00007BF5 48FFC9                  	dec rcx
 11640 00007BF8 EBE7                    	jmp .L_tc_recycle_frame_loop_005c
 11641                                  .L_tc_recycle_frame_done_005c:
 11642 00007BFA 498D6008                	lea rsp, [r8 + 8]
 11643 00007BFE 5D                      	pop rbp ; restore the old rbp
 11644 00007BFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11645                                  .L_if_end_002a:
 11646                                  .L_if_end_002b:
 11647                                  .L_if_end_002c:
 11648 00007C02 E9CB050000              	jmp .L_if_end_0035
 11649                                  .L_if_else_0035:
 11650                                  	; preparing a non-tail-call
 11651 00007C07 488B4520                	mov rax, PARAM(0)	; param a
 11652 00007C0B 50                      	push rax
 11653 00007C0C 6A01                    	push 1	; arg count
 11654 00007C0E 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11655 00007C16 803805                  	cmp byte [rax], T_undefined
 11656 00007C19 0F84A9F80000            	je L_error_fvar_undefined
 11657 00007C1F 803804                  	cmp byte [rax], T_closure
 11658 00007C22 0F8524F90000            	jne L_error_non_closure
 11659 00007C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11660 00007C2B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11661 00007C2E 483D[02000000]          	cmp rax, sob_boolean_false
 11662 00007C34 0F8487020000            	je .L_if_else_0034
 11663                                  	; preparing a non-tail-call
 11664 00007C3A 488B4528                	mov rax, PARAM(1)	; param b
 11665 00007C3E 50                      	push rax
 11666 00007C3F 6A01                    	push 1	; arg count
 11667 00007C41 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11668 00007C49 803805                  	cmp byte [rax], T_undefined
 11669 00007C4C 0F8476F80000            	je L_error_fvar_undefined
 11670 00007C52 803804                  	cmp byte [rax], T_closure
 11671 00007C55 0F85F1F80000            	jne L_error_non_closure
 11672 00007C5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11673 00007C5E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11674 00007C61 483D[02000000]          	cmp rax, sob_boolean_false
 11675 00007C67 0F8493000000            	je .L_if_else_002f
 11676                                  	; preparing a tail-call
 11677                                  	; preparing a non-tail-call
 11678 00007C6D 488B4528                	mov rax, PARAM(1)	; param b
 11679 00007C71 50                      	push rax
 11680 00007C72 6A01                    	push 1	; arg count
 11681 00007C74 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11682 00007C7C 803805                  	cmp byte [rax], T_undefined
 11683 00007C7F 0F8443F80000            	je L_error_fvar_undefined
 11684 00007C85 803804                  	cmp byte [rax], T_closure
 11685 00007C88 0F85BEF80000            	jne L_error_non_closure
 11686 00007C8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11687 00007C91 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11688 00007C94 50                      	push rax
 11689 00007C95 488B4520                	mov rax, PARAM(0)	; param a
 11690 00007C99 50                      	push rax
 11691 00007C9A 6A02                    	push 2	; arg count
 11692 00007C9C 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11693 00007CA4 803805                  	cmp byte [rax], T_undefined
 11694 00007CA7 0F841BF80000            	je L_error_fvar_undefined
 11695 00007CAD 803804                  	cmp byte [rax], T_closure
 11696 00007CB0 0F8596F80000            	jne L_error_non_closure
 11697 00007CB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11698 00007CB9 FF7508                  	push qword [rbp + 8 * 1]
 11699                                   ; old ret addr
 11700 00007CBC FF7500                  	push qword [rbp]
 11701                                   ; restore the old rbp
 11702 00007CBF BB02000000              	mov rbx, 2
 11703 00007CC4 4883C303                	add rbx, 3
 11704 00007CC8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11705 00007CCC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11706 00007CD1 4C8D4DF8                	lea r9, [rbp - 8]
 11707 00007CD5 B906000000              	mov rcx, 6
 11708                                  .L_tc_recycle_frame_loop_005d:
 11709 00007CDA 4883F900                	cmp rcx, 0
 11710 00007CDE 7413                    	je .L_tc_recycle_frame_done_005d
 11711 00007CE0 4D8B11                  	mov r10, qword [r9]
 11712 00007CE3 4D8910                  	mov qword [r8], r10
 11713 00007CE6 4983E808                	sub r8, 8
 11714 00007CEA 4983E908                	sub r9, 8
 11715 00007CEE 48FFC9                  	dec rcx
 11716 00007CF1 EBE7                    	jmp .L_tc_recycle_frame_loop_005d
 11717                                  .L_tc_recycle_frame_done_005d:
 11718 00007CF3 498D6008                	lea rsp, [r8 + 8]
 11719 00007CF7 5D                      	pop rbp ; restore the old rbp
 11720 00007CF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11721 00007CFB E9BC010000              	jmp .L_if_end_002f
 11722                                  .L_if_else_002f:
 11723                                  	; preparing a non-tail-call
 11724 00007D00 488B4528                	mov rax, PARAM(1)	; param b
 11725 00007D04 50                      	push rax
 11726 00007D05 6A01                    	push 1	; arg count
 11727 00007D07 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11728 00007D0F 803805                  	cmp byte [rax], T_undefined
 11729 00007D12 0F84B0F70000            	je L_error_fvar_undefined
 11730 00007D18 803804                  	cmp byte [rax], T_closure
 11731 00007D1B 0F852BF80000            	jne L_error_non_closure
 11732 00007D21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11733 00007D24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11734 00007D27 483D[02000000]          	cmp rax, sob_boolean_false
 11735 00007D2D 7470                    	je .L_if_else_002e
 11736                                  	; preparing a tail-call
 11737 00007D2F 488B4528                	mov rax, PARAM(1)	; param b
 11738 00007D33 50                      	push rax
 11739 00007D34 488B4520                	mov rax, PARAM(0)	; param a
 11740 00007D38 50                      	push rax
 11741 00007D39 6A02                    	push 2	; arg count
 11742 00007D3B 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11743 00007D43 803805                  	cmp byte [rax], T_undefined
 11744 00007D46 0F847CF70000            	je L_error_fvar_undefined
 11745 00007D4C 803804                  	cmp byte [rax], T_closure
 11746 00007D4F 0F85F7F70000            	jne L_error_non_closure
 11747 00007D55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11748 00007D58 FF7508                  	push qword [rbp + 8 * 1]
 11749                                   ; old ret addr
 11750 00007D5B FF7500                  	push qword [rbp]
 11751                                   ; restore the old rbp
 11752 00007D5E BB02000000              	mov rbx, 2
 11753 00007D63 4883C303                	add rbx, 3
 11754 00007D67 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11755 00007D6B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11756 00007D70 4C8D4DF8                	lea r9, [rbp - 8]
 11757 00007D74 B906000000              	mov rcx, 6
 11758                                  .L_tc_recycle_frame_loop_005e:
 11759 00007D79 4883F900                	cmp rcx, 0
 11760 00007D7D 7413                    	je .L_tc_recycle_frame_done_005e
 11761 00007D7F 4D8B11                  	mov r10, qword [r9]
 11762 00007D82 4D8910                  	mov qword [r8], r10
 11763 00007D85 4983E808                	sub r8, 8
 11764 00007D89 4983E908                	sub r9, 8
 11765 00007D8D 48FFC9                  	dec rcx
 11766 00007D90 EBE7                    	jmp .L_tc_recycle_frame_loop_005e
 11767                                  .L_tc_recycle_frame_done_005e:
 11768 00007D92 498D6008                	lea rsp, [r8 + 8]
 11769 00007D96 5D                      	pop rbp ; restore the old rbp
 11770 00007D97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11771 00007D9A E91D010000              	jmp .L_if_end_002e
 11772                                  .L_if_else_002e:
 11773                                  	; preparing a non-tail-call
 11774 00007D9F 488B4528                	mov rax, PARAM(1)	; param b
 11775 00007DA3 50                      	push rax
 11776 00007DA4 6A01                    	push 1	; arg count
 11777 00007DA6 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11778 00007DAE 803805                  	cmp byte [rax], T_undefined
 11779 00007DB1 0F8411F70000            	je L_error_fvar_undefined
 11780 00007DB7 803804                  	cmp byte [rax], T_closure
 11781 00007DBA 0F858CF70000            	jne L_error_non_closure
 11782 00007DC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11783 00007DC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11784 00007DC6 483D[02000000]          	cmp rax, sob_boolean_false
 11785 00007DCC 0F8490000000            	je .L_if_else_002d
 11786                                  	; preparing a tail-call
 11787 00007DD2 488B4528                	mov rax, PARAM(1)	; param b
 11788 00007DD6 50                      	push rax
 11789                                  	; preparing a non-tail-call
 11790 00007DD7 488B4520                	mov rax, PARAM(0)	; param a
 11791 00007DDB 50                      	push rax
 11792 00007DDC 6A01                    	push 1	; arg count
 11793 00007DDE 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11794 00007DE6 803805                  	cmp byte [rax], T_undefined
 11795 00007DE9 0F84D9F60000            	je L_error_fvar_undefined
 11796 00007DEF 803804                  	cmp byte [rax], T_closure
 11797 00007DF2 0F8554F70000            	jne L_error_non_closure
 11798 00007DF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11799 00007DFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 11800 00007DFE 50                      	push rax
 11801 00007DFF 6A02                    	push 2	; arg count
 11802 00007E01 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11803 00007E09 803805                  	cmp byte [rax], T_undefined
 11804 00007E0C 0F84B6F60000            	je L_error_fvar_undefined
 11805 00007E12 803804                  	cmp byte [rax], T_closure
 11806 00007E15 0F8531F70000            	jne L_error_non_closure
 11807 00007E1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11808 00007E1E FF7508                  	push qword [rbp + 8 * 1]
 11809                                   ; old ret addr
 11810 00007E21 FF7500                  	push qword [rbp]
 11811                                   ; restore the old rbp
 11812 00007E24 BB02000000              	mov rbx, 2
 11813 00007E29 4883C303                	add rbx, 3
 11814 00007E2D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11815 00007E31 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11816 00007E36 4C8D4DF8                	lea r9, [rbp - 8]
 11817 00007E3A B906000000              	mov rcx, 6
 11818                                  .L_tc_recycle_frame_loop_005f:
 11819 00007E3F 4883F900                	cmp rcx, 0
 11820 00007E43 7413                    	je .L_tc_recycle_frame_done_005f
 11821 00007E45 4D8B11                  	mov r10, qword [r9]
 11822 00007E48 4D8910                  	mov qword [r8], r10
 11823 00007E4B 4983E808                	sub r8, 8
 11824 00007E4F 4983E908                	sub r9, 8
 11825 00007E53 48FFC9                  	dec rcx
 11826 00007E56 EBE7                    	jmp .L_tc_recycle_frame_loop_005f
 11827                                  .L_tc_recycle_frame_done_005f:
 11828 00007E58 498D6008                	lea rsp, [r8 + 8]
 11829 00007E5C 5D                      	pop rbp ; restore the old rbp
 11830 00007E5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11831 00007E60 EB5A                    	jmp .L_if_end_002d
 11832                                  .L_if_else_002d:
 11833                                  	; preparing a tail-call
 11834 00007E62 6A00                    	push 0	; arg count
 11835 00007E64 488B4510                	mov rax, ENV
 11836 00007E68 488B00                  	mov rax, qword [rax + 8 * 0]
 11837 00007E6B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11838 00007E6E 803804                  	cmp byte [rax], T_closure
 11839 00007E71 0F85D5F60000            	jne L_error_non_closure
 11840 00007E77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11841 00007E7A FF7508                  	push qword [rbp + 8 * 1]
 11842                                   ; old ret addr
 11843 00007E7D FF7500                  	push qword [rbp]
 11844                                   ; restore the old rbp
 11845 00007E80 BB00000000              	mov rbx, 0
 11846 00007E85 4883C303                	add rbx, 3
 11847 00007E89 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11848 00007E8D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11849 00007E92 4C8D4DF8                	lea r9, [rbp - 8]
 11850 00007E96 B904000000              	mov rcx, 4
 11851                                  .L_tc_recycle_frame_loop_0060:
 11852 00007E9B 4883F900                	cmp rcx, 0
 11853 00007E9F 7413                    	je .L_tc_recycle_frame_done_0060
 11854 00007EA1 4D8B11                  	mov r10, qword [r9]
 11855 00007EA4 4D8910                  	mov qword [r8], r10
 11856 00007EA7 4983E808                	sub r8, 8
 11857 00007EAB 4983E908                	sub r9, 8
 11858 00007EAF 48FFC9                  	dec rcx
 11859 00007EB2 EBE7                    	jmp .L_tc_recycle_frame_loop_0060
 11860                                  .L_tc_recycle_frame_done_0060:
 11861 00007EB4 498D6008                	lea rsp, [r8 + 8]
 11862 00007EB8 5D                      	pop rbp ; restore the old rbp
 11863 00007EB9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11864                                  .L_if_end_002d:
 11865                                  .L_if_end_002e:
 11866                                  .L_if_end_002f:
 11867 00007EBC E911030000              	jmp .L_if_end_0034
 11868                                  .L_if_else_0034:
 11869                                  	; preparing a non-tail-call
 11870 00007EC1 488B4520                	mov rax, PARAM(0)	; param a
 11871 00007EC5 50                      	push rax
 11872 00007EC6 6A01                    	push 1	; arg count
 11873 00007EC8 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11874 00007ED0 803805                  	cmp byte [rax], T_undefined
 11875 00007ED3 0F84EFF50000            	je L_error_fvar_undefined
 11876 00007ED9 803804                  	cmp byte [rax], T_closure
 11877 00007EDC 0F856AF60000            	jne L_error_non_closure
 11878 00007EE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11879 00007EE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11880 00007EE8 483D[02000000]          	cmp rax, sob_boolean_false
 11881 00007EEE 0F8484020000            	je .L_if_else_0033
 11882                                  	; preparing a non-tail-call
 11883 00007EF4 488B4528                	mov rax, PARAM(1)	; param b
 11884 00007EF8 50                      	push rax
 11885 00007EF9 6A01                    	push 1	; arg count
 11886 00007EFB 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11887 00007F03 803805                  	cmp byte [rax], T_undefined
 11888 00007F06 0F84BCF50000            	je L_error_fvar_undefined
 11889 00007F0C 803804                  	cmp byte [rax], T_closure
 11890 00007F0F 0F8537F60000            	jne L_error_non_closure
 11891 00007F15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11892 00007F18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11893 00007F1B 483D[02000000]          	cmp rax, sob_boolean_false
 11894 00007F21 0F8493000000            	je .L_if_else_0032
 11895                                  	; preparing a tail-call
 11896                                  	; preparing a non-tail-call
 11897 00007F27 488B4528                	mov rax, PARAM(1)	; param b
 11898 00007F2B 50                      	push rax
 11899 00007F2C 6A01                    	push 1	; arg count
 11900 00007F2E 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11901 00007F36 803805                  	cmp byte [rax], T_undefined
 11902 00007F39 0F8489F50000            	je L_error_fvar_undefined
 11903 00007F3F 803804                  	cmp byte [rax], T_closure
 11904 00007F42 0F8504F60000            	jne L_error_non_closure
 11905 00007F48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11906 00007F4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11907 00007F4E 50                      	push rax
 11908 00007F4F 488B4520                	mov rax, PARAM(0)	; param a
 11909 00007F53 50                      	push rax
 11910 00007F54 6A02                    	push 2	; arg count
 11911 00007F56 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11912 00007F5E 803805                  	cmp byte [rax], T_undefined
 11913 00007F61 0F8461F50000            	je L_error_fvar_undefined
 11914 00007F67 803804                  	cmp byte [rax], T_closure
 11915 00007F6A 0F85DCF50000            	jne L_error_non_closure
 11916 00007F70 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11917 00007F73 FF7508                  	push qword [rbp + 8 * 1]
 11918                                   ; old ret addr
 11919 00007F76 FF7500                  	push qword [rbp]
 11920                                   ; restore the old rbp
 11921 00007F79 BB02000000              	mov rbx, 2
 11922 00007F7E 4883C303                	add rbx, 3
 11923 00007F82 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11924 00007F86 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11925 00007F8B 4C8D4DF8                	lea r9, [rbp - 8]
 11926 00007F8F B906000000              	mov rcx, 6
 11927                                  .L_tc_recycle_frame_loop_0061:
 11928 00007F94 4883F900                	cmp rcx, 0
 11929 00007F98 7413                    	je .L_tc_recycle_frame_done_0061
 11930 00007F9A 4D8B11                  	mov r10, qword [r9]
 11931 00007F9D 4D8910                  	mov qword [r8], r10
 11932 00007FA0 4983E808                	sub r8, 8
 11933 00007FA4 4983E908                	sub r9, 8
 11934 00007FA8 48FFC9                  	dec rcx
 11935 00007FAB EBE7                    	jmp .L_tc_recycle_frame_loop_0061
 11936                                  .L_tc_recycle_frame_done_0061:
 11937 00007FAD 498D6008                	lea rsp, [r8 + 8]
 11938 00007FB1 5D                      	pop rbp ; restore the old rbp
 11939 00007FB2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11940 00007FB5 E9BC010000              	jmp .L_if_end_0032
 11941                                  .L_if_else_0032:
 11942                                  	; preparing a non-tail-call
 11943 00007FBA 488B4528                	mov rax, PARAM(1)	; param b
 11944 00007FBE 50                      	push rax
 11945 00007FBF 6A01                    	push 1	; arg count
 11946 00007FC1 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11947 00007FC9 803805                  	cmp byte [rax], T_undefined
 11948 00007FCC 0F84F6F40000            	je L_error_fvar_undefined
 11949 00007FD2 803804                  	cmp byte [rax], T_closure
 11950 00007FD5 0F8571F50000            	jne L_error_non_closure
 11951 00007FDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11952 00007FDE FF5009                  	call SOB_CLOSURE_CODE(rax)
 11953 00007FE1 483D[02000000]          	cmp rax, sob_boolean_false
 11954 00007FE7 0F8493000000            	je .L_if_else_0031
 11955                                  	; preparing a tail-call
 11956                                  	; preparing a non-tail-call
 11957 00007FED 488B4528                	mov rax, PARAM(1)	; param b
 11958 00007FF1 50                      	push rax
 11959 00007FF2 6A01                    	push 1	; arg count
 11960 00007FF4 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11961 00007FFC 803805                  	cmp byte [rax], T_undefined
 11962 00007FFF 0F84C3F40000            	je L_error_fvar_undefined
 11963 00008005 803804                  	cmp byte [rax], T_closure
 11964 00008008 0F853EF50000            	jne L_error_non_closure
 11965 0000800E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11966 00008011 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11967 00008014 50                      	push rax
 11968 00008015 488B4520                	mov rax, PARAM(0)	; param a
 11969 00008019 50                      	push rax
 11970 0000801A 6A02                    	push 2	; arg count
 11971 0000801C 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11972 00008024 803805                  	cmp byte [rax], T_undefined
 11973 00008027 0F849BF40000            	je L_error_fvar_undefined
 11974 0000802D 803804                  	cmp byte [rax], T_closure
 11975 00008030 0F8516F50000            	jne L_error_non_closure
 11976 00008036 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11977 00008039 FF7508                  	push qword [rbp + 8 * 1]
 11978                                   ; old ret addr
 11979 0000803C FF7500                  	push qword [rbp]
 11980                                   ; restore the old rbp
 11981 0000803F BB02000000              	mov rbx, 2
 11982 00008044 4883C303                	add rbx, 3
 11983 00008048 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11984 0000804C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11985 00008051 4C8D4DF8                	lea r9, [rbp - 8]
 11986 00008055 B906000000              	mov rcx, 6
 11987                                  .L_tc_recycle_frame_loop_0062:
 11988 0000805A 4883F900                	cmp rcx, 0
 11989 0000805E 7413                    	je .L_tc_recycle_frame_done_0062
 11990 00008060 4D8B11                  	mov r10, qword [r9]
 11991 00008063 4D8910                  	mov qword [r8], r10
 11992 00008066 4983E808                	sub r8, 8
 11993 0000806A 4983E908                	sub r9, 8
 11994 0000806E 48FFC9                  	dec rcx
 11995 00008071 EBE7                    	jmp .L_tc_recycle_frame_loop_0062
 11996                                  .L_tc_recycle_frame_done_0062:
 11997 00008073 498D6008                	lea rsp, [r8 + 8]
 11998 00008077 5D                      	pop rbp ; restore the old rbp
 11999 00008078 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12000 0000807B E9F6000000              	jmp .L_if_end_0031
 12001                                  .L_if_else_0031:
 12002                                  	; preparing a non-tail-call
 12003 00008080 488B4528                	mov rax, PARAM(1)	; param b
 12004 00008084 50                      	push rax
 12005 00008085 6A01                    	push 1	; arg count
 12006 00008087 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12007 0000808F 803805                  	cmp byte [rax], T_undefined
 12008 00008092 0F8430F40000            	je L_error_fvar_undefined
 12009 00008098 803804                  	cmp byte [rax], T_closure
 12010 0000809B 0F85ABF40000            	jne L_error_non_closure
 12011 000080A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12012 000080A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12013 000080A7 483D[02000000]          	cmp rax, sob_boolean_false
 12014 000080AD 746D                    	je .L_if_else_0030
 12015                                  	; preparing a tail-call
 12016 000080AF 488B4528                	mov rax, PARAM(1)	; param b
 12017 000080B3 50                      	push rax
 12018 000080B4 488B4520                	mov rax, PARAM(0)	; param a
 12019 000080B8 50                      	push rax
 12020 000080B9 6A02                    	push 2	; arg count
 12021 000080BB 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12022 000080C3 803805                  	cmp byte [rax], T_undefined
 12023 000080C6 0F84FCF30000            	je L_error_fvar_undefined
 12024 000080CC 803804                  	cmp byte [rax], T_closure
 12025 000080CF 0F8577F40000            	jne L_error_non_closure
 12026 000080D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12027 000080D8 FF7508                  	push qword [rbp + 8 * 1]
 12028                                   ; old ret addr
 12029 000080DB FF7500                  	push qword [rbp]
 12030                                   ; restore the old rbp
 12031 000080DE BB02000000              	mov rbx, 2
 12032 000080E3 4883C303                	add rbx, 3
 12033 000080E7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12034 000080EB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12035 000080F0 4C8D4DF8                	lea r9, [rbp - 8]
 12036 000080F4 B906000000              	mov rcx, 6
 12037                                  .L_tc_recycle_frame_loop_0063:
 12038 000080F9 4883F900                	cmp rcx, 0
 12039 000080FD 7413                    	je .L_tc_recycle_frame_done_0063
 12040 000080FF 4D8B11                  	mov r10, qword [r9]
 12041 00008102 4D8910                  	mov qword [r8], r10
 12042 00008105 4983E808                	sub r8, 8
 12043 00008109 4983E908                	sub r9, 8
 12044 0000810D 48FFC9                  	dec rcx
 12045 00008110 EBE7                    	jmp .L_tc_recycle_frame_loop_0063
 12046                                  .L_tc_recycle_frame_done_0063:
 12047 00008112 498D6008                	lea rsp, [r8 + 8]
 12048 00008116 5D                      	pop rbp ; restore the old rbp
 12049 00008117 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12050 0000811A EB5A                    	jmp .L_if_end_0030
 12051                                  .L_if_else_0030:
 12052                                  	; preparing a tail-call
 12053 0000811C 6A00                    	push 0	; arg count
 12054 0000811E 488B4510                	mov rax, ENV
 12055 00008122 488B00                  	mov rax, qword [rax + 8 * 0]
 12056 00008125 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12057 00008128 803804                  	cmp byte [rax], T_closure
 12058 0000812B 0F851BF40000            	jne L_error_non_closure
 12059 00008131 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12060 00008134 FF7508                  	push qword [rbp + 8 * 1]
 12061                                   ; old ret addr
 12062 00008137 FF7500                  	push qword [rbp]
 12063                                   ; restore the old rbp
 12064 0000813A BB00000000              	mov rbx, 0
 12065 0000813F 4883C303                	add rbx, 3
 12066 00008143 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12067 00008147 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12068 0000814C 4C8D4DF8                	lea r9, [rbp - 8]
 12069 00008150 B904000000              	mov rcx, 4
 12070                                  .L_tc_recycle_frame_loop_0064:
 12071 00008155 4883F900                	cmp rcx, 0
 12072 00008159 7413                    	je .L_tc_recycle_frame_done_0064
 12073 0000815B 4D8B11                  	mov r10, qword [r9]
 12074 0000815E 4D8910                  	mov qword [r8], r10
 12075 00008161 4983E808                	sub r8, 8
 12076 00008165 4983E908                	sub r9, 8
 12077 00008169 48FFC9                  	dec rcx
 12078 0000816C EBE7                    	jmp .L_tc_recycle_frame_loop_0064
 12079                                  .L_tc_recycle_frame_done_0064:
 12080 0000816E 498D6008                	lea rsp, [r8 + 8]
 12081 00008172 5D                      	pop rbp ; restore the old rbp
 12082 00008173 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12083                                  .L_if_end_0030:
 12084                                  .L_if_end_0031:
 12085                                  .L_if_end_0032:
 12086 00008176 EB5A                    	jmp .L_if_end_0033
 12087                                  .L_if_else_0033:
 12088                                  	; preparing a tail-call
 12089 00008178 6A00                    	push 0	; arg count
 12090 0000817A 488B4510                	mov rax, ENV
 12091 0000817E 488B00                  	mov rax, qword [rax + 8 * 0]
 12092 00008181 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12093 00008184 803804                  	cmp byte [rax], T_closure
 12094 00008187 0F85BFF30000            	jne L_error_non_closure
 12095 0000818D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12096 00008190 FF7508                  	push qword [rbp + 8 * 1]
 12097                                   ; old ret addr
 12098 00008193 FF7500                  	push qword [rbp]
 12099                                   ; restore the old rbp
 12100 00008196 BB00000000              	mov rbx, 0
 12101 0000819B 4883C303                	add rbx, 3
 12102 0000819F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12103 000081A3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12104 000081A8 4C8D4DF8                	lea r9, [rbp - 8]
 12105 000081AC B904000000              	mov rcx, 4
 12106                                  .L_tc_recycle_frame_loop_0065:
 12107 000081B1 4883F900                	cmp rcx, 0
 12108 000081B5 7413                    	je .L_tc_recycle_frame_done_0065
 12109 000081B7 4D8B11                  	mov r10, qword [r9]
 12110 000081BA 4D8910                  	mov qword [r8], r10
 12111 000081BD 4983E808                	sub r8, 8
 12112 000081C1 4983E908                	sub r9, 8
 12113 000081C5 48FFC9                  	dec rcx
 12114 000081C8 EBE7                    	jmp .L_tc_recycle_frame_loop_0065
 12115                                  .L_tc_recycle_frame_done_0065:
 12116 000081CA 498D6008                	lea rsp, [r8 + 8]
 12117 000081CE 5D                      	pop rbp ; restore the old rbp
 12118 000081CF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12119                                  .L_if_end_0033:
 12120                                  .L_if_end_0034:
 12121                                  .L_if_end_0035:
 12122 000081D2 C9                      	leave
 12123 000081D3 C22000                  	ret AND_KILL_FRAME(2)
 12124                                  .L_lambda_simple_end_003f:	; new closure is in rax
 12125 000081D6 50                      	push rax
 12126 000081D7 6A01                    	push 1	; arg count
 12127 000081D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12128 000081DE E812F40000              	call malloc
 12129 000081E3 50                      	push rax
 12130 000081E4 BF08000000              	mov rdi, 8 * 1	; new rib
 12131 000081E9 E807F40000              	call malloc
 12132 000081EE 50                      	push rax
 12133 000081EF BF10000000              	mov rdi, 8 * 2	; extended env
 12134 000081F4 E8FCF30000              	call malloc
 12135 000081F9 488B7D10                	mov rdi, ENV
 12136 000081FD BE00000000              	mov rsi, 0
 12137 00008202 BA01000000              	mov rdx, 1
 12138                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 12139 00008207 4883FE01                	cmp rsi, 1
 12140 0000820B 7410                    	je .L_lambda_simple_env_end_0040
 12141 0000820D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12142 00008211 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12143 00008215 48FFC6                  	inc rsi
 12144 00008218 48FFC2                  	inc rdx
 12145 0000821B EBEA                    	jmp .L_lambda_simple_env_loop_0040
 12146                                  .L_lambda_simple_env_end_0040:
 12147 0000821D 5B                      	pop rbx
 12148 0000821E BE00000000              	mov rsi, 0
 12149                                  .L_lambda_simple_params_loop_0040:	; copy params
 12150 00008223 4883FE01                	cmp rsi, 1
 12151 00008227 740E                    	je .L_lambda_simple_params_end_0040
 12152 00008229 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12153 0000822E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12154 00008232 48FFC6                  	inc rsi
 12155 00008235 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 12156                                  .L_lambda_simple_params_end_0040:
 12157 00008237 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12158 0000823A 4889C3                  	mov rbx, rax
 12159 0000823D 58                      	pop rax
 12160 0000823E C60004                  	mov byte [rax], T_closure
 12161 00008241 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12162 00008245 48C74009[52820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 12163 0000824D E903020000              	jmp .L_lambda_simple_end_0040
 12164                                  .L_lambda_simple_code_0040:	; lambda-simple body
 12165 00008252 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12166 00008258 740B                    	je .L_lambda_simple_arity_check_ok_0040
 12167 0000825A FF742410                	push qword [rsp + 8 * 2]
 12168 0000825E 6A01                    	push 1
 12169 00008260 E949F30000              	jmp L_error_incorrect_arity_simple
 12170                                  .L_lambda_simple_arity_check_ok_0040:
 12171 00008265 C8000000                	enter 0, 0
 12172 00008269 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12173 0000826E E882F30000              	call malloc
 12174 00008273 50                      	push rax
 12175 00008274 BF08000000              	mov rdi, 8 * 1	; new rib
 12176 00008279 E877F30000              	call malloc
 12177 0000827E 50                      	push rax
 12178 0000827F BF18000000              	mov rdi, 8 * 3	; extended env
 12179 00008284 E86CF30000              	call malloc
 12180 00008289 488B7D10                	mov rdi, ENV
 12181 0000828D 4831F6                  	 xor rsi, rsi
 12182 00008290 4831D2                  	 xor rdx, rdx
 12183 00008293 48FFC2                  	inc rdx
 12184                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 12185 00008296 4883FE02                	cmp rsi, 2
 12186 0000829A 7410                    	je .L_lambda_opt_env_end_000c
 12187 0000829C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12188 000082A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12189 000082A4 48FFC6                  	inc rsi
 12190 000082A7 48FFC2                  	inc rdx
 12191 000082AA EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12192                                  .L_lambda_opt_env_end_000c:
 12193 000082AC 5B                      	pop rbx
 12194 000082AD 4831F6                  	xor rsi, rsi
 12195                                  .L_lambda_opt_params_loop_000c:	; copy params
 12196 000082B0 4883FE01                	cmp rsi, 1
 12197 000082B4 740E                    	je .L_lambda_opt_params_end_000c
 12198 000082B6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12199 000082BB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12200 000082BF 48FFC6                  	inc rsi
 12201 000082C2 EBEC                    	jmp .L_lambda_opt_params_loop_000c
 12202                                  .L_lambda_opt_params_end_000c:
 12203 000082C4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12204 000082C7 4889C3                  	mov rbx, rax
 12205 000082CA 58                      	pop rax
 12206 000082CB C60004                  	mov byte [rax], T_closure
 12207 000082CE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12208 000082D2 48C74009[DF820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12209 000082DA E972010000              	jmp .L_lambda_opt_end_000c
 12210                                  .L_lambda_opt_code_000c:; lambda opt body
 12211 000082DF 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12212 000082E5 7409                    	je .L_lambda_opt_arity_check_exact_000c
 12213 000082E7 7F57                    	jg .L_lambda_opt_arity_check_more_000c
 12214 000082E9 6A00                    	push 0
 12215 000082EB E9D2F20000              	jmp L_error_incorrect_arity_opt
 12216                                  .L_lambda_opt_arity_check_exact_000c:
 12217 000082F0 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 12218 000082F4 4C894C24F8              	mov qword [rsp -8], r9
 12219 000082F9 4C8B4C2408              	mov r9, qword [rsp +8]
 12220 000082FE 4C890C24                	mov qword [rsp +8 * 0], r9
 12221 00008302 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 12222 00008307 4C89C9                  	mov rcx, r9
 12223 0000830A 49FFC1                  	inc r9
 12224 0000830D 4C894C2408              	mov qword [rsp +8], r9
 12225 00008312 4889E2                  	mov rdx, rsp
 12226 00008315 4883C218                	add rdx, 24
 12227                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000c:
 12228 00008319 4883F900                	cmp rcx, 0
 12229 0000831D 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000c
 12230 0000831F 4C8B02                  	mov r8, qword [rdx]
 12231 00008322 4C8942F8                	mov qword [rdx - 8], r8
 12232 00008326 4883C208                	add rdx, 8
 12233 0000832A 48FFC9                  	dec rcx
 12234 0000832D EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000c
 12235                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000c:
 12236 0000832F 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 12237 00008337 4883EC08                	sub rsp, 8
 12238 0000833B E984000000              	jmp .L_lambda_opt_stack_adjusted_000c
 12239                                  .L_lambda_opt_arity_check_more_000c:
 12240 00008340 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 12241 00008345 4D89C4                  	mov r12, r8
 12242 00008348 4C89C1                  	mov rcx, r8
 12243 0000834B 4D8D5002                	lea r10, [r8 + 2] 
 12244 0000834F 4883E900                	sub rcx, 0
 12245 00008353 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 12246 00008358 49B9-                   	mov r9, sob_nil
 12246 0000835A [0100000000000000] 
 12247                                  .L_lambda_opt_create_list_of_opt_params_000c:
 12248 00008362 4883F900                	cmp rcx, 0
 12249 00008366 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000c
 12250 00008368 BF11000000              	mov rdi, 17
 12251 0000836D E883F20000              	call malloc
 12252 00008372 C60021                  	mov byte [rax], T_pair
 12253 00008375 498B1B                  	mov rbx, qword [r11]
 12254 00008378 48895801                	mov qword [rax +1], rbx
 12255 0000837C 4C894809                	mov qword [rax + 1 + 8], r9
 12256 00008380 4989C1                  	mov r9, rax
 12257 00008383 48FFC9                  	dec rcx
 12258 00008386 4983EB08                	sub r11, 8
 12259 0000838A EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000c
 12260                                  .L_lambda_opt_create_list_of_opt_params_end_000c:
 12261 0000838C 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 12262 00008391 4D8908                  	mov qword [r8], r9
 12263 00008394 4E8D14D500000000        	lea r10, [8 * r10]
 12264 0000839C 4901E2                  	add r10, rsp
 12265 0000839F B904000000              	mov rcx, 4 + 0
 12266                                  .L_lambda_opt_stack_shrink_loop_000c:
 12267 000083A4 4883F900                	cmp rcx, 0
 12268 000083A8 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000c
 12269 000083AA 4D8B18                  	mov r11, qword [r8]
 12270 000083AD 4D891A                  	mov qword [r10], r11
 12271 000083B0 4983E808                	sub r8, 8
 12272 000083B4 4983EA08                	sub r10, 8
 12273 000083B8 48FFC9                  	dec rcx
 12274 000083BB EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12275                                  .L_lambda_opt_stack_shrink_loop_exit_000c:
 12276 000083BD 4983C208                	add r10, 8
 12277 000083C1 4C89D4                  	mov rsp, r10
 12278                                  .L_lambda_opt_stack_adjusted_000c:;continue with the code, the stack is ok
 12279 000083C4 48C744241001000000      	mov qword [rsp + 8*2], 1
 12280 000083CD C8000000                	enter 0, 0
 12281                                  	; preparing a tail-call
 12282 000083D1 488B4520                	mov rax, PARAM(0)	; param s
 12283 000083D5 50                      	push rax
 12284 000083D6 48B8-                   	mov rax, L_constants + 2270
 12284 000083D8 [DE08000000000000] 
 12285 000083E0 50                      	push rax
 12286 000083E1 488B4510                	mov rax, ENV
 12287 000083E5 488B00                  	mov rax, qword [rax + 8 * 0]
 12288 000083E8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12289 000083EB 50                      	push rax
 12290 000083EC 6A03                    	push 3	; arg count
 12291 000083EE 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12292 000083F6 803805                  	cmp byte [rax], T_undefined
 12293 000083F9 0F84C9F00000            	je L_error_fvar_undefined
 12294 000083FF 803804                  	cmp byte [rax], T_closure
 12295 00008402 0F8544F10000            	jne L_error_non_closure
 12296 00008408 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12297 0000840B FF7508                  	push qword [rbp + 8 * 1]
 12298                                   ; old ret addr
 12299 0000840E FF7500                  	push qword [rbp]
 12300                                   ; restore the old rbp
 12301 00008411 BB03000000              	mov rbx, 3
 12302 00008416 4883C303                	add rbx, 3
 12303 0000841A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12304 0000841E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12305 00008423 4C8D4DF8                	lea r9, [rbp - 8]
 12306 00008427 B907000000              	mov rcx, 7
 12307                                  .L_tc_recycle_frame_loop_0066:
 12308 0000842C 4883F900                	cmp rcx, 0
 12309 00008430 7413                    	je .L_tc_recycle_frame_done_0066
 12310 00008432 4D8B11                  	mov r10, qword [r9]
 12311 00008435 4D8910                  	mov qword [r8], r10
 12312 00008438 4983E808                	sub r8, 8
 12313 0000843C 4983E908                	sub r9, 8
 12314 00008440 48FFC9                  	dec rcx
 12315 00008443 EBE7                    	jmp .L_tc_recycle_frame_loop_0066
 12316                                  .L_tc_recycle_frame_done_0066:
 12317 00008445 498D6008                	lea rsp, [r8 + 8]
 12318 00008449 5D                      	pop rbp ; restore the old rbp
 12319 0000844A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12320 0000844D C9                      	leave
 12321 0000844E C21800                  	ret 8 * (2 + 1)
 12322                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12323 00008451 C9                      	leave
 12324 00008452 C21800                  	ret AND_KILL_FRAME(1)
 12325                                  .L_lambda_simple_end_0040:	; new closure is in rax
 12326 00008455 803804                  	cmp byte [rax], T_closure
 12327 00008458 0F85EEF00000            	jne L_error_non_closure
 12328 0000845E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12329 00008461 FF7508                  	push qword [rbp + 8 * 1]
 12330                                   ; old ret addr
 12331 00008464 FF7500                  	push qword [rbp]
 12332                                   ; restore the old rbp
 12333 00008467 BB01000000              	mov rbx, 1
 12334 0000846C 4883C303                	add rbx, 3
 12335 00008470 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12336 00008474 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12337 00008479 4C8D4DF8                	lea r9, [rbp - 8]
 12338 0000847D B905000000              	mov rcx, 5
 12339                                  .L_tc_recycle_frame_loop_0058:
 12340 00008482 4883F900                	cmp rcx, 0
 12341 00008486 7413                    	je .L_tc_recycle_frame_done_0058
 12342 00008488 4D8B11                  	mov r10, qword [r9]
 12343 0000848B 4D8910                  	mov qword [r8], r10
 12344 0000848E 4983E808                	sub r8, 8
 12345 00008492 4983E908                	sub r9, 8
 12346 00008496 48FFC9                  	dec rcx
 12347 00008499 EBE7                    	jmp .L_tc_recycle_frame_loop_0058
 12348                                  .L_tc_recycle_frame_done_0058:
 12349 0000849B 498D6008                	lea rsp, [r8 + 8]
 12350 0000849F 5D                      	pop rbp ; restore the old rbp
 12351 000084A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12352 000084A3 C9                      	leave
 12353 000084A4 C21800                  	ret AND_KILL_FRAME(1)
 12354                                  .L_lambda_simple_end_003e:	; new closure is in rax
 12355 000084A7 803804                  	cmp byte [rax], T_closure
 12356 000084AA 0F859CF00000            	jne L_error_non_closure
 12357 000084B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12358 000084B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12359 000084B6 48890425[C50D0000]      	mov qword [free_var_0], rax
 12360 000084BE 48B8-                   	mov rax, sob_void
 12360 000084C0 [0000000000000000] 
 12361                                  
 12362 000084C8 4889C7                  	mov rdi, rax
 12363 000084CB E87AF30000              	call print_sexpr_if_not_void
 12364                                  	; preparing a non-tail-call
 12365 000084D0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12366 000084D5 E81BF10000              	call malloc
 12367 000084DA 50                      	push rax
 12368 000084DB BF00000000              	mov rdi, 8 * 0	; new rib
 12369 000084E0 E810F10000              	call malloc
 12370 000084E5 50                      	push rax
 12371 000084E6 BF08000000              	mov rdi, 8 * 1	; extended env
 12372 000084EB E805F10000              	call malloc
 12373 000084F0 488B7D10                	mov rdi, ENV
 12374 000084F4 BE00000000              	mov rsi, 0
 12375 000084F9 BA01000000              	mov rdx, 1
 12376                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 12377 000084FE 4883FE00                	cmp rsi, 0
 12378 00008502 7410                    	je .L_lambda_simple_env_end_0041
 12379 00008504 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12380 00008508 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12381 0000850C 48FFC6                  	inc rsi
 12382 0000850F 48FFC2                  	inc rdx
 12383 00008512 EBEA                    	jmp .L_lambda_simple_env_loop_0041
 12384                                  .L_lambda_simple_env_end_0041:
 12385 00008514 5B                      	pop rbx
 12386 00008515 BE00000000              	mov rsi, 0
 12387                                  .L_lambda_simple_params_loop_0041:	; copy params
 12388 0000851A 4883FE00                	cmp rsi, 0
 12389 0000851E 740E                    	je .L_lambda_simple_params_end_0041
 12390 00008520 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12391 00008525 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12392 00008529 48FFC6                  	inc rsi
 12393 0000852C EBEC                    	jmp .L_lambda_simple_params_loop_0041
 12394                                  .L_lambda_simple_params_end_0041:
 12395 0000852E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12396 00008531 4889C3                  	mov rbx, rax
 12397 00008534 58                      	pop rax
 12398 00008535 C60004                  	mov byte [rax], T_closure
 12399 00008538 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12400 0000853C 48C74009[49850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 12401 00008544 E992000000              	jmp .L_lambda_simple_end_0041
 12402                                  .L_lambda_simple_code_0041:	; lambda-simple body
 12403 00008549 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12404 0000854F 740B                    	je .L_lambda_simple_arity_check_ok_0041
 12405 00008551 FF742410                	push qword [rsp + 8 * 2]
 12406 00008555 6A00                    	push 0
 12407 00008557 E952F00000              	jmp L_error_incorrect_arity_simple
 12408                                  .L_lambda_simple_arity_check_ok_0041:
 12409 0000855C C8000000                	enter 0, 0
 12410                                  	; preparing a tail-call
 12411 00008560 48B8-                   	mov rax, L_constants + 2187
 12411 00008562 [8B08000000000000] 
 12412 0000856A 50                      	push rax
 12413 0000856B 48B8-                   	mov rax, L_constants + 2298
 12413 0000856D [FA08000000000000] 
 12414 00008575 50                      	push rax
 12415 00008576 6A02                    	push 2	; arg count
 12416 00008578 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 12417 00008580 803805                  	cmp byte [rax], T_undefined
 12418 00008583 0F843FEF0000            	je L_error_fvar_undefined
 12419 00008589 803804                  	cmp byte [rax], T_closure
 12420 0000858C 0F85BAEF0000            	jne L_error_non_closure
 12421 00008592 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12422 00008595 FF7508                  	push qword [rbp + 8 * 1]
 12423                                   ; old ret addr
 12424 00008598 FF7500                  	push qword [rbp]
 12425                                   ; restore the old rbp
 12426 0000859B BB02000000              	mov rbx, 2
 12427 000085A0 4883C303                	add rbx, 3
 12428 000085A4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12429 000085A8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12430 000085AD 4C8D4DF8                	lea r9, [rbp - 8]
 12431 000085B1 B906000000              	mov rcx, 6
 12432                                  .L_tc_recycle_frame_loop_0067:
 12433 000085B6 4883F900                	cmp rcx, 0
 12434 000085BA 7413                    	je .L_tc_recycle_frame_done_0067
 12435 000085BC 4D8B11                  	mov r10, qword [r9]
 12436 000085BF 4D8910                  	mov qword [r8], r10
 12437 000085C2 4983E808                	sub r8, 8
 12438 000085C6 4983E908                	sub r9, 8
 12439 000085CA 48FFC9                  	dec rcx
 12440 000085CD EBE7                    	jmp .L_tc_recycle_frame_loop_0067
 12441                                  .L_tc_recycle_frame_done_0067:
 12442 000085CF 498D6008                	lea rsp, [r8 + 8]
 12443 000085D3 5D                      	pop rbp ; restore the old rbp
 12444 000085D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12445 000085D7 C9                      	leave
 12446 000085D8 C21000                  	ret AND_KILL_FRAME(0)
 12447                                  .L_lambda_simple_end_0041:	; new closure is in rax
 12448 000085DB 50                      	push rax
 12449 000085DC 6A01                    	push 1	; arg count
 12450 000085DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12451 000085E3 E80DF00000              	call malloc
 12452 000085E8 50                      	push rax
 12453 000085E9 BF00000000              	mov rdi, 8 * 0	; new rib
 12454 000085EE E802F00000              	call malloc
 12455 000085F3 50                      	push rax
 12456 000085F4 BF08000000              	mov rdi, 8 * 1	; extended env
 12457 000085F9 E8F7EF0000              	call malloc
 12458 000085FE 488B7D10                	mov rdi, ENV
 12459 00008602 BE00000000              	mov rsi, 0
 12460 00008607 BA01000000              	mov rdx, 1
 12461                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 12462 0000860C 4883FE00                	cmp rsi, 0
 12463 00008610 7410                    	je .L_lambda_simple_env_end_0042
 12464 00008612 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12465 00008616 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12466 0000861A 48FFC6                  	inc rsi
 12467 0000861D 48FFC2                  	inc rdx
 12468 00008620 EBEA                    	jmp .L_lambda_simple_env_loop_0042
 12469                                  .L_lambda_simple_env_end_0042:
 12470 00008622 5B                      	pop rbx
 12471 00008623 BE00000000              	mov rsi, 0
 12472                                  .L_lambda_simple_params_loop_0042:	; copy params
 12473 00008628 4883FE00                	cmp rsi, 0
 12474 0000862C 740E                    	je .L_lambda_simple_params_end_0042
 12475 0000862E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12476 00008633 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12477 00008637 48FFC6                  	inc rsi
 12478 0000863A EBEC                    	jmp .L_lambda_simple_params_loop_0042
 12479                                  .L_lambda_simple_params_end_0042:
 12480 0000863C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12481 0000863F 4889C3                  	mov rbx, rax
 12482 00008642 58                      	pop rax
 12483 00008643 C60004                  	mov byte [rax], T_closure
 12484 00008646 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12485 0000864A 48C74009[57860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 12486 00008652 E9B70D0000              	jmp .L_lambda_simple_end_0042
 12487                                  .L_lambda_simple_code_0042:	; lambda-simple body
 12488 00008657 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12489 0000865D 740B                    	je .L_lambda_simple_arity_check_ok_0042
 12490 0000865F FF742410                	push qword [rsp + 8 * 2]
 12491 00008663 6A01                    	push 1
 12492 00008665 E944EF0000              	jmp L_error_incorrect_arity_simple
 12493                                  .L_lambda_simple_arity_check_ok_0042:
 12494 0000866A C8000000                	enter 0, 0
 12495                                  	; preparing a tail-call
 12496 0000866E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12497 00008673 E87DEF0000              	call malloc
 12498 00008678 50                      	push rax
 12499 00008679 BF08000000              	mov rdi, 8 * 1	; new rib
 12500 0000867E E872EF0000              	call malloc
 12501 00008683 50                      	push rax
 12502 00008684 BF10000000              	mov rdi, 8 * 2	; extended env
 12503 00008689 E867EF0000              	call malloc
 12504 0000868E 488B7D10                	mov rdi, ENV
 12505 00008692 BE00000000              	mov rsi, 0
 12506 00008697 BA01000000              	mov rdx, 1
 12507                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 12508 0000869C 4883FE01                	cmp rsi, 1
 12509 000086A0 7410                    	je .L_lambda_simple_env_end_0043
 12510 000086A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12511 000086A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12512 000086AA 48FFC6                  	inc rsi
 12513 000086AD 48FFC2                  	inc rdx
 12514 000086B0 EBEA                    	jmp .L_lambda_simple_env_loop_0043
 12515                                  .L_lambda_simple_env_end_0043:
 12516 000086B2 5B                      	pop rbx
 12517 000086B3 BE00000000              	mov rsi, 0
 12518                                  .L_lambda_simple_params_loop_0043:	; copy params
 12519 000086B8 4883FE01                	cmp rsi, 1
 12520 000086BC 740E                    	je .L_lambda_simple_params_end_0043
 12521 000086BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12522 000086C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12523 000086C7 48FFC6                  	inc rsi
 12524 000086CA EBEC                    	jmp .L_lambda_simple_params_loop_0043
 12525                                  .L_lambda_simple_params_end_0043:
 12526 000086CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12527 000086CF 4889C3                  	mov rbx, rax
 12528 000086D2 58                      	pop rax
 12529 000086D3 C60004                  	mov byte [rax], T_closure
 12530 000086D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12531 000086DA 48C74009[E7860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 12532 000086E2 E9A0080000              	jmp .L_lambda_simple_end_0043
 12533                                  .L_lambda_simple_code_0043:	; lambda-simple body
 12534 000086E7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12535 000086ED 740B                    	je .L_lambda_simple_arity_check_ok_0043
 12536 000086EF FF742410                	push qword [rsp + 8 * 2]
 12537 000086F3 6A02                    	push 2
 12538 000086F5 E9B4EE0000              	jmp L_error_incorrect_arity_simple
 12539                                  .L_lambda_simple_arity_check_ok_0043:
 12540 000086FA C8000000                	enter 0, 0
 12541                                  	; preparing a non-tail-call
 12542 000086FE 488B4520                	mov rax, PARAM(0)	; param a
 12543 00008702 50                      	push rax
 12544 00008703 6A01                    	push 1	; arg count
 12545 00008705 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12546 0000870D 803805                  	cmp byte [rax], T_undefined
 12547 00008710 0F84B2ED0000            	je L_error_fvar_undefined
 12548 00008716 803804                  	cmp byte [rax], T_closure
 12549 00008719 0F852DEE0000            	jne L_error_non_closure
 12550 0000871F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12551 00008722 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12552 00008725 483D[02000000]          	cmp rax, sob_boolean_false
 12553 0000872B 0F8487020000            	je .L_if_else_0041
 12554                                  	; preparing a non-tail-call
 12555 00008731 488B4528                	mov rax, PARAM(1)	; param b
 12556 00008735 50                      	push rax
 12557 00008736 6A01                    	push 1	; arg count
 12558 00008738 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12559 00008740 803805                  	cmp byte [rax], T_undefined
 12560 00008743 0F847FED0000            	je L_error_fvar_undefined
 12561 00008749 803804                  	cmp byte [rax], T_closure
 12562 0000874C 0F85FAED0000            	jne L_error_non_closure
 12563 00008752 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12564 00008755 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12565 00008758 483D[02000000]          	cmp rax, sob_boolean_false
 12566 0000875E 7470                    	je .L_if_else_0038
 12567                                  	; preparing a tail-call
 12568 00008760 488B4528                	mov rax, PARAM(1)	; param b
 12569 00008764 50                      	push rax
 12570 00008765 488B4520                	mov rax, PARAM(0)	; param a
 12571 00008769 50                      	push rax
 12572 0000876A 6A02                    	push 2	; arg count
 12573 0000876C 488B0425[C40E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 12574 00008774 803805                  	cmp byte [rax], T_undefined
 12575 00008777 0F844BED0000            	je L_error_fvar_undefined
 12576 0000877D 803804                  	cmp byte [rax], T_closure
 12577 00008780 0F85C6ED0000            	jne L_error_non_closure
 12578 00008786 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12579 00008789 FF7508                  	push qword [rbp + 8 * 1]
 12580                                   ; old ret addr
 12581 0000878C FF7500                  	push qword [rbp]
 12582                                   ; restore the old rbp
 12583 0000878F BB02000000              	mov rbx, 2
 12584 00008794 4883C303                	add rbx, 3
 12585 00008798 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12586 0000879C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12587 000087A1 4C8D4DF8                	lea r9, [rbp - 8]
 12588 000087A5 B906000000              	mov rcx, 6
 12589                                  .L_tc_recycle_frame_loop_0069:
 12590 000087AA 4883F900                	cmp rcx, 0
 12591 000087AE 7413                    	je .L_tc_recycle_frame_done_0069
 12592 000087B0 4D8B11                  	mov r10, qword [r9]
 12593 000087B3 4D8910                  	mov qword [r8], r10
 12594 000087B6 4983E808                	sub r8, 8
 12595 000087BA 4983E908                	sub r9, 8
 12596 000087BE 48FFC9                  	dec rcx
 12597 000087C1 EBE7                    	jmp .L_tc_recycle_frame_loop_0069
 12598                                  .L_tc_recycle_frame_done_0069:
 12599 000087C3 498D6008                	lea rsp, [r8 + 8]
 12600 000087C7 5D                      	pop rbp ; restore the old rbp
 12601 000087C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12602 000087CB E9E3010000              	jmp .L_if_end_0038
 12603                                  .L_if_else_0038:
 12604                                  	; preparing a non-tail-call
 12605 000087D0 488B4528                	mov rax, PARAM(1)	; param b
 12606 000087D4 50                      	push rax
 12607 000087D5 6A01                    	push 1	; arg count
 12608 000087D7 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12609 000087DF 803805                  	cmp byte [rax], T_undefined
 12610 000087E2 0F84E0EC0000            	je L_error_fvar_undefined
 12611 000087E8 803804                  	cmp byte [rax], T_closure
 12612 000087EB 0F855BED0000            	jne L_error_non_closure
 12613 000087F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12614 000087F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12615 000087F7 483D[02000000]          	cmp rax, sob_boolean_false
 12616 000087FD 0F8493000000            	je .L_if_else_0037
 12617                                  	; preparing a tail-call
 12618 00008803 488B4528                	mov rax, PARAM(1)	; param b
 12619 00008807 50                      	push rax
 12620                                  	; preparing a non-tail-call
 12621 00008808 488B4520                	mov rax, PARAM(0)	; param a
 12622 0000880C 50                      	push rax
 12623 0000880D 6A01                    	push 1	; arg count
 12624 0000880F 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12625 00008817 803805                  	cmp byte [rax], T_undefined
 12626 0000881A 0F84A8EC0000            	je L_error_fvar_undefined
 12627 00008820 803804                  	cmp byte [rax], T_closure
 12628 00008823 0F8523ED0000            	jne L_error_non_closure
 12629 00008829 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12630 0000882C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12631 0000882F 50                      	push rax
 12632 00008830 6A02                    	push 2	; arg count
 12633 00008832 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12634 0000883A 803805                  	cmp byte [rax], T_undefined
 12635 0000883D 0F8485EC0000            	je L_error_fvar_undefined
 12636 00008843 803804                  	cmp byte [rax], T_closure
 12637 00008846 0F8500ED0000            	jne L_error_non_closure
 12638 0000884C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12639 0000884F FF7508                  	push qword [rbp + 8 * 1]
 12640                                   ; old ret addr
 12641 00008852 FF7500                  	push qword [rbp]
 12642                                   ; restore the old rbp
 12643 00008855 BB02000000              	mov rbx, 2
 12644 0000885A 4883C303                	add rbx, 3
 12645 0000885E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12646 00008862 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12647 00008867 4C8D4DF8                	lea r9, [rbp - 8]
 12648 0000886B B906000000              	mov rcx, 6
 12649                                  .L_tc_recycle_frame_loop_006a:
 12650 00008870 4883F900                	cmp rcx, 0
 12651 00008874 7413                    	je .L_tc_recycle_frame_done_006a
 12652 00008876 4D8B11                  	mov r10, qword [r9]
 12653 00008879 4D8910                  	mov qword [r8], r10
 12654 0000887C 4983E808                	sub r8, 8
 12655 00008880 4983E908                	sub r9, 8
 12656 00008884 48FFC9                  	dec rcx
 12657 00008887 EBE7                    	jmp .L_tc_recycle_frame_loop_006a
 12658                                  .L_tc_recycle_frame_done_006a:
 12659 00008889 498D6008                	lea rsp, [r8 + 8]
 12660 0000888D 5D                      	pop rbp ; restore the old rbp
 12661 0000888E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12662 00008891 E91D010000              	jmp .L_if_end_0037
 12663                                  .L_if_else_0037:
 12664                                  	; preparing a non-tail-call
 12665 00008896 488B4528                	mov rax, PARAM(1)	; param b
 12666 0000889A 50                      	push rax
 12667 0000889B 6A01                    	push 1	; arg count
 12668 0000889D 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12669 000088A5 803805                  	cmp byte [rax], T_undefined
 12670 000088A8 0F841AEC0000            	je L_error_fvar_undefined
 12671 000088AE 803804                  	cmp byte [rax], T_closure
 12672 000088B1 0F8595EC0000            	jne L_error_non_closure
 12673 000088B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12674 000088BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12675 000088BD 483D[02000000]          	cmp rax, sob_boolean_false
 12676 000088C3 0F8490000000            	je .L_if_else_0036
 12677                                  	; preparing a tail-call
 12678 000088C9 488B4528                	mov rax, PARAM(1)	; param b
 12679 000088CD 50                      	push rax
 12680                                  	; preparing a non-tail-call
 12681 000088CE 488B4520                	mov rax, PARAM(0)	; param a
 12682 000088D2 50                      	push rax
 12683 000088D3 6A01                    	push 1	; arg count
 12684 000088D5 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12685 000088DD 803805                  	cmp byte [rax], T_undefined
 12686 000088E0 0F84E2EB0000            	je L_error_fvar_undefined
 12687 000088E6 803804                  	cmp byte [rax], T_closure
 12688 000088E9 0F855DEC0000            	jne L_error_non_closure
 12689 000088EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12690 000088F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12691 000088F5 50                      	push rax
 12692 000088F6 6A02                    	push 2	; arg count
 12693 000088F8 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12694 00008900 803805                  	cmp byte [rax], T_undefined
 12695 00008903 0F84BFEB0000            	je L_error_fvar_undefined
 12696 00008909 803804                  	cmp byte [rax], T_closure
 12697 0000890C 0F853AEC0000            	jne L_error_non_closure
 12698 00008912 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12699 00008915 FF7508                  	push qword [rbp + 8 * 1]
 12700                                   ; old ret addr
 12701 00008918 FF7500                  	push qword [rbp]
 12702                                   ; restore the old rbp
 12703 0000891B BB02000000              	mov rbx, 2
 12704 00008920 4883C303                	add rbx, 3
 12705 00008924 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12706 00008928 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12707 0000892D 4C8D4DF8                	lea r9, [rbp - 8]
 12708 00008931 B906000000              	mov rcx, 6
 12709                                  .L_tc_recycle_frame_loop_006b:
 12710 00008936 4883F900                	cmp rcx, 0
 12711 0000893A 7413                    	je .L_tc_recycle_frame_done_006b
 12712 0000893C 4D8B11                  	mov r10, qword [r9]
 12713 0000893F 4D8910                  	mov qword [r8], r10
 12714 00008942 4983E808                	sub r8, 8
 12715 00008946 4983E908                	sub r9, 8
 12716 0000894A 48FFC9                  	dec rcx
 12717 0000894D EBE7                    	jmp .L_tc_recycle_frame_loop_006b
 12718                                  .L_tc_recycle_frame_done_006b:
 12719 0000894F 498D6008                	lea rsp, [r8 + 8]
 12720 00008953 5D                      	pop rbp ; restore the old rbp
 12721 00008954 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12722 00008957 EB5A                    	jmp .L_if_end_0036
 12723                                  .L_if_else_0036:
 12724                                  	; preparing a tail-call
 12725 00008959 6A00                    	push 0	; arg count
 12726 0000895B 488B4510                	mov rax, ENV
 12727 0000895F 488B00                  	mov rax, qword [rax + 8 * 0]
 12728 00008962 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12729 00008965 803804                  	cmp byte [rax], T_closure
 12730 00008968 0F85DEEB0000            	jne L_error_non_closure
 12731 0000896E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12732 00008971 FF7508                  	push qword [rbp + 8 * 1]
 12733                                   ; old ret addr
 12734 00008974 FF7500                  	push qword [rbp]
 12735                                   ; restore the old rbp
 12736 00008977 BB00000000              	mov rbx, 0
 12737 0000897C 4883C303                	add rbx, 3
 12738 00008980 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12739 00008984 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12740 00008989 4C8D4DF8                	lea r9, [rbp - 8]
 12741 0000898D B904000000              	mov rcx, 4
 12742                                  .L_tc_recycle_frame_loop_006c:
 12743 00008992 4883F900                	cmp rcx, 0
 12744 00008996 7413                    	je .L_tc_recycle_frame_done_006c
 12745 00008998 4D8B11                  	mov r10, qword [r9]
 12746 0000899B 4D8910                  	mov qword [r8], r10
 12747 0000899E 4983E808                	sub r8, 8
 12748 000089A2 4983E908                	sub r9, 8
 12749 000089A6 48FFC9                  	dec rcx
 12750 000089A9 EBE7                    	jmp .L_tc_recycle_frame_loop_006c
 12751                                  .L_tc_recycle_frame_done_006c:
 12752 000089AB 498D6008                	lea rsp, [r8 + 8]
 12753 000089AF 5D                      	pop rbp ; restore the old rbp
 12754 000089B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12755                                  .L_if_end_0036:
 12756                                  .L_if_end_0037:
 12757                                  .L_if_end_0038:
 12758 000089B3 E9CB050000              	jmp .L_if_end_0041
 12759                                  .L_if_else_0041:
 12760                                  	; preparing a non-tail-call
 12761 000089B8 488B4520                	mov rax, PARAM(0)	; param a
 12762 000089BC 50                      	push rax
 12763 000089BD 6A01                    	push 1	; arg count
 12764 000089BF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12765 000089C7 803805                  	cmp byte [rax], T_undefined
 12766 000089CA 0F84F8EA0000            	je L_error_fvar_undefined
 12767 000089D0 803804                  	cmp byte [rax], T_closure
 12768 000089D3 0F8573EB0000            	jne L_error_non_closure
 12769 000089D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12770 000089DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12771 000089DF 483D[02000000]          	cmp rax, sob_boolean_false
 12772 000089E5 0F8487020000            	je .L_if_else_0040
 12773                                  	; preparing a non-tail-call
 12774 000089EB 488B4528                	mov rax, PARAM(1)	; param b
 12775 000089EF 50                      	push rax
 12776 000089F0 6A01                    	push 1	; arg count
 12777 000089F2 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12778 000089FA 803805                  	cmp byte [rax], T_undefined
 12779 000089FD 0F84C5EA0000            	je L_error_fvar_undefined
 12780 00008A03 803804                  	cmp byte [rax], T_closure
 12781 00008A06 0F8540EB0000            	jne L_error_non_closure
 12782 00008A0C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12783 00008A0F FF5009                  	call SOB_CLOSURE_CODE(rax)
 12784 00008A12 483D[02000000]          	cmp rax, sob_boolean_false
 12785 00008A18 0F8493000000            	je .L_if_else_003b
 12786                                  	; preparing a tail-call
 12787                                  	; preparing a non-tail-call
 12788 00008A1E 488B4528                	mov rax, PARAM(1)	; param b
 12789 00008A22 50                      	push rax
 12790 00008A23 6A01                    	push 1	; arg count
 12791 00008A25 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12792 00008A2D 803805                  	cmp byte [rax], T_undefined
 12793 00008A30 0F8492EA0000            	je L_error_fvar_undefined
 12794 00008A36 803804                  	cmp byte [rax], T_closure
 12795 00008A39 0F850DEB0000            	jne L_error_non_closure
 12796 00008A3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12797 00008A42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12798 00008A45 50                      	push rax
 12799 00008A46 488B4520                	mov rax, PARAM(0)	; param a
 12800 00008A4A 50                      	push rax
 12801 00008A4B 6A02                    	push 2	; arg count
 12802 00008A4D 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12803 00008A55 803805                  	cmp byte [rax], T_undefined
 12804 00008A58 0F846AEA0000            	je L_error_fvar_undefined
 12805 00008A5E 803804                  	cmp byte [rax], T_closure
 12806 00008A61 0F85E5EA0000            	jne L_error_non_closure
 12807 00008A67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12808 00008A6A FF7508                  	push qword [rbp + 8 * 1]
 12809                                   ; old ret addr
 12810 00008A6D FF7500                  	push qword [rbp]
 12811                                   ; restore the old rbp
 12812 00008A70 BB02000000              	mov rbx, 2
 12813 00008A75 4883C303                	add rbx, 3
 12814 00008A79 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12815 00008A7D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12816 00008A82 4C8D4DF8                	lea r9, [rbp - 8]
 12817 00008A86 B906000000              	mov rcx, 6
 12818                                  .L_tc_recycle_frame_loop_006d:
 12819 00008A8B 4883F900                	cmp rcx, 0
 12820 00008A8F 7413                    	je .L_tc_recycle_frame_done_006d
 12821 00008A91 4D8B11                  	mov r10, qword [r9]
 12822 00008A94 4D8910                  	mov qword [r8], r10
 12823 00008A97 4983E808                	sub r8, 8
 12824 00008A9B 4983E908                	sub r9, 8
 12825 00008A9F 48FFC9                  	dec rcx
 12826 00008AA2 EBE7                    	jmp .L_tc_recycle_frame_loop_006d
 12827                                  .L_tc_recycle_frame_done_006d:
 12828 00008AA4 498D6008                	lea rsp, [r8 + 8]
 12829 00008AA8 5D                      	pop rbp ; restore the old rbp
 12830 00008AA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12831 00008AAC E9BC010000              	jmp .L_if_end_003b
 12832                                  .L_if_else_003b:
 12833                                  	; preparing a non-tail-call
 12834 00008AB1 488B4528                	mov rax, PARAM(1)	; param b
 12835 00008AB5 50                      	push rax
 12836 00008AB6 6A01                    	push 1	; arg count
 12837 00008AB8 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12838 00008AC0 803805                  	cmp byte [rax], T_undefined
 12839 00008AC3 0F84FFE90000            	je L_error_fvar_undefined
 12840 00008AC9 803804                  	cmp byte [rax], T_closure
 12841 00008ACC 0F857AEA0000            	jne L_error_non_closure
 12842 00008AD2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12843 00008AD5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12844 00008AD8 483D[02000000]          	cmp rax, sob_boolean_false
 12845 00008ADE 7470                    	je .L_if_else_003a
 12846                                  	; preparing a tail-call
 12847 00008AE0 488B4528                	mov rax, PARAM(1)	; param b
 12848 00008AE4 50                      	push rax
 12849 00008AE5 488B4520                	mov rax, PARAM(0)	; param a
 12850 00008AE9 50                      	push rax
 12851 00008AEA 6A02                    	push 2	; arg count
 12852 00008AEC 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12853 00008AF4 803805                  	cmp byte [rax], T_undefined
 12854 00008AF7 0F84CBE90000            	je L_error_fvar_undefined
 12855 00008AFD 803804                  	cmp byte [rax], T_closure
 12856 00008B00 0F8546EA0000            	jne L_error_non_closure
 12857 00008B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12858 00008B09 FF7508                  	push qword [rbp + 8 * 1]
 12859                                   ; old ret addr
 12860 00008B0C FF7500                  	push qword [rbp]
 12861                                   ; restore the old rbp
 12862 00008B0F BB02000000              	mov rbx, 2
 12863 00008B14 4883C303                	add rbx, 3
 12864 00008B18 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12865 00008B1C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12866 00008B21 4C8D4DF8                	lea r9, [rbp - 8]
 12867 00008B25 B906000000              	mov rcx, 6
 12868                                  .L_tc_recycle_frame_loop_006e:
 12869 00008B2A 4883F900                	cmp rcx, 0
 12870 00008B2E 7413                    	je .L_tc_recycle_frame_done_006e
 12871 00008B30 4D8B11                  	mov r10, qword [r9]
 12872 00008B33 4D8910                  	mov qword [r8], r10
 12873 00008B36 4983E808                	sub r8, 8
 12874 00008B3A 4983E908                	sub r9, 8
 12875 00008B3E 48FFC9                  	dec rcx
 12876 00008B41 EBE7                    	jmp .L_tc_recycle_frame_loop_006e
 12877                                  .L_tc_recycle_frame_done_006e:
 12878 00008B43 498D6008                	lea rsp, [r8 + 8]
 12879 00008B47 5D                      	pop rbp ; restore the old rbp
 12880 00008B48 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12881 00008B4B E91D010000              	jmp .L_if_end_003a
 12882                                  .L_if_else_003a:
 12883                                  	; preparing a non-tail-call
 12884 00008B50 488B4528                	mov rax, PARAM(1)	; param b
 12885 00008B54 50                      	push rax
 12886 00008B55 6A01                    	push 1	; arg count
 12887 00008B57 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12888 00008B5F 803805                  	cmp byte [rax], T_undefined
 12889 00008B62 0F8460E90000            	je L_error_fvar_undefined
 12890 00008B68 803804                  	cmp byte [rax], T_closure
 12891 00008B6B 0F85DBE90000            	jne L_error_non_closure
 12892 00008B71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12893 00008B74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12894 00008B77 483D[02000000]          	cmp rax, sob_boolean_false
 12895 00008B7D 0F8490000000            	je .L_if_else_0039
 12896                                  	; preparing a tail-call
 12897 00008B83 488B4528                	mov rax, PARAM(1)	; param b
 12898 00008B87 50                      	push rax
 12899                                  	; preparing a non-tail-call
 12900 00008B88 488B4520                	mov rax, PARAM(0)	; param a
 12901 00008B8C 50                      	push rax
 12902 00008B8D 6A01                    	push 1	; arg count
 12903 00008B8F 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12904 00008B97 803805                  	cmp byte [rax], T_undefined
 12905 00008B9A 0F8428E90000            	je L_error_fvar_undefined
 12906 00008BA0 803804                  	cmp byte [rax], T_closure
 12907 00008BA3 0F85A3E90000            	jne L_error_non_closure
 12908 00008BA9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12909 00008BAC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12910 00008BAF 50                      	push rax
 12911 00008BB0 6A02                    	push 2	; arg count
 12912 00008BB2 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12913 00008BBA 803805                  	cmp byte [rax], T_undefined
 12914 00008BBD 0F8405E90000            	je L_error_fvar_undefined
 12915 00008BC3 803804                  	cmp byte [rax], T_closure
 12916 00008BC6 0F8580E90000            	jne L_error_non_closure
 12917 00008BCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 12918 00008BCF FF7508                  	push qword [rbp + 8 * 1]
 12919                                   ; old ret addr
 12920 00008BD2 FF7500                  	push qword [rbp]
 12921                                   ; restore the old rbp
 12922 00008BD5 BB02000000              	mov rbx, 2
 12923 00008BDA 4883C303                	add rbx, 3
 12924 00008BDE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12925 00008BE2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12926 00008BE7 4C8D4DF8                	lea r9, [rbp - 8]
 12927 00008BEB B906000000              	mov rcx, 6
 12928                                  .L_tc_recycle_frame_loop_006f:
 12929 00008BF0 4883F900                	cmp rcx, 0
 12930 00008BF4 7413                    	je .L_tc_recycle_frame_done_006f
 12931 00008BF6 4D8B11                  	mov r10, qword [r9]
 12932 00008BF9 4D8910                  	mov qword [r8], r10
 12933 00008BFC 4983E808                	sub r8, 8
 12934 00008C00 4983E908                	sub r9, 8
 12935 00008C04 48FFC9                  	dec rcx
 12936 00008C07 EBE7                    	jmp .L_tc_recycle_frame_loop_006f
 12937                                  .L_tc_recycle_frame_done_006f:
 12938 00008C09 498D6008                	lea rsp, [r8 + 8]
 12939 00008C0D 5D                      	pop rbp ; restore the old rbp
 12940 00008C0E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12941 00008C11 EB5A                    	jmp .L_if_end_0039
 12942                                  .L_if_else_0039:
 12943                                  	; preparing a tail-call
 12944 00008C13 6A00                    	push 0	; arg count
 12945 00008C15 488B4510                	mov rax, ENV
 12946 00008C19 488B00                  	mov rax, qword [rax + 8 * 0]
 12947 00008C1C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12948 00008C1F 803804                  	cmp byte [rax], T_closure
 12949 00008C22 0F8524E90000            	jne L_error_non_closure
 12950 00008C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12951 00008C2B FF7508                  	push qword [rbp + 8 * 1]
 12952                                   ; old ret addr
 12953 00008C2E FF7500                  	push qword [rbp]
 12954                                   ; restore the old rbp
 12955 00008C31 BB00000000              	mov rbx, 0
 12956 00008C36 4883C303                	add rbx, 3
 12957 00008C3A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12958 00008C3E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12959 00008C43 4C8D4DF8                	lea r9, [rbp - 8]
 12960 00008C47 B904000000              	mov rcx, 4
 12961                                  .L_tc_recycle_frame_loop_0070:
 12962 00008C4C 4883F900                	cmp rcx, 0
 12963 00008C50 7413                    	je .L_tc_recycle_frame_done_0070
 12964 00008C52 4D8B11                  	mov r10, qword [r9]
 12965 00008C55 4D8910                  	mov qword [r8], r10
 12966 00008C58 4983E808                	sub r8, 8
 12967 00008C5C 4983E908                	sub r9, 8
 12968 00008C60 48FFC9                  	dec rcx
 12969 00008C63 EBE7                    	jmp .L_tc_recycle_frame_loop_0070
 12970                                  .L_tc_recycle_frame_done_0070:
 12971 00008C65 498D6008                	lea rsp, [r8 + 8]
 12972 00008C69 5D                      	pop rbp ; restore the old rbp
 12973 00008C6A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12974                                  .L_if_end_0039:
 12975                                  .L_if_end_003a:
 12976                                  .L_if_end_003b:
 12977 00008C6D E911030000              	jmp .L_if_end_0040
 12978                                  .L_if_else_0040:
 12979                                  	; preparing a non-tail-call
 12980 00008C72 488B4520                	mov rax, PARAM(0)	; param a
 12981 00008C76 50                      	push rax
 12982 00008C77 6A01                    	push 1	; arg count
 12983 00008C79 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12984 00008C81 803805                  	cmp byte [rax], T_undefined
 12985 00008C84 0F843EE80000            	je L_error_fvar_undefined
 12986 00008C8A 803804                  	cmp byte [rax], T_closure
 12987 00008C8D 0F85B9E80000            	jne L_error_non_closure
 12988 00008C93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12989 00008C96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12990 00008C99 483D[02000000]          	cmp rax, sob_boolean_false
 12991 00008C9F 0F8484020000            	je .L_if_else_003f
 12992                                  	; preparing a non-tail-call
 12993 00008CA5 488B4528                	mov rax, PARAM(1)	; param b
 12994 00008CA9 50                      	push rax
 12995 00008CAA 6A01                    	push 1	; arg count
 12996 00008CAC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12997 00008CB4 803805                  	cmp byte [rax], T_undefined
 12998 00008CB7 0F840BE80000            	je L_error_fvar_undefined
 12999 00008CBD 803804                  	cmp byte [rax], T_closure
 13000 00008CC0 0F8586E80000            	jne L_error_non_closure
 13001 00008CC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13002 00008CC9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13003 00008CCC 483D[02000000]          	cmp rax, sob_boolean_false
 13004 00008CD2 0F8493000000            	je .L_if_else_003e
 13005                                  	; preparing a tail-call
 13006                                  	; preparing a non-tail-call
 13007 00008CD8 488B4528                	mov rax, PARAM(1)	; param b
 13008 00008CDC 50                      	push rax
 13009 00008CDD 6A01                    	push 1	; arg count
 13010 00008CDF 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13011 00008CE7 803805                  	cmp byte [rax], T_undefined
 13012 00008CEA 0F84D8E70000            	je L_error_fvar_undefined
 13013 00008CF0 803804                  	cmp byte [rax], T_closure
 13014 00008CF3 0F8553E80000            	jne L_error_non_closure
 13015 00008CF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13016 00008CFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 13017 00008CFF 50                      	push rax
 13018 00008D00 488B4520                	mov rax, PARAM(0)	; param a
 13019 00008D04 50                      	push rax
 13020 00008D05 6A02                    	push 2	; arg count
 13021 00008D07 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13022 00008D0F 803805                  	cmp byte [rax], T_undefined
 13023 00008D12 0F84B0E70000            	je L_error_fvar_undefined
 13024 00008D18 803804                  	cmp byte [rax], T_closure
 13025 00008D1B 0F852BE80000            	jne L_error_non_closure
 13026 00008D21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13027 00008D24 FF7508                  	push qword [rbp + 8 * 1]
 13028                                   ; old ret addr
 13029 00008D27 FF7500                  	push qword [rbp]
 13030                                   ; restore the old rbp
 13031 00008D2A BB02000000              	mov rbx, 2
 13032 00008D2F 4883C303                	add rbx, 3
 13033 00008D33 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13034 00008D37 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13035 00008D3C 4C8D4DF8                	lea r9, [rbp - 8]
 13036 00008D40 B906000000              	mov rcx, 6
 13037                                  .L_tc_recycle_frame_loop_0071:
 13038 00008D45 4883F900                	cmp rcx, 0
 13039 00008D49 7413                    	je .L_tc_recycle_frame_done_0071
 13040 00008D4B 4D8B11                  	mov r10, qword [r9]
 13041 00008D4E 4D8910                  	mov qword [r8], r10
 13042 00008D51 4983E808                	sub r8, 8
 13043 00008D55 4983E908                	sub r9, 8
 13044 00008D59 48FFC9                  	dec rcx
 13045 00008D5C EBE7                    	jmp .L_tc_recycle_frame_loop_0071
 13046                                  .L_tc_recycle_frame_done_0071:
 13047 00008D5E 498D6008                	lea rsp, [r8 + 8]
 13048 00008D62 5D                      	pop rbp ; restore the old rbp
 13049 00008D63 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13050 00008D66 E9BC010000              	jmp .L_if_end_003e
 13051                                  .L_if_else_003e:
 13052                                  	; preparing a non-tail-call
 13053 00008D6B 488B4528                	mov rax, PARAM(1)	; param b
 13054 00008D6F 50                      	push rax
 13055 00008D70 6A01                    	push 1	; arg count
 13056 00008D72 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13057 00008D7A 803805                  	cmp byte [rax], T_undefined
 13058 00008D7D 0F8445E70000            	je L_error_fvar_undefined
 13059 00008D83 803804                  	cmp byte [rax], T_closure
 13060 00008D86 0F85C0E70000            	jne L_error_non_closure
 13061 00008D8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13062 00008D8F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13063 00008D92 483D[02000000]          	cmp rax, sob_boolean_false
 13064 00008D98 0F8493000000            	je .L_if_else_003d
 13065                                  	; preparing a tail-call
 13066                                  	; preparing a non-tail-call
 13067 00008D9E 488B4528                	mov rax, PARAM(1)	; param b
 13068 00008DA2 50                      	push rax
 13069 00008DA3 6A01                    	push 1	; arg count
 13070 00008DA5 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13071 00008DAD 803805                  	cmp byte [rax], T_undefined
 13072 00008DB0 0F8412E70000            	je L_error_fvar_undefined
 13073 00008DB6 803804                  	cmp byte [rax], T_closure
 13074 00008DB9 0F858DE70000            	jne L_error_non_closure
 13075 00008DBF FF7001                  	push SOB_CLOSURE_ENV(rax)
 13076 00008DC2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13077 00008DC5 50                      	push rax
 13078 00008DC6 488B4520                	mov rax, PARAM(0)	; param a
 13079 00008DCA 50                      	push rax
 13080 00008DCB 6A02                    	push 2	; arg count
 13081 00008DCD 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13082 00008DD5 803805                  	cmp byte [rax], T_undefined
 13083 00008DD8 0F84EAE60000            	je L_error_fvar_undefined
 13084 00008DDE 803804                  	cmp byte [rax], T_closure
 13085 00008DE1 0F8565E70000            	jne L_error_non_closure
 13086 00008DE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13087 00008DEA FF7508                  	push qword [rbp + 8 * 1]
 13088                                   ; old ret addr
 13089 00008DED FF7500                  	push qword [rbp]
 13090                                   ; restore the old rbp
 13091 00008DF0 BB02000000              	mov rbx, 2
 13092 00008DF5 4883C303                	add rbx, 3
 13093 00008DF9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13094 00008DFD 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13095 00008E02 4C8D4DF8                	lea r9, [rbp - 8]
 13096 00008E06 B906000000              	mov rcx, 6
 13097                                  .L_tc_recycle_frame_loop_0072:
 13098 00008E0B 4883F900                	cmp rcx, 0
 13099 00008E0F 7413                    	je .L_tc_recycle_frame_done_0072
 13100 00008E11 4D8B11                  	mov r10, qword [r9]
 13101 00008E14 4D8910                  	mov qword [r8], r10
 13102 00008E17 4983E808                	sub r8, 8
 13103 00008E1B 4983E908                	sub r9, 8
 13104 00008E1F 48FFC9                  	dec rcx
 13105 00008E22 EBE7                    	jmp .L_tc_recycle_frame_loop_0072
 13106                                  .L_tc_recycle_frame_done_0072:
 13107 00008E24 498D6008                	lea rsp, [r8 + 8]
 13108 00008E28 5D                      	pop rbp ; restore the old rbp
 13109 00008E29 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13110 00008E2C E9F6000000              	jmp .L_if_end_003d
 13111                                  .L_if_else_003d:
 13112                                  	; preparing a non-tail-call
 13113 00008E31 488B4528                	mov rax, PARAM(1)	; param b
 13114 00008E35 50                      	push rax
 13115 00008E36 6A01                    	push 1	; arg count
 13116 00008E38 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13117 00008E40 803805                  	cmp byte [rax], T_undefined
 13118 00008E43 0F847FE60000            	je L_error_fvar_undefined
 13119 00008E49 803804                  	cmp byte [rax], T_closure
 13120 00008E4C 0F85FAE60000            	jne L_error_non_closure
 13121 00008E52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13122 00008E55 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13123 00008E58 483D[02000000]          	cmp rax, sob_boolean_false
 13124 00008E5E 746D                    	je .L_if_else_003c
 13125                                  	; preparing a tail-call
 13126 00008E60 488B4528                	mov rax, PARAM(1)	; param b
 13127 00008E64 50                      	push rax
 13128 00008E65 488B4520                	mov rax, PARAM(0)	; param a
 13129 00008E69 50                      	push rax
 13130 00008E6A 6A02                    	push 2	; arg count
 13131 00008E6C 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13132 00008E74 803805                  	cmp byte [rax], T_undefined
 13133 00008E77 0F844BE60000            	je L_error_fvar_undefined
 13134 00008E7D 803804                  	cmp byte [rax], T_closure
 13135 00008E80 0F85C6E60000            	jne L_error_non_closure
 13136 00008E86 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13137 00008E89 FF7508                  	push qword [rbp + 8 * 1]
 13138                                   ; old ret addr
 13139 00008E8C FF7500                  	push qword [rbp]
 13140                                   ; restore the old rbp
 13141 00008E8F BB02000000              	mov rbx, 2
 13142 00008E94 4883C303                	add rbx, 3
 13143 00008E98 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13144 00008E9C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13145 00008EA1 4C8D4DF8                	lea r9, [rbp - 8]
 13146 00008EA5 B906000000              	mov rcx, 6
 13147                                  .L_tc_recycle_frame_loop_0073:
 13148 00008EAA 4883F900                	cmp rcx, 0
 13149 00008EAE 7413                    	je .L_tc_recycle_frame_done_0073
 13150 00008EB0 4D8B11                  	mov r10, qword [r9]
 13151 00008EB3 4D8910                  	mov qword [r8], r10
 13152 00008EB6 4983E808                	sub r8, 8
 13153 00008EBA 4983E908                	sub r9, 8
 13154 00008EBE 48FFC9                  	dec rcx
 13155 00008EC1 EBE7                    	jmp .L_tc_recycle_frame_loop_0073
 13156                                  .L_tc_recycle_frame_done_0073:
 13157 00008EC3 498D6008                	lea rsp, [r8 + 8]
 13158 00008EC7 5D                      	pop rbp ; restore the old rbp
 13159 00008EC8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13160 00008ECB EB5A                    	jmp .L_if_end_003c
 13161                                  .L_if_else_003c:
 13162                                  	; preparing a tail-call
 13163 00008ECD 6A00                    	push 0	; arg count
 13164 00008ECF 488B4510                	mov rax, ENV
 13165 00008ED3 488B00                  	mov rax, qword [rax + 8 * 0]
 13166 00008ED6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13167 00008ED9 803804                  	cmp byte [rax], T_closure
 13168 00008EDC 0F856AE60000            	jne L_error_non_closure
 13169 00008EE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13170 00008EE5 FF7508                  	push qword [rbp + 8 * 1]
 13171                                   ; old ret addr
 13172 00008EE8 FF7500                  	push qword [rbp]
 13173                                   ; restore the old rbp
 13174 00008EEB BB00000000              	mov rbx, 0
 13175 00008EF0 4883C303                	add rbx, 3
 13176 00008EF4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13177 00008EF8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13178 00008EFD 4C8D4DF8                	lea r9, [rbp - 8]
 13179 00008F01 B904000000              	mov rcx, 4
 13180                                  .L_tc_recycle_frame_loop_0074:
 13181 00008F06 4883F900                	cmp rcx, 0
 13182 00008F0A 7413                    	je .L_tc_recycle_frame_done_0074
 13183 00008F0C 4D8B11                  	mov r10, qword [r9]
 13184 00008F0F 4D8910                  	mov qword [r8], r10
 13185 00008F12 4983E808                	sub r8, 8
 13186 00008F16 4983E908                	sub r9, 8
 13187 00008F1A 48FFC9                  	dec rcx
 13188 00008F1D EBE7                    	jmp .L_tc_recycle_frame_loop_0074
 13189                                  .L_tc_recycle_frame_done_0074:
 13190 00008F1F 498D6008                	lea rsp, [r8 + 8]
 13191 00008F23 5D                      	pop rbp ; restore the old rbp
 13192 00008F24 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13193                                  .L_if_end_003c:
 13194                                  .L_if_end_003d:
 13195                                  .L_if_end_003e:
 13196 00008F27 EB5A                    	jmp .L_if_end_003f
 13197                                  .L_if_else_003f:
 13198                                  	; preparing a tail-call
 13199 00008F29 6A00                    	push 0	; arg count
 13200 00008F2B 488B4510                	mov rax, ENV
 13201 00008F2F 488B00                  	mov rax, qword [rax + 8 * 0]
 13202 00008F32 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13203 00008F35 803804                  	cmp byte [rax], T_closure
 13204 00008F38 0F850EE60000            	jne L_error_non_closure
 13205 00008F3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13206 00008F41 FF7508                  	push qword [rbp + 8 * 1]
 13207                                   ; old ret addr
 13208 00008F44 FF7500                  	push qword [rbp]
 13209                                   ; restore the old rbp
 13210 00008F47 BB00000000              	mov rbx, 0
 13211 00008F4C 4883C303                	add rbx, 3
 13212 00008F50 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13213 00008F54 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13214 00008F59 4C8D4DF8                	lea r9, [rbp - 8]
 13215 00008F5D B904000000              	mov rcx, 4
 13216                                  .L_tc_recycle_frame_loop_0075:
 13217 00008F62 4883F900                	cmp rcx, 0
 13218 00008F66 7413                    	je .L_tc_recycle_frame_done_0075
 13219 00008F68 4D8B11                  	mov r10, qword [r9]
 13220 00008F6B 4D8910                  	mov qword [r8], r10
 13221 00008F6E 4983E808                	sub r8, 8
 13222 00008F72 4983E908                	sub r9, 8
 13223 00008F76 48FFC9                  	dec rcx
 13224 00008F79 EBE7                    	jmp .L_tc_recycle_frame_loop_0075
 13225                                  .L_tc_recycle_frame_done_0075:
 13226 00008F7B 498D6008                	lea rsp, [r8 + 8]
 13227 00008F7F 5D                      	pop rbp ; restore the old rbp
 13228 00008F80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13229                                  .L_if_end_003f:
 13230                                  .L_if_end_0040:
 13231                                  .L_if_end_0041:
 13232 00008F83 C9                      	leave
 13233 00008F84 C22000                  	ret AND_KILL_FRAME(2)
 13234                                  .L_lambda_simple_end_0043:	; new closure is in rax
 13235 00008F87 50                      	push rax
 13236 00008F88 6A01                    	push 1	; arg count
 13237 00008F8A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13238 00008F8F E861E60000              	call malloc
 13239 00008F94 50                      	push rax
 13240 00008F95 BF08000000              	mov rdi, 8 * 1	; new rib
 13241 00008F9A E856E60000              	call malloc
 13242 00008F9F 50                      	push rax
 13243 00008FA0 BF10000000              	mov rdi, 8 * 2	; extended env
 13244 00008FA5 E84BE60000              	call malloc
 13245 00008FAA 488B7D10                	mov rdi, ENV
 13246 00008FAE BE00000000              	mov rsi, 0
 13247 00008FB3 BA01000000              	mov rdx, 1
 13248                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 13249 00008FB8 4883FE01                	cmp rsi, 1
 13250 00008FBC 7410                    	je .L_lambda_simple_env_end_0044
 13251 00008FBE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13252 00008FC2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13253 00008FC6 48FFC6                  	inc rsi
 13254 00008FC9 48FFC2                  	inc rdx
 13255 00008FCC EBEA                    	jmp .L_lambda_simple_env_loop_0044
 13256                                  .L_lambda_simple_env_end_0044:
 13257 00008FCE 5B                      	pop rbx
 13258 00008FCF BE00000000              	mov rsi, 0
 13259                                  .L_lambda_simple_params_loop_0044:	; copy params
 13260 00008FD4 4883FE01                	cmp rsi, 1
 13261 00008FD8 740E                    	je .L_lambda_simple_params_end_0044
 13262 00008FDA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13263 00008FDF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13264 00008FE3 48FFC6                  	inc rsi
 13265 00008FE6 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 13266                                  .L_lambda_simple_params_end_0044:
 13267 00008FE8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13268 00008FEB 4889C3                  	mov rbx, rax
 13269 00008FEE 58                      	pop rax
 13270 00008FEF C60004                  	mov byte [rax], T_closure
 13271 00008FF2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13272 00008FF6 48C74009[03900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 13273 00008FFE E9B9030000              	jmp .L_lambda_simple_end_0044
 13274                                  .L_lambda_simple_code_0044:	; lambda-simple body
 13275 00009003 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13276 00009009 740B                    	je .L_lambda_simple_arity_check_ok_0044
 13277 0000900B FF742410                	push qword [rsp + 8 * 2]
 13278 0000900F 6A01                    	push 1
 13279 00009011 E998E50000              	jmp L_error_incorrect_arity_simple
 13280                                  .L_lambda_simple_arity_check_ok_0044:
 13281 00009016 C8000000                	enter 0, 0
 13282 0000901A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13283 0000901F E8D1E50000              	call malloc
 13284 00009024 50                      	push rax
 13285 00009025 BF08000000              	mov rdi, 8 * 1	; new rib
 13286 0000902A E8C6E50000              	call malloc
 13287 0000902F 50                      	push rax
 13288 00009030 BF18000000              	mov rdi, 8 * 3	; extended env
 13289 00009035 E8BBE50000              	call malloc
 13290 0000903A 488B7D10                	mov rdi, ENV
 13291 0000903E 4831F6                  	 xor rsi, rsi
 13292 00009041 4831D2                  	 xor rdx, rdx
 13293 00009044 48FFC2                  	inc rdx
 13294                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 13295 00009047 4883FE02                	cmp rsi, 2
 13296 0000904B 7410                    	je .L_lambda_opt_env_end_000d
 13297 0000904D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13298 00009051 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13299 00009055 48FFC6                  	inc rsi
 13300 00009058 48FFC2                  	inc rdx
 13301 0000905B EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13302                                  .L_lambda_opt_env_end_000d:
 13303 0000905D 5B                      	pop rbx
 13304 0000905E 4831F6                  	xor rsi, rsi
 13305                                  .L_lambda_opt_params_loop_000d:	; copy params
 13306 00009061 4883FE01                	cmp rsi, 1
 13307 00009065 740E                    	je .L_lambda_opt_params_end_000d
 13308 00009067 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13309 0000906C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13310 00009070 48FFC6                  	inc rsi
 13311 00009073 EBEC                    	jmp .L_lambda_opt_params_loop_000d
 13312                                  .L_lambda_opt_params_end_000d:
 13313 00009075 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13314 00009078 4889C3                  	mov rbx, rax
 13315 0000907B 58                      	pop rax
 13316 0000907C C60004                  	mov byte [rax], T_closure
 13317 0000907F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13318 00009083 48C74009[90900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13319 0000908B E928030000              	jmp .L_lambda_opt_end_000d
 13320                                  .L_lambda_opt_code_000d:; lambda opt body
 13321 00009090 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13322 00009096 7409                    	je .L_lambda_opt_arity_check_exact_000d
 13323 00009098 7F57                    	jg .L_lambda_opt_arity_check_more_000d
 13324 0000909A 6A01                    	push 1
 13325 0000909C E921E50000              	jmp L_error_incorrect_arity_opt
 13326                                  .L_lambda_opt_arity_check_exact_000d:
 13327 000090A1 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 13328 000090A5 4C894C24F8              	mov qword [rsp -8], r9
 13329 000090AA 4C8B4C2408              	mov r9, qword [rsp +8]
 13330 000090AF 4C890C24                	mov qword [rsp +8 * 0], r9
 13331 000090B3 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 13332 000090B8 4C89C9                  	mov rcx, r9
 13333 000090BB 49FFC1                  	inc r9
 13334 000090BE 4C894C2408              	mov qword [rsp +8], r9
 13335 000090C3 4889E2                  	mov rdx, rsp
 13336 000090C6 4883C218                	add rdx, 24
 13337                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000d:
 13338 000090CA 4883F900                	cmp rcx, 0
 13339 000090CE 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000d
 13340 000090D0 4C8B02                  	mov r8, qword [rdx]
 13341 000090D3 4C8942F8                	mov qword [rdx - 8], r8
 13342 000090D7 4883C208                	add rdx, 8
 13343 000090DB 48FFC9                  	dec rcx
 13344 000090DE EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000d
 13345                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000d:
 13346 000090E0 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 13347 000090E8 4883EC08                	sub rsp, 8
 13348 000090EC E984000000              	jmp .L_lambda_opt_stack_adjusted_000d
 13349                                  .L_lambda_opt_arity_check_more_000d:
 13350 000090F1 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 13351 000090F6 4D89C4                  	mov r12, r8
 13352 000090F9 4C89C1                  	mov rcx, r8
 13353 000090FC 4D8D5002                	lea r10, [r8 + 2] 
 13354 00009100 4883E901                	sub rcx, 1
 13355 00009104 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 13356 00009109 49B9-                   	mov r9, sob_nil
 13356 0000910B [0100000000000000] 
 13357                                  .L_lambda_opt_create_list_of_opt_params_000d:
 13358 00009113 4883F900                	cmp rcx, 0
 13359 00009117 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000d
 13360 00009119 BF11000000              	mov rdi, 17
 13361 0000911E E8D2E40000              	call malloc
 13362 00009123 C60021                  	mov byte [rax], T_pair
 13363 00009126 498B1B                  	mov rbx, qword [r11]
 13364 00009129 48895801                	mov qword [rax +1], rbx
 13365 0000912D 4C894809                	mov qword [rax + 1 + 8], r9
 13366 00009131 4989C1                  	mov r9, rax
 13367 00009134 48FFC9                  	dec rcx
 13368 00009137 4983EB08                	sub r11, 8
 13369 0000913B EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000d
 13370                                  .L_lambda_opt_create_list_of_opt_params_end_000d:
 13371 0000913D 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 13372 00009142 4D8908                  	mov qword [r8], r9
 13373 00009145 4E8D14D500000000        	lea r10, [8 * r10]
 13374 0000914D 4901E2                  	add r10, rsp
 13375 00009150 B905000000              	mov rcx, 4 + 1
 13376                                  .L_lambda_opt_stack_shrink_loop_000d:
 13377 00009155 4883F900                	cmp rcx, 0
 13378 00009159 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000d
 13379 0000915B 4D8B18                  	mov r11, qword [r8]
 13380 0000915E 4D891A                  	mov qword [r10], r11
 13381 00009161 4983E808                	sub r8, 8
 13382 00009165 4983EA08                	sub r10, 8
 13383 00009169 48FFC9                  	dec rcx
 13384 0000916C EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13385                                  .L_lambda_opt_stack_shrink_loop_exit_000d:
 13386 0000916E 4983C208                	add r10, 8
 13387 00009172 4C89D4                  	mov rsp, r10
 13388                                  .L_lambda_opt_stack_adjusted_000d:;continue with the code, the stack is ok
 13389 00009175 48C744241002000000      	mov qword [rsp + 8*2], 2
 13390 0000917E C8000000                	enter 0, 0
 13391                                  	; preparing a non-tail-call
 13392 00009182 488B4528                	mov rax, PARAM(1)	; param s
 13393 00009186 50                      	push rax
 13394 00009187 6A01                    	push 1	; arg count
 13395 00009189 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 13396 00009191 803805                  	cmp byte [rax], T_undefined
 13397 00009194 0F842EE30000            	je L_error_fvar_undefined
 13398 0000919A 803804                  	cmp byte [rax], T_closure
 13399 0000919D 0F85A9E30000            	jne L_error_non_closure
 13400 000091A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13401 000091A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13402 000091A9 483D[02000000]          	cmp rax, sob_boolean_false
 13403 000091AF 746F                    	je .L_if_else_0042
 13404                                  	; preparing a tail-call
 13405 000091B1 488B4520                	mov rax, PARAM(0)	; param a
 13406 000091B5 50                      	push rax
 13407 000091B6 48B8-                   	mov rax, L_constants + 2270
 13407 000091B8 [DE08000000000000] 
 13408 000091C0 50                      	push rax
 13409 000091C1 6A02                    	push 2	; arg count
 13410 000091C3 488B4510                	mov rax, ENV
 13411 000091C7 488B00                  	mov rax, qword [rax + 8 * 0]
 13412 000091CA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13413 000091CD 803804                  	cmp byte [rax], T_closure
 13414 000091D0 0F8576E30000            	jne L_error_non_closure
 13415 000091D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13416 000091D9 FF7508                  	push qword [rbp + 8 * 1]
 13417                                   ; old ret addr
 13418 000091DC FF7500                  	push qword [rbp]
 13419                                   ; restore the old rbp
 13420 000091DF BB02000000              	mov rbx, 2
 13421 000091E4 4883C303                	add rbx, 3
 13422 000091E8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13423 000091EC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13424 000091F1 4C8D4DF8                	lea r9, [rbp - 8]
 13425 000091F5 B906000000              	mov rcx, 6
 13426                                  .L_tc_recycle_frame_loop_0076:
 13427 000091FA 4883F900                	cmp rcx, 0
 13428 000091FE 7413                    	je .L_tc_recycle_frame_done_0076
 13429 00009200 4D8B11                  	mov r10, qword [r9]
 13430 00009203 4D8910                  	mov qword [r8], r10
 13431 00009206 4983E808                	sub r8, 8
 13432 0000920A 4983E908                	sub r9, 8
 13433 0000920E 48FFC9                  	dec rcx
 13434 00009211 EBE7                    	jmp .L_tc_recycle_frame_loop_0076
 13435                                  .L_tc_recycle_frame_done_0076:
 13436 00009213 498D6008                	lea rsp, [r8 + 8]
 13437 00009217 5D                      	pop rbp ; restore the old rbp
 13438 00009218 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13439 0000921B E994010000              	jmp .L_if_end_0042
 13440                                  .L_if_else_0042:
 13441                                  	; preparing a tail-call
 13442                                  	; preparing a non-tail-call
 13443 00009220 488B4528                	mov rax, PARAM(1)	; param s
 13444 00009224 50                      	push rax
 13445 00009225 48B8-                   	mov rax, L_constants + 2270
 13445 00009227 [DE08000000000000] 
 13446 0000922F 50                      	push rax
 13447 00009230 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13448 00009238 803805                  	cmp byte [rax], T_undefined
 13449 0000923B 0F8487E20000            	je L_error_fvar_undefined
 13450 00009241 50                      	push rax
 13451 00009242 6A03                    	push 3	; arg count
 13452 00009244 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13453 0000924C 803805                  	cmp byte [rax], T_undefined
 13454 0000924F 0F8473E20000            	je L_error_fvar_undefined
 13455 00009255 803804                  	cmp byte [rax], T_closure
 13456 00009258 0F85EEE20000            	jne L_error_non_closure
 13457 0000925E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13458 00009261 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13459 00009264 50                      	push rax
 13460 00009265 6A01                    	push 1	; arg count
 13461 00009267 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13462 0000926C E884E30000              	call malloc
 13463 00009271 50                      	push rax
 13464 00009272 BF10000000              	mov rdi, 8 * 2	; new rib
 13465 00009277 E879E30000              	call malloc
 13466 0000927C 50                      	push rax
 13467 0000927D BF20000000              	mov rdi, 8 * 4	; extended env
 13468 00009282 E86EE30000              	call malloc
 13469 00009287 488B7D10                	mov rdi, ENV
 13470 0000928B BE00000000              	mov rsi, 0
 13471 00009290 BA01000000              	mov rdx, 1
 13472                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 13473 00009295 4883FE03                	cmp rsi, 3
 13474 00009299 7410                    	je .L_lambda_simple_env_end_0045
 13475 0000929B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13476 0000929F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13477 000092A3 48FFC6                  	inc rsi
 13478 000092A6 48FFC2                  	inc rdx
 13479 000092A9 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 13480                                  .L_lambda_simple_env_end_0045:
 13481 000092AB 5B                      	pop rbx
 13482 000092AC BE00000000              	mov rsi, 0
 13483                                  .L_lambda_simple_params_loop_0045:	; copy params
 13484 000092B1 4883FE02                	cmp rsi, 2
 13485 000092B5 740E                    	je .L_lambda_simple_params_end_0045
 13486 000092B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13487 000092BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13488 000092C0 48FFC6                  	inc rsi
 13489 000092C3 EBEC                    	jmp .L_lambda_simple_params_loop_0045
 13490                                  .L_lambda_simple_params_end_0045:
 13491 000092C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13492 000092C8 4889C3                  	mov rbx, rax
 13493 000092CB 58                      	pop rax
 13494 000092CC C60004                  	mov byte [rax], T_closure
 13495 000092CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13496 000092D3 48C74009[E0920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 13497 000092DB E986000000              	jmp .L_lambda_simple_end_0045
 13498                                  .L_lambda_simple_code_0045:	; lambda-simple body
 13499 000092E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13500 000092E6 740B                    	je .L_lambda_simple_arity_check_ok_0045
 13501 000092E8 FF742410                	push qword [rsp + 8 * 2]
 13502 000092EC 6A01                    	push 1
 13503 000092EE E9BBE20000              	jmp L_error_incorrect_arity_simple
 13504                                  .L_lambda_simple_arity_check_ok_0045:
 13505 000092F3 C8000000                	enter 0, 0
 13506                                  	; preparing a tail-call
 13507 000092F7 488B4520                	mov rax, PARAM(0)	; param b
 13508 000092FB 50                      	push rax
 13509 000092FC 488B4510                	mov rax, ENV
 13510 00009300 488B00                  	mov rax, qword [rax + 8 * 0]
 13511 00009303 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13512 00009306 50                      	push rax
 13513 00009307 6A02                    	push 2	; arg count
 13514 00009309 488B4510                	mov rax, ENV
 13515 0000930D 488B4008                	mov rax, qword [rax + 8 * 1]
 13516 00009311 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13517 00009314 803804                  	cmp byte [rax], T_closure
 13518 00009317 0F852FE20000            	jne L_error_non_closure
 13519 0000931D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13520 00009320 FF7508                  	push qword [rbp + 8 * 1]
 13521                                   ; old ret addr
 13522 00009323 FF7500                  	push qword [rbp]
 13523                                   ; restore the old rbp
 13524 00009326 BB02000000              	mov rbx, 2
 13525 0000932B 4883C303                	add rbx, 3
 13526 0000932F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13527 00009333 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13528 00009338 4C8D4DF8                	lea r9, [rbp - 8]
 13529 0000933C B906000000              	mov rcx, 6
 13530                                  .L_tc_recycle_frame_loop_0078:
 13531 00009341 4883F900                	cmp rcx, 0
 13532 00009345 7413                    	je .L_tc_recycle_frame_done_0078
 13533 00009347 4D8B11                  	mov r10, qword [r9]
 13534 0000934A 4D8910                  	mov qword [r8], r10
 13535 0000934D 4983E808                	sub r8, 8
 13536 00009351 4983E908                	sub r9, 8
 13537 00009355 48FFC9                  	dec rcx
 13538 00009358 EBE7                    	jmp .L_tc_recycle_frame_loop_0078
 13539                                  .L_tc_recycle_frame_done_0078:
 13540 0000935A 498D6008                	lea rsp, [r8 + 8]
 13541 0000935E 5D                      	pop rbp ; restore the old rbp
 13542 0000935F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13543 00009362 C9                      	leave
 13544 00009363 C21800                  	ret AND_KILL_FRAME(1)
 13545                                  .L_lambda_simple_end_0045:	; new closure is in rax
 13546 00009366 803804                  	cmp byte [rax], T_closure
 13547 00009369 0F85DDE10000            	jne L_error_non_closure
 13548 0000936F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13549 00009372 FF7508                  	push qword [rbp + 8 * 1]
 13550                                   ; old ret addr
 13551 00009375 FF7500                  	push qword [rbp]
 13552                                   ; restore the old rbp
 13553 00009378 BB01000000              	mov rbx, 1
 13554 0000937D 4883C303                	add rbx, 3
 13555 00009381 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13556 00009385 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13557 0000938A 4C8D4DF8                	lea r9, [rbp - 8]
 13558 0000938E B905000000              	mov rcx, 5
 13559                                  .L_tc_recycle_frame_loop_0077:
 13560 00009393 4883F900                	cmp rcx, 0
 13561 00009397 7413                    	je .L_tc_recycle_frame_done_0077
 13562 00009399 4D8B11                  	mov r10, qword [r9]
 13563 0000939C 4D8910                  	mov qword [r8], r10
 13564 0000939F 4983E808                	sub r8, 8
 13565 000093A3 4983E908                	sub r9, 8
 13566 000093A7 48FFC9                  	dec rcx
 13567 000093AA EBE7                    	jmp .L_tc_recycle_frame_loop_0077
 13568                                  .L_tc_recycle_frame_done_0077:
 13569 000093AC 498D6008                	lea rsp, [r8 + 8]
 13570 000093B0 5D                      	pop rbp ; restore the old rbp
 13571 000093B1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13572                                  .L_if_end_0042:
 13573 000093B4 C9                      	leave
 13574 000093B5 C22000                  	ret 8 * (2 + 2)
 13575                                  .L_lambda_opt_end_000d:	; new closure is in rax
 13576 000093B8 C9                      	leave
 13577 000093B9 C21800                  	ret AND_KILL_FRAME(1)
 13578                                  .L_lambda_simple_end_0044:	; new closure is in rax
 13579 000093BC 803804                  	cmp byte [rax], T_closure
 13580 000093BF 0F8587E10000            	jne L_error_non_closure
 13581 000093C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13582 000093C8 FF7508                  	push qword [rbp + 8 * 1]
 13583                                   ; old ret addr
 13584 000093CB FF7500                  	push qword [rbp]
 13585                                   ; restore the old rbp
 13586 000093CE BB01000000              	mov rbx, 1
 13587 000093D3 4883C303                	add rbx, 3
 13588 000093D7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13589 000093DB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13590 000093E0 4C8D4DF8                	lea r9, [rbp - 8]
 13591 000093E4 B905000000              	mov rcx, 5
 13592                                  .L_tc_recycle_frame_loop_0068:
 13593 000093E9 4883F900                	cmp rcx, 0
 13594 000093ED 7413                    	je .L_tc_recycle_frame_done_0068
 13595 000093EF 4D8B11                  	mov r10, qword [r9]
 13596 000093F2 4D8910                  	mov qword [r8], r10
 13597 000093F5 4983E808                	sub r8, 8
 13598 000093F9 4983E908                	sub r9, 8
 13599 000093FD 48FFC9                  	dec rcx
 13600 00009400 EBE7                    	jmp .L_tc_recycle_frame_loop_0068
 13601                                  .L_tc_recycle_frame_done_0068:
 13602 00009402 498D6008                	lea rsp, [r8 + 8]
 13603 00009406 5D                      	pop rbp ; restore the old rbp
 13604 00009407 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13605 0000940A C9                      	leave
 13606 0000940B C21800                  	ret AND_KILL_FRAME(1)
 13607                                  .L_lambda_simple_end_0042:	; new closure is in rax
 13608 0000940E 803804                  	cmp byte [rax], T_closure
 13609 00009411 0F8535E10000            	jne L_error_non_closure
 13610 00009417 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13611 0000941A FF5009                  	call SOB_CLOSURE_CODE(rax)
 13612 0000941D 48890425[F80D0000]      	mov qword [free_var_3], rax
 13613 00009425 48B8-                   	mov rax, sob_void
 13613 00009427 [0000000000000000] 
 13614                                  
 13615 0000942F 4889C7                  	mov rdi, rax
 13616 00009432 E813E40000              	call print_sexpr_if_not_void
 13617 00009437 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13618 0000943C E8B4E10000              	call malloc
 13619 00009441 50                      	push rax
 13620 00009442 BF00000000              	mov rdi, 8 * 0	; new rib
 13621 00009447 E8A9E10000              	call malloc
 13622 0000944C 50                      	push rax
 13623 0000944D BF08000000              	mov rdi, 8 * 1	; extended env
 13624 00009452 E89EE10000              	call malloc
 13625 00009457 488B7D10                	mov rdi, ENV
 13626 0000945B BE00000000              	mov rsi, 0
 13627 00009460 BA01000000              	mov rdx, 1
 13628                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 13629 00009465 4883FE00                	cmp rsi, 0
 13630 00009469 7410                    	je .L_lambda_simple_env_end_0046
 13631 0000946B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13632 0000946F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13633 00009473 48FFC6                  	inc rsi
 13634 00009476 48FFC2                  	inc rdx
 13635 00009479 EBEA                    	jmp .L_lambda_simple_env_loop_0046
 13636                                  .L_lambda_simple_env_end_0046:
 13637 0000947B 5B                      	pop rbx
 13638 0000947C BE00000000              	mov rsi, 0
 13639                                  .L_lambda_simple_params_loop_0046:	; copy params
 13640 00009481 4883FE00                	cmp rsi, 0
 13641 00009485 740E                    	je .L_lambda_simple_params_end_0046
 13642 00009487 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13643 0000948C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13644 00009490 48FFC6                  	inc rsi
 13645 00009493 EBEC                    	jmp .L_lambda_simple_params_loop_0046
 13646                                  .L_lambda_simple_params_end_0046:
 13647 00009495 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13648 00009498 4889C3                  	mov rbx, rax
 13649 0000949B 58                      	pop rax
 13650 0000949C C60004                  	mov byte [rax], T_closure
 13651 0000949F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13652 000094A3 48C74009[B0940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 13653 000094AB E915010000              	jmp .L_lambda_simple_end_0046
 13654                                  .L_lambda_simple_code_0046:	; lambda-simple body
 13655 000094B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13656 000094B6 740B                    	je .L_lambda_simple_arity_check_ok_0046
 13657 000094B8 FF742410                	push qword [rsp + 8 * 2]
 13658 000094BC 6A01                    	push 1
 13659 000094BE E9EBE00000              	jmp L_error_incorrect_arity_simple
 13660                                  .L_lambda_simple_arity_check_ok_0046:
 13661 000094C3 C8000000                	enter 0, 0
 13662                                  	; preparing a non-tail-call
 13663 000094C7 488B4520                	mov rax, PARAM(0)	; param n
 13664 000094CB 50                      	push rax
 13665 000094CC 6A01                    	push 1	; arg count
 13666 000094CE 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 13667 000094D6 803805                  	cmp byte [rax], T_undefined
 13668 000094D9 0F84E9DF0000            	je L_error_fvar_undefined
 13669 000094DF 803804                  	cmp byte [rax], T_closure
 13670 000094E2 0F8564E00000            	jne L_error_non_closure
 13671 000094E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13672 000094EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13673 000094EE 483D[02000000]          	cmp rax, sob_boolean_false
 13674 000094F4 740F                    	je .L_if_else_0043
 13675 000094F6 48B8-                   	mov rax, L_constants + 2270
 13675 000094F8 [DE08000000000000] 
 13676 00009500 E9BC000000              	jmp .L_if_end_0043
 13677                                  .L_if_else_0043:
 13678                                  	; preparing a tail-call
 13679                                  	; preparing a non-tail-call
 13680                                  	; preparing a non-tail-call
 13681 00009505 48B8-                   	mov rax, L_constants + 2270
 13681 00009507 [DE08000000000000] 
 13682 0000950F 50                      	push rax
 13683 00009510 488B4520                	mov rax, PARAM(0)	; param n
 13684 00009514 50                      	push rax
 13685 00009515 6A02                    	push 2	; arg count
 13686 00009517 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 13687 0000951F 803805                  	cmp byte [rax], T_undefined
 13688 00009522 0F84A0DF0000            	je L_error_fvar_undefined
 13689 00009528 803804                  	cmp byte [rax], T_closure
 13690 0000952B 0F851BE00000            	jne L_error_non_closure
 13691 00009531 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13692 00009534 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13693 00009537 50                      	push rax
 13694 00009538 6A01                    	push 1	; arg count
 13695 0000953A 488B0425[59130000]      	mov rax, qword [free_var_84]	; free var fact
 13696 00009542 803805                  	cmp byte [rax], T_undefined
 13697 00009545 0F847DDF0000            	je L_error_fvar_undefined
 13698 0000954B 803804                  	cmp byte [rax], T_closure
 13699 0000954E 0F85F8DF0000            	jne L_error_non_closure
 13700 00009554 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13701 00009557 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13702 0000955A 50                      	push rax
 13703 0000955B 488B4520                	mov rax, PARAM(0)	; param n
 13704 0000955F 50                      	push rax
 13705 00009560 6A02                    	push 2	; arg count
 13706 00009562 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13707 0000956A 803805                  	cmp byte [rax], T_undefined
 13708 0000956D 0F8455DF0000            	je L_error_fvar_undefined
 13709 00009573 803804                  	cmp byte [rax], T_closure
 13710 00009576 0F85D0DF0000            	jne L_error_non_closure
 13711 0000957C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13712 0000957F FF7508                  	push qword [rbp + 8 * 1]
 13713                                   ; old ret addr
 13714 00009582 FF7500                  	push qword [rbp]
 13715                                   ; restore the old rbp
 13716 00009585 BB02000000              	mov rbx, 2
 13717 0000958A 4883C303                	add rbx, 3
 13718 0000958E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13719 00009592 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13720 00009597 4C8D4DF8                	lea r9, [rbp - 8]
 13721 0000959B B906000000              	mov rcx, 6
 13722                                  .L_tc_recycle_frame_loop_0079:
 13723 000095A0 4883F900                	cmp rcx, 0
 13724 000095A4 7413                    	je .L_tc_recycle_frame_done_0079
 13725 000095A6 4D8B11                  	mov r10, qword [r9]
 13726 000095A9 4D8910                  	mov qword [r8], r10
 13727 000095AC 4983E808                	sub r8, 8
 13728 000095B0 4983E908                	sub r9, 8
 13729 000095B4 48FFC9                  	dec rcx
 13730 000095B7 EBE7                    	jmp .L_tc_recycle_frame_loop_0079
 13731                                  .L_tc_recycle_frame_done_0079:
 13732 000095B9 498D6008                	lea rsp, [r8 + 8]
 13733 000095BD 5D                      	pop rbp ; restore the old rbp
 13734 000095BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13735                                  .L_if_end_0043:
 13736 000095C1 C9                      	leave
 13737 000095C2 C21800                  	ret AND_KILL_FRAME(1)
 13738                                  .L_lambda_simple_end_0046:	; new closure is in rax
 13739 000095C5 48890425[59130000]      	mov qword [free_var_84], rax
 13740 000095CD 48B8-                   	mov rax, sob_void
 13740 000095CF [0000000000000000] 
 13741                                  
 13742 000095D7 4889C7                  	mov rdi, rax
 13743 000095DA E86BE20000              	call print_sexpr_if_not_void
 13744 000095DF 48B8-                   	mov rax, L_constants + 0
 13744 000095E1 [0000000000000000] 
 13745 000095E9 48890425[090E0000]      	mov qword [free_var_4], rax
 13746 000095F1 48B8-                   	mov rax, sob_void
 13746 000095F3 [0000000000000000] 
 13747                                  
 13748 000095FB 4889C7                  	mov rdi, rax
 13749 000095FE E847E20000              	call print_sexpr_if_not_void
 13750 00009603 48B8-                   	mov rax, L_constants + 0
 13750 00009605 [0000000000000000] 
 13751 0000960D 48890425[1A0E0000]      	mov qword [free_var_5], rax
 13752 00009615 48B8-                   	mov rax, sob_void
 13752 00009617 [0000000000000000] 
 13753                                  
 13754 0000961F 4889C7                  	mov rdi, rax
 13755 00009622 E823E20000              	call print_sexpr_if_not_void
 13756 00009627 48B8-                   	mov rax, L_constants + 0
 13756 00009629 [0000000000000000] 
 13757 00009631 48890425[3C0E0000]      	mov qword [free_var_7], rax
 13758 00009639 48B8-                   	mov rax, sob_void
 13758 0000963B [0000000000000000] 
 13759                                  
 13760 00009643 4889C7                  	mov rdi, rax
 13761 00009646 E8FFE10000              	call print_sexpr_if_not_void
 13762 0000964B 48B8-                   	mov rax, L_constants + 0
 13762 0000964D [0000000000000000] 
 13763 00009655 48890425[4D0E0000]      	mov qword [free_var_8], rax
 13764 0000965D 48B8-                   	mov rax, sob_void
 13764 0000965F [0000000000000000] 
 13765                                  
 13766 00009667 4889C7                  	mov rdi, rax
 13767 0000966A E8DBE10000              	call print_sexpr_if_not_void
 13768 0000966F 48B8-                   	mov rax, L_constants + 0
 13768 00009671 [0000000000000000] 
 13769 00009679 48890425[2B0E0000]      	mov qword [free_var_6], rax
 13770 00009681 48B8-                   	mov rax, sob_void
 13770 00009683 [0000000000000000] 
 13771                                  
 13772 0000968B 4889C7                  	mov rdi, rax
 13773 0000968E E8B7E10000              	call print_sexpr_if_not_void
 13774                                  	; preparing a non-tail-call
 13775 00009693 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13776 00009698 E858DF0000              	call malloc
 13777 0000969D 50                      	push rax
 13778 0000969E BF00000000              	mov rdi, 8 * 0	; new rib
 13779 000096A3 E84DDF0000              	call malloc
 13780 000096A8 50                      	push rax
 13781 000096A9 BF08000000              	mov rdi, 8 * 1	; extended env
 13782 000096AE E842DF0000              	call malloc
 13783 000096B3 488B7D10                	mov rdi, ENV
 13784 000096B7 BE00000000              	mov rsi, 0
 13785 000096BC BA01000000              	mov rdx, 1
 13786                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 13787 000096C1 4883FE00                	cmp rsi, 0
 13788 000096C5 7410                    	je .L_lambda_simple_env_end_0047
 13789 000096C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13790 000096CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13791 000096CF 48FFC6                  	inc rsi
 13792 000096D2 48FFC2                  	inc rdx
 13793 000096D5 EBEA                    	jmp .L_lambda_simple_env_loop_0047
 13794                                  .L_lambda_simple_env_end_0047:
 13795 000096D7 5B                      	pop rbx
 13796 000096D8 BE00000000              	mov rsi, 0
 13797                                  .L_lambda_simple_params_loop_0047:	; copy params
 13798 000096DD 4883FE00                	cmp rsi, 0
 13799 000096E1 740E                    	je .L_lambda_simple_params_end_0047
 13800 000096E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13801 000096E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13802 000096EC 48FFC6                  	inc rsi
 13803 000096EF EBEC                    	jmp .L_lambda_simple_params_loop_0047
 13804                                  .L_lambda_simple_params_end_0047:
 13805 000096F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13806 000096F4 4889C3                  	mov rbx, rax
 13807 000096F7 58                      	pop rax
 13808 000096F8 C60004                  	mov byte [rax], T_closure
 13809 000096FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13810 000096FF 48C74009[0C970000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 13811 00009707 E992000000              	jmp .L_lambda_simple_end_0047
 13812                                  .L_lambda_simple_code_0047:	; lambda-simple body
 13813 0000970C 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13814 00009712 740B                    	je .L_lambda_simple_arity_check_ok_0047
 13815 00009714 FF742410                	push qword [rsp + 8 * 2]
 13816 00009718 6A00                    	push 0
 13817 0000971A E98FDE0000              	jmp L_error_incorrect_arity_simple
 13818                                  .L_lambda_simple_arity_check_ok_0047:
 13819 0000971F C8000000                	enter 0, 0
 13820                                  	; preparing a tail-call
 13821 00009723 48B8-                   	mov rax, L_constants + 2408
 13821 00009725 [6809000000000000] 
 13822 0000972D 50                      	push rax
 13823 0000972E 48B8-                   	mov rax, L_constants + 2399
 13823 00009730 [5F09000000000000] 
 13824 00009738 50                      	push rax
 13825 00009739 6A02                    	push 2	; arg count
 13826 0000973B 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 13827 00009743 803805                  	cmp byte [rax], T_undefined
 13828 00009746 0F847CDD0000            	je L_error_fvar_undefined
 13829 0000974C 803804                  	cmp byte [rax], T_closure
 13830 0000974F 0F85F7DD0000            	jne L_error_non_closure
 13831 00009755 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13832 00009758 FF7508                  	push qword [rbp + 8 * 1]
 13833                                   ; old ret addr
 13834 0000975B FF7500                  	push qword [rbp]
 13835                                   ; restore the old rbp
 13836 0000975E BB02000000              	mov rbx, 2
 13837 00009763 4883C303                	add rbx, 3
 13838 00009767 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13839 0000976B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13840 00009770 4C8D4DF8                	lea r9, [rbp - 8]
 13841 00009774 B906000000              	mov rcx, 6
 13842                                  .L_tc_recycle_frame_loop_007a:
 13843 00009779 4883F900                	cmp rcx, 0
 13844 0000977D 7413                    	je .L_tc_recycle_frame_done_007a
 13845 0000977F 4D8B11                  	mov r10, qword [r9]
 13846 00009782 4D8910                  	mov qword [r8], r10
 13847 00009785 4983E808                	sub r8, 8
 13848 00009789 4983E908                	sub r9, 8
 13849 0000978D 48FFC9                  	dec rcx
 13850 00009790 EBE7                    	jmp .L_tc_recycle_frame_loop_007a
 13851                                  .L_tc_recycle_frame_done_007a:
 13852 00009792 498D6008                	lea rsp, [r8 + 8]
 13853 00009796 5D                      	pop rbp ; restore the old rbp
 13854 00009797 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13855 0000979A C9                      	leave
 13856 0000979B C21000                  	ret AND_KILL_FRAME(0)
 13857                                  .L_lambda_simple_end_0047:	; new closure is in rax
 13858 0000979E 50                      	push rax
 13859 0000979F 6A01                    	push 1	; arg count
 13860 000097A1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13861 000097A6 E84ADE0000              	call malloc
 13862 000097AB 50                      	push rax
 13863 000097AC BF00000000              	mov rdi, 8 * 0	; new rib
 13864 000097B1 E83FDE0000              	call malloc
 13865 000097B6 50                      	push rax
 13866 000097B7 BF08000000              	mov rdi, 8 * 1	; extended env
 13867 000097BC E834DE0000              	call malloc
 13868 000097C1 488B7D10                	mov rdi, ENV
 13869 000097C5 BE00000000              	mov rsi, 0
 13870 000097CA BA01000000              	mov rdx, 1
 13871                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 13872 000097CF 4883FE00                	cmp rsi, 0
 13873 000097D3 7410                    	je .L_lambda_simple_env_end_0048
 13874 000097D5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13875 000097D9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13876 000097DD 48FFC6                  	inc rsi
 13877 000097E0 48FFC2                  	inc rdx
 13878 000097E3 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 13879                                  .L_lambda_simple_env_end_0048:
 13880 000097E5 5B                      	pop rbx
 13881 000097E6 BE00000000              	mov rsi, 0
 13882                                  .L_lambda_simple_params_loop_0048:	; copy params
 13883 000097EB 4883FE00                	cmp rsi, 0
 13884 000097EF 740E                    	je .L_lambda_simple_params_end_0048
 13885 000097F1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13886 000097F6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13887 000097FA 48FFC6                  	inc rsi
 13888 000097FD EBEC                    	jmp .L_lambda_simple_params_loop_0048
 13889                                  .L_lambda_simple_params_end_0048:
 13890 000097FF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13891 00009802 4889C3                  	mov rbx, rax
 13892 00009805 58                      	pop rax
 13893 00009806 C60004                  	mov byte [rax], T_closure
 13894 00009809 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13895 0000980D 48C74009[1A980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 13896 00009815 E9FD190000              	jmp .L_lambda_simple_end_0048
 13897                                  .L_lambda_simple_code_0048:	; lambda-simple body
 13898 0000981A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13899 00009820 740B                    	je .L_lambda_simple_arity_check_ok_0048
 13900 00009822 FF742410                	push qword [rsp + 8 * 2]
 13901 00009826 6A01                    	push 1
 13902 00009828 E981DD0000              	jmp L_error_incorrect_arity_simple
 13903                                  .L_lambda_simple_arity_check_ok_0048:
 13904 0000982D C8000000                	enter 0, 0
 13905                                  	; preparing a tail-call
 13906 00009831 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13907 00009836 E8BADD0000              	call malloc
 13908 0000983B 50                      	push rax
 13909 0000983C BF08000000              	mov rdi, 8 * 1	; new rib
 13910 00009841 E8AFDD0000              	call malloc
 13911 00009846 50                      	push rax
 13912 00009847 BF10000000              	mov rdi, 8 * 2	; extended env
 13913 0000984C E8A4DD0000              	call malloc
 13914 00009851 488B7D10                	mov rdi, ENV
 13915 00009855 BE00000000              	mov rsi, 0
 13916 0000985A BA01000000              	mov rdx, 1
 13917                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13918 0000985F 4883FE01                	cmp rsi, 1
 13919 00009863 7410                    	je .L_lambda_simple_env_end_0049
 13920 00009865 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13921 00009869 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13922 0000986D 48FFC6                  	inc rsi
 13923 00009870 48FFC2                  	inc rdx
 13924 00009873 EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13925                                  .L_lambda_simple_env_end_0049:
 13926 00009875 5B                      	pop rbx
 13927 00009876 BE00000000              	mov rsi, 0
 13928                                  .L_lambda_simple_params_loop_0049:	; copy params
 13929 0000987B 4883FE01                	cmp rsi, 1
 13930 0000987F 740E                    	je .L_lambda_simple_params_end_0049
 13931 00009881 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13932 00009886 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13933 0000988A 48FFC6                  	inc rsi
 13934 0000988D EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13935                                  .L_lambda_simple_params_end_0049:
 13936 0000988F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13937 00009892 4889C3                  	mov rbx, rax
 13938 00009895 58                      	pop rax
 13939 00009896 C60004                  	mov byte [rax], T_closure
 13940 00009899 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13941 0000989D 48C74009[AA980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13942 000098A5 E901090000              	jmp .L_lambda_simple_end_0049
 13943                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13944 000098AA 48837C241003            	cmp qword [rsp + 8 * 2], 3
 13945 000098B0 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13946 000098B2 FF742410                	push qword [rsp + 8 * 2]
 13947 000098B6 6A03                    	push 3
 13948 000098B8 E9F1DC0000              	jmp L_error_incorrect_arity_simple
 13949                                  .L_lambda_simple_arity_check_ok_0049:
 13950 000098BD C8000000                	enter 0, 0
 13951 000098C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13952 000098C6 E82ADD0000              	call malloc
 13953 000098CB 50                      	push rax
 13954 000098CC BF18000000              	mov rdi, 8 * 3	; new rib
 13955 000098D1 E81FDD0000              	call malloc
 13956 000098D6 50                      	push rax
 13957 000098D7 BF18000000              	mov rdi, 8 * 3	; extended env
 13958 000098DC E814DD0000              	call malloc
 13959 000098E1 488B7D10                	mov rdi, ENV
 13960 000098E5 BE00000000              	mov rsi, 0
 13961 000098EA BA01000000              	mov rdx, 1
 13962                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13963 000098EF 4883FE02                	cmp rsi, 2
 13964 000098F3 7410                    	je .L_lambda_simple_env_end_004a
 13965 000098F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13966 000098F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13967 000098FD 48FFC6                  	inc rsi
 13968 00009900 48FFC2                  	inc rdx
 13969 00009903 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13970                                  .L_lambda_simple_env_end_004a:
 13971 00009905 5B                      	pop rbx
 13972 00009906 BE00000000              	mov rsi, 0
 13973                                  .L_lambda_simple_params_loop_004a:	; copy params
 13974 0000990B 4883FE03                	cmp rsi, 3
 13975 0000990F 740E                    	je .L_lambda_simple_params_end_004a
 13976 00009911 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13977 00009916 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13978 0000991A 48FFC6                  	inc rsi
 13979 0000991D EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13980                                  .L_lambda_simple_params_end_004a:
 13981 0000991F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13982 00009922 4889C3                  	mov rbx, rax
 13983 00009925 58                      	pop rax
 13984 00009926 C60004                  	mov byte [rax], T_closure
 13985 00009929 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13986 0000992D 48C74009[3A990000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 13987 00009935 E96D080000              	jmp .L_lambda_simple_end_004a
 13988                                  .L_lambda_simple_code_004a:	; lambda-simple body
 13989 0000993A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13990 00009940 740B                    	je .L_lambda_simple_arity_check_ok_004a
 13991 00009942 FF742410                	push qword [rsp + 8 * 2]
 13992 00009946 6A02                    	push 2
 13993 00009948 E961DC0000              	jmp L_error_incorrect_arity_simple
 13994                                  .L_lambda_simple_arity_check_ok_004a:
 13995 0000994D C8000000                	enter 0, 0
 13996                                  	; preparing a non-tail-call
 13997 00009951 488B4520                	mov rax, PARAM(0)	; param a
 13998 00009955 50                      	push rax
 13999 00009956 6A01                    	push 1	; arg count
 14000 00009958 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14001 00009960 803805                  	cmp byte [rax], T_undefined
 14002 00009963 0F845FDB0000            	je L_error_fvar_undefined
 14003 00009969 803804                  	cmp byte [rax], T_closure
 14004 0000996C 0F85DADB0000            	jne L_error_non_closure
 14005 00009972 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14006 00009975 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14007 00009978 483D[02000000]          	cmp rax, sob_boolean_false
 14008 0000997E 0F8475020000            	je .L_if_else_004f
 14009                                  	; preparing a non-tail-call
 14010 00009984 488B4528                	mov rax, PARAM(1)	; param b
 14011 00009988 50                      	push rax
 14012 00009989 6A01                    	push 1	; arg count
 14013 0000998B 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14014 00009993 803805                  	cmp byte [rax], T_undefined
 14015 00009996 0F842CDB0000            	je L_error_fvar_undefined
 14016 0000999C 803804                  	cmp byte [rax], T_closure
 14017 0000999F 0F85A7DB0000            	jne L_error_non_closure
 14018 000099A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14019 000099A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14020 000099AB 483D[02000000]          	cmp rax, sob_boolean_false
 14021 000099B1 7469                    	je .L_if_else_0046
 14022                                  	; preparing a tail-call
 14023 000099B3 488B4528                	mov rax, PARAM(1)	; param b
 14024 000099B7 50                      	push rax
 14025 000099B8 488B4520                	mov rax, PARAM(0)	; param a
 14026 000099BC 50                      	push rax
 14027 000099BD 6A02                    	push 2	; arg count
 14028 000099BF 488B4510                	mov rax, ENV
 14029 000099C3 488B00                  	mov rax, qword [rax + 8 * 0]
 14030 000099C6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14031 000099C9 803804                  	cmp byte [rax], T_closure
 14032 000099CC 0F857ADB0000            	jne L_error_non_closure
 14033 000099D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14034 000099D5 FF7508                  	push qword [rbp + 8 * 1]
 14035                                   ; old ret addr
 14036 000099D8 FF7500                  	push qword [rbp]
 14037                                   ; restore the old rbp
 14038 000099DB BB02000000              	mov rbx, 2
 14039 000099E0 4883C303                	add rbx, 3
 14040 000099E4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14041 000099E8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14042 000099ED 4C8D4DF8                	lea r9, [rbp - 8]
 14043 000099F1 B906000000              	mov rcx, 6
 14044                                  .L_tc_recycle_frame_loop_007c:
 14045 000099F6 4883F900                	cmp rcx, 0
 14046 000099FA 7413                    	je .L_tc_recycle_frame_done_007c
 14047 000099FC 4D8B11                  	mov r10, qword [r9]
 14048 000099FF 4D8910                  	mov qword [r8], r10
 14049 00009A02 4983E808                	sub r8, 8
 14050 00009A06 4983E908                	sub r9, 8
 14051 00009A0A 48FFC9                  	dec rcx
 14052 00009A0D EBE7                    	jmp .L_tc_recycle_frame_loop_007c
 14053                                  .L_tc_recycle_frame_done_007c:
 14054 00009A0F 498D6008                	lea rsp, [r8 + 8]
 14055 00009A13 5D                      	pop rbp ; restore the old rbp
 14056 00009A14 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14057 00009A17 E9D8010000              	jmp .L_if_end_0046
 14058                                  .L_if_else_0046:
 14059                                  	; preparing a non-tail-call
 14060 00009A1C 488B4528                	mov rax, PARAM(1)	; param b
 14061 00009A20 50                      	push rax
 14062 00009A21 6A01                    	push 1	; arg count
 14063 00009A23 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14064 00009A2B 803805                  	cmp byte [rax], T_undefined
 14065 00009A2E 0F8494DA0000            	je L_error_fvar_undefined
 14066 00009A34 803804                  	cmp byte [rax], T_closure
 14067 00009A37 0F850FDB0000            	jne L_error_non_closure
 14068 00009A3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14069 00009A40 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14070 00009A43 483D[02000000]          	cmp rax, sob_boolean_false
 14071 00009A49 0F848D000000            	je .L_if_else_0045
 14072                                  	; preparing a tail-call
 14073 00009A4F 488B4528                	mov rax, PARAM(1)	; param b
 14074 00009A53 50                      	push rax
 14075                                  	; preparing a non-tail-call
 14076 00009A54 488B4520                	mov rax, PARAM(0)	; param a
 14077 00009A58 50                      	push rax
 14078 00009A59 6A01                    	push 1	; arg count
 14079 00009A5B 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14080 00009A63 803805                  	cmp byte [rax], T_undefined
 14081 00009A66 0F845CDA0000            	je L_error_fvar_undefined
 14082 00009A6C 803804                  	cmp byte [rax], T_closure
 14083 00009A6F 0F85D7DA0000            	jne L_error_non_closure
 14084 00009A75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14085 00009A78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14086 00009A7B 50                      	push rax
 14087 00009A7C 6A02                    	push 2	; arg count
 14088 00009A7E 488B4510                	mov rax, ENV
 14089 00009A82 488B00                  	mov rax, qword [rax + 8 * 0]
 14090 00009A85 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14091 00009A89 803804                  	cmp byte [rax], T_closure
 14092 00009A8C 0F85BADA0000            	jne L_error_non_closure
 14093 00009A92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14094 00009A95 FF7508                  	push qword [rbp + 8 * 1]
 14095                                   ; old ret addr
 14096 00009A98 FF7500                  	push qword [rbp]
 14097                                   ; restore the old rbp
 14098 00009A9B BB02000000              	mov rbx, 2
 14099 00009AA0 4883C303                	add rbx, 3
 14100 00009AA4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14101 00009AA8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14102 00009AAD 4C8D4DF8                	lea r9, [rbp - 8]
 14103 00009AB1 B906000000              	mov rcx, 6
 14104                                  .L_tc_recycle_frame_loop_007d:
 14105 00009AB6 4883F900                	cmp rcx, 0
 14106 00009ABA 7413                    	je .L_tc_recycle_frame_done_007d
 14107 00009ABC 4D8B11                  	mov r10, qword [r9]
 14108 00009ABF 4D8910                  	mov qword [r8], r10
 14109 00009AC2 4983E808                	sub r8, 8
 14110 00009AC6 4983E908                	sub r9, 8
 14111 00009ACA 48FFC9                  	dec rcx
 14112 00009ACD EBE7                    	jmp .L_tc_recycle_frame_loop_007d
 14113                                  .L_tc_recycle_frame_done_007d:
 14114 00009ACF 498D6008                	lea rsp, [r8 + 8]
 14115 00009AD3 5D                      	pop rbp ; restore the old rbp
 14116 00009AD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14117 00009AD7 E918010000              	jmp .L_if_end_0045
 14118                                  .L_if_else_0045:
 14119                                  	; preparing a non-tail-call
 14120 00009ADC 488B4528                	mov rax, PARAM(1)	; param b
 14121 00009AE0 50                      	push rax
 14122 00009AE1 6A01                    	push 1	; arg count
 14123 00009AE3 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14124 00009AEB 803805                  	cmp byte [rax], T_undefined
 14125 00009AEE 0F84D4D90000            	je L_error_fvar_undefined
 14126 00009AF4 803804                  	cmp byte [rax], T_closure
 14127 00009AF7 0F854FDA0000            	jne L_error_non_closure
 14128 00009AFD FF7001                  	push SOB_CLOSURE_ENV(rax)
 14129 00009B00 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14130 00009B03 483D[02000000]          	cmp rax, sob_boolean_false
 14131 00009B09 0F848A000000            	je .L_if_else_0044
 14132                                  	; preparing a tail-call
 14133 00009B0F 488B4528                	mov rax, PARAM(1)	; param b
 14134 00009B13 50                      	push rax
 14135                                  	; preparing a non-tail-call
 14136 00009B14 488B4520                	mov rax, PARAM(0)	; param a
 14137 00009B18 50                      	push rax
 14138 00009B19 6A01                    	push 1	; arg count
 14139 00009B1B 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14140 00009B23 803805                  	cmp byte [rax], T_undefined
 14141 00009B26 0F849CD90000            	je L_error_fvar_undefined
 14142 00009B2C 803804                  	cmp byte [rax], T_closure
 14143 00009B2F 0F8517DA0000            	jne L_error_non_closure
 14144 00009B35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14145 00009B38 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14146 00009B3B 50                      	push rax
 14147 00009B3C 6A02                    	push 2	; arg count
 14148 00009B3E 488B4510                	mov rax, ENV
 14149 00009B42 488B00                  	mov rax, qword [rax + 8 * 0]
 14150 00009B45 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14151 00009B49 803804                  	cmp byte [rax], T_closure
 14152 00009B4C 0F85FAD90000            	jne L_error_non_closure
 14153 00009B52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14154 00009B55 FF7508                  	push qword [rbp + 8 * 1]
 14155                                   ; old ret addr
 14156 00009B58 FF7500                  	push qword [rbp]
 14157                                   ; restore the old rbp
 14158 00009B5B BB02000000              	mov rbx, 2
 14159 00009B60 4883C303                	add rbx, 3
 14160 00009B64 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14161 00009B68 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14162 00009B6D 4C8D4DF8                	lea r9, [rbp - 8]
 14163 00009B71 B906000000              	mov rcx, 6
 14164                                  .L_tc_recycle_frame_loop_007e:
 14165 00009B76 4883F900                	cmp rcx, 0
 14166 00009B7A 7413                    	je .L_tc_recycle_frame_done_007e
 14167 00009B7C 4D8B11                  	mov r10, qword [r9]
 14168 00009B7F 4D8910                  	mov qword [r8], r10
 14169 00009B82 4983E808                	sub r8, 8
 14170 00009B86 4983E908                	sub r9, 8
 14171 00009B8A 48FFC9                  	dec rcx
 14172 00009B8D EBE7                    	jmp .L_tc_recycle_frame_loop_007e
 14173                                  .L_tc_recycle_frame_done_007e:
 14174 00009B8F 498D6008                	lea rsp, [r8 + 8]
 14175 00009B93 5D                      	pop rbp ; restore the old rbp
 14176 00009B94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14177 00009B97 EB5B                    	jmp .L_if_end_0044
 14178                                  .L_if_else_0044:
 14179                                  	; preparing a tail-call
 14180 00009B99 6A00                    	push 0	; arg count
 14181 00009B9B 488B4510                	mov rax, ENV
 14182 00009B9F 488B4008                	mov rax, qword [rax + 8 * 1]
 14183 00009BA3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14184 00009BA6 803804                  	cmp byte [rax], T_closure
 14185 00009BA9 0F859DD90000            	jne L_error_non_closure
 14186 00009BAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 14187 00009BB2 FF7508                  	push qword [rbp + 8 * 1]
 14188                                   ; old ret addr
 14189 00009BB5 FF7500                  	push qword [rbp]
 14190                                   ; restore the old rbp
 14191 00009BB8 BB00000000              	mov rbx, 0
 14192 00009BBD 4883C303                	add rbx, 3
 14193 00009BC1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14194 00009BC5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14195 00009BCA 4C8D4DF8                	lea r9, [rbp - 8]
 14196 00009BCE B904000000              	mov rcx, 4
 14197                                  .L_tc_recycle_frame_loop_007f:
 14198 00009BD3 4883F900                	cmp rcx, 0
 14199 00009BD7 7413                    	je .L_tc_recycle_frame_done_007f
 14200 00009BD9 4D8B11                  	mov r10, qword [r9]
 14201 00009BDC 4D8910                  	mov qword [r8], r10
 14202 00009BDF 4983E808                	sub r8, 8
 14203 00009BE3 4983E908                	sub r9, 8
 14204 00009BE7 48FFC9                  	dec rcx
 14205 00009BEA EBE7                    	jmp .L_tc_recycle_frame_loop_007f
 14206                                  .L_tc_recycle_frame_done_007f:
 14207 00009BEC 498D6008                	lea rsp, [r8 + 8]
 14208 00009BF0 5D                      	pop rbp ; restore the old rbp
 14209 00009BF1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14210                                  .L_if_end_0044:
 14211                                  .L_if_end_0045:
 14212                                  .L_if_end_0046:
 14213 00009BF4 E9AA050000              	jmp .L_if_end_004f
 14214                                  .L_if_else_004f:
 14215                                  	; preparing a non-tail-call
 14216 00009BF9 488B4520                	mov rax, PARAM(0)	; param a
 14217 00009BFD 50                      	push rax
 14218 00009BFE 6A01                    	push 1	; arg count
 14219 00009C00 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14220 00009C08 803805                  	cmp byte [rax], T_undefined
 14221 00009C0B 0F84B7D80000            	je L_error_fvar_undefined
 14222 00009C11 803804                  	cmp byte [rax], T_closure
 14223 00009C14 0F8532D90000            	jne L_error_non_closure
 14224 00009C1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14225 00009C1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14226 00009C20 483D[02000000]          	cmp rax, sob_boolean_false
 14227 00009C26 0F8476020000            	je .L_if_else_004e
 14228                                  	; preparing a non-tail-call
 14229 00009C2C 488B4528                	mov rax, PARAM(1)	; param b
 14230 00009C30 50                      	push rax
 14231 00009C31 6A01                    	push 1	; arg count
 14232 00009C33 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14233 00009C3B 803805                  	cmp byte [rax], T_undefined
 14234 00009C3E 0F8484D80000            	je L_error_fvar_undefined
 14235 00009C44 803804                  	cmp byte [rax], T_closure
 14236 00009C47 0F85FFD80000            	jne L_error_non_closure
 14237 00009C4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14238 00009C50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14239 00009C53 483D[02000000]          	cmp rax, sob_boolean_false
 14240 00009C59 0F848D000000            	je .L_if_else_0049
 14241                                  	; preparing a tail-call
 14242                                  	; preparing a non-tail-call
 14243 00009C5F 488B4528                	mov rax, PARAM(1)	; param b
 14244 00009C63 50                      	push rax
 14245 00009C64 6A01                    	push 1	; arg count
 14246 00009C66 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14247 00009C6E 803805                  	cmp byte [rax], T_undefined
 14248 00009C71 0F8451D80000            	je L_error_fvar_undefined
 14249 00009C77 803804                  	cmp byte [rax], T_closure
 14250 00009C7A 0F85CCD80000            	jne L_error_non_closure
 14251 00009C80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14252 00009C83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14253 00009C86 50                      	push rax
 14254 00009C87 488B4520                	mov rax, PARAM(0)	; param a
 14255 00009C8B 50                      	push rax
 14256 00009C8C 6A02                    	push 2	; arg count
 14257 00009C8E 488B4510                	mov rax, ENV
 14258 00009C92 488B00                  	mov rax, qword [rax + 8 * 0]
 14259 00009C95 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14260 00009C99 803804                  	cmp byte [rax], T_closure
 14261 00009C9C 0F85AAD80000            	jne L_error_non_closure
 14262 00009CA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14263 00009CA5 FF7508                  	push qword [rbp + 8 * 1]
 14264                                   ; old ret addr
 14265 00009CA8 FF7500                  	push qword [rbp]
 14266                                   ; restore the old rbp
 14267 00009CAB BB02000000              	mov rbx, 2
 14268 00009CB0 4883C303                	add rbx, 3
 14269 00009CB4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14270 00009CB8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14271 00009CBD 4C8D4DF8                	lea r9, [rbp - 8]
 14272 00009CC1 B906000000              	mov rcx, 6
 14273                                  .L_tc_recycle_frame_loop_0080:
 14274 00009CC6 4883F900                	cmp rcx, 0
 14275 00009CCA 7413                    	je .L_tc_recycle_frame_done_0080
 14276 00009CCC 4D8B11                  	mov r10, qword [r9]
 14277 00009CCF 4D8910                  	mov qword [r8], r10
 14278 00009CD2 4983E808                	sub r8, 8
 14279 00009CD6 4983E908                	sub r9, 8
 14280 00009CDA 48FFC9                  	dec rcx
 14281 00009CDD EBE7                    	jmp .L_tc_recycle_frame_loop_0080
 14282                                  .L_tc_recycle_frame_done_0080:
 14283 00009CDF 498D6008                	lea rsp, [r8 + 8]
 14284 00009CE3 5D                      	pop rbp ; restore the old rbp
 14285 00009CE4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14286 00009CE7 E9B1010000              	jmp .L_if_end_0049
 14287                                  .L_if_else_0049:
 14288                                  	; preparing a non-tail-call
 14289 00009CEC 488B4528                	mov rax, PARAM(1)	; param b
 14290 00009CF0 50                      	push rax
 14291 00009CF1 6A01                    	push 1	; arg count
 14292 00009CF3 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14293 00009CFB 803805                  	cmp byte [rax], T_undefined
 14294 00009CFE 0F84C4D70000            	je L_error_fvar_undefined
 14295 00009D04 803804                  	cmp byte [rax], T_closure
 14296 00009D07 0F853FD80000            	jne L_error_non_closure
 14297 00009D0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14298 00009D10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14299 00009D13 483D[02000000]          	cmp rax, sob_boolean_false
 14300 00009D19 746A                    	je .L_if_else_0048
 14301                                  	; preparing a tail-call
 14302 00009D1B 488B4528                	mov rax, PARAM(1)	; param b
 14303 00009D1F 50                      	push rax
 14304 00009D20 488B4520                	mov rax, PARAM(0)	; param a
 14305 00009D24 50                      	push rax
 14306 00009D25 6A02                    	push 2	; arg count
 14307 00009D27 488B4510                	mov rax, ENV
 14308 00009D2B 488B00                  	mov rax, qword [rax + 8 * 0]
 14309 00009D2E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14310 00009D32 803804                  	cmp byte [rax], T_closure
 14311 00009D35 0F8511D80000            	jne L_error_non_closure
 14312 00009D3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14313 00009D3E FF7508                  	push qword [rbp + 8 * 1]
 14314                                   ; old ret addr
 14315 00009D41 FF7500                  	push qword [rbp]
 14316                                   ; restore the old rbp
 14317 00009D44 BB02000000              	mov rbx, 2
 14318 00009D49 4883C303                	add rbx, 3
 14319 00009D4D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14320 00009D51 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14321 00009D56 4C8D4DF8                	lea r9, [rbp - 8]
 14322 00009D5A B906000000              	mov rcx, 6
 14323                                  .L_tc_recycle_frame_loop_0081:
 14324 00009D5F 4883F900                	cmp rcx, 0
 14325 00009D63 7413                    	je .L_tc_recycle_frame_done_0081
 14326 00009D65 4D8B11                  	mov r10, qword [r9]
 14327 00009D68 4D8910                  	mov qword [r8], r10
 14328 00009D6B 4983E808                	sub r8, 8
 14329 00009D6F 4983E908                	sub r9, 8
 14330 00009D73 48FFC9                  	dec rcx
 14331 00009D76 EBE7                    	jmp .L_tc_recycle_frame_loop_0081
 14332                                  .L_tc_recycle_frame_done_0081:
 14333 00009D78 498D6008                	lea rsp, [r8 + 8]
 14334 00009D7C 5D                      	pop rbp ; restore the old rbp
 14335 00009D7D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14336 00009D80 E918010000              	jmp .L_if_end_0048
 14337                                  .L_if_else_0048:
 14338                                  	; preparing a non-tail-call
 14339 00009D85 488B4528                	mov rax, PARAM(1)	; param b
 14340 00009D89 50                      	push rax
 14341 00009D8A 6A01                    	push 1	; arg count
 14342 00009D8C 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14343 00009D94 803805                  	cmp byte [rax], T_undefined
 14344 00009D97 0F842BD70000            	je L_error_fvar_undefined
 14345 00009D9D 803804                  	cmp byte [rax], T_closure
 14346 00009DA0 0F85A6D70000            	jne L_error_non_closure
 14347 00009DA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14348 00009DA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14349 00009DAC 483D[02000000]          	cmp rax, sob_boolean_false
 14350 00009DB2 0F848A000000            	je .L_if_else_0047
 14351                                  	; preparing a tail-call
 14352 00009DB8 488B4528                	mov rax, PARAM(1)	; param b
 14353 00009DBC 50                      	push rax
 14354                                  	; preparing a non-tail-call
 14355 00009DBD 488B4520                	mov rax, PARAM(0)	; param a
 14356 00009DC1 50                      	push rax
 14357 00009DC2 6A01                    	push 1	; arg count
 14358 00009DC4 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14359 00009DCC 803805                  	cmp byte [rax], T_undefined
 14360 00009DCF 0F84F3D60000            	je L_error_fvar_undefined
 14361 00009DD5 803804                  	cmp byte [rax], T_closure
 14362 00009DD8 0F856ED70000            	jne L_error_non_closure
 14363 00009DDE FF7001                  	push SOB_CLOSURE_ENV(rax)
 14364 00009DE1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14365 00009DE4 50                      	push rax
 14366 00009DE5 6A02                    	push 2	; arg count
 14367 00009DE7 488B4510                	mov rax, ENV
 14368 00009DEB 488B00                  	mov rax, qword [rax + 8 * 0]
 14369 00009DEE 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14370 00009DF2 803804                  	cmp byte [rax], T_closure
 14371 00009DF5 0F8551D70000            	jne L_error_non_closure
 14372 00009DFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14373 00009DFE FF7508                  	push qword [rbp + 8 * 1]
 14374                                   ; old ret addr
 14375 00009E01 FF7500                  	push qword [rbp]
 14376                                   ; restore the old rbp
 14377 00009E04 BB02000000              	mov rbx, 2
 14378 00009E09 4883C303                	add rbx, 3
 14379 00009E0D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14380 00009E11 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14381 00009E16 4C8D4DF8                	lea r9, [rbp - 8]
 14382 00009E1A B906000000              	mov rcx, 6
 14383                                  .L_tc_recycle_frame_loop_0082:
 14384 00009E1F 4883F900                	cmp rcx, 0
 14385 00009E23 7413                    	je .L_tc_recycle_frame_done_0082
 14386 00009E25 4D8B11                  	mov r10, qword [r9]
 14387 00009E28 4D8910                  	mov qword [r8], r10
 14388 00009E2B 4983E808                	sub r8, 8
 14389 00009E2F 4983E908                	sub r9, 8
 14390 00009E33 48FFC9                  	dec rcx
 14391 00009E36 EBE7                    	jmp .L_tc_recycle_frame_loop_0082
 14392                                  .L_tc_recycle_frame_done_0082:
 14393 00009E38 498D6008                	lea rsp, [r8 + 8]
 14394 00009E3C 5D                      	pop rbp ; restore the old rbp
 14395 00009E3D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14396 00009E40 EB5B                    	jmp .L_if_end_0047
 14397                                  .L_if_else_0047:
 14398                                  	; preparing a tail-call
 14399 00009E42 6A00                    	push 0	; arg count
 14400 00009E44 488B4510                	mov rax, ENV
 14401 00009E48 488B4008                	mov rax, qword [rax + 8 * 1]
 14402 00009E4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14403 00009E4F 803804                  	cmp byte [rax], T_closure
 14404 00009E52 0F85F4D60000            	jne L_error_non_closure
 14405 00009E58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14406 00009E5B FF7508                  	push qword [rbp + 8 * 1]
 14407                                   ; old ret addr
 14408 00009E5E FF7500                  	push qword [rbp]
 14409                                   ; restore the old rbp
 14410 00009E61 BB00000000              	mov rbx, 0
 14411 00009E66 4883C303                	add rbx, 3
 14412 00009E6A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14413 00009E6E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14414 00009E73 4C8D4DF8                	lea r9, [rbp - 8]
 14415 00009E77 B904000000              	mov rcx, 4
 14416                                  .L_tc_recycle_frame_loop_0083:
 14417 00009E7C 4883F900                	cmp rcx, 0
 14418 00009E80 7413                    	je .L_tc_recycle_frame_done_0083
 14419 00009E82 4D8B11                  	mov r10, qword [r9]
 14420 00009E85 4D8910                  	mov qword [r8], r10
 14421 00009E88 4983E808                	sub r8, 8
 14422 00009E8C 4983E908                	sub r9, 8
 14423 00009E90 48FFC9                  	dec rcx
 14424 00009E93 EBE7                    	jmp .L_tc_recycle_frame_loop_0083
 14425                                  .L_tc_recycle_frame_done_0083:
 14426 00009E95 498D6008                	lea rsp, [r8 + 8]
 14427 00009E99 5D                      	pop rbp ; restore the old rbp
 14428 00009E9A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14429                                  .L_if_end_0047:
 14430                                  .L_if_end_0048:
 14431                                  .L_if_end_0049:
 14432 00009E9D E901030000              	jmp .L_if_end_004e
 14433                                  .L_if_else_004e:
 14434                                  	; preparing a non-tail-call
 14435 00009EA2 488B4520                	mov rax, PARAM(0)	; param a
 14436 00009EA6 50                      	push rax
 14437 00009EA7 6A01                    	push 1	; arg count
 14438 00009EA9 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14439 00009EB1 803805                  	cmp byte [rax], T_undefined
 14440 00009EB4 0F840ED60000            	je L_error_fvar_undefined
 14441 00009EBA 803804                  	cmp byte [rax], T_closure
 14442 00009EBD 0F8589D60000            	jne L_error_non_closure
 14443 00009EC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14444 00009EC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14445 00009EC9 483D[02000000]          	cmp rax, sob_boolean_false
 14446 00009ECF 0F8473020000            	je .L_if_else_004d
 14447                                  	; preparing a non-tail-call
 14448 00009ED5 488B4528                	mov rax, PARAM(1)	; param b
 14449 00009ED9 50                      	push rax
 14450 00009EDA 6A01                    	push 1	; arg count
 14451 00009EDC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14452 00009EE4 803805                  	cmp byte [rax], T_undefined
 14453 00009EE7 0F84DBD50000            	je L_error_fvar_undefined
 14454 00009EED 803804                  	cmp byte [rax], T_closure
 14455 00009EF0 0F8556D60000            	jne L_error_non_closure
 14456 00009EF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14457 00009EF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14458 00009EFC 483D[02000000]          	cmp rax, sob_boolean_false
 14459 00009F02 0F848D000000            	je .L_if_else_004c
 14460                                  	; preparing a tail-call
 14461                                  	; preparing a non-tail-call
 14462 00009F08 488B4528                	mov rax, PARAM(1)	; param b
 14463 00009F0C 50                      	push rax
 14464 00009F0D 6A01                    	push 1	; arg count
 14465 00009F0F 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14466 00009F17 803805                  	cmp byte [rax], T_undefined
 14467 00009F1A 0F84A8D50000            	je L_error_fvar_undefined
 14468 00009F20 803804                  	cmp byte [rax], T_closure
 14469 00009F23 0F8523D60000            	jne L_error_non_closure
 14470 00009F29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14471 00009F2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14472 00009F2F 50                      	push rax
 14473 00009F30 488B4520                	mov rax, PARAM(0)	; param a
 14474 00009F34 50                      	push rax
 14475 00009F35 6A02                    	push 2	; arg count
 14476 00009F37 488B4510                	mov rax, ENV
 14477 00009F3B 488B00                  	mov rax, qword [rax + 8 * 0]
 14478 00009F3E 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14479 00009F42 803804                  	cmp byte [rax], T_closure
 14480 00009F45 0F8501D60000            	jne L_error_non_closure
 14481 00009F4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14482 00009F4E FF7508                  	push qword [rbp + 8 * 1]
 14483                                   ; old ret addr
 14484 00009F51 FF7500                  	push qword [rbp]
 14485                                   ; restore the old rbp
 14486 00009F54 BB02000000              	mov rbx, 2
 14487 00009F59 4883C303                	add rbx, 3
 14488 00009F5D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14489 00009F61 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14490 00009F66 4C8D4DF8                	lea r9, [rbp - 8]
 14491 00009F6A B906000000              	mov rcx, 6
 14492                                  .L_tc_recycle_frame_loop_0084:
 14493 00009F6F 4883F900                	cmp rcx, 0
 14494 00009F73 7413                    	je .L_tc_recycle_frame_done_0084
 14495 00009F75 4D8B11                  	mov r10, qword [r9]
 14496 00009F78 4D8910                  	mov qword [r8], r10
 14497 00009F7B 4983E808                	sub r8, 8
 14498 00009F7F 4983E908                	sub r9, 8
 14499 00009F83 48FFC9                  	dec rcx
 14500 00009F86 EBE7                    	jmp .L_tc_recycle_frame_loop_0084
 14501                                  .L_tc_recycle_frame_done_0084:
 14502 00009F88 498D6008                	lea rsp, [r8 + 8]
 14503 00009F8C 5D                      	pop rbp ; restore the old rbp
 14504 00009F8D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14505 00009F90 E9B1010000              	jmp .L_if_end_004c
 14506                                  .L_if_else_004c:
 14507                                  	; preparing a non-tail-call
 14508 00009F95 488B4528                	mov rax, PARAM(1)	; param b
 14509 00009F99 50                      	push rax
 14510 00009F9A 6A01                    	push 1	; arg count
 14511 00009F9C 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14512 00009FA4 803805                  	cmp byte [rax], T_undefined
 14513 00009FA7 0F841BD50000            	je L_error_fvar_undefined
 14514 00009FAD 803804                  	cmp byte [rax], T_closure
 14515 00009FB0 0F8596D50000            	jne L_error_non_closure
 14516 00009FB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14517 00009FB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14518 00009FBC 483D[02000000]          	cmp rax, sob_boolean_false
 14519 00009FC2 0F848D000000            	je .L_if_else_004b
 14520                                  	; preparing a tail-call
 14521                                  	; preparing a non-tail-call
 14522 00009FC8 488B4528                	mov rax, PARAM(1)	; param b
 14523 00009FCC 50                      	push rax
 14524 00009FCD 6A01                    	push 1	; arg count
 14525 00009FCF 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14526 00009FD7 803805                  	cmp byte [rax], T_undefined
 14527 00009FDA 0F84E8D40000            	je L_error_fvar_undefined
 14528 00009FE0 803804                  	cmp byte [rax], T_closure
 14529 00009FE3 0F8563D50000            	jne L_error_non_closure
 14530 00009FE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14531 00009FEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 14532 00009FEF 50                      	push rax
 14533 00009FF0 488B4520                	mov rax, PARAM(0)	; param a
 14534 00009FF4 50                      	push rax
 14535 00009FF5 6A02                    	push 2	; arg count
 14536 00009FF7 488B4510                	mov rax, ENV
 14537 00009FFB 488B00                  	mov rax, qword [rax + 8 * 0]
 14538 00009FFE 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14539 0000A002 803804                  	cmp byte [rax], T_closure
 14540 0000A005 0F8541D50000            	jne L_error_non_closure
 14541 0000A00B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14542 0000A00E FF7508                  	push qword [rbp + 8 * 1]
 14543                                   ; old ret addr
 14544 0000A011 FF7500                  	push qword [rbp]
 14545                                   ; restore the old rbp
 14546 0000A014 BB02000000              	mov rbx, 2
 14547 0000A019 4883C303                	add rbx, 3
 14548 0000A01D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14549 0000A021 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14550 0000A026 4C8D4DF8                	lea r9, [rbp - 8]
 14551 0000A02A B906000000              	mov rcx, 6
 14552                                  .L_tc_recycle_frame_loop_0085:
 14553 0000A02F 4883F900                	cmp rcx, 0
 14554 0000A033 7413                    	je .L_tc_recycle_frame_done_0085
 14555 0000A035 4D8B11                  	mov r10, qword [r9]
 14556 0000A038 4D8910                  	mov qword [r8], r10
 14557 0000A03B 4983E808                	sub r8, 8
 14558 0000A03F 4983E908                	sub r9, 8
 14559 0000A043 48FFC9                  	dec rcx
 14560 0000A046 EBE7                    	jmp .L_tc_recycle_frame_loop_0085
 14561                                  .L_tc_recycle_frame_done_0085:
 14562 0000A048 498D6008                	lea rsp, [r8 + 8]
 14563 0000A04C 5D                      	pop rbp ; restore the old rbp
 14564 0000A04D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14565 0000A050 E9F1000000              	jmp .L_if_end_004b
 14566                                  .L_if_else_004b:
 14567                                  	; preparing a non-tail-call
 14568 0000A055 488B4528                	mov rax, PARAM(1)	; param b
 14569 0000A059 50                      	push rax
 14570 0000A05A 6A01                    	push 1	; arg count
 14571 0000A05C 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14572 0000A064 803805                  	cmp byte [rax], T_undefined
 14573 0000A067 0F845BD40000            	je L_error_fvar_undefined
 14574 0000A06D 803804                  	cmp byte [rax], T_closure
 14575 0000A070 0F85D6D40000            	jne L_error_non_closure
 14576 0000A076 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14577 0000A079 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14578 0000A07C 483D[02000000]          	cmp rax, sob_boolean_false
 14579 0000A082 7467                    	je .L_if_else_004a
 14580                                  	; preparing a tail-call
 14581 0000A084 488B4528                	mov rax, PARAM(1)	; param b
 14582 0000A088 50                      	push rax
 14583 0000A089 488B4520                	mov rax, PARAM(0)	; param a
 14584 0000A08D 50                      	push rax
 14585 0000A08E 6A02                    	push 2	; arg count
 14586 0000A090 488B4510                	mov rax, ENV
 14587 0000A094 488B00                  	mov rax, qword [rax + 8 * 0]
 14588 0000A097 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14589 0000A09B 803804                  	cmp byte [rax], T_closure
 14590 0000A09E 0F85A8D40000            	jne L_error_non_closure
 14591 0000A0A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14592 0000A0A7 FF7508                  	push qword [rbp + 8 * 1]
 14593                                   ; old ret addr
 14594 0000A0AA FF7500                  	push qword [rbp]
 14595                                   ; restore the old rbp
 14596 0000A0AD BB02000000              	mov rbx, 2
 14597 0000A0B2 4883C303                	add rbx, 3
 14598 0000A0B6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14599 0000A0BA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14600 0000A0BF 4C8D4DF8                	lea r9, [rbp - 8]
 14601 0000A0C3 B906000000              	mov rcx, 6
 14602                                  .L_tc_recycle_frame_loop_0086:
 14603 0000A0C8 4883F900                	cmp rcx, 0
 14604 0000A0CC 7413                    	je .L_tc_recycle_frame_done_0086
 14605 0000A0CE 4D8B11                  	mov r10, qword [r9]
 14606 0000A0D1 4D8910                  	mov qword [r8], r10
 14607 0000A0D4 4983E808                	sub r8, 8
 14608 0000A0D8 4983E908                	sub r9, 8
 14609 0000A0DC 48FFC9                  	dec rcx
 14610 0000A0DF EBE7                    	jmp .L_tc_recycle_frame_loop_0086
 14611                                  .L_tc_recycle_frame_done_0086:
 14612 0000A0E1 498D6008                	lea rsp, [r8 + 8]
 14613 0000A0E5 5D                      	pop rbp ; restore the old rbp
 14614 0000A0E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14615 0000A0E9 EB5B                    	jmp .L_if_end_004a
 14616                                  .L_if_else_004a:
 14617                                  	; preparing a tail-call
 14618 0000A0EB 6A00                    	push 0	; arg count
 14619 0000A0ED 488B4510                	mov rax, ENV
 14620 0000A0F1 488B4008                	mov rax, qword [rax + 8 * 1]
 14621 0000A0F5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14622 0000A0F8 803804                  	cmp byte [rax], T_closure
 14623 0000A0FB 0F854BD40000            	jne L_error_non_closure
 14624 0000A101 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14625 0000A104 FF7508                  	push qword [rbp + 8 * 1]
 14626                                   ; old ret addr
 14627 0000A107 FF7500                  	push qword [rbp]
 14628                                   ; restore the old rbp
 14629 0000A10A BB00000000              	mov rbx, 0
 14630 0000A10F 4883C303                	add rbx, 3
 14631 0000A113 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14632 0000A117 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14633 0000A11C 4C8D4DF8                	lea r9, [rbp - 8]
 14634 0000A120 B904000000              	mov rcx, 4
 14635                                  .L_tc_recycle_frame_loop_0087:
 14636 0000A125 4883F900                	cmp rcx, 0
 14637 0000A129 7413                    	je .L_tc_recycle_frame_done_0087
 14638 0000A12B 4D8B11                  	mov r10, qword [r9]
 14639 0000A12E 4D8910                  	mov qword [r8], r10
 14640 0000A131 4983E808                	sub r8, 8
 14641 0000A135 4983E908                	sub r9, 8
 14642 0000A139 48FFC9                  	dec rcx
 14643 0000A13C EBE7                    	jmp .L_tc_recycle_frame_loop_0087
 14644                                  .L_tc_recycle_frame_done_0087:
 14645 0000A13E 498D6008                	lea rsp, [r8 + 8]
 14646 0000A142 5D                      	pop rbp ; restore the old rbp
 14647 0000A143 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14648                                  .L_if_end_004a:
 14649                                  .L_if_end_004b:
 14650                                  .L_if_end_004c:
 14651 0000A146 EB5B                    	jmp .L_if_end_004d
 14652                                  .L_if_else_004d:
 14653                                  	; preparing a tail-call
 14654 0000A148 6A00                    	push 0	; arg count
 14655 0000A14A 488B4510                	mov rax, ENV
 14656 0000A14E 488B4008                	mov rax, qword [rax + 8 * 1]
 14657 0000A152 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14658 0000A155 803804                  	cmp byte [rax], T_closure
 14659 0000A158 0F85EED30000            	jne L_error_non_closure
 14660 0000A15E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14661 0000A161 FF7508                  	push qword [rbp + 8 * 1]
 14662                                   ; old ret addr
 14663 0000A164 FF7500                  	push qword [rbp]
 14664                                   ; restore the old rbp
 14665 0000A167 BB00000000              	mov rbx, 0
 14666 0000A16C 4883C303                	add rbx, 3
 14667 0000A170 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14668 0000A174 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14669 0000A179 4C8D4DF8                	lea r9, [rbp - 8]
 14670 0000A17D B904000000              	mov rcx, 4
 14671                                  .L_tc_recycle_frame_loop_0088:
 14672 0000A182 4883F900                	cmp rcx, 0
 14673 0000A186 7413                    	je .L_tc_recycle_frame_done_0088
 14674 0000A188 4D8B11                  	mov r10, qword [r9]
 14675 0000A18B 4D8910                  	mov qword [r8], r10
 14676 0000A18E 4983E808                	sub r8, 8
 14677 0000A192 4983E908                	sub r9, 8
 14678 0000A196 48FFC9                  	dec rcx
 14679 0000A199 EBE7                    	jmp .L_tc_recycle_frame_loop_0088
 14680                                  .L_tc_recycle_frame_done_0088:
 14681 0000A19B 498D6008                	lea rsp, [r8 + 8]
 14682 0000A19F 5D                      	pop rbp ; restore the old rbp
 14683 0000A1A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14684                                  .L_if_end_004d:
 14685                                  .L_if_end_004e:
 14686                                  .L_if_end_004f:
 14687 0000A1A3 C9                      	leave
 14688 0000A1A4 C22000                  	ret AND_KILL_FRAME(2)
 14689                                  .L_lambda_simple_end_004a:	; new closure is in rax
 14690 0000A1A7 C9                      	leave
 14691 0000A1A8 C22800                  	ret AND_KILL_FRAME(3)
 14692                                  .L_lambda_simple_end_0049:	; new closure is in rax
 14693 0000A1AB 50                      	push rax
 14694 0000A1AC 6A01                    	push 1	; arg count
 14695 0000A1AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14696 0000A1B3 E83DD40000              	call malloc
 14697 0000A1B8 50                      	push rax
 14698 0000A1B9 BF08000000              	mov rdi, 8 * 1	; new rib
 14699 0000A1BE E832D40000              	call malloc
 14700 0000A1C3 50                      	push rax
 14701 0000A1C4 BF10000000              	mov rdi, 8 * 2	; extended env
 14702 0000A1C9 E827D40000              	call malloc
 14703 0000A1CE 488B7D10                	mov rdi, ENV
 14704 0000A1D2 BE00000000              	mov rsi, 0
 14705 0000A1D7 BA01000000              	mov rdx, 1
 14706                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 14707 0000A1DC 4883FE01                	cmp rsi, 1
 14708 0000A1E0 7410                    	je .L_lambda_simple_env_end_004b
 14709 0000A1E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14710 0000A1E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14711 0000A1EA 48FFC6                  	inc rsi
 14712 0000A1ED 48FFC2                  	inc rdx
 14713 0000A1F0 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 14714                                  .L_lambda_simple_env_end_004b:
 14715 0000A1F2 5B                      	pop rbx
 14716 0000A1F3 BE00000000              	mov rsi, 0
 14717                                  .L_lambda_simple_params_loop_004b:	; copy params
 14718 0000A1F8 4883FE01                	cmp rsi, 1
 14719 0000A1FC 740E                    	je .L_lambda_simple_params_end_004b
 14720 0000A1FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14721 0000A203 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14722 0000A207 48FFC6                  	inc rsi
 14723 0000A20A EBEC                    	jmp .L_lambda_simple_params_loop_004b
 14724                                  .L_lambda_simple_params_end_004b:
 14725 0000A20C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14726 0000A20F 4889C3                  	mov rbx, rax
 14727 0000A212 58                      	pop rax
 14728 0000A213 C60004                  	mov byte [rax], T_closure
 14729 0000A216 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14730 0000A21A 48C74009[27A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 14731 0000A222 E99E0F0000              	jmp .L_lambda_simple_end_004b
 14732                                  .L_lambda_simple_code_004b:	; lambda-simple body
 14733 0000A227 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14734 0000A22D 740B                    	je .L_lambda_simple_arity_check_ok_004b
 14735 0000A22F FF742410                	push qword [rsp + 8 * 2]
 14736 0000A233 6A01                    	push 1
 14737 0000A235 E974D30000              	jmp L_error_incorrect_arity_simple
 14738                                  .L_lambda_simple_arity_check_ok_004b:
 14739 0000A23A C8000000                	enter 0, 0
 14740                                  	; preparing a tail-call
 14741                                  	; preparing a non-tail-call
 14742 0000A23E 488B0425[190F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 14743 0000A246 803805                  	cmp byte [rax], T_undefined
 14744 0000A249 0F8479D20000            	je L_error_fvar_undefined
 14745 0000A24F 50                      	push rax
 14746 0000A250 488B0425[080F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 14747 0000A258 803805                  	cmp byte [rax], T_undefined
 14748 0000A25B 0F8467D20000            	je L_error_fvar_undefined
 14749 0000A261 50                      	push rax
 14750 0000A262 488B0425[2A0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 14751 0000A26A 803805                  	cmp byte [rax], T_undefined
 14752 0000A26D 0F8455D20000            	je L_error_fvar_undefined
 14753 0000A273 50                      	push rax
 14754 0000A274 6A03                    	push 3	; arg count
 14755 0000A276 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 14756 0000A27A 803804                  	cmp byte [rax], T_closure
 14757 0000A27D 0F85C9D20000            	jne L_error_non_closure
 14758 0000A283 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14759 0000A286 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14760 0000A289 50                      	push rax
 14761 0000A28A 6A01                    	push 1	; arg count
 14762 0000A28C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14763 0000A291 E85FD30000              	call malloc
 14764 0000A296 50                      	push rax
 14765 0000A297 BF08000000              	mov rdi, 8 * 1	; new rib
 14766 0000A29C E854D30000              	call malloc
 14767 0000A2A1 50                      	push rax
 14768 0000A2A2 BF18000000              	mov rdi, 8 * 3	; extended env
 14769 0000A2A7 E849D30000              	call malloc
 14770 0000A2AC 488B7D10                	mov rdi, ENV
 14771 0000A2B0 BE00000000              	mov rsi, 0
 14772 0000A2B5 BA01000000              	mov rdx, 1
 14773                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 14774 0000A2BA 4883FE02                	cmp rsi, 2
 14775 0000A2BE 7410                    	je .L_lambda_simple_env_end_004c
 14776 0000A2C0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14777 0000A2C4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14778 0000A2C8 48FFC6                  	inc rsi
 14779 0000A2CB 48FFC2                  	inc rdx
 14780 0000A2CE EBEA                    	jmp .L_lambda_simple_env_loop_004c
 14781                                  .L_lambda_simple_env_end_004c:
 14782 0000A2D0 5B                      	pop rbx
 14783 0000A2D1 BE00000000              	mov rsi, 0
 14784                                  .L_lambda_simple_params_loop_004c:	; copy params
 14785 0000A2D6 4883FE01                	cmp rsi, 1
 14786 0000A2DA 740E                    	je .L_lambda_simple_params_end_004c
 14787 0000A2DC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14788 0000A2E1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14789 0000A2E5 48FFC6                  	inc rsi
 14790 0000A2E8 EBEC                    	jmp .L_lambda_simple_params_loop_004c
 14791                                  .L_lambda_simple_params_end_004c:
 14792 0000A2EA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14793 0000A2ED 4889C3                  	mov rbx, rax
 14794 0000A2F0 58                      	pop rax
 14795 0000A2F1 C60004                  	mov byte [rax], T_closure
 14796 0000A2F4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14797 0000A2F8 48C74009[05A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 14798 0000A300 E96E0E0000              	jmp .L_lambda_simple_end_004c
 14799                                  .L_lambda_simple_code_004c:	; lambda-simple body
 14800 0000A305 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14801 0000A30B 740B                    	je .L_lambda_simple_arity_check_ok_004c
 14802 0000A30D FF742410                	push qword [rsp + 8 * 2]
 14803 0000A311 6A01                    	push 1
 14804 0000A313 E996D20000              	jmp L_error_incorrect_arity_simple
 14805                                  .L_lambda_simple_arity_check_ok_004c:
 14806 0000A318 C8000000                	enter 0, 0
 14807                                  	; preparing a tail-call
 14808                                  	; preparing a non-tail-call
 14809 0000A31C 488B0425[E60E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 14810 0000A324 803805                  	cmp byte [rax], T_undefined
 14811 0000A327 0F849BD10000            	je L_error_fvar_undefined
 14812 0000A32D 50                      	push rax
 14813 0000A32E 488B0425[D50E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 14814 0000A336 803805                  	cmp byte [rax], T_undefined
 14815 0000A339 0F8489D10000            	je L_error_fvar_undefined
 14816 0000A33F 50                      	push rax
 14817 0000A340 488B0425[F70E0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 14818 0000A348 803805                  	cmp byte [rax], T_undefined
 14819 0000A34B 0F8477D10000            	je L_error_fvar_undefined
 14820 0000A351 50                      	push rax
 14821 0000A352 6A03                    	push 3	; arg count
 14822 0000A354 488B4510                	mov rax, ENV
 14823 0000A358 488B00                  	mov rax, qword [rax + 8 * 0]
 14824 0000A35B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 14825 0000A35E 803804                  	cmp byte [rax], T_closure
 14826 0000A361 0F85E5D10000            	jne L_error_non_closure
 14827 0000A367 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14828 0000A36A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14829 0000A36D 50                      	push rax
 14830 0000A36E 6A01                    	push 1	; arg count
 14831 0000A370 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14832 0000A375 E87BD20000              	call malloc
 14833 0000A37A 50                      	push rax
 14834 0000A37B BF08000000              	mov rdi, 8 * 1	; new rib
 14835 0000A380 E870D20000              	call malloc
 14836 0000A385 50                      	push rax
 14837 0000A386 BF20000000              	mov rdi, 8 * 4	; extended env
 14838 0000A38B E865D20000              	call malloc
 14839 0000A390 488B7D10                	mov rdi, ENV
 14840 0000A394 BE00000000              	mov rsi, 0
 14841 0000A399 BA01000000              	mov rdx, 1
 14842                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14843 0000A39E 4883FE03                	cmp rsi, 3
 14844 0000A3A2 7410                    	je .L_lambda_simple_env_end_004d
 14845 0000A3A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14846 0000A3A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14847 0000A3AC 48FFC6                  	inc rsi
 14848 0000A3AF 48FFC2                  	inc rdx
 14849 0000A3B2 EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14850                                  .L_lambda_simple_env_end_004d:
 14851 0000A3B4 5B                      	pop rbx
 14852 0000A3B5 BE00000000              	mov rsi, 0
 14853                                  .L_lambda_simple_params_loop_004d:	; copy params
 14854 0000A3BA 4883FE01                	cmp rsi, 1
 14855 0000A3BE 740E                    	je .L_lambda_simple_params_end_004d
 14856 0000A3C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14857 0000A3C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14858 0000A3C9 48FFC6                  	inc rsi
 14859 0000A3CC EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14860                                  .L_lambda_simple_params_end_004d:
 14861 0000A3CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14862 0000A3D1 4889C3                  	mov rbx, rax
 14863 0000A3D4 58                      	pop rax
 14864 0000A3D5 C60004                  	mov byte [rax], T_closure
 14865 0000A3D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14866 0000A3DC 48C74009[E9A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14867 0000A3E4 E9380D0000              	jmp .L_lambda_simple_end_004d
 14868                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14869 0000A3E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14870 0000A3EF 740B                    	je .L_lambda_simple_arity_check_ok_004d
 14871 0000A3F1 FF742410                	push qword [rsp + 8 * 2]
 14872 0000A3F5 6A01                    	push 1
 14873 0000A3F7 E9B2D10000              	jmp L_error_incorrect_arity_simple
 14874                                  .L_lambda_simple_arity_check_ok_004d:
 14875 0000A3FC C8000000                	enter 0, 0
 14876                                  	; preparing a tail-call
 14877 0000A400 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14878 0000A405 E8EBD10000              	call malloc
 14879 0000A40A 50                      	push rax
 14880 0000A40B BF08000000              	mov rdi, 8 * 1	; new rib
 14881 0000A410 E8E0D10000              	call malloc
 14882 0000A415 50                      	push rax
 14883 0000A416 BF28000000              	mov rdi, 8 * 5	; extended env
 14884 0000A41B E8D5D10000              	call malloc
 14885 0000A420 488B7D10                	mov rdi, ENV
 14886 0000A424 BE00000000              	mov rsi, 0
 14887 0000A429 BA01000000              	mov rdx, 1
 14888                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14889 0000A42E 4883FE04                	cmp rsi, 4
 14890 0000A432 7410                    	je .L_lambda_simple_env_end_004e
 14891 0000A434 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14892 0000A438 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14893 0000A43C 48FFC6                  	inc rsi
 14894 0000A43F 48FFC2                  	inc rdx
 14895 0000A442 EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14896                                  .L_lambda_simple_env_end_004e:
 14897 0000A444 5B                      	pop rbx
 14898 0000A445 BE00000000              	mov rsi, 0
 14899                                  .L_lambda_simple_params_loop_004e:	; copy params
 14900 0000A44A 4883FE01                	cmp rsi, 1
 14901 0000A44E 740E                    	je .L_lambda_simple_params_end_004e
 14902 0000A450 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14903 0000A455 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14904 0000A459 48FFC6                  	inc rsi
 14905 0000A45C EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14906                                  .L_lambda_simple_params_end_004e:
 14907 0000A45E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14908 0000A461 4889C3                  	mov rbx, rax
 14909 0000A464 58                      	pop rax
 14910 0000A465 C60004                  	mov byte [rax], T_closure
 14911 0000A468 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14912 0000A46C 48C74009[79A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14913 0000A474 E9A3000000              	jmp .L_lambda_simple_end_004e
 14914                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14915 0000A479 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14916 0000A47F 740B                    	je .L_lambda_simple_arity_check_ok_004e
 14917 0000A481 FF742410                	push qword [rsp + 8 * 2]
 14918 0000A485 6A02                    	push 2
 14919 0000A487 E922D10000              	jmp L_error_incorrect_arity_simple
 14920                                  .L_lambda_simple_arity_check_ok_004e:
 14921 0000A48C C8000000                	enter 0, 0
 14922                                  	; preparing a tail-call
 14923                                  	; preparing a non-tail-call
 14924 0000A490 488B4528                	mov rax, PARAM(1)	; param b
 14925 0000A494 50                      	push rax
 14926 0000A495 488B4520                	mov rax, PARAM(0)	; param a
 14927 0000A499 50                      	push rax
 14928 0000A49A 6A02                    	push 2	; arg count
 14929 0000A49C 488B4510                	mov rax, ENV
 14930 0000A4A0 488B4008                	mov rax, qword [rax + 8 * 1]
 14931 0000A4A4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14932 0000A4A7 803804                  	cmp byte [rax], T_closure
 14933 0000A4AA 0F859CD00000            	jne L_error_non_closure
 14934 0000A4B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14935 0000A4B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14936 0000A4B6 50                      	push rax
 14937 0000A4B7 6A01                    	push 1	; arg count
 14938 0000A4B9 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 14939 0000A4C1 803805                  	cmp byte [rax], T_undefined
 14940 0000A4C4 0F84FECF0000            	je L_error_fvar_undefined
 14941 0000A4CA 803804                  	cmp byte [rax], T_closure
 14942 0000A4CD 0F8579D00000            	jne L_error_non_closure
 14943 0000A4D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14944 0000A4D6 FF7508                  	push qword [rbp + 8 * 1]
 14945                                   ; old ret addr
 14946 0000A4D9 FF7500                  	push qword [rbp]
 14947                                   ; restore the old rbp
 14948 0000A4DC BB01000000              	mov rbx, 1
 14949 0000A4E1 4883C303                	add rbx, 3
 14950 0000A4E5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14951 0000A4E9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14952 0000A4EE 4C8D4DF8                	lea r9, [rbp - 8]
 14953 0000A4F2 B905000000              	mov rcx, 5
 14954                                  .L_tc_recycle_frame_loop_008c:
 14955 0000A4F7 4883F900                	cmp rcx, 0
 14956 0000A4FB 7413                    	je .L_tc_recycle_frame_done_008c
 14957 0000A4FD 4D8B11                  	mov r10, qword [r9]
 14958 0000A500 4D8910                  	mov qword [r8], r10
 14959 0000A503 4983E808                	sub r8, 8
 14960 0000A507 4983E908                	sub r9, 8
 14961 0000A50B 48FFC9                  	dec rcx
 14962 0000A50E EBE7                    	jmp .L_tc_recycle_frame_loop_008c
 14963                                  .L_tc_recycle_frame_done_008c:
 14964 0000A510 498D6008                	lea rsp, [r8 + 8]
 14965 0000A514 5D                      	pop rbp ; restore the old rbp
 14966 0000A515 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14967 0000A518 C9                      	leave
 14968 0000A519 C22000                  	ret AND_KILL_FRAME(2)
 14969                                  .L_lambda_simple_end_004e:	; new closure is in rax
 14970 0000A51C 50                      	push rax
 14971 0000A51D 6A01                    	push 1	; arg count
 14972 0000A51F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14973 0000A524 E8CCD00000              	call malloc
 14974 0000A529 50                      	push rax
 14975 0000A52A BF08000000              	mov rdi, 8 * 1	; new rib
 14976 0000A52F E8C1D00000              	call malloc
 14977 0000A534 50                      	push rax
 14978 0000A535 BF28000000              	mov rdi, 8 * 5	; extended env
 14979 0000A53A E8B6D00000              	call malloc
 14980 0000A53F 488B7D10                	mov rdi, ENV
 14981 0000A543 BE00000000              	mov rsi, 0
 14982 0000A548 BA01000000              	mov rdx, 1
 14983                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14984 0000A54D 4883FE04                	cmp rsi, 4
 14985 0000A551 7410                    	je .L_lambda_simple_env_end_004f
 14986 0000A553 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14987 0000A557 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14988 0000A55B 48FFC6                  	inc rsi
 14989 0000A55E 48FFC2                  	inc rdx
 14990 0000A561 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14991                                  .L_lambda_simple_env_end_004f:
 14992 0000A563 5B                      	pop rbx
 14993 0000A564 BE00000000              	mov rsi, 0
 14994                                  .L_lambda_simple_params_loop_004f:	; copy params
 14995 0000A569 4883FE01                	cmp rsi, 1
 14996 0000A56D 740E                    	je .L_lambda_simple_params_end_004f
 14997 0000A56F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14998 0000A574 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14999 0000A578 48FFC6                  	inc rsi
 15000 0000A57B EBEC                    	jmp .L_lambda_simple_params_loop_004f
 15001                                  .L_lambda_simple_params_end_004f:
 15002 0000A57D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15003 0000A580 4889C3                  	mov rbx, rax
 15004 0000A583 58                      	pop rax
 15005 0000A584 C60004                  	mov byte [rax], T_closure
 15006 0000A587 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15007 0000A58B 48C74009[98A50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 15008 0000A593 E9370B0000              	jmp .L_lambda_simple_end_004f
 15009                                  .L_lambda_simple_code_004f:	; lambda-simple body
 15010 0000A598 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15011 0000A59E 740B                    	je .L_lambda_simple_arity_check_ok_004f
 15012 0000A5A0 FF742410                	push qword [rsp + 8 * 2]
 15013 0000A5A4 6A01                    	push 1
 15014 0000A5A6 E903D00000              	jmp L_error_incorrect_arity_simple
 15015                                  .L_lambda_simple_arity_check_ok_004f:
 15016 0000A5AB C8000000                	enter 0, 0
 15017                                  	; preparing a tail-call
 15018 0000A5AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15019 0000A5B4 E83CD00000              	call malloc
 15020 0000A5B9 50                      	push rax
 15021 0000A5BA BF08000000              	mov rdi, 8 * 1	; new rib
 15022 0000A5BF E831D00000              	call malloc
 15023 0000A5C4 50                      	push rax
 15024 0000A5C5 BF30000000              	mov rdi, 8 * 6	; extended env
 15025 0000A5CA E826D00000              	call malloc
 15026 0000A5CF 488B7D10                	mov rdi, ENV
 15027 0000A5D3 BE00000000              	mov rsi, 0
 15028 0000A5D8 BA01000000              	mov rdx, 1
 15029                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 15030 0000A5DD 4883FE05                	cmp rsi, 5
 15031 0000A5E1 7410                    	je .L_lambda_simple_env_end_0050
 15032 0000A5E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15033 0000A5E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15034 0000A5EB 48FFC6                  	inc rsi
 15035 0000A5EE 48FFC2                  	inc rdx
 15036 0000A5F1 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 15037                                  .L_lambda_simple_env_end_0050:
 15038 0000A5F3 5B                      	pop rbx
 15039 0000A5F4 BE00000000              	mov rsi, 0
 15040                                  .L_lambda_simple_params_loop_0050:	; copy params
 15041 0000A5F9 4883FE01                	cmp rsi, 1
 15042 0000A5FD 740E                    	je .L_lambda_simple_params_end_0050
 15043 0000A5FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15044 0000A604 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15045 0000A608 48FFC6                  	inc rsi
 15046 0000A60B EBEC                    	jmp .L_lambda_simple_params_loop_0050
 15047                                  .L_lambda_simple_params_end_0050:
 15048 0000A60D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15049 0000A610 4889C3                  	mov rbx, rax
 15050 0000A613 58                      	pop rax
 15051 0000A614 C60004                  	mov byte [rax], T_closure
 15052 0000A617 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15053 0000A61B 48C74009[28A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 15054 0000A623 E980000000              	jmp .L_lambda_simple_end_0050
 15055                                  .L_lambda_simple_code_0050:	; lambda-simple body
 15056 0000A628 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15057 0000A62E 740B                    	je .L_lambda_simple_arity_check_ok_0050
 15058 0000A630 FF742410                	push qword [rsp + 8 * 2]
 15059 0000A634 6A02                    	push 2
 15060 0000A636 E973CF0000              	jmp L_error_incorrect_arity_simple
 15061                                  .L_lambda_simple_arity_check_ok_0050:
 15062 0000A63B C8000000                	enter 0, 0
 15063                                  	; preparing a tail-call
 15064 0000A63F 488B4520                	mov rax, PARAM(0)	; param a
 15065 0000A643 50                      	push rax
 15066 0000A644 488B4528                	mov rax, PARAM(1)	; param b
 15067 0000A648 50                      	push rax
 15068 0000A649 6A02                    	push 2	; arg count
 15069 0000A64B 488B4510                	mov rax, ENV
 15070 0000A64F 488B4010                	mov rax, qword [rax + 8 * 2]
 15071 0000A653 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15072 0000A656 803804                  	cmp byte [rax], T_closure
 15073 0000A659 0F85EDCE0000            	jne L_error_non_closure
 15074 0000A65F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15075 0000A662 FF7508                  	push qword [rbp + 8 * 1]
 15076                                   ; old ret addr
 15077 0000A665 FF7500                  	push qword [rbp]
 15078                                   ; restore the old rbp
 15079 0000A668 BB02000000              	mov rbx, 2
 15080 0000A66D 4883C303                	add rbx, 3
 15081 0000A671 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15082 0000A675 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15083 0000A67A 4C8D4DF8                	lea r9, [rbp - 8]
 15084 0000A67E B906000000              	mov rcx, 6
 15085                                  .L_tc_recycle_frame_loop_008e:
 15086 0000A683 4883F900                	cmp rcx, 0
 15087 0000A687 7413                    	je .L_tc_recycle_frame_done_008e
 15088 0000A689 4D8B11                  	mov r10, qword [r9]
 15089 0000A68C 4D8910                  	mov qword [r8], r10
 15090 0000A68F 4983E808                	sub r8, 8
 15091 0000A693 4983E908                	sub r9, 8
 15092 0000A697 48FFC9                  	dec rcx
 15093 0000A69A EBE7                    	jmp .L_tc_recycle_frame_loop_008e
 15094                                  .L_tc_recycle_frame_done_008e:
 15095 0000A69C 498D6008                	lea rsp, [r8 + 8]
 15096 0000A6A0 5D                      	pop rbp ; restore the old rbp
 15097 0000A6A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15098 0000A6A4 C9                      	leave
 15099 0000A6A5 C22000                  	ret AND_KILL_FRAME(2)
 15100                                  .L_lambda_simple_end_0050:	; new closure is in rax
 15101 0000A6A8 50                      	push rax
 15102 0000A6A9 6A01                    	push 1	; arg count
 15103 0000A6AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15104 0000A6B0 E840CF0000              	call malloc
 15105 0000A6B5 50                      	push rax
 15106 0000A6B6 BF08000000              	mov rdi, 8 * 1	; new rib
 15107 0000A6BB E835CF0000              	call malloc
 15108 0000A6C0 50                      	push rax
 15109 0000A6C1 BF30000000              	mov rdi, 8 * 6	; extended env
 15110 0000A6C6 E82ACF0000              	call malloc
 15111 0000A6CB 488B7D10                	mov rdi, ENV
 15112 0000A6CF BE00000000              	mov rsi, 0
 15113 0000A6D4 BA01000000              	mov rdx, 1
 15114                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 15115 0000A6D9 4883FE05                	cmp rsi, 5
 15116 0000A6DD 7410                    	je .L_lambda_simple_env_end_0051
 15117 0000A6DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15118 0000A6E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15119 0000A6E7 48FFC6                  	inc rsi
 15120 0000A6EA 48FFC2                  	inc rdx
 15121 0000A6ED EBEA                    	jmp .L_lambda_simple_env_loop_0051
 15122                                  .L_lambda_simple_env_end_0051:
 15123 0000A6EF 5B                      	pop rbx
 15124 0000A6F0 BE00000000              	mov rsi, 0
 15125                                  .L_lambda_simple_params_loop_0051:	; copy params
 15126 0000A6F5 4883FE01                	cmp rsi, 1
 15127 0000A6F9 740E                    	je .L_lambda_simple_params_end_0051
 15128 0000A6FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15129 0000A700 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15130 0000A704 48FFC6                  	inc rsi
 15131 0000A707 EBEC                    	jmp .L_lambda_simple_params_loop_0051
 15132                                  .L_lambda_simple_params_end_0051:
 15133 0000A709 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15134 0000A70C 4889C3                  	mov rbx, rax
 15135 0000A70F 58                      	pop rax
 15136 0000A710 C60004                  	mov byte [rax], T_closure
 15137 0000A713 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15138 0000A717 48C74009[24A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 15139 0000A71F E959090000              	jmp .L_lambda_simple_end_0051
 15140                                  .L_lambda_simple_code_0051:	; lambda-simple body
 15141 0000A724 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15142 0000A72A 740B                    	je .L_lambda_simple_arity_check_ok_0051
 15143 0000A72C FF742410                	push qword [rsp + 8 * 2]
 15144 0000A730 6A01                    	push 1
 15145 0000A732 E977CE0000              	jmp L_error_incorrect_arity_simple
 15146                                  .L_lambda_simple_arity_check_ok_0051:
 15147 0000A737 C8000000                	enter 0, 0
 15148                                  	; preparing a tail-call
 15149 0000A73B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15150 0000A740 E8B0CE0000              	call malloc
 15151 0000A745 50                      	push rax
 15152 0000A746 BF08000000              	mov rdi, 8 * 1	; new rib
 15153 0000A74B E8A5CE0000              	call malloc
 15154 0000A750 50                      	push rax
 15155 0000A751 BF38000000              	mov rdi, 8 * 7	; extended env
 15156 0000A756 E89ACE0000              	call malloc
 15157 0000A75B 488B7D10                	mov rdi, ENV
 15158 0000A75F BE00000000              	mov rsi, 0
 15159 0000A764 BA01000000              	mov rdx, 1
 15160                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 15161 0000A769 4883FE06                	cmp rsi, 6
 15162 0000A76D 7410                    	je .L_lambda_simple_env_end_0052
 15163 0000A76F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15164 0000A773 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15165 0000A777 48FFC6                  	inc rsi
 15166 0000A77A 48FFC2                  	inc rdx
 15167 0000A77D EBEA                    	jmp .L_lambda_simple_env_loop_0052
 15168                                  .L_lambda_simple_env_end_0052:
 15169 0000A77F 5B                      	pop rbx
 15170 0000A780 BE00000000              	mov rsi, 0
 15171                                  .L_lambda_simple_params_loop_0052:	; copy params
 15172 0000A785 4883FE01                	cmp rsi, 1
 15173 0000A789 740E                    	je .L_lambda_simple_params_end_0052
 15174 0000A78B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15175 0000A790 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15176 0000A794 48FFC6                  	inc rsi
 15177 0000A797 EBEC                    	jmp .L_lambda_simple_params_loop_0052
 15178                                  .L_lambda_simple_params_end_0052:
 15179 0000A799 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15180 0000A79C 4889C3                  	mov rbx, rax
 15181 0000A79F 58                      	pop rax
 15182 0000A7A0 C60004                  	mov byte [rax], T_closure
 15183 0000A7A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15184 0000A7A7 48C74009[B4A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 15185 0000A7AF E9A2000000              	jmp .L_lambda_simple_end_0052
 15186                                  .L_lambda_simple_code_0052:	; lambda-simple body
 15187 0000A7B4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15188 0000A7BA 740B                    	je .L_lambda_simple_arity_check_ok_0052
 15189 0000A7BC FF742410                	push qword [rsp + 8 * 2]
 15190 0000A7C0 6A02                    	push 2
 15191 0000A7C2 E9E7CD0000              	jmp L_error_incorrect_arity_simple
 15192                                  .L_lambda_simple_arity_check_ok_0052:
 15193 0000A7C7 C8000000                	enter 0, 0
 15194                                  	; preparing a tail-call
 15195                                  	; preparing a non-tail-call
 15196 0000A7CB 488B4528                	mov rax, PARAM(1)	; param b
 15197 0000A7CF 50                      	push rax
 15198 0000A7D0 488B4520                	mov rax, PARAM(0)	; param a
 15199 0000A7D4 50                      	push rax
 15200 0000A7D5 6A02                    	push 2	; arg count
 15201 0000A7D7 488B4510                	mov rax, ENV
 15202 0000A7DB 488B00                  	mov rax, qword [rax + 8 * 0]
 15203 0000A7DE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15204 0000A7E1 803804                  	cmp byte [rax], T_closure
 15205 0000A7E4 0F8562CD0000            	jne L_error_non_closure
 15206 0000A7EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 15207 0000A7ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 15208 0000A7F0 50                      	push rax
 15209 0000A7F1 6A01                    	push 1	; arg count
 15210 0000A7F3 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 15211 0000A7FB 803805                  	cmp byte [rax], T_undefined
 15212 0000A7FE 0F84C4CC0000            	je L_error_fvar_undefined
 15213 0000A804 803804                  	cmp byte [rax], T_closure
 15214 0000A807 0F853FCD0000            	jne L_error_non_closure
 15215 0000A80D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15216 0000A810 FF7508                  	push qword [rbp + 8 * 1]
 15217                                   ; old ret addr
 15218 0000A813 FF7500                  	push qword [rbp]
 15219                                   ; restore the old rbp
 15220 0000A816 BB01000000              	mov rbx, 1
 15221 0000A81B 4883C303                	add rbx, 3
 15222 0000A81F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15223 0000A823 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15224 0000A828 4C8D4DF8                	lea r9, [rbp - 8]
 15225 0000A82C B905000000              	mov rcx, 5
 15226                                  .L_tc_recycle_frame_loop_0090:
 15227 0000A831 4883F900                	cmp rcx, 0
 15228 0000A835 7413                    	je .L_tc_recycle_frame_done_0090
 15229 0000A837 4D8B11                  	mov r10, qword [r9]
 15230 0000A83A 4D8910                  	mov qword [r8], r10
 15231 0000A83D 4983E808                	sub r8, 8
 15232 0000A841 4983E908                	sub r9, 8
 15233 0000A845 48FFC9                  	dec rcx
 15234 0000A848 EBE7                    	jmp .L_tc_recycle_frame_loop_0090
 15235                                  .L_tc_recycle_frame_done_0090:
 15236 0000A84A 498D6008                	lea rsp, [r8 + 8]
 15237 0000A84E 5D                      	pop rbp ; restore the old rbp
 15238 0000A84F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15239 0000A852 C9                      	leave
 15240 0000A853 C22000                  	ret AND_KILL_FRAME(2)
 15241                                  .L_lambda_simple_end_0052:	; new closure is in rax
 15242 0000A856 50                      	push rax
 15243 0000A857 6A01                    	push 1	; arg count
 15244 0000A859 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15245 0000A85E E892CD0000              	call malloc
 15246 0000A863 50                      	push rax
 15247 0000A864 BF08000000              	mov rdi, 8 * 1	; new rib
 15248 0000A869 E887CD0000              	call malloc
 15249 0000A86E 50                      	push rax
 15250 0000A86F BF38000000              	mov rdi, 8 * 7	; extended env
 15251 0000A874 E87CCD0000              	call malloc
 15252 0000A879 488B7D10                	mov rdi, ENV
 15253 0000A87D BE00000000              	mov rsi, 0
 15254 0000A882 BA01000000              	mov rdx, 1
 15255                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15256 0000A887 4883FE06                	cmp rsi, 6
 15257 0000A88B 7410                    	je .L_lambda_simple_env_end_0053
 15258 0000A88D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15259 0000A891 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15260 0000A895 48FFC6                  	inc rsi
 15261 0000A898 48FFC2                  	inc rdx
 15262 0000A89B EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15263                                  .L_lambda_simple_env_end_0053:
 15264 0000A89D 5B                      	pop rbx
 15265 0000A89E BE00000000              	mov rsi, 0
 15266                                  .L_lambda_simple_params_loop_0053:	; copy params
 15267 0000A8A3 4883FE01                	cmp rsi, 1
 15268 0000A8A7 740E                    	je .L_lambda_simple_params_end_0053
 15269 0000A8A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15270 0000A8AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15271 0000A8B2 48FFC6                  	inc rsi
 15272 0000A8B5 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15273                                  .L_lambda_simple_params_end_0053:
 15274 0000A8B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15275 0000A8BA 4889C3                  	mov rbx, rax
 15276 0000A8BD 58                      	pop rax
 15277 0000A8BE C60004                  	mov byte [rax], T_closure
 15278 0000A8C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15279 0000A8C5 48C74009[D2A80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15280 0000A8CD E959070000              	jmp .L_lambda_simple_end_0053
 15281                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15282 0000A8D2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15283 0000A8D8 740B                    	je .L_lambda_simple_arity_check_ok_0053
 15284 0000A8DA FF742410                	push qword [rsp + 8 * 2]
 15285 0000A8DE 6A01                    	push 1
 15286 0000A8E0 E9C9CC0000              	jmp L_error_incorrect_arity_simple
 15287                                  .L_lambda_simple_arity_check_ok_0053:
 15288 0000A8E5 C8000000                	enter 0, 0
 15289                                  	; preparing a tail-call
 15290 0000A8E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15291 0000A8EE E802CD0000              	call malloc
 15292 0000A8F3 50                      	push rax
 15293 0000A8F4 BF08000000              	mov rdi, 8 * 1	; new rib
 15294 0000A8F9 E8F7CC0000              	call malloc
 15295 0000A8FE 50                      	push rax
 15296 0000A8FF BF40000000              	mov rdi, 8 * 8	; extended env
 15297 0000A904 E8ECCC0000              	call malloc
 15298 0000A909 488B7D10                	mov rdi, ENV
 15299 0000A90D BE00000000              	mov rsi, 0
 15300 0000A912 BA01000000              	mov rdx, 1
 15301                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15302 0000A917 4883FE07                	cmp rsi, 7
 15303 0000A91B 7410                    	je .L_lambda_simple_env_end_0054
 15304 0000A91D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15305 0000A921 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15306 0000A925 48FFC6                  	inc rsi
 15307 0000A928 48FFC2                  	inc rdx
 15308 0000A92B EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15309                                  .L_lambda_simple_env_end_0054:
 15310 0000A92D 5B                      	pop rbx
 15311 0000A92E BE00000000              	mov rsi, 0
 15312                                  .L_lambda_simple_params_loop_0054:	; copy params
 15313 0000A933 4883FE01                	cmp rsi, 1
 15314 0000A937 740E                    	je .L_lambda_simple_params_end_0054
 15315 0000A939 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15316 0000A93E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15317 0000A942 48FFC6                  	inc rsi
 15318 0000A945 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15319                                  .L_lambda_simple_params_end_0054:
 15320 0000A947 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15321 0000A94A 4889C3                  	mov rbx, rax
 15322 0000A94D 58                      	pop rax
 15323 0000A94E C60004                  	mov byte [rax], T_closure
 15324 0000A951 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15325 0000A955 48C74009[62A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15326 0000A95D E9E2040000              	jmp .L_lambda_simple_end_0054
 15327                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15328 0000A962 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15329 0000A968 740B                    	je .L_lambda_simple_arity_check_ok_0054
 15330 0000A96A FF742410                	push qword [rsp + 8 * 2]
 15331 0000A96E 6A01                    	push 1
 15332 0000A970 E939CC0000              	jmp L_error_incorrect_arity_simple
 15333                                  .L_lambda_simple_arity_check_ok_0054:
 15334 0000A975 C8000000                	enter 0, 0
 15335                                  	; preparing a tail-call
 15336 0000A979 48B8-                   	mov rax, L_constants + 1993
 15336 0000A97B [C907000000000000] 
 15337 0000A983 50                      	push rax
 15338 0000A984 6A01                    	push 1	; arg count
 15339 0000A986 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15340 0000A98B E865CC0000              	call malloc
 15341 0000A990 50                      	push rax
 15342 0000A991 BF08000000              	mov rdi, 8 * 1	; new rib
 15343 0000A996 E85ACC0000              	call malloc
 15344 0000A99B 50                      	push rax
 15345 0000A99C BF48000000              	mov rdi, 8 * 9	; extended env
 15346 0000A9A1 E84FCC0000              	call malloc
 15347 0000A9A6 488B7D10                	mov rdi, ENV
 15348 0000A9AA BE00000000              	mov rsi, 0
 15349 0000A9AF BA01000000              	mov rdx, 1
 15350                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15351 0000A9B4 4883FE08                	cmp rsi, 8
 15352 0000A9B8 7410                    	je .L_lambda_simple_env_end_0055
 15353 0000A9BA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15354 0000A9BE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15355 0000A9C2 48FFC6                  	inc rsi
 15356 0000A9C5 48FFC2                  	inc rdx
 15357 0000A9C8 EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15358                                  .L_lambda_simple_env_end_0055:
 15359 0000A9CA 5B                      	pop rbx
 15360 0000A9CB BE00000000              	mov rsi, 0
 15361                                  .L_lambda_simple_params_loop_0055:	; copy params
 15362 0000A9D0 4883FE01                	cmp rsi, 1
 15363 0000A9D4 740E                    	je .L_lambda_simple_params_end_0055
 15364 0000A9D6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15365 0000A9DB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15366 0000A9DF 48FFC6                  	inc rsi
 15367 0000A9E2 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15368                                  .L_lambda_simple_params_end_0055:
 15369 0000A9E4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15370 0000A9E7 4889C3                  	mov rbx, rax
 15371 0000A9EA 58                      	pop rax
 15372 0000A9EB C60004                  	mov byte [rax], T_closure
 15373 0000A9EE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15374 0000A9F2 48C74009[FFA90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15375 0000A9FA E9F3030000              	jmp .L_lambda_simple_end_0055
 15376                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15377 0000A9FF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15378 0000AA05 740B                    	je .L_lambda_simple_arity_check_ok_0055
 15379 0000AA07 FF742410                	push qword [rsp + 8 * 2]
 15380 0000AA0B 6A01                    	push 1
 15381 0000AA0D E99CCB0000              	jmp L_error_incorrect_arity_simple
 15382                                  .L_lambda_simple_arity_check_ok_0055:
 15383 0000AA12 C8000000                	enter 0, 0
 15384 0000AA16 BF08000000              	mov rdi, 8*1
 15385 0000AA1B E8D5CB0000              	call malloc
 15386 0000AA20 488B5D20                	mov rbx, PARAM(0)
 15387 0000AA24 488918                  	mov qword [rax], rbx
 15388 0000AA27 48894520                	mov PARAM(0), rax
 15389 0000AA2B 48B8-                   	mov rax, sob_void
 15389 0000AA2D [0000000000000000] 
 15390                                  
 15391 0000AA35 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15392 0000AA3A E8B6CB0000              	call malloc
 15393 0000AA3F 50                      	push rax
 15394 0000AA40 BF08000000              	mov rdi, 8 * 1	; new rib
 15395 0000AA45 E8ABCB0000              	call malloc
 15396 0000AA4A 50                      	push rax
 15397 0000AA4B BF50000000              	mov rdi, 8 * 10	; extended env
 15398 0000AA50 E8A0CB0000              	call malloc
 15399 0000AA55 488B7D10                	mov rdi, ENV
 15400 0000AA59 BE00000000              	mov rsi, 0
 15401 0000AA5E BA01000000              	mov rdx, 1
 15402                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15403 0000AA63 4883FE09                	cmp rsi, 9
 15404 0000AA67 7410                    	je .L_lambda_simple_env_end_0056
 15405 0000AA69 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15406 0000AA6D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15407 0000AA71 48FFC6                  	inc rsi
 15408 0000AA74 48FFC2                  	inc rdx
 15409 0000AA77 EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15410                                  .L_lambda_simple_env_end_0056:
 15411 0000AA79 5B                      	pop rbx
 15412 0000AA7A BE00000000              	mov rsi, 0
 15413                                  .L_lambda_simple_params_loop_0056:	; copy params
 15414 0000AA7F 4883FE01                	cmp rsi, 1
 15415 0000AA83 740E                    	je .L_lambda_simple_params_end_0056
 15416 0000AA85 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15417 0000AA8A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15418 0000AA8E 48FFC6                  	inc rsi
 15419 0000AA91 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15420                                  .L_lambda_simple_params_end_0056:
 15421 0000AA93 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15422 0000AA96 4889C3                  	mov rbx, rax
 15423 0000AA99 58                      	pop rax
 15424 0000AA9A C60004                  	mov byte [rax], T_closure
 15425 0000AA9D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15426 0000AAA1 48C74009[AEAA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15427 0000AAA9 E95C010000              	jmp .L_lambda_simple_end_0056
 15428                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15429 0000AAAE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15430 0000AAB4 740B                    	je .L_lambda_simple_arity_check_ok_0056
 15431 0000AAB6 FF742410                	push qword [rsp + 8 * 2]
 15432 0000AABA 6A02                    	push 2
 15433 0000AABC E9EDCA0000              	jmp L_error_incorrect_arity_simple
 15434                                  .L_lambda_simple_arity_check_ok_0056:
 15435 0000AAC1 C8000000                	enter 0, 0
 15436                                  	; preparing a non-tail-call
 15437 0000AAC5 488B4528                	mov rax, PARAM(1)	; param s
 15438 0000AAC9 50                      	push rax
 15439 0000AACA 6A01                    	push 1	; arg count
 15440 0000AACC 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 15441 0000AAD4 803805                  	cmp byte [rax], T_undefined
 15442 0000AAD7 0F84EBC90000            	je L_error_fvar_undefined
 15443 0000AADD 803804                  	cmp byte [rax], T_closure
 15444 0000AAE0 0F8566CA0000            	jne L_error_non_closure
 15445 0000AAE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15446 0000AAE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15447 0000AAEC 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 15448 0000AAF2 0F850E010000            	jne .L_or_end_0006; if its not false (true) then we need to return it and not the last element
 15449                                  	; preparing a non-tail-call
 15450                                  	; preparing a non-tail-call
 15451 0000AAF8 488B4528                	mov rax, PARAM(1)	; param s
 15452 0000AAFC 50                      	push rax
 15453 0000AAFD 6A01                    	push 1	; arg count
 15454 0000AAFF 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15455 0000AB07 803805                  	cmp byte [rax], T_undefined
 15456 0000AB0A 0F84B8C90000            	je L_error_fvar_undefined
 15457 0000AB10 803804                  	cmp byte [rax], T_closure
 15458 0000AB13 0F8533CA0000            	jne L_error_non_closure
 15459 0000AB19 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15460 0000AB1C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15461 0000AB1F 50                      	push rax
 15462 0000AB20 488B4520                	mov rax, PARAM(0)	; param a
 15463 0000AB24 50                      	push rax
 15464 0000AB25 6A02                    	push 2	; arg count
 15465 0000AB27 488B4510                	mov rax, ENV
 15466 0000AB2B 488B4008                	mov rax, qword [rax + 8 * 1]
 15467 0000AB2F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15468 0000AB32 803804                  	cmp byte [rax], T_closure
 15469 0000AB35 0F8511CA0000            	jne L_error_non_closure
 15470 0000AB3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15471 0000AB3E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15472 0000AB41 483D[02000000]          	cmp rax, sob_boolean_false
 15473 0000AB47 0F84AF000000            	je .L_if_else_0050
 15474                                  	; preparing a tail-call
 15475                                  	; preparing a non-tail-call
 15476 0000AB4D 488B4528                	mov rax, PARAM(1)	; param s
 15477 0000AB51 50                      	push rax
 15478 0000AB52 6A01                    	push 1	; arg count
 15479 0000AB54 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 15480 0000AB5C 803805                  	cmp byte [rax], T_undefined
 15481 0000AB5F 0F8463C90000            	je L_error_fvar_undefined
 15482 0000AB65 803804                  	cmp byte [rax], T_closure
 15483 0000AB68 0F85DEC90000            	jne L_error_non_closure
 15484 0000AB6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15485 0000AB71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15486 0000AB74 50                      	push rax
 15487                                  	; preparing a non-tail-call
 15488 0000AB75 488B4528                	mov rax, PARAM(1)	; param s
 15489 0000AB79 50                      	push rax
 15490 0000AB7A 6A01                    	push 1	; arg count
 15491 0000AB7C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15492 0000AB84 803805                  	cmp byte [rax], T_undefined
 15493 0000AB87 0F843BC90000            	je L_error_fvar_undefined
 15494 0000AB8D 803804                  	cmp byte [rax], T_closure
 15495 0000AB90 0F85B6C90000            	jne L_error_non_closure
 15496 0000AB96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15497 0000AB99 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15498 0000AB9C 50                      	push rax
 15499 0000AB9D 6A02                    	push 2	; arg count
 15500 0000AB9F 488B4510                	mov rax, ENV
 15501 0000ABA3 488B00                  	mov rax, qword [rax + 8 * 0]
 15502 0000ABA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15503 0000ABA9 488B00                  	mov rax, qword [rax]
 15504 0000ABAC 803804                  	cmp byte [rax], T_closure
 15505 0000ABAF 0F8597C90000            	jne L_error_non_closure
 15506 0000ABB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15507 0000ABB8 FF7508                  	push qword [rbp + 8 * 1]
 15508                                   ; old ret addr
 15509 0000ABBB FF7500                  	push qword [rbp]
 15510                                   ; restore the old rbp
 15511 0000ABBE BB02000000              	mov rbx, 2
 15512 0000ABC3 4883C303                	add rbx, 3
 15513 0000ABC7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15514 0000ABCB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15515 0000ABD0 4C8D4DF8                	lea r9, [rbp - 8]
 15516 0000ABD4 B906000000              	mov rcx, 6
 15517                                  .L_tc_recycle_frame_loop_0093:
 15518 0000ABD9 4883F900                	cmp rcx, 0
 15519 0000ABDD 7413                    	je .L_tc_recycle_frame_done_0093
 15520 0000ABDF 4D8B11                  	mov r10, qword [r9]
 15521 0000ABE2 4D8910                  	mov qword [r8], r10
 15522 0000ABE5 4983E808                	sub r8, 8
 15523 0000ABE9 4983E908                	sub r9, 8
 15524 0000ABED 48FFC9                  	dec rcx
 15525 0000ABF0 EBE7                    	jmp .L_tc_recycle_frame_loop_0093
 15526                                  .L_tc_recycle_frame_done_0093:
 15527 0000ABF2 498D6008                	lea rsp, [r8 + 8]
 15528 0000ABF6 5D                      	pop rbp ; restore the old rbp
 15529 0000ABF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15530 0000ABFA EB0A                    	jmp .L_if_end_0050
 15531                                  .L_if_else_0050:
 15532 0000ABFC 48B8-                   	mov rax, L_constants + 2
 15532 0000ABFE [0200000000000000] 
 15533                                  .L_if_end_0050:
 15534                                  .L_or_end_0006:
 15535 0000AC06 C9                      	leave
 15536 0000AC07 C22000                  	ret AND_KILL_FRAME(2)
 15537                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15538 0000AC0A 50                      	push rax
 15539 0000AC0B 488B4520                	mov rax, PARAM(0)	; param run
 15540 0000AC0F 8F00                    	pop qword [rax]
 15541 0000AC11 48B8-                   	mov rax, sob_void
 15541 0000AC13 [0000000000000000] 
 15542                                  
 15543 0000AC1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15544 0000AC20 E8D0C90000              	call malloc
 15545 0000AC25 50                      	push rax
 15546 0000AC26 BF08000000              	mov rdi, 8 * 1	; new rib
 15547 0000AC2B E8C5C90000              	call malloc
 15548 0000AC30 50                      	push rax
 15549 0000AC31 BF50000000              	mov rdi, 8 * 10	; extended env
 15550 0000AC36 E8BAC90000              	call malloc
 15551 0000AC3B 488B7D10                	mov rdi, ENV
 15552 0000AC3F 4831F6                  	 xor rsi, rsi
 15553 0000AC42 4831D2                  	 xor rdx, rdx
 15554 0000AC45 48FFC2                  	inc rdx
 15555                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 15556 0000AC48 4883FE09                	cmp rsi, 9
 15557 0000AC4C 7410                    	je .L_lambda_opt_env_end_000e
 15558 0000AC4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15559 0000AC52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15560 0000AC56 48FFC6                  	inc rsi
 15561 0000AC59 48FFC2                  	inc rdx
 15562 0000AC5C EBEA                    	jmp .L_lambda_opt_env_loop_000e
 15563                                  .L_lambda_opt_env_end_000e:
 15564 0000AC5E 5B                      	pop rbx
 15565 0000AC5F 4831F6                  	xor rsi, rsi
 15566                                  .L_lambda_opt_params_loop_000e:	; copy params
 15567 0000AC62 4883FE01                	cmp rsi, 1
 15568 0000AC66 740E                    	je .L_lambda_opt_params_end_000e
 15569 0000AC68 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15570 0000AC6D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15571 0000AC71 48FFC6                  	inc rsi
 15572 0000AC74 EBEC                    	jmp .L_lambda_opt_params_loop_000e
 15573                                  .L_lambda_opt_params_end_000e:
 15574 0000AC76 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15575 0000AC79 4889C3                  	mov rbx, rax
 15576 0000AC7C 58                      	pop rax
 15577 0000AC7D C60004                  	mov byte [rax], T_closure
 15578 0000AC80 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15579 0000AC84 48C74009[91AC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 15580 0000AC8C E95D010000              	jmp .L_lambda_opt_end_000e
 15581                                  .L_lambda_opt_code_000e:; lambda opt body
 15582 0000AC91 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15583 0000AC97 7409                    	je .L_lambda_opt_arity_check_exact_000e
 15584 0000AC99 7F57                    	jg .L_lambda_opt_arity_check_more_000e
 15585 0000AC9B 6A01                    	push 1
 15586 0000AC9D E920C90000              	jmp L_error_incorrect_arity_opt
 15587                                  .L_lambda_opt_arity_check_exact_000e:
 15588 0000ACA2 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 15589 0000ACA6 4C894C24F8              	mov qword [rsp -8], r9
 15590 0000ACAB 4C8B4C2408              	mov r9, qword [rsp +8]
 15591 0000ACB0 4C890C24                	mov qword [rsp +8 * 0], r9
 15592 0000ACB4 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 15593 0000ACB9 4C89C9                  	mov rcx, r9
 15594 0000ACBC 49FFC1                  	inc r9
 15595 0000ACBF 4C894C2408              	mov qword [rsp +8], r9
 15596 0000ACC4 4889E2                  	mov rdx, rsp
 15597 0000ACC7 4883C218                	add rdx, 24
 15598                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000e:
 15599 0000ACCB 4883F900                	cmp rcx, 0
 15600 0000ACCF 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000e
 15601 0000ACD1 4C8B02                  	mov r8, qword [rdx]
 15602 0000ACD4 4C8942F8                	mov qword [rdx - 8], r8
 15603 0000ACD8 4883C208                	add rdx, 8
 15604 0000ACDC 48FFC9                  	dec rcx
 15605 0000ACDF EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000e
 15606                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000e:
 15607 0000ACE1 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 15608 0000ACE9 4883EC08                	sub rsp, 8
 15609 0000ACED E984000000              	jmp .L_lambda_opt_stack_adjusted_000e
 15610                                  .L_lambda_opt_arity_check_more_000e:
 15611 0000ACF2 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 15612 0000ACF7 4D89C4                  	mov r12, r8
 15613 0000ACFA 4C89C1                  	mov rcx, r8
 15614 0000ACFD 4D8D5002                	lea r10, [r8 + 2] 
 15615 0000AD01 4883E901                	sub rcx, 1
 15616 0000AD05 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 15617 0000AD0A 49B9-                   	mov r9, sob_nil
 15617 0000AD0C [0100000000000000] 
 15618                                  .L_lambda_opt_create_list_of_opt_params_000e:
 15619 0000AD14 4883F900                	cmp rcx, 0
 15620 0000AD18 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000e
 15621 0000AD1A BF11000000              	mov rdi, 17
 15622 0000AD1F E8D1C80000              	call malloc
 15623 0000AD24 C60021                  	mov byte [rax], T_pair
 15624 0000AD27 498B1B                  	mov rbx, qword [r11]
 15625 0000AD2A 48895801                	mov qword [rax +1], rbx
 15626 0000AD2E 4C894809                	mov qword [rax + 1 + 8], r9
 15627 0000AD32 4989C1                  	mov r9, rax
 15628 0000AD35 48FFC9                  	dec rcx
 15629 0000AD38 4983EB08                	sub r11, 8
 15630 0000AD3C EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000e
 15631                                  .L_lambda_opt_create_list_of_opt_params_end_000e:
 15632 0000AD3E 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 15633 0000AD43 4D8908                  	mov qword [r8], r9
 15634 0000AD46 4E8D14D500000000        	lea r10, [8 * r10]
 15635 0000AD4E 4901E2                  	add r10, rsp
 15636 0000AD51 B905000000              	mov rcx, 4 + 1
 15637                                  .L_lambda_opt_stack_shrink_loop_000e:
 15638 0000AD56 4883F900                	cmp rcx, 0
 15639 0000AD5A 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000e
 15640 0000AD5C 4D8B18                  	mov r11, qword [r8]
 15641 0000AD5F 4D891A                  	mov qword [r10], r11
 15642 0000AD62 4983E808                	sub r8, 8
 15643 0000AD66 4983EA08                	sub r10, 8
 15644 0000AD6A 48FFC9                  	dec rcx
 15645 0000AD6D EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15646                                  .L_lambda_opt_stack_shrink_loop_exit_000e:
 15647 0000AD6F 4983C208                	add r10, 8
 15648 0000AD73 4C89D4                  	mov rsp, r10
 15649                                  .L_lambda_opt_stack_adjusted_000e:;continue with the code, the stack is ok
 15650 0000AD76 48C744241002000000      	mov qword [rsp + 8*2], 2
 15651 0000AD7F C8000000                	enter 0, 0
 15652                                  	; preparing a tail-call
 15653 0000AD83 488B4528                	mov rax, PARAM(1)	; param s
 15654 0000AD87 50                      	push rax
 15655 0000AD88 488B4520                	mov rax, PARAM(0)	; param a
 15656 0000AD8C 50                      	push rax
 15657 0000AD8D 6A02                    	push 2	; arg count
 15658 0000AD8F 488B4510                	mov rax, ENV
 15659 0000AD93 488B00                  	mov rax, qword [rax + 8 * 0]
 15660 0000AD96 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15661 0000AD99 488B00                  	mov rax, qword [rax]
 15662 0000AD9C 803804                  	cmp byte [rax], T_closure
 15663 0000AD9F 0F85A7C70000            	jne L_error_non_closure
 15664 0000ADA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15665 0000ADA8 FF7508                  	push qword [rbp + 8 * 1]
 15666                                   ; old ret addr
 15667 0000ADAB FF7500                  	push qword [rbp]
 15668                                   ; restore the old rbp
 15669 0000ADAE BB02000000              	mov rbx, 2
 15670 0000ADB3 4883C303                	add rbx, 3
 15671 0000ADB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15672 0000ADBB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15673 0000ADC0 4C8D4DF8                	lea r9, [rbp - 8]
 15674 0000ADC4 B906000000              	mov rcx, 6
 15675                                  .L_tc_recycle_frame_loop_0094:
 15676 0000ADC9 4883F900                	cmp rcx, 0
 15677 0000ADCD 7413                    	je .L_tc_recycle_frame_done_0094
 15678 0000ADCF 4D8B11                  	mov r10, qword [r9]
 15679 0000ADD2 4D8910                  	mov qword [r8], r10
 15680 0000ADD5 4983E808                	sub r8, 8
 15681 0000ADD9 4983E908                	sub r9, 8
 15682 0000ADDD 48FFC9                  	dec rcx
 15683 0000ADE0 EBE7                    	jmp .L_tc_recycle_frame_loop_0094
 15684                                  .L_tc_recycle_frame_done_0094:
 15685 0000ADE2 498D6008                	lea rsp, [r8 + 8]
 15686 0000ADE6 5D                      	pop rbp ; restore the old rbp
 15687 0000ADE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15688 0000ADEA C9                      	leave
 15689 0000ADEB C22000                  	ret 8 * (2 + 2)
 15690                                  .L_lambda_opt_end_000e:	; new closure is in rax
 15691 0000ADEE C9                      	leave
 15692 0000ADEF C21800                  	ret AND_KILL_FRAME(1)
 15693                                  .L_lambda_simple_end_0055:	; new closure is in rax
 15694 0000ADF2 803804                  	cmp byte [rax], T_closure
 15695 0000ADF5 0F8551C70000            	jne L_error_non_closure
 15696 0000ADFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15697 0000ADFE FF7508                  	push qword [rbp + 8 * 1]
 15698                                   ; old ret addr
 15699 0000AE01 FF7500                  	push qword [rbp]
 15700                                   ; restore the old rbp
 15701 0000AE04 BB01000000              	mov rbx, 1
 15702 0000AE09 4883C303                	add rbx, 3
 15703 0000AE0D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15704 0000AE11 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15705 0000AE16 4C8D4DF8                	lea r9, [rbp - 8]
 15706 0000AE1A B905000000              	mov rcx, 5
 15707                                  .L_tc_recycle_frame_loop_0092:
 15708 0000AE1F 4883F900                	cmp rcx, 0
 15709 0000AE23 7413                    	je .L_tc_recycle_frame_done_0092
 15710 0000AE25 4D8B11                  	mov r10, qword [r9]
 15711 0000AE28 4D8910                  	mov qword [r8], r10
 15712 0000AE2B 4983E808                	sub r8, 8
 15713 0000AE2F 4983E908                	sub r9, 8
 15714 0000AE33 48FFC9                  	dec rcx
 15715 0000AE36 EBE7                    	jmp .L_tc_recycle_frame_loop_0092
 15716                                  .L_tc_recycle_frame_done_0092:
 15717 0000AE38 498D6008                	lea rsp, [r8 + 8]
 15718 0000AE3C 5D                      	pop rbp ; restore the old rbp
 15719 0000AE3D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15720 0000AE40 C9                      	leave
 15721 0000AE41 C21800                  	ret AND_KILL_FRAME(1)
 15722                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15723 0000AE44 50                      	push rax
 15724 0000AE45 6A01                    	push 1	; arg count
 15725 0000AE47 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15726 0000AE4C E8A4C70000              	call malloc
 15727 0000AE51 50                      	push rax
 15728 0000AE52 BF08000000              	mov rdi, 8 * 1	; new rib
 15729 0000AE57 E899C70000              	call malloc
 15730 0000AE5C 50                      	push rax
 15731 0000AE5D BF40000000              	mov rdi, 8 * 8	; extended env
 15732 0000AE62 E88EC70000              	call malloc
 15733 0000AE67 488B7D10                	mov rdi, ENV
 15734 0000AE6B BE00000000              	mov rsi, 0
 15735 0000AE70 BA01000000              	mov rdx, 1
 15736                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15737 0000AE75 4883FE07                	cmp rsi, 7
 15738 0000AE79 7410                    	je .L_lambda_simple_env_end_0057
 15739 0000AE7B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15740 0000AE7F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15741 0000AE83 48FFC6                  	inc rsi
 15742 0000AE86 48FFC2                  	inc rdx
 15743 0000AE89 EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15744                                  .L_lambda_simple_env_end_0057:
 15745 0000AE8B 5B                      	pop rbx
 15746 0000AE8C BE00000000              	mov rsi, 0
 15747                                  .L_lambda_simple_params_loop_0057:	; copy params
 15748 0000AE91 4883FE01                	cmp rsi, 1
 15749 0000AE95 740E                    	je .L_lambda_simple_params_end_0057
 15750 0000AE97 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15751 0000AE9C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15752 0000AEA0 48FFC6                  	inc rsi
 15753 0000AEA3 EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15754                                  .L_lambda_simple_params_end_0057:
 15755 0000AEA5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15756 0000AEA8 4889C3                  	mov rbx, rax
 15757 0000AEAB 58                      	pop rax
 15758 0000AEAC C60004                  	mov byte [rax], T_closure
 15759 0000AEAF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15760 0000AEB3 48C74009[C0AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15761 0000AEBB E919010000              	jmp .L_lambda_simple_end_0057
 15762                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15763 0000AEC0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15764 0000AEC6 740B                    	je .L_lambda_simple_arity_check_ok_0057
 15765 0000AEC8 FF742410                	push qword [rsp + 8 * 2]
 15766 0000AECC 6A01                    	push 1
 15767 0000AECE E9DBC60000              	jmp L_error_incorrect_arity_simple
 15768                                  .L_lambda_simple_arity_check_ok_0057:
 15769 0000AED3 C8000000                	enter 0, 0
 15770                                  	; preparing a non-tail-call
 15771 0000AED7 488B4510                	mov rax, ENV
 15772 0000AEDB 488B4020                	mov rax, qword [rax + 8 * 4]
 15773 0000AEDF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15774 0000AEE2 50                      	push rax
 15775 0000AEE3 6A01                    	push 1	; arg count
 15776 0000AEE5 488B4520                	mov rax, PARAM(0)	; param make-run
 15777 0000AEE9 803804                  	cmp byte [rax], T_closure
 15778 0000AEEC 0F855AC60000            	jne L_error_non_closure
 15779 0000AEF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15780 0000AEF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15781 0000AEF8 48890425[090E0000]      	mov qword [free_var_4], rax
 15782 0000AF00 48B8-                   	mov rax, sob_void
 15782 0000AF02 [0000000000000000] 
 15783                                  
 15784                                  	; preparing a non-tail-call
 15785 0000AF0A 488B4510                	mov rax, ENV
 15786 0000AF0E 488B00                  	mov rax, qword [rax + 8 * 0]
 15787 0000AF11 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 15788 0000AF14 50                      	push rax
 15789 0000AF15 6A01                    	push 1	; arg count
 15790 0000AF17 488B4520                	mov rax, PARAM(0)	; param make-run
 15791 0000AF1B 803804                  	cmp byte [rax], T_closure
 15792 0000AF1E 0F8528C60000            	jne L_error_non_closure
 15793 0000AF24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15794 0000AF27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15795 0000AF2A 48890425[1A0E0000]      	mov qword [free_var_5], rax
 15796 0000AF32 48B8-                   	mov rax, sob_void
 15796 0000AF34 [0000000000000000] 
 15797                                  
 15798                                  	; preparing a non-tail-call
 15799 0000AF3C 488B4510                	mov rax, ENV
 15800 0000AF40 488B4008                	mov rax, qword [rax + 8 * 1]
 15801 0000AF44 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15802 0000AF47 50                      	push rax
 15803 0000AF48 6A01                    	push 1	; arg count
 15804 0000AF4A 488B4520                	mov rax, PARAM(0)	; param make-run
 15805 0000AF4E 803804                  	cmp byte [rax], T_closure
 15806 0000AF51 0F85F5C50000            	jne L_error_non_closure
 15807 0000AF57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15808 0000AF5A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15809 0000AF5D 48890425[3C0E0000]      	mov qword [free_var_7], rax
 15810 0000AF65 48B8-                   	mov rax, sob_void
 15810 0000AF67 [0000000000000000] 
 15811                                  
 15812                                  	; preparing a non-tail-call
 15813 0000AF6F 488B4510                	mov rax, ENV
 15814 0000AF73 488B4010                	mov rax, qword [rax + 8 * 2]
 15815 0000AF77 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 15816 0000AF7A 50                      	push rax
 15817 0000AF7B 6A01                    	push 1	; arg count
 15818 0000AF7D 488B4520                	mov rax, PARAM(0)	; param make-run
 15819 0000AF81 803804                  	cmp byte [rax], T_closure
 15820 0000AF84 0F85C2C50000            	jne L_error_non_closure
 15821 0000AF8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15822 0000AF8D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15823 0000AF90 48890425[4D0E0000]      	mov qword [free_var_8], rax
 15824 0000AF98 48B8-                   	mov rax, sob_void
 15824 0000AF9A [0000000000000000] 
 15825                                  
 15826                                  	; preparing a non-tail-call
 15827 0000AFA2 488B4510                	mov rax, ENV
 15828 0000AFA6 488B4018                	mov rax, qword [rax + 8 * 3]
 15829 0000AFAA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 15830 0000AFAD 50                      	push rax
 15831 0000AFAE 6A01                    	push 1	; arg count
 15832 0000AFB0 488B4520                	mov rax, PARAM(0)	; param make-run
 15833 0000AFB4 803804                  	cmp byte [rax], T_closure
 15834 0000AFB7 0F858FC50000            	jne L_error_non_closure
 15835 0000AFBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 15836 0000AFC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15837 0000AFC3 48890425[2B0E0000]      	mov qword [free_var_6], rax
 15838 0000AFCB 48B8-                   	mov rax, sob_void
 15838 0000AFCD [0000000000000000] 
 15839 0000AFD5 C9                      	leave
 15840 0000AFD6 C21800                  	ret AND_KILL_FRAME(1)
 15841                                  .L_lambda_simple_end_0057:	; new closure is in rax
 15842 0000AFD9 803804                  	cmp byte [rax], T_closure
 15843 0000AFDC 0F856AC50000            	jne L_error_non_closure
 15844 0000AFE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15845 0000AFE5 FF7508                  	push qword [rbp + 8 * 1]
 15846                                   ; old ret addr
 15847 0000AFE8 FF7500                  	push qword [rbp]
 15848                                   ; restore the old rbp
 15849 0000AFEB BB01000000              	mov rbx, 1
 15850 0000AFF0 4883C303                	add rbx, 3
 15851 0000AFF4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15852 0000AFF8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15853 0000AFFD 4C8D4DF8                	lea r9, [rbp - 8]
 15854 0000B001 B905000000              	mov rcx, 5
 15855                                  .L_tc_recycle_frame_loop_0091:
 15856 0000B006 4883F900                	cmp rcx, 0
 15857 0000B00A 7413                    	je .L_tc_recycle_frame_done_0091
 15858 0000B00C 4D8B11                  	mov r10, qword [r9]
 15859 0000B00F 4D8910                  	mov qword [r8], r10
 15860 0000B012 4983E808                	sub r8, 8
 15861 0000B016 4983E908                	sub r9, 8
 15862 0000B01A 48FFC9                  	dec rcx
 15863 0000B01D EBE7                    	jmp .L_tc_recycle_frame_loop_0091
 15864                                  .L_tc_recycle_frame_done_0091:
 15865 0000B01F 498D6008                	lea rsp, [r8 + 8]
 15866 0000B023 5D                      	pop rbp ; restore the old rbp
 15867 0000B024 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15868 0000B027 C9                      	leave
 15869 0000B028 C21800                  	ret AND_KILL_FRAME(1)
 15870                                  .L_lambda_simple_end_0053:	; new closure is in rax
 15871 0000B02B 803804                  	cmp byte [rax], T_closure
 15872 0000B02E 0F8518C50000            	jne L_error_non_closure
 15873 0000B034 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15874 0000B037 FF7508                  	push qword [rbp + 8 * 1]
 15875                                   ; old ret addr
 15876 0000B03A FF7500                  	push qword [rbp]
 15877                                   ; restore the old rbp
 15878 0000B03D BB01000000              	mov rbx, 1
 15879 0000B042 4883C303                	add rbx, 3
 15880 0000B046 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15881 0000B04A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15882 0000B04F 4C8D4DF8                	lea r9, [rbp - 8]
 15883 0000B053 B905000000              	mov rcx, 5
 15884                                  .L_tc_recycle_frame_loop_008f:
 15885 0000B058 4883F900                	cmp rcx, 0
 15886 0000B05C 7413                    	je .L_tc_recycle_frame_done_008f
 15887 0000B05E 4D8B11                  	mov r10, qword [r9]
 15888 0000B061 4D8910                  	mov qword [r8], r10
 15889 0000B064 4983E808                	sub r8, 8
 15890 0000B068 4983E908                	sub r9, 8
 15891 0000B06C 48FFC9                  	dec rcx
 15892 0000B06F EBE7                    	jmp .L_tc_recycle_frame_loop_008f
 15893                                  .L_tc_recycle_frame_done_008f:
 15894 0000B071 498D6008                	lea rsp, [r8 + 8]
 15895 0000B075 5D                      	pop rbp ; restore the old rbp
 15896 0000B076 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15897 0000B079 C9                      	leave
 15898 0000B07A C21800                  	ret AND_KILL_FRAME(1)
 15899                                  .L_lambda_simple_end_0051:	; new closure is in rax
 15900 0000B07D 803804                  	cmp byte [rax], T_closure
 15901 0000B080 0F85C6C40000            	jne L_error_non_closure
 15902 0000B086 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15903 0000B089 FF7508                  	push qword [rbp + 8 * 1]
 15904                                   ; old ret addr
 15905 0000B08C FF7500                  	push qword [rbp]
 15906                                   ; restore the old rbp
 15907 0000B08F BB01000000              	mov rbx, 1
 15908 0000B094 4883C303                	add rbx, 3
 15909 0000B098 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15910 0000B09C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15911 0000B0A1 4C8D4DF8                	lea r9, [rbp - 8]
 15912 0000B0A5 B905000000              	mov rcx, 5
 15913                                  .L_tc_recycle_frame_loop_008d:
 15914 0000B0AA 4883F900                	cmp rcx, 0
 15915 0000B0AE 7413                    	je .L_tc_recycle_frame_done_008d
 15916 0000B0B0 4D8B11                  	mov r10, qword [r9]
 15917 0000B0B3 4D8910                  	mov qword [r8], r10
 15918 0000B0B6 4983E808                	sub r8, 8
 15919 0000B0BA 4983E908                	sub r9, 8
 15920 0000B0BE 48FFC9                  	dec rcx
 15921 0000B0C1 EBE7                    	jmp .L_tc_recycle_frame_loop_008d
 15922                                  .L_tc_recycle_frame_done_008d:
 15923 0000B0C3 498D6008                	lea rsp, [r8 + 8]
 15924 0000B0C7 5D                      	pop rbp ; restore the old rbp
 15925 0000B0C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15926 0000B0CB C9                      	leave
 15927 0000B0CC C21800                  	ret AND_KILL_FRAME(1)
 15928                                  .L_lambda_simple_end_004f:	; new closure is in rax
 15929 0000B0CF 803804                  	cmp byte [rax], T_closure
 15930 0000B0D2 0F8574C40000            	jne L_error_non_closure
 15931 0000B0D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15932 0000B0DB FF7508                  	push qword [rbp + 8 * 1]
 15933                                   ; old ret addr
 15934 0000B0DE FF7500                  	push qword [rbp]
 15935                                   ; restore the old rbp
 15936 0000B0E1 BB01000000              	mov rbx, 1
 15937 0000B0E6 4883C303                	add rbx, 3
 15938 0000B0EA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15939 0000B0EE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15940 0000B0F3 4C8D4DF8                	lea r9, [rbp - 8]
 15941 0000B0F7 B905000000              	mov rcx, 5
 15942                                  .L_tc_recycle_frame_loop_008b:
 15943 0000B0FC 4883F900                	cmp rcx, 0
 15944 0000B100 7413                    	je .L_tc_recycle_frame_done_008b
 15945 0000B102 4D8B11                  	mov r10, qword [r9]
 15946 0000B105 4D8910                  	mov qword [r8], r10
 15947 0000B108 4983E808                	sub r8, 8
 15948 0000B10C 4983E908                	sub r9, 8
 15949 0000B110 48FFC9                  	dec rcx
 15950 0000B113 EBE7                    	jmp .L_tc_recycle_frame_loop_008b
 15951                                  .L_tc_recycle_frame_done_008b:
 15952 0000B115 498D6008                	lea rsp, [r8 + 8]
 15953 0000B119 5D                      	pop rbp ; restore the old rbp
 15954 0000B11A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15955 0000B11D C9                      	leave
 15956 0000B11E C21800                  	ret AND_KILL_FRAME(1)
 15957                                  .L_lambda_simple_end_004d:	; new closure is in rax
 15958 0000B121 803804                  	cmp byte [rax], T_closure
 15959 0000B124 0F8522C40000            	jne L_error_non_closure
 15960 0000B12A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15961 0000B12D FF7508                  	push qword [rbp + 8 * 1]
 15962                                   ; old ret addr
 15963 0000B130 FF7500                  	push qword [rbp]
 15964                                   ; restore the old rbp
 15965 0000B133 BB01000000              	mov rbx, 1
 15966 0000B138 4883C303                	add rbx, 3
 15967 0000B13C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15968 0000B140 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15969 0000B145 4C8D4DF8                	lea r9, [rbp - 8]
 15970 0000B149 B905000000              	mov rcx, 5
 15971                                  .L_tc_recycle_frame_loop_008a:
 15972 0000B14E 4883F900                	cmp rcx, 0
 15973 0000B152 7413                    	je .L_tc_recycle_frame_done_008a
 15974 0000B154 4D8B11                  	mov r10, qword [r9]
 15975 0000B157 4D8910                  	mov qword [r8], r10
 15976 0000B15A 4983E808                	sub r8, 8
 15977 0000B15E 4983E908                	sub r9, 8
 15978 0000B162 48FFC9                  	dec rcx
 15979 0000B165 EBE7                    	jmp .L_tc_recycle_frame_loop_008a
 15980                                  .L_tc_recycle_frame_done_008a:
 15981 0000B167 498D6008                	lea rsp, [r8 + 8]
 15982 0000B16B 5D                      	pop rbp ; restore the old rbp
 15983 0000B16C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15984 0000B16F C9                      	leave
 15985 0000B170 C21800                  	ret AND_KILL_FRAME(1)
 15986                                  .L_lambda_simple_end_004c:	; new closure is in rax
 15987 0000B173 803804                  	cmp byte [rax], T_closure
 15988 0000B176 0F85D0C30000            	jne L_error_non_closure
 15989 0000B17C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15990 0000B17F FF7508                  	push qword [rbp + 8 * 1]
 15991                                   ; old ret addr
 15992 0000B182 FF7500                  	push qword [rbp]
 15993                                   ; restore the old rbp
 15994 0000B185 BB01000000              	mov rbx, 1
 15995 0000B18A 4883C303                	add rbx, 3
 15996 0000B18E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15997 0000B192 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15998 0000B197 4C8D4DF8                	lea r9, [rbp - 8]
 15999 0000B19B B905000000              	mov rcx, 5
 16000                                  .L_tc_recycle_frame_loop_0089:
 16001 0000B1A0 4883F900                	cmp rcx, 0
 16002 0000B1A4 7413                    	je .L_tc_recycle_frame_done_0089
 16003 0000B1A6 4D8B11                  	mov r10, qword [r9]
 16004 0000B1A9 4D8910                  	mov qword [r8], r10
 16005 0000B1AC 4983E808                	sub r8, 8
 16006 0000B1B0 4983E908                	sub r9, 8
 16007 0000B1B4 48FFC9                  	dec rcx
 16008 0000B1B7 EBE7                    	jmp .L_tc_recycle_frame_loop_0089
 16009                                  .L_tc_recycle_frame_done_0089:
 16010 0000B1B9 498D6008                	lea rsp, [r8 + 8]
 16011 0000B1BD 5D                      	pop rbp ; restore the old rbp
 16012 0000B1BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16013 0000B1C1 C9                      	leave
 16014 0000B1C2 C21800                  	ret AND_KILL_FRAME(1)
 16015                                  .L_lambda_simple_end_004b:	; new closure is in rax
 16016 0000B1C5 803804                  	cmp byte [rax], T_closure
 16017 0000B1C8 0F857EC30000            	jne L_error_non_closure
 16018 0000B1CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16019 0000B1D1 FF7508                  	push qword [rbp + 8 * 1]
 16020                                   ; old ret addr
 16021 0000B1D4 FF7500                  	push qword [rbp]
 16022                                   ; restore the old rbp
 16023 0000B1D7 BB01000000              	mov rbx, 1
 16024 0000B1DC 4883C303                	add rbx, 3
 16025 0000B1E0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16026 0000B1E4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16027 0000B1E9 4C8D4DF8                	lea r9, [rbp - 8]
 16028 0000B1ED B905000000              	mov rcx, 5
 16029                                  .L_tc_recycle_frame_loop_007b:
 16030 0000B1F2 4883F900                	cmp rcx, 0
 16031 0000B1F6 7413                    	je .L_tc_recycle_frame_done_007b
 16032 0000B1F8 4D8B11                  	mov r10, qword [r9]
 16033 0000B1FB 4D8910                  	mov qword [r8], r10
 16034 0000B1FE 4983E808                	sub r8, 8
 16035 0000B202 4983E908                	sub r9, 8
 16036 0000B206 48FFC9                  	dec rcx
 16037 0000B209 EBE7                    	jmp .L_tc_recycle_frame_loop_007b
 16038                                  .L_tc_recycle_frame_done_007b:
 16039 0000B20B 498D6008                	lea rsp, [r8 + 8]
 16040 0000B20F 5D                      	pop rbp ; restore the old rbp
 16041 0000B210 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16042 0000B213 C9                      	leave
 16043 0000B214 C21800                  	ret AND_KILL_FRAME(1)
 16044                                  .L_lambda_simple_end_0048:	; new closure is in rax
 16045 0000B217 803804                  	cmp byte [rax], T_closure
 16046 0000B21A 0F852CC30000            	jne L_error_non_closure
 16047 0000B220 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16048 0000B223 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16049                                  
 16050 0000B226 4889C7                  	mov rdi, rax
 16051 0000B229 E81CC60000              	call print_sexpr_if_not_void
 16052 0000B22E 48B8-                   	mov rax, L_constants + 0
 16052 0000B230 [0000000000000000] 
 16053 0000B238 48890425[AF120000]      	mov qword [free_var_74], rax
 16054 0000B240 48B8-                   	mov rax, sob_void
 16054 0000B242 [0000000000000000] 
 16055                                  
 16056 0000B24A 4889C7                  	mov rdi, rax
 16057 0000B24D E8F8C50000              	call print_sexpr_if_not_void
 16058 0000B252 48B8-                   	mov rax, L_constants + 0
 16058 0000B254 [0000000000000000] 
 16059 0000B25C 48890425[9E120000]      	mov qword [free_var_73], rax
 16060 0000B264 48B8-                   	mov rax, sob_void
 16060 0000B266 [0000000000000000] 
 16061                                  
 16062 0000B26E 4889C7                  	mov rdi, rax
 16063 0000B271 E8D4C50000              	call print_sexpr_if_not_void
 16064 0000B276 48B8-                   	mov rax, L_constants + 0
 16064 0000B278 [0000000000000000] 
 16065 0000B280 48890425[C0120000]      	mov qword [free_var_75], rax
 16066 0000B288 48B8-                   	mov rax, sob_void
 16066 0000B28A [0000000000000000] 
 16067                                  
 16068 0000B292 4889C7                  	mov rdi, rax
 16069 0000B295 E8B0C50000              	call print_sexpr_if_not_void
 16070 0000B29A 48B8-                   	mov rax, L_constants + 0
 16070 0000B29C [0000000000000000] 
 16071 0000B2A4 48890425[E2120000]      	mov qword [free_var_77], rax
 16072 0000B2AC 48B8-                   	mov rax, sob_void
 16072 0000B2AE [0000000000000000] 
 16073                                  
 16074 0000B2B6 4889C7                  	mov rdi, rax
 16075 0000B2B9 E88CC50000              	call print_sexpr_if_not_void
 16076 0000B2BE 48B8-                   	mov rax, L_constants + 0
 16076 0000B2C0 [0000000000000000] 
 16077 0000B2C8 48890425[D1120000]      	mov qword [free_var_76], rax
 16078 0000B2D0 48B8-                   	mov rax, sob_void
 16078 0000B2D2 [0000000000000000] 
 16079                                  
 16080 0000B2DA 4889C7                  	mov rdi, rax
 16081 0000B2DD E868C50000              	call print_sexpr_if_not_void
 16082                                  	; preparing a non-tail-call
 16083 0000B2E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16084 0000B2E7 E809C30000              	call malloc
 16085 0000B2EC 50                      	push rax
 16086 0000B2ED BF00000000              	mov rdi, 8 * 0	; new rib
 16087 0000B2F2 E8FEC20000              	call malloc
 16088 0000B2F7 50                      	push rax
 16089 0000B2F8 BF08000000              	mov rdi, 8 * 1	; extended env
 16090 0000B2FD E8F3C20000              	call malloc
 16091 0000B302 488B7D10                	mov rdi, ENV
 16092 0000B306 BE00000000              	mov rsi, 0
 16093 0000B30B BA01000000              	mov rdx, 1
 16094                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 16095 0000B310 4883FE00                	cmp rsi, 0
 16096 0000B314 7410                    	je .L_lambda_simple_env_end_0058
 16097 0000B316 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16098 0000B31A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16099 0000B31E 48FFC6                  	inc rsi
 16100 0000B321 48FFC2                  	inc rdx
 16101 0000B324 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 16102                                  .L_lambda_simple_env_end_0058:
 16103 0000B326 5B                      	pop rbx
 16104 0000B327 BE00000000              	mov rsi, 0
 16105                                  .L_lambda_simple_params_loop_0058:	; copy params
 16106 0000B32C 4883FE00                	cmp rsi, 0
 16107 0000B330 740E                    	je .L_lambda_simple_params_end_0058
 16108 0000B332 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16109 0000B337 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16110 0000B33B 48FFC6                  	inc rsi
 16111 0000B33E EBEC                    	jmp .L_lambda_simple_params_loop_0058
 16112                                  .L_lambda_simple_params_end_0058:
 16113 0000B340 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16114 0000B343 4889C3                  	mov rbx, rax
 16115 0000B346 58                      	pop rax
 16116 0000B347 C60004                  	mov byte [rax], T_closure
 16117 0000B34A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16118 0000B34E 48C74009[5BB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 16119 0000B356 E92D020000              	jmp .L_lambda_simple_end_0058
 16120                                  .L_lambda_simple_code_0058:	; lambda-simple body
 16121 0000B35B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16122 0000B361 740B                    	je .L_lambda_simple_arity_check_ok_0058
 16123 0000B363 FF742410                	push qword [rsp + 8 * 2]
 16124 0000B367 6A01                    	push 1
 16125 0000B369 E940C20000              	jmp L_error_incorrect_arity_simple
 16126                                  .L_lambda_simple_arity_check_ok_0058:
 16127 0000B36E C8000000                	enter 0, 0
 16128 0000B372 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16129 0000B377 E879C20000              	call malloc
 16130 0000B37C 50                      	push rax
 16131 0000B37D BF08000000              	mov rdi, 8 * 1	; new rib
 16132 0000B382 E86EC20000              	call malloc
 16133 0000B387 50                      	push rax
 16134 0000B388 BF10000000              	mov rdi, 8 * 2	; extended env
 16135 0000B38D E863C20000              	call malloc
 16136 0000B392 488B7D10                	mov rdi, ENV
 16137 0000B396 4831F6                  	 xor rsi, rsi
 16138 0000B399 4831D2                  	 xor rdx, rdx
 16139 0000B39C 48FFC2                  	inc rdx
 16140                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 16141 0000B39F 4883FE01                	cmp rsi, 1
 16142 0000B3A3 7410                    	je .L_lambda_opt_env_end_000f
 16143 0000B3A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16144 0000B3A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16145 0000B3AD 48FFC6                  	inc rsi
 16146 0000B3B0 48FFC2                  	inc rdx
 16147 0000B3B3 EBEA                    	jmp .L_lambda_opt_env_loop_000f
 16148                                  .L_lambda_opt_env_end_000f:
 16149 0000B3B5 5B                      	pop rbx
 16150 0000B3B6 4831F6                  	xor rsi, rsi
 16151                                  .L_lambda_opt_params_loop_000f:	; copy params
 16152 0000B3B9 4883FE01                	cmp rsi, 1
 16153 0000B3BD 740E                    	je .L_lambda_opt_params_end_000f
 16154 0000B3BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16155 0000B3C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16156 0000B3C8 48FFC6                  	inc rsi
 16157 0000B3CB EBEC                    	jmp .L_lambda_opt_params_loop_000f
 16158                                  .L_lambda_opt_params_end_000f:
 16159 0000B3CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16160 0000B3D0 4889C3                  	mov rbx, rax
 16161 0000B3D3 58                      	pop rax
 16162 0000B3D4 C60004                  	mov byte [rax], T_closure
 16163 0000B3D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16164 0000B3DB 48C74009[E8B30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 16165 0000B3E3 E99C010000              	jmp .L_lambda_opt_end_000f
 16166                                  .L_lambda_opt_code_000f:; lambda opt body
 16167 0000B3E8 48837C241000            	cmp qword [rsp + 8 * 2], 0
 16168 0000B3EE 7409                    	je .L_lambda_opt_arity_check_exact_000f
 16169 0000B3F0 7F57                    	jg .L_lambda_opt_arity_check_more_000f
 16170 0000B3F2 6A00                    	push 0
 16171 0000B3F4 E9C9C10000              	jmp L_error_incorrect_arity_opt
 16172                                  .L_lambda_opt_arity_check_exact_000f:
 16173 0000B3F9 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 16174 0000B3FD 4C894C24F8              	mov qword [rsp -8], r9
 16175 0000B402 4C8B4C2408              	mov r9, qword [rsp +8]
 16176 0000B407 4C890C24                	mov qword [rsp +8 * 0], r9
 16177 0000B40B 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 16178 0000B410 4C89C9                  	mov rcx, r9
 16179 0000B413 49FFC1                  	inc r9
 16180 0000B416 4C894C2408              	mov qword [rsp +8], r9
 16181 0000B41B 4889E2                  	mov rdx, rsp
 16182 0000B41E 4883C218                	add rdx, 24
 16183                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000f:
 16184 0000B422 4883F900                	cmp rcx, 0
 16185 0000B426 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000f
 16186 0000B428 4C8B02                  	mov r8, qword [rdx]
 16187 0000B42B 4C8942F8                	mov qword [rdx - 8], r8
 16188 0000B42F 4883C208                	add rdx, 8
 16189 0000B433 48FFC9                  	dec rcx
 16190 0000B436 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000f
 16191                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000f:
 16192 0000B438 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 16193 0000B440 4883EC08                	sub rsp, 8
 16194 0000B444 E984000000              	jmp .L_lambda_opt_stack_adjusted_000f
 16195                                  .L_lambda_opt_arity_check_more_000f:
 16196 0000B449 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16197 0000B44E 4D89C4                  	mov r12, r8
 16198 0000B451 4C89C1                  	mov rcx, r8
 16199 0000B454 4D8D5002                	lea r10, [r8 + 2] 
 16200 0000B458 4883E900                	sub rcx, 0
 16201 0000B45C 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 16202 0000B461 49B9-                   	mov r9, sob_nil
 16202 0000B463 [0100000000000000] 
 16203                                  .L_lambda_opt_create_list_of_opt_params_000f:
 16204 0000B46B 4883F900                	cmp rcx, 0
 16205 0000B46F 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000f
 16206 0000B471 BF11000000              	mov rdi, 17
 16207 0000B476 E87AC10000              	call malloc
 16208 0000B47B C60021                  	mov byte [rax], T_pair
 16209 0000B47E 498B1B                  	mov rbx, qword [r11]
 16210 0000B481 48895801                	mov qword [rax +1], rbx
 16211 0000B485 4C894809                	mov qword [rax + 1 + 8], r9
 16212 0000B489 4989C1                  	mov r9, rax
 16213 0000B48C 48FFC9                  	dec rcx
 16214 0000B48F 4983EB08                	sub r11, 8
 16215 0000B493 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000f
 16216                                  .L_lambda_opt_create_list_of_opt_params_end_000f:
 16217 0000B495 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 16218 0000B49A 4D8908                  	mov qword [r8], r9
 16219 0000B49D 4E8D14D500000000        	lea r10, [8 * r10]
 16220 0000B4A5 4901E2                  	add r10, rsp
 16221 0000B4A8 B904000000              	mov rcx, 4 + 0
 16222                                  .L_lambda_opt_stack_shrink_loop_000f:
 16223 0000B4AD 4883F900                	cmp rcx, 0
 16224 0000B4B1 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000f
 16225 0000B4B3 4D8B18                  	mov r11, qword [r8]
 16226 0000B4B6 4D891A                  	mov qword [r10], r11
 16227 0000B4B9 4983E808                	sub r8, 8
 16228 0000B4BD 4983EA08                	sub r10, 8
 16229 0000B4C1 48FFC9                  	dec rcx
 16230 0000B4C4 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 16231                                  .L_lambda_opt_stack_shrink_loop_exit_000f:
 16232 0000B4C6 4983C208                	add r10, 8
 16233 0000B4CA 4C89D4                  	mov rsp, r10
 16234                                  .L_lambda_opt_stack_adjusted_000f:;continue with the code, the stack is ok
 16235 0000B4CD 48C744241001000000      	mov qword [rsp + 8*2], 1
 16236 0000B4D6 C8000000                	enter 0, 0
 16237                                  	; preparing a tail-call
 16238                                  	; preparing a non-tail-call
 16239 0000B4DA 488B4520                	mov rax, PARAM(0)	; param s
 16240 0000B4DE 50                      	push rax
 16241 0000B4DF 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16242 0000B4E7 803805                  	cmp byte [rax], T_undefined
 16243 0000B4EA 0F84D8BF0000            	je L_error_fvar_undefined
 16244 0000B4F0 50                      	push rax
 16245 0000B4F1 6A02                    	push 2	; arg count
 16246 0000B4F3 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 16247 0000B4FB 803805                  	cmp byte [rax], T_undefined
 16248 0000B4FE 0F84C4BF0000            	je L_error_fvar_undefined
 16249 0000B504 803804                  	cmp byte [rax], T_closure
 16250 0000B507 0F853FC00000            	jne L_error_non_closure
 16251 0000B50D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16252 0000B510 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16253 0000B513 50                      	push rax
 16254 0000B514 488B4510                	mov rax, ENV
 16255 0000B518 488B00                  	mov rax, qword [rax + 8 * 0]
 16256 0000B51B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16257 0000B51E 50                      	push rax
 16258 0000B51F 6A02                    	push 2	; arg count
 16259 0000B521 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 16260 0000B529 803805                  	cmp byte [rax], T_undefined
 16261 0000B52C 0F8496BF0000            	je L_error_fvar_undefined
 16262 0000B532 803804                  	cmp byte [rax], T_closure
 16263 0000B535 0F8511C00000            	jne L_error_non_closure
 16264 0000B53B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16265 0000B53E FF7508                  	push qword [rbp + 8 * 1]
 16266                                   ; old ret addr
 16267 0000B541 FF7500                  	push qword [rbp]
 16268                                   ; restore the old rbp
 16269 0000B544 BB02000000              	mov rbx, 2
 16270 0000B549 4883C303                	add rbx, 3
 16271 0000B54D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16272 0000B551 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16273 0000B556 4C8D4DF8                	lea r9, [rbp - 8]
 16274 0000B55A B906000000              	mov rcx, 6
 16275                                  .L_tc_recycle_frame_loop_0095:
 16276 0000B55F 4883F900                	cmp rcx, 0
 16277 0000B563 7413                    	je .L_tc_recycle_frame_done_0095
 16278 0000B565 4D8B11                  	mov r10, qword [r9]
 16279 0000B568 4D8910                  	mov qword [r8], r10
 16280 0000B56B 4983E808                	sub r8, 8
 16281 0000B56F 4983E908                	sub r9, 8
 16282 0000B573 48FFC9                  	dec rcx
 16283 0000B576 EBE7                    	jmp .L_tc_recycle_frame_loop_0095
 16284                                  .L_tc_recycle_frame_done_0095:
 16285 0000B578 498D6008                	lea rsp, [r8 + 8]
 16286 0000B57C 5D                      	pop rbp ; restore the old rbp
 16287 0000B57D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16288 0000B580 C9                      	leave
 16289 0000B581 C21800                  	ret 8 * (2 + 1)
 16290                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16291 0000B584 C9                      	leave
 16292 0000B585 C21800                  	ret AND_KILL_FRAME(1)
 16293                                  .L_lambda_simple_end_0058:	; new closure is in rax
 16294 0000B588 50                      	push rax
 16295 0000B589 6A01                    	push 1	; arg count
 16296 0000B58B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16297 0000B590 E860C00000              	call malloc
 16298 0000B595 50                      	push rax
 16299 0000B596 BF00000000              	mov rdi, 8 * 0	; new rib
 16300 0000B59B E855C00000              	call malloc
 16301 0000B5A0 50                      	push rax
 16302 0000B5A1 BF08000000              	mov rdi, 8 * 1	; extended env
 16303 0000B5A6 E84AC00000              	call malloc
 16304 0000B5AB 488B7D10                	mov rdi, ENV
 16305 0000B5AF BE00000000              	mov rsi, 0
 16306 0000B5B4 BA01000000              	mov rdx, 1
 16307                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 16308 0000B5B9 4883FE00                	cmp rsi, 0
 16309 0000B5BD 7410                    	je .L_lambda_simple_env_end_0059
 16310 0000B5BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16311 0000B5C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16312 0000B5C7 48FFC6                  	inc rsi
 16313 0000B5CA 48FFC2                  	inc rdx
 16314 0000B5CD EBEA                    	jmp .L_lambda_simple_env_loop_0059
 16315                                  .L_lambda_simple_env_end_0059:
 16316 0000B5CF 5B                      	pop rbx
 16317 0000B5D0 BE00000000              	mov rsi, 0
 16318                                  .L_lambda_simple_params_loop_0059:	; copy params
 16319 0000B5D5 4883FE00                	cmp rsi, 0
 16320 0000B5D9 740E                    	je .L_lambda_simple_params_end_0059
 16321 0000B5DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16322 0000B5E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16323 0000B5E4 48FFC6                  	inc rsi
 16324 0000B5E7 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 16325                                  .L_lambda_simple_params_end_0059:
 16326 0000B5E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16327 0000B5EC 4889C3                  	mov rbx, rax
 16328 0000B5EF 58                      	pop rax
 16329 0000B5F0 C60004                  	mov byte [rax], T_closure
 16330 0000B5F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16331 0000B5F7 48C74009[04B60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 16332 0000B5FF E938010000              	jmp .L_lambda_simple_end_0059
 16333                                  .L_lambda_simple_code_0059:	; lambda-simple body
 16334 0000B604 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16335 0000B60A 740B                    	je .L_lambda_simple_arity_check_ok_0059
 16336 0000B60C FF742410                	push qword [rsp + 8 * 2]
 16337 0000B610 6A01                    	push 1
 16338 0000B612 E997BF0000              	jmp L_error_incorrect_arity_simple
 16339                                  .L_lambda_simple_arity_check_ok_0059:
 16340 0000B617 C8000000                	enter 0, 0
 16341                                  	; preparing a non-tail-call
 16342 0000B61B 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 16343 0000B623 803805                  	cmp byte [rax], T_undefined
 16344 0000B626 0F849CBE0000            	je L_error_fvar_undefined
 16345 0000B62C 50                      	push rax
 16346 0000B62D 6A01                    	push 1	; arg count
 16347 0000B62F 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16348 0000B633 803804                  	cmp byte [rax], T_closure
 16349 0000B636 0F8510BF0000            	jne L_error_non_closure
 16350 0000B63C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16351 0000B63F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16352 0000B642 48890425[AF120000]      	mov qword [free_var_74], rax
 16353 0000B64A 48B8-                   	mov rax, sob_void
 16353 0000B64C [0000000000000000] 
 16354                                  
 16355                                  	; preparing a non-tail-call
 16356 0000B654 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16357 0000B65C 803805                  	cmp byte [rax], T_undefined
 16358 0000B65F 0F8463BE0000            	je L_error_fvar_undefined
 16359 0000B665 50                      	push rax
 16360 0000B666 6A01                    	push 1	; arg count
 16361 0000B668 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16362 0000B66C 803804                  	cmp byte [rax], T_closure
 16363 0000B66F 0F85D7BE0000            	jne L_error_non_closure
 16364 0000B675 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16365 0000B678 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16366 0000B67B 48890425[9E120000]      	mov qword [free_var_73], rax
 16367 0000B683 48B8-                   	mov rax, sob_void
 16367 0000B685 [0000000000000000] 
 16368                                  
 16369                                  	; preparing a non-tail-call
 16370 0000B68D 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 16371 0000B695 803805                  	cmp byte [rax], T_undefined
 16372 0000B698 0F842ABE0000            	je L_error_fvar_undefined
 16373 0000B69E 50                      	push rax
 16374 0000B69F 6A01                    	push 1	; arg count
 16375 0000B6A1 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16376 0000B6A5 803804                  	cmp byte [rax], T_closure
 16377 0000B6A8 0F859EBE0000            	jne L_error_non_closure
 16378 0000B6AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16379 0000B6B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16380 0000B6B4 48890425[C0120000]      	mov qword [free_var_75], rax
 16381 0000B6BC 48B8-                   	mov rax, sob_void
 16381 0000B6BE [0000000000000000] 
 16382                                  
 16383                                  	; preparing a non-tail-call
 16384 0000B6C6 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 16385 0000B6CE 803805                  	cmp byte [rax], T_undefined
 16386 0000B6D1 0F84F1BD0000            	je L_error_fvar_undefined
 16387 0000B6D7 50                      	push rax
 16388 0000B6D8 6A01                    	push 1	; arg count
 16389 0000B6DA 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16390 0000B6DE 803804                  	cmp byte [rax], T_closure
 16391 0000B6E1 0F8565BE0000            	jne L_error_non_closure
 16392 0000B6E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16393 0000B6EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 16394 0000B6ED 48890425[E2120000]      	mov qword [free_var_77], rax
 16395 0000B6F5 48B8-                   	mov rax, sob_void
 16395 0000B6F7 [0000000000000000] 
 16396                                  
 16397                                  	; preparing a non-tail-call
 16398 0000B6FF 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 16399 0000B707 803805                  	cmp byte [rax], T_undefined
 16400 0000B70A 0F84B8BD0000            	je L_error_fvar_undefined
 16401 0000B710 50                      	push rax
 16402 0000B711 6A01                    	push 1	; arg count
 16403 0000B713 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16404 0000B717 803804                  	cmp byte [rax], T_closure
 16405 0000B71A 0F852CBE0000            	jne L_error_non_closure
 16406 0000B720 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16407 0000B723 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16408 0000B726 48890425[D1120000]      	mov qword [free_var_76], rax
 16409 0000B72E 48B8-                   	mov rax, sob_void
 16409 0000B730 [0000000000000000] 
 16410 0000B738 C9                      	leave
 16411 0000B739 C21800                  	ret AND_KILL_FRAME(1)
 16412                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16413 0000B73C 803804                  	cmp byte [rax], T_closure
 16414 0000B73F 0F8507BE0000            	jne L_error_non_closure
 16415 0000B745 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16416 0000B748 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16417                                  
 16418 0000B74B 4889C7                  	mov rdi, rax
 16419 0000B74E E8F7C00000              	call print_sexpr_if_not_void
 16420 0000B753 48B8-                   	mov rax, L_constants + 0
 16420 0000B755 [0000000000000000] 
 16421 0000B75D 48890425[7C120000]      	mov qword [free_var_71], rax
 16422 0000B765 48B8-                   	mov rax, sob_void
 16422 0000B767 [0000000000000000] 
 16423                                  
 16424 0000B76F 4889C7                  	mov rdi, rax
 16425 0000B772 E8D3C00000              	call print_sexpr_if_not_void
 16426 0000B777 48B8-                   	mov rax, L_constants + 0
 16426 0000B779 [0000000000000000] 
 16427 0000B781 48890425[8D120000]      	mov qword [free_var_72], rax
 16428 0000B789 48B8-                   	mov rax, sob_void
 16428 0000B78B [0000000000000000] 
 16429                                  
 16430 0000B793 4889C7                  	mov rdi, rax
 16431 0000B796 E8AFC00000              	call print_sexpr_if_not_void
 16432                                  	; preparing a non-tail-call
 16433                                  	; preparing a non-tail-call
 16434                                  	; preparing a non-tail-call
 16435 0000B79B 48B8-                   	mov rax, L_constants + 2569
 16435 0000B79D [090A000000000000] 
 16436 0000B7A5 50                      	push rax
 16437 0000B7A6 6A01                    	push 1	; arg count
 16438 0000B7A8 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16439 0000B7B0 803805                  	cmp byte [rax], T_undefined
 16440 0000B7B3 0F840FBD0000            	je L_error_fvar_undefined
 16441 0000B7B9 803804                  	cmp byte [rax], T_closure
 16442 0000B7BC 0F858ABD0000            	jne L_error_non_closure
 16443 0000B7C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16444 0000B7C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16445 0000B7C8 50                      	push rax
 16446                                  	; preparing a non-tail-call
 16447 0000B7C9 48B8-                   	mov rax, L_constants + 2573
 16447 0000B7CB [0D0A000000000000] 
 16448 0000B7D3 50                      	push rax
 16449 0000B7D4 6A01                    	push 1	; arg count
 16450 0000B7D6 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16451 0000B7DE 803805                  	cmp byte [rax], T_undefined
 16452 0000B7E1 0F84E1BC0000            	je L_error_fvar_undefined
 16453 0000B7E7 803804                  	cmp byte [rax], T_closure
 16454 0000B7EA 0F855CBD0000            	jne L_error_non_closure
 16455 0000B7F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16456 0000B7F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16457 0000B7F6 50                      	push rax
 16458 0000B7F7 6A02                    	push 2	; arg count
 16459 0000B7F9 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16460 0000B801 803805                  	cmp byte [rax], T_undefined
 16461 0000B804 0F84BEBC0000            	je L_error_fvar_undefined
 16462 0000B80A 803804                  	cmp byte [rax], T_closure
 16463 0000B80D 0F8539BD0000            	jne L_error_non_closure
 16464 0000B813 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16465 0000B816 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16466 0000B819 50                      	push rax
 16467 0000B81A 6A01                    	push 1	; arg count
 16468 0000B81C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16469 0000B821 E8CFBD0000              	call malloc
 16470 0000B826 50                      	push rax
 16471 0000B827 BF00000000              	mov rdi, 8 * 0	; new rib
 16472 0000B82C E8C4BD0000              	call malloc
 16473 0000B831 50                      	push rax
 16474 0000B832 BF08000000              	mov rdi, 8 * 1	; extended env
 16475 0000B837 E8B9BD0000              	call malloc
 16476 0000B83C 488B7D10                	mov rdi, ENV
 16477 0000B840 BE00000000              	mov rsi, 0
 16478 0000B845 BA01000000              	mov rdx, 1
 16479                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 16480 0000B84A 4883FE00                	cmp rsi, 0
 16481 0000B84E 7410                    	je .L_lambda_simple_env_end_005a
 16482 0000B850 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16483 0000B854 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16484 0000B858 48FFC6                  	inc rsi
 16485 0000B85B 48FFC2                  	inc rdx
 16486 0000B85E EBEA                    	jmp .L_lambda_simple_env_loop_005a
 16487                                  .L_lambda_simple_env_end_005a:
 16488 0000B860 5B                      	pop rbx
 16489 0000B861 BE00000000              	mov rsi, 0
 16490                                  .L_lambda_simple_params_loop_005a:	; copy params
 16491 0000B866 4883FE00                	cmp rsi, 0
 16492 0000B86A 740E                    	je .L_lambda_simple_params_end_005a
 16493 0000B86C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16494 0000B871 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16495 0000B875 48FFC6                  	inc rsi
 16496 0000B878 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 16497                                  .L_lambda_simple_params_end_005a:
 16498 0000B87A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16499 0000B87D 4889C3                  	mov rbx, rax
 16500 0000B880 58                      	pop rax
 16501 0000B881 C60004                  	mov byte [rax], T_closure
 16502 0000B884 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16503 0000B888 48C74009[95B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 16504 0000B890 E973030000              	jmp .L_lambda_simple_end_005a
 16505                                  .L_lambda_simple_code_005a:	; lambda-simple body
 16506 0000B895 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16507 0000B89B 740B                    	je .L_lambda_simple_arity_check_ok_005a
 16508 0000B89D FF742410                	push qword [rsp + 8 * 2]
 16509 0000B8A1 6A01                    	push 1
 16510 0000B8A3 E906BD0000              	jmp L_error_incorrect_arity_simple
 16511                                  .L_lambda_simple_arity_check_ok_005a:
 16512 0000B8A8 C8000000                	enter 0, 0
 16513 0000B8AC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16514 0000B8B1 E83FBD0000              	call malloc
 16515 0000B8B6 50                      	push rax
 16516 0000B8B7 BF08000000              	mov rdi, 8 * 1	; new rib
 16517 0000B8BC E834BD0000              	call malloc
 16518 0000B8C1 50                      	push rax
 16519 0000B8C2 BF10000000              	mov rdi, 8 * 2	; extended env
 16520 0000B8C7 E829BD0000              	call malloc
 16521 0000B8CC 488B7D10                	mov rdi, ENV
 16522 0000B8D0 BE00000000              	mov rsi, 0
 16523 0000B8D5 BA01000000              	mov rdx, 1
 16524                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 16525 0000B8DA 4883FE01                	cmp rsi, 1
 16526 0000B8DE 7410                    	je .L_lambda_simple_env_end_005b
 16527 0000B8E0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16528 0000B8E4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16529 0000B8E8 48FFC6                  	inc rsi
 16530 0000B8EB 48FFC2                  	inc rdx
 16531 0000B8EE EBEA                    	jmp .L_lambda_simple_env_loop_005b
 16532                                  .L_lambda_simple_env_end_005b:
 16533 0000B8F0 5B                      	pop rbx
 16534 0000B8F1 BE00000000              	mov rsi, 0
 16535                                  .L_lambda_simple_params_loop_005b:	; copy params
 16536 0000B8F6 4883FE01                	cmp rsi, 1
 16537 0000B8FA 740E                    	je .L_lambda_simple_params_end_005b
 16538 0000B8FC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16539 0000B901 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16540 0000B905 48FFC6                  	inc rsi
 16541 0000B908 EBEC                    	jmp .L_lambda_simple_params_loop_005b
 16542                                  .L_lambda_simple_params_end_005b:
 16543 0000B90A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16544 0000B90D 4889C3                  	mov rbx, rax
 16545 0000B910 58                      	pop rax
 16546 0000B911 C60004                  	mov byte [rax], T_closure
 16547 0000B914 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16548 0000B918 48C74009[25B90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 16549 0000B920 E921010000              	jmp .L_lambda_simple_end_005b
 16550                                  .L_lambda_simple_code_005b:	; lambda-simple body
 16551 0000B925 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16552 0000B92B 740B                    	je .L_lambda_simple_arity_check_ok_005b
 16553 0000B92D FF742410                	push qword [rsp + 8 * 2]
 16554 0000B931 6A01                    	push 1
 16555 0000B933 E976BC0000              	jmp L_error_incorrect_arity_simple
 16556                                  .L_lambda_simple_arity_check_ok_005b:
 16557 0000B938 C8000000                	enter 0, 0
 16558                                  	; preparing a non-tail-call
 16559 0000B93C 48B8-                   	mov rax, L_constants + 2571
 16559 0000B93E [0B0A000000000000] 
 16560 0000B946 50                      	push rax
 16561 0000B947 488B4520                	mov rax, PARAM(0)	; param ch
 16562 0000B94B 50                      	push rax
 16563 0000B94C 48B8-                   	mov rax, L_constants + 2569
 16563 0000B94E [090A000000000000] 
 16564 0000B956 50                      	push rax
 16565 0000B957 6A03                    	push 3	; arg count
 16566 0000B959 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16567 0000B961 803805                  	cmp byte [rax], T_undefined
 16568 0000B964 0F845EBB0000            	je L_error_fvar_undefined
 16569 0000B96A 803804                  	cmp byte [rax], T_closure
 16570 0000B96D 0F85D9BB0000            	jne L_error_non_closure
 16571 0000B973 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16572 0000B976 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16573 0000B979 483D[02000000]          	cmp rax, sob_boolean_false
 16574 0000B97F 0F84B9000000            	je .L_if_else_0051
 16575                                  	; preparing a tail-call
 16576                                  	; preparing a non-tail-call
 16577 0000B985 488B4510                	mov rax, ENV
 16578 0000B989 488B00                  	mov rax, qword [rax + 8 * 0]
 16579 0000B98C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16580 0000B98F 50                      	push rax
 16581                                  	; preparing a non-tail-call
 16582 0000B990 488B4520                	mov rax, PARAM(0)	; param ch
 16583 0000B994 50                      	push rax
 16584 0000B995 6A01                    	push 1	; arg count
 16585 0000B997 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16586 0000B99F 803805                  	cmp byte [rax], T_undefined
 16587 0000B9A2 0F8420BB0000            	je L_error_fvar_undefined
 16588 0000B9A8 803804                  	cmp byte [rax], T_closure
 16589 0000B9AB 0F859BBB0000            	jne L_error_non_closure
 16590 0000B9B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16591 0000B9B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16592 0000B9B7 50                      	push rax
 16593 0000B9B8 6A02                    	push 2	; arg count
 16594 0000B9BA 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 16595 0000B9C2 803805                  	cmp byte [rax], T_undefined
 16596 0000B9C5 0F84FDBA0000            	je L_error_fvar_undefined
 16597 0000B9CB 803804                  	cmp byte [rax], T_closure
 16598 0000B9CE 0F8578BB0000            	jne L_error_non_closure
 16599 0000B9D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16600 0000B9D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16601 0000B9DA 50                      	push rax
 16602 0000B9DB 6A01                    	push 1	; arg count
 16603 0000B9DD 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16604 0000B9E5 803805                  	cmp byte [rax], T_undefined
 16605 0000B9E8 0F84DABA0000            	je L_error_fvar_undefined
 16606 0000B9EE 803804                  	cmp byte [rax], T_closure
 16607 0000B9F1 0F8555BB0000            	jne L_error_non_closure
 16608 0000B9F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16609 0000B9FA FF7508                  	push qword [rbp + 8 * 1]
 16610                                   ; old ret addr
 16611 0000B9FD FF7500                  	push qword [rbp]
 16612                                   ; restore the old rbp
 16613 0000BA00 BB01000000              	mov rbx, 1
 16614 0000BA05 4883C303                	add rbx, 3
 16615 0000BA09 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16616 0000BA0D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16617 0000BA12 4C8D4DF8                	lea r9, [rbp - 8]
 16618 0000BA16 B905000000              	mov rcx, 5
 16619                                  .L_tc_recycle_frame_loop_0096:
 16620 0000BA1B 4883F900                	cmp rcx, 0
 16621 0000BA1F 7413                    	je .L_tc_recycle_frame_done_0096
 16622 0000BA21 4D8B11                  	mov r10, qword [r9]
 16623 0000BA24 4D8910                  	mov qword [r8], r10
 16624 0000BA27 4983E808                	sub r8, 8
 16625 0000BA2B 4983E908                	sub r9, 8
 16626 0000BA2F 48FFC9                  	dec rcx
 16627 0000BA32 EBE7                    	jmp .L_tc_recycle_frame_loop_0096
 16628                                  .L_tc_recycle_frame_done_0096:
 16629 0000BA34 498D6008                	lea rsp, [r8 + 8]
 16630 0000BA38 5D                      	pop rbp ; restore the old rbp
 16631 0000BA39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16632 0000BA3C EB04                    	jmp .L_if_end_0051
 16633                                  .L_if_else_0051:
 16634 0000BA3E 488B4520                	mov rax, PARAM(0)	; param ch
 16635                                  .L_if_end_0051:
 16636 0000BA42 C9                      	leave
 16637 0000BA43 C21800                  	ret AND_KILL_FRAME(1)
 16638                                  .L_lambda_simple_end_005b:	; new closure is in rax
 16639 0000BA46 48890425[7C120000]      	mov qword [free_var_71], rax
 16640 0000BA4E 48B8-                   	mov rax, sob_void
 16640 0000BA50 [0000000000000000] 
 16641                                  
 16642 0000BA58 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16643 0000BA5D E893BB0000              	call malloc
 16644 0000BA62 50                      	push rax
 16645 0000BA63 BF08000000              	mov rdi, 8 * 1	; new rib
 16646 0000BA68 E888BB0000              	call malloc
 16647 0000BA6D 50                      	push rax
 16648 0000BA6E BF10000000              	mov rdi, 8 * 2	; extended env
 16649 0000BA73 E87DBB0000              	call malloc
 16650 0000BA78 488B7D10                	mov rdi, ENV
 16651 0000BA7C BE00000000              	mov rsi, 0
 16652 0000BA81 BA01000000              	mov rdx, 1
 16653                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 16654 0000BA86 4883FE01                	cmp rsi, 1
 16655 0000BA8A 7410                    	je .L_lambda_simple_env_end_005c
 16656 0000BA8C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16657 0000BA90 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16658 0000BA94 48FFC6                  	inc rsi
 16659 0000BA97 48FFC2                  	inc rdx
 16660 0000BA9A EBEA                    	jmp .L_lambda_simple_env_loop_005c
 16661                                  .L_lambda_simple_env_end_005c:
 16662 0000BA9C 5B                      	pop rbx
 16663 0000BA9D BE00000000              	mov rsi, 0
 16664                                  .L_lambda_simple_params_loop_005c:	; copy params
 16665 0000BAA2 4883FE01                	cmp rsi, 1
 16666 0000BAA6 740E                    	je .L_lambda_simple_params_end_005c
 16667 0000BAA8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16668 0000BAAD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16669 0000BAB1 48FFC6                  	inc rsi
 16670 0000BAB4 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 16671                                  .L_lambda_simple_params_end_005c:
 16672 0000BAB6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16673 0000BAB9 4889C3                  	mov rbx, rax
 16674 0000BABC 58                      	pop rax
 16675 0000BABD C60004                  	mov byte [rax], T_closure
 16676 0000BAC0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16677 0000BAC4 48C74009[D1BA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 16678 0000BACC E921010000              	jmp .L_lambda_simple_end_005c
 16679                                  .L_lambda_simple_code_005c:	; lambda-simple body
 16680 0000BAD1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16681 0000BAD7 740B                    	je .L_lambda_simple_arity_check_ok_005c
 16682 0000BAD9 FF742410                	push qword [rsp + 8 * 2]
 16683 0000BADD 6A01                    	push 1
 16684 0000BADF E9CABA0000              	jmp L_error_incorrect_arity_simple
 16685                                  .L_lambda_simple_arity_check_ok_005c:
 16686 0000BAE4 C8000000                	enter 0, 0
 16687                                  	; preparing a non-tail-call
 16688 0000BAE8 48B8-                   	mov rax, L_constants + 2575
 16688 0000BAEA [0F0A000000000000] 
 16689 0000BAF2 50                      	push rax
 16690 0000BAF3 488B4520                	mov rax, PARAM(0)	; param ch
 16691 0000BAF7 50                      	push rax
 16692 0000BAF8 48B8-                   	mov rax, L_constants + 2573
 16692 0000BAFA [0D0A000000000000] 
 16693 0000BB02 50                      	push rax
 16694 0000BB03 6A03                    	push 3	; arg count
 16695 0000BB05 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16696 0000BB0D 803805                  	cmp byte [rax], T_undefined
 16697 0000BB10 0F84B2B90000            	je L_error_fvar_undefined
 16698 0000BB16 803804                  	cmp byte [rax], T_closure
 16699 0000BB19 0F852DBA0000            	jne L_error_non_closure
 16700 0000BB1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16701 0000BB22 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16702 0000BB25 483D[02000000]          	cmp rax, sob_boolean_false
 16703 0000BB2B 0F84B9000000            	je .L_if_else_0052
 16704                                  	; preparing a tail-call
 16705                                  	; preparing a non-tail-call
 16706 0000BB31 488B4510                	mov rax, ENV
 16707 0000BB35 488B00                  	mov rax, qword [rax + 8 * 0]
 16708 0000BB38 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16709 0000BB3B 50                      	push rax
 16710                                  	; preparing a non-tail-call
 16711 0000BB3C 488B4520                	mov rax, PARAM(0)	; param ch
 16712 0000BB40 50                      	push rax
 16713 0000BB41 6A01                    	push 1	; arg count
 16714 0000BB43 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16715 0000BB4B 803805                  	cmp byte [rax], T_undefined
 16716 0000BB4E 0F8474B90000            	je L_error_fvar_undefined
 16717 0000BB54 803804                  	cmp byte [rax], T_closure
 16718 0000BB57 0F85EFB90000            	jne L_error_non_closure
 16719 0000BB5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16720 0000BB60 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16721 0000BB63 50                      	push rax
 16722 0000BB64 6A02                    	push 2	; arg count
 16723 0000BB66 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16724 0000BB6E 803805                  	cmp byte [rax], T_undefined
 16725 0000BB71 0F8451B90000            	je L_error_fvar_undefined
 16726 0000BB77 803804                  	cmp byte [rax], T_closure
 16727 0000BB7A 0F85CCB90000            	jne L_error_non_closure
 16728 0000BB80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16729 0000BB83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16730 0000BB86 50                      	push rax
 16731 0000BB87 6A01                    	push 1	; arg count
 16732 0000BB89 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16733 0000BB91 803805                  	cmp byte [rax], T_undefined
 16734 0000BB94 0F842EB90000            	je L_error_fvar_undefined
 16735 0000BB9A 803804                  	cmp byte [rax], T_closure
 16736 0000BB9D 0F85A9B90000            	jne L_error_non_closure
 16737 0000BBA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16738 0000BBA6 FF7508                  	push qword [rbp + 8 * 1]
 16739                                   ; old ret addr
 16740 0000BBA9 FF7500                  	push qword [rbp]
 16741                                   ; restore the old rbp
 16742 0000BBAC BB01000000              	mov rbx, 1
 16743 0000BBB1 4883C303                	add rbx, 3
 16744 0000BBB5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16745 0000BBB9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16746 0000BBBE 4C8D4DF8                	lea r9, [rbp - 8]
 16747 0000BBC2 B905000000              	mov rcx, 5
 16748                                  .L_tc_recycle_frame_loop_0097:
 16749 0000BBC7 4883F900                	cmp rcx, 0
 16750 0000BBCB 7413                    	je .L_tc_recycle_frame_done_0097
 16751 0000BBCD 4D8B11                  	mov r10, qword [r9]
 16752 0000BBD0 4D8910                  	mov qword [r8], r10
 16753 0000BBD3 4983E808                	sub r8, 8
 16754 0000BBD7 4983E908                	sub r9, 8
 16755 0000BBDB 48FFC9                  	dec rcx
 16756 0000BBDE EBE7                    	jmp .L_tc_recycle_frame_loop_0097
 16757                                  .L_tc_recycle_frame_done_0097:
 16758 0000BBE0 498D6008                	lea rsp, [r8 + 8]
 16759 0000BBE4 5D                      	pop rbp ; restore the old rbp
 16760 0000BBE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16761 0000BBE8 EB04                    	jmp .L_if_end_0052
 16762                                  .L_if_else_0052:
 16763 0000BBEA 488B4520                	mov rax, PARAM(0)	; param ch
 16764                                  .L_if_end_0052:
 16765 0000BBEE C9                      	leave
 16766 0000BBEF C21800                  	ret AND_KILL_FRAME(1)
 16767                                  .L_lambda_simple_end_005c:	; new closure is in rax
 16768 0000BBF2 48890425[8D120000]      	mov qword [free_var_72], rax
 16769 0000BBFA 48B8-                   	mov rax, sob_void
 16769 0000BBFC [0000000000000000] 
 16770 0000BC04 C9                      	leave
 16771 0000BC05 C21800                  	ret AND_KILL_FRAME(1)
 16772                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16773 0000BC08 803804                  	cmp byte [rax], T_closure
 16774 0000BC0B 0F853BB90000            	jne L_error_non_closure
 16775 0000BC11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16776 0000BC14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16777                                  
 16778 0000BC17 4889C7                  	mov rdi, rax
 16779 0000BC1A E82BBC0000              	call print_sexpr_if_not_void
 16780 0000BC1F 48B8-                   	mov rax, L_constants + 0
 16780 0000BC21 [0000000000000000] 
 16781 0000BC29 48890425[38120000]      	mov qword [free_var_67], rax
 16782 0000BC31 48B8-                   	mov rax, sob_void
 16782 0000BC33 [0000000000000000] 
 16783                                  
 16784 0000BC3B 4889C7                  	mov rdi, rax
 16785 0000BC3E E807BC0000              	call print_sexpr_if_not_void
 16786 0000BC43 48B8-                   	mov rax, L_constants + 0
 16786 0000BC45 [0000000000000000] 
 16787 0000BC4D 48890425[27120000]      	mov qword [free_var_66], rax
 16788 0000BC55 48B8-                   	mov rax, sob_void
 16788 0000BC57 [0000000000000000] 
 16789                                  
 16790 0000BC5F 4889C7                  	mov rdi, rax
 16791 0000BC62 E8E3BB0000              	call print_sexpr_if_not_void
 16792 0000BC67 48B8-                   	mov rax, L_constants + 0
 16792 0000BC69 [0000000000000000] 
 16793 0000BC71 48890425[49120000]      	mov qword [free_var_68], rax
 16794 0000BC79 48B8-                   	mov rax, sob_void
 16794 0000BC7B [0000000000000000] 
 16795                                  
 16796 0000BC83 4889C7                  	mov rdi, rax
 16797 0000BC86 E8BFBB0000              	call print_sexpr_if_not_void
 16798 0000BC8B 48B8-                   	mov rax, L_constants + 0
 16798 0000BC8D [0000000000000000] 
 16799 0000BC95 48890425[6B120000]      	mov qword [free_var_70], rax
 16800 0000BC9D 48B8-                   	mov rax, sob_void
 16800 0000BC9F [0000000000000000] 
 16801                                  
 16802 0000BCA7 4889C7                  	mov rdi, rax
 16803 0000BCAA E89BBB0000              	call print_sexpr_if_not_void
 16804 0000BCAF 48B8-                   	mov rax, L_constants + 0
 16804 0000BCB1 [0000000000000000] 
 16805 0000BCB9 48890425[5A120000]      	mov qword [free_var_69], rax
 16806 0000BCC1 48B8-                   	mov rax, sob_void
 16806 0000BCC3 [0000000000000000] 
 16807                                  
 16808 0000BCCB 4889C7                  	mov rdi, rax
 16809 0000BCCE E877BB0000              	call print_sexpr_if_not_void
 16810                                  	; preparing a non-tail-call
 16811 0000BCD3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16812 0000BCD8 E818B90000              	call malloc
 16813 0000BCDD 50                      	push rax
 16814 0000BCDE BF00000000              	mov rdi, 8 * 0	; new rib
 16815 0000BCE3 E80DB90000              	call malloc
 16816 0000BCE8 50                      	push rax
 16817 0000BCE9 BF08000000              	mov rdi, 8 * 1	; extended env
 16818 0000BCEE E802B90000              	call malloc
 16819 0000BCF3 488B7D10                	mov rdi, ENV
 16820 0000BCF7 BE00000000              	mov rsi, 0
 16821 0000BCFC BA01000000              	mov rdx, 1
 16822                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 16823 0000BD01 4883FE00                	cmp rsi, 0
 16824 0000BD05 7410                    	je .L_lambda_simple_env_end_005d
 16825 0000BD07 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16826 0000BD0B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16827 0000BD0F 48FFC6                  	inc rsi
 16828 0000BD12 48FFC2                  	inc rdx
 16829 0000BD15 EBEA                    	jmp .L_lambda_simple_env_loop_005d
 16830                                  .L_lambda_simple_env_end_005d:
 16831 0000BD17 5B                      	pop rbx
 16832 0000BD18 BE00000000              	mov rsi, 0
 16833                                  .L_lambda_simple_params_loop_005d:	; copy params
 16834 0000BD1D 4883FE00                	cmp rsi, 0
 16835 0000BD21 740E                    	je .L_lambda_simple_params_end_005d
 16836 0000BD23 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16837 0000BD28 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16838 0000BD2C 48FFC6                  	inc rsi
 16839 0000BD2F EBEC                    	jmp .L_lambda_simple_params_loop_005d
 16840                                  .L_lambda_simple_params_end_005d:
 16841 0000BD31 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16842 0000BD34 4889C3                  	mov rbx, rax
 16843 0000BD37 58                      	pop rax
 16844 0000BD38 C60004                  	mov byte [rax], T_closure
 16845 0000BD3B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16846 0000BD3F 48C74009[4CBD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 16847 0000BD47 E939030000              	jmp .L_lambda_simple_end_005d
 16848                                  .L_lambda_simple_code_005d:	; lambda-simple body
 16849 0000BD4C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16850 0000BD52 740B                    	je .L_lambda_simple_arity_check_ok_005d
 16851 0000BD54 FF742410                	push qword [rsp + 8 * 2]
 16852 0000BD58 6A01                    	push 1
 16853 0000BD5A E94FB80000              	jmp L_error_incorrect_arity_simple
 16854                                  .L_lambda_simple_arity_check_ok_005d:
 16855 0000BD5F C8000000                	enter 0, 0
 16856 0000BD63 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16857 0000BD68 E888B80000              	call malloc
 16858 0000BD6D 50                      	push rax
 16859 0000BD6E BF08000000              	mov rdi, 8 * 1	; new rib
 16860 0000BD73 E87DB80000              	call malloc
 16861 0000BD78 50                      	push rax
 16862 0000BD79 BF10000000              	mov rdi, 8 * 2	; extended env
 16863 0000BD7E E872B80000              	call malloc
 16864 0000BD83 488B7D10                	mov rdi, ENV
 16865 0000BD87 4831F6                  	 xor rsi, rsi
 16866 0000BD8A 4831D2                  	 xor rdx, rdx
 16867 0000BD8D 48FFC2                  	inc rdx
 16868                                  .L_lambda_opt_env_loop_0010:	; ext_env[i + 1] <-- env[i]
 16869 0000BD90 4883FE01                	cmp rsi, 1
 16870 0000BD94 7410                    	je .L_lambda_opt_env_end_0010
 16871 0000BD96 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16872 0000BD9A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16873 0000BD9E 48FFC6                  	inc rsi
 16874 0000BDA1 48FFC2                  	inc rdx
 16875 0000BDA4 EBEA                    	jmp .L_lambda_opt_env_loop_0010
 16876                                  .L_lambda_opt_env_end_0010:
 16877 0000BDA6 5B                      	pop rbx
 16878 0000BDA7 4831F6                  	xor rsi, rsi
 16879                                  .L_lambda_opt_params_loop_0010:	; copy params
 16880 0000BDAA 4883FE01                	cmp rsi, 1
 16881 0000BDAE 740E                    	je .L_lambda_opt_params_end_0010
 16882 0000BDB0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16883 0000BDB5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16884 0000BDB9 48FFC6                  	inc rsi
 16885 0000BDBC EBEC                    	jmp .L_lambda_opt_params_loop_0010
 16886                                  .L_lambda_opt_params_end_0010:
 16887 0000BDBE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16888 0000BDC1 4889C3                  	mov rbx, rax
 16889 0000BDC4 58                      	pop rax
 16890 0000BDC5 C60004                  	mov byte [rax], T_closure
 16891 0000BDC8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16892 0000BDCC 48C74009[D9BD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 16893 0000BDD4 E9A8020000              	jmp .L_lambda_opt_end_0010
 16894                                  .L_lambda_opt_code_0010:; lambda opt body
 16895 0000BDD9 48837C241000            	cmp qword [rsp + 8 * 2], 0
 16896 0000BDDF 7409                    	je .L_lambda_opt_arity_check_exact_0010
 16897 0000BDE1 7F57                    	jg .L_lambda_opt_arity_check_more_0010
 16898 0000BDE3 6A00                    	push 0
 16899 0000BDE5 E9D8B70000              	jmp L_error_incorrect_arity_opt
 16900                                  .L_lambda_opt_arity_check_exact_0010:
 16901 0000BDEA 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 16902 0000BDEE 4C894C24F8              	mov qword [rsp -8], r9
 16903 0000BDF3 4C8B4C2408              	mov r9, qword [rsp +8]
 16904 0000BDF8 4C890C24                	mov qword [rsp +8 * 0], r9
 16905 0000BDFC 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 16906 0000BE01 4C89C9                  	mov rcx, r9
 16907 0000BE04 49FFC1                  	inc r9
 16908 0000BE07 4C894C2408              	mov qword [rsp +8], r9
 16909 0000BE0C 4889E2                  	mov rdx, rsp
 16910 0000BE0F 4883C218                	add rdx, 24
 16911                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0010:
 16912 0000BE13 4883F900                	cmp rcx, 0
 16913 0000BE17 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0010
 16914 0000BE19 4C8B02                  	mov r8, qword [rdx]
 16915 0000BE1C 4C8942F8                	mov qword [rdx - 8], r8
 16916 0000BE20 4883C208                	add rdx, 8
 16917 0000BE24 48FFC9                  	dec rcx
 16918 0000BE27 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0010
 16919                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0010:
 16920 0000BE29 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 16921 0000BE31 4883EC08                	sub rsp, 8
 16922 0000BE35 E984000000              	jmp .L_lambda_opt_stack_adjusted_0010
 16923                                  .L_lambda_opt_arity_check_more_0010:
 16924 0000BE3A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16925 0000BE3F 4D89C4                  	mov r12, r8
 16926 0000BE42 4C89C1                  	mov rcx, r8
 16927 0000BE45 4D8D5002                	lea r10, [r8 + 2] 
 16928 0000BE49 4883E900                	sub rcx, 0
 16929 0000BE4D 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 16930 0000BE52 49B9-                   	mov r9, sob_nil
 16930 0000BE54 [0100000000000000] 
 16931                                  .L_lambda_opt_create_list_of_opt_params_0010:
 16932 0000BE5C 4883F900                	cmp rcx, 0
 16933 0000BE60 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0010
 16934 0000BE62 BF11000000              	mov rdi, 17
 16935 0000BE67 E889B70000              	call malloc
 16936 0000BE6C C60021                  	mov byte [rax], T_pair
 16937 0000BE6F 498B1B                  	mov rbx, qword [r11]
 16938 0000BE72 48895801                	mov qword [rax +1], rbx
 16939 0000BE76 4C894809                	mov qword [rax + 1 + 8], r9
 16940 0000BE7A 4989C1                  	mov r9, rax
 16941 0000BE7D 48FFC9                  	dec rcx
 16942 0000BE80 4983EB08                	sub r11, 8
 16943 0000BE84 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0010
 16944                                  .L_lambda_opt_create_list_of_opt_params_end_0010:
 16945 0000BE86 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 16946 0000BE8B 4D8908                  	mov qword [r8], r9
 16947 0000BE8E 4E8D14D500000000        	lea r10, [8 * r10]
 16948 0000BE96 4901E2                  	add r10, rsp
 16949 0000BE99 B904000000              	mov rcx, 4 + 0
 16950                                  .L_lambda_opt_stack_shrink_loop_0010:
 16951 0000BE9E 4883F900                	cmp rcx, 0
 16952 0000BEA2 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0010
 16953 0000BEA4 4D8B18                  	mov r11, qword [r8]
 16954 0000BEA7 4D891A                  	mov qword [r10], r11
 16955 0000BEAA 4983E808                	sub r8, 8
 16956 0000BEAE 4983EA08                	sub r10, 8
 16957 0000BEB2 48FFC9                  	dec rcx
 16958 0000BEB5 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 16959                                  .L_lambda_opt_stack_shrink_loop_exit_0010:
 16960 0000BEB7 4983C208                	add r10, 8
 16961 0000BEBB 4C89D4                  	mov rsp, r10
 16962                                  .L_lambda_opt_stack_adjusted_0010:;continue with the code, the stack is ok
 16963 0000BEBE 48C744241001000000      	mov qword [rsp + 8*2], 1
 16964 0000BEC7 C8000000                	enter 0, 0
 16965                                  	; preparing a tail-call
 16966                                  	; preparing a non-tail-call
 16967 0000BECB 488B4520                	mov rax, PARAM(0)	; param s
 16968 0000BECF 50                      	push rax
 16969 0000BED0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16970 0000BED5 E81BB70000              	call malloc
 16971 0000BEDA 50                      	push rax
 16972 0000BEDB BF08000000              	mov rdi, 8 * 1	; new rib
 16973 0000BEE0 E810B70000              	call malloc
 16974 0000BEE5 50                      	push rax
 16975 0000BEE6 BF18000000              	mov rdi, 8 * 3	; extended env
 16976 0000BEEB E805B70000              	call malloc
 16977 0000BEF0 488B7D10                	mov rdi, ENV
 16978 0000BEF4 BE00000000              	mov rsi, 0
 16979 0000BEF9 BA01000000              	mov rdx, 1
 16980                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 16981 0000BEFE 4883FE02                	cmp rsi, 2
 16982 0000BF02 7410                    	je .L_lambda_simple_env_end_005e
 16983 0000BF04 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16984 0000BF08 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16985 0000BF0C 48FFC6                  	inc rsi
 16986 0000BF0F 48FFC2                  	inc rdx
 16987 0000BF12 EBEA                    	jmp .L_lambda_simple_env_loop_005e
 16988                                  .L_lambda_simple_env_end_005e:
 16989 0000BF14 5B                      	pop rbx
 16990 0000BF15 BE00000000              	mov rsi, 0
 16991                                  .L_lambda_simple_params_loop_005e:	; copy params
 16992 0000BF1A 4883FE01                	cmp rsi, 1
 16993 0000BF1E 740E                    	je .L_lambda_simple_params_end_005e
 16994 0000BF20 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16995 0000BF25 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16996 0000BF29 48FFC6                  	inc rsi
 16997 0000BF2C EBEC                    	jmp .L_lambda_simple_params_loop_005e
 16998                                  .L_lambda_simple_params_end_005e:
 16999 0000BF2E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17000 0000BF31 4889C3                  	mov rbx, rax
 17001 0000BF34 58                      	pop rax
 17002 0000BF35 C60004                  	mov byte [rax], T_closure
 17003 0000BF38 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17004 0000BF3C 48C74009[49BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 17005 0000BF44 E9A4000000              	jmp .L_lambda_simple_end_005e
 17006                                  .L_lambda_simple_code_005e:	; lambda-simple body
 17007 0000BF49 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17008 0000BF4F 740B                    	je .L_lambda_simple_arity_check_ok_005e
 17009 0000BF51 FF742410                	push qword [rsp + 8 * 2]
 17010 0000BF55 6A01                    	push 1
 17011 0000BF57 E952B60000              	jmp L_error_incorrect_arity_simple
 17012                                  .L_lambda_simple_arity_check_ok_005e:
 17013 0000BF5C C8000000                	enter 0, 0
 17014                                  	; preparing a tail-call
 17015                                  	; preparing a non-tail-call
 17016 0000BF60 488B4520                	mov rax, PARAM(0)	; param ch
 17017 0000BF64 50                      	push rax
 17018 0000BF65 6A01                    	push 1	; arg count
 17019 0000BF67 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17020 0000BF6F 803805                  	cmp byte [rax], T_undefined
 17021 0000BF72 0F8450B50000            	je L_error_fvar_undefined
 17022 0000BF78 803804                  	cmp byte [rax], T_closure
 17023 0000BF7B 0F85CBB50000            	jne L_error_non_closure
 17024 0000BF81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17025 0000BF84 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17026 0000BF87 50                      	push rax
 17027 0000BF88 6A01                    	push 1	; arg count
 17028 0000BF8A 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17029 0000BF92 803805                  	cmp byte [rax], T_undefined
 17030 0000BF95 0F842DB50000            	je L_error_fvar_undefined
 17031 0000BF9B 803804                  	cmp byte [rax], T_closure
 17032 0000BF9E 0F85A8B50000            	jne L_error_non_closure
 17033 0000BFA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17034 0000BFA7 FF7508                  	push qword [rbp + 8 * 1]
 17035                                   ; old ret addr
 17036 0000BFAA FF7500                  	push qword [rbp]
 17037                                   ; restore the old rbp
 17038 0000BFAD BB01000000              	mov rbx, 1
 17039 0000BFB2 4883C303                	add rbx, 3
 17040 0000BFB6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17041 0000BFBA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17042 0000BFBF 4C8D4DF8                	lea r9, [rbp - 8]
 17043 0000BFC3 B905000000              	mov rcx, 5
 17044                                  .L_tc_recycle_frame_loop_0099:
 17045 0000BFC8 4883F900                	cmp rcx, 0
 17046 0000BFCC 7413                    	je .L_tc_recycle_frame_done_0099
 17047 0000BFCE 4D8B11                  	mov r10, qword [r9]
 17048 0000BFD1 4D8910                  	mov qword [r8], r10
 17049 0000BFD4 4983E808                	sub r8, 8
 17050 0000BFD8 4983E908                	sub r9, 8
 17051 0000BFDC 48FFC9                  	dec rcx
 17052 0000BFDF EBE7                    	jmp .L_tc_recycle_frame_loop_0099
 17053                                  .L_tc_recycle_frame_done_0099:
 17054 0000BFE1 498D6008                	lea rsp, [r8 + 8]
 17055 0000BFE5 5D                      	pop rbp ; restore the old rbp
 17056 0000BFE6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17057 0000BFE9 C9                      	leave
 17058 0000BFEA C21800                  	ret AND_KILL_FRAME(1)
 17059                                  .L_lambda_simple_end_005e:	; new closure is in rax
 17060 0000BFED 50                      	push rax
 17061 0000BFEE 6A02                    	push 2	; arg count
 17062 0000BFF0 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17063 0000BFF8 803805                  	cmp byte [rax], T_undefined
 17064 0000BFFB 0F84C7B40000            	je L_error_fvar_undefined
 17065 0000C001 803804                  	cmp byte [rax], T_closure
 17066 0000C004 0F8542B50000            	jne L_error_non_closure
 17067 0000C00A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17068 0000C00D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17069 0000C010 50                      	push rax
 17070 0000C011 488B4510                	mov rax, ENV
 17071 0000C015 488B00                  	mov rax, qword [rax + 8 * 0]
 17072 0000C018 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17073 0000C01B 50                      	push rax
 17074 0000C01C 6A02                    	push 2	; arg count
 17075 0000C01E 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 17076 0000C026 803805                  	cmp byte [rax], T_undefined
 17077 0000C029 0F8499B40000            	je L_error_fvar_undefined
 17078 0000C02F 803804                  	cmp byte [rax], T_closure
 17079 0000C032 0F8514B50000            	jne L_error_non_closure
 17080 0000C038 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17081 0000C03B FF7508                  	push qword [rbp + 8 * 1]
 17082                                   ; old ret addr
 17083 0000C03E FF7500                  	push qword [rbp]
 17084                                   ; restore the old rbp
 17085 0000C041 BB02000000              	mov rbx, 2
 17086 0000C046 4883C303                	add rbx, 3
 17087 0000C04A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17088 0000C04E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17089 0000C053 4C8D4DF8                	lea r9, [rbp - 8]
 17090 0000C057 B906000000              	mov rcx, 6
 17091                                  .L_tc_recycle_frame_loop_0098:
 17092 0000C05C 4883F900                	cmp rcx, 0
 17093 0000C060 7413                    	je .L_tc_recycle_frame_done_0098
 17094 0000C062 4D8B11                  	mov r10, qword [r9]
 17095 0000C065 4D8910                  	mov qword [r8], r10
 17096 0000C068 4983E808                	sub r8, 8
 17097 0000C06C 4983E908                	sub r9, 8
 17098 0000C070 48FFC9                  	dec rcx
 17099 0000C073 EBE7                    	jmp .L_tc_recycle_frame_loop_0098
 17100                                  .L_tc_recycle_frame_done_0098:
 17101 0000C075 498D6008                	lea rsp, [r8 + 8]
 17102 0000C079 5D                      	pop rbp ; restore the old rbp
 17103 0000C07A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17104 0000C07D C9                      	leave
 17105 0000C07E C21800                  	ret 8 * (2 + 1)
 17106                                  .L_lambda_opt_end_0010:	; new closure is in rax
 17107 0000C081 C9                      	leave
 17108 0000C082 C21800                  	ret AND_KILL_FRAME(1)
 17109                                  .L_lambda_simple_end_005d:	; new closure is in rax
 17110 0000C085 50                      	push rax
 17111 0000C086 6A01                    	push 1	; arg count
 17112 0000C088 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17113 0000C08D E863B50000              	call malloc
 17114 0000C092 50                      	push rax
 17115 0000C093 BF00000000              	mov rdi, 8 * 0	; new rib
 17116 0000C098 E858B50000              	call malloc
 17117 0000C09D 50                      	push rax
 17118 0000C09E BF08000000              	mov rdi, 8 * 1	; extended env
 17119 0000C0A3 E84DB50000              	call malloc
 17120 0000C0A8 488B7D10                	mov rdi, ENV
 17121 0000C0AC BE00000000              	mov rsi, 0
 17122 0000C0B1 BA01000000              	mov rdx, 1
 17123                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 17124 0000C0B6 4883FE00                	cmp rsi, 0
 17125 0000C0BA 7410                    	je .L_lambda_simple_env_end_005f
 17126 0000C0BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17127 0000C0C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17128 0000C0C4 48FFC6                  	inc rsi
 17129 0000C0C7 48FFC2                  	inc rdx
 17130 0000C0CA EBEA                    	jmp .L_lambda_simple_env_loop_005f
 17131                                  .L_lambda_simple_env_end_005f:
 17132 0000C0CC 5B                      	pop rbx
 17133 0000C0CD BE00000000              	mov rsi, 0
 17134                                  .L_lambda_simple_params_loop_005f:	; copy params
 17135 0000C0D2 4883FE00                	cmp rsi, 0
 17136 0000C0D6 740E                    	je .L_lambda_simple_params_end_005f
 17137 0000C0D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17138 0000C0DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17139 0000C0E1 48FFC6                  	inc rsi
 17140 0000C0E4 EBEC                    	jmp .L_lambda_simple_params_loop_005f
 17141                                  .L_lambda_simple_params_end_005f:
 17142 0000C0E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17143 0000C0E9 4889C3                  	mov rbx, rax
 17144 0000C0EC 58                      	pop rax
 17145 0000C0ED C60004                  	mov byte [rax], T_closure
 17146 0000C0F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17147 0000C0F4 48C74009[01C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 17148 0000C0FC E938010000              	jmp .L_lambda_simple_end_005f
 17149                                  .L_lambda_simple_code_005f:	; lambda-simple body
 17150 0000C101 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17151 0000C107 740B                    	je .L_lambda_simple_arity_check_ok_005f
 17152 0000C109 FF742410                	push qword [rsp + 8 * 2]
 17153 0000C10D 6A01                    	push 1
 17154 0000C10F E99AB40000              	jmp L_error_incorrect_arity_simple
 17155                                  .L_lambda_simple_arity_check_ok_005f:
 17156 0000C114 C8000000                	enter 0, 0
 17157                                  	; preparing a non-tail-call
 17158 0000C118 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17159 0000C120 803805                  	cmp byte [rax], T_undefined
 17160 0000C123 0F849FB30000            	je L_error_fvar_undefined
 17161 0000C129 50                      	push rax
 17162 0000C12A 6A01                    	push 1	; arg count
 17163 0000C12C 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17164 0000C130 803804                  	cmp byte [rax], T_closure
 17165 0000C133 0F8513B40000            	jne L_error_non_closure
 17166 0000C139 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17167 0000C13C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17168 0000C13F 48890425[38120000]      	mov qword [free_var_67], rax
 17169 0000C147 48B8-                   	mov rax, sob_void
 17169 0000C149 [0000000000000000] 
 17170                                  
 17171                                  	; preparing a non-tail-call
 17172 0000C151 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 17173 0000C159 803805                  	cmp byte [rax], T_undefined
 17174 0000C15C 0F8466B30000            	je L_error_fvar_undefined
 17175 0000C162 50                      	push rax
 17176 0000C163 6A01                    	push 1	; arg count
 17177 0000C165 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17178 0000C169 803804                  	cmp byte [rax], T_closure
 17179 0000C16C 0F85DAB30000            	jne L_error_non_closure
 17180 0000C172 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17181 0000C175 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17182 0000C178 48890425[27120000]      	mov qword [free_var_66], rax
 17183 0000C180 48B8-                   	mov rax, sob_void
 17183 0000C182 [0000000000000000] 
 17184                                  
 17185                                  	; preparing a non-tail-call
 17186 0000C18A 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17187 0000C192 803805                  	cmp byte [rax], T_undefined
 17188 0000C195 0F842DB30000            	je L_error_fvar_undefined
 17189 0000C19B 50                      	push rax
 17190 0000C19C 6A01                    	push 1	; arg count
 17191 0000C19E 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17192 0000C1A2 803804                  	cmp byte [rax], T_closure
 17193 0000C1A5 0F85A1B30000            	jne L_error_non_closure
 17194 0000C1AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17195 0000C1AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17196 0000C1B1 48890425[49120000]      	mov qword [free_var_68], rax
 17197 0000C1B9 48B8-                   	mov rax, sob_void
 17197 0000C1BB [0000000000000000] 
 17198                                  
 17199                                  	; preparing a non-tail-call
 17200 0000C1C3 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 17201 0000C1CB 803805                  	cmp byte [rax], T_undefined
 17202 0000C1CE 0F84F4B20000            	je L_error_fvar_undefined
 17203 0000C1D4 50                      	push rax
 17204 0000C1D5 6A01                    	push 1	; arg count
 17205 0000C1D7 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17206 0000C1DB 803804                  	cmp byte [rax], T_closure
 17207 0000C1DE 0F8568B30000            	jne L_error_non_closure
 17208 0000C1E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17209 0000C1E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17210 0000C1EA 48890425[6B120000]      	mov qword [free_var_70], rax
 17211 0000C1F2 48B8-                   	mov rax, sob_void
 17211 0000C1F4 [0000000000000000] 
 17212                                  
 17213                                  	; preparing a non-tail-call
 17214 0000C1FC 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 17215 0000C204 803805                  	cmp byte [rax], T_undefined
 17216 0000C207 0F84BBB20000            	je L_error_fvar_undefined
 17217 0000C20D 50                      	push rax
 17218 0000C20E 6A01                    	push 1	; arg count
 17219 0000C210 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17220 0000C214 803804                  	cmp byte [rax], T_closure
 17221 0000C217 0F852FB30000            	jne L_error_non_closure
 17222 0000C21D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17223 0000C220 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17224 0000C223 48890425[5A120000]      	mov qword [free_var_69], rax
 17225 0000C22B 48B8-                   	mov rax, sob_void
 17225 0000C22D [0000000000000000] 
 17226 0000C235 C9                      	leave
 17227 0000C236 C21800                  	ret AND_KILL_FRAME(1)
 17228                                  .L_lambda_simple_end_005f:	; new closure is in rax
 17229 0000C239 803804                  	cmp byte [rax], T_closure
 17230 0000C23C 0F850AB30000            	jne L_error_non_closure
 17231 0000C242 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17232 0000C245 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17233                                  
 17234 0000C248 4889C7                  	mov rdi, rax
 17235 0000C24B E8FAB50000              	call print_sexpr_if_not_void
 17236 0000C250 48B8-                   	mov rax, L_constants + 0
 17236 0000C252 [0000000000000000] 
 17237 0000C25A 48890425[23160000]      	mov qword [free_var_126], rax
 17238 0000C262 48B8-                   	mov rax, sob_void
 17238 0000C264 [0000000000000000] 
 17239                                  
 17240 0000C26C 4889C7                  	mov rdi, rax
 17241 0000C26F E8D6B50000              	call print_sexpr_if_not_void
 17242 0000C274 48B8-                   	mov rax, L_constants + 0
 17242 0000C276 [0000000000000000] 
 17243 0000C27E 48890425[89160000]      	mov qword [free_var_132], rax
 17244 0000C286 48B8-                   	mov rax, sob_void
 17244 0000C288 [0000000000000000] 
 17245                                  
 17246 0000C290 4889C7                  	mov rdi, rax
 17247 0000C293 E8B2B50000              	call print_sexpr_if_not_void
 17248                                  	; preparing a non-tail-call
 17249 0000C298 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17250 0000C29D E853B30000              	call malloc
 17251 0000C2A2 50                      	push rax
 17252 0000C2A3 BF00000000              	mov rdi, 8 * 0	; new rib
 17253 0000C2A8 E848B30000              	call malloc
 17254 0000C2AD 50                      	push rax
 17255 0000C2AE BF08000000              	mov rdi, 8 * 1	; extended env
 17256 0000C2B3 E83DB30000              	call malloc
 17257 0000C2B8 488B7D10                	mov rdi, ENV
 17258 0000C2BC BE00000000              	mov rsi, 0
 17259 0000C2C1 BA01000000              	mov rdx, 1
 17260                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 17261 0000C2C6 4883FE00                	cmp rsi, 0
 17262 0000C2CA 7410                    	je .L_lambda_simple_env_end_0060
 17263 0000C2CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17264 0000C2D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17265 0000C2D4 48FFC6                  	inc rsi
 17266 0000C2D7 48FFC2                  	inc rdx
 17267 0000C2DA EBEA                    	jmp .L_lambda_simple_env_loop_0060
 17268                                  .L_lambda_simple_env_end_0060:
 17269 0000C2DC 5B                      	pop rbx
 17270 0000C2DD BE00000000              	mov rsi, 0
 17271                                  .L_lambda_simple_params_loop_0060:	; copy params
 17272 0000C2E2 4883FE00                	cmp rsi, 0
 17273 0000C2E6 740E                    	je .L_lambda_simple_params_end_0060
 17274 0000C2E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17275 0000C2ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17276 0000C2F1 48FFC6                  	inc rsi
 17277 0000C2F4 EBEC                    	jmp .L_lambda_simple_params_loop_0060
 17278                                  .L_lambda_simple_params_end_0060:
 17279 0000C2F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17280 0000C2F9 4889C3                  	mov rbx, rax
 17281 0000C2FC 58                      	pop rax
 17282 0000C2FD C60004                  	mov byte [rax], T_closure
 17283 0000C300 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17284 0000C304 48C74009[11C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 17285 0000C30C E966010000              	jmp .L_lambda_simple_end_0060
 17286                                  .L_lambda_simple_code_0060:	; lambda-simple body
 17287 0000C311 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17288 0000C317 740B                    	je .L_lambda_simple_arity_check_ok_0060
 17289 0000C319 FF742410                	push qword [rsp + 8 * 2]
 17290 0000C31D 6A01                    	push 1
 17291 0000C31F E98AB20000              	jmp L_error_incorrect_arity_simple
 17292                                  .L_lambda_simple_arity_check_ok_0060:
 17293 0000C324 C8000000                	enter 0, 0
 17294 0000C328 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17295 0000C32D E8C3B20000              	call malloc
 17296 0000C332 50                      	push rax
 17297 0000C333 BF08000000              	mov rdi, 8 * 1	; new rib
 17298 0000C338 E8B8B20000              	call malloc
 17299 0000C33D 50                      	push rax
 17300 0000C33E BF10000000              	mov rdi, 8 * 2	; extended env
 17301 0000C343 E8ADB20000              	call malloc
 17302 0000C348 488B7D10                	mov rdi, ENV
 17303 0000C34C BE00000000              	mov rsi, 0
 17304 0000C351 BA01000000              	mov rdx, 1
 17305                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 17306 0000C356 4883FE01                	cmp rsi, 1
 17307 0000C35A 7410                    	je .L_lambda_simple_env_end_0061
 17308 0000C35C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17309 0000C360 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17310 0000C364 48FFC6                  	inc rsi
 17311 0000C367 48FFC2                  	inc rdx
 17312 0000C36A EBEA                    	jmp .L_lambda_simple_env_loop_0061
 17313                                  .L_lambda_simple_env_end_0061:
 17314 0000C36C 5B                      	pop rbx
 17315 0000C36D BE00000000              	mov rsi, 0
 17316                                  .L_lambda_simple_params_loop_0061:	; copy params
 17317 0000C372 4883FE01                	cmp rsi, 1
 17318 0000C376 740E                    	je .L_lambda_simple_params_end_0061
 17319 0000C378 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17320 0000C37D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17321 0000C381 48FFC6                  	inc rsi
 17322 0000C384 EBEC                    	jmp .L_lambda_simple_params_loop_0061
 17323                                  .L_lambda_simple_params_end_0061:
 17324 0000C386 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17325 0000C389 4889C3                  	mov rbx, rax
 17326 0000C38C 58                      	pop rax
 17327 0000C38D C60004                  	mov byte [rax], T_closure
 17328 0000C390 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17329 0000C394 48C74009[A1C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 17330 0000C39C E9D2000000              	jmp .L_lambda_simple_end_0061
 17331                                  .L_lambda_simple_code_0061:	; lambda-simple body
 17332 0000C3A1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17333 0000C3A7 740B                    	je .L_lambda_simple_arity_check_ok_0061
 17334 0000C3A9 FF742410                	push qword [rsp + 8 * 2]
 17335 0000C3AD 6A01                    	push 1
 17336 0000C3AF E9FAB10000              	jmp L_error_incorrect_arity_simple
 17337                                  .L_lambda_simple_arity_check_ok_0061:
 17338 0000C3B4 C8000000                	enter 0, 0
 17339                                  	; preparing a tail-call
 17340                                  	; preparing a non-tail-call
 17341                                  	; preparing a non-tail-call
 17342 0000C3B8 488B4520                	mov rax, PARAM(0)	; param str
 17343 0000C3BC 50                      	push rax
 17344 0000C3BD 6A01                    	push 1	; arg count
 17345 0000C3BF 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 17346 0000C3C7 803805                  	cmp byte [rax], T_undefined
 17347 0000C3CA 0F84F8B00000            	je L_error_fvar_undefined
 17348 0000C3D0 803804                  	cmp byte [rax], T_closure
 17349 0000C3D3 0F8573B10000            	jne L_error_non_closure
 17350 0000C3D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17351 0000C3DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17352 0000C3DF 50                      	push rax
 17353 0000C3E0 488B4510                	mov rax, ENV
 17354 0000C3E4 488B00                  	mov rax, qword [rax + 8 * 0]
 17355 0000C3E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17356 0000C3EA 50                      	push rax
 17357 0000C3EB 6A02                    	push 2	; arg count
 17358 0000C3ED 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17359 0000C3F5 803805                  	cmp byte [rax], T_undefined
 17360 0000C3F8 0F84CAB00000            	je L_error_fvar_undefined
 17361 0000C3FE 803804                  	cmp byte [rax], T_closure
 17362 0000C401 0F8545B10000            	jne L_error_non_closure
 17363 0000C407 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17364 0000C40A FF5009                  	call SOB_CLOSURE_CODE(rax)
 17365 0000C40D 50                      	push rax
 17366 0000C40E 6A01                    	push 1	; arg count
 17367 0000C410 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 17368 0000C418 803805                  	cmp byte [rax], T_undefined
 17369 0000C41B 0F84A7B00000            	je L_error_fvar_undefined
 17370 0000C421 803804                  	cmp byte [rax], T_closure
 17371 0000C424 0F8522B10000            	jne L_error_non_closure
 17372 0000C42A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17373 0000C42D FF7508                  	push qword [rbp + 8 * 1]
 17374                                   ; old ret addr
 17375 0000C430 FF7500                  	push qword [rbp]
 17376                                   ; restore the old rbp
 17377 0000C433 BB01000000              	mov rbx, 1
 17378 0000C438 4883C303                	add rbx, 3
 17379 0000C43C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17380 0000C440 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17381 0000C445 4C8D4DF8                	lea r9, [rbp - 8]
 17382 0000C449 B905000000              	mov rcx, 5
 17383                                  .L_tc_recycle_frame_loop_009a:
 17384 0000C44E 4883F900                	cmp rcx, 0
 17385 0000C452 7413                    	je .L_tc_recycle_frame_done_009a
 17386 0000C454 4D8B11                  	mov r10, qword [r9]
 17387 0000C457 4D8910                  	mov qword [r8], r10
 17388 0000C45A 4983E808                	sub r8, 8
 17389 0000C45E 4983E908                	sub r9, 8
 17390 0000C462 48FFC9                  	dec rcx
 17391 0000C465 EBE7                    	jmp .L_tc_recycle_frame_loop_009a
 17392                                  .L_tc_recycle_frame_done_009a:
 17393 0000C467 498D6008                	lea rsp, [r8 + 8]
 17394 0000C46B 5D                      	pop rbp ; restore the old rbp
 17395 0000C46C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17396 0000C46F C9                      	leave
 17397 0000C470 C21800                  	ret AND_KILL_FRAME(1)
 17398                                  .L_lambda_simple_end_0061:	; new closure is in rax
 17399 0000C473 C9                      	leave
 17400 0000C474 C21800                  	ret AND_KILL_FRAME(1)
 17401                                  .L_lambda_simple_end_0060:	; new closure is in rax
 17402 0000C477 50                      	push rax
 17403 0000C478 6A01                    	push 1	; arg count
 17404 0000C47A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17405 0000C47F E871B10000              	call malloc
 17406 0000C484 50                      	push rax
 17407 0000C485 BF00000000              	mov rdi, 8 * 0	; new rib
 17408 0000C48A E866B10000              	call malloc
 17409 0000C48F 50                      	push rax
 17410 0000C490 BF08000000              	mov rdi, 8 * 1	; extended env
 17411 0000C495 E85BB10000              	call malloc
 17412 0000C49A 488B7D10                	mov rdi, ENV
 17413 0000C49E BE00000000              	mov rsi, 0
 17414 0000C4A3 BA01000000              	mov rdx, 1
 17415                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 17416 0000C4A8 4883FE00                	cmp rsi, 0
 17417 0000C4AC 7410                    	je .L_lambda_simple_env_end_0062
 17418 0000C4AE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17419 0000C4B2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17420 0000C4B6 48FFC6                  	inc rsi
 17421 0000C4B9 48FFC2                  	inc rdx
 17422 0000C4BC EBEA                    	jmp .L_lambda_simple_env_loop_0062
 17423                                  .L_lambda_simple_env_end_0062:
 17424 0000C4BE 5B                      	pop rbx
 17425 0000C4BF BE00000000              	mov rsi, 0
 17426                                  .L_lambda_simple_params_loop_0062:	; copy params
 17427 0000C4C4 4883FE00                	cmp rsi, 0
 17428 0000C4C8 740E                    	je .L_lambda_simple_params_end_0062
 17429 0000C4CA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17430 0000C4CF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17431 0000C4D3 48FFC6                  	inc rsi
 17432 0000C4D6 EBEC                    	jmp .L_lambda_simple_params_loop_0062
 17433                                  .L_lambda_simple_params_end_0062:
 17434 0000C4D8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17435 0000C4DB 4889C3                  	mov rbx, rax
 17436 0000C4DE 58                      	pop rax
 17437 0000C4DF C60004                  	mov byte [rax], T_closure
 17438 0000C4E2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17439 0000C4E6 48C74009[F3C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 17440 0000C4EE E98D000000              	jmp .L_lambda_simple_end_0062
 17441                                  .L_lambda_simple_code_0062:	; lambda-simple body
 17442 0000C4F3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17443 0000C4F9 740B                    	je .L_lambda_simple_arity_check_ok_0062
 17444 0000C4FB FF742410                	push qword [rsp + 8 * 2]
 17445 0000C4FF 6A01                    	push 1
 17446 0000C501 E9A8B00000              	jmp L_error_incorrect_arity_simple
 17447                                  .L_lambda_simple_arity_check_ok_0062:
 17448 0000C506 C8000000                	enter 0, 0
 17449                                  	; preparing a non-tail-call
 17450 0000C50A 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17451 0000C512 803805                  	cmp byte [rax], T_undefined
 17452 0000C515 0F84ADAF0000            	je L_error_fvar_undefined
 17453 0000C51B 50                      	push rax
 17454 0000C51C 6A01                    	push 1	; arg count
 17455 0000C51E 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17456 0000C522 803804                  	cmp byte [rax], T_closure
 17457 0000C525 0F8521B00000            	jne L_error_non_closure
 17458 0000C52B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17459 0000C52E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17460 0000C531 48890425[23160000]      	mov qword [free_var_126], rax
 17461 0000C539 48B8-                   	mov rax, sob_void
 17461 0000C53B [0000000000000000] 
 17462                                  
 17463                                  	; preparing a non-tail-call
 17464 0000C543 488B0425[8D120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 17465 0000C54B 803805                  	cmp byte [rax], T_undefined
 17466 0000C54E 0F8474AF0000            	je L_error_fvar_undefined
 17467 0000C554 50                      	push rax
 17468 0000C555 6A01                    	push 1	; arg count
 17469 0000C557 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17470 0000C55B 803804                  	cmp byte [rax], T_closure
 17471 0000C55E 0F85E8AF0000            	jne L_error_non_closure
 17472 0000C564 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17473 0000C567 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17474 0000C56A 48890425[89160000]      	mov qword [free_var_132], rax
 17475 0000C572 48B8-                   	mov rax, sob_void
 17475 0000C574 [0000000000000000] 
 17476 0000C57C C9                      	leave
 17477 0000C57D C21800                  	ret AND_KILL_FRAME(1)
 17478                                  .L_lambda_simple_end_0062:	; new closure is in rax
 17479 0000C580 803804                  	cmp byte [rax], T_closure
 17480 0000C583 0F85C3AF0000            	jne L_error_non_closure
 17481 0000C589 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17482 0000C58C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17483                                  
 17484 0000C58F 4889C7                  	mov rdi, rax
 17485 0000C592 E8B3B20000              	call print_sexpr_if_not_void
 17486 0000C597 48B8-                   	mov rax, L_constants + 0
 17486 0000C599 [0000000000000000] 
 17487 0000C5A1 48890425[AB160000]      	mov qword [free_var_134], rax
 17488 0000C5A9 48B8-                   	mov rax, sob_void
 17488 0000C5AB [0000000000000000] 
 17489                                  
 17490 0000C5B3 4889C7                  	mov rdi, rax
 17491 0000C5B6 E88FB20000              	call print_sexpr_if_not_void
 17492 0000C5BB 48B8-                   	mov rax, L_constants + 0
 17492 0000C5BD [0000000000000000] 
 17493 0000C5C5 48890425[9A160000]      	mov qword [free_var_133], rax
 17494 0000C5CD 48B8-                   	mov rax, sob_void
 17494 0000C5CF [0000000000000000] 
 17495                                  
 17496 0000C5D7 4889C7                  	mov rdi, rax
 17497 0000C5DA E86BB20000              	call print_sexpr_if_not_void
 17498 0000C5DF 48B8-                   	mov rax, L_constants + 0
 17498 0000C5E1 [0000000000000000] 
 17499 0000C5E9 48890425[BC160000]      	mov qword [free_var_135], rax
 17500 0000C5F1 48B8-                   	mov rax, sob_void
 17500 0000C5F3 [0000000000000000] 
 17501                                  
 17502 0000C5FB 4889C7                  	mov rdi, rax
 17503 0000C5FE E847B20000              	call print_sexpr_if_not_void
 17504 0000C603 48B8-                   	mov rax, L_constants + 0
 17504 0000C605 [0000000000000000] 
 17505 0000C60D 48890425[CD160000]      	mov qword [free_var_136], rax
 17506 0000C615 48B8-                   	mov rax, sob_void
 17506 0000C617 [0000000000000000] 
 17507                                  
 17508 0000C61F 4889C7                  	mov rdi, rax
 17509 0000C622 E823B20000              	call print_sexpr_if_not_void
 17510 0000C627 48B8-                   	mov rax, L_constants + 0
 17510 0000C629 [0000000000000000] 
 17511 0000C631 48890425[DE160000]      	mov qword [free_var_137], rax
 17512 0000C639 48B8-                   	mov rax, sob_void
 17512 0000C63B [0000000000000000] 
 17513                                  
 17514 0000C643 4889C7                  	mov rdi, rax
 17515 0000C646 E8FFB10000              	call print_sexpr_if_not_void
 17516 0000C64B 48B8-                   	mov rax, L_constants + 0
 17516 0000C64D [0000000000000000] 
 17517 0000C655 48890425[DF150000]      	mov qword [free_var_122], rax
 17518 0000C65D 48B8-                   	mov rax, sob_void
 17518 0000C65F [0000000000000000] 
 17519                                  
 17520 0000C667 4889C7                  	mov rdi, rax
 17521 0000C66A E8DBB10000              	call print_sexpr_if_not_void
 17522 0000C66F 48B8-                   	mov rax, L_constants + 0
 17522 0000C671 [0000000000000000] 
 17523 0000C679 48890425[CE150000]      	mov qword [free_var_121], rax
 17524 0000C681 48B8-                   	mov rax, sob_void
 17524 0000C683 [0000000000000000] 
 17525                                  
 17526 0000C68B 4889C7                  	mov rdi, rax
 17527 0000C68E E8B7B10000              	call print_sexpr_if_not_void
 17528 0000C693 48B8-                   	mov rax, L_constants + 0
 17528 0000C695 [0000000000000000] 
 17529 0000C69D 48890425[F0150000]      	mov qword [free_var_123], rax
 17530 0000C6A5 48B8-                   	mov rax, sob_void
 17530 0000C6A7 [0000000000000000] 
 17531                                  
 17532 0000C6AF 4889C7                  	mov rdi, rax
 17533 0000C6B2 E893B10000              	call print_sexpr_if_not_void
 17534 0000C6B7 48B8-                   	mov rax, L_constants + 0
 17534 0000C6B9 [0000000000000000] 
 17535 0000C6C1 48890425[01160000]      	mov qword [free_var_124], rax
 17536 0000C6C9 48B8-                   	mov rax, sob_void
 17536 0000C6CB [0000000000000000] 
 17537                                  
 17538 0000C6D3 4889C7                  	mov rdi, rax
 17539 0000C6D6 E86FB10000              	call print_sexpr_if_not_void
 17540 0000C6DB 48B8-                   	mov rax, L_constants + 0
 17540 0000C6DD [0000000000000000] 
 17541 0000C6E5 48890425[12160000]      	mov qword [free_var_125], rax
 17542 0000C6ED 48B8-                   	mov rax, sob_void
 17542 0000C6EF [0000000000000000] 
 17543                                  
 17544 0000C6F7 4889C7                  	mov rdi, rax
 17545 0000C6FA E84BB10000              	call print_sexpr_if_not_void
 17546                                  	; preparing a non-tail-call
 17547 0000C6FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17548 0000C704 E8ECAE0000              	call malloc
 17549 0000C709 50                      	push rax
 17550 0000C70A BF00000000              	mov rdi, 8 * 0	; new rib
 17551 0000C70F E8E1AE0000              	call malloc
 17552 0000C714 50                      	push rax
 17553 0000C715 BF08000000              	mov rdi, 8 * 1	; extended env
 17554 0000C71A E8D6AE0000              	call malloc
 17555 0000C71F 488B7D10                	mov rdi, ENV
 17556 0000C723 BE00000000              	mov rsi, 0
 17557 0000C728 BA01000000              	mov rdx, 1
 17558                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 17559 0000C72D 4883FE00                	cmp rsi, 0
 17560 0000C731 7410                    	je .L_lambda_simple_env_end_0063
 17561 0000C733 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17562 0000C737 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17563 0000C73B 48FFC6                  	inc rsi
 17564 0000C73E 48FFC2                  	inc rdx
 17565 0000C741 EBEA                    	jmp .L_lambda_simple_env_loop_0063
 17566                                  .L_lambda_simple_env_end_0063:
 17567 0000C743 5B                      	pop rbx
 17568 0000C744 BE00000000              	mov rsi, 0
 17569                                  .L_lambda_simple_params_loop_0063:	; copy params
 17570 0000C749 4883FE00                	cmp rsi, 0
 17571 0000C74D 740E                    	je .L_lambda_simple_params_end_0063
 17572 0000C74F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17573 0000C754 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17574 0000C758 48FFC6                  	inc rsi
 17575 0000C75B EBEC                    	jmp .L_lambda_simple_params_loop_0063
 17576                                  .L_lambda_simple_params_end_0063:
 17577 0000C75D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17578 0000C760 4889C3                  	mov rbx, rax
 17579 0000C763 58                      	pop rax
 17580 0000C764 C60004                  	mov byte [rax], T_closure
 17581 0000C767 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17582 0000C76B 48C74009[78C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 17583 0000C773 E9040D0000              	jmp .L_lambda_simple_end_0063
 17584                                  .L_lambda_simple_code_0063:	; lambda-simple body
 17585 0000C778 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17586 0000C77E 740B                    	je .L_lambda_simple_arity_check_ok_0063
 17587 0000C780 FF742410                	push qword [rsp + 8 * 2]
 17588 0000C784 6A02                    	push 2
 17589 0000C786 E923AE0000              	jmp L_error_incorrect_arity_simple
 17590                                  .L_lambda_simple_arity_check_ok_0063:
 17591 0000C78B C8000000                	enter 0, 0
 17592                                  	; preparing a tail-call
 17593 0000C78F 48B8-                   	mov rax, L_constants + 1993
 17593 0000C791 [C907000000000000] 
 17594 0000C799 50                      	push rax
 17595 0000C79A 6A01                    	push 1	; arg count
 17596 0000C79C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17597 0000C7A1 E84FAE0000              	call malloc
 17598 0000C7A6 50                      	push rax
 17599 0000C7A7 BF10000000              	mov rdi, 8 * 2	; new rib
 17600 0000C7AC E844AE0000              	call malloc
 17601 0000C7B1 50                      	push rax
 17602 0000C7B2 BF10000000              	mov rdi, 8 * 2	; extended env
 17603 0000C7B7 E839AE0000              	call malloc
 17604 0000C7BC 488B7D10                	mov rdi, ENV
 17605 0000C7C0 BE00000000              	mov rsi, 0
 17606 0000C7C5 BA01000000              	mov rdx, 1
 17607                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 17608 0000C7CA 4883FE01                	cmp rsi, 1
 17609 0000C7CE 7410                    	je .L_lambda_simple_env_end_0064
 17610 0000C7D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17611 0000C7D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17612 0000C7D8 48FFC6                  	inc rsi
 17613 0000C7DB 48FFC2                  	inc rdx
 17614 0000C7DE EBEA                    	jmp .L_lambda_simple_env_loop_0064
 17615                                  .L_lambda_simple_env_end_0064:
 17616 0000C7E0 5B                      	pop rbx
 17617 0000C7E1 BE00000000              	mov rsi, 0
 17618                                  .L_lambda_simple_params_loop_0064:	; copy params
 17619 0000C7E6 4883FE02                	cmp rsi, 2
 17620 0000C7EA 740E                    	je .L_lambda_simple_params_end_0064
 17621 0000C7EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17622 0000C7F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17623 0000C7F5 48FFC6                  	inc rsi
 17624 0000C7F8 EBEC                    	jmp .L_lambda_simple_params_loop_0064
 17625                                  .L_lambda_simple_params_end_0064:
 17626 0000C7FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17627 0000C7FD 4889C3                  	mov rbx, rax
 17628 0000C800 58                      	pop rax
 17629 0000C801 C60004                  	mov byte [rax], T_closure
 17630 0000C804 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17631 0000C808 48C74009[15C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 17632 0000C810 E9150C0000              	jmp .L_lambda_simple_end_0064
 17633                                  .L_lambda_simple_code_0064:	; lambda-simple body
 17634 0000C815 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17635 0000C81B 740B                    	je .L_lambda_simple_arity_check_ok_0064
 17636 0000C81D FF742410                	push qword [rsp + 8 * 2]
 17637 0000C821 6A01                    	push 1
 17638 0000C823 E986AD0000              	jmp L_error_incorrect_arity_simple
 17639                                  .L_lambda_simple_arity_check_ok_0064:
 17640 0000C828 C8000000                	enter 0, 0
 17641 0000C82C BF08000000              	mov rdi, 8*1
 17642 0000C831 E8BFAD0000              	call malloc
 17643 0000C836 488B5D20                	mov rbx, PARAM(0)
 17644 0000C83A 488918                  	mov qword [rax], rbx
 17645 0000C83D 48894520                	mov PARAM(0), rax
 17646 0000C841 48B8-                   	mov rax, sob_void
 17646 0000C843 [0000000000000000] 
 17647                                  
 17648 0000C84B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17649 0000C850 E8A0AD0000              	call malloc
 17650 0000C855 50                      	push rax
 17651 0000C856 BF08000000              	mov rdi, 8 * 1	; new rib
 17652 0000C85B E895AD0000              	call malloc
 17653 0000C860 50                      	push rax
 17654 0000C861 BF18000000              	mov rdi, 8 * 3	; extended env
 17655 0000C866 E88AAD0000              	call malloc
 17656 0000C86B 488B7D10                	mov rdi, ENV
 17657 0000C86F BE00000000              	mov rsi, 0
 17658 0000C874 BA01000000              	mov rdx, 1
 17659                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 17660 0000C879 4883FE02                	cmp rsi, 2
 17661 0000C87D 7410                    	je .L_lambda_simple_env_end_0065
 17662 0000C87F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17663 0000C883 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17664 0000C887 48FFC6                  	inc rsi
 17665 0000C88A 48FFC2                  	inc rdx
 17666 0000C88D EBEA                    	jmp .L_lambda_simple_env_loop_0065
 17667                                  .L_lambda_simple_env_end_0065:
 17668 0000C88F 5B                      	pop rbx
 17669 0000C890 BE00000000              	mov rsi, 0
 17670                                  .L_lambda_simple_params_loop_0065:	; copy params
 17671 0000C895 4883FE01                	cmp rsi, 1
 17672 0000C899 740E                    	je .L_lambda_simple_params_end_0065
 17673 0000C89B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17674 0000C8A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17675 0000C8A4 48FFC6                  	inc rsi
 17676 0000C8A7 EBEC                    	jmp .L_lambda_simple_params_loop_0065
 17677                                  .L_lambda_simple_params_end_0065:
 17678 0000C8A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17679 0000C8AC 4889C3                  	mov rbx, rax
 17680 0000C8AF 58                      	pop rax
 17681 0000C8B0 C60004                  	mov byte [rax], T_closure
 17682 0000C8B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17683 0000C8B7 48C74009[C4C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 17684 0000C8BF E98C020000              	jmp .L_lambda_simple_end_0065
 17685                                  .L_lambda_simple_code_0065:	; lambda-simple body
 17686 0000C8C4 48837C241005            	cmp qword [rsp + 8 * 2], 5
 17687 0000C8CA 740B                    	je .L_lambda_simple_arity_check_ok_0065
 17688 0000C8CC FF742410                	push qword [rsp + 8 * 2]
 17689 0000C8D0 6A05                    	push 5
 17690 0000C8D2 E9D7AC0000              	jmp L_error_incorrect_arity_simple
 17691                                  .L_lambda_simple_arity_check_ok_0065:
 17692 0000C8D7 C8000000                	enter 0, 0
 17693                                  	; preparing a non-tail-call
 17694 0000C8DB 488B4530                	mov rax, PARAM(2)	; param len1
 17695 0000C8DF 50                      	push rax
 17696 0000C8E0 488B4520                	mov rax, PARAM(0)	; param i
 17697 0000C8E4 50                      	push rax
 17698 0000C8E5 6A02                    	push 2	; arg count
 17699 0000C8E7 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17700 0000C8EF 803805                  	cmp byte [rax], T_undefined
 17701 0000C8F2 0F84D0AB0000            	je L_error_fvar_undefined
 17702 0000C8F8 803804                  	cmp byte [rax], T_closure
 17703 0000C8FB 0F854BAC0000            	jne L_error_non_closure
 17704 0000C901 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17705 0000C904 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17706 0000C907 483D[02000000]          	cmp rax, sob_boolean_false
 17707 0000C90D 742E                    	je .L_if_else_0053
 17708                                  	; preparing a non-tail-call
 17709 0000C90F 488B4540                	mov rax, PARAM(4)	; param len2
 17710 0000C913 50                      	push rax
 17711 0000C914 488B4530                	mov rax, PARAM(2)	; param len1
 17712 0000C918 50                      	push rax
 17713 0000C919 6A02                    	push 2	; arg count
 17714 0000C91B 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17715 0000C923 803805                  	cmp byte [rax], T_undefined
 17716 0000C926 0F849CAB0000            	je L_error_fvar_undefined
 17717 0000C92C 803804                  	cmp byte [rax], T_closure
 17718 0000C92F 0F8517AC0000            	jne L_error_non_closure
 17719 0000C935 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17720 0000C938 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17721 0000C93B EB0A                    	jmp .L_if_end_0053
 17722                                  .L_if_else_0053:
 17723 0000C93D 48B8-                   	mov rax, L_constants + 2
 17723 0000C93F [0200000000000000] 
 17724                                  .L_if_end_0053:
 17725 0000C947 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 17726 0000C94D 0F85F9010000            	jne .L_or_end_0007; if its not false (true) then we need to return it and not the last element
 17727                                  	; preparing a non-tail-call
 17728 0000C953 488B4530                	mov rax, PARAM(2)	; param len1
 17729 0000C957 50                      	push rax
 17730 0000C958 488B4520                	mov rax, PARAM(0)	; param i
 17731 0000C95C 50                      	push rax
 17732 0000C95D 6A02                    	push 2	; arg count
 17733 0000C95F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17734 0000C967 803805                  	cmp byte [rax], T_undefined
 17735 0000C96A 0F8458AB0000            	je L_error_fvar_undefined
 17736 0000C970 803804                  	cmp byte [rax], T_closure
 17737 0000C973 0F85D3AB0000            	jne L_error_non_closure
 17738 0000C979 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17739 0000C97C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17740 0000C97F 483D[02000000]          	cmp rax, sob_boolean_false
 17741 0000C985 0F84B7010000            	je .L_if_else_0055
 17742                                  	; preparing a non-tail-call
 17743                                  	; preparing a non-tail-call
 17744 0000C98B 488B4520                	mov rax, PARAM(0)	; param i
 17745 0000C98F 50                      	push rax
 17746 0000C990 488B4538                	mov rax, PARAM(3)	; param str2
 17747 0000C994 50                      	push rax
 17748 0000C995 6A02                    	push 2	; arg count
 17749 0000C997 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17750 0000C99F 803805                  	cmp byte [rax], T_undefined
 17751 0000C9A2 0F8420AB0000            	je L_error_fvar_undefined
 17752 0000C9A8 803804                  	cmp byte [rax], T_closure
 17753 0000C9AB 0F859BAB0000            	jne L_error_non_closure
 17754 0000C9B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17755 0000C9B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17756 0000C9B7 50                      	push rax
 17757                                  	; preparing a non-tail-call
 17758 0000C9B8 488B4520                	mov rax, PARAM(0)	; param i
 17759 0000C9BC 50                      	push rax
 17760 0000C9BD 488B4528                	mov rax, PARAM(1)	; param str1
 17761 0000C9C1 50                      	push rax
 17762 0000C9C2 6A02                    	push 2	; arg count
 17763 0000C9C4 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17764 0000C9CC 803805                  	cmp byte [rax], T_undefined
 17765 0000C9CF 0F84F3AA0000            	je L_error_fvar_undefined
 17766 0000C9D5 803804                  	cmp byte [rax], T_closure
 17767 0000C9D8 0F856EAB0000            	jne L_error_non_closure
 17768 0000C9DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 17769 0000C9E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17770 0000C9E4 50                      	push rax
 17771 0000C9E5 6A02                    	push 2	; arg count
 17772 0000C9E7 488B4510                	mov rax, ENV
 17773 0000C9EB 488B4008                	mov rax, qword [rax + 8 * 1]
 17774 0000C9EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 17775 0000C9F2 803804                  	cmp byte [rax], T_closure
 17776 0000C9F5 0F8551AB0000            	jne L_error_non_closure
 17777 0000C9FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17778 0000C9FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17779 0000CA01 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 17780 0000CA07 0F8533010000            	jne .L_or_end_0008; if its not false (true) then we need to return it and not the last element
 17781                                  	; preparing a non-tail-call
 17782                                  	; preparing a non-tail-call
 17783 0000CA0D 488B4520                	mov rax, PARAM(0)	; param i
 17784 0000CA11 50                      	push rax
 17785 0000CA12 488B4538                	mov rax, PARAM(3)	; param str2
 17786 0000CA16 50                      	push rax
 17787 0000CA17 6A02                    	push 2	; arg count
 17788 0000CA19 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17789 0000CA21 803805                  	cmp byte [rax], T_undefined
 17790 0000CA24 0F849EAA0000            	je L_error_fvar_undefined
 17791 0000CA2A 803804                  	cmp byte [rax], T_closure
 17792 0000CA2D 0F8519AB0000            	jne L_error_non_closure
 17793 0000CA33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17794 0000CA36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17795 0000CA39 50                      	push rax
 17796                                  	; preparing a non-tail-call
 17797 0000CA3A 488B4520                	mov rax, PARAM(0)	; param i
 17798 0000CA3E 50                      	push rax
 17799 0000CA3F 488B4528                	mov rax, PARAM(1)	; param str1
 17800 0000CA43 50                      	push rax
 17801 0000CA44 6A02                    	push 2	; arg count
 17802 0000CA46 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17803 0000CA4E 803805                  	cmp byte [rax], T_undefined
 17804 0000CA51 0F8471AA0000            	je L_error_fvar_undefined
 17805 0000CA57 803804                  	cmp byte [rax], T_closure
 17806 0000CA5A 0F85ECAA0000            	jne L_error_non_closure
 17807 0000CA60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17808 0000CA63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17809 0000CA66 50                      	push rax
 17810 0000CA67 6A02                    	push 2	; arg count
 17811 0000CA69 488B4510                	mov rax, ENV
 17812 0000CA6D 488B4008                	mov rax, qword [rax + 8 * 1]
 17813 0000CA71 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 17814 0000CA75 803804                  	cmp byte [rax], T_closure
 17815 0000CA78 0F85CEAA0000            	jne L_error_non_closure
 17816 0000CA7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17817 0000CA81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17818 0000CA84 483D[02000000]          	cmp rax, sob_boolean_false
 17819 0000CA8A 0F84A6000000            	je .L_if_else_0054
 17820                                  	; preparing a tail-call
 17821 0000CA90 488B4540                	mov rax, PARAM(4)	; param len2
 17822 0000CA94 50                      	push rax
 17823 0000CA95 488B4538                	mov rax, PARAM(3)	; param str2
 17824 0000CA99 50                      	push rax
 17825 0000CA9A 488B4530                	mov rax, PARAM(2)	; param len1
 17826 0000CA9E 50                      	push rax
 17827 0000CA9F 488B4528                	mov rax, PARAM(1)	; param str1
 17828 0000CAA3 50                      	push rax
 17829                                  	; preparing a non-tail-call
 17830 0000CAA4 48B8-                   	mov rax, L_constants + 2270
 17830 0000CAA6 [DE08000000000000] 
 17831 0000CAAE 50                      	push rax
 17832 0000CAAF 488B4520                	mov rax, PARAM(0)	; param i
 17833 0000CAB3 50                      	push rax
 17834 0000CAB4 6A02                    	push 2	; arg count
 17835 0000CAB6 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 17836 0000CABE 803805                  	cmp byte [rax], T_undefined
 17837 0000CAC1 0F8401AA0000            	je L_error_fvar_undefined
 17838 0000CAC7 803804                  	cmp byte [rax], T_closure
 17839 0000CACA 0F857CAA0000            	jne L_error_non_closure
 17840 0000CAD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17841 0000CAD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17842 0000CAD6 50                      	push rax
 17843 0000CAD7 6A05                    	push 5	; arg count
 17844 0000CAD9 488B4510                	mov rax, ENV
 17845 0000CADD 488B00                  	mov rax, qword [rax + 8 * 0]
 17846 0000CAE0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17847 0000CAE3 488B00                  	mov rax, qword [rax]
 17848 0000CAE6 803804                  	cmp byte [rax], T_closure
 17849 0000CAE9 0F855DAA0000            	jne L_error_non_closure
 17850 0000CAEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 17851 0000CAF2 FF7508                  	push qword [rbp + 8 * 1]
 17852                                   ; old ret addr
 17853 0000CAF5 FF7500                  	push qword [rbp]
 17854                                   ; restore the old rbp
 17855 0000CAF8 BB05000000              	mov rbx, 5
 17856 0000CAFD 4883C303                	add rbx, 3
 17857 0000CB01 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17858 0000CB05 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17859 0000CB0A 4C8D4DF8                	lea r9, [rbp - 8]
 17860 0000CB0E B909000000              	mov rcx, 9
 17861                                  .L_tc_recycle_frame_loop_009c:
 17862 0000CB13 4883F900                	cmp rcx, 0
 17863 0000CB17 7413                    	je .L_tc_recycle_frame_done_009c
 17864 0000CB19 4D8B11                  	mov r10, qword [r9]
 17865 0000CB1C 4D8910                  	mov qword [r8], r10
 17866 0000CB1F 4983E808                	sub r8, 8
 17867 0000CB23 4983E908                	sub r9, 8
 17868 0000CB27 48FFC9                  	dec rcx
 17869 0000CB2A EBE7                    	jmp .L_tc_recycle_frame_loop_009c
 17870                                  .L_tc_recycle_frame_done_009c:
 17871 0000CB2C 498D6008                	lea rsp, [r8 + 8]
 17872 0000CB30 5D                      	pop rbp ; restore the old rbp
 17873 0000CB31 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17874 0000CB34 EB0A                    	jmp .L_if_end_0054
 17875                                  .L_if_else_0054:
 17876 0000CB36 48B8-                   	mov rax, L_constants + 2
 17876 0000CB38 [0200000000000000] 
 17877                                  .L_if_end_0054:
 17878                                  .L_or_end_0008:
 17879 0000CB40 EB0A                    	jmp .L_if_end_0055
 17880                                  .L_if_else_0055:
 17881 0000CB42 48B8-                   	mov rax, L_constants + 2
 17881 0000CB44 [0200000000000000] 
 17882                                  .L_if_end_0055:
 17883                                  .L_or_end_0007:
 17884 0000CB4C C9                      	leave
 17885 0000CB4D C23800                  	ret AND_KILL_FRAME(5)
 17886                                  .L_lambda_simple_end_0065:	; new closure is in rax
 17887 0000CB50 50                      	push rax
 17888 0000CB51 488B4520                	mov rax, PARAM(0)	; param run
 17889 0000CB55 8F00                    	pop qword [rax]
 17890 0000CB57 48B8-                   	mov rax, sob_void
 17890 0000CB59 [0000000000000000] 
 17891                                  
 17892                                  	; preparing a tail-call
 17893 0000CB61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17894 0000CB66 E88AAA0000              	call malloc
 17895 0000CB6B 50                      	push rax
 17896 0000CB6C BF08000000              	mov rdi, 8 * 1	; new rib
 17897 0000CB71 E87FAA0000              	call malloc
 17898 0000CB76 50                      	push rax
 17899 0000CB77 BF18000000              	mov rdi, 8 * 3	; extended env
 17900 0000CB7C E874AA0000              	call malloc
 17901 0000CB81 488B7D10                	mov rdi, ENV
 17902 0000CB85 BE00000000              	mov rsi, 0
 17903 0000CB8A BA01000000              	mov rdx, 1
 17904                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 17905 0000CB8F 4883FE02                	cmp rsi, 2
 17906 0000CB93 7410                    	je .L_lambda_simple_env_end_0066
 17907 0000CB95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17908 0000CB99 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17909 0000CB9D 48FFC6                  	inc rsi
 17910 0000CBA0 48FFC2                  	inc rdx
 17911 0000CBA3 EBEA                    	jmp .L_lambda_simple_env_loop_0066
 17912                                  .L_lambda_simple_env_end_0066:
 17913 0000CBA5 5B                      	pop rbx
 17914 0000CBA6 BE00000000              	mov rsi, 0
 17915                                  .L_lambda_simple_params_loop_0066:	; copy params
 17916 0000CBAB 4883FE01                	cmp rsi, 1
 17917 0000CBAF 740E                    	je .L_lambda_simple_params_end_0066
 17918 0000CBB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17919 0000CBB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17920 0000CBBA 48FFC6                  	inc rsi
 17921 0000CBBD EBEC                    	jmp .L_lambda_simple_params_loop_0066
 17922                                  .L_lambda_simple_params_end_0066:
 17923 0000CBBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17924 0000CBC2 4889C3                  	mov rbx, rax
 17925 0000CBC5 58                      	pop rax
 17926 0000CBC6 C60004                  	mov byte [rax], T_closure
 17927 0000CBC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17928 0000CBCD 48C74009[DACB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 17929 0000CBD5 E9A0020000              	jmp .L_lambda_simple_end_0066
 17930                                  .L_lambda_simple_code_0066:	; lambda-simple body
 17931 0000CBDA 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17932 0000CBE0 740B                    	je .L_lambda_simple_arity_check_ok_0066
 17933 0000CBE2 FF742410                	push qword [rsp + 8 * 2]
 17934 0000CBE6 6A02                    	push 2
 17935 0000CBE8 E9C1A90000              	jmp L_error_incorrect_arity_simple
 17936                                  .L_lambda_simple_arity_check_ok_0066:
 17937 0000CBED C8000000                	enter 0, 0
 17938                                  	; preparing a tail-call
 17939                                  	; preparing a non-tail-call
 17940 0000CBF1 488B4528                	mov rax, PARAM(1)	; param str2
 17941 0000CBF5 50                      	push rax
 17942 0000CBF6 6A01                    	push 1	; arg count
 17943 0000CBF8 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17944 0000CC00 803805                  	cmp byte [rax], T_undefined
 17945 0000CC03 0F84BFA80000            	je L_error_fvar_undefined
 17946 0000CC09 803804                  	cmp byte [rax], T_closure
 17947 0000CC0C 0F853AA90000            	jne L_error_non_closure
 17948 0000CC12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17949 0000CC15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17950 0000CC18 50                      	push rax
 17951                                  	; preparing a non-tail-call
 17952 0000CC19 488B4520                	mov rax, PARAM(0)	; param str1
 17953 0000CC1D 50                      	push rax
 17954 0000CC1E 6A01                    	push 1	; arg count
 17955 0000CC20 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17956 0000CC28 803805                  	cmp byte [rax], T_undefined
 17957 0000CC2B 0F8497A80000            	je L_error_fvar_undefined
 17958 0000CC31 803804                  	cmp byte [rax], T_closure
 17959 0000CC34 0F8512A90000            	jne L_error_non_closure
 17960 0000CC3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17961 0000CC3D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17962 0000CC40 50                      	push rax
 17963 0000CC41 6A02                    	push 2	; arg count
 17964 0000CC43 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17965 0000CC48 E8A8A90000              	call malloc
 17966 0000CC4D 50                      	push rax
 17967 0000CC4E BF10000000              	mov rdi, 8 * 2	; new rib
 17968 0000CC53 E89DA90000              	call malloc
 17969 0000CC58 50                      	push rax
 17970 0000CC59 BF20000000              	mov rdi, 8 * 4	; extended env
 17971 0000CC5E E892A90000              	call malloc
 17972 0000CC63 488B7D10                	mov rdi, ENV
 17973 0000CC67 BE00000000              	mov rsi, 0
 17974 0000CC6C BA01000000              	mov rdx, 1
 17975                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 17976 0000CC71 4883FE03                	cmp rsi, 3
 17977 0000CC75 7410                    	je .L_lambda_simple_env_end_0067
 17978 0000CC77 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17979 0000CC7B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17980 0000CC7F 48FFC6                  	inc rsi
 17981 0000CC82 48FFC2                  	inc rdx
 17982 0000CC85 EBEA                    	jmp .L_lambda_simple_env_loop_0067
 17983                                  .L_lambda_simple_env_end_0067:
 17984 0000CC87 5B                      	pop rbx
 17985 0000CC88 BE00000000              	mov rsi, 0
 17986                                  .L_lambda_simple_params_loop_0067:	; copy params
 17987 0000CC8D 4883FE02                	cmp rsi, 2
 17988 0000CC91 740E                    	je .L_lambda_simple_params_end_0067
 17989 0000CC93 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17990 0000CC98 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17991 0000CC9C 48FFC6                  	inc rsi
 17992 0000CC9F EBEC                    	jmp .L_lambda_simple_params_loop_0067
 17993                                  .L_lambda_simple_params_end_0067:
 17994 0000CCA1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17995 0000CCA4 4889C3                  	mov rbx, rax
 17996 0000CCA7 58                      	pop rax
 17997 0000CCA8 C60004                  	mov byte [rax], T_closure
 17998 0000CCAB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17999 0000CCAF 48C74009[BCCC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 18000 0000CCB7 E96C010000              	jmp .L_lambda_simple_end_0067
 18001                                  .L_lambda_simple_code_0067:	; lambda-simple body
 18002 0000CCBC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18003 0000CCC2 740B                    	je .L_lambda_simple_arity_check_ok_0067
 18004 0000CCC4 FF742410                	push qword [rsp + 8 * 2]
 18005 0000CCC8 6A02                    	push 2
 18006 0000CCCA E9DFA80000              	jmp L_error_incorrect_arity_simple
 18007                                  .L_lambda_simple_arity_check_ok_0067:
 18008 0000CCCF C8000000                	enter 0, 0
 18009                                  	; preparing a non-tail-call
 18010 0000CCD3 488B4528                	mov rax, PARAM(1)	; param len2
 18011 0000CCD7 50                      	push rax
 18012 0000CCD8 488B4520                	mov rax, PARAM(0)	; param len1
 18013 0000CCDC 50                      	push rax
 18014 0000CCDD 6A02                    	push 2	; arg count
 18015 0000CCDF 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 18016 0000CCE7 803805                  	cmp byte [rax], T_undefined
 18017 0000CCEA 0F84D8A70000            	je L_error_fvar_undefined
 18018 0000CCF0 803804                  	cmp byte [rax], T_closure
 18019 0000CCF3 0F8553A80000            	jne L_error_non_closure
 18020 0000CCF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18021 0000CCFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18022 0000CCFF 483D[02000000]          	cmp rax, sob_boolean_false
 18023 0000CD05 0F848F000000            	je .L_if_else_0056
 18024                                  	; preparing a tail-call
 18025 0000CD0B 488B4528                	mov rax, PARAM(1)	; param len2
 18026 0000CD0F 50                      	push rax
 18027 0000CD10 488B4510                	mov rax, ENV
 18028 0000CD14 488B00                  	mov rax, qword [rax + 8 * 0]
 18029 0000CD17 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18030 0000CD1B 50                      	push rax
 18031 0000CD1C 488B4520                	mov rax, PARAM(0)	; param len1
 18032 0000CD20 50                      	push rax
 18033 0000CD21 488B4510                	mov rax, ENV
 18034 0000CD25 488B00                  	mov rax, qword [rax + 8 * 0]
 18035 0000CD28 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18036 0000CD2B 50                      	push rax
 18037 0000CD2C 48B8-                   	mov rax, L_constants + 2135
 18037 0000CD2E [5708000000000000] 
 18038 0000CD36 50                      	push rax
 18039 0000CD37 6A05                    	push 5	; arg count
 18040 0000CD39 488B4510                	mov rax, ENV
 18041 0000CD3D 488B4008                	mov rax, qword [rax + 8 * 1]
 18042 0000CD41 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18043 0000CD44 488B00                  	mov rax, qword [rax]
 18044 0000CD47 803804                  	cmp byte [rax], T_closure
 18045 0000CD4A 0F85FCA70000            	jne L_error_non_closure
 18046 0000CD50 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18047 0000CD53 FF7508                  	push qword [rbp + 8 * 1]
 18048                                   ; old ret addr
 18049 0000CD56 FF7500                  	push qword [rbp]
 18050                                   ; restore the old rbp
 18051 0000CD59 BB05000000              	mov rbx, 5
 18052 0000CD5E 4883C303                	add rbx, 3
 18053 0000CD62 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18054 0000CD66 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18055 0000CD6B 4C8D4DF8                	lea r9, [rbp - 8]
 18056 0000CD6F B909000000              	mov rcx, 9
 18057                                  .L_tc_recycle_frame_loop_009f:
 18058 0000CD74 4883F900                	cmp rcx, 0
 18059 0000CD78 7413                    	je .L_tc_recycle_frame_done_009f
 18060 0000CD7A 4D8B11                  	mov r10, qword [r9]
 18061 0000CD7D 4D8910                  	mov qword [r8], r10
 18062 0000CD80 4983E808                	sub r8, 8
 18063 0000CD84 4983E908                	sub r9, 8
 18064 0000CD88 48FFC9                  	dec rcx
 18065 0000CD8B EBE7                    	jmp .L_tc_recycle_frame_loop_009f
 18066                                  .L_tc_recycle_frame_done_009f:
 18067 0000CD8D 498D6008                	lea rsp, [r8 + 8]
 18068 0000CD91 5D                      	pop rbp ; restore the old rbp
 18069 0000CD92 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18070 0000CD95 E98A000000              	jmp .L_if_end_0056
 18071                                  .L_if_else_0056:
 18072                                  	; preparing a tail-call
 18073 0000CD9A 488B4520                	mov rax, PARAM(0)	; param len1
 18074 0000CD9E 50                      	push rax
 18075 0000CD9F 488B4510                	mov rax, ENV
 18076 0000CDA3 488B00                  	mov rax, qword [rax + 8 * 0]
 18077 0000CDA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18078 0000CDA9 50                      	push rax
 18079 0000CDAA 488B4528                	mov rax, PARAM(1)	; param len2
 18080 0000CDAE 50                      	push rax
 18081 0000CDAF 488B4510                	mov rax, ENV
 18082 0000CDB3 488B00                  	mov rax, qword [rax + 8 * 0]
 18083 0000CDB6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18084 0000CDBA 50                      	push rax
 18085 0000CDBB 48B8-                   	mov rax, L_constants + 2135
 18085 0000CDBD [5708000000000000] 
 18086 0000CDC5 50                      	push rax
 18087 0000CDC6 6A05                    	push 5	; arg count
 18088 0000CDC8 488B4510                	mov rax, ENV
 18089 0000CDCC 488B4008                	mov rax, qword [rax + 8 * 1]
 18090 0000CDD0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18091 0000CDD3 488B00                  	mov rax, qword [rax]
 18092 0000CDD6 803804                  	cmp byte [rax], T_closure
 18093 0000CDD9 0F856DA70000            	jne L_error_non_closure
 18094 0000CDDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18095 0000CDE2 FF7508                  	push qword [rbp + 8 * 1]
 18096                                   ; old ret addr
 18097 0000CDE5 FF7500                  	push qword [rbp]
 18098                                   ; restore the old rbp
 18099 0000CDE8 BB05000000              	mov rbx, 5
 18100 0000CDED 4883C303                	add rbx, 3
 18101 0000CDF1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18102 0000CDF5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18103 0000CDFA 4C8D4DF8                	lea r9, [rbp - 8]
 18104 0000CDFE B909000000              	mov rcx, 9
 18105                                  .L_tc_recycle_frame_loop_00a0:
 18106 0000CE03 4883F900                	cmp rcx, 0
 18107 0000CE07 7413                    	je .L_tc_recycle_frame_done_00a0
 18108 0000CE09 4D8B11                  	mov r10, qword [r9]
 18109 0000CE0C 4D8910                  	mov qword [r8], r10
 18110 0000CE0F 4983E808                	sub r8, 8
 18111 0000CE13 4983E908                	sub r9, 8
 18112 0000CE17 48FFC9                  	dec rcx
 18113 0000CE1A EBE7                    	jmp .L_tc_recycle_frame_loop_00a0
 18114                                  .L_tc_recycle_frame_done_00a0:
 18115 0000CE1C 498D6008                	lea rsp, [r8 + 8]
 18116 0000CE20 5D                      	pop rbp ; restore the old rbp
 18117 0000CE21 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18118                                  .L_if_end_0056:
 18119 0000CE24 C9                      	leave
 18120 0000CE25 C22000                  	ret AND_KILL_FRAME(2)
 18121                                  .L_lambda_simple_end_0067:	; new closure is in rax
 18122 0000CE28 803804                  	cmp byte [rax], T_closure
 18123 0000CE2B 0F851BA70000            	jne L_error_non_closure
 18124 0000CE31 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18125 0000CE34 FF7508                  	push qword [rbp + 8 * 1]
 18126                                   ; old ret addr
 18127 0000CE37 FF7500                  	push qword [rbp]
 18128                                   ; restore the old rbp
 18129 0000CE3A BB02000000              	mov rbx, 2
 18130 0000CE3F 4883C303                	add rbx, 3
 18131 0000CE43 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18132 0000CE47 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18133 0000CE4C 4C8D4DF8                	lea r9, [rbp - 8]
 18134 0000CE50 B906000000              	mov rcx, 6
 18135                                  .L_tc_recycle_frame_loop_009e:
 18136 0000CE55 4883F900                	cmp rcx, 0
 18137 0000CE59 7413                    	je .L_tc_recycle_frame_done_009e
 18138 0000CE5B 4D8B11                  	mov r10, qword [r9]
 18139 0000CE5E 4D8910                  	mov qword [r8], r10
 18140 0000CE61 4983E808                	sub r8, 8
 18141 0000CE65 4983E908                	sub r9, 8
 18142 0000CE69 48FFC9                  	dec rcx
 18143 0000CE6C EBE7                    	jmp .L_tc_recycle_frame_loop_009e
 18144                                  .L_tc_recycle_frame_done_009e:
 18145 0000CE6E 498D6008                	lea rsp, [r8 + 8]
 18146 0000CE72 5D                      	pop rbp ; restore the old rbp
 18147 0000CE73 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18148 0000CE76 C9                      	leave
 18149 0000CE77 C22000                  	ret AND_KILL_FRAME(2)
 18150                                  .L_lambda_simple_end_0066:	; new closure is in rax
 18151 0000CE7A 50                      	push rax
 18152 0000CE7B 6A01                    	push 1	; arg count
 18153 0000CE7D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18154 0000CE82 E86EA70000              	call malloc
 18155 0000CE87 50                      	push rax
 18156 0000CE88 BF08000000              	mov rdi, 8 * 1	; new rib
 18157 0000CE8D E863A70000              	call malloc
 18158 0000CE92 50                      	push rax
 18159 0000CE93 BF18000000              	mov rdi, 8 * 3	; extended env
 18160 0000CE98 E858A70000              	call malloc
 18161 0000CE9D 488B7D10                	mov rdi, ENV
 18162 0000CEA1 BE00000000              	mov rsi, 0
 18163 0000CEA6 BA01000000              	mov rdx, 1
 18164                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 18165 0000CEAB 4883FE02                	cmp rsi, 2
 18166 0000CEAF 7410                    	je .L_lambda_simple_env_end_0068
 18167 0000CEB1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18168 0000CEB5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18169 0000CEB9 48FFC6                  	inc rsi
 18170 0000CEBC 48FFC2                  	inc rdx
 18171 0000CEBF EBEA                    	jmp .L_lambda_simple_env_loop_0068
 18172                                  .L_lambda_simple_env_end_0068:
 18173 0000CEC1 5B                      	pop rbx
 18174 0000CEC2 BE00000000              	mov rsi, 0
 18175                                  .L_lambda_simple_params_loop_0068:	; copy params
 18176 0000CEC7 4883FE01                	cmp rsi, 1
 18177 0000CECB 740E                    	je .L_lambda_simple_params_end_0068
 18178 0000CECD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18179 0000CED2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18180 0000CED6 48FFC6                  	inc rsi
 18181 0000CED9 EBEC                    	jmp .L_lambda_simple_params_loop_0068
 18182                                  .L_lambda_simple_params_end_0068:
 18183 0000CEDB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18184 0000CEDE 4889C3                  	mov rbx, rax
 18185 0000CEE1 58                      	pop rax
 18186 0000CEE2 C60004                  	mov byte [rax], T_closure
 18187 0000CEE5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18188 0000CEE9 48C74009[F6CE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 18189 0000CEF1 E9E2040000              	jmp .L_lambda_simple_end_0068
 18190                                  .L_lambda_simple_code_0068:	; lambda-simple body
 18191 0000CEF6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18192 0000CEFC 740B                    	je .L_lambda_simple_arity_check_ok_0068
 18193 0000CEFE FF742410                	push qword [rsp + 8 * 2]
 18194 0000CF02 6A01                    	push 1
 18195 0000CF04 E9A5A60000              	jmp L_error_incorrect_arity_simple
 18196                                  .L_lambda_simple_arity_check_ok_0068:
 18197 0000CF09 C8000000                	enter 0, 0
 18198                                  	; preparing a tail-call
 18199 0000CF0D 48B8-                   	mov rax, L_constants + 1993
 18199 0000CF0F [C907000000000000] 
 18200 0000CF17 50                      	push rax
 18201 0000CF18 6A01                    	push 1	; arg count
 18202 0000CF1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18203 0000CF1F E8D1A60000              	call malloc
 18204 0000CF24 50                      	push rax
 18205 0000CF25 BF08000000              	mov rdi, 8 * 1	; new rib
 18206 0000CF2A E8C6A60000              	call malloc
 18207 0000CF2F 50                      	push rax
 18208 0000CF30 BF20000000              	mov rdi, 8 * 4	; extended env
 18209 0000CF35 E8BBA60000              	call malloc
 18210 0000CF3A 488B7D10                	mov rdi, ENV
 18211 0000CF3E BE00000000              	mov rsi, 0
 18212 0000CF43 BA01000000              	mov rdx, 1
 18213                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 18214 0000CF48 4883FE03                	cmp rsi, 3
 18215 0000CF4C 7410                    	je .L_lambda_simple_env_end_0069
 18216 0000CF4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18217 0000CF52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18218 0000CF56 48FFC6                  	inc rsi
 18219 0000CF59 48FFC2                  	inc rdx
 18220 0000CF5C EBEA                    	jmp .L_lambda_simple_env_loop_0069
 18221                                  .L_lambda_simple_env_end_0069:
 18222 0000CF5E 5B                      	pop rbx
 18223 0000CF5F BE00000000              	mov rsi, 0
 18224                                  .L_lambda_simple_params_loop_0069:	; copy params
 18225 0000CF64 4883FE01                	cmp rsi, 1
 18226 0000CF68 740E                    	je .L_lambda_simple_params_end_0069
 18227 0000CF6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18228 0000CF6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18229 0000CF73 48FFC6                  	inc rsi
 18230 0000CF76 EBEC                    	jmp .L_lambda_simple_params_loop_0069
 18231                                  .L_lambda_simple_params_end_0069:
 18232 0000CF78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18233 0000CF7B 4889C3                  	mov rbx, rax
 18234 0000CF7E 58                      	pop rax
 18235 0000CF7F C60004                  	mov byte [rax], T_closure
 18236 0000CF82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18237 0000CF86 48C74009[93CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 18238 0000CF8E E9F3030000              	jmp .L_lambda_simple_end_0069
 18239                                  .L_lambda_simple_code_0069:	; lambda-simple body
 18240 0000CF93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18241 0000CF99 740B                    	je .L_lambda_simple_arity_check_ok_0069
 18242 0000CF9B FF742410                	push qword [rsp + 8 * 2]
 18243 0000CF9F 6A01                    	push 1
 18244 0000CFA1 E908A60000              	jmp L_error_incorrect_arity_simple
 18245                                  .L_lambda_simple_arity_check_ok_0069:
 18246 0000CFA6 C8000000                	enter 0, 0
 18247 0000CFAA BF08000000              	mov rdi, 8*1
 18248 0000CFAF E841A60000              	call malloc
 18249 0000CFB4 488B5D20                	mov rbx, PARAM(0)
 18250 0000CFB8 488918                  	mov qword [rax], rbx
 18251 0000CFBB 48894520                	mov PARAM(0), rax
 18252 0000CFBF 48B8-                   	mov rax, sob_void
 18252 0000CFC1 [0000000000000000] 
 18253                                  
 18254 0000CFC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18255 0000CFCE E822A60000              	call malloc
 18256 0000CFD3 50                      	push rax
 18257 0000CFD4 BF08000000              	mov rdi, 8 * 1	; new rib
 18258 0000CFD9 E817A60000              	call malloc
 18259 0000CFDE 50                      	push rax
 18260 0000CFDF BF28000000              	mov rdi, 8 * 5	; extended env
 18261 0000CFE4 E80CA60000              	call malloc
 18262 0000CFE9 488B7D10                	mov rdi, ENV
 18263 0000CFED BE00000000              	mov rsi, 0
 18264 0000CFF2 BA01000000              	mov rdx, 1
 18265                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 18266 0000CFF7 4883FE04                	cmp rsi, 4
 18267 0000CFFB 7410                    	je .L_lambda_simple_env_end_006a
 18268 0000CFFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18269 0000D001 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18270 0000D005 48FFC6                  	inc rsi
 18271 0000D008 48FFC2                  	inc rdx
 18272 0000D00B EBEA                    	jmp .L_lambda_simple_env_loop_006a
 18273                                  .L_lambda_simple_env_end_006a:
 18274 0000D00D 5B                      	pop rbx
 18275 0000D00E BE00000000              	mov rsi, 0
 18276                                  .L_lambda_simple_params_loop_006a:	; copy params
 18277 0000D013 4883FE01                	cmp rsi, 1
 18278 0000D017 740E                    	je .L_lambda_simple_params_end_006a
 18279 0000D019 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18280 0000D01E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18281 0000D022 48FFC6                  	inc rsi
 18282 0000D025 EBEC                    	jmp .L_lambda_simple_params_loop_006a
 18283                                  .L_lambda_simple_params_end_006a:
 18284 0000D027 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18285 0000D02A 4889C3                  	mov rbx, rax
 18286 0000D02D 58                      	pop rax
 18287 0000D02E C60004                  	mov byte [rax], T_closure
 18288 0000D031 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18289 0000D035 48C74009[42D00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 18290 0000D03D E95C010000              	jmp .L_lambda_simple_end_006a
 18291                                  .L_lambda_simple_code_006a:	; lambda-simple body
 18292 0000D042 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18293 0000D048 740B                    	je .L_lambda_simple_arity_check_ok_006a
 18294 0000D04A FF742410                	push qword [rsp + 8 * 2]
 18295 0000D04E 6A02                    	push 2
 18296 0000D050 E959A50000              	jmp L_error_incorrect_arity_simple
 18297                                  .L_lambda_simple_arity_check_ok_006a:
 18298 0000D055 C8000000                	enter 0, 0
 18299                                  	; preparing a non-tail-call
 18300 0000D059 488B4528                	mov rax, PARAM(1)	; param strs
 18301 0000D05D 50                      	push rax
 18302 0000D05E 6A01                    	push 1	; arg count
 18303 0000D060 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18304 0000D068 803805                  	cmp byte [rax], T_undefined
 18305 0000D06B 0F8457A40000            	je L_error_fvar_undefined
 18306 0000D071 803804                  	cmp byte [rax], T_closure
 18307 0000D074 0F85D2A40000            	jne L_error_non_closure
 18308 0000D07A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18309 0000D07D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18310 0000D080 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 18311 0000D086 0F850E010000            	jne .L_or_end_0009; if its not false (true) then we need to return it and not the last element
 18312                                  	; preparing a non-tail-call
 18313                                  	; preparing a non-tail-call
 18314 0000D08C 488B4528                	mov rax, PARAM(1)	; param strs
 18315 0000D090 50                      	push rax
 18316 0000D091 6A01                    	push 1	; arg count
 18317 0000D093 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18318 0000D09B 803805                  	cmp byte [rax], T_undefined
 18319 0000D09E 0F8424A40000            	je L_error_fvar_undefined
 18320 0000D0A4 803804                  	cmp byte [rax], T_closure
 18321 0000D0A7 0F859FA40000            	jne L_error_non_closure
 18322 0000D0AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18323 0000D0B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18324 0000D0B3 50                      	push rax
 18325 0000D0B4 488B4520                	mov rax, PARAM(0)	; param str
 18326 0000D0B8 50                      	push rax
 18327 0000D0B9 6A02                    	push 2	; arg count
 18328 0000D0BB 488B4510                	mov rax, ENV
 18329 0000D0BF 488B4008                	mov rax, qword [rax + 8 * 1]
 18330 0000D0C3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18331 0000D0C6 803804                  	cmp byte [rax], T_closure
 18332 0000D0C9 0F857DA40000            	jne L_error_non_closure
 18333 0000D0CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18334 0000D0D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18335 0000D0D5 483D[02000000]          	cmp rax, sob_boolean_false
 18336 0000D0DB 0F84AF000000            	je .L_if_else_0057
 18337                                  	; preparing a tail-call
 18338                                  	; preparing a non-tail-call
 18339 0000D0E1 488B4528                	mov rax, PARAM(1)	; param strs
 18340 0000D0E5 50                      	push rax
 18341 0000D0E6 6A01                    	push 1	; arg count
 18342 0000D0E8 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18343 0000D0F0 803805                  	cmp byte [rax], T_undefined
 18344 0000D0F3 0F84CFA30000            	je L_error_fvar_undefined
 18345 0000D0F9 803804                  	cmp byte [rax], T_closure
 18346 0000D0FC 0F854AA40000            	jne L_error_non_closure
 18347 0000D102 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18348 0000D105 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18349 0000D108 50                      	push rax
 18350                                  	; preparing a non-tail-call
 18351 0000D109 488B4528                	mov rax, PARAM(1)	; param strs
 18352 0000D10D 50                      	push rax
 18353 0000D10E 6A01                    	push 1	; arg count
 18354 0000D110 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18355 0000D118 803805                  	cmp byte [rax], T_undefined
 18356 0000D11B 0F84A7A30000            	je L_error_fvar_undefined
 18357 0000D121 803804                  	cmp byte [rax], T_closure
 18358 0000D124 0F8522A40000            	jne L_error_non_closure
 18359 0000D12A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18360 0000D12D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18361 0000D130 50                      	push rax
 18362 0000D131 6A02                    	push 2	; arg count
 18363 0000D133 488B4510                	mov rax, ENV
 18364 0000D137 488B00                  	mov rax, qword [rax + 8 * 0]
 18365 0000D13A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18366 0000D13D 488B00                  	mov rax, qword [rax]
 18367 0000D140 803804                  	cmp byte [rax], T_closure
 18368 0000D143 0F8503A40000            	jne L_error_non_closure
 18369 0000D149 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18370 0000D14C FF7508                  	push qword [rbp + 8 * 1]
 18371                                   ; old ret addr
 18372 0000D14F FF7500                  	push qword [rbp]
 18373                                   ; restore the old rbp
 18374 0000D152 BB02000000              	mov rbx, 2
 18375 0000D157 4883C303                	add rbx, 3
 18376 0000D15B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18377 0000D15F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18378 0000D164 4C8D4DF8                	lea r9, [rbp - 8]
 18379 0000D168 B906000000              	mov rcx, 6
 18380                                  .L_tc_recycle_frame_loop_00a2:
 18381 0000D16D 4883F900                	cmp rcx, 0
 18382 0000D171 7413                    	je .L_tc_recycle_frame_done_00a2
 18383 0000D173 4D8B11                  	mov r10, qword [r9]
 18384 0000D176 4D8910                  	mov qword [r8], r10
 18385 0000D179 4983E808                	sub r8, 8
 18386 0000D17D 4983E908                	sub r9, 8
 18387 0000D181 48FFC9                  	dec rcx
 18388 0000D184 EBE7                    	jmp .L_tc_recycle_frame_loop_00a2
 18389                                  .L_tc_recycle_frame_done_00a2:
 18390 0000D186 498D6008                	lea rsp, [r8 + 8]
 18391 0000D18A 5D                      	pop rbp ; restore the old rbp
 18392 0000D18B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18393 0000D18E EB0A                    	jmp .L_if_end_0057
 18394                                  .L_if_else_0057:
 18395 0000D190 48B8-                   	mov rax, L_constants + 2
 18395 0000D192 [0200000000000000] 
 18396                                  .L_if_end_0057:
 18397                                  .L_or_end_0009:
 18398 0000D19A C9                      	leave
 18399 0000D19B C22000                  	ret AND_KILL_FRAME(2)
 18400                                  .L_lambda_simple_end_006a:	; new closure is in rax
 18401 0000D19E 50                      	push rax
 18402 0000D19F 488B4520                	mov rax, PARAM(0)	; param run
 18403 0000D1A3 8F00                    	pop qword [rax]
 18404 0000D1A5 48B8-                   	mov rax, sob_void
 18404 0000D1A7 [0000000000000000] 
 18405                                  
 18406 0000D1AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18407 0000D1B4 E83CA40000              	call malloc
 18408 0000D1B9 50                      	push rax
 18409 0000D1BA BF08000000              	mov rdi, 8 * 1	; new rib
 18410 0000D1BF E831A40000              	call malloc
 18411 0000D1C4 50                      	push rax
 18412 0000D1C5 BF28000000              	mov rdi, 8 * 5	; extended env
 18413 0000D1CA E826A40000              	call malloc
 18414 0000D1CF 488B7D10                	mov rdi, ENV
 18415 0000D1D3 4831F6                  	 xor rsi, rsi
 18416 0000D1D6 4831D2                  	 xor rdx, rdx
 18417 0000D1D9 48FFC2                  	inc rdx
 18418                                  .L_lambda_opt_env_loop_0011:	; ext_env[i + 1] <-- env[i]
 18419 0000D1DC 4883FE04                	cmp rsi, 4
 18420 0000D1E0 7410                    	je .L_lambda_opt_env_end_0011
 18421 0000D1E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18422 0000D1E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18423 0000D1EA 48FFC6                  	inc rsi
 18424 0000D1ED 48FFC2                  	inc rdx
 18425 0000D1F0 EBEA                    	jmp .L_lambda_opt_env_loop_0011
 18426                                  .L_lambda_opt_env_end_0011:
 18427 0000D1F2 5B                      	pop rbx
 18428 0000D1F3 4831F6                  	xor rsi, rsi
 18429                                  .L_lambda_opt_params_loop_0011:	; copy params
 18430 0000D1F6 4883FE01                	cmp rsi, 1
 18431 0000D1FA 740E                    	je .L_lambda_opt_params_end_0011
 18432 0000D1FC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18433 0000D201 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18434 0000D205 48FFC6                  	inc rsi
 18435 0000D208 EBEC                    	jmp .L_lambda_opt_params_loop_0011
 18436                                  .L_lambda_opt_params_end_0011:
 18437 0000D20A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18438 0000D20D 4889C3                  	mov rbx, rax
 18439 0000D210 58                      	pop rax
 18440 0000D211 C60004                  	mov byte [rax], T_closure
 18441 0000D214 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18442 0000D218 48C74009[25D20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 18443 0000D220 E95D010000              	jmp .L_lambda_opt_end_0011
 18444                                  .L_lambda_opt_code_0011:; lambda opt body
 18445 0000D225 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18446 0000D22B 7409                    	je .L_lambda_opt_arity_check_exact_0011
 18447 0000D22D 7F57                    	jg .L_lambda_opt_arity_check_more_0011
 18448 0000D22F 6A01                    	push 1
 18449 0000D231 E98CA30000              	jmp L_error_incorrect_arity_opt
 18450                                  .L_lambda_opt_arity_check_exact_0011:
 18451 0000D236 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 18452 0000D23A 4C894C24F8              	mov qword [rsp -8], r9
 18453 0000D23F 4C8B4C2408              	mov r9, qword [rsp +8]
 18454 0000D244 4C890C24                	mov qword [rsp +8 * 0], r9
 18455 0000D248 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 18456 0000D24D 4C89C9                  	mov rcx, r9
 18457 0000D250 49FFC1                  	inc r9
 18458 0000D253 4C894C2408              	mov qword [rsp +8], r9
 18459 0000D258 4889E2                  	mov rdx, rsp
 18460 0000D25B 4883C218                	add rdx, 24
 18461                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0011:
 18462 0000D25F 4883F900                	cmp rcx, 0
 18463 0000D263 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0011
 18464 0000D265 4C8B02                  	mov r8, qword [rdx]
 18465 0000D268 4C8942F8                	mov qword [rdx - 8], r8
 18466 0000D26C 4883C208                	add rdx, 8
 18467 0000D270 48FFC9                  	dec rcx
 18468 0000D273 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0011
 18469                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0011:
 18470 0000D275 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 18471 0000D27D 4883EC08                	sub rsp, 8
 18472 0000D281 E984000000              	jmp .L_lambda_opt_stack_adjusted_0011
 18473                                  .L_lambda_opt_arity_check_more_0011:
 18474 0000D286 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 18475 0000D28B 4D89C4                  	mov r12, r8
 18476 0000D28E 4C89C1                  	mov rcx, r8
 18477 0000D291 4D8D5002                	lea r10, [r8 + 2] 
 18478 0000D295 4883E901                	sub rcx, 1
 18479 0000D299 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 18480 0000D29E 49B9-                   	mov r9, sob_nil
 18480 0000D2A0 [0100000000000000] 
 18481                                  .L_lambda_opt_create_list_of_opt_params_0011:
 18482 0000D2A8 4883F900                	cmp rcx, 0
 18483 0000D2AC 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0011
 18484 0000D2AE BF11000000              	mov rdi, 17
 18485 0000D2B3 E83DA30000              	call malloc
 18486 0000D2B8 C60021                  	mov byte [rax], T_pair
 18487 0000D2BB 498B1B                  	mov rbx, qword [r11]
 18488 0000D2BE 48895801                	mov qword [rax +1], rbx
 18489 0000D2C2 4C894809                	mov qword [rax + 1 + 8], r9
 18490 0000D2C6 4989C1                  	mov r9, rax
 18491 0000D2C9 48FFC9                  	dec rcx
 18492 0000D2CC 4983EB08                	sub r11, 8
 18493 0000D2D0 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0011
 18494                                  .L_lambda_opt_create_list_of_opt_params_end_0011:
 18495 0000D2D2 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 18496 0000D2D7 4D8908                  	mov qword [r8], r9
 18497 0000D2DA 4E8D14D500000000        	lea r10, [8 * r10]
 18498 0000D2E2 4901E2                  	add r10, rsp
 18499 0000D2E5 B905000000              	mov rcx, 4 + 1
 18500                                  .L_lambda_opt_stack_shrink_loop_0011:
 18501 0000D2EA 4883F900                	cmp rcx, 0
 18502 0000D2EE 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0011
 18503 0000D2F0 4D8B18                  	mov r11, qword [r8]
 18504 0000D2F3 4D891A                  	mov qword [r10], r11
 18505 0000D2F6 4983E808                	sub r8, 8
 18506 0000D2FA 4983EA08                	sub r10, 8
 18507 0000D2FE 48FFC9                  	dec rcx
 18508 0000D301 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18509                                  .L_lambda_opt_stack_shrink_loop_exit_0011:
 18510 0000D303 4983C208                	add r10, 8
 18511 0000D307 4C89D4                  	mov rsp, r10
 18512                                  .L_lambda_opt_stack_adjusted_0011:;continue with the code, the stack is ok
 18513 0000D30A 48C744241002000000      	mov qword [rsp + 8*2], 2
 18514 0000D313 C8000000                	enter 0, 0
 18515                                  	; preparing a tail-call
 18516 0000D317 488B4528                	mov rax, PARAM(1)	; param strs
 18517 0000D31B 50                      	push rax
 18518 0000D31C 488B4520                	mov rax, PARAM(0)	; param str
 18519 0000D320 50                      	push rax
 18520 0000D321 6A02                    	push 2	; arg count
 18521 0000D323 488B4510                	mov rax, ENV
 18522 0000D327 488B00                  	mov rax, qword [rax + 8 * 0]
 18523 0000D32A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18524 0000D32D 488B00                  	mov rax, qword [rax]
 18525 0000D330 803804                  	cmp byte [rax], T_closure
 18526 0000D333 0F8513A20000            	jne L_error_non_closure
 18527 0000D339 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18528 0000D33C FF7508                  	push qword [rbp + 8 * 1]
 18529                                   ; old ret addr
 18530 0000D33F FF7500                  	push qword [rbp]
 18531                                   ; restore the old rbp
 18532 0000D342 BB02000000              	mov rbx, 2
 18533 0000D347 4883C303                	add rbx, 3
 18534 0000D34B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18535 0000D34F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18536 0000D354 4C8D4DF8                	lea r9, [rbp - 8]
 18537 0000D358 B906000000              	mov rcx, 6
 18538                                  .L_tc_recycle_frame_loop_00a3:
 18539 0000D35D 4883F900                	cmp rcx, 0
 18540 0000D361 7413                    	je .L_tc_recycle_frame_done_00a3
 18541 0000D363 4D8B11                  	mov r10, qword [r9]
 18542 0000D366 4D8910                  	mov qword [r8], r10
 18543 0000D369 4983E808                	sub r8, 8
 18544 0000D36D 4983E908                	sub r9, 8
 18545 0000D371 48FFC9                  	dec rcx
 18546 0000D374 EBE7                    	jmp .L_tc_recycle_frame_loop_00a3
 18547                                  .L_tc_recycle_frame_done_00a3:
 18548 0000D376 498D6008                	lea rsp, [r8 + 8]
 18549 0000D37A 5D                      	pop rbp ; restore the old rbp
 18550 0000D37B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18551 0000D37E C9                      	leave
 18552 0000D37F C22000                  	ret 8 * (2 + 2)
 18553                                  .L_lambda_opt_end_0011:	; new closure is in rax
 18554 0000D382 C9                      	leave
 18555 0000D383 C21800                  	ret AND_KILL_FRAME(1)
 18556                                  .L_lambda_simple_end_0069:	; new closure is in rax
 18557 0000D386 803804                  	cmp byte [rax], T_closure
 18558 0000D389 0F85BDA10000            	jne L_error_non_closure
 18559 0000D38F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18560 0000D392 FF7508                  	push qword [rbp + 8 * 1]
 18561                                   ; old ret addr
 18562 0000D395 FF7500                  	push qword [rbp]
 18563                                   ; restore the old rbp
 18564 0000D398 BB01000000              	mov rbx, 1
 18565 0000D39D 4883C303                	add rbx, 3
 18566 0000D3A1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18567 0000D3A5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18568 0000D3AA 4C8D4DF8                	lea r9, [rbp - 8]
 18569 0000D3AE B905000000              	mov rcx, 5
 18570                                  .L_tc_recycle_frame_loop_00a1:
 18571 0000D3B3 4883F900                	cmp rcx, 0
 18572 0000D3B7 7413                    	je .L_tc_recycle_frame_done_00a1
 18573 0000D3B9 4D8B11                  	mov r10, qword [r9]
 18574 0000D3BC 4D8910                  	mov qword [r8], r10
 18575 0000D3BF 4983E808                	sub r8, 8
 18576 0000D3C3 4983E908                	sub r9, 8
 18577 0000D3C7 48FFC9                  	dec rcx
 18578 0000D3CA EBE7                    	jmp .L_tc_recycle_frame_loop_00a1
 18579                                  .L_tc_recycle_frame_done_00a1:
 18580 0000D3CC 498D6008                	lea rsp, [r8 + 8]
 18581 0000D3D0 5D                      	pop rbp ; restore the old rbp
 18582 0000D3D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18583 0000D3D4 C9                      	leave
 18584 0000D3D5 C21800                  	ret AND_KILL_FRAME(1)
 18585                                  .L_lambda_simple_end_0068:	; new closure is in rax
 18586 0000D3D8 803804                  	cmp byte [rax], T_closure
 18587 0000D3DB 0F856BA10000            	jne L_error_non_closure
 18588 0000D3E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18589 0000D3E4 FF7508                  	push qword [rbp + 8 * 1]
 18590                                   ; old ret addr
 18591 0000D3E7 FF7500                  	push qword [rbp]
 18592                                   ; restore the old rbp
 18593 0000D3EA BB01000000              	mov rbx, 1
 18594 0000D3EF 4883C303                	add rbx, 3
 18595 0000D3F3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18596 0000D3F7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18597 0000D3FC 4C8D4DF8                	lea r9, [rbp - 8]
 18598 0000D400 B905000000              	mov rcx, 5
 18599                                  .L_tc_recycle_frame_loop_009d:
 18600 0000D405 4883F900                	cmp rcx, 0
 18601 0000D409 7413                    	je .L_tc_recycle_frame_done_009d
 18602 0000D40B 4D8B11                  	mov r10, qword [r9]
 18603 0000D40E 4D8910                  	mov qword [r8], r10
 18604 0000D411 4983E808                	sub r8, 8
 18605 0000D415 4983E908                	sub r9, 8
 18606 0000D419 48FFC9                  	dec rcx
 18607 0000D41C EBE7                    	jmp .L_tc_recycle_frame_loop_009d
 18608                                  .L_tc_recycle_frame_done_009d:
 18609 0000D41E 498D6008                	lea rsp, [r8 + 8]
 18610 0000D422 5D                      	pop rbp ; restore the old rbp
 18611 0000D423 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18612 0000D426 C9                      	leave
 18613 0000D427 C21800                  	ret AND_KILL_FRAME(1)
 18614                                  .L_lambda_simple_end_0064:	; new closure is in rax
 18615 0000D42A 803804                  	cmp byte [rax], T_closure
 18616 0000D42D 0F8519A10000            	jne L_error_non_closure
 18617 0000D433 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18618 0000D436 FF7508                  	push qword [rbp + 8 * 1]
 18619                                   ; old ret addr
 18620 0000D439 FF7500                  	push qword [rbp]
 18621                                   ; restore the old rbp
 18622 0000D43C BB01000000              	mov rbx, 1
 18623 0000D441 4883C303                	add rbx, 3
 18624 0000D445 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18625 0000D449 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18626 0000D44E 4C8D4DF8                	lea r9, [rbp - 8]
 18627 0000D452 B905000000              	mov rcx, 5
 18628                                  .L_tc_recycle_frame_loop_009b:
 18629 0000D457 4883F900                	cmp rcx, 0
 18630 0000D45B 7413                    	je .L_tc_recycle_frame_done_009b
 18631 0000D45D 4D8B11                  	mov r10, qword [r9]
 18632 0000D460 4D8910                  	mov qword [r8], r10
 18633 0000D463 4983E808                	sub r8, 8
 18634 0000D467 4983E908                	sub r9, 8
 18635 0000D46B 48FFC9                  	dec rcx
 18636 0000D46E EBE7                    	jmp .L_tc_recycle_frame_loop_009b
 18637                                  .L_tc_recycle_frame_done_009b:
 18638 0000D470 498D6008                	lea rsp, [r8 + 8]
 18639 0000D474 5D                      	pop rbp ; restore the old rbp
 18640 0000D475 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18641 0000D478 C9                      	leave
 18642 0000D479 C22000                  	ret AND_KILL_FRAME(2)
 18643                                  .L_lambda_simple_end_0063:	; new closure is in rax
 18644 0000D47C 50                      	push rax
 18645 0000D47D 6A01                    	push 1	; arg count
 18646 0000D47F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18647 0000D484 E86CA10000              	call malloc
 18648 0000D489 50                      	push rax
 18649 0000D48A BF00000000              	mov rdi, 8 * 0	; new rib
 18650 0000D48F E861A10000              	call malloc
 18651 0000D494 50                      	push rax
 18652 0000D495 BF08000000              	mov rdi, 8 * 1	; extended env
 18653 0000D49A E856A10000              	call malloc
 18654 0000D49F 488B7D10                	mov rdi, ENV
 18655 0000D4A3 BE00000000              	mov rsi, 0
 18656 0000D4A8 BA01000000              	mov rdx, 1
 18657                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 18658 0000D4AD 4883FE00                	cmp rsi, 0
 18659 0000D4B1 7410                    	je .L_lambda_simple_env_end_006b
 18660 0000D4B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18661 0000D4B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18662 0000D4BB 48FFC6                  	inc rsi
 18663 0000D4BE 48FFC2                  	inc rdx
 18664 0000D4C1 EBEA                    	jmp .L_lambda_simple_env_loop_006b
 18665                                  .L_lambda_simple_env_end_006b:
 18666 0000D4C3 5B                      	pop rbx
 18667 0000D4C4 BE00000000              	mov rsi, 0
 18668                                  .L_lambda_simple_params_loop_006b:	; copy params
 18669 0000D4C9 4883FE00                	cmp rsi, 0
 18670 0000D4CD 740E                    	je .L_lambda_simple_params_end_006b
 18671 0000D4CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18672 0000D4D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18673 0000D4D8 48FFC6                  	inc rsi
 18674 0000D4DB EBEC                    	jmp .L_lambda_simple_params_loop_006b
 18675                                  .L_lambda_simple_params_end_006b:
 18676 0000D4DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18677 0000D4E0 4889C3                  	mov rbx, rax
 18678 0000D4E3 58                      	pop rax
 18679 0000D4E4 C60004                  	mov byte [rax], T_closure
 18680 0000D4E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18681 0000D4EB 48C74009[F8D40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 18682 0000D4F3 E947010000              	jmp .L_lambda_simple_end_006b
 18683                                  .L_lambda_simple_code_006b:	; lambda-simple body
 18684 0000D4F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18685 0000D4FE 740B                    	je .L_lambda_simple_arity_check_ok_006b
 18686 0000D500 FF742410                	push qword [rsp + 8 * 2]
 18687 0000D504 6A01                    	push 1
 18688 0000D506 E9A3A00000              	jmp L_error_incorrect_arity_simple
 18689                                  .L_lambda_simple_arity_check_ok_006b:
 18690 0000D50B C8000000                	enter 0, 0
 18691                                  	; preparing a non-tail-call
 18692 0000D50F 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18693 0000D517 803805                  	cmp byte [rax], T_undefined
 18694 0000D51A 0F84A89F0000            	je L_error_fvar_undefined
 18695 0000D520 50                      	push rax
 18696 0000D521 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 18697 0000D529 803805                  	cmp byte [rax], T_undefined
 18698 0000D52C 0F84969F0000            	je L_error_fvar_undefined
 18699 0000D532 50                      	push rax
 18700 0000D533 6A02                    	push 2	; arg count
 18701 0000D535 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18702 0000D539 803804                  	cmp byte [rax], T_closure
 18703 0000D53C 0F850AA00000            	jne L_error_non_closure
 18704 0000D542 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18705 0000D545 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18706 0000D548 48890425[AB160000]      	mov qword [free_var_134], rax
 18707 0000D550 48B8-                   	mov rax, sob_void
 18707 0000D552 [0000000000000000] 
 18708                                  
 18709                                  	; preparing a non-tail-call
 18710 0000D55A 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18711 0000D562 803805                  	cmp byte [rax], T_undefined
 18712 0000D565 0F845D9F0000            	je L_error_fvar_undefined
 18713 0000D56B 50                      	push rax
 18714 0000D56C 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 18715 0000D574 803805                  	cmp byte [rax], T_undefined
 18716 0000D577 0F844B9F0000            	je L_error_fvar_undefined
 18717 0000D57D 50                      	push rax
 18718 0000D57E 6A02                    	push 2	; arg count
 18719 0000D580 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18720 0000D584 803804                  	cmp byte [rax], T_closure
 18721 0000D587 0F85BF9F0000            	jne L_error_non_closure
 18722 0000D58D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18723 0000D590 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18724 0000D593 48890425[DF150000]      	mov qword [free_var_122], rax
 18725 0000D59B 48B8-                   	mov rax, sob_void
 18725 0000D59D [0000000000000000] 
 18726                                  
 18727                                  	; preparing a non-tail-call
 18728 0000D5A5 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18729 0000D5AD 803805                  	cmp byte [rax], T_undefined
 18730 0000D5B0 0F84129F0000            	je L_error_fvar_undefined
 18731 0000D5B6 50                      	push rax
 18732 0000D5B7 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 18733 0000D5BF 803805                  	cmp byte [rax], T_undefined
 18734 0000D5C2 0F84009F0000            	je L_error_fvar_undefined
 18735 0000D5C8 50                      	push rax
 18736 0000D5C9 6A02                    	push 2	; arg count
 18737 0000D5CB 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18738 0000D5CF 803804                  	cmp byte [rax], T_closure
 18739 0000D5D2 0F85749F0000            	jne L_error_non_closure
 18740 0000D5D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18741 0000D5DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18742 0000D5DE 48890425[DE160000]      	mov qword [free_var_137], rax
 18743 0000D5E6 48B8-                   	mov rax, sob_void
 18743 0000D5E8 [0000000000000000] 
 18744                                  
 18745                                  	; preparing a non-tail-call
 18746 0000D5F0 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18747 0000D5F8 803805                  	cmp byte [rax], T_undefined
 18748 0000D5FB 0F84C79E0000            	je L_error_fvar_undefined
 18749 0000D601 50                      	push rax
 18750 0000D602 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 18751 0000D60A 803805                  	cmp byte [rax], T_undefined
 18752 0000D60D 0F84B59E0000            	je L_error_fvar_undefined
 18753 0000D613 50                      	push rax
 18754 0000D614 6A02                    	push 2	; arg count
 18755 0000D616 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18756 0000D61A 803804                  	cmp byte [rax], T_closure
 18757 0000D61D 0F85299F0000            	jne L_error_non_closure
 18758 0000D623 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18759 0000D626 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18760 0000D629 48890425[12160000]      	mov qword [free_var_125], rax
 18761 0000D631 48B8-                   	mov rax, sob_void
 18761 0000D633 [0000000000000000] 
 18762 0000D63B C9                      	leave
 18763 0000D63C C21800                  	ret AND_KILL_FRAME(1)
 18764                                  .L_lambda_simple_end_006b:	; new closure is in rax
 18765 0000D63F 803804                  	cmp byte [rax], T_closure
 18766 0000D642 0F85049F0000            	jne L_error_non_closure
 18767 0000D648 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18768 0000D64B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18769                                  
 18770 0000D64E 4889C7                  	mov rdi, rax
 18771 0000D651 E8F4A10000              	call print_sexpr_if_not_void
 18772                                  	; preparing a non-tail-call
 18773 0000D656 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18774 0000D65B E8959F0000              	call malloc
 18775 0000D660 50                      	push rax
 18776 0000D661 BF00000000              	mov rdi, 8 * 0	; new rib
 18777 0000D666 E88A9F0000              	call malloc
 18778 0000D66B 50                      	push rax
 18779 0000D66C BF08000000              	mov rdi, 8 * 1	; extended env
 18780 0000D671 E87F9F0000              	call malloc
 18781 0000D676 488B7D10                	mov rdi, ENV
 18782 0000D67A BE00000000              	mov rsi, 0
 18783 0000D67F BA01000000              	mov rdx, 1
 18784                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 18785 0000D684 4883FE00                	cmp rsi, 0
 18786 0000D688 7410                    	je .L_lambda_simple_env_end_006c
 18787 0000D68A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18788 0000D68E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18789 0000D692 48FFC6                  	inc rsi
 18790 0000D695 48FFC2                  	inc rdx
 18791 0000D698 EBEA                    	jmp .L_lambda_simple_env_loop_006c
 18792                                  .L_lambda_simple_env_end_006c:
 18793 0000D69A 5B                      	pop rbx
 18794 0000D69B BE00000000              	mov rsi, 0
 18795                                  .L_lambda_simple_params_loop_006c:	; copy params
 18796 0000D6A0 4883FE00                	cmp rsi, 0
 18797 0000D6A4 740E                    	je .L_lambda_simple_params_end_006c
 18798 0000D6A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18799 0000D6AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18800 0000D6AF 48FFC6                  	inc rsi
 18801 0000D6B2 EBEC                    	jmp .L_lambda_simple_params_loop_006c
 18802                                  .L_lambda_simple_params_end_006c:
 18803 0000D6B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18804 0000D6B7 4889C3                  	mov rbx, rax
 18805 0000D6BA 58                      	pop rax
 18806 0000D6BB C60004                  	mov byte [rax], T_closure
 18807 0000D6BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18808 0000D6C2 48C74009[CFD60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 18809 0000D6CA E9C40C0000              	jmp .L_lambda_simple_end_006c
 18810                                  .L_lambda_simple_code_006c:	; lambda-simple body
 18811 0000D6CF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18812 0000D6D5 740B                    	je .L_lambda_simple_arity_check_ok_006c
 18813 0000D6D7 FF742410                	push qword [rsp + 8 * 2]
 18814 0000D6DB 6A02                    	push 2
 18815 0000D6DD E9CC9E0000              	jmp L_error_incorrect_arity_simple
 18816                                  .L_lambda_simple_arity_check_ok_006c:
 18817 0000D6E2 C8000000                	enter 0, 0
 18818                                  	; preparing a tail-call
 18819 0000D6E6 48B8-                   	mov rax, L_constants + 1993
 18819 0000D6E8 [C907000000000000] 
 18820 0000D6F0 50                      	push rax
 18821 0000D6F1 6A01                    	push 1	; arg count
 18822 0000D6F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18823 0000D6F8 E8F89E0000              	call malloc
 18824 0000D6FD 50                      	push rax
 18825 0000D6FE BF10000000              	mov rdi, 8 * 2	; new rib
 18826 0000D703 E8ED9E0000              	call malloc
 18827 0000D708 50                      	push rax
 18828 0000D709 BF10000000              	mov rdi, 8 * 2	; extended env
 18829 0000D70E E8E29E0000              	call malloc
 18830 0000D713 488B7D10                	mov rdi, ENV
 18831 0000D717 BE00000000              	mov rsi, 0
 18832 0000D71C BA01000000              	mov rdx, 1
 18833                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 18834 0000D721 4883FE01                	cmp rsi, 1
 18835 0000D725 7410                    	je .L_lambda_simple_env_end_006d
 18836 0000D727 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18837 0000D72B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18838 0000D72F 48FFC6                  	inc rsi
 18839 0000D732 48FFC2                  	inc rdx
 18840 0000D735 EBEA                    	jmp .L_lambda_simple_env_loop_006d
 18841                                  .L_lambda_simple_env_end_006d:
 18842 0000D737 5B                      	pop rbx
 18843 0000D738 BE00000000              	mov rsi, 0
 18844                                  .L_lambda_simple_params_loop_006d:	; copy params
 18845 0000D73D 4883FE02                	cmp rsi, 2
 18846 0000D741 740E                    	je .L_lambda_simple_params_end_006d
 18847 0000D743 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18848 0000D748 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18849 0000D74C 48FFC6                  	inc rsi
 18850 0000D74F EBEC                    	jmp .L_lambda_simple_params_loop_006d
 18851                                  .L_lambda_simple_params_end_006d:
 18852 0000D751 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18853 0000D754 4889C3                  	mov rbx, rax
 18854 0000D757 58                      	pop rax
 18855 0000D758 C60004                  	mov byte [rax], T_closure
 18856 0000D75B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18857 0000D75F 48C74009[6CD70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 18858 0000D767 E9D50B0000              	jmp .L_lambda_simple_end_006d
 18859                                  .L_lambda_simple_code_006d:	; lambda-simple body
 18860 0000D76C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18861 0000D772 740B                    	je .L_lambda_simple_arity_check_ok_006d
 18862 0000D774 FF742410                	push qword [rsp + 8 * 2]
 18863 0000D778 6A01                    	push 1
 18864 0000D77A E92F9E0000              	jmp L_error_incorrect_arity_simple
 18865                                  .L_lambda_simple_arity_check_ok_006d:
 18866 0000D77F C8000000                	enter 0, 0
 18867 0000D783 BF08000000              	mov rdi, 8*1
 18868 0000D788 E8689E0000              	call malloc
 18869 0000D78D 488B5D20                	mov rbx, PARAM(0)
 18870 0000D791 488918                  	mov qword [rax], rbx
 18871 0000D794 48894520                	mov PARAM(0), rax
 18872 0000D798 48B8-                   	mov rax, sob_void
 18872 0000D79A [0000000000000000] 
 18873                                  
 18874 0000D7A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18875 0000D7A7 E8499E0000              	call malloc
 18876 0000D7AC 50                      	push rax
 18877 0000D7AD BF08000000              	mov rdi, 8 * 1	; new rib
 18878 0000D7B2 E83E9E0000              	call malloc
 18879 0000D7B7 50                      	push rax
 18880 0000D7B8 BF18000000              	mov rdi, 8 * 3	; extended env
 18881 0000D7BD E8339E0000              	call malloc
 18882 0000D7C2 488B7D10                	mov rdi, ENV
 18883 0000D7C6 BE00000000              	mov rsi, 0
 18884 0000D7CB BA01000000              	mov rdx, 1
 18885                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 18886 0000D7D0 4883FE02                	cmp rsi, 2
 18887 0000D7D4 7410                    	je .L_lambda_simple_env_end_006e
 18888 0000D7D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18889 0000D7DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18890 0000D7DE 48FFC6                  	inc rsi
 18891 0000D7E1 48FFC2                  	inc rdx
 18892 0000D7E4 EBEA                    	jmp .L_lambda_simple_env_loop_006e
 18893                                  .L_lambda_simple_env_end_006e:
 18894 0000D7E6 5B                      	pop rbx
 18895 0000D7E7 BE00000000              	mov rsi, 0
 18896                                  .L_lambda_simple_params_loop_006e:	; copy params
 18897 0000D7EC 4883FE01                	cmp rsi, 1
 18898 0000D7F0 740E                    	je .L_lambda_simple_params_end_006e
 18899 0000D7F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18900 0000D7F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18901 0000D7FB 48FFC6                  	inc rsi
 18902 0000D7FE EBEC                    	jmp .L_lambda_simple_params_loop_006e
 18903                                  .L_lambda_simple_params_end_006e:
 18904 0000D800 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18905 0000D803 4889C3                  	mov rbx, rax
 18906 0000D806 58                      	pop rax
 18907 0000D807 C60004                  	mov byte [rax], T_closure
 18908 0000D80A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18909 0000D80E 48C74009[1BD80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 18910 0000D816 E94C020000              	jmp .L_lambda_simple_end_006e
 18911                                  .L_lambda_simple_code_006e:	; lambda-simple body
 18912 0000D81B 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18913 0000D821 740B                    	je .L_lambda_simple_arity_check_ok_006e
 18914 0000D823 FF742410                	push qword [rsp + 8 * 2]
 18915 0000D827 6A05                    	push 5
 18916 0000D829 E9809D0000              	jmp L_error_incorrect_arity_simple
 18917                                  .L_lambda_simple_arity_check_ok_006e:
 18918 0000D82E C8000000                	enter 0, 0
 18919                                  	; preparing a non-tail-call
 18920 0000D832 488B4530                	mov rax, PARAM(2)	; param len1
 18921 0000D836 50                      	push rax
 18922 0000D837 488B4520                	mov rax, PARAM(0)	; param i
 18923 0000D83B 50                      	push rax
 18924 0000D83C 6A02                    	push 2	; arg count
 18925 0000D83E 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 18926 0000D846 803805                  	cmp byte [rax], T_undefined
 18927 0000D849 0F84799C0000            	je L_error_fvar_undefined
 18928 0000D84F 803804                  	cmp byte [rax], T_closure
 18929 0000D852 0F85F49C0000            	jne L_error_non_closure
 18930 0000D858 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18931 0000D85B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18932 0000D85E 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 18933 0000D864 0F85F9010000            	jne .L_or_end_000a; if its not false (true) then we need to return it and not the last element
 18934                                  	; preparing a non-tail-call
 18935                                  	; preparing a non-tail-call
 18936 0000D86A 488B4520                	mov rax, PARAM(0)	; param i
 18937 0000D86E 50                      	push rax
 18938 0000D86F 488B4538                	mov rax, PARAM(3)	; param str2
 18939 0000D873 50                      	push rax
 18940 0000D874 6A02                    	push 2	; arg count
 18941 0000D876 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18942 0000D87E 803805                  	cmp byte [rax], T_undefined
 18943 0000D881 0F84419C0000            	je L_error_fvar_undefined
 18944 0000D887 803804                  	cmp byte [rax], T_closure
 18945 0000D88A 0F85BC9C0000            	jne L_error_non_closure
 18946 0000D890 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18947 0000D893 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18948 0000D896 50                      	push rax
 18949                                  	; preparing a non-tail-call
 18950 0000D897 488B4520                	mov rax, PARAM(0)	; param i
 18951 0000D89B 50                      	push rax
 18952 0000D89C 488B4528                	mov rax, PARAM(1)	; param str1
 18953 0000D8A0 50                      	push rax
 18954 0000D8A1 6A02                    	push 2	; arg count
 18955 0000D8A3 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18956 0000D8AB 803805                  	cmp byte [rax], T_undefined
 18957 0000D8AE 0F84149C0000            	je L_error_fvar_undefined
 18958 0000D8B4 803804                  	cmp byte [rax], T_closure
 18959 0000D8B7 0F858F9C0000            	jne L_error_non_closure
 18960 0000D8BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18961 0000D8C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18962 0000D8C3 50                      	push rax
 18963 0000D8C4 6A02                    	push 2	; arg count
 18964 0000D8C6 488B4510                	mov rax, ENV
 18965 0000D8CA 488B4008                	mov rax, qword [rax + 8 * 1]
 18966 0000D8CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18967 0000D8D1 803804                  	cmp byte [rax], T_closure
 18968 0000D8D4 0F85729C0000            	jne L_error_non_closure
 18969 0000D8DA FF7001                  	push SOB_CLOSURE_ENV(rax)
 18970 0000D8DD FF5009                  	call SOB_CLOSURE_CODE(rax)
 18971 0000D8E0 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 18972 0000D8E6 0F8577010000            	jne .L_or_end_000a; if its not false (true) then we need to return it and not the last element
 18973                                  	; preparing a non-tail-call
 18974 0000D8EC 488B4530                	mov rax, PARAM(2)	; param len1
 18975 0000D8F0 50                      	push rax
 18976 0000D8F1 488B4520                	mov rax, PARAM(0)	; param i
 18977 0000D8F5 50                      	push rax
 18978 0000D8F6 6A02                    	push 2	; arg count
 18979 0000D8F8 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 18980 0000D900 803805                  	cmp byte [rax], T_undefined
 18981 0000D903 0F84BF9B0000            	je L_error_fvar_undefined
 18982 0000D909 803804                  	cmp byte [rax], T_closure
 18983 0000D90C 0F853A9C0000            	jne L_error_non_closure
 18984 0000D912 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18985 0000D915 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18986 0000D918 483D[02000000]          	cmp rax, sob_boolean_false
 18987 0000D91E 0F8435010000            	je .L_if_else_0059
 18988                                  	; preparing a non-tail-call
 18989                                  	; preparing a non-tail-call
 18990 0000D924 488B4520                	mov rax, PARAM(0)	; param i
 18991 0000D928 50                      	push rax
 18992 0000D929 488B4538                	mov rax, PARAM(3)	; param str2
 18993 0000D92D 50                      	push rax
 18994 0000D92E 6A02                    	push 2	; arg count
 18995 0000D930 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18996 0000D938 803805                  	cmp byte [rax], T_undefined
 18997 0000D93B 0F84879B0000            	je L_error_fvar_undefined
 18998 0000D941 803804                  	cmp byte [rax], T_closure
 18999 0000D944 0F85029C0000            	jne L_error_non_closure
 19000 0000D94A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19001 0000D94D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19002 0000D950 50                      	push rax
 19003                                  	; preparing a non-tail-call
 19004 0000D951 488B4520                	mov rax, PARAM(0)	; param i
 19005 0000D955 50                      	push rax
 19006 0000D956 488B4528                	mov rax, PARAM(1)	; param str1
 19007 0000D95A 50                      	push rax
 19008 0000D95B 6A02                    	push 2	; arg count
 19009 0000D95D 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19010 0000D965 803805                  	cmp byte [rax], T_undefined
 19011 0000D968 0F845A9B0000            	je L_error_fvar_undefined
 19012 0000D96E 803804                  	cmp byte [rax], T_closure
 19013 0000D971 0F85D59B0000            	jne L_error_non_closure
 19014 0000D977 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19015 0000D97A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19016 0000D97D 50                      	push rax
 19017 0000D97E 6A02                    	push 2	; arg count
 19018 0000D980 488B4510                	mov rax, ENV
 19019 0000D984 488B4008                	mov rax, qword [rax + 8 * 1]
 19020 0000D988 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19021 0000D98C 803804                  	cmp byte [rax], T_closure
 19022 0000D98F 0F85B79B0000            	jne L_error_non_closure
 19023 0000D995 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19024 0000D998 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19025 0000D99B 483D[02000000]          	cmp rax, sob_boolean_false
 19026 0000D9A1 0F84A6000000            	je .L_if_else_0058
 19027                                  	; preparing a tail-call
 19028 0000D9A7 488B4540                	mov rax, PARAM(4)	; param len2
 19029 0000D9AB 50                      	push rax
 19030 0000D9AC 488B4538                	mov rax, PARAM(3)	; param str2
 19031 0000D9B0 50                      	push rax
 19032 0000D9B1 488B4530                	mov rax, PARAM(2)	; param len1
 19033 0000D9B5 50                      	push rax
 19034 0000D9B6 488B4528                	mov rax, PARAM(1)	; param str1
 19035 0000D9BA 50                      	push rax
 19036                                  	; preparing a non-tail-call
 19037 0000D9BB 48B8-                   	mov rax, L_constants + 2270
 19037 0000D9BD [DE08000000000000] 
 19038 0000D9C5 50                      	push rax
 19039 0000D9C6 488B4520                	mov rax, PARAM(0)	; param i
 19040 0000D9CA 50                      	push rax
 19041 0000D9CB 6A02                    	push 2	; arg count
 19042 0000D9CD 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 19043 0000D9D5 803805                  	cmp byte [rax], T_undefined
 19044 0000D9D8 0F84EA9A0000            	je L_error_fvar_undefined
 19045 0000D9DE 803804                  	cmp byte [rax], T_closure
 19046 0000D9E1 0F85659B0000            	jne L_error_non_closure
 19047 0000D9E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19048 0000D9EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 19049 0000D9ED 50                      	push rax
 19050 0000D9EE 6A05                    	push 5	; arg count
 19051 0000D9F0 488B4510                	mov rax, ENV
 19052 0000D9F4 488B00                  	mov rax, qword [rax + 8 * 0]
 19053 0000D9F7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19054 0000D9FA 488B00                  	mov rax, qword [rax]
 19055 0000D9FD 803804                  	cmp byte [rax], T_closure
 19056 0000DA00 0F85469B0000            	jne L_error_non_closure
 19057 0000DA06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19058 0000DA09 FF7508                  	push qword [rbp + 8 * 1]
 19059                                   ; old ret addr
 19060 0000DA0C FF7500                  	push qword [rbp]
 19061                                   ; restore the old rbp
 19062 0000DA0F BB05000000              	mov rbx, 5
 19063 0000DA14 4883C303                	add rbx, 3
 19064 0000DA18 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19065 0000DA1C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19066 0000DA21 4C8D4DF8                	lea r9, [rbp - 8]
 19067 0000DA25 B909000000              	mov rcx, 9
 19068                                  .L_tc_recycle_frame_loop_00a5:
 19069 0000DA2A 4883F900                	cmp rcx, 0
 19070 0000DA2E 7413                    	je .L_tc_recycle_frame_done_00a5
 19071 0000DA30 4D8B11                  	mov r10, qword [r9]
 19072 0000DA33 4D8910                  	mov qword [r8], r10
 19073 0000DA36 4983E808                	sub r8, 8
 19074 0000DA3A 4983E908                	sub r9, 8
 19075 0000DA3E 48FFC9                  	dec rcx
 19076 0000DA41 EBE7                    	jmp .L_tc_recycle_frame_loop_00a5
 19077                                  .L_tc_recycle_frame_done_00a5:
 19078 0000DA43 498D6008                	lea rsp, [r8 + 8]
 19079 0000DA47 5D                      	pop rbp ; restore the old rbp
 19080 0000DA48 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19081 0000DA4B EB0A                    	jmp .L_if_end_0058
 19082                                  .L_if_else_0058:
 19083 0000DA4D 48B8-                   	mov rax, L_constants + 2
 19083 0000DA4F [0200000000000000] 
 19084                                  .L_if_end_0058:
 19085 0000DA57 EB0A                    	jmp .L_if_end_0059
 19086                                  .L_if_else_0059:
 19087 0000DA59 48B8-                   	mov rax, L_constants + 2
 19087 0000DA5B [0200000000000000] 
 19088                                  .L_if_end_0059:
 19089                                  .L_or_end_000a:
 19090 0000DA63 C9                      	leave
 19091 0000DA64 C23800                  	ret AND_KILL_FRAME(5)
 19092                                  .L_lambda_simple_end_006e:	; new closure is in rax
 19093 0000DA67 50                      	push rax
 19094 0000DA68 488B4520                	mov rax, PARAM(0)	; param run
 19095 0000DA6C 8F00                    	pop qword [rax]
 19096 0000DA6E 48B8-                   	mov rax, sob_void
 19096 0000DA70 [0000000000000000] 
 19097                                  
 19098                                  	; preparing a tail-call
 19099 0000DA78 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19100 0000DA7D E8739B0000              	call malloc
 19101 0000DA82 50                      	push rax
 19102 0000DA83 BF08000000              	mov rdi, 8 * 1	; new rib
 19103 0000DA88 E8689B0000              	call malloc
 19104 0000DA8D 50                      	push rax
 19105 0000DA8E BF18000000              	mov rdi, 8 * 3	; extended env
 19106 0000DA93 E85D9B0000              	call malloc
 19107 0000DA98 488B7D10                	mov rdi, ENV
 19108 0000DA9C BE00000000              	mov rsi, 0
 19109 0000DAA1 BA01000000              	mov rdx, 1
 19110                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 19111 0000DAA6 4883FE02                	cmp rsi, 2
 19112 0000DAAA 7410                    	je .L_lambda_simple_env_end_006f
 19113 0000DAAC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19114 0000DAB0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19115 0000DAB4 48FFC6                  	inc rsi
 19116 0000DAB7 48FFC2                  	inc rdx
 19117 0000DABA EBEA                    	jmp .L_lambda_simple_env_loop_006f
 19118                                  .L_lambda_simple_env_end_006f:
 19119 0000DABC 5B                      	pop rbx
 19120 0000DABD BE00000000              	mov rsi, 0
 19121                                  .L_lambda_simple_params_loop_006f:	; copy params
 19122 0000DAC2 4883FE01                	cmp rsi, 1
 19123 0000DAC6 740E                    	je .L_lambda_simple_params_end_006f
 19124 0000DAC8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19125 0000DACD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19126 0000DAD1 48FFC6                  	inc rsi
 19127 0000DAD4 EBEC                    	jmp .L_lambda_simple_params_loop_006f
 19128                                  .L_lambda_simple_params_end_006f:
 19129 0000DAD6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19130 0000DAD9 4889C3                  	mov rbx, rax
 19131 0000DADC 58                      	pop rax
 19132 0000DADD C60004                  	mov byte [rax], T_closure
 19133 0000DAE0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19134 0000DAE4 48C74009[F1DA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 19135 0000DAEC E9A0020000              	jmp .L_lambda_simple_end_006f
 19136                                  .L_lambda_simple_code_006f:	; lambda-simple body
 19137 0000DAF1 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19138 0000DAF7 740B                    	je .L_lambda_simple_arity_check_ok_006f
 19139 0000DAF9 FF742410                	push qword [rsp + 8 * 2]
 19140 0000DAFD 6A02                    	push 2
 19141 0000DAFF E9AA9A0000              	jmp L_error_incorrect_arity_simple
 19142                                  .L_lambda_simple_arity_check_ok_006f:
 19143 0000DB04 C8000000                	enter 0, 0
 19144                                  	; preparing a tail-call
 19145                                  	; preparing a non-tail-call
 19146 0000DB08 488B4528                	mov rax, PARAM(1)	; param str2
 19147 0000DB0C 50                      	push rax
 19148 0000DB0D 6A01                    	push 1	; arg count
 19149 0000DB0F 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19150 0000DB17 803805                  	cmp byte [rax], T_undefined
 19151 0000DB1A 0F84A8990000            	je L_error_fvar_undefined
 19152 0000DB20 803804                  	cmp byte [rax], T_closure
 19153 0000DB23 0F85239A0000            	jne L_error_non_closure
 19154 0000DB29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19155 0000DB2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19156 0000DB2F 50                      	push rax
 19157                                  	; preparing a non-tail-call
 19158 0000DB30 488B4520                	mov rax, PARAM(0)	; param str1
 19159 0000DB34 50                      	push rax
 19160 0000DB35 6A01                    	push 1	; arg count
 19161 0000DB37 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19162 0000DB3F 803805                  	cmp byte [rax], T_undefined
 19163 0000DB42 0F8480990000            	je L_error_fvar_undefined
 19164 0000DB48 803804                  	cmp byte [rax], T_closure
 19165 0000DB4B 0F85FB990000            	jne L_error_non_closure
 19166 0000DB51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19167 0000DB54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19168 0000DB57 50                      	push rax
 19169 0000DB58 6A02                    	push 2	; arg count
 19170 0000DB5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19171 0000DB5F E8919A0000              	call malloc
 19172 0000DB64 50                      	push rax
 19173 0000DB65 BF10000000              	mov rdi, 8 * 2	; new rib
 19174 0000DB6A E8869A0000              	call malloc
 19175 0000DB6F 50                      	push rax
 19176 0000DB70 BF20000000              	mov rdi, 8 * 4	; extended env
 19177 0000DB75 E87B9A0000              	call malloc
 19178 0000DB7A 488B7D10                	mov rdi, ENV
 19179 0000DB7E BE00000000              	mov rsi, 0
 19180 0000DB83 BA01000000              	mov rdx, 1
 19181                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 19182 0000DB88 4883FE03                	cmp rsi, 3
 19183 0000DB8C 7410                    	je .L_lambda_simple_env_end_0070
 19184 0000DB8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19185 0000DB92 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19186 0000DB96 48FFC6                  	inc rsi
 19187 0000DB99 48FFC2                  	inc rdx
 19188 0000DB9C EBEA                    	jmp .L_lambda_simple_env_loop_0070
 19189                                  .L_lambda_simple_env_end_0070:
 19190 0000DB9E 5B                      	pop rbx
 19191 0000DB9F BE00000000              	mov rsi, 0
 19192                                  .L_lambda_simple_params_loop_0070:	; copy params
 19193 0000DBA4 4883FE02                	cmp rsi, 2
 19194 0000DBA8 740E                    	je .L_lambda_simple_params_end_0070
 19195 0000DBAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19196 0000DBAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19197 0000DBB3 48FFC6                  	inc rsi
 19198 0000DBB6 EBEC                    	jmp .L_lambda_simple_params_loop_0070
 19199                                  .L_lambda_simple_params_end_0070:
 19200 0000DBB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19201 0000DBBB 4889C3                  	mov rbx, rax
 19202 0000DBBE 58                      	pop rax
 19203 0000DBBF C60004                  	mov byte [rax], T_closure
 19204 0000DBC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19205 0000DBC6 48C74009[D3DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 19206 0000DBCE E96C010000              	jmp .L_lambda_simple_end_0070
 19207                                  .L_lambda_simple_code_0070:	; lambda-simple body
 19208 0000DBD3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19209 0000DBD9 740B                    	je .L_lambda_simple_arity_check_ok_0070
 19210 0000DBDB FF742410                	push qword [rsp + 8 * 2]
 19211 0000DBDF 6A02                    	push 2
 19212 0000DBE1 E9C8990000              	jmp L_error_incorrect_arity_simple
 19213                                  .L_lambda_simple_arity_check_ok_0070:
 19214 0000DBE6 C8000000                	enter 0, 0
 19215                                  	; preparing a non-tail-call
 19216 0000DBEA 488B4528                	mov rax, PARAM(1)	; param len2
 19217 0000DBEE 50                      	push rax
 19218 0000DBEF 488B4520                	mov rax, PARAM(0)	; param len1
 19219 0000DBF3 50                      	push rax
 19220 0000DBF4 6A02                    	push 2	; arg count
 19221 0000DBF6 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 19222 0000DBFE 803805                  	cmp byte [rax], T_undefined
 19223 0000DC01 0F84C1980000            	je L_error_fvar_undefined
 19224 0000DC07 803804                  	cmp byte [rax], T_closure
 19225 0000DC0A 0F853C990000            	jne L_error_non_closure
 19226 0000DC10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19227 0000DC13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19228 0000DC16 483D[02000000]          	cmp rax, sob_boolean_false
 19229 0000DC1C 0F848F000000            	je .L_if_else_005a
 19230                                  	; preparing a tail-call
 19231 0000DC22 488B4528                	mov rax, PARAM(1)	; param len2
 19232 0000DC26 50                      	push rax
 19233 0000DC27 488B4510                	mov rax, ENV
 19234 0000DC2B 488B00                  	mov rax, qword [rax + 8 * 0]
 19235 0000DC2E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19236 0000DC32 50                      	push rax
 19237 0000DC33 488B4520                	mov rax, PARAM(0)	; param len1
 19238 0000DC37 50                      	push rax
 19239 0000DC38 488B4510                	mov rax, ENV
 19240 0000DC3C 488B00                  	mov rax, qword [rax + 8 * 0]
 19241 0000DC3F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19242 0000DC42 50                      	push rax
 19243 0000DC43 48B8-                   	mov rax, L_constants + 2135
 19243 0000DC45 [5708000000000000] 
 19244 0000DC4D 50                      	push rax
 19245 0000DC4E 6A05                    	push 5	; arg count
 19246 0000DC50 488B4510                	mov rax, ENV
 19247 0000DC54 488B4008                	mov rax, qword [rax + 8 * 1]
 19248 0000DC58 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19249 0000DC5B 488B00                  	mov rax, qword [rax]
 19250 0000DC5E 803804                  	cmp byte [rax], T_closure
 19251 0000DC61 0F85E5980000            	jne L_error_non_closure
 19252 0000DC67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19253 0000DC6A FF7508                  	push qword [rbp + 8 * 1]
 19254                                   ; old ret addr
 19255 0000DC6D FF7500                  	push qword [rbp]
 19256                                   ; restore the old rbp
 19257 0000DC70 BB05000000              	mov rbx, 5
 19258 0000DC75 4883C303                	add rbx, 3
 19259 0000DC79 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19260 0000DC7D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19261 0000DC82 4C8D4DF8                	lea r9, [rbp - 8]
 19262 0000DC86 B909000000              	mov rcx, 9
 19263                                  .L_tc_recycle_frame_loop_00a8:
 19264 0000DC8B 4883F900                	cmp rcx, 0
 19265 0000DC8F 7413                    	je .L_tc_recycle_frame_done_00a8
 19266 0000DC91 4D8B11                  	mov r10, qword [r9]
 19267 0000DC94 4D8910                  	mov qword [r8], r10
 19268 0000DC97 4983E808                	sub r8, 8
 19269 0000DC9B 4983E908                	sub r9, 8
 19270 0000DC9F 48FFC9                  	dec rcx
 19271 0000DCA2 EBE7                    	jmp .L_tc_recycle_frame_loop_00a8
 19272                                  .L_tc_recycle_frame_done_00a8:
 19273 0000DCA4 498D6008                	lea rsp, [r8 + 8]
 19274 0000DCA8 5D                      	pop rbp ; restore the old rbp
 19275 0000DCA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19276 0000DCAC E98A000000              	jmp .L_if_end_005a
 19277                                  .L_if_else_005a:
 19278                                  	; preparing a tail-call
 19279 0000DCB1 488B4520                	mov rax, PARAM(0)	; param len1
 19280 0000DCB5 50                      	push rax
 19281 0000DCB6 488B4510                	mov rax, ENV
 19282 0000DCBA 488B00                  	mov rax, qword [rax + 8 * 0]
 19283 0000DCBD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19284 0000DCC0 50                      	push rax
 19285 0000DCC1 488B4528                	mov rax, PARAM(1)	; param len2
 19286 0000DCC5 50                      	push rax
 19287 0000DCC6 488B4510                	mov rax, ENV
 19288 0000DCCA 488B00                  	mov rax, qword [rax + 8 * 0]
 19289 0000DCCD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19290 0000DCD1 50                      	push rax
 19291 0000DCD2 48B8-                   	mov rax, L_constants + 2135
 19291 0000DCD4 [5708000000000000] 
 19292 0000DCDC 50                      	push rax
 19293 0000DCDD 6A05                    	push 5	; arg count
 19294 0000DCDF 488B4510                	mov rax, ENV
 19295 0000DCE3 488B4008                	mov rax, qword [rax + 8 * 1]
 19296 0000DCE7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19297 0000DCEA 488B00                  	mov rax, qword [rax]
 19298 0000DCED 803804                  	cmp byte [rax], T_closure
 19299 0000DCF0 0F8556980000            	jne L_error_non_closure
 19300 0000DCF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19301 0000DCF9 FF7508                  	push qword [rbp + 8 * 1]
 19302                                   ; old ret addr
 19303 0000DCFC FF7500                  	push qword [rbp]
 19304                                   ; restore the old rbp
 19305 0000DCFF BB05000000              	mov rbx, 5
 19306 0000DD04 4883C303                	add rbx, 3
 19307 0000DD08 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19308 0000DD0C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19309 0000DD11 4C8D4DF8                	lea r9, [rbp - 8]
 19310 0000DD15 B909000000              	mov rcx, 9
 19311                                  .L_tc_recycle_frame_loop_00a9:
 19312 0000DD1A 4883F900                	cmp rcx, 0
 19313 0000DD1E 7413                    	je .L_tc_recycle_frame_done_00a9
 19314 0000DD20 4D8B11                  	mov r10, qword [r9]
 19315 0000DD23 4D8910                  	mov qword [r8], r10
 19316 0000DD26 4983E808                	sub r8, 8
 19317 0000DD2A 4983E908                	sub r9, 8
 19318 0000DD2E 48FFC9                  	dec rcx
 19319 0000DD31 EBE7                    	jmp .L_tc_recycle_frame_loop_00a9
 19320                                  .L_tc_recycle_frame_done_00a9:
 19321 0000DD33 498D6008                	lea rsp, [r8 + 8]
 19322 0000DD37 5D                      	pop rbp ; restore the old rbp
 19323 0000DD38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19324                                  .L_if_end_005a:
 19325 0000DD3B C9                      	leave
 19326 0000DD3C C22000                  	ret AND_KILL_FRAME(2)
 19327                                  .L_lambda_simple_end_0070:	; new closure is in rax
 19328 0000DD3F 803804                  	cmp byte [rax], T_closure
 19329 0000DD42 0F8504980000            	jne L_error_non_closure
 19330 0000DD48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19331 0000DD4B FF7508                  	push qword [rbp + 8 * 1]
 19332                                   ; old ret addr
 19333 0000DD4E FF7500                  	push qword [rbp]
 19334                                   ; restore the old rbp
 19335 0000DD51 BB02000000              	mov rbx, 2
 19336 0000DD56 4883C303                	add rbx, 3
 19337 0000DD5A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19338 0000DD5E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19339 0000DD63 4C8D4DF8                	lea r9, [rbp - 8]
 19340 0000DD67 B906000000              	mov rcx, 6
 19341                                  .L_tc_recycle_frame_loop_00a7:
 19342 0000DD6C 4883F900                	cmp rcx, 0
 19343 0000DD70 7413                    	je .L_tc_recycle_frame_done_00a7
 19344 0000DD72 4D8B11                  	mov r10, qword [r9]
 19345 0000DD75 4D8910                  	mov qword [r8], r10
 19346 0000DD78 4983E808                	sub r8, 8
 19347 0000DD7C 4983E908                	sub r9, 8
 19348 0000DD80 48FFC9                  	dec rcx
 19349 0000DD83 EBE7                    	jmp .L_tc_recycle_frame_loop_00a7
 19350                                  .L_tc_recycle_frame_done_00a7:
 19351 0000DD85 498D6008                	lea rsp, [r8 + 8]
 19352 0000DD89 5D                      	pop rbp ; restore the old rbp
 19353 0000DD8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19354 0000DD8D C9                      	leave
 19355 0000DD8E C22000                  	ret AND_KILL_FRAME(2)
 19356                                  .L_lambda_simple_end_006f:	; new closure is in rax
 19357 0000DD91 50                      	push rax
 19358 0000DD92 6A01                    	push 1	; arg count
 19359 0000DD94 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19360 0000DD99 E857980000              	call malloc
 19361 0000DD9E 50                      	push rax
 19362 0000DD9F BF08000000              	mov rdi, 8 * 1	; new rib
 19363 0000DDA4 E84C980000              	call malloc
 19364 0000DDA9 50                      	push rax
 19365 0000DDAA BF18000000              	mov rdi, 8 * 3	; extended env
 19366 0000DDAF E841980000              	call malloc
 19367 0000DDB4 488B7D10                	mov rdi, ENV
 19368 0000DDB8 BE00000000              	mov rsi, 0
 19369 0000DDBD BA01000000              	mov rdx, 1
 19370                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 19371 0000DDC2 4883FE02                	cmp rsi, 2
 19372 0000DDC6 7410                    	je .L_lambda_simple_env_end_0071
 19373 0000DDC8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19374 0000DDCC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19375 0000DDD0 48FFC6                  	inc rsi
 19376 0000DDD3 48FFC2                  	inc rdx
 19377 0000DDD6 EBEA                    	jmp .L_lambda_simple_env_loop_0071
 19378                                  .L_lambda_simple_env_end_0071:
 19379 0000DDD8 5B                      	pop rbx
 19380 0000DDD9 BE00000000              	mov rsi, 0
 19381                                  .L_lambda_simple_params_loop_0071:	; copy params
 19382 0000DDDE 4883FE01                	cmp rsi, 1
 19383 0000DDE2 740E                    	je .L_lambda_simple_params_end_0071
 19384 0000DDE4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19385 0000DDE9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19386 0000DDED 48FFC6                  	inc rsi
 19387 0000DDF0 EBEC                    	jmp .L_lambda_simple_params_loop_0071
 19388                                  .L_lambda_simple_params_end_0071:
 19389 0000DDF2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19390 0000DDF5 4889C3                  	mov rbx, rax
 19391 0000DDF8 58                      	pop rax
 19392 0000DDF9 C60004                  	mov byte [rax], T_closure
 19393 0000DDFC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19394 0000DE00 48C74009[0DDE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 19395 0000DE08 E9E2040000              	jmp .L_lambda_simple_end_0071
 19396                                  .L_lambda_simple_code_0071:	; lambda-simple body
 19397 0000DE0D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19398 0000DE13 740B                    	je .L_lambda_simple_arity_check_ok_0071
 19399 0000DE15 FF742410                	push qword [rsp + 8 * 2]
 19400 0000DE19 6A01                    	push 1
 19401 0000DE1B E98E970000              	jmp L_error_incorrect_arity_simple
 19402                                  .L_lambda_simple_arity_check_ok_0071:
 19403 0000DE20 C8000000                	enter 0, 0
 19404                                  	; preparing a tail-call
 19405 0000DE24 48B8-                   	mov rax, L_constants + 1993
 19405 0000DE26 [C907000000000000] 
 19406 0000DE2E 50                      	push rax
 19407 0000DE2F 6A01                    	push 1	; arg count
 19408 0000DE31 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19409 0000DE36 E8BA970000              	call malloc
 19410 0000DE3B 50                      	push rax
 19411 0000DE3C BF08000000              	mov rdi, 8 * 1	; new rib
 19412 0000DE41 E8AF970000              	call malloc
 19413 0000DE46 50                      	push rax
 19414 0000DE47 BF20000000              	mov rdi, 8 * 4	; extended env
 19415 0000DE4C E8A4970000              	call malloc
 19416 0000DE51 488B7D10                	mov rdi, ENV
 19417 0000DE55 BE00000000              	mov rsi, 0
 19418 0000DE5A BA01000000              	mov rdx, 1
 19419                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 19420 0000DE5F 4883FE03                	cmp rsi, 3
 19421 0000DE63 7410                    	je .L_lambda_simple_env_end_0072
 19422 0000DE65 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19423 0000DE69 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19424 0000DE6D 48FFC6                  	inc rsi
 19425 0000DE70 48FFC2                  	inc rdx
 19426 0000DE73 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 19427                                  .L_lambda_simple_env_end_0072:
 19428 0000DE75 5B                      	pop rbx
 19429 0000DE76 BE00000000              	mov rsi, 0
 19430                                  .L_lambda_simple_params_loop_0072:	; copy params
 19431 0000DE7B 4883FE01                	cmp rsi, 1
 19432 0000DE7F 740E                    	je .L_lambda_simple_params_end_0072
 19433 0000DE81 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19434 0000DE86 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19435 0000DE8A 48FFC6                  	inc rsi
 19436 0000DE8D EBEC                    	jmp .L_lambda_simple_params_loop_0072
 19437                                  .L_lambda_simple_params_end_0072:
 19438 0000DE8F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19439 0000DE92 4889C3                  	mov rbx, rax
 19440 0000DE95 58                      	pop rax
 19441 0000DE96 C60004                  	mov byte [rax], T_closure
 19442 0000DE99 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19443 0000DE9D 48C74009[AADE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 19444 0000DEA5 E9F3030000              	jmp .L_lambda_simple_end_0072
 19445                                  .L_lambda_simple_code_0072:	; lambda-simple body
 19446 0000DEAA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19447 0000DEB0 740B                    	je .L_lambda_simple_arity_check_ok_0072
 19448 0000DEB2 FF742410                	push qword [rsp + 8 * 2]
 19449 0000DEB6 6A01                    	push 1
 19450 0000DEB8 E9F1960000              	jmp L_error_incorrect_arity_simple
 19451                                  .L_lambda_simple_arity_check_ok_0072:
 19452 0000DEBD C8000000                	enter 0, 0
 19453 0000DEC1 BF08000000              	mov rdi, 8*1
 19454 0000DEC6 E82A970000              	call malloc
 19455 0000DECB 488B5D20                	mov rbx, PARAM(0)
 19456 0000DECF 488918                  	mov qword [rax], rbx
 19457 0000DED2 48894520                	mov PARAM(0), rax
 19458 0000DED6 48B8-                   	mov rax, sob_void
 19458 0000DED8 [0000000000000000] 
 19459                                  
 19460 0000DEE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19461 0000DEE5 E80B970000              	call malloc
 19462 0000DEEA 50                      	push rax
 19463 0000DEEB BF08000000              	mov rdi, 8 * 1	; new rib
 19464 0000DEF0 E800970000              	call malloc
 19465 0000DEF5 50                      	push rax
 19466 0000DEF6 BF28000000              	mov rdi, 8 * 5	; extended env
 19467 0000DEFB E8F5960000              	call malloc
 19468 0000DF00 488B7D10                	mov rdi, ENV
 19469 0000DF04 BE00000000              	mov rsi, 0
 19470 0000DF09 BA01000000              	mov rdx, 1
 19471                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 19472 0000DF0E 4883FE04                	cmp rsi, 4
 19473 0000DF12 7410                    	je .L_lambda_simple_env_end_0073
 19474 0000DF14 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19475 0000DF18 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19476 0000DF1C 48FFC6                  	inc rsi
 19477 0000DF1F 48FFC2                  	inc rdx
 19478 0000DF22 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 19479                                  .L_lambda_simple_env_end_0073:
 19480 0000DF24 5B                      	pop rbx
 19481 0000DF25 BE00000000              	mov rsi, 0
 19482                                  .L_lambda_simple_params_loop_0073:	; copy params
 19483 0000DF2A 4883FE01                	cmp rsi, 1
 19484 0000DF2E 740E                    	je .L_lambda_simple_params_end_0073
 19485 0000DF30 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19486 0000DF35 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19487 0000DF39 48FFC6                  	inc rsi
 19488 0000DF3C EBEC                    	jmp .L_lambda_simple_params_loop_0073
 19489                                  .L_lambda_simple_params_end_0073:
 19490 0000DF3E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19491 0000DF41 4889C3                  	mov rbx, rax
 19492 0000DF44 58                      	pop rax
 19493 0000DF45 C60004                  	mov byte [rax], T_closure
 19494 0000DF48 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19495 0000DF4C 48C74009[59DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 19496 0000DF54 E95C010000              	jmp .L_lambda_simple_end_0073
 19497                                  .L_lambda_simple_code_0073:	; lambda-simple body
 19498 0000DF59 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19499 0000DF5F 740B                    	je .L_lambda_simple_arity_check_ok_0073
 19500 0000DF61 FF742410                	push qword [rsp + 8 * 2]
 19501 0000DF65 6A02                    	push 2
 19502 0000DF67 E942960000              	jmp L_error_incorrect_arity_simple
 19503                                  .L_lambda_simple_arity_check_ok_0073:
 19504 0000DF6C C8000000                	enter 0, 0
 19505                                  	; preparing a non-tail-call
 19506 0000DF70 488B4528                	mov rax, PARAM(1)	; param strs
 19507 0000DF74 50                      	push rax
 19508 0000DF75 6A01                    	push 1	; arg count
 19509 0000DF77 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 19510 0000DF7F 803805                  	cmp byte [rax], T_undefined
 19511 0000DF82 0F8440950000            	je L_error_fvar_undefined
 19512 0000DF88 803804                  	cmp byte [rax], T_closure
 19513 0000DF8B 0F85BB950000            	jne L_error_non_closure
 19514 0000DF91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19515 0000DF94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19516 0000DF97 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 19517 0000DF9D 0F850E010000            	jne .L_or_end_000b; if its not false (true) then we need to return it and not the last element
 19518                                  	; preparing a non-tail-call
 19519                                  	; preparing a non-tail-call
 19520 0000DFA3 488B4528                	mov rax, PARAM(1)	; param strs
 19521 0000DFA7 50                      	push rax
 19522 0000DFA8 6A01                    	push 1	; arg count
 19523 0000DFAA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19524 0000DFB2 803805                  	cmp byte [rax], T_undefined
 19525 0000DFB5 0F840D950000            	je L_error_fvar_undefined
 19526 0000DFBB 803804                  	cmp byte [rax], T_closure
 19527 0000DFBE 0F8588950000            	jne L_error_non_closure
 19528 0000DFC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19529 0000DFC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19530 0000DFCA 50                      	push rax
 19531 0000DFCB 488B4520                	mov rax, PARAM(0)	; param str
 19532 0000DFCF 50                      	push rax
 19533 0000DFD0 6A02                    	push 2	; arg count
 19534 0000DFD2 488B4510                	mov rax, ENV
 19535 0000DFD6 488B4008                	mov rax, qword [rax + 8 * 1]
 19536 0000DFDA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 19537 0000DFDD 803804                  	cmp byte [rax], T_closure
 19538 0000DFE0 0F8566950000            	jne L_error_non_closure
 19539 0000DFE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19540 0000DFE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19541 0000DFEC 483D[02000000]          	cmp rax, sob_boolean_false
 19542 0000DFF2 0F84AF000000            	je .L_if_else_005b
 19543                                  	; preparing a tail-call
 19544                                  	; preparing a non-tail-call
 19545 0000DFF8 488B4528                	mov rax, PARAM(1)	; param strs
 19546 0000DFFC 50                      	push rax
 19547 0000DFFD 6A01                    	push 1	; arg count
 19548 0000DFFF 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 19549 0000E007 803805                  	cmp byte [rax], T_undefined
 19550 0000E00A 0F84B8940000            	je L_error_fvar_undefined
 19551 0000E010 803804                  	cmp byte [rax], T_closure
 19552 0000E013 0F8533950000            	jne L_error_non_closure
 19553 0000E019 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19554 0000E01C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19555 0000E01F 50                      	push rax
 19556                                  	; preparing a non-tail-call
 19557 0000E020 488B4528                	mov rax, PARAM(1)	; param strs
 19558 0000E024 50                      	push rax
 19559 0000E025 6A01                    	push 1	; arg count
 19560 0000E027 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19561 0000E02F 803805                  	cmp byte [rax], T_undefined
 19562 0000E032 0F8490940000            	je L_error_fvar_undefined
 19563 0000E038 803804                  	cmp byte [rax], T_closure
 19564 0000E03B 0F850B950000            	jne L_error_non_closure
 19565 0000E041 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19566 0000E044 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19567 0000E047 50                      	push rax
 19568 0000E048 6A02                    	push 2	; arg count
 19569 0000E04A 488B4510                	mov rax, ENV
 19570 0000E04E 488B00                  	mov rax, qword [rax + 8 * 0]
 19571 0000E051 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19572 0000E054 488B00                  	mov rax, qword [rax]
 19573 0000E057 803804                  	cmp byte [rax], T_closure
 19574 0000E05A 0F85EC940000            	jne L_error_non_closure
 19575 0000E060 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19576 0000E063 FF7508                  	push qword [rbp + 8 * 1]
 19577                                   ; old ret addr
 19578 0000E066 FF7500                  	push qword [rbp]
 19579                                   ; restore the old rbp
 19580 0000E069 BB02000000              	mov rbx, 2
 19581 0000E06E 4883C303                	add rbx, 3
 19582 0000E072 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19583 0000E076 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19584 0000E07B 4C8D4DF8                	lea r9, [rbp - 8]
 19585 0000E07F B906000000              	mov rcx, 6
 19586                                  .L_tc_recycle_frame_loop_00ab:
 19587 0000E084 4883F900                	cmp rcx, 0
 19588 0000E088 7413                    	je .L_tc_recycle_frame_done_00ab
 19589 0000E08A 4D8B11                  	mov r10, qword [r9]
 19590 0000E08D 4D8910                  	mov qword [r8], r10
 19591 0000E090 4983E808                	sub r8, 8
 19592 0000E094 4983E908                	sub r9, 8
 19593 0000E098 48FFC9                  	dec rcx
 19594 0000E09B EBE7                    	jmp .L_tc_recycle_frame_loop_00ab
 19595                                  .L_tc_recycle_frame_done_00ab:
 19596 0000E09D 498D6008                	lea rsp, [r8 + 8]
 19597 0000E0A1 5D                      	pop rbp ; restore the old rbp
 19598 0000E0A2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19599 0000E0A5 EB0A                    	jmp .L_if_end_005b
 19600                                  .L_if_else_005b:
 19601 0000E0A7 48B8-                   	mov rax, L_constants + 2
 19601 0000E0A9 [0200000000000000] 
 19602                                  .L_if_end_005b:
 19603                                  .L_or_end_000b:
 19604 0000E0B1 C9                      	leave
 19605 0000E0B2 C22000                  	ret AND_KILL_FRAME(2)
 19606                                  .L_lambda_simple_end_0073:	; new closure is in rax
 19607 0000E0B5 50                      	push rax
 19608 0000E0B6 488B4520                	mov rax, PARAM(0)	; param run
 19609 0000E0BA 8F00                    	pop qword [rax]
 19610 0000E0BC 48B8-                   	mov rax, sob_void
 19610 0000E0BE [0000000000000000] 
 19611                                  
 19612 0000E0C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19613 0000E0CB E825950000              	call malloc
 19614 0000E0D0 50                      	push rax
 19615 0000E0D1 BF08000000              	mov rdi, 8 * 1	; new rib
 19616 0000E0D6 E81A950000              	call malloc
 19617 0000E0DB 50                      	push rax
 19618 0000E0DC BF28000000              	mov rdi, 8 * 5	; extended env
 19619 0000E0E1 E80F950000              	call malloc
 19620 0000E0E6 488B7D10                	mov rdi, ENV
 19621 0000E0EA 4831F6                  	 xor rsi, rsi
 19622 0000E0ED 4831D2                  	 xor rdx, rdx
 19623 0000E0F0 48FFC2                  	inc rdx
 19624                                  .L_lambda_opt_env_loop_0012:	; ext_env[i + 1] <-- env[i]
 19625 0000E0F3 4883FE04                	cmp rsi, 4
 19626 0000E0F7 7410                    	je .L_lambda_opt_env_end_0012
 19627 0000E0F9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19628 0000E0FD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19629 0000E101 48FFC6                  	inc rsi
 19630 0000E104 48FFC2                  	inc rdx
 19631 0000E107 EBEA                    	jmp .L_lambda_opt_env_loop_0012
 19632                                  .L_lambda_opt_env_end_0012:
 19633 0000E109 5B                      	pop rbx
 19634 0000E10A 4831F6                  	xor rsi, rsi
 19635                                  .L_lambda_opt_params_loop_0012:	; copy params
 19636 0000E10D 4883FE01                	cmp rsi, 1
 19637 0000E111 740E                    	je .L_lambda_opt_params_end_0012
 19638 0000E113 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19639 0000E118 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19640 0000E11C 48FFC6                  	inc rsi
 19641 0000E11F EBEC                    	jmp .L_lambda_opt_params_loop_0012
 19642                                  .L_lambda_opt_params_end_0012:
 19643 0000E121 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19644 0000E124 4889C3                  	mov rbx, rax
 19645 0000E127 58                      	pop rax
 19646 0000E128 C60004                  	mov byte [rax], T_closure
 19647 0000E12B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19648 0000E12F 48C74009[3CE10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 19649 0000E137 E95D010000              	jmp .L_lambda_opt_end_0012
 19650                                  .L_lambda_opt_code_0012:; lambda opt body
 19651 0000E13C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19652 0000E142 7409                    	je .L_lambda_opt_arity_check_exact_0012
 19653 0000E144 7F57                    	jg .L_lambda_opt_arity_check_more_0012
 19654 0000E146 6A01                    	push 1
 19655 0000E148 E975940000              	jmp L_error_incorrect_arity_opt
 19656                                  .L_lambda_opt_arity_check_exact_0012:
 19657 0000E14D 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 19658 0000E151 4C894C24F8              	mov qword [rsp -8], r9
 19659 0000E156 4C8B4C2408              	mov r9, qword [rsp +8]
 19660 0000E15B 4C890C24                	mov qword [rsp +8 * 0], r9
 19661 0000E15F 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 19662 0000E164 4C89C9                  	mov rcx, r9
 19663 0000E167 49FFC1                  	inc r9
 19664 0000E16A 4C894C2408              	mov qword [rsp +8], r9
 19665 0000E16F 4889E2                  	mov rdx, rsp
 19666 0000E172 4883C218                	add rdx, 24
 19667                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0012:
 19668 0000E176 4883F900                	cmp rcx, 0
 19669 0000E17A 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0012
 19670 0000E17C 4C8B02                  	mov r8, qword [rdx]
 19671 0000E17F 4C8942F8                	mov qword [rdx - 8], r8
 19672 0000E183 4883C208                	add rdx, 8
 19673 0000E187 48FFC9                  	dec rcx
 19674 0000E18A EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0012
 19675                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0012:
 19676 0000E18C 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 19677 0000E194 4883EC08                	sub rsp, 8
 19678 0000E198 E984000000              	jmp .L_lambda_opt_stack_adjusted_0012
 19679                                  .L_lambda_opt_arity_check_more_0012:
 19680 0000E19D 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 19681 0000E1A2 4D89C4                  	mov r12, r8
 19682 0000E1A5 4C89C1                  	mov rcx, r8
 19683 0000E1A8 4D8D5002                	lea r10, [r8 + 2] 
 19684 0000E1AC 4883E901                	sub rcx, 1
 19685 0000E1B0 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 19686 0000E1B5 49B9-                   	mov r9, sob_nil
 19686 0000E1B7 [0100000000000000] 
 19687                                  .L_lambda_opt_create_list_of_opt_params_0012:
 19688 0000E1BF 4883F900                	cmp rcx, 0
 19689 0000E1C3 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0012
 19690 0000E1C5 BF11000000              	mov rdi, 17
 19691 0000E1CA E826940000              	call malloc
 19692 0000E1CF C60021                  	mov byte [rax], T_pair
 19693 0000E1D2 498B1B                  	mov rbx, qword [r11]
 19694 0000E1D5 48895801                	mov qword [rax +1], rbx
 19695 0000E1D9 4C894809                	mov qword [rax + 1 + 8], r9
 19696 0000E1DD 4989C1                  	mov r9, rax
 19697 0000E1E0 48FFC9                  	dec rcx
 19698 0000E1E3 4983EB08                	sub r11, 8
 19699 0000E1E7 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0012
 19700                                  .L_lambda_opt_create_list_of_opt_params_end_0012:
 19701 0000E1E9 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 19702 0000E1EE 4D8908                  	mov qword [r8], r9
 19703 0000E1F1 4E8D14D500000000        	lea r10, [8 * r10]
 19704 0000E1F9 4901E2                  	add r10, rsp
 19705 0000E1FC B905000000              	mov rcx, 4 + 1
 19706                                  .L_lambda_opt_stack_shrink_loop_0012:
 19707 0000E201 4883F900                	cmp rcx, 0
 19708 0000E205 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0012
 19709 0000E207 4D8B18                  	mov r11, qword [r8]
 19710 0000E20A 4D891A                  	mov qword [r10], r11
 19711 0000E20D 4983E808                	sub r8, 8
 19712 0000E211 4983EA08                	sub r10, 8
 19713 0000E215 48FFC9                  	dec rcx
 19714 0000E218 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19715                                  .L_lambda_opt_stack_shrink_loop_exit_0012:
 19716 0000E21A 4983C208                	add r10, 8
 19717 0000E21E 4C89D4                  	mov rsp, r10
 19718                                  .L_lambda_opt_stack_adjusted_0012:;continue with the code, the stack is ok
 19719 0000E221 48C744241002000000      	mov qword [rsp + 8*2], 2
 19720 0000E22A C8000000                	enter 0, 0
 19721                                  	; preparing a tail-call
 19722 0000E22E 488B4528                	mov rax, PARAM(1)	; param strs
 19723 0000E232 50                      	push rax
 19724 0000E233 488B4520                	mov rax, PARAM(0)	; param str
 19725 0000E237 50                      	push rax
 19726 0000E238 6A02                    	push 2	; arg count
 19727 0000E23A 488B4510                	mov rax, ENV
 19728 0000E23E 488B00                  	mov rax, qword [rax + 8 * 0]
 19729 0000E241 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19730 0000E244 488B00                  	mov rax, qword [rax]
 19731 0000E247 803804                  	cmp byte [rax], T_closure
 19732 0000E24A 0F85FC920000            	jne L_error_non_closure
 19733 0000E250 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19734 0000E253 FF7508                  	push qword [rbp + 8 * 1]
 19735                                   ; old ret addr
 19736 0000E256 FF7500                  	push qword [rbp]
 19737                                   ; restore the old rbp
 19738 0000E259 BB02000000              	mov rbx, 2
 19739 0000E25E 4883C303                	add rbx, 3
 19740 0000E262 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19741 0000E266 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19742 0000E26B 4C8D4DF8                	lea r9, [rbp - 8]
 19743 0000E26F B906000000              	mov rcx, 6
 19744                                  .L_tc_recycle_frame_loop_00ac:
 19745 0000E274 4883F900                	cmp rcx, 0
 19746 0000E278 7413                    	je .L_tc_recycle_frame_done_00ac
 19747 0000E27A 4D8B11                  	mov r10, qword [r9]
 19748 0000E27D 4D8910                  	mov qword [r8], r10
 19749 0000E280 4983E808                	sub r8, 8
 19750 0000E284 4983E908                	sub r9, 8
 19751 0000E288 48FFC9                  	dec rcx
 19752 0000E28B EBE7                    	jmp .L_tc_recycle_frame_loop_00ac
 19753                                  .L_tc_recycle_frame_done_00ac:
 19754 0000E28D 498D6008                	lea rsp, [r8 + 8]
 19755 0000E291 5D                      	pop rbp ; restore the old rbp
 19756 0000E292 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19757 0000E295 C9                      	leave
 19758 0000E296 C22000                  	ret 8 * (2 + 2)
 19759                                  .L_lambda_opt_end_0012:	; new closure is in rax
 19760 0000E299 C9                      	leave
 19761 0000E29A C21800                  	ret AND_KILL_FRAME(1)
 19762                                  .L_lambda_simple_end_0072:	; new closure is in rax
 19763 0000E29D 803804                  	cmp byte [rax], T_closure
 19764 0000E2A0 0F85A6920000            	jne L_error_non_closure
 19765 0000E2A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19766 0000E2A9 FF7508                  	push qword [rbp + 8 * 1]
 19767                                   ; old ret addr
 19768 0000E2AC FF7500                  	push qword [rbp]
 19769                                   ; restore the old rbp
 19770 0000E2AF BB01000000              	mov rbx, 1
 19771 0000E2B4 4883C303                	add rbx, 3
 19772 0000E2B8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19773 0000E2BC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19774 0000E2C1 4C8D4DF8                	lea r9, [rbp - 8]
 19775 0000E2C5 B905000000              	mov rcx, 5
 19776                                  .L_tc_recycle_frame_loop_00aa:
 19777 0000E2CA 4883F900                	cmp rcx, 0
 19778 0000E2CE 7413                    	je .L_tc_recycle_frame_done_00aa
 19779 0000E2D0 4D8B11                  	mov r10, qword [r9]
 19780 0000E2D3 4D8910                  	mov qword [r8], r10
 19781 0000E2D6 4983E808                	sub r8, 8
 19782 0000E2DA 4983E908                	sub r9, 8
 19783 0000E2DE 48FFC9                  	dec rcx
 19784 0000E2E1 EBE7                    	jmp .L_tc_recycle_frame_loop_00aa
 19785                                  .L_tc_recycle_frame_done_00aa:
 19786 0000E2E3 498D6008                	lea rsp, [r8 + 8]
 19787 0000E2E7 5D                      	pop rbp ; restore the old rbp
 19788 0000E2E8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19789 0000E2EB C9                      	leave
 19790 0000E2EC C21800                  	ret AND_KILL_FRAME(1)
 19791                                  .L_lambda_simple_end_0071:	; new closure is in rax
 19792 0000E2EF 803804                  	cmp byte [rax], T_closure
 19793 0000E2F2 0F8554920000            	jne L_error_non_closure
 19794 0000E2F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19795 0000E2FB FF7508                  	push qword [rbp + 8 * 1]
 19796                                   ; old ret addr
 19797 0000E2FE FF7500                  	push qword [rbp]
 19798                                   ; restore the old rbp
 19799 0000E301 BB01000000              	mov rbx, 1
 19800 0000E306 4883C303                	add rbx, 3
 19801 0000E30A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19802 0000E30E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19803 0000E313 4C8D4DF8                	lea r9, [rbp - 8]
 19804 0000E317 B905000000              	mov rcx, 5
 19805                                  .L_tc_recycle_frame_loop_00a6:
 19806 0000E31C 4883F900                	cmp rcx, 0
 19807 0000E320 7413                    	je .L_tc_recycle_frame_done_00a6
 19808 0000E322 4D8B11                  	mov r10, qword [r9]
 19809 0000E325 4D8910                  	mov qword [r8], r10
 19810 0000E328 4983E808                	sub r8, 8
 19811 0000E32C 4983E908                	sub r9, 8
 19812 0000E330 48FFC9                  	dec rcx
 19813 0000E333 EBE7                    	jmp .L_tc_recycle_frame_loop_00a6
 19814                                  .L_tc_recycle_frame_done_00a6:
 19815 0000E335 498D6008                	lea rsp, [r8 + 8]
 19816 0000E339 5D                      	pop rbp ; restore the old rbp
 19817 0000E33A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19818 0000E33D C9                      	leave
 19819 0000E33E C21800                  	ret AND_KILL_FRAME(1)
 19820                                  .L_lambda_simple_end_006d:	; new closure is in rax
 19821 0000E341 803804                  	cmp byte [rax], T_closure
 19822 0000E344 0F8502920000            	jne L_error_non_closure
 19823 0000E34A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19824 0000E34D FF7508                  	push qword [rbp + 8 * 1]
 19825                                   ; old ret addr
 19826 0000E350 FF7500                  	push qword [rbp]
 19827                                   ; restore the old rbp
 19828 0000E353 BB01000000              	mov rbx, 1
 19829 0000E358 4883C303                	add rbx, 3
 19830 0000E35C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19831 0000E360 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19832 0000E365 4C8D4DF8                	lea r9, [rbp - 8]
 19833 0000E369 B905000000              	mov rcx, 5
 19834                                  .L_tc_recycle_frame_loop_00a4:
 19835 0000E36E 4883F900                	cmp rcx, 0
 19836 0000E372 7413                    	je .L_tc_recycle_frame_done_00a4
 19837 0000E374 4D8B11                  	mov r10, qword [r9]
 19838 0000E377 4D8910                  	mov qword [r8], r10
 19839 0000E37A 4983E808                	sub r8, 8
 19840 0000E37E 4983E908                	sub r9, 8
 19841 0000E382 48FFC9                  	dec rcx
 19842 0000E385 EBE7                    	jmp .L_tc_recycle_frame_loop_00a4
 19843                                  .L_tc_recycle_frame_done_00a4:
 19844 0000E387 498D6008                	lea rsp, [r8 + 8]
 19845 0000E38B 5D                      	pop rbp ; restore the old rbp
 19846 0000E38C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19847 0000E38F C9                      	leave
 19848 0000E390 C22000                  	ret AND_KILL_FRAME(2)
 19849                                  .L_lambda_simple_end_006c:	; new closure is in rax
 19850 0000E393 50                      	push rax
 19851 0000E394 6A01                    	push 1	; arg count
 19852 0000E396 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19853 0000E39B E855920000              	call malloc
 19854 0000E3A0 50                      	push rax
 19855 0000E3A1 BF00000000              	mov rdi, 8 * 0	; new rib
 19856 0000E3A6 E84A920000              	call malloc
 19857 0000E3AB 50                      	push rax
 19858 0000E3AC BF08000000              	mov rdi, 8 * 1	; extended env
 19859 0000E3B1 E83F920000              	call malloc
 19860 0000E3B6 488B7D10                	mov rdi, ENV
 19861 0000E3BA BE00000000              	mov rsi, 0
 19862 0000E3BF BA01000000              	mov rdx, 1
 19863                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 19864 0000E3C4 4883FE00                	cmp rsi, 0
 19865 0000E3C8 7410                    	je .L_lambda_simple_env_end_0074
 19866 0000E3CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19867 0000E3CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19868 0000E3D2 48FFC6                  	inc rsi
 19869 0000E3D5 48FFC2                  	inc rdx
 19870 0000E3D8 EBEA                    	jmp .L_lambda_simple_env_loop_0074
 19871                                  .L_lambda_simple_env_end_0074:
 19872 0000E3DA 5B                      	pop rbx
 19873 0000E3DB BE00000000              	mov rsi, 0
 19874                                  .L_lambda_simple_params_loop_0074:	; copy params
 19875 0000E3E0 4883FE00                	cmp rsi, 0
 19876 0000E3E4 740E                    	je .L_lambda_simple_params_end_0074
 19877 0000E3E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19878 0000E3EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19879 0000E3EF 48FFC6                  	inc rsi
 19880 0000E3F2 EBEC                    	jmp .L_lambda_simple_params_loop_0074
 19881                                  .L_lambda_simple_params_end_0074:
 19882 0000E3F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19883 0000E3F7 4889C3                  	mov rbx, rax
 19884 0000E3FA 58                      	pop rax
 19885 0000E3FB C60004                  	mov byte [rax], T_closure
 19886 0000E3FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19887 0000E402 48C74009[0FE40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 19888 0000E40A E947010000              	jmp .L_lambda_simple_end_0074
 19889                                  .L_lambda_simple_code_0074:	; lambda-simple body
 19890 0000E40F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19891 0000E415 740B                    	je .L_lambda_simple_arity_check_ok_0074
 19892 0000E417 FF742410                	push qword [rsp + 8 * 2]
 19893 0000E41B 6A01                    	push 1
 19894 0000E41D E98C910000              	jmp L_error_incorrect_arity_simple
 19895                                  .L_lambda_simple_arity_check_ok_0074:
 19896 0000E422 C8000000                	enter 0, 0
 19897                                  	; preparing a non-tail-call
 19898 0000E426 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19899 0000E42E 803805                  	cmp byte [rax], T_undefined
 19900 0000E431 0F8491900000            	je L_error_fvar_undefined
 19901 0000E437 50                      	push rax
 19902 0000E438 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 19903 0000E440 803805                  	cmp byte [rax], T_undefined
 19904 0000E443 0F847F900000            	je L_error_fvar_undefined
 19905 0000E449 50                      	push rax
 19906 0000E44A 6A02                    	push 2	; arg count
 19907 0000E44C 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19908 0000E450 803804                  	cmp byte [rax], T_closure
 19909 0000E453 0F85F3900000            	jne L_error_non_closure
 19910 0000E459 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19911 0000E45C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19912 0000E45F 48890425[9A160000]      	mov qword [free_var_133], rax
 19913 0000E467 48B8-                   	mov rax, sob_void
 19913 0000E469 [0000000000000000] 
 19914                                  
 19915                                  	; preparing a non-tail-call
 19916 0000E471 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19917 0000E479 803805                  	cmp byte [rax], T_undefined
 19918 0000E47C 0F8446900000            	je L_error_fvar_undefined
 19919 0000E482 50                      	push rax
 19920 0000E483 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19921 0000E48B 803805                  	cmp byte [rax], T_undefined
 19922 0000E48E 0F8434900000            	je L_error_fvar_undefined
 19923 0000E494 50                      	push rax
 19924 0000E495 6A02                    	push 2	; arg count
 19925 0000E497 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19926 0000E49B 803804                  	cmp byte [rax], T_closure
 19927 0000E49E 0F85A8900000            	jne L_error_non_closure
 19928 0000E4A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19929 0000E4A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19930 0000E4AA 48890425[CE150000]      	mov qword [free_var_121], rax
 19931 0000E4B2 48B8-                   	mov rax, sob_void
 19931 0000E4B4 [0000000000000000] 
 19932                                  
 19933                                  	; preparing a non-tail-call
 19934 0000E4BC 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19935 0000E4C4 803805                  	cmp byte [rax], T_undefined
 19936 0000E4C7 0F84FB8F0000            	je L_error_fvar_undefined
 19937 0000E4CD 50                      	push rax
 19938 0000E4CE 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 19939 0000E4D6 803805                  	cmp byte [rax], T_undefined
 19940 0000E4D9 0F84E98F0000            	je L_error_fvar_undefined
 19941 0000E4DF 50                      	push rax
 19942 0000E4E0 6A02                    	push 2	; arg count
 19943 0000E4E2 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19944 0000E4E6 803804                  	cmp byte [rax], T_closure
 19945 0000E4E9 0F855D900000            	jne L_error_non_closure
 19946 0000E4EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19947 0000E4F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19948 0000E4F5 48890425[CD160000]      	mov qword [free_var_136], rax
 19949 0000E4FD 48B8-                   	mov rax, sob_void
 19949 0000E4FF [0000000000000000] 
 19950                                  
 19951                                  	; preparing a non-tail-call
 19952 0000E507 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19953 0000E50F 803805                  	cmp byte [rax], T_undefined
 19954 0000E512 0F84B08F0000            	je L_error_fvar_undefined
 19955 0000E518 50                      	push rax
 19956 0000E519 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19957 0000E521 803805                  	cmp byte [rax], T_undefined
 19958 0000E524 0F849E8F0000            	je L_error_fvar_undefined
 19959 0000E52A 50                      	push rax
 19960 0000E52B 6A02                    	push 2	; arg count
 19961 0000E52D 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19962 0000E531 803804                  	cmp byte [rax], T_closure
 19963 0000E534 0F8512900000            	jne L_error_non_closure
 19964 0000E53A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19965 0000E53D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19966 0000E540 48890425[01160000]      	mov qword [free_var_124], rax
 19967 0000E548 48B8-                   	mov rax, sob_void
 19967 0000E54A [0000000000000000] 
 19968 0000E552 C9                      	leave
 19969 0000E553 C21800                  	ret AND_KILL_FRAME(1)
 19970                                  .L_lambda_simple_end_0074:	; new closure is in rax
 19971 0000E556 803804                  	cmp byte [rax], T_closure
 19972 0000E559 0F85ED8F0000            	jne L_error_non_closure
 19973 0000E55F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19974 0000E562 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19975                                  
 19976 0000E565 4889C7                  	mov rdi, rax
 19977 0000E568 E8DD920000              	call print_sexpr_if_not_void
 19978                                  	; preparing a non-tail-call
 19979 0000E56D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19980 0000E572 E87E900000              	call malloc
 19981 0000E577 50                      	push rax
 19982 0000E578 BF00000000              	mov rdi, 8 * 0	; new rib
 19983 0000E57D E873900000              	call malloc
 19984 0000E582 50                      	push rax
 19985 0000E583 BF08000000              	mov rdi, 8 * 1	; extended env
 19986 0000E588 E868900000              	call malloc
 19987 0000E58D 488B7D10                	mov rdi, ENV
 19988 0000E591 BE00000000              	mov rsi, 0
 19989 0000E596 BA01000000              	mov rdx, 1
 19990                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 19991 0000E59B 4883FE00                	cmp rsi, 0
 19992 0000E59F 7410                    	je .L_lambda_simple_env_end_0075
 19993 0000E5A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19994 0000E5A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19995 0000E5A9 48FFC6                  	inc rsi
 19996 0000E5AC 48FFC2                  	inc rdx
 19997 0000E5AF EBEA                    	jmp .L_lambda_simple_env_loop_0075
 19998                                  .L_lambda_simple_env_end_0075:
 19999 0000E5B1 5B                      	pop rbx
 20000 0000E5B2 BE00000000              	mov rsi, 0
 20001                                  .L_lambda_simple_params_loop_0075:	; copy params
 20002 0000E5B7 4883FE00                	cmp rsi, 0
 20003 0000E5BB 740E                    	je .L_lambda_simple_params_end_0075
 20004 0000E5BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20005 0000E5C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20006 0000E5C6 48FFC6                  	inc rsi
 20007 0000E5C9 EBEC                    	jmp .L_lambda_simple_params_loop_0075
 20008                                  .L_lambda_simple_params_end_0075:
 20009 0000E5CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20010 0000E5CE 4889C3                  	mov rbx, rax
 20011 0000E5D1 58                      	pop rax
 20012 0000E5D2 C60004                  	mov byte [rax], T_closure
 20013 0000E5D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20014 0000E5D9 48C74009[E6E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 20015 0000E5E1 E9B40B0000              	jmp .L_lambda_simple_end_0075
 20016                                  .L_lambda_simple_code_0075:	; lambda-simple body
 20017 0000E5E6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20018 0000E5EC 740B                    	je .L_lambda_simple_arity_check_ok_0075
 20019 0000E5EE FF742410                	push qword [rsp + 8 * 2]
 20020 0000E5F2 6A01                    	push 1
 20021 0000E5F4 E9B58F0000              	jmp L_error_incorrect_arity_simple
 20022                                  .L_lambda_simple_arity_check_ok_0075:
 20023 0000E5F9 C8000000                	enter 0, 0
 20024                                  	; preparing a tail-call
 20025 0000E5FD 48B8-                   	mov rax, L_constants + 1993
 20025 0000E5FF [C907000000000000] 
 20026 0000E607 50                      	push rax
 20027 0000E608 6A01                    	push 1	; arg count
 20028 0000E60A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20029 0000E60F E8E18F0000              	call malloc
 20030 0000E614 50                      	push rax
 20031 0000E615 BF08000000              	mov rdi, 8 * 1	; new rib
 20032 0000E61A E8D68F0000              	call malloc
 20033 0000E61F 50                      	push rax
 20034 0000E620 BF10000000              	mov rdi, 8 * 2	; extended env
 20035 0000E625 E8CB8F0000              	call malloc
 20036 0000E62A 488B7D10                	mov rdi, ENV
 20037 0000E62E BE00000000              	mov rsi, 0
 20038 0000E633 BA01000000              	mov rdx, 1
 20039                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 20040 0000E638 4883FE01                	cmp rsi, 1
 20041 0000E63C 7410                    	je .L_lambda_simple_env_end_0076
 20042 0000E63E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20043 0000E642 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20044 0000E646 48FFC6                  	inc rsi
 20045 0000E649 48FFC2                  	inc rdx
 20046 0000E64C EBEA                    	jmp .L_lambda_simple_env_loop_0076
 20047                                  .L_lambda_simple_env_end_0076:
 20048 0000E64E 5B                      	pop rbx
 20049 0000E64F BE00000000              	mov rsi, 0
 20050                                  .L_lambda_simple_params_loop_0076:	; copy params
 20051 0000E654 4883FE01                	cmp rsi, 1
 20052 0000E658 740E                    	je .L_lambda_simple_params_end_0076
 20053 0000E65A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20054 0000E65F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20055 0000E663 48FFC6                  	inc rsi
 20056 0000E666 EBEC                    	jmp .L_lambda_simple_params_loop_0076
 20057                                  .L_lambda_simple_params_end_0076:
 20058 0000E668 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20059 0000E66B 4889C3                  	mov rbx, rax
 20060 0000E66E 58                      	pop rax
 20061 0000E66F C60004                  	mov byte [rax], T_closure
 20062 0000E672 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20063 0000E676 48C74009[83E60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 20064 0000E67E E9C50A0000              	jmp .L_lambda_simple_end_0076
 20065                                  .L_lambda_simple_code_0076:	; lambda-simple body
 20066 0000E683 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20067 0000E689 740B                    	je .L_lambda_simple_arity_check_ok_0076
 20068 0000E68B FF742410                	push qword [rsp + 8 * 2]
 20069 0000E68F 6A01                    	push 1
 20070 0000E691 E9188F0000              	jmp L_error_incorrect_arity_simple
 20071                                  .L_lambda_simple_arity_check_ok_0076:
 20072 0000E696 C8000000                	enter 0, 0
 20073 0000E69A BF08000000              	mov rdi, 8*1
 20074 0000E69F E8518F0000              	call malloc
 20075 0000E6A4 488B5D20                	mov rbx, PARAM(0)
 20076 0000E6A8 488918                  	mov qword [rax], rbx
 20077 0000E6AB 48894520                	mov PARAM(0), rax
 20078 0000E6AF 48B8-                   	mov rax, sob_void
 20078 0000E6B1 [0000000000000000] 
 20079                                  
 20080 0000E6B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20081 0000E6BE E8328F0000              	call malloc
 20082 0000E6C3 50                      	push rax
 20083 0000E6C4 BF08000000              	mov rdi, 8 * 1	; new rib
 20084 0000E6C9 E8278F0000              	call malloc
 20085 0000E6CE 50                      	push rax
 20086 0000E6CF BF18000000              	mov rdi, 8 * 3	; extended env
 20087 0000E6D4 E81C8F0000              	call malloc
 20088 0000E6D9 488B7D10                	mov rdi, ENV
 20089 0000E6DD BE00000000              	mov rsi, 0
 20090 0000E6E2 BA01000000              	mov rdx, 1
 20091                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 20092 0000E6E7 4883FE02                	cmp rsi, 2
 20093 0000E6EB 7410                    	je .L_lambda_simple_env_end_0077
 20094 0000E6ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20095 0000E6F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20096 0000E6F5 48FFC6                  	inc rsi
 20097 0000E6F8 48FFC2                  	inc rdx
 20098 0000E6FB EBEA                    	jmp .L_lambda_simple_env_loop_0077
 20099                                  .L_lambda_simple_env_end_0077:
 20100 0000E6FD 5B                      	pop rbx
 20101 0000E6FE BE00000000              	mov rsi, 0
 20102                                  .L_lambda_simple_params_loop_0077:	; copy params
 20103 0000E703 4883FE01                	cmp rsi, 1
 20104 0000E707 740E                    	je .L_lambda_simple_params_end_0077
 20105 0000E709 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20106 0000E70E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20107 0000E712 48FFC6                  	inc rsi
 20108 0000E715 EBEC                    	jmp .L_lambda_simple_params_loop_0077
 20109                                  .L_lambda_simple_params_end_0077:
 20110 0000E717 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20111 0000E71A 4889C3                  	mov rbx, rax
 20112 0000E71D 58                      	pop rax
 20113 0000E71E C60004                  	mov byte [rax], T_closure
 20114 0000E721 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20115 0000E725 48C74009[32E70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 20116 0000E72D E9C4010000              	jmp .L_lambda_simple_end_0077
 20117                                  .L_lambda_simple_code_0077:	; lambda-simple body
 20118 0000E732 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20119 0000E738 740B                    	je .L_lambda_simple_arity_check_ok_0077
 20120 0000E73A FF742410                	push qword [rsp + 8 * 2]
 20121 0000E73E 6A04                    	push 4
 20122 0000E740 E9698E0000              	jmp L_error_incorrect_arity_simple
 20123                                  .L_lambda_simple_arity_check_ok_0077:
 20124 0000E745 C8000000                	enter 0, 0
 20125                                  	; preparing a non-tail-call
 20126 0000E749 488B4538                	mov rax, PARAM(3)	; param len
 20127 0000E74D 50                      	push rax
 20128 0000E74E 488B4520                	mov rax, PARAM(0)	; param i
 20129 0000E752 50                      	push rax
 20130 0000E753 6A02                    	push 2	; arg count
 20131 0000E755 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20132 0000E75D 803805                  	cmp byte [rax], T_undefined
 20133 0000E760 0F84628D0000            	je L_error_fvar_undefined
 20134 0000E766 803804                  	cmp byte [rax], T_closure
 20135 0000E769 0F85DD8D0000            	jne L_error_non_closure
 20136 0000E76F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20137 0000E772 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20138 0000E775 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 20139 0000E77B 0F8571010000            	jne .L_or_end_000c; if its not false (true) then we need to return it and not the last element
 20140                                  	; preparing a non-tail-call
 20141 0000E781 488B4538                	mov rax, PARAM(3)	; param len
 20142 0000E785 50                      	push rax
 20143 0000E786 488B4520                	mov rax, PARAM(0)	; param i
 20144 0000E78A 50                      	push rax
 20145 0000E78B 6A02                    	push 2	; arg count
 20146 0000E78D 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 20147 0000E795 803805                  	cmp byte [rax], T_undefined
 20148 0000E798 0F842A8D0000            	je L_error_fvar_undefined
 20149 0000E79E 803804                  	cmp byte [rax], T_closure
 20150 0000E7A1 0F85A58D0000            	jne L_error_non_closure
 20151 0000E7A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20152 0000E7AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20153 0000E7AD 483D[02000000]          	cmp rax, sob_boolean_false
 20154 0000E7B3 0F842F010000            	je .L_if_else_005d
 20155                                  	; preparing a non-tail-call
 20156                                  	; preparing a non-tail-call
 20157 0000E7B9 488B4520                	mov rax, PARAM(0)	; param i
 20158 0000E7BD 50                      	push rax
 20159 0000E7BE 488B4530                	mov rax, PARAM(2)	; param str2
 20160 0000E7C2 50                      	push rax
 20161 0000E7C3 6A02                    	push 2	; arg count
 20162 0000E7C5 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20163 0000E7CD 803805                  	cmp byte [rax], T_undefined
 20164 0000E7D0 0F84F28C0000            	je L_error_fvar_undefined
 20165 0000E7D6 803804                  	cmp byte [rax], T_closure
 20166 0000E7D9 0F856D8D0000            	jne L_error_non_closure
 20167 0000E7DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20168 0000E7E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20169 0000E7E5 50                      	push rax
 20170                                  	; preparing a non-tail-call
 20171 0000E7E6 488B4520                	mov rax, PARAM(0)	; param i
 20172 0000E7EA 50                      	push rax
 20173 0000E7EB 488B4528                	mov rax, PARAM(1)	; param str1
 20174 0000E7EF 50                      	push rax
 20175 0000E7F0 6A02                    	push 2	; arg count
 20176 0000E7F2 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20177 0000E7FA 803805                  	cmp byte [rax], T_undefined
 20178 0000E7FD 0F84C58C0000            	je L_error_fvar_undefined
 20179 0000E803 803804                  	cmp byte [rax], T_closure
 20180 0000E806 0F85408D0000            	jne L_error_non_closure
 20181 0000E80C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20182 0000E80F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20183 0000E812 50                      	push rax
 20184 0000E813 6A02                    	push 2	; arg count
 20185 0000E815 488B4510                	mov rax, ENV
 20186 0000E819 488B4008                	mov rax, qword [rax + 8 * 1]
 20187 0000E81D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20188 0000E820 803804                  	cmp byte [rax], T_closure
 20189 0000E823 0F85238D0000            	jne L_error_non_closure
 20190 0000E829 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20191 0000E82C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20192 0000E82F 483D[02000000]          	cmp rax, sob_boolean_false
 20193 0000E835 0F84A1000000            	je .L_if_else_005c
 20194                                  	; preparing a tail-call
 20195 0000E83B 488B4538                	mov rax, PARAM(3)	; param len
 20196 0000E83F 50                      	push rax
 20197 0000E840 488B4530                	mov rax, PARAM(2)	; param str2
 20198 0000E844 50                      	push rax
 20199 0000E845 488B4528                	mov rax, PARAM(1)	; param str1
 20200 0000E849 50                      	push rax
 20201                                  	; preparing a non-tail-call
 20202 0000E84A 48B8-                   	mov rax, L_constants + 2270
 20202 0000E84C [DE08000000000000] 
 20203 0000E854 50                      	push rax
 20204 0000E855 488B4520                	mov rax, PARAM(0)	; param i
 20205 0000E859 50                      	push rax
 20206 0000E85A 6A02                    	push 2	; arg count
 20207 0000E85C 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 20208 0000E864 803805                  	cmp byte [rax], T_undefined
 20209 0000E867 0F845B8C0000            	je L_error_fvar_undefined
 20210 0000E86D 803804                  	cmp byte [rax], T_closure
 20211 0000E870 0F85D68C0000            	jne L_error_non_closure
 20212 0000E876 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20213 0000E879 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20214 0000E87C 50                      	push rax
 20215 0000E87D 6A04                    	push 4	; arg count
 20216 0000E87F 488B4510                	mov rax, ENV
 20217 0000E883 488B00                  	mov rax, qword [rax + 8 * 0]
 20218 0000E886 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20219 0000E889 488B00                  	mov rax, qword [rax]
 20220 0000E88C 803804                  	cmp byte [rax], T_closure
 20221 0000E88F 0F85B78C0000            	jne L_error_non_closure
 20222 0000E895 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20223 0000E898 FF7508                  	push qword [rbp + 8 * 1]
 20224                                   ; old ret addr
 20225 0000E89B FF7500                  	push qword [rbp]
 20226                                   ; restore the old rbp
 20227 0000E89E BB04000000              	mov rbx, 4
 20228 0000E8A3 4883C303                	add rbx, 3
 20229 0000E8A7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20230 0000E8AB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20231 0000E8B0 4C8D4DF8                	lea r9, [rbp - 8]
 20232 0000E8B4 B908000000              	mov rcx, 8
 20233                                  .L_tc_recycle_frame_loop_00ae:
 20234 0000E8B9 4883F900                	cmp rcx, 0
 20235 0000E8BD 7413                    	je .L_tc_recycle_frame_done_00ae
 20236 0000E8BF 4D8B11                  	mov r10, qword [r9]
 20237 0000E8C2 4D8910                  	mov qword [r8], r10
 20238 0000E8C5 4983E808                	sub r8, 8
 20239 0000E8C9 4983E908                	sub r9, 8
 20240 0000E8CD 48FFC9                  	dec rcx
 20241 0000E8D0 EBE7                    	jmp .L_tc_recycle_frame_loop_00ae
 20242                                  .L_tc_recycle_frame_done_00ae:
 20243 0000E8D2 498D6008                	lea rsp, [r8 + 8]
 20244 0000E8D6 5D                      	pop rbp ; restore the old rbp
 20245 0000E8D7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20246 0000E8DA EB0A                    	jmp .L_if_end_005c
 20247                                  .L_if_else_005c:
 20248 0000E8DC 48B8-                   	mov rax, L_constants + 2
 20248 0000E8DE [0200000000000000] 
 20249                                  .L_if_end_005c:
 20250 0000E8E6 EB0A                    	jmp .L_if_end_005d
 20251                                  .L_if_else_005d:
 20252 0000E8E8 48B8-                   	mov rax, L_constants + 2
 20252 0000E8EA [0200000000000000] 
 20253                                  .L_if_end_005d:
 20254                                  .L_or_end_000c:
 20255 0000E8F2 C9                      	leave
 20256 0000E8F3 C23000                  	ret AND_KILL_FRAME(4)
 20257                                  .L_lambda_simple_end_0077:	; new closure is in rax
 20258 0000E8F6 50                      	push rax
 20259 0000E8F7 488B4520                	mov rax, PARAM(0)	; param run
 20260 0000E8FB 8F00                    	pop qword [rax]
 20261 0000E8FD 48B8-                   	mov rax, sob_void
 20261 0000E8FF [0000000000000000] 
 20262                                  
 20263                                  	; preparing a tail-call
 20264 0000E907 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20265 0000E90C E8E48C0000              	call malloc
 20266 0000E911 50                      	push rax
 20267 0000E912 BF08000000              	mov rdi, 8 * 1	; new rib
 20268 0000E917 E8D98C0000              	call malloc
 20269 0000E91C 50                      	push rax
 20270 0000E91D BF18000000              	mov rdi, 8 * 3	; extended env
 20271 0000E922 E8CE8C0000              	call malloc
 20272 0000E927 488B7D10                	mov rdi, ENV
 20273 0000E92B BE00000000              	mov rsi, 0
 20274 0000E930 BA01000000              	mov rdx, 1
 20275                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 20276 0000E935 4883FE02                	cmp rsi, 2
 20277 0000E939 7410                    	je .L_lambda_simple_env_end_0078
 20278 0000E93B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20279 0000E93F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20280 0000E943 48FFC6                  	inc rsi
 20281 0000E946 48FFC2                  	inc rdx
 20282 0000E949 EBEA                    	jmp .L_lambda_simple_env_loop_0078
 20283                                  .L_lambda_simple_env_end_0078:
 20284 0000E94B 5B                      	pop rbx
 20285 0000E94C BE00000000              	mov rsi, 0
 20286                                  .L_lambda_simple_params_loop_0078:	; copy params
 20287 0000E951 4883FE01                	cmp rsi, 1
 20288 0000E955 740E                    	je .L_lambda_simple_params_end_0078
 20289 0000E957 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20290 0000E95C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20291 0000E960 48FFC6                  	inc rsi
 20292 0000E963 EBEC                    	jmp .L_lambda_simple_params_loop_0078
 20293                                  .L_lambda_simple_params_end_0078:
 20294 0000E965 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20295 0000E968 4889C3                  	mov rbx, rax
 20296 0000E96B 58                      	pop rax
 20297 0000E96C C60004                  	mov byte [rax], T_closure
 20298 0000E96F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20299 0000E973 48C74009[80E90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 20300 0000E97B E918020000              	jmp .L_lambda_simple_end_0078
 20301                                  .L_lambda_simple_code_0078:	; lambda-simple body
 20302 0000E980 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20303 0000E986 740B                    	je .L_lambda_simple_arity_check_ok_0078
 20304 0000E988 FF742410                	push qword [rsp + 8 * 2]
 20305 0000E98C 6A02                    	push 2
 20306 0000E98E E91B8C0000              	jmp L_error_incorrect_arity_simple
 20307                                  .L_lambda_simple_arity_check_ok_0078:
 20308 0000E993 C8000000                	enter 0, 0
 20309                                  	; preparing a tail-call
 20310                                  	; preparing a non-tail-call
 20311 0000E997 488B4528                	mov rax, PARAM(1)	; param str2
 20312 0000E99B 50                      	push rax
 20313 0000E99C 6A01                    	push 1	; arg count
 20314 0000E99E 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20315 0000E9A6 803805                  	cmp byte [rax], T_undefined
 20316 0000E9A9 0F84198B0000            	je L_error_fvar_undefined
 20317 0000E9AF 803804                  	cmp byte [rax], T_closure
 20318 0000E9B2 0F85948B0000            	jne L_error_non_closure
 20319 0000E9B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20320 0000E9BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20321 0000E9BE 50                      	push rax
 20322                                  	; preparing a non-tail-call
 20323 0000E9BF 488B4520                	mov rax, PARAM(0)	; param str1
 20324 0000E9C3 50                      	push rax
 20325 0000E9C4 6A01                    	push 1	; arg count
 20326 0000E9C6 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20327 0000E9CE 803805                  	cmp byte [rax], T_undefined
 20328 0000E9D1 0F84F18A0000            	je L_error_fvar_undefined
 20329 0000E9D7 803804                  	cmp byte [rax], T_closure
 20330 0000E9DA 0F856C8B0000            	jne L_error_non_closure
 20331 0000E9E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20332 0000E9E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20333 0000E9E6 50                      	push rax
 20334 0000E9E7 6A02                    	push 2	; arg count
 20335 0000E9E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20336 0000E9EE E8028C0000              	call malloc
 20337 0000E9F3 50                      	push rax
 20338 0000E9F4 BF10000000              	mov rdi, 8 * 2	; new rib
 20339 0000E9F9 E8F78B0000              	call malloc
 20340 0000E9FE 50                      	push rax
 20341 0000E9FF BF20000000              	mov rdi, 8 * 4	; extended env
 20342 0000EA04 E8EC8B0000              	call malloc
 20343 0000EA09 488B7D10                	mov rdi, ENV
 20344 0000EA0D BE00000000              	mov rsi, 0
 20345 0000EA12 BA01000000              	mov rdx, 1
 20346                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 20347 0000EA17 4883FE03                	cmp rsi, 3
 20348 0000EA1B 7410                    	je .L_lambda_simple_env_end_0079
 20349 0000EA1D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20350 0000EA21 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20351 0000EA25 48FFC6                  	inc rsi
 20352 0000EA28 48FFC2                  	inc rdx
 20353 0000EA2B EBEA                    	jmp .L_lambda_simple_env_loop_0079
 20354                                  .L_lambda_simple_env_end_0079:
 20355 0000EA2D 5B                      	pop rbx
 20356 0000EA2E BE00000000              	mov rsi, 0
 20357                                  .L_lambda_simple_params_loop_0079:	; copy params
 20358 0000EA33 4883FE02                	cmp rsi, 2
 20359 0000EA37 740E                    	je .L_lambda_simple_params_end_0079
 20360 0000EA39 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20361 0000EA3E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20362 0000EA42 48FFC6                  	inc rsi
 20363 0000EA45 EBEC                    	jmp .L_lambda_simple_params_loop_0079
 20364                                  .L_lambda_simple_params_end_0079:
 20365 0000EA47 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20366 0000EA4A 4889C3                  	mov rbx, rax
 20367 0000EA4D 58                      	pop rax
 20368 0000EA4E C60004                  	mov byte [rax], T_closure
 20369 0000EA51 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20370 0000EA55 48C74009[62EA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 20371 0000EA5D E9E4000000              	jmp .L_lambda_simple_end_0079
 20372                                  .L_lambda_simple_code_0079:	; lambda-simple body
 20373 0000EA62 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20374 0000EA68 740B                    	je .L_lambda_simple_arity_check_ok_0079
 20375 0000EA6A FF742410                	push qword [rsp + 8 * 2]
 20376 0000EA6E 6A02                    	push 2
 20377 0000EA70 E9398B0000              	jmp L_error_incorrect_arity_simple
 20378                                  .L_lambda_simple_arity_check_ok_0079:
 20379 0000EA75 C8000000                	enter 0, 0
 20380                                  	; preparing a non-tail-call
 20381 0000EA79 488B4528                	mov rax, PARAM(1)	; param len2
 20382 0000EA7D 50                      	push rax
 20383 0000EA7E 488B4520                	mov rax, PARAM(0)	; param len1
 20384 0000EA82 50                      	push rax
 20385 0000EA83 6A02                    	push 2	; arg count
 20386 0000EA85 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20387 0000EA8D 803805                  	cmp byte [rax], T_undefined
 20388 0000EA90 0F84328A0000            	je L_error_fvar_undefined
 20389 0000EA96 803804                  	cmp byte [rax], T_closure
 20390 0000EA99 0F85AD8A0000            	jne L_error_non_closure
 20391 0000EA9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20392 0000EAA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20393 0000EAA5 483D[02000000]          	cmp rax, sob_boolean_false
 20394 0000EAAB 0F8487000000            	je .L_if_else_005e
 20395                                  	; preparing a tail-call
 20396 0000EAB1 488B4520                	mov rax, PARAM(0)	; param len1
 20397 0000EAB5 50                      	push rax
 20398 0000EAB6 488B4510                	mov rax, ENV
 20399 0000EABA 488B00                  	mov rax, qword [rax + 8 * 0]
 20400 0000EABD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20401 0000EAC1 50                      	push rax
 20402 0000EAC2 488B4510                	mov rax, ENV
 20403 0000EAC6 488B00                  	mov rax, qword [rax + 8 * 0]
 20404 0000EAC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20405 0000EACC 50                      	push rax
 20406 0000EACD 48B8-                   	mov rax, L_constants + 2135
 20406 0000EACF [5708000000000000] 
 20407 0000EAD7 50                      	push rax
 20408 0000EAD8 6A04                    	push 4	; arg count
 20409 0000EADA 488B4510                	mov rax, ENV
 20410 0000EADE 488B4008                	mov rax, qword [rax + 8 * 1]
 20411 0000EAE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20412 0000EAE5 488B00                  	mov rax, qword [rax]
 20413 0000EAE8 803804                  	cmp byte [rax], T_closure
 20414 0000EAEB 0F855B8A0000            	jne L_error_non_closure
 20415 0000EAF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20416 0000EAF4 FF7508                  	push qword [rbp + 8 * 1]
 20417                                   ; old ret addr
 20418 0000EAF7 FF7500                  	push qword [rbp]
 20419                                   ; restore the old rbp
 20420 0000EAFA BB04000000              	mov rbx, 4
 20421 0000EAFF 4883C303                	add rbx, 3
 20422 0000EB03 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20423 0000EB07 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20424 0000EB0C 4C8D4DF8                	lea r9, [rbp - 8]
 20425 0000EB10 B908000000              	mov rcx, 8
 20426                                  .L_tc_recycle_frame_loop_00b1:
 20427 0000EB15 4883F900                	cmp rcx, 0
 20428 0000EB19 7413                    	je .L_tc_recycle_frame_done_00b1
 20429 0000EB1B 4D8B11                  	mov r10, qword [r9]
 20430 0000EB1E 4D8910                  	mov qword [r8], r10
 20431 0000EB21 4983E808                	sub r8, 8
 20432 0000EB25 4983E908                	sub r9, 8
 20433 0000EB29 48FFC9                  	dec rcx
 20434 0000EB2C EBE7                    	jmp .L_tc_recycle_frame_loop_00b1
 20435                                  .L_tc_recycle_frame_done_00b1:
 20436 0000EB2E 498D6008                	lea rsp, [r8 + 8]
 20437 0000EB32 5D                      	pop rbp ; restore the old rbp
 20438 0000EB33 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20439 0000EB36 EB0A                    	jmp .L_if_end_005e
 20440                                  .L_if_else_005e:
 20441 0000EB38 48B8-                   	mov rax, L_constants + 2
 20441 0000EB3A [0200000000000000] 
 20442                                  .L_if_end_005e:
 20443 0000EB42 C9                      	leave
 20444 0000EB43 C22000                  	ret AND_KILL_FRAME(2)
 20445                                  .L_lambda_simple_end_0079:	; new closure is in rax
 20446 0000EB46 803804                  	cmp byte [rax], T_closure
 20447 0000EB49 0F85FD890000            	jne L_error_non_closure
 20448 0000EB4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20449 0000EB52 FF7508                  	push qword [rbp + 8 * 1]
 20450                                   ; old ret addr
 20451 0000EB55 FF7500                  	push qword [rbp]
 20452                                   ; restore the old rbp
 20453 0000EB58 BB02000000              	mov rbx, 2
 20454 0000EB5D 4883C303                	add rbx, 3
 20455 0000EB61 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20456 0000EB65 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20457 0000EB6A 4C8D4DF8                	lea r9, [rbp - 8]
 20458 0000EB6E B906000000              	mov rcx, 6
 20459                                  .L_tc_recycle_frame_loop_00b0:
 20460 0000EB73 4883F900                	cmp rcx, 0
 20461 0000EB77 7413                    	je .L_tc_recycle_frame_done_00b0
 20462 0000EB79 4D8B11                  	mov r10, qword [r9]
 20463 0000EB7C 4D8910                  	mov qword [r8], r10
 20464 0000EB7F 4983E808                	sub r8, 8
 20465 0000EB83 4983E908                	sub r9, 8
 20466 0000EB87 48FFC9                  	dec rcx
 20467 0000EB8A EBE7                    	jmp .L_tc_recycle_frame_loop_00b0
 20468                                  .L_tc_recycle_frame_done_00b0:
 20469 0000EB8C 498D6008                	lea rsp, [r8 + 8]
 20470 0000EB90 5D                      	pop rbp ; restore the old rbp
 20471 0000EB91 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20472 0000EB94 C9                      	leave
 20473 0000EB95 C22000                  	ret AND_KILL_FRAME(2)
 20474                                  .L_lambda_simple_end_0078:	; new closure is in rax
 20475 0000EB98 50                      	push rax
 20476 0000EB99 6A01                    	push 1	; arg count
 20477 0000EB9B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20478 0000EBA0 E8508A0000              	call malloc
 20479 0000EBA5 50                      	push rax
 20480 0000EBA6 BF08000000              	mov rdi, 8 * 1	; new rib
 20481 0000EBAB E8458A0000              	call malloc
 20482 0000EBB0 50                      	push rax
 20483 0000EBB1 BF18000000              	mov rdi, 8 * 3	; extended env
 20484 0000EBB6 E83A8A0000              	call malloc
 20485 0000EBBB 488B7D10                	mov rdi, ENV
 20486 0000EBBF BE00000000              	mov rsi, 0
 20487 0000EBC4 BA01000000              	mov rdx, 1
 20488                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 20489 0000EBC9 4883FE02                	cmp rsi, 2
 20490 0000EBCD 7410                    	je .L_lambda_simple_env_end_007a
 20491 0000EBCF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20492 0000EBD3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20493 0000EBD7 48FFC6                  	inc rsi
 20494 0000EBDA 48FFC2                  	inc rdx
 20495 0000EBDD EBEA                    	jmp .L_lambda_simple_env_loop_007a
 20496                                  .L_lambda_simple_env_end_007a:
 20497 0000EBDF 5B                      	pop rbx
 20498 0000EBE0 BE00000000              	mov rsi, 0
 20499                                  .L_lambda_simple_params_loop_007a:	; copy params
 20500 0000EBE5 4883FE01                	cmp rsi, 1
 20501 0000EBE9 740E                    	je .L_lambda_simple_params_end_007a
 20502 0000EBEB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20503 0000EBF0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20504 0000EBF4 48FFC6                  	inc rsi
 20505 0000EBF7 EBEC                    	jmp .L_lambda_simple_params_loop_007a
 20506                                  .L_lambda_simple_params_end_007a:
 20507 0000EBF9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20508 0000EBFC 4889C3                  	mov rbx, rax
 20509 0000EBFF 58                      	pop rax
 20510 0000EC00 C60004                  	mov byte [rax], T_closure
 20511 0000EC03 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20512 0000EC07 48C74009[14EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 20513 0000EC0F E9E2040000              	jmp .L_lambda_simple_end_007a
 20514                                  .L_lambda_simple_code_007a:	; lambda-simple body
 20515 0000EC14 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20516 0000EC1A 740B                    	je .L_lambda_simple_arity_check_ok_007a
 20517 0000EC1C FF742410                	push qword [rsp + 8 * 2]
 20518 0000EC20 6A01                    	push 1
 20519 0000EC22 E987890000              	jmp L_error_incorrect_arity_simple
 20520                                  .L_lambda_simple_arity_check_ok_007a:
 20521 0000EC27 C8000000                	enter 0, 0
 20522                                  	; preparing a tail-call
 20523 0000EC2B 48B8-                   	mov rax, L_constants + 1993
 20523 0000EC2D [C907000000000000] 
 20524 0000EC35 50                      	push rax
 20525 0000EC36 6A01                    	push 1	; arg count
 20526 0000EC38 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20527 0000EC3D E8B3890000              	call malloc
 20528 0000EC42 50                      	push rax
 20529 0000EC43 BF08000000              	mov rdi, 8 * 1	; new rib
 20530 0000EC48 E8A8890000              	call malloc
 20531 0000EC4D 50                      	push rax
 20532 0000EC4E BF20000000              	mov rdi, 8 * 4	; extended env
 20533 0000EC53 E89D890000              	call malloc
 20534 0000EC58 488B7D10                	mov rdi, ENV
 20535 0000EC5C BE00000000              	mov rsi, 0
 20536 0000EC61 BA01000000              	mov rdx, 1
 20537                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 20538 0000EC66 4883FE03                	cmp rsi, 3
 20539 0000EC6A 7410                    	je .L_lambda_simple_env_end_007b
 20540 0000EC6C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20541 0000EC70 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20542 0000EC74 48FFC6                  	inc rsi
 20543 0000EC77 48FFC2                  	inc rdx
 20544 0000EC7A EBEA                    	jmp .L_lambda_simple_env_loop_007b
 20545                                  .L_lambda_simple_env_end_007b:
 20546 0000EC7C 5B                      	pop rbx
 20547 0000EC7D BE00000000              	mov rsi, 0
 20548                                  .L_lambda_simple_params_loop_007b:	; copy params
 20549 0000EC82 4883FE01                	cmp rsi, 1
 20550 0000EC86 740E                    	je .L_lambda_simple_params_end_007b
 20551 0000EC88 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20552 0000EC8D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20553 0000EC91 48FFC6                  	inc rsi
 20554 0000EC94 EBEC                    	jmp .L_lambda_simple_params_loop_007b
 20555                                  .L_lambda_simple_params_end_007b:
 20556 0000EC96 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20557 0000EC99 4889C3                  	mov rbx, rax
 20558 0000EC9C 58                      	pop rax
 20559 0000EC9D C60004                  	mov byte [rax], T_closure
 20560 0000ECA0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20561 0000ECA4 48C74009[B1EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 20562 0000ECAC E9F3030000              	jmp .L_lambda_simple_end_007b
 20563                                  .L_lambda_simple_code_007b:	; lambda-simple body
 20564 0000ECB1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20565 0000ECB7 740B                    	je .L_lambda_simple_arity_check_ok_007b
 20566 0000ECB9 FF742410                	push qword [rsp + 8 * 2]
 20567 0000ECBD 6A01                    	push 1
 20568 0000ECBF E9EA880000              	jmp L_error_incorrect_arity_simple
 20569                                  .L_lambda_simple_arity_check_ok_007b:
 20570 0000ECC4 C8000000                	enter 0, 0
 20571 0000ECC8 BF08000000              	mov rdi, 8*1
 20572 0000ECCD E823890000              	call malloc
 20573 0000ECD2 488B5D20                	mov rbx, PARAM(0)
 20574 0000ECD6 488918                  	mov qword [rax], rbx
 20575 0000ECD9 48894520                	mov PARAM(0), rax
 20576 0000ECDD 48B8-                   	mov rax, sob_void
 20576 0000ECDF [0000000000000000] 
 20577                                  
 20578 0000ECE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20579 0000ECEC E804890000              	call malloc
 20580 0000ECF1 50                      	push rax
 20581 0000ECF2 BF08000000              	mov rdi, 8 * 1	; new rib
 20582 0000ECF7 E8F9880000              	call malloc
 20583 0000ECFC 50                      	push rax
 20584 0000ECFD BF28000000              	mov rdi, 8 * 5	; extended env
 20585 0000ED02 E8EE880000              	call malloc
 20586 0000ED07 488B7D10                	mov rdi, ENV
 20587 0000ED0B BE00000000              	mov rsi, 0
 20588 0000ED10 BA01000000              	mov rdx, 1
 20589                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 20590 0000ED15 4883FE04                	cmp rsi, 4
 20591 0000ED19 7410                    	je .L_lambda_simple_env_end_007c
 20592 0000ED1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20593 0000ED1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20594 0000ED23 48FFC6                  	inc rsi
 20595 0000ED26 48FFC2                  	inc rdx
 20596 0000ED29 EBEA                    	jmp .L_lambda_simple_env_loop_007c
 20597                                  .L_lambda_simple_env_end_007c:
 20598 0000ED2B 5B                      	pop rbx
 20599 0000ED2C BE00000000              	mov rsi, 0
 20600                                  .L_lambda_simple_params_loop_007c:	; copy params
 20601 0000ED31 4883FE01                	cmp rsi, 1
 20602 0000ED35 740E                    	je .L_lambda_simple_params_end_007c
 20603 0000ED37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20604 0000ED3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20605 0000ED40 48FFC6                  	inc rsi
 20606 0000ED43 EBEC                    	jmp .L_lambda_simple_params_loop_007c
 20607                                  .L_lambda_simple_params_end_007c:
 20608 0000ED45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20609 0000ED48 4889C3                  	mov rbx, rax
 20610 0000ED4B 58                      	pop rax
 20611 0000ED4C C60004                  	mov byte [rax], T_closure
 20612 0000ED4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20613 0000ED53 48C74009[60ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 20614 0000ED5B E95C010000              	jmp .L_lambda_simple_end_007c
 20615                                  .L_lambda_simple_code_007c:	; lambda-simple body
 20616 0000ED60 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20617 0000ED66 740B                    	je .L_lambda_simple_arity_check_ok_007c
 20618 0000ED68 FF742410                	push qword [rsp + 8 * 2]
 20619 0000ED6C 6A02                    	push 2
 20620 0000ED6E E93B880000              	jmp L_error_incorrect_arity_simple
 20621                                  .L_lambda_simple_arity_check_ok_007c:
 20622 0000ED73 C8000000                	enter 0, 0
 20623                                  	; preparing a non-tail-call
 20624 0000ED77 488B4528                	mov rax, PARAM(1)	; param strs
 20625 0000ED7B 50                      	push rax
 20626 0000ED7C 6A01                    	push 1	; arg count
 20627 0000ED7E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 20628 0000ED86 803805                  	cmp byte [rax], T_undefined
 20629 0000ED89 0F8439870000            	je L_error_fvar_undefined
 20630 0000ED8F 803804                  	cmp byte [rax], T_closure
 20631 0000ED92 0F85B4870000            	jne L_error_non_closure
 20632 0000ED98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20633 0000ED9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20634 0000ED9E 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 20635 0000EDA4 0F850E010000            	jne .L_or_end_000d; if its not false (true) then we need to return it and not the last element
 20636                                  	; preparing a non-tail-call
 20637                                  	; preparing a non-tail-call
 20638 0000EDAA 488B4528                	mov rax, PARAM(1)	; param strs
 20639 0000EDAE 50                      	push rax
 20640 0000EDAF 6A01                    	push 1	; arg count
 20641 0000EDB1 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20642 0000EDB9 803805                  	cmp byte [rax], T_undefined
 20643 0000EDBC 0F8406870000            	je L_error_fvar_undefined
 20644 0000EDC2 803804                  	cmp byte [rax], T_closure
 20645 0000EDC5 0F8581870000            	jne L_error_non_closure
 20646 0000EDCB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20647 0000EDCE FF5009                  	call SOB_CLOSURE_CODE(rax)
 20648 0000EDD1 50                      	push rax
 20649 0000EDD2 488B4520                	mov rax, PARAM(0)	; param str
 20650 0000EDD6 50                      	push rax
 20651 0000EDD7 6A02                    	push 2	; arg count
 20652 0000EDD9 488B4510                	mov rax, ENV
 20653 0000EDDD 488B4008                	mov rax, qword [rax + 8 * 1]
 20654 0000EDE1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 20655 0000EDE4 803804                  	cmp byte [rax], T_closure
 20656 0000EDE7 0F855F870000            	jne L_error_non_closure
 20657 0000EDED FF7001                  	push SOB_CLOSURE_ENV(rax)
 20658 0000EDF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20659 0000EDF3 483D[02000000]          	cmp rax, sob_boolean_false
 20660 0000EDF9 0F84AF000000            	je .L_if_else_005f
 20661                                  	; preparing a tail-call
 20662                                  	; preparing a non-tail-call
 20663 0000EDFF 488B4528                	mov rax, PARAM(1)	; param strs
 20664 0000EE03 50                      	push rax
 20665 0000EE04 6A01                    	push 1	; arg count
 20666 0000EE06 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20667 0000EE0E 803805                  	cmp byte [rax], T_undefined
 20668 0000EE11 0F84B1860000            	je L_error_fvar_undefined
 20669 0000EE17 803804                  	cmp byte [rax], T_closure
 20670 0000EE1A 0F852C870000            	jne L_error_non_closure
 20671 0000EE20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20672 0000EE23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20673 0000EE26 50                      	push rax
 20674                                  	; preparing a non-tail-call
 20675 0000EE27 488B4528                	mov rax, PARAM(1)	; param strs
 20676 0000EE2B 50                      	push rax
 20677 0000EE2C 6A01                    	push 1	; arg count
 20678 0000EE2E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20679 0000EE36 803805                  	cmp byte [rax], T_undefined
 20680 0000EE39 0F8489860000            	je L_error_fvar_undefined
 20681 0000EE3F 803804                  	cmp byte [rax], T_closure
 20682 0000EE42 0F8504870000            	jne L_error_non_closure
 20683 0000EE48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20684 0000EE4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20685 0000EE4E 50                      	push rax
 20686 0000EE4F 6A02                    	push 2	; arg count
 20687 0000EE51 488B4510                	mov rax, ENV
 20688 0000EE55 488B00                  	mov rax, qword [rax + 8 * 0]
 20689 0000EE58 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20690 0000EE5B 488B00                  	mov rax, qword [rax]
 20691 0000EE5E 803804                  	cmp byte [rax], T_closure
 20692 0000EE61 0F85E5860000            	jne L_error_non_closure
 20693 0000EE67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20694 0000EE6A FF7508                  	push qword [rbp + 8 * 1]
 20695                                   ; old ret addr
 20696 0000EE6D FF7500                  	push qword [rbp]
 20697                                   ; restore the old rbp
 20698 0000EE70 BB02000000              	mov rbx, 2
 20699 0000EE75 4883C303                	add rbx, 3
 20700 0000EE79 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20701 0000EE7D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20702 0000EE82 4C8D4DF8                	lea r9, [rbp - 8]
 20703 0000EE86 B906000000              	mov rcx, 6
 20704                                  .L_tc_recycle_frame_loop_00b3:
 20705 0000EE8B 4883F900                	cmp rcx, 0
 20706 0000EE8F 7413                    	je .L_tc_recycle_frame_done_00b3
 20707 0000EE91 4D8B11                  	mov r10, qword [r9]
 20708 0000EE94 4D8910                  	mov qword [r8], r10
 20709 0000EE97 4983E808                	sub r8, 8
 20710 0000EE9B 4983E908                	sub r9, 8
 20711 0000EE9F 48FFC9                  	dec rcx
 20712 0000EEA2 EBE7                    	jmp .L_tc_recycle_frame_loop_00b3
 20713                                  .L_tc_recycle_frame_done_00b3:
 20714 0000EEA4 498D6008                	lea rsp, [r8 + 8]
 20715 0000EEA8 5D                      	pop rbp ; restore the old rbp
 20716 0000EEA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20717 0000EEAC EB0A                    	jmp .L_if_end_005f
 20718                                  .L_if_else_005f:
 20719 0000EEAE 48B8-                   	mov rax, L_constants + 2
 20719 0000EEB0 [0200000000000000] 
 20720                                  .L_if_end_005f:
 20721                                  .L_or_end_000d:
 20722 0000EEB8 C9                      	leave
 20723 0000EEB9 C22000                  	ret AND_KILL_FRAME(2)
 20724                                  .L_lambda_simple_end_007c:	; new closure is in rax
 20725 0000EEBC 50                      	push rax
 20726 0000EEBD 488B4520                	mov rax, PARAM(0)	; param run
 20727 0000EEC1 8F00                    	pop qword [rax]
 20728 0000EEC3 48B8-                   	mov rax, sob_void
 20728 0000EEC5 [0000000000000000] 
 20729                                  
 20730 0000EECD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20731 0000EED2 E81E870000              	call malloc
 20732 0000EED7 50                      	push rax
 20733 0000EED8 BF08000000              	mov rdi, 8 * 1	; new rib
 20734 0000EEDD E813870000              	call malloc
 20735 0000EEE2 50                      	push rax
 20736 0000EEE3 BF28000000              	mov rdi, 8 * 5	; extended env
 20737 0000EEE8 E808870000              	call malloc
 20738 0000EEED 488B7D10                	mov rdi, ENV
 20739 0000EEF1 4831F6                  	 xor rsi, rsi
 20740 0000EEF4 4831D2                  	 xor rdx, rdx
 20741 0000EEF7 48FFC2                  	inc rdx
 20742                                  .L_lambda_opt_env_loop_0013:	; ext_env[i + 1] <-- env[i]
 20743 0000EEFA 4883FE04                	cmp rsi, 4
 20744 0000EEFE 7410                    	je .L_lambda_opt_env_end_0013
 20745 0000EF00 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20746 0000EF04 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20747 0000EF08 48FFC6                  	inc rsi
 20748 0000EF0B 48FFC2                  	inc rdx
 20749 0000EF0E EBEA                    	jmp .L_lambda_opt_env_loop_0013
 20750                                  .L_lambda_opt_env_end_0013:
 20751 0000EF10 5B                      	pop rbx
 20752 0000EF11 4831F6                  	xor rsi, rsi
 20753                                  .L_lambda_opt_params_loop_0013:	; copy params
 20754 0000EF14 4883FE01                	cmp rsi, 1
 20755 0000EF18 740E                    	je .L_lambda_opt_params_end_0013
 20756 0000EF1A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20757 0000EF1F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20758 0000EF23 48FFC6                  	inc rsi
 20759 0000EF26 EBEC                    	jmp .L_lambda_opt_params_loop_0013
 20760                                  .L_lambda_opt_params_end_0013:
 20761 0000EF28 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20762 0000EF2B 4889C3                  	mov rbx, rax
 20763 0000EF2E 58                      	pop rax
 20764 0000EF2F C60004                  	mov byte [rax], T_closure
 20765 0000EF32 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20766 0000EF36 48C74009[43EF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 20767 0000EF3E E95D010000              	jmp .L_lambda_opt_end_0013
 20768                                  .L_lambda_opt_code_0013:; lambda opt body
 20769 0000EF43 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20770 0000EF49 7409                    	je .L_lambda_opt_arity_check_exact_0013
 20771 0000EF4B 7F57                    	jg .L_lambda_opt_arity_check_more_0013
 20772 0000EF4D 6A01                    	push 1
 20773 0000EF4F E96E860000              	jmp L_error_incorrect_arity_opt
 20774                                  .L_lambda_opt_arity_check_exact_0013:
 20775 0000EF54 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 20776 0000EF58 4C894C24F8              	mov qword [rsp -8], r9
 20777 0000EF5D 4C8B4C2408              	mov r9, qword [rsp +8]
 20778 0000EF62 4C890C24                	mov qword [rsp +8 * 0], r9
 20779 0000EF66 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 20780 0000EF6B 4C89C9                  	mov rcx, r9
 20781 0000EF6E 49FFC1                  	inc r9
 20782 0000EF71 4C894C2408              	mov qword [rsp +8], r9
 20783 0000EF76 4889E2                  	mov rdx, rsp
 20784 0000EF79 4883C218                	add rdx, 24
 20785                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0013:
 20786 0000EF7D 4883F900                	cmp rcx, 0
 20787 0000EF81 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0013
 20788 0000EF83 4C8B02                  	mov r8, qword [rdx]
 20789 0000EF86 4C8942F8                	mov qword [rdx - 8], r8
 20790 0000EF8A 4883C208                	add rdx, 8
 20791 0000EF8E 48FFC9                  	dec rcx
 20792 0000EF91 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0013
 20793                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0013:
 20794 0000EF93 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 20795 0000EF9B 4883EC08                	sub rsp, 8
 20796 0000EF9F E984000000              	jmp .L_lambda_opt_stack_adjusted_0013
 20797                                  .L_lambda_opt_arity_check_more_0013:
 20798 0000EFA4 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 20799 0000EFA9 4D89C4                  	mov r12, r8
 20800 0000EFAC 4C89C1                  	mov rcx, r8
 20801 0000EFAF 4D8D5002                	lea r10, [r8 + 2] 
 20802 0000EFB3 4883E901                	sub rcx, 1
 20803 0000EFB7 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 20804 0000EFBC 49B9-                   	mov r9, sob_nil
 20804 0000EFBE [0100000000000000] 
 20805                                  .L_lambda_opt_create_list_of_opt_params_0013:
 20806 0000EFC6 4883F900                	cmp rcx, 0
 20807 0000EFCA 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0013
 20808 0000EFCC BF11000000              	mov rdi, 17
 20809 0000EFD1 E81F860000              	call malloc
 20810 0000EFD6 C60021                  	mov byte [rax], T_pair
 20811 0000EFD9 498B1B                  	mov rbx, qword [r11]
 20812 0000EFDC 48895801                	mov qword [rax +1], rbx
 20813 0000EFE0 4C894809                	mov qword [rax + 1 + 8], r9
 20814 0000EFE4 4989C1                  	mov r9, rax
 20815 0000EFE7 48FFC9                  	dec rcx
 20816 0000EFEA 4983EB08                	sub r11, 8
 20817 0000EFEE EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0013
 20818                                  .L_lambda_opt_create_list_of_opt_params_end_0013:
 20819 0000EFF0 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 20820 0000EFF5 4D8908                  	mov qword [r8], r9
 20821 0000EFF8 4E8D14D500000000        	lea r10, [8 * r10]
 20822 0000F000 4901E2                  	add r10, rsp
 20823 0000F003 B905000000              	mov rcx, 4 + 1
 20824                                  .L_lambda_opt_stack_shrink_loop_0013:
 20825 0000F008 4883F900                	cmp rcx, 0
 20826 0000F00C 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0013
 20827 0000F00E 4D8B18                  	mov r11, qword [r8]
 20828 0000F011 4D891A                  	mov qword [r10], r11
 20829 0000F014 4983E808                	sub r8, 8
 20830 0000F018 4983EA08                	sub r10, 8
 20831 0000F01C 48FFC9                  	dec rcx
 20832 0000F01F EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 20833                                  .L_lambda_opt_stack_shrink_loop_exit_0013:
 20834 0000F021 4983C208                	add r10, 8
 20835 0000F025 4C89D4                  	mov rsp, r10
 20836                                  .L_lambda_opt_stack_adjusted_0013:;continue with the code, the stack is ok
 20837 0000F028 48C744241002000000      	mov qword [rsp + 8*2], 2
 20838 0000F031 C8000000                	enter 0, 0
 20839                                  	; preparing a tail-call
 20840 0000F035 488B4528                	mov rax, PARAM(1)	; param strs
 20841 0000F039 50                      	push rax
 20842 0000F03A 488B4520                	mov rax, PARAM(0)	; param str
 20843 0000F03E 50                      	push rax
 20844 0000F03F 6A02                    	push 2	; arg count
 20845 0000F041 488B4510                	mov rax, ENV
 20846 0000F045 488B00                  	mov rax, qword [rax + 8 * 0]
 20847 0000F048 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20848 0000F04B 488B00                  	mov rax, qword [rax]
 20849 0000F04E 803804                  	cmp byte [rax], T_closure
 20850 0000F051 0F85F5840000            	jne L_error_non_closure
 20851 0000F057 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20852 0000F05A FF7508                  	push qword [rbp + 8 * 1]
 20853                                   ; old ret addr
 20854 0000F05D FF7500                  	push qword [rbp]
 20855                                   ; restore the old rbp
 20856 0000F060 BB02000000              	mov rbx, 2
 20857 0000F065 4883C303                	add rbx, 3
 20858 0000F069 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20859 0000F06D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20860 0000F072 4C8D4DF8                	lea r9, [rbp - 8]
 20861 0000F076 B906000000              	mov rcx, 6
 20862                                  .L_tc_recycle_frame_loop_00b4:
 20863 0000F07B 4883F900                	cmp rcx, 0
 20864 0000F07F 7413                    	je .L_tc_recycle_frame_done_00b4
 20865 0000F081 4D8B11                  	mov r10, qword [r9]
 20866 0000F084 4D8910                  	mov qword [r8], r10
 20867 0000F087 4983E808                	sub r8, 8
 20868 0000F08B 4983E908                	sub r9, 8
 20869 0000F08F 48FFC9                  	dec rcx
 20870 0000F092 EBE7                    	jmp .L_tc_recycle_frame_loop_00b4
 20871                                  .L_tc_recycle_frame_done_00b4:
 20872 0000F094 498D6008                	lea rsp, [r8 + 8]
 20873 0000F098 5D                      	pop rbp ; restore the old rbp
 20874 0000F099 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20875 0000F09C C9                      	leave
 20876 0000F09D C22000                  	ret 8 * (2 + 2)
 20877                                  .L_lambda_opt_end_0013:	; new closure is in rax
 20878 0000F0A0 C9                      	leave
 20879 0000F0A1 C21800                  	ret AND_KILL_FRAME(1)
 20880                                  .L_lambda_simple_end_007b:	; new closure is in rax
 20881 0000F0A4 803804                  	cmp byte [rax], T_closure
 20882 0000F0A7 0F859F840000            	jne L_error_non_closure
 20883 0000F0AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20884 0000F0B0 FF7508                  	push qword [rbp + 8 * 1]
 20885                                   ; old ret addr
 20886 0000F0B3 FF7500                  	push qword [rbp]
 20887                                   ; restore the old rbp
 20888 0000F0B6 BB01000000              	mov rbx, 1
 20889 0000F0BB 4883C303                	add rbx, 3
 20890 0000F0BF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20891 0000F0C3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20892 0000F0C8 4C8D4DF8                	lea r9, [rbp - 8]
 20893 0000F0CC B905000000              	mov rcx, 5
 20894                                  .L_tc_recycle_frame_loop_00b2:
 20895 0000F0D1 4883F900                	cmp rcx, 0
 20896 0000F0D5 7413                    	je .L_tc_recycle_frame_done_00b2
 20897 0000F0D7 4D8B11                  	mov r10, qword [r9]
 20898 0000F0DA 4D8910                  	mov qword [r8], r10
 20899 0000F0DD 4983E808                	sub r8, 8
 20900 0000F0E1 4983E908                	sub r9, 8
 20901 0000F0E5 48FFC9                  	dec rcx
 20902 0000F0E8 EBE7                    	jmp .L_tc_recycle_frame_loop_00b2
 20903                                  .L_tc_recycle_frame_done_00b2:
 20904 0000F0EA 498D6008                	lea rsp, [r8 + 8]
 20905 0000F0EE 5D                      	pop rbp ; restore the old rbp
 20906 0000F0EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20907 0000F0F2 C9                      	leave
 20908 0000F0F3 C21800                  	ret AND_KILL_FRAME(1)
 20909                                  .L_lambda_simple_end_007a:	; new closure is in rax
 20910 0000F0F6 803804                  	cmp byte [rax], T_closure
 20911 0000F0F9 0F854D840000            	jne L_error_non_closure
 20912 0000F0FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20913 0000F102 FF7508                  	push qword [rbp + 8 * 1]
 20914                                   ; old ret addr
 20915 0000F105 FF7500                  	push qword [rbp]
 20916                                   ; restore the old rbp
 20917 0000F108 BB01000000              	mov rbx, 1
 20918 0000F10D 4883C303                	add rbx, 3
 20919 0000F111 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20920 0000F115 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20921 0000F11A 4C8D4DF8                	lea r9, [rbp - 8]
 20922 0000F11E B905000000              	mov rcx, 5
 20923                                  .L_tc_recycle_frame_loop_00af:
 20924 0000F123 4883F900                	cmp rcx, 0
 20925 0000F127 7413                    	je .L_tc_recycle_frame_done_00af
 20926 0000F129 4D8B11                  	mov r10, qword [r9]
 20927 0000F12C 4D8910                  	mov qword [r8], r10
 20928 0000F12F 4983E808                	sub r8, 8
 20929 0000F133 4983E908                	sub r9, 8
 20930 0000F137 48FFC9                  	dec rcx
 20931 0000F13A EBE7                    	jmp .L_tc_recycle_frame_loop_00af
 20932                                  .L_tc_recycle_frame_done_00af:
 20933 0000F13C 498D6008                	lea rsp, [r8 + 8]
 20934 0000F140 5D                      	pop rbp ; restore the old rbp
 20935 0000F141 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20936 0000F144 C9                      	leave
 20937 0000F145 C21800                  	ret AND_KILL_FRAME(1)
 20938                                  .L_lambda_simple_end_0076:	; new closure is in rax
 20939 0000F148 803804                  	cmp byte [rax], T_closure
 20940 0000F14B 0F85FB830000            	jne L_error_non_closure
 20941 0000F151 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20942 0000F154 FF7508                  	push qword [rbp + 8 * 1]
 20943                                   ; old ret addr
 20944 0000F157 FF7500                  	push qword [rbp]
 20945                                   ; restore the old rbp
 20946 0000F15A BB01000000              	mov rbx, 1
 20947 0000F15F 4883C303                	add rbx, 3
 20948 0000F163 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20949 0000F167 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20950 0000F16C 4C8D4DF8                	lea r9, [rbp - 8]
 20951 0000F170 B905000000              	mov rcx, 5
 20952                                  .L_tc_recycle_frame_loop_00ad:
 20953 0000F175 4883F900                	cmp rcx, 0
 20954 0000F179 7413                    	je .L_tc_recycle_frame_done_00ad
 20955 0000F17B 4D8B11                  	mov r10, qword [r9]
 20956 0000F17E 4D8910                  	mov qword [r8], r10
 20957 0000F181 4983E808                	sub r8, 8
 20958 0000F185 4983E908                	sub r9, 8
 20959 0000F189 48FFC9                  	dec rcx
 20960 0000F18C EBE7                    	jmp .L_tc_recycle_frame_loop_00ad
 20961                                  .L_tc_recycle_frame_done_00ad:
 20962 0000F18E 498D6008                	lea rsp, [r8 + 8]
 20963 0000F192 5D                      	pop rbp ; restore the old rbp
 20964 0000F193 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20965 0000F196 C9                      	leave
 20966 0000F197 C21800                  	ret AND_KILL_FRAME(1)
 20967                                  .L_lambda_simple_end_0075:	; new closure is in rax
 20968 0000F19A 50                      	push rax
 20969 0000F19B 6A01                    	push 1	; arg count
 20970 0000F19D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20971 0000F1A2 E84E840000              	call malloc
 20972 0000F1A7 50                      	push rax
 20973 0000F1A8 BF00000000              	mov rdi, 8 * 0	; new rib
 20974 0000F1AD E843840000              	call malloc
 20975 0000F1B2 50                      	push rax
 20976 0000F1B3 BF08000000              	mov rdi, 8 * 1	; extended env
 20977 0000F1B8 E838840000              	call malloc
 20978 0000F1BD 488B7D10                	mov rdi, ENV
 20979 0000F1C1 BE00000000              	mov rsi, 0
 20980 0000F1C6 BA01000000              	mov rdx, 1
 20981                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 20982 0000F1CB 4883FE00                	cmp rsi, 0
 20983 0000F1CF 7410                    	je .L_lambda_simple_env_end_007d
 20984 0000F1D1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20985 0000F1D5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20986 0000F1D9 48FFC6                  	inc rsi
 20987 0000F1DC 48FFC2                  	inc rdx
 20988 0000F1DF EBEA                    	jmp .L_lambda_simple_env_loop_007d
 20989                                  .L_lambda_simple_env_end_007d:
 20990 0000F1E1 5B                      	pop rbx
 20991 0000F1E2 BE00000000              	mov rsi, 0
 20992                                  .L_lambda_simple_params_loop_007d:	; copy params
 20993 0000F1E7 4883FE00                	cmp rsi, 0
 20994 0000F1EB 740E                    	je .L_lambda_simple_params_end_007d
 20995 0000F1ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20996 0000F1F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20997 0000F1F6 48FFC6                  	inc rsi
 20998 0000F1F9 EBEC                    	jmp .L_lambda_simple_params_loop_007d
 20999                                  .L_lambda_simple_params_end_007d:
 21000 0000F1FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21001 0000F1FE 4889C3                  	mov rbx, rax
 21002 0000F201 58                      	pop rax
 21003 0000F202 C60004                  	mov byte [rax], T_closure
 21004 0000F205 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21005 0000F209 48C74009[16F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 21006 0000F211 E98D000000              	jmp .L_lambda_simple_end_007d
 21007                                  .L_lambda_simple_code_007d:	; lambda-simple body
 21008 0000F216 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21009 0000F21C 740B                    	je .L_lambda_simple_arity_check_ok_007d
 21010 0000F21E FF742410                	push qword [rsp + 8 * 2]
 21011 0000F222 6A01                    	push 1
 21012 0000F224 E985830000              	jmp L_error_incorrect_arity_simple
 21013                                  .L_lambda_simple_arity_check_ok_007d:
 21014 0000F229 C8000000                	enter 0, 0
 21015                                  	; preparing a non-tail-call
 21016 0000F22D 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 21017 0000F235 803805                  	cmp byte [rax], T_undefined
 21018 0000F238 0F848A820000            	je L_error_fvar_undefined
 21019 0000F23E 50                      	push rax
 21020 0000F23F 6A01                    	push 1	; arg count
 21021 0000F241 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21022 0000F245 803804                  	cmp byte [rax], T_closure
 21023 0000F248 0F85FE820000            	jne L_error_non_closure
 21024 0000F24E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21025 0000F251 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21026 0000F254 48890425[BC160000]      	mov qword [free_var_135], rax
 21027 0000F25C 48B8-                   	mov rax, sob_void
 21027 0000F25E [0000000000000000] 
 21028                                  
 21029                                  	; preparing a non-tail-call
 21030 0000F266 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 21031 0000F26E 803805                  	cmp byte [rax], T_undefined
 21032 0000F271 0F8451820000            	je L_error_fvar_undefined
 21033 0000F277 50                      	push rax
 21034 0000F278 6A01                    	push 1	; arg count
 21035 0000F27A 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21036 0000F27E 803804                  	cmp byte [rax], T_closure
 21037 0000F281 0F85C5820000            	jne L_error_non_closure
 21038 0000F287 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21039 0000F28A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21040 0000F28D 48890425[F0150000]      	mov qword [free_var_123], rax
 21041 0000F295 48B8-                   	mov rax, sob_void
 21041 0000F297 [0000000000000000] 
 21042 0000F29F C9                      	leave
 21043 0000F2A0 C21800                  	ret AND_KILL_FRAME(1)
 21044                                  .L_lambda_simple_end_007d:	; new closure is in rax
 21045 0000F2A3 803804                  	cmp byte [rax], T_closure
 21046 0000F2A6 0F85A0820000            	jne L_error_non_closure
 21047 0000F2AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21048 0000F2AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21049                                  
 21050 0000F2B2 4889C7                  	mov rdi, rax
 21051 0000F2B5 E890850000              	call print_sexpr_if_not_void
 21052 0000F2BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21053 0000F2BF E831830000              	call malloc
 21054 0000F2C4 50                      	push rax
 21055 0000F2C5 BF00000000              	mov rdi, 8 * 0	; new rib
 21056 0000F2CA E826830000              	call malloc
 21057 0000F2CF 50                      	push rax
 21058 0000F2D0 BF08000000              	mov rdi, 8 * 1	; extended env
 21059 0000F2D5 E81B830000              	call malloc
 21060 0000F2DA 488B7D10                	mov rdi, ENV
 21061 0000F2DE BE00000000              	mov rsi, 0
 21062 0000F2E3 BA01000000              	mov rdx, 1
 21063                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 21064 0000F2E8 4883FE00                	cmp rsi, 0
 21065 0000F2EC 7410                    	je .L_lambda_simple_env_end_007e
 21066 0000F2EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21067 0000F2F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21068 0000F2F6 48FFC6                  	inc rsi
 21069 0000F2F9 48FFC2                  	inc rdx
 21070 0000F2FC EBEA                    	jmp .L_lambda_simple_env_loop_007e
 21071                                  .L_lambda_simple_env_end_007e:
 21072 0000F2FE 5B                      	pop rbx
 21073 0000F2FF BE00000000              	mov rsi, 0
 21074                                  .L_lambda_simple_params_loop_007e:	; copy params
 21075 0000F304 4883FE00                	cmp rsi, 0
 21076 0000F308 740E                    	je .L_lambda_simple_params_end_007e
 21077 0000F30A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21078 0000F30F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21079 0000F313 48FFC6                  	inc rsi
 21080 0000F316 EBEC                    	jmp .L_lambda_simple_params_loop_007e
 21081                                  .L_lambda_simple_params_end_007e:
 21082 0000F318 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21083 0000F31B 4889C3                  	mov rbx, rax
 21084 0000F31E 58                      	pop rax
 21085 0000F31F C60004                  	mov byte [rax], T_closure
 21086 0000F322 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21087 0000F326 48C74009[33F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 21088 0000F32E E916010000              	jmp .L_lambda_simple_end_007e
 21089                                  .L_lambda_simple_code_007e:	; lambda-simple body
 21090 0000F333 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21091 0000F339 740B                    	je .L_lambda_simple_arity_check_ok_007e
 21092 0000F33B FF742410                	push qword [rsp + 8 * 2]
 21093 0000F33F 6A01                    	push 1
 21094 0000F341 E968820000              	jmp L_error_incorrect_arity_simple
 21095                                  .L_lambda_simple_arity_check_ok_007e:
 21096 0000F346 C8000000                	enter 0, 0
 21097                                  	; preparing a non-tail-call
 21098 0000F34A 488B4520                	mov rax, PARAM(0)	; param e
 21099 0000F34E 50                      	push rax
 21100 0000F34F 6A01                    	push 1	; arg count
 21101 0000F351 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21102 0000F359 803805                  	cmp byte [rax], T_undefined
 21103 0000F35C 0F8466810000            	je L_error_fvar_undefined
 21104 0000F362 803804                  	cmp byte [rax], T_closure
 21105 0000F365 0F85E1810000            	jne L_error_non_closure
 21106 0000F36B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21107 0000F36E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21108 0000F371 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 21109 0000F377 0F85C8000000            	jne .L_or_end_000e; if its not false (true) then we need to return it and not the last element
 21110                                  	; preparing a non-tail-call
 21111 0000F37D 488B4520                	mov rax, PARAM(0)	; param e
 21112 0000F381 50                      	push rax
 21113 0000F382 6A01                    	push 1	; arg count
 21114 0000F384 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21115 0000F38C 803805                  	cmp byte [rax], T_undefined
 21116 0000F38F 0F8433810000            	je L_error_fvar_undefined
 21117 0000F395 803804                  	cmp byte [rax], T_closure
 21118 0000F398 0F85AE810000            	jne L_error_non_closure
 21119 0000F39E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21120 0000F3A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21121 0000F3A4 483D[02000000]          	cmp rax, sob_boolean_false
 21122 0000F3AA 0F848B000000            	je .L_if_else_0060
 21123                                  	; preparing a tail-call
 21124                                  	; preparing a non-tail-call
 21125 0000F3B0 488B4520                	mov rax, PARAM(0)	; param e
 21126 0000F3B4 50                      	push rax
 21127 0000F3B5 6A01                    	push 1	; arg count
 21128 0000F3B7 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21129 0000F3BF 803805                  	cmp byte [rax], T_undefined
 21130 0000F3C2 0F8400810000            	je L_error_fvar_undefined
 21131 0000F3C8 803804                  	cmp byte [rax], T_closure
 21132 0000F3CB 0F857B810000            	jne L_error_non_closure
 21133 0000F3D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21134 0000F3D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21135 0000F3D7 50                      	push rax
 21136 0000F3D8 6A01                    	push 1	; arg count
 21137 0000F3DA 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
 21138 0000F3E2 803805                  	cmp byte [rax], T_undefined
 21139 0000F3E5 0F84DD800000            	je L_error_fvar_undefined
 21140 0000F3EB 803804                  	cmp byte [rax], T_closure
 21141 0000F3EE 0F8558810000            	jne L_error_non_closure
 21142 0000F3F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21143 0000F3F7 FF7508                  	push qword [rbp + 8 * 1]
 21144                                   ; old ret addr
 21145 0000F3FA FF7500                  	push qword [rbp]
 21146                                   ; restore the old rbp
 21147 0000F3FD BB01000000              	mov rbx, 1
 21148 0000F402 4883C303                	add rbx, 3
 21149 0000F406 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21150 0000F40A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21151 0000F40F 4C8D4DF8                	lea r9, [rbp - 8]
 21152 0000F413 B905000000              	mov rcx, 5
 21153                                  .L_tc_recycle_frame_loop_00b5:
 21154 0000F418 4883F900                	cmp rcx, 0
 21155 0000F41C 7413                    	je .L_tc_recycle_frame_done_00b5
 21156 0000F41E 4D8B11                  	mov r10, qword [r9]
 21157 0000F421 4D8910                  	mov qword [r8], r10
 21158 0000F424 4983E808                	sub r8, 8
 21159 0000F428 4983E908                	sub r9, 8
 21160 0000F42C 48FFC9                  	dec rcx
 21161 0000F42F EBE7                    	jmp .L_tc_recycle_frame_loop_00b5
 21162                                  .L_tc_recycle_frame_done_00b5:
 21163 0000F431 498D6008                	lea rsp, [r8 + 8]
 21164 0000F435 5D                      	pop rbp ; restore the old rbp
 21165 0000F436 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21166 0000F439 EB0A                    	jmp .L_if_end_0060
 21167                                  .L_if_else_0060:
 21168 0000F43B 48B8-                   	mov rax, L_constants + 2
 21168 0000F43D [0200000000000000] 
 21169                                  .L_if_end_0060:
 21170                                  .L_or_end_000e:
 21171 0000F445 C9                      	leave
 21172 0000F446 C21800                  	ret AND_KILL_FRAME(1)
 21173                                  .L_lambda_simple_end_007e:	; new closure is in rax
 21174 0000F449 48890425[25140000]      	mov qword [free_var_96], rax
 21175 0000F451 48B8-                   	mov rax, sob_void
 21175 0000F453 [0000000000000000] 
 21176                                  
 21177 0000F45B 4889C7                  	mov rdi, rax
 21178 0000F45E E8E7830000              	call print_sexpr_if_not_void
 21179                                  	; preparing a non-tail-call
 21180 0000F463 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 21181 0000F46B 803805                  	cmp byte [rax], T_undefined
 21182 0000F46E 0F8454800000            	je L_error_fvar_undefined
 21183 0000F474 50                      	push rax
 21184 0000F475 6A01                    	push 1	; arg count
 21185 0000F477 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21186 0000F47C E874810000              	call malloc
 21187 0000F481 50                      	push rax
 21188 0000F482 BF00000000              	mov rdi, 8 * 0	; new rib
 21189 0000F487 E869810000              	call malloc
 21190 0000F48C 50                      	push rax
 21191 0000F48D BF08000000              	mov rdi, 8 * 1	; extended env
 21192 0000F492 E85E810000              	call malloc
 21193 0000F497 488B7D10                	mov rdi, ENV
 21194 0000F49B BE00000000              	mov rsi, 0
 21195 0000F4A0 BA01000000              	mov rdx, 1
 21196                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 21197 0000F4A5 4883FE00                	cmp rsi, 0
 21198 0000F4A9 7410                    	je .L_lambda_simple_env_end_007f
 21199 0000F4AB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21200 0000F4AF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21201 0000F4B3 48FFC6                  	inc rsi
 21202 0000F4B6 48FFC2                  	inc rdx
 21203 0000F4B9 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 21204                                  .L_lambda_simple_env_end_007f:
 21205 0000F4BB 5B                      	pop rbx
 21206 0000F4BC BE00000000              	mov rsi, 0
 21207                                  .L_lambda_simple_params_loop_007f:	; copy params
 21208 0000F4C1 4883FE00                	cmp rsi, 0
 21209 0000F4C5 740E                    	je .L_lambda_simple_params_end_007f
 21210 0000F4C7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21211 0000F4CC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21212 0000F4D0 48FFC6                  	inc rsi
 21213 0000F4D3 EBEC                    	jmp .L_lambda_simple_params_loop_007f
 21214                                  .L_lambda_simple_params_end_007f:
 21215 0000F4D5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21216 0000F4D8 4889C3                  	mov rbx, rax
 21217 0000F4DB 58                      	pop rax
 21218 0000F4DC C60004                  	mov byte [rax], T_closure
 21219 0000F4DF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21220 0000F4E3 48C74009[F0F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 21221 0000F4EB E903040000              	jmp .L_lambda_simple_end_007f
 21222                                  .L_lambda_simple_code_007f:	; lambda-simple body
 21223 0000F4F0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21224 0000F4F6 740B                    	je .L_lambda_simple_arity_check_ok_007f
 21225 0000F4F8 FF742410                	push qword [rsp + 8 * 2]
 21226 0000F4FC 6A01                    	push 1
 21227 0000F4FE E9AB800000              	jmp L_error_incorrect_arity_simple
 21228                                  .L_lambda_simple_arity_check_ok_007f:
 21229 0000F503 C8000000                	enter 0, 0
 21230 0000F507 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21231 0000F50C E8E4800000              	call malloc
 21232 0000F511 50                      	push rax
 21233 0000F512 BF08000000              	mov rdi, 8 * 1	; new rib
 21234 0000F517 E8D9800000              	call malloc
 21235 0000F51C 50                      	push rax
 21236 0000F51D BF10000000              	mov rdi, 8 * 2	; extended env
 21237 0000F522 E8CE800000              	call malloc
 21238 0000F527 488B7D10                	mov rdi, ENV
 21239 0000F52B 4831F6                  	 xor rsi, rsi
 21240 0000F52E 4831D2                  	 xor rdx, rdx
 21241 0000F531 48FFC2                  	inc rdx
 21242                                  .L_lambda_opt_env_loop_0014:	; ext_env[i + 1] <-- env[i]
 21243 0000F534 4883FE01                	cmp rsi, 1
 21244 0000F538 7410                    	je .L_lambda_opt_env_end_0014
 21245 0000F53A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21246 0000F53E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21247 0000F542 48FFC6                  	inc rsi
 21248 0000F545 48FFC2                  	inc rdx
 21249 0000F548 EBEA                    	jmp .L_lambda_opt_env_loop_0014
 21250                                  .L_lambda_opt_env_end_0014:
 21251 0000F54A 5B                      	pop rbx
 21252 0000F54B 4831F6                  	xor rsi, rsi
 21253                                  .L_lambda_opt_params_loop_0014:	; copy params
 21254 0000F54E 4883FE01                	cmp rsi, 1
 21255 0000F552 740E                    	je .L_lambda_opt_params_end_0014
 21256 0000F554 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21257 0000F559 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21258 0000F55D 48FFC6                  	inc rsi
 21259 0000F560 EBEC                    	jmp .L_lambda_opt_params_loop_0014
 21260                                  .L_lambda_opt_params_end_0014:
 21261 0000F562 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21262 0000F565 4889C3                  	mov rbx, rax
 21263 0000F568 58                      	pop rax
 21264 0000F569 C60004                  	mov byte [rax], T_closure
 21265 0000F56C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21266 0000F570 48C74009[7DF50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 21267 0000F578 E972030000              	jmp .L_lambda_opt_end_0014
 21268                                  .L_lambda_opt_code_0014:; lambda opt body
 21269 0000F57D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21270 0000F583 7409                    	je .L_lambda_opt_arity_check_exact_0014
 21271 0000F585 7F57                    	jg .L_lambda_opt_arity_check_more_0014
 21272 0000F587 6A01                    	push 1
 21273 0000F589 E934800000              	jmp L_error_incorrect_arity_opt
 21274                                  .L_lambda_opt_arity_check_exact_0014:
 21275 0000F58E 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 21276 0000F592 4C894C24F8              	mov qword [rsp -8], r9
 21277 0000F597 4C8B4C2408              	mov r9, qword [rsp +8]
 21278 0000F59C 4C890C24                	mov qword [rsp +8 * 0], r9
 21279 0000F5A0 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 21280 0000F5A5 4C89C9                  	mov rcx, r9
 21281 0000F5A8 49FFC1                  	inc r9
 21282 0000F5AB 4C894C2408              	mov qword [rsp +8], r9
 21283 0000F5B0 4889E2                  	mov rdx, rsp
 21284 0000F5B3 4883C218                	add rdx, 24
 21285                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0014:
 21286 0000F5B7 4883F900                	cmp rcx, 0
 21287 0000F5BB 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0014
 21288 0000F5BD 4C8B02                  	mov r8, qword [rdx]
 21289 0000F5C0 4C8942F8                	mov qword [rdx - 8], r8
 21290 0000F5C4 4883C208                	add rdx, 8
 21291 0000F5C8 48FFC9                  	dec rcx
 21292 0000F5CB EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0014
 21293                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0014:
 21294 0000F5CD 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 21295 0000F5D5 4883EC08                	sub rsp, 8
 21296 0000F5D9 E984000000              	jmp .L_lambda_opt_stack_adjusted_0014
 21297                                  .L_lambda_opt_arity_check_more_0014:
 21298 0000F5DE 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21299 0000F5E3 4D89C4                  	mov r12, r8
 21300 0000F5E6 4C89C1                  	mov rcx, r8
 21301 0000F5E9 4D8D5002                	lea r10, [r8 + 2] 
 21302 0000F5ED 4883E901                	sub rcx, 1
 21303 0000F5F1 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 21304 0000F5F6 49B9-                   	mov r9, sob_nil
 21304 0000F5F8 [0100000000000000] 
 21305                                  .L_lambda_opt_create_list_of_opt_params_0014:
 21306 0000F600 4883F900                	cmp rcx, 0
 21307 0000F604 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0014
 21308 0000F606 BF11000000              	mov rdi, 17
 21309 0000F60B E8E57F0000              	call malloc
 21310 0000F610 C60021                  	mov byte [rax], T_pair
 21311 0000F613 498B1B                  	mov rbx, qword [r11]
 21312 0000F616 48895801                	mov qword [rax +1], rbx
 21313 0000F61A 4C894809                	mov qword [rax + 1 + 8], r9
 21314 0000F61E 4989C1                  	mov r9, rax
 21315 0000F621 48FFC9                  	dec rcx
 21316 0000F624 4983EB08                	sub r11, 8
 21317 0000F628 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0014
 21318                                  .L_lambda_opt_create_list_of_opt_params_end_0014:
 21319 0000F62A 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 21320 0000F62F 4D8908                  	mov qword [r8], r9
 21321 0000F632 4E8D14D500000000        	lea r10, [8 * r10]
 21322 0000F63A 4901E2                  	add r10, rsp
 21323 0000F63D B905000000              	mov rcx, 4 + 1
 21324                                  .L_lambda_opt_stack_shrink_loop_0014:
 21325 0000F642 4883F900                	cmp rcx, 0
 21326 0000F646 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0014
 21327 0000F648 4D8B18                  	mov r11, qword [r8]
 21328 0000F64B 4D891A                  	mov qword [r10], r11
 21329 0000F64E 4983E808                	sub r8, 8
 21330 0000F652 4983EA08                	sub r10, 8
 21331 0000F656 48FFC9                  	dec rcx
 21332 0000F659 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 21333                                  .L_lambda_opt_stack_shrink_loop_exit_0014:
 21334 0000F65B 4983C208                	add r10, 8
 21335 0000F65F 4C89D4                  	mov rsp, r10
 21336                                  .L_lambda_opt_stack_adjusted_0014:;continue with the code, the stack is ok
 21337 0000F662 48C744241002000000      	mov qword [rsp + 8*2], 2
 21338 0000F66B C8000000                	enter 0, 0
 21339                                  	; preparing a tail-call
 21340                                  	; preparing a non-tail-call
 21341 0000F66F 488B4528                	mov rax, PARAM(1)	; param xs
 21342 0000F673 50                      	push rax
 21343 0000F674 6A01                    	push 1	; arg count
 21344 0000F676 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21345 0000F67E 803805                  	cmp byte [rax], T_undefined
 21346 0000F681 0F84417E0000            	je L_error_fvar_undefined
 21347 0000F687 803804                  	cmp byte [rax], T_closure
 21348 0000F68A 0F85BC7E0000            	jne L_error_non_closure
 21349 0000F690 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21350 0000F693 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21351 0000F696 483D[02000000]          	cmp rax, sob_boolean_false
 21352 0000F69C 740F                    	je .L_if_else_0063
 21353 0000F69E 48B8-                   	mov rax, L_constants + 0
 21353 0000F6A0 [0000000000000000] 
 21354 0000F6A8 E9EE000000              	jmp .L_if_end_0063
 21355                                  .L_if_else_0063:
 21356                                  	; preparing a non-tail-call
 21357 0000F6AD 488B4528                	mov rax, PARAM(1)	; param xs
 21358 0000F6B1 50                      	push rax
 21359 0000F6B2 6A01                    	push 1	; arg count
 21360 0000F6B4 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21361 0000F6BC 803805                  	cmp byte [rax], T_undefined
 21362 0000F6BF 0F84037E0000            	je L_error_fvar_undefined
 21363 0000F6C5 803804                  	cmp byte [rax], T_closure
 21364 0000F6C8 0F857E7E0000            	jne L_error_non_closure
 21365 0000F6CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 21366 0000F6D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21367 0000F6D4 483D[02000000]          	cmp rax, sob_boolean_false
 21368 0000F6DA 744C                    	je .L_if_else_0061
 21369                                  	; preparing a non-tail-call
 21370                                  	; preparing a non-tail-call
 21371 0000F6DC 488B4528                	mov rax, PARAM(1)	; param xs
 21372 0000F6E0 50                      	push rax
 21373 0000F6E1 6A01                    	push 1	; arg count
 21374 0000F6E3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21375 0000F6EB 803805                  	cmp byte [rax], T_undefined
 21376 0000F6EE 0F84D47D0000            	je L_error_fvar_undefined
 21377 0000F6F4 803804                  	cmp byte [rax], T_closure
 21378 0000F6F7 0F854F7E0000            	jne L_error_non_closure
 21379 0000F6FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 21380 0000F700 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21381 0000F703 50                      	push rax
 21382 0000F704 6A01                    	push 1	; arg count
 21383 0000F706 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21384 0000F70E 803805                  	cmp byte [rax], T_undefined
 21385 0000F711 0F84B17D0000            	je L_error_fvar_undefined
 21386 0000F717 803804                  	cmp byte [rax], T_closure
 21387 0000F71A 0F852C7E0000            	jne L_error_non_closure
 21388 0000F720 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21389 0000F723 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21390 0000F726 EB0A                    	jmp .L_if_end_0061
 21391                                  .L_if_else_0061:
 21392 0000F728 48B8-                   	mov rax, L_constants + 2
 21392 0000F72A [0200000000000000] 
 21393                                  .L_if_end_0061:
 21394 0000F732 483D[02000000]          	cmp rax, sob_boolean_false
 21395 0000F738 7429                    	je .L_if_else_0062
 21396                                  	; preparing a non-tail-call
 21397 0000F73A 488B4528                	mov rax, PARAM(1)	; param xs
 21398 0000F73E 50                      	push rax
 21399 0000F73F 6A01                    	push 1	; arg count
 21400 0000F741 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21401 0000F749 803805                  	cmp byte [rax], T_undefined
 21402 0000F74C 0F84767D0000            	je L_error_fvar_undefined
 21403 0000F752 803804                  	cmp byte [rax], T_closure
 21404 0000F755 0F85F17D0000            	jne L_error_non_closure
 21405 0000F75B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21406 0000F75E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21407 0000F761 EB38                    	jmp .L_if_end_0062
 21408                                  .L_if_else_0062:
 21409                                  	; preparing a non-tail-call
 21410 0000F763 48B8-                   	mov rax, L_constants + 2955
 21410 0000F765 [8B0B000000000000] 
 21411 0000F76D 50                      	push rax
 21412 0000F76E 48B8-                   	mov rax, L_constants + 2946
 21412 0000F770 [820B000000000000] 
 21413 0000F778 50                      	push rax
 21414 0000F779 6A02                    	push 2	; arg count
 21415 0000F77B 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21416 0000F783 803805                  	cmp byte [rax], T_undefined
 21417 0000F786 0F843C7D0000            	je L_error_fvar_undefined
 21418 0000F78C 803804                  	cmp byte [rax], T_closure
 21419 0000F78F 0F85B77D0000            	jne L_error_non_closure
 21420 0000F795 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21421 0000F798 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21422                                  .L_if_end_0062:
 21423                                  .L_if_end_0063:
 21424 0000F79B 50                      	push rax
 21425 0000F79C 6A01                    	push 1	; arg count
 21426 0000F79E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21427 0000F7A3 E84D7E0000              	call malloc
 21428 0000F7A8 50                      	push rax
 21429 0000F7A9 BF10000000              	mov rdi, 8 * 2	; new rib
 21430 0000F7AE E8427E0000              	call malloc
 21431 0000F7B3 50                      	push rax
 21432 0000F7B4 BF18000000              	mov rdi, 8 * 3	; extended env
 21433 0000F7B9 E8377E0000              	call malloc
 21434 0000F7BE 488B7D10                	mov rdi, ENV
 21435 0000F7C2 BE00000000              	mov rsi, 0
 21436 0000F7C7 BA01000000              	mov rdx, 1
 21437                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 21438 0000F7CC 4883FE02                	cmp rsi, 2
 21439 0000F7D0 7410                    	je .L_lambda_simple_env_end_0080
 21440 0000F7D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21441 0000F7D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21442 0000F7DA 48FFC6                  	inc rsi
 21443 0000F7DD 48FFC2                  	inc rdx
 21444 0000F7E0 EBEA                    	jmp .L_lambda_simple_env_loop_0080
 21445                                  .L_lambda_simple_env_end_0080:
 21446 0000F7E2 5B                      	pop rbx
 21447 0000F7E3 BE00000000              	mov rsi, 0
 21448                                  .L_lambda_simple_params_loop_0080:	; copy params
 21449 0000F7E8 4883FE02                	cmp rsi, 2
 21450 0000F7EC 740E                    	je .L_lambda_simple_params_end_0080
 21451 0000F7EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21452 0000F7F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21453 0000F7F7 48FFC6                  	inc rsi
 21454 0000F7FA EBEC                    	jmp .L_lambda_simple_params_loop_0080
 21455                                  .L_lambda_simple_params_end_0080:
 21456 0000F7FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21457 0000F7FF 4889C3                  	mov rbx, rax
 21458 0000F802 58                      	pop rax
 21459 0000F803 C60004                  	mov byte [rax], T_closure
 21460 0000F806 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21461 0000F80A 48C74009[17F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 21462 0000F812 E986000000              	jmp .L_lambda_simple_end_0080
 21463                                  .L_lambda_simple_code_0080:	; lambda-simple body
 21464 0000F817 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21465 0000F81D 740B                    	je .L_lambda_simple_arity_check_ok_0080
 21466 0000F81F FF742410                	push qword [rsp + 8 * 2]
 21467 0000F823 6A01                    	push 1
 21468 0000F825 E9847D0000              	jmp L_error_incorrect_arity_simple
 21469                                  .L_lambda_simple_arity_check_ok_0080:
 21470 0000F82A C8000000                	enter 0, 0
 21471                                  	; preparing a tail-call
 21472 0000F82E 488B4520                	mov rax, PARAM(0)	; param x
 21473 0000F832 50                      	push rax
 21474 0000F833 488B4510                	mov rax, ENV
 21475 0000F837 488B00                  	mov rax, qword [rax + 8 * 0]
 21476 0000F83A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21477 0000F83D 50                      	push rax
 21478 0000F83E 6A02                    	push 2	; arg count
 21479 0000F840 488B4510                	mov rax, ENV
 21480 0000F844 488B4008                	mov rax, qword [rax + 8 * 1]
 21481 0000F848 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21482 0000F84B 803804                  	cmp byte [rax], T_closure
 21483 0000F84E 0F85F87C0000            	jne L_error_non_closure
 21484 0000F854 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21485 0000F857 FF7508                  	push qword [rbp + 8 * 1]
 21486                                   ; old ret addr
 21487 0000F85A FF7500                  	push qword [rbp]
 21488                                   ; restore the old rbp
 21489 0000F85D BB02000000              	mov rbx, 2
 21490 0000F862 4883C303                	add rbx, 3
 21491 0000F866 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21492 0000F86A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21493 0000F86F 4C8D4DF8                	lea r9, [rbp - 8]
 21494 0000F873 B906000000              	mov rcx, 6
 21495                                  .L_tc_recycle_frame_loop_00b7:
 21496 0000F878 4883F900                	cmp rcx, 0
 21497 0000F87C 7413                    	je .L_tc_recycle_frame_done_00b7
 21498 0000F87E 4D8B11                  	mov r10, qword [r9]
 21499 0000F881 4D8910                  	mov qword [r8], r10
 21500 0000F884 4983E808                	sub r8, 8
 21501 0000F888 4983E908                	sub r9, 8
 21502 0000F88C 48FFC9                  	dec rcx
 21503 0000F88F EBE7                    	jmp .L_tc_recycle_frame_loop_00b7
 21504                                  .L_tc_recycle_frame_done_00b7:
 21505 0000F891 498D6008                	lea rsp, [r8 + 8]
 21506 0000F895 5D                      	pop rbp ; restore the old rbp
 21507 0000F896 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21508 0000F899 C9                      	leave
 21509 0000F89A C21800                  	ret AND_KILL_FRAME(1)
 21510                                  .L_lambda_simple_end_0080:	; new closure is in rax
 21511 0000F89D 803804                  	cmp byte [rax], T_closure
 21512 0000F8A0 0F85A67C0000            	jne L_error_non_closure
 21513 0000F8A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21514 0000F8A9 FF7508                  	push qword [rbp + 8 * 1]
 21515                                   ; old ret addr
 21516 0000F8AC FF7500                  	push qword [rbp]
 21517                                   ; restore the old rbp
 21518 0000F8AF BB01000000              	mov rbx, 1
 21519 0000F8B4 4883C303                	add rbx, 3
 21520 0000F8B8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21521 0000F8BC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21522 0000F8C1 4C8D4DF8                	lea r9, [rbp - 8]
 21523 0000F8C5 B905000000              	mov rcx, 5
 21524                                  .L_tc_recycle_frame_loop_00b6:
 21525 0000F8CA 4883F900                	cmp rcx, 0
 21526 0000F8CE 7413                    	je .L_tc_recycle_frame_done_00b6
 21527 0000F8D0 4D8B11                  	mov r10, qword [r9]
 21528 0000F8D3 4D8910                  	mov qword [r8], r10
 21529 0000F8D6 4983E808                	sub r8, 8
 21530 0000F8DA 4983E908                	sub r9, 8
 21531 0000F8DE 48FFC9                  	dec rcx
 21532 0000F8E1 EBE7                    	jmp .L_tc_recycle_frame_loop_00b6
 21533                                  .L_tc_recycle_frame_done_00b6:
 21534 0000F8E3 498D6008                	lea rsp, [r8 + 8]
 21535 0000F8E7 5D                      	pop rbp ; restore the old rbp
 21536 0000F8E8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21537 0000F8EB C9                      	leave
 21538 0000F8EC C22000                  	ret 8 * (2 + 2)
 21539                                  .L_lambda_opt_end_0014:	; new closure is in rax
 21540 0000F8EF C9                      	leave
 21541 0000F8F0 C21800                  	ret AND_KILL_FRAME(1)
 21542                                  .L_lambda_simple_end_007f:	; new closure is in rax
 21543 0000F8F3 803804                  	cmp byte [rax], T_closure
 21544 0000F8F6 0F85507C0000            	jne L_error_non_closure
 21545 0000F8FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21546 0000F8FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21547 0000F902 48890425[7A140000]      	mov qword [free_var_101], rax
 21548 0000F90A 48B8-                   	mov rax, sob_void
 21548 0000F90C [0000000000000000] 
 21549                                  
 21550 0000F914 4889C7                  	mov rdi, rax
 21551 0000F917 E82E7F0000              	call print_sexpr_if_not_void
 21552                                  	; preparing a non-tail-call
 21553 0000F91C 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 21554 0000F924 803805                  	cmp byte [rax], T_undefined
 21555 0000F927 0F849B7B0000            	je L_error_fvar_undefined
 21556 0000F92D 50                      	push rax
 21557 0000F92E 6A01                    	push 1	; arg count
 21558 0000F930 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21559 0000F935 E8BB7C0000              	call malloc
 21560 0000F93A 50                      	push rax
 21561 0000F93B BF00000000              	mov rdi, 8 * 0	; new rib
 21562 0000F940 E8B07C0000              	call malloc
 21563 0000F945 50                      	push rax
 21564 0000F946 BF08000000              	mov rdi, 8 * 1	; extended env
 21565 0000F94B E8A57C0000              	call malloc
 21566 0000F950 488B7D10                	mov rdi, ENV
 21567 0000F954 BE00000000              	mov rsi, 0
 21568 0000F959 BA01000000              	mov rdx, 1
 21569                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 21570 0000F95E 4883FE00                	cmp rsi, 0
 21571 0000F962 7410                    	je .L_lambda_simple_env_end_0081
 21572 0000F964 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21573 0000F968 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21574 0000F96C 48FFC6                  	inc rsi
 21575 0000F96F 48FFC2                  	inc rdx
 21576 0000F972 EBEA                    	jmp .L_lambda_simple_env_loop_0081
 21577                                  .L_lambda_simple_env_end_0081:
 21578 0000F974 5B                      	pop rbx
 21579 0000F975 BE00000000              	mov rsi, 0
 21580                                  .L_lambda_simple_params_loop_0081:	; copy params
 21581 0000F97A 4883FE00                	cmp rsi, 0
 21582 0000F97E 740E                    	je .L_lambda_simple_params_end_0081
 21583 0000F980 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21584 0000F985 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21585 0000F989 48FFC6                  	inc rsi
 21586 0000F98C EBEC                    	jmp .L_lambda_simple_params_loop_0081
 21587                                  .L_lambda_simple_params_end_0081:
 21588 0000F98E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21589 0000F991 4889C3                  	mov rbx, rax
 21590 0000F994 58                      	pop rax
 21591 0000F995 C60004                  	mov byte [rax], T_closure
 21592 0000F998 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21593 0000F99C 48C74009[A9F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 21594 0000F9A4 E903040000              	jmp .L_lambda_simple_end_0081
 21595                                  .L_lambda_simple_code_0081:	; lambda-simple body
 21596 0000F9A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21597 0000F9AF 740B                    	je .L_lambda_simple_arity_check_ok_0081
 21598 0000F9B1 FF742410                	push qword [rsp + 8 * 2]
 21599 0000F9B5 6A01                    	push 1
 21600 0000F9B7 E9F27B0000              	jmp L_error_incorrect_arity_simple
 21601                                  .L_lambda_simple_arity_check_ok_0081:
 21602 0000F9BC C8000000                	enter 0, 0
 21603 0000F9C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21604 0000F9C5 E82B7C0000              	call malloc
 21605 0000F9CA 50                      	push rax
 21606 0000F9CB BF08000000              	mov rdi, 8 * 1	; new rib
 21607 0000F9D0 E8207C0000              	call malloc
 21608 0000F9D5 50                      	push rax
 21609 0000F9D6 BF10000000              	mov rdi, 8 * 2	; extended env
 21610 0000F9DB E8157C0000              	call malloc
 21611 0000F9E0 488B7D10                	mov rdi, ENV
 21612 0000F9E4 4831F6                  	 xor rsi, rsi
 21613 0000F9E7 4831D2                  	 xor rdx, rdx
 21614 0000F9EA 48FFC2                  	inc rdx
 21615                                  .L_lambda_opt_env_loop_0015:	; ext_env[i + 1] <-- env[i]
 21616 0000F9ED 4883FE01                	cmp rsi, 1
 21617 0000F9F1 7410                    	je .L_lambda_opt_env_end_0015
 21618 0000F9F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21619 0000F9F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21620 0000F9FB 48FFC6                  	inc rsi
 21621 0000F9FE 48FFC2                  	inc rdx
 21622 0000FA01 EBEA                    	jmp .L_lambda_opt_env_loop_0015
 21623                                  .L_lambda_opt_env_end_0015:
 21624 0000FA03 5B                      	pop rbx
 21625 0000FA04 4831F6                  	xor rsi, rsi
 21626                                  .L_lambda_opt_params_loop_0015:	; copy params
 21627 0000FA07 4883FE01                	cmp rsi, 1
 21628 0000FA0B 740E                    	je .L_lambda_opt_params_end_0015
 21629 0000FA0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21630 0000FA12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21631 0000FA16 48FFC6                  	inc rsi
 21632 0000FA19 EBEC                    	jmp .L_lambda_opt_params_loop_0015
 21633                                  .L_lambda_opt_params_end_0015:
 21634 0000FA1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21635 0000FA1E 4889C3                  	mov rbx, rax
 21636 0000FA21 58                      	pop rax
 21637 0000FA22 C60004                  	mov byte [rax], T_closure
 21638 0000FA25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21639 0000FA29 48C74009[36FA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 21640 0000FA31 E972030000              	jmp .L_lambda_opt_end_0015
 21641                                  .L_lambda_opt_code_0015:; lambda opt body
 21642 0000FA36 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21643 0000FA3C 7409                    	je .L_lambda_opt_arity_check_exact_0015
 21644 0000FA3E 7F57                    	jg .L_lambda_opt_arity_check_more_0015
 21645 0000FA40 6A01                    	push 1
 21646 0000FA42 E97B7B0000              	jmp L_error_incorrect_arity_opt
 21647                                  .L_lambda_opt_arity_check_exact_0015:
 21648 0000FA47 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 21649 0000FA4B 4C894C24F8              	mov qword [rsp -8], r9
 21650 0000FA50 4C8B4C2408              	mov r9, qword [rsp +8]
 21651 0000FA55 4C890C24                	mov qword [rsp +8 * 0], r9
 21652 0000FA59 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 21653 0000FA5E 4C89C9                  	mov rcx, r9
 21654 0000FA61 49FFC1                  	inc r9
 21655 0000FA64 4C894C2408              	mov qword [rsp +8], r9
 21656 0000FA69 4889E2                  	mov rdx, rsp
 21657 0000FA6C 4883C218                	add rdx, 24
 21658                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0015:
 21659 0000FA70 4883F900                	cmp rcx, 0
 21660 0000FA74 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0015
 21661 0000FA76 4C8B02                  	mov r8, qword [rdx]
 21662 0000FA79 4C8942F8                	mov qword [rdx - 8], r8
 21663 0000FA7D 4883C208                	add rdx, 8
 21664 0000FA81 48FFC9                  	dec rcx
 21665 0000FA84 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0015
 21666                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0015:
 21667 0000FA86 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 21668 0000FA8E 4883EC08                	sub rsp, 8
 21669 0000FA92 E984000000              	jmp .L_lambda_opt_stack_adjusted_0015
 21670                                  .L_lambda_opt_arity_check_more_0015:
 21671 0000FA97 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21672 0000FA9C 4D89C4                  	mov r12, r8
 21673 0000FA9F 4C89C1                  	mov rcx, r8
 21674 0000FAA2 4D8D5002                	lea r10, [r8 + 2] 
 21675 0000FAA6 4883E901                	sub rcx, 1
 21676 0000FAAA 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 21677 0000FAAF 49B9-                   	mov r9, sob_nil
 21677 0000FAB1 [0100000000000000] 
 21678                                  .L_lambda_opt_create_list_of_opt_params_0015:
 21679 0000FAB9 4883F900                	cmp rcx, 0
 21680 0000FABD 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0015
 21681 0000FABF BF11000000              	mov rdi, 17
 21682 0000FAC4 E82C7B0000              	call malloc
 21683 0000FAC9 C60021                  	mov byte [rax], T_pair
 21684 0000FACC 498B1B                  	mov rbx, qword [r11]
 21685 0000FACF 48895801                	mov qword [rax +1], rbx
 21686 0000FAD3 4C894809                	mov qword [rax + 1 + 8], r9
 21687 0000FAD7 4989C1                  	mov r9, rax
 21688 0000FADA 48FFC9                  	dec rcx
 21689 0000FADD 4983EB08                	sub r11, 8
 21690 0000FAE1 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0015
 21691                                  .L_lambda_opt_create_list_of_opt_params_end_0015:
 21692 0000FAE3 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 21693 0000FAE8 4D8908                  	mov qword [r8], r9
 21694 0000FAEB 4E8D14D500000000        	lea r10, [8 * r10]
 21695 0000FAF3 4901E2                  	add r10, rsp
 21696 0000FAF6 B905000000              	mov rcx, 4 + 1
 21697                                  .L_lambda_opt_stack_shrink_loop_0015:
 21698 0000FAFB 4883F900                	cmp rcx, 0
 21699 0000FAFF 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0015
 21700 0000FB01 4D8B18                  	mov r11, qword [r8]
 21701 0000FB04 4D891A                  	mov qword [r10], r11
 21702 0000FB07 4983E808                	sub r8, 8
 21703 0000FB0B 4983EA08                	sub r10, 8
 21704 0000FB0F 48FFC9                  	dec rcx
 21705 0000FB12 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21706                                  .L_lambda_opt_stack_shrink_loop_exit_0015:
 21707 0000FB14 4983C208                	add r10, 8
 21708 0000FB18 4C89D4                  	mov rsp, r10
 21709                                  .L_lambda_opt_stack_adjusted_0015:;continue with the code, the stack is ok
 21710 0000FB1B 48C744241002000000      	mov qword [rsp + 8*2], 2
 21711 0000FB24 C8000000                	enter 0, 0
 21712                                  	; preparing a tail-call
 21713                                  	; preparing a non-tail-call
 21714 0000FB28 488B4528                	mov rax, PARAM(1)	; param chs
 21715 0000FB2C 50                      	push rax
 21716 0000FB2D 6A01                    	push 1	; arg count
 21717 0000FB2F 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21718 0000FB37 803805                  	cmp byte [rax], T_undefined
 21719 0000FB3A 0F8488790000            	je L_error_fvar_undefined
 21720 0000FB40 803804                  	cmp byte [rax], T_closure
 21721 0000FB43 0F85037A0000            	jne L_error_non_closure
 21722 0000FB49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21723 0000FB4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21724 0000FB4F 483D[02000000]          	cmp rax, sob_boolean_false
 21725 0000FB55 740F                    	je .L_if_else_0066
 21726 0000FB57 48B8-                   	mov rax, L_constants + 4
 21726 0000FB59 [0400000000000000] 
 21727 0000FB61 E9EE000000              	jmp .L_if_end_0066
 21728                                  .L_if_else_0066:
 21729                                  	; preparing a non-tail-call
 21730 0000FB66 488B4528                	mov rax, PARAM(1)	; param chs
 21731 0000FB6A 50                      	push rax
 21732 0000FB6B 6A01                    	push 1	; arg count
 21733 0000FB6D 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21734 0000FB75 803805                  	cmp byte [rax], T_undefined
 21735 0000FB78 0F844A790000            	je L_error_fvar_undefined
 21736 0000FB7E 803804                  	cmp byte [rax], T_closure
 21737 0000FB81 0F85C5790000            	jne L_error_non_closure
 21738 0000FB87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21739 0000FB8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21740 0000FB8D 483D[02000000]          	cmp rax, sob_boolean_false
 21741 0000FB93 744C                    	je .L_if_else_0064
 21742                                  	; preparing a non-tail-call
 21743                                  	; preparing a non-tail-call
 21744 0000FB95 488B4528                	mov rax, PARAM(1)	; param chs
 21745 0000FB99 50                      	push rax
 21746 0000FB9A 6A01                    	push 1	; arg count
 21747 0000FB9C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21748 0000FBA4 803805                  	cmp byte [rax], T_undefined
 21749 0000FBA7 0F841B790000            	je L_error_fvar_undefined
 21750 0000FBAD 803804                  	cmp byte [rax], T_closure
 21751 0000FBB0 0F8596790000            	jne L_error_non_closure
 21752 0000FBB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21753 0000FBB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21754 0000FBBC 50                      	push rax
 21755 0000FBBD 6A01                    	push 1	; arg count
 21756 0000FBBF 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21757 0000FBC7 803805                  	cmp byte [rax], T_undefined
 21758 0000FBCA 0F84F8780000            	je L_error_fvar_undefined
 21759 0000FBD0 803804                  	cmp byte [rax], T_closure
 21760 0000FBD3 0F8573790000            	jne L_error_non_closure
 21761 0000FBD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21762 0000FBDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 21763 0000FBDF EB0A                    	jmp .L_if_end_0064
 21764                                  .L_if_else_0064:
 21765 0000FBE1 48B8-                   	mov rax, L_constants + 2
 21765 0000FBE3 [0200000000000000] 
 21766                                  .L_if_end_0064:
 21767 0000FBEB 483D[02000000]          	cmp rax, sob_boolean_false
 21768 0000FBF1 7429                    	je .L_if_else_0065
 21769                                  	; preparing a non-tail-call
 21770 0000FBF3 488B4528                	mov rax, PARAM(1)	; param chs
 21771 0000FBF7 50                      	push rax
 21772 0000FBF8 6A01                    	push 1	; arg count
 21773 0000FBFA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21774 0000FC02 803805                  	cmp byte [rax], T_undefined
 21775 0000FC05 0F84BD780000            	je L_error_fvar_undefined
 21776 0000FC0B 803804                  	cmp byte [rax], T_closure
 21777 0000FC0E 0F8538790000            	jne L_error_non_closure
 21778 0000FC14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21779 0000FC17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21780 0000FC1A EB38                    	jmp .L_if_end_0065
 21781                                  .L_if_else_0065:
 21782                                  	; preparing a non-tail-call
 21783 0000FC1C 48B8-                   	mov rax, L_constants + 3016
 21783 0000FC1E [C80B000000000000] 
 21784 0000FC26 50                      	push rax
 21785 0000FC27 48B8-                   	mov rax, L_constants + 3007
 21785 0000FC29 [BF0B000000000000] 
 21786 0000FC31 50                      	push rax
 21787 0000FC32 6A02                    	push 2	; arg count
 21788 0000FC34 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21789 0000FC3C 803805                  	cmp byte [rax], T_undefined
 21790 0000FC3F 0F8483780000            	je L_error_fvar_undefined
 21791 0000FC45 803804                  	cmp byte [rax], T_closure
 21792 0000FC48 0F85FE780000            	jne L_error_non_closure
 21793 0000FC4E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21794 0000FC51 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21795                                  .L_if_end_0065:
 21796                                  .L_if_end_0066:
 21797 0000FC54 50                      	push rax
 21798 0000FC55 6A01                    	push 1	; arg count
 21799 0000FC57 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21800 0000FC5C E894790000              	call malloc
 21801 0000FC61 50                      	push rax
 21802 0000FC62 BF10000000              	mov rdi, 8 * 2	; new rib
 21803 0000FC67 E889790000              	call malloc
 21804 0000FC6C 50                      	push rax
 21805 0000FC6D BF18000000              	mov rdi, 8 * 3	; extended env
 21806 0000FC72 E87E790000              	call malloc
 21807 0000FC77 488B7D10                	mov rdi, ENV
 21808 0000FC7B BE00000000              	mov rsi, 0
 21809 0000FC80 BA01000000              	mov rdx, 1
 21810                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 21811 0000FC85 4883FE02                	cmp rsi, 2
 21812 0000FC89 7410                    	je .L_lambda_simple_env_end_0082
 21813 0000FC8B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21814 0000FC8F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21815 0000FC93 48FFC6                  	inc rsi
 21816 0000FC96 48FFC2                  	inc rdx
 21817 0000FC99 EBEA                    	jmp .L_lambda_simple_env_loop_0082
 21818                                  .L_lambda_simple_env_end_0082:
 21819 0000FC9B 5B                      	pop rbx
 21820 0000FC9C BE00000000              	mov rsi, 0
 21821                                  .L_lambda_simple_params_loop_0082:	; copy params
 21822 0000FCA1 4883FE02                	cmp rsi, 2
 21823 0000FCA5 740E                    	je .L_lambda_simple_params_end_0082
 21824 0000FCA7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21825 0000FCAC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21826 0000FCB0 48FFC6                  	inc rsi
 21827 0000FCB3 EBEC                    	jmp .L_lambda_simple_params_loop_0082
 21828                                  .L_lambda_simple_params_end_0082:
 21829 0000FCB5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21830 0000FCB8 4889C3                  	mov rbx, rax
 21831 0000FCBB 58                      	pop rax
 21832 0000FCBC C60004                  	mov byte [rax], T_closure
 21833 0000FCBF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21834 0000FCC3 48C74009[D0FC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 21835 0000FCCB E986000000              	jmp .L_lambda_simple_end_0082
 21836                                  .L_lambda_simple_code_0082:	; lambda-simple body
 21837 0000FCD0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21838 0000FCD6 740B                    	je .L_lambda_simple_arity_check_ok_0082
 21839 0000FCD8 FF742410                	push qword [rsp + 8 * 2]
 21840 0000FCDC 6A01                    	push 1
 21841 0000FCDE E9CB780000              	jmp L_error_incorrect_arity_simple
 21842                                  .L_lambda_simple_arity_check_ok_0082:
 21843 0000FCE3 C8000000                	enter 0, 0
 21844                                  	; preparing a tail-call
 21845 0000FCE7 488B4520                	mov rax, PARAM(0)	; param ch
 21846 0000FCEB 50                      	push rax
 21847 0000FCEC 488B4510                	mov rax, ENV
 21848 0000FCF0 488B00                  	mov rax, qword [rax + 8 * 0]
 21849 0000FCF3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21850 0000FCF6 50                      	push rax
 21851 0000FCF7 6A02                    	push 2	; arg count
 21852 0000FCF9 488B4510                	mov rax, ENV
 21853 0000FCFD 488B4008                	mov rax, qword [rax + 8 * 1]
 21854 0000FD01 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 21855 0000FD04 803804                  	cmp byte [rax], T_closure
 21856 0000FD07 0F853F780000            	jne L_error_non_closure
 21857 0000FD0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21858 0000FD10 FF7508                  	push qword [rbp + 8 * 1]
 21859                                   ; old ret addr
 21860 0000FD13 FF7500                  	push qword [rbp]
 21861                                   ; restore the old rbp
 21862 0000FD16 BB02000000              	mov rbx, 2
 21863 0000FD1B 4883C303                	add rbx, 3
 21864 0000FD1F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21865 0000FD23 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21866 0000FD28 4C8D4DF8                	lea r9, [rbp - 8]
 21867 0000FD2C B906000000              	mov rcx, 6
 21868                                  .L_tc_recycle_frame_loop_00b9:
 21869 0000FD31 4883F900                	cmp rcx, 0
 21870 0000FD35 7413                    	je .L_tc_recycle_frame_done_00b9
 21871 0000FD37 4D8B11                  	mov r10, qword [r9]
 21872 0000FD3A 4D8910                  	mov qword [r8], r10
 21873 0000FD3D 4983E808                	sub r8, 8
 21874 0000FD41 4983E908                	sub r9, 8
 21875 0000FD45 48FFC9                  	dec rcx
 21876 0000FD48 EBE7                    	jmp .L_tc_recycle_frame_loop_00b9
 21877                                  .L_tc_recycle_frame_done_00b9:
 21878 0000FD4A 498D6008                	lea rsp, [r8 + 8]
 21879 0000FD4E 5D                      	pop rbp ; restore the old rbp
 21880 0000FD4F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21881 0000FD52 C9                      	leave
 21882 0000FD53 C21800                  	ret AND_KILL_FRAME(1)
 21883                                  .L_lambda_simple_end_0082:	; new closure is in rax
 21884 0000FD56 803804                  	cmp byte [rax], T_closure
 21885 0000FD59 0F85ED770000            	jne L_error_non_closure
 21886 0000FD5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21887 0000FD62 FF7508                  	push qword [rbp + 8 * 1]
 21888                                   ; old ret addr
 21889 0000FD65 FF7500                  	push qword [rbp]
 21890                                   ; restore the old rbp
 21891 0000FD68 BB01000000              	mov rbx, 1
 21892 0000FD6D 4883C303                	add rbx, 3
 21893 0000FD71 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21894 0000FD75 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21895 0000FD7A 4C8D4DF8                	lea r9, [rbp - 8]
 21896 0000FD7E B905000000              	mov rcx, 5
 21897                                  .L_tc_recycle_frame_loop_00b8:
 21898 0000FD83 4883F900                	cmp rcx, 0
 21899 0000FD87 7413                    	je .L_tc_recycle_frame_done_00b8
 21900 0000FD89 4D8B11                  	mov r10, qword [r9]
 21901 0000FD8C 4D8910                  	mov qword [r8], r10
 21902 0000FD8F 4983E808                	sub r8, 8
 21903 0000FD93 4983E908                	sub r9, 8
 21904 0000FD97 48FFC9                  	dec rcx
 21905 0000FD9A EBE7                    	jmp .L_tc_recycle_frame_loop_00b8
 21906                                  .L_tc_recycle_frame_done_00b8:
 21907 0000FD9C 498D6008                	lea rsp, [r8 + 8]
 21908 0000FDA0 5D                      	pop rbp ; restore the old rbp
 21909 0000FDA1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21910 0000FDA4 C9                      	leave
 21911 0000FDA5 C22000                  	ret 8 * (2 + 2)
 21912                                  .L_lambda_opt_end_0015:	; new closure is in rax
 21913 0000FDA8 C9                      	leave
 21914 0000FDA9 C21800                  	ret AND_KILL_FRAME(1)
 21915                                  .L_lambda_simple_end_0081:	; new closure is in rax
 21916 0000FDAC 803804                  	cmp byte [rax], T_closure
 21917 0000FDAF 0F8597770000            	jne L_error_non_closure
 21918 0000FDB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21919 0000FDB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21920 0000FDBB 48890425[58140000]      	mov qword [free_var_99], rax
 21921 0000FDC3 48B8-                   	mov rax, sob_void
 21921 0000FDC5 [0000000000000000] 
 21922                                  
 21923 0000FDCD 4889C7                  	mov rdi, rax
 21924 0000FDD0 E8757A0000              	call print_sexpr_if_not_void
 21925                                  	; preparing a non-tail-call
 21926 0000FDD5 48B8-                   	mov rax, L_constants + 1993
 21926 0000FDD7 [C907000000000000] 
 21927 0000FDDF 50                      	push rax
 21928 0000FDE0 6A01                    	push 1	; arg count
 21929 0000FDE2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21930 0000FDE7 E809780000              	call malloc
 21931 0000FDEC 50                      	push rax
 21932 0000FDED BF00000000              	mov rdi, 8 * 0	; new rib
 21933 0000FDF2 E8FE770000              	call malloc
 21934 0000FDF7 50                      	push rax
 21935 0000FDF8 BF08000000              	mov rdi, 8 * 1	; extended env
 21936 0000FDFD E8F3770000              	call malloc
 21937 0000FE02 488B7D10                	mov rdi, ENV
 21938 0000FE06 BE00000000              	mov rsi, 0
 21939 0000FE0B BA01000000              	mov rdx, 1
 21940                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 21941 0000FE10 4883FE00                	cmp rsi, 0
 21942 0000FE14 7410                    	je .L_lambda_simple_env_end_0083
 21943 0000FE16 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21944 0000FE1A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21945 0000FE1E 48FFC6                  	inc rsi
 21946 0000FE21 48FFC2                  	inc rdx
 21947 0000FE24 EBEA                    	jmp .L_lambda_simple_env_loop_0083
 21948                                  .L_lambda_simple_env_end_0083:
 21949 0000FE26 5B                      	pop rbx
 21950 0000FE27 BE00000000              	mov rsi, 0
 21951                                  .L_lambda_simple_params_loop_0083:	; copy params
 21952 0000FE2C 4883FE00                	cmp rsi, 0
 21953 0000FE30 740E                    	je .L_lambda_simple_params_end_0083
 21954 0000FE32 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21955 0000FE37 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21956 0000FE3B 48FFC6                  	inc rsi
 21957 0000FE3E EBEC                    	jmp .L_lambda_simple_params_loop_0083
 21958                                  .L_lambda_simple_params_end_0083:
 21959 0000FE40 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21960 0000FE43 4889C3                  	mov rbx, rax
 21961 0000FE46 58                      	pop rax
 21962 0000FE47 C60004                  	mov byte [rax], T_closure
 21963 0000FE4A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21964 0000FE4E 48C74009[5BFE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 21965 0000FE56 E948040000              	jmp .L_lambda_simple_end_0083
 21966                                  .L_lambda_simple_code_0083:	; lambda-simple body
 21967 0000FE5B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21968 0000FE61 740B                    	je .L_lambda_simple_arity_check_ok_0083
 21969 0000FE63 FF742410                	push qword [rsp + 8 * 2]
 21970 0000FE67 6A01                    	push 1
 21971 0000FE69 E940770000              	jmp L_error_incorrect_arity_simple
 21972                                  .L_lambda_simple_arity_check_ok_0083:
 21973 0000FE6E C8000000                	enter 0, 0
 21974 0000FE72 BF08000000              	mov rdi, 8*1
 21975 0000FE77 E879770000              	call malloc
 21976 0000FE7C 488B5D20                	mov rbx, PARAM(0)
 21977 0000FE80 488918                  	mov qword [rax], rbx
 21978 0000FE83 48894520                	mov PARAM(0), rax
 21979 0000FE87 48B8-                   	mov rax, sob_void
 21979 0000FE89 [0000000000000000] 
 21980                                  
 21981 0000FE91 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21982 0000FE96 E85A770000              	call malloc
 21983 0000FE9B 50                      	push rax
 21984 0000FE9C BF08000000              	mov rdi, 8 * 1	; new rib
 21985 0000FEA1 E84F770000              	call malloc
 21986 0000FEA6 50                      	push rax
 21987 0000FEA7 BF10000000              	mov rdi, 8 * 2	; extended env
 21988 0000FEAC E844770000              	call malloc
 21989 0000FEB1 488B7D10                	mov rdi, ENV
 21990 0000FEB5 BE00000000              	mov rsi, 0
 21991 0000FEBA BA01000000              	mov rdx, 1
 21992                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 21993 0000FEBF 4883FE01                	cmp rsi, 1
 21994 0000FEC3 7410                    	je .L_lambda_simple_env_end_0084
 21995 0000FEC5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21996 0000FEC9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21997 0000FECD 48FFC6                  	inc rsi
 21998 0000FED0 48FFC2                  	inc rdx
 21999 0000FED3 EBEA                    	jmp .L_lambda_simple_env_loop_0084
 22000                                  .L_lambda_simple_env_end_0084:
 22001 0000FED5 5B                      	pop rbx
 22002 0000FED6 BE00000000              	mov rsi, 0
 22003                                  .L_lambda_simple_params_loop_0084:	; copy params
 22004 0000FEDB 4883FE01                	cmp rsi, 1
 22005 0000FEDF 740E                    	je .L_lambda_simple_params_end_0084
 22006 0000FEE1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22007 0000FEE6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22008 0000FEEA 48FFC6                  	inc rsi
 22009 0000FEED EBEC                    	jmp .L_lambda_simple_params_loop_0084
 22010                                  .L_lambda_simple_params_end_0084:
 22011 0000FEEF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22012 0000FEF2 4889C3                  	mov rbx, rax
 22013 0000FEF5 58                      	pop rax
 22014 0000FEF6 C60004                  	mov byte [rax], T_closure
 22015 0000FEF9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22016 0000FEFD 48C74009[0AFF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 22017 0000FF05 E983020000              	jmp .L_lambda_simple_end_0084
 22018                                  .L_lambda_simple_code_0084:	; lambda-simple body
 22019 0000FF0A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22020 0000FF10 740B                    	je .L_lambda_simple_arity_check_ok_0084
 22021 0000FF12 FF742410                	push qword [rsp + 8 * 2]
 22022 0000FF16 6A02                    	push 2
 22023 0000FF18 E991760000              	jmp L_error_incorrect_arity_simple
 22024                                  .L_lambda_simple_arity_check_ok_0084:
 22025 0000FF1D C8000000                	enter 0, 0
 22026                                  	; preparing a non-tail-call
 22027 0000FF21 488B4520                	mov rax, PARAM(0)	; param s
 22028 0000FF25 50                      	push rax
 22029 0000FF26 6A01                    	push 1	; arg count
 22030 0000FF28 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22031 0000FF30 803805                  	cmp byte [rax], T_undefined
 22032 0000FF33 0F848F750000            	je L_error_fvar_undefined
 22033 0000FF39 803804                  	cmp byte [rax], T_closure
 22034 0000FF3C 0F850A760000            	jne L_error_non_closure
 22035 0000FF42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22036 0000FF45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22037 0000FF48 483D[02000000]          	cmp rax, sob_boolean_false
 22038 0000FF4E 7476                    	je .L_if_else_0067
 22039                                  	; preparing a tail-call
 22040 0000FF50 48B8-                   	mov rax, L_constants + 0
 22040 0000FF52 [0000000000000000] 
 22041 0000FF5A 50                      	push rax
 22042 0000FF5B 488B4528                	mov rax, PARAM(1)	; param i
 22043 0000FF5F 50                      	push rax
 22044 0000FF60 6A02                    	push 2	; arg count
 22045 0000FF62 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 22046 0000FF6A 803805                  	cmp byte [rax], T_undefined
 22047 0000FF6D 0F8455750000            	je L_error_fvar_undefined
 22048 0000FF73 803804                  	cmp byte [rax], T_closure
 22049 0000FF76 0F85D0750000            	jne L_error_non_closure
 22050 0000FF7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22051 0000FF7F FF7508                  	push qword [rbp + 8 * 1]
 22052                                   ; old ret addr
 22053 0000FF82 FF7500                  	push qword [rbp]
 22054                                   ; restore the old rbp
 22055 0000FF85 BB02000000              	mov rbx, 2
 22056 0000FF8A 4883C303                	add rbx, 3
 22057 0000FF8E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22058 0000FF92 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22059 0000FF97 4C8D4DF8                	lea r9, [rbp - 8]
 22060 0000FF9B B906000000              	mov rcx, 6
 22061                                  .L_tc_recycle_frame_loop_00ba:
 22062 0000FFA0 4883F900                	cmp rcx, 0
 22063 0000FFA4 7413                    	je .L_tc_recycle_frame_done_00ba
 22064 0000FFA6 4D8B11                  	mov r10, qword [r9]
 22065 0000FFA9 4D8910                  	mov qword [r8], r10
 22066 0000FFAC 4983E808                	sub r8, 8
 22067 0000FFB0 4983E908                	sub r9, 8
 22068 0000FFB4 48FFC9                  	dec rcx
 22069 0000FFB7 EBE7                    	jmp .L_tc_recycle_frame_loop_00ba
 22070                                  .L_tc_recycle_frame_done_00ba:
 22071 0000FFB9 498D6008                	lea rsp, [r8 + 8]
 22072 0000FFBD 5D                      	pop rbp ; restore the old rbp
 22073 0000FFBE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22074 0000FFC1 E9C3010000              	jmp .L_if_end_0067
 22075                                  .L_if_else_0067:
 22076                                  	; preparing a tail-call
 22077                                  	; preparing a non-tail-call
 22078                                  	; preparing a non-tail-call
 22079 0000FFC6 48B8-                   	mov rax, L_constants + 2270
 22079 0000FFC8 [DE08000000000000] 
 22080 0000FFD0 50                      	push rax
 22081 0000FFD1 488B4528                	mov rax, PARAM(1)	; param i
 22082 0000FFD5 50                      	push rax
 22083 0000FFD6 6A02                    	push 2	; arg count
 22084 0000FFD8 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22085 0000FFE0 803805                  	cmp byte [rax], T_undefined
 22086 0000FFE3 0F84DF740000            	je L_error_fvar_undefined
 22087 0000FFE9 803804                  	cmp byte [rax], T_closure
 22088 0000FFEC 0F855A750000            	jne L_error_non_closure
 22089 0000FFF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22090 0000FFF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22091 0000FFF8 50                      	push rax
 22092                                  	; preparing a non-tail-call
 22093 0000FFF9 488B4520                	mov rax, PARAM(0)	; param s
 22094 0000FFFD 50                      	push rax
 22095 0000FFFE 6A01                    	push 1	; arg count
 22096 00010000 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22097 00010008 803805                  	cmp byte [rax], T_undefined
 22098 0001000B 0F84B7740000            	je L_error_fvar_undefined
 22099 00010011 803804                  	cmp byte [rax], T_closure
 22100 00010014 0F8532750000            	jne L_error_non_closure
 22101 0001001A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22102 0001001D FF5009                  	call SOB_CLOSURE_CODE(rax)
 22103 00010020 50                      	push rax
 22104 00010021 6A02                    	push 2	; arg count
 22105 00010023 488B4510                	mov rax, ENV
 22106 00010027 488B00                  	mov rax, qword [rax + 8 * 0]
 22107 0001002A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22108 0001002D 488B00                  	mov rax, qword [rax]
 22109 00010030 803804                  	cmp byte [rax], T_closure
 22110 00010033 0F8513750000            	jne L_error_non_closure
 22111 00010039 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22112 0001003C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22113 0001003F 50                      	push rax
 22114 00010040 6A01                    	push 1	; arg count
 22115 00010042 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22116 00010047 E8A9750000              	call malloc
 22117 0001004C 50                      	push rax
 22118 0001004D BF10000000              	mov rdi, 8 * 2	; new rib
 22119 00010052 E89E750000              	call malloc
 22120 00010057 50                      	push rax
 22121 00010058 BF18000000              	mov rdi, 8 * 3	; extended env
 22122 0001005D E893750000              	call malloc
 22123 00010062 488B7D10                	mov rdi, ENV
 22124 00010066 BE00000000              	mov rsi, 0
 22125 0001006B BA01000000              	mov rdx, 1
 22126                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 22127 00010070 4883FE02                	cmp rsi, 2
 22128 00010074 7410                    	je .L_lambda_simple_env_end_0085
 22129 00010076 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22130 0001007A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22131 0001007E 48FFC6                  	inc rsi
 22132 00010081 48FFC2                  	inc rdx
 22133 00010084 EBEA                    	jmp .L_lambda_simple_env_loop_0085
 22134                                  .L_lambda_simple_env_end_0085:
 22135 00010086 5B                      	pop rbx
 22136 00010087 BE00000000              	mov rsi, 0
 22137                                  .L_lambda_simple_params_loop_0085:	; copy params
 22138 0001008C 4883FE02                	cmp rsi, 2
 22139 00010090 740E                    	je .L_lambda_simple_params_end_0085
 22140 00010092 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22141 00010097 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22142 0001009B 48FFC6                  	inc rsi
 22143 0001009E EBEC                    	jmp .L_lambda_simple_params_loop_0085
 22144                                  .L_lambda_simple_params_end_0085:
 22145 000100A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22146 000100A3 4889C3                  	mov rbx, rax
 22147 000100A6 58                      	pop rax
 22148 000100A7 C60004                  	mov byte [rax], T_closure
 22149 000100AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22150 000100AE 48C74009[BB000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 22151 000100B6 E980000000              	jmp .L_lambda_simple_end_0085
 22152                                  .L_lambda_simple_code_0085:	; lambda-simple body
 22153 000100BB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22154 000100C1 740B                    	je .L_lambda_simple_arity_check_ok_0085
 22155 000100C3 FF742410                	push qword [rsp + 8 * 2]
 22156 000100C7 6A01                    	push 1
 22157 000100C9 E9E0740000              	jmp L_error_incorrect_arity_simple
 22158                                  .L_lambda_simple_arity_check_ok_0085:
 22159 000100CE C8000000                	enter 0, 0
 22160                                  	; preparing a non-tail-call
 22161                                  	; preparing a non-tail-call
 22162 000100D2 488B4510                	mov rax, ENV
 22163 000100D6 488B00                  	mov rax, qword [rax + 8 * 0]
 22164 000100D9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22165 000100DC 50                      	push rax
 22166 000100DD 6A01                    	push 1	; arg count
 22167 000100DF 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22168 000100E7 803805                  	cmp byte [rax], T_undefined
 22169 000100EA 0F84D8730000            	je L_error_fvar_undefined
 22170 000100F0 803804                  	cmp byte [rax], T_closure
 22171 000100F3 0F8553740000            	jne L_error_non_closure
 22172 000100F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22173 000100FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22174 000100FF 50                      	push rax
 22175 00010100 488B4510                	mov rax, ENV
 22176 00010104 488B00                  	mov rax, qword [rax + 8 * 0]
 22177 00010107 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22178 0001010B 50                      	push rax
 22179 0001010C 488B4520                	mov rax, PARAM(0)	; param v
 22180 00010110 50                      	push rax
 22181 00010111 6A03                    	push 3	; arg count
 22182 00010113 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 22183 0001011B 803805                  	cmp byte [rax], T_undefined
 22184 0001011E 0F84A4730000            	je L_error_fvar_undefined
 22185 00010124 803804                  	cmp byte [rax], T_closure
 22186 00010127 0F851F740000            	jne L_error_non_closure
 22187 0001012D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22188 00010130 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22189                                  
 22190 00010133 488B4520                	mov rax, PARAM(0)	; param v
 22191 00010137 C9                      	leave
 22192 00010138 C21800                  	ret AND_KILL_FRAME(1)
 22193                                  .L_lambda_simple_end_0085:	; new closure is in rax
 22194 0001013B 803804                  	cmp byte [rax], T_closure
 22195 0001013E 0F8508740000            	jne L_error_non_closure
 22196 00010144 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22197 00010147 FF7508                  	push qword [rbp + 8 * 1]
 22198                                   ; old ret addr
 22199 0001014A FF7500                  	push qword [rbp]
 22200                                   ; restore the old rbp
 22201 0001014D BB01000000              	mov rbx, 1
 22202 00010152 4883C303                	add rbx, 3
 22203 00010156 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22204 0001015A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22205 0001015F 4C8D4DF8                	lea r9, [rbp - 8]
 22206 00010163 B905000000              	mov rcx, 5
 22207                                  .L_tc_recycle_frame_loop_00bb:
 22208 00010168 4883F900                	cmp rcx, 0
 22209 0001016C 7413                    	je .L_tc_recycle_frame_done_00bb
 22210 0001016E 4D8B11                  	mov r10, qword [r9]
 22211 00010171 4D8910                  	mov qword [r8], r10
 22212 00010174 4983E808                	sub r8, 8
 22213 00010178 4983E908                	sub r9, 8
 22214 0001017C 48FFC9                  	dec rcx
 22215 0001017F EBE7                    	jmp .L_tc_recycle_frame_loop_00bb
 22216                                  .L_tc_recycle_frame_done_00bb:
 22217 00010181 498D6008                	lea rsp, [r8 + 8]
 22218 00010185 5D                      	pop rbp ; restore the old rbp
 22219 00010186 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22220                                  .L_if_end_0067:
 22221 00010189 C9                      	leave
 22222 0001018A C22000                  	ret AND_KILL_FRAME(2)
 22223                                  .L_lambda_simple_end_0084:	; new closure is in rax
 22224 0001018D 50                      	push rax
 22225 0001018E 488B4520                	mov rax, PARAM(0)	; param run
 22226 00010192 8F00                    	pop qword [rax]
 22227 00010194 48B8-                   	mov rax, sob_void
 22227 00010196 [0000000000000000] 
 22228                                  
 22229 0001019E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22230 000101A3 E84D740000              	call malloc
 22231 000101A8 50                      	push rax
 22232 000101A9 BF08000000              	mov rdi, 8 * 1	; new rib
 22233 000101AE E842740000              	call malloc
 22234 000101B3 50                      	push rax
 22235 000101B4 BF10000000              	mov rdi, 8 * 2	; extended env
 22236 000101B9 E837740000              	call malloc
 22237 000101BE 488B7D10                	mov rdi, ENV
 22238 000101C2 BE00000000              	mov rsi, 0
 22239 000101C7 BA01000000              	mov rdx, 1
 22240                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 22241 000101CC 4883FE01                	cmp rsi, 1
 22242 000101D0 7410                    	je .L_lambda_simple_env_end_0086
 22243 000101D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22244 000101D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22245 000101DA 48FFC6                  	inc rsi
 22246 000101DD 48FFC2                  	inc rdx
 22247 000101E0 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 22248                                  .L_lambda_simple_env_end_0086:
 22249 000101E2 5B                      	pop rbx
 22250 000101E3 BE00000000              	mov rsi, 0
 22251                                  .L_lambda_simple_params_loop_0086:	; copy params
 22252 000101E8 4883FE01                	cmp rsi, 1
 22253 000101EC 740E                    	je .L_lambda_simple_params_end_0086
 22254 000101EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22255 000101F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22256 000101F7 48FFC6                  	inc rsi
 22257 000101FA EBEC                    	jmp .L_lambda_simple_params_loop_0086
 22258                                  .L_lambda_simple_params_end_0086:
 22259 000101FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22260 000101FF 4889C3                  	mov rbx, rax
 22261 00010202 58                      	pop rax
 22262 00010203 C60004                  	mov byte [rax], T_closure
 22263 00010206 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22264 0001020A 48C74009[17020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 22265 00010212 E988000000              	jmp .L_lambda_simple_end_0086
 22266                                  .L_lambda_simple_code_0086:	; lambda-simple body
 22267 00010217 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22268 0001021D 740B                    	je .L_lambda_simple_arity_check_ok_0086
 22269 0001021F FF742410                	push qword [rsp + 8 * 2]
 22270 00010223 6A01                    	push 1
 22271 00010225 E984730000              	jmp L_error_incorrect_arity_simple
 22272                                  .L_lambda_simple_arity_check_ok_0086:
 22273 0001022A C8000000                	enter 0, 0
 22274                                  	; preparing a tail-call
 22275 0001022E 48B8-                   	mov rax, L_constants + 2135
 22275 00010230 [5708000000000000] 
 22276 00010238 50                      	push rax
 22277 00010239 488B4520                	mov rax, PARAM(0)	; param s
 22278 0001023D 50                      	push rax
 22279 0001023E 6A02                    	push 2	; arg count
 22280 00010240 488B4510                	mov rax, ENV
 22281 00010244 488B00                  	mov rax, qword [rax + 8 * 0]
 22282 00010247 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22283 0001024A 488B00                  	mov rax, qword [rax]
 22284 0001024D 803804                  	cmp byte [rax], T_closure
 22285 00010250 0F85F6720000            	jne L_error_non_closure
 22286 00010256 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22287 00010259 FF7508                  	push qword [rbp + 8 * 1]
 22288                                   ; old ret addr
 22289 0001025C FF7500                  	push qword [rbp]
 22290                                   ; restore the old rbp
 22291 0001025F BB02000000              	mov rbx, 2
 22292 00010264 4883C303                	add rbx, 3
 22293 00010268 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22294 0001026C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22295 00010271 4C8D4DF8                	lea r9, [rbp - 8]
 22296 00010275 B906000000              	mov rcx, 6
 22297                                  .L_tc_recycle_frame_loop_00bc:
 22298 0001027A 4883F900                	cmp rcx, 0
 22299 0001027E 7413                    	je .L_tc_recycle_frame_done_00bc
 22300 00010280 4D8B11                  	mov r10, qword [r9]
 22301 00010283 4D8910                  	mov qword [r8], r10
 22302 00010286 4983E808                	sub r8, 8
 22303 0001028A 4983E908                	sub r9, 8
 22304 0001028E 48FFC9                  	dec rcx
 22305 00010291 EBE7                    	jmp .L_tc_recycle_frame_loop_00bc
 22306                                  .L_tc_recycle_frame_done_00bc:
 22307 00010293 498D6008                	lea rsp, [r8 + 8]
 22308 00010297 5D                      	pop rbp ; restore the old rbp
 22309 00010298 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22310 0001029B C9                      	leave
 22311 0001029C C21800                  	ret AND_KILL_FRAME(1)
 22312                                  .L_lambda_simple_end_0086:	; new closure is in rax
 22313 0001029F C9                      	leave
 22314 000102A0 C21800                  	ret AND_KILL_FRAME(1)
 22315                                  .L_lambda_simple_end_0083:	; new closure is in rax
 22316 000102A3 803804                  	cmp byte [rax], T_closure
 22317 000102A6 0F85A0720000            	jne L_error_non_closure
 22318 000102AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22319 000102AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22320 000102B2 48890425[14140000]      	mov qword [free_var_95], rax
 22321 000102BA 48B8-                   	mov rax, sob_void
 22321 000102BC [0000000000000000] 
 22322                                  
 22323 000102C4 4889C7                  	mov rdi, rax
 22324 000102C7 E87E750000              	call print_sexpr_if_not_void
 22325                                  	; preparing a non-tail-call
 22326 000102CC 48B8-                   	mov rax, L_constants + 1993
 22326 000102CE [C907000000000000] 
 22327 000102D6 50                      	push rax
 22328 000102D7 6A01                    	push 1	; arg count
 22329 000102D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22330 000102DE E812730000              	call malloc
 22331 000102E3 50                      	push rax
 22332 000102E4 BF00000000              	mov rdi, 8 * 0	; new rib
 22333 000102E9 E807730000              	call malloc
 22334 000102EE 50                      	push rax
 22335 000102EF BF08000000              	mov rdi, 8 * 1	; extended env
 22336 000102F4 E8FC720000              	call malloc
 22337 000102F9 488B7D10                	mov rdi, ENV
 22338 000102FD BE00000000              	mov rsi, 0
 22339 00010302 BA01000000              	mov rdx, 1
 22340                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 22341 00010307 4883FE00                	cmp rsi, 0
 22342 0001030B 7410                    	je .L_lambda_simple_env_end_0087
 22343 0001030D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22344 00010311 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22345 00010315 48FFC6                  	inc rsi
 22346 00010318 48FFC2                  	inc rdx
 22347 0001031B EBEA                    	jmp .L_lambda_simple_env_loop_0087
 22348                                  .L_lambda_simple_env_end_0087:
 22349 0001031D 5B                      	pop rbx
 22350 0001031E BE00000000              	mov rsi, 0
 22351                                  .L_lambda_simple_params_loop_0087:	; copy params
 22352 00010323 4883FE00                	cmp rsi, 0
 22353 00010327 740E                    	je .L_lambda_simple_params_end_0087
 22354 00010329 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22355 0001032E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22356 00010332 48FFC6                  	inc rsi
 22357 00010335 EBEC                    	jmp .L_lambda_simple_params_loop_0087
 22358                                  .L_lambda_simple_params_end_0087:
 22359 00010337 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22360 0001033A 4889C3                  	mov rbx, rax
 22361 0001033D 58                      	pop rax
 22362 0001033E C60004                  	mov byte [rax], T_closure
 22363 00010341 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22364 00010345 48C74009[52030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 22365 0001034D E948040000              	jmp .L_lambda_simple_end_0087
 22366                                  .L_lambda_simple_code_0087:	; lambda-simple body
 22367 00010352 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22368 00010358 740B                    	je .L_lambda_simple_arity_check_ok_0087
 22369 0001035A FF742410                	push qword [rsp + 8 * 2]
 22370 0001035E 6A01                    	push 1
 22371 00010360 E949720000              	jmp L_error_incorrect_arity_simple
 22372                                  .L_lambda_simple_arity_check_ok_0087:
 22373 00010365 C8000000                	enter 0, 0
 22374 00010369 BF08000000              	mov rdi, 8*1
 22375 0001036E E882720000              	call malloc
 22376 00010373 488B5D20                	mov rbx, PARAM(0)
 22377 00010377 488918                  	mov qword [rax], rbx
 22378 0001037A 48894520                	mov PARAM(0), rax
 22379 0001037E 48B8-                   	mov rax, sob_void
 22379 00010380 [0000000000000000] 
 22380                                  
 22381 00010388 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22382 0001038D E863720000              	call malloc
 22383 00010392 50                      	push rax
 22384 00010393 BF08000000              	mov rdi, 8 * 1	; new rib
 22385 00010398 E858720000              	call malloc
 22386 0001039D 50                      	push rax
 22387 0001039E BF10000000              	mov rdi, 8 * 2	; extended env
 22388 000103A3 E84D720000              	call malloc
 22389 000103A8 488B7D10                	mov rdi, ENV
 22390 000103AC BE00000000              	mov rsi, 0
 22391 000103B1 BA01000000              	mov rdx, 1
 22392                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 22393 000103B6 4883FE01                	cmp rsi, 1
 22394 000103BA 7410                    	je .L_lambda_simple_env_end_0088
 22395 000103BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22396 000103C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22397 000103C4 48FFC6                  	inc rsi
 22398 000103C7 48FFC2                  	inc rdx
 22399 000103CA EBEA                    	jmp .L_lambda_simple_env_loop_0088
 22400                                  .L_lambda_simple_env_end_0088:
 22401 000103CC 5B                      	pop rbx
 22402 000103CD BE00000000              	mov rsi, 0
 22403                                  .L_lambda_simple_params_loop_0088:	; copy params
 22404 000103D2 4883FE01                	cmp rsi, 1
 22405 000103D6 740E                    	je .L_lambda_simple_params_end_0088
 22406 000103D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22407 000103DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22408 000103E1 48FFC6                  	inc rsi
 22409 000103E4 EBEC                    	jmp .L_lambda_simple_params_loop_0088
 22410                                  .L_lambda_simple_params_end_0088:
 22411 000103E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22412 000103E9 4889C3                  	mov rbx, rax
 22413 000103EC 58                      	pop rax
 22414 000103ED C60004                  	mov byte [rax], T_closure
 22415 000103F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22416 000103F4 48C74009[01040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 22417 000103FC E983020000              	jmp .L_lambda_simple_end_0088
 22418                                  .L_lambda_simple_code_0088:	; lambda-simple body
 22419 00010401 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22420 00010407 740B                    	je .L_lambda_simple_arity_check_ok_0088
 22421 00010409 FF742410                	push qword [rsp + 8 * 2]
 22422 0001040D 6A02                    	push 2
 22423 0001040F E99A710000              	jmp L_error_incorrect_arity_simple
 22424                                  .L_lambda_simple_arity_check_ok_0088:
 22425 00010414 C8000000                	enter 0, 0
 22426                                  	; preparing a non-tail-call
 22427 00010418 488B4520                	mov rax, PARAM(0)	; param s
 22428 0001041C 50                      	push rax
 22429 0001041D 6A01                    	push 1	; arg count
 22430 0001041F 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22431 00010427 803805                  	cmp byte [rax], T_undefined
 22432 0001042A 0F8498700000            	je L_error_fvar_undefined
 22433 00010430 803804                  	cmp byte [rax], T_closure
 22434 00010433 0F8513710000            	jne L_error_non_closure
 22435 00010439 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22436 0001043C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22437 0001043F 483D[02000000]          	cmp rax, sob_boolean_false
 22438 00010445 7476                    	je .L_if_else_0068
 22439                                  	; preparing a tail-call
 22440 00010447 48B8-                   	mov rax, L_constants + 4
 22440 00010449 [0400000000000000] 
 22441 00010451 50                      	push rax
 22442 00010452 488B4528                	mov rax, PARAM(1)	; param i
 22443 00010456 50                      	push rax
 22444 00010457 6A02                    	push 2	; arg count
 22445 00010459 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 22446 00010461 803805                  	cmp byte [rax], T_undefined
 22447 00010464 0F845E700000            	je L_error_fvar_undefined
 22448 0001046A 803804                  	cmp byte [rax], T_closure
 22449 0001046D 0F85D9700000            	jne L_error_non_closure
 22450 00010473 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22451 00010476 FF7508                  	push qword [rbp + 8 * 1]
 22452                                   ; old ret addr
 22453 00010479 FF7500                  	push qword [rbp]
 22454                                   ; restore the old rbp
 22455 0001047C BB02000000              	mov rbx, 2
 22456 00010481 4883C303                	add rbx, 3
 22457 00010485 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22458 00010489 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22459 0001048E 4C8D4DF8                	lea r9, [rbp - 8]
 22460 00010492 B906000000              	mov rcx, 6
 22461                                  .L_tc_recycle_frame_loop_00bd:
 22462 00010497 4883F900                	cmp rcx, 0
 22463 0001049B 7413                    	je .L_tc_recycle_frame_done_00bd
 22464 0001049D 4D8B11                  	mov r10, qword [r9]
 22465 000104A0 4D8910                  	mov qword [r8], r10
 22466 000104A3 4983E808                	sub r8, 8
 22467 000104A7 4983E908                	sub r9, 8
 22468 000104AB 48FFC9                  	dec rcx
 22469 000104AE EBE7                    	jmp .L_tc_recycle_frame_loop_00bd
 22470                                  .L_tc_recycle_frame_done_00bd:
 22471 000104B0 498D6008                	lea rsp, [r8 + 8]
 22472 000104B4 5D                      	pop rbp ; restore the old rbp
 22473 000104B5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22474 000104B8 E9C3010000              	jmp .L_if_end_0068
 22475                                  .L_if_else_0068:
 22476                                  	; preparing a tail-call
 22477                                  	; preparing a non-tail-call
 22478                                  	; preparing a non-tail-call
 22479 000104BD 48B8-                   	mov rax, L_constants + 2270
 22479 000104BF [DE08000000000000] 
 22480 000104C7 50                      	push rax
 22481 000104C8 488B4528                	mov rax, PARAM(1)	; param i
 22482 000104CC 50                      	push rax
 22483 000104CD 6A02                    	push 2	; arg count
 22484 000104CF 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22485 000104D7 803805                  	cmp byte [rax], T_undefined
 22486 000104DA 0F84E86F0000            	je L_error_fvar_undefined
 22487 000104E0 803804                  	cmp byte [rax], T_closure
 22488 000104E3 0F8563700000            	jne L_error_non_closure
 22489 000104E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22490 000104EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22491 000104EF 50                      	push rax
 22492                                  	; preparing a non-tail-call
 22493 000104F0 488B4520                	mov rax, PARAM(0)	; param s
 22494 000104F4 50                      	push rax
 22495 000104F5 6A01                    	push 1	; arg count
 22496 000104F7 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22497 000104FF 803805                  	cmp byte [rax], T_undefined
 22498 00010502 0F84C06F0000            	je L_error_fvar_undefined
 22499 00010508 803804                  	cmp byte [rax], T_closure
 22500 0001050B 0F853B700000            	jne L_error_non_closure
 22501 00010511 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22502 00010514 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22503 00010517 50                      	push rax
 22504 00010518 6A02                    	push 2	; arg count
 22505 0001051A 488B4510                	mov rax, ENV
 22506 0001051E 488B00                  	mov rax, qword [rax + 8 * 0]
 22507 00010521 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22508 00010524 488B00                  	mov rax, qword [rax]
 22509 00010527 803804                  	cmp byte [rax], T_closure
 22510 0001052A 0F851C700000            	jne L_error_non_closure
 22511 00010530 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22512 00010533 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22513 00010536 50                      	push rax
 22514 00010537 6A01                    	push 1	; arg count
 22515 00010539 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22516 0001053E E8B2700000              	call malloc
 22517 00010543 50                      	push rax
 22518 00010544 BF10000000              	mov rdi, 8 * 2	; new rib
 22519 00010549 E8A7700000              	call malloc
 22520 0001054E 50                      	push rax
 22521 0001054F BF18000000              	mov rdi, 8 * 3	; extended env
 22522 00010554 E89C700000              	call malloc
 22523 00010559 488B7D10                	mov rdi, ENV
 22524 0001055D BE00000000              	mov rsi, 0
 22525 00010562 BA01000000              	mov rdx, 1
 22526                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 22527 00010567 4883FE02                	cmp rsi, 2
 22528 0001056B 7410                    	je .L_lambda_simple_env_end_0089
 22529 0001056D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22530 00010571 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22531 00010575 48FFC6                  	inc rsi
 22532 00010578 48FFC2                  	inc rdx
 22533 0001057B EBEA                    	jmp .L_lambda_simple_env_loop_0089
 22534                                  .L_lambda_simple_env_end_0089:
 22535 0001057D 5B                      	pop rbx
 22536 0001057E BE00000000              	mov rsi, 0
 22537                                  .L_lambda_simple_params_loop_0089:	; copy params
 22538 00010583 4883FE02                	cmp rsi, 2
 22539 00010587 740E                    	je .L_lambda_simple_params_end_0089
 22540 00010589 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22541 0001058E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22542 00010592 48FFC6                  	inc rsi
 22543 00010595 EBEC                    	jmp .L_lambda_simple_params_loop_0089
 22544                                  .L_lambda_simple_params_end_0089:
 22545 00010597 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22546 0001059A 4889C3                  	mov rbx, rax
 22547 0001059D 58                      	pop rax
 22548 0001059E C60004                  	mov byte [rax], T_closure
 22549 000105A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22550 000105A5 48C74009[B2050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 22551 000105AD E980000000              	jmp .L_lambda_simple_end_0089
 22552                                  .L_lambda_simple_code_0089:	; lambda-simple body
 22553 000105B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22554 000105B8 740B                    	je .L_lambda_simple_arity_check_ok_0089
 22555 000105BA FF742410                	push qword [rsp + 8 * 2]
 22556 000105BE 6A01                    	push 1
 22557 000105C0 E9E96F0000              	jmp L_error_incorrect_arity_simple
 22558                                  .L_lambda_simple_arity_check_ok_0089:
 22559 000105C5 C8000000                	enter 0, 0
 22560                                  	; preparing a non-tail-call
 22561                                  	; preparing a non-tail-call
 22562 000105C9 488B4510                	mov rax, ENV
 22563 000105CD 488B00                  	mov rax, qword [rax + 8 * 0]
 22564 000105D0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22565 000105D3 50                      	push rax
 22566 000105D4 6A01                    	push 1	; arg count
 22567 000105D6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22568 000105DE 803805                  	cmp byte [rax], T_undefined
 22569 000105E1 0F84E16E0000            	je L_error_fvar_undefined
 22570 000105E7 803804                  	cmp byte [rax], T_closure
 22571 000105EA 0F855C6F0000            	jne L_error_non_closure
 22572 000105F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22573 000105F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22574 000105F6 50                      	push rax
 22575 000105F7 488B4510                	mov rax, ENV
 22576 000105FB 488B00                  	mov rax, qword [rax + 8 * 0]
 22577 000105FE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22578 00010602 50                      	push rax
 22579 00010603 488B4520                	mov rax, PARAM(0)	; param str
 22580 00010607 50                      	push rax
 22581 00010608 6A03                    	push 3	; arg count
 22582 0001060A 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 22583 00010612 803805                  	cmp byte [rax], T_undefined
 22584 00010615 0F84AD6E0000            	je L_error_fvar_undefined
 22585 0001061B 803804                  	cmp byte [rax], T_closure
 22586 0001061E 0F85286F0000            	jne L_error_non_closure
 22587 00010624 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22588 00010627 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22589                                  
 22590 0001062A 488B4520                	mov rax, PARAM(0)	; param str
 22591 0001062E C9                      	leave
 22592 0001062F C21800                  	ret AND_KILL_FRAME(1)
 22593                                  .L_lambda_simple_end_0089:	; new closure is in rax
 22594 00010632 803804                  	cmp byte [rax], T_closure
 22595 00010635 0F85116F0000            	jne L_error_non_closure
 22596 0001063B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22597 0001063E FF7508                  	push qword [rbp + 8 * 1]
 22598                                   ; old ret addr
 22599 00010641 FF7500                  	push qword [rbp]
 22600                                   ; restore the old rbp
 22601 00010644 BB01000000              	mov rbx, 1
 22602 00010649 4883C303                	add rbx, 3
 22603 0001064D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22604 00010651 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22605 00010656 4C8D4DF8                	lea r9, [rbp - 8]
 22606 0001065A B905000000              	mov rcx, 5
 22607                                  .L_tc_recycle_frame_loop_00be:
 22608 0001065F 4883F900                	cmp rcx, 0
 22609 00010663 7413                    	je .L_tc_recycle_frame_done_00be
 22610 00010665 4D8B11                  	mov r10, qword [r9]
 22611 00010668 4D8910                  	mov qword [r8], r10
 22612 0001066B 4983E808                	sub r8, 8
 22613 0001066F 4983E908                	sub r9, 8
 22614 00010673 48FFC9                  	dec rcx
 22615 00010676 EBE7                    	jmp .L_tc_recycle_frame_loop_00be
 22616                                  .L_tc_recycle_frame_done_00be:
 22617 00010678 498D6008                	lea rsp, [r8 + 8]
 22618 0001067C 5D                      	pop rbp ; restore the old rbp
 22619 0001067D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22620                                  .L_if_end_0068:
 22621 00010680 C9                      	leave
 22622 00010681 C22000                  	ret AND_KILL_FRAME(2)
 22623                                  .L_lambda_simple_end_0088:	; new closure is in rax
 22624 00010684 50                      	push rax
 22625 00010685 488B4520                	mov rax, PARAM(0)	; param run
 22626 00010689 8F00                    	pop qword [rax]
 22627 0001068B 48B8-                   	mov rax, sob_void
 22627 0001068D [0000000000000000] 
 22628                                  
 22629 00010695 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22630 0001069A E8566F0000              	call malloc
 22631 0001069F 50                      	push rax
 22632 000106A0 BF08000000              	mov rdi, 8 * 1	; new rib
 22633 000106A5 E84B6F0000              	call malloc
 22634 000106AA 50                      	push rax
 22635 000106AB BF10000000              	mov rdi, 8 * 2	; extended env
 22636 000106B0 E8406F0000              	call malloc
 22637 000106B5 488B7D10                	mov rdi, ENV
 22638 000106B9 BE00000000              	mov rsi, 0
 22639 000106BE BA01000000              	mov rdx, 1
 22640                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 22641 000106C3 4883FE01                	cmp rsi, 1
 22642 000106C7 7410                    	je .L_lambda_simple_env_end_008a
 22643 000106C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22644 000106CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22645 000106D1 48FFC6                  	inc rsi
 22646 000106D4 48FFC2                  	inc rdx
 22647 000106D7 EBEA                    	jmp .L_lambda_simple_env_loop_008a
 22648                                  .L_lambda_simple_env_end_008a:
 22649 000106D9 5B                      	pop rbx
 22650 000106DA BE00000000              	mov rsi, 0
 22651                                  .L_lambda_simple_params_loop_008a:	; copy params
 22652 000106DF 4883FE01                	cmp rsi, 1
 22653 000106E3 740E                    	je .L_lambda_simple_params_end_008a
 22654 000106E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22655 000106EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22656 000106EE 48FFC6                  	inc rsi
 22657 000106F1 EBEC                    	jmp .L_lambda_simple_params_loop_008a
 22658                                  .L_lambda_simple_params_end_008a:
 22659 000106F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22660 000106F6 4889C3                  	mov rbx, rax
 22661 000106F9 58                      	pop rax
 22662 000106FA C60004                  	mov byte [rax], T_closure
 22663 000106FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22664 00010701 48C74009[0E070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 22665 00010709 E988000000              	jmp .L_lambda_simple_end_008a
 22666                                  .L_lambda_simple_code_008a:	; lambda-simple body
 22667 0001070E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22668 00010714 740B                    	je .L_lambda_simple_arity_check_ok_008a
 22669 00010716 FF742410                	push qword [rsp + 8 * 2]
 22670 0001071A 6A01                    	push 1
 22671 0001071C E98D6E0000              	jmp L_error_incorrect_arity_simple
 22672                                  .L_lambda_simple_arity_check_ok_008a:
 22673 00010721 C8000000                	enter 0, 0
 22674                                  	; preparing a tail-call
 22675 00010725 48B8-                   	mov rax, L_constants + 2135
 22675 00010727 [5708000000000000] 
 22676 0001072F 50                      	push rax
 22677 00010730 488B4520                	mov rax, PARAM(0)	; param s
 22678 00010734 50                      	push rax
 22679 00010735 6A02                    	push 2	; arg count
 22680 00010737 488B4510                	mov rax, ENV
 22681 0001073B 488B00                  	mov rax, qword [rax + 8 * 0]
 22682 0001073E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22683 00010741 488B00                  	mov rax, qword [rax]
 22684 00010744 803804                  	cmp byte [rax], T_closure
 22685 00010747 0F85FF6D0000            	jne L_error_non_closure
 22686 0001074D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22687 00010750 FF7508                  	push qword [rbp + 8 * 1]
 22688                                   ; old ret addr
 22689 00010753 FF7500                  	push qword [rbp]
 22690                                   ; restore the old rbp
 22691 00010756 BB02000000              	mov rbx, 2
 22692 0001075B 4883C303                	add rbx, 3
 22693 0001075F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22694 00010763 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22695 00010768 4C8D4DF8                	lea r9, [rbp - 8]
 22696 0001076C B906000000              	mov rcx, 6
 22697                                  .L_tc_recycle_frame_loop_00bf:
 22698 00010771 4883F900                	cmp rcx, 0
 22699 00010775 7413                    	je .L_tc_recycle_frame_done_00bf
 22700 00010777 4D8B11                  	mov r10, qword [r9]
 22701 0001077A 4D8910                  	mov qword [r8], r10
 22702 0001077D 4983E808                	sub r8, 8
 22703 00010781 4983E908                	sub r9, 8
 22704 00010785 48FFC9                  	dec rcx
 22705 00010788 EBE7                    	jmp .L_tc_recycle_frame_loop_00bf
 22706                                  .L_tc_recycle_frame_done_00bf:
 22707 0001078A 498D6008                	lea rsp, [r8 + 8]
 22708 0001078E 5D                      	pop rbp ; restore the old rbp
 22709 0001078F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22710 00010792 C9                      	leave
 22711 00010793 C21800                  	ret AND_KILL_FRAME(1)
 22712                                  .L_lambda_simple_end_008a:	; new closure is in rax
 22713 00010796 C9                      	leave
 22714 00010797 C21800                  	ret AND_KILL_FRAME(1)
 22715                                  .L_lambda_simple_end_0087:	; new closure is in rax
 22716 0001079A 803804                  	cmp byte [rax], T_closure
 22717 0001079D 0F85A96D0000            	jne L_error_non_closure
 22718 000107A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22719 000107A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22720 000107A9 48890425[03140000]      	mov qword [free_var_94], rax
 22721 000107B1 48B8-                   	mov rax, sob_void
 22721 000107B3 [0000000000000000] 
 22722                                  
 22723 000107BB 4889C7                  	mov rdi, rax
 22724 000107BE E887700000              	call print_sexpr_if_not_void
 22725 000107C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22726 000107C8 E8286E0000              	call malloc
 22727 000107CD 50                      	push rax
 22728 000107CE BF00000000              	mov rdi, 8 * 0	; new rib
 22729 000107D3 E81D6E0000              	call malloc
 22730 000107D8 50                      	push rax
 22731 000107D9 BF08000000              	mov rdi, 8 * 1	; extended env
 22732 000107DE E8126E0000              	call malloc
 22733 000107E3 488B7D10                	mov rdi, ENV
 22734 000107E7 4831F6                  	 xor rsi, rsi
 22735 000107EA 4831D2                  	 xor rdx, rdx
 22736 000107ED 48FFC2                  	inc rdx
 22737                                  .L_lambda_opt_env_loop_0016:	; ext_env[i + 1] <-- env[i]
 22738 000107F0 4883FE00                	cmp rsi, 0
 22739 000107F4 7410                    	je .L_lambda_opt_env_end_0016
 22740 000107F6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22741 000107FA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22742 000107FE 48FFC6                  	inc rsi
 22743 00010801 48FFC2                  	inc rdx
 22744 00010804 EBEA                    	jmp .L_lambda_opt_env_loop_0016
 22745                                  .L_lambda_opt_env_end_0016:
 22746 00010806 5B                      	pop rbx
 22747 00010807 4831F6                  	xor rsi, rsi
 22748                                  .L_lambda_opt_params_loop_0016:	; copy params
 22749 0001080A 4883FE00                	cmp rsi, 0
 22750 0001080E 740E                    	je .L_lambda_opt_params_end_0016
 22751 00010810 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22752 00010815 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22753 00010819 48FFC6                  	inc rsi
 22754 0001081C EBEC                    	jmp .L_lambda_opt_params_loop_0016
 22755                                  .L_lambda_opt_params_end_0016:
 22756 0001081E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22757 00010821 4889C3                  	mov rbx, rax
 22758 00010824 58                      	pop rax
 22759 00010825 C60004                  	mov byte [rax], T_closure
 22760 00010828 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22761 0001082C 48C74009[39080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 22762 00010834 E95C010000              	jmp .L_lambda_opt_end_0016
 22763                                  .L_lambda_opt_code_0016:; lambda opt body
 22764 00010839 48837C241000            	cmp qword [rsp + 8 * 2], 0
 22765 0001083F 7409                    	je .L_lambda_opt_arity_check_exact_0016
 22766 00010841 7F57                    	jg .L_lambda_opt_arity_check_more_0016
 22767 00010843 6A00                    	push 0
 22768 00010845 E9786D0000              	jmp L_error_incorrect_arity_opt
 22769                                  .L_lambda_opt_arity_check_exact_0016:
 22770 0001084A 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 22771 0001084E 4C894C24F8              	mov qword [rsp -8], r9
 22772 00010853 4C8B4C2408              	mov r9, qword [rsp +8]
 22773 00010858 4C890C24                	mov qword [rsp +8 * 0], r9
 22774 0001085C 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 22775 00010861 4C89C9                  	mov rcx, r9
 22776 00010864 49FFC1                  	inc r9
 22777 00010867 4C894C2408              	mov qword [rsp +8], r9
 22778 0001086C 4889E2                  	mov rdx, rsp
 22779 0001086F 4883C218                	add rdx, 24
 22780                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0016:
 22781 00010873 4883F900                	cmp rcx, 0
 22782 00010877 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0016
 22783 00010879 4C8B02                  	mov r8, qword [rdx]
 22784 0001087C 4C8942F8                	mov qword [rdx - 8], r8
 22785 00010880 4883C208                	add rdx, 8
 22786 00010884 48FFC9                  	dec rcx
 22787 00010887 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0016
 22788                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0016:
 22789 00010889 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 22790 00010891 4883EC08                	sub rsp, 8
 22791 00010895 E984000000              	jmp .L_lambda_opt_stack_adjusted_0016
 22792                                  .L_lambda_opt_arity_check_more_0016:
 22793 0001089A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 22794 0001089F 4D89C4                  	mov r12, r8
 22795 000108A2 4C89C1                  	mov rcx, r8
 22796 000108A5 4D8D5002                	lea r10, [r8 + 2] 
 22797 000108A9 4883E900                	sub rcx, 0
 22798 000108AD 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 22799 000108B2 49B9-                   	mov r9, sob_nil
 22799 000108B4 [0100000000000000] 
 22800                                  .L_lambda_opt_create_list_of_opt_params_0016:
 22801 000108BC 4883F900                	cmp rcx, 0
 22802 000108C0 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0016
 22803 000108C2 BF11000000              	mov rdi, 17
 22804 000108C7 E8296D0000              	call malloc
 22805 000108CC C60021                  	mov byte [rax], T_pair
 22806 000108CF 498B1B                  	mov rbx, qword [r11]
 22807 000108D2 48895801                	mov qword [rax +1], rbx
 22808 000108D6 4C894809                	mov qword [rax + 1 + 8], r9
 22809 000108DA 4989C1                  	mov r9, rax
 22810 000108DD 48FFC9                  	dec rcx
 22811 000108E0 4983EB08                	sub r11, 8
 22812 000108E4 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0016
 22813                                  .L_lambda_opt_create_list_of_opt_params_end_0016:
 22814 000108E6 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 22815 000108EB 4D8908                  	mov qword [r8], r9
 22816 000108EE 4E8D14D500000000        	lea r10, [8 * r10]
 22817 000108F6 4901E2                  	add r10, rsp
 22818 000108F9 B904000000              	mov rcx, 4 + 0
 22819                                  .L_lambda_opt_stack_shrink_loop_0016:
 22820 000108FE 4883F900                	cmp rcx, 0
 22821 00010902 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0016
 22822 00010904 4D8B18                  	mov r11, qword [r8]
 22823 00010907 4D891A                  	mov qword [r10], r11
 22824 0001090A 4983E808                	sub r8, 8
 22825 0001090E 4983EA08                	sub r10, 8
 22826 00010912 48FFC9                  	dec rcx
 22827 00010915 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 22828                                  .L_lambda_opt_stack_shrink_loop_exit_0016:
 22829 00010917 4983C208                	add r10, 8
 22830 0001091B 4C89D4                  	mov rsp, r10
 22831                                  .L_lambda_opt_stack_adjusted_0016:;continue with the code, the stack is ok
 22832 0001091E 48C744241001000000      	mov qword [rsp + 8*2], 1
 22833 00010927 C8000000                	enter 0, 0
 22834                                  	; preparing a tail-call
 22835 0001092B 488B4520                	mov rax, PARAM(0)	; param s
 22836 0001092F 50                      	push rax
 22837 00010930 6A01                    	push 1	; arg count
 22838 00010932 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 22839 0001093A 803805                  	cmp byte [rax], T_undefined
 22840 0001093D 0F84856B0000            	je L_error_fvar_undefined
 22841 00010943 803804                  	cmp byte [rax], T_closure
 22842 00010946 0F85006C0000            	jne L_error_non_closure
 22843 0001094C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22844 0001094F FF7508                  	push qword [rbp + 8 * 1]
 22845                                   ; old ret addr
 22846 00010952 FF7500                  	push qword [rbp]
 22847                                   ; restore the old rbp
 22848 00010955 BB01000000              	mov rbx, 1
 22849 0001095A 4883C303                	add rbx, 3
 22850 0001095E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22851 00010962 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22852 00010967 4C8D4DF8                	lea r9, [rbp - 8]
 22853 0001096B B905000000              	mov rcx, 5
 22854                                  .L_tc_recycle_frame_loop_00c0:
 22855 00010970 4883F900                	cmp rcx, 0
 22856 00010974 7413                    	je .L_tc_recycle_frame_done_00c0
 22857 00010976 4D8B11                  	mov r10, qword [r9]
 22858 00010979 4D8910                  	mov qword [r8], r10
 22859 0001097C 4983E808                	sub r8, 8
 22860 00010980 4983E908                	sub r9, 8
 22861 00010984 48FFC9                  	dec rcx
 22862 00010987 EBE7                    	jmp .L_tc_recycle_frame_loop_00c0
 22863                                  .L_tc_recycle_frame_done_00c0:
 22864 00010989 498D6008                	lea rsp, [r8 + 8]
 22865 0001098D 5D                      	pop rbp ; restore the old rbp
 22866 0001098E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22867 00010991 C9                      	leave
 22868 00010992 C21800                  	ret 8 * (2 + 1)
 22869                                  .L_lambda_opt_end_0016:	; new closure is in rax
 22870 00010995 48890425[11170000]      	mov qword [free_var_140], rax
 22871 0001099D 48B8-                   	mov rax, sob_void
 22871 0001099F [0000000000000000] 
 22872                                  
 22873 000109A7 4889C7                  	mov rdi, rax
 22874 000109AA E89B6E0000              	call print_sexpr_if_not_void
 22875                                  	; preparing a non-tail-call
 22876 000109AF 48B8-                   	mov rax, L_constants + 1993
 22876 000109B1 [C907000000000000] 
 22877 000109B9 50                      	push rax
 22878 000109BA 6A01                    	push 1	; arg count
 22879 000109BC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22880 000109C1 E82F6C0000              	call malloc
 22881 000109C6 50                      	push rax
 22882 000109C7 BF00000000              	mov rdi, 8 * 0	; new rib
 22883 000109CC E8246C0000              	call malloc
 22884 000109D1 50                      	push rax
 22885 000109D2 BF08000000              	mov rdi, 8 * 1	; extended env
 22886 000109D7 E8196C0000              	call malloc
 22887 000109DC 488B7D10                	mov rdi, ENV
 22888 000109E0 BE00000000              	mov rsi, 0
 22889 000109E5 BA01000000              	mov rdx, 1
 22890                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 22891 000109EA 4883FE00                	cmp rsi, 0
 22892 000109EE 7410                    	je .L_lambda_simple_env_end_008b
 22893 000109F0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22894 000109F4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22895 000109F8 48FFC6                  	inc rsi
 22896 000109FB 48FFC2                  	inc rdx
 22897 000109FE EBEA                    	jmp .L_lambda_simple_env_loop_008b
 22898                                  .L_lambda_simple_env_end_008b:
 22899 00010A00 5B                      	pop rbx
 22900 00010A01 BE00000000              	mov rsi, 0
 22901                                  .L_lambda_simple_params_loop_008b:	; copy params
 22902 00010A06 4883FE00                	cmp rsi, 0
 22903 00010A0A 740E                    	je .L_lambda_simple_params_end_008b
 22904 00010A0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22905 00010A11 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22906 00010A15 48FFC6                  	inc rsi
 22907 00010A18 EBEC                    	jmp .L_lambda_simple_params_loop_008b
 22908                                  .L_lambda_simple_params_end_008b:
 22909 00010A1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22910 00010A1D 4889C3                  	mov rbx, rax
 22911 00010A20 58                      	pop rax
 22912 00010A21 C60004                  	mov byte [rax], T_closure
 22913 00010A24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22914 00010A28 48C74009[350A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 22915 00010A30 E936030000              	jmp .L_lambda_simple_end_008b
 22916                                  .L_lambda_simple_code_008b:	; lambda-simple body
 22917 00010A35 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22918 00010A3B 740B                    	je .L_lambda_simple_arity_check_ok_008b
 22919 00010A3D FF742410                	push qword [rsp + 8 * 2]
 22920 00010A41 6A01                    	push 1
 22921 00010A43 E9666B0000              	jmp L_error_incorrect_arity_simple
 22922                                  .L_lambda_simple_arity_check_ok_008b:
 22923 00010A48 C8000000                	enter 0, 0
 22924 00010A4C BF08000000              	mov rdi, 8*1
 22925 00010A51 E89F6B0000              	call malloc
 22926 00010A56 488B5D20                	mov rbx, PARAM(0)
 22927 00010A5A 488918                  	mov qword [rax], rbx
 22928 00010A5D 48894520                	mov PARAM(0), rax
 22929 00010A61 48B8-                   	mov rax, sob_void
 22929 00010A63 [0000000000000000] 
 22930                                  
 22931 00010A6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22932 00010A70 E8806B0000              	call malloc
 22933 00010A75 50                      	push rax
 22934 00010A76 BF08000000              	mov rdi, 8 * 1	; new rib
 22935 00010A7B E8756B0000              	call malloc
 22936 00010A80 50                      	push rax
 22937 00010A81 BF10000000              	mov rdi, 8 * 2	; extended env
 22938 00010A86 E86A6B0000              	call malloc
 22939 00010A8B 488B7D10                	mov rdi, ENV
 22940 00010A8F BE00000000              	mov rsi, 0
 22941 00010A94 BA01000000              	mov rdx, 1
 22942                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 22943 00010A99 4883FE01                	cmp rsi, 1
 22944 00010A9D 7410                    	je .L_lambda_simple_env_end_008c
 22945 00010A9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22946 00010AA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22947 00010AA7 48FFC6                  	inc rsi
 22948 00010AAA 48FFC2                  	inc rdx
 22949 00010AAD EBEA                    	jmp .L_lambda_simple_env_loop_008c
 22950                                  .L_lambda_simple_env_end_008c:
 22951 00010AAF 5B                      	pop rbx
 22952 00010AB0 BE00000000              	mov rsi, 0
 22953                                  .L_lambda_simple_params_loop_008c:	; copy params
 22954 00010AB5 4883FE01                	cmp rsi, 1
 22955 00010AB9 740E                    	je .L_lambda_simple_params_end_008c
 22956 00010ABB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22957 00010AC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22958 00010AC4 48FFC6                  	inc rsi
 22959 00010AC7 EBEC                    	jmp .L_lambda_simple_params_loop_008c
 22960                                  .L_lambda_simple_params_end_008c:
 22961 00010AC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22962 00010ACC 4889C3                  	mov rbx, rax
 22963 00010ACF 58                      	pop rax
 22964 00010AD0 C60004                  	mov byte [rax], T_closure
 22965 00010AD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22966 00010AD7 48C74009[E40A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 22967 00010ADF E949010000              	jmp .L_lambda_simple_end_008c
 22968                                  .L_lambda_simple_code_008c:	; lambda-simple body
 22969 00010AE4 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22970 00010AEA 740B                    	je .L_lambda_simple_arity_check_ok_008c
 22971 00010AEC FF742410                	push qword [rsp + 8 * 2]
 22972 00010AF0 6A03                    	push 3
 22973 00010AF2 E9B76A0000              	jmp L_error_incorrect_arity_simple
 22974                                  .L_lambda_simple_arity_check_ok_008c:
 22975 00010AF7 C8000000                	enter 0, 0
 22976                                  	; preparing a non-tail-call
 22977 00010AFB 488B4530                	mov rax, PARAM(2)	; param n
 22978 00010AFF 50                      	push rax
 22979 00010B00 488B4528                	mov rax, PARAM(1)	; param i
 22980 00010B04 50                      	push rax
 22981 00010B05 6A02                    	push 2	; arg count
 22982 00010B07 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 22983 00010B0F 803805                  	cmp byte [rax], T_undefined
 22984 00010B12 0F84B0690000            	je L_error_fvar_undefined
 22985 00010B18 803804                  	cmp byte [rax], T_closure
 22986 00010B1B 0F852B6A0000            	jne L_error_non_closure
 22987 00010B21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22988 00010B24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22989 00010B27 483D[02000000]          	cmp rax, sob_boolean_false
 22990 00010B2D 0F84EC000000            	je .L_if_else_0069
 22991                                  	; preparing a tail-call
 22992                                  	; preparing a non-tail-call
 22993 00010B33 488B4530                	mov rax, PARAM(2)	; param n
 22994 00010B37 50                      	push rax
 22995                                  	; preparing a non-tail-call
 22996 00010B38 48B8-                   	mov rax, L_constants + 2270
 22996 00010B3A [DE08000000000000] 
 22997 00010B42 50                      	push rax
 22998 00010B43 488B4528                	mov rax, PARAM(1)	; param i
 22999 00010B47 50                      	push rax
 23000 00010B48 6A02                    	push 2	; arg count
 23001 00010B4A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23002 00010B52 803805                  	cmp byte [rax], T_undefined
 23003 00010B55 0F846D690000            	je L_error_fvar_undefined
 23004 00010B5B 803804                  	cmp byte [rax], T_closure
 23005 00010B5E 0F85E8690000            	jne L_error_non_closure
 23006 00010B64 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23007 00010B67 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23008 00010B6A 50                      	push rax
 23009 00010B6B 488B4520                	mov rax, PARAM(0)	; param str
 23010 00010B6F 50                      	push rax
 23011 00010B70 6A03                    	push 3	; arg count
 23012 00010B72 488B4510                	mov rax, ENV
 23013 00010B76 488B00                  	mov rax, qword [rax + 8 * 0]
 23014 00010B79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23015 00010B7C 488B00                  	mov rax, qword [rax]
 23016 00010B7F 803804                  	cmp byte [rax], T_closure
 23017 00010B82 0F85C4690000            	jne L_error_non_closure
 23018 00010B88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23019 00010B8B FF5009                  	call SOB_CLOSURE_CODE(rax)
 23020 00010B8E 50                      	push rax
 23021                                  	; preparing a non-tail-call
 23022 00010B8F 488B4528                	mov rax, PARAM(1)	; param i
 23023 00010B93 50                      	push rax
 23024 00010B94 488B4520                	mov rax, PARAM(0)	; param str
 23025 00010B98 50                      	push rax
 23026 00010B99 6A02                    	push 2	; arg count
 23027 00010B9B 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 23028 00010BA3 803805                  	cmp byte [rax], T_undefined
 23029 00010BA6 0F841C690000            	je L_error_fvar_undefined
 23030 00010BAC 803804                  	cmp byte [rax], T_closure
 23031 00010BAF 0F8597690000            	jne L_error_non_closure
 23032 00010BB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23033 00010BB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23034 00010BBB 50                      	push rax
 23035 00010BBC 6A02                    	push 2	; arg count
 23036 00010BBE 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 23037 00010BC6 803805                  	cmp byte [rax], T_undefined
 23038 00010BC9 0F84F9680000            	je L_error_fvar_undefined
 23039 00010BCF 803804                  	cmp byte [rax], T_closure
 23040 00010BD2 0F8574690000            	jne L_error_non_closure
 23041 00010BD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23042 00010BDB FF7508                  	push qword [rbp + 8 * 1]
 23043                                   ; old ret addr
 23044 00010BDE FF7500                  	push qword [rbp]
 23045                                   ; restore the old rbp
 23046 00010BE1 BB02000000              	mov rbx, 2
 23047 00010BE6 4883C303                	add rbx, 3
 23048 00010BEA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23049 00010BEE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23050 00010BF3 4C8D4DF8                	lea r9, [rbp - 8]
 23051 00010BF7 B906000000              	mov rcx, 6
 23052                                  .L_tc_recycle_frame_loop_00c1:
 23053 00010BFC 4883F900                	cmp rcx, 0
 23054 00010C00 7413                    	je .L_tc_recycle_frame_done_00c1
 23055 00010C02 4D8B11                  	mov r10, qword [r9]
 23056 00010C05 4D8910                  	mov qword [r8], r10
 23057 00010C08 4983E808                	sub r8, 8
 23058 00010C0C 4983E908                	sub r9, 8
 23059 00010C10 48FFC9                  	dec rcx
 23060 00010C13 EBE7                    	jmp .L_tc_recycle_frame_loop_00c1
 23061                                  .L_tc_recycle_frame_done_00c1:
 23062 00010C15 498D6008                	lea rsp, [r8 + 8]
 23063 00010C19 5D                      	pop rbp ; restore the old rbp
 23064 00010C1A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23065 00010C1D EB0A                    	jmp .L_if_end_0069
 23066                                  .L_if_else_0069:
 23067 00010C1F 48B8-                   	mov rax, L_constants + 1
 23067 00010C21 [0100000000000000] 
 23068                                  .L_if_end_0069:
 23069 00010C29 C9                      	leave
 23070 00010C2A C22800                  	ret AND_KILL_FRAME(3)
 23071                                  .L_lambda_simple_end_008c:	; new closure is in rax
 23072 00010C2D 50                      	push rax
 23073 00010C2E 488B4520                	mov rax, PARAM(0)	; param run
 23074 00010C32 8F00                    	pop qword [rax]
 23075 00010C34 48B8-                   	mov rax, sob_void
 23075 00010C36 [0000000000000000] 
 23076                                  
 23077 00010C3E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23078 00010C43 E8AD690000              	call malloc
 23079 00010C48 50                      	push rax
 23080 00010C49 BF08000000              	mov rdi, 8 * 1	; new rib
 23081 00010C4E E8A2690000              	call malloc
 23082 00010C53 50                      	push rax
 23083 00010C54 BF10000000              	mov rdi, 8 * 2	; extended env
 23084 00010C59 E897690000              	call malloc
 23085 00010C5E 488B7D10                	mov rdi, ENV
 23086 00010C62 BE00000000              	mov rsi, 0
 23087 00010C67 BA01000000              	mov rdx, 1
 23088                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 23089 00010C6C 4883FE01                	cmp rsi, 1
 23090 00010C70 7410                    	je .L_lambda_simple_env_end_008d
 23091 00010C72 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23092 00010C76 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23093 00010C7A 48FFC6                  	inc rsi
 23094 00010C7D 48FFC2                  	inc rdx
 23095 00010C80 EBEA                    	jmp .L_lambda_simple_env_loop_008d
 23096                                  .L_lambda_simple_env_end_008d:
 23097 00010C82 5B                      	pop rbx
 23098 00010C83 BE00000000              	mov rsi, 0
 23099                                  .L_lambda_simple_params_loop_008d:	; copy params
 23100 00010C88 4883FE01                	cmp rsi, 1
 23101 00010C8C 740E                    	je .L_lambda_simple_params_end_008d
 23102 00010C8E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23103 00010C93 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23104 00010C97 48FFC6                  	inc rsi
 23105 00010C9A EBEC                    	jmp .L_lambda_simple_params_loop_008d
 23106                                  .L_lambda_simple_params_end_008d:
 23107 00010C9C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23108 00010C9F 4889C3                  	mov rbx, rax
 23109 00010CA2 58                      	pop rax
 23110 00010CA3 C60004                  	mov byte [rax], T_closure
 23111 00010CA6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23112 00010CAA 48C74009[B70C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 23113 00010CB2 E9B0000000              	jmp .L_lambda_simple_end_008d
 23114                                  .L_lambda_simple_code_008d:	; lambda-simple body
 23115 00010CB7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23116 00010CBD 740B                    	je .L_lambda_simple_arity_check_ok_008d
 23117 00010CBF FF742410                	push qword [rsp + 8 * 2]
 23118 00010CC3 6A01                    	push 1
 23119 00010CC5 E9E4680000              	jmp L_error_incorrect_arity_simple
 23120                                  .L_lambda_simple_arity_check_ok_008d:
 23121 00010CCA C8000000                	enter 0, 0
 23122                                  	; preparing a tail-call
 23123                                  	; preparing a non-tail-call
 23124 00010CCE 488B4520                	mov rax, PARAM(0)	; param str
 23125 00010CD2 50                      	push rax
 23126 00010CD3 6A01                    	push 1	; arg count
 23127 00010CD5 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 23128 00010CDD 803805                  	cmp byte [rax], T_undefined
 23129 00010CE0 0F84E2670000            	je L_error_fvar_undefined
 23130 00010CE6 803804                  	cmp byte [rax], T_closure
 23131 00010CE9 0F855D680000            	jne L_error_non_closure
 23132 00010CEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23133 00010CF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23134 00010CF5 50                      	push rax
 23135 00010CF6 48B8-                   	mov rax, L_constants + 2135
 23135 00010CF8 [5708000000000000] 
 23136 00010D00 50                      	push rax
 23137 00010D01 488B4520                	mov rax, PARAM(0)	; param str
 23138 00010D05 50                      	push rax
 23139 00010D06 6A03                    	push 3	; arg count
 23140 00010D08 488B4510                	mov rax, ENV
 23141 00010D0C 488B00                  	mov rax, qword [rax + 8 * 0]
 23142 00010D0F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23143 00010D12 488B00                  	mov rax, qword [rax]
 23144 00010D15 803804                  	cmp byte [rax], T_closure
 23145 00010D18 0F852E680000            	jne L_error_non_closure
 23146 00010D1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23147 00010D21 FF7508                  	push qword [rbp + 8 * 1]
 23148                                   ; old ret addr
 23149 00010D24 FF7500                  	push qword [rbp]
 23150                                   ; restore the old rbp
 23151 00010D27 BB03000000              	mov rbx, 3
 23152 00010D2C 4883C303                	add rbx, 3
 23153 00010D30 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23154 00010D34 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23155 00010D39 4C8D4DF8                	lea r9, [rbp - 8]
 23156 00010D3D B907000000              	mov rcx, 7
 23157                                  .L_tc_recycle_frame_loop_00c2:
 23158 00010D42 4883F900                	cmp rcx, 0
 23159 00010D46 7413                    	je .L_tc_recycle_frame_done_00c2
 23160 00010D48 4D8B11                  	mov r10, qword [r9]
 23161 00010D4B 4D8910                  	mov qword [r8], r10
 23162 00010D4E 4983E808                	sub r8, 8
 23163 00010D52 4983E908                	sub r9, 8
 23164 00010D56 48FFC9                  	dec rcx
 23165 00010D59 EBE7                    	jmp .L_tc_recycle_frame_loop_00c2
 23166                                  .L_tc_recycle_frame_done_00c2:
 23167 00010D5B 498D6008                	lea rsp, [r8 + 8]
 23168 00010D5F 5D                      	pop rbp ; restore the old rbp
 23169 00010D60 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23170 00010D63 C9                      	leave
 23171 00010D64 C21800                  	ret AND_KILL_FRAME(1)
 23172                                  .L_lambda_simple_end_008d:	; new closure is in rax
 23173 00010D67 C9                      	leave
 23174 00010D68 C21800                  	ret AND_KILL_FRAME(1)
 23175                                  .L_lambda_simple_end_008b:	; new closure is in rax
 23176 00010D6B 803804                  	cmp byte [rax], T_closure
 23177 00010D6E 0F85D8670000            	jne L_error_non_closure
 23178 00010D74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23179 00010D77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23180 00010D7A 48890425[AC150000]      	mov qword [free_var_119], rax
 23181 00010D82 48B8-                   	mov rax, sob_void
 23181 00010D84 [0000000000000000] 
 23182                                  
 23183 00010D8C 4889C7                  	mov rdi, rax
 23184 00010D8F E8B66A0000              	call print_sexpr_if_not_void
 23185                                  	; preparing a non-tail-call
 23186 00010D94 48B8-                   	mov rax, L_constants + 1993
 23186 00010D96 [C907000000000000] 
 23187 00010D9E 50                      	push rax
 23188 00010D9F 6A01                    	push 1	; arg count
 23189 00010DA1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23190 00010DA6 E84A680000              	call malloc
 23191 00010DAB 50                      	push rax
 23192 00010DAC BF00000000              	mov rdi, 8 * 0	; new rib
 23193 00010DB1 E83F680000              	call malloc
 23194 00010DB6 50                      	push rax
 23195 00010DB7 BF08000000              	mov rdi, 8 * 1	; extended env
 23196 00010DBC E834680000              	call malloc
 23197 00010DC1 488B7D10                	mov rdi, ENV
 23198 00010DC5 BE00000000              	mov rsi, 0
 23199 00010DCA BA01000000              	mov rdx, 1
 23200                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 23201 00010DCF 4883FE00                	cmp rsi, 0
 23202 00010DD3 7410                    	je .L_lambda_simple_env_end_008e
 23203 00010DD5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23204 00010DD9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23205 00010DDD 48FFC6                  	inc rsi
 23206 00010DE0 48FFC2                  	inc rdx
 23207 00010DE3 EBEA                    	jmp .L_lambda_simple_env_loop_008e
 23208                                  .L_lambda_simple_env_end_008e:
 23209 00010DE5 5B                      	pop rbx
 23210 00010DE6 BE00000000              	mov rsi, 0
 23211                                  .L_lambda_simple_params_loop_008e:	; copy params
 23212 00010DEB 4883FE00                	cmp rsi, 0
 23213 00010DEF 740E                    	je .L_lambda_simple_params_end_008e
 23214 00010DF1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23215 00010DF6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23216 00010DFA 48FFC6                  	inc rsi
 23217 00010DFD EBEC                    	jmp .L_lambda_simple_params_loop_008e
 23218                                  .L_lambda_simple_params_end_008e:
 23219 00010DFF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23220 00010E02 4889C3                  	mov rbx, rax
 23221 00010E05 58                      	pop rax
 23222 00010E06 C60004                  	mov byte [rax], T_closure
 23223 00010E09 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23224 00010E0D 48C74009[1A0E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 23225 00010E15 E936030000              	jmp .L_lambda_simple_end_008e
 23226                                  .L_lambda_simple_code_008e:	; lambda-simple body
 23227 00010E1A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23228 00010E20 740B                    	je .L_lambda_simple_arity_check_ok_008e
 23229 00010E22 FF742410                	push qword [rsp + 8 * 2]
 23230 00010E26 6A01                    	push 1
 23231 00010E28 E981670000              	jmp L_error_incorrect_arity_simple
 23232                                  .L_lambda_simple_arity_check_ok_008e:
 23233 00010E2D C8000000                	enter 0, 0
 23234 00010E31 BF08000000              	mov rdi, 8*1
 23235 00010E36 E8BA670000              	call malloc
 23236 00010E3B 488B5D20                	mov rbx, PARAM(0)
 23237 00010E3F 488918                  	mov qword [rax], rbx
 23238 00010E42 48894520                	mov PARAM(0), rax
 23239 00010E46 48B8-                   	mov rax, sob_void
 23239 00010E48 [0000000000000000] 
 23240                                  
 23241 00010E50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23242 00010E55 E89B670000              	call malloc
 23243 00010E5A 50                      	push rax
 23244 00010E5B BF08000000              	mov rdi, 8 * 1	; new rib
 23245 00010E60 E890670000              	call malloc
 23246 00010E65 50                      	push rax
 23247 00010E66 BF10000000              	mov rdi, 8 * 2	; extended env
 23248 00010E6B E885670000              	call malloc
 23249 00010E70 488B7D10                	mov rdi, ENV
 23250 00010E74 BE00000000              	mov rsi, 0
 23251 00010E79 BA01000000              	mov rdx, 1
 23252                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 23253 00010E7E 4883FE01                	cmp rsi, 1
 23254 00010E82 7410                    	je .L_lambda_simple_env_end_008f
 23255 00010E84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23256 00010E88 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23257 00010E8C 48FFC6                  	inc rsi
 23258 00010E8F 48FFC2                  	inc rdx
 23259 00010E92 EBEA                    	jmp .L_lambda_simple_env_loop_008f
 23260                                  .L_lambda_simple_env_end_008f:
 23261 00010E94 5B                      	pop rbx
 23262 00010E95 BE00000000              	mov rsi, 0
 23263                                  .L_lambda_simple_params_loop_008f:	; copy params
 23264 00010E9A 4883FE01                	cmp rsi, 1
 23265 00010E9E 740E                    	je .L_lambda_simple_params_end_008f
 23266 00010EA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23267 00010EA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23268 00010EA9 48FFC6                  	inc rsi
 23269 00010EAC EBEC                    	jmp .L_lambda_simple_params_loop_008f
 23270                                  .L_lambda_simple_params_end_008f:
 23271 00010EAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23272 00010EB1 4889C3                  	mov rbx, rax
 23273 00010EB4 58                      	pop rax
 23274 00010EB5 C60004                  	mov byte [rax], T_closure
 23275 00010EB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23276 00010EBC 48C74009[C90E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 23277 00010EC4 E949010000              	jmp .L_lambda_simple_end_008f
 23278                                  .L_lambda_simple_code_008f:	; lambda-simple body
 23279 00010EC9 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23280 00010ECF 740B                    	je .L_lambda_simple_arity_check_ok_008f
 23281 00010ED1 FF742410                	push qword [rsp + 8 * 2]
 23282 00010ED5 6A03                    	push 3
 23283 00010ED7 E9D2660000              	jmp L_error_incorrect_arity_simple
 23284                                  .L_lambda_simple_arity_check_ok_008f:
 23285 00010EDC C8000000                	enter 0, 0
 23286                                  	; preparing a non-tail-call
 23287 00010EE0 488B4530                	mov rax, PARAM(2)	; param n
 23288 00010EE4 50                      	push rax
 23289 00010EE5 488B4528                	mov rax, PARAM(1)	; param i
 23290 00010EE9 50                      	push rax
 23291 00010EEA 6A02                    	push 2	; arg count
 23292 00010EEC 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23293 00010EF4 803805                  	cmp byte [rax], T_undefined
 23294 00010EF7 0F84CB650000            	je L_error_fvar_undefined
 23295 00010EFD 803804                  	cmp byte [rax], T_closure
 23296 00010F00 0F8546660000            	jne L_error_non_closure
 23297 00010F06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23298 00010F09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23299 00010F0C 483D[02000000]          	cmp rax, sob_boolean_false
 23300 00010F12 0F84EC000000            	je .L_if_else_006a
 23301                                  	; preparing a tail-call
 23302                                  	; preparing a non-tail-call
 23303 00010F18 488B4530                	mov rax, PARAM(2)	; param n
 23304 00010F1C 50                      	push rax
 23305                                  	; preparing a non-tail-call
 23306 00010F1D 48B8-                   	mov rax, L_constants + 2270
 23306 00010F1F [DE08000000000000] 
 23307 00010F27 50                      	push rax
 23308 00010F28 488B4528                	mov rax, PARAM(1)	; param i
 23309 00010F2C 50                      	push rax
 23310 00010F2D 6A02                    	push 2	; arg count
 23311 00010F2F 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23312 00010F37 803805                  	cmp byte [rax], T_undefined
 23313 00010F3A 0F8488650000            	je L_error_fvar_undefined
 23314 00010F40 803804                  	cmp byte [rax], T_closure
 23315 00010F43 0F8503660000            	jne L_error_non_closure
 23316 00010F49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23317 00010F4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23318 00010F4F 50                      	push rax
 23319 00010F50 488B4520                	mov rax, PARAM(0)	; param v
 23320 00010F54 50                      	push rax
 23321 00010F55 6A03                    	push 3	; arg count
 23322 00010F57 488B4510                	mov rax, ENV
 23323 00010F5B 488B00                  	mov rax, qword [rax + 8 * 0]
 23324 00010F5E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23325 00010F61 488B00                  	mov rax, qword [rax]
 23326 00010F64 803804                  	cmp byte [rax], T_closure
 23327 00010F67 0F85DF650000            	jne L_error_non_closure
 23328 00010F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23329 00010F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23330 00010F73 50                      	push rax
 23331                                  	; preparing a non-tail-call
 23332 00010F74 488B4528                	mov rax, PARAM(1)	; param i
 23333 00010F78 50                      	push rax
 23334 00010F79 488B4520                	mov rax, PARAM(0)	; param v
 23335 00010F7D 50                      	push rax
 23336 00010F7E 6A02                    	push 2	; arg count
 23337 00010F80 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 23338 00010F88 803805                  	cmp byte [rax], T_undefined
 23339 00010F8B 0F8437650000            	je L_error_fvar_undefined
 23340 00010F91 803804                  	cmp byte [rax], T_closure
 23341 00010F94 0F85B2650000            	jne L_error_non_closure
 23342 00010F9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23343 00010F9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 23344 00010FA0 50                      	push rax
 23345 00010FA1 6A02                    	push 2	; arg count
 23346 00010FA3 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 23347 00010FAB 803805                  	cmp byte [rax], T_undefined
 23348 00010FAE 0F8414650000            	je L_error_fvar_undefined
 23349 00010FB4 803804                  	cmp byte [rax], T_closure
 23350 00010FB7 0F858F650000            	jne L_error_non_closure
 23351 00010FBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 23352 00010FC0 FF7508                  	push qword [rbp + 8 * 1]
 23353                                   ; old ret addr
 23354 00010FC3 FF7500                  	push qword [rbp]
 23355                                   ; restore the old rbp
 23356 00010FC6 BB02000000              	mov rbx, 2
 23357 00010FCB 4883C303                	add rbx, 3
 23358 00010FCF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23359 00010FD3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23360 00010FD8 4C8D4DF8                	lea r9, [rbp - 8]
 23361 00010FDC B906000000              	mov rcx, 6
 23362                                  .L_tc_recycle_frame_loop_00c3:
 23363 00010FE1 4883F900                	cmp rcx, 0
 23364 00010FE5 7413                    	je .L_tc_recycle_frame_done_00c3
 23365 00010FE7 4D8B11                  	mov r10, qword [r9]
 23366 00010FEA 4D8910                  	mov qword [r8], r10
 23367 00010FED 4983E808                	sub r8, 8
 23368 00010FF1 4983E908                	sub r9, 8
 23369 00010FF5 48FFC9                  	dec rcx
 23370 00010FF8 EBE7                    	jmp .L_tc_recycle_frame_loop_00c3
 23371                                  .L_tc_recycle_frame_done_00c3:
 23372 00010FFA 498D6008                	lea rsp, [r8 + 8]
 23373 00010FFE 5D                      	pop rbp ; restore the old rbp
 23374 00010FFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23375 00011002 EB0A                    	jmp .L_if_end_006a
 23376                                  .L_if_else_006a:
 23377 00011004 48B8-                   	mov rax, L_constants + 1
 23377 00011006 [0100000000000000] 
 23378                                  .L_if_end_006a:
 23379 0001100E C9                      	leave
 23380 0001100F C22800                  	ret AND_KILL_FRAME(3)
 23381                                  .L_lambda_simple_end_008f:	; new closure is in rax
 23382 00011012 50                      	push rax
 23383 00011013 488B4520                	mov rax, PARAM(0)	; param run
 23384 00011017 8F00                    	pop qword [rax]
 23385 00011019 48B8-                   	mov rax, sob_void
 23385 0001101B [0000000000000000] 
 23386                                  
 23387 00011023 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23388 00011028 E8C8650000              	call malloc
 23389 0001102D 50                      	push rax
 23390 0001102E BF08000000              	mov rdi, 8 * 1	; new rib
 23391 00011033 E8BD650000              	call malloc
 23392 00011038 50                      	push rax
 23393 00011039 BF10000000              	mov rdi, 8 * 2	; extended env
 23394 0001103E E8B2650000              	call malloc
 23395 00011043 488B7D10                	mov rdi, ENV
 23396 00011047 BE00000000              	mov rsi, 0
 23397 0001104C BA01000000              	mov rdx, 1
 23398                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 23399 00011051 4883FE01                	cmp rsi, 1
 23400 00011055 7410                    	je .L_lambda_simple_env_end_0090
 23401 00011057 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23402 0001105B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23403 0001105F 48FFC6                  	inc rsi
 23404 00011062 48FFC2                  	inc rdx
 23405 00011065 EBEA                    	jmp .L_lambda_simple_env_loop_0090
 23406                                  .L_lambda_simple_env_end_0090:
 23407 00011067 5B                      	pop rbx
 23408 00011068 BE00000000              	mov rsi, 0
 23409                                  .L_lambda_simple_params_loop_0090:	; copy params
 23410 0001106D 4883FE01                	cmp rsi, 1
 23411 00011071 740E                    	je .L_lambda_simple_params_end_0090
 23412 00011073 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23413 00011078 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23414 0001107C 48FFC6                  	inc rsi
 23415 0001107F EBEC                    	jmp .L_lambda_simple_params_loop_0090
 23416                                  .L_lambda_simple_params_end_0090:
 23417 00011081 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23418 00011084 4889C3                  	mov rbx, rax
 23419 00011087 58                      	pop rax
 23420 00011088 C60004                  	mov byte [rax], T_closure
 23421 0001108B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23422 0001108F 48C74009[9C100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 23423 00011097 E9B0000000              	jmp .L_lambda_simple_end_0090
 23424                                  .L_lambda_simple_code_0090:	; lambda-simple body
 23425 0001109C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23426 000110A2 740B                    	je .L_lambda_simple_arity_check_ok_0090
 23427 000110A4 FF742410                	push qword [rsp + 8 * 2]
 23428 000110A8 6A01                    	push 1
 23429 000110AA E9FF640000              	jmp L_error_incorrect_arity_simple
 23430                                  .L_lambda_simple_arity_check_ok_0090:
 23431 000110AF C8000000                	enter 0, 0
 23432                                  	; preparing a tail-call
 23433                                  	; preparing a non-tail-call
 23434 000110B3 488B4520                	mov rax, PARAM(0)	; param v
 23435 000110B7 50                      	push rax
 23436 000110B8 6A01                    	push 1	; arg count
 23437 000110BA 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23438 000110C2 803805                  	cmp byte [rax], T_undefined
 23439 000110C5 0F84FD630000            	je L_error_fvar_undefined
 23440 000110CB 803804                  	cmp byte [rax], T_closure
 23441 000110CE 0F8578640000            	jne L_error_non_closure
 23442 000110D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23443 000110D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23444 000110DA 50                      	push rax
 23445 000110DB 48B8-                   	mov rax, L_constants + 2135
 23445 000110DD [5708000000000000] 
 23446 000110E5 50                      	push rax
 23447 000110E6 488B4520                	mov rax, PARAM(0)	; param v
 23448 000110EA 50                      	push rax
 23449 000110EB 6A03                    	push 3	; arg count
 23450 000110ED 488B4510                	mov rax, ENV
 23451 000110F1 488B00                  	mov rax, qword [rax + 8 * 0]
 23452 000110F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23453 000110F7 488B00                  	mov rax, qword [rax]
 23454 000110FA 803804                  	cmp byte [rax], T_closure
 23455 000110FD 0F8549640000            	jne L_error_non_closure
 23456 00011103 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23457 00011106 FF7508                  	push qword [rbp + 8 * 1]
 23458                                   ; old ret addr
 23459 00011109 FF7500                  	push qword [rbp]
 23460                                   ; restore the old rbp
 23461 0001110C BB03000000              	mov rbx, 3
 23462 00011111 4883C303                	add rbx, 3
 23463 00011115 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23464 00011119 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23465 0001111E 4C8D4DF8                	lea r9, [rbp - 8]
 23466 00011122 B907000000              	mov rcx, 7
 23467                                  .L_tc_recycle_frame_loop_00c4:
 23468 00011127 4883F900                	cmp rcx, 0
 23469 0001112B 7413                    	je .L_tc_recycle_frame_done_00c4
 23470 0001112D 4D8B11                  	mov r10, qword [r9]
 23471 00011130 4D8910                  	mov qword [r8], r10
 23472 00011133 4983E808                	sub r8, 8
 23473 00011137 4983E908                	sub r9, 8
 23474 0001113B 48FFC9                  	dec rcx
 23475 0001113E EBE7                    	jmp .L_tc_recycle_frame_loop_00c4
 23476                                  .L_tc_recycle_frame_done_00c4:
 23477 00011140 498D6008                	lea rsp, [r8 + 8]
 23478 00011144 5D                      	pop rbp ; restore the old rbp
 23479 00011145 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23480 00011148 C9                      	leave
 23481 00011149 C21800                  	ret AND_KILL_FRAME(1)
 23482                                  .L_lambda_simple_end_0090:	; new closure is in rax
 23483 0001114C C9                      	leave
 23484 0001114D C21800                  	ret AND_KILL_FRAME(1)
 23485                                  .L_lambda_simple_end_008e:	; new closure is in rax
 23486 00011150 803804                  	cmp byte [rax], T_closure
 23487 00011153 0F85F3630000            	jne L_error_non_closure
 23488 00011159 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23489 0001115C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23490 0001115F 48890425[22170000]      	mov qword [free_var_141], rax
 23491 00011167 48B8-                   	mov rax, sob_void
 23491 00011169 [0000000000000000] 
 23492                                  
 23493 00011171 4889C7                  	mov rdi, rax
 23494 00011174 E8D1660000              	call print_sexpr_if_not_void
 23495 00011179 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23496 0001117E E872640000              	call malloc
 23497 00011183 50                      	push rax
 23498 00011184 BF00000000              	mov rdi, 8 * 0	; new rib
 23499 00011189 E867640000              	call malloc
 23500 0001118E 50                      	push rax
 23501 0001118F BF08000000              	mov rdi, 8 * 1	; extended env
 23502 00011194 E85C640000              	call malloc
 23503 00011199 488B7D10                	mov rdi, ENV
 23504 0001119D BE00000000              	mov rsi, 0
 23505 000111A2 BA01000000              	mov rdx, 1
 23506                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 23507 000111A7 4883FE00                	cmp rsi, 0
 23508 000111AB 7410                    	je .L_lambda_simple_env_end_0091
 23509 000111AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23510 000111B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23511 000111B5 48FFC6                  	inc rsi
 23512 000111B8 48FFC2                  	inc rdx
 23513 000111BB EBEA                    	jmp .L_lambda_simple_env_loop_0091
 23514                                  .L_lambda_simple_env_end_0091:
 23515 000111BD 5B                      	pop rbx
 23516 000111BE BE00000000              	mov rsi, 0
 23517                                  .L_lambda_simple_params_loop_0091:	; copy params
 23518 000111C3 4883FE00                	cmp rsi, 0
 23519 000111C7 740E                    	je .L_lambda_simple_params_end_0091
 23520 000111C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23521 000111CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23522 000111D2 48FFC6                  	inc rsi
 23523 000111D5 EBEC                    	jmp .L_lambda_simple_params_loop_0091
 23524                                  .L_lambda_simple_params_end_0091:
 23525 000111D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23526 000111DA 4889C3                  	mov rbx, rax
 23527 000111DD 58                      	pop rax
 23528 000111DE C60004                  	mov byte [rax], T_closure
 23529 000111E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23530 000111E5 48C74009[F2110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 23531 000111ED E9A4000000              	jmp .L_lambda_simple_end_0091
 23532                                  .L_lambda_simple_code_0091:	; lambda-simple body
 23533 000111F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23534 000111F8 740B                    	je .L_lambda_simple_arity_check_ok_0091
 23535 000111FA FF742410                	push qword [rsp + 8 * 2]
 23536 000111FE 6A01                    	push 1
 23537 00011200 E9A9630000              	jmp L_error_incorrect_arity_simple
 23538                                  .L_lambda_simple_arity_check_ok_0091:
 23539 00011205 C8000000                	enter 0, 0
 23540                                  	; preparing a tail-call
 23541 00011209 488B4520                	mov rax, PARAM(0)	; param n
 23542 0001120D 50                      	push rax
 23543                                  	; preparing a non-tail-call
 23544 0001120E 6A00                    	push 0	; arg count
 23545 00011210 488B0425[00170000]      	mov rax, qword [free_var_139]	; free var trng
 23546 00011218 803805                  	cmp byte [rax], T_undefined
 23547 0001121B 0F84A7620000            	je L_error_fvar_undefined
 23548 00011221 803804                  	cmp byte [rax], T_closure
 23549 00011224 0F8522630000            	jne L_error_non_closure
 23550 0001122A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23551 0001122D FF5009                  	call SOB_CLOSURE_CODE(rax)
 23552 00011230 50                      	push rax
 23553 00011231 6A02                    	push 2	; arg count
 23554 00011233 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 23555 0001123B 803805                  	cmp byte [rax], T_undefined
 23556 0001123E 0F8484620000            	je L_error_fvar_undefined
 23557 00011244 803804                  	cmp byte [rax], T_closure
 23558 00011247 0F85FF620000            	jne L_error_non_closure
 23559 0001124D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23560 00011250 FF7508                  	push qword [rbp + 8 * 1]
 23561                                   ; old ret addr
 23562 00011253 FF7500                  	push qword [rbp]
 23563                                   ; restore the old rbp
 23564 00011256 BB02000000              	mov rbx, 2
 23565 0001125B 4883C303                	add rbx, 3
 23566 0001125F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23567 00011263 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23568 00011268 4C8D4DF8                	lea r9, [rbp - 8]
 23569 0001126C B906000000              	mov rcx, 6
 23570                                  .L_tc_recycle_frame_loop_00c5:
 23571 00011271 4883F900                	cmp rcx, 0
 23572 00011275 7413                    	je .L_tc_recycle_frame_done_00c5
 23573 00011277 4D8B11                  	mov r10, qword [r9]
 23574 0001127A 4D8910                  	mov qword [r8], r10
 23575 0001127D 4983E808                	sub r8, 8
 23576 00011281 4983E908                	sub r9, 8
 23577 00011285 48FFC9                  	dec rcx
 23578 00011288 EBE7                    	jmp .L_tc_recycle_frame_loop_00c5
 23579                                  .L_tc_recycle_frame_done_00c5:
 23580 0001128A 498D6008                	lea rsp, [r8 + 8]
 23581 0001128E 5D                      	pop rbp ; restore the old rbp
 23582 0001128F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23583 00011292 C9                      	leave
 23584 00011293 C21800                  	ret AND_KILL_FRAME(1)
 23585                                  .L_lambda_simple_end_0091:	; new closure is in rax
 23586 00011296 48890425[46150000]      	mov qword [free_var_113], rax
 23587 0001129E 48B8-                   	mov rax, sob_void
 23587 000112A0 [0000000000000000] 
 23588                                  
 23589 000112A8 4889C7                  	mov rdi, rax
 23590 000112AB E89A650000              	call print_sexpr_if_not_void
 23591 000112B0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23592 000112B5 E83B630000              	call malloc
 23593 000112BA 50                      	push rax
 23594 000112BB BF00000000              	mov rdi, 8 * 0	; new rib
 23595 000112C0 E830630000              	call malloc
 23596 000112C5 50                      	push rax
 23597 000112C6 BF08000000              	mov rdi, 8 * 1	; extended env
 23598 000112CB E825630000              	call malloc
 23599 000112D0 488B7D10                	mov rdi, ENV
 23600 000112D4 BE00000000              	mov rsi, 0
 23601 000112D9 BA01000000              	mov rdx, 1
 23602                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 23603 000112DE 4883FE00                	cmp rsi, 0
 23604 000112E2 7410                    	je .L_lambda_simple_env_end_0092
 23605 000112E4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23606 000112E8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23607 000112EC 48FFC6                  	inc rsi
 23608 000112EF 48FFC2                  	inc rdx
 23609 000112F2 EBEA                    	jmp .L_lambda_simple_env_loop_0092
 23610                                  .L_lambda_simple_env_end_0092:
 23611 000112F4 5B                      	pop rbx
 23612 000112F5 BE00000000              	mov rsi, 0
 23613                                  .L_lambda_simple_params_loop_0092:	; copy params
 23614 000112FA 4883FE00                	cmp rsi, 0
 23615 000112FE 740E                    	je .L_lambda_simple_params_end_0092
 23616 00011300 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23617 00011305 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23618 00011309 48FFC6                  	inc rsi
 23619 0001130C EBEC                    	jmp .L_lambda_simple_params_loop_0092
 23620                                  .L_lambda_simple_params_end_0092:
 23621 0001130E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23622 00011311 4889C3                  	mov rbx, rax
 23623 00011314 58                      	pop rax
 23624 00011315 C60004                  	mov byte [rax], T_closure
 23625 00011318 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23626 0001131C 48C74009[29130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 23627 00011324 E98C000000              	jmp .L_lambda_simple_end_0092
 23628                                  .L_lambda_simple_code_0092:	; lambda-simple body
 23629 00011329 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23630 0001132F 740B                    	je .L_lambda_simple_arity_check_ok_0092
 23631 00011331 FF742410                	push qword [rsp + 8 * 2]
 23632 00011335 6A01                    	push 1
 23633 00011337 E972620000              	jmp L_error_incorrect_arity_simple
 23634                                  .L_lambda_simple_arity_check_ok_0092:
 23635 0001133C C8000000                	enter 0, 0
 23636                                  	; preparing a tail-call
 23637 00011340 488B4520                	mov rax, PARAM(0)	; param x
 23638 00011344 50                      	push rax
 23639 00011345 48B8-                   	mov rax, L_constants + 2135
 23639 00011347 [5708000000000000] 
 23640 0001134F 50                      	push rax
 23641 00011350 6A02                    	push 2	; arg count
 23642 00011352 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23643 0001135A 803805                  	cmp byte [rax], T_undefined
 23644 0001135D 0F8465610000            	je L_error_fvar_undefined
 23645 00011363 803804                  	cmp byte [rax], T_closure
 23646 00011366 0F85E0610000            	jne L_error_non_closure
 23647 0001136C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23648 0001136F FF7508                  	push qword [rbp + 8 * 1]
 23649                                   ; old ret addr
 23650 00011372 FF7500                  	push qword [rbp]
 23651                                   ; restore the old rbp
 23652 00011375 BB02000000              	mov rbx, 2
 23653 0001137A 4883C303                	add rbx, 3
 23654 0001137E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23655 00011382 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23656 00011387 4C8D4DF8                	lea r9, [rbp - 8]
 23657 0001138B B906000000              	mov rcx, 6
 23658                                  .L_tc_recycle_frame_loop_00c6:
 23659 00011390 4883F900                	cmp rcx, 0
 23660 00011394 7413                    	je .L_tc_recycle_frame_done_00c6
 23661 00011396 4D8B11                  	mov r10, qword [r9]
 23662 00011399 4D8910                  	mov qword [r8], r10
 23663 0001139C 4983E808                	sub r8, 8
 23664 000113A0 4983E908                	sub r9, 8
 23665 000113A4 48FFC9                  	dec rcx
 23666 000113A7 EBE7                    	jmp .L_tc_recycle_frame_loop_00c6
 23667                                  .L_tc_recycle_frame_done_00c6:
 23668 000113A9 498D6008                	lea rsp, [r8 + 8]
 23669 000113AD 5D                      	pop rbp ; restore the old rbp
 23670 000113AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23671 000113B1 C9                      	leave
 23672 000113B2 C21800                  	ret AND_KILL_FRAME(1)
 23673                                  .L_lambda_simple_end_0092:	; new closure is in rax
 23674 000113B5 48890425[35150000]      	mov qword [free_var_112], rax
 23675 000113BD 48B8-                   	mov rax, sob_void
 23675 000113BF [0000000000000000] 
 23676                                  
 23677 000113C7 4889C7                  	mov rdi, rax
 23678 000113CA E87B640000              	call print_sexpr_if_not_void
 23679 000113CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23680 000113D4 E81C620000              	call malloc
 23681 000113D9 50                      	push rax
 23682 000113DA BF00000000              	mov rdi, 8 * 0	; new rib
 23683 000113DF E811620000              	call malloc
 23684 000113E4 50                      	push rax
 23685 000113E5 BF08000000              	mov rdi, 8 * 1	; extended env
 23686 000113EA E806620000              	call malloc
 23687 000113EF 488B7D10                	mov rdi, ENV
 23688 000113F3 BE00000000              	mov rsi, 0
 23689 000113F8 BA01000000              	mov rdx, 1
 23690                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 23691 000113FD 4883FE00                	cmp rsi, 0
 23692 00011401 7410                    	je .L_lambda_simple_env_end_0093
 23693 00011403 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23694 00011407 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23695 0001140B 48FFC6                  	inc rsi
 23696 0001140E 48FFC2                  	inc rdx
 23697 00011411 EBEA                    	jmp .L_lambda_simple_env_loop_0093
 23698                                  .L_lambda_simple_env_end_0093:
 23699 00011413 5B                      	pop rbx
 23700 00011414 BE00000000              	mov rsi, 0
 23701                                  .L_lambda_simple_params_loop_0093:	; copy params
 23702 00011419 4883FE00                	cmp rsi, 0
 23703 0001141D 740E                    	je .L_lambda_simple_params_end_0093
 23704 0001141F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23705 00011424 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23706 00011428 48FFC6                  	inc rsi
 23707 0001142B EBEC                    	jmp .L_lambda_simple_params_loop_0093
 23708                                  .L_lambda_simple_params_end_0093:
 23709 0001142D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23710 00011430 4889C3                  	mov rbx, rax
 23711 00011433 58                      	pop rax
 23712 00011434 C60004                  	mov byte [rax], T_closure
 23713 00011437 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23714 0001143B 48C74009[48140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 23715 00011443 E98C000000              	jmp .L_lambda_simple_end_0093
 23716                                  .L_lambda_simple_code_0093:	; lambda-simple body
 23717 00011448 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23718 0001144E 740B                    	je .L_lambda_simple_arity_check_ok_0093
 23719 00011450 FF742410                	push qword [rsp + 8 * 2]
 23720 00011454 6A01                    	push 1
 23721 00011456 E953610000              	jmp L_error_incorrect_arity_simple
 23722                                  .L_lambda_simple_arity_check_ok_0093:
 23723 0001145B C8000000                	enter 0, 0
 23724                                  	; preparing a tail-call
 23725 0001145F 48B8-                   	mov rax, L_constants + 2135
 23725 00011461 [5708000000000000] 
 23726 00011469 50                      	push rax
 23727 0001146A 488B4520                	mov rax, PARAM(0)	; param x
 23728 0001146E 50                      	push rax
 23729 0001146F 6A02                    	push 2	; arg count
 23730 00011471 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23731 00011479 803805                  	cmp byte [rax], T_undefined
 23732 0001147C 0F8446600000            	je L_error_fvar_undefined
 23733 00011482 803804                  	cmp byte [rax], T_closure
 23734 00011485 0F85C1600000            	jne L_error_non_closure
 23735 0001148B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23736 0001148E FF7508                  	push qword [rbp + 8 * 1]
 23737                                   ; old ret addr
 23738 00011491 FF7500                  	push qword [rbp]
 23739                                   ; restore the old rbp
 23740 00011494 BB02000000              	mov rbx, 2
 23741 00011499 4883C303                	add rbx, 3
 23742 0001149D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23743 000114A1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23744 000114A6 4C8D4DF8                	lea r9, [rbp - 8]
 23745 000114AA B906000000              	mov rcx, 6
 23746                                  .L_tc_recycle_frame_loop_00c7:
 23747 000114AF 4883F900                	cmp rcx, 0
 23748 000114B3 7413                    	je .L_tc_recycle_frame_done_00c7
 23749 000114B5 4D8B11                  	mov r10, qword [r9]
 23750 000114B8 4D8910                  	mov qword [r8], r10
 23751 000114BB 4983E808                	sub r8, 8
 23752 000114BF 4983E908                	sub r9, 8
 23753 000114C3 48FFC9                  	dec rcx
 23754 000114C6 EBE7                    	jmp .L_tc_recycle_frame_loop_00c7
 23755                                  .L_tc_recycle_frame_done_00c7:
 23756 000114C8 498D6008                	lea rsp, [r8 + 8]
 23757 000114CC 5D                      	pop rbp ; restore the old rbp
 23758 000114CD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23759 000114D0 C9                      	leave
 23760 000114D1 C21800                  	ret AND_KILL_FRAME(1)
 23761                                  .L_lambda_simple_end_0093:	; new closure is in rax
 23762 000114D4 48890425[AD140000]      	mov qword [free_var_104], rax
 23763 000114DC 48B8-                   	mov rax, sob_void
 23763 000114DE [0000000000000000] 
 23764                                  
 23765 000114E6 4889C7                  	mov rdi, rax
 23766 000114E9 E85C630000              	call print_sexpr_if_not_void
 23767 000114EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23768 000114F3 E8FD600000              	call malloc
 23769 000114F8 50                      	push rax
 23770 000114F9 BF00000000              	mov rdi, 8 * 0	; new rib
 23771 000114FE E8F2600000              	call malloc
 23772 00011503 50                      	push rax
 23773 00011504 BF08000000              	mov rdi, 8 * 1	; extended env
 23774 00011509 E8E7600000              	call malloc
 23775 0001150E 488B7D10                	mov rdi, ENV
 23776 00011512 BE00000000              	mov rsi, 0
 23777 00011517 BA01000000              	mov rdx, 1
 23778                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 23779 0001151C 4883FE00                	cmp rsi, 0
 23780 00011520 7410                    	je .L_lambda_simple_env_end_0094
 23781 00011522 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23782 00011526 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23783 0001152A 48FFC6                  	inc rsi
 23784 0001152D 48FFC2                  	inc rdx
 23785 00011530 EBEA                    	jmp .L_lambda_simple_env_loop_0094
 23786                                  .L_lambda_simple_env_end_0094:
 23787 00011532 5B                      	pop rbx
 23788 00011533 BE00000000              	mov rsi, 0
 23789                                  .L_lambda_simple_params_loop_0094:	; copy params
 23790 00011538 4883FE00                	cmp rsi, 0
 23791 0001153C 740E                    	je .L_lambda_simple_params_end_0094
 23792 0001153E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23793 00011543 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23794 00011547 48FFC6                  	inc rsi
 23795 0001154A EBEC                    	jmp .L_lambda_simple_params_loop_0094
 23796                                  .L_lambda_simple_params_end_0094:
 23797 0001154C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23798 0001154F 4889C3                  	mov rbx, rax
 23799 00011552 58                      	pop rax
 23800 00011553 C60004                  	mov byte [rax], T_closure
 23801 00011556 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23802 0001155A 48C74009[67150100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 23803 00011562 E9AF000000              	jmp .L_lambda_simple_end_0094
 23804                                  .L_lambda_simple_code_0094:	; lambda-simple body
 23805 00011567 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23806 0001156D 740B                    	je .L_lambda_simple_arity_check_ok_0094
 23807 0001156F FF742410                	push qword [rsp + 8 * 2]
 23808 00011573 6A01                    	push 1
 23809 00011575 E934600000              	jmp L_error_incorrect_arity_simple
 23810                                  .L_lambda_simple_arity_check_ok_0094:
 23811 0001157A C8000000                	enter 0, 0
 23812                                  	; preparing a tail-call
 23813                                  	; preparing a non-tail-call
 23814 0001157E 48B8-                   	mov rax, L_constants + 3190
 23814 00011580 [760C000000000000] 
 23815 00011588 50                      	push rax
 23816 00011589 488B4520                	mov rax, PARAM(0)	; param n
 23817 0001158D 50                      	push rax
 23818 0001158E 6A02                    	push 2	; arg count
 23819 00011590 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 23820 00011598 803805                  	cmp byte [rax], T_undefined
 23821 0001159B 0F84275F0000            	je L_error_fvar_undefined
 23822 000115A1 803804                  	cmp byte [rax], T_closure
 23823 000115A4 0F85A25F0000            	jne L_error_non_closure
 23824 000115AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23825 000115AD FF5009                  	call SOB_CLOSURE_CODE(rax)
 23826 000115B0 50                      	push rax
 23827 000115B1 6A01                    	push 1	; arg count
 23828 000115B3 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 23829 000115BB 803805                  	cmp byte [rax], T_undefined
 23830 000115BE 0F84045F0000            	je L_error_fvar_undefined
 23831 000115C4 803804                  	cmp byte [rax], T_closure
 23832 000115C7 0F857F5F0000            	jne L_error_non_closure
 23833 000115CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 23834 000115D0 FF7508                  	push qword [rbp + 8 * 1]
 23835                                   ; old ret addr
 23836 000115D3 FF7500                  	push qword [rbp]
 23837                                   ; restore the old rbp
 23838 000115D6 BB01000000              	mov rbx, 1
 23839 000115DB 4883C303                	add rbx, 3
 23840 000115DF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23841 000115E3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23842 000115E8 4C8D4DF8                	lea r9, [rbp - 8]
 23843 000115EC B905000000              	mov rcx, 5
 23844                                  .L_tc_recycle_frame_loop_00c8:
 23845 000115F1 4883F900                	cmp rcx, 0
 23846 000115F5 7413                    	je .L_tc_recycle_frame_done_00c8
 23847 000115F7 4D8B11                  	mov r10, qword [r9]
 23848 000115FA 4D8910                  	mov qword [r8], r10
 23849 000115FD 4983E808                	sub r8, 8
 23850 00011601 4983E908                	sub r9, 8
 23851 00011605 48FFC9                  	dec rcx
 23852 00011608 EBE7                    	jmp .L_tc_recycle_frame_loop_00c8
 23853                                  .L_tc_recycle_frame_done_00c8:
 23854 0001160A 498D6008                	lea rsp, [r8 + 8]
 23855 0001160E 5D                      	pop rbp ; restore the old rbp
 23856 0001160F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23857 00011612 C9                      	leave
 23858 00011613 C21800                  	ret AND_KILL_FRAME(1)
 23859                                  .L_lambda_simple_end_0094:	; new closure is in rax
 23860 00011616 48890425[48130000]      	mov qword [free_var_83], rax
 23861 0001161E 48B8-                   	mov rax, sob_void
 23861 00011620 [0000000000000000] 
 23862                                  
 23863 00011628 4889C7                  	mov rdi, rax
 23864 0001162B E81A620000              	call print_sexpr_if_not_void
 23865 00011630 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23866 00011635 E8BB5F0000              	call malloc
 23867 0001163A 50                      	push rax
 23868 0001163B BF00000000              	mov rdi, 8 * 0	; new rib
 23869 00011640 E8B05F0000              	call malloc
 23870 00011645 50                      	push rax
 23871 00011646 BF08000000              	mov rdi, 8 * 1	; extended env
 23872 0001164B E8A55F0000              	call malloc
 23873 00011650 488B7D10                	mov rdi, ENV
 23874 00011654 BE00000000              	mov rsi, 0
 23875 00011659 BA01000000              	mov rdx, 1
 23876                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 23877 0001165E 4883FE00                	cmp rsi, 0
 23878 00011662 7410                    	je .L_lambda_simple_env_end_0095
 23879 00011664 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23880 00011668 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23881 0001166C 48FFC6                  	inc rsi
 23882 0001166F 48FFC2                  	inc rdx
 23883 00011672 EBEA                    	jmp .L_lambda_simple_env_loop_0095
 23884                                  .L_lambda_simple_env_end_0095:
 23885 00011674 5B                      	pop rbx
 23886 00011675 BE00000000              	mov rsi, 0
 23887                                  .L_lambda_simple_params_loop_0095:	; copy params
 23888 0001167A 4883FE00                	cmp rsi, 0
 23889 0001167E 740E                    	je .L_lambda_simple_params_end_0095
 23890 00011680 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23891 00011685 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23892 00011689 48FFC6                  	inc rsi
 23893 0001168C EBEC                    	jmp .L_lambda_simple_params_loop_0095
 23894                                  .L_lambda_simple_params_end_0095:
 23895 0001168E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23896 00011691 4889C3                  	mov rbx, rax
 23897 00011694 58                      	pop rax
 23898 00011695 C60004                  	mov byte [rax], T_closure
 23899 00011698 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23900 0001169C 48C74009[A9160100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 23901 000116A4 E9A4000000              	jmp .L_lambda_simple_end_0095
 23902                                  .L_lambda_simple_code_0095:	; lambda-simple body
 23903 000116A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23904 000116AF 740B                    	je .L_lambda_simple_arity_check_ok_0095
 23905 000116B1 FF742410                	push qword [rsp + 8 * 2]
 23906 000116B5 6A01                    	push 1
 23907 000116B7 E9F25E0000              	jmp L_error_incorrect_arity_simple
 23908                                  .L_lambda_simple_arity_check_ok_0095:
 23909 000116BC C8000000                	enter 0, 0
 23910                                  	; preparing a tail-call
 23911                                  	; preparing a non-tail-call
 23912 000116C0 488B4520                	mov rax, PARAM(0)	; param n
 23913 000116C4 50                      	push rax
 23914 000116C5 6A01                    	push 1	; arg count
 23915 000116C7 488B0425[48130000]      	mov rax, qword [free_var_83]	; free var even?
 23916 000116CF 803805                  	cmp byte [rax], T_undefined
 23917 000116D2 0F84F05D0000            	je L_error_fvar_undefined
 23918 000116D8 803804                  	cmp byte [rax], T_closure
 23919 000116DB 0F856B5E0000            	jne L_error_non_closure
 23920 000116E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23921 000116E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23922 000116E7 50                      	push rax
 23923 000116E8 6A01                    	push 1	; arg count
 23924 000116EA 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 23925 000116F2 803805                  	cmp byte [rax], T_undefined
 23926 000116F5 0F84CD5D0000            	je L_error_fvar_undefined
 23927 000116FB 803804                  	cmp byte [rax], T_closure
 23928 000116FE 0F85485E0000            	jne L_error_non_closure
 23929 00011704 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23930 00011707 FF7508                  	push qword [rbp + 8 * 1]
 23931                                   ; old ret addr
 23932 0001170A FF7500                  	push qword [rbp]
 23933                                   ; restore the old rbp
 23934 0001170D BB01000000              	mov rbx, 1
 23935 00011712 4883C303                	add rbx, 3
 23936 00011716 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23937 0001171A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23938 0001171F 4C8D4DF8                	lea r9, [rbp - 8]
 23939 00011723 B905000000              	mov rcx, 5
 23940                                  .L_tc_recycle_frame_loop_00c9:
 23941 00011728 4883F900                	cmp rcx, 0
 23942 0001172C 7413                    	je .L_tc_recycle_frame_done_00c9
 23943 0001172E 4D8B11                  	mov r10, qword [r9]
 23944 00011731 4D8910                  	mov qword [r8], r10
 23945 00011734 4983E808                	sub r8, 8
 23946 00011738 4983E908                	sub r9, 8
 23947 0001173C 48FFC9                  	dec rcx
 23948 0001173F EBE7                    	jmp .L_tc_recycle_frame_loop_00c9
 23949                                  .L_tc_recycle_frame_done_00c9:
 23950 00011741 498D6008                	lea rsp, [r8 + 8]
 23951 00011745 5D                      	pop rbp ; restore the old rbp
 23952 00011746 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23953 00011749 C9                      	leave
 23954 0001174A C21800                  	ret AND_KILL_FRAME(1)
 23955                                  .L_lambda_simple_end_0095:	; new closure is in rax
 23956 0001174D 48890425[02150000]      	mov qword [free_var_109], rax
 23957 00011755 48B8-                   	mov rax, sob_void
 23957 00011757 [0000000000000000] 
 23958                                  
 23959 0001175F 4889C7                  	mov rdi, rax
 23960 00011762 E8E3600000              	call print_sexpr_if_not_void
 23961 00011767 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23962 0001176C E8845E0000              	call malloc
 23963 00011771 50                      	push rax
 23964 00011772 BF00000000              	mov rdi, 8 * 0	; new rib
 23965 00011777 E8795E0000              	call malloc
 23966 0001177C 50                      	push rax
 23967 0001177D BF08000000              	mov rdi, 8 * 1	; extended env
 23968 00011782 E86E5E0000              	call malloc
 23969 00011787 488B7D10                	mov rdi, ENV
 23970 0001178B BE00000000              	mov rsi, 0
 23971 00011790 BA01000000              	mov rdx, 1
 23972                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 23973 00011795 4883FE00                	cmp rsi, 0
 23974 00011799 7410                    	je .L_lambda_simple_env_end_0096
 23975 0001179B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23976 0001179F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23977 000117A3 48FFC6                  	inc rsi
 23978 000117A6 48FFC2                  	inc rdx
 23979 000117A9 EBEA                    	jmp .L_lambda_simple_env_loop_0096
 23980                                  .L_lambda_simple_env_end_0096:
 23981 000117AB 5B                      	pop rbx
 23982 000117AC BE00000000              	mov rsi, 0
 23983                                  .L_lambda_simple_params_loop_0096:	; copy params
 23984 000117B1 4883FE00                	cmp rsi, 0
 23985 000117B5 740E                    	je .L_lambda_simple_params_end_0096
 23986 000117B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23987 000117BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23988 000117C0 48FFC6                  	inc rsi
 23989 000117C3 EBEC                    	jmp .L_lambda_simple_params_loop_0096
 23990                                  .L_lambda_simple_params_end_0096:
 23991 000117C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23992 000117C8 4889C3                  	mov rbx, rax
 23993 000117CB 58                      	pop rax
 23994 000117CC C60004                  	mov byte [rax], T_closure
 23995 000117CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23996 000117D3 48C74009[E0170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 23997 000117DB E9B6000000              	jmp .L_lambda_simple_end_0096
 23998                                  .L_lambda_simple_code_0096:	; lambda-simple body
 23999 000117E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24000 000117E6 740B                    	je .L_lambda_simple_arity_check_ok_0096
 24001 000117E8 FF742410                	push qword [rsp + 8 * 2]
 24002 000117EC 6A01                    	push 1
 24003 000117EE E9BB5D0000              	jmp L_error_incorrect_arity_simple
 24004                                  .L_lambda_simple_arity_check_ok_0096:
 24005 000117F3 C8000000                	enter 0, 0
 24006                                  	; preparing a non-tail-call
 24007 000117F7 488B4520                	mov rax, PARAM(0)	; param x
 24008 000117FB 50                      	push rax
 24009 000117FC 6A01                    	push 1	; arg count
 24010 000117FE 488B0425[AD140000]      	mov rax, qword [free_var_104]	; free var negative?
 24011 00011806 803805                  	cmp byte [rax], T_undefined
 24012 00011809 0F84B95C0000            	je L_error_fvar_undefined
 24013 0001180F 803804                  	cmp byte [rax], T_closure
 24014 00011812 0F85345D0000            	jne L_error_non_closure
 24015 00011818 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24016 0001181B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24017 0001181E 483D[02000000]          	cmp rax, sob_boolean_false
 24018 00011824 7468                    	je .L_if_else_006b
 24019                                  	; preparing a tail-call
 24020 00011826 488B4520                	mov rax, PARAM(0)	; param x
 24021 0001182A 50                      	push rax
 24022 0001182B 6A01                    	push 1	; arg count
 24023 0001182D 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 24024 00011835 803805                  	cmp byte [rax], T_undefined
 24025 00011838 0F848A5C0000            	je L_error_fvar_undefined
 24026 0001183E 803804                  	cmp byte [rax], T_closure
 24027 00011841 0F85055D0000            	jne L_error_non_closure
 24028 00011847 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24029 0001184A FF7508                  	push qword [rbp + 8 * 1]
 24030                                   ; old ret addr
 24031 0001184D FF7500                  	push qword [rbp]
 24032                                   ; restore the old rbp
 24033 00011850 BB01000000              	mov rbx, 1
 24034 00011855 4883C303                	add rbx, 3
 24035 00011859 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24036 0001185D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24037 00011862 4C8D4DF8                	lea r9, [rbp - 8]
 24038 00011866 B905000000              	mov rcx, 5
 24039                                  .L_tc_recycle_frame_loop_00ca:
 24040 0001186B 4883F900                	cmp rcx, 0
 24041 0001186F 7413                    	je .L_tc_recycle_frame_done_00ca
 24042 00011871 4D8B11                  	mov r10, qword [r9]
 24043 00011874 4D8910                  	mov qword [r8], r10
 24044 00011877 4983E808                	sub r8, 8
 24045 0001187B 4983E908                	sub r9, 8
 24046 0001187F 48FFC9                  	dec rcx
 24047 00011882 EBE7                    	jmp .L_tc_recycle_frame_loop_00ca
 24048                                  .L_tc_recycle_frame_done_00ca:
 24049 00011884 498D6008                	lea rsp, [r8 + 8]
 24050 00011888 5D                      	pop rbp ; restore the old rbp
 24051 00011889 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24052 0001188C EB04                    	jmp .L_if_end_006b
 24053                                  .L_if_else_006b:
 24054 0001188E 488B4520                	mov rax, PARAM(0)	; param x
 24055                                  .L_if_end_006b:
 24056 00011892 C9                      	leave
 24057 00011893 C21800                  	ret AND_KILL_FRAME(1)
 24058                                  .L_lambda_simple_end_0096:	; new closure is in rax
 24059 00011896 48890425[C30F0000]      	mov qword [free_var_30], rax
 24060 0001189E 48B8-                   	mov rax, sob_void
 24060 000118A0 [0000000000000000] 
 24061                                  
 24062 000118A8 4889C7                  	mov rdi, rax
 24063 000118AB E89A5F0000              	call print_sexpr_if_not_void
 24064 000118B0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24065 000118B5 E83B5D0000              	call malloc
 24066 000118BA 50                      	push rax
 24067 000118BB BF00000000              	mov rdi, 8 * 0	; new rib
 24068 000118C0 E8305D0000              	call malloc
 24069 000118C5 50                      	push rax
 24070 000118C6 BF08000000              	mov rdi, 8 * 1	; extended env
 24071 000118CB E8255D0000              	call malloc
 24072 000118D0 488B7D10                	mov rdi, ENV
 24073 000118D4 BE00000000              	mov rsi, 0
 24074 000118D9 BA01000000              	mov rdx, 1
 24075                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 24076 000118DE 4883FE00                	cmp rsi, 0
 24077 000118E2 7410                    	je .L_lambda_simple_env_end_0097
 24078 000118E4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24079 000118E8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24080 000118EC 48FFC6                  	inc rsi
 24081 000118EF 48FFC2                  	inc rdx
 24082 000118F2 EBEA                    	jmp .L_lambda_simple_env_loop_0097
 24083                                  .L_lambda_simple_env_end_0097:
 24084 000118F4 5B                      	pop rbx
 24085 000118F5 BE00000000              	mov rsi, 0
 24086                                  .L_lambda_simple_params_loop_0097:	; copy params
 24087 000118FA 4883FE00                	cmp rsi, 0
 24088 000118FE 740E                    	je .L_lambda_simple_params_end_0097
 24089 00011900 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24090 00011905 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24091 00011909 48FFC6                  	inc rsi
 24092 0001190C EBEC                    	jmp .L_lambda_simple_params_loop_0097
 24093                                  .L_lambda_simple_params_end_0097:
 24094 0001190E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24095 00011911 4889C3                  	mov rbx, rax
 24096 00011914 58                      	pop rax
 24097 00011915 C60004                  	mov byte [rax], T_closure
 24098 00011918 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24099 0001191C 48C74009[29190100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 24100 00011924 E9F7060000              	jmp .L_lambda_simple_end_0097
 24101                                  .L_lambda_simple_code_0097:	; lambda-simple body
 24102 00011929 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24103 0001192F 740B                    	je .L_lambda_simple_arity_check_ok_0097
 24104 00011931 FF742410                	push qword [rsp + 8 * 2]
 24105 00011935 6A02                    	push 2
 24106 00011937 E9725C0000              	jmp L_error_incorrect_arity_simple
 24107                                  .L_lambda_simple_arity_check_ok_0097:
 24108 0001193C C8000000                	enter 0, 0
 24109                                  	; preparing a non-tail-call
 24110 00011940 488B4520                	mov rax, PARAM(0)	; param e1
 24111 00011944 50                      	push rax
 24112 00011945 6A01                    	push 1	; arg count
 24113 00011947 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 24114 0001194F 803805                  	cmp byte [rax], T_undefined
 24115 00011952 0F84705B0000            	je L_error_fvar_undefined
 24116 00011958 803804                  	cmp byte [rax], T_closure
 24117 0001195B 0F85EB5B0000            	jne L_error_non_closure
 24118 00011961 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24119 00011964 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24120 00011967 483D[02000000]          	cmp rax, sob_boolean_false
 24121 0001196D 7429                    	je .L_if_else_006c
 24122                                  	; preparing a non-tail-call
 24123 0001196F 488B4528                	mov rax, PARAM(1)	; param e2
 24124 00011973 50                      	push rax
 24125 00011974 6A01                    	push 1	; arg count
 24126 00011976 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 24127 0001197E 803805                  	cmp byte [rax], T_undefined
 24128 00011981 0F84415B0000            	je L_error_fvar_undefined
 24129 00011987 803804                  	cmp byte [rax], T_closure
 24130 0001198A 0F85BC5B0000            	jne L_error_non_closure
 24131 00011990 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24132 00011993 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24133 00011996 EB0A                    	jmp .L_if_end_006c
 24134                                  .L_if_else_006c:
 24135 00011998 48B8-                   	mov rax, L_constants + 2
 24135 0001199A [0200000000000000] 
 24136                                  .L_if_end_006c:
 24137 000119A2 483D[02000000]          	cmp rax, sob_boolean_false
 24138 000119A8 0F8440010000            	je .L_if_else_0078
 24139                                  	; preparing a non-tail-call
 24140                                  	; preparing a non-tail-call
 24141 000119AE 488B4528                	mov rax, PARAM(1)	; param e2
 24142 000119B2 50                      	push rax
 24143 000119B3 6A01                    	push 1	; arg count
 24144 000119B5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24145 000119BD 803805                  	cmp byte [rax], T_undefined
 24146 000119C0 0F84025B0000            	je L_error_fvar_undefined
 24147 000119C6 803804                  	cmp byte [rax], T_closure
 24148 000119C9 0F857D5B0000            	jne L_error_non_closure
 24149 000119CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24150 000119D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24151 000119D5 50                      	push rax
 24152                                  	; preparing a non-tail-call
 24153 000119D6 488B4520                	mov rax, PARAM(0)	; param e1
 24154 000119DA 50                      	push rax
 24155 000119DB 6A01                    	push 1	; arg count
 24156 000119DD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24157 000119E5 803805                  	cmp byte [rax], T_undefined
 24158 000119E8 0F84DA5A0000            	je L_error_fvar_undefined
 24159 000119EE 803804                  	cmp byte [rax], T_closure
 24160 000119F1 0F85555B0000            	jne L_error_non_closure
 24161 000119F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24162 000119FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 24163 000119FD 50                      	push rax
 24164 000119FE 6A02                    	push 2	; arg count
 24165 00011A00 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24166 00011A08 803805                  	cmp byte [rax], T_undefined
 24167 00011A0B 0F84B75A0000            	je L_error_fvar_undefined
 24168 00011A11 803804                  	cmp byte [rax], T_closure
 24169 00011A14 0F85325B0000            	jne L_error_non_closure
 24170 00011A1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24171 00011A1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24172 00011A20 483D[02000000]          	cmp rax, sob_boolean_false
 24173 00011A26 0F84B3000000            	je .L_if_else_006d
 24174                                  	; preparing a tail-call
 24175                                  	; preparing a non-tail-call
 24176 00011A2C 488B4528                	mov rax, PARAM(1)	; param e2
 24177 00011A30 50                      	push rax
 24178 00011A31 6A01                    	push 1	; arg count
 24179 00011A33 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24180 00011A3B 803805                  	cmp byte [rax], T_undefined
 24181 00011A3E 0F84845A0000            	je L_error_fvar_undefined
 24182 00011A44 803804                  	cmp byte [rax], T_closure
 24183 00011A47 0F85FF5A0000            	jne L_error_non_closure
 24184 00011A4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24185 00011A50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24186 00011A53 50                      	push rax
 24187                                  	; preparing a non-tail-call
 24188 00011A54 488B4520                	mov rax, PARAM(0)	; param e1
 24189 00011A58 50                      	push rax
 24190 00011A59 6A01                    	push 1	; arg count
 24191 00011A5B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24192 00011A63 803805                  	cmp byte [rax], T_undefined
 24193 00011A66 0F845C5A0000            	je L_error_fvar_undefined
 24194 00011A6C 803804                  	cmp byte [rax], T_closure
 24195 00011A6F 0F85D75A0000            	jne L_error_non_closure
 24196 00011A75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24197 00011A78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24198 00011A7B 50                      	push rax
 24199 00011A7C 6A02                    	push 2	; arg count
 24200 00011A7E 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24201 00011A86 803805                  	cmp byte [rax], T_undefined
 24202 00011A89 0F84395A0000            	je L_error_fvar_undefined
 24203 00011A8F 803804                  	cmp byte [rax], T_closure
 24204 00011A92 0F85B45A0000            	jne L_error_non_closure
 24205 00011A98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24206 00011A9B FF7508                  	push qword [rbp + 8 * 1]
 24207                                   ; old ret addr
 24208 00011A9E FF7500                  	push qword [rbp]
 24209                                   ; restore the old rbp
 24210 00011AA1 BB02000000              	mov rbx, 2
 24211 00011AA6 4883C303                	add rbx, 3
 24212 00011AAA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24213 00011AAE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24214 00011AB3 4C8D4DF8                	lea r9, [rbp - 8]
 24215 00011AB7 B906000000              	mov rcx, 6
 24216                                  .L_tc_recycle_frame_loop_00cb:
 24217 00011ABC 4883F900                	cmp rcx, 0
 24218 00011AC0 7413                    	je .L_tc_recycle_frame_done_00cb
 24219 00011AC2 4D8B11                  	mov r10, qword [r9]
 24220 00011AC5 4D8910                  	mov qword [r8], r10
 24221 00011AC8 4983E808                	sub r8, 8
 24222 00011ACC 4983E908                	sub r9, 8
 24223 00011AD0 48FFC9                  	dec rcx
 24224 00011AD3 EBE7                    	jmp .L_tc_recycle_frame_loop_00cb
 24225                                  .L_tc_recycle_frame_done_00cb:
 24226 00011AD5 498D6008                	lea rsp, [r8 + 8]
 24227 00011AD9 5D                      	pop rbp ; restore the old rbp
 24228 00011ADA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24229 00011ADD EB0A                    	jmp .L_if_end_006d
 24230                                  .L_if_else_006d:
 24231 00011ADF 48B8-                   	mov rax, L_constants + 2
 24231 00011AE1 [0200000000000000] 
 24232                                  .L_if_end_006d:
 24233 00011AE9 E92E050000              	jmp .L_if_end_0078
 24234                                  .L_if_else_0078:
 24235                                  	; preparing a non-tail-call
 24236 00011AEE 488B4520                	mov rax, PARAM(0)	; param e1
 24237 00011AF2 50                      	push rax
 24238 00011AF3 6A01                    	push 1	; arg count
 24239 00011AF5 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 24240 00011AFD 803805                  	cmp byte [rax], T_undefined
 24241 00011B00 0F84C2590000            	je L_error_fvar_undefined
 24242 00011B06 803804                  	cmp byte [rax], T_closure
 24243 00011B09 0F853D5A0000            	jne L_error_non_closure
 24244 00011B0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24245 00011B12 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24246 00011B15 483D[02000000]          	cmp rax, sob_boolean_false
 24247 00011B1B 0F84AF000000            	je .L_if_else_006f
 24248                                  	; preparing a non-tail-call
 24249 00011B21 488B4528                	mov rax, PARAM(1)	; param e2
 24250 00011B25 50                      	push rax
 24251 00011B26 6A01                    	push 1	; arg count
 24252 00011B28 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 24253 00011B30 803805                  	cmp byte [rax], T_undefined
 24254 00011B33 0F848F590000            	je L_error_fvar_undefined
 24255 00011B39 803804                  	cmp byte [rax], T_closure
 24256 00011B3C 0F850A5A0000            	jne L_error_non_closure
 24257 00011B42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24258 00011B45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24259 00011B48 483D[02000000]          	cmp rax, sob_boolean_false
 24260 00011B4E 7474                    	je .L_if_else_006e
 24261                                  	; preparing a non-tail-call
 24262                                  	; preparing a non-tail-call
 24263 00011B50 488B4528                	mov rax, PARAM(1)	; param e2
 24264 00011B54 50                      	push rax
 24265 00011B55 6A01                    	push 1	; arg count
 24266 00011B57 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24267 00011B5F 803805                  	cmp byte [rax], T_undefined
 24268 00011B62 0F8460590000            	je L_error_fvar_undefined
 24269 00011B68 803804                  	cmp byte [rax], T_closure
 24270 00011B6B 0F85DB590000            	jne L_error_non_closure
 24271 00011B71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24272 00011B74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24273 00011B77 50                      	push rax
 24274                                  	; preparing a non-tail-call
 24275 00011B78 488B4520                	mov rax, PARAM(0)	; param e1
 24276 00011B7C 50                      	push rax
 24277 00011B7D 6A01                    	push 1	; arg count
 24278 00011B7F 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24279 00011B87 803805                  	cmp byte [rax], T_undefined
 24280 00011B8A 0F8438590000            	je L_error_fvar_undefined
 24281 00011B90 803804                  	cmp byte [rax], T_closure
 24282 00011B93 0F85B3590000            	jne L_error_non_closure
 24283 00011B99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24284 00011B9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24285 00011B9F 50                      	push rax
 24286 00011BA0 6A02                    	push 2	; arg count
 24287 00011BA2 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24288 00011BAA 803805                  	cmp byte [rax], T_undefined
 24289 00011BAD 0F8415590000            	je L_error_fvar_undefined
 24290 00011BB3 803804                  	cmp byte [rax], T_closure
 24291 00011BB6 0F8590590000            	jne L_error_non_closure
 24292 00011BBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24293 00011BBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24294 00011BC2 EB0A                    	jmp .L_if_end_006e
 24295                                  .L_if_else_006e:
 24296 00011BC4 48B8-                   	mov rax, L_constants + 2
 24296 00011BC6 [0200000000000000] 
 24297                                  .L_if_end_006e:
 24298 00011BCE EB0A                    	jmp .L_if_end_006f
 24299                                  .L_if_else_006f:
 24300 00011BD0 48B8-                   	mov rax, L_constants + 2
 24300 00011BD2 [0200000000000000] 
 24301                                  .L_if_end_006f:
 24302 00011BDA 483D[02000000]          	cmp rax, sob_boolean_false
 24303 00011BE0 0F84B6000000            	je .L_if_else_0077
 24304                                  	; preparing a tail-call
 24305                                  	; preparing a non-tail-call
 24306 00011BE6 488B4528                	mov rax, PARAM(1)	; param e2
 24307 00011BEA 50                      	push rax
 24308 00011BEB 6A01                    	push 1	; arg count
 24309 00011BED 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 24310 00011BF5 803805                  	cmp byte [rax], T_undefined
 24311 00011BF8 0F84CA580000            	je L_error_fvar_undefined
 24312 00011BFE 803804                  	cmp byte [rax], T_closure
 24313 00011C01 0F8545590000            	jne L_error_non_closure
 24314 00011C07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24315 00011C0A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24316 00011C0D 50                      	push rax
 24317                                  	; preparing a non-tail-call
 24318 00011C0E 488B4520                	mov rax, PARAM(0)	; param e1
 24319 00011C12 50                      	push rax
 24320 00011C13 6A01                    	push 1	; arg count
 24321 00011C15 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 24322 00011C1D 803805                  	cmp byte [rax], T_undefined
 24323 00011C20 0F84A2580000            	je L_error_fvar_undefined
 24324 00011C26 803804                  	cmp byte [rax], T_closure
 24325 00011C29 0F851D590000            	jne L_error_non_closure
 24326 00011C2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24327 00011C32 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24328 00011C35 50                      	push rax
 24329 00011C36 6A02                    	push 2	; arg count
 24330 00011C38 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24331 00011C40 803805                  	cmp byte [rax], T_undefined
 24332 00011C43 0F847F580000            	je L_error_fvar_undefined
 24333 00011C49 803804                  	cmp byte [rax], T_closure
 24334 00011C4C 0F85FA580000            	jne L_error_non_closure
 24335 00011C52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24336 00011C55 FF7508                  	push qword [rbp + 8 * 1]
 24337                                   ; old ret addr
 24338 00011C58 FF7500                  	push qword [rbp]
 24339                                   ; restore the old rbp
 24340 00011C5B BB02000000              	mov rbx, 2
 24341 00011C60 4883C303                	add rbx, 3
 24342 00011C64 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24343 00011C68 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24344 00011C6D 4C8D4DF8                	lea r9, [rbp - 8]
 24345 00011C71 B906000000              	mov rcx, 6
 24346                                  .L_tc_recycle_frame_loop_00cc:
 24347 00011C76 4883F900                	cmp rcx, 0
 24348 00011C7A 7413                    	je .L_tc_recycle_frame_done_00cc
 24349 00011C7C 4D8B11                  	mov r10, qword [r9]
 24350 00011C7F 4D8910                  	mov qword [r8], r10
 24351 00011C82 4983E808                	sub r8, 8
 24352 00011C86 4983E908                	sub r9, 8
 24353 00011C8A 48FFC9                  	dec rcx
 24354 00011C8D EBE7                    	jmp .L_tc_recycle_frame_loop_00cc
 24355                                  .L_tc_recycle_frame_done_00cc:
 24356 00011C8F 498D6008                	lea rsp, [r8 + 8]
 24357 00011C93 5D                      	pop rbp ; restore the old rbp
 24358 00011C94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24359 00011C97 E980030000              	jmp .L_if_end_0077
 24360                                  .L_if_else_0077:
 24361                                  	; preparing a non-tail-call
 24362 00011C9C 488B4520                	mov rax, PARAM(0)	; param e1
 24363 00011CA0 50                      	push rax
 24364 00011CA1 6A01                    	push 1	; arg count
 24365 00011CA3 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 24366 00011CAB 803805                  	cmp byte [rax], T_undefined
 24367 00011CAE 0F8414580000            	je L_error_fvar_undefined
 24368 00011CB4 803804                  	cmp byte [rax], T_closure
 24369 00011CB7 0F858F580000            	jne L_error_non_closure
 24370 00011CBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24371 00011CC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24372 00011CC3 483D[02000000]          	cmp rax, sob_boolean_false
 24373 00011CC9 0F84AF000000            	je .L_if_else_0071
 24374                                  	; preparing a non-tail-call
 24375 00011CCF 488B4528                	mov rax, PARAM(1)	; param e2
 24376 00011CD3 50                      	push rax
 24377 00011CD4 6A01                    	push 1	; arg count
 24378 00011CD6 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 24379 00011CDE 803805                  	cmp byte [rax], T_undefined
 24380 00011CE1 0F84E1570000            	je L_error_fvar_undefined
 24381 00011CE7 803804                  	cmp byte [rax], T_closure
 24382 00011CEA 0F855C580000            	jne L_error_non_closure
 24383 00011CF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24384 00011CF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24385 00011CF6 483D[02000000]          	cmp rax, sob_boolean_false
 24386 00011CFC 7474                    	je .L_if_else_0070
 24387                                  	; preparing a non-tail-call
 24388                                  	; preparing a non-tail-call
 24389 00011CFE 488B4528                	mov rax, PARAM(1)	; param e2
 24390 00011D02 50                      	push rax
 24391 00011D03 6A01                    	push 1	; arg count
 24392 00011D05 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24393 00011D0D 803805                  	cmp byte [rax], T_undefined
 24394 00011D10 0F84B2570000            	je L_error_fvar_undefined
 24395 00011D16 803804                  	cmp byte [rax], T_closure
 24396 00011D19 0F852D580000            	jne L_error_non_closure
 24397 00011D1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24398 00011D22 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24399 00011D25 50                      	push rax
 24400                                  	; preparing a non-tail-call
 24401 00011D26 488B4520                	mov rax, PARAM(0)	; param e1
 24402 00011D2A 50                      	push rax
 24403 00011D2B 6A01                    	push 1	; arg count
 24404 00011D2D 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24405 00011D35 803805                  	cmp byte [rax], T_undefined
 24406 00011D38 0F848A570000            	je L_error_fvar_undefined
 24407 00011D3E 803804                  	cmp byte [rax], T_closure
 24408 00011D41 0F8505580000            	jne L_error_non_closure
 24409 00011D47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24410 00011D4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24411 00011D4D 50                      	push rax
 24412 00011D4E 6A02                    	push 2	; arg count
 24413 00011D50 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24414 00011D58 803805                  	cmp byte [rax], T_undefined
 24415 00011D5B 0F8467570000            	je L_error_fvar_undefined
 24416 00011D61 803804                  	cmp byte [rax], T_closure
 24417 00011D64 0F85E2570000            	jne L_error_non_closure
 24418 00011D6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24419 00011D6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24420 00011D70 EB0A                    	jmp .L_if_end_0070
 24421                                  .L_if_else_0070:
 24422 00011D72 48B8-                   	mov rax, L_constants + 2
 24422 00011D74 [0200000000000000] 
 24423                                  .L_if_end_0070:
 24424 00011D7C EB0A                    	jmp .L_if_end_0071
 24425                                  .L_if_else_0071:
 24426 00011D7E 48B8-                   	mov rax, L_constants + 2
 24426 00011D80 [0200000000000000] 
 24427                                  .L_if_end_0071:
 24428 00011D88 483D[02000000]          	cmp rax, sob_boolean_false
 24429 00011D8E 7470                    	je .L_if_else_0076
 24430                                  	; preparing a tail-call
 24431 00011D90 488B4528                	mov rax, PARAM(1)	; param e2
 24432 00011D94 50                      	push rax
 24433 00011D95 488B4520                	mov rax, PARAM(0)	; param e1
 24434 00011D99 50                      	push rax
 24435 00011D9A 6A02                    	push 2	; arg count
 24436 00011D9C 488B0425[BC160000]      	mov rax, qword [free_var_135]	; free var string=?
 24437 00011DA4 803805                  	cmp byte [rax], T_undefined
 24438 00011DA7 0F841B570000            	je L_error_fvar_undefined
 24439 00011DAD 803804                  	cmp byte [rax], T_closure
 24440 00011DB0 0F8596570000            	jne L_error_non_closure
 24441 00011DB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24442 00011DB9 FF7508                  	push qword [rbp + 8 * 1]
 24443                                   ; old ret addr
 24444 00011DBC FF7500                  	push qword [rbp]
 24445                                   ; restore the old rbp
 24446 00011DBF BB02000000              	mov rbx, 2
 24447 00011DC4 4883C303                	add rbx, 3
 24448 00011DC8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24449 00011DCC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24450 00011DD1 4C8D4DF8                	lea r9, [rbp - 8]
 24451 00011DD5 B906000000              	mov rcx, 6
 24452                                  .L_tc_recycle_frame_loop_00cd:
 24453 00011DDA 4883F900                	cmp rcx, 0
 24454 00011DDE 7413                    	je .L_tc_recycle_frame_done_00cd
 24455 00011DE0 4D8B11                  	mov r10, qword [r9]
 24456 00011DE3 4D8910                  	mov qword [r8], r10
 24457 00011DE6 4983E808                	sub r8, 8
 24458 00011DEA 4983E908                	sub r9, 8
 24459 00011DEE 48FFC9                  	dec rcx
 24460 00011DF1 EBE7                    	jmp .L_tc_recycle_frame_loop_00cd
 24461                                  .L_tc_recycle_frame_done_00cd:
 24462 00011DF3 498D6008                	lea rsp, [r8 + 8]
 24463 00011DF7 5D                      	pop rbp ; restore the old rbp
 24464 00011DF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24465 00011DFB E91C020000              	jmp .L_if_end_0076
 24466                                  .L_if_else_0076:
 24467                                  	; preparing a non-tail-call
 24468 00011E00 488B4520                	mov rax, PARAM(0)	; param e1
 24469 00011E04 50                      	push rax
 24470 00011E05 6A01                    	push 1	; arg count
 24471 00011E07 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 24472 00011E0F 803805                  	cmp byte [rax], T_undefined
 24473 00011E12 0F84B0560000            	je L_error_fvar_undefined
 24474 00011E18 803804                  	cmp byte [rax], T_closure
 24475 00011E1B 0F852B570000            	jne L_error_non_closure
 24476 00011E21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24477 00011E24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24478 00011E27 483D[02000000]          	cmp rax, sob_boolean_false
 24479 00011E2D 7429                    	je .L_if_else_0072
 24480                                  	; preparing a non-tail-call
 24481 00011E2F 488B4528                	mov rax, PARAM(1)	; param e2
 24482 00011E33 50                      	push rax
 24483 00011E34 6A01                    	push 1	; arg count
 24484 00011E36 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 24485 00011E3E 803805                  	cmp byte [rax], T_undefined
 24486 00011E41 0F8481560000            	je L_error_fvar_undefined
 24487 00011E47 803804                  	cmp byte [rax], T_closure
 24488 00011E4A 0F85FC560000            	jne L_error_non_closure
 24489 00011E50 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24490 00011E53 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24491 00011E56 EB0A                    	jmp .L_if_end_0072
 24492                                  .L_if_else_0072:
 24493 00011E58 48B8-                   	mov rax, L_constants + 2
 24493 00011E5A [0200000000000000] 
 24494                                  .L_if_end_0072:
 24495 00011E62 483D[02000000]          	cmp rax, sob_boolean_false
 24496 00011E68 7470                    	je .L_if_else_0075
 24497                                  	; preparing a tail-call
 24498 00011E6A 488B4528                	mov rax, PARAM(1)	; param e2
 24499 00011E6E 50                      	push rax
 24500 00011E6F 488B4520                	mov rax, PARAM(0)	; param e1
 24501 00011E73 50                      	push rax
 24502 00011E74 6A02                    	push 2	; arg count
 24503 00011E76 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24504 00011E7E 803805                  	cmp byte [rax], T_undefined
 24505 00011E81 0F8441560000            	je L_error_fvar_undefined
 24506 00011E87 803804                  	cmp byte [rax], T_closure
 24507 00011E8A 0F85BC560000            	jne L_error_non_closure
 24508 00011E90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24509 00011E93 FF7508                  	push qword [rbp + 8 * 1]
 24510                                   ; old ret addr
 24511 00011E96 FF7500                  	push qword [rbp]
 24512                                   ; restore the old rbp
 24513 00011E99 BB02000000              	mov rbx, 2
 24514 00011E9E 4883C303                	add rbx, 3
 24515 00011EA2 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24516 00011EA6 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24517 00011EAB 4C8D4DF8                	lea r9, [rbp - 8]
 24518 00011EAF B906000000              	mov rcx, 6
 24519                                  .L_tc_recycle_frame_loop_00ce:
 24520 00011EB4 4883F900                	cmp rcx, 0
 24521 00011EB8 7413                    	je .L_tc_recycle_frame_done_00ce
 24522 00011EBA 4D8B11                  	mov r10, qword [r9]
 24523 00011EBD 4D8910                  	mov qword [r8], r10
 24524 00011EC0 4983E808                	sub r8, 8
 24525 00011EC4 4983E908                	sub r9, 8
 24526 00011EC8 48FFC9                  	dec rcx
 24527 00011ECB EBE7                    	jmp .L_tc_recycle_frame_loop_00ce
 24528                                  .L_tc_recycle_frame_done_00ce:
 24529 00011ECD 498D6008                	lea rsp, [r8 + 8]
 24530 00011ED1 5D                      	pop rbp ; restore the old rbp
 24531 00011ED2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24532 00011ED5 E942010000              	jmp .L_if_end_0075
 24533                                  .L_if_else_0075:
 24534                                  	; preparing a non-tail-call
 24535 00011EDA 488B4520                	mov rax, PARAM(0)	; param e1
 24536 00011EDE 50                      	push rax
 24537 00011EDF 6A01                    	push 1	; arg count
 24538 00011EE1 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 24539 00011EE9 803805                  	cmp byte [rax], T_undefined
 24540 00011EEC 0F84D6550000            	je L_error_fvar_undefined
 24541 00011EF2 803804                  	cmp byte [rax], T_closure
 24542 00011EF5 0F8551560000            	jne L_error_non_closure
 24543 00011EFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24544 00011EFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24545 00011F01 483D[02000000]          	cmp rax, sob_boolean_false
 24546 00011F07 7429                    	je .L_if_else_0073
 24547                                  	; preparing a non-tail-call
 24548 00011F09 488B4528                	mov rax, PARAM(1)	; param e2
 24549 00011F0D 50                      	push rax
 24550 00011F0E 6A01                    	push 1	; arg count
 24551 00011F10 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 24552 00011F18 803805                  	cmp byte [rax], T_undefined
 24553 00011F1B 0F84A7550000            	je L_error_fvar_undefined
 24554 00011F21 803804                  	cmp byte [rax], T_closure
 24555 00011F24 0F8522560000            	jne L_error_non_closure
 24556 00011F2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24557 00011F2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24558 00011F30 EB0A                    	jmp .L_if_end_0073
 24559                                  .L_if_else_0073:
 24560 00011F32 48B8-                   	mov rax, L_constants + 2
 24560 00011F34 [0200000000000000] 
 24561                                  .L_if_end_0073:
 24562 00011F3C 483D[02000000]          	cmp rax, sob_boolean_false
 24563 00011F42 746D                    	je .L_if_else_0074
 24564                                  	; preparing a tail-call
 24565 00011F44 488B4528                	mov rax, PARAM(1)	; param e2
 24566 00011F48 50                      	push rax
 24567 00011F49 488B4520                	mov rax, PARAM(0)	; param e1
 24568 00011F4D 50                      	push rax
 24569 00011F4E 6A02                    	push 2	; arg count
 24570 00011F50 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 24571 00011F58 803805                  	cmp byte [rax], T_undefined
 24572 00011F5B 0F8467550000            	je L_error_fvar_undefined
 24573 00011F61 803804                  	cmp byte [rax], T_closure
 24574 00011F64 0F85E2550000            	jne L_error_non_closure
 24575 00011F6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24576 00011F6D FF7508                  	push qword [rbp + 8 * 1]
 24577                                   ; old ret addr
 24578 00011F70 FF7500                  	push qword [rbp]
 24579                                   ; restore the old rbp
 24580 00011F73 BB02000000              	mov rbx, 2
 24581 00011F78 4883C303                	add rbx, 3
 24582 00011F7C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24583 00011F80 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24584 00011F85 4C8D4DF8                	lea r9, [rbp - 8]
 24585 00011F89 B906000000              	mov rcx, 6
 24586                                  .L_tc_recycle_frame_loop_00cf:
 24587 00011F8E 4883F900                	cmp rcx, 0
 24588 00011F92 7413                    	je .L_tc_recycle_frame_done_00cf
 24589 00011F94 4D8B11                  	mov r10, qword [r9]
 24590 00011F97 4D8910                  	mov qword [r8], r10
 24591 00011F9A 4983E808                	sub r8, 8
 24592 00011F9E 4983E908                	sub r9, 8
 24593 00011FA2 48FFC9                  	dec rcx
 24594 00011FA5 EBE7                    	jmp .L_tc_recycle_frame_loop_00cf
 24595                                  .L_tc_recycle_frame_done_00cf:
 24596 00011FA7 498D6008                	lea rsp, [r8 + 8]
 24597 00011FAB 5D                      	pop rbp ; restore the old rbp
 24598 00011FAC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24599 00011FAF EB6B                    	jmp .L_if_end_0074
 24600                                  .L_if_else_0074:
 24601                                  	; preparing a tail-call
 24602 00011FB1 488B4528                	mov rax, PARAM(1)	; param e2
 24603 00011FB5 50                      	push rax
 24604 00011FB6 488B4520                	mov rax, PARAM(0)	; param e1
 24605 00011FBA 50                      	push rax
 24606 00011FBB 6A02                    	push 2	; arg count
 24607 00011FBD 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 24608 00011FC5 803805                  	cmp byte [rax], T_undefined
 24609 00011FC8 0F84FA540000            	je L_error_fvar_undefined
 24610 00011FCE 803804                  	cmp byte [rax], T_closure
 24611 00011FD1 0F8575550000            	jne L_error_non_closure
 24612 00011FD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24613 00011FDA FF7508                  	push qword [rbp + 8 * 1]
 24614                                   ; old ret addr
 24615 00011FDD FF7500                  	push qword [rbp]
 24616                                   ; restore the old rbp
 24617 00011FE0 BB02000000              	mov rbx, 2
 24618 00011FE5 4883C303                	add rbx, 3
 24619 00011FE9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24620 00011FED 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24621 00011FF2 4C8D4DF8                	lea r9, [rbp - 8]
 24622 00011FF6 B906000000              	mov rcx, 6
 24623                                  .L_tc_recycle_frame_loop_00d0:
 24624 00011FFB 4883F900                	cmp rcx, 0
 24625 00011FFF 7413                    	je .L_tc_recycle_frame_done_00d0
 24626 00012001 4D8B11                  	mov r10, qword [r9]
 24627 00012004 4D8910                  	mov qword [r8], r10
 24628 00012007 4983E808                	sub r8, 8
 24629 0001200B 4983E908                	sub r9, 8
 24630 0001200F 48FFC9                  	dec rcx
 24631 00012012 EBE7                    	jmp .L_tc_recycle_frame_loop_00d0
 24632                                  .L_tc_recycle_frame_done_00d0:
 24633 00012014 498D6008                	lea rsp, [r8 + 8]
 24634 00012018 5D                      	pop rbp ; restore the old rbp
 24635 00012019 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24636                                  .L_if_end_0074:
 24637                                  .L_if_end_0075:
 24638                                  .L_if_end_0076:
 24639                                  .L_if_end_0077:
 24640                                  .L_if_end_0078:
 24641 0001201C C9                      	leave
 24642 0001201D C22000                  	ret AND_KILL_FRAME(2)
 24643                                  .L_lambda_simple_end_0097:	; new closure is in rax
 24644 00012020 48890425[26130000]      	mov qword [free_var_81], rax
 24645 00012028 48B8-                   	mov rax, sob_void
 24645 0001202A [0000000000000000] 
 24646                                  
 24647 00012032 4889C7                  	mov rdi, rax
 24648 00012035 E810580000              	call print_sexpr_if_not_void
 24649 0001203A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24650 0001203F E8B1550000              	call malloc
 24651 00012044 50                      	push rax
 24652 00012045 BF00000000              	mov rdi, 8 * 0	; new rib
 24653 0001204A E8A6550000              	call malloc
 24654 0001204F 50                      	push rax
 24655 00012050 BF08000000              	mov rdi, 8 * 1	; extended env
 24656 00012055 E89B550000              	call malloc
 24657 0001205A 488B7D10                	mov rdi, ENV
 24658 0001205E BE00000000              	mov rsi, 0
 24659 00012063 BA01000000              	mov rdx, 1
 24660                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 24661 00012068 4883FE00                	cmp rsi, 0
 24662 0001206C 7410                    	je .L_lambda_simple_env_end_0098
 24663 0001206E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24664 00012072 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24665 00012076 48FFC6                  	inc rsi
 24666 00012079 48FFC2                  	inc rdx
 24667 0001207C EBEA                    	jmp .L_lambda_simple_env_loop_0098
 24668                                  .L_lambda_simple_env_end_0098:
 24669 0001207E 5B                      	pop rbx
 24670 0001207F BE00000000              	mov rsi, 0
 24671                                  .L_lambda_simple_params_loop_0098:	; copy params
 24672 00012084 4883FE00                	cmp rsi, 0
 24673 00012088 740E                    	je .L_lambda_simple_params_end_0098
 24674 0001208A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24675 0001208F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24676 00012093 48FFC6                  	inc rsi
 24677 00012096 EBEC                    	jmp .L_lambda_simple_params_loop_0098
 24678                                  .L_lambda_simple_params_end_0098:
 24679 00012098 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24680 0001209B 4889C3                  	mov rbx, rax
 24681 0001209E 58                      	pop rax
 24682 0001209F C60004                  	mov byte [rax], T_closure
 24683 000120A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24684 000120A6 48C74009[B3200100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 24685 000120AE E9A9010000              	jmp .L_lambda_simple_end_0098
 24686                                  .L_lambda_simple_code_0098:	; lambda-simple body
 24687 000120B3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24688 000120B9 740B                    	je .L_lambda_simple_arity_check_ok_0098
 24689 000120BB FF742410                	push qword [rsp + 8 * 2]
 24690 000120BF 6A02                    	push 2
 24691 000120C1 E9E8540000              	jmp L_error_incorrect_arity_simple
 24692                                  .L_lambda_simple_arity_check_ok_0098:
 24693 000120C6 C8000000                	enter 0, 0
 24694                                  	; preparing a non-tail-call
 24695 000120CA 488B4528                	mov rax, PARAM(1)	; param s
 24696 000120CE 50                      	push rax
 24697 000120CF 6A01                    	push 1	; arg count
 24698 000120D1 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 24699 000120D9 803805                  	cmp byte [rax], T_undefined
 24700 000120DC 0F84E6530000            	je L_error_fvar_undefined
 24701 000120E2 803804                  	cmp byte [rax], T_closure
 24702 000120E5 0F8561540000            	jne L_error_non_closure
 24703 000120EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24704 000120EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24705 000120F1 483D[02000000]          	cmp rax, sob_boolean_false
 24706 000120F7 740F                    	je .L_if_else_007a
 24707 000120F9 48B8-                   	mov rax, L_constants + 2
 24707 000120FB [0200000000000000] 
 24708 00012103 E950010000              	jmp .L_if_end_007a
 24709                                  .L_if_else_007a:
 24710                                  	; preparing a non-tail-call
 24711 00012108 488B4520                	mov rax, PARAM(0)	; param a
 24712 0001210C 50                      	push rax
 24713                                  	; preparing a non-tail-call
 24714 0001210D 488B4528                	mov rax, PARAM(1)	; param s
 24715 00012111 50                      	push rax
 24716 00012112 6A01                    	push 1	; arg count
 24717 00012114 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
 24718 0001211C 803805                  	cmp byte [rax], T_undefined
 24719 0001211F 0F84A3530000            	je L_error_fvar_undefined
 24720 00012125 803804                  	cmp byte [rax], T_closure
 24721 00012128 0F851E540000            	jne L_error_non_closure
 24722 0001212E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24723 00012131 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24724 00012134 50                      	push rax
 24725 00012135 6A02                    	push 2	; arg count
 24726 00012137 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 24727 0001213F 803805                  	cmp byte [rax], T_undefined
 24728 00012142 0F8480530000            	je L_error_fvar_undefined
 24729 00012148 803804                  	cmp byte [rax], T_closure
 24730 0001214B 0F85FB530000            	jne L_error_non_closure
 24731 00012151 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24732 00012154 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24733 00012157 483D[02000000]          	cmp rax, sob_boolean_false
 24734 0001215D 746B                    	je .L_if_else_0079
 24735                                  	; preparing a tail-call
 24736 0001215F 488B4528                	mov rax, PARAM(1)	; param s
 24737 00012163 50                      	push rax
 24738 00012164 6A01                    	push 1	; arg count
 24739 00012166 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24740 0001216E 803805                  	cmp byte [rax], T_undefined
 24741 00012171 0F8451530000            	je L_error_fvar_undefined
 24742 00012177 803804                  	cmp byte [rax], T_closure
 24743 0001217A 0F85CC530000            	jne L_error_non_closure
 24744 00012180 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24745 00012183 FF7508                  	push qword [rbp + 8 * 1]
 24746                                   ; old ret addr
 24747 00012186 FF7500                  	push qword [rbp]
 24748                                   ; restore the old rbp
 24749 00012189 BB01000000              	mov rbx, 1
 24750 0001218E 4883C303                	add rbx, 3
 24751 00012192 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24752 00012196 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24753 0001219B 4C8D4DF8                	lea r9, [rbp - 8]
 24754 0001219F B905000000              	mov rcx, 5
 24755                                  .L_tc_recycle_frame_loop_00d1:
 24756 000121A4 4883F900                	cmp rcx, 0
 24757 000121A8 7413                    	je .L_tc_recycle_frame_done_00d1
 24758 000121AA 4D8B11                  	mov r10, qword [r9]
 24759 000121AD 4D8910                  	mov qword [r8], r10
 24760 000121B0 4983E808                	sub r8, 8
 24761 000121B4 4983E908                	sub r9, 8
 24762 000121B8 48FFC9                  	dec rcx
 24763 000121BB EBE7                    	jmp .L_tc_recycle_frame_loop_00d1
 24764                                  .L_tc_recycle_frame_done_00d1:
 24765 000121BD 498D6008                	lea rsp, [r8 + 8]
 24766 000121C1 5D                      	pop rbp ; restore the old rbp
 24767 000121C2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24768 000121C5 E98E000000              	jmp .L_if_end_0079
 24769                                  .L_if_else_0079:
 24770                                  	; preparing a tail-call
 24771                                  	; preparing a non-tail-call
 24772 000121CA 488B4528                	mov rax, PARAM(1)	; param s
 24773 000121CE 50                      	push rax
 24774 000121CF 6A01                    	push 1	; arg count
 24775 000121D1 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24776 000121D9 803805                  	cmp byte [rax], T_undefined
 24777 000121DC 0F84E6520000            	je L_error_fvar_undefined
 24778 000121E2 803804                  	cmp byte [rax], T_closure
 24779 000121E5 0F8561530000            	jne L_error_non_closure
 24780 000121EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24781 000121EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24782 000121F1 50                      	push rax
 24783 000121F2 488B4520                	mov rax, PARAM(0)	; param a
 24784 000121F6 50                      	push rax
 24785 000121F7 6A02                    	push 2	; arg count
 24786 000121F9 488B0425[07100000]      	mov rax, qword [free_var_34]	; free var assoc
 24787 00012201 803805                  	cmp byte [rax], T_undefined
 24788 00012204 0F84BE520000            	je L_error_fvar_undefined
 24789 0001220A 803804                  	cmp byte [rax], T_closure
 24790 0001220D 0F8539530000            	jne L_error_non_closure
 24791 00012213 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24792 00012216 FF7508                  	push qword [rbp + 8 * 1]
 24793                                   ; old ret addr
 24794 00012219 FF7500                  	push qword [rbp]
 24795                                   ; restore the old rbp
 24796 0001221C BB02000000              	mov rbx, 2
 24797 00012221 4883C303                	add rbx, 3
 24798 00012225 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24799 00012229 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24800 0001222E 4C8D4DF8                	lea r9, [rbp - 8]
 24801 00012232 B906000000              	mov rcx, 6
 24802                                  .L_tc_recycle_frame_loop_00d2:
 24803 00012237 4883F900                	cmp rcx, 0
 24804 0001223B 7413                    	je .L_tc_recycle_frame_done_00d2
 24805 0001223D 4D8B11                  	mov r10, qword [r9]
 24806 00012240 4D8910                  	mov qword [r8], r10
 24807 00012243 4983E808                	sub r8, 8
 24808 00012247 4983E908                	sub r9, 8
 24809 0001224B 48FFC9                  	dec rcx
 24810 0001224E EBE7                    	jmp .L_tc_recycle_frame_loop_00d2
 24811                                  .L_tc_recycle_frame_done_00d2:
 24812 00012250 498D6008                	lea rsp, [r8 + 8]
 24813 00012254 5D                      	pop rbp ; restore the old rbp
 24814 00012255 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24815                                  .L_if_end_0079:
 24816                                  .L_if_end_007a:
 24817 00012258 C9                      	leave
 24818 00012259 C22000                  	ret AND_KILL_FRAME(2)
 24819                                  .L_lambda_simple_end_0098:	; new closure is in rax
 24820 0001225C 48890425[07100000]      	mov qword [free_var_34], rax
 24821 00012264 48B8-                   	mov rax, sob_void
 24821 00012266 [0000000000000000] 
 24822                                  
 24823 0001226E 4889C7                  	mov rdi, rax
 24824 00012271 E8D4550000              	call print_sexpr_if_not_void
 24825                                  	; preparing a non-tail-call
 24826 00012276 48B8-                   	mov rax, L_constants + 1993
 24826 00012278 [C907000000000000] 
 24827 00012280 50                      	push rax
 24828 00012281 48B8-                   	mov rax, L_constants + 1993
 24828 00012283 [C907000000000000] 
 24829 0001228B 50                      	push rax
 24830 0001228C 6A02                    	push 2	; arg count
 24831 0001228E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24832 00012293 E85D530000              	call malloc
 24833 00012298 50                      	push rax
 24834 00012299 BF00000000              	mov rdi, 8 * 0	; new rib
 24835 0001229E E852530000              	call malloc
 24836 000122A3 50                      	push rax
 24837 000122A4 BF08000000              	mov rdi, 8 * 1	; extended env
 24838 000122A9 E847530000              	call malloc
 24839 000122AE 488B7D10                	mov rdi, ENV
 24840 000122B2 BE00000000              	mov rsi, 0
 24841 000122B7 BA01000000              	mov rdx, 1
 24842                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 24843 000122BC 4883FE00                	cmp rsi, 0
 24844 000122C0 7410                    	je .L_lambda_simple_env_end_0099
 24845 000122C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24846 000122C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24847 000122CA 48FFC6                  	inc rsi
 24848 000122CD 48FFC2                  	inc rdx
 24849 000122D0 EBEA                    	jmp .L_lambda_simple_env_loop_0099
 24850                                  .L_lambda_simple_env_end_0099:
 24851 000122D2 5B                      	pop rbx
 24852 000122D3 BE00000000              	mov rsi, 0
 24853                                  .L_lambda_simple_params_loop_0099:	; copy params
 24854 000122D8 4883FE00                	cmp rsi, 0
 24855 000122DC 740E                    	je .L_lambda_simple_params_end_0099
 24856 000122DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24857 000122E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24858 000122E7 48FFC6                  	inc rsi
 24859 000122EA EBEC                    	jmp .L_lambda_simple_params_loop_0099
 24860                                  .L_lambda_simple_params_end_0099:
 24861 000122EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24862 000122EF 4889C3                  	mov rbx, rax
 24863 000122F2 58                      	pop rax
 24864 000122F3 C60004                  	mov byte [rax], T_closure
 24865 000122F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24866 000122FA 48C74009[07230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 24867 00012302 E9D9070000              	jmp .L_lambda_simple_end_0099
 24868                                  .L_lambda_simple_code_0099:	; lambda-simple body
 24869 00012307 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24870 0001230D 740B                    	je .L_lambda_simple_arity_check_ok_0099
 24871 0001230F FF742410                	push qword [rsp + 8 * 2]
 24872 00012313 6A02                    	push 2
 24873 00012315 E994520000              	jmp L_error_incorrect_arity_simple
 24874                                  .L_lambda_simple_arity_check_ok_0099:
 24875 0001231A C8000000                	enter 0, 0
 24876 0001231E BF08000000              	mov rdi, 8*1
 24877 00012323 E8CD520000              	call malloc
 24878 00012328 488B5D20                	mov rbx, PARAM(0)
 24879 0001232C 488918                  	mov qword [rax], rbx
 24880 0001232F 48894520                	mov PARAM(0), rax
 24881 00012333 48B8-                   	mov rax, sob_void
 24881 00012335 [0000000000000000] 
 24882                                  
 24883 0001233D BF08000000              	mov rdi, 8*1
 24884 00012342 E8AE520000              	call malloc
 24885 00012347 488B5D28                	mov rbx, PARAM(1)
 24886 0001234B 488918                  	mov qword [rax], rbx
 24887 0001234E 48894528                	mov PARAM(1), rax
 24888 00012352 48B8-                   	mov rax, sob_void
 24888 00012354 [0000000000000000] 
 24889                                  
 24890 0001235C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24891 00012361 E88F520000              	call malloc
 24892 00012366 50                      	push rax
 24893 00012367 BF10000000              	mov rdi, 8 * 2	; new rib
 24894 0001236C E884520000              	call malloc
 24895 00012371 50                      	push rax
 24896 00012372 BF10000000              	mov rdi, 8 * 2	; extended env
 24897 00012377 E879520000              	call malloc
 24898 0001237C 488B7D10                	mov rdi, ENV
 24899 00012380 BE00000000              	mov rsi, 0
 24900 00012385 BA01000000              	mov rdx, 1
 24901                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 24902 0001238A 4883FE01                	cmp rsi, 1
 24903 0001238E 7410                    	je .L_lambda_simple_env_end_009a
 24904 00012390 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24905 00012394 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24906 00012398 48FFC6                  	inc rsi
 24907 0001239B 48FFC2                  	inc rdx
 24908 0001239E EBEA                    	jmp .L_lambda_simple_env_loop_009a
 24909                                  .L_lambda_simple_env_end_009a:
 24910 000123A0 5B                      	pop rbx
 24911 000123A1 BE00000000              	mov rsi, 0
 24912                                  .L_lambda_simple_params_loop_009a:	; copy params
 24913 000123A6 4883FE02                	cmp rsi, 2
 24914 000123AA 740E                    	je .L_lambda_simple_params_end_009a
 24915 000123AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24916 000123B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24917 000123B5 48FFC6                  	inc rsi
 24918 000123B8 EBEC                    	jmp .L_lambda_simple_params_loop_009a
 24919                                  .L_lambda_simple_params_end_009a:
 24920 000123BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24921 000123BD 4889C3                  	mov rbx, rax
 24922 000123C0 58                      	pop rax
 24923 000123C1 C60004                  	mov byte [rax], T_closure
 24924 000123C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24925 000123C8 48C74009[D5230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 24926 000123D0 E97C020000              	jmp .L_lambda_simple_end_009a
 24927                                  .L_lambda_simple_code_009a:	; lambda-simple body
 24928 000123D5 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24929 000123DB 740B                    	je .L_lambda_simple_arity_check_ok_009a
 24930 000123DD FF742410                	push qword [rsp + 8 * 2]
 24931 000123E1 6A03                    	push 3
 24932 000123E3 E9C6510000              	jmp L_error_incorrect_arity_simple
 24933                                  .L_lambda_simple_arity_check_ok_009a:
 24934 000123E8 C8000000                	enter 0, 0
 24935                                  	; preparing a non-tail-call
 24936 000123EC 488B4530                	mov rax, PARAM(2)	; param s
 24937 000123F0 50                      	push rax
 24938 000123F1 6A01                    	push 1	; arg count
 24939 000123F3 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 24940 000123FB 803805                  	cmp byte [rax], T_undefined
 24941 000123FE 0F84C4500000            	je L_error_fvar_undefined
 24942 00012404 803804                  	cmp byte [rax], T_closure
 24943 00012407 0F853F510000            	jne L_error_non_closure
 24944 0001240D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24945 00012410 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24946 00012413 483D[02000000]          	cmp rax, sob_boolean_false
 24947 00012419 7409                    	je .L_if_else_007b
 24948 0001241B 488B4520                	mov rax, PARAM(0)	; param target
 24949 0001241F E929020000              	jmp .L_if_end_007b
 24950                                  .L_if_else_007b:
 24951                                  	; preparing a tail-call
 24952                                  	; preparing a non-tail-call
 24953                                  	; preparing a non-tail-call
 24954                                  	; preparing a non-tail-call
 24955 00012424 488B4530                	mov rax, PARAM(2)	; param s
 24956 00012428 50                      	push rax
 24957 00012429 6A01                    	push 1	; arg count
 24958 0001242B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24959 00012433 803805                  	cmp byte [rax], T_undefined
 24960 00012436 0F848C500000            	je L_error_fvar_undefined
 24961 0001243C 803804                  	cmp byte [rax], T_closure
 24962 0001243F 0F8507510000            	jne L_error_non_closure
 24963 00012445 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24964 00012448 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24965 0001244B 50                      	push rax
 24966 0001244C 6A01                    	push 1	; arg count
 24967 0001244E 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24968 00012456 803805                  	cmp byte [rax], T_undefined
 24969 00012459 0F8469500000            	je L_error_fvar_undefined
 24970 0001245F 803804                  	cmp byte [rax], T_closure
 24971 00012462 0F85E4500000            	jne L_error_non_closure
 24972 00012468 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24973 0001246B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24974 0001246E 50                      	push rax
 24975 0001246F 48B8-                   	mov rax, L_constants + 2135
 24975 00012471 [5708000000000000] 
 24976 00012479 50                      	push rax
 24977                                  	; preparing a non-tail-call
 24978 0001247A 488B4530                	mov rax, PARAM(2)	; param s
 24979 0001247E 50                      	push rax
 24980 0001247F 6A01                    	push 1	; arg count
 24981 00012481 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24982 00012489 803805                  	cmp byte [rax], T_undefined
 24983 0001248C 0F8436500000            	je L_error_fvar_undefined
 24984 00012492 803804                  	cmp byte [rax], T_closure
 24985 00012495 0F85B1500000            	jne L_error_non_closure
 24986 0001249B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24987 0001249E FF5009                  	call SOB_CLOSURE_CODE(rax)
 24988 000124A1 50                      	push rax
 24989 000124A2 488B4528                	mov rax, PARAM(1)	; param i
 24990 000124A6 50                      	push rax
 24991 000124A7 488B4520                	mov rax, PARAM(0)	; param target
 24992 000124AB 50                      	push rax
 24993 000124AC 6A05                    	push 5	; arg count
 24994 000124AE 488B4510                	mov rax, ENV
 24995 000124B2 488B00                  	mov rax, qword [rax + 8 * 0]
 24996 000124B5 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 24997 000124B9 488B00                  	mov rax, qword [rax]
 24998 000124BC 803804                  	cmp byte [rax], T_closure
 24999 000124BF 0F8587500000            	jne L_error_non_closure
 25000 000124C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25001 000124C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25002 000124CB 50                      	push rax
 25003 000124CC 6A01                    	push 1	; arg count
 25004 000124CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25005 000124D3 E81D510000              	call malloc
 25006 000124D8 50                      	push rax
 25007 000124D9 BF18000000              	mov rdi, 8 * 3	; new rib
 25008 000124DE E812510000              	call malloc
 25009 000124E3 50                      	push rax
 25010 000124E4 BF18000000              	mov rdi, 8 * 3	; extended env
 25011 000124E9 E807510000              	call malloc
 25012 000124EE 488B7D10                	mov rdi, ENV
 25013 000124F2 BE00000000              	mov rsi, 0
 25014 000124F7 BA01000000              	mov rdx, 1
 25015                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 25016 000124FC 4883FE02                	cmp rsi, 2
 25017 00012500 7410                    	je .L_lambda_simple_env_end_009b
 25018 00012502 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25019 00012506 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25020 0001250A 48FFC6                  	inc rsi
 25021 0001250D 48FFC2                  	inc rdx
 25022 00012510 EBEA                    	jmp .L_lambda_simple_env_loop_009b
 25023                                  .L_lambda_simple_env_end_009b:
 25024 00012512 5B                      	pop rbx
 25025 00012513 BE00000000              	mov rsi, 0
 25026                                  .L_lambda_simple_params_loop_009b:	; copy params
 25027 00012518 4883FE03                	cmp rsi, 3
 25028 0001251C 740E                    	je .L_lambda_simple_params_end_009b
 25029 0001251E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25030 00012523 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25031 00012527 48FFC6                  	inc rsi
 25032 0001252A EBEC                    	jmp .L_lambda_simple_params_loop_009b
 25033                                  .L_lambda_simple_params_end_009b:
 25034 0001252C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25035 0001252F 4889C3                  	mov rbx, rax
 25036 00012532 58                      	pop rax
 25037 00012533 C60004                  	mov byte [rax], T_closure
 25038 00012536 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25039 0001253A 48C74009[47250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 25040 00012542 E9B8000000              	jmp .L_lambda_simple_end_009b
 25041                                  .L_lambda_simple_code_009b:	; lambda-simple body
 25042 00012547 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25043 0001254D 740B                    	je .L_lambda_simple_arity_check_ok_009b
 25044 0001254F FF742410                	push qword [rsp + 8 * 2]
 25045 00012553 6A01                    	push 1
 25046 00012555 E954500000              	jmp L_error_incorrect_arity_simple
 25047                                  .L_lambda_simple_arity_check_ok_009b:
 25048 0001255A C8000000                	enter 0, 0
 25049                                  	; preparing a tail-call
 25050                                  	; preparing a non-tail-call
 25051 0001255E 488B4510                	mov rax, ENV
 25052 00012562 488B00                  	mov rax, qword [rax + 8 * 0]
 25053 00012565 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25054 00012569 50                      	push rax
 25055 0001256A 6A01                    	push 1	; arg count
 25056 0001256C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25057 00012574 803805                  	cmp byte [rax], T_undefined
 25058 00012577 0F844B4F0000            	je L_error_fvar_undefined
 25059 0001257D 803804                  	cmp byte [rax], T_closure
 25060 00012580 0F85C64F0000            	jne L_error_non_closure
 25061 00012586 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25062 00012589 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25063 0001258C 50                      	push rax
 25064 0001258D 488B4520                	mov rax, PARAM(0)	; param i
 25065 00012591 50                      	push rax
 25066 00012592 488B4510                	mov rax, ENV
 25067 00012596 488B00                  	mov rax, qword [rax + 8 * 0]
 25068 00012599 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25069 0001259C 50                      	push rax
 25070 0001259D 6A03                    	push 3	; arg count
 25071 0001259F 488B4510                	mov rax, ENV
 25072 000125A3 488B4008                	mov rax, qword [rax + 8 * 1]
 25073 000125A7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25074 000125AA 488B00                  	mov rax, qword [rax]
 25075 000125AD 803804                  	cmp byte [rax], T_closure
 25076 000125B0 0F85964F0000            	jne L_error_non_closure
 25077 000125B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25078 000125B9 FF7508                  	push qword [rbp + 8 * 1]
 25079                                   ; old ret addr
 25080 000125BC FF7500                  	push qword [rbp]
 25081                                   ; restore the old rbp
 25082 000125BF BB03000000              	mov rbx, 3
 25083 000125C4 4883C303                	add rbx, 3
 25084 000125C8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25085 000125CC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25086 000125D1 4C8D4DF8                	lea r9, [rbp - 8]
 25087 000125D5 B907000000              	mov rcx, 7
 25088                                  .L_tc_recycle_frame_loop_00d4:
 25089 000125DA 4883F900                	cmp rcx, 0
 25090 000125DE 7413                    	je .L_tc_recycle_frame_done_00d4
 25091 000125E0 4D8B11                  	mov r10, qword [r9]
 25092 000125E3 4D8910                  	mov qword [r8], r10
 25093 000125E6 4983E808                	sub r8, 8
 25094 000125EA 4983E908                	sub r9, 8
 25095 000125EE 48FFC9                  	dec rcx
 25096 000125F1 EBE7                    	jmp .L_tc_recycle_frame_loop_00d4
 25097                                  .L_tc_recycle_frame_done_00d4:
 25098 000125F3 498D6008                	lea rsp, [r8 + 8]
 25099 000125F7 5D                      	pop rbp ; restore the old rbp
 25100 000125F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25101 000125FB C9                      	leave
 25102 000125FC C21800                  	ret AND_KILL_FRAME(1)
 25103                                  .L_lambda_simple_end_009b:	; new closure is in rax
 25104 000125FF 803804                  	cmp byte [rax], T_closure
 25105 00012602 0F85444F0000            	jne L_error_non_closure
 25106 00012608 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25107 0001260B FF7508                  	push qword [rbp + 8 * 1]
 25108                                   ; old ret addr
 25109 0001260E FF7500                  	push qword [rbp]
 25110                                   ; restore the old rbp
 25111 00012611 BB01000000              	mov rbx, 1
 25112 00012616 4883C303                	add rbx, 3
 25113 0001261A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25114 0001261E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25115 00012623 4C8D4DF8                	lea r9, [rbp - 8]
 25116 00012627 B905000000              	mov rcx, 5
 25117                                  .L_tc_recycle_frame_loop_00d3:
 25118 0001262C 4883F900                	cmp rcx, 0
 25119 00012630 7413                    	je .L_tc_recycle_frame_done_00d3
 25120 00012632 4D8B11                  	mov r10, qword [r9]
 25121 00012635 4D8910                  	mov qword [r8], r10
 25122 00012638 4983E808                	sub r8, 8
 25123 0001263C 4983E908                	sub r9, 8
 25124 00012640 48FFC9                  	dec rcx
 25125 00012643 EBE7                    	jmp .L_tc_recycle_frame_loop_00d3
 25126                                  .L_tc_recycle_frame_done_00d3:
 25127 00012645 498D6008                	lea rsp, [r8 + 8]
 25128 00012649 5D                      	pop rbp ; restore the old rbp
 25129 0001264A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25130                                  .L_if_end_007b:
 25131 0001264D C9                      	leave
 25132 0001264E C22800                  	ret AND_KILL_FRAME(3)
 25133                                  .L_lambda_simple_end_009a:	; new closure is in rax
 25134 00012651 50                      	push rax
 25135 00012652 488B4520                	mov rax, PARAM(0)	; param run
 25136 00012656 8F00                    	pop qword [rax]
 25137 00012658 48B8-                   	mov rax, sob_void
 25137 0001265A [0000000000000000] 
 25138                                  
 25139 00012662 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25140 00012667 E8894F0000              	call malloc
 25141 0001266C 50                      	push rax
 25142 0001266D BF10000000              	mov rdi, 8 * 2	; new rib
 25143 00012672 E87E4F0000              	call malloc
 25144 00012677 50                      	push rax
 25145 00012678 BF10000000              	mov rdi, 8 * 2	; extended env
 25146 0001267D E8734F0000              	call malloc
 25147 00012682 488B7D10                	mov rdi, ENV
 25148 00012686 BE00000000              	mov rsi, 0
 25149 0001268B BA01000000              	mov rdx, 1
 25150                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 25151 00012690 4883FE01                	cmp rsi, 1
 25152 00012694 7410                    	je .L_lambda_simple_env_end_009c
 25153 00012696 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25154 0001269A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25155 0001269E 48FFC6                  	inc rsi
 25156 000126A1 48FFC2                  	inc rdx
 25157 000126A4 EBEA                    	jmp .L_lambda_simple_env_loop_009c
 25158                                  .L_lambda_simple_env_end_009c:
 25159 000126A6 5B                      	pop rbx
 25160 000126A7 BE00000000              	mov rsi, 0
 25161                                  .L_lambda_simple_params_loop_009c:	; copy params
 25162 000126AC 4883FE02                	cmp rsi, 2
 25163 000126B0 740E                    	je .L_lambda_simple_params_end_009c
 25164 000126B2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25165 000126B7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25166 000126BB 48FFC6                  	inc rsi
 25167 000126BE EBEC                    	jmp .L_lambda_simple_params_loop_009c
 25168                                  .L_lambda_simple_params_end_009c:
 25169 000126C0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25170 000126C3 4889C3                  	mov rbx, rax
 25171 000126C6 58                      	pop rax
 25172 000126C7 C60004                  	mov byte [rax], T_closure
 25173 000126CA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25174 000126CE 48C74009[DB260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 25175 000126D6 E985010000              	jmp .L_lambda_simple_end_009c
 25176                                  .L_lambda_simple_code_009c:	; lambda-simple body
 25177 000126DB 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25178 000126E1 740B                    	je .L_lambda_simple_arity_check_ok_009c
 25179 000126E3 FF742410                	push qword [rsp + 8 * 2]
 25180 000126E7 6A05                    	push 5
 25181 000126E9 E9C04E0000              	jmp L_error_incorrect_arity_simple
 25182                                  .L_lambda_simple_arity_check_ok_009c:
 25183 000126EE C8000000                	enter 0, 0
 25184                                  	; preparing a non-tail-call
 25185 000126F2 488B4540                	mov rax, PARAM(4)	; param limit
 25186 000126F6 50                      	push rax
 25187 000126F7 488B4538                	mov rax, PARAM(3)	; param j
 25188 000126FB 50                      	push rax
 25189 000126FC 6A02                    	push 2	; arg count
 25190 000126FE 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 25191 00012706 803805                  	cmp byte [rax], T_undefined
 25192 00012709 0F84B94D0000            	je L_error_fvar_undefined
 25193 0001270F 803804                  	cmp byte [rax], T_closure
 25194 00012712 0F85344E0000            	jne L_error_non_closure
 25195 00012718 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25196 0001271B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25197 0001271E 483D[02000000]          	cmp rax, sob_boolean_false
 25198 00012724 0F842E010000            	je .L_if_else_007c
 25199                                  	; preparing a non-tail-call
 25200                                  	; preparing a non-tail-call
 25201 0001272A 488B4538                	mov rax, PARAM(3)	; param j
 25202 0001272E 50                      	push rax
 25203 0001272F 488B4530                	mov rax, PARAM(2)	; param str
 25204 00012733 50                      	push rax
 25205 00012734 6A02                    	push 2	; arg count
 25206 00012736 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 25207 0001273E 803805                  	cmp byte [rax], T_undefined
 25208 00012741 0F84814D0000            	je L_error_fvar_undefined
 25209 00012747 803804                  	cmp byte [rax], T_closure
 25210 0001274A 0F85FC4D0000            	jne L_error_non_closure
 25211 00012750 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25212 00012753 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25213 00012756 50                      	push rax
 25214 00012757 488B4528                	mov rax, PARAM(1)	; param i
 25215 0001275B 50                      	push rax
 25216 0001275C 488B4520                	mov rax, PARAM(0)	; param target
 25217 00012760 50                      	push rax
 25218 00012761 6A03                    	push 3	; arg count
 25219 00012763 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 25220 0001276B 803805                  	cmp byte [rax], T_undefined
 25221 0001276E 0F84544D0000            	je L_error_fvar_undefined
 25222 00012774 803804                  	cmp byte [rax], T_closure
 25223 00012777 0F85CF4D0000            	jne L_error_non_closure
 25224 0001277D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25225 00012780 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25226                                  
 25227                                  	; preparing a tail-call
 25228 00012783 488B4540                	mov rax, PARAM(4)	; param limit
 25229 00012787 50                      	push rax
 25230                                  	; preparing a non-tail-call
 25231 00012788 48B8-                   	mov rax, L_constants + 2270
 25231 0001278A [DE08000000000000] 
 25232 00012792 50                      	push rax
 25233 00012793 488B4538                	mov rax, PARAM(3)	; param j
 25234 00012797 50                      	push rax
 25235 00012798 6A02                    	push 2	; arg count
 25236 0001279A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25237 000127A2 803805                  	cmp byte [rax], T_undefined
 25238 000127A5 0F841D4D0000            	je L_error_fvar_undefined
 25239 000127AB 803804                  	cmp byte [rax], T_closure
 25240 000127AE 0F85984D0000            	jne L_error_non_closure
 25241 000127B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25242 000127B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25243 000127BA 50                      	push rax
 25244 000127BB 488B4530                	mov rax, PARAM(2)	; param str
 25245 000127BF 50                      	push rax
 25246                                  	; preparing a non-tail-call
 25247 000127C0 48B8-                   	mov rax, L_constants + 2270
 25247 000127C2 [DE08000000000000] 
 25248 000127CA 50                      	push rax
 25249 000127CB 488B4528                	mov rax, PARAM(1)	; param i
 25250 000127CF 50                      	push rax
 25251 000127D0 6A02                    	push 2	; arg count
 25252 000127D2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25253 000127DA 803805                  	cmp byte [rax], T_undefined
 25254 000127DD 0F84E54C0000            	je L_error_fvar_undefined
 25255 000127E3 803804                  	cmp byte [rax], T_closure
 25256 000127E6 0F85604D0000            	jne L_error_non_closure
 25257 000127EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 25258 000127EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 25259 000127F2 50                      	push rax
 25260 000127F3 488B4520                	mov rax, PARAM(0)	; param target
 25261 000127F7 50                      	push rax
 25262 000127F8 6A05                    	push 5	; arg count
 25263 000127FA 488B4510                	mov rax, ENV
 25264 000127FE 488B00                  	mov rax, qword [rax + 8 * 0]
 25265 00012801 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25266 00012805 488B00                  	mov rax, qword [rax]
 25267 00012808 803804                  	cmp byte [rax], T_closure
 25268 0001280B 0F853B4D0000            	jne L_error_non_closure
 25269 00012811 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25270 00012814 FF7508                  	push qword [rbp + 8 * 1]
 25271                                   ; old ret addr
 25272 00012817 FF7500                  	push qword [rbp]
 25273                                   ; restore the old rbp
 25274 0001281A BB05000000              	mov rbx, 5
 25275 0001281F 4883C303                	add rbx, 3
 25276 00012823 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25277 00012827 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25278 0001282C 4C8D4DF8                	lea r9, [rbp - 8]
 25279 00012830 B909000000              	mov rcx, 9
 25280                                  .L_tc_recycle_frame_loop_00d5:
 25281 00012835 4883F900                	cmp rcx, 0
 25282 00012839 7413                    	je .L_tc_recycle_frame_done_00d5
 25283 0001283B 4D8B11                  	mov r10, qword [r9]
 25284 0001283E 4D8910                  	mov qword [r8], r10
 25285 00012841 4983E808                	sub r8, 8
 25286 00012845 4983E908                	sub r9, 8
 25287 00012849 48FFC9                  	dec rcx
 25288 0001284C EBE7                    	jmp .L_tc_recycle_frame_loop_00d5
 25289                                  .L_tc_recycle_frame_done_00d5:
 25290 0001284E 498D6008                	lea rsp, [r8 + 8]
 25291 00012852 5D                      	pop rbp ; restore the old rbp
 25292 00012853 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25293 00012856 EB04                    	jmp .L_if_end_007c
 25294                                  .L_if_else_007c:
 25295 00012858 488B4528                	mov rax, PARAM(1)	; param i
 25296                                  .L_if_end_007c:
 25297 0001285C C9                      	leave
 25298 0001285D C23800                  	ret AND_KILL_FRAME(5)
 25299                                  .L_lambda_simple_end_009c:	; new closure is in rax
 25300 00012860 50                      	push rax
 25301 00012861 488B4528                	mov rax, PARAM(1)	; param add
 25302 00012865 8F00                    	pop qword [rax]
 25303 00012867 48B8-                   	mov rax, sob_void
 25303 00012869 [0000000000000000] 
 25304                                  
 25305 00012871 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25306 00012876 E87A4D0000              	call malloc
 25307 0001287B 50                      	push rax
 25308 0001287C BF10000000              	mov rdi, 8 * 2	; new rib
 25309 00012881 E86F4D0000              	call malloc
 25310 00012886 50                      	push rax
 25311 00012887 BF10000000              	mov rdi, 8 * 2	; extended env
 25312 0001288C E8644D0000              	call malloc
 25313 00012891 488B7D10                	mov rdi, ENV
 25314 00012895 4831F6                  	 xor rsi, rsi
 25315 00012898 4831D2                  	 xor rdx, rdx
 25316 0001289B 48FFC2                  	inc rdx
 25317                                  .L_lambda_opt_env_loop_0017:	; ext_env[i + 1] <-- env[i]
 25318 0001289E 4883FE01                	cmp rsi, 1
 25319 000128A2 7410                    	je .L_lambda_opt_env_end_0017
 25320 000128A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25321 000128A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25322 000128AC 48FFC6                  	inc rsi
 25323 000128AF 48FFC2                  	inc rdx
 25324 000128B2 EBEA                    	jmp .L_lambda_opt_env_loop_0017
 25325                                  .L_lambda_opt_env_end_0017:
 25326 000128B4 5B                      	pop rbx
 25327 000128B5 4831F6                  	xor rsi, rsi
 25328                                  .L_lambda_opt_params_loop_0017:	; copy params
 25329 000128B8 4883FE02                	cmp rsi, 2
 25330 000128BC 740E                    	je .L_lambda_opt_params_end_0017
 25331 000128BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25332 000128C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25333 000128C7 48FFC6                  	inc rsi
 25334 000128CA EBEC                    	jmp .L_lambda_opt_params_loop_0017
 25335                                  .L_lambda_opt_params_end_0017:
 25336 000128CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25337 000128CF 4889C3                  	mov rbx, rax
 25338 000128D2 58                      	pop rax
 25339 000128D3 C60004                  	mov byte [rax], T_closure
 25340 000128D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25341 000128DA 48C74009[E7280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 25342 000128E2 E9F5010000              	jmp .L_lambda_opt_end_0017
 25343                                  .L_lambda_opt_code_0017:; lambda opt body
 25344 000128E7 48837C241000            	cmp qword [rsp + 8 * 2], 0
 25345 000128ED 7409                    	je .L_lambda_opt_arity_check_exact_0017
 25346 000128EF 7F57                    	jg .L_lambda_opt_arity_check_more_0017
 25347 000128F1 6A00                    	push 0
 25348 000128F3 E9CA4C0000              	jmp L_error_incorrect_arity_opt
 25349                                  .L_lambda_opt_arity_check_exact_0017:
 25350 000128F8 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 25351 000128FC 4C894C24F8              	mov qword [rsp -8], r9
 25352 00012901 4C8B4C2408              	mov r9, qword [rsp +8]
 25353 00012906 4C890C24                	mov qword [rsp +8 * 0], r9
 25354 0001290A 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 25355 0001290F 4C89C9                  	mov rcx, r9
 25356 00012912 49FFC1                  	inc r9
 25357 00012915 4C894C2408              	mov qword [rsp +8], r9
 25358 0001291A 4889E2                  	mov rdx, rsp
 25359 0001291D 4883C218                	add rdx, 24
 25360                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0017:
 25361 00012921 4883F900                	cmp rcx, 0
 25362 00012925 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0017
 25363 00012927 4C8B02                  	mov r8, qword [rdx]
 25364 0001292A 4C8942F8                	mov qword [rdx - 8], r8
 25365 0001292E 4883C208                	add rdx, 8
 25366 00012932 48FFC9                  	dec rcx
 25367 00012935 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0017
 25368                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0017:
 25369 00012937 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 25370 0001293F 4883EC08                	sub rsp, 8
 25371 00012943 E984000000              	jmp .L_lambda_opt_stack_adjusted_0017
 25372                                  .L_lambda_opt_arity_check_more_0017:
 25373 00012948 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 25374 0001294D 4D89C4                  	mov r12, r8
 25375 00012950 4C89C1                  	mov rcx, r8
 25376 00012953 4D8D5002                	lea r10, [r8 + 2] 
 25377 00012957 4883E900                	sub rcx, 0
 25378 0001295B 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 25379 00012960 49B9-                   	mov r9, sob_nil
 25379 00012962 [0100000000000000] 
 25380                                  .L_lambda_opt_create_list_of_opt_params_0017:
 25381 0001296A 4883F900                	cmp rcx, 0
 25382 0001296E 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0017
 25383 00012970 BF11000000              	mov rdi, 17
 25384 00012975 E87B4C0000              	call malloc
 25385 0001297A C60021                  	mov byte [rax], T_pair
 25386 0001297D 498B1B                  	mov rbx, qword [r11]
 25387 00012980 48895801                	mov qword [rax +1], rbx
 25388 00012984 4C894809                	mov qword [rax + 1 + 8], r9
 25389 00012988 4989C1                  	mov r9, rax
 25390 0001298B 48FFC9                  	dec rcx
 25391 0001298E 4983EB08                	sub r11, 8
 25392 00012992 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0017
 25393                                  .L_lambda_opt_create_list_of_opt_params_end_0017:
 25394 00012994 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 25395 00012999 4D8908                  	mov qword [r8], r9
 25396 0001299C 4E8D14D500000000        	lea r10, [8 * r10]
 25397 000129A4 4901E2                  	add r10, rsp
 25398 000129A7 B904000000              	mov rcx, 4 + 0
 25399                                  .L_lambda_opt_stack_shrink_loop_0017:
 25400 000129AC 4883F900                	cmp rcx, 0
 25401 000129B0 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0017
 25402 000129B2 4D8B18                  	mov r11, qword [r8]
 25403 000129B5 4D891A                  	mov qword [r10], r11
 25404 000129B8 4983E808                	sub r8, 8
 25405 000129BC 4983EA08                	sub r10, 8
 25406 000129C0 48FFC9                  	dec rcx
 25407 000129C3 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 25408                                  .L_lambda_opt_stack_shrink_loop_exit_0017:
 25409 000129C5 4983C208                	add r10, 8
 25410 000129C9 4C89D4                  	mov rsp, r10
 25411                                  .L_lambda_opt_stack_adjusted_0017:;continue with the code, the stack is ok
 25412 000129CC 48C744241001000000      	mov qword [rsp + 8*2], 1
 25413 000129D5 C8000000                	enter 0, 0
 25414                                  	; preparing a tail-call
 25415 000129D9 488B4520                	mov rax, PARAM(0)	; param strings
 25416 000129DD 50                      	push rax
 25417 000129DE 48B8-                   	mov rax, L_constants + 2135
 25417 000129E0 [5708000000000000] 
 25418 000129E8 50                      	push rax
 25419                                  	; preparing a non-tail-call
 25420                                  	; preparing a non-tail-call
 25421                                  	; preparing a non-tail-call
 25422 000129E9 488B4520                	mov rax, PARAM(0)	; param strings
 25423 000129ED 50                      	push rax
 25424 000129EE 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 25425 000129F6 803805                  	cmp byte [rax], T_undefined
 25426 000129F9 0F84C94A0000            	je L_error_fvar_undefined
 25427 000129FF 50                      	push rax
 25428 00012A00 6A02                    	push 2	; arg count
 25429 00012A02 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 25430 00012A0A 803805                  	cmp byte [rax], T_undefined
 25431 00012A0D 0F84B54A0000            	je L_error_fvar_undefined
 25432 00012A13 803804                  	cmp byte [rax], T_closure
 25433 00012A16 0F85304B0000            	jne L_error_non_closure
 25434 00012A1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25435 00012A1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25436 00012A22 50                      	push rax
 25437 00012A23 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25438 00012A2B 803805                  	cmp byte [rax], T_undefined
 25439 00012A2E 0F84944A0000            	je L_error_fvar_undefined
 25440 00012A34 50                      	push rax
 25441 00012A35 6A02                    	push 2	; arg count
 25442 00012A37 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 25443 00012A3F 803805                  	cmp byte [rax], T_undefined
 25444 00012A42 0F84804A0000            	je L_error_fvar_undefined
 25445 00012A48 803804                  	cmp byte [rax], T_closure
 25446 00012A4B 0F85FB4A0000            	jne L_error_non_closure
 25447 00012A51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25448 00012A54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25449 00012A57 50                      	push rax
 25450 00012A58 6A01                    	push 1	; arg count
 25451 00012A5A 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 25452 00012A62 803805                  	cmp byte [rax], T_undefined
 25453 00012A65 0F845D4A0000            	je L_error_fvar_undefined
 25454 00012A6B 803804                  	cmp byte [rax], T_closure
 25455 00012A6E 0F85D84A0000            	jne L_error_non_closure
 25456 00012A74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25457 00012A77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25458 00012A7A 50                      	push rax
 25459 00012A7B 6A03                    	push 3	; arg count
 25460 00012A7D 488B4510                	mov rax, ENV
 25461 00012A81 488B00                  	mov rax, qword [rax + 8 * 0]
 25462 00012A84 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25463 00012A87 488B00                  	mov rax, qword [rax]
 25464 00012A8A 803804                  	cmp byte [rax], T_closure
 25465 00012A8D 0F85B94A0000            	jne L_error_non_closure
 25466 00012A93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25467 00012A96 FF7508                  	push qword [rbp + 8 * 1]
 25468                                   ; old ret addr
 25469 00012A99 FF7500                  	push qword [rbp]
 25470                                   ; restore the old rbp
 25471 00012A9C BB03000000              	mov rbx, 3
 25472 00012AA1 4883C303                	add rbx, 3
 25473 00012AA5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25474 00012AA9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25475 00012AAE 4C8D4DF8                	lea r9, [rbp - 8]
 25476 00012AB2 B907000000              	mov rcx, 7
 25477                                  .L_tc_recycle_frame_loop_00d6:
 25478 00012AB7 4883F900                	cmp rcx, 0
 25479 00012ABB 7413                    	je .L_tc_recycle_frame_done_00d6
 25480 00012ABD 4D8B11                  	mov r10, qword [r9]
 25481 00012AC0 4D8910                  	mov qword [r8], r10
 25482 00012AC3 4983E808                	sub r8, 8
 25483 00012AC7 4983E908                	sub r9, 8
 25484 00012ACB 48FFC9                  	dec rcx
 25485 00012ACE EBE7                    	jmp .L_tc_recycle_frame_loop_00d6
 25486                                  .L_tc_recycle_frame_done_00d6:
 25487 00012AD0 498D6008                	lea rsp, [r8 + 8]
 25488 00012AD4 5D                      	pop rbp ; restore the old rbp
 25489 00012AD5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25490 00012AD8 C9                      	leave
 25491 00012AD9 C21800                  	ret 8 * (2 + 1)
 25492                                  .L_lambda_opt_end_0017:	; new closure is in rax
 25493 00012ADC C9                      	leave
 25494 00012ADD C22000                  	ret AND_KILL_FRAME(2)
 25495                                  .L_lambda_simple_end_0099:	; new closure is in rax
 25496 00012AE0 803804                  	cmp byte [rax], T_closure
 25497 00012AE3 0F85634A0000            	jne L_error_non_closure
 25498 00012AE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25499 00012AEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 25500 00012AEF 48890425[BD150000]      	mov qword [free_var_120], rax
 25501 00012AF7 48B8-                   	mov rax, sob_void
 25501 00012AF9 [0000000000000000] 
 25502                                  
 25503 00012B01 4889C7                  	mov rdi, rax
 25504 00012B04 E8414D0000              	call print_sexpr_if_not_void
 25505                                  	; preparing a non-tail-call
 25506 00012B09 48B8-                   	mov rax, L_constants + 1993
 25506 00012B0B [C907000000000000] 
 25507 00012B13 50                      	push rax
 25508 00012B14 48B8-                   	mov rax, L_constants + 1993
 25508 00012B16 [C907000000000000] 
 25509 00012B1E 50                      	push rax
 25510 00012B1F 6A02                    	push 2	; arg count
 25511 00012B21 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25512 00012B26 E8CA4A0000              	call malloc
 25513 00012B2B 50                      	push rax
 25514 00012B2C BF00000000              	mov rdi, 8 * 0	; new rib
 25515 00012B31 E8BF4A0000              	call malloc
 25516 00012B36 50                      	push rax
 25517 00012B37 BF08000000              	mov rdi, 8 * 1	; extended env
 25518 00012B3C E8B44A0000              	call malloc
 25519 00012B41 488B7D10                	mov rdi, ENV
 25520 00012B45 BE00000000              	mov rsi, 0
 25521 00012B4A BA01000000              	mov rdx, 1
 25522                                  .L_lambda_simple_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 25523 00012B4F 4883FE00                	cmp rsi, 0
 25524 00012B53 7410                    	je .L_lambda_simple_env_end_009d
 25525 00012B55 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25526 00012B59 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25527 00012B5D 48FFC6                  	inc rsi
 25528 00012B60 48FFC2                  	inc rdx
 25529 00012B63 EBEA                    	jmp .L_lambda_simple_env_loop_009d
 25530                                  .L_lambda_simple_env_end_009d:
 25531 00012B65 5B                      	pop rbx
 25532 00012B66 BE00000000              	mov rsi, 0
 25533                                  .L_lambda_simple_params_loop_009d:	; copy params
 25534 00012B6B 4883FE00                	cmp rsi, 0
 25535 00012B6F 740E                    	je .L_lambda_simple_params_end_009d
 25536 00012B71 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25537 00012B76 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25538 00012B7A 48FFC6                  	inc rsi
 25539 00012B7D EBEC                    	jmp .L_lambda_simple_params_loop_009d
 25540                                  .L_lambda_simple_params_end_009d:
 25541 00012B7F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25542 00012B82 4889C3                  	mov rbx, rax
 25543 00012B85 58                      	pop rax
 25544 00012B86 C60004                  	mov byte [rax], T_closure
 25545 00012B89 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25546 00012B8D 48C74009[9A2B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009d
 25547 00012B95 E9D9070000              	jmp .L_lambda_simple_end_009d
 25548                                  .L_lambda_simple_code_009d:	; lambda-simple body
 25549 00012B9A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25550 00012BA0 740B                    	je .L_lambda_simple_arity_check_ok_009d
 25551 00012BA2 FF742410                	push qword [rsp + 8 * 2]
 25552 00012BA6 6A02                    	push 2
 25553 00012BA8 E9014A0000              	jmp L_error_incorrect_arity_simple
 25554                                  .L_lambda_simple_arity_check_ok_009d:
 25555 00012BAD C8000000                	enter 0, 0
 25556 00012BB1 BF08000000              	mov rdi, 8*1
 25557 00012BB6 E83A4A0000              	call malloc
 25558 00012BBB 488B5D20                	mov rbx, PARAM(0)
 25559 00012BBF 488918                  	mov qword [rax], rbx
 25560 00012BC2 48894520                	mov PARAM(0), rax
 25561 00012BC6 48B8-                   	mov rax, sob_void
 25561 00012BC8 [0000000000000000] 
 25562                                  
 25563 00012BD0 BF08000000              	mov rdi, 8*1
 25564 00012BD5 E81B4A0000              	call malloc
 25565 00012BDA 488B5D28                	mov rbx, PARAM(1)
 25566 00012BDE 488918                  	mov qword [rax], rbx
 25567 00012BE1 48894528                	mov PARAM(1), rax
 25568 00012BE5 48B8-                   	mov rax, sob_void
 25568 00012BE7 [0000000000000000] 
 25569                                  
 25570 00012BEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25571 00012BF4 E8FC490000              	call malloc
 25572 00012BF9 50                      	push rax
 25573 00012BFA BF10000000              	mov rdi, 8 * 2	; new rib
 25574 00012BFF E8F1490000              	call malloc
 25575 00012C04 50                      	push rax
 25576 00012C05 BF10000000              	mov rdi, 8 * 2	; extended env
 25577 00012C0A E8E6490000              	call malloc
 25578 00012C0F 488B7D10                	mov rdi, ENV
 25579 00012C13 BE00000000              	mov rsi, 0
 25580 00012C18 BA01000000              	mov rdx, 1
 25581                                  .L_lambda_simple_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 25582 00012C1D 4883FE01                	cmp rsi, 1
 25583 00012C21 7410                    	je .L_lambda_simple_env_end_009e
 25584 00012C23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25585 00012C27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25586 00012C2B 48FFC6                  	inc rsi
 25587 00012C2E 48FFC2                  	inc rdx
 25588 00012C31 EBEA                    	jmp .L_lambda_simple_env_loop_009e
 25589                                  .L_lambda_simple_env_end_009e:
 25590 00012C33 5B                      	pop rbx
 25591 00012C34 BE00000000              	mov rsi, 0
 25592                                  .L_lambda_simple_params_loop_009e:	; copy params
 25593 00012C39 4883FE02                	cmp rsi, 2
 25594 00012C3D 740E                    	je .L_lambda_simple_params_end_009e
 25595 00012C3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25596 00012C44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25597 00012C48 48FFC6                  	inc rsi
 25598 00012C4B EBEC                    	jmp .L_lambda_simple_params_loop_009e
 25599                                  .L_lambda_simple_params_end_009e:
 25600 00012C4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25601 00012C50 4889C3                  	mov rbx, rax
 25602 00012C53 58                      	pop rax
 25603 00012C54 C60004                  	mov byte [rax], T_closure
 25604 00012C57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25605 00012C5B 48C74009[682C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009e
 25606 00012C63 E97C020000              	jmp .L_lambda_simple_end_009e
 25607                                  .L_lambda_simple_code_009e:	; lambda-simple body
 25608 00012C68 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25609 00012C6E 740B                    	je .L_lambda_simple_arity_check_ok_009e
 25610 00012C70 FF742410                	push qword [rsp + 8 * 2]
 25611 00012C74 6A03                    	push 3
 25612 00012C76 E933490000              	jmp L_error_incorrect_arity_simple
 25613                                  .L_lambda_simple_arity_check_ok_009e:
 25614 00012C7B C8000000                	enter 0, 0
 25615                                  	; preparing a non-tail-call
 25616 00012C7F 488B4530                	mov rax, PARAM(2)	; param s
 25617 00012C83 50                      	push rax
 25618 00012C84 6A01                    	push 1	; arg count
 25619 00012C86 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 25620 00012C8E 803805                  	cmp byte [rax], T_undefined
 25621 00012C91 0F8431480000            	je L_error_fvar_undefined
 25622 00012C97 803804                  	cmp byte [rax], T_closure
 25623 00012C9A 0F85AC480000            	jne L_error_non_closure
 25624 00012CA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25625 00012CA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25626 00012CA6 483D[02000000]          	cmp rax, sob_boolean_false
 25627 00012CAC 7409                    	je .L_if_else_007d
 25628 00012CAE 488B4520                	mov rax, PARAM(0)	; param target
 25629 00012CB2 E929020000              	jmp .L_if_end_007d
 25630                                  .L_if_else_007d:
 25631                                  	; preparing a tail-call
 25632                                  	; preparing a non-tail-call
 25633                                  	; preparing a non-tail-call
 25634                                  	; preparing a non-tail-call
 25635 00012CB7 488B4530                	mov rax, PARAM(2)	; param s
 25636 00012CBB 50                      	push rax
 25637 00012CBC 6A01                    	push 1	; arg count
 25638 00012CBE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25639 00012CC6 803805                  	cmp byte [rax], T_undefined
 25640 00012CC9 0F84F9470000            	je L_error_fvar_undefined
 25641 00012CCF 803804                  	cmp byte [rax], T_closure
 25642 00012CD2 0F8574480000            	jne L_error_non_closure
 25643 00012CD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25644 00012CDB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25645 00012CDE 50                      	push rax
 25646 00012CDF 6A01                    	push 1	; arg count
 25647 00012CE1 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25648 00012CE9 803805                  	cmp byte [rax], T_undefined
 25649 00012CEC 0F84D6470000            	je L_error_fvar_undefined
 25650 00012CF2 803804                  	cmp byte [rax], T_closure
 25651 00012CF5 0F8551480000            	jne L_error_non_closure
 25652 00012CFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25653 00012CFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25654 00012D01 50                      	push rax
 25655 00012D02 48B8-                   	mov rax, L_constants + 2135
 25655 00012D04 [5708000000000000] 
 25656 00012D0C 50                      	push rax
 25657                                  	; preparing a non-tail-call
 25658 00012D0D 488B4530                	mov rax, PARAM(2)	; param s
 25659 00012D11 50                      	push rax
 25660 00012D12 6A01                    	push 1	; arg count
 25661 00012D14 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25662 00012D1C 803805                  	cmp byte [rax], T_undefined
 25663 00012D1F 0F84A3470000            	je L_error_fvar_undefined
 25664 00012D25 803804                  	cmp byte [rax], T_closure
 25665 00012D28 0F851E480000            	jne L_error_non_closure
 25666 00012D2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25667 00012D31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25668 00012D34 50                      	push rax
 25669 00012D35 488B4528                	mov rax, PARAM(1)	; param i
 25670 00012D39 50                      	push rax
 25671 00012D3A 488B4520                	mov rax, PARAM(0)	; param target
 25672 00012D3E 50                      	push rax
 25673 00012D3F 6A05                    	push 5	; arg count
 25674 00012D41 488B4510                	mov rax, ENV
 25675 00012D45 488B00                  	mov rax, qword [rax + 8 * 0]
 25676 00012D48 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25677 00012D4C 488B00                  	mov rax, qword [rax]
 25678 00012D4F 803804                  	cmp byte [rax], T_closure
 25679 00012D52 0F85F4470000            	jne L_error_non_closure
 25680 00012D58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25681 00012D5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25682 00012D5E 50                      	push rax
 25683 00012D5F 6A01                    	push 1	; arg count
 25684 00012D61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25685 00012D66 E88A480000              	call malloc
 25686 00012D6B 50                      	push rax
 25687 00012D6C BF18000000              	mov rdi, 8 * 3	; new rib
 25688 00012D71 E87F480000              	call malloc
 25689 00012D76 50                      	push rax
 25690 00012D77 BF18000000              	mov rdi, 8 * 3	; extended env
 25691 00012D7C E874480000              	call malloc
 25692 00012D81 488B7D10                	mov rdi, ENV
 25693 00012D85 BE00000000              	mov rsi, 0
 25694 00012D8A BA01000000              	mov rdx, 1
 25695                                  .L_lambda_simple_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 25696 00012D8F 4883FE02                	cmp rsi, 2
 25697 00012D93 7410                    	je .L_lambda_simple_env_end_009f
 25698 00012D95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25699 00012D99 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25700 00012D9D 48FFC6                  	inc rsi
 25701 00012DA0 48FFC2                  	inc rdx
 25702 00012DA3 EBEA                    	jmp .L_lambda_simple_env_loop_009f
 25703                                  .L_lambda_simple_env_end_009f:
 25704 00012DA5 5B                      	pop rbx
 25705 00012DA6 BE00000000              	mov rsi, 0
 25706                                  .L_lambda_simple_params_loop_009f:	; copy params
 25707 00012DAB 4883FE03                	cmp rsi, 3
 25708 00012DAF 740E                    	je .L_lambda_simple_params_end_009f
 25709 00012DB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25710 00012DB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25711 00012DBA 48FFC6                  	inc rsi
 25712 00012DBD EBEC                    	jmp .L_lambda_simple_params_loop_009f
 25713                                  .L_lambda_simple_params_end_009f:
 25714 00012DBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25715 00012DC2 4889C3                  	mov rbx, rax
 25716 00012DC5 58                      	pop rax
 25717 00012DC6 C60004                  	mov byte [rax], T_closure
 25718 00012DC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25719 00012DCD 48C74009[DA2D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009f
 25720 00012DD5 E9B8000000              	jmp .L_lambda_simple_end_009f
 25721                                  .L_lambda_simple_code_009f:	; lambda-simple body
 25722 00012DDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25723 00012DE0 740B                    	je .L_lambda_simple_arity_check_ok_009f
 25724 00012DE2 FF742410                	push qword [rsp + 8 * 2]
 25725 00012DE6 6A01                    	push 1
 25726 00012DE8 E9C1470000              	jmp L_error_incorrect_arity_simple
 25727                                  .L_lambda_simple_arity_check_ok_009f:
 25728 00012DED C8000000                	enter 0, 0
 25729                                  	; preparing a tail-call
 25730                                  	; preparing a non-tail-call
 25731 00012DF1 488B4510                	mov rax, ENV
 25732 00012DF5 488B00                  	mov rax, qword [rax + 8 * 0]
 25733 00012DF8 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25734 00012DFC 50                      	push rax
 25735 00012DFD 6A01                    	push 1	; arg count
 25736 00012DFF 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25737 00012E07 803805                  	cmp byte [rax], T_undefined
 25738 00012E0A 0F84B8460000            	je L_error_fvar_undefined
 25739 00012E10 803804                  	cmp byte [rax], T_closure
 25740 00012E13 0F8533470000            	jne L_error_non_closure
 25741 00012E19 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25742 00012E1C FF5009                  	call SOB_CLOSURE_CODE(rax)
 25743 00012E1F 50                      	push rax
 25744 00012E20 488B4520                	mov rax, PARAM(0)	; param i
 25745 00012E24 50                      	push rax
 25746 00012E25 488B4510                	mov rax, ENV
 25747 00012E29 488B00                  	mov rax, qword [rax + 8 * 0]
 25748 00012E2C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25749 00012E2F 50                      	push rax
 25750 00012E30 6A03                    	push 3	; arg count
 25751 00012E32 488B4510                	mov rax, ENV
 25752 00012E36 488B4008                	mov rax, qword [rax + 8 * 1]
 25753 00012E3A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25754 00012E3D 488B00                  	mov rax, qword [rax]
 25755 00012E40 803804                  	cmp byte [rax], T_closure
 25756 00012E43 0F8503470000            	jne L_error_non_closure
 25757 00012E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25758 00012E4C FF7508                  	push qword [rbp + 8 * 1]
 25759                                   ; old ret addr
 25760 00012E4F FF7500                  	push qword [rbp]
 25761                                   ; restore the old rbp
 25762 00012E52 BB03000000              	mov rbx, 3
 25763 00012E57 4883C303                	add rbx, 3
 25764 00012E5B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25765 00012E5F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25766 00012E64 4C8D4DF8                	lea r9, [rbp - 8]
 25767 00012E68 B907000000              	mov rcx, 7
 25768                                  .L_tc_recycle_frame_loop_00d8:
 25769 00012E6D 4883F900                	cmp rcx, 0
 25770 00012E71 7413                    	je .L_tc_recycle_frame_done_00d8
 25771 00012E73 4D8B11                  	mov r10, qword [r9]
 25772 00012E76 4D8910                  	mov qword [r8], r10
 25773 00012E79 4983E808                	sub r8, 8
 25774 00012E7D 4983E908                	sub r9, 8
 25775 00012E81 48FFC9                  	dec rcx
 25776 00012E84 EBE7                    	jmp .L_tc_recycle_frame_loop_00d8
 25777                                  .L_tc_recycle_frame_done_00d8:
 25778 00012E86 498D6008                	lea rsp, [r8 + 8]
 25779 00012E8A 5D                      	pop rbp ; restore the old rbp
 25780 00012E8B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25781 00012E8E C9                      	leave
 25782 00012E8F C21800                  	ret AND_KILL_FRAME(1)
 25783                                  .L_lambda_simple_end_009f:	; new closure is in rax
 25784 00012E92 803804                  	cmp byte [rax], T_closure
 25785 00012E95 0F85B1460000            	jne L_error_non_closure
 25786 00012E9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25787 00012E9E FF7508                  	push qword [rbp + 8 * 1]
 25788                                   ; old ret addr
 25789 00012EA1 FF7500                  	push qword [rbp]
 25790                                   ; restore the old rbp
 25791 00012EA4 BB01000000              	mov rbx, 1
 25792 00012EA9 4883C303                	add rbx, 3
 25793 00012EAD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25794 00012EB1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25795 00012EB6 4C8D4DF8                	lea r9, [rbp - 8]
 25796 00012EBA B905000000              	mov rcx, 5
 25797                                  .L_tc_recycle_frame_loop_00d7:
 25798 00012EBF 4883F900                	cmp rcx, 0
 25799 00012EC3 7413                    	je .L_tc_recycle_frame_done_00d7
 25800 00012EC5 4D8B11                  	mov r10, qword [r9]
 25801 00012EC8 4D8910                  	mov qword [r8], r10
 25802 00012ECB 4983E808                	sub r8, 8
 25803 00012ECF 4983E908                	sub r9, 8
 25804 00012ED3 48FFC9                  	dec rcx
 25805 00012ED6 EBE7                    	jmp .L_tc_recycle_frame_loop_00d7
 25806                                  .L_tc_recycle_frame_done_00d7:
 25807 00012ED8 498D6008                	lea rsp, [r8 + 8]
 25808 00012EDC 5D                      	pop rbp ; restore the old rbp
 25809 00012EDD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25810                                  .L_if_end_007d:
 25811 00012EE0 C9                      	leave
 25812 00012EE1 C22800                  	ret AND_KILL_FRAME(3)
 25813                                  .L_lambda_simple_end_009e:	; new closure is in rax
 25814 00012EE4 50                      	push rax
 25815 00012EE5 488B4520                	mov rax, PARAM(0)	; param run
 25816 00012EE9 8F00                    	pop qword [rax]
 25817 00012EEB 48B8-                   	mov rax, sob_void
 25817 00012EED [0000000000000000] 
 25818                                  
 25819 00012EF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25820 00012EFA E8F6460000              	call malloc
 25821 00012EFF 50                      	push rax
 25822 00012F00 BF10000000              	mov rdi, 8 * 2	; new rib
 25823 00012F05 E8EB460000              	call malloc
 25824 00012F0A 50                      	push rax
 25825 00012F0B BF10000000              	mov rdi, 8 * 2	; extended env
 25826 00012F10 E8E0460000              	call malloc
 25827 00012F15 488B7D10                	mov rdi, ENV
 25828 00012F19 BE00000000              	mov rsi, 0
 25829 00012F1E BA01000000              	mov rdx, 1
 25830                                  .L_lambda_simple_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 25831 00012F23 4883FE01                	cmp rsi, 1
 25832 00012F27 7410                    	je .L_lambda_simple_env_end_00a0
 25833 00012F29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25834 00012F2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25835 00012F31 48FFC6                  	inc rsi
 25836 00012F34 48FFC2                  	inc rdx
 25837 00012F37 EBEA                    	jmp .L_lambda_simple_env_loop_00a0
 25838                                  .L_lambda_simple_env_end_00a0:
 25839 00012F39 5B                      	pop rbx
 25840 00012F3A BE00000000              	mov rsi, 0
 25841                                  .L_lambda_simple_params_loop_00a0:	; copy params
 25842 00012F3F 4883FE02                	cmp rsi, 2
 25843 00012F43 740E                    	je .L_lambda_simple_params_end_00a0
 25844 00012F45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25845 00012F4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25846 00012F4E 48FFC6                  	inc rsi
 25847 00012F51 EBEC                    	jmp .L_lambda_simple_params_loop_00a0
 25848                                  .L_lambda_simple_params_end_00a0:
 25849 00012F53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25850 00012F56 4889C3                  	mov rbx, rax
 25851 00012F59 58                      	pop rax
 25852 00012F5A C60004                  	mov byte [rax], T_closure
 25853 00012F5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25854 00012F61 48C74009[6E2F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a0
 25855 00012F69 E985010000              	jmp .L_lambda_simple_end_00a0
 25856                                  .L_lambda_simple_code_00a0:	; lambda-simple body
 25857 00012F6E 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25858 00012F74 740B                    	je .L_lambda_simple_arity_check_ok_00a0
 25859 00012F76 FF742410                	push qword [rsp + 8 * 2]
 25860 00012F7A 6A05                    	push 5
 25861 00012F7C E92D460000              	jmp L_error_incorrect_arity_simple
 25862                                  .L_lambda_simple_arity_check_ok_00a0:
 25863 00012F81 C8000000                	enter 0, 0
 25864                                  	; preparing a non-tail-call
 25865 00012F85 488B4540                	mov rax, PARAM(4)	; param limit
 25866 00012F89 50                      	push rax
 25867 00012F8A 488B4538                	mov rax, PARAM(3)	; param j
 25868 00012F8E 50                      	push rax
 25869 00012F8F 6A02                    	push 2	; arg count
 25870 00012F91 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 25871 00012F99 803805                  	cmp byte [rax], T_undefined
 25872 00012F9C 0F8426450000            	je L_error_fvar_undefined
 25873 00012FA2 803804                  	cmp byte [rax], T_closure
 25874 00012FA5 0F85A1450000            	jne L_error_non_closure
 25875 00012FAB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25876 00012FAE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25877 00012FB1 483D[02000000]          	cmp rax, sob_boolean_false
 25878 00012FB7 0F842E010000            	je .L_if_else_007e
 25879                                  	; preparing a non-tail-call
 25880                                  	; preparing a non-tail-call
 25881 00012FBD 488B4538                	mov rax, PARAM(3)	; param j
 25882 00012FC1 50                      	push rax
 25883 00012FC2 488B4530                	mov rax, PARAM(2)	; param vec
 25884 00012FC6 50                      	push rax
 25885 00012FC7 6A02                    	push 2	; arg count
 25886 00012FC9 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 25887 00012FD1 803805                  	cmp byte [rax], T_undefined
 25888 00012FD4 0F84EE440000            	je L_error_fvar_undefined
 25889 00012FDA 803804                  	cmp byte [rax], T_closure
 25890 00012FDD 0F8569450000            	jne L_error_non_closure
 25891 00012FE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25892 00012FE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25893 00012FE9 50                      	push rax
 25894 00012FEA 488B4528                	mov rax, PARAM(1)	; param i
 25895 00012FEE 50                      	push rax
 25896 00012FEF 488B4520                	mov rax, PARAM(0)	; param target
 25897 00012FF3 50                      	push rax
 25898 00012FF4 6A03                    	push 3	; arg count
 25899 00012FF6 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 25900 00012FFE 803805                  	cmp byte [rax], T_undefined
 25901 00013001 0F84C1440000            	je L_error_fvar_undefined
 25902 00013007 803804                  	cmp byte [rax], T_closure
 25903 0001300A 0F853C450000            	jne L_error_non_closure
 25904 00013010 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25905 00013013 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25906                                  
 25907                                  	; preparing a tail-call
 25908 00013016 488B4540                	mov rax, PARAM(4)	; param limit
 25909 0001301A 50                      	push rax
 25910                                  	; preparing a non-tail-call
 25911 0001301B 48B8-                   	mov rax, L_constants + 2270
 25911 0001301D [DE08000000000000] 
 25912 00013025 50                      	push rax
 25913 00013026 488B4538                	mov rax, PARAM(3)	; param j
 25914 0001302A 50                      	push rax
 25915 0001302B 6A02                    	push 2	; arg count
 25916 0001302D 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25917 00013035 803805                  	cmp byte [rax], T_undefined
 25918 00013038 0F848A440000            	je L_error_fvar_undefined
 25919 0001303E 803804                  	cmp byte [rax], T_closure
 25920 00013041 0F8505450000            	jne L_error_non_closure
 25921 00013047 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25922 0001304A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25923 0001304D 50                      	push rax
 25924 0001304E 488B4530                	mov rax, PARAM(2)	; param vec
 25925 00013052 50                      	push rax
 25926                                  	; preparing a non-tail-call
 25927 00013053 48B8-                   	mov rax, L_constants + 2270
 25927 00013055 [DE08000000000000] 
 25928 0001305D 50                      	push rax
 25929 0001305E 488B4528                	mov rax, PARAM(1)	; param i
 25930 00013062 50                      	push rax
 25931 00013063 6A02                    	push 2	; arg count
 25932 00013065 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25933 0001306D 803805                  	cmp byte [rax], T_undefined
 25934 00013070 0F8452440000            	je L_error_fvar_undefined
 25935 00013076 803804                  	cmp byte [rax], T_closure
 25936 00013079 0F85CD440000            	jne L_error_non_closure
 25937 0001307F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25938 00013082 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25939 00013085 50                      	push rax
 25940 00013086 488B4520                	mov rax, PARAM(0)	; param target
 25941 0001308A 50                      	push rax
 25942 0001308B 6A05                    	push 5	; arg count
 25943 0001308D 488B4510                	mov rax, ENV
 25944 00013091 488B00                  	mov rax, qword [rax + 8 * 0]
 25945 00013094 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25946 00013098 488B00                  	mov rax, qword [rax]
 25947 0001309B 803804                  	cmp byte [rax], T_closure
 25948 0001309E 0F85A8440000            	jne L_error_non_closure
 25949 000130A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25950 000130A7 FF7508                  	push qword [rbp + 8 * 1]
 25951                                   ; old ret addr
 25952 000130AA FF7500                  	push qword [rbp]
 25953                                   ; restore the old rbp
 25954 000130AD BB05000000              	mov rbx, 5
 25955 000130B2 4883C303                	add rbx, 3
 25956 000130B6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25957 000130BA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25958 000130BF 4C8D4DF8                	lea r9, [rbp - 8]
 25959 000130C3 B909000000              	mov rcx, 9
 25960                                  .L_tc_recycle_frame_loop_00d9:
 25961 000130C8 4883F900                	cmp rcx, 0
 25962 000130CC 7413                    	je .L_tc_recycle_frame_done_00d9
 25963 000130CE 4D8B11                  	mov r10, qword [r9]
 25964 000130D1 4D8910                  	mov qword [r8], r10
 25965 000130D4 4983E808                	sub r8, 8
 25966 000130D8 4983E908                	sub r9, 8
 25967 000130DC 48FFC9                  	dec rcx
 25968 000130DF EBE7                    	jmp .L_tc_recycle_frame_loop_00d9
 25969                                  .L_tc_recycle_frame_done_00d9:
 25970 000130E1 498D6008                	lea rsp, [r8 + 8]
 25971 000130E5 5D                      	pop rbp ; restore the old rbp
 25972 000130E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25973 000130E9 EB04                    	jmp .L_if_end_007e
 25974                                  .L_if_else_007e:
 25975 000130EB 488B4528                	mov rax, PARAM(1)	; param i
 25976                                  .L_if_end_007e:
 25977 000130EF C9                      	leave
 25978 000130F0 C23800                  	ret AND_KILL_FRAME(5)
 25979                                  .L_lambda_simple_end_00a0:	; new closure is in rax
 25980 000130F3 50                      	push rax
 25981 000130F4 488B4528                	mov rax, PARAM(1)	; param add
 25982 000130F8 8F00                    	pop qword [rax]
 25983 000130FA 48B8-                   	mov rax, sob_void
 25983 000130FC [0000000000000000] 
 25984                                  
 25985 00013104 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25986 00013109 E8E7440000              	call malloc
 25987 0001310E 50                      	push rax
 25988 0001310F BF10000000              	mov rdi, 8 * 2	; new rib
 25989 00013114 E8DC440000              	call malloc
 25990 00013119 50                      	push rax
 25991 0001311A BF10000000              	mov rdi, 8 * 2	; extended env
 25992 0001311F E8D1440000              	call malloc
 25993 00013124 488B7D10                	mov rdi, ENV
 25994 00013128 4831F6                  	 xor rsi, rsi
 25995 0001312B 4831D2                  	 xor rdx, rdx
 25996 0001312E 48FFC2                  	inc rdx
 25997                                  .L_lambda_opt_env_loop_0018:	; ext_env[i + 1] <-- env[i]
 25998 00013131 4883FE01                	cmp rsi, 1
 25999 00013135 7410                    	je .L_lambda_opt_env_end_0018
 26000 00013137 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26001 0001313B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26002 0001313F 48FFC6                  	inc rsi
 26003 00013142 48FFC2                  	inc rdx
 26004 00013145 EBEA                    	jmp .L_lambda_opt_env_loop_0018
 26005                                  .L_lambda_opt_env_end_0018:
 26006 00013147 5B                      	pop rbx
 26007 00013148 4831F6                  	xor rsi, rsi
 26008                                  .L_lambda_opt_params_loop_0018:	; copy params
 26009 0001314B 4883FE02                	cmp rsi, 2
 26010 0001314F 740E                    	je .L_lambda_opt_params_end_0018
 26011 00013151 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26012 00013156 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26013 0001315A 48FFC6                  	inc rsi
 26014 0001315D EBEC                    	jmp .L_lambda_opt_params_loop_0018
 26015                                  .L_lambda_opt_params_end_0018:
 26016 0001315F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26017 00013162 4889C3                  	mov rbx, rax
 26018 00013165 58                      	pop rax
 26019 00013166 C60004                  	mov byte [rax], T_closure
 26020 00013169 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26021 0001316D 48C74009[7A310100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0018
 26022 00013175 E9F5010000              	jmp .L_lambda_opt_end_0018
 26023                                  .L_lambda_opt_code_0018:; lambda opt body
 26024 0001317A 48837C241000            	cmp qword [rsp + 8 * 2], 0
 26025 00013180 7409                    	je .L_lambda_opt_arity_check_exact_0018
 26026 00013182 7F57                    	jg .L_lambda_opt_arity_check_more_0018
 26027 00013184 6A00                    	push 0
 26028 00013186 E937440000              	jmp L_error_incorrect_arity_opt
 26029                                  .L_lambda_opt_arity_check_exact_0018:
 26030 0001318B 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 26031 0001318F 4C894C24F8              	mov qword [rsp -8], r9
 26032 00013194 4C8B4C2408              	mov r9, qword [rsp +8]
 26033 00013199 4C890C24                	mov qword [rsp +8 * 0], r9
 26034 0001319D 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 26035 000131A2 4C89C9                  	mov rcx, r9
 26036 000131A5 49FFC1                  	inc r9
 26037 000131A8 4C894C2408              	mov qword [rsp +8], r9
 26038 000131AD 4889E2                  	mov rdx, rsp
 26039 000131B0 4883C218                	add rdx, 24
 26040                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0018:
 26041 000131B4 4883F900                	cmp rcx, 0
 26042 000131B8 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0018
 26043 000131BA 4C8B02                  	mov r8, qword [rdx]
 26044 000131BD 4C8942F8                	mov qword [rdx - 8], r8
 26045 000131C1 4883C208                	add rdx, 8
 26046 000131C5 48FFC9                  	dec rcx
 26047 000131C8 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0018
 26048                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0018:
 26049 000131CA 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 26050 000131D2 4883EC08                	sub rsp, 8
 26051 000131D6 E984000000              	jmp .L_lambda_opt_stack_adjusted_0018
 26052                                  .L_lambda_opt_arity_check_more_0018:
 26053 000131DB 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 26054 000131E0 4D89C4                  	mov r12, r8
 26055 000131E3 4C89C1                  	mov rcx, r8
 26056 000131E6 4D8D5002                	lea r10, [r8 + 2] 
 26057 000131EA 4883E900                	sub rcx, 0
 26058 000131EE 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 26059 000131F3 49B9-                   	mov r9, sob_nil
 26059 000131F5 [0100000000000000] 
 26060                                  .L_lambda_opt_create_list_of_opt_params_0018:
 26061 000131FD 4883F900                	cmp rcx, 0
 26062 00013201 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0018
 26063 00013203 BF11000000              	mov rdi, 17
 26064 00013208 E8E8430000              	call malloc
 26065 0001320D C60021                  	mov byte [rax], T_pair
 26066 00013210 498B1B                  	mov rbx, qword [r11]
 26067 00013213 48895801                	mov qword [rax +1], rbx
 26068 00013217 4C894809                	mov qword [rax + 1 + 8], r9
 26069 0001321B 4989C1                  	mov r9, rax
 26070 0001321E 48FFC9                  	dec rcx
 26071 00013221 4983EB08                	sub r11, 8
 26072 00013225 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0018
 26073                                  .L_lambda_opt_create_list_of_opt_params_end_0018:
 26074 00013227 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 26075 0001322C 4D8908                  	mov qword [r8], r9
 26076 0001322F 4E8D14D500000000        	lea r10, [8 * r10]
 26077 00013237 4901E2                  	add r10, rsp
 26078 0001323A B904000000              	mov rcx, 4 + 0
 26079                                  .L_lambda_opt_stack_shrink_loop_0018:
 26080 0001323F 4883F900                	cmp rcx, 0
 26081 00013243 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0018
 26082 00013245 4D8B18                  	mov r11, qword [r8]
 26083 00013248 4D891A                  	mov qword [r10], r11
 26084 0001324B 4983E808                	sub r8, 8
 26085 0001324F 4983EA08                	sub r10, 8
 26086 00013253 48FFC9                  	dec rcx
 26087 00013256 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 26088                                  .L_lambda_opt_stack_shrink_loop_exit_0018:
 26089 00013258 4983C208                	add r10, 8
 26090 0001325C 4C89D4                  	mov rsp, r10
 26091                                  .L_lambda_opt_stack_adjusted_0018:;continue with the code, the stack is ok
 26092 0001325F 48C744241001000000      	mov qword [rsp + 8*2], 1
 26093 00013268 C8000000                	enter 0, 0
 26094                                  	; preparing a tail-call
 26095 0001326C 488B4520                	mov rax, PARAM(0)	; param vectors
 26096 00013270 50                      	push rax
 26097 00013271 48B8-                   	mov rax, L_constants + 2135
 26097 00013273 [5708000000000000] 
 26098 0001327B 50                      	push rax
 26099                                  	; preparing a non-tail-call
 26100                                  	; preparing a non-tail-call
 26101                                  	; preparing a non-tail-call
 26102 0001327C 488B4520                	mov rax, PARAM(0)	; param vectors
 26103 00013280 50                      	push rax
 26104 00013281 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26105 00013289 803805                  	cmp byte [rax], T_undefined
 26106 0001328C 0F8436420000            	je L_error_fvar_undefined
 26107 00013292 50                      	push rax
 26108 00013293 6A02                    	push 2	; arg count
 26109 00013295 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 26110 0001329D 803805                  	cmp byte [rax], T_undefined
 26111 000132A0 0F8422420000            	je L_error_fvar_undefined
 26112 000132A6 803804                  	cmp byte [rax], T_closure
 26113 000132A9 0F859D420000            	jne L_error_non_closure
 26114 000132AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 26115 000132B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26116 000132B5 50                      	push rax
 26117 000132B6 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26118 000132BE 803805                  	cmp byte [rax], T_undefined
 26119 000132C1 0F8401420000            	je L_error_fvar_undefined
 26120 000132C7 50                      	push rax
 26121 000132C8 6A02                    	push 2	; arg count
 26122 000132CA 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 26123 000132D2 803805                  	cmp byte [rax], T_undefined
 26124 000132D5 0F84ED410000            	je L_error_fvar_undefined
 26125 000132DB 803804                  	cmp byte [rax], T_closure
 26126 000132DE 0F8568420000            	jne L_error_non_closure
 26127 000132E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26128 000132E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26129 000132EA 50                      	push rax
 26130 000132EB 6A01                    	push 1	; arg count
 26131 000132ED 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 26132 000132F5 803805                  	cmp byte [rax], T_undefined
 26133 000132F8 0F84CA410000            	je L_error_fvar_undefined
 26134 000132FE 803804                  	cmp byte [rax], T_closure
 26135 00013301 0F8545420000            	jne L_error_non_closure
 26136 00013307 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26137 0001330A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26138 0001330D 50                      	push rax
 26139 0001330E 6A03                    	push 3	; arg count
 26140 00013310 488B4510                	mov rax, ENV
 26141 00013314 488B00                  	mov rax, qword [rax + 8 * 0]
 26142 00013317 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26143 0001331A 488B00                  	mov rax, qword [rax]
 26144 0001331D 803804                  	cmp byte [rax], T_closure
 26145 00013320 0F8526420000            	jne L_error_non_closure
 26146 00013326 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26147 00013329 FF7508                  	push qword [rbp + 8 * 1]
 26148                                   ; old ret addr
 26149 0001332C FF7500                  	push qword [rbp]
 26150                                   ; restore the old rbp
 26151 0001332F BB03000000              	mov rbx, 3
 26152 00013334 4883C303                	add rbx, 3
 26153 00013338 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26154 0001333C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26155 00013341 4C8D4DF8                	lea r9, [rbp - 8]
 26156 00013345 B907000000              	mov rcx, 7
 26157                                  .L_tc_recycle_frame_loop_00da:
 26158 0001334A 4883F900                	cmp rcx, 0
 26159 0001334E 7413                    	je .L_tc_recycle_frame_done_00da
 26160 00013350 4D8B11                  	mov r10, qword [r9]
 26161 00013353 4D8910                  	mov qword [r8], r10
 26162 00013356 4983E808                	sub r8, 8
 26163 0001335A 4983E908                	sub r9, 8
 26164 0001335E 48FFC9                  	dec rcx
 26165 00013361 EBE7                    	jmp .L_tc_recycle_frame_loop_00da
 26166                                  .L_tc_recycle_frame_done_00da:
 26167 00013363 498D6008                	lea rsp, [r8 + 8]
 26168 00013367 5D                      	pop rbp ; restore the old rbp
 26169 00013368 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26170 0001336B C9                      	leave
 26171 0001336C C21800                  	ret 8 * (2 + 1)
 26172                                  .L_lambda_opt_end_0018:	; new closure is in rax
 26173 0001336F C9                      	leave
 26174 00013370 C22000                  	ret AND_KILL_FRAME(2)
 26175                                  .L_lambda_simple_end_009d:	; new closure is in rax
 26176 00013373 803804                  	cmp byte [rax], T_closure
 26177 00013376 0F85D0410000            	jne L_error_non_closure
 26178 0001337C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26179 0001337F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26180 00013382 48890425[33170000]      	mov qword [free_var_142], rax
 26181 0001338A 48B8-                   	mov rax, sob_void
 26181 0001338C [0000000000000000] 
 26182                                  
 26183 00013394 4889C7                  	mov rdi, rax
 26184 00013397 E8AE440000              	call print_sexpr_if_not_void
 26185 0001339C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26186 000133A1 E84F420000              	call malloc
 26187 000133A6 50                      	push rax
 26188 000133A7 BF00000000              	mov rdi, 8 * 0	; new rib
 26189 000133AC E844420000              	call malloc
 26190 000133B1 50                      	push rax
 26191 000133B2 BF08000000              	mov rdi, 8 * 1	; extended env
 26192 000133B7 E839420000              	call malloc
 26193 000133BC 488B7D10                	mov rdi, ENV
 26194 000133C0 BE00000000              	mov rsi, 0
 26195 000133C5 BA01000000              	mov rdx, 1
 26196                                  .L_lambda_simple_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 26197 000133CA 4883FE00                	cmp rsi, 0
 26198 000133CE 7410                    	je .L_lambda_simple_env_end_00a1
 26199 000133D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26200 000133D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26201 000133D8 48FFC6                  	inc rsi
 26202 000133DB 48FFC2                  	inc rdx
 26203 000133DE EBEA                    	jmp .L_lambda_simple_env_loop_00a1
 26204                                  .L_lambda_simple_env_end_00a1:
 26205 000133E0 5B                      	pop rbx
 26206 000133E1 BE00000000              	mov rsi, 0
 26207                                  .L_lambda_simple_params_loop_00a1:	; copy params
 26208 000133E6 4883FE00                	cmp rsi, 0
 26209 000133EA 740E                    	je .L_lambda_simple_params_end_00a1
 26210 000133EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26211 000133F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26212 000133F5 48FFC6                  	inc rsi
 26213 000133F8 EBEC                    	jmp .L_lambda_simple_params_loop_00a1
 26214                                  .L_lambda_simple_params_end_00a1:
 26215 000133FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26216 000133FD 4889C3                  	mov rbx, rax
 26217 00013400 58                      	pop rax
 26218 00013401 C60004                  	mov byte [rax], T_closure
 26219 00013404 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26220 00013408 48C74009[15340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a1
 26221 00013410 E9C7000000              	jmp .L_lambda_simple_end_00a1
 26222                                  .L_lambda_simple_code_00a1:	; lambda-simple body
 26223 00013415 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26224 0001341B 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 26225 0001341D FF742410                	push qword [rsp + 8 * 2]
 26226 00013421 6A01                    	push 1
 26227 00013423 E986410000              	jmp L_error_incorrect_arity_simple
 26228                                  .L_lambda_simple_arity_check_ok_00a1:
 26229 00013428 C8000000                	enter 0, 0
 26230                                  	; preparing a tail-call
 26231                                  	; preparing a non-tail-call
 26232                                  	; preparing a non-tail-call
 26233 0001342C 488B4520                	mov rax, PARAM(0)	; param str
 26234 00013430 50                      	push rax
 26235 00013431 6A01                    	push 1	; arg count
 26236 00013433 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 26237 0001343B 803805                  	cmp byte [rax], T_undefined
 26238 0001343E 0F8484400000            	je L_error_fvar_undefined
 26239 00013444 803804                  	cmp byte [rax], T_closure
 26240 00013447 0F85FF400000            	jne L_error_non_closure
 26241 0001344D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26242 00013450 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26243 00013453 50                      	push rax
 26244 00013454 6A01                    	push 1	; arg count
 26245 00013456 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 26246 0001345E 803805                  	cmp byte [rax], T_undefined
 26247 00013461 0F8461400000            	je L_error_fvar_undefined
 26248 00013467 803804                  	cmp byte [rax], T_closure
 26249 0001346A 0F85DC400000            	jne L_error_non_closure
 26250 00013470 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26251 00013473 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26252 00013476 50                      	push rax
 26253 00013477 6A01                    	push 1	; arg count
 26254 00013479 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 26255 00013481 803805                  	cmp byte [rax], T_undefined
 26256 00013484 0F843E400000            	je L_error_fvar_undefined
 26257 0001348A 803804                  	cmp byte [rax], T_closure
 26258 0001348D 0F85B9400000            	jne L_error_non_closure
 26259 00013493 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26260 00013496 FF7508                  	push qword [rbp + 8 * 1]
 26261                                   ; old ret addr
 26262 00013499 FF7500                  	push qword [rbp]
 26263                                   ; restore the old rbp
 26264 0001349C BB01000000              	mov rbx, 1
 26265 000134A1 4883C303                	add rbx, 3
 26266 000134A5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26267 000134A9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26268 000134AE 4C8D4DF8                	lea r9, [rbp - 8]
 26269 000134B2 B905000000              	mov rcx, 5
 26270                                  .L_tc_recycle_frame_loop_00db:
 26271 000134B7 4883F900                	cmp rcx, 0
 26272 000134BB 7413                    	je .L_tc_recycle_frame_done_00db
 26273 000134BD 4D8B11                  	mov r10, qword [r9]
 26274 000134C0 4D8910                  	mov qword [r8], r10
 26275 000134C3 4983E808                	sub r8, 8
 26276 000134C7 4983E908                	sub r9, 8
 26277 000134CB 48FFC9                  	dec rcx
 26278 000134CE EBE7                    	jmp .L_tc_recycle_frame_loop_00db
 26279                                  .L_tc_recycle_frame_done_00db:
 26280 000134D0 498D6008                	lea rsp, [r8 + 8]
 26281 000134D4 5D                      	pop rbp ; restore the old rbp
 26282 000134D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26283 000134D8 C9                      	leave
 26284 000134D9 C21800                  	ret AND_KILL_FRAME(1)
 26285                                  .L_lambda_simple_end_00a1:	; new closure is in rax
 26286 000134DC 48890425[56160000]      	mov qword [free_var_129], rax
 26287 000134E4 48B8-                   	mov rax, sob_void
 26287 000134E6 [0000000000000000] 
 26288                                  
 26289 000134EE 4889C7                  	mov rdi, rax
 26290 000134F1 E854430000              	call print_sexpr_if_not_void
 26291 000134F6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26292 000134FB E8F5400000              	call malloc
 26293 00013500 50                      	push rax
 26294 00013501 BF00000000              	mov rdi, 8 * 0	; new rib
 26295 00013506 E8EA400000              	call malloc
 26296 0001350B 50                      	push rax
 26297 0001350C BF08000000              	mov rdi, 8 * 1	; extended env
 26298 00013511 E8DF400000              	call malloc
 26299 00013516 488B7D10                	mov rdi, ENV
 26300 0001351A BE00000000              	mov rsi, 0
 26301 0001351F BA01000000              	mov rdx, 1
 26302                                  .L_lambda_simple_env_loop_00a2:	; ext_env[i + 1] <-- env[i]
 26303 00013524 4883FE00                	cmp rsi, 0
 26304 00013528 7410                    	je .L_lambda_simple_env_end_00a2
 26305 0001352A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26306 0001352E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26307 00013532 48FFC6                  	inc rsi
 26308 00013535 48FFC2                  	inc rdx
 26309 00013538 EBEA                    	jmp .L_lambda_simple_env_loop_00a2
 26310                                  .L_lambda_simple_env_end_00a2:
 26311 0001353A 5B                      	pop rbx
 26312 0001353B BE00000000              	mov rsi, 0
 26313                                  .L_lambda_simple_params_loop_00a2:	; copy params
 26314 00013540 4883FE00                	cmp rsi, 0
 26315 00013544 740E                    	je .L_lambda_simple_params_end_00a2
 26316 00013546 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26317 0001354B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26318 0001354F 48FFC6                  	inc rsi
 26319 00013552 EBEC                    	jmp .L_lambda_simple_params_loop_00a2
 26320                                  .L_lambda_simple_params_end_00a2:
 26321 00013554 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26322 00013557 4889C3                  	mov rbx, rax
 26323 0001355A 58                      	pop rax
 26324 0001355B C60004                  	mov byte [rax], T_closure
 26325 0001355E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26326 00013562 48C74009[6F350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a2
 26327 0001356A E9C7000000              	jmp .L_lambda_simple_end_00a2
 26328                                  .L_lambda_simple_code_00a2:	; lambda-simple body
 26329 0001356F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26330 00013575 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 26331 00013577 FF742410                	push qword [rsp + 8 * 2]
 26332 0001357B 6A01                    	push 1
 26333 0001357D E92C400000              	jmp L_error_incorrect_arity_simple
 26334                                  .L_lambda_simple_arity_check_ok_00a2:
 26335 00013582 C8000000                	enter 0, 0
 26336                                  	; preparing a tail-call
 26337                                  	; preparing a non-tail-call
 26338                                  	; preparing a non-tail-call
 26339 00013586 488B4520                	mov rax, PARAM(0)	; param vec
 26340 0001358A 50                      	push rax
 26341 0001358B 6A01                    	push 1	; arg count
 26342 0001358D 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 26343 00013595 803805                  	cmp byte [rax], T_undefined
 26344 00013598 0F842A3F0000            	je L_error_fvar_undefined
 26345 0001359E 803804                  	cmp byte [rax], T_closure
 26346 000135A1 0F85A53F0000            	jne L_error_non_closure
 26347 000135A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26348 000135AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 26349 000135AD 50                      	push rax
 26350 000135AE 6A01                    	push 1	; arg count
 26351 000135B0 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 26352 000135B8 803805                  	cmp byte [rax], T_undefined
 26353 000135BB 0F84073F0000            	je L_error_fvar_undefined
 26354 000135C1 803804                  	cmp byte [rax], T_closure
 26355 000135C4 0F85823F0000            	jne L_error_non_closure
 26356 000135CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26357 000135CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26358 000135D0 50                      	push rax
 26359 000135D1 6A01                    	push 1	; arg count
 26360 000135D3 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 26361 000135DB 803805                  	cmp byte [rax], T_undefined
 26362 000135DE 0F84E43E0000            	je L_error_fvar_undefined
 26363 000135E4 803804                  	cmp byte [rax], T_closure
 26364 000135E7 0F855F3F0000            	jne L_error_non_closure
 26365 000135ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 26366 000135F0 FF7508                  	push qword [rbp + 8 * 1]
 26367                                   ; old ret addr
 26368 000135F3 FF7500                  	push qword [rbp]
 26369                                   ; restore the old rbp
 26370 000135F6 BB01000000              	mov rbx, 1
 26371 000135FB 4883C303                	add rbx, 3
 26372 000135FF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26373 00013603 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26374 00013608 4C8D4DF8                	lea r9, [rbp - 8]
 26375 0001360C B905000000              	mov rcx, 5
 26376                                  .L_tc_recycle_frame_loop_00dc:
 26377 00013611 4883F900                	cmp rcx, 0
 26378 00013615 7413                    	je .L_tc_recycle_frame_done_00dc
 26379 00013617 4D8B11                  	mov r10, qword [r9]
 26380 0001361A 4D8910                  	mov qword [r8], r10
 26381 0001361D 4983E808                	sub r8, 8
 26382 00013621 4983E908                	sub r9, 8
 26383 00013625 48FFC9                  	dec rcx
 26384 00013628 EBE7                    	jmp .L_tc_recycle_frame_loop_00dc
 26385                                  .L_tc_recycle_frame_done_00dc:
 26386 0001362A 498D6008                	lea rsp, [r8 + 8]
 26387 0001362E 5D                      	pop rbp ; restore the old rbp
 26388 0001362F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26389 00013632 C9                      	leave
 26390 00013633 C21800                  	ret AND_KILL_FRAME(1)
 26391                                  .L_lambda_simple_end_00a2:	; new closure is in rax
 26392 00013636 48890425[66170000]      	mov qword [free_var_145], rax
 26393 0001363E 48B8-                   	mov rax, sob_void
 26393 00013640 [0000000000000000] 
 26394                                  
 26395 00013648 4889C7                  	mov rdi, rax
 26396 0001364B E8FA410000              	call print_sexpr_if_not_void
 26397                                  	; preparing a non-tail-call
 26398 00013650 48B8-                   	mov rax, L_constants + 1993
 26398 00013652 [C907000000000000] 
 26399 0001365A 50                      	push rax
 26400 0001365B 6A01                    	push 1	; arg count
 26401 0001365D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26402 00013662 E88E3F0000              	call malloc
 26403 00013667 50                      	push rax
 26404 00013668 BF00000000              	mov rdi, 8 * 0	; new rib
 26405 0001366D E8833F0000              	call malloc
 26406 00013672 50                      	push rax
 26407 00013673 BF08000000              	mov rdi, 8 * 1	; extended env
 26408 00013678 E8783F0000              	call malloc
 26409 0001367D 488B7D10                	mov rdi, ENV
 26410 00013681 BE00000000              	mov rsi, 0
 26411 00013686 BA01000000              	mov rdx, 1
 26412                                  .L_lambda_simple_env_loop_00a3:	; ext_env[i + 1] <-- env[i]
 26413 0001368B 4883FE00                	cmp rsi, 0
 26414 0001368F 7410                    	je .L_lambda_simple_env_end_00a3
 26415 00013691 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26416 00013695 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26417 00013699 48FFC6                  	inc rsi
 26418 0001369C 48FFC2                  	inc rdx
 26419 0001369F EBEA                    	jmp .L_lambda_simple_env_loop_00a3
 26420                                  .L_lambda_simple_env_end_00a3:
 26421 000136A1 5B                      	pop rbx
 26422 000136A2 BE00000000              	mov rsi, 0
 26423                                  .L_lambda_simple_params_loop_00a3:	; copy params
 26424 000136A7 4883FE00                	cmp rsi, 0
 26425 000136AB 740E                    	je .L_lambda_simple_params_end_00a3
 26426 000136AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26427 000136B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26428 000136B6 48FFC6                  	inc rsi
 26429 000136B9 EBEC                    	jmp .L_lambda_simple_params_loop_00a3
 26430                                  .L_lambda_simple_params_end_00a3:
 26431 000136BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26432 000136BE 4889C3                  	mov rbx, rax
 26433 000136C1 58                      	pop rax
 26434 000136C2 C60004                  	mov byte [rax], T_closure
 26435 000136C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26436 000136C9 48C74009[D6360100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a3
 26437 000136D1 E941060000              	jmp .L_lambda_simple_end_00a3
 26438                                  .L_lambda_simple_code_00a3:	; lambda-simple body
 26439 000136D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26440 000136DC 740B                    	je .L_lambda_simple_arity_check_ok_00a3
 26441 000136DE FF742410                	push qword [rsp + 8 * 2]
 26442 000136E2 6A01                    	push 1
 26443 000136E4 E9C53E0000              	jmp L_error_incorrect_arity_simple
 26444                                  .L_lambda_simple_arity_check_ok_00a3:
 26445 000136E9 C8000000                	enter 0, 0
 26446 000136ED BF08000000              	mov rdi, 8*1
 26447 000136F2 E8FE3E0000              	call malloc
 26448 000136F7 488B5D20                	mov rbx, PARAM(0)
 26449 000136FB 488918                  	mov qword [rax], rbx
 26450 000136FE 48894520                	mov PARAM(0), rax
 26451 00013702 48B8-                   	mov rax, sob_void
 26451 00013704 [0000000000000000] 
 26452                                  
 26453 0001370C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26454 00013711 E8DF3E0000              	call malloc
 26455 00013716 50                      	push rax
 26456 00013717 BF08000000              	mov rdi, 8 * 1	; new rib
 26457 0001371C E8D43E0000              	call malloc
 26458 00013721 50                      	push rax
 26459 00013722 BF10000000              	mov rdi, 8 * 2	; extended env
 26460 00013727 E8C93E0000              	call malloc
 26461 0001372C 488B7D10                	mov rdi, ENV
 26462 00013730 BE00000000              	mov rsi, 0
 26463 00013735 BA01000000              	mov rdx, 1
 26464                                  .L_lambda_simple_env_loop_00a4:	; ext_env[i + 1] <-- env[i]
 26465 0001373A 4883FE01                	cmp rsi, 1
 26466 0001373E 7410                    	je .L_lambda_simple_env_end_00a4
 26467 00013740 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26468 00013744 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26469 00013748 48FFC6                  	inc rsi
 26470 0001374B 48FFC2                  	inc rdx
 26471 0001374E EBEA                    	jmp .L_lambda_simple_env_loop_00a4
 26472                                  .L_lambda_simple_env_end_00a4:
 26473 00013750 5B                      	pop rbx
 26474 00013751 BE00000000              	mov rsi, 0
 26475                                  .L_lambda_simple_params_loop_00a4:	; copy params
 26476 00013756 4883FE01                	cmp rsi, 1
 26477 0001375A 740E                    	je .L_lambda_simple_params_end_00a4
 26478 0001375C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26479 00013761 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26480 00013765 48FFC6                  	inc rsi
 26481 00013768 EBEC                    	jmp .L_lambda_simple_params_loop_00a4
 26482                                  .L_lambda_simple_params_end_00a4:
 26483 0001376A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26484 0001376D 4889C3                  	mov rbx, rax
 26485 00013770 58                      	pop rax
 26486 00013771 C60004                  	mov byte [rax], T_closure
 26487 00013774 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26488 00013778 48C74009[85370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a4
 26489 00013780 E9F8020000              	jmp .L_lambda_simple_end_00a4
 26490                                  .L_lambda_simple_code_00a4:	; lambda-simple body
 26491 00013785 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26492 0001378B 740B                    	je .L_lambda_simple_arity_check_ok_00a4
 26493 0001378D FF742410                	push qword [rsp + 8 * 2]
 26494 00013791 6A03                    	push 3
 26495 00013793 E9163E0000              	jmp L_error_incorrect_arity_simple
 26496                                  .L_lambda_simple_arity_check_ok_00a4:
 26497 00013798 C8000000                	enter 0, 0
 26498                                  	; preparing a non-tail-call
 26499 0001379C 488B4530                	mov rax, PARAM(2)	; param j
 26500 000137A0 50                      	push rax
 26501 000137A1 488B4528                	mov rax, PARAM(1)	; param i
 26502 000137A5 50                      	push rax
 26503 000137A6 6A02                    	push 2	; arg count
 26504 000137A8 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 26505 000137B0 803805                  	cmp byte [rax], T_undefined
 26506 000137B3 0F840F3D0000            	je L_error_fvar_undefined
 26507 000137B9 803804                  	cmp byte [rax], T_closure
 26508 000137BC 0F858A3D0000            	jne L_error_non_closure
 26509 000137C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26510 000137C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26511 000137C8 483D[02000000]          	cmp rax, sob_boolean_false
 26512 000137CE 0F84A1020000            	je .L_if_else_007f
 26513                                  	; preparing a tail-call
 26514                                  	; preparing a non-tail-call
 26515 000137D4 488B4528                	mov rax, PARAM(1)	; param i
 26516 000137D8 50                      	push rax
 26517 000137D9 488B4520                	mov rax, PARAM(0)	; param str
 26518 000137DD 50                      	push rax
 26519 000137DE 6A02                    	push 2	; arg count
 26520 000137E0 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26521 000137E8 803805                  	cmp byte [rax], T_undefined
 26522 000137EB 0F84D73C0000            	je L_error_fvar_undefined
 26523 000137F1 803804                  	cmp byte [rax], T_closure
 26524 000137F4 0F85523D0000            	jne L_error_non_closure
 26525 000137FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26526 000137FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26527 00013800 50                      	push rax
 26528 00013801 6A01                    	push 1	; arg count
 26529 00013803 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26530 00013808 E8E83D0000              	call malloc
 26531 0001380D 50                      	push rax
 26532 0001380E BF18000000              	mov rdi, 8 * 3	; new rib
 26533 00013813 E8DD3D0000              	call malloc
 26534 00013818 50                      	push rax
 26535 00013819 BF18000000              	mov rdi, 8 * 3	; extended env
 26536 0001381E E8D23D0000              	call malloc
 26537 00013823 488B7D10                	mov rdi, ENV
 26538 00013827 BE00000000              	mov rsi, 0
 26539 0001382C BA01000000              	mov rdx, 1
 26540                                  .L_lambda_simple_env_loop_00a5:	; ext_env[i + 1] <-- env[i]
 26541 00013831 4883FE02                	cmp rsi, 2
 26542 00013835 7410                    	je .L_lambda_simple_env_end_00a5
 26543 00013837 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26544 0001383B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26545 0001383F 48FFC6                  	inc rsi
 26546 00013842 48FFC2                  	inc rdx
 26547 00013845 EBEA                    	jmp .L_lambda_simple_env_loop_00a5
 26548                                  .L_lambda_simple_env_end_00a5:
 26549 00013847 5B                      	pop rbx
 26550 00013848 BE00000000              	mov rsi, 0
 26551                                  .L_lambda_simple_params_loop_00a5:	; copy params
 26552 0001384D 4883FE03                	cmp rsi, 3
 26553 00013851 740E                    	je .L_lambda_simple_params_end_00a5
 26554 00013853 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26555 00013858 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26556 0001385C 48FFC6                  	inc rsi
 26557 0001385F EBEC                    	jmp .L_lambda_simple_params_loop_00a5
 26558                                  .L_lambda_simple_params_end_00a5:
 26559 00013861 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26560 00013864 4889C3                  	mov rbx, rax
 26561 00013867 58                      	pop rax
 26562 00013868 C60004                  	mov byte [rax], T_closure
 26563 0001386B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26564 0001386F 48C74009[7C380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a5
 26565 00013877 E9A9010000              	jmp .L_lambda_simple_end_00a5
 26566                                  .L_lambda_simple_code_00a5:	; lambda-simple body
 26567 0001387C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26568 00013882 740B                    	je .L_lambda_simple_arity_check_ok_00a5
 26569 00013884 FF742410                	push qword [rsp + 8 * 2]
 26570 00013888 6A01                    	push 1
 26571 0001388A E91F3D0000              	jmp L_error_incorrect_arity_simple
 26572                                  .L_lambda_simple_arity_check_ok_00a5:
 26573 0001388F C8000000                	enter 0, 0
 26574                                  	; preparing a non-tail-call
 26575                                  	; preparing a non-tail-call
 26576 00013893 488B4510                	mov rax, ENV
 26577 00013897 488B00                  	mov rax, qword [rax + 8 * 0]
 26578 0001389A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26579 0001389E 50                      	push rax
 26580 0001389F 488B4510                	mov rax, ENV
 26581 000138A3 488B00                  	mov rax, qword [rax + 8 * 0]
 26582 000138A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26583 000138A9 50                      	push rax
 26584 000138AA 6A02                    	push 2	; arg count
 26585 000138AC 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26586 000138B4 803805                  	cmp byte [rax], T_undefined
 26587 000138B7 0F840B3C0000            	je L_error_fvar_undefined
 26588 000138BD 803804                  	cmp byte [rax], T_closure
 26589 000138C0 0F85863C0000            	jne L_error_non_closure
 26590 000138C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26591 000138C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26592 000138CC 50                      	push rax
 26593 000138CD 488B4510                	mov rax, ENV
 26594 000138D1 488B00                  	mov rax, qword [rax + 8 * 0]
 26595 000138D4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26596 000138D8 50                      	push rax
 26597 000138D9 488B4510                	mov rax, ENV
 26598 000138DD 488B00                  	mov rax, qword [rax + 8 * 0]
 26599 000138E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26600 000138E3 50                      	push rax
 26601 000138E4 6A03                    	push 3	; arg count
 26602 000138E6 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26603 000138EE 803805                  	cmp byte [rax], T_undefined
 26604 000138F1 0F84D13B0000            	je L_error_fvar_undefined
 26605 000138F7 803804                  	cmp byte [rax], T_closure
 26606 000138FA 0F854C3C0000            	jne L_error_non_closure
 26607 00013900 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26608 00013903 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26609                                  
 26610                                  	; preparing a non-tail-call
 26611 00013906 488B4520                	mov rax, PARAM(0)	; param ch
 26612 0001390A 50                      	push rax
 26613 0001390B 488B4510                	mov rax, ENV
 26614 0001390F 488B00                  	mov rax, qword [rax + 8 * 0]
 26615 00013912 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26616 00013916 50                      	push rax
 26617 00013917 488B4510                	mov rax, ENV
 26618 0001391B 488B00                  	mov rax, qword [rax + 8 * 0]
 26619 0001391E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26620 00013921 50                      	push rax
 26621 00013922 6A03                    	push 3	; arg count
 26622 00013924 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26623 0001392C 803805                  	cmp byte [rax], T_undefined
 26624 0001392F 0F84933B0000            	je L_error_fvar_undefined
 26625 00013935 803804                  	cmp byte [rax], T_closure
 26626 00013938 0F850E3C0000            	jne L_error_non_closure
 26627 0001393E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26628 00013941 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26629                                  
 26630                                  	; preparing a tail-call
 26631                                  	; preparing a non-tail-call
 26632 00013944 48B8-                   	mov rax, L_constants + 2270
 26632 00013946 [DE08000000000000] 
 26633 0001394E 50                      	push rax
 26634 0001394F 488B4510                	mov rax, ENV
 26635 00013953 488B00                  	mov rax, qword [rax + 8 * 0]
 26636 00013956 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26637 0001395A 50                      	push rax
 26638 0001395B 6A02                    	push 2	; arg count
 26639 0001395D 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26640 00013965 803805                  	cmp byte [rax], T_undefined
 26641 00013968 0F845A3B0000            	je L_error_fvar_undefined
 26642 0001396E 803804                  	cmp byte [rax], T_closure
 26643 00013971 0F85D53B0000            	jne L_error_non_closure
 26644 00013977 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26645 0001397A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26646 0001397D 50                      	push rax
 26647                                  	; preparing a non-tail-call
 26648 0001397E 48B8-                   	mov rax, L_constants + 2270
 26648 00013980 [DE08000000000000] 
 26649 00013988 50                      	push rax
 26650 00013989 488B4510                	mov rax, ENV
 26651 0001398D 488B00                  	mov rax, qword [rax + 8 * 0]
 26652 00013990 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26653 00013994 50                      	push rax
 26654 00013995 6A02                    	push 2	; arg count
 26655 00013997 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26656 0001399F 803805                  	cmp byte [rax], T_undefined
 26657 000139A2 0F84203B0000            	je L_error_fvar_undefined
 26658 000139A8 803804                  	cmp byte [rax], T_closure
 26659 000139AB 0F859B3B0000            	jne L_error_non_closure
 26660 000139B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26661 000139B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26662 000139B7 50                      	push rax
 26663 000139B8 488B4510                	mov rax, ENV
 26664 000139BC 488B00                  	mov rax, qword [rax + 8 * 0]
 26665 000139BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26666 000139C2 50                      	push rax
 26667 000139C3 6A03                    	push 3	; arg count
 26668 000139C5 488B4510                	mov rax, ENV
 26669 000139C9 488B4008                	mov rax, qword [rax + 8 * 1]
 26670 000139CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26671 000139D0 488B00                  	mov rax, qword [rax]
 26672 000139D3 803804                  	cmp byte [rax], T_closure
 26673 000139D6 0F85703B0000            	jne L_error_non_closure
 26674 000139DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26675 000139DF FF7508                  	push qword [rbp + 8 * 1]
 26676                                   ; old ret addr
 26677 000139E2 FF7500                  	push qword [rbp]
 26678                                   ; restore the old rbp
 26679 000139E5 BB03000000              	mov rbx, 3
 26680 000139EA 4883C303                	add rbx, 3
 26681 000139EE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26682 000139F2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26683 000139F7 4C8D4DF8                	lea r9, [rbp - 8]
 26684 000139FB B907000000              	mov rcx, 7
 26685                                  .L_tc_recycle_frame_loop_00de:
 26686 00013A00 4883F900                	cmp rcx, 0
 26687 00013A04 7413                    	je .L_tc_recycle_frame_done_00de
 26688 00013A06 4D8B11                  	mov r10, qword [r9]
 26689 00013A09 4D8910                  	mov qword [r8], r10
 26690 00013A0C 4983E808                	sub r8, 8
 26691 00013A10 4983E908                	sub r9, 8
 26692 00013A14 48FFC9                  	dec rcx
 26693 00013A17 EBE7                    	jmp .L_tc_recycle_frame_loop_00de
 26694                                  .L_tc_recycle_frame_done_00de:
 26695 00013A19 498D6008                	lea rsp, [r8 + 8]
 26696 00013A1D 5D                      	pop rbp ; restore the old rbp
 26697 00013A1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26698 00013A21 C9                      	leave
 26699 00013A22 C21800                  	ret AND_KILL_FRAME(1)
 26700                                  .L_lambda_simple_end_00a5:	; new closure is in rax
 26701 00013A25 803804                  	cmp byte [rax], T_closure
 26702 00013A28 0F851E3B0000            	jne L_error_non_closure
 26703 00013A2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26704 00013A31 FF7508                  	push qword [rbp + 8 * 1]
 26705                                   ; old ret addr
 26706 00013A34 FF7500                  	push qword [rbp]
 26707                                   ; restore the old rbp
 26708 00013A37 BB01000000              	mov rbx, 1
 26709 00013A3C 4883C303                	add rbx, 3
 26710 00013A40 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26711 00013A44 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26712 00013A49 4C8D4DF8                	lea r9, [rbp - 8]
 26713 00013A4D B905000000              	mov rcx, 5
 26714                                  .L_tc_recycle_frame_loop_00dd:
 26715 00013A52 4883F900                	cmp rcx, 0
 26716 00013A56 7413                    	je .L_tc_recycle_frame_done_00dd
 26717 00013A58 4D8B11                  	mov r10, qword [r9]
 26718 00013A5B 4D8910                  	mov qword [r8], r10
 26719 00013A5E 4983E808                	sub r8, 8
 26720 00013A62 4983E908                	sub r9, 8
 26721 00013A66 48FFC9                  	dec rcx
 26722 00013A69 EBE7                    	jmp .L_tc_recycle_frame_loop_00dd
 26723                                  .L_tc_recycle_frame_done_00dd:
 26724 00013A6B 498D6008                	lea rsp, [r8 + 8]
 26725 00013A6F 5D                      	pop rbp ; restore the old rbp
 26726 00013A70 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26727 00013A73 EB04                    	jmp .L_if_end_007f
 26728                                  .L_if_else_007f:
 26729 00013A75 488B4520                	mov rax, PARAM(0)	; param str
 26730                                  .L_if_end_007f:
 26731 00013A79 C9                      	leave
 26732 00013A7A C22800                  	ret AND_KILL_FRAME(3)
 26733                                  .L_lambda_simple_end_00a4:	; new closure is in rax
 26734 00013A7D 50                      	push rax
 26735 00013A7E 488B4520                	mov rax, PARAM(0)	; param run
 26736 00013A82 8F00                    	pop qword [rax]
 26737 00013A84 48B8-                   	mov rax, sob_void
 26737 00013A86 [0000000000000000] 
 26738                                  
 26739 00013A8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26740 00013A93 E85D3B0000              	call malloc
 26741 00013A98 50                      	push rax
 26742 00013A99 BF08000000              	mov rdi, 8 * 1	; new rib
 26743 00013A9E E8523B0000              	call malloc
 26744 00013AA3 50                      	push rax
 26745 00013AA4 BF10000000              	mov rdi, 8 * 2	; extended env
 26746 00013AA9 E8473B0000              	call malloc
 26747 00013AAE 488B7D10                	mov rdi, ENV
 26748 00013AB2 BE00000000              	mov rsi, 0
 26749 00013AB7 BA01000000              	mov rdx, 1
 26750                                  .L_lambda_simple_env_loop_00a6:	; ext_env[i + 1] <-- env[i]
 26751 00013ABC 4883FE01                	cmp rsi, 1
 26752 00013AC0 7410                    	je .L_lambda_simple_env_end_00a6
 26753 00013AC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26754 00013AC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26755 00013ACA 48FFC6                  	inc rsi
 26756 00013ACD 48FFC2                  	inc rdx
 26757 00013AD0 EBEA                    	jmp .L_lambda_simple_env_loop_00a6
 26758                                  .L_lambda_simple_env_end_00a6:
 26759 00013AD2 5B                      	pop rbx
 26760 00013AD3 BE00000000              	mov rsi, 0
 26761                                  .L_lambda_simple_params_loop_00a6:	; copy params
 26762 00013AD8 4883FE01                	cmp rsi, 1
 26763 00013ADC 740E                    	je .L_lambda_simple_params_end_00a6
 26764 00013ADE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26765 00013AE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26766 00013AE7 48FFC6                  	inc rsi
 26767 00013AEA EBEC                    	jmp .L_lambda_simple_params_loop_00a6
 26768                                  .L_lambda_simple_params_end_00a6:
 26769 00013AEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26770 00013AEF 4889C3                  	mov rbx, rax
 26771 00013AF2 58                      	pop rax
 26772 00013AF3 C60004                  	mov byte [rax], T_closure
 26773 00013AF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26774 00013AFA 48C74009[073B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a6
 26775 00013B02 E90C020000              	jmp .L_lambda_simple_end_00a6
 26776                                  .L_lambda_simple_code_00a6:	; lambda-simple body
 26777 00013B07 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26778 00013B0D 740B                    	je .L_lambda_simple_arity_check_ok_00a6
 26779 00013B0F FF742410                	push qword [rsp + 8 * 2]
 26780 00013B13 6A01                    	push 1
 26781 00013B15 E9943A0000              	jmp L_error_incorrect_arity_simple
 26782                                  .L_lambda_simple_arity_check_ok_00a6:
 26783 00013B1A C8000000                	enter 0, 0
 26784                                  	; preparing a tail-call
 26785                                  	; preparing a non-tail-call
 26786 00013B1E 488B4520                	mov rax, PARAM(0)	; param str
 26787 00013B22 50                      	push rax
 26788 00013B23 6A01                    	push 1	; arg count
 26789 00013B25 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 26790 00013B2D 803805                  	cmp byte [rax], T_undefined
 26791 00013B30 0F8492390000            	je L_error_fvar_undefined
 26792 00013B36 803804                  	cmp byte [rax], T_closure
 26793 00013B39 0F850D3A0000            	jne L_error_non_closure
 26794 00013B3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26795 00013B42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26796 00013B45 50                      	push rax
 26797 00013B46 6A01                    	push 1	; arg count
 26798 00013B48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26799 00013B4D E8A33A0000              	call malloc
 26800 00013B52 50                      	push rax
 26801 00013B53 BF08000000              	mov rdi, 8 * 1	; new rib
 26802 00013B58 E8983A0000              	call malloc
 26803 00013B5D 50                      	push rax
 26804 00013B5E BF18000000              	mov rdi, 8 * 3	; extended env
 26805 00013B63 E88D3A0000              	call malloc
 26806 00013B68 488B7D10                	mov rdi, ENV
 26807 00013B6C BE00000000              	mov rsi, 0
 26808 00013B71 BA01000000              	mov rdx, 1
 26809                                  .L_lambda_simple_env_loop_00a7:	; ext_env[i + 1] <-- env[i]
 26810 00013B76 4883FE02                	cmp rsi, 2
 26811 00013B7A 7410                    	je .L_lambda_simple_env_end_00a7
 26812 00013B7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26813 00013B80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26814 00013B84 48FFC6                  	inc rsi
 26815 00013B87 48FFC2                  	inc rdx
 26816 00013B8A EBEA                    	jmp .L_lambda_simple_env_loop_00a7
 26817                                  .L_lambda_simple_env_end_00a7:
 26818 00013B8C 5B                      	pop rbx
 26819 00013B8D BE00000000              	mov rsi, 0
 26820                                  .L_lambda_simple_params_loop_00a7:	; copy params
 26821 00013B92 4883FE01                	cmp rsi, 1
 26822 00013B96 740E                    	je .L_lambda_simple_params_end_00a7
 26823 00013B98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26824 00013B9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26825 00013BA1 48FFC6                  	inc rsi
 26826 00013BA4 EBEC                    	jmp .L_lambda_simple_params_loop_00a7
 26827                                  .L_lambda_simple_params_end_00a7:
 26828 00013BA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26829 00013BA9 4889C3                  	mov rbx, rax
 26830 00013BAC 58                      	pop rax
 26831 00013BAD C60004                  	mov byte [rax], T_closure
 26832 00013BB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26833 00013BB4 48C74009[C13B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a7
 26834 00013BBC E900010000              	jmp .L_lambda_simple_end_00a7
 26835                                  .L_lambda_simple_code_00a7:	; lambda-simple body
 26836 00013BC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26837 00013BC7 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 26838 00013BC9 FF742410                	push qword [rsp + 8 * 2]
 26839 00013BCD 6A01                    	push 1
 26840 00013BCF E9DA390000              	jmp L_error_incorrect_arity_simple
 26841                                  .L_lambda_simple_arity_check_ok_00a7:
 26842 00013BD4 C8000000                	enter 0, 0
 26843                                  	; preparing a non-tail-call
 26844 00013BD8 488B4520                	mov rax, PARAM(0)	; param n
 26845 00013BDC 50                      	push rax
 26846 00013BDD 6A01                    	push 1	; arg count
 26847 00013BDF 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 26848 00013BE7 803805                  	cmp byte [rax], T_undefined
 26849 00013BEA 0F84D8380000            	je L_error_fvar_undefined
 26850 00013BF0 803804                  	cmp byte [rax], T_closure
 26851 00013BF3 0F8553390000            	jne L_error_non_closure
 26852 00013BF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26853 00013BFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 26854 00013BFF 483D[02000000]          	cmp rax, sob_boolean_false
 26855 00013C05 740F                    	je .L_if_else_0080
 26856 00013C07 488B4510                	mov rax, ENV
 26857 00013C0B 488B00                  	mov rax, qword [rax + 8 * 0]
 26858 00013C0E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26859 00013C11 E9A7000000              	jmp .L_if_end_0080
 26860                                  .L_if_else_0080:
 26861                                  	; preparing a tail-call
 26862                                  	; preparing a non-tail-call
 26863 00013C16 48B8-                   	mov rax, L_constants + 2270
 26863 00013C18 [DE08000000000000] 
 26864 00013C20 50                      	push rax
 26865 00013C21 488B4520                	mov rax, PARAM(0)	; param n
 26866 00013C25 50                      	push rax
 26867 00013C26 6A02                    	push 2	; arg count
 26868 00013C28 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26869 00013C30 803805                  	cmp byte [rax], T_undefined
 26870 00013C33 0F848F380000            	je L_error_fvar_undefined
 26871 00013C39 803804                  	cmp byte [rax], T_closure
 26872 00013C3C 0F850A390000            	jne L_error_non_closure
 26873 00013C42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26874 00013C45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26875 00013C48 50                      	push rax
 26876 00013C49 48B8-                   	mov rax, L_constants + 2135
 26876 00013C4B [5708000000000000] 
 26877 00013C53 50                      	push rax
 26878 00013C54 488B4510                	mov rax, ENV
 26879 00013C58 488B00                  	mov rax, qword [rax + 8 * 0]
 26880 00013C5B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26881 00013C5E 50                      	push rax
 26882 00013C5F 6A03                    	push 3	; arg count
 26883 00013C61 488B4510                	mov rax, ENV
 26884 00013C65 488B4008                	mov rax, qword [rax + 8 * 1]
 26885 00013C69 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26886 00013C6C 488B00                  	mov rax, qword [rax]
 26887 00013C6F 803804                  	cmp byte [rax], T_closure
 26888 00013C72 0F85D4380000            	jne L_error_non_closure
 26889 00013C78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26890 00013C7B FF7508                  	push qword [rbp + 8 * 1]
 26891                                   ; old ret addr
 26892 00013C7E FF7500                  	push qword [rbp]
 26893                                   ; restore the old rbp
 26894 00013C81 BB03000000              	mov rbx, 3
 26895 00013C86 4883C303                	add rbx, 3
 26896 00013C8A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26897 00013C8E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26898 00013C93 4C8D4DF8                	lea r9, [rbp - 8]
 26899 00013C97 B907000000              	mov rcx, 7
 26900                                  .L_tc_recycle_frame_loop_00e0:
 26901 00013C9C 4883F900                	cmp rcx, 0
 26902 00013CA0 7413                    	je .L_tc_recycle_frame_done_00e0
 26903 00013CA2 4D8B11                  	mov r10, qword [r9]
 26904 00013CA5 4D8910                  	mov qword [r8], r10
 26905 00013CA8 4983E808                	sub r8, 8
 26906 00013CAC 4983E908                	sub r9, 8
 26907 00013CB0 48FFC9                  	dec rcx
 26908 00013CB3 EBE7                    	jmp .L_tc_recycle_frame_loop_00e0
 26909                                  .L_tc_recycle_frame_done_00e0:
 26910 00013CB5 498D6008                	lea rsp, [r8 + 8]
 26911 00013CB9 5D                      	pop rbp ; restore the old rbp
 26912 00013CBA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26913                                  .L_if_end_0080:
 26914 00013CBD C9                      	leave
 26915 00013CBE C21800                  	ret AND_KILL_FRAME(1)
 26916                                  .L_lambda_simple_end_00a7:	; new closure is in rax
 26917 00013CC1 803804                  	cmp byte [rax], T_closure
 26918 00013CC4 0F8582380000            	jne L_error_non_closure
 26919 00013CCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26920 00013CCD FF7508                  	push qword [rbp + 8 * 1]
 26921                                   ; old ret addr
 26922 00013CD0 FF7500                  	push qword [rbp]
 26923                                   ; restore the old rbp
 26924 00013CD3 BB01000000              	mov rbx, 1
 26925 00013CD8 4883C303                	add rbx, 3
 26926 00013CDC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26927 00013CE0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26928 00013CE5 4C8D4DF8                	lea r9, [rbp - 8]
 26929 00013CE9 B905000000              	mov rcx, 5
 26930                                  .L_tc_recycle_frame_loop_00df:
 26931 00013CEE 4883F900                	cmp rcx, 0
 26932 00013CF2 7413                    	je .L_tc_recycle_frame_done_00df
 26933 00013CF4 4D8B11                  	mov r10, qword [r9]
 26934 00013CF7 4D8910                  	mov qword [r8], r10
 26935 00013CFA 4983E808                	sub r8, 8
 26936 00013CFE 4983E908                	sub r9, 8
 26937 00013D02 48FFC9                  	dec rcx
 26938 00013D05 EBE7                    	jmp .L_tc_recycle_frame_loop_00df
 26939                                  .L_tc_recycle_frame_done_00df:
 26940 00013D07 498D6008                	lea rsp, [r8 + 8]
 26941 00013D0B 5D                      	pop rbp ; restore the old rbp
 26942 00013D0C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26943 00013D0F C9                      	leave
 26944 00013D10 C21800                  	ret AND_KILL_FRAME(1)
 26945                                  .L_lambda_simple_end_00a6:	; new closure is in rax
 26946 00013D13 C9                      	leave
 26947 00013D14 C21800                  	ret AND_KILL_FRAME(1)
 26948                                  .L_lambda_simple_end_00a3:	; new closure is in rax
 26949 00013D17 803804                  	cmp byte [rax], T_closure
 26950 00013D1A 0F852C380000            	jne L_error_non_closure
 26951 00013D20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26952 00013D23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26953 00013D26 48890425[67160000]      	mov qword [free_var_130], rax
 26954 00013D2E 48B8-                   	mov rax, sob_void
 26954 00013D30 [0000000000000000] 
 26955                                  
 26956 00013D38 4889C7                  	mov rdi, rax
 26957 00013D3B E80A3B0000              	call print_sexpr_if_not_void
 26958                                  	; preparing a non-tail-call
 26959 00013D40 48B8-                   	mov rax, L_constants + 1993
 26959 00013D42 [C907000000000000] 
 26960 00013D4A 50                      	push rax
 26961 00013D4B 6A01                    	push 1	; arg count
 26962 00013D4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26963 00013D52 E89E380000              	call malloc
 26964 00013D57 50                      	push rax
 26965 00013D58 BF00000000              	mov rdi, 8 * 0	; new rib
 26966 00013D5D E893380000              	call malloc
 26967 00013D62 50                      	push rax
 26968 00013D63 BF08000000              	mov rdi, 8 * 1	; extended env
 26969 00013D68 E888380000              	call malloc
 26970 00013D6D 488B7D10                	mov rdi, ENV
 26971 00013D71 BE00000000              	mov rsi, 0
 26972 00013D76 BA01000000              	mov rdx, 1
 26973                                  .L_lambda_simple_env_loop_00a8:	; ext_env[i + 1] <-- env[i]
 26974 00013D7B 4883FE00                	cmp rsi, 0
 26975 00013D7F 7410                    	je .L_lambda_simple_env_end_00a8
 26976 00013D81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26977 00013D85 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26978 00013D89 48FFC6                  	inc rsi
 26979 00013D8C 48FFC2                  	inc rdx
 26980 00013D8F EBEA                    	jmp .L_lambda_simple_env_loop_00a8
 26981                                  .L_lambda_simple_env_end_00a8:
 26982 00013D91 5B                      	pop rbx
 26983 00013D92 BE00000000              	mov rsi, 0
 26984                                  .L_lambda_simple_params_loop_00a8:	; copy params
 26985 00013D97 4883FE00                	cmp rsi, 0
 26986 00013D9B 740E                    	je .L_lambda_simple_params_end_00a8
 26987 00013D9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26988 00013DA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26989 00013DA6 48FFC6                  	inc rsi
 26990 00013DA9 EBEC                    	jmp .L_lambda_simple_params_loop_00a8
 26991                                  .L_lambda_simple_params_end_00a8:
 26992 00013DAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26993 00013DAE 4889C3                  	mov rbx, rax
 26994 00013DB1 58                      	pop rax
 26995 00013DB2 C60004                  	mov byte [rax], T_closure
 26996 00013DB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26997 00013DB9 48C74009[C63D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a8
 26998 00013DC1 E941060000              	jmp .L_lambda_simple_end_00a8
 26999                                  .L_lambda_simple_code_00a8:	; lambda-simple body
 27000 00013DC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27001 00013DCC 740B                    	je .L_lambda_simple_arity_check_ok_00a8
 27002 00013DCE FF742410                	push qword [rsp + 8 * 2]
 27003 00013DD2 6A01                    	push 1
 27004 00013DD4 E9D5370000              	jmp L_error_incorrect_arity_simple
 27005                                  .L_lambda_simple_arity_check_ok_00a8:
 27006 00013DD9 C8000000                	enter 0, 0
 27007 00013DDD BF08000000              	mov rdi, 8*1
 27008 00013DE2 E80E380000              	call malloc
 27009 00013DE7 488B5D20                	mov rbx, PARAM(0)
 27010 00013DEB 488918                  	mov qword [rax], rbx
 27011 00013DEE 48894520                	mov PARAM(0), rax
 27012 00013DF2 48B8-                   	mov rax, sob_void
 27012 00013DF4 [0000000000000000] 
 27013                                  
 27014 00013DFC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27015 00013E01 E8EF370000              	call malloc
 27016 00013E06 50                      	push rax
 27017 00013E07 BF08000000              	mov rdi, 8 * 1	; new rib
 27018 00013E0C E8E4370000              	call malloc
 27019 00013E11 50                      	push rax
 27020 00013E12 BF10000000              	mov rdi, 8 * 2	; extended env
 27021 00013E17 E8D9370000              	call malloc
 27022 00013E1C 488B7D10                	mov rdi, ENV
 27023 00013E20 BE00000000              	mov rsi, 0
 27024 00013E25 BA01000000              	mov rdx, 1
 27025                                  .L_lambda_simple_env_loop_00a9:	; ext_env[i + 1] <-- env[i]
 27026 00013E2A 4883FE01                	cmp rsi, 1
 27027 00013E2E 7410                    	je .L_lambda_simple_env_end_00a9
 27028 00013E30 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27029 00013E34 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27030 00013E38 48FFC6                  	inc rsi
 27031 00013E3B 48FFC2                  	inc rdx
 27032 00013E3E EBEA                    	jmp .L_lambda_simple_env_loop_00a9
 27033                                  .L_lambda_simple_env_end_00a9:
 27034 00013E40 5B                      	pop rbx
 27035 00013E41 BE00000000              	mov rsi, 0
 27036                                  .L_lambda_simple_params_loop_00a9:	; copy params
 27037 00013E46 4883FE01                	cmp rsi, 1
 27038 00013E4A 740E                    	je .L_lambda_simple_params_end_00a9
 27039 00013E4C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27040 00013E51 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27041 00013E55 48FFC6                  	inc rsi
 27042 00013E58 EBEC                    	jmp .L_lambda_simple_params_loop_00a9
 27043                                  .L_lambda_simple_params_end_00a9:
 27044 00013E5A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27045 00013E5D 4889C3                  	mov rbx, rax
 27046 00013E60 58                      	pop rax
 27047 00013E61 C60004                  	mov byte [rax], T_closure
 27048 00013E64 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27049 00013E68 48C74009[753E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a9
 27050 00013E70 E9F8020000              	jmp .L_lambda_simple_end_00a9
 27051                                  .L_lambda_simple_code_00a9:	; lambda-simple body
 27052 00013E75 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27053 00013E7B 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 27054 00013E7D FF742410                	push qword [rsp + 8 * 2]
 27055 00013E81 6A03                    	push 3
 27056 00013E83 E926370000              	jmp L_error_incorrect_arity_simple
 27057                                  .L_lambda_simple_arity_check_ok_00a9:
 27058 00013E88 C8000000                	enter 0, 0
 27059                                  	; preparing a non-tail-call
 27060 00013E8C 488B4530                	mov rax, PARAM(2)	; param j
 27061 00013E90 50                      	push rax
 27062 00013E91 488B4528                	mov rax, PARAM(1)	; param i
 27063 00013E95 50                      	push rax
 27064 00013E96 6A02                    	push 2	; arg count
 27065 00013E98 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27066 00013EA0 803805                  	cmp byte [rax], T_undefined
 27067 00013EA3 0F841F360000            	je L_error_fvar_undefined
 27068 00013EA9 803804                  	cmp byte [rax], T_closure
 27069 00013EAC 0F859A360000            	jne L_error_non_closure
 27070 00013EB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27071 00013EB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27072 00013EB8 483D[02000000]          	cmp rax, sob_boolean_false
 27073 00013EBE 0F84A1020000            	je .L_if_else_0081
 27074                                  	; preparing a tail-call
 27075                                  	; preparing a non-tail-call
 27076 00013EC4 488B4528                	mov rax, PARAM(1)	; param i
 27077 00013EC8 50                      	push rax
 27078 00013EC9 488B4520                	mov rax, PARAM(0)	; param vec
 27079 00013ECD 50                      	push rax
 27080 00013ECE 6A02                    	push 2	; arg count
 27081 00013ED0 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27082 00013ED8 803805                  	cmp byte [rax], T_undefined
 27083 00013EDB 0F84E7350000            	je L_error_fvar_undefined
 27084 00013EE1 803804                  	cmp byte [rax], T_closure
 27085 00013EE4 0F8562360000            	jne L_error_non_closure
 27086 00013EEA FF7001                  	push SOB_CLOSURE_ENV(rax)
 27087 00013EED FF5009                  	call SOB_CLOSURE_CODE(rax)
 27088 00013EF0 50                      	push rax
 27089 00013EF1 6A01                    	push 1	; arg count
 27090 00013EF3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27091 00013EF8 E8F8360000              	call malloc
 27092 00013EFD 50                      	push rax
 27093 00013EFE BF18000000              	mov rdi, 8 * 3	; new rib
 27094 00013F03 E8ED360000              	call malloc
 27095 00013F08 50                      	push rax
 27096 00013F09 BF18000000              	mov rdi, 8 * 3	; extended env
 27097 00013F0E E8E2360000              	call malloc
 27098 00013F13 488B7D10                	mov rdi, ENV
 27099 00013F17 BE00000000              	mov rsi, 0
 27100 00013F1C BA01000000              	mov rdx, 1
 27101                                  .L_lambda_simple_env_loop_00aa:	; ext_env[i + 1] <-- env[i]
 27102 00013F21 4883FE02                	cmp rsi, 2
 27103 00013F25 7410                    	je .L_lambda_simple_env_end_00aa
 27104 00013F27 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27105 00013F2B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27106 00013F2F 48FFC6                  	inc rsi
 27107 00013F32 48FFC2                  	inc rdx
 27108 00013F35 EBEA                    	jmp .L_lambda_simple_env_loop_00aa
 27109                                  .L_lambda_simple_env_end_00aa:
 27110 00013F37 5B                      	pop rbx
 27111 00013F38 BE00000000              	mov rsi, 0
 27112                                  .L_lambda_simple_params_loop_00aa:	; copy params
 27113 00013F3D 4883FE03                	cmp rsi, 3
 27114 00013F41 740E                    	je .L_lambda_simple_params_end_00aa
 27115 00013F43 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27116 00013F48 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27117 00013F4C 48FFC6                  	inc rsi
 27118 00013F4F EBEC                    	jmp .L_lambda_simple_params_loop_00aa
 27119                                  .L_lambda_simple_params_end_00aa:
 27120 00013F51 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27121 00013F54 4889C3                  	mov rbx, rax
 27122 00013F57 58                      	pop rax
 27123 00013F58 C60004                  	mov byte [rax], T_closure
 27124 00013F5B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27125 00013F5F 48C74009[6C3F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00aa
 27126 00013F67 E9A9010000              	jmp .L_lambda_simple_end_00aa
 27127                                  .L_lambda_simple_code_00aa:	; lambda-simple body
 27128 00013F6C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27129 00013F72 740B                    	je .L_lambda_simple_arity_check_ok_00aa
 27130 00013F74 FF742410                	push qword [rsp + 8 * 2]
 27131 00013F78 6A01                    	push 1
 27132 00013F7A E92F360000              	jmp L_error_incorrect_arity_simple
 27133                                  .L_lambda_simple_arity_check_ok_00aa:
 27134 00013F7F C8000000                	enter 0, 0
 27135                                  	; preparing a non-tail-call
 27136                                  	; preparing a non-tail-call
 27137 00013F83 488B4510                	mov rax, ENV
 27138 00013F87 488B00                  	mov rax, qword [rax + 8 * 0]
 27139 00013F8A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27140 00013F8E 50                      	push rax
 27141 00013F8F 488B4510                	mov rax, ENV
 27142 00013F93 488B00                  	mov rax, qword [rax + 8 * 0]
 27143 00013F96 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27144 00013F99 50                      	push rax
 27145 00013F9A 6A02                    	push 2	; arg count
 27146 00013F9C 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27147 00013FA4 803805                  	cmp byte [rax], T_undefined
 27148 00013FA7 0F841B350000            	je L_error_fvar_undefined
 27149 00013FAD 803804                  	cmp byte [rax], T_closure
 27150 00013FB0 0F8596350000            	jne L_error_non_closure
 27151 00013FB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27152 00013FB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27153 00013FBC 50                      	push rax
 27154 00013FBD 488B4510                	mov rax, ENV
 27155 00013FC1 488B00                  	mov rax, qword [rax + 8 * 0]
 27156 00013FC4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27157 00013FC8 50                      	push rax
 27158 00013FC9 488B4510                	mov rax, ENV
 27159 00013FCD 488B00                  	mov rax, qword [rax + 8 * 0]
 27160 00013FD0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27161 00013FD3 50                      	push rax
 27162 00013FD4 6A03                    	push 3	; arg count
 27163 00013FD6 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27164 00013FDE 803805                  	cmp byte [rax], T_undefined
 27165 00013FE1 0F84E1340000            	je L_error_fvar_undefined
 27166 00013FE7 803804                  	cmp byte [rax], T_closure
 27167 00013FEA 0F855C350000            	jne L_error_non_closure
 27168 00013FF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27169 00013FF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27170                                  
 27171                                  	; preparing a non-tail-call
 27172 00013FF6 488B4520                	mov rax, PARAM(0)	; param ch
 27173 00013FFA 50                      	push rax
 27174 00013FFB 488B4510                	mov rax, ENV
 27175 00013FFF 488B00                  	mov rax, qword [rax + 8 * 0]
 27176 00014002 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27177 00014006 50                      	push rax
 27178 00014007 488B4510                	mov rax, ENV
 27179 0001400B 488B00                  	mov rax, qword [rax + 8 * 0]
 27180 0001400E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27181 00014011 50                      	push rax
 27182 00014012 6A03                    	push 3	; arg count
 27183 00014014 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27184 0001401C 803805                  	cmp byte [rax], T_undefined
 27185 0001401F 0F84A3340000            	je L_error_fvar_undefined
 27186 00014025 803804                  	cmp byte [rax], T_closure
 27187 00014028 0F851E350000            	jne L_error_non_closure
 27188 0001402E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27189 00014031 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27190                                  
 27191                                  	; preparing a tail-call
 27192                                  	; preparing a non-tail-call
 27193 00014034 48B8-                   	mov rax, L_constants + 2270
 27193 00014036 [DE08000000000000] 
 27194 0001403E 50                      	push rax
 27195 0001403F 488B4510                	mov rax, ENV
 27196 00014043 488B00                  	mov rax, qword [rax + 8 * 0]
 27197 00014046 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27198 0001404A 50                      	push rax
 27199 0001404B 6A02                    	push 2	; arg count
 27200 0001404D 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27201 00014055 803805                  	cmp byte [rax], T_undefined
 27202 00014058 0F846A340000            	je L_error_fvar_undefined
 27203 0001405E 803804                  	cmp byte [rax], T_closure
 27204 00014061 0F85E5340000            	jne L_error_non_closure
 27205 00014067 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27206 0001406A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27207 0001406D 50                      	push rax
 27208                                  	; preparing a non-tail-call
 27209 0001406E 48B8-                   	mov rax, L_constants + 2270
 27209 00014070 [DE08000000000000] 
 27210 00014078 50                      	push rax
 27211 00014079 488B4510                	mov rax, ENV
 27212 0001407D 488B00                  	mov rax, qword [rax + 8 * 0]
 27213 00014080 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27214 00014084 50                      	push rax
 27215 00014085 6A02                    	push 2	; arg count
 27216 00014087 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27217 0001408F 803805                  	cmp byte [rax], T_undefined
 27218 00014092 0F8430340000            	je L_error_fvar_undefined
 27219 00014098 803804                  	cmp byte [rax], T_closure
 27220 0001409B 0F85AB340000            	jne L_error_non_closure
 27221 000140A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27222 000140A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27223 000140A7 50                      	push rax
 27224 000140A8 488B4510                	mov rax, ENV
 27225 000140AC 488B00                  	mov rax, qword [rax + 8 * 0]
 27226 000140AF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27227 000140B2 50                      	push rax
 27228 000140B3 6A03                    	push 3	; arg count
 27229 000140B5 488B4510                	mov rax, ENV
 27230 000140B9 488B4008                	mov rax, qword [rax + 8 * 1]
 27231 000140BD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27232 000140C0 488B00                  	mov rax, qword [rax]
 27233 000140C3 803804                  	cmp byte [rax], T_closure
 27234 000140C6 0F8580340000            	jne L_error_non_closure
 27235 000140CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27236 000140CF FF7508                  	push qword [rbp + 8 * 1]
 27237                                   ; old ret addr
 27238 000140D2 FF7500                  	push qword [rbp]
 27239                                   ; restore the old rbp
 27240 000140D5 BB03000000              	mov rbx, 3
 27241 000140DA 4883C303                	add rbx, 3
 27242 000140DE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27243 000140E2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27244 000140E7 4C8D4DF8                	lea r9, [rbp - 8]
 27245 000140EB B907000000              	mov rcx, 7
 27246                                  .L_tc_recycle_frame_loop_00e2:
 27247 000140F0 4883F900                	cmp rcx, 0
 27248 000140F4 7413                    	je .L_tc_recycle_frame_done_00e2
 27249 000140F6 4D8B11                  	mov r10, qword [r9]
 27250 000140F9 4D8910                  	mov qword [r8], r10
 27251 000140FC 4983E808                	sub r8, 8
 27252 00014100 4983E908                	sub r9, 8
 27253 00014104 48FFC9                  	dec rcx
 27254 00014107 EBE7                    	jmp .L_tc_recycle_frame_loop_00e2
 27255                                  .L_tc_recycle_frame_done_00e2:
 27256 00014109 498D6008                	lea rsp, [r8 + 8]
 27257 0001410D 5D                      	pop rbp ; restore the old rbp
 27258 0001410E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27259 00014111 C9                      	leave
 27260 00014112 C21800                  	ret AND_KILL_FRAME(1)
 27261                                  .L_lambda_simple_end_00aa:	; new closure is in rax
 27262 00014115 803804                  	cmp byte [rax], T_closure
 27263 00014118 0F852E340000            	jne L_error_non_closure
 27264 0001411E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27265 00014121 FF7508                  	push qword [rbp + 8 * 1]
 27266                                   ; old ret addr
 27267 00014124 FF7500                  	push qword [rbp]
 27268                                   ; restore the old rbp
 27269 00014127 BB01000000              	mov rbx, 1
 27270 0001412C 4883C303                	add rbx, 3
 27271 00014130 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27272 00014134 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27273 00014139 4C8D4DF8                	lea r9, [rbp - 8]
 27274 0001413D B905000000              	mov rcx, 5
 27275                                  .L_tc_recycle_frame_loop_00e1:
 27276 00014142 4883F900                	cmp rcx, 0
 27277 00014146 7413                    	je .L_tc_recycle_frame_done_00e1
 27278 00014148 4D8B11                  	mov r10, qword [r9]
 27279 0001414B 4D8910                  	mov qword [r8], r10
 27280 0001414E 4983E808                	sub r8, 8
 27281 00014152 4983E908                	sub r9, 8
 27282 00014156 48FFC9                  	dec rcx
 27283 00014159 EBE7                    	jmp .L_tc_recycle_frame_loop_00e1
 27284                                  .L_tc_recycle_frame_done_00e1:
 27285 0001415B 498D6008                	lea rsp, [r8 + 8]
 27286 0001415F 5D                      	pop rbp ; restore the old rbp
 27287 00014160 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27288 00014163 EB04                    	jmp .L_if_end_0081
 27289                                  .L_if_else_0081:
 27290 00014165 488B4520                	mov rax, PARAM(0)	; param vec
 27291                                  .L_if_end_0081:
 27292 00014169 C9                      	leave
 27293 0001416A C22800                  	ret AND_KILL_FRAME(3)
 27294                                  .L_lambda_simple_end_00a9:	; new closure is in rax
 27295 0001416D 50                      	push rax
 27296 0001416E 488B4520                	mov rax, PARAM(0)	; param run
 27297 00014172 8F00                    	pop qword [rax]
 27298 00014174 48B8-                   	mov rax, sob_void
 27298 00014176 [0000000000000000] 
 27299                                  
 27300 0001417E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27301 00014183 E86D340000              	call malloc
 27302 00014188 50                      	push rax
 27303 00014189 BF08000000              	mov rdi, 8 * 1	; new rib
 27304 0001418E E862340000              	call malloc
 27305 00014193 50                      	push rax
 27306 00014194 BF10000000              	mov rdi, 8 * 2	; extended env
 27307 00014199 E857340000              	call malloc
 27308 0001419E 488B7D10                	mov rdi, ENV
 27309 000141A2 BE00000000              	mov rsi, 0
 27310 000141A7 BA01000000              	mov rdx, 1
 27311                                  .L_lambda_simple_env_loop_00ab:	; ext_env[i + 1] <-- env[i]
 27312 000141AC 4883FE01                	cmp rsi, 1
 27313 000141B0 7410                    	je .L_lambda_simple_env_end_00ab
 27314 000141B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27315 000141B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27316 000141BA 48FFC6                  	inc rsi
 27317 000141BD 48FFC2                  	inc rdx
 27318 000141C0 EBEA                    	jmp .L_lambda_simple_env_loop_00ab
 27319                                  .L_lambda_simple_env_end_00ab:
 27320 000141C2 5B                      	pop rbx
 27321 000141C3 BE00000000              	mov rsi, 0
 27322                                  .L_lambda_simple_params_loop_00ab:	; copy params
 27323 000141C8 4883FE01                	cmp rsi, 1
 27324 000141CC 740E                    	je .L_lambda_simple_params_end_00ab
 27325 000141CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27326 000141D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27327 000141D7 48FFC6                  	inc rsi
 27328 000141DA EBEC                    	jmp .L_lambda_simple_params_loop_00ab
 27329                                  .L_lambda_simple_params_end_00ab:
 27330 000141DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27331 000141DF 4889C3                  	mov rbx, rax
 27332 000141E2 58                      	pop rax
 27333 000141E3 C60004                  	mov byte [rax], T_closure
 27334 000141E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27335 000141EA 48C74009[F7410100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ab
 27336 000141F2 E90C020000              	jmp .L_lambda_simple_end_00ab
 27337                                  .L_lambda_simple_code_00ab:	; lambda-simple body
 27338 000141F7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27339 000141FD 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 27340 000141FF FF742410                	push qword [rsp + 8 * 2]
 27341 00014203 6A01                    	push 1
 27342 00014205 E9A4330000              	jmp L_error_incorrect_arity_simple
 27343                                  .L_lambda_simple_arity_check_ok_00ab:
 27344 0001420A C8000000                	enter 0, 0
 27345                                  	; preparing a tail-call
 27346                                  	; preparing a non-tail-call
 27347 0001420E 488B4520                	mov rax, PARAM(0)	; param vec
 27348 00014212 50                      	push rax
 27349 00014213 6A01                    	push 1	; arg count
 27350 00014215 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 27351 0001421D 803805                  	cmp byte [rax], T_undefined
 27352 00014220 0F84A2320000            	je L_error_fvar_undefined
 27353 00014226 803804                  	cmp byte [rax], T_closure
 27354 00014229 0F851D330000            	jne L_error_non_closure
 27355 0001422F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27356 00014232 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27357 00014235 50                      	push rax
 27358 00014236 6A01                    	push 1	; arg count
 27359 00014238 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27360 0001423D E8B3330000              	call malloc
 27361 00014242 50                      	push rax
 27362 00014243 BF08000000              	mov rdi, 8 * 1	; new rib
 27363 00014248 E8A8330000              	call malloc
 27364 0001424D 50                      	push rax
 27365 0001424E BF18000000              	mov rdi, 8 * 3	; extended env
 27366 00014253 E89D330000              	call malloc
 27367 00014258 488B7D10                	mov rdi, ENV
 27368 0001425C BE00000000              	mov rsi, 0
 27369 00014261 BA01000000              	mov rdx, 1
 27370                                  .L_lambda_simple_env_loop_00ac:	; ext_env[i + 1] <-- env[i]
 27371 00014266 4883FE02                	cmp rsi, 2
 27372 0001426A 7410                    	je .L_lambda_simple_env_end_00ac
 27373 0001426C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27374 00014270 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27375 00014274 48FFC6                  	inc rsi
 27376 00014277 48FFC2                  	inc rdx
 27377 0001427A EBEA                    	jmp .L_lambda_simple_env_loop_00ac
 27378                                  .L_lambda_simple_env_end_00ac:
 27379 0001427C 5B                      	pop rbx
 27380 0001427D BE00000000              	mov rsi, 0
 27381                                  .L_lambda_simple_params_loop_00ac:	; copy params
 27382 00014282 4883FE01                	cmp rsi, 1
 27383 00014286 740E                    	je .L_lambda_simple_params_end_00ac
 27384 00014288 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27385 0001428D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27386 00014291 48FFC6                  	inc rsi
 27387 00014294 EBEC                    	jmp .L_lambda_simple_params_loop_00ac
 27388                                  .L_lambda_simple_params_end_00ac:
 27389 00014296 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27390 00014299 4889C3                  	mov rbx, rax
 27391 0001429C 58                      	pop rax
 27392 0001429D C60004                  	mov byte [rax], T_closure
 27393 000142A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27394 000142A4 48C74009[B1420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ac
 27395 000142AC E900010000              	jmp .L_lambda_simple_end_00ac
 27396                                  .L_lambda_simple_code_00ac:	; lambda-simple body
 27397 000142B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27398 000142B7 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 27399 000142B9 FF742410                	push qword [rsp + 8 * 2]
 27400 000142BD 6A01                    	push 1
 27401 000142BF E9EA320000              	jmp L_error_incorrect_arity_simple
 27402                                  .L_lambda_simple_arity_check_ok_00ac:
 27403 000142C4 C8000000                	enter 0, 0
 27404                                  	; preparing a non-tail-call
 27405 000142C8 488B4520                	mov rax, PARAM(0)	; param n
 27406 000142CC 50                      	push rax
 27407 000142CD 6A01                    	push 1	; arg count
 27408 000142CF 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 27409 000142D7 803805                  	cmp byte [rax], T_undefined
 27410 000142DA 0F84E8310000            	je L_error_fvar_undefined
 27411 000142E0 803804                  	cmp byte [rax], T_closure
 27412 000142E3 0F8563320000            	jne L_error_non_closure
 27413 000142E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27414 000142EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27415 000142EF 483D[02000000]          	cmp rax, sob_boolean_false
 27416 000142F5 740F                    	je .L_if_else_0082
 27417 000142F7 488B4510                	mov rax, ENV
 27418 000142FB 488B00                  	mov rax, qword [rax + 8 * 0]
 27419 000142FE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27420 00014301 E9A7000000              	jmp .L_if_end_0082
 27421                                  .L_if_else_0082:
 27422                                  	; preparing a tail-call
 27423                                  	; preparing a non-tail-call
 27424 00014306 48B8-                   	mov rax, L_constants + 2270
 27424 00014308 [DE08000000000000] 
 27425 00014310 50                      	push rax
 27426 00014311 488B4520                	mov rax, PARAM(0)	; param n
 27427 00014315 50                      	push rax
 27428 00014316 6A02                    	push 2	; arg count
 27429 00014318 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27430 00014320 803805                  	cmp byte [rax], T_undefined
 27431 00014323 0F849F310000            	je L_error_fvar_undefined
 27432 00014329 803804                  	cmp byte [rax], T_closure
 27433 0001432C 0F851A320000            	jne L_error_non_closure
 27434 00014332 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27435 00014335 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27436 00014338 50                      	push rax
 27437 00014339 48B8-                   	mov rax, L_constants + 2135
 27437 0001433B [5708000000000000] 
 27438 00014343 50                      	push rax
 27439 00014344 488B4510                	mov rax, ENV
 27440 00014348 488B00                  	mov rax, qword [rax + 8 * 0]
 27441 0001434B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27442 0001434E 50                      	push rax
 27443 0001434F 6A03                    	push 3	; arg count
 27444 00014351 488B4510                	mov rax, ENV
 27445 00014355 488B4008                	mov rax, qword [rax + 8 * 1]
 27446 00014359 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27447 0001435C 488B00                  	mov rax, qword [rax]
 27448 0001435F 803804                  	cmp byte [rax], T_closure
 27449 00014362 0F85E4310000            	jne L_error_non_closure
 27450 00014368 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27451 0001436B FF7508                  	push qword [rbp + 8 * 1]
 27452                                   ; old ret addr
 27453 0001436E FF7500                  	push qword [rbp]
 27454                                   ; restore the old rbp
 27455 00014371 BB03000000              	mov rbx, 3
 27456 00014376 4883C303                	add rbx, 3
 27457 0001437A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27458 0001437E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27459 00014383 4C8D4DF8                	lea r9, [rbp - 8]
 27460 00014387 B907000000              	mov rcx, 7
 27461                                  .L_tc_recycle_frame_loop_00e4:
 27462 0001438C 4883F900                	cmp rcx, 0
 27463 00014390 7413                    	je .L_tc_recycle_frame_done_00e4
 27464 00014392 4D8B11                  	mov r10, qword [r9]
 27465 00014395 4D8910                  	mov qword [r8], r10
 27466 00014398 4983E808                	sub r8, 8
 27467 0001439C 4983E908                	sub r9, 8
 27468 000143A0 48FFC9                  	dec rcx
 27469 000143A3 EBE7                    	jmp .L_tc_recycle_frame_loop_00e4
 27470                                  .L_tc_recycle_frame_done_00e4:
 27471 000143A5 498D6008                	lea rsp, [r8 + 8]
 27472 000143A9 5D                      	pop rbp ; restore the old rbp
 27473 000143AA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27474                                  .L_if_end_0082:
 27475 000143AD C9                      	leave
 27476 000143AE C21800                  	ret AND_KILL_FRAME(1)
 27477                                  .L_lambda_simple_end_00ac:	; new closure is in rax
 27478 000143B1 803804                  	cmp byte [rax], T_closure
 27479 000143B4 0F8592310000            	jne L_error_non_closure
 27480 000143BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 27481 000143BD FF7508                  	push qword [rbp + 8 * 1]
 27482                                   ; old ret addr
 27483 000143C0 FF7500                  	push qword [rbp]
 27484                                   ; restore the old rbp
 27485 000143C3 BB01000000              	mov rbx, 1
 27486 000143C8 4883C303                	add rbx, 3
 27487 000143CC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27488 000143D0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27489 000143D5 4C8D4DF8                	lea r9, [rbp - 8]
 27490 000143D9 B905000000              	mov rcx, 5
 27491                                  .L_tc_recycle_frame_loop_00e3:
 27492 000143DE 4883F900                	cmp rcx, 0
 27493 000143E2 7413                    	je .L_tc_recycle_frame_done_00e3
 27494 000143E4 4D8B11                  	mov r10, qword [r9]
 27495 000143E7 4D8910                  	mov qword [r8], r10
 27496 000143EA 4983E808                	sub r8, 8
 27497 000143EE 4983E908                	sub r9, 8
 27498 000143F2 48FFC9                  	dec rcx
 27499 000143F5 EBE7                    	jmp .L_tc_recycle_frame_loop_00e3
 27500                                  .L_tc_recycle_frame_done_00e3:
 27501 000143F7 498D6008                	lea rsp, [r8 + 8]
 27502 000143FB 5D                      	pop rbp ; restore the old rbp
 27503 000143FC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27504 000143FF C9                      	leave
 27505 00014400 C21800                  	ret AND_KILL_FRAME(1)
 27506                                  .L_lambda_simple_end_00ab:	; new closure is in rax
 27507 00014403 C9                      	leave
 27508 00014404 C21800                  	ret AND_KILL_FRAME(1)
 27509                                  .L_lambda_simple_end_00a8:	; new closure is in rax
 27510 00014407 803804                  	cmp byte [rax], T_closure
 27511 0001440A 0F853C310000            	jne L_error_non_closure
 27512 00014410 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27513 00014413 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27514 00014416 48890425[77170000]      	mov qword [free_var_146], rax
 27515 0001441E 48B8-                   	mov rax, sob_void
 27515 00014420 [0000000000000000] 
 27516                                  
 27517 00014428 4889C7                  	mov rdi, rax
 27518 0001442B E81A340000              	call print_sexpr_if_not_void
 27519 00014430 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27520 00014435 E8BB310000              	call malloc
 27521 0001443A 50                      	push rax
 27522 0001443B BF00000000              	mov rdi, 8 * 0	; new rib
 27523 00014440 E8B0310000              	call malloc
 27524 00014445 50                      	push rax
 27525 00014446 BF08000000              	mov rdi, 8 * 1	; extended env
 27526 0001444B E8A5310000              	call malloc
 27527 00014450 488B7D10                	mov rdi, ENV
 27528 00014454 BE00000000              	mov rsi, 0
 27529 00014459 BA01000000              	mov rdx, 1
 27530                                  .L_lambda_simple_env_loop_00ad:	; ext_env[i + 1] <-- env[i]
 27531 0001445E 4883FE00                	cmp rsi, 0
 27532 00014462 7410                    	je .L_lambda_simple_env_end_00ad
 27533 00014464 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27534 00014468 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27535 0001446C 48FFC6                  	inc rsi
 27536 0001446F 48FFC2                  	inc rdx
 27537 00014472 EBEA                    	jmp .L_lambda_simple_env_loop_00ad
 27538                                  .L_lambda_simple_env_end_00ad:
 27539 00014474 5B                      	pop rbx
 27540 00014475 BE00000000              	mov rsi, 0
 27541                                  .L_lambda_simple_params_loop_00ad:	; copy params
 27542 0001447A 4883FE00                	cmp rsi, 0
 27543 0001447E 740E                    	je .L_lambda_simple_params_end_00ad
 27544 00014480 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27545 00014485 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27546 00014489 48FFC6                  	inc rsi
 27547 0001448C EBEC                    	jmp .L_lambda_simple_params_loop_00ad
 27548                                  .L_lambda_simple_params_end_00ad:
 27549 0001448E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27550 00014491 4889C3                  	mov rbx, rax
 27551 00014494 58                      	pop rax
 27552 00014495 C60004                  	mov byte [rax], T_closure
 27553 00014498 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27554 0001449C 48C74009[A9440100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ad
 27555 000144A4 E951030000              	jmp .L_lambda_simple_end_00ad
 27556                                  .L_lambda_simple_code_00ad:	; lambda-simple body
 27557 000144A9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27558 000144AF 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 27559 000144B1 FF742410                	push qword [rsp + 8 * 2]
 27560 000144B5 6A02                    	push 2
 27561 000144B7 E9F2300000              	jmp L_error_incorrect_arity_simple
 27562                                  .L_lambda_simple_arity_check_ok_00ad:
 27563 000144BC C8000000                	enter 0, 0
 27564                                  	; preparing a tail-call
 27565 000144C0 48B8-                   	mov rax, L_constants + 1993
 27565 000144C2 [C907000000000000] 
 27566 000144CA 50                      	push rax
 27567 000144CB 6A01                    	push 1	; arg count
 27568 000144CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27569 000144D2 E81E310000              	call malloc
 27570 000144D7 50                      	push rax
 27571 000144D8 BF10000000              	mov rdi, 8 * 2	; new rib
 27572 000144DD E813310000              	call malloc
 27573 000144E2 50                      	push rax
 27574 000144E3 BF10000000              	mov rdi, 8 * 2	; extended env
 27575 000144E8 E808310000              	call malloc
 27576 000144ED 488B7D10                	mov rdi, ENV
 27577 000144F1 BE00000000              	mov rsi, 0
 27578 000144F6 BA01000000              	mov rdx, 1
 27579                                  .L_lambda_simple_env_loop_00ae:	; ext_env[i + 1] <-- env[i]
 27580 000144FB 4883FE01                	cmp rsi, 1
 27581 000144FF 7410                    	je .L_lambda_simple_env_end_00ae
 27582 00014501 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27583 00014505 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27584 00014509 48FFC6                  	inc rsi
 27585 0001450C 48FFC2                  	inc rdx
 27586 0001450F EBEA                    	jmp .L_lambda_simple_env_loop_00ae
 27587                                  .L_lambda_simple_env_end_00ae:
 27588 00014511 5B                      	pop rbx
 27589 00014512 BE00000000              	mov rsi, 0
 27590                                  .L_lambda_simple_params_loop_00ae:	; copy params
 27591 00014517 4883FE02                	cmp rsi, 2
 27592 0001451B 740E                    	je .L_lambda_simple_params_end_00ae
 27593 0001451D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27594 00014522 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27595 00014526 48FFC6                  	inc rsi
 27596 00014529 EBEC                    	jmp .L_lambda_simple_params_loop_00ae
 27597                                  .L_lambda_simple_params_end_00ae:
 27598 0001452B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27599 0001452E 4889C3                  	mov rbx, rax
 27600 00014531 58                      	pop rax
 27601 00014532 C60004                  	mov byte [rax], T_closure
 27602 00014535 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27603 00014539 48C74009[46450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ae
 27604 00014541 E962020000              	jmp .L_lambda_simple_end_00ae
 27605                                  .L_lambda_simple_code_00ae:	; lambda-simple body
 27606 00014546 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27607 0001454C 740B                    	je .L_lambda_simple_arity_check_ok_00ae
 27608 0001454E FF742410                	push qword [rsp + 8 * 2]
 27609 00014552 6A01                    	push 1
 27610 00014554 E955300000              	jmp L_error_incorrect_arity_simple
 27611                                  .L_lambda_simple_arity_check_ok_00ae:
 27612 00014559 C8000000                	enter 0, 0
 27613 0001455D BF08000000              	mov rdi, 8*1
 27614 00014562 E88E300000              	call malloc
 27615 00014567 488B5D20                	mov rbx, PARAM(0)
 27616 0001456B 488918                  	mov qword [rax], rbx
 27617 0001456E 48894520                	mov PARAM(0), rax
 27618 00014572 48B8-                   	mov rax, sob_void
 27618 00014574 [0000000000000000] 
 27619                                  
 27620 0001457C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27621 00014581 E86F300000              	call malloc
 27622 00014586 50                      	push rax
 27623 00014587 BF08000000              	mov rdi, 8 * 1	; new rib
 27624 0001458C E864300000              	call malloc
 27625 00014591 50                      	push rax
 27626 00014592 BF18000000              	mov rdi, 8 * 3	; extended env
 27627 00014597 E859300000              	call malloc
 27628 0001459C 488B7D10                	mov rdi, ENV
 27629 000145A0 BE00000000              	mov rsi, 0
 27630 000145A5 BA01000000              	mov rdx, 1
 27631                                  .L_lambda_simple_env_loop_00af:	; ext_env[i + 1] <-- env[i]
 27632 000145AA 4883FE02                	cmp rsi, 2
 27633 000145AE 7410                    	je .L_lambda_simple_env_end_00af
 27634 000145B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27635 000145B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27636 000145B8 48FFC6                  	inc rsi
 27637 000145BB 48FFC2                  	inc rdx
 27638 000145BE EBEA                    	jmp .L_lambda_simple_env_loop_00af
 27639                                  .L_lambda_simple_env_end_00af:
 27640 000145C0 5B                      	pop rbx
 27641 000145C1 BE00000000              	mov rsi, 0
 27642                                  .L_lambda_simple_params_loop_00af:	; copy params
 27643 000145C6 4883FE01                	cmp rsi, 1
 27644 000145CA 740E                    	je .L_lambda_simple_params_end_00af
 27645 000145CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27646 000145D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27647 000145D5 48FFC6                  	inc rsi
 27648 000145D8 EBEC                    	jmp .L_lambda_simple_params_loop_00af
 27649                                  .L_lambda_simple_params_end_00af:
 27650 000145DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27651 000145DD 4889C3                  	mov rbx, rax
 27652 000145E0 58                      	pop rax
 27653 000145E1 C60004                  	mov byte [rax], T_closure
 27654 000145E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27655 000145E8 48C74009[F5450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00af
 27656 000145F0 E93C010000              	jmp .L_lambda_simple_end_00af
 27657                                  .L_lambda_simple_code_00af:	; lambda-simple body
 27658 000145F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27659 000145FB 740B                    	je .L_lambda_simple_arity_check_ok_00af
 27660 000145FD FF742410                	push qword [rsp + 8 * 2]
 27661 00014601 6A01                    	push 1
 27662 00014603 E9A62F0000              	jmp L_error_incorrect_arity_simple
 27663                                  .L_lambda_simple_arity_check_ok_00af:
 27664 00014608 C8000000                	enter 0, 0
 27665                                  	; preparing a non-tail-call
 27666 0001460C 488B4510                	mov rax, ENV
 27667 00014610 488B4008                	mov rax, qword [rax + 8 * 1]
 27668 00014614 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27669 00014617 50                      	push rax
 27670 00014618 488B4520                	mov rax, PARAM(0)	; param i
 27671 0001461C 50                      	push rax
 27672 0001461D 6A02                    	push 2	; arg count
 27673 0001461F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27674 00014627 803805                  	cmp byte [rax], T_undefined
 27675 0001462A 0F84982E0000            	je L_error_fvar_undefined
 27676 00014630 803804                  	cmp byte [rax], T_closure
 27677 00014633 0F85132F0000            	jne L_error_non_closure
 27678 00014639 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27679 0001463C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27680 0001463F 483D[02000000]          	cmp rax, sob_boolean_false
 27681 00014645 0F84D8000000            	je .L_if_else_0083
 27682                                  	; preparing a tail-call
 27683                                  	; preparing a non-tail-call
 27684                                  	; preparing a non-tail-call
 27685 0001464B 48B8-                   	mov rax, L_constants + 2270
 27685 0001464D [DE08000000000000] 
 27686 00014655 50                      	push rax
 27687 00014656 488B4520                	mov rax, PARAM(0)	; param i
 27688 0001465A 50                      	push rax
 27689 0001465B 6A02                    	push 2	; arg count
 27690 0001465D 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27691 00014665 803805                  	cmp byte [rax], T_undefined
 27692 00014668 0F845A2E0000            	je L_error_fvar_undefined
 27693 0001466E 803804                  	cmp byte [rax], T_closure
 27694 00014671 0F85D52E0000            	jne L_error_non_closure
 27695 00014677 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27696 0001467A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27697 0001467D 50                      	push rax
 27698 0001467E 6A01                    	push 1	; arg count
 27699 00014680 488B4510                	mov rax, ENV
 27700 00014684 488B00                  	mov rax, qword [rax + 8 * 0]
 27701 00014687 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27702 0001468A 488B00                  	mov rax, qword [rax]
 27703 0001468D 803804                  	cmp byte [rax], T_closure
 27704 00014690 0F85B62E0000            	jne L_error_non_closure
 27705 00014696 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27706 00014699 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27707 0001469C 50                      	push rax
 27708                                  	; preparing a non-tail-call
 27709 0001469D 488B4520                	mov rax, PARAM(0)	; param i
 27710 000146A1 50                      	push rax
 27711 000146A2 6A01                    	push 1	; arg count
 27712 000146A4 488B4510                	mov rax, ENV
 27713 000146A8 488B4008                	mov rax, qword [rax + 8 * 1]
 27714 000146AC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27715 000146B0 803804                  	cmp byte [rax], T_closure
 27716 000146B3 0F85932E0000            	jne L_error_non_closure
 27717 000146B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27718 000146BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27719 000146BF 50                      	push rax
 27720 000146C0 6A02                    	push 2	; arg count
 27721 000146C2 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 27722 000146CA 803805                  	cmp byte [rax], T_undefined
 27723 000146CD 0F84F52D0000            	je L_error_fvar_undefined
 27724 000146D3 803804                  	cmp byte [rax], T_closure
 27725 000146D6 0F85702E0000            	jne L_error_non_closure
 27726 000146DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27727 000146DF FF7508                  	push qword [rbp + 8 * 1]
 27728                                   ; old ret addr
 27729 000146E2 FF7500                  	push qword [rbp]
 27730                                   ; restore the old rbp
 27731 000146E5 BB02000000              	mov rbx, 2
 27732 000146EA 4883C303                	add rbx, 3
 27733 000146EE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27734 000146F2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27735 000146F7 4C8D4DF8                	lea r9, [rbp - 8]
 27736 000146FB B906000000              	mov rcx, 6
 27737                                  .L_tc_recycle_frame_loop_00e6:
 27738 00014700 4883F900                	cmp rcx, 0
 27739 00014704 7413                    	je .L_tc_recycle_frame_done_00e6
 27740 00014706 4D8B11                  	mov r10, qword [r9]
 27741 00014709 4D8910                  	mov qword [r8], r10
 27742 0001470C 4983E808                	sub r8, 8
 27743 00014710 4983E908                	sub r9, 8
 27744 00014714 48FFC9                  	dec rcx
 27745 00014717 EBE7                    	jmp .L_tc_recycle_frame_loop_00e6
 27746                                  .L_tc_recycle_frame_done_00e6:
 27747 00014719 498D6008                	lea rsp, [r8 + 8]
 27748 0001471D 5D                      	pop rbp ; restore the old rbp
 27749 0001471E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27750 00014721 EB0A                    	jmp .L_if_end_0083
 27751                                  .L_if_else_0083:
 27752 00014723 48B8-                   	mov rax, L_constants + 1
 27752 00014725 [0100000000000000] 
 27753                                  .L_if_end_0083:
 27754 0001472D C9                      	leave
 27755 0001472E C21800                  	ret AND_KILL_FRAME(1)
 27756                                  .L_lambda_simple_end_00af:	; new closure is in rax
 27757 00014731 50                      	push rax
 27758 00014732 488B4520                	mov rax, PARAM(0)	; param run
 27759 00014736 8F00                    	pop qword [rax]
 27760 00014738 48B8-                   	mov rax, sob_void
 27760 0001473A [0000000000000000] 
 27761                                  
 27762                                  	; preparing a tail-call
 27763 00014742 48B8-                   	mov rax, L_constants + 2135
 27763 00014744 [5708000000000000] 
 27764 0001474C 50                      	push rax
 27765 0001474D 6A01                    	push 1	; arg count
 27766 0001474F 488B4520                	mov rax, PARAM(0)	; param run
 27767 00014753 488B00                  	mov rax, qword [rax]
 27768 00014756 803804                  	cmp byte [rax], T_closure
 27769 00014759 0F85ED2D0000            	jne L_error_non_closure
 27770 0001475F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27771 00014762 FF7508                  	push qword [rbp + 8 * 1]
 27772                                   ; old ret addr
 27773 00014765 FF7500                  	push qword [rbp]
 27774                                   ; restore the old rbp
 27775 00014768 BB01000000              	mov rbx, 1
 27776 0001476D 4883C303                	add rbx, 3
 27777 00014771 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27778 00014775 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27779 0001477A 4C8D4DF8                	lea r9, [rbp - 8]
 27780 0001477E B905000000              	mov rcx, 5
 27781                                  .L_tc_recycle_frame_loop_00e7:
 27782 00014783 4883F900                	cmp rcx, 0
 27783 00014787 7413                    	je .L_tc_recycle_frame_done_00e7
 27784 00014789 4D8B11                  	mov r10, qword [r9]
 27785 0001478C 4D8910                  	mov qword [r8], r10
 27786 0001478F 4983E808                	sub r8, 8
 27787 00014793 4983E908                	sub r9, 8
 27788 00014797 48FFC9                  	dec rcx
 27789 0001479A EBE7                    	jmp .L_tc_recycle_frame_loop_00e7
 27790                                  .L_tc_recycle_frame_done_00e7:
 27791 0001479C 498D6008                	lea rsp, [r8 + 8]
 27792 000147A0 5D                      	pop rbp ; restore the old rbp
 27793 000147A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27794 000147A4 C9                      	leave
 27795 000147A5 C21800                  	ret AND_KILL_FRAME(1)
 27796                                  .L_lambda_simple_end_00ae:	; new closure is in rax
 27797 000147A8 803804                  	cmp byte [rax], T_closure
 27798 000147AB 0F859B2D0000            	jne L_error_non_closure
 27799 000147B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27800 000147B4 FF7508                  	push qword [rbp + 8 * 1]
 27801                                   ; old ret addr
 27802 000147B7 FF7500                  	push qword [rbp]
 27803                                   ; restore the old rbp
 27804 000147BA BB01000000              	mov rbx, 1
 27805 000147BF 4883C303                	add rbx, 3
 27806 000147C3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27807 000147C7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27808 000147CC 4C8D4DF8                	lea r9, [rbp - 8]
 27809 000147D0 B905000000              	mov rcx, 5
 27810                                  .L_tc_recycle_frame_loop_00e5:
 27811 000147D5 4883F900                	cmp rcx, 0
 27812 000147D9 7413                    	je .L_tc_recycle_frame_done_00e5
 27813 000147DB 4D8B11                  	mov r10, qword [r9]
 27814 000147DE 4D8910                  	mov qword [r8], r10
 27815 000147E1 4983E808                	sub r8, 8
 27816 000147E5 4983E908                	sub r9, 8
 27817 000147E9 48FFC9                  	dec rcx
 27818 000147EC EBE7                    	jmp .L_tc_recycle_frame_loop_00e5
 27819                                  .L_tc_recycle_frame_done_00e5:
 27820 000147EE 498D6008                	lea rsp, [r8 + 8]
 27821 000147F2 5D                      	pop rbp ; restore the old rbp
 27822 000147F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27823 000147F6 C9                      	leave
 27824 000147F7 C22000                  	ret AND_KILL_FRAME(2)
 27825                                  .L_lambda_simple_end_00ad:	; new closure is in rax
 27826 000147FA 48890425[47140000]      	mov qword [free_var_98], rax
 27827 00014802 48B8-                   	mov rax, sob_void
 27827 00014804 [0000000000000000] 
 27828                                  
 27829 0001480C 4889C7                  	mov rdi, rax
 27830 0001480F E836300000              	call print_sexpr_if_not_void
 27831 00014814 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27832 00014819 E8D72D0000              	call malloc
 27833 0001481E 50                      	push rax
 27834 0001481F BF00000000              	mov rdi, 8 * 0	; new rib
 27835 00014824 E8CC2D0000              	call malloc
 27836 00014829 50                      	push rax
 27837 0001482A BF08000000              	mov rdi, 8 * 1	; extended env
 27838 0001482F E8C12D0000              	call malloc
 27839 00014834 488B7D10                	mov rdi, ENV
 27840 00014838 BE00000000              	mov rsi, 0
 27841 0001483D BA01000000              	mov rdx, 1
 27842                                  .L_lambda_simple_env_loop_00b0:	; ext_env[i + 1] <-- env[i]
 27843 00014842 4883FE00                	cmp rsi, 0
 27844 00014846 7410                    	je .L_lambda_simple_env_end_00b0
 27845 00014848 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27846 0001484C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27847 00014850 48FFC6                  	inc rsi
 27848 00014853 48FFC2                  	inc rdx
 27849 00014856 EBEA                    	jmp .L_lambda_simple_env_loop_00b0
 27850                                  .L_lambda_simple_env_end_00b0:
 27851 00014858 5B                      	pop rbx
 27852 00014859 BE00000000              	mov rsi, 0
 27853                                  .L_lambda_simple_params_loop_00b0:	; copy params
 27854 0001485E 4883FE00                	cmp rsi, 0
 27855 00014862 740E                    	je .L_lambda_simple_params_end_00b0
 27856 00014864 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27857 00014869 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27858 0001486D 48FFC6                  	inc rsi
 27859 00014870 EBEC                    	jmp .L_lambda_simple_params_loop_00b0
 27860                                  .L_lambda_simple_params_end_00b0:
 27861 00014872 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27862 00014875 4889C3                  	mov rbx, rax
 27863 00014878 58                      	pop rax
 27864 00014879 C60004                  	mov byte [rax], T_closure
 27865 0001487C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27866 00014880 48C74009[8D480100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b0
 27867 00014888 E96E040000              	jmp .L_lambda_simple_end_00b0
 27868                                  .L_lambda_simple_code_00b0:	; lambda-simple body
 27869 0001488D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27870 00014893 740B                    	je .L_lambda_simple_arity_check_ok_00b0
 27871 00014895 FF742410                	push qword [rsp + 8 * 2]
 27872 00014899 6A02                    	push 2
 27873 0001489B E90E2D0000              	jmp L_error_incorrect_arity_simple
 27874                                  .L_lambda_simple_arity_check_ok_00b0:
 27875 000148A0 C8000000                	enter 0, 0
 27876                                  	; preparing a tail-call
 27877                                  	; preparing a non-tail-call
 27878 000148A4 488B4520                	mov rax, PARAM(0)	; param n
 27879 000148A8 50                      	push rax
 27880 000148A9 6A01                    	push 1	; arg count
 27881 000148AB 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 27882 000148B3 803805                  	cmp byte [rax], T_undefined
 27883 000148B6 0F840C2C0000            	je L_error_fvar_undefined
 27884 000148BC 803804                  	cmp byte [rax], T_closure
 27885 000148BF 0F85872C0000            	jne L_error_non_closure
 27886 000148C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27887 000148C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27888 000148CB 50                      	push rax
 27889 000148CC 6A01                    	push 1	; arg count
 27890 000148CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27891 000148D3 E81D2D0000              	call malloc
 27892 000148D8 50                      	push rax
 27893 000148D9 BF10000000              	mov rdi, 8 * 2	; new rib
 27894 000148DE E8122D0000              	call malloc
 27895 000148E3 50                      	push rax
 27896 000148E4 BF10000000              	mov rdi, 8 * 2	; extended env
 27897 000148E9 E8072D0000              	call malloc
 27898 000148EE 488B7D10                	mov rdi, ENV
 27899 000148F2 BE00000000              	mov rsi, 0
 27900 000148F7 BA01000000              	mov rdx, 1
 27901                                  .L_lambda_simple_env_loop_00b1:	; ext_env[i + 1] <-- env[i]
 27902 000148FC 4883FE01                	cmp rsi, 1
 27903 00014900 7410                    	je .L_lambda_simple_env_end_00b1
 27904 00014902 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27905 00014906 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27906 0001490A 48FFC6                  	inc rsi
 27907 0001490D 48FFC2                  	inc rdx
 27908 00014910 EBEA                    	jmp .L_lambda_simple_env_loop_00b1
 27909                                  .L_lambda_simple_env_end_00b1:
 27910 00014912 5B                      	pop rbx
 27911 00014913 BE00000000              	mov rsi, 0
 27912                                  .L_lambda_simple_params_loop_00b1:	; copy params
 27913 00014918 4883FE02                	cmp rsi, 2
 27914 0001491C 740E                    	je .L_lambda_simple_params_end_00b1
 27915 0001491E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27916 00014923 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27917 00014927 48FFC6                  	inc rsi
 27918 0001492A EBEC                    	jmp .L_lambda_simple_params_loop_00b1
 27919                                  .L_lambda_simple_params_end_00b1:
 27920 0001492C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27921 0001492F 4889C3                  	mov rbx, rax
 27922 00014932 58                      	pop rax
 27923 00014933 C60004                  	mov byte [rax], T_closure
 27924 00014936 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27925 0001493A 48C74009[47490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b1
 27926 00014942 E962030000              	jmp .L_lambda_simple_end_00b1
 27927                                  .L_lambda_simple_code_00b1:	; lambda-simple body
 27928 00014947 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27929 0001494D 740B                    	je .L_lambda_simple_arity_check_ok_00b1
 27930 0001494F FF742410                	push qword [rsp + 8 * 2]
 27931 00014953 6A01                    	push 1
 27932 00014955 E9542C0000              	jmp L_error_incorrect_arity_simple
 27933                                  .L_lambda_simple_arity_check_ok_00b1:
 27934 0001495A C8000000                	enter 0, 0
 27935                                  	; preparing a tail-call
 27936 0001495E 48B8-                   	mov rax, L_constants + 1993
 27936 00014960 [C907000000000000] 
 27937 00014968 50                      	push rax
 27938 00014969 6A01                    	push 1	; arg count
 27939 0001496B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27940 00014970 E8802C0000              	call malloc
 27941 00014975 50                      	push rax
 27942 00014976 BF08000000              	mov rdi, 8 * 1	; new rib
 27943 0001497B E8752C0000              	call malloc
 27944 00014980 50                      	push rax
 27945 00014981 BF18000000              	mov rdi, 8 * 3	; extended env
 27946 00014986 E86A2C0000              	call malloc
 27947 0001498B 488B7D10                	mov rdi, ENV
 27948 0001498F BE00000000              	mov rsi, 0
 27949 00014994 BA01000000              	mov rdx, 1
 27950                                  .L_lambda_simple_env_loop_00b2:	; ext_env[i + 1] <-- env[i]
 27951 00014999 4883FE02                	cmp rsi, 2
 27952 0001499D 7410                    	je .L_lambda_simple_env_end_00b2
 27953 0001499F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27954 000149A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27955 000149A7 48FFC6                  	inc rsi
 27956 000149AA 48FFC2                  	inc rdx
 27957 000149AD EBEA                    	jmp .L_lambda_simple_env_loop_00b2
 27958                                  .L_lambda_simple_env_end_00b2:
 27959 000149AF 5B                      	pop rbx
 27960 000149B0 BE00000000              	mov rsi, 0
 27961                                  .L_lambda_simple_params_loop_00b2:	; copy params
 27962 000149B5 4883FE01                	cmp rsi, 1
 27963 000149B9 740E                    	je .L_lambda_simple_params_end_00b2
 27964 000149BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27965 000149C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27966 000149C4 48FFC6                  	inc rsi
 27967 000149C7 EBEC                    	jmp .L_lambda_simple_params_loop_00b2
 27968                                  .L_lambda_simple_params_end_00b2:
 27969 000149C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27970 000149CC 4889C3                  	mov rbx, rax
 27971 000149CF 58                      	pop rax
 27972 000149D0 C60004                  	mov byte [rax], T_closure
 27973 000149D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27974 000149D7 48C74009[E4490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b2
 27975 000149DF E973020000              	jmp .L_lambda_simple_end_00b2
 27976                                  .L_lambda_simple_code_00b2:	; lambda-simple body
 27977 000149E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27978 000149EA 740B                    	je .L_lambda_simple_arity_check_ok_00b2
 27979 000149EC FF742410                	push qword [rsp + 8 * 2]
 27980 000149F0 6A01                    	push 1
 27981 000149F2 E9B72B0000              	jmp L_error_incorrect_arity_simple
 27982                                  .L_lambda_simple_arity_check_ok_00b2:
 27983 000149F7 C8000000                	enter 0, 0
 27984 000149FB BF08000000              	mov rdi, 8*1
 27985 00014A00 E8F02B0000              	call malloc
 27986 00014A05 488B5D20                	mov rbx, PARAM(0)
 27987 00014A09 488918                  	mov qword [rax], rbx
 27988 00014A0C 48894520                	mov PARAM(0), rax
 27989 00014A10 48B8-                   	mov rax, sob_void
 27989 00014A12 [0000000000000000] 
 27990                                  
 27991 00014A1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27992 00014A1F E8D12B0000              	call malloc
 27993 00014A24 50                      	push rax
 27994 00014A25 BF08000000              	mov rdi, 8 * 1	; new rib
 27995 00014A2A E8C62B0000              	call malloc
 27996 00014A2F 50                      	push rax
 27997 00014A30 BF20000000              	mov rdi, 8 * 4	; extended env
 27998 00014A35 E8BB2B0000              	call malloc
 27999 00014A3A 488B7D10                	mov rdi, ENV
 28000 00014A3E BE00000000              	mov rsi, 0
 28001 00014A43 BA01000000              	mov rdx, 1
 28002                                  .L_lambda_simple_env_loop_00b3:	; ext_env[i + 1] <-- env[i]
 28003 00014A48 4883FE03                	cmp rsi, 3
 28004 00014A4C 7410                    	je .L_lambda_simple_env_end_00b3
 28005 00014A4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28006 00014A52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28007 00014A56 48FFC6                  	inc rsi
 28008 00014A59 48FFC2                  	inc rdx
 28009 00014A5C EBEA                    	jmp .L_lambda_simple_env_loop_00b3
 28010                                  .L_lambda_simple_env_end_00b3:
 28011 00014A5E 5B                      	pop rbx
 28012 00014A5F BE00000000              	mov rsi, 0
 28013                                  .L_lambda_simple_params_loop_00b3:	; copy params
 28014 00014A64 4883FE01                	cmp rsi, 1
 28015 00014A68 740E                    	je .L_lambda_simple_params_end_00b3
 28016 00014A6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28017 00014A6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28018 00014A73 48FFC6                  	inc rsi
 28019 00014A76 EBEC                    	jmp .L_lambda_simple_params_loop_00b3
 28020                                  .L_lambda_simple_params_end_00b3:
 28021 00014A78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28022 00014A7B 4889C3                  	mov rbx, rax
 28023 00014A7E 58                      	pop rax
 28024 00014A7F C60004                  	mov byte [rax], T_closure
 28025 00014A82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28026 00014A86 48C74009[934A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b3
 28027 00014A8E E94D010000              	jmp .L_lambda_simple_end_00b3
 28028                                  .L_lambda_simple_code_00b3:	; lambda-simple body
 28029 00014A93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28030 00014A99 740B                    	je .L_lambda_simple_arity_check_ok_00b3
 28031 00014A9B FF742410                	push qword [rsp + 8 * 2]
 28032 00014A9F 6A01                    	push 1
 28033 00014AA1 E9082B0000              	jmp L_error_incorrect_arity_simple
 28034                                  .L_lambda_simple_arity_check_ok_00b3:
 28035 00014AA6 C8000000                	enter 0, 0
 28036                                  	; preparing a non-tail-call
 28037 00014AAA 488B4510                	mov rax, ENV
 28038 00014AAE 488B4010                	mov rax, qword [rax + 8 * 2]
 28039 00014AB2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28040 00014AB5 50                      	push rax
 28041 00014AB6 488B4520                	mov rax, PARAM(0)	; param i
 28042 00014ABA 50                      	push rax
 28043 00014ABB 6A02                    	push 2	; arg count
 28044 00014ABD 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28045 00014AC5 803805                  	cmp byte [rax], T_undefined
 28046 00014AC8 0F84FA290000            	je L_error_fvar_undefined
 28047 00014ACE 803804                  	cmp byte [rax], T_closure
 28048 00014AD1 0F85752A0000            	jne L_error_non_closure
 28049 00014AD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28050 00014ADA FF5009                  	call SOB_CLOSURE_CODE(rax)
 28051 00014ADD 483D[02000000]          	cmp rax, sob_boolean_false
 28052 00014AE3 0F84E8000000            	je .L_if_else_0084
 28053                                  	; preparing a non-tail-call
 28054                                  	; preparing a non-tail-call
 28055 00014AE9 488B4520                	mov rax, PARAM(0)	; param i
 28056 00014AED 50                      	push rax
 28057 00014AEE 6A01                    	push 1	; arg count
 28058 00014AF0 488B4510                	mov rax, ENV
 28059 00014AF4 488B4010                	mov rax, qword [rax + 8 * 2]
 28060 00014AF8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28061 00014AFC 803804                  	cmp byte [rax], T_closure
 28062 00014AFF 0F85472A0000            	jne L_error_non_closure
 28063 00014B05 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28064 00014B08 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28065 00014B0B 50                      	push rax
 28066 00014B0C 488B4520                	mov rax, PARAM(0)	; param i
 28067 00014B10 50                      	push rax
 28068 00014B11 488B4510                	mov rax, ENV
 28069 00014B15 488B4008                	mov rax, qword [rax + 8 * 1]
 28070 00014B19 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28071 00014B1C 50                      	push rax
 28072 00014B1D 6A03                    	push 3	; arg count
 28073 00014B1F 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 28074 00014B27 803805                  	cmp byte [rax], T_undefined
 28075 00014B2A 0F8498290000            	je L_error_fvar_undefined
 28076 00014B30 803804                  	cmp byte [rax], T_closure
 28077 00014B33 0F85132A0000            	jne L_error_non_closure
 28078 00014B39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28079 00014B3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28080                                  
 28081                                  	; preparing a tail-call
 28082                                  	; preparing a non-tail-call
 28083 00014B3F 48B8-                   	mov rax, L_constants + 2270
 28083 00014B41 [DE08000000000000] 
 28084 00014B49 50                      	push rax
 28085 00014B4A 488B4520                	mov rax, PARAM(0)	; param i
 28086 00014B4E 50                      	push rax
 28087 00014B4F 6A02                    	push 2	; arg count
 28088 00014B51 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28089 00014B59 803805                  	cmp byte [rax], T_undefined
 28090 00014B5C 0F8466290000            	je L_error_fvar_undefined
 28091 00014B62 803804                  	cmp byte [rax], T_closure
 28092 00014B65 0F85E1290000            	jne L_error_non_closure
 28093 00014B6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28094 00014B6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 28095 00014B71 50                      	push rax
 28096 00014B72 6A01                    	push 1	; arg count
 28097 00014B74 488B4510                	mov rax, ENV
 28098 00014B78 488B00                  	mov rax, qword [rax + 8 * 0]
 28099 00014B7B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28100 00014B7E 488B00                  	mov rax, qword [rax]
 28101 00014B81 803804                  	cmp byte [rax], T_closure
 28102 00014B84 0F85C2290000            	jne L_error_non_closure
 28103 00014B8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28104 00014B8D FF7508                  	push qword [rbp + 8 * 1]
 28105                                   ; old ret addr
 28106 00014B90 FF7500                  	push qword [rbp]
 28107                                   ; restore the old rbp
 28108 00014B93 BB01000000              	mov rbx, 1
 28109 00014B98 4883C303                	add rbx, 3
 28110 00014B9C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28111 00014BA0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28112 00014BA5 4C8D4DF8                	lea r9, [rbp - 8]
 28113 00014BA9 B905000000              	mov rcx, 5
 28114                                  .L_tc_recycle_frame_loop_00ea:
 28115 00014BAE 4883F900                	cmp rcx, 0
 28116 00014BB2 7413                    	je .L_tc_recycle_frame_done_00ea
 28117 00014BB4 4D8B11                  	mov r10, qword [r9]
 28118 00014BB7 4D8910                  	mov qword [r8], r10
 28119 00014BBA 4983E808                	sub r8, 8
 28120 00014BBE 4983E908                	sub r9, 8
 28121 00014BC2 48FFC9                  	dec rcx
 28122 00014BC5 EBE7                    	jmp .L_tc_recycle_frame_loop_00ea
 28123                                  .L_tc_recycle_frame_done_00ea:
 28124 00014BC7 498D6008                	lea rsp, [r8 + 8]
 28125 00014BCB 5D                      	pop rbp ; restore the old rbp
 28126 00014BCC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28127 00014BCF EB0B                    	jmp .L_if_end_0084
 28128                                  .L_if_else_0084:
 28129 00014BD1 488B4510                	mov rax, ENV
 28130 00014BD5 488B4008                	mov rax, qword [rax + 8 * 1]
 28131 00014BD9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28132                                  .L_if_end_0084:
 28133 00014BDC C9                      	leave
 28134 00014BDD C21800                  	ret AND_KILL_FRAME(1)
 28135                                  .L_lambda_simple_end_00b3:	; new closure is in rax
 28136 00014BE0 50                      	push rax
 28137 00014BE1 488B4520                	mov rax, PARAM(0)	; param run
 28138 00014BE5 8F00                    	pop qword [rax]
 28139 00014BE7 48B8-                   	mov rax, sob_void
 28139 00014BE9 [0000000000000000] 
 28140                                  
 28141                                  	; preparing a tail-call
 28142 00014BF1 48B8-                   	mov rax, L_constants + 2135
 28142 00014BF3 [5708000000000000] 
 28143 00014BFB 50                      	push rax
 28144 00014BFC 6A01                    	push 1	; arg count
 28145 00014BFE 488B4520                	mov rax, PARAM(0)	; param run
 28146 00014C02 488B00                  	mov rax, qword [rax]
 28147 00014C05 803804                  	cmp byte [rax], T_closure
 28148 00014C08 0F853E290000            	jne L_error_non_closure
 28149 00014C0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 28150 00014C11 FF7508                  	push qword [rbp + 8 * 1]
 28151                                   ; old ret addr
 28152 00014C14 FF7500                  	push qword [rbp]
 28153                                   ; restore the old rbp
 28154 00014C17 BB01000000              	mov rbx, 1
 28155 00014C1C 4883C303                	add rbx, 3
 28156 00014C20 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28157 00014C24 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28158 00014C29 4C8D4DF8                	lea r9, [rbp - 8]
 28159 00014C2D B905000000              	mov rcx, 5
 28160                                  .L_tc_recycle_frame_loop_00eb:
 28161 00014C32 4883F900                	cmp rcx, 0
 28162 00014C36 7413                    	je .L_tc_recycle_frame_done_00eb
 28163 00014C38 4D8B11                  	mov r10, qword [r9]
 28164 00014C3B 4D8910                  	mov qword [r8], r10
 28165 00014C3E 4983E808                	sub r8, 8
 28166 00014C42 4983E908                	sub r9, 8
 28167 00014C46 48FFC9                  	dec rcx
 28168 00014C49 EBE7                    	jmp .L_tc_recycle_frame_loop_00eb
 28169                                  .L_tc_recycle_frame_done_00eb:
 28170 00014C4B 498D6008                	lea rsp, [r8 + 8]
 28171 00014C4F 5D                      	pop rbp ; restore the old rbp
 28172 00014C50 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28173 00014C53 C9                      	leave
 28174 00014C54 C21800                  	ret AND_KILL_FRAME(1)
 28175                                  .L_lambda_simple_end_00b2:	; new closure is in rax
 28176 00014C57 803804                  	cmp byte [rax], T_closure
 28177 00014C5A 0F85EC280000            	jne L_error_non_closure
 28178 00014C60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28179 00014C63 FF7508                  	push qword [rbp + 8 * 1]
 28180                                   ; old ret addr
 28181 00014C66 FF7500                  	push qword [rbp]
 28182                                   ; restore the old rbp
 28183 00014C69 BB01000000              	mov rbx, 1
 28184 00014C6E 4883C303                	add rbx, 3
 28185 00014C72 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28186 00014C76 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28187 00014C7B 4C8D4DF8                	lea r9, [rbp - 8]
 28188 00014C7F B905000000              	mov rcx, 5
 28189                                  .L_tc_recycle_frame_loop_00e9:
 28190 00014C84 4883F900                	cmp rcx, 0
 28191 00014C88 7413                    	je .L_tc_recycle_frame_done_00e9
 28192 00014C8A 4D8B11                  	mov r10, qword [r9]
 28193 00014C8D 4D8910                  	mov qword [r8], r10
 28194 00014C90 4983E808                	sub r8, 8
 28195 00014C94 4983E908                	sub r9, 8
 28196 00014C98 48FFC9                  	dec rcx
 28197 00014C9B EBE7                    	jmp .L_tc_recycle_frame_loop_00e9
 28198                                  .L_tc_recycle_frame_done_00e9:
 28199 00014C9D 498D6008                	lea rsp, [r8 + 8]
 28200 00014CA1 5D                      	pop rbp ; restore the old rbp
 28201 00014CA2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28202 00014CA5 C9                      	leave
 28203 00014CA6 C21800                  	ret AND_KILL_FRAME(1)
 28204                                  .L_lambda_simple_end_00b1:	; new closure is in rax
 28205 00014CA9 803804                  	cmp byte [rax], T_closure
 28206 00014CAC 0F859A280000            	jne L_error_non_closure
 28207 00014CB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28208 00014CB5 FF7508                  	push qword [rbp + 8 * 1]
 28209                                   ; old ret addr
 28210 00014CB8 FF7500                  	push qword [rbp]
 28211                                   ; restore the old rbp
 28212 00014CBB BB01000000              	mov rbx, 1
 28213 00014CC0 4883C303                	add rbx, 3
 28214 00014CC4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28215 00014CC8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28216 00014CCD 4C8D4DF8                	lea r9, [rbp - 8]
 28217 00014CD1 B905000000              	mov rcx, 5
 28218                                  .L_tc_recycle_frame_loop_00e8:
 28219 00014CD6 4883F900                	cmp rcx, 0
 28220 00014CDA 7413                    	je .L_tc_recycle_frame_done_00e8
 28221 00014CDC 4D8B11                  	mov r10, qword [r9]
 28222 00014CDF 4D8910                  	mov qword [r8], r10
 28223 00014CE2 4983E808                	sub r8, 8
 28224 00014CE6 4983E908                	sub r9, 8
 28225 00014CEA 48FFC9                  	dec rcx
 28226 00014CED EBE7                    	jmp .L_tc_recycle_frame_loop_00e8
 28227                                  .L_tc_recycle_frame_done_00e8:
 28228 00014CEF 498D6008                	lea rsp, [r8 + 8]
 28229 00014CF3 5D                      	pop rbp ; restore the old rbp
 28230 00014CF4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28231 00014CF7 C9                      	leave
 28232 00014CF8 C22000                  	ret AND_KILL_FRAME(2)
 28233                                  .L_lambda_simple_end_00b0:	; new closure is in rax
 28234 00014CFB 48890425[69140000]      	mov qword [free_var_100], rax
 28235 00014D03 48B8-                   	mov rax, sob_void
 28235 00014D05 [0000000000000000] 
 28236                                  
 28237 00014D0D 4889C7                  	mov rdi, rax
 28238 00014D10 E8352B0000              	call print_sexpr_if_not_void
 28239 00014D15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28240 00014D1A E8D6280000              	call malloc
 28241 00014D1F 50                      	push rax
 28242 00014D20 BF00000000              	mov rdi, 8 * 0	; new rib
 28243 00014D25 E8CB280000              	call malloc
 28244 00014D2A 50                      	push rax
 28245 00014D2B BF08000000              	mov rdi, 8 * 1	; extended env
 28246 00014D30 E8C0280000              	call malloc
 28247 00014D35 488B7D10                	mov rdi, ENV
 28248 00014D39 BE00000000              	mov rsi, 0
 28249 00014D3E BA01000000              	mov rdx, 1
 28250                                  .L_lambda_simple_env_loop_00b4:	; ext_env[i + 1] <-- env[i]
 28251 00014D43 4883FE00                	cmp rsi, 0
 28252 00014D47 7410                    	je .L_lambda_simple_env_end_00b4
 28253 00014D49 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28254 00014D4D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28255 00014D51 48FFC6                  	inc rsi
 28256 00014D54 48FFC2                  	inc rdx
 28257 00014D57 EBEA                    	jmp .L_lambda_simple_env_loop_00b4
 28258                                  .L_lambda_simple_env_end_00b4:
 28259 00014D59 5B                      	pop rbx
 28260 00014D5A BE00000000              	mov rsi, 0
 28261                                  .L_lambda_simple_params_loop_00b4:	; copy params
 28262 00014D5F 4883FE00                	cmp rsi, 0
 28263 00014D63 740E                    	je .L_lambda_simple_params_end_00b4
 28264 00014D65 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28265 00014D6A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28266 00014D6E 48FFC6                  	inc rsi
 28267 00014D71 EBEC                    	jmp .L_lambda_simple_params_loop_00b4
 28268                                  .L_lambda_simple_params_end_00b4:
 28269 00014D73 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28270 00014D76 4889C3                  	mov rbx, rax
 28271 00014D79 58                      	pop rax
 28272 00014D7A C60004                  	mov byte [rax], T_closure
 28273 00014D7D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28274 00014D81 48C74009[8E4D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b4
 28275 00014D89 E96E040000              	jmp .L_lambda_simple_end_00b4
 28276                                  .L_lambda_simple_code_00b4:	; lambda-simple body
 28277 00014D8E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28278 00014D94 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 28279 00014D96 FF742410                	push qword [rsp + 8 * 2]
 28280 00014D9A 6A02                    	push 2
 28281 00014D9C E90D280000              	jmp L_error_incorrect_arity_simple
 28282                                  .L_lambda_simple_arity_check_ok_00b4:
 28283 00014DA1 C8000000                	enter 0, 0
 28284                                  	; preparing a tail-call
 28285                                  	; preparing a non-tail-call
 28286 00014DA5 488B4520                	mov rax, PARAM(0)	; param n
 28287 00014DA9 50                      	push rax
 28288 00014DAA 6A01                    	push 1	; arg count
 28289 00014DAC 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 28290 00014DB4 803805                  	cmp byte [rax], T_undefined
 28291 00014DB7 0F840B270000            	je L_error_fvar_undefined
 28292 00014DBD 803804                  	cmp byte [rax], T_closure
 28293 00014DC0 0F8586270000            	jne L_error_non_closure
 28294 00014DC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28295 00014DC9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28296 00014DCC 50                      	push rax
 28297 00014DCD 6A01                    	push 1	; arg count
 28298 00014DCF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28299 00014DD4 E81C280000              	call malloc
 28300 00014DD9 50                      	push rax
 28301 00014DDA BF10000000              	mov rdi, 8 * 2	; new rib
 28302 00014DDF E811280000              	call malloc
 28303 00014DE4 50                      	push rax
 28304 00014DE5 BF10000000              	mov rdi, 8 * 2	; extended env
 28305 00014DEA E806280000              	call malloc
 28306 00014DEF 488B7D10                	mov rdi, ENV
 28307 00014DF3 BE00000000              	mov rsi, 0
 28308 00014DF8 BA01000000              	mov rdx, 1
 28309                                  .L_lambda_simple_env_loop_00b5:	; ext_env[i + 1] <-- env[i]
 28310 00014DFD 4883FE01                	cmp rsi, 1
 28311 00014E01 7410                    	je .L_lambda_simple_env_end_00b5
 28312 00014E03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28313 00014E07 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28314 00014E0B 48FFC6                  	inc rsi
 28315 00014E0E 48FFC2                  	inc rdx
 28316 00014E11 EBEA                    	jmp .L_lambda_simple_env_loop_00b5
 28317                                  .L_lambda_simple_env_end_00b5:
 28318 00014E13 5B                      	pop rbx
 28319 00014E14 BE00000000              	mov rsi, 0
 28320                                  .L_lambda_simple_params_loop_00b5:	; copy params
 28321 00014E19 4883FE02                	cmp rsi, 2
 28322 00014E1D 740E                    	je .L_lambda_simple_params_end_00b5
 28323 00014E1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28324 00014E24 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28325 00014E28 48FFC6                  	inc rsi
 28326 00014E2B EBEC                    	jmp .L_lambda_simple_params_loop_00b5
 28327                                  .L_lambda_simple_params_end_00b5:
 28328 00014E2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28329 00014E30 4889C3                  	mov rbx, rax
 28330 00014E33 58                      	pop rax
 28331 00014E34 C60004                  	mov byte [rax], T_closure
 28332 00014E37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28333 00014E3B 48C74009[484E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b5
 28334 00014E43 E962030000              	jmp .L_lambda_simple_end_00b5
 28335                                  .L_lambda_simple_code_00b5:	; lambda-simple body
 28336 00014E48 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28337 00014E4E 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 28338 00014E50 FF742410                	push qword [rsp + 8 * 2]
 28339 00014E54 6A01                    	push 1
 28340 00014E56 E953270000              	jmp L_error_incorrect_arity_simple
 28341                                  .L_lambda_simple_arity_check_ok_00b5:
 28342 00014E5B C8000000                	enter 0, 0
 28343                                  	; preparing a tail-call
 28344 00014E5F 48B8-                   	mov rax, L_constants + 1993
 28344 00014E61 [C907000000000000] 
 28345 00014E69 50                      	push rax
 28346 00014E6A 6A01                    	push 1	; arg count
 28347 00014E6C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28348 00014E71 E87F270000              	call malloc
 28349 00014E76 50                      	push rax
 28350 00014E77 BF08000000              	mov rdi, 8 * 1	; new rib
 28351 00014E7C E874270000              	call malloc
 28352 00014E81 50                      	push rax
 28353 00014E82 BF18000000              	mov rdi, 8 * 3	; extended env
 28354 00014E87 E869270000              	call malloc
 28355 00014E8C 488B7D10                	mov rdi, ENV
 28356 00014E90 BE00000000              	mov rsi, 0
 28357 00014E95 BA01000000              	mov rdx, 1
 28358                                  .L_lambda_simple_env_loop_00b6:	; ext_env[i + 1] <-- env[i]
 28359 00014E9A 4883FE02                	cmp rsi, 2
 28360 00014E9E 7410                    	je .L_lambda_simple_env_end_00b6
 28361 00014EA0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28362 00014EA4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28363 00014EA8 48FFC6                  	inc rsi
 28364 00014EAB 48FFC2                  	inc rdx
 28365 00014EAE EBEA                    	jmp .L_lambda_simple_env_loop_00b6
 28366                                  .L_lambda_simple_env_end_00b6:
 28367 00014EB0 5B                      	pop rbx
 28368 00014EB1 BE00000000              	mov rsi, 0
 28369                                  .L_lambda_simple_params_loop_00b6:	; copy params
 28370 00014EB6 4883FE01                	cmp rsi, 1
 28371 00014EBA 740E                    	je .L_lambda_simple_params_end_00b6
 28372 00014EBC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28373 00014EC1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28374 00014EC5 48FFC6                  	inc rsi
 28375 00014EC8 EBEC                    	jmp .L_lambda_simple_params_loop_00b6
 28376                                  .L_lambda_simple_params_end_00b6:
 28377 00014ECA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28378 00014ECD 4889C3                  	mov rbx, rax
 28379 00014ED0 58                      	pop rax
 28380 00014ED1 C60004                  	mov byte [rax], T_closure
 28381 00014ED4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28382 00014ED8 48C74009[E54E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b6
 28383 00014EE0 E973020000              	jmp .L_lambda_simple_end_00b6
 28384                                  .L_lambda_simple_code_00b6:	; lambda-simple body
 28385 00014EE5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28386 00014EEB 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 28387 00014EED FF742410                	push qword [rsp + 8 * 2]
 28388 00014EF1 6A01                    	push 1
 28389 00014EF3 E9B6260000              	jmp L_error_incorrect_arity_simple
 28390                                  .L_lambda_simple_arity_check_ok_00b6:
 28391 00014EF8 C8000000                	enter 0, 0
 28392 00014EFC BF08000000              	mov rdi, 8*1
 28393 00014F01 E8EF260000              	call malloc
 28394 00014F06 488B5D20                	mov rbx, PARAM(0)
 28395 00014F0A 488918                  	mov qword [rax], rbx
 28396 00014F0D 48894520                	mov PARAM(0), rax
 28397 00014F11 48B8-                   	mov rax, sob_void
 28397 00014F13 [0000000000000000] 
 28398                                  
 28399 00014F1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28400 00014F20 E8D0260000              	call malloc
 28401 00014F25 50                      	push rax
 28402 00014F26 BF08000000              	mov rdi, 8 * 1	; new rib
 28403 00014F2B E8C5260000              	call malloc
 28404 00014F30 50                      	push rax
 28405 00014F31 BF20000000              	mov rdi, 8 * 4	; extended env
 28406 00014F36 E8BA260000              	call malloc
 28407 00014F3B 488B7D10                	mov rdi, ENV
 28408 00014F3F BE00000000              	mov rsi, 0
 28409 00014F44 BA01000000              	mov rdx, 1
 28410                                  .L_lambda_simple_env_loop_00b7:	; ext_env[i + 1] <-- env[i]
 28411 00014F49 4883FE03                	cmp rsi, 3
 28412 00014F4D 7410                    	je .L_lambda_simple_env_end_00b7
 28413 00014F4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28414 00014F53 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28415 00014F57 48FFC6                  	inc rsi
 28416 00014F5A 48FFC2                  	inc rdx
 28417 00014F5D EBEA                    	jmp .L_lambda_simple_env_loop_00b7
 28418                                  .L_lambda_simple_env_end_00b7:
 28419 00014F5F 5B                      	pop rbx
 28420 00014F60 BE00000000              	mov rsi, 0
 28421                                  .L_lambda_simple_params_loop_00b7:	; copy params
 28422 00014F65 4883FE01                	cmp rsi, 1
 28423 00014F69 740E                    	je .L_lambda_simple_params_end_00b7
 28424 00014F6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28425 00014F70 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28426 00014F74 48FFC6                  	inc rsi
 28427 00014F77 EBEC                    	jmp .L_lambda_simple_params_loop_00b7
 28428                                  .L_lambda_simple_params_end_00b7:
 28429 00014F79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28430 00014F7C 4889C3                  	mov rbx, rax
 28431 00014F7F 58                      	pop rax
 28432 00014F80 C60004                  	mov byte [rax], T_closure
 28433 00014F83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28434 00014F87 48C74009[944F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b7
 28435 00014F8F E94D010000              	jmp .L_lambda_simple_end_00b7
 28436                                  .L_lambda_simple_code_00b7:	; lambda-simple body
 28437 00014F94 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28438 00014F9A 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 28439 00014F9C FF742410                	push qword [rsp + 8 * 2]
 28440 00014FA0 6A01                    	push 1
 28441 00014FA2 E907260000              	jmp L_error_incorrect_arity_simple
 28442                                  .L_lambda_simple_arity_check_ok_00b7:
 28443 00014FA7 C8000000                	enter 0, 0
 28444                                  	; preparing a non-tail-call
 28445 00014FAB 488B4510                	mov rax, ENV
 28446 00014FAF 488B4010                	mov rax, qword [rax + 8 * 2]
 28447 00014FB3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28448 00014FB6 50                      	push rax
 28449 00014FB7 488B4520                	mov rax, PARAM(0)	; param i
 28450 00014FBB 50                      	push rax
 28451 00014FBC 6A02                    	push 2	; arg count
 28452 00014FBE 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28453 00014FC6 803805                  	cmp byte [rax], T_undefined
 28454 00014FC9 0F84F9240000            	je L_error_fvar_undefined
 28455 00014FCF 803804                  	cmp byte [rax], T_closure
 28456 00014FD2 0F8574250000            	jne L_error_non_closure
 28457 00014FD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28458 00014FDB FF5009                  	call SOB_CLOSURE_CODE(rax)
 28459 00014FDE 483D[02000000]          	cmp rax, sob_boolean_false
 28460 00014FE4 0F84E8000000            	je .L_if_else_0085
 28461                                  	; preparing a non-tail-call
 28462                                  	; preparing a non-tail-call
 28463 00014FEA 488B4520                	mov rax, PARAM(0)	; param i
 28464 00014FEE 50                      	push rax
 28465 00014FEF 6A01                    	push 1	; arg count
 28466 00014FF1 488B4510                	mov rax, ENV
 28467 00014FF5 488B4010                	mov rax, qword [rax + 8 * 2]
 28468 00014FF9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28469 00014FFD 803804                  	cmp byte [rax], T_closure
 28470 00015000 0F8546250000            	jne L_error_non_closure
 28471 00015006 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28472 00015009 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28473 0001500C 50                      	push rax
 28474 0001500D 488B4520                	mov rax, PARAM(0)	; param i
 28475 00015011 50                      	push rax
 28476 00015012 488B4510                	mov rax, ENV
 28477 00015016 488B4008                	mov rax, qword [rax + 8 * 1]
 28478 0001501A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28479 0001501D 50                      	push rax
 28480 0001501E 6A03                    	push 3	; arg count
 28481 00015020 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 28482 00015028 803805                  	cmp byte [rax], T_undefined
 28483 0001502B 0F8497240000            	je L_error_fvar_undefined
 28484 00015031 803804                  	cmp byte [rax], T_closure
 28485 00015034 0F8512250000            	jne L_error_non_closure
 28486 0001503A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28487 0001503D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28488                                  
 28489                                  	; preparing a tail-call
 28490                                  	; preparing a non-tail-call
 28491 00015040 48B8-                   	mov rax, L_constants + 2270
 28491 00015042 [DE08000000000000] 
 28492 0001504A 50                      	push rax
 28493 0001504B 488B4520                	mov rax, PARAM(0)	; param i
 28494 0001504F 50                      	push rax
 28495 00015050 6A02                    	push 2	; arg count
 28496 00015052 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28497 0001505A 803805                  	cmp byte [rax], T_undefined
 28498 0001505D 0F8465240000            	je L_error_fvar_undefined
 28499 00015063 803804                  	cmp byte [rax], T_closure
 28500 00015066 0F85E0240000            	jne L_error_non_closure
 28501 0001506C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28502 0001506F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28503 00015072 50                      	push rax
 28504 00015073 6A01                    	push 1	; arg count
 28505 00015075 488B4510                	mov rax, ENV
 28506 00015079 488B00                  	mov rax, qword [rax + 8 * 0]
 28507 0001507C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28508 0001507F 488B00                  	mov rax, qword [rax]
 28509 00015082 803804                  	cmp byte [rax], T_closure
 28510 00015085 0F85C1240000            	jne L_error_non_closure
 28511 0001508B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28512 0001508E FF7508                  	push qword [rbp + 8 * 1]
 28513                                   ; old ret addr
 28514 00015091 FF7500                  	push qword [rbp]
 28515                                   ; restore the old rbp
 28516 00015094 BB01000000              	mov rbx, 1
 28517 00015099 4883C303                	add rbx, 3
 28518 0001509D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28519 000150A1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28520 000150A6 4C8D4DF8                	lea r9, [rbp - 8]
 28521 000150AA B905000000              	mov rcx, 5
 28522                                  .L_tc_recycle_frame_loop_00ee:
 28523 000150AF 4883F900                	cmp rcx, 0
 28524 000150B3 7413                    	je .L_tc_recycle_frame_done_00ee
 28525 000150B5 4D8B11                  	mov r10, qword [r9]
 28526 000150B8 4D8910                  	mov qword [r8], r10
 28527 000150BB 4983E808                	sub r8, 8
 28528 000150BF 4983E908                	sub r9, 8
 28529 000150C3 48FFC9                  	dec rcx
 28530 000150C6 EBE7                    	jmp .L_tc_recycle_frame_loop_00ee
 28531                                  .L_tc_recycle_frame_done_00ee:
 28532 000150C8 498D6008                	lea rsp, [r8 + 8]
 28533 000150CC 5D                      	pop rbp ; restore the old rbp
 28534 000150CD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28535 000150D0 EB0B                    	jmp .L_if_end_0085
 28536                                  .L_if_else_0085:
 28537 000150D2 488B4510                	mov rax, ENV
 28538 000150D6 488B4008                	mov rax, qword [rax + 8 * 1]
 28539 000150DA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28540                                  .L_if_end_0085:
 28541 000150DD C9                      	leave
 28542 000150DE C21800                  	ret AND_KILL_FRAME(1)
 28543                                  .L_lambda_simple_end_00b7:	; new closure is in rax
 28544 000150E1 50                      	push rax
 28545 000150E2 488B4520                	mov rax, PARAM(0)	; param run
 28546 000150E6 8F00                    	pop qword [rax]
 28547 000150E8 48B8-                   	mov rax, sob_void
 28547 000150EA [0000000000000000] 
 28548                                  
 28549                                  	; preparing a tail-call
 28550 000150F2 48B8-                   	mov rax, L_constants + 2135
 28550 000150F4 [5708000000000000] 
 28551 000150FC 50                      	push rax
 28552 000150FD 6A01                    	push 1	; arg count
 28553 000150FF 488B4520                	mov rax, PARAM(0)	; param run
 28554 00015103 488B00                  	mov rax, qword [rax]
 28555 00015106 803804                  	cmp byte [rax], T_closure
 28556 00015109 0F853D240000            	jne L_error_non_closure
 28557 0001510F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28558 00015112 FF7508                  	push qword [rbp + 8 * 1]
 28559                                   ; old ret addr
 28560 00015115 FF7500                  	push qword [rbp]
 28561                                   ; restore the old rbp
 28562 00015118 BB01000000              	mov rbx, 1
 28563 0001511D 4883C303                	add rbx, 3
 28564 00015121 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28565 00015125 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28566 0001512A 4C8D4DF8                	lea r9, [rbp - 8]
 28567 0001512E B905000000              	mov rcx, 5
 28568                                  .L_tc_recycle_frame_loop_00ef:
 28569 00015133 4883F900                	cmp rcx, 0
 28570 00015137 7413                    	je .L_tc_recycle_frame_done_00ef
 28571 00015139 4D8B11                  	mov r10, qword [r9]
 28572 0001513C 4D8910                  	mov qword [r8], r10
 28573 0001513F 4983E808                	sub r8, 8
 28574 00015143 4983E908                	sub r9, 8
 28575 00015147 48FFC9                  	dec rcx
 28576 0001514A EBE7                    	jmp .L_tc_recycle_frame_loop_00ef
 28577                                  .L_tc_recycle_frame_done_00ef:
 28578 0001514C 498D6008                	lea rsp, [r8 + 8]
 28579 00015150 5D                      	pop rbp ; restore the old rbp
 28580 00015151 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28581 00015154 C9                      	leave
 28582 00015155 C21800                  	ret AND_KILL_FRAME(1)
 28583                                  .L_lambda_simple_end_00b6:	; new closure is in rax
 28584 00015158 803804                  	cmp byte [rax], T_closure
 28585 0001515B 0F85EB230000            	jne L_error_non_closure
 28586 00015161 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28587 00015164 FF7508                  	push qword [rbp + 8 * 1]
 28588                                   ; old ret addr
 28589 00015167 FF7500                  	push qword [rbp]
 28590                                   ; restore the old rbp
 28591 0001516A BB01000000              	mov rbx, 1
 28592 0001516F 4883C303                	add rbx, 3
 28593 00015173 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28594 00015177 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28595 0001517C 4C8D4DF8                	lea r9, [rbp - 8]
 28596 00015180 B905000000              	mov rcx, 5
 28597                                  .L_tc_recycle_frame_loop_00ed:
 28598 00015185 4883F900                	cmp rcx, 0
 28599 00015189 7413                    	je .L_tc_recycle_frame_done_00ed
 28600 0001518B 4D8B11                  	mov r10, qword [r9]
 28601 0001518E 4D8910                  	mov qword [r8], r10
 28602 00015191 4983E808                	sub r8, 8
 28603 00015195 4983E908                	sub r9, 8
 28604 00015199 48FFC9                  	dec rcx
 28605 0001519C EBE7                    	jmp .L_tc_recycle_frame_loop_00ed
 28606                                  .L_tc_recycle_frame_done_00ed:
 28607 0001519E 498D6008                	lea rsp, [r8 + 8]
 28608 000151A2 5D                      	pop rbp ; restore the old rbp
 28609 000151A3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28610 000151A6 C9                      	leave
 28611 000151A7 C21800                  	ret AND_KILL_FRAME(1)
 28612                                  .L_lambda_simple_end_00b5:	; new closure is in rax
 28613 000151AA 803804                  	cmp byte [rax], T_closure
 28614 000151AD 0F8599230000            	jne L_error_non_closure
 28615 000151B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28616 000151B6 FF7508                  	push qword [rbp + 8 * 1]
 28617                                   ; old ret addr
 28618 000151B9 FF7500                  	push qword [rbp]
 28619                                   ; restore the old rbp
 28620 000151BC BB01000000              	mov rbx, 1
 28621 000151C1 4883C303                	add rbx, 3
 28622 000151C5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28623 000151C9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28624 000151CE 4C8D4DF8                	lea r9, [rbp - 8]
 28625 000151D2 B905000000              	mov rcx, 5
 28626                                  .L_tc_recycle_frame_loop_00ec:
 28627 000151D7 4883F900                	cmp rcx, 0
 28628 000151DB 7413                    	je .L_tc_recycle_frame_done_00ec
 28629 000151DD 4D8B11                  	mov r10, qword [r9]
 28630 000151E0 4D8910                  	mov qword [r8], r10
 28631 000151E3 4983E808                	sub r8, 8
 28632 000151E7 4983E908                	sub r9, 8
 28633 000151EB 48FFC9                  	dec rcx
 28634 000151EE EBE7                    	jmp .L_tc_recycle_frame_loop_00ec
 28635                                  .L_tc_recycle_frame_done_00ec:
 28636 000151F0 498D6008                	lea rsp, [r8 + 8]
 28637 000151F4 5D                      	pop rbp ; restore the old rbp
 28638 000151F5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28639 000151F8 C9                      	leave
 28640 000151F9 C22000                  	ret AND_KILL_FRAME(2)
 28641                                  .L_lambda_simple_end_00b4:	; new closure is in rax
 28642 000151FC 48890425[8B140000]      	mov qword [free_var_102], rax
 28643 00015204 48B8-                   	mov rax, sob_void
 28643 00015206 [0000000000000000] 
 28644                                  
 28645 0001520E 4889C7                  	mov rdi, rax
 28646 00015211 E834260000              	call print_sexpr_if_not_void
 28647 00015216 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28648 0001521B E8D5230000              	call malloc
 28649 00015220 50                      	push rax
 28650 00015221 BF00000000              	mov rdi, 8 * 0	; new rib
 28651 00015226 E8CA230000              	call malloc
 28652 0001522B 50                      	push rax
 28653 0001522C BF08000000              	mov rdi, 8 * 1	; extended env
 28654 00015231 E8BF230000              	call malloc
 28655 00015236 488B7D10                	mov rdi, ENV
 28656 0001523A BE00000000              	mov rsi, 0
 28657 0001523F BA01000000              	mov rdx, 1
 28658                                  .L_lambda_simple_env_loop_00b8:	; ext_env[i + 1] <-- env[i]
 28659 00015244 4883FE00                	cmp rsi, 0
 28660 00015248 7410                    	je .L_lambda_simple_env_end_00b8
 28661 0001524A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28662 0001524E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28663 00015252 48FFC6                  	inc rsi
 28664 00015255 48FFC2                  	inc rdx
 28665 00015258 EBEA                    	jmp .L_lambda_simple_env_loop_00b8
 28666                                  .L_lambda_simple_env_end_00b8:
 28667 0001525A 5B                      	pop rbx
 28668 0001525B BE00000000              	mov rsi, 0
 28669                                  .L_lambda_simple_params_loop_00b8:	; copy params
 28670 00015260 4883FE00                	cmp rsi, 0
 28671 00015264 740E                    	je .L_lambda_simple_params_end_00b8
 28672 00015266 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28673 0001526B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28674 0001526F 48FFC6                  	inc rsi
 28675 00015272 EBEC                    	jmp .L_lambda_simple_params_loop_00b8
 28676                                  .L_lambda_simple_params_end_00b8:
 28677 00015274 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28678 00015277 4889C3                  	mov rbx, rax
 28679 0001527A 58                      	pop rax
 28680 0001527B C60004                  	mov byte [rax], T_closure
 28681 0001527E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28682 00015282 48C74009[8F520100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b8
 28683 0001528A E96B020000              	jmp .L_lambda_simple_end_00b8
 28684                                  .L_lambda_simple_code_00b8:	; lambda-simple body
 28685 0001528F 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28686 00015295 740B                    	je .L_lambda_simple_arity_check_ok_00b8
 28687 00015297 FF742410                	push qword [rsp + 8 * 2]
 28688 0001529B 6A03                    	push 3
 28689 0001529D E90C230000              	jmp L_error_incorrect_arity_simple
 28690                                  .L_lambda_simple_arity_check_ok_00b8:
 28691 000152A2 C8000000                	enter 0, 0
 28692                                  	; preparing a non-tail-call
 28693 000152A6 488B4530                	mov rax, PARAM(2)	; param n
 28694 000152AA 50                      	push rax
 28695 000152AB 6A01                    	push 1	; arg count
 28696 000152AD 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 28697 000152B5 803805                  	cmp byte [rax], T_undefined
 28698 000152B8 0F840A220000            	je L_error_fvar_undefined
 28699 000152BE 803804                  	cmp byte [rax], T_closure
 28700 000152C1 0F8585220000            	jne L_error_non_closure
 28701 000152C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28702 000152CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 28703 000152CD 483D[02000000]          	cmp rax, sob_boolean_false
 28704 000152D3 740F                    	je .L_if_else_0088
 28705 000152D5 48B8-                   	mov rax, L_constants + 3485
 28705 000152D7 [9D0D000000000000] 
 28706 000152DF E912020000              	jmp .L_if_end_0088
 28707                                  .L_if_else_0088:
 28708                                  	; preparing a non-tail-call
 28709 000152E4 488B4528                	mov rax, PARAM(1)	; param b
 28710 000152E8 50                      	push rax
 28711 000152E9 488B4520                	mov rax, PARAM(0)	; param a
 28712 000152ED 50                      	push rax
 28713 000152EE 6A02                    	push 2	; arg count
 28714 000152F0 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28715 000152F8 803805                  	cmp byte [rax], T_undefined
 28716 000152FB 0F84C7210000            	je L_error_fvar_undefined
 28717 00015301 803804                  	cmp byte [rax], T_closure
 28718 00015304 0F8542220000            	jne L_error_non_closure
 28719 0001530A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28720 0001530D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28721 00015310 483D[02000000]          	cmp rax, sob_boolean_false
 28722 00015316 0F84CB000000            	je .L_if_else_0087
 28723                                  	; preparing a tail-call
 28724                                  	; preparing a non-tail-call
 28725 0001531C 488B4530                	mov rax, PARAM(2)	; param n
 28726 00015320 50                      	push rax
 28727                                  	; preparing a non-tail-call
 28728 00015321 488B4520                	mov rax, PARAM(0)	; param a
 28729 00015325 50                      	push rax
 28730 00015326 488B4528                	mov rax, PARAM(1)	; param b
 28731 0001532A 50                      	push rax
 28732 0001532B 6A02                    	push 2	; arg count
 28733 0001532D 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 28734 00015335 803805                  	cmp byte [rax], T_undefined
 28735 00015338 0F848A210000            	je L_error_fvar_undefined
 28736 0001533E 803804                  	cmp byte [rax], T_closure
 28737 00015341 0F8505220000            	jne L_error_non_closure
 28738 00015347 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28739 0001534A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28740 0001534D 50                      	push rax
 28741 0001534E 488B4520                	mov rax, PARAM(0)	; param a
 28742 00015352 50                      	push rax
 28743 00015353 6A03                    	push 3	; arg count
 28744 00015355 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28745 0001535D 803805                  	cmp byte [rax], T_undefined
 28746 00015360 0F8462210000            	je L_error_fvar_undefined
 28747 00015366 803804                  	cmp byte [rax], T_closure
 28748 00015369 0F85DD210000            	jne L_error_non_closure
 28749 0001536F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28750 00015372 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28751 00015375 50                      	push rax
 28752 00015376 48B8-                   	mov rax, L_constants + 3485
 28752 00015378 [9D0D000000000000] 
 28753 00015380 50                      	push rax
 28754 00015381 6A02                    	push 2	; arg count
 28755 00015383 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28756 0001538B 803805                  	cmp byte [rax], T_undefined
 28757 0001538E 0F8434210000            	je L_error_fvar_undefined
 28758 00015394 803804                  	cmp byte [rax], T_closure
 28759 00015397 0F85AF210000            	jne L_error_non_closure
 28760 0001539D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28761 000153A0 FF7508                  	push qword [rbp + 8 * 1]
 28762                                   ; old ret addr
 28763 000153A3 FF7500                  	push qword [rbp]
 28764                                   ; restore the old rbp
 28765 000153A6 BB02000000              	mov rbx, 2
 28766 000153AB 4883C303                	add rbx, 3
 28767 000153AF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28768 000153B3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28769 000153B8 4C8D4DF8                	lea r9, [rbp - 8]
 28770 000153BC B906000000              	mov rcx, 6
 28771                                  .L_tc_recycle_frame_loop_00f0:
 28772 000153C1 4883F900                	cmp rcx, 0
 28773 000153C5 7413                    	je .L_tc_recycle_frame_done_00f0
 28774 000153C7 4D8B11                  	mov r10, qword [r9]
 28775 000153CA 4D8910                  	mov qword [r8], r10
 28776 000153CD 4983E808                	sub r8, 8
 28777 000153D1 4983E908                	sub r9, 8
 28778 000153D5 48FFC9                  	dec rcx
 28779 000153D8 EBE7                    	jmp .L_tc_recycle_frame_loop_00f0
 28780                                  .L_tc_recycle_frame_done_00f0:
 28781 000153DA 498D6008                	lea rsp, [r8 + 8]
 28782 000153DE 5D                      	pop rbp ; restore the old rbp
 28783 000153DF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28784 000153E2 E90F010000              	jmp .L_if_end_0087
 28785                                  .L_if_else_0087:
 28786                                  	; preparing a non-tail-call
 28787 000153E7 488B4528                	mov rax, PARAM(1)	; param b
 28788 000153EB 50                      	push rax
 28789 000153EC 488B4520                	mov rax, PARAM(0)	; param a
 28790 000153F0 50                      	push rax
 28791 000153F1 6A02                    	push 2	; arg count
 28792 000153F3 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 28793 000153FB 803805                  	cmp byte [rax], T_undefined
 28794 000153FE 0F84C4200000            	je L_error_fvar_undefined
 28795 00015404 803804                  	cmp byte [rax], T_closure
 28796 00015407 0F853F210000            	jne L_error_non_closure
 28797 0001540D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28798 00015410 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28799 00015413 483D[02000000]          	cmp rax, sob_boolean_false
 28800 00015419 740F                    	je .L_if_else_0086
 28801 0001541B 48B8-                   	mov rax, L_constants + 3485
 28801 0001541D [9D0D000000000000] 
 28802 00015425 E9CC000000              	jmp .L_if_end_0086
 28803                                  .L_if_else_0086:
 28804                                  	; preparing a tail-call
 28805                                  	; preparing a non-tail-call
 28806                                  	; preparing a non-tail-call
 28807 0001542A 48B8-                   	mov rax, L_constants + 2270
 28807 0001542C [DE08000000000000] 
 28808 00015434 50                      	push rax
 28809 00015435 488B4530                	mov rax, PARAM(2)	; param n
 28810 00015439 50                      	push rax
 28811 0001543A 6A02                    	push 2	; arg count
 28812 0001543C 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 28813 00015444 803805                  	cmp byte [rax], T_undefined
 28814 00015447 0F847B200000            	je L_error_fvar_undefined
 28815 0001544D 803804                  	cmp byte [rax], T_closure
 28816 00015450 0F85F6200000            	jne L_error_non_closure
 28817 00015456 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28818 00015459 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28819 0001545C 50                      	push rax
 28820 0001545D 488B4520                	mov rax, PARAM(0)	; param a
 28821 00015461 50                      	push rax
 28822 00015462 488B4528                	mov rax, PARAM(1)	; param b
 28823 00015466 50                      	push rax
 28824 00015467 6A03                    	push 3	; arg count
 28825 00015469 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28826 00015471 803805                  	cmp byte [rax], T_undefined
 28827 00015474 0F844E200000            	je L_error_fvar_undefined
 28828 0001547A 803804                  	cmp byte [rax], T_closure
 28829 0001547D 0F85C9200000            	jne L_error_non_closure
 28830 00015483 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28831 00015486 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28832 00015489 50                      	push rax
 28833 0001548A 48B8-                   	mov rax, L_constants + 3485
 28833 0001548C [9D0D000000000000] 
 28834 00015494 50                      	push rax
 28835 00015495 6A02                    	push 2	; arg count
 28836 00015497 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 28837 0001549F 803805                  	cmp byte [rax], T_undefined
 28838 000154A2 0F8420200000            	je L_error_fvar_undefined
 28839 000154A8 803804                  	cmp byte [rax], T_closure
 28840 000154AB 0F859B200000            	jne L_error_non_closure
 28841 000154B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28842 000154B4 FF7508                  	push qword [rbp + 8 * 1]
 28843                                   ; old ret addr
 28844 000154B7 FF7500                  	push qword [rbp]
 28845                                   ; restore the old rbp
 28846 000154BA BB02000000              	mov rbx, 2
 28847 000154BF 4883C303                	add rbx, 3
 28848 000154C3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28849 000154C7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28850 000154CC 4C8D4DF8                	lea r9, [rbp - 8]
 28851 000154D0 B906000000              	mov rcx, 6
 28852                                  .L_tc_recycle_frame_loop_00f1:
 28853 000154D5 4883F900                	cmp rcx, 0
 28854 000154D9 7413                    	je .L_tc_recycle_frame_done_00f1
 28855 000154DB 4D8B11                  	mov r10, qword [r9]
 28856 000154DE 4D8910                  	mov qword [r8], r10
 28857 000154E1 4983E808                	sub r8, 8
 28858 000154E5 4983E908                	sub r9, 8
 28859 000154E9 48FFC9                  	dec rcx
 28860 000154EC EBE7                    	jmp .L_tc_recycle_frame_loop_00f1
 28861                                  .L_tc_recycle_frame_done_00f1:
 28862 000154EE 498D6008                	lea rsp, [r8 + 8]
 28863 000154F2 5D                      	pop rbp ; restore the old rbp
 28864 000154F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28865                                  .L_if_end_0086:
 28866                                  .L_if_end_0087:
 28867                                  .L_if_end_0088:
 28868 000154F6 C9                      	leave
 28869 000154F7 C22800                  	ret AND_KILL_FRAME(3)
 28870                                  .L_lambda_simple_end_00b8:	; new closure is in rax
 28871 000154FA 48890425[36140000]      	mov qword [free_var_97], rax
 28872 00015502 48B8-                   	mov rax, sob_void
 28872 00015504 [0000000000000000] 
 28873                                  
 28874 0001550C 4889C7                  	mov rdi, rax
 28875 0001550F E836230000              	call print_sexpr_if_not_void
 28876 00015514 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28877 00015519 E8D7200000              	call malloc
 28878 0001551E 50                      	push rax
 28879 0001551F BF00000000              	mov rdi, 8 * 0	; new rib
 28880 00015524 E8CC200000              	call malloc
 28881 00015529 50                      	push rax
 28882 0001552A BF08000000              	mov rdi, 8 * 1	; extended env
 28883 0001552F E8C1200000              	call malloc
 28884 00015534 488B7D10                	mov rdi, ENV
 28885 00015538 BE00000000              	mov rsi, 0
 28886 0001553D BA01000000              	mov rdx, 1
 28887                                  .L_lambda_simple_env_loop_00b9:	; ext_env[i + 1] <-- env[i]
 28888 00015542 4883FE00                	cmp rsi, 0
 28889 00015546 7410                    	je .L_lambda_simple_env_end_00b9
 28890 00015548 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28891 0001554C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28892 00015550 48FFC6                  	inc rsi
 28893 00015553 48FFC2                  	inc rdx
 28894 00015556 EBEA                    	jmp .L_lambda_simple_env_loop_00b9
 28895                                  .L_lambda_simple_env_end_00b9:
 28896 00015558 5B                      	pop rbx
 28897 00015559 BE00000000              	mov rsi, 0
 28898                                  .L_lambda_simple_params_loop_00b9:	; copy params
 28899 0001555E 4883FE00                	cmp rsi, 0
 28900 00015562 740E                    	je .L_lambda_simple_params_end_00b9
 28901 00015564 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28902 00015569 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28903 0001556D 48FFC6                  	inc rsi
 28904 00015570 EBEC                    	jmp .L_lambda_simple_params_loop_00b9
 28905                                  .L_lambda_simple_params_end_00b9:
 28906 00015572 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28907 00015575 4889C3                  	mov rbx, rax
 28908 00015578 58                      	pop rax
 28909 00015579 C60004                  	mov byte [rax], T_closure
 28910 0001557C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28911 00015580 48C74009[8D550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b9
 28912 00015588 E987000000              	jmp .L_lambda_simple_end_00b9
 28913                                  .L_lambda_simple_code_00b9:	; lambda-simple body
 28914 0001558D 48837C241000            	cmp qword [rsp + 8 * 2], 0
 28915 00015593 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 28916 00015595 FF742410                	push qword [rsp + 8 * 2]
 28917 00015599 6A00                    	push 0
 28918 0001559B E90E200000              	jmp L_error_incorrect_arity_simple
 28919                                  .L_lambda_simple_arity_check_ok_00b9:
 28920 000155A0 C8000000                	enter 0, 0
 28921                                  	; preparing a tail-call
 28922 000155A4 48B8-                   	mov rax, L_constants + 3510
 28922 000155A6 [B60D000000000000] 
 28923 000155AE 50                      	push rax
 28924 000155AF 6A01                    	push 1	; arg count
 28925 000155B1 488B0425[BB170000]      	mov rax, qword [free_var_150]	; free var write-char
 28926 000155B9 803805                  	cmp byte [rax], T_undefined
 28927 000155BC 0F84061F0000            	je L_error_fvar_undefined
 28928 000155C2 803804                  	cmp byte [rax], T_closure
 28929 000155C5 0F85811F0000            	jne L_error_non_closure
 28930 000155CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28931 000155CE FF7508                  	push qword [rbp + 8 * 1]
 28932                                   ; old ret addr
 28933 000155D1 FF7500                  	push qword [rbp]
 28934                                   ; restore the old rbp
 28935 000155D4 BB01000000              	mov rbx, 1
 28936 000155D9 4883C303                	add rbx, 3
 28937 000155DD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28938 000155E1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28939 000155E6 4C8D4DF8                	lea r9, [rbp - 8]
 28940 000155EA B905000000              	mov rcx, 5
 28941                                  .L_tc_recycle_frame_loop_00f2:
 28942 000155EF 4883F900                	cmp rcx, 0
 28943 000155F3 7413                    	je .L_tc_recycle_frame_done_00f2
 28944 000155F5 4D8B11                  	mov r10, qword [r9]
 28945 000155F8 4D8910                  	mov qword [r8], r10
 28946 000155FB 4983E808                	sub r8, 8
 28947 000155FF 4983E908                	sub r9, 8
 28948 00015603 48FFC9                  	dec rcx
 28949 00015606 EBE7                    	jmp .L_tc_recycle_frame_loop_00f2
 28950                                  .L_tc_recycle_frame_done_00f2:
 28951 00015608 498D6008                	lea rsp, [r8 + 8]
 28952 0001560C 5D                      	pop rbp ; restore the old rbp
 28953 0001560D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28954 00015610 C9                      	leave
 28955 00015611 C21000                  	ret AND_KILL_FRAME(0)
 28956                                  .L_lambda_simple_end_00b9:	; new closure is in rax
 28957 00015614 48890425[BE140000]      	mov qword [free_var_105], rax
 28958 0001561C 48B8-                   	mov rax, sob_void
 28958 0001561E [0000000000000000] 
 28959                                  
 28960 00015626 4889C7                  	mov rdi, rax
 28961 00015629 E81C220000              	call print_sexpr_if_not_void
 28962 0001562E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28963 00015633 E8BD1F0000              	call malloc
 28964 00015638 50                      	push rax
 28965 00015639 BF00000000              	mov rdi, 8 * 0	; new rib
 28966 0001563E E8B21F0000              	call malloc
 28967 00015643 50                      	push rax
 28968 00015644 BF08000000              	mov rdi, 8 * 1	; extended env
 28969 00015649 E8A71F0000              	call malloc
 28970 0001564E 488B7D10                	mov rdi, ENV
 28971 00015652 BE00000000              	mov rsi, 0
 28972 00015657 BA01000000              	mov rdx, 1
 28973                                  .L_lambda_simple_env_loop_00ba:	; ext_env[i + 1] <-- env[i]
 28974 0001565C 4883FE00                	cmp rsi, 0
 28975 00015660 7410                    	je .L_lambda_simple_env_end_00ba
 28976 00015662 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28977 00015666 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28978 0001566A 48FFC6                  	inc rsi
 28979 0001566D 48FFC2                  	inc rdx
 28980 00015670 EBEA                    	jmp .L_lambda_simple_env_loop_00ba
 28981                                  .L_lambda_simple_env_end_00ba:
 28982 00015672 5B                      	pop rbx
 28983 00015673 BE00000000              	mov rsi, 0
 28984                                  .L_lambda_simple_params_loop_00ba:	; copy params
 28985 00015678 4883FE00                	cmp rsi, 0
 28986 0001567C 740E                    	je .L_lambda_simple_params_end_00ba
 28987 0001567E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28988 00015683 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28989 00015687 48FFC6                  	inc rsi
 28990 0001568A EBEC                    	jmp .L_lambda_simple_params_loop_00ba
 28991                                  .L_lambda_simple_params_end_00ba:
 28992 0001568C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28993 0001568F 4889C3                  	mov rbx, rax
 28994 00015692 58                      	pop rax
 28995 00015693 C60004                  	mov byte [rax], T_closure
 28996 00015696 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28997 0001569A 48C74009[A4560100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ba
 28998 000156A2 EB25                    	jmp .L_lambda_simple_end_00ba
 28999                                  .L_lambda_simple_code_00ba:	; lambda-simple body
 29000 000156A4 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29001 000156AA 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 29002 000156AC FF742410                	push qword [rsp + 8 * 2]
 29003 000156B0 6A00                    	push 0
 29004 000156B2 E9F71E0000              	jmp L_error_incorrect_arity_simple
 29005                                  .L_lambda_simple_arity_check_ok_00ba:
 29006 000156B7 C8000000                	enter 0, 0
 29007 000156BB 48B8-                   	mov rax, L_constants + 0
 29007 000156BD [0000000000000000] 
 29008 000156C5 C9                      	leave
 29009 000156C6 C21000                  	ret AND_KILL_FRAME(0)
 29010                                  .L_lambda_simple_end_00ba:	; new closure is in rax
 29011 000156C9 48890425[AA170000]      	mov qword [free_var_149], rax
 29012 000156D1 48B8-                   	mov rax, sob_void
 29012 000156D3 [0000000000000000] 
 29013                                  
 29014 000156DB 4889C7                  	mov rdi, rax
 29015 000156DE E867210000              	call print_sexpr_if_not_void
 29016                                  	; preparing a non-tail-call
 29017 000156E3 48B8-                   	mov rax, L_constants + 2
 29017 000156E5 [0200000000000000] 
 29018 000156ED 50                      	push rax
 29019 000156EE 6A01                    	push 1	; arg count
 29020 000156F0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29021 000156F5 E8FB1E0000              	call malloc
 29022 000156FA 50                      	push rax
 29023 000156FB BF00000000              	mov rdi, 8 * 0	; new rib
 29024 00015700 E8F01E0000              	call malloc
 29025 00015705 50                      	push rax
 29026 00015706 BF08000000              	mov rdi, 8 * 1	; extended env
 29027 0001570B E8E51E0000              	call malloc
 29028 00015710 488B7D10                	mov rdi, ENV
 29029 00015714 BE00000000              	mov rsi, 0
 29030 00015719 BA01000000              	mov rdx, 1
 29031                                  .L_lambda_simple_env_loop_00bb:	; ext_env[i + 1] <-- env[i]
 29032 0001571E 4883FE00                	cmp rsi, 0
 29033 00015722 7410                    	je .L_lambda_simple_env_end_00bb
 29034 00015724 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29035 00015728 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29036 0001572C 48FFC6                  	inc rsi
 29037 0001572F 48FFC2                  	inc rdx
 29038 00015732 EBEA                    	jmp .L_lambda_simple_env_loop_00bb
 29039                                  .L_lambda_simple_env_end_00bb:
 29040 00015734 5B                      	pop rbx
 29041 00015735 BE00000000              	mov rsi, 0
 29042                                  .L_lambda_simple_params_loop_00bb:	; copy params
 29043 0001573A 4883FE00                	cmp rsi, 0
 29044 0001573E 740E                    	je .L_lambda_simple_params_end_00bb
 29045 00015740 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29046 00015745 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29047 00015749 48FFC6                  	inc rsi
 29048 0001574C EBEC                    	jmp .L_lambda_simple_params_loop_00bb
 29049                                  .L_lambda_simple_params_end_00bb:
 29050 0001574E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29051 00015751 4889C3                  	mov rbx, rax
 29052 00015754 58                      	pop rax
 29053 00015755 C60004                  	mov byte [rax], T_closure
 29054 00015758 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29055 0001575C 48C74009[69570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bb
 29056 00015764 E906010000              	jmp .L_lambda_simple_end_00bb
 29057                                  .L_lambda_simple_code_00bb:	; lambda-simple body
 29058 00015769 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29059 0001576F 740B                    	je .L_lambda_simple_arity_check_ok_00bb
 29060 00015771 FF742410                	push qword [rsp + 8 * 2]
 29061 00015775 6A01                    	push 1
 29062 00015777 E9321E0000              	jmp L_error_incorrect_arity_simple
 29063                                  .L_lambda_simple_arity_check_ok_00bb:
 29064 0001577C C8000000                	enter 0, 0
 29065                                  	; preparing a tail-call
 29066 00015780 6A00                    	push 0	; arg count
 29067 00015782 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29068 00015787 E8691E0000              	call malloc
 29069 0001578C 50                      	push rax
 29070 0001578D BF08000000              	mov rdi, 8 * 1	; new rib
 29071 00015792 E85E1E0000              	call malloc
 29072 00015797 50                      	push rax
 29073 00015798 BF10000000              	mov rdi, 8 * 2	; extended env
 29074 0001579D E8531E0000              	call malloc
 29075 000157A2 488B7D10                	mov rdi, ENV
 29076 000157A6 BE00000000              	mov rsi, 0
 29077 000157AB BA01000000              	mov rdx, 1
 29078                                  .L_lambda_simple_env_loop_00bc:	; ext_env[i + 1] <-- env[i]
 29079 000157B0 4883FE01                	cmp rsi, 1
 29080 000157B4 7410                    	je .L_lambda_simple_env_end_00bc
 29081 000157B6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29082 000157BA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29083 000157BE 48FFC6                  	inc rsi
 29084 000157C1 48FFC2                  	inc rdx
 29085 000157C4 EBEA                    	jmp .L_lambda_simple_env_loop_00bc
 29086                                  .L_lambda_simple_env_end_00bc:
 29087 000157C6 5B                      	pop rbx
 29088 000157C7 BE00000000              	mov rsi, 0
 29089                                  .L_lambda_simple_params_loop_00bc:	; copy params
 29090 000157CC 4883FE01                	cmp rsi, 1
 29091 000157D0 740E                    	je .L_lambda_simple_params_end_00bc
 29092 000157D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29093 000157D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29094 000157DB 48FFC6                  	inc rsi
 29095 000157DE EBEC                    	jmp .L_lambda_simple_params_loop_00bc
 29096                                  .L_lambda_simple_params_end_00bc:
 29097 000157E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29098 000157E3 4889C3                  	mov rbx, rax
 29099 000157E6 58                      	pop rax
 29100 000157E7 C60004                  	mov byte [rax], T_closure
 29101 000157EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29102 000157EE 48C74009[F8570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bc
 29103 000157F6 EB25                    	jmp .L_lambda_simple_end_00bc
 29104                                  .L_lambda_simple_code_00bc:	; lambda-simple body
 29105 000157F8 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29106 000157FE 740B                    	je .L_lambda_simple_arity_check_ok_00bc
 29107 00015800 FF742410                	push qword [rsp + 8 * 2]
 29108 00015804 6A00                    	push 0
 29109 00015806 E9A31D0000              	jmp L_error_incorrect_arity_simple
 29110                                  .L_lambda_simple_arity_check_ok_00bc:
 29111 0001580B C8000000                	enter 0, 0
 29112 0001580F 488B4510                	mov rax, ENV
 29113 00015813 488B00                  	mov rax, qword [rax + 8 * 0]
 29114 00015816 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 29115 00015819 C9                      	leave
 29116 0001581A C21000                  	ret AND_KILL_FRAME(0)
 29117                                  .L_lambda_simple_end_00bc:	; new closure is in rax
 29118 0001581D 803804                  	cmp byte [rax], T_closure
 29119 00015820 0F85261D0000            	jne L_error_non_closure
 29120 00015826 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29121 00015829 FF7508                  	push qword [rbp + 8 * 1]
 29122                                   ; old ret addr
 29123 0001582C FF7500                  	push qword [rbp]
 29124                                   ; restore the old rbp
 29125 0001582F BB00000000              	mov rbx, 0
 29126 00015834 4883C303                	add rbx, 3
 29127 00015838 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29128 0001583C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29129 00015841 4C8D4DF8                	lea r9, [rbp - 8]
 29130 00015845 B904000000              	mov rcx, 4
 29131                                  .L_tc_recycle_frame_loop_00f3:
 29132 0001584A 4883F900                	cmp rcx, 0
 29133 0001584E 7413                    	je .L_tc_recycle_frame_done_00f3
 29134 00015850 4D8B11                  	mov r10, qword [r9]
 29135 00015853 4D8910                  	mov qword [r8], r10
 29136 00015856 4983E808                	sub r8, 8
 29137 0001585A 4983E908                	sub r9, 8
 29138 0001585E 48FFC9                  	dec rcx
 29139 00015861 EBE7                    	jmp .L_tc_recycle_frame_loop_00f3
 29140                                  .L_tc_recycle_frame_done_00f3:
 29141 00015863 498D6008                	lea rsp, [r8 + 8]
 29142 00015867 5D                      	pop rbp ; restore the old rbp
 29143 00015868 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29144 0001586B C9                      	leave
 29145 0001586C C21800                  	ret AND_KILL_FRAME(1)
 29146                                  .L_lambda_simple_end_00bb:	; new closure is in rax
 29147 0001586F 803804                  	cmp byte [rax], T_closure
 29148 00015872 0F85D41C0000            	jne L_error_non_closure
 29149 00015878 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29150 0001587B FF5009                  	call SOB_CLOSURE_CODE(rax)
 29151                                  
 29152 0001587E 4889C7                  	mov rdi, rax
 29153 00015881 E8C41F0000              	call print_sexpr_if_not_void
 29154                                  	; preparing a non-tail-call
 29155 00015886 48B8-                   	mov rax, L_constants + 3
 29155 00015888 [0300000000000000] 
 29156 00015890 50                      	push rax
 29157 00015891 48B8-                   	mov rax, L_constants + 2
 29157 00015893 [0200000000000000] 
 29158 0001589B 50                      	push rax
 29159 0001589C 6A02                    	push 2	; arg count
 29160 0001589E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29161 000158A3 E84D1D0000              	call malloc
 29162 000158A8 50                      	push rax
 29163 000158A9 BF00000000              	mov rdi, 8 * 0	; new rib
 29164 000158AE E8421D0000              	call malloc
 29165 000158B3 50                      	push rax
 29166 000158B4 BF08000000              	mov rdi, 8 * 1	; extended env
 29167 000158B9 E8371D0000              	call malloc
 29168 000158BE 488B7D10                	mov rdi, ENV
 29169 000158C2 BE00000000              	mov rsi, 0
 29170 000158C7 BA01000000              	mov rdx, 1
 29171                                  .L_lambda_simple_env_loop_00bd:	; ext_env[i + 1] <-- env[i]
 29172 000158CC 4883FE00                	cmp rsi, 0
 29173 000158D0 7410                    	je .L_lambda_simple_env_end_00bd
 29174 000158D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29175 000158D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29176 000158DA 48FFC6                  	inc rsi
 29177 000158DD 48FFC2                  	inc rdx
 29178 000158E0 EBEA                    	jmp .L_lambda_simple_env_loop_00bd
 29179                                  .L_lambda_simple_env_end_00bd:
 29180 000158E2 5B                      	pop rbx
 29181 000158E3 BE00000000              	mov rsi, 0
 29182                                  .L_lambda_simple_params_loop_00bd:	; copy params
 29183 000158E8 4883FE00                	cmp rsi, 0
 29184 000158EC 740E                    	je .L_lambda_simple_params_end_00bd
 29185 000158EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29186 000158F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29187 000158F7 48FFC6                  	inc rsi
 29188 000158FA EBEC                    	jmp .L_lambda_simple_params_loop_00bd
 29189                                  .L_lambda_simple_params_end_00bd:
 29190 000158FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29191 000158FF 4889C3                  	mov rbx, rax
 29192 00015902 58                      	pop rax
 29193 00015903 C60004                  	mov byte [rax], T_closure
 29194 00015906 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29195 0001590A 48C74009[17590100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bd
 29196 00015912 E912030000              	jmp .L_lambda_simple_end_00bd
 29197                                  .L_lambda_simple_code_00bd:	; lambda-simple body
 29198 00015917 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29199 0001591D 740B                    	je .L_lambda_simple_arity_check_ok_00bd
 29200 0001591F FF742410                	push qword [rsp + 8 * 2]
 29201 00015923 6A02                    	push 2
 29202 00015925 E9841C0000              	jmp L_error_incorrect_arity_simple
 29203                                  .L_lambda_simple_arity_check_ok_00bd:
 29204 0001592A C8000000                	enter 0, 0
 29205                                  	; preparing a tail-call
 29206 0001592E 48B8-                   	mov rax, L_constants + 2
 29206 00015930 [0200000000000000] 
 29207 00015938 50                      	push rax
 29208 00015939 6A01                    	push 1	; arg count
 29209 0001593B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29210 00015940 E8B01C0000              	call malloc
 29211 00015945 50                      	push rax
 29212 00015946 BF10000000              	mov rdi, 8 * 2	; new rib
 29213 0001594B E8A51C0000              	call malloc
 29214 00015950 50                      	push rax
 29215 00015951 BF10000000              	mov rdi, 8 * 2	; extended env
 29216 00015956 E89A1C0000              	call malloc
 29217 0001595B 488B7D10                	mov rdi, ENV
 29218 0001595F BE00000000              	mov rsi, 0
 29219 00015964 BA01000000              	mov rdx, 1
 29220                                  .L_lambda_simple_env_loop_00be:	; ext_env[i + 1] <-- env[i]
 29221 00015969 4883FE01                	cmp rsi, 1
 29222 0001596D 7410                    	je .L_lambda_simple_env_end_00be
 29223 0001596F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29224 00015973 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29225 00015977 48FFC6                  	inc rsi
 29226 0001597A 48FFC2                  	inc rdx
 29227 0001597D EBEA                    	jmp .L_lambda_simple_env_loop_00be
 29228                                  .L_lambda_simple_env_end_00be:
 29229 0001597F 5B                      	pop rbx
 29230 00015980 BE00000000              	mov rsi, 0
 29231                                  .L_lambda_simple_params_loop_00be:	; copy params
 29232 00015985 4883FE02                	cmp rsi, 2
 29233 00015989 740E                    	je .L_lambda_simple_params_end_00be
 29234 0001598B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29235 00015990 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29236 00015994 48FFC6                  	inc rsi
 29237 00015997 EBEC                    	jmp .L_lambda_simple_params_loop_00be
 29238                                  .L_lambda_simple_params_end_00be:
 29239 00015999 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29240 0001599C 4889C3                  	mov rbx, rax
 29241 0001599F 58                      	pop rax
 29242 000159A0 C60004                  	mov byte [rax], T_closure
 29243 000159A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29244 000159A7 48C74009[B4590100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00be
 29245 000159AF E923020000              	jmp .L_lambda_simple_end_00be
 29246                                  .L_lambda_simple_code_00be:	; lambda-simple body
 29247 000159B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29248 000159BA 740B                    	je .L_lambda_simple_arity_check_ok_00be
 29249 000159BC FF742410                	push qword [rsp + 8 * 2]
 29250 000159C0 6A01                    	push 1
 29251 000159C2 E9E71B0000              	jmp L_error_incorrect_arity_simple
 29252                                  .L_lambda_simple_arity_check_ok_00be:
 29253 000159C7 C8000000                	enter 0, 0
 29254                                  	; preparing a tail-call
 29255 000159CB 48B8-                   	mov rax, L_constants + 2
 29255 000159CD [0200000000000000] 
 29256 000159D5 50                      	push rax
 29257 000159D6 48B8-                   	mov rax, L_constants + 2
 29257 000159D8 [0200000000000000] 
 29258 000159E0 50                      	push rax
 29259 000159E1 48B8-                   	mov rax, L_constants + 2
 29259 000159E3 [0200000000000000] 
 29260 000159EB 50                      	push rax
 29261 000159EC 6A03                    	push 3	; arg count
 29262 000159EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29263 000159F3 E8FD1B0000              	call malloc
 29264 000159F8 50                      	push rax
 29265 000159F9 BF08000000              	mov rdi, 8 * 1	; new rib
 29266 000159FE E8F21B0000              	call malloc
 29267 00015A03 50                      	push rax
 29268 00015A04 BF18000000              	mov rdi, 8 * 3	; extended env
 29269 00015A09 E8E71B0000              	call malloc
 29270 00015A0E 488B7D10                	mov rdi, ENV
 29271 00015A12 BE00000000              	mov rsi, 0
 29272 00015A17 BA01000000              	mov rdx, 1
 29273                                  .L_lambda_simple_env_loop_00bf:	; ext_env[i + 1] <-- env[i]
 29274 00015A1C 4883FE02                	cmp rsi, 2
 29275 00015A20 7410                    	je .L_lambda_simple_env_end_00bf
 29276 00015A22 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29277 00015A26 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29278 00015A2A 48FFC6                  	inc rsi
 29279 00015A2D 48FFC2                  	inc rdx
 29280 00015A30 EBEA                    	jmp .L_lambda_simple_env_loop_00bf
 29281                                  .L_lambda_simple_env_end_00bf:
 29282 00015A32 5B                      	pop rbx
 29283 00015A33 BE00000000              	mov rsi, 0
 29284                                  .L_lambda_simple_params_loop_00bf:	; copy params
 29285 00015A38 4883FE01                	cmp rsi, 1
 29286 00015A3C 740E                    	je .L_lambda_simple_params_end_00bf
 29287 00015A3E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29288 00015A43 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29289 00015A47 48FFC6                  	inc rsi
 29290 00015A4A EBEC                    	jmp .L_lambda_simple_params_loop_00bf
 29291                                  .L_lambda_simple_params_end_00bf:
 29292 00015A4C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29293 00015A4F 4889C3                  	mov rbx, rax
 29294 00015A52 58                      	pop rax
 29295 00015A53 C60004                  	mov byte [rax], T_closure
 29296 00015A56 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29297 00015A5A 48C74009[675A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bf
 29298 00015A62 E91E010000              	jmp .L_lambda_simple_end_00bf
 29299                                  .L_lambda_simple_code_00bf:	; lambda-simple body
 29300 00015A67 48837C241003            	cmp qword [rsp + 8 * 2], 3
 29301 00015A6D 740B                    	je .L_lambda_simple_arity_check_ok_00bf
 29302 00015A6F FF742410                	push qword [rsp + 8 * 2]
 29303 00015A73 6A03                    	push 3
 29304 00015A75 E9341B0000              	jmp L_error_incorrect_arity_simple
 29305                                  .L_lambda_simple_arity_check_ok_00bf:
 29306 00015A7A C8000000                	enter 0, 0
 29307                                  	; preparing a tail-call
 29308 00015A7E 48B8-                   	mov rax, L_constants + 2
 29308 00015A80 [0200000000000000] 
 29309 00015A88 50                      	push rax
 29310 00015A89 48B8-                   	mov rax, L_constants + 2
 29310 00015A8B [0200000000000000] 
 29311 00015A93 50                      	push rax
 29312 00015A94 6A02                    	push 2	; arg count
 29313 00015A96 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29314 00015A9B E8551B0000              	call malloc
 29315 00015AA0 50                      	push rax
 29316 00015AA1 BF18000000              	mov rdi, 8 * 3	; new rib
 29317 00015AA6 E84A1B0000              	call malloc
 29318 00015AAB 50                      	push rax
 29319 00015AAC BF20000000              	mov rdi, 8 * 4	; extended env
 29320 00015AB1 E83F1B0000              	call malloc
 29321 00015AB6 488B7D10                	mov rdi, ENV
 29322 00015ABA BE00000000              	mov rsi, 0
 29323 00015ABF BA01000000              	mov rdx, 1
 29324                                  .L_lambda_simple_env_loop_00c0:	; ext_env[i + 1] <-- env[i]
 29325 00015AC4 4883FE03                	cmp rsi, 3
 29326 00015AC8 7410                    	je .L_lambda_simple_env_end_00c0
 29327 00015ACA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29328 00015ACE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29329 00015AD2 48FFC6                  	inc rsi
 29330 00015AD5 48FFC2                  	inc rdx
 29331 00015AD8 EBEA                    	jmp .L_lambda_simple_env_loop_00c0
 29332                                  .L_lambda_simple_env_end_00c0:
 29333 00015ADA 5B                      	pop rbx
 29334 00015ADB BE00000000              	mov rsi, 0
 29335                                  .L_lambda_simple_params_loop_00c0:	; copy params
 29336 00015AE0 4883FE03                	cmp rsi, 3
 29337 00015AE4 740E                    	je .L_lambda_simple_params_end_00c0
 29338 00015AE6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29339 00015AEB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29340 00015AEF 48FFC6                  	inc rsi
 29341 00015AF2 EBEC                    	jmp .L_lambda_simple_params_loop_00c0
 29342                                  .L_lambda_simple_params_end_00c0:
 29343 00015AF4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29344 00015AF7 4889C3                  	mov rbx, rax
 29345 00015AFA 58                      	pop rax
 29346 00015AFB C60004                  	mov byte [rax], T_closure
 29347 00015AFE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29348 00015B02 48C74009[0C5B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c0
 29349 00015B0A EB27                    	jmp .L_lambda_simple_end_00c0
 29350                                  .L_lambda_simple_code_00c0:	; lambda-simple body
 29351 00015B0C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29352 00015B12 740B                    	je .L_lambda_simple_arity_check_ok_00c0
 29353 00015B14 FF742410                	push qword [rsp + 8 * 2]
 29354 00015B18 6A02                    	push 2
 29355 00015B1A E98F1A0000              	jmp L_error_incorrect_arity_simple
 29356                                  .L_lambda_simple_arity_check_ok_00c0:
 29357 00015B1F C8000000                	enter 0, 0
 29358 00015B23 488B4510                	mov rax, ENV
 29359 00015B27 488B4010                	mov rax, qword [rax + 8 * 2]
 29360 00015B2B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 29361 00015B2F C9                      	leave
 29362 00015B30 C22000                  	ret AND_KILL_FRAME(2)
 29363                                  .L_lambda_simple_end_00c0:	; new closure is in rax
 29364 00015B33 803804                  	cmp byte [rax], T_closure
 29365 00015B36 0F85101A0000            	jne L_error_non_closure
 29366 00015B3C FF7001                  	push SOB_CLOSURE_ENV(rax)
 29367 00015B3F FF7508                  	push qword [rbp + 8 * 1]
 29368                                   ; old ret addr
 29369 00015B42 FF7500                  	push qword [rbp]
 29370                                   ; restore the old rbp
 29371 00015B45 BB02000000              	mov rbx, 2
 29372 00015B4A 4883C303                	add rbx, 3
 29373 00015B4E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29374 00015B52 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29375 00015B57 4C8D4DF8                	lea r9, [rbp - 8]
 29376 00015B5B B906000000              	mov rcx, 6
 29377                                  .L_tc_recycle_frame_loop_00f6:
 29378 00015B60 4883F900                	cmp rcx, 0
 29379 00015B64 7413                    	je .L_tc_recycle_frame_done_00f6
 29380 00015B66 4D8B11                  	mov r10, qword [r9]
 29381 00015B69 4D8910                  	mov qword [r8], r10
 29382 00015B6C 4983E808                	sub r8, 8
 29383 00015B70 4983E908                	sub r9, 8
 29384 00015B74 48FFC9                  	dec rcx
 29385 00015B77 EBE7                    	jmp .L_tc_recycle_frame_loop_00f6
 29386                                  .L_tc_recycle_frame_done_00f6:
 29387 00015B79 498D6008                	lea rsp, [r8 + 8]
 29388 00015B7D 5D                      	pop rbp ; restore the old rbp
 29389 00015B7E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29390 00015B81 C9                      	leave
 29391 00015B82 C22800                  	ret AND_KILL_FRAME(3)
 29392                                  .L_lambda_simple_end_00bf:	; new closure is in rax
 29393 00015B85 803804                  	cmp byte [rax], T_closure
 29394 00015B88 0F85BE190000            	jne L_error_non_closure
 29395 00015B8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 29396 00015B91 FF7508                  	push qword [rbp + 8 * 1]
 29397                                   ; old ret addr
 29398 00015B94 FF7500                  	push qword [rbp]
 29399                                   ; restore the old rbp
 29400 00015B97 BB03000000              	mov rbx, 3
 29401 00015B9C 4883C303                	add rbx, 3
 29402 00015BA0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29403 00015BA4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29404 00015BA9 4C8D4DF8                	lea r9, [rbp - 8]
 29405 00015BAD B907000000              	mov rcx, 7
 29406                                  .L_tc_recycle_frame_loop_00f5:
 29407 00015BB2 4883F900                	cmp rcx, 0
 29408 00015BB6 7413                    	je .L_tc_recycle_frame_done_00f5
 29409 00015BB8 4D8B11                  	mov r10, qword [r9]
 29410 00015BBB 4D8910                  	mov qword [r8], r10
 29411 00015BBE 4983E808                	sub r8, 8
 29412 00015BC2 4983E908                	sub r9, 8
 29413 00015BC6 48FFC9                  	dec rcx
 29414 00015BC9 EBE7                    	jmp .L_tc_recycle_frame_loop_00f5
 29415                                  .L_tc_recycle_frame_done_00f5:
 29416 00015BCB 498D6008                	lea rsp, [r8 + 8]
 29417 00015BCF 5D                      	pop rbp ; restore the old rbp
 29418 00015BD0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29419 00015BD3 C9                      	leave
 29420 00015BD4 C21800                  	ret AND_KILL_FRAME(1)
 29421                                  .L_lambda_simple_end_00be:	; new closure is in rax
 29422 00015BD7 803804                  	cmp byte [rax], T_closure
 29423 00015BDA 0F856C190000            	jne L_error_non_closure
 29424 00015BE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29425 00015BE3 FF7508                  	push qword [rbp + 8 * 1]
 29426                                   ; old ret addr
 29427 00015BE6 FF7500                  	push qword [rbp]
 29428                                   ; restore the old rbp
 29429 00015BE9 BB01000000              	mov rbx, 1
 29430 00015BEE 4883C303                	add rbx, 3
 29431 00015BF2 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29432 00015BF6 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29433 00015BFB 4C8D4DF8                	lea r9, [rbp - 8]
 29434 00015BFF B905000000              	mov rcx, 5
 29435                                  .L_tc_recycle_frame_loop_00f4:
 29436 00015C04 4883F900                	cmp rcx, 0
 29437 00015C08 7413                    	je .L_tc_recycle_frame_done_00f4
 29438 00015C0A 4D8B11                  	mov r10, qword [r9]
 29439 00015C0D 4D8910                  	mov qword [r8], r10
 29440 00015C10 4983E808                	sub r8, 8
 29441 00015C14 4983E908                	sub r9, 8
 29442 00015C18 48FFC9                  	dec rcx
 29443 00015C1B EBE7                    	jmp .L_tc_recycle_frame_loop_00f4
 29444                                  .L_tc_recycle_frame_done_00f4:
 29445 00015C1D 498D6008                	lea rsp, [r8 + 8]
 29446 00015C21 5D                      	pop rbp ; restore the old rbp
 29447 00015C22 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29448 00015C25 C9                      	leave
 29449 00015C26 C22000                  	ret AND_KILL_FRAME(2)
 29450                                  .L_lambda_simple_end_00bd:	; new closure is in rax
 29451 00015C29 803804                  	cmp byte [rax], T_closure
 29452 00015C2C 0F851A190000            	jne L_error_non_closure
 29453 00015C32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29454 00015C35 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29455                                  
 29456 00015C38 4889C7                  	mov rdi, rax
 29457 00015C3B E80A1C0000              	call print_sexpr_if_not_void
 29458                                  	; preparing a non-tail-call
 29459 00015C40 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29460 00015C45 E8AB190000              	call malloc
 29461 00015C4A 50                      	push rax
 29462 00015C4B BF00000000              	mov rdi, 8 * 0	; new rib
 29463 00015C50 E8A0190000              	call malloc
 29464 00015C55 50                      	push rax
 29465 00015C56 BF08000000              	mov rdi, 8 * 1	; extended env
 29466 00015C5B E895190000              	call malloc
 29467 00015C60 488B7D10                	mov rdi, ENV
 29468 00015C64 BE00000000              	mov rsi, 0
 29469 00015C69 BA01000000              	mov rdx, 1
 29470                                  .L_lambda_simple_env_loop_00c1:	; ext_env[i + 1] <-- env[i]
 29471 00015C6E 4883FE00                	cmp rsi, 0
 29472 00015C72 7410                    	je .L_lambda_simple_env_end_00c1
 29473 00015C74 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29474 00015C78 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29475 00015C7C 48FFC6                  	inc rsi
 29476 00015C7F 48FFC2                  	inc rdx
 29477 00015C82 EBEA                    	jmp .L_lambda_simple_env_loop_00c1
 29478                                  .L_lambda_simple_env_end_00c1:
 29479 00015C84 5B                      	pop rbx
 29480 00015C85 BE00000000              	mov rsi, 0
 29481                                  .L_lambda_simple_params_loop_00c1:	; copy params
 29482 00015C8A 4883FE00                	cmp rsi, 0
 29483 00015C8E 740E                    	je .L_lambda_simple_params_end_00c1
 29484 00015C90 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29485 00015C95 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29486 00015C99 48FFC6                  	inc rsi
 29487 00015C9C EBEC                    	jmp .L_lambda_simple_params_loop_00c1
 29488                                  .L_lambda_simple_params_end_00c1:
 29489 00015C9E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29490 00015CA1 4889C3                  	mov rbx, rax
 29491 00015CA4 58                      	pop rax
 29492 00015CA5 C60004                  	mov byte [rax], T_closure
 29493 00015CA8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29494 00015CAC 48C74009[B65C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c1
 29495 00015CB4 EB1F                    	jmp .L_lambda_simple_end_00c1
 29496                                  .L_lambda_simple_code_00c1:	; lambda-simple body
 29497 00015CB6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29498 00015CBC 740B                    	je .L_lambda_simple_arity_check_ok_00c1
 29499 00015CBE FF742410                	push qword [rsp + 8 * 2]
 29500 00015CC2 6A02                    	push 2
 29501 00015CC4 E9E5180000              	jmp L_error_incorrect_arity_simple
 29502                                  .L_lambda_simple_arity_check_ok_00c1:
 29503 00015CC9 C8000000                	enter 0, 0
 29504 00015CCD 488B4520                	mov rax, PARAM(0)	; param x
 29505 00015CD1 C9                      	leave
 29506 00015CD2 C22000                  	ret AND_KILL_FRAME(2)
 29507                                  .L_lambda_simple_end_00c1:	; new closure is in rax
 29508 00015CD5 50                      	push rax
 29509 00015CD6 6A01                    	push 1	; arg count
 29510                                  	; preparing a non-tail-call
 29511 00015CD8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29512 00015CDD E813190000              	call malloc
 29513 00015CE2 50                      	push rax
 29514 00015CE3 BF00000000              	mov rdi, 8 * 0	; new rib
 29515 00015CE8 E808190000              	call malloc
 29516 00015CED 50                      	push rax
 29517 00015CEE BF08000000              	mov rdi, 8 * 1	; extended env
 29518 00015CF3 E8FD180000              	call malloc
 29519 00015CF8 488B7D10                	mov rdi, ENV
 29520 00015CFC BE00000000              	mov rsi, 0
 29521 00015D01 BA01000000              	mov rdx, 1
 29522                                  .L_lambda_simple_env_loop_00c2:	; ext_env[i + 1] <-- env[i]
 29523 00015D06 4883FE00                	cmp rsi, 0
 29524 00015D0A 7410                    	je .L_lambda_simple_env_end_00c2
 29525 00015D0C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29526 00015D10 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29527 00015D14 48FFC6                  	inc rsi
 29528 00015D17 48FFC2                  	inc rdx
 29529 00015D1A EBEA                    	jmp .L_lambda_simple_env_loop_00c2
 29530                                  .L_lambda_simple_env_end_00c2:
 29531 00015D1C 5B                      	pop rbx
 29532 00015D1D BE00000000              	mov rsi, 0
 29533                                  .L_lambda_simple_params_loop_00c2:	; copy params
 29534 00015D22 4883FE00                	cmp rsi, 0
 29535 00015D26 740E                    	je .L_lambda_simple_params_end_00c2
 29536 00015D28 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29537 00015D2D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29538 00015D31 48FFC6                  	inc rsi
 29539 00015D34 EBEC                    	jmp .L_lambda_simple_params_loop_00c2
 29540                                  .L_lambda_simple_params_end_00c2:
 29541 00015D36 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29542 00015D39 4889C3                  	mov rbx, rax
 29543 00015D3C 58                      	pop rax
 29544 00015D3D C60004                  	mov byte [rax], T_closure
 29545 00015D40 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29546 00015D44 48C74009[515D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c2
 29547 00015D4C E985000000              	jmp .L_lambda_simple_end_00c2
 29548                                  .L_lambda_simple_code_00c2:	; lambda-simple body
 29549 00015D51 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29550 00015D57 740B                    	je .L_lambda_simple_arity_check_ok_00c2
 29551 00015D59 FF742410                	push qword [rsp + 8 * 2]
 29552 00015D5D 6A01                    	push 1
 29553 00015D5F E94A180000              	jmp L_error_incorrect_arity_simple
 29554                                  .L_lambda_simple_arity_check_ok_00c2:
 29555 00015D64 C8000000                	enter 0, 0
 29556                                  	; preparing a tail-call
 29557 00015D68 48B8-                   	mov rax, L_constants + 2
 29557 00015D6A [0200000000000000] 
 29558 00015D72 50                      	push rax
 29559 00015D73 48B8-                   	mov rax, L_constants + 3
 29559 00015D75 [0300000000000000] 
 29560 00015D7D 50                      	push rax
 29561 00015D7E 6A02                    	push 2	; arg count
 29562 00015D80 488B4520                	mov rax, PARAM(0)	; param z
 29563 00015D84 803804                  	cmp byte [rax], T_closure
 29564 00015D87 0F85BF170000            	jne L_error_non_closure
 29565 00015D8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 29566 00015D90 FF7508                  	push qword [rbp + 8 * 1]
 29567                                   ; old ret addr
 29568 00015D93 FF7500                  	push qword [rbp]
 29569                                   ; restore the old rbp
 29570 00015D96 BB02000000              	mov rbx, 2
 29571 00015D9B 4883C303                	add rbx, 3
 29572 00015D9F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29573 00015DA3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29574 00015DA8 4C8D4DF8                	lea r9, [rbp - 8]
 29575 00015DAC B906000000              	mov rcx, 6
 29576                                  .L_tc_recycle_frame_loop_00f7:
 29577 00015DB1 4883F900                	cmp rcx, 0
 29578 00015DB5 7413                    	je .L_tc_recycle_frame_done_00f7
 29579 00015DB7 4D8B11                  	mov r10, qword [r9]
 29580 00015DBA 4D8910                  	mov qword [r8], r10
 29581 00015DBD 4983E808                	sub r8, 8
 29582 00015DC1 4983E908                	sub r9, 8
 29583 00015DC5 48FFC9                  	dec rcx
 29584 00015DC8 EBE7                    	jmp .L_tc_recycle_frame_loop_00f7
 29585                                  .L_tc_recycle_frame_done_00f7:
 29586 00015DCA 498D6008                	lea rsp, [r8 + 8]
 29587 00015DCE 5D                      	pop rbp ; restore the old rbp
 29588 00015DCF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29589 00015DD2 C9                      	leave
 29590 00015DD3 C21800                  	ret AND_KILL_FRAME(1)
 29591                                  .L_lambda_simple_end_00c2:	; new closure is in rax
 29592 00015DD6 50                      	push rax
 29593 00015DD7 6A01                    	push 1	; arg count
 29594                                  	; preparing a non-tail-call
 29595 00015DD9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29596 00015DDE E812180000              	call malloc
 29597 00015DE3 50                      	push rax
 29598 00015DE4 BF00000000              	mov rdi, 8 * 0	; new rib
 29599 00015DE9 E807180000              	call malloc
 29600 00015DEE 50                      	push rax
 29601 00015DEF BF08000000              	mov rdi, 8 * 1	; extended env
 29602 00015DF4 E8FC170000              	call malloc
 29603 00015DF9 488B7D10                	mov rdi, ENV
 29604 00015DFD BE00000000              	mov rsi, 0
 29605 00015E02 BA01000000              	mov rdx, 1
 29606                                  .L_lambda_simple_env_loop_00c3:	; ext_env[i + 1] <-- env[i]
 29607 00015E07 4883FE00                	cmp rsi, 0
 29608 00015E0B 7410                    	je .L_lambda_simple_env_end_00c3
 29609 00015E0D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29610 00015E11 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29611 00015E15 48FFC6                  	inc rsi
 29612 00015E18 48FFC2                  	inc rdx
 29613 00015E1B EBEA                    	jmp .L_lambda_simple_env_loop_00c3
 29614                                  .L_lambda_simple_env_end_00c3:
 29615 00015E1D 5B                      	pop rbx
 29616 00015E1E BE00000000              	mov rsi, 0
 29617                                  .L_lambda_simple_params_loop_00c3:	; copy params
 29618 00015E23 4883FE00                	cmp rsi, 0
 29619 00015E27 740E                    	je .L_lambda_simple_params_end_00c3
 29620 00015E29 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29621 00015E2E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29622 00015E32 48FFC6                  	inc rsi
 29623 00015E35 EBEC                    	jmp .L_lambda_simple_params_loop_00c3
 29624                                  .L_lambda_simple_params_end_00c3:
 29625 00015E37 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29626 00015E3A 4889C3                  	mov rbx, rax
 29627 00015E3D 58                      	pop rax
 29628 00015E3E C60004                  	mov byte [rax], T_closure
 29629 00015E41 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29630 00015E45 48C74009[525E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c3
 29631 00015E4D E903020000              	jmp .L_lambda_simple_end_00c3
 29632                                  .L_lambda_simple_code_00c3:	; lambda-simple body
 29633 00015E52 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29634 00015E58 740B                    	je .L_lambda_simple_arity_check_ok_00c3
 29635 00015E5A FF742410                	push qword [rsp + 8 * 2]
 29636 00015E5E 6A01                    	push 1
 29637 00015E60 E949170000              	jmp L_error_incorrect_arity_simple
 29638                                  .L_lambda_simple_arity_check_ok_00c3:
 29639 00015E65 C8000000                	enter 0, 0
 29640                                  	; preparing a tail-call
 29641 00015E69 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29642 00015E6E E882170000              	call malloc
 29643 00015E73 50                      	push rax
 29644 00015E74 BF08000000              	mov rdi, 8 * 1	; new rib
 29645 00015E79 E877170000              	call malloc
 29646 00015E7E 50                      	push rax
 29647 00015E7F BF10000000              	mov rdi, 8 * 2	; extended env
 29648 00015E84 E86C170000              	call malloc
 29649 00015E89 488B7D10                	mov rdi, ENV
 29650 00015E8D BE00000000              	mov rsi, 0
 29651 00015E92 BA01000000              	mov rdx, 1
 29652                                  .L_lambda_simple_env_loop_00c4:	; ext_env[i + 1] <-- env[i]
 29653 00015E97 4883FE01                	cmp rsi, 1
 29654 00015E9B 7410                    	je .L_lambda_simple_env_end_00c4
 29655 00015E9D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29656 00015EA1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29657 00015EA5 48FFC6                  	inc rsi
 29658 00015EA8 48FFC2                  	inc rdx
 29659 00015EAB EBEA                    	jmp .L_lambda_simple_env_loop_00c4
 29660                                  .L_lambda_simple_env_end_00c4:
 29661 00015EAD 5B                      	pop rbx
 29662 00015EAE BE00000000              	mov rsi, 0
 29663                                  .L_lambda_simple_params_loop_00c4:	; copy params
 29664 00015EB3 4883FE01                	cmp rsi, 1
 29665 00015EB7 740E                    	je .L_lambda_simple_params_end_00c4
 29666 00015EB9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29667 00015EBE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29668 00015EC2 48FFC6                  	inc rsi
 29669 00015EC5 EBEC                    	jmp .L_lambda_simple_params_loop_00c4
 29670                                  .L_lambda_simple_params_end_00c4:
 29671 00015EC7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29672 00015ECA 4889C3                  	mov rbx, rax
 29673 00015ECD 58                      	pop rax
 29674 00015ECE C60004                  	mov byte [rax], T_closure
 29675 00015ED1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29676 00015ED5 48C74009[E25E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c4
 29677 00015EDD E91A010000              	jmp .L_lambda_simple_end_00c4
 29678                                  .L_lambda_simple_code_00c4:	; lambda-simple body
 29679 00015EE2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29680 00015EE8 740B                    	je .L_lambda_simple_arity_check_ok_00c4
 29681 00015EEA FF742410                	push qword [rsp + 8 * 2]
 29682 00015EEE 6A02                    	push 2
 29683 00015EF0 E9B9160000              	jmp L_error_incorrect_arity_simple
 29684                                  .L_lambda_simple_arity_check_ok_00c4:
 29685 00015EF5 C8000000                	enter 0, 0
 29686 00015EF9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29687 00015EFE E8F2160000              	call malloc
 29688 00015F03 50                      	push rax
 29689 00015F04 BF10000000              	mov rdi, 8 * 2	; new rib
 29690 00015F09 E8E7160000              	call malloc
 29691 00015F0E 50                      	push rax
 29692 00015F0F BF18000000              	mov rdi, 8 * 3	; extended env
 29693 00015F14 E8DC160000              	call malloc
 29694 00015F19 488B7D10                	mov rdi, ENV
 29695 00015F1D BE00000000              	mov rsi, 0
 29696 00015F22 BA01000000              	mov rdx, 1
 29697                                  .L_lambda_simple_env_loop_00c5:	; ext_env[i + 1] <-- env[i]
 29698 00015F27 4883FE02                	cmp rsi, 2
 29699 00015F2B 7410                    	je .L_lambda_simple_env_end_00c5
 29700 00015F2D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29701 00015F31 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29702 00015F35 48FFC6                  	inc rsi
 29703 00015F38 48FFC2                  	inc rdx
 29704 00015F3B EBEA                    	jmp .L_lambda_simple_env_loop_00c5
 29705                                  .L_lambda_simple_env_end_00c5:
 29706 00015F3D 5B                      	pop rbx
 29707 00015F3E BE00000000              	mov rsi, 0
 29708                                  .L_lambda_simple_params_loop_00c5:	; copy params
 29709 00015F43 4883FE02                	cmp rsi, 2
 29710 00015F47 740E                    	je .L_lambda_simple_params_end_00c5
 29711 00015F49 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29712 00015F4E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29713 00015F52 48FFC6                  	inc rsi
 29714 00015F55 EBEC                    	jmp .L_lambda_simple_params_loop_00c5
 29715                                  .L_lambda_simple_params_end_00c5:
 29716 00015F57 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29717 00015F5A 4889C3                  	mov rbx, rax
 29718 00015F5D 58                      	pop rax
 29719 00015F5E C60004                  	mov byte [rax], T_closure
 29720 00015F61 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29721 00015F65 48C74009[725F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c5
 29722 00015F6D E986000000              	jmp .L_lambda_simple_end_00c5
 29723                                  .L_lambda_simple_code_00c5:	; lambda-simple body
 29724 00015F72 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29725 00015F78 740B                    	je .L_lambda_simple_arity_check_ok_00c5
 29726 00015F7A FF742410                	push qword [rsp + 8 * 2]
 29727 00015F7E 6A01                    	push 1
 29728 00015F80 E929160000              	jmp L_error_incorrect_arity_simple
 29729                                  .L_lambda_simple_arity_check_ok_00c5:
 29730 00015F85 C8000000                	enter 0, 0
 29731                                  	; preparing a tail-call
 29732 00015F89 488B4510                	mov rax, ENV
 29733 00015F8D 488B00                  	mov rax, qword [rax + 8 * 0]
 29734 00015F90 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 29735 00015F93 50                      	push rax
 29736 00015F94 488B4510                	mov rax, ENV
 29737 00015F98 488B00                  	mov rax, qword [rax + 8 * 0]
 29738 00015F9B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 29739 00015F9F 50                      	push rax
 29740 00015FA0 6A02                    	push 2	; arg count
 29741 00015FA2 488B4520                	mov rax, PARAM(0)	; param p
 29742 00015FA6 803804                  	cmp byte [rax], T_closure
 29743 00015FA9 0F859D150000            	jne L_error_non_closure
 29744 00015FAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 29745 00015FB2 FF7508                  	push qword [rbp + 8 * 1]
 29746                                   ; old ret addr
 29747 00015FB5 FF7500                  	push qword [rbp]
 29748                                   ; restore the old rbp
 29749 00015FB8 BB02000000              	mov rbx, 2
 29750 00015FBD 4883C303                	add rbx, 3
 29751 00015FC1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29752 00015FC5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29753 00015FCA 4C8D4DF8                	lea r9, [rbp - 8]
 29754 00015FCE B906000000              	mov rcx, 6
 29755                                  .L_tc_recycle_frame_loop_00f9:
 29756 00015FD3 4883F900                	cmp rcx, 0
 29757 00015FD7 7413                    	je .L_tc_recycle_frame_done_00f9
 29758 00015FD9 4D8B11                  	mov r10, qword [r9]
 29759 00015FDC 4D8910                  	mov qword [r8], r10
 29760 00015FDF 4983E808                	sub r8, 8
 29761 00015FE3 4983E908                	sub r9, 8
 29762 00015FE7 48FFC9                  	dec rcx
 29763 00015FEA EBE7                    	jmp .L_tc_recycle_frame_loop_00f9
 29764                                  .L_tc_recycle_frame_done_00f9:
 29765 00015FEC 498D6008                	lea rsp, [r8 + 8]
 29766 00015FF0 5D                      	pop rbp ; restore the old rbp
 29767 00015FF1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29768 00015FF4 C9                      	leave
 29769 00015FF5 C21800                  	ret AND_KILL_FRAME(1)
 29770                                  .L_lambda_simple_end_00c5:	; new closure is in rax
 29771 00015FF8 C9                      	leave
 29772 00015FF9 C22000                  	ret AND_KILL_FRAME(2)
 29773                                  .L_lambda_simple_end_00c4:	; new closure is in rax
 29774 00015FFC 50                      	push rax
 29775 00015FFD 6A01                    	push 1	; arg count
 29776 00015FFF 488B4520                	mov rax, PARAM(0)	; param p
 29777 00016003 803804                  	cmp byte [rax], T_closure
 29778 00016006 0F8540150000            	jne L_error_non_closure
 29779 0001600C FF7001                  	push SOB_CLOSURE_ENV(rax)
 29780 0001600F FF7508                  	push qword [rbp + 8 * 1]
 29781                                   ; old ret addr
 29782 00016012 FF7500                  	push qword [rbp]
 29783                                   ; restore the old rbp
 29784 00016015 BB01000000              	mov rbx, 1
 29785 0001601A 4883C303                	add rbx, 3
 29786 0001601E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29787 00016022 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29788 00016027 4C8D4DF8                	lea r9, [rbp - 8]
 29789 0001602B B905000000              	mov rcx, 5
 29790                                  .L_tc_recycle_frame_loop_00f8:
 29791 00016030 4883F900                	cmp rcx, 0
 29792 00016034 7413                    	je .L_tc_recycle_frame_done_00f8
 29793 00016036 4D8B11                  	mov r10, qword [r9]
 29794 00016039 4D8910                  	mov qword [r8], r10
 29795 0001603C 4983E808                	sub r8, 8
 29796 00016040 4983E908                	sub r9, 8
 29797 00016044 48FFC9                  	dec rcx
 29798 00016047 EBE7                    	jmp .L_tc_recycle_frame_loop_00f8
 29799                                  .L_tc_recycle_frame_done_00f8:
 29800 00016049 498D6008                	lea rsp, [r8 + 8]
 29801 0001604D 5D                      	pop rbp ; restore the old rbp
 29802 0001604E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29803 00016051 C9                      	leave
 29804 00016052 C21800                  	ret AND_KILL_FRAME(1)
 29805                                  .L_lambda_simple_end_00c3:	; new closure is in rax
 29806 00016055 50                      	push rax
 29807 00016056 6A01                    	push 1	; arg count
 29808 00016058 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29809 0001605D E893150000              	call malloc
 29810 00016062 50                      	push rax
 29811 00016063 BF00000000              	mov rdi, 8 * 0	; new rib
 29812 00016068 E888150000              	call malloc
 29813 0001606D 50                      	push rax
 29814 0001606E BF08000000              	mov rdi, 8 * 1	; extended env
 29815 00016073 E87D150000              	call malloc
 29816 00016078 488B7D10                	mov rdi, ENV
 29817 0001607C BE00000000              	mov rsi, 0
 29818 00016081 BA01000000              	mov rdx, 1
 29819                                  .L_lambda_simple_env_loop_00c6:	; ext_env[i + 1] <-- env[i]
 29820 00016086 4883FE00                	cmp rsi, 0
 29821 0001608A 7410                    	je .L_lambda_simple_env_end_00c6
 29822 0001608C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29823 00016090 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29824 00016094 48FFC6                  	inc rsi
 29825 00016097 48FFC2                  	inc rdx
 29826 0001609A EBEA                    	jmp .L_lambda_simple_env_loop_00c6
 29827                                  .L_lambda_simple_env_end_00c6:
 29828 0001609C 5B                      	pop rbx
 29829 0001609D BE00000000              	mov rsi, 0
 29830                                  .L_lambda_simple_params_loop_00c6:	; copy params
 29831 000160A2 4883FE00                	cmp rsi, 0
 29832 000160A6 740E                    	je .L_lambda_simple_params_end_00c6
 29833 000160A8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29834 000160AD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29835 000160B1 48FFC6                  	inc rsi
 29836 000160B4 EBEC                    	jmp .L_lambda_simple_params_loop_00c6
 29837                                  .L_lambda_simple_params_end_00c6:
 29838 000160B6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29839 000160B9 4889C3                  	mov rbx, rax
 29840 000160BC 58                      	pop rax
 29841 000160BD C60004                  	mov byte [rax], T_closure
 29842 000160C0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29843 000160C4 48C74009[D1600100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c6
 29844 000160CC E9B0000000              	jmp .L_lambda_simple_end_00c6
 29845                                  .L_lambda_simple_code_00c6:	; lambda-simple body
 29846 000160D1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29847 000160D7 740B                    	je .L_lambda_simple_arity_check_ok_00c6
 29848 000160D9 FF742410                	push qword [rsp + 8 * 2]
 29849 000160DD 6A01                    	push 1
 29850 000160DF E9CA140000              	jmp L_error_incorrect_arity_simple
 29851                                  .L_lambda_simple_arity_check_ok_00c6:
 29852 000160E4 C8000000                	enter 0, 0
 29853 000160E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29854 000160ED E803150000              	call malloc
 29855 000160F2 50                      	push rax
 29856 000160F3 BF08000000              	mov rdi, 8 * 1	; new rib
 29857 000160F8 E8F8140000              	call malloc
 29858 000160FD 50                      	push rax
 29859 000160FE BF10000000              	mov rdi, 8 * 2	; extended env
 29860 00016103 E8ED140000              	call malloc
 29861 00016108 488B7D10                	mov rdi, ENV
 29862 0001610C BE00000000              	mov rsi, 0
 29863 00016111 BA01000000              	mov rdx, 1
 29864                                  .L_lambda_simple_env_loop_00c7:	; ext_env[i + 1] <-- env[i]
 29865 00016116 4883FE01                	cmp rsi, 1
 29866 0001611A 7410                    	je .L_lambda_simple_env_end_00c7
 29867 0001611C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29868 00016120 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29869 00016124 48FFC6                  	inc rsi
 29870 00016127 48FFC2                  	inc rdx
 29871 0001612A EBEA                    	jmp .L_lambda_simple_env_loop_00c7
 29872                                  .L_lambda_simple_env_end_00c7:
 29873 0001612C 5B                      	pop rbx
 29874 0001612D BE00000000              	mov rsi, 0
 29875                                  .L_lambda_simple_params_loop_00c7:	; copy params
 29876 00016132 4883FE01                	cmp rsi, 1
 29877 00016136 740E                    	je .L_lambda_simple_params_end_00c7
 29878 00016138 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29879 0001613D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29880 00016141 48FFC6                  	inc rsi
 29881 00016144 EBEC                    	jmp .L_lambda_simple_params_loop_00c7
 29882                                  .L_lambda_simple_params_end_00c7:
 29883 00016146 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29884 00016149 4889C3                  	mov rbx, rax
 29885 0001614C 58                      	pop rax
 29886 0001614D C60004                  	mov byte [rax], T_closure
 29887 00016150 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29888 00016154 48C74009[5E610100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c7
 29889 0001615C EB1F                    	jmp .L_lambda_simple_end_00c7
 29890                                  .L_lambda_simple_code_00c7:	; lambda-simple body
 29891 0001615E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29892 00016164 740B                    	je .L_lambda_simple_arity_check_ok_00c7
 29893 00016166 FF742410                	push qword [rsp + 8 * 2]
 29894 0001616A 6A01                    	push 1
 29895 0001616C E93D140000              	jmp L_error_incorrect_arity_simple
 29896                                  .L_lambda_simple_arity_check_ok_00c7:
 29897 00016171 C8000000                	enter 0, 0
 29898 00016175 488B4520                	mov rax, PARAM(0)	; param y
 29899 00016179 C9                      	leave
 29900 0001617A C21800                  	ret AND_KILL_FRAME(1)
 29901                                  .L_lambda_simple_end_00c7:	; new closure is in rax
 29902 0001617D C9                      	leave
 29903 0001617E C21800                  	ret AND_KILL_FRAME(1)
 29904                                  .L_lambda_simple_end_00c6:	; new closure is in rax
 29905 00016181 803804                  	cmp byte [rax], T_closure
 29906 00016184 0F85C2130000            	jne L_error_non_closure
 29907 0001618A FF7001                  	push SOB_CLOSURE_ENV(rax)
 29908 0001618D FF5009                  	call SOB_CLOSURE_CODE(rax)
 29909 00016190 803804                  	cmp byte [rax], T_closure
 29910 00016193 0F85B3130000            	jne L_error_non_closure
 29911 00016199 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29912 0001619C FF5009                  	call SOB_CLOSURE_CODE(rax)
 29913 0001619F 803804                  	cmp byte [rax], T_closure
 29914 000161A2 0F85A4130000            	jne L_error_non_closure
 29915 000161A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29916 000161AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 29917                                  
 29918 000161AE 4889C7                  	mov rdi, rax
 29919 000161B1 E894160000              	call print_sexpr_if_not_void
 29920                                  	; preparing a non-tail-call
 29921 000161B6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29922 000161BB E835140000              	call malloc
 29923 000161C0 50                      	push rax
 29924 000161C1 BF00000000              	mov rdi, 8 * 0	; new rib
 29925 000161C6 E82A140000              	call malloc
 29926 000161CB 50                      	push rax
 29927 000161CC BF08000000              	mov rdi, 8 * 1	; extended env
 29928 000161D1 E81F140000              	call malloc
 29929 000161D6 488B7D10                	mov rdi, ENV
 29930 000161DA BE00000000              	mov rsi, 0
 29931 000161DF BA01000000              	mov rdx, 1
 29932                                  .L_lambda_simple_env_loop_00c8:	; ext_env[i + 1] <-- env[i]
 29933 000161E4 4883FE00                	cmp rsi, 0
 29934 000161E8 7410                    	je .L_lambda_simple_env_end_00c8
 29935 000161EA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29936 000161EE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29937 000161F2 48FFC6                  	inc rsi
 29938 000161F5 48FFC2                  	inc rdx
 29939 000161F8 EBEA                    	jmp .L_lambda_simple_env_loop_00c8
 29940                                  .L_lambda_simple_env_end_00c8:
 29941 000161FA 5B                      	pop rbx
 29942 000161FB BE00000000              	mov rsi, 0
 29943                                  .L_lambda_simple_params_loop_00c8:	; copy params
 29944 00016200 4883FE00                	cmp rsi, 0
 29945 00016204 740E                    	je .L_lambda_simple_params_end_00c8
 29946 00016206 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29947 0001620B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29948 0001620F 48FFC6                  	inc rsi
 29949 00016212 EBEC                    	jmp .L_lambda_simple_params_loop_00c8
 29950                                  .L_lambda_simple_params_end_00c8:
 29951 00016214 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29952 00016217 4889C3                  	mov rbx, rax
 29953 0001621A 58                      	pop rax
 29954 0001621B C60004                  	mov byte [rax], T_closure
 29955 0001621E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29956 00016222 48C74009[2C620100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c8
 29957 0001622A EB1F                    	jmp .L_lambda_simple_end_00c8
 29958                                  .L_lambda_simple_code_00c8:	; lambda-simple body
 29959 0001622C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29960 00016232 740B                    	je .L_lambda_simple_arity_check_ok_00c8
 29961 00016234 FF742410                	push qword [rsp + 8 * 2]
 29962 00016238 6A02                    	push 2
 29963 0001623A E96F130000              	jmp L_error_incorrect_arity_simple
 29964                                  .L_lambda_simple_arity_check_ok_00c8:
 29965 0001623F C8000000                	enter 0, 0
 29966 00016243 488B4520                	mov rax, PARAM(0)	; param x
 29967 00016247 C9                      	leave
 29968 00016248 C22000                  	ret AND_KILL_FRAME(2)
 29969                                  .L_lambda_simple_end_00c8:	; new closure is in rax
 29970 0001624B 50                      	push rax
 29971 0001624C 6A01                    	push 1	; arg count
 29972                                  	; preparing a non-tail-call
 29973 0001624E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29974 00016253 E89D130000              	call malloc
 29975 00016258 50                      	push rax
 29976 00016259 BF00000000              	mov rdi, 8 * 0	; new rib
 29977 0001625E E892130000              	call malloc
 29978 00016263 50                      	push rax
 29979 00016264 BF08000000              	mov rdi, 8 * 1	; extended env
 29980 00016269 E887130000              	call malloc
 29981 0001626E 488B7D10                	mov rdi, ENV
 29982 00016272 BE00000000              	mov rsi, 0
 29983 00016277 BA01000000              	mov rdx, 1
 29984                                  .L_lambda_simple_env_loop_00c9:	; ext_env[i + 1] <-- env[i]
 29985 0001627C 4883FE00                	cmp rsi, 0
 29986 00016280 7410                    	je .L_lambda_simple_env_end_00c9
 29987 00016282 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29988 00016286 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29989 0001628A 48FFC6                  	inc rsi
 29990 0001628D 48FFC2                  	inc rdx
 29991 00016290 EBEA                    	jmp .L_lambda_simple_env_loop_00c9
 29992                                  .L_lambda_simple_env_end_00c9:
 29993 00016292 5B                      	pop rbx
 29994 00016293 BE00000000              	mov rsi, 0
 29995                                  .L_lambda_simple_params_loop_00c9:	; copy params
 29996 00016298 4883FE00                	cmp rsi, 0
 29997 0001629C 740E                    	je .L_lambda_simple_params_end_00c9
 29998 0001629E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29999 000162A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30000 000162A7 48FFC6                  	inc rsi
 30001 000162AA EBEC                    	jmp .L_lambda_simple_params_loop_00c9
 30002                                  .L_lambda_simple_params_end_00c9:
 30003 000162AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30004 000162AF 4889C3                  	mov rbx, rax
 30005 000162B2 58                      	pop rax
 30006 000162B3 C60004                  	mov byte [rax], T_closure
 30007 000162B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30008 000162BA 48C74009[C7620100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c9
 30009 000162C2 E985000000              	jmp .L_lambda_simple_end_00c9
 30010                                  .L_lambda_simple_code_00c9:	; lambda-simple body
 30011 000162C7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30012 000162CD 740B                    	je .L_lambda_simple_arity_check_ok_00c9
 30013 000162CF FF742410                	push qword [rsp + 8 * 2]
 30014 000162D3 6A01                    	push 1
 30015 000162D5 E9D4120000              	jmp L_error_incorrect_arity_simple
 30016                                  .L_lambda_simple_arity_check_ok_00c9:
 30017 000162DA C8000000                	enter 0, 0
 30018                                  	; preparing a tail-call
 30019 000162DE 48B8-                   	mov rax, L_constants + 2
 30019 000162E0 [0200000000000000] 
 30020 000162E8 50                      	push rax
 30021 000162E9 48B8-                   	mov rax, L_constants + 3
 30021 000162EB [0300000000000000] 
 30022 000162F3 50                      	push rax
 30023 000162F4 6A02                    	push 2	; arg count
 30024 000162F6 488B4520                	mov rax, PARAM(0)	; param z
 30025 000162FA 803804                  	cmp byte [rax], T_closure
 30026 000162FD 0F8549120000            	jne L_error_non_closure
 30027 00016303 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30028 00016306 FF7508                  	push qword [rbp + 8 * 1]
 30029                                   ; old ret addr
 30030 00016309 FF7500                  	push qword [rbp]
 30031                                   ; restore the old rbp
 30032 0001630C BB02000000              	mov rbx, 2
 30033 00016311 4883C303                	add rbx, 3
 30034 00016315 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30035 00016319 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30036 0001631E 4C8D4DF8                	lea r9, [rbp - 8]
 30037 00016322 B906000000              	mov rcx, 6
 30038                                  .L_tc_recycle_frame_loop_00fa:
 30039 00016327 4883F900                	cmp rcx, 0
 30040 0001632B 7413                    	je .L_tc_recycle_frame_done_00fa
 30041 0001632D 4D8B11                  	mov r10, qword [r9]
 30042 00016330 4D8910                  	mov qword [r8], r10
 30043 00016333 4983E808                	sub r8, 8
 30044 00016337 4983E908                	sub r9, 8
 30045 0001633B 48FFC9                  	dec rcx
 30046 0001633E EBE7                    	jmp .L_tc_recycle_frame_loop_00fa
 30047                                  .L_tc_recycle_frame_done_00fa:
 30048 00016340 498D6008                	lea rsp, [r8 + 8]
 30049 00016344 5D                      	pop rbp ; restore the old rbp
 30050 00016345 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30051 00016348 C9                      	leave
 30052 00016349 C21800                  	ret AND_KILL_FRAME(1)
 30053                                  .L_lambda_simple_end_00c9:	; new closure is in rax
 30054 0001634C 50                      	push rax
 30055 0001634D 6A01                    	push 1	; arg count
 30056                                  	; preparing a non-tail-call
 30057 0001634F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30058 00016354 E89C120000              	call malloc
 30059 00016359 50                      	push rax
 30060 0001635A BF00000000              	mov rdi, 8 * 0	; new rib
 30061 0001635F E891120000              	call malloc
 30062 00016364 50                      	push rax
 30063 00016365 BF08000000              	mov rdi, 8 * 1	; extended env
 30064 0001636A E886120000              	call malloc
 30065 0001636F 488B7D10                	mov rdi, ENV
 30066 00016373 BE00000000              	mov rsi, 0
 30067 00016378 BA01000000              	mov rdx, 1
 30068                                  .L_lambda_simple_env_loop_00ca:	; ext_env[i + 1] <-- env[i]
 30069 0001637D 4883FE00                	cmp rsi, 0
 30070 00016381 7410                    	je .L_lambda_simple_env_end_00ca
 30071 00016383 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30072 00016387 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30073 0001638B 48FFC6                  	inc rsi
 30074 0001638E 48FFC2                  	inc rdx
 30075 00016391 EBEA                    	jmp .L_lambda_simple_env_loop_00ca
 30076                                  .L_lambda_simple_env_end_00ca:
 30077 00016393 5B                      	pop rbx
 30078 00016394 BE00000000              	mov rsi, 0
 30079                                  .L_lambda_simple_params_loop_00ca:	; copy params
 30080 00016399 4883FE00                	cmp rsi, 0
 30081 0001639D 740E                    	je .L_lambda_simple_params_end_00ca
 30082 0001639F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30083 000163A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30084 000163A8 48FFC6                  	inc rsi
 30085 000163AB EBEC                    	jmp .L_lambda_simple_params_loop_00ca
 30086                                  .L_lambda_simple_params_end_00ca:
 30087 000163AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30088 000163B0 4889C3                  	mov rbx, rax
 30089 000163B3 58                      	pop rax
 30090 000163B4 C60004                  	mov byte [rax], T_closure
 30091 000163B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30092 000163BB 48C74009[C8630100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ca
 30093 000163C3 E903020000              	jmp .L_lambda_simple_end_00ca
 30094                                  .L_lambda_simple_code_00ca:	; lambda-simple body
 30095 000163C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30096 000163CE 740B                    	je .L_lambda_simple_arity_check_ok_00ca
 30097 000163D0 FF742410                	push qword [rsp + 8 * 2]
 30098 000163D4 6A01                    	push 1
 30099 000163D6 E9D3110000              	jmp L_error_incorrect_arity_simple
 30100                                  .L_lambda_simple_arity_check_ok_00ca:
 30101 000163DB C8000000                	enter 0, 0
 30102                                  	; preparing a tail-call
 30103 000163DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30104 000163E4 E80C120000              	call malloc
 30105 000163E9 50                      	push rax
 30106 000163EA BF08000000              	mov rdi, 8 * 1	; new rib
 30107 000163EF E801120000              	call malloc
 30108 000163F4 50                      	push rax
 30109 000163F5 BF10000000              	mov rdi, 8 * 2	; extended env
 30110 000163FA E8F6110000              	call malloc
 30111 000163FF 488B7D10                	mov rdi, ENV
 30112 00016403 BE00000000              	mov rsi, 0
 30113 00016408 BA01000000              	mov rdx, 1
 30114                                  .L_lambda_simple_env_loop_00cb:	; ext_env[i + 1] <-- env[i]
 30115 0001640D 4883FE01                	cmp rsi, 1
 30116 00016411 7410                    	je .L_lambda_simple_env_end_00cb
 30117 00016413 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30118 00016417 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30119 0001641B 48FFC6                  	inc rsi
 30120 0001641E 48FFC2                  	inc rdx
 30121 00016421 EBEA                    	jmp .L_lambda_simple_env_loop_00cb
 30122                                  .L_lambda_simple_env_end_00cb:
 30123 00016423 5B                      	pop rbx
 30124 00016424 BE00000000              	mov rsi, 0
 30125                                  .L_lambda_simple_params_loop_00cb:	; copy params
 30126 00016429 4883FE01                	cmp rsi, 1
 30127 0001642D 740E                    	je .L_lambda_simple_params_end_00cb
 30128 0001642F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30129 00016434 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30130 00016438 48FFC6                  	inc rsi
 30131 0001643B EBEC                    	jmp .L_lambda_simple_params_loop_00cb
 30132                                  .L_lambda_simple_params_end_00cb:
 30133 0001643D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30134 00016440 4889C3                  	mov rbx, rax
 30135 00016443 58                      	pop rax
 30136 00016444 C60004                  	mov byte [rax], T_closure
 30137 00016447 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30138 0001644B 48C74009[58640100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cb
 30139 00016453 E91A010000              	jmp .L_lambda_simple_end_00cb
 30140                                  .L_lambda_simple_code_00cb:	; lambda-simple body
 30141 00016458 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30142 0001645E 740B                    	je .L_lambda_simple_arity_check_ok_00cb
 30143 00016460 FF742410                	push qword [rsp + 8 * 2]
 30144 00016464 6A02                    	push 2
 30145 00016466 E943110000              	jmp L_error_incorrect_arity_simple
 30146                                  .L_lambda_simple_arity_check_ok_00cb:
 30147 0001646B C8000000                	enter 0, 0
 30148 0001646F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30149 00016474 E87C110000              	call malloc
 30150 00016479 50                      	push rax
 30151 0001647A BF10000000              	mov rdi, 8 * 2	; new rib
 30152 0001647F E871110000              	call malloc
 30153 00016484 50                      	push rax
 30154 00016485 BF18000000              	mov rdi, 8 * 3	; extended env
 30155 0001648A E866110000              	call malloc
 30156 0001648F 488B7D10                	mov rdi, ENV
 30157 00016493 BE00000000              	mov rsi, 0
 30158 00016498 BA01000000              	mov rdx, 1
 30159                                  .L_lambda_simple_env_loop_00cc:	; ext_env[i + 1] <-- env[i]
 30160 0001649D 4883FE02                	cmp rsi, 2
 30161 000164A1 7410                    	je .L_lambda_simple_env_end_00cc
 30162 000164A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30163 000164A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30164 000164AB 48FFC6                  	inc rsi
 30165 000164AE 48FFC2                  	inc rdx
 30166 000164B1 EBEA                    	jmp .L_lambda_simple_env_loop_00cc
 30167                                  .L_lambda_simple_env_end_00cc:
 30168 000164B3 5B                      	pop rbx
 30169 000164B4 BE00000000              	mov rsi, 0
 30170                                  .L_lambda_simple_params_loop_00cc:	; copy params
 30171 000164B9 4883FE02                	cmp rsi, 2
 30172 000164BD 740E                    	je .L_lambda_simple_params_end_00cc
 30173 000164BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30174 000164C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30175 000164C8 48FFC6                  	inc rsi
 30176 000164CB EBEC                    	jmp .L_lambda_simple_params_loop_00cc
 30177                                  .L_lambda_simple_params_end_00cc:
 30178 000164CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30179 000164D0 4889C3                  	mov rbx, rax
 30180 000164D3 58                      	pop rax
 30181 000164D4 C60004                  	mov byte [rax], T_closure
 30182 000164D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30183 000164DB 48C74009[E8640100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cc
 30184 000164E3 E986000000              	jmp .L_lambda_simple_end_00cc
 30185                                  .L_lambda_simple_code_00cc:	; lambda-simple body
 30186 000164E8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30187 000164EE 740B                    	je .L_lambda_simple_arity_check_ok_00cc
 30188 000164F0 FF742410                	push qword [rsp + 8 * 2]
 30189 000164F4 6A01                    	push 1
 30190 000164F6 E9B3100000              	jmp L_error_incorrect_arity_simple
 30191                                  .L_lambda_simple_arity_check_ok_00cc:
 30192 000164FB C8000000                	enter 0, 0
 30193                                  	; preparing a tail-call
 30194 000164FF 488B4510                	mov rax, ENV
 30195 00016503 488B00                  	mov rax, qword [rax + 8 * 0]
 30196 00016506 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30197 00016509 50                      	push rax
 30198 0001650A 488B4510                	mov rax, ENV
 30199 0001650E 488B00                  	mov rax, qword [rax + 8 * 0]
 30200 00016511 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 30201 00016515 50                      	push rax
 30202 00016516 6A02                    	push 2	; arg count
 30203 00016518 488B4520                	mov rax, PARAM(0)	; param p
 30204 0001651C 803804                  	cmp byte [rax], T_closure
 30205 0001651F 0F8527100000            	jne L_error_non_closure
 30206 00016525 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30207 00016528 FF7508                  	push qword [rbp + 8 * 1]
 30208                                   ; old ret addr
 30209 0001652B FF7500                  	push qword [rbp]
 30210                                   ; restore the old rbp
 30211 0001652E BB02000000              	mov rbx, 2
 30212 00016533 4883C303                	add rbx, 3
 30213 00016537 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30214 0001653B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30215 00016540 4C8D4DF8                	lea r9, [rbp - 8]
 30216 00016544 B906000000              	mov rcx, 6
 30217                                  .L_tc_recycle_frame_loop_00fc:
 30218 00016549 4883F900                	cmp rcx, 0
 30219 0001654D 7413                    	je .L_tc_recycle_frame_done_00fc
 30220 0001654F 4D8B11                  	mov r10, qword [r9]
 30221 00016552 4D8910                  	mov qword [r8], r10
 30222 00016555 4983E808                	sub r8, 8
 30223 00016559 4983E908                	sub r9, 8
 30224 0001655D 48FFC9                  	dec rcx
 30225 00016560 EBE7                    	jmp .L_tc_recycle_frame_loop_00fc
 30226                                  .L_tc_recycle_frame_done_00fc:
 30227 00016562 498D6008                	lea rsp, [r8 + 8]
 30228 00016566 5D                      	pop rbp ; restore the old rbp
 30229 00016567 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30230 0001656A C9                      	leave
 30231 0001656B C21800                  	ret AND_KILL_FRAME(1)
 30232                                  .L_lambda_simple_end_00cc:	; new closure is in rax
 30233 0001656E C9                      	leave
 30234 0001656F C22000                  	ret AND_KILL_FRAME(2)
 30235                                  .L_lambda_simple_end_00cb:	; new closure is in rax
 30236 00016572 50                      	push rax
 30237 00016573 6A01                    	push 1	; arg count
 30238 00016575 488B4520                	mov rax, PARAM(0)	; param p
 30239 00016579 803804                  	cmp byte [rax], T_closure
 30240 0001657C 0F85CA0F0000            	jne L_error_non_closure
 30241 00016582 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30242 00016585 FF7508                  	push qword [rbp + 8 * 1]
 30243                                   ; old ret addr
 30244 00016588 FF7500                  	push qword [rbp]
 30245                                   ; restore the old rbp
 30246 0001658B BB01000000              	mov rbx, 1
 30247 00016590 4883C303                	add rbx, 3
 30248 00016594 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30249 00016598 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30250 0001659D 4C8D4DF8                	lea r9, [rbp - 8]
 30251 000165A1 B905000000              	mov rcx, 5
 30252                                  .L_tc_recycle_frame_loop_00fb:
 30253 000165A6 4883F900                	cmp rcx, 0
 30254 000165AA 7413                    	je .L_tc_recycle_frame_done_00fb
 30255 000165AC 4D8B11                  	mov r10, qword [r9]
 30256 000165AF 4D8910                  	mov qword [r8], r10
 30257 000165B2 4983E808                	sub r8, 8
 30258 000165B6 4983E908                	sub r9, 8
 30259 000165BA 48FFC9                  	dec rcx
 30260 000165BD EBE7                    	jmp .L_tc_recycle_frame_loop_00fb
 30261                                  .L_tc_recycle_frame_done_00fb:
 30262 000165BF 498D6008                	lea rsp, [r8 + 8]
 30263 000165C3 5D                      	pop rbp ; restore the old rbp
 30264 000165C4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30265 000165C7 C9                      	leave
 30266 000165C8 C21800                  	ret AND_KILL_FRAME(1)
 30267                                  .L_lambda_simple_end_00ca:	; new closure is in rax
 30268 000165CB 50                      	push rax
 30269 000165CC 6A01                    	push 1	; arg count
 30270 000165CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30271 000165D3 E81D100000              	call malloc
 30272 000165D8 50                      	push rax
 30273 000165D9 BF00000000              	mov rdi, 8 * 0	; new rib
 30274 000165DE E812100000              	call malloc
 30275 000165E3 50                      	push rax
 30276 000165E4 BF08000000              	mov rdi, 8 * 1	; extended env
 30277 000165E9 E807100000              	call malloc
 30278 000165EE 488B7D10                	mov rdi, ENV
 30279 000165F2 BE00000000              	mov rsi, 0
 30280 000165F7 BA01000000              	mov rdx, 1
 30281                                  .L_lambda_simple_env_loop_00cd:	; ext_env[i + 1] <-- env[i]
 30282 000165FC 4883FE00                	cmp rsi, 0
 30283 00016600 7410                    	je .L_lambda_simple_env_end_00cd
 30284 00016602 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30285 00016606 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30286 0001660A 48FFC6                  	inc rsi
 30287 0001660D 48FFC2                  	inc rdx
 30288 00016610 EBEA                    	jmp .L_lambda_simple_env_loop_00cd
 30289                                  .L_lambda_simple_env_end_00cd:
 30290 00016612 5B                      	pop rbx
 30291 00016613 BE00000000              	mov rsi, 0
 30292                                  .L_lambda_simple_params_loop_00cd:	; copy params
 30293 00016618 4883FE00                	cmp rsi, 0
 30294 0001661C 740E                    	je .L_lambda_simple_params_end_00cd
 30295 0001661E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30296 00016623 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30297 00016627 48FFC6                  	inc rsi
 30298 0001662A EBEC                    	jmp .L_lambda_simple_params_loop_00cd
 30299                                  .L_lambda_simple_params_end_00cd:
 30300 0001662C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30301 0001662F 4889C3                  	mov rbx, rax
 30302 00016632 58                      	pop rax
 30303 00016633 C60004                  	mov byte [rax], T_closure
 30304 00016636 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30305 0001663A 48C74009[47660100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cd
 30306 00016642 E90B010000              	jmp .L_lambda_simple_end_00cd
 30307                                  .L_lambda_simple_code_00cd:	; lambda-simple body
 30308 00016647 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30309 0001664D 740B                    	je .L_lambda_simple_arity_check_ok_00cd
 30310 0001664F FF742410                	push qword [rsp + 8 * 2]
 30311 00016653 6A01                    	push 1
 30312 00016655 E9540F0000              	jmp L_error_incorrect_arity_simple
 30313                                  .L_lambda_simple_arity_check_ok_00cd:
 30314 0001665A C8000000                	enter 0, 0
 30315 0001665E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30316 00016663 E88D0F0000              	call malloc
 30317 00016668 50                      	push rax
 30318 00016669 BF08000000              	mov rdi, 8 * 1	; new rib
 30319 0001666E E8820F0000              	call malloc
 30320 00016673 50                      	push rax
 30321 00016674 BF10000000              	mov rdi, 8 * 2	; extended env
 30322 00016679 E8770F0000              	call malloc
 30323 0001667E 488B7D10                	mov rdi, ENV
 30324 00016682 BE00000000              	mov rsi, 0
 30325 00016687 BA01000000              	mov rdx, 1
 30326                                  .L_lambda_simple_env_loop_00ce:	; ext_env[i + 1] <-- env[i]
 30327 0001668C 4883FE01                	cmp rsi, 1
 30328 00016690 7410                    	je .L_lambda_simple_env_end_00ce
 30329 00016692 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30330 00016696 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30331 0001669A 48FFC6                  	inc rsi
 30332 0001669D 48FFC2                  	inc rdx
 30333 000166A0 EBEA                    	jmp .L_lambda_simple_env_loop_00ce
 30334                                  .L_lambda_simple_env_end_00ce:
 30335 000166A2 5B                      	pop rbx
 30336 000166A3 BE00000000              	mov rsi, 0
 30337                                  .L_lambda_simple_params_loop_00ce:	; copy params
 30338 000166A8 4883FE01                	cmp rsi, 1
 30339 000166AC 740E                    	je .L_lambda_simple_params_end_00ce
 30340 000166AE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30341 000166B3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30342 000166B7 48FFC6                  	inc rsi
 30343 000166BA EBEC                    	jmp .L_lambda_simple_params_loop_00ce
 30344                                  .L_lambda_simple_params_end_00ce:
 30345 000166BC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30346 000166BF 4889C3                  	mov rbx, rax
 30347 000166C2 58                      	pop rax
 30348 000166C3 C60004                  	mov byte [rax], T_closure
 30349 000166C6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30350 000166CA 48C74009[D4660100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ce
 30351 000166D2 EB7A                    	jmp .L_lambda_simple_end_00ce
 30352                                  .L_lambda_simple_code_00ce:	; lambda-simple body
 30353 000166D4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30354 000166DA 740B                    	je .L_lambda_simple_arity_check_ok_00ce
 30355 000166DC FF742410                	push qword [rsp + 8 * 2]
 30356 000166E0 6A01                    	push 1
 30357 000166E2 E9C70E0000              	jmp L_error_incorrect_arity_simple
 30358                                  .L_lambda_simple_arity_check_ok_00ce:
 30359 000166E7 C8000000                	enter 0, 0
 30360                                  	; preparing a tail-call
 30361 000166EB 488B4520                	mov rax, PARAM(0)	; param y
 30362 000166EF 50                      	push rax
 30363 000166F0 6A01                    	push 1	; arg count
 30364 000166F2 488B4510                	mov rax, ENV
 30365 000166F6 488B00                  	mov rax, qword [rax + 8 * 0]
 30366 000166F9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30367 000166FC 803804                  	cmp byte [rax], T_closure
 30368 000166FF 0F85470E0000            	jne L_error_non_closure
 30369 00016705 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30370 00016708 FF7508                  	push qword [rbp + 8 * 1]
 30371                                   ; old ret addr
 30372 0001670B FF7500                  	push qword [rbp]
 30373                                   ; restore the old rbp
 30374 0001670E BB01000000              	mov rbx, 1
 30375 00016713 4883C303                	add rbx, 3
 30376 00016717 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30377 0001671B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30378 00016720 4C8D4DF8                	lea r9, [rbp - 8]
 30379 00016724 B905000000              	mov rcx, 5
 30380                                  .L_tc_recycle_frame_loop_00fd:
 30381 00016729 4883F900                	cmp rcx, 0
 30382 0001672D 7413                    	je .L_tc_recycle_frame_done_00fd
 30383 0001672F 4D8B11                  	mov r10, qword [r9]
 30384 00016732 4D8910                  	mov qword [r8], r10
 30385 00016735 4983E808                	sub r8, 8
 30386 00016739 4983E908                	sub r9, 8
 30387 0001673D 48FFC9                  	dec rcx
 30388 00016740 EBE7                    	jmp .L_tc_recycle_frame_loop_00fd
 30389                                  .L_tc_recycle_frame_done_00fd:
 30390 00016742 498D6008                	lea rsp, [r8 + 8]
 30391 00016746 5D                      	pop rbp ; restore the old rbp
 30392 00016747 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30393 0001674A C9                      	leave
 30394 0001674B C21800                  	ret AND_KILL_FRAME(1)
 30395                                  .L_lambda_simple_end_00ce:	; new closure is in rax
 30396 0001674E C9                      	leave
 30397 0001674F C21800                  	ret AND_KILL_FRAME(1)
 30398                                  .L_lambda_simple_end_00cd:	; new closure is in rax
 30399 00016752 803804                  	cmp byte [rax], T_closure
 30400 00016755 0F85F10D0000            	jne L_error_non_closure
 30401 0001675B FF7001                  	push SOB_CLOSURE_ENV(rax)
 30402 0001675E FF5009                  	call SOB_CLOSURE_CODE(rax)
 30403 00016761 803804                  	cmp byte [rax], T_closure
 30404 00016764 0F85E20D0000            	jne L_error_non_closure
 30405 0001676A FF7001                  	push SOB_CLOSURE_ENV(rax)
 30406 0001676D FF5009                  	call SOB_CLOSURE_CODE(rax)
 30407 00016770 803804                  	cmp byte [rax], T_closure
 30408 00016773 0F85D30D0000            	jne L_error_non_closure
 30409 00016779 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30410 0001677C FF5009                  	call SOB_CLOSURE_CODE(rax)
 30411                                  
 30412 0001677F 4889C7                  	mov rdi, rax
 30413 00016782 E8C3100000              	call print_sexpr_if_not_void
 30414                                  	; preparing a non-tail-call
 30415 00016787 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30416 0001678C E8640E0000              	call malloc
 30417 00016791 50                      	push rax
 30418 00016792 BF00000000              	mov rdi, 8 * 0	; new rib
 30419 00016797 E8590E0000              	call malloc
 30420 0001679C 50                      	push rax
 30421 0001679D BF08000000              	mov rdi, 8 * 1	; extended env
 30422 000167A2 E84E0E0000              	call malloc
 30423 000167A7 488B7D10                	mov rdi, ENV
 30424 000167AB BE00000000              	mov rsi, 0
 30425 000167B0 BA01000000              	mov rdx, 1
 30426                                  .L_lambda_simple_env_loop_00cf:	; ext_env[i + 1] <-- env[i]
 30427 000167B5 4883FE00                	cmp rsi, 0
 30428 000167B9 7410                    	je .L_lambda_simple_env_end_00cf
 30429 000167BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30430 000167BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30431 000167C3 48FFC6                  	inc rsi
 30432 000167C6 48FFC2                  	inc rdx
 30433 000167C9 EBEA                    	jmp .L_lambda_simple_env_loop_00cf
 30434                                  .L_lambda_simple_env_end_00cf:
 30435 000167CB 5B                      	pop rbx
 30436 000167CC BE00000000              	mov rsi, 0
 30437                                  .L_lambda_simple_params_loop_00cf:	; copy params
 30438 000167D1 4883FE00                	cmp rsi, 0
 30439 000167D5 740E                    	je .L_lambda_simple_params_end_00cf
 30440 000167D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30441 000167DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30442 000167E0 48FFC6                  	inc rsi
 30443 000167E3 EBEC                    	jmp .L_lambda_simple_params_loop_00cf
 30444                                  .L_lambda_simple_params_end_00cf:
 30445 000167E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30446 000167E8 4889C3                  	mov rbx, rax
 30447 000167EB 58                      	pop rax
 30448 000167EC C60004                  	mov byte [rax], T_closure
 30449 000167EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30450 000167F3 48C74009[FD670100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cf
 30451 000167FB EB1F                    	jmp .L_lambda_simple_end_00cf
 30452                                  .L_lambda_simple_code_00cf:	; lambda-simple body
 30453 000167FD 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30454 00016803 740B                    	je .L_lambda_simple_arity_check_ok_00cf
 30455 00016805 FF742410                	push qword [rsp + 8 * 2]
 30456 00016809 6A02                    	push 2
 30457 0001680B E99E0D0000              	jmp L_error_incorrect_arity_simple
 30458                                  .L_lambda_simple_arity_check_ok_00cf:
 30459 00016810 C8000000                	enter 0, 0
 30460 00016814 488B4520                	mov rax, PARAM(0)	; param x
 30461 00016818 C9                      	leave
 30462 00016819 C22000                  	ret AND_KILL_FRAME(2)
 30463                                  .L_lambda_simple_end_00cf:	; new closure is in rax
 30464 0001681C 50                      	push rax
 30465 0001681D 6A01                    	push 1	; arg count
 30466                                  	; preparing a non-tail-call
 30467 0001681F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30468 00016824 E8CC0D0000              	call malloc
 30469 00016829 50                      	push rax
 30470 0001682A BF00000000              	mov rdi, 8 * 0	; new rib
 30471 0001682F E8C10D0000              	call malloc
 30472 00016834 50                      	push rax
 30473 00016835 BF08000000              	mov rdi, 8 * 1	; extended env
 30474 0001683A E8B60D0000              	call malloc
 30475 0001683F 488B7D10                	mov rdi, ENV
 30476 00016843 BE00000000              	mov rsi, 0
 30477 00016848 BA01000000              	mov rdx, 1
 30478                                  .L_lambda_simple_env_loop_00d0:	; ext_env[i + 1] <-- env[i]
 30479 0001684D 4883FE00                	cmp rsi, 0
 30480 00016851 7410                    	je .L_lambda_simple_env_end_00d0
 30481 00016853 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30482 00016857 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30483 0001685B 48FFC6                  	inc rsi
 30484 0001685E 48FFC2                  	inc rdx
 30485 00016861 EBEA                    	jmp .L_lambda_simple_env_loop_00d0
 30486                                  .L_lambda_simple_env_end_00d0:
 30487 00016863 5B                      	pop rbx
 30488 00016864 BE00000000              	mov rsi, 0
 30489                                  .L_lambda_simple_params_loop_00d0:	; copy params
 30490 00016869 4883FE00                	cmp rsi, 0
 30491 0001686D 740E                    	je .L_lambda_simple_params_end_00d0
 30492 0001686F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30493 00016874 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30494 00016878 48FFC6                  	inc rsi
 30495 0001687B EBEC                    	jmp .L_lambda_simple_params_loop_00d0
 30496                                  .L_lambda_simple_params_end_00d0:
 30497 0001687D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30498 00016880 4889C3                  	mov rbx, rax
 30499 00016883 58                      	pop rax
 30500 00016884 C60004                  	mov byte [rax], T_closure
 30501 00016887 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30502 0001688B 48C74009[98680100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d0
 30503 00016893 E985000000              	jmp .L_lambda_simple_end_00d0
 30504                                  .L_lambda_simple_code_00d0:	; lambda-simple body
 30505 00016898 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30506 0001689E 740B                    	je .L_lambda_simple_arity_check_ok_00d0
 30507 000168A0 FF742410                	push qword [rsp + 8 * 2]
 30508 000168A4 6A01                    	push 1
 30509 000168A6 E9030D0000              	jmp L_error_incorrect_arity_simple
 30510                                  .L_lambda_simple_arity_check_ok_00d0:
 30511 000168AB C8000000                	enter 0, 0
 30512                                  	; preparing a tail-call
 30513 000168AF 48B8-                   	mov rax, L_constants + 2
 30513 000168B1 [0200000000000000] 
 30514 000168B9 50                      	push rax
 30515 000168BA 48B8-                   	mov rax, L_constants + 3
 30515 000168BC [0300000000000000] 
 30516 000168C4 50                      	push rax
 30517 000168C5 6A02                    	push 2	; arg count
 30518 000168C7 488B4520                	mov rax, PARAM(0)	; param z
 30519 000168CB 803804                  	cmp byte [rax], T_closure
 30520 000168CE 0F85780C0000            	jne L_error_non_closure
 30521 000168D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30522 000168D7 FF7508                  	push qword [rbp + 8 * 1]
 30523                                   ; old ret addr
 30524 000168DA FF7500                  	push qword [rbp]
 30525                                   ; restore the old rbp
 30526 000168DD BB02000000              	mov rbx, 2
 30527 000168E2 4883C303                	add rbx, 3
 30528 000168E6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30529 000168EA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30530 000168EF 4C8D4DF8                	lea r9, [rbp - 8]
 30531 000168F3 B906000000              	mov rcx, 6
 30532                                  .L_tc_recycle_frame_loop_00fe:
 30533 000168F8 4883F900                	cmp rcx, 0
 30534 000168FC 7413                    	je .L_tc_recycle_frame_done_00fe
 30535 000168FE 4D8B11                  	mov r10, qword [r9]
 30536 00016901 4D8910                  	mov qword [r8], r10
 30537 00016904 4983E808                	sub r8, 8
 30538 00016908 4983E908                	sub r9, 8
 30539 0001690C 48FFC9                  	dec rcx
 30540 0001690F EBE7                    	jmp .L_tc_recycle_frame_loop_00fe
 30541                                  .L_tc_recycle_frame_done_00fe:
 30542 00016911 498D6008                	lea rsp, [r8 + 8]
 30543 00016915 5D                      	pop rbp ; restore the old rbp
 30544 00016916 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30545 00016919 C9                      	leave
 30546 0001691A C21800                  	ret AND_KILL_FRAME(1)
 30547                                  .L_lambda_simple_end_00d0:	; new closure is in rax
 30548 0001691D 50                      	push rax
 30549 0001691E 6A01                    	push 1	; arg count
 30550                                  	; preparing a non-tail-call
 30551 00016920 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30552 00016925 E8CB0C0000              	call malloc
 30553 0001692A 50                      	push rax
 30554 0001692B BF00000000              	mov rdi, 8 * 0	; new rib
 30555 00016930 E8C00C0000              	call malloc
 30556 00016935 50                      	push rax
 30557 00016936 BF08000000              	mov rdi, 8 * 1	; extended env
 30558 0001693B E8B50C0000              	call malloc
 30559 00016940 488B7D10                	mov rdi, ENV
 30560 00016944 BE00000000              	mov rsi, 0
 30561 00016949 BA01000000              	mov rdx, 1
 30562                                  .L_lambda_simple_env_loop_00d1:	; ext_env[i + 1] <-- env[i]
 30563 0001694E 4883FE00                	cmp rsi, 0
 30564 00016952 7410                    	je .L_lambda_simple_env_end_00d1
 30565 00016954 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30566 00016958 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30567 0001695C 48FFC6                  	inc rsi
 30568 0001695F 48FFC2                  	inc rdx
 30569 00016962 EBEA                    	jmp .L_lambda_simple_env_loop_00d1
 30570                                  .L_lambda_simple_env_end_00d1:
 30571 00016964 5B                      	pop rbx
 30572 00016965 BE00000000              	mov rsi, 0
 30573                                  .L_lambda_simple_params_loop_00d1:	; copy params
 30574 0001696A 4883FE00                	cmp rsi, 0
 30575 0001696E 740E                    	je .L_lambda_simple_params_end_00d1
 30576 00016970 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30577 00016975 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30578 00016979 48FFC6                  	inc rsi
 30579 0001697C EBEC                    	jmp .L_lambda_simple_params_loop_00d1
 30580                                  .L_lambda_simple_params_end_00d1:
 30581 0001697E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30582 00016981 4889C3                  	mov rbx, rax
 30583 00016984 58                      	pop rax
 30584 00016985 C60004                  	mov byte [rax], T_closure
 30585 00016988 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30586 0001698C 48C74009[99690100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d1
 30587 00016994 E903020000              	jmp .L_lambda_simple_end_00d1
 30588                                  .L_lambda_simple_code_00d1:	; lambda-simple body
 30589 00016999 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30590 0001699F 740B                    	je .L_lambda_simple_arity_check_ok_00d1
 30591 000169A1 FF742410                	push qword [rsp + 8 * 2]
 30592 000169A5 6A01                    	push 1
 30593 000169A7 E9020C0000              	jmp L_error_incorrect_arity_simple
 30594                                  .L_lambda_simple_arity_check_ok_00d1:
 30595 000169AC C8000000                	enter 0, 0
 30596                                  	; preparing a tail-call
 30597 000169B0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30598 000169B5 E83B0C0000              	call malloc
 30599 000169BA 50                      	push rax
 30600 000169BB BF08000000              	mov rdi, 8 * 1	; new rib
 30601 000169C0 E8300C0000              	call malloc
 30602 000169C5 50                      	push rax
 30603 000169C6 BF10000000              	mov rdi, 8 * 2	; extended env
 30604 000169CB E8250C0000              	call malloc
 30605 000169D0 488B7D10                	mov rdi, ENV
 30606 000169D4 BE00000000              	mov rsi, 0
 30607 000169D9 BA01000000              	mov rdx, 1
 30608                                  .L_lambda_simple_env_loop_00d2:	; ext_env[i + 1] <-- env[i]
 30609 000169DE 4883FE01                	cmp rsi, 1
 30610 000169E2 7410                    	je .L_lambda_simple_env_end_00d2
 30611 000169E4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30612 000169E8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30613 000169EC 48FFC6                  	inc rsi
 30614 000169EF 48FFC2                  	inc rdx
 30615 000169F2 EBEA                    	jmp .L_lambda_simple_env_loop_00d2
 30616                                  .L_lambda_simple_env_end_00d2:
 30617 000169F4 5B                      	pop rbx
 30618 000169F5 BE00000000              	mov rsi, 0
 30619                                  .L_lambda_simple_params_loop_00d2:	; copy params
 30620 000169FA 4883FE01                	cmp rsi, 1
 30621 000169FE 740E                    	je .L_lambda_simple_params_end_00d2
 30622 00016A00 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30623 00016A05 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30624 00016A09 48FFC6                  	inc rsi
 30625 00016A0C EBEC                    	jmp .L_lambda_simple_params_loop_00d2
 30626                                  .L_lambda_simple_params_end_00d2:
 30627 00016A0E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30628 00016A11 4889C3                  	mov rbx, rax
 30629 00016A14 58                      	pop rax
 30630 00016A15 C60004                  	mov byte [rax], T_closure
 30631 00016A18 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30632 00016A1C 48C74009[296A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d2
 30633 00016A24 E91A010000              	jmp .L_lambda_simple_end_00d2
 30634                                  .L_lambda_simple_code_00d2:	; lambda-simple body
 30635 00016A29 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30636 00016A2F 740B                    	je .L_lambda_simple_arity_check_ok_00d2
 30637 00016A31 FF742410                	push qword [rsp + 8 * 2]
 30638 00016A35 6A02                    	push 2
 30639 00016A37 E9720B0000              	jmp L_error_incorrect_arity_simple
 30640                                  .L_lambda_simple_arity_check_ok_00d2:
 30641 00016A3C C8000000                	enter 0, 0
 30642 00016A40 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30643 00016A45 E8AB0B0000              	call malloc
 30644 00016A4A 50                      	push rax
 30645 00016A4B BF10000000              	mov rdi, 8 * 2	; new rib
 30646 00016A50 E8A00B0000              	call malloc
 30647 00016A55 50                      	push rax
 30648 00016A56 BF18000000              	mov rdi, 8 * 3	; extended env
 30649 00016A5B E8950B0000              	call malloc
 30650 00016A60 488B7D10                	mov rdi, ENV
 30651 00016A64 BE00000000              	mov rsi, 0
 30652 00016A69 BA01000000              	mov rdx, 1
 30653                                  .L_lambda_simple_env_loop_00d3:	; ext_env[i + 1] <-- env[i]
 30654 00016A6E 4883FE02                	cmp rsi, 2
 30655 00016A72 7410                    	je .L_lambda_simple_env_end_00d3
 30656 00016A74 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30657 00016A78 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30658 00016A7C 48FFC6                  	inc rsi
 30659 00016A7F 48FFC2                  	inc rdx
 30660 00016A82 EBEA                    	jmp .L_lambda_simple_env_loop_00d3
 30661                                  .L_lambda_simple_env_end_00d3:
 30662 00016A84 5B                      	pop rbx
 30663 00016A85 BE00000000              	mov rsi, 0
 30664                                  .L_lambda_simple_params_loop_00d3:	; copy params
 30665 00016A8A 4883FE02                	cmp rsi, 2
 30666 00016A8E 740E                    	je .L_lambda_simple_params_end_00d3
 30667 00016A90 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30668 00016A95 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30669 00016A99 48FFC6                  	inc rsi
 30670 00016A9C EBEC                    	jmp .L_lambda_simple_params_loop_00d3
 30671                                  .L_lambda_simple_params_end_00d3:
 30672 00016A9E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30673 00016AA1 4889C3                  	mov rbx, rax
 30674 00016AA4 58                      	pop rax
 30675 00016AA5 C60004                  	mov byte [rax], T_closure
 30676 00016AA8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30677 00016AAC 48C74009[B96A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d3
 30678 00016AB4 E986000000              	jmp .L_lambda_simple_end_00d3
 30679                                  .L_lambda_simple_code_00d3:	; lambda-simple body
 30680 00016AB9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30681 00016ABF 740B                    	je .L_lambda_simple_arity_check_ok_00d3
 30682 00016AC1 FF742410                	push qword [rsp + 8 * 2]
 30683 00016AC5 6A01                    	push 1
 30684 00016AC7 E9E20A0000              	jmp L_error_incorrect_arity_simple
 30685                                  .L_lambda_simple_arity_check_ok_00d3:
 30686 00016ACC C8000000                	enter 0, 0
 30687                                  	; preparing a tail-call
 30688 00016AD0 488B4510                	mov rax, ENV
 30689 00016AD4 488B00                  	mov rax, qword [rax + 8 * 0]
 30690 00016AD7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30691 00016ADA 50                      	push rax
 30692 00016ADB 488B4510                	mov rax, ENV
 30693 00016ADF 488B00                  	mov rax, qword [rax + 8 * 0]
 30694 00016AE2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 30695 00016AE6 50                      	push rax
 30696 00016AE7 6A02                    	push 2	; arg count
 30697 00016AE9 488B4520                	mov rax, PARAM(0)	; param p
 30698 00016AED 803804                  	cmp byte [rax], T_closure
 30699 00016AF0 0F85560A0000            	jne L_error_non_closure
 30700 00016AF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30701 00016AF9 FF7508                  	push qword [rbp + 8 * 1]
 30702                                   ; old ret addr
 30703 00016AFC FF7500                  	push qword [rbp]
 30704                                   ; restore the old rbp
 30705 00016AFF BB02000000              	mov rbx, 2
 30706 00016B04 4883C303                	add rbx, 3
 30707 00016B08 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30708 00016B0C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30709 00016B11 4C8D4DF8                	lea r9, [rbp - 8]
 30710 00016B15 B906000000              	mov rcx, 6
 30711                                  .L_tc_recycle_frame_loop_0100:
 30712 00016B1A 4883F900                	cmp rcx, 0
 30713 00016B1E 7413                    	je .L_tc_recycle_frame_done_0100
 30714 00016B20 4D8B11                  	mov r10, qword [r9]
 30715 00016B23 4D8910                  	mov qword [r8], r10
 30716 00016B26 4983E808                	sub r8, 8
 30717 00016B2A 4983E908                	sub r9, 8
 30718 00016B2E 48FFC9                  	dec rcx
 30719 00016B31 EBE7                    	jmp .L_tc_recycle_frame_loop_0100
 30720                                  .L_tc_recycle_frame_done_0100:
 30721 00016B33 498D6008                	lea rsp, [r8 + 8]
 30722 00016B37 5D                      	pop rbp ; restore the old rbp
 30723 00016B38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30724 00016B3B C9                      	leave
 30725 00016B3C C21800                  	ret AND_KILL_FRAME(1)
 30726                                  .L_lambda_simple_end_00d3:	; new closure is in rax
 30727 00016B3F C9                      	leave
 30728 00016B40 C22000                  	ret AND_KILL_FRAME(2)
 30729                                  .L_lambda_simple_end_00d2:	; new closure is in rax
 30730 00016B43 50                      	push rax
 30731 00016B44 6A01                    	push 1	; arg count
 30732 00016B46 488B4520                	mov rax, PARAM(0)	; param p
 30733 00016B4A 803804                  	cmp byte [rax], T_closure
 30734 00016B4D 0F85F9090000            	jne L_error_non_closure
 30735 00016B53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30736 00016B56 FF7508                  	push qword [rbp + 8 * 1]
 30737                                   ; old ret addr
 30738 00016B59 FF7500                  	push qword [rbp]
 30739                                   ; restore the old rbp
 30740 00016B5C BB01000000              	mov rbx, 1
 30741 00016B61 4883C303                	add rbx, 3
 30742 00016B65 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30743 00016B69 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30744 00016B6E 4C8D4DF8                	lea r9, [rbp - 8]
 30745 00016B72 B905000000              	mov rcx, 5
 30746                                  .L_tc_recycle_frame_loop_00ff:
 30747 00016B77 4883F900                	cmp rcx, 0
 30748 00016B7B 7413                    	je .L_tc_recycle_frame_done_00ff
 30749 00016B7D 4D8B11                  	mov r10, qword [r9]
 30750 00016B80 4D8910                  	mov qword [r8], r10
 30751 00016B83 4983E808                	sub r8, 8
 30752 00016B87 4983E908                	sub r9, 8
 30753 00016B8B 48FFC9                  	dec rcx
 30754 00016B8E EBE7                    	jmp .L_tc_recycle_frame_loop_00ff
 30755                                  .L_tc_recycle_frame_done_00ff:
 30756 00016B90 498D6008                	lea rsp, [r8 + 8]
 30757 00016B94 5D                      	pop rbp ; restore the old rbp
 30758 00016B95 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30759 00016B98 C9                      	leave
 30760 00016B99 C21800                  	ret AND_KILL_FRAME(1)
 30761                                  .L_lambda_simple_end_00d1:	; new closure is in rax
 30762 00016B9C 50                      	push rax
 30763 00016B9D 6A01                    	push 1	; arg count
 30764 00016B9F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30765 00016BA4 E84C0A0000              	call malloc
 30766 00016BA9 50                      	push rax
 30767 00016BAA BF00000000              	mov rdi, 8 * 0	; new rib
 30768 00016BAF E8410A0000              	call malloc
 30769 00016BB4 50                      	push rax
 30770 00016BB5 BF08000000              	mov rdi, 8 * 1	; extended env
 30771 00016BBA E8360A0000              	call malloc
 30772 00016BBF 488B7D10                	mov rdi, ENV
 30773 00016BC3 BE00000000              	mov rsi, 0
 30774 00016BC8 BA01000000              	mov rdx, 1
 30775                                  .L_lambda_simple_env_loop_00d4:	; ext_env[i + 1] <-- env[i]
 30776 00016BCD 4883FE00                	cmp rsi, 0
 30777 00016BD1 7410                    	je .L_lambda_simple_env_end_00d4
 30778 00016BD3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30779 00016BD7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30780 00016BDB 48FFC6                  	inc rsi
 30781 00016BDE 48FFC2                  	inc rdx
 30782 00016BE1 EBEA                    	jmp .L_lambda_simple_env_loop_00d4
 30783                                  .L_lambda_simple_env_end_00d4:
 30784 00016BE3 5B                      	pop rbx
 30785 00016BE4 BE00000000              	mov rsi, 0
 30786                                  .L_lambda_simple_params_loop_00d4:	; copy params
 30787 00016BE9 4883FE00                	cmp rsi, 0
 30788 00016BED 740E                    	je .L_lambda_simple_params_end_00d4
 30789 00016BEF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30790 00016BF4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30791 00016BF8 48FFC6                  	inc rsi
 30792 00016BFB EBEC                    	jmp .L_lambda_simple_params_loop_00d4
 30793                                  .L_lambda_simple_params_end_00d4:
 30794 00016BFD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30795 00016C00 4889C3                  	mov rbx, rax
 30796 00016C03 58                      	pop rax
 30797 00016C04 C60004                  	mov byte [rax], T_closure
 30798 00016C07 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30799 00016C0B 48C74009[186C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d4
 30800 00016C13 E92A010000              	jmp .L_lambda_simple_end_00d4
 30801                                  .L_lambda_simple_code_00d4:	; lambda-simple body
 30802 00016C18 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30803 00016C1E 740B                    	je .L_lambda_simple_arity_check_ok_00d4
 30804 00016C20 FF742410                	push qword [rsp + 8 * 2]
 30805 00016C24 6A01                    	push 1
 30806 00016C26 E983090000              	jmp L_error_incorrect_arity_simple
 30807                                  .L_lambda_simple_arity_check_ok_00d4:
 30808 00016C2B C8000000                	enter 0, 0
 30809 00016C2F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30810 00016C34 E8BC090000              	call malloc
 30811 00016C39 50                      	push rax
 30812 00016C3A BF08000000              	mov rdi, 8 * 1	; new rib
 30813 00016C3F E8B1090000              	call malloc
 30814 00016C44 50                      	push rax
 30815 00016C45 BF10000000              	mov rdi, 8 * 2	; extended env
 30816 00016C4A E8A6090000              	call malloc
 30817 00016C4F 488B7D10                	mov rdi, ENV
 30818 00016C53 BE00000000              	mov rsi, 0
 30819 00016C58 BA01000000              	mov rdx, 1
 30820                                  .L_lambda_simple_env_loop_00d5:	; ext_env[i + 1] <-- env[i]
 30821 00016C5D 4883FE01                	cmp rsi, 1
 30822 00016C61 7410                    	je .L_lambda_simple_env_end_00d5
 30823 00016C63 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30824 00016C67 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30825 00016C6B 48FFC6                  	inc rsi
 30826 00016C6E 48FFC2                  	inc rdx
 30827 00016C71 EBEA                    	jmp .L_lambda_simple_env_loop_00d5
 30828                                  .L_lambda_simple_env_end_00d5:
 30829 00016C73 5B                      	pop rbx
 30830 00016C74 BE00000000              	mov rsi, 0
 30831                                  .L_lambda_simple_params_loop_00d5:	; copy params
 30832 00016C79 4883FE01                	cmp rsi, 1
 30833 00016C7D 740E                    	je .L_lambda_simple_params_end_00d5
 30834 00016C7F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30835 00016C84 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30836 00016C88 48FFC6                  	inc rsi
 30837 00016C8B EBEC                    	jmp .L_lambda_simple_params_loop_00d5
 30838                                  .L_lambda_simple_params_end_00d5:
 30839 00016C8D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30840 00016C90 4889C3                  	mov rbx, rax
 30841 00016C93 58                      	pop rax
 30842 00016C94 C60004                  	mov byte [rax], T_closure
 30843 00016C97 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30844 00016C9B 48C74009[A86C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d5
 30845 00016CA3 E996000000              	jmp .L_lambda_simple_end_00d5
 30846                                  .L_lambda_simple_code_00d5:	; lambda-simple body
 30847 00016CA8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30848 00016CAE 740B                    	je .L_lambda_simple_arity_check_ok_00d5
 30849 00016CB0 FF742410                	push qword [rsp + 8 * 2]
 30850 00016CB4 6A01                    	push 1
 30851 00016CB6 E9F3080000              	jmp L_error_incorrect_arity_simple
 30852                                  .L_lambda_simple_arity_check_ok_00d5:
 30853 00016CBB C8000000                	enter 0, 0
 30854                                  	; preparing a tail-call
 30855                                  	; preparing a non-tail-call
 30856 00016CBF 488B4520                	mov rax, PARAM(0)	; param y
 30857 00016CC3 50                      	push rax
 30858 00016CC4 6A01                    	push 1	; arg count
 30859 00016CC6 488B4510                	mov rax, ENV
 30860 00016CCA 488B00                  	mov rax, qword [rax + 8 * 0]
 30861 00016CCD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30862 00016CD0 803804                  	cmp byte [rax], T_closure
 30863 00016CD3 0F8573080000            	jne L_error_non_closure
 30864 00016CD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30865 00016CDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 30866 00016CDF 50                      	push rax
 30867 00016CE0 6A01                    	push 1	; arg count
 30868 00016CE2 488B4510                	mov rax, ENV
 30869 00016CE6 488B00                  	mov rax, qword [rax + 8 * 0]
 30870 00016CE9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30871 00016CEC 803804                  	cmp byte [rax], T_closure
 30872 00016CEF 0F8557080000            	jne L_error_non_closure
 30873 00016CF5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30874 00016CF8 FF7508                  	push qword [rbp + 8 * 1]
 30875                                   ; old ret addr
 30876 00016CFB FF7500                  	push qword [rbp]
 30877                                   ; restore the old rbp
 30878 00016CFE BB01000000              	mov rbx, 1
 30879 00016D03 4883C303                	add rbx, 3
 30880 00016D07 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 30881 00016D0B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 30882 00016D10 4C8D4DF8                	lea r9, [rbp - 8]
 30883 00016D14 B905000000              	mov rcx, 5
 30884                                  .L_tc_recycle_frame_loop_0101:
 30885 00016D19 4883F900                	cmp rcx, 0
 30886 00016D1D 7413                    	je .L_tc_recycle_frame_done_0101
 30887 00016D1F 4D8B11                  	mov r10, qword [r9]
 30888 00016D22 4D8910                  	mov qword [r8], r10
 30889 00016D25 4983E808                	sub r8, 8
 30890 00016D29 4983E908                	sub r9, 8
 30891 00016D2D 48FFC9                  	dec rcx
 30892 00016D30 EBE7                    	jmp .L_tc_recycle_frame_loop_0101
 30893                                  .L_tc_recycle_frame_done_0101:
 30894 00016D32 498D6008                	lea rsp, [r8 + 8]
 30895 00016D36 5D                      	pop rbp ; restore the old rbp
 30896 00016D37 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30897 00016D3A C9                      	leave
 30898 00016D3B C21800                  	ret AND_KILL_FRAME(1)
 30899                                  .L_lambda_simple_end_00d5:	; new closure is in rax
 30900 00016D3E C9                      	leave
 30901 00016D3F C21800                  	ret AND_KILL_FRAME(1)
 30902                                  .L_lambda_simple_end_00d4:	; new closure is in rax
 30903 00016D42 803804                  	cmp byte [rax], T_closure
 30904 00016D45 0F8501080000            	jne L_error_non_closure
 30905 00016D4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 30906 00016D4E FF5009                  	call SOB_CLOSURE_CODE(rax)
 30907 00016D51 803804                  	cmp byte [rax], T_closure
 30908 00016D54 0F85F2070000            	jne L_error_non_closure
 30909 00016D5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 30910 00016D5D FF5009                  	call SOB_CLOSURE_CODE(rax)
 30911 00016D60 803804                  	cmp byte [rax], T_closure
 30912 00016D63 0F85E3070000            	jne L_error_non_closure
 30913 00016D69 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30914 00016D6C FF5009                  	call SOB_CLOSURE_CODE(rax)
 30915                                  
 30916 00016D6F 4889C7                  	mov rdi, rax
 30917 00016D72 E8D30A0000              	call print_sexpr_if_not_void
 30918                                  	; preparing a non-tail-call
 30919 00016D77 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30920 00016D7C E874080000              	call malloc
 30921 00016D81 50                      	push rax
 30922 00016D82 BF00000000              	mov rdi, 8 * 0	; new rib
 30923 00016D87 E869080000              	call malloc
 30924 00016D8C 50                      	push rax
 30925 00016D8D BF08000000              	mov rdi, 8 * 1	; extended env
 30926 00016D92 E85E080000              	call malloc
 30927 00016D97 488B7D10                	mov rdi, ENV
 30928 00016D9B BE00000000              	mov rsi, 0
 30929 00016DA0 BA01000000              	mov rdx, 1
 30930                                  .L_lambda_simple_env_loop_00d6:	; ext_env[i + 1] <-- env[i]
 30931 00016DA5 4883FE00                	cmp rsi, 0
 30932 00016DA9 7410                    	je .L_lambda_simple_env_end_00d6
 30933 00016DAB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30934 00016DAF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30935 00016DB3 48FFC6                  	inc rsi
 30936 00016DB6 48FFC2                  	inc rdx
 30937 00016DB9 EBEA                    	jmp .L_lambda_simple_env_loop_00d6
 30938                                  .L_lambda_simple_env_end_00d6:
 30939 00016DBB 5B                      	pop rbx
 30940 00016DBC BE00000000              	mov rsi, 0
 30941                                  .L_lambda_simple_params_loop_00d6:	; copy params
 30942 00016DC1 4883FE00                	cmp rsi, 0
 30943 00016DC5 740E                    	je .L_lambda_simple_params_end_00d6
 30944 00016DC7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30945 00016DCC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30946 00016DD0 48FFC6                  	inc rsi
 30947 00016DD3 EBEC                    	jmp .L_lambda_simple_params_loop_00d6
 30948                                  .L_lambda_simple_params_end_00d6:
 30949 00016DD5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30950 00016DD8 4889C3                  	mov rbx, rax
 30951 00016DDB 58                      	pop rax
 30952 00016DDC C60004                  	mov byte [rax], T_closure
 30953 00016DDF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30954 00016DE3 48C74009[ED6D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d6
 30955 00016DEB EB1F                    	jmp .L_lambda_simple_end_00d6
 30956                                  .L_lambda_simple_code_00d6:	; lambda-simple body
 30957 00016DED 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30958 00016DF3 740B                    	je .L_lambda_simple_arity_check_ok_00d6
 30959 00016DF5 FF742410                	push qword [rsp + 8 * 2]
 30960 00016DF9 6A02                    	push 2
 30961 00016DFB E9AE070000              	jmp L_error_incorrect_arity_simple
 30962                                  .L_lambda_simple_arity_check_ok_00d6:
 30963 00016E00 C8000000                	enter 0, 0
 30964 00016E04 488B4520                	mov rax, PARAM(0)	; param x
 30965 00016E08 C9                      	leave
 30966 00016E09 C22000                  	ret AND_KILL_FRAME(2)
 30967                                  .L_lambda_simple_end_00d6:	; new closure is in rax
 30968 00016E0C 50                      	push rax
 30969 00016E0D 6A01                    	push 1	; arg count
 30970                                  	; preparing a non-tail-call
 30971 00016E0F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30972 00016E14 E8DC070000              	call malloc
 30973 00016E19 50                      	push rax
 30974 00016E1A BF00000000              	mov rdi, 8 * 0	; new rib
 30975 00016E1F E8D1070000              	call malloc
 30976 00016E24 50                      	push rax
 30977 00016E25 BF08000000              	mov rdi, 8 * 1	; extended env
 30978 00016E2A E8C6070000              	call malloc
 30979 00016E2F 488B7D10                	mov rdi, ENV
 30980 00016E33 BE00000000              	mov rsi, 0
 30981 00016E38 BA01000000              	mov rdx, 1
 30982                                  .L_lambda_simple_env_loop_00d7:	; ext_env[i + 1] <-- env[i]
 30983 00016E3D 4883FE00                	cmp rsi, 0
 30984 00016E41 7410                    	je .L_lambda_simple_env_end_00d7
 30985 00016E43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30986 00016E47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30987 00016E4B 48FFC6                  	inc rsi
 30988 00016E4E 48FFC2                  	inc rdx
 30989 00016E51 EBEA                    	jmp .L_lambda_simple_env_loop_00d7
 30990                                  .L_lambda_simple_env_end_00d7:
 30991 00016E53 5B                      	pop rbx
 30992 00016E54 BE00000000              	mov rsi, 0
 30993                                  .L_lambda_simple_params_loop_00d7:	; copy params
 30994 00016E59 4883FE00                	cmp rsi, 0
 30995 00016E5D 740E                    	je .L_lambda_simple_params_end_00d7
 30996 00016E5F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30997 00016E64 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30998 00016E68 48FFC6                  	inc rsi
 30999 00016E6B EBEC                    	jmp .L_lambda_simple_params_loop_00d7
 31000                                  .L_lambda_simple_params_end_00d7:
 31001 00016E6D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31002 00016E70 4889C3                  	mov rbx, rax
 31003 00016E73 58                      	pop rax
 31004 00016E74 C60004                  	mov byte [rax], T_closure
 31005 00016E77 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31006 00016E7B 48C74009[886E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d7
 31007 00016E83 E985000000              	jmp .L_lambda_simple_end_00d7
 31008                                  .L_lambda_simple_code_00d7:	; lambda-simple body
 31009 00016E88 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31010 00016E8E 740B                    	je .L_lambda_simple_arity_check_ok_00d7
 31011 00016E90 FF742410                	push qword [rsp + 8 * 2]
 31012 00016E94 6A01                    	push 1
 31013 00016E96 E913070000              	jmp L_error_incorrect_arity_simple
 31014                                  .L_lambda_simple_arity_check_ok_00d7:
 31015 00016E9B C8000000                	enter 0, 0
 31016                                  	; preparing a tail-call
 31017 00016E9F 48B8-                   	mov rax, L_constants + 2
 31017 00016EA1 [0200000000000000] 
 31018 00016EA9 50                      	push rax
 31019 00016EAA 48B8-                   	mov rax, L_constants + 3
 31019 00016EAC [0300000000000000] 
 31020 00016EB4 50                      	push rax
 31021 00016EB5 6A02                    	push 2	; arg count
 31022 00016EB7 488B4520                	mov rax, PARAM(0)	; param z
 31023 00016EBB 803804                  	cmp byte [rax], T_closure
 31024 00016EBE 0F8588060000            	jne L_error_non_closure
 31025 00016EC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31026 00016EC7 FF7508                  	push qword [rbp + 8 * 1]
 31027                                   ; old ret addr
 31028 00016ECA FF7500                  	push qword [rbp]
 31029                                   ; restore the old rbp
 31030 00016ECD BB02000000              	mov rbx, 2
 31031 00016ED2 4883C303                	add rbx, 3
 31032 00016ED6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 31033 00016EDA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 31034 00016EDF 4C8D4DF8                	lea r9, [rbp - 8]
 31035 00016EE3 B906000000              	mov rcx, 6
 31036                                  .L_tc_recycle_frame_loop_0102:
 31037 00016EE8 4883F900                	cmp rcx, 0
 31038 00016EEC 7413                    	je .L_tc_recycle_frame_done_0102
 31039 00016EEE 4D8B11                  	mov r10, qword [r9]
 31040 00016EF1 4D8910                  	mov qword [r8], r10
 31041 00016EF4 4983E808                	sub r8, 8
 31042 00016EF8 4983E908                	sub r9, 8
 31043 00016EFC 48FFC9                  	dec rcx
 31044 00016EFF EBE7                    	jmp .L_tc_recycle_frame_loop_0102
 31045                                  .L_tc_recycle_frame_done_0102:
 31046 00016F01 498D6008                	lea rsp, [r8 + 8]
 31047 00016F05 5D                      	pop rbp ; restore the old rbp
 31048 00016F06 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31049 00016F09 C9                      	leave
 31050 00016F0A C21800                  	ret AND_KILL_FRAME(1)
 31051                                  .L_lambda_simple_end_00d7:	; new closure is in rax
 31052 00016F0D 50                      	push rax
 31053 00016F0E 6A01                    	push 1	; arg count
 31054                                  	; preparing a non-tail-call
 31055 00016F10 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31056 00016F15 E8DB060000              	call malloc
 31057 00016F1A 50                      	push rax
 31058 00016F1B BF00000000              	mov rdi, 8 * 0	; new rib
 31059 00016F20 E8D0060000              	call malloc
 31060 00016F25 50                      	push rax
 31061 00016F26 BF08000000              	mov rdi, 8 * 1	; extended env
 31062 00016F2B E8C5060000              	call malloc
 31063 00016F30 488B7D10                	mov rdi, ENV
 31064 00016F34 BE00000000              	mov rsi, 0
 31065 00016F39 BA01000000              	mov rdx, 1
 31066                                  .L_lambda_simple_env_loop_00d8:	; ext_env[i + 1] <-- env[i]
 31067 00016F3E 4883FE00                	cmp rsi, 0
 31068 00016F42 7410                    	je .L_lambda_simple_env_end_00d8
 31069 00016F44 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31070 00016F48 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31071 00016F4C 48FFC6                  	inc rsi
 31072 00016F4F 48FFC2                  	inc rdx
 31073 00016F52 EBEA                    	jmp .L_lambda_simple_env_loop_00d8
 31074                                  .L_lambda_simple_env_end_00d8:
 31075 00016F54 5B                      	pop rbx
 31076 00016F55 BE00000000              	mov rsi, 0
 31077                                  .L_lambda_simple_params_loop_00d8:	; copy params
 31078 00016F5A 4883FE00                	cmp rsi, 0
 31079 00016F5E 740E                    	je .L_lambda_simple_params_end_00d8
 31080 00016F60 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31081 00016F65 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31082 00016F69 48FFC6                  	inc rsi
 31083 00016F6C EBEC                    	jmp .L_lambda_simple_params_loop_00d8
 31084                                  .L_lambda_simple_params_end_00d8:
 31085 00016F6E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31086 00016F71 4889C3                  	mov rbx, rax
 31087 00016F74 58                      	pop rax
 31088 00016F75 C60004                  	mov byte [rax], T_closure
 31089 00016F78 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31090 00016F7C 48C74009[896F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d8
 31091 00016F84 E903020000              	jmp .L_lambda_simple_end_00d8
 31092                                  .L_lambda_simple_code_00d8:	; lambda-simple body
 31093 00016F89 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31094 00016F8F 740B                    	je .L_lambda_simple_arity_check_ok_00d8
 31095 00016F91 FF742410                	push qword [rsp + 8 * 2]
 31096 00016F95 6A01                    	push 1
 31097 00016F97 E912060000              	jmp L_error_incorrect_arity_simple
 31098                                  .L_lambda_simple_arity_check_ok_00d8:
 31099 00016F9C C8000000                	enter 0, 0
 31100                                  	; preparing a tail-call
 31101 00016FA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31102 00016FA5 E84B060000              	call malloc
 31103 00016FAA 50                      	push rax
 31104 00016FAB BF08000000              	mov rdi, 8 * 1	; new rib
 31105 00016FB0 E840060000              	call malloc
 31106 00016FB5 50                      	push rax
 31107 00016FB6 BF10000000              	mov rdi, 8 * 2	; extended env
 31108 00016FBB E835060000              	call malloc
 31109 00016FC0 488B7D10                	mov rdi, ENV
 31110 00016FC4 BE00000000              	mov rsi, 0
 31111 00016FC9 BA01000000              	mov rdx, 1
 31112                                  .L_lambda_simple_env_loop_00d9:	; ext_env[i + 1] <-- env[i]
 31113 00016FCE 4883FE01                	cmp rsi, 1
 31114 00016FD2 7410                    	je .L_lambda_simple_env_end_00d9
 31115 00016FD4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31116 00016FD8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31117 00016FDC 48FFC6                  	inc rsi
 31118 00016FDF 48FFC2                  	inc rdx
 31119 00016FE2 EBEA                    	jmp .L_lambda_simple_env_loop_00d9
 31120                                  .L_lambda_simple_env_end_00d9:
 31121 00016FE4 5B                      	pop rbx
 31122 00016FE5 BE00000000              	mov rsi, 0
 31123                                  .L_lambda_simple_params_loop_00d9:	; copy params
 31124 00016FEA 4883FE01                	cmp rsi, 1
 31125 00016FEE 740E                    	je .L_lambda_simple_params_end_00d9
 31126 00016FF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31127 00016FF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31128 00016FF9 48FFC6                  	inc rsi
 31129 00016FFC EBEC                    	jmp .L_lambda_simple_params_loop_00d9
 31130                                  .L_lambda_simple_params_end_00d9:
 31131 00016FFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31132 00017001 4889C3                  	mov rbx, rax
 31133 00017004 58                      	pop rax
 31134 00017005 C60004                  	mov byte [rax], T_closure
 31135 00017008 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31136 0001700C 48C74009[19700100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d9
 31137 00017014 E91A010000              	jmp .L_lambda_simple_end_00d9
 31138                                  .L_lambda_simple_code_00d9:	; lambda-simple body
 31139 00017019 48837C241002            	cmp qword [rsp + 8 * 2], 2
 31140 0001701F 740B                    	je .L_lambda_simple_arity_check_ok_00d9
 31141 00017021 FF742410                	push qword [rsp + 8 * 2]
 31142 00017025 6A02                    	push 2
 31143 00017027 E982050000              	jmp L_error_incorrect_arity_simple
 31144                                  .L_lambda_simple_arity_check_ok_00d9:
 31145 0001702C C8000000                	enter 0, 0
 31146 00017030 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31147 00017035 E8BB050000              	call malloc
 31148 0001703A 50                      	push rax
 31149 0001703B BF10000000              	mov rdi, 8 * 2	; new rib
 31150 00017040 E8B0050000              	call malloc
 31151 00017045 50                      	push rax
 31152 00017046 BF18000000              	mov rdi, 8 * 3	; extended env
 31153 0001704B E8A5050000              	call malloc
 31154 00017050 488B7D10                	mov rdi, ENV
 31155 00017054 BE00000000              	mov rsi, 0
 31156 00017059 BA01000000              	mov rdx, 1
 31157                                  .L_lambda_simple_env_loop_00da:	; ext_env[i + 1] <-- env[i]
 31158 0001705E 4883FE02                	cmp rsi, 2
 31159 00017062 7410                    	je .L_lambda_simple_env_end_00da
 31160 00017064 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31161 00017068 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31162 0001706C 48FFC6                  	inc rsi
 31163 0001706F 48FFC2                  	inc rdx
 31164 00017072 EBEA                    	jmp .L_lambda_simple_env_loop_00da
 31165                                  .L_lambda_simple_env_end_00da:
 31166 00017074 5B                      	pop rbx
 31167 00017075 BE00000000              	mov rsi, 0
 31168                                  .L_lambda_simple_params_loop_00da:	; copy params
 31169 0001707A 4883FE02                	cmp rsi, 2
 31170 0001707E 740E                    	je .L_lambda_simple_params_end_00da
 31171 00017080 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31172 00017085 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31173 00017089 48FFC6                  	inc rsi
 31174 0001708C EBEC                    	jmp .L_lambda_simple_params_loop_00da
 31175                                  .L_lambda_simple_params_end_00da:
 31176 0001708E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31177 00017091 4889C3                  	mov rbx, rax
 31178 00017094 58                      	pop rax
 31179 00017095 C60004                  	mov byte [rax], T_closure
 31180 00017098 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31181 0001709C 48C74009[A9700100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00da
 31182 000170A4 E986000000              	jmp .L_lambda_simple_end_00da
 31183                                  .L_lambda_simple_code_00da:	; lambda-simple body
 31184 000170A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31185 000170AF 740B                    	je .L_lambda_simple_arity_check_ok_00da
 31186 000170B1 FF742410                	push qword [rsp + 8 * 2]
 31187 000170B5 6A01                    	push 1
 31188 000170B7 E9F2040000              	jmp L_error_incorrect_arity_simple
 31189                                  .L_lambda_simple_arity_check_ok_00da:
 31190 000170BC C8000000                	enter 0, 0
 31191                                  	; preparing a tail-call
 31192 000170C0 488B4510                	mov rax, ENV
 31193 000170C4 488B00                  	mov rax, qword [rax + 8 * 0]
 31194 000170C7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 31195 000170CA 50                      	push rax
 31196 000170CB 488B4510                	mov rax, ENV
 31197 000170CF 488B00                  	mov rax, qword [rax + 8 * 0]
 31198 000170D2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 31199 000170D6 50                      	push rax
 31200 000170D7 6A02                    	push 2	; arg count
 31201 000170D9 488B4520                	mov rax, PARAM(0)	; param p
 31202 000170DD 803804                  	cmp byte [rax], T_closure
 31203 000170E0 0F8566040000            	jne L_error_non_closure
 31204 000170E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31205 000170E9 FF7508                  	push qword [rbp + 8 * 1]
 31206                                   ; old ret addr
 31207 000170EC FF7500                  	push qword [rbp]
 31208                                   ; restore the old rbp
 31209 000170EF BB02000000              	mov rbx, 2
 31210 000170F4 4883C303                	add rbx, 3
 31211 000170F8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 31212 000170FC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 31213 00017101 4C8D4DF8                	lea r9, [rbp - 8]
 31214 00017105 B906000000              	mov rcx, 6
 31215                                  .L_tc_recycle_frame_loop_0104:
 31216 0001710A 4883F900                	cmp rcx, 0
 31217 0001710E 7413                    	je .L_tc_recycle_frame_done_0104
 31218 00017110 4D8B11                  	mov r10, qword [r9]
 31219 00017113 4D8910                  	mov qword [r8], r10
 31220 00017116 4983E808                	sub r8, 8
 31221 0001711A 4983E908                	sub r9, 8
 31222 0001711E 48FFC9                  	dec rcx
 31223 00017121 EBE7                    	jmp .L_tc_recycle_frame_loop_0104
 31224                                  .L_tc_recycle_frame_done_0104:
 31225 00017123 498D6008                	lea rsp, [r8 + 8]
 31226 00017127 5D                      	pop rbp ; restore the old rbp
 31227 00017128 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31228 0001712B C9                      	leave
 31229 0001712C C21800                  	ret AND_KILL_FRAME(1)
 31230                                  .L_lambda_simple_end_00da:	; new closure is in rax
 31231 0001712F C9                      	leave
 31232 00017130 C22000                  	ret AND_KILL_FRAME(2)
 31233                                  .L_lambda_simple_end_00d9:	; new closure is in rax
 31234 00017133 50                      	push rax
 31235 00017134 6A01                    	push 1	; arg count
 31236 00017136 488B4520                	mov rax, PARAM(0)	; param p
 31237 0001713A 803804                  	cmp byte [rax], T_closure
 31238 0001713D 0F8509040000            	jne L_error_non_closure
 31239 00017143 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31240 00017146 FF7508                  	push qword [rbp + 8 * 1]
 31241                                   ; old ret addr
 31242 00017149 FF7500                  	push qword [rbp]
 31243                                   ; restore the old rbp
 31244 0001714C BB01000000              	mov rbx, 1
 31245 00017151 4883C303                	add rbx, 3
 31246 00017155 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 31247 00017159 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 31248 0001715E 4C8D4DF8                	lea r9, [rbp - 8]
 31249 00017162 B905000000              	mov rcx, 5
 31250                                  .L_tc_recycle_frame_loop_0103:
 31251 00017167 4883F900                	cmp rcx, 0
 31252 0001716B 7413                    	je .L_tc_recycle_frame_done_0103
 31253 0001716D 4D8B11                  	mov r10, qword [r9]
 31254 00017170 4D8910                  	mov qword [r8], r10
 31255 00017173 4983E808                	sub r8, 8
 31256 00017177 4983E908                	sub r9, 8
 31257 0001717B 48FFC9                  	dec rcx
 31258 0001717E EBE7                    	jmp .L_tc_recycle_frame_loop_0103
 31259                                  .L_tc_recycle_frame_done_0103:
 31260 00017180 498D6008                	lea rsp, [r8 + 8]
 31261 00017184 5D                      	pop rbp ; restore the old rbp
 31262 00017185 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31263 00017188 C9                      	leave
 31264 00017189 C21800                  	ret AND_KILL_FRAME(1)
 31265                                  .L_lambda_simple_end_00d8:	; new closure is in rax
 31266 0001718C 50                      	push rax
 31267 0001718D 6A01                    	push 1	; arg count
 31268                                  	; preparing a non-tail-call
 31269 0001718F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31270 00017194 E85C040000              	call malloc
 31271 00017199 50                      	push rax
 31272 0001719A BF00000000              	mov rdi, 8 * 0	; new rib
 31273 0001719F E851040000              	call malloc
 31274 000171A4 50                      	push rax
 31275 000171A5 BF08000000              	mov rdi, 8 * 1	; extended env
 31276 000171AA E846040000              	call malloc
 31277 000171AF 488B7D10                	mov rdi, ENV
 31278 000171B3 BE00000000              	mov rsi, 0
 31279 000171B8 BA01000000              	mov rdx, 1
 31280                                  .L_lambda_simple_env_loop_00db:	; ext_env[i + 1] <-- env[i]
 31281 000171BD 4883FE00                	cmp rsi, 0
 31282 000171C1 7410                    	je .L_lambda_simple_env_end_00db
 31283 000171C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31284 000171C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31285 000171CB 48FFC6                  	inc rsi
 31286 000171CE 48FFC2                  	inc rdx
 31287 000171D1 EBEA                    	jmp .L_lambda_simple_env_loop_00db
 31288                                  .L_lambda_simple_env_end_00db:
 31289 000171D3 5B                      	pop rbx
 31290 000171D4 BE00000000              	mov rsi, 0
 31291                                  .L_lambda_simple_params_loop_00db:	; copy params
 31292 000171D9 4883FE00                	cmp rsi, 0
 31293 000171DD 740E                    	je .L_lambda_simple_params_end_00db
 31294 000171DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31295 000171E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31296 000171E8 48FFC6                  	inc rsi
 31297 000171EB EBEC                    	jmp .L_lambda_simple_params_loop_00db
 31298                                  .L_lambda_simple_params_end_00db:
 31299 000171ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31300 000171F0 4889C3                  	mov rbx, rax
 31301 000171F3 58                      	pop rax
 31302 000171F4 C60004                  	mov byte [rax], T_closure
 31303 000171F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31304 000171FB 48C74009[08720100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00db
 31305 00017203 E92A010000              	jmp .L_lambda_simple_end_00db
 31306                                  .L_lambda_simple_code_00db:	; lambda-simple body
 31307 00017208 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31308 0001720E 740B                    	je .L_lambda_simple_arity_check_ok_00db
 31309 00017210 FF742410                	push qword [rsp + 8 * 2]
 31310 00017214 6A01                    	push 1
 31311 00017216 E993030000              	jmp L_error_incorrect_arity_simple
 31312                                  .L_lambda_simple_arity_check_ok_00db:
 31313 0001721B C8000000                	enter 0, 0
 31314 0001721F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31315 00017224 E8CC030000              	call malloc
 31316 00017229 50                      	push rax
 31317 0001722A BF08000000              	mov rdi, 8 * 1	; new rib
 31318 0001722F E8C1030000              	call malloc
 31319 00017234 50                      	push rax
 31320 00017235 BF10000000              	mov rdi, 8 * 2	; extended env
 31321 0001723A E8B6030000              	call malloc
 31322 0001723F 488B7D10                	mov rdi, ENV
 31323 00017243 BE00000000              	mov rsi, 0
 31324 00017248 BA01000000              	mov rdx, 1
 31325                                  .L_lambda_simple_env_loop_00dc:	; ext_env[i + 1] <-- env[i]
 31326 0001724D 4883FE01                	cmp rsi, 1
 31327 00017251 7410                    	je .L_lambda_simple_env_end_00dc
 31328 00017253 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31329 00017257 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31330 0001725B 48FFC6                  	inc rsi
 31331 0001725E 48FFC2                  	inc rdx
 31332 00017261 EBEA                    	jmp .L_lambda_simple_env_loop_00dc
 31333                                  .L_lambda_simple_env_end_00dc:
 31334 00017263 5B                      	pop rbx
 31335 00017264 BE00000000              	mov rsi, 0
 31336                                  .L_lambda_simple_params_loop_00dc:	; copy params
 31337 00017269 4883FE01                	cmp rsi, 1
 31338 0001726D 740E                    	je .L_lambda_simple_params_end_00dc
 31339 0001726F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31340 00017274 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31341 00017278 48FFC6                  	inc rsi
 31342 0001727B EBEC                    	jmp .L_lambda_simple_params_loop_00dc
 31343                                  .L_lambda_simple_params_end_00dc:
 31344 0001727D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31345 00017280 4889C3                  	mov rbx, rax
 31346 00017283 58                      	pop rax
 31347 00017284 C60004                  	mov byte [rax], T_closure
 31348 00017287 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31349 0001728B 48C74009[98720100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00dc
 31350 00017293 E996000000              	jmp .L_lambda_simple_end_00dc
 31351                                  .L_lambda_simple_code_00dc:	; lambda-simple body
 31352 00017298 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31353 0001729E 740B                    	je .L_lambda_simple_arity_check_ok_00dc
 31354 000172A0 FF742410                	push qword [rsp + 8 * 2]
 31355 000172A4 6A01                    	push 1
 31356 000172A6 E903030000              	jmp L_error_incorrect_arity_simple
 31357                                  .L_lambda_simple_arity_check_ok_00dc:
 31358 000172AB C8000000                	enter 0, 0
 31359                                  	; preparing a tail-call
 31360                                  	; preparing a non-tail-call
 31361 000172AF 488B4520                	mov rax, PARAM(0)	; param y
 31362 000172B3 50                      	push rax
 31363 000172B4 6A01                    	push 1	; arg count
 31364 000172B6 488B4510                	mov rax, ENV
 31365 000172BA 488B00                  	mov rax, qword [rax + 8 * 0]
 31366 000172BD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 31367 000172C0 803804                  	cmp byte [rax], T_closure
 31368 000172C3 0F8583020000            	jne L_error_non_closure
 31369 000172C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31370 000172CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 31371 000172CF 50                      	push rax
 31372 000172D0 6A01                    	push 1	; arg count
 31373 000172D2 488B4510                	mov rax, ENV
 31374 000172D6 488B00                  	mov rax, qword [rax + 8 * 0]
 31375 000172D9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 31376 000172DC 803804                  	cmp byte [rax], T_closure
 31377 000172DF 0F8567020000            	jne L_error_non_closure
 31378 000172E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31379 000172E8 FF7508                  	push qword [rbp + 8 * 1]
 31380                                   ; old ret addr
 31381 000172EB FF7500                  	push qword [rbp]
 31382                                   ; restore the old rbp
 31383 000172EE BB01000000              	mov rbx, 1
 31384 000172F3 4883C303                	add rbx, 3
 31385 000172F7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 31386 000172FB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 31387 00017300 4C8D4DF8                	lea r9, [rbp - 8]
 31388 00017304 B905000000              	mov rcx, 5
 31389                                  .L_tc_recycle_frame_loop_0105:
 31390 00017309 4883F900                	cmp rcx, 0
 31391 0001730D 7413                    	je .L_tc_recycle_frame_done_0105
 31392 0001730F 4D8B11                  	mov r10, qword [r9]
 31393 00017312 4D8910                  	mov qword [r8], r10
 31394 00017315 4983E808                	sub r8, 8
 31395 00017319 4983E908                	sub r9, 8
 31396 0001731D 48FFC9                  	dec rcx
 31397 00017320 EBE7                    	jmp .L_tc_recycle_frame_loop_0105
 31398                                  .L_tc_recycle_frame_done_0105:
 31399 00017322 498D6008                	lea rsp, [r8 + 8]
 31400 00017326 5D                      	pop rbp ; restore the old rbp
 31401 00017327 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31402 0001732A C9                      	leave
 31403 0001732B C21800                  	ret AND_KILL_FRAME(1)
 31404                                  .L_lambda_simple_end_00dc:	; new closure is in rax
 31405 0001732E C9                      	leave
 31406 0001732F C21800                  	ret AND_KILL_FRAME(1)
 31407                                  .L_lambda_simple_end_00db:	; new closure is in rax
 31408 00017332 50                      	push rax
 31409 00017333 6A01                    	push 1	; arg count
 31410 00017335 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31411 0001733A E8B6020000              	call malloc
 31412 0001733F 50                      	push rax
 31413 00017340 BF00000000              	mov rdi, 8 * 0	; new rib
 31414 00017345 E8AB020000              	call malloc
 31415 0001734A 50                      	push rax
 31416 0001734B BF08000000              	mov rdi, 8 * 1	; extended env
 31417 00017350 E8A0020000              	call malloc
 31418 00017355 488B7D10                	mov rdi, ENV
 31419 00017359 BE00000000              	mov rsi, 0
 31420 0001735E BA01000000              	mov rdx, 1
 31421                                  .L_lambda_simple_env_loop_00dd:	; ext_env[i + 1] <-- env[i]
 31422 00017363 4883FE00                	cmp rsi, 0
 31423 00017367 7410                    	je .L_lambda_simple_env_end_00dd
 31424 00017369 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31425 0001736D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31426 00017371 48FFC6                  	inc rsi
 31427 00017374 48FFC2                  	inc rdx
 31428 00017377 EBEA                    	jmp .L_lambda_simple_env_loop_00dd
 31429                                  .L_lambda_simple_env_end_00dd:
 31430 00017379 5B                      	pop rbx
 31431 0001737A BE00000000              	mov rsi, 0
 31432                                  .L_lambda_simple_params_loop_00dd:	; copy params
 31433 0001737F 4883FE00                	cmp rsi, 0
 31434 00017383 740E                    	je .L_lambda_simple_params_end_00dd
 31435 00017385 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31436 0001738A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31437 0001738E 48FFC6                  	inc rsi
 31438 00017391 EBEC                    	jmp .L_lambda_simple_params_loop_00dd
 31439                                  .L_lambda_simple_params_end_00dd:
 31440 00017393 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31441 00017396 4889C3                  	mov rbx, rax
 31442 00017399 58                      	pop rax
 31443 0001739A C60004                  	mov byte [rax], T_closure
 31444 0001739D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31445 000173A1 48C74009[AE730100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00dd
 31446 000173A9 E9A0000000              	jmp .L_lambda_simple_end_00dd
 31447                                  .L_lambda_simple_code_00dd:	; lambda-simple body
 31448 000173AE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31449 000173B4 740B                    	je .L_lambda_simple_arity_check_ok_00dd
 31450 000173B6 FF742410                	push qword [rsp + 8 * 2]
 31451 000173BA 6A01                    	push 1
 31452 000173BC E9ED010000              	jmp L_error_incorrect_arity_simple
 31453                                  .L_lambda_simple_arity_check_ok_00dd:
 31454 000173C1 C8000000                	enter 0, 0
 31455                                  	; preparing a tail-call
 31456                                  	; preparing a non-tail-call
 31457 000173C5 488B4520                	mov rax, PARAM(0)	; param x
 31458 000173C9 50                      	push rax
 31459 000173CA 6A01                    	push 1	; arg count
 31460 000173CC 488B4520                	mov rax, PARAM(0)	; param x
 31461 000173D0 803804                  	cmp byte [rax], T_closure
 31462 000173D3 0F8573010000            	jne L_error_non_closure
 31463 000173D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31464 000173DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 31465 000173DF 50                      	push rax
 31466 000173E0 6A01                    	push 1	; arg count
 31467                                  	; preparing a non-tail-call
 31468 000173E2 488B4520                	mov rax, PARAM(0)	; param x
 31469 000173E6 50                      	push rax
 31470 000173E7 6A01                    	push 1	; arg count
 31471 000173E9 488B4520                	mov rax, PARAM(0)	; param x
 31472 000173ED 803804                  	cmp byte [rax], T_closure
 31473 000173F0 0F8556010000            	jne L_error_non_closure
 31474 000173F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31475 000173F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31476 000173FC 803804                  	cmp byte [rax], T_closure
 31477 000173FF 0F8547010000            	jne L_error_non_closure
 31478 00017405 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31479 00017408 FF7508                  	push qword [rbp + 8 * 1]
 31480                                   ; old ret addr
 31481 0001740B FF7500                  	push qword [rbp]
 31482                                   ; restore the old rbp
 31483 0001740E BB01000000              	mov rbx, 1
 31484 00017413 4883C303                	add rbx, 3
 31485 00017417 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 31486 0001741B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 31487 00017420 4C8D4DF8                	lea r9, [rbp - 8]
 31488 00017424 B905000000              	mov rcx, 5
 31489                                  .L_tc_recycle_frame_loop_0106:
 31490 00017429 4883F900                	cmp rcx, 0
 31491 0001742D 7413                    	je .L_tc_recycle_frame_done_0106
 31492 0001742F 4D8B11                  	mov r10, qword [r9]
 31493 00017432 4D8910                  	mov qword [r8], r10
 31494 00017435 4983E808                	sub r8, 8
 31495 00017439 4983E908                	sub r9, 8
 31496 0001743D 48FFC9                  	dec rcx
 31497 00017440 EBE7                    	jmp .L_tc_recycle_frame_loop_0106
 31498                                  .L_tc_recycle_frame_done_0106:
 31499 00017442 498D6008                	lea rsp, [r8 + 8]
 31500 00017446 5D                      	pop rbp ; restore the old rbp
 31501 00017447 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31502 0001744A C9                      	leave
 31503 0001744B C21800                  	ret AND_KILL_FRAME(1)
 31504                                  .L_lambda_simple_end_00dd:	; new closure is in rax
 31505 0001744E 803804                  	cmp byte [rax], T_closure
 31506 00017451 0F85F5000000            	jne L_error_non_closure
 31507 00017457 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31508 0001745A FF5009                  	call SOB_CLOSURE_CODE(rax)
 31509 0001745D 803804                  	cmp byte [rax], T_closure
 31510 00017460 0F85E6000000            	jne L_error_non_closure
 31511 00017466 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31512 00017469 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31513 0001746C 803804                  	cmp byte [rax], T_closure
 31514 0001746F 0F85D7000000            	jne L_error_non_closure
 31515 00017475 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31516 00017478 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31517 0001747B 803804                  	cmp byte [rax], T_closure
 31518 0001747E 0F85C8000000            	jne L_error_non_closure
 31519 00017484 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31520 00017487 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31521                                  Lend:
 31522 0001748A 4889C7                  	mov rdi, rax
 31523 0001748D E8B8030000              	call print_sexpr_if_not_void
 31524                                  
 31525 00017492 48BF-                           mov rdi, fmt_memory_usage
 31525 00017494 [7518000000000000] 
 31526 0001749C 488B3425[FB180000]              mov rsi, qword [top_of_memory]
 31527 000174A4 4881EE[00000000]                sub rsi, memory
 31528 000174AB B800000000                      mov rax, 0
 31529                                          ENTER
    44 000174B0 C8000000            <1>  enter 0, 0
    45 000174B4 4883E4F0            <1>  and rsp, ~15
 31530 000174B8 E8(00000000)                    call printf
 31531                                          LEAVE
    49 000174BD C9                  <1>  leave
 31532 000174BE B800000000                      mov rax, 0
 31533 000174C3 E8(00000000)                    call exit
 31534                                  
 31535                                  L_error_fvar_undefined:
 31536 000174C8 50                              push rax
 31537 000174C9 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 31538 000174D1 48BE-                           mov rsi, fmt_undefined_free_var_1
 31538 000174D3 [DD17000000000000] 
 31539 000174DB B800000000                      mov rax, 0
 31540                                          ENTER
    44 000174E0 C8000000            <1>  enter 0, 0
    45 000174E4 4883E4F0            <1>  and rsp, ~15
 31541 000174E8 E8(00000000)                    call fprintf
 31542                                          LEAVE
    49 000174ED C9                  <1>  leave
 31543 000174EE 58                              pop rax
 31544 000174EF 488B4001                        mov rax, qword [rax + 1] ; string
 31545 000174F3 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 31546 000174F7 BE01000000                      mov rsi, 1               ; sizeof(char)
 31547 000174FC 488B5001                        mov rdx, qword [rax + 1] ; string-length
 31548 00017500 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 31549 00017508 B800000000                      mov rax, 0
 31550                                          ENTER
    44 0001750D C8000000            <1>  enter 0, 0
    45 00017511 4883E4F0            <1>  and rsp, ~15
 31551 00017515 E8(00000000)                    call fwrite
 31552                                          LEAVE
    49 0001751A C9                  <1>  leave
 31553 0001751B 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 31554 00017523 48BE-                           mov rsi, fmt_undefined_free_var_2
 31554 00017525 [F417000000000000] 
 31555 0001752D B800000000                      mov rax, 0
 31556                                          ENTER
    44 00017532 C8000000            <1>  enter 0, 0
    45 00017536 4883E4F0            <1>  and rsp, ~15
 31557 0001753A E8(00000000)                    call fprintf
 31558                                          LEAVE
    49 0001753F C9                  <1>  leave
 31559 00017540 48C7C0F6FFFFFF                  mov rax, -10
 31560 00017547 E8(00000000)                    call exit
 31561                                  
 31562                                  L_error_non_closure:
 31563 0001754C 488B3C25[00000000]              mov rdi, qword [stderr]
 31564 00017554 48BE-                           mov rsi, fmt_non_closure
 31564 00017556 [AB18000000000000] 
 31565 0001755E B800000000                      mov rax, 0
 31566                                          ENTER
    44 00017563 C8000000            <1>  enter 0, 0
    45 00017567 4883E4F0            <1>  and rsp, ~15
 31567 0001756B E8(00000000)                    call fprintf
 31568                                          LEAVE
    49 00017570 C9                  <1>  leave
 31569 00017571 48C7C0FEFFFFFF                  mov rax, -2
 31570 00017578 E8(00000000)                    call exit
 31571                                  
 31572                                  L_error_improper_list:
 31573 0001757D 488B3C25[00000000]      	mov rdi, qword [stderr]
 31574 00017585 48BE-                   	mov rsi, fmt_error_improper_list
 31574 00017587 [D318000000000000] 
 31575 0001758F B800000000              	mov rax, 0
 31576                                          ENTER
    44 00017594 C8000000            <1>  enter 0, 0
    45 00017598 4883E4F0            <1>  and rsp, ~15
 31577 0001759C E8(00000000)            	call fprintf
 31578                                          LEAVE
    49 000175A1 C9                  <1>  leave
 31579 000175A2 48C7C0F9FFFFFF          	mov rax, -7
 31580 000175A9 E8(00000000)            	call exit
 31581                                  
 31582                                  L_error_incorrect_arity_simple:
 31583 000175AE 488B3C25[00000000]              mov rdi, qword [stderr]
 31584 000175B6 48BE-                           mov rsi, fmt_incorrect_arity_simple
 31584 000175B8 [1618000000000000] 
 31585 000175C0 EB12                            jmp L_error_incorrect_arity_common
 31586                                  L_error_incorrect_arity_opt:
 31587 000175C2 488B3C25[00000000]              mov rdi, qword [stderr]
 31588 000175CA 48BE-                           mov rsi, fmt_incorrect_arity_opt
 31588 000175CC [4118000000000000] 
 31589                                  L_error_incorrect_arity_common:
 31590 000175D4 5A                              pop rdx
 31591 000175D5 59                              pop rcx
 31592 000175D6 B800000000                      mov rax, 0
 31593                                          ENTER
    44 000175DB C8000000            <1>  enter 0, 0
    45 000175DF 4883E4F0            <1>  and rsp, ~15
 31594 000175E3 E8(00000000)                    call fprintf
 31595                                          LEAVE
    49 000175E8 C9                  <1>  leave
 31596 000175E9 48C7C0FAFFFFFF                  mov rax, -6
 31597 000175F0 E8(00000000)                    call exit
 31598                                  
 31599                                  section .data
 31600                                  fmt_undefined_free_var_1:
 31601 000017DD 212121205468652066-             db `!!! The free variable \0`
 31601 000017E6 726565207661726961-
 31601 000017EF 626C652000         
 31602                                  fmt_undefined_free_var_2:
 31603 000017F4 207761732075736564-             db ` was used before it was defined.\n\0`
 31603 000017FD 206265666F72652069-
 31603 00001806 742077617320646566-
 31603 0000180F 696E65642E0A00     
 31604                                  fmt_incorrect_arity_simple:
 31605 00001816 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 31605 0000181F 74656420256C642061-
 31605 00001828 7267756D656E74732C-
 31605 00001831 206275742067697665-
 31605 0000183A 6E20256C640A00     
 31606                                  fmt_incorrect_arity_opt:
 31607 00001841 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 31607 0000184A 746564206174206C65-
 31607 00001853 61737420256C642061-
 31607 0000185C 7267756D656E74732C-
 31607 00001865 206275742067697665-
 31607 0000186E 6E20256C640A00     
 31608                                  fmt_memory_usage:
 31609 00001875 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 31609 0000187E 20256C642062797465-
 31609 00001887 73206F662064796E61-
 31609 00001890 6D6963616C6C792D61-
 31609 00001899 6C6C6F636174656420-
 31609 000018A2 6D656D6F72790A0A00 
 31610                                  fmt_non_closure:
 31611 000018AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 31611 000018B4 7074696E6720746F20-
 31611 000018BD 6170706C792061206E-
 31611 000018C6 6F6E2D636C6F737572-
 31611 000018CF 65210A00           
 31612                                  fmt_error_improper_list:
 31613 000018D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 31613 000018DC 7267756D656E742069-
 31613 000018E5 73206E6F7420612070-
 31613 000018EE 726F706572206C6973-
 31613 000018F7 74210A00           
 31614                                  
 31615                                  section .bss
 31616                                  memory:
 31617 00000000 <res 40000000h>         	resb gbytes(1)
 31618                                  
 31619                                  section .data
 31620                                  top_of_memory:
 31621 000018FB [0000000000000000]              dq memory
 31622                                  
 31623                                  section .text
 31624                                  malloc:
 31625 000175F5 488B0425[FB180000]              mov rax, qword [top_of_memory]
 31626 000175FD 48013C25[FB180000]              add qword [top_of_memory], rdi
 31627 00017605 C3                              ret
 31628                                  
 31629                                  L_code_ptr_return:
 31630 00017606 48837C241002            	cmp qword [rsp + 8*2], 2
 31631 0001760C 0F85E71C0000            	jne L_error_arg_count_2
 31632 00017612 488B4C2418              	mov rcx, qword [rsp + 8*3]
 31633                                  	assert_integer(rcx)
    53 00017617 803911              <1>  cmp byte [%1], %2
    54 0001761A 0F85781D0000        <1>  jne L_error_incorrect_type
 31634 00017620 488B4901                	mov rcx, qword [rcx + 1]
 31635 00017624 4883F900                	cmp rcx, 0
 31636 00017628 0F8CFF1B0000            	jl L_error_integer_range
 31637 0001762E 488B442420              	mov rax, qword [rsp + 8*4]
 31638                                  .L0:
 31639 00017633 4883F900                        cmp rcx, 0
 31640 00017637 7409                            je .L1
 31641 00017639 488B6D00                	mov rbp, qword [rbp]
 31642 0001763D 48FFC9                  	dec rcx
 31643 00017640 7FF1                    	jg .L0
 31644                                  .L1:
 31645 00017642 4889EC                  	mov rsp, rbp
 31646 00017645 5D                      	pop rbp
 31647 00017646 5B                              pop rbx
 31648 00017647 488B4C2408                      mov rcx, qword [rsp + 8*1]
 31649 0001764C 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 31650 00017651 FFE3                    	jmp rbx
 31651                                  
 31652                                  L_code_ptr_make_list:
 31653 00017653 C8000000                	enter 0, 0
 31654 00017657 48837D1801                      cmp COUNT, 1
 31655 0001765C 740C                            je .L0
 31656 0001765E 48837D1802                      cmp COUNT, 2
 31657 00017663 7411                            je .L1
 31658 00017665 E9C41C0000                      jmp L_error_arg_count_12
 31659                                  .L0:
 31660 0001766A 49B9-                           mov r9, sob_void
 31660 0001766C [0000000000000000] 
 31661 00017674 EB04                            jmp .L2
 31662                                  .L1:
 31663 00017676 4C8B4D28                        mov r9, PARAM(1)
 31664                                  .L2:
 31665 0001767A 488B4D20                        mov rcx, PARAM(0)
 31666                                          assert_integer(rcx)
    53 0001767E 803911              <1>  cmp byte [%1], %2
    54 00017681 0F85111D0000        <1>  jne L_error_incorrect_type
 31667 00017687 488B4901                        mov rcx, qword [rcx + 1]
 31668 0001768B 4883F900                        cmp rcx, 0
 31669 0001768F 0F8CC91B0000                    jl L_error_arg_negative
 31670 00017695 49B8-                           mov r8, sob_nil
 31670 00017697 [0100000000000000] 
 31671                                  .L3:
 31672 0001769F 4883F900                        cmp rcx, 0
 31673 000176A3 7E1D                            jle .L4
 31674 000176A5 BF11000000                      mov rdi, 1 + 8 + 8
 31675 000176AA E846FFFFFF                      call malloc
 31676 000176AF C60021                          mov byte [rax], T_pair
 31677 000176B2 4C894801                        mov qword [rax + 1], r9
 31678 000176B6 4C894009                        mov qword [rax + 1 + 8], r8
 31679 000176BA 4989C0                          mov r8, rax
 31680 000176BD 48FFC9                          dec rcx
 31681 000176C0 EBDD                            jmp .L3
 31682                                  .L4:
 31683 000176C2 4C89C0                          mov rax, r8
 31684 000176C5 48837D1802                      cmp COUNT, 2
 31685 000176CA 7404                            je .L5
 31686 000176CC C9                              leave
 31687 000176CD C21800                          ret AND_KILL_FRAME(1)
 31688                                  .L5:
 31689 000176D0 C9                      	leave
 31690 000176D1 C22000                  	ret AND_KILL_FRAME(2)
 31691                                  
 31692                                  L_code_ptr_is_primitive:
 31693 000176D4 C8000000                	enter 0, 0
 31694 000176D8 48837D1801              	cmp COUNT, 1
 31695 000176DD 0F85E11B0000            	jne L_error_arg_count_1
 31696 000176E3 488B4520                	mov rax, PARAM(0)
 31697                                  	assert_closure(rax)
    53 000176E7 803804              <1>  cmp byte [%1], %2
    54 000176EA 0F85A81C0000        <1>  jne L_error_incorrect_type
 31698 000176F0 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 31699 000176F5 750C                    	jne .L_false
 31700 000176F7 48B8-                   	mov rax, sob_boolean_true
 31700 000176F9 [0300000000000000] 
 31701 00017701 EB0A                    	jmp .L_end
 31702                                  .L_false:
 31703 00017703 48B8-                   	mov rax, sob_boolean_false
 31703 00017705 [0200000000000000] 
 31704                                  .L_end:
 31705 0001770D C9                      	leave
 31706 0001770E C21800                  	ret AND_KILL_FRAME(1)
 31707                                  
 31708                                  L_code_ptr_length:
 31709 00017711 C8000000                	enter 0, 0
 31710 00017715 48837D1801              	cmp COUNT, 1
 31711 0001771A 0F85A41B0000            	jne L_error_arg_count_1
 31712 00017720 488B5D20                	mov rbx, PARAM(0)
 31713 00017724 BF00000000              	mov rdi, 0
 31714                                  .L:
 31715 00017729 803B01                  	cmp byte [rbx], T_nil
 31716 0001772C 7412                    	je .L_end
 31717                                  	assert_pair(rbx)
    53 0001772E 803B21              <1>  cmp byte [%1], %2
    54 00017731 0F85611C0000        <1>  jne L_error_incorrect_type
 31718 00017737 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 31719 0001773B 48FFC7                  	inc rdi
 31720 0001773E EBE9                    	jmp .L
 31721                                  .L_end:
 31722 00017740 E8CE1A0000              	call make_integer
 31723 00017745 C9                      	leave
 31724 00017746 C21800                  	ret AND_KILL_FRAME(1)
 31725                                  
 31726                                  L_code_ptr_break:
 31727 00017749 48837C241000                    cmp qword [rsp + 8 * 2], 0
 31728 0001774F 0F853A1B0000                    jne L_error_arg_count_0
 31729 00017755 CC                              int3
 31730 00017756 48B8-                           mov rax, sob_void
 31730 00017758 [0000000000000000] 
 31731 00017760 C21000                          ret AND_KILL_FRAME(0)        
 31732                                  
 31733                                  L_code_ptr_frame:
 31734 00017763 C8000000                        enter 0, 0
 31735 00017767 48837D1800                      cmp COUNT, 0
 31736 0001776C 0F851D1B0000                    jne L_error_arg_count_0
 31737                                  
 31738 00017772 48BF-                           mov rdi, fmt_frame
 31738 00017774 [0319000000000000] 
 31739 0001777C 488B7500                        mov rsi, qword [rbp]    ; old rbp
 31740 00017780 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 31741 00017784 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 31742 00017788 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 31743 0001778C 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 31744 00017790 6A00                            push 0
 31745 00017792 4151                            push r9
 31746 00017794 4150                            push r8                   ; we'll use it when printing the params
 31747 00017796 B800000000                      mov rax, 0
 31748                                          
 31749                                          ENTER
    44 0001779B C8000000            <1>  enter 0, 0
    45 0001779F 4883E4F0            <1>  and rsp, ~15
 31750 000177A3 E8(00000000)                    call printf
 31751                                          LEAVE
    49 000177A8 C9                  <1>  leave
 31752                                  
 31753                                  .L:
 31754 000177A9 488B0C24                        mov rcx, qword [rsp]
 31755 000177AD 4883F900                        cmp rcx, 0
 31756 000177B1 7467                            je .L_out
 31757 000177B3 48BF-                           mov rdi, fmt_frame_param_prefix
 31757 000177B5 [3C19000000000000] 
 31758 000177BD 488B742410                      mov rsi, qword [rsp + 8*2]
 31759 000177C2 B800000000                      mov rax, 0
 31760                                          
 31761                                          ENTER
    44 000177C7 C8000000            <1>  enter 0, 0
    45 000177CB 4883E4F0            <1>  and rsp, ~15
 31762 000177CF E8(00000000)                    call printf
 31763                                          LEAVE
    49 000177D4 C9                  <1>  leave
 31764                                  
 31765 000177D5 488B0C24                        mov rcx, qword [rsp]
 31766 000177D9 48FFC9                          dec rcx
 31767 000177DC 48890C24                        mov qword [rsp], rcx    ; dec arg count
 31768 000177E0 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 31769 000177E5 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 31770 000177EA 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 31771 000177EE 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 31772 000177F3 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 31773 000177F6 E87B000000                      call print_sexpr
 31774 000177FB 48BF-                           mov rdi, fmt_newline
 31774 000177FD [6819000000000000] 
 31775 00017805 B800000000                      mov rax, 0
 31776                                          ENTER
    44 0001780A C8000000            <1>  enter 0, 0
    45 0001780E 4883E4F0            <1>  and rsp, ~15
 31777 00017812 E8(00000000)                    call printf
 31778                                          LEAVE
    49 00017817 C9                  <1>  leave
 31779 00017818 EB8F                            jmp .L
 31780                                  .L_out:
 31781 0001781A 48BF-                           mov rdi, fmt_frame_continue
 31781 0001781C [4D19000000000000] 
 31782 00017824 B800000000                      mov rax, 0
 31783                                          ENTER
    44 00017829 C8000000            <1>  enter 0, 0
    45 0001782D 4883E4F0            <1>  and rsp, ~15
 31784 00017831 E8(00000000)                    call printf
 31785 00017836 E8(00000000)                    call getchar
 31786                                          LEAVE
    49 0001783B C9                  <1>  leave
 31787                                          
 31788 0001783C 48B8-                           mov rax, sob_void
 31788 0001783E [0000000000000000] 
 31789 00017846 C9                              leave
 31790 00017847 C21000                          ret AND_KILL_FRAME(0)
 31791                                          
 31792                                  print_sexpr_if_not_void:
 31793 0001784A 4881FF[00000000]        	cmp rdi, sob_void
 31794 00017851 7422                    	je .done
 31795 00017853 E81E000000              	call print_sexpr
 31796 00017858 48BF-                   	mov rdi, fmt_newline
 31796 0001785A [6819000000000000] 
 31797 00017862 B800000000              	mov rax, 0
 31798                                  	ENTER
    44 00017867 C8000000            <1>  enter 0, 0
    45 0001786B 4883E4F0            <1>  and rsp, ~15
 31799 0001786F E8(00000000)            	call printf
 31800                                  	LEAVE
    49 00017874 C9                  <1>  leave
 31801                                  .done:
 31802 00017875 C3                      	ret
 31803                                  
 31804                                  section .data
 31805                                  fmt_frame:
 31806 00001903 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 31806 0000190C 207265742061646472-
 31806 00001915 203D2025703B206C65-
 31806 0000191E 7820656E76203D2025-
 31806 00001927 703B20706172616D20-
 31806 00001930 636F756E74203D2025-
 31806 00001939 640A00             
 31807                                  fmt_frame_param_prefix:
 31808 0000193C 3D3D5B706172616D20-             db `==[param %d]==> \0`
 31808 00001945 25645D3D3D3E2000   
 31809                                  fmt_frame_continue:
 31810 0000194D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 31810 00001956 723E20746F20636F6E-
 31810 0000195F 74696E75652E2E2E00 
 31811                                  fmt_newline:
 31812 00001968 0A00                    	db `\n\0`
 31813                                  fmt_void:
 31814 0000196A 233C766F69643E00        	db `#<void>\0`
 31815                                  fmt_nil:
 31816 00001972 282900                  	db `()\0`
 31817                                  fmt_boolean_false:
 31818 00001975 236600                  	db `#f\0`
 31819                                  fmt_boolean_true:
 31820 00001978 237400                  	db `#t\0`
 31821                                  fmt_char_backslash:
 31822 0000197B 235C5C00                	db `#\\\\\0`
 31823                                  fmt_char_dquote:
 31824 0000197F 235C2200                	db `#\\"\0`
 31825                                  fmt_char_simple:
 31826 00001983 235C256300              	db `#\\%c\0`
 31827                                  fmt_char_null:
 31828 00001988 235C6E756C00            	db `#\\nul\0`
 31829                                  fmt_char_bell:
 31830 0000198E 235C62656C6C00          	db `#\\bell\0`
 31831                                  fmt_char_backspace:
 31832 00001995 235C6261636B737061-     	db `#\\backspace\0`
 31832 0000199E 636500             
 31833                                  fmt_char_tab:
 31834 000019A1 235C74616200            	db `#\\tab\0`
 31835                                  fmt_char_newline:
 31836 000019A7 235C6E65776C696E65-     	db `#\\newline\0`
 31836 000019B0 00                 
 31837                                  fmt_char_formfeed:
 31838 000019B1 235C7061676500          	db `#\\page\0`
 31839                                  fmt_char_return:
 31840 000019B8 235C72657475726E00      	db `#\\return\0`
 31841                                  fmt_char_escape:
 31842 000019C1 235C65736300            	db `#\\esc\0`
 31843                                  fmt_char_space:
 31844 000019C7 235C737061636500        	db `#\\space\0`
 31845                                  fmt_char_hex:
 31846 000019CF 235C782530325800        	db `#\\x%02X\0`
 31847                                  fmt_gensym:
 31848 000019D7 47256C6400                      db `G%ld\0`
 31849                                  fmt_closure:
 31850 000019DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 31850 000019E5 206174203078253038-
 31850 000019EE 5820656E763D307825-
 31850 000019F7 30385820636F64653D-
 31850 00001A00 3078253038583E00   
 31851                                  fmt_lparen:
 31852 00001A08 2800                    	db `(\0`
 31853                                  fmt_dotted_pair:
 31854 00001A0A 202E2000                	db ` . \0`
 31855                                  fmt_rparen:
 31856 00001A0E 2900                    	db `)\0`
 31857                                  fmt_space:
 31858 00001A10 2000                    	db ` \0`
 31859                                  fmt_empty_vector:
 31860 00001A12 23282900                	db `#()\0`
 31861                                  fmt_vector:
 31862 00001A16 232800                  	db `#(\0`
 31863                                  fmt_real:
 31864 00001A19 256600                  	db `%f\0`
 31865                                  fmt_fraction:
 31866 00001A1C 256C642F256C6400        	db `%ld/%ld\0`
 31867                                  fmt_zero:
 31868 00001A24 3000                    	db `0\0`
 31869                                  fmt_int:
 31870 00001A26 256C6400                	db `%ld\0`
 31871                                  fmt_unknown_scheme_object_error:
 31872 00001A2A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 31872 00001A33 6F723A20556E6B6E6F-
 31872 00001A3C 776E20536368656D65-
 31872 00001A45 2D6F626A6563742028-
 31872 00001A4E 525454492030782530-
 31872 00001A57 32582920           
 31873 00001A5B 617420616464726573-     	db `at address 0x%08X\n\n\0`
 31873 00001A64 73203078253038580A-
 31873 00001A6D 0A00               
 31874                                  fmt_dquote:
 31875 00001A6F 2200                    	db `\"\0`
 31876                                  fmt_string_char:
 31877 00001A71 256300                          db `%c\0`
 31878                                  fmt_string_char_7:
 31879 00001A74 5C6100                          db `\\a\0`
 31880                                  fmt_string_char_8:
 31881 00001A77 5C6200                          db `\\b\0`
 31882                                  fmt_string_char_9:
 31883 00001A7A 5C7400                          db `\\t\0`
 31884                                  fmt_string_char_10:
 31885 00001A7D 5C6E00                          db `\\n\0`
 31886                                  fmt_string_char_11:
 31887 00001A80 5C7600                          db `\\v\0`
 31888                                  fmt_string_char_12:
 31889 00001A83 5C6600                          db `\\f\0`
 31890                                  fmt_string_char_13:
 31891 00001A86 5C7200                          db `\\r\0`
 31892                                  fmt_string_char_34:
 31893 00001A89 5C2200                          db `\\"\0`
 31894                                  fmt_string_char_92:
 31895 00001A8C 5C5C00                          db `\\\\\0`
 31896                                  fmt_string_char_hex:
 31897 00001A8F 5C7825583B00                    db `\\x%X;\0`
 31898                                  
 31899                                  section .text
 31900                                  
 31901                                  print_sexpr:
 31902 00017876 C8000000                	enter 0, 0
 31903 0001787A 8A07                    	mov al, byte [rdi]
 31904 0001787C 3C00                    	cmp al, T_void
 31905 0001787E 7465                    	je .Lvoid
 31906 00017880 3C01                    	cmp al, T_nil
 31907 00017882 7470                    	je .Lnil
 31908 00017884 3C09                    	cmp al, T_boolean_false
 31909 00017886 747B                    	je .Lboolean_false
 31910 00017888 3C0A                    	cmp al, T_boolean_true
 31911 0001788A 0F8482000000            	je .Lboolean_true
 31912 00017890 3C02                    	cmp al, T_char
 31913 00017892 0F8489000000            	je .Lchar
 31914 00017898 3C41                    	cmp al, T_interned_symbol
 31915 0001789A 0F84CB010000            	je .Linterned_symbol
 31916 000178A0 3C42                            cmp al, T_uninterned_symbol
 31917 000178A2 0F84EF010000                    je .Luninterned_symbol
 31918 000178A8 3C21                    	cmp al, T_pair
 31919 000178AA 0F84FA010000            	je .Lpair
 31920 000178B0 3C22                    	cmp al, T_vector
 31921 000178B2 0F84C3020000            	je .Lvector
 31922 000178B8 3C04                    	cmp al, T_closure
 31923 000178BA 0F8491010000            	je .Lclosure
 31924 000178C0 3C13                    	cmp al, T_real
 31925 000178C2 0F8454030000            	je .Lreal
 31926 000178C8 3C12                    	cmp al, T_fraction
 31927 000178CA 0F847A030000            	je .Lfraction
 31928 000178D0 3C11                    	cmp al, T_integer
 31929 000178D2 0F84B3030000            	je .Linteger
 31930 000178D8 3C03                    	cmp al, T_string
 31931 000178DA 0F84BE030000            	je .Lstring
 31932                                  
 31933 000178E0 E9F6040000              	jmp .Lunknown_sexpr_type
 31934                                  
 31935                                  .Lvoid:
 31936 000178E5 48BF-                   	mov rdi, fmt_void
 31936 000178E7 [6A19000000000000] 
 31937 000178EF E91A050000              	jmp .Lemit
 31938                                  
 31939                                  .Lnil:
 31940 000178F4 48BF-                   	mov rdi, fmt_nil
 31940 000178F6 [7219000000000000] 
 31941 000178FE E90B050000              	jmp .Lemit
 31942                                  
 31943                                  .Lboolean_false:
 31944 00017903 48BF-                   	mov rdi, fmt_boolean_false
 31944 00017905 [7519000000000000] 
 31945 0001790D E9FC040000              	jmp .Lemit
 31946                                  
 31947                                  .Lboolean_true:
 31948 00017912 48BF-                   	mov rdi, fmt_boolean_true
 31948 00017914 [7819000000000000] 
 31949 0001791C E9ED040000              	jmp .Lemit
 31950                                  
 31951                                  .Lchar:
 31952 00017921 8A4701                  	mov al, byte [rdi + 1]
 31953 00017924 3C20                    	cmp al, ' '
 31954 00017926 7E28                    	jle .Lchar_whitespace
 31955 00017928 3C5C                    	cmp al, 92 		; backslash
 31956 0001792A 0F847C000000            	je .Lchar_backslash
 31957 00017930 3C22                    	cmp al, '"'
 31958 00017932 0F8483000000            	je .Lchar_dquote
 31959 00017938 4825FF000000            	and rax, 255
 31960 0001793E 48BF-                   	mov rdi, fmt_char_simple
 31960 00017940 [8319000000000000] 
 31961 00017948 4889C6                  	mov rsi, rax
 31962 0001794B E9BE040000              	jmp .Lemit
 31963                                  
 31964                                  .Lchar_whitespace:
 31965 00017950 3C00                    	cmp al, 0
 31966 00017952 7476                    	je .Lchar_null
 31967 00017954 3C07                    	cmp al, 7
 31968 00017956 0F847D000000            	je .Lchar_bell
 31969 0001795C 3C08                    	cmp al, 8
 31970 0001795E 0F8484000000            	je .Lchar_backspace
 31971 00017964 3C09                    	cmp al, 9
 31972 00017966 0F848B000000            	je .Lchar_tab
 31973 0001796C 3C0A                    	cmp al, 10
 31974 0001796E 0F8492000000            	je .Lchar_newline
 31975 00017974 3C0C                    	cmp al, 12
 31976 00017976 0F8499000000            	je .Lchar_formfeed
 31977 0001797C 3C0D                    	cmp al, 13
 31978 0001797E 0F84A0000000            	je .Lchar_return
 31979 00017984 3C1B                    	cmp al, 27
 31980 00017986 0F84A7000000            	je .Lchar_escape
 31981 0001798C 4825FF000000            	and rax, 255
 31982 00017992 3C20                    	cmp al, ' '
 31983 00017994 0F84A8000000            	je .Lchar_space
 31984 0001799A 48BF-                   	mov rdi, fmt_char_hex
 31984 0001799C [CF19000000000000] 
 31985 000179A4 4889C6                  	mov rsi, rax
 31986 000179A7 E962040000              	jmp .Lemit	
 31987                                  
 31988                                  .Lchar_backslash:
 31989 000179AC 48BF-                   	mov rdi, fmt_char_backslash
 31989 000179AE [7B19000000000000] 
 31990 000179B6 E953040000              	jmp .Lemit
 31991                                  
 31992                                  .Lchar_dquote:
 31993 000179BB 48BF-                   	mov rdi, fmt_char_dquote
 31993 000179BD [7F19000000000000] 
 31994 000179C5 E944040000              	jmp .Lemit
 31995                                  
 31996                                  .Lchar_null:
 31997 000179CA 48BF-                   	mov rdi, fmt_char_null
 31997 000179CC [8819000000000000] 
 31998 000179D4 E935040000              	jmp .Lemit
 31999                                  
 32000                                  .Lchar_bell:
 32001 000179D9 48BF-                   	mov rdi, fmt_char_bell
 32001 000179DB [8E19000000000000] 
 32002 000179E3 E926040000              	jmp .Lemit
 32003                                  
 32004                                  .Lchar_backspace:
 32005 000179E8 48BF-                   	mov rdi, fmt_char_backspace
 32005 000179EA [9519000000000000] 
 32006 000179F2 E917040000              	jmp .Lemit
 32007                                  
 32008                                  .Lchar_tab:
 32009 000179F7 48BF-                   	mov rdi, fmt_char_tab
 32009 000179F9 [A119000000000000] 
 32010 00017A01 E908040000              	jmp .Lemit
 32011                                  
 32012                                  .Lchar_newline:
 32013 00017A06 48BF-                   	mov rdi, fmt_char_newline
 32013 00017A08 [A719000000000000] 
 32014 00017A10 E9F9030000              	jmp .Lemit
 32015                                  
 32016                                  .Lchar_formfeed:
 32017 00017A15 48BF-                   	mov rdi, fmt_char_formfeed
 32017 00017A17 [B119000000000000] 
 32018 00017A1F E9EA030000              	jmp .Lemit
 32019                                  
 32020                                  .Lchar_return:
 32021 00017A24 48BF-                   	mov rdi, fmt_char_return
 32021 00017A26 [B819000000000000] 
 32022 00017A2E E9DB030000              	jmp .Lemit
 32023                                  
 32024                                  .Lchar_escape:
 32025 00017A33 48BF-                   	mov rdi, fmt_char_escape
 32025 00017A35 [C119000000000000] 
 32026 00017A3D E9CC030000              	jmp .Lemit
 32027                                  
 32028                                  .Lchar_space:
 32029 00017A42 48BF-                   	mov rdi, fmt_char_space
 32029 00017A44 [C719000000000000] 
 32030 00017A4C E9BD030000              	jmp .Lemit
 32031                                  
 32032                                  .Lclosure:
 32033 00017A51 4889FE                  	mov rsi, qword rdi
 32034 00017A54 48BF-                   	mov rdi, fmt_closure
 32034 00017A56 [DC19000000000000] 
 32035 00017A5E 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 32036 00017A62 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 32037 00017A66 E9A3030000              	jmp .Lemit
 32038                                  
 32039                                  .Linterned_symbol:
 32040 00017A6B 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 32041 00017A6F BE01000000              	mov rsi, 1		 ; size = 1 byte
 32042 00017A74 488B5701                	mov rdx, qword [rdi + 1] ; length
 32043 00017A78 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 32044 00017A7C 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 32045                                  	ENTER
    44 00017A84 C8000000            <1>  enter 0, 0
    45 00017A88 4883E4F0            <1>  and rsp, ~15
 32046 00017A8C E8(00000000)            	call fwrite
 32047                                  	LEAVE
    49 00017A91 C9                  <1>  leave
 32048 00017A92 E98C030000              	jmp .Lend
 32049                                  
 32050                                  .Luninterned_symbol:
 32051 00017A97 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 32052 00017A9B 48BF-                           mov rdi, fmt_gensym
 32052 00017A9D [D719000000000000] 
 32053 00017AA5 E964030000                      jmp .Lemit
 32054                                  	
 32055                                  .Lpair:
 32056 00017AAA 57                      	push rdi
 32057 00017AAB 48BF-                   	mov rdi, fmt_lparen
 32057 00017AAD [081A000000000000] 
 32058 00017AB5 B800000000              	mov rax, 0
 32059                                          ENTER
    44 00017ABA C8000000            <1>  enter 0, 0
    45 00017ABE 4883E4F0            <1>  and rsp, ~15
 32060 00017AC2 E8(00000000)            	call printf
 32061                                          LEAVE
    49 00017AC7 C9                  <1>  leave
 32062 00017AC8 488B3C24                	mov rdi, qword [rsp] 	; pair
 32063 00017ACC 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 32064 00017AD0 E8A1FDFFFF              	call print_sexpr
 32065 00017AD5 5F                      	pop rdi 		; pair
 32066 00017AD6 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 32067                                  .Lcdr:
 32068 00017ADA 8A07                    	mov al, byte [rdi]
 32069 00017ADC 3C01                    	cmp al, T_nil
 32070 00017ADE 7447                    	je .Lcdr_nil
 32071 00017AE0 3C21                    	cmp al, T_pair
 32072 00017AE2 7462                    	je .Lcdr_pair
 32073 00017AE4 57                      	push rdi
 32074 00017AE5 48BF-                   	mov rdi, fmt_dotted_pair
 32074 00017AE7 [0A1A000000000000] 
 32075 00017AEF B800000000              	mov rax, 0
 32076                                          ENTER
    44 00017AF4 C8000000            <1>  enter 0, 0
    45 00017AF8 4883E4F0            <1>  and rsp, ~15
 32077 00017AFC E8(00000000)            	call printf
 32078                                          LEAVE
    49 00017B01 C9                  <1>  leave
 32079 00017B02 5F                      	pop rdi
 32080 00017B03 E86EFDFFFF              	call print_sexpr
 32081 00017B08 48BF-                   	mov rdi, fmt_rparen
 32081 00017B0A [0E1A000000000000] 
 32082 00017B12 B800000000              	mov rax, 0
 32083                                          ENTER
    44 00017B17 C8000000            <1>  enter 0, 0
    45 00017B1B 4883E4F0            <1>  and rsp, ~15
 32084 00017B1F E8(00000000)            	call printf
 32085                                          LEAVE
    49 00017B24 C9                  <1>  leave
 32086 00017B25 C9                      	leave
 32087 00017B26 C3                      	ret
 32088                                  
 32089                                  .Lcdr_nil:
 32090 00017B27 48BF-                   	mov rdi, fmt_rparen
 32090 00017B29 [0E1A000000000000] 
 32091 00017B31 B800000000              	mov rax, 0
 32092                                          ENTER
    44 00017B36 C8000000            <1>  enter 0, 0
    45 00017B3A 4883E4F0            <1>  and rsp, ~15
 32093 00017B3E E8(00000000)            	call printf
 32094                                          LEAVE
    49 00017B43 C9                  <1>  leave
 32095 00017B44 C9                      	leave
 32096 00017B45 C3                      	ret
 32097                                  
 32098                                  .Lcdr_pair:
 32099 00017B46 57                      	push rdi
 32100 00017B47 48BF-                   	mov rdi, fmt_space
 32100 00017B49 [101A000000000000] 
 32101 00017B51 B800000000              	mov rax, 0
 32102                                          ENTER
    44 00017B56 C8000000            <1>  enter 0, 0
    45 00017B5A 4883E4F0            <1>  and rsp, ~15
 32103 00017B5E E8(00000000)            	call printf
 32104                                          LEAVE
    49 00017B63 C9                  <1>  leave
 32105 00017B64 488B3C24                	mov rdi, qword [rsp]
 32106 00017B68 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 32107 00017B6C E805FDFFFF              	call print_sexpr
 32108 00017B71 5F                      	pop rdi
 32109 00017B72 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 32110 00017B76 E95FFFFFFF              	jmp .Lcdr
 32111                                  
 32112                                  .Lvector:
 32113 00017B7B 488B4701                	mov rax, qword [rdi + 1] ; length
 32114 00017B7F 4883F800                	cmp rax, 0
 32115 00017B83 0F8484000000            	je .Lvector_empty
 32116 00017B89 57                      	push rdi
 32117 00017B8A 48BF-                   	mov rdi, fmt_vector
 32117 00017B8C [161A000000000000] 
 32118 00017B94 B800000000              	mov rax, 0
 32119                                          ENTER
    44 00017B99 C8000000            <1>  enter 0, 0
    45 00017B9D 4883E4F0            <1>  and rsp, ~15
 32120 00017BA1 E8(00000000)            	call printf
 32121                                          LEAVE
    49 00017BA6 C9                  <1>  leave
 32122 00017BA7 488B3C24                	mov rdi, qword [rsp]
 32123 00017BAB FF7701                  	push qword [rdi + 1]
 32124 00017BAE 6A01                    	push 1
 32125 00017BB0 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 32126 00017BB4 E8BDFCFFFF              	call print_sexpr
 32127                                  .Lvector_loop:
 32128                                  	; [rsp] index
 32129                                  	; [rsp + 8*1] limit
 32130                                  	; [rsp + 8*2] vector
 32131 00017BB9 488B0424                	mov rax, qword [rsp]
 32132 00017BBD 483B442408              	cmp rax, qword [rsp + 8*1]
 32133 00017BC2 7436                    	je .Lvector_end
 32134 00017BC4 48BF-                   	mov rdi, fmt_space
 32134 00017BC6 [101A000000000000] 
 32135 00017BCE B800000000              	mov rax, 0
 32136                                          ENTER
    44 00017BD3 C8000000            <1>  enter 0, 0
    45 00017BD7 4883E4F0            <1>  and rsp, ~15
 32137 00017BDB E8(00000000)            	call printf
 32138                                          LEAVE
    49 00017BE0 C9                  <1>  leave
 32139 00017BE1 488B0424                	mov rax, qword [rsp]
 32140 00017BE5 488B5C2410              	mov rbx, qword [rsp + 8*2]
 32141 00017BEA 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 32142 00017BEF E882FCFFFF              	call print_sexpr
 32143 00017BF4 48FF0424                	inc qword [rsp]
 32144 00017BF8 EBBF                    	jmp .Lvector_loop
 32145                                  
 32146                                  .Lvector_end:
 32147 00017BFA 4883C418                	add rsp, 8*3
 32148 00017BFE 48BF-                   	mov rdi, fmt_rparen
 32148 00017C00 [0E1A000000000000] 
 32149 00017C08 E901020000              	jmp .Lemit	
 32150                                  
 32151                                  .Lvector_empty:
 32152 00017C0D 48BF-                   	mov rdi, fmt_empty_vector
 32152 00017C0F [121A000000000000] 
 32153 00017C17 E9F2010000              	jmp .Lemit
 32154                                  
 32155                                  .Lreal:
 32156 00017C1C FF7701                  	push qword [rdi + 1]
 32157 00017C1F F20F100424              	movsd xmm0, qword [rsp]
 32158 00017C24 4883C408                	add rsp, 8*1
 32159 00017C28 48BF-                   	mov rdi, fmt_real
 32159 00017C2A [191A000000000000] 
 32160 00017C32 B801000000              	mov rax, 1
 32161                                  	ENTER
    44 00017C37 C8000000            <1>  enter 0, 0
    45 00017C3B 4883E4F0            <1>  and rsp, ~15
 32162 00017C3F E8(00000000)            	call printf
 32163                                  	LEAVE
    49 00017C44 C9                  <1>  leave
 32164 00017C45 E9D9010000              	jmp .Lend
 32165                                  
 32166                                  .Lfraction:
 32167 00017C4A 488B7701                	mov rsi, qword [rdi + 1]
 32168 00017C4E 488B5709                	mov rdx, qword [rdi + 1 + 8]
 32169 00017C52 4883FE00                	cmp rsi, 0
 32170 00017C56 7415                    	je .Lrat_zero
 32171 00017C58 4883FA01                	cmp rdx, 1
 32172 00017C5C 741E                    	je .Lrat_int
 32173 00017C5E 48BF-                   	mov rdi, fmt_fraction
 32173 00017C60 [1C1A000000000000] 
 32174 00017C68 E9A1010000              	jmp .Lemit
 32175                                  
 32176                                  .Lrat_zero:
 32177 00017C6D 48BF-                   	mov rdi, fmt_zero
 32177 00017C6F [241A000000000000] 
 32178 00017C77 E992010000              	jmp .Lemit
 32179                                  
 32180                                  .Lrat_int:
 32181 00017C7C 48BF-                   	mov rdi, fmt_int
 32181 00017C7E [261A000000000000] 
 32182 00017C86 E983010000              	jmp .Lemit
 32183                                  
 32184                                  .Linteger:
 32185 00017C8B 488B7701                	mov rsi, qword [rdi + 1]
 32186 00017C8F 48BF-                   	mov rdi, fmt_int
 32186 00017C91 [261A000000000000] 
 32187 00017C99 E970010000              	jmp .Lemit
 32188                                  
 32189                                  .Lstring:
 32190 00017C9E 488D4709                	lea rax, [rdi + 1 + 8]
 32191 00017CA2 50                      	push rax
 32192 00017CA3 FF7701                  	push qword [rdi + 1]
 32193 00017CA6 48BF-                   	mov rdi, fmt_dquote
 32193 00017CA8 [6F1A000000000000] 
 32194 00017CB0 B800000000              	mov rax, 0
 32195                                  	ENTER
    44 00017CB5 C8000000            <1>  enter 0, 0
    45 00017CB9 4883E4F0            <1>  and rsp, ~15
 32196 00017CBD E8(00000000)            	call printf
 32197                                  	LEAVE
    49 00017CC2 C9                  <1>  leave
 32198                                  .Lstring_loop:
 32199                                  	; qword [rsp]: limit
 32200                                  	; qword [rsp + 8*1]: char *
 32201 00017CC3 48833C2400              	cmp qword [rsp], 0
 32202 00017CC8 0F84FD000000            	je .Lstring_end
 32203 00017CCE 488B442408              	mov rax, qword [rsp + 8*1]
 32204 00017CD3 8A00                    	mov al, byte [rax]
 32205 00017CD5 4825FF000000            	and rax, 255
 32206 00017CDB 3C07                    	cmp al, 7
 32207 00017CDD 7468                            je .Lstring_char_7
 32208 00017CDF 3C08                            cmp al, 8
 32209 00017CE1 7470                            je .Lstring_char_8
 32210 00017CE3 3C09                            cmp al, 9
 32211 00017CE5 7478                            je .Lstring_char_9
 32212 00017CE7 3C0A                            cmp al, 10
 32213 00017CE9 0F847C000000                    je .Lstring_char_10
 32214 00017CEF 3C0B                            cmp al, 11
 32215 00017CF1 0F8480000000                    je .Lstring_char_11
 32216 00017CF7 3C0C                            cmp al, 12
 32217 00017CF9 0F8484000000                    je .Lstring_char_12
 32218 00017CFF 3C0D                            cmp al, 13
 32219 00017D01 0F8488000000                    je .Lstring_char_13
 32220 00017D07 3C22                            cmp al, 34
 32221 00017D09 0F848C000000                    je .Lstring_char_34
 32222 00017D0F 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 32224 00017D11 3C20                            cmp al, ' '
 32225 00017D13 0F8CA0000000                    jl .Lstring_char_hex
 32226 00017D19 48BF-                           mov rdi, fmt_string_char
 32226 00017D1B [711A000000000000] 
 32227 00017D23 4889C6                          mov rsi, rax
 32228                                  .Lstring_char_emit:
 32229 00017D26 B800000000                      mov rax, 0
 32230                                          ENTER
    44 00017D2B C8000000            <1>  enter 0, 0
    45 00017D2F 4883E4F0            <1>  and rsp, ~15
 32231 00017D33 E8(00000000)                    call printf
 32232                                          LEAVE
    49 00017D38 C9                  <1>  leave
 32233 00017D39 48FF0C24                        dec qword [rsp]
 32234 00017D3D 48FF442408                      inc qword [rsp + 8*1]
 32235 00017D42 E97CFFFFFF                      jmp .Lstring_loop
 32236                                  
 32237                                  .Lstring_char_7:
 32238 00017D47 48BF-                           mov rdi, fmt_string_char_7
 32238 00017D49 [741A000000000000] 
 32239 00017D51 EBD3                            jmp .Lstring_char_emit
 32240                                  
 32241                                  .Lstring_char_8:
 32242 00017D53 48BF-                           mov rdi, fmt_string_char_8
 32242 00017D55 [771A000000000000] 
 32243 00017D5D EBC7                            jmp .Lstring_char_emit
 32244                                          
 32245                                  .Lstring_char_9:
 32246 00017D5F 48BF-                           mov rdi, fmt_string_char_9
 32246 00017D61 [7A1A000000000000] 
 32247 00017D69 EBBB                            jmp .Lstring_char_emit
 32248                                  
 32249                                  .Lstring_char_10:
 32250 00017D6B 48BF-                           mov rdi, fmt_string_char_10
 32250 00017D6D [7D1A000000000000] 
 32251 00017D75 EBAF                            jmp .Lstring_char_emit
 32252                                  
 32253                                  .Lstring_char_11:
 32254 00017D77 48BF-                           mov rdi, fmt_string_char_11
 32254 00017D79 [801A000000000000] 
 32255 00017D81 EBA3                            jmp .Lstring_char_emit
 32256                                  
 32257                                  .Lstring_char_12:
 32258 00017D83 48BF-                           mov rdi, fmt_string_char_12
 32258 00017D85 [831A000000000000] 
 32259 00017D8D EB97                            jmp .Lstring_char_emit
 32260                                  
 32261                                  .Lstring_char_13:
 32262 00017D8F 48BF-                           mov rdi, fmt_string_char_13
 32262 00017D91 [861A000000000000] 
 32263 00017D99 EB8B                            jmp .Lstring_char_emit
 32264                                  
 32265                                  .Lstring_char_34:
 32266 00017D9B 48BF-                           mov rdi, fmt_string_char_34
 32266 00017D9D [891A000000000000] 
 32267 00017DA5 E97CFFFFFF                      jmp .Lstring_char_emit
 32268                                  
 32269                                  .Lstring_char_92:
 32270 00017DAA 48BF-                           mov rdi, fmt_string_char_92
 32270 00017DAC [8C1A000000000000] 
 32271 00017DB4 E96DFFFFFF                      jmp .Lstring_char_emit
 32272                                  
 32273                                  .Lstring_char_hex:
 32274 00017DB9 48BF-                           mov rdi, fmt_string_char_hex
 32274 00017DBB [8F1A000000000000] 
 32275 00017DC3 4889C6                          mov rsi, rax
 32276 00017DC6 E95BFFFFFF                      jmp .Lstring_char_emit        
 32277                                  
 32278                                  .Lstring_end:
 32279 00017DCB 4883C410                	add rsp, 8 * 2
 32280 00017DCF 48BF-                   	mov rdi, fmt_dquote
 32280 00017DD1 [6F1A000000000000] 
 32281 00017DD9 EB33                    	jmp .Lemit
 32282                                  
 32283                                  .Lunknown_sexpr_type:
 32284 00017DDB 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 32284 00017DDD [2A1A000000000000] 
 32285 00017DE5 4825FF000000            	and rax, 255
 32286 00017DEB 4889C2                  	mov rdx, rax
 32287 00017DEE 4889F9                  	mov rcx, rdi
 32288 00017DF1 488B3C25[00000000]      	mov rdi, qword [stderr]
 32289 00017DF9 B800000000              	mov rax, 0
 32290                                          ENTER
    44 00017DFE C8000000            <1>  enter 0, 0
    45 00017E02 4883E4F0            <1>  and rsp, ~15
 32291 00017E06 E8(00000000)            	call fprintf
 32292                                          LEAVE
    49 00017E0B C9                  <1>  leave
 32293 00017E0C C9                              leave
 32294 00017E0D C3                              ret
 32295                                  
 32296                                  .Lemit:
 32297 00017E0E B800000000              	mov rax, 0
 32298                                          ENTER
    44 00017E13 C8000000            <1>  enter 0, 0
    45 00017E17 4883E4F0            <1>  and rsp, ~15
 32299 00017E1B E8(00000000)            	call printf
 32300                                          LEAVE
    49 00017E20 C9                  <1>  leave
 32301 00017E21 EB00                    	jmp .Lend
 32302                                  
 32303                                  .Lend:
 32304                                  	LEAVE
    49 00017E23 C9                  <1>  leave
 32305 00017E24 C3                      	ret
 32306                                  
 32307                                  ;;; rdi: address of free variable
 32308                                  ;;; rsi: address of code-pointer
 32309                                  bind_primitive:
 32310 00017E25 C8000000                        enter 0, 0
 32311 00017E29 57                              push rdi
 32312 00017E2A BF11000000                      mov rdi, (1 + 8 + 8)
 32313 00017E2F E8C1F7FFFF                      call malloc
 32314 00017E34 5F                              pop rdi
 32315 00017E35 C60004                          mov byte [rax], T_closure
 32316 00017E38 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 32317 00017E40 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 32318 00017E44 488907                          mov qword [rdi], rax
 32319 00017E47 48B8-                           mov rax, sob_void
 32319 00017E49 [0000000000000000] 
 32320 00017E51 C9                              leave
 32321 00017E52 C3                              ret
 32322                                  
 32323                                  L_code_ptr_ash:
 32324 00017E53 C8000000                        enter 0, 0
 32325 00017E57 48837D1802                      cmp COUNT, 2
 32326 00017E5C 0F8597140000                    jne L_error_arg_count_2
 32327 00017E62 488B7D20                        mov rdi, PARAM(0)
 32328                                          assert_integer(rdi)
    53 00017E66 803F11              <1>  cmp byte [%1], %2
    54 00017E69 0F8529150000        <1>  jne L_error_incorrect_type
 32329 00017E6F 488B4D28                        mov rcx, PARAM(1)
 32330                                          assert_integer(rcx)
    53 00017E73 803911              <1>  cmp byte [%1], %2
    54 00017E76 0F851C150000        <1>  jne L_error_incorrect_type
 32331 00017E7C 488B7F01                        mov rdi, qword [rdi + 1]
 32332 00017E80 488B4901                        mov rcx, qword [rcx + 1]
 32333 00017E84 4883F900                        cmp rcx, 0
 32334 00017E88 7C0F                            jl .L_negative
 32335                                  .L_loop_positive:
 32336 00017E8A 4883F900                        cmp rcx, 0
 32337 00017E8E 741B                            je .L_exit
 32338 00017E90 48D3E7                          sal rdi, cl
 32339 00017E93 48C1E908                        shr rcx, 8
 32340 00017E97 EBF1                            jmp .L_loop_positive
 32341                                  .L_negative:
 32342 00017E99 48F7D9                          neg rcx
 32343                                  .L_loop_negative:
 32344 00017E9C 4883F900                        cmp rcx, 0
 32345 00017EA0 7409                            je .L_exit
 32346 00017EA2 48D3FF                          sar rdi, cl
 32347 00017EA5 48C1E908                        shr rcx, 8
 32348 00017EA9 EBF1                            jmp .L_loop_negative
 32349                                  .L_exit:
 32350 00017EAB E863130000                      call make_integer
 32351 00017EB0 C9                              leave
 32352 00017EB1 C22000                          ret AND_KILL_FRAME(2)
 32353                                  
 32354                                  L_code_ptr_logand:
 32355 00017EB4 C8000000                        enter 0, 0
 32356 00017EB8 48837D1802                      cmp COUNT, 2
 32357 00017EBD 0F8536140000                    jne L_error_arg_count_2
 32358 00017EC3 4C8B4520                        mov r8, PARAM(0)
 32359                                          assert_integer(r8)
    53 00017EC7 41803811            <1>  cmp byte [%1], %2
    54 00017ECB 0F85C7140000        <1>  jne L_error_incorrect_type
 32360 00017ED1 4C8B4D28                        mov r9, PARAM(1)
 32361                                          assert_integer(r9)
    53 00017ED5 41803911            <1>  cmp byte [%1], %2
    54 00017ED9 0F85B9140000        <1>  jne L_error_incorrect_type
 32362 00017EDF 498B7801                        mov rdi, qword [r8 + 1]
 32363 00017EE3 49237901                        and rdi, qword [r9 + 1]
 32364 00017EE7 E827130000                      call make_integer
 32365 00017EEC C9                              leave
 32366 00017EED C22000                          ret AND_KILL_FRAME(2)
 32367                                  
 32368                                  L_code_ptr_logor:
 32369 00017EF0 C8000000                        enter 0, 0
 32370 00017EF4 48837D1802                      cmp COUNT, 2
 32371 00017EF9 0F85FA130000                    jne L_error_arg_count_2
 32372 00017EFF 4C8B4520                        mov r8, PARAM(0)
 32373                                          assert_integer(r8)
    53 00017F03 41803811            <1>  cmp byte [%1], %2
    54 00017F07 0F858B140000        <1>  jne L_error_incorrect_type
 32374 00017F0D 4C8B4D28                        mov r9, PARAM(1)
 32375                                          assert_integer(r9)
    53 00017F11 41803911            <1>  cmp byte [%1], %2
    54 00017F15 0F857D140000        <1>  jne L_error_incorrect_type
 32376 00017F1B 498B7801                        mov rdi, qword [r8 + 1]
 32377 00017F1F 490B7901                        or rdi, qword [r9 + 1]
 32378 00017F23 E8EB120000                      call make_integer
 32379 00017F28 C9                              leave
 32380 00017F29 C22000                          ret AND_KILL_FRAME(2)
 32381                                  
 32382                                  L_code_ptr_logxor:
 32383 00017F2C C8000000                        enter 0, 0
 32384 00017F30 48837D1802                      cmp COUNT, 2
 32385 00017F35 0F85BE130000                    jne L_error_arg_count_2
 32386 00017F3B 4C8B4520                        mov r8, PARAM(0)
 32387                                          assert_integer(r8)
    53 00017F3F 41803811            <1>  cmp byte [%1], %2
    54 00017F43 0F854F140000        <1>  jne L_error_incorrect_type
 32388 00017F49 4C8B4D28                        mov r9, PARAM(1)
 32389                                          assert_integer(r9)
    53 00017F4D 41803911            <1>  cmp byte [%1], %2
    54 00017F51 0F8541140000        <1>  jne L_error_incorrect_type
 32390 00017F57 498B7801                        mov rdi, qword [r8 + 1]
 32391 00017F5B 49337901                        xor rdi, qword [r9 + 1]
 32392 00017F5F E8AF120000                      call make_integer
 32393                                          LEAVE
    49 00017F64 C9                  <1>  leave
 32394 00017F65 C22000                          ret AND_KILL_FRAME(2)
 32395                                  
 32396                                  L_code_ptr_lognot:
 32397 00017F68 C8000000                        enter 0, 0
 32398 00017F6C 48837D1801                      cmp COUNT, 1
 32399 00017F71 0F854D130000                    jne L_error_arg_count_1
 32400 00017F77 4C8B4520                        mov r8, PARAM(0)
 32401                                          assert_integer(r8)
    53 00017F7B 41803811            <1>  cmp byte [%1], %2
    54 00017F7F 0F8513140000        <1>  jne L_error_incorrect_type
 32402 00017F85 498B7801                        mov rdi, qword [r8 + 1]
 32403 00017F89 48F7D7                          not rdi
 32404 00017F8C E882120000                      call make_integer
 32405 00017F91 C9                              leave
 32406 00017F92 C21800                          ret AND_KILL_FRAME(1)
 32407                                  
 32408                                  ;;; fill in for final project!
 32409                                  L_code_ptr_bin_apply:
 32410 00017F95 4989E8                  mov r8, rbp
 32411 00017F98 FF7500                  push  qword [rbp]
 32412 00017F9B 4889E5                  mov rbp, rsp
 32413                                  
 32414                                  ;calc args
 32415 00017F9E 4C8B4D28                mov r9, PARAM(1) ; save for later start of the params
 32416 00017FA2 4D89CA                  mov r10, r9 
 32417 00017FA5 B900000000              mov rcx, 0 ;args count
 32418                                  
 32419                                  .L_args_loop:
 32420 00017FAA 4981FA[01000000]                cmp r10, sob_nil
 32421 00017FB1 7413                            je .L_args_end
 32422                                          assert_pair(r10)
    53 00017FB3 41803A21            <1>  cmp byte [%1], %2
    54 00017FB7 0F85DB130000        <1>  jne L_error_incorrect_type
 32423 00017FBD 4D8B5209                        mov r10, SOB_PAIR_CDR(r10)
 32424 00017FC1 48FFC1                          inc rcx
 32425 00017FC4 EBE4                            jmp .L_args_loop
 32426                                  
 32427                                  .L_args_end:
 32428                                          ;set place in the stack
 32429 00017FC6 4C8D14CDE8FFFFFF                lea r10, [8*(rcx -3)]
 32430 00017FCE 4C29D4                          sub rsp, r10
 32431                                  
 32432                                          ;save ret afddress
 32433 00017FD1 4C8B5508                        mov r10, RET_ADDR
 32434 00017FD5 4C891424                        mov qword [rsp], r10
 32435                                  
 32436                                          ;save lexical env
 32437 00017FD9 488B7520                        mov rsi, PARAM(0)
 32438                                          assert_closure(rsi)
    53 00017FDD 803E04              <1>  cmp byte [%1], %2
    54 00017FE0 0F85B2130000        <1>  jne L_error_incorrect_type
 32439 00017FE6 4C8B5601                        mov r10, SOB_CLOSURE_ENV(rsi)
 32440 00017FEA 4C89542408                      mov qword [rsp + 8], r10
 32441                                  
 32442                                          ;save argc
 32443 00017FEF 48894C2410                      mov qword [rsp + 2*8], rcx
 32444                                  
 32445                                          ;save params
 32446 00017FF4 4C8D542418                      lea r10, [rsp + 3*8]
 32447 00017FF9 4D89CB                          mov r11, r9
 32448                                          .L_params_loop:
 32449 00017FFC 4981FB[01000000]                        cmp r11, sob_nil
 32450 00018003 7411                                    je .L_params_end
 32451 00018005 4D8B6301                                mov r12, SOB_PAIR_CAR(r11)
 32452 00018009 4D8922                                  mov qword [r10], r12
 32453 0001800C 4D8B5B09                                mov r11, SOB_PAIR_CDR(r11)
 32454 00018010 4983C208                                add r10, 8
 32455 00018014 EBE6                                    jmp .L_params_loop
 32456                                          .L_params_end:
 32457 00018016 4C89C5                                  mov rbp, r8
 32458 00018019 FF6609                                  jmp SOB_CLOSURE_CODE(rsi)
 32459                                  
 32460                                  L_code_ptr_is_null:
 32461 0001801C C8000000                        enter 0, 0
 32462 00018020 48837D1801                      cmp COUNT, 1
 32463 00018025 0F8599120000                    jne L_error_arg_count_1
 32464 0001802B 488B4520                        mov rax, PARAM(0)
 32465 0001802F 803801                          cmp byte [rax], T_nil
 32466 00018032 750C                            jne .L_false
 32467 00018034 48B8-                           mov rax, sob_boolean_true
 32467 00018036 [0300000000000000] 
 32468 0001803E EB0A                            jmp .L_end
 32469                                  .L_false:
 32470 00018040 48B8-                           mov rax, sob_boolean_false
 32470 00018042 [0200000000000000] 
 32471                                  .L_end:
 32472 0001804A C9                              leave
 32473 0001804B C21800                          ret AND_KILL_FRAME(1)
 32474                                  
 32475                                  L_code_ptr_is_pair:
 32476 0001804E C8000000                        enter 0, 0
 32477 00018052 48837D1801                      cmp COUNT, 1
 32478 00018057 0F8567120000                    jne L_error_arg_count_1
 32479 0001805D 488B4520                        mov rax, PARAM(0)
 32480 00018061 803821                          cmp byte [rax], T_pair
 32481 00018064 750C                            jne .L_false
 32482 00018066 48B8-                           mov rax, sob_boolean_true
 32482 00018068 [0300000000000000] 
 32483 00018070 EB0A                            jmp .L_end
 32484                                  .L_false:
 32485 00018072 48B8-                           mov rax, sob_boolean_false
 32485 00018074 [0200000000000000] 
 32486                                  .L_end:
 32487 0001807C C9                              leave
 32488 0001807D C21800                          ret AND_KILL_FRAME(1)
 32489                                          
 32490                                  L_code_ptr_is_void:
 32491 00018080 C8000000                        enter 0, 0
 32492 00018084 48837D1801                      cmp COUNT, 1
 32493 00018089 0F8535120000                    jne L_error_arg_count_1
 32494 0001808F 488B4520                        mov rax, PARAM(0)
 32495 00018093 803800                          cmp byte [rax], T_void
 32496 00018096 750C                            jne .L_false
 32497 00018098 48B8-                           mov rax, sob_boolean_true
 32497 0001809A [0300000000000000] 
 32498 000180A2 EB0A                            jmp .L_end
 32499                                  .L_false:
 32500 000180A4 48B8-                           mov rax, sob_boolean_false
 32500 000180A6 [0200000000000000] 
 32501                                  .L_end:
 32502 000180AE C9                              leave
 32503 000180AF C21800                          ret AND_KILL_FRAME(1)
 32504                                  
 32505                                  L_code_ptr_is_char:
 32506 000180B2 C8000000                        enter 0, 0
 32507 000180B6 48837D1801                      cmp COUNT, 1
 32508 000180BB 0F8503120000                    jne L_error_arg_count_1
 32509 000180C1 488B4520                        mov rax, PARAM(0)
 32510 000180C5 803802                          cmp byte [rax], T_char
 32511 000180C8 750C                            jne .L_false
 32512 000180CA 48B8-                           mov rax, sob_boolean_true
 32512 000180CC [0300000000000000] 
 32513 000180D4 EB0A                            jmp .L_end
 32514                                  .L_false:
 32515 000180D6 48B8-                           mov rax, sob_boolean_false
 32515 000180D8 [0200000000000000] 
 32516                                  .L_end:
 32517 000180E0 C9                              leave
 32518 000180E1 C21800                          ret AND_KILL_FRAME(1)
 32519                                  
 32520                                  L_code_ptr_is_string:
 32521 000180E4 C8000000                        enter 0, 0
 32522 000180E8 48837D1801                      cmp COUNT, 1
 32523 000180ED 0F85D1110000                    jne L_error_arg_count_1
 32524 000180F3 488B4520                        mov rax, PARAM(0)
 32525 000180F7 803803                          cmp byte [rax], T_string
 32526 000180FA 750C                            jne .L_false
 32527 000180FC 48B8-                           mov rax, sob_boolean_true
 32527 000180FE [0300000000000000] 
 32528 00018106 EB0A                            jmp .L_end
 32529                                  .L_false:
 32530 00018108 48B8-                           mov rax, sob_boolean_false
 32530 0001810A [0200000000000000] 
 32531                                  .L_end:
 32532 00018112 C9                              leave
 32533 00018113 C21800                          ret AND_KILL_FRAME(1)
 32534                                  
 32535                                  L_code_ptr_is_symbol:
 32536 00018116 C8000000                        enter 0, 0
 32537 0001811A 48837D1801                      cmp COUNT, 1
 32538 0001811F 0F859F110000                    jne L_error_arg_count_1
 32539 00018125 4C8B4520                        mov r8, PARAM(0)
 32540 00018129 41802040                        and byte [r8], T_symbol
 32541 0001812D 740C                            jz .L_false
 32542 0001812F 48B8-                           mov rax, sob_boolean_true
 32542 00018131 [0300000000000000] 
 32543 00018139 EB0A                            jmp .L_exit
 32544                                  .L_false:
 32545 0001813B 48B8-                           mov rax, sob_boolean_false
 32545 0001813D [0200000000000000] 
 32546                                  .L_exit:
 32547 00018145 C9                              leave
 32548 00018146 C21800                          ret AND_KILL_FRAME(1)
 32549                                  
 32550                                  L_code_ptr_is_uninterned_symbol:
 32551 00018149 C8000000                        enter 0, 0
 32552 0001814D 48837D1801                      cmp COUNT, 1
 32553 00018152 0F856C110000                    jne L_error_arg_count_1
 32554 00018158 4C8B4520                        mov r8, PARAM(0)
 32555 0001815C 41803842                        cmp byte [r8], T_uninterned_symbol
 32556 00018160 750C                            jne .L_false
 32557 00018162 48B8-                           mov rax, sob_boolean_true
 32557 00018164 [0300000000000000] 
 32558 0001816C EB0A                            jmp .L_exit
 32559                                  .L_false:
 32560 0001816E 48B8-                           mov rax, sob_boolean_false
 32560 00018170 [0200000000000000] 
 32561                                  .L_exit:
 32562 00018178 C9                              leave
 32563 00018179 C21800                          ret AND_KILL_FRAME(1)
 32564                                  
 32565                                  L_code_ptr_is_interned_symbol:
 32566 0001817C C8000000                        enter 0, 0
 32567 00018180 48837D1801                      cmp COUNT, 1
 32568 00018185 0F8539110000                    jne L_error_arg_count_1
 32569 0001818B 488B4520                        mov rax, PARAM(0)
 32570 0001818F 803841                          cmp byte [rax], T_interned_symbol
 32571 00018192 750C                            jne .L_false
 32572 00018194 48B8-                           mov rax, sob_boolean_true
 32572 00018196 [0300000000000000] 
 32573 0001819E EB0A                            jmp .L_end
 32574                                  .L_false:
 32575 000181A0 48B8-                           mov rax, sob_boolean_false
 32575 000181A2 [0200000000000000] 
 32576                                  .L_end:
 32577 000181AA C9                              leave
 32578 000181AB C21800                          ret AND_KILL_FRAME(1)
 32579                                  
 32580                                  L_code_ptr_gensym:
 32581 000181AE C8000000                        enter 0, 0
 32582 000181B2 48837D1800                      cmp COUNT, 0
 32583 000181B7 0F85D2100000                    jne L_error_arg_count_0
 32584 000181BD 48FF0425[951A0000]              inc qword [gensym_count]
 32585 000181C5 BF09000000                      mov rdi, (1 + 8)
 32586 000181CA E826F4FFFF                      call malloc
 32587 000181CF C60042                          mov byte [rax], T_uninterned_symbol
 32588 000181D2 488B0C25[951A0000]              mov rcx, qword [gensym_count]
 32589 000181DA 48894801                        mov qword [rax + 1], rcx
 32590 000181DE C9                              leave
 32591 000181DF C21000                          ret AND_KILL_FRAME(0)
 32592                                  
 32593                                  L_code_ptr_is_vector:
 32594 000181E2 C8000000                        enter 0, 0
 32595 000181E6 48837D1801                      cmp COUNT, 1
 32596 000181EB 0F85D3100000                    jne L_error_arg_count_1
 32597 000181F1 488B4520                        mov rax, PARAM(0)
 32598 000181F5 803822                          cmp byte [rax], T_vector
 32599 000181F8 750C                            jne .L_false
 32600 000181FA 48B8-                           mov rax, sob_boolean_true
 32600 000181FC [0300000000000000] 
 32601 00018204 EB0A                            jmp .L_end
 32602                                  .L_false:
 32603 00018206 48B8-                           mov rax, sob_boolean_false
 32603 00018208 [0200000000000000] 
 32604                                  .L_end:
 32605 00018210 C9                              leave
 32606 00018211 C21800                          ret AND_KILL_FRAME(1)
 32607                                  
 32608                                  L_code_ptr_is_closure:
 32609 00018214 C8000000                        enter 0, 0
 32610 00018218 48837D1801                      cmp COUNT, 1
 32611 0001821D 0F85A1100000                    jne L_error_arg_count_1
 32612 00018223 488B4520                        mov rax, PARAM(0)
 32613 00018227 803804                          cmp byte [rax], T_closure
 32614 0001822A 750C                            jne .L_false
 32615 0001822C 48B8-                           mov rax, sob_boolean_true
 32615 0001822E [0300000000000000] 
 32616 00018236 EB0A                            jmp .L_end
 32617                                  .L_false:
 32618 00018238 48B8-                           mov rax, sob_boolean_false
 32618 0001823A [0200000000000000] 
 32619                                  .L_end:
 32620 00018242 C9                              leave
 32621 00018243 C21800                          ret AND_KILL_FRAME(1)
 32622                                  
 32623                                  L_code_ptr_is_real:
 32624 00018246 C8000000                        enter 0, 0
 32625 0001824A 48837D1801                      cmp COUNT, 1
 32626 0001824F 0F856F100000                    jne L_error_arg_count_1
 32627 00018255 488B4520                        mov rax, PARAM(0)
 32628 00018259 803813                          cmp byte [rax], T_real
 32629 0001825C 750C                            jne .L_false
 32630 0001825E 48B8-                           mov rax, sob_boolean_true
 32630 00018260 [0300000000000000] 
 32631 00018268 EB0A                            jmp .L_end
 32632                                  .L_false:
 32633 0001826A 48B8-                           mov rax, sob_boolean_false
 32633 0001826C [0200000000000000] 
 32634                                  .L_end:
 32635 00018274 C9                              leave
 32636 00018275 C21800                          ret AND_KILL_FRAME(1)
 32637                                  
 32638                                  L_code_ptr_is_fraction:
 32639 00018278 C8000000                        enter 0, 0
 32640 0001827C 48837D1801                      cmp COUNT, 1
 32641 00018281 0F853D100000                    jne L_error_arg_count_1
 32642 00018287 488B4520                        mov rax, PARAM(0)
 32643 0001828B 803812                          cmp byte [rax], T_fraction
 32644 0001828E 750C                            jne .L_false
 32645 00018290 48B8-                           mov rax, sob_boolean_true
 32645 00018292 [0300000000000000] 
 32646 0001829A EB0A                            jmp .L_end
 32647                                  .L_false:
 32648 0001829C 48B8-                           mov rax, sob_boolean_false
 32648 0001829E [0200000000000000] 
 32649                                  .L_end:
 32650 000182A6 C9                              leave
 32651 000182A7 C21800                          ret AND_KILL_FRAME(1)
 32652                                  
 32653                                  L_code_ptr_is_boolean:
 32654 000182AA C8000000                        enter 0, 0
 32655 000182AE 48837D1801                      cmp COUNT, 1
 32656 000182B3 0F850B100000                    jne L_error_arg_count_1
 32657 000182B9 488B4520                        mov rax, PARAM(0)
 32658 000182BD 8A18                            mov bl, byte [rax]
 32659 000182BF 80E308                          and bl, T_boolean
 32660 000182C2 740C                            je .L_false
 32661 000182C4 48B8-                           mov rax, sob_boolean_true
 32661 000182C6 [0300000000000000] 
 32662 000182CE EB0A                            jmp .L_end
 32663                                  .L_false:
 32664 000182D0 48B8-                           mov rax, sob_boolean_false
 32664 000182D2 [0200000000000000] 
 32665                                  .L_end:
 32666 000182DA C9                              leave
 32667 000182DB C21800                          ret AND_KILL_FRAME(1)
 32668                                          
 32669                                  L_code_ptr_is_boolean_false:
 32670 000182DE C8000000                        enter 0, 0
 32671 000182E2 48837D1801                      cmp COUNT, 1
 32672 000182E7 0F85D70F0000                    jne L_error_arg_count_1
 32673 000182ED 488B4520                        mov rax, PARAM(0)
 32674 000182F1 8A18                            mov bl, byte [rax]
 32675 000182F3 80FB09                          cmp bl, T_boolean_false
 32676 000182F6 750C                            jne .L_false
 32677 000182F8 48B8-                           mov rax, sob_boolean_true
 32677 000182FA [0300000000000000] 
 32678 00018302 EB0A                            jmp .L_end
 32679                                  .L_false:
 32680 00018304 48B8-                           mov rax, sob_boolean_false
 32680 00018306 [0200000000000000] 
 32681                                  .L_end:
 32682 0001830E C9                              leave
 32683 0001830F C21800                          ret AND_KILL_FRAME(1)
 32684                                  
 32685                                  L_code_ptr_is_boolean_true:
 32686 00018312 C8000000                        enter 0, 0
 32687 00018316 48837D1801                      cmp COUNT, 1
 32688 0001831B 0F85A30F0000                    jne L_error_arg_count_1
 32689 00018321 488B4520                        mov rax, PARAM(0)
 32690 00018325 8A18                            mov bl, byte [rax]
 32691 00018327 80FB0A                          cmp bl, T_boolean_true
 32692 0001832A 750C                            jne .L_false
 32693 0001832C 48B8-                           mov rax, sob_boolean_true
 32693 0001832E [0300000000000000] 
 32694 00018336 EB0A                            jmp .L_end
 32695                                  .L_false:
 32696 00018338 48B8-                           mov rax, sob_boolean_false
 32696 0001833A [0200000000000000] 
 32697                                  .L_end:
 32698 00018342 C9                              leave
 32699 00018343 C21800                          ret AND_KILL_FRAME(1)
 32700                                  
 32701                                  L_code_ptr_is_number:
 32702 00018346 C8000000                        enter 0, 0
 32703 0001834A 48837D1801                      cmp COUNT, 1
 32704 0001834F 0F856F0F0000                    jne L_error_arg_count_1
 32705 00018355 488B4520                        mov rax, PARAM(0)
 32706 00018359 8A18                            mov bl, byte [rax]
 32707 0001835B 80E310                          and bl, T_number
 32708 0001835E 740C                            jz .L_false
 32709 00018360 48B8-                           mov rax, sob_boolean_true
 32709 00018362 [0300000000000000] 
 32710 0001836A EB0A                            jmp .L_end
 32711                                  .L_false:
 32712 0001836C 48B8-                           mov rax, sob_boolean_false
 32712 0001836E [0200000000000000] 
 32713                                  .L_end:
 32714 00018376 C9                              leave
 32715 00018377 C21800                          ret AND_KILL_FRAME(1)
 32716                                          
 32717                                  L_code_ptr_is_collection:
 32718 0001837A C8000000                        enter 0, 0
 32719 0001837E 48837D1801                      cmp COUNT, 1
 32720 00018383 0F853B0F0000                    jne L_error_arg_count_1
 32721 00018389 488B4520                        mov rax, PARAM(0)
 32722 0001838D 8A18                            mov bl, byte [rax]
 32723 0001838F 80E320                          and bl, T_collection
 32724 00018392 740C                            je .L_false
 32725 00018394 48B8-                           mov rax, sob_boolean_true
 32725 00018396 [0300000000000000] 
 32726 0001839E EB0A                            jmp .L_end
 32727                                  .L_false:
 32728 000183A0 48B8-                           mov rax, sob_boolean_false
 32728 000183A2 [0200000000000000] 
 32729                                  .L_end:
 32730 000183AA C9                              leave
 32731 000183AB C21800                          ret AND_KILL_FRAME(1)
 32732                                  
 32733                                  L_code_ptr_cons:
 32734 000183AE C8000000                        enter 0, 0
 32735 000183B2 48837D1802                      cmp COUNT, 2
 32736 000183B7 0F853C0F0000                    jne L_error_arg_count_2
 32737 000183BD BF11000000                      mov rdi, (1 + 8 + 8)
 32738 000183C2 E82EF2FFFF                      call malloc
 32739 000183C7 C60021                          mov byte [rax], T_pair
 32740 000183CA 488B5D20                        mov rbx, PARAM(0)
 32741 000183CE 48895801                        mov SOB_PAIR_CAR(rax), rbx
 32742 000183D2 488B5D28                        mov rbx, PARAM(1)
 32743 000183D6 48895809                        mov SOB_PAIR_CDR(rax), rbx
 32744 000183DA C9                              leave
 32745 000183DB C22000                          ret AND_KILL_FRAME(2)
 32746                                  
 32747                                  L_code_ptr_display_sexpr:
 32748 000183DE C8000000                        enter 0, 0
 32749 000183E2 48837D1801                      cmp COUNT, 1
 32750 000183E7 0F85D70E0000                    jne L_error_arg_count_1
 32751 000183ED 488B7D20                        mov rdi, PARAM(0)
 32752 000183F1 E880F4FFFF                      call print_sexpr
 32753 000183F6 48B8-                           mov rax, sob_void
 32753 000183F8 [0000000000000000] 
 32754 00018400 C9                              leave
 32755 00018401 C21800                          ret AND_KILL_FRAME(1)
 32756                                  
 32757                                  L_code_ptr_write_char:
 32758 00018404 C8000000                        enter 0, 0
 32759 00018408 48837D1801                      cmp COUNT, 1
 32760 0001840D 0F85B10E0000                    jne L_error_arg_count_1
 32761 00018413 488B4520                        mov rax, PARAM(0)
 32762                                          assert_char(rax)
    53 00018417 803802              <1>  cmp byte [%1], %2
    54 0001841A 0F85780F0000        <1>  jne L_error_incorrect_type
 32763 00018420 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 32764 00018423 4825FF000000                    and rax, 255
 32765 00018429 48BF-                           mov rdi, fmt_char
 32765 0001842B [9D1A000000000000] 
 32766 00018433 4889C6                          mov rsi, rax
 32767 00018436 B800000000                      mov rax, 0
 32768                                          ENTER
    44 0001843B C8000000            <1>  enter 0, 0
    45 0001843F 4883E4F0            <1>  and rsp, ~15
 32769 00018443 E8(00000000)                    call printf
 32770                                          LEAVE
    49 00018448 C9                  <1>  leave
 32771 00018449 48B8-                           mov rax, sob_void
 32771 0001844B [0000000000000000] 
 32772 00018453 C9                              leave
 32773 00018454 C21800                          ret AND_KILL_FRAME(1)
 32774                                  
 32775                                  L_code_ptr_car:
 32776 00018457 C8000000                        enter 0, 0
 32777 0001845B 48837D1801                      cmp COUNT, 1
 32778 00018460 0F855E0E0000                    jne L_error_arg_count_1
 32779 00018466 488B4520                        mov rax, PARAM(0)
 32780                                          assert_pair(rax)
    53 0001846A 803821              <1>  cmp byte [%1], %2
    54 0001846D 0F85250F0000        <1>  jne L_error_incorrect_type
 32781 00018473 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 32782 00018477 C9                              leave
 32783 00018478 C21800                          ret AND_KILL_FRAME(1)
 32784                                          
 32785                                  L_code_ptr_cdr:
 32786 0001847B C8000000                        enter 0, 0
 32787 0001847F 48837D1801                      cmp COUNT, 1
 32788 00018484 0F853A0E0000                    jne L_error_arg_count_1
 32789 0001848A 488B4520                        mov rax, PARAM(0)
 32790                                          assert_pair(rax)
    53 0001848E 803821              <1>  cmp byte [%1], %2
    54 00018491 0F85010F0000        <1>  jne L_error_incorrect_type
 32791 00018497 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 32792 0001849B C9                              leave
 32793 0001849C C21800                          ret AND_KILL_FRAME(1)
 32794                                          
 32795                                  L_code_ptr_string_length:
 32796 0001849F C8000000                        enter 0, 0
 32797 000184A3 48837D1801                      cmp COUNT, 1
 32798 000184A8 0F85160E0000                    jne L_error_arg_count_1
 32799 000184AE 488B4520                        mov rax, PARAM(0)
 32800                                          assert_string(rax)
    53 000184B2 803803              <1>  cmp byte [%1], %2
    54 000184B5 0F85DD0E0000        <1>  jne L_error_incorrect_type
 32801 000184BB 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 32802 000184BF E84F0D0000                      call make_integer
 32803 000184C4 C9                              leave
 32804 000184C5 C21800                          ret AND_KILL_FRAME(1)
 32805                                  
 32806                                  L_code_ptr_vector_length:
 32807 000184C8 C8000000                        enter 0, 0
 32808 000184CC 48837D1801                      cmp COUNT, 1
 32809 000184D1 0F85ED0D0000                    jne L_error_arg_count_1
 32810 000184D7 488B4520                        mov rax, PARAM(0)
 32811                                          assert_vector(rax)
    53 000184DB 803822              <1>  cmp byte [%1], %2
    54 000184DE 0F85B40E0000        <1>  jne L_error_incorrect_type
 32812 000184E4 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 32813 000184E8 E8260D0000                      call make_integer
 32814 000184ED C9                              leave
 32815 000184EE C21800                          ret AND_KILL_FRAME(1)
 32816                                  
 32817                                  L_code_ptr_real_to_integer:
 32818 000184F1 C8000000                        enter 0, 0
 32819 000184F5 48837D1801                      cmp COUNT, 1
 32820 000184FA 0F85C40D0000                    jne L_error_arg_count_1
 32821 00018500 488B5D20                        mov rbx, PARAM(0)
 32822                                          assert_real(rbx)
    53 00018504 803B13              <1>  cmp byte [%1], %2
    54 00018507 0F858B0E0000        <1>  jne L_error_incorrect_type
 32823 0001850D F20F104301                      movsd xmm0, qword [rbx + 1]
 32824 00018512 F2480F2CF8                      cvttsd2si rdi, xmm0
 32825 00018517 E8F70C0000                      call make_integer
 32826 0001851C C9                              leave
 32827 0001851D C21800                          ret AND_KILL_FRAME(1)
 32828                                  
 32829                                  L_code_ptr_exit:
 32830 00018520 C8000000                        enter 0, 0
 32831 00018524 48837D1800                      cmp COUNT, 0
 32832 00018529 0F85600D0000                    jne L_error_arg_count_0
 32833 0001852F B800000000                      mov rax, 0
 32834 00018534 E8(00000000)                    call exit
 32835                                  
 32836                                  L_code_ptr_integer_to_real:
 32837 00018539 C8000000                        enter 0, 0
 32838 0001853D 48837D1801                      cmp COUNT, 1
 32839 00018542 0F857C0D0000                    jne L_error_arg_count_1
 32840 00018548 488B4520                        mov rax, PARAM(0)
 32841                                          assert_integer(rax)
    53 0001854C 803811              <1>  cmp byte [%1], %2
    54 0001854F 0F85430E0000        <1>  jne L_error_incorrect_type
 32842 00018555 FF7001                          push qword [rax + 1]
 32843 00018558 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 32844 0001855E E8980C0000                      call make_real
 32845 00018563 C9                              leave
 32846 00018564 C21800                          ret AND_KILL_FRAME(1)
 32847                                  
 32848                                  L_code_ptr_fraction_to_real:
 32849 00018567 C8000000                        enter 0, 0
 32850 0001856B 48837D1801                      cmp COUNT, 1
 32851 00018570 0F854E0D0000                    jne L_error_arg_count_1
 32852 00018576 488B4520                        mov rax, PARAM(0)
 32853                                          assert_fraction(rax)
    53 0001857A 803812              <1>  cmp byte [%1], %2
    54 0001857D 0F85150E0000        <1>  jne L_error_incorrect_type
 32854 00018583 FF7001                          push qword [rax + 1]
 32855 00018586 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 32856 0001858C FF7009                          push qword [rax + 1 + 8]
 32857 0001858F F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 32858 00018595 F20F5EC1                        divsd xmm0, xmm1
 32859 00018599 E85D0C0000                      call make_real
 32860 0001859E C9                              leave
 32861 0001859F C21800                          ret AND_KILL_FRAME(1)
 32862                                  
 32863                                  L_code_ptr_char_to_integer:
 32864 000185A2 C8000000                        enter 0, 0
 32865 000185A6 48837D1801                      cmp COUNT, 1
 32866 000185AB 0F85130D0000                    jne L_error_arg_count_1
 32867 000185B1 488B4520                        mov rax, PARAM(0)
 32868                                          assert_char(rax)
    53 000185B5 803802              <1>  cmp byte [%1], %2
    54 000185B8 0F85DA0D0000        <1>  jne L_error_incorrect_type
 32869 000185BE 8A4001                          mov al, byte [rax + 1]
 32870 000185C1 4825FF000000                    and rax, 255
 32871 000185C7 4889C7                          mov rdi, rax
 32872 000185CA E8440C0000                      call make_integer
 32873 000185CF C9                              leave
 32874 000185D0 C21800                          ret AND_KILL_FRAME(1)
 32875                                  
 32876                                  L_code_ptr_integer_to_fraction:
 32877 000185D3 C8000000                        enter 0, 0
 32878 000185D7 48837D1801                      cmp COUNT, 1
 32879 000185DC 0F85E20C0000                    jne L_error_arg_count_1
 32880 000185E2 4C8B4520                        mov r8, PARAM(0)
 32881                                          assert_integer(r8)
    53 000185E6 41803811            <1>  cmp byte [%1], %2
    54 000185EA 0F85A80D0000        <1>  jne L_error_incorrect_type
 32882 000185F0 BF11000000                      mov rdi, (1 + 8 + 8)
 32883 000185F5 E8FBEFFFFF                      call malloc
 32884 000185FA 498B5801                        mov rbx, qword [r8 + 1]
 32885 000185FE C60012                          mov byte [rax], T_fraction
 32886 00018601 48895801                        mov qword [rax + 1], rbx
 32887 00018605 48C7400901000000                mov qword [rax + 1 + 8], 1
 32888 0001860D C9                              leave
 32889 0001860E C21800                          ret AND_KILL_FRAME(1)
 32890                                  
 32891                                  L_code_ptr_integer_to_char:
 32892 00018611 C8000000                        enter 0, 0
 32893 00018615 48837D1801                      cmp COUNT, 1
 32894 0001861A 0F85A40C0000                    jne L_error_arg_count_1
 32895 00018620 488B4520                        mov rax, PARAM(0)
 32896                                          assert_integer(rax)
    53 00018624 803811              <1>  cmp byte [%1], %2
    54 00018627 0F856B0D0000        <1>  jne L_error_incorrect_type
 32897 0001862D 488B5801                        mov rbx, qword [rax + 1]
 32898 00018631 4883FB00                        cmp rbx, 0
 32899 00018635 0F8EF20B0000                    jle L_error_integer_range
 32900 0001863B 4881FB00010000                  cmp rbx, 256
 32901 00018642 0F8DE50B0000                    jge L_error_integer_range
 32902 00018648 BF02000000                      mov rdi, (1 + 1)
 32903 0001864D E8A3EFFFFF                      call malloc
 32904 00018652 C60002                          mov byte [rax], T_char
 32905 00018655 885801                          mov byte [rax + 1], bl
 32906 00018658 C9                              leave
 32907 00018659 C21800                          ret AND_KILL_FRAME(1)
 32908                                  
 32909                                  L_code_ptr_trng:
 32910 0001865C C8000000                        enter 0, 0
 32911 00018660 48837D1800                      cmp COUNT, 0
 32912 00018665 0F85240C0000                    jne L_error_arg_count_0
 32913 0001866B 480FC7F7                        rdrand rdi
 32914 0001866F 48D1EF                          shr rdi, 1
 32915 00018672 E89C0B0000                      call make_integer
 32916 00018677 C9                              leave
 32917 00018678 C21000                          ret AND_KILL_FRAME(0)
 32918                                  
 32919                                  L_code_ptr_is_zero:
 32920 0001867B C8000000                        enter 0, 0
 32921 0001867F 48837D1801                      cmp COUNT, 1
 32922 00018684 0F853A0C0000                    jne L_error_arg_count_1
 32923 0001868A 488B4520                        mov rax, PARAM(0)
 32924 0001868E 803811                          cmp byte [rax], T_integer
 32925 00018691 740F                            je .L_integer
 32926 00018693 803812                          cmp byte [rax], T_fraction
 32927 00018696 7413                            je .L_fraction
 32928 00018698 803813                          cmp byte [rax], T_real
 32929 0001869B 7417                            je .L_real
 32930 0001869D E9F60C0000                      jmp L_error_incorrect_type
 32931                                  .L_integer:
 32932 000186A2 4883780100                      cmp qword [rax + 1], 0
 32933 000186A7 7429                            je .L_zero
 32934 000186A9 EB1B                            jmp .L_not_zero
 32935                                  .L_fraction:
 32936 000186AB 4883780100                      cmp qword [rax + 1], 0
 32937 000186B0 7420                            je .L_zero
 32938 000186B2 EB12                            jmp .L_not_zero
 32939                                  .L_real:
 32940 000186B4 660FEFC0                        pxor xmm0, xmm0
 32941 000186B8 FF7001                          push qword [rax + 1]
 32942 000186BB F20F100C24                      movsd xmm1, qword [rsp]
 32943 000186C0 660F2EC1                        ucomisd xmm0, xmm1
 32944 000186C4 740C                            je .L_zero
 32945                                  .L_not_zero:
 32946 000186C6 48B8-                           mov rax, sob_boolean_false
 32946 000186C8 [0200000000000000] 
 32947 000186D0 EB0A                            jmp .L_end
 32948                                  .L_zero:
 32949 000186D2 48B8-                           mov rax, sob_boolean_true
 32949 000186D4 [0300000000000000] 
 32950                                  .L_end:
 32951 000186DC C9                              leave
 32952 000186DD C21800                          ret AND_KILL_FRAME(1)
 32953                                  
 32954                                  L_code_ptr_is_integer:
 32955 000186E0 C8000000                        enter 0, 0
 32956 000186E4 48837D1801                      cmp COUNT, 1
 32957 000186E9 0F85D50B0000                    jne L_error_arg_count_1
 32958 000186EF 488B4520                        mov rax, PARAM(0)
 32959 000186F3 803811                          cmp byte [rax], T_integer
 32960 000186F6 750C                            jne .L_false
 32961 000186F8 48B8-                           mov rax, sob_boolean_true
 32961 000186FA [0300000000000000] 
 32962 00018702 EB0A                            jmp .L_exit
 32963                                  .L_false:
 32964 00018704 48B8-                           mov rax, sob_boolean_false
 32964 00018706 [0200000000000000] 
 32965                                  .L_exit:
 32966 0001870E C9                              leave
 32967 0001870F C21800                          ret AND_KILL_FRAME(1)
 32968                                  
 32969                                  L_code_ptr_raw_bin_add_rr:
 32970 00018712 C8000000                        enter 0, 0
 32971 00018716 48837D1802                      cmp COUNT, 2
 32972 0001871B 0F85D80B0000                    jne L_error_arg_count_2
 32973 00018721 488B5D20                        mov rbx, PARAM(0)
 32974                                          assert_real(rbx)
    53 00018725 803B13              <1>  cmp byte [%1], %2
    54 00018728 0F856A0C0000        <1>  jne L_error_incorrect_type
 32975 0001872E 488B4D28                        mov rcx, PARAM(1)
 32976                                          assert_real(rcx)
    53 00018732 803913              <1>  cmp byte [%1], %2
    54 00018735 0F855D0C0000        <1>  jne L_error_incorrect_type
 32977 0001873B F20F104301                      movsd xmm0, qword [rbx + 1]
 32978 00018740 F20F104901                      movsd xmm1, qword [rcx + 1]
 32979 00018745 F20F58C1                        addsd xmm0, xmm1
 32980 00018749 E8AD0A0000                      call make_real
 32981 0001874E C9                              leave
 32982 0001874F C22000                          ret AND_KILL_FRAME(2)
 32983                                  
 32984                                  L_code_ptr_raw_bin_sub_rr:
 32985 00018752 C8000000                        enter 0, 0
 32986 00018756 48837D1802                      cmp COUNT, 2
 32987 0001875B 0F85980B0000                    jne L_error_arg_count_2
 32988 00018761 488B5D20                        mov rbx, PARAM(0)
 32989                                          assert_real(rbx)
    53 00018765 803B13              <1>  cmp byte [%1], %2
    54 00018768 0F852A0C0000        <1>  jne L_error_incorrect_type
 32990 0001876E 488B4D28                        mov rcx, PARAM(1)
 32991                                          assert_real(rcx)
    53 00018772 803913              <1>  cmp byte [%1], %2
    54 00018775 0F851D0C0000        <1>  jne L_error_incorrect_type
 32992 0001877B F20F104301                      movsd xmm0, qword [rbx + 1]
 32993 00018780 F20F104901                      movsd xmm1, qword [rcx + 1]
 32994 00018785 F20F5CC1                        subsd xmm0, xmm1
 32995 00018789 E86D0A0000                      call make_real
 32996 0001878E C9                              leave
 32997 0001878F C22000                          ret AND_KILL_FRAME(2)
 32998                                  
 32999                                  L_code_ptr_raw_bin_mul_rr:
 33000 00018792 C8000000                        enter 0, 0
 33001 00018796 48837D1802                      cmp COUNT, 2
 33002 0001879B 0F85580B0000                    jne L_error_arg_count_2
 33003 000187A1 488B5D20                        mov rbx, PARAM(0)
 33004                                          assert_real(rbx)
    53 000187A5 803B13              <1>  cmp byte [%1], %2
    54 000187A8 0F85EA0B0000        <1>  jne L_error_incorrect_type
 33005 000187AE 488B4D28                        mov rcx, PARAM(1)
 33006                                          assert_real(rcx)
    53 000187B2 803913              <1>  cmp byte [%1], %2
    54 000187B5 0F85DD0B0000        <1>  jne L_error_incorrect_type
 33007 000187BB F20F104301                      movsd xmm0, qword [rbx + 1]
 33008 000187C0 F20F104901                      movsd xmm1, qword [rcx + 1]
 33009 000187C5 F20F59C1                        mulsd xmm0, xmm1
 33010 000187C9 E82D0A0000                      call make_real
 33011 000187CE C9                              leave
 33012 000187CF C22000                          ret AND_KILL_FRAME(2)
 33013                                  
 33014                                  L_code_ptr_raw_bin_div_rr:
 33015 000187D2 C8000000                        enter 0, 0
 33016 000187D6 48837D1802                      cmp COUNT, 2
 33017 000187DB 0F85180B0000                    jne L_error_arg_count_2
 33018 000187E1 488B5D20                        mov rbx, PARAM(0)
 33019                                          assert_real(rbx)
    53 000187E5 803B13              <1>  cmp byte [%1], %2
    54 000187E8 0F85AA0B0000        <1>  jne L_error_incorrect_type
 33020 000187EE 488B4D28                        mov rcx, PARAM(1)
 33021                                          assert_real(rcx)
    53 000187F2 803913              <1>  cmp byte [%1], %2
    54 000187F5 0F859D0B0000        <1>  jne L_error_incorrect_type
 33022 000187FB F20F104301                      movsd xmm0, qword [rbx + 1]
 33023 00018800 F20F104901                      movsd xmm1, qword [rcx + 1]
 33024 00018805 660FEFD2                        pxor xmm2, xmm2
 33025 00018809 660F2ECA                        ucomisd xmm1, xmm2
 33026 0001880D 0F84B60B0000                    je L_error_division_by_zero
 33027 00018813 F20F5EC1                        divsd xmm0, xmm1
 33028 00018817 E8DF090000                      call make_real
 33029 0001881C C9                              leave
 33030 0001881D C22000                          ret AND_KILL_FRAME(2)
 33031                                  
 33032                                  L_code_ptr_raw_bin_add_zz:
 33033 00018820 C8000000                	enter 0, 0
 33034 00018824 48837D1802              	cmp COUNT, 2
 33035 00018829 0F85CA0A0000            	jne L_error_arg_count_2
 33036 0001882F 4C8B4520                	mov r8, PARAM(0)
 33037                                  	assert_integer(r8)
    53 00018833 41803811            <1>  cmp byte [%1], %2
    54 00018837 0F855B0B0000        <1>  jne L_error_incorrect_type
 33038 0001883D 4C8B4D28                	mov r9, PARAM(1)
 33039                                  	assert_integer(r9)
    53 00018841 41803911            <1>  cmp byte [%1], %2
    54 00018845 0F854D0B0000        <1>  jne L_error_incorrect_type
 33040 0001884B 498B7801                	mov rdi, qword [r8 + 1]
 33041 0001884F 49037901                	add rdi, qword [r9 + 1]
 33042 00018853 E8BB090000              	call make_integer
 33043 00018858 C9                      	leave
 33044 00018859 C22000                  	ret AND_KILL_FRAME(2)
 33045                                  
 33046                                  L_code_ptr_raw_bin_add_qq:
 33047 0001885C C8000000                        enter 0, 0
 33048 00018860 48837D1802                      cmp COUNT, 2
 33049 00018865 0F858E0A0000                    jne L_error_arg_count_2
 33050 0001886B 4C8B4520                        mov r8, PARAM(0)
 33051                                          assert_fraction(r8)
    53 0001886F 41803812            <1>  cmp byte [%1], %2
    54 00018873 0F851F0B0000        <1>  jne L_error_incorrect_type
 33052 00018879 4C8B4D28                        mov r9, PARAM(1)
 33053                                          assert_fraction(r9)
    53 0001887D 41803912            <1>  cmp byte [%1], %2
    54 00018881 0F85110B0000        <1>  jne L_error_incorrect_type
 33054 00018887 498B4001                        mov rax, qword [r8 + 1] ; num1
 33055 0001888B 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 33056 0001888F 4899                            cqo
 33057 00018891 48F7EB                          imul rbx
 33058 00018894 4889C6                          mov rsi, rax
 33059 00018897 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33060 0001889B 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 33061 0001889F 4899                            cqo
 33062 000188A1 48F7EB                          imul rbx
 33063 000188A4 4801C6                          add rsi, rax
 33064 000188A7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33065 000188AB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 33066 000188AF 4899                            cqo
 33067 000188B1 48F7EB                          imul rbx
 33068 000188B4 4889C7                          mov rdi, rax
 33069 000188B7 E8DE010000                      call normalize_fraction
 33070 000188BC C9                              leave
 33071 000188BD C22000                          ret AND_KILL_FRAME(2)
 33072                                  
 33073                                  L_code_ptr_raw_bin_sub_zz:
 33074 000188C0 C8000000                	enter 0, 0
 33075 000188C4 48837D1802              	cmp COUNT, 2
 33076 000188C9 0F852A0A0000            	jne L_error_arg_count_2
 33077 000188CF 4C8B4520                	mov r8, PARAM(0)
 33078                                  	assert_integer(r8)
    53 000188D3 41803811            <1>  cmp byte [%1], %2
    54 000188D7 0F85BB0A0000        <1>  jne L_error_incorrect_type
 33079 000188DD 4C8B4D28                	mov r9, PARAM(1)
 33080                                  	assert_integer(r9)
    53 000188E1 41803911            <1>  cmp byte [%1], %2
    54 000188E5 0F85AD0A0000        <1>  jne L_error_incorrect_type
 33081 000188EB 498B7801                	mov rdi, qword [r8 + 1]
 33082 000188EF 492B7901                	sub rdi, qword [r9 + 1]
 33083 000188F3 E81B090000              	call make_integer
 33084 000188F8 C9                      	leave
 33085 000188F9 C22000                  	ret AND_KILL_FRAME(2)
 33086                                  
 33087                                  L_code_ptr_raw_bin_sub_qq:
 33088 000188FC C8000000                        enter 0, 0
 33089 00018900 48837D1802                      cmp COUNT, 2
 33090 00018905 0F85EE090000                    jne L_error_arg_count_2
 33091 0001890B 4C8B4520                        mov r8, PARAM(0)
 33092                                          assert_fraction(r8)
    53 0001890F 41803812            <1>  cmp byte [%1], %2
    54 00018913 0F857F0A0000        <1>  jne L_error_incorrect_type
 33093 00018919 4C8B4D28                        mov r9, PARAM(1)
 33094                                          assert_fraction(r9)
    53 0001891D 41803912            <1>  cmp byte [%1], %2
    54 00018921 0F85710A0000        <1>  jne L_error_incorrect_type
 33095 00018927 498B4001                        mov rax, qword [r8 + 1] ; num1
 33096 0001892B 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 33097 0001892F 4899                            cqo
 33098 00018931 48F7EB                          imul rbx
 33099 00018934 4889C6                          mov rsi, rax
 33100 00018937 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33101 0001893B 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 33102 0001893F 4899                            cqo
 33103 00018941 48F7EB                          imul rbx
 33104 00018944 4829C6                          sub rsi, rax
 33105 00018947 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33106 0001894B 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 33107 0001894F 4899                            cqo
 33108 00018951 48F7EB                          imul rbx
 33109 00018954 4889C7                          mov rdi, rax
 33110 00018957 E83E010000                      call normalize_fraction
 33111 0001895C C9                              leave
 33112 0001895D C22000                          ret AND_KILL_FRAME(2)
 33113                                  
 33114                                  L_code_ptr_raw_bin_mul_zz:
 33115 00018960 C8000000                	enter 0, 0
 33116 00018964 48837D1802              	cmp COUNT, 2
 33117 00018969 0F858A090000            	jne L_error_arg_count_2
 33118 0001896F 4C8B4520                	mov r8, PARAM(0)
 33119                                  	assert_integer(r8)
    53 00018973 41803811            <1>  cmp byte [%1], %2
    54 00018977 0F851B0A0000        <1>  jne L_error_incorrect_type
 33120 0001897D 4C8B4D28                	mov r9, PARAM(1)
 33121                                  	assert_integer(r9)
    53 00018981 41803911            <1>  cmp byte [%1], %2
    54 00018985 0F850D0A0000        <1>  jne L_error_incorrect_type
 33122 0001898B 4899                    	cqo
 33123 0001898D 498B4001                	mov rax, qword [r8 + 1]
 33124 00018991 49F76101                	mul qword [r9 + 1]
 33125 00018995 4889C7                  	mov rdi, rax
 33126 00018998 E876080000              	call make_integer
 33127 0001899D C9                      	leave
 33128 0001899E C22000                  	ret AND_KILL_FRAME(2)
 33129                                  
 33130                                  L_code_ptr_raw_bin_mul_qq:
 33131 000189A1 C8000000                        enter 0, 0
 33132 000189A5 48837D1802                      cmp COUNT, 2
 33133 000189AA 0F8549090000                    jne L_error_arg_count_2
 33134 000189B0 4C8B4520                        mov r8, PARAM(0)
 33135                                          assert_fraction(r8)
    53 000189B4 41803812            <1>  cmp byte [%1], %2
    54 000189B8 0F85DA090000        <1>  jne L_error_incorrect_type
 33136 000189BE 4C8B4D28                        mov r9, PARAM(1)
 33137                                          assert_fraction(r9)
    53 000189C2 41803912            <1>  cmp byte [%1], %2
    54 000189C6 0F85CC090000        <1>  jne L_error_incorrect_type
 33138 000189CC 498B4001                        mov rax, qword [r8 + 1] ; num1
 33139 000189D0 498B5901                        mov rbx, qword [r9 + 1] ; num2
 33140 000189D4 4899                            cqo
 33141 000189D6 48F7EB                          imul rbx
 33142 000189D9 4889C6                          mov rsi, rax
 33143 000189DC 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33144 000189E0 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 33145 000189E4 4899                            cqo
 33146 000189E6 48F7EB                          imul rbx
 33147 000189E9 4889C7                          mov rdi, rax
 33148 000189EC E8A9000000                      call normalize_fraction
 33149 000189F1 C9                              leave
 33150 000189F2 C22000                          ret AND_KILL_FRAME(2)
 33151                                          
 33152                                  L_code_ptr_raw_bin_div_zz:
 33153 000189F5 C8000000                	enter 0, 0
 33154 000189F9 48837D1802              	cmp COUNT, 2
 33155 000189FE 0F85F5080000            	jne L_error_arg_count_2
 33156 00018A04 4C8B4520                	mov r8, PARAM(0)
 33157                                  	assert_integer(r8)
    53 00018A08 41803811            <1>  cmp byte [%1], %2
    54 00018A0C 0F8586090000        <1>  jne L_error_incorrect_type
 33158 00018A12 4C8B4D28                	mov r9, PARAM(1)
 33159                                  	assert_integer(r9)
    53 00018A16 41803911            <1>  cmp byte [%1], %2
    54 00018A1A 0F8578090000        <1>  jne L_error_incorrect_type
 33160 00018A20 498B7901                	mov rdi, qword [r9 + 1]
 33161 00018A24 4883FF00                	cmp rdi, 0
 33162 00018A28 0F849B090000            	je L_error_division_by_zero
 33163 00018A2E 498B7001                	mov rsi, qword [r8 + 1]
 33164 00018A32 E863000000              	call normalize_fraction
 33165 00018A37 C9                      	leave
 33166 00018A38 C22000                  	ret AND_KILL_FRAME(2)
 33167                                  
 33168                                  L_code_ptr_raw_bin_div_qq:
 33169 00018A3B C8000000                        enter 0, 0
 33170 00018A3F 48837D1802                      cmp COUNT, 2
 33171 00018A44 0F85AF080000                    jne L_error_arg_count_2
 33172 00018A4A 4C8B4520                        mov r8, PARAM(0)
 33173                                          assert_fraction(r8)
    53 00018A4E 41803812            <1>  cmp byte [%1], %2
    54 00018A52 0F8540090000        <1>  jne L_error_incorrect_type
 33174 00018A58 4C8B4D28                        mov r9, PARAM(1)
 33175                                          assert_fraction(r9)
    53 00018A5C 41803912            <1>  cmp byte [%1], %2
    54 00018A60 0F8532090000        <1>  jne L_error_incorrect_type
 33176 00018A66 4983790100                      cmp qword [r9 + 1], 0
 33177 00018A6B 0F8458090000                    je L_error_division_by_zero
 33178 00018A71 498B4001                        mov rax, qword [r8 + 1] ; num1
 33179 00018A75 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 33180 00018A79 4899                            cqo
 33181 00018A7B 48F7EB                          imul rbx
 33182 00018A7E 4889C6                          mov rsi, rax
 33183 00018A81 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33184 00018A85 498B5901                        mov rbx, qword [r9 + 1] ; num2
 33185 00018A89 4899                            cqo
 33186 00018A8B 48F7EB                          imul rbx
 33187 00018A8E 4889C7                          mov rdi, rax
 33188 00018A91 E804000000                      call normalize_fraction
 33189 00018A96 C9                              leave
 33190 00018A97 C22000                          ret AND_KILL_FRAME(2)
 33191                                          
 33192                                  normalize_fraction:
 33193 00018A9A 56                              push rsi
 33194 00018A9B 57                              push rdi
 33195 00018A9C E859000000                      call gcd
 33196 00018AA1 4889C3                          mov rbx, rax
 33197 00018AA4 58                              pop rax
 33198 00018AA5 4899                            cqo
 33199 00018AA7 48F7FB                          idiv rbx
 33200 00018AAA 4989C0                          mov r8, rax
 33201 00018AAD 58                              pop rax
 33202 00018AAE 4899                            cqo
 33203 00018AB0 48F7FB                          idiv rbx
 33204 00018AB3 4989C1                          mov r9, rax
 33205 00018AB6 4983F900                        cmp r9, 0
 33206 00018ABA 741C                            je .L_zero
 33207 00018ABC 4983F801                        cmp r8, 1
 33208 00018AC0 7421                            je .L_int
 33209 00018AC2 BF11000000                      mov rdi, (1 + 8 + 8)
 33210 00018AC7 E829EBFFFF                      call malloc
 33211 00018ACC C60012                          mov byte [rax], T_fraction
 33212 00018ACF 4C894801                        mov qword [rax + 1], r9
 33213 00018AD3 4C894009                        mov qword [rax + 1 + 8], r8
 33214 00018AD7 C3                              ret
 33215                                  .L_zero:
 33216 00018AD8 BF00000000                      mov rdi, 0
 33217 00018ADD E831070000                      call make_integer
 33218 00018AE2 C3                              ret
 33219                                  .L_int:
 33220 00018AE3 4C89CF                          mov rdi, r9
 33221 00018AE6 E828070000                      call make_integer
 33222 00018AEB C3                              ret
 33223                                  
 33224                                  iabs:
 33225 00018AEC 4889F8                          mov rax, rdi
 33226 00018AEF 4883F800                        cmp rax, 0
 33227 00018AF3 7C01                            jl .Lneg
 33228 00018AF5 C3                              ret
 33229                                  .Lneg:
 33230 00018AF6 48F7D8                          neg rax
 33231 00018AF9 C3                              ret
 33232                                  
 33233                                  gcd:
 33234 00018AFA E8EDFFFFFF                      call iabs
 33235 00018AFF 4889C3                          mov rbx, rax
 33236 00018B02 4889F7                          mov rdi, rsi
 33237 00018B05 E8E2FFFFFF                      call iabs
 33238 00018B0A 4883F800                        cmp rax, 0
 33239 00018B0E 7502                            jne .L0
 33240 00018B10 4893                            xchg rax, rbx
 33241                                  .L0:
 33242 00018B12 4883FB00                        cmp rbx, 0
 33243 00018B16 740C                            je .L1
 33244 00018B18 4899                            cqo
 33245 00018B1A 48F7F3                          div rbx
 33246 00018B1D 4889D0                          mov rax, rdx
 33247 00018B20 4893                            xchg rax, rbx
 33248 00018B22 EBEE                            jmp .L0
 33249                                  .L1:
 33250 00018B24 C3                              ret
 33251                                  
 33252                                  L_code_ptr_error:
 33253 00018B25 C8000000                        enter 0, 0
 33254 00018B29 48837D1802                      cmp COUNT, 2
 33255 00018B2E 0F85C5070000                    jne L_error_arg_count_2
 33256 00018B34 488B7520                        mov rsi, PARAM(0)
 33257                                          assert_interned_symbol(rsi)
    53 00018B38 803E41              <1>  cmp byte [%1], %2
    54 00018B3B 0F8557080000        <1>  jne L_error_incorrect_type
 33258 00018B41 488B7528                        mov rsi, PARAM(1)
 33259                                          assert_string(rsi)
    53 00018B45 803E03              <1>  cmp byte [%1], %2
    54 00018B48 0F854A080000        <1>  jne L_error_incorrect_type
 33260 00018B4E 48BF-                           mov rdi, fmt_scheme_error_part_1
 33260 00018B50 [FB1B000000000000] 
 33261 00018B58 B800000000                      mov rax, 0
 33262                                          ENTER
    44 00018B5D C8000000            <1>  enter 0, 0
    45 00018B61 4883E4F0            <1>  and rsp, ~15
 33263 00018B65 E8(00000000)                    call printf
 33264                                          LEAVE
    49 00018B6A C9                  <1>  leave
 33265 00018B6B 488B7D20                        mov rdi, PARAM(0)
 33266 00018B6F E802EDFFFF                      call print_sexpr
 33267 00018B74 48BF-                           mov rdi, fmt_scheme_error_part_2
 33267 00018B76 [0F1C000000000000] 
 33268 00018B7E B800000000                      mov rax, 0
 33269                                          ENTER
    44 00018B83 C8000000            <1>  enter 0, 0
    45 00018B87 4883E4F0            <1>  and rsp, ~15
 33270 00018B8B E8(00000000)                    call printf
 33271                                          LEAVE
    49 00018B90 C9                  <1>  leave
 33272 00018B91 488B4528                        mov rax, PARAM(1)       ; sob_string
 33273 00018B95 BE01000000                      mov rsi, 1              ; size = 1 byte
 33274 00018B9A 488B5001                        mov rdx, qword [rax + 1] ; length
 33275 00018B9E 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 33276 00018BA2 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 33277                                  	ENTER
    44 00018BAA C8000000            <1>  enter 0, 0
    45 00018BAE 4883E4F0            <1>  and rsp, ~15
 33278 00018BB2 E8(00000000)                    call fwrite
 33279                                  	LEAVE
    49 00018BB7 C9                  <1>  leave
 33280 00018BB8 48BF-                           mov rdi, fmt_scheme_error_part_3
 33280 00018BBA [511C000000000000] 
 33281 00018BC2 B800000000                      mov rax, 0
 33282                                          ENTER
    44 00018BC7 C8000000            <1>  enter 0, 0
    45 00018BCB 4883E4F0            <1>  and rsp, ~15
 33283 00018BCF E8(00000000)                    call printf
 33284                                          LEAVE
    49 00018BD4 C9                  <1>  leave
 33285 00018BD5 48C7C0F7FFFFFF                  mov rax, -9
 33286 00018BDC E8(00000000)                    call exit
 33287                                  
 33288                                  L_code_ptr_raw_less_than_rr:
 33289 00018BE1 C8000000                        enter 0, 0
 33290 00018BE5 48837D1802                      cmp COUNT, 2
 33291 00018BEA 0F8509070000                    jne L_error_arg_count_2
 33292 00018BF0 488B7520                        mov rsi, PARAM(0)
 33293                                          assert_real(rsi)
    53 00018BF4 803E13              <1>  cmp byte [%1], %2
    54 00018BF7 0F859B070000        <1>  jne L_error_incorrect_type
 33294 00018BFD 488B7D28                        mov rdi, PARAM(1)
 33295                                          assert_real(rdi)
    53 00018C01 803F13              <1>  cmp byte [%1], %2
    54 00018C04 0F858E070000        <1>  jne L_error_incorrect_type
 33296 00018C0A F20F104601                      movsd xmm0, qword [rsi + 1]
 33297 00018C0F F20F104F01                      movsd xmm1, qword [rdi + 1]
 33298 00018C14 660F2FC1                        comisd xmm0, xmm1
 33299 00018C18 730C                            jae .L_false
 33300 00018C1A 48B8-                           mov rax, sob_boolean_true
 33300 00018C1C [0300000000000000] 
 33301 00018C24 EB0A                            jmp .L_exit
 33302                                  .L_false:
 33303 00018C26 48B8-                           mov rax, sob_boolean_false
 33303 00018C28 [0200000000000000] 
 33304                                  .L_exit:
 33305 00018C30 C9                              leave
 33306 00018C31 C22000                          ret AND_KILL_FRAME(2)
 33307                                          
 33308                                  L_code_ptr_raw_less_than_zz:
 33309 00018C34 C8000000                	enter 0, 0
 33310 00018C38 48837D1802              	cmp COUNT, 2
 33311 00018C3D 0F85B6060000            	jne L_error_arg_count_2
 33312 00018C43 4C8B4520                	mov r8, PARAM(0)
 33313                                  	assert_integer(r8)
    53 00018C47 41803811            <1>  cmp byte [%1], %2
    54 00018C4B 0F8547070000        <1>  jne L_error_incorrect_type
 33314 00018C51 4C8B4D28                	mov r9, PARAM(1)
 33315                                  	assert_integer(r9)
    53 00018C55 41803911            <1>  cmp byte [%1], %2
    54 00018C59 0F8539070000        <1>  jne L_error_incorrect_type
 33316 00018C5F 498B7801                	mov rdi, qword [r8 + 1]
 33317 00018C63 493B7901                	cmp rdi, qword [r9 + 1]
 33318 00018C67 7D0C                    	jge .L_false
 33319 00018C69 48B8-                   	mov rax, sob_boolean_true
 33319 00018C6B [0300000000000000] 
 33320 00018C73 EB0A                    	jmp .L_exit
 33321                                  .L_false:
 33322 00018C75 48B8-                   	mov rax, sob_boolean_false
 33322 00018C77 [0200000000000000] 
 33323                                  .L_exit:
 33324 00018C7F C9                      	leave
 33325 00018C80 C22000                  	ret AND_KILL_FRAME(2)
 33326                                  
 33327                                  L_code_ptr_raw_less_than_qq:
 33328 00018C83 C8000000                        enter 0, 0
 33329 00018C87 48837D1802                      cmp COUNT, 2
 33330 00018C8C 0F8567060000                    jne L_error_arg_count_2
 33331 00018C92 488B7520                        mov rsi, PARAM(0)
 33332                                          assert_fraction(rsi)
    53 00018C96 803E12              <1>  cmp byte [%1], %2
    54 00018C99 0F85F9060000        <1>  jne L_error_incorrect_type
 33333 00018C9F 488B7D28                        mov rdi, PARAM(1)
 33334                                          assert_fraction(rdi)
    53 00018CA3 803F12              <1>  cmp byte [%1], %2
    54 00018CA6 0F85EC060000        <1>  jne L_error_incorrect_type
 33335 00018CAC 488B4601                        mov rax, qword [rsi + 1] ; num1
 33336 00018CB0 4899                            cqo
 33337 00018CB2 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 33338 00018CB6 4889C1                          mov rcx, rax
 33339 00018CB9 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 33340 00018CBD 4899                            cqo
 33341 00018CBF 48F76F01                        imul qword [rdi + 1]          ; num2
 33342 00018CC3 4829C1                          sub rcx, rax
 33343 00018CC6 7D0C                            jge .L_false
 33344 00018CC8 48B8-                           mov rax, sob_boolean_true
 33344 00018CCA [0300000000000000] 
 33345 00018CD2 EB0A                            jmp .L_exit
 33346                                  .L_false:
 33347 00018CD4 48B8-                           mov rax, sob_boolean_false
 33347 00018CD6 [0200000000000000] 
 33348                                  .L_exit:
 33349 00018CDE C9                              leave
 33350 00018CDF C22000                          ret AND_KILL_FRAME(2)
 33351                                  
 33352                                  L_code_ptr_raw_equal_rr:
 33353 00018CE2 C8000000                        enter 0, 0
 33354 00018CE6 48837D1802                      cmp COUNT, 2
 33355 00018CEB 0F8508060000                    jne L_error_arg_count_2
 33356 00018CF1 488B7520                        mov rsi, PARAM(0)
 33357                                          assert_real(rsi)
    53 00018CF5 803E13              <1>  cmp byte [%1], %2
    54 00018CF8 0F859A060000        <1>  jne L_error_incorrect_type
 33358 00018CFE 488B7D28                        mov rdi, PARAM(1)
 33359                                          assert_real(rdi)
    53 00018D02 803F13              <1>  cmp byte [%1], %2
    54 00018D05 0F858D060000        <1>  jne L_error_incorrect_type
 33360 00018D0B F20F104601                      movsd xmm0, qword [rsi + 1]
 33361 00018D10 F20F104F01                      movsd xmm1, qword [rdi + 1]
 33362 00018D15 660F2FC1                        comisd xmm0, xmm1
 33363 00018D19 750C                            jne .L_false
 33364 00018D1B 48B8-                           mov rax, sob_boolean_true
 33364 00018D1D [0300000000000000] 
 33365 00018D25 EB0A                            jmp .L_exit
 33366                                  .L_false:
 33367 00018D27 48B8-                           mov rax, sob_boolean_false
 33367 00018D29 [0200000000000000] 
 33368                                  .L_exit:
 33369 00018D31 C9                              leave
 33370 00018D32 C22000                          ret AND_KILL_FRAME(2)
 33371                                          
 33372                                  L_code_ptr_raw_equal_zz:
 33373 00018D35 C8000000                	enter 0, 0
 33374 00018D39 48837D1802              	cmp COUNT, 2
 33375 00018D3E 0F85B5050000            	jne L_error_arg_count_2
 33376 00018D44 4C8B4520                	mov r8, PARAM(0)
 33377                                  	assert_integer(r8)
    53 00018D48 41803811            <1>  cmp byte [%1], %2
    54 00018D4C 0F8546060000        <1>  jne L_error_incorrect_type
 33378 00018D52 4C8B4D28                	mov r9, PARAM(1)
 33379                                  	assert_integer(r9)
    53 00018D56 41803911            <1>  cmp byte [%1], %2
    54 00018D5A 0F8538060000        <1>  jne L_error_incorrect_type
 33380 00018D60 498B7801                	mov rdi, qword [r8 + 1]
 33381 00018D64 493B7901                	cmp rdi, qword [r9 + 1]
 33382 00018D68 750C                    	jne .L_false
 33383 00018D6A 48B8-                   	mov rax, sob_boolean_true
 33383 00018D6C [0300000000000000] 
 33384 00018D74 EB0A                    	jmp .L_exit
 33385                                  .L_false:
 33386 00018D76 48B8-                   	mov rax, sob_boolean_false
 33386 00018D78 [0200000000000000] 
 33387                                  .L_exit:
 33388 00018D80 C9                      	leave
 33389 00018D81 C22000                  	ret AND_KILL_FRAME(2)
 33390                                  
 33391                                  L_code_ptr_raw_equal_qq:
 33392 00018D84 C8000000                        enter 0, 0
 33393 00018D88 48837D1802                      cmp COUNT, 2
 33394 00018D8D 0F8566050000                    jne L_error_arg_count_2
 33395 00018D93 488B7520                        mov rsi, PARAM(0)
 33396                                          assert_fraction(rsi)
    53 00018D97 803E12              <1>  cmp byte [%1], %2
    54 00018D9A 0F85F8050000        <1>  jne L_error_incorrect_type
 33397 00018DA0 488B7D28                        mov rdi, PARAM(1)
 33398                                          assert_fraction(rdi)
    53 00018DA4 803F12              <1>  cmp byte [%1], %2
    54 00018DA7 0F85EB050000        <1>  jne L_error_incorrect_type
 33399 00018DAD 488B4601                        mov rax, qword [rsi + 1] ; num1
 33400 00018DB1 4899                            cqo
 33401 00018DB3 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 33402 00018DB7 4889C1                          mov rcx, rax
 33403 00018DBA 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 33404 00018DBE 4899                            cqo
 33405 00018DC0 48F76F01                        imul qword [rdi + 1]          ; num2
 33406 00018DC4 4829C1                          sub rcx, rax
 33407 00018DC7 750C                            jne .L_false
 33408 00018DC9 48B8-                           mov rax, sob_boolean_true
 33408 00018DCB [0300000000000000] 
 33409 00018DD3 EB0A                            jmp .L_exit
 33410                                  .L_false:
 33411 00018DD5 48B8-                           mov rax, sob_boolean_false
 33411 00018DD7 [0200000000000000] 
 33412                                  .L_exit:
 33413 00018DDF C9                              leave
 33414 00018DE0 C22000                          ret AND_KILL_FRAME(2)
 33415                                  
 33416                                  L_code_ptr_quotient:
 33417 00018DE3 C8000000                        enter 0, 0
 33418 00018DE7 48837D1802                      cmp COUNT, 2
 33419 00018DEC 0F8507050000                    jne L_error_arg_count_2
 33420 00018DF2 488B7520                        mov rsi, PARAM(0)
 33421                                          assert_integer(rsi)
    53 00018DF6 803E11              <1>  cmp byte [%1], %2
    54 00018DF9 0F8599050000        <1>  jne L_error_incorrect_type
 33422 00018DFF 488B7D28                        mov rdi, PARAM(1)
 33423                                          assert_integer(rdi)
    53 00018E03 803F11              <1>  cmp byte [%1], %2
    54 00018E06 0F858C050000        <1>  jne L_error_incorrect_type
 33424 00018E0C 488B4601                        mov rax, qword [rsi + 1]
 33425 00018E10 488B5F01                        mov rbx, qword [rdi + 1]
 33426 00018E14 4883FB00                        cmp rbx, 0
 33427 00018E18 0F84AB050000                    je L_error_division_by_zero
 33428 00018E1E 4899                            cqo
 33429 00018E20 48F7FB                          idiv rbx
 33430 00018E23 4889C7                          mov rdi, rax
 33431 00018E26 E8E8030000                      call make_integer
 33432 00018E2B C9                              leave
 33433 00018E2C C22000                          ret AND_KILL_FRAME(2)
 33434                                          
 33435                                  L_code_ptr_remainder:
 33436 00018E2F C8000000                        enter 0, 0
 33437 00018E33 48837D1802                      cmp COUNT, 2
 33438 00018E38 0F85BB040000                    jne L_error_arg_count_2
 33439 00018E3E 488B7520                        mov rsi, PARAM(0)
 33440                                          assert_integer(rsi)
    53 00018E42 803E11              <1>  cmp byte [%1], %2
    54 00018E45 0F854D050000        <1>  jne L_error_incorrect_type
 33441 00018E4B 488B7D28                        mov rdi, PARAM(1)
 33442                                          assert_integer(rdi)
    53 00018E4F 803F11              <1>  cmp byte [%1], %2
    54 00018E52 0F8540050000        <1>  jne L_error_incorrect_type
 33443 00018E58 488B4601                        mov rax, qword [rsi + 1]
 33444 00018E5C 488B5F01                        mov rbx, qword [rdi + 1]
 33445 00018E60 4883FB00                        cmp rbx, 0
 33446 00018E64 0F845F050000                    je L_error_division_by_zero
 33447 00018E6A 4899                            cqo
 33448 00018E6C 48F7FB                          idiv rbx
 33449 00018E6F 4889D7                          mov rdi, rdx
 33450 00018E72 E89C030000                      call make_integer
 33451 00018E77 C9                              leave
 33452 00018E78 C22000                          ret AND_KILL_FRAME(2)
 33453                                  
 33454                                  L_code_ptr_set_car:
 33455 00018E7B C8000000                        enter 0, 0
 33456 00018E7F 48837D1802                      cmp COUNT, 2
 33457 00018E84 0F856F040000                    jne L_error_arg_count_2
 33458 00018E8A 488B4520                        mov rax, PARAM(0)
 33459                                          assert_pair(rax)
    53 00018E8E 803821              <1>  cmp byte [%1], %2
    54 00018E91 0F8501050000        <1>  jne L_error_incorrect_type
 33460 00018E97 488B5D28                        mov rbx, PARAM(1)
 33461 00018E9B 48895801                        mov SOB_PAIR_CAR(rax), rbx
 33462 00018E9F 48B8-                           mov rax, sob_void
 33462 00018EA1 [0000000000000000] 
 33463 00018EA9 C9                              leave
 33464 00018EAA C22000                          ret AND_KILL_FRAME(2)
 33465                                  
 33466                                  L_code_ptr_set_cdr:
 33467 00018EAD C8000000                        enter 0, 0
 33468 00018EB1 48837D1802                      cmp COUNT, 2
 33469 00018EB6 0F853D040000                    jne L_error_arg_count_2
 33470 00018EBC 488B4520                        mov rax, PARAM(0)
 33471                                          assert_pair(rax)
    53 00018EC0 803821              <1>  cmp byte [%1], %2
    54 00018EC3 0F85CF040000        <1>  jne L_error_incorrect_type
 33472 00018EC9 488B5D28                        mov rbx, PARAM(1)
 33473 00018ECD 48895809                        mov SOB_PAIR_CDR(rax), rbx
 33474 00018ED1 48B8-                           mov rax, sob_void
 33474 00018ED3 [0000000000000000] 
 33475 00018EDB C9                              leave
 33476 00018EDC C22000                          ret AND_KILL_FRAME(2)
 33477                                  
 33478                                  L_code_ptr_string_ref:
 33479 00018EDF C8000000                        enter 0, 0
 33480 00018EE3 48837D1802                      cmp COUNT, 2
 33481 00018EE8 0F850B040000                    jne L_error_arg_count_2
 33482 00018EEE 488B7D20                        mov rdi, PARAM(0)
 33483                                          assert_string(rdi)
    53 00018EF2 803F03              <1>  cmp byte [%1], %2
    54 00018EF5 0F859D040000        <1>  jne L_error_incorrect_type
 33484 00018EFB 488B7528                        mov rsi, PARAM(1)
 33485                                          assert_integer(rsi)
    53 00018EFF 803E11              <1>  cmp byte [%1], %2
    54 00018F02 0F8590040000        <1>  jne L_error_incorrect_type
 33486 00018F08 488B5701                        mov rdx, qword [rdi + 1]
 33487 00018F0C 488B4E01                        mov rcx, qword [rsi + 1]
 33488 00018F10 4839D1                          cmp rcx, rdx
 33489 00018F13 0F8D14030000                    jge L_error_integer_range
 33490 00018F19 4883F900                        cmp rcx, 0
 33491 00018F1D 0F8C0A030000                    jl L_error_integer_range
 33492 00018F23 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 33493 00018F27 BF02000000                      mov rdi, 2
 33494 00018F2C E8C4E6FFFF                      call malloc
 33495 00018F31 C60002                          mov byte [rax], T_char
 33496 00018F34 885801                          mov byte [rax + 1], bl
 33497 00018F37 C9                              leave
 33498 00018F38 C22000                          ret AND_KILL_FRAME(2)
 33499                                  
 33500                                  L_code_ptr_vector_ref:
 33501 00018F3B C8000000                        enter 0, 0
 33502 00018F3F 48837D1802                      cmp COUNT, 2
 33503 00018F44 0F85AF030000                    jne L_error_arg_count_2
 33504 00018F4A 488B7D20                        mov rdi, PARAM(0)
 33505                                          assert_vector(rdi)
    53 00018F4E 803F22              <1>  cmp byte [%1], %2
    54 00018F51 0F8541040000        <1>  jne L_error_incorrect_type
 33506 00018F57 488B7528                        mov rsi, PARAM(1)
 33507                                          assert_integer(rsi)
    53 00018F5B 803E11              <1>  cmp byte [%1], %2
    54 00018F5E 0F8534040000        <1>  jne L_error_incorrect_type
 33508 00018F64 488B5701                        mov rdx, qword [rdi + 1]
 33509 00018F68 488B4E01                        mov rcx, qword [rsi + 1]
 33510 00018F6C 4839D1                          cmp rcx, rdx
 33511 00018F6F 0F8DB8020000                    jge L_error_integer_range
 33512 00018F75 4883F900                        cmp rcx, 0
 33513 00018F79 0F8CAE020000                    jl L_error_integer_range
 33514 00018F7F 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 33515 00018F84 C9                              leave
 33516 00018F85 C22000                          ret AND_KILL_FRAME(2)
 33517                                  
 33518                                  L_code_ptr_vector_set:
 33519 00018F88 C8000000                        enter 0, 0
 33520 00018F8C 48837D1803                      cmp COUNT, 3
 33521 00018F91 0F85CC030000                    jne L_error_arg_count_3
 33522 00018F97 488B7D20                        mov rdi, PARAM(0)
 33523                                          assert_vector(rdi)
    53 00018F9B 803F22              <1>  cmp byte [%1], %2
    54 00018F9E 0F85F4030000        <1>  jne L_error_incorrect_type
 33524 00018FA4 488B7528                        mov rsi, PARAM(1)
 33525                                          assert_integer(rsi)
    53 00018FA8 803E11              <1>  cmp byte [%1], %2
    54 00018FAB 0F85E7030000        <1>  jne L_error_incorrect_type
 33526 00018FB1 488B5701                        mov rdx, qword [rdi + 1]
 33527 00018FB5 488B4E01                        mov rcx, qword [rsi + 1]
 33528 00018FB9 4839D1                          cmp rcx, rdx
 33529 00018FBC 0F8D6B020000                    jge L_error_integer_range
 33530 00018FC2 4883F900                        cmp rcx, 0
 33531 00018FC6 0F8C61020000                    jl L_error_integer_range
 33532 00018FCC 488B4530                        mov rax, PARAM(2)
 33533 00018FD0 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 33534 00018FD5 48B8-                           mov rax, sob_void
 33534 00018FD7 [0000000000000000] 
 33535 00018FDF C9                              leave
 33536 00018FE0 C22800                          ret AND_KILL_FRAME(3)
 33537                                  
 33538                                  L_code_ptr_string_set:
 33539 00018FE3 C8000000                        enter 0, 0
 33540 00018FE7 48837D1803                      cmp COUNT, 3
 33541 00018FEC 0F8571030000                    jne L_error_arg_count_3
 33542 00018FF2 488B7D20                        mov rdi, PARAM(0)
 33543                                          assert_string(rdi)
    53 00018FF6 803F03              <1>  cmp byte [%1], %2
    54 00018FF9 0F8599030000        <1>  jne L_error_incorrect_type
 33544 00018FFF 488B7528                        mov rsi, PARAM(1)
 33545                                          assert_integer(rsi)
    53 00019003 803E11              <1>  cmp byte [%1], %2
    54 00019006 0F858C030000        <1>  jne L_error_incorrect_type
 33546 0001900C 488B5701                        mov rdx, qword [rdi + 1]
 33547 00019010 488B4E01                        mov rcx, qword [rsi + 1]
 33548 00019014 4839D1                          cmp rcx, rdx
 33549 00019017 0F8D10020000                    jge L_error_integer_range
 33550 0001901D 4883F900                        cmp rcx, 0
 33551 00019021 0F8C06020000                    jl L_error_integer_range
 33552 00019027 488B4530                        mov rax, PARAM(2)
 33553                                          assert_char(rax)
    53 0001902B 803802              <1>  cmp byte [%1], %2
    54 0001902E 0F8564030000        <1>  jne L_error_incorrect_type
 33554 00019034 8A4001                          mov al, byte [rax + 1]
 33555 00019037 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 33556 0001903B 48B8-                           mov rax, sob_void
 33556 0001903D [0000000000000000] 
 33557 00019045 C9                              leave
 33558 00019046 C22800                          ret AND_KILL_FRAME(3)
 33559                                  
 33560                                  L_code_ptr_make_vector:
 33561 00019049 C8000000                        enter 0, 0
 33562 0001904D 48837D1802                      cmp COUNT, 2
 33563 00019052 0F85A1020000                    jne L_error_arg_count_2
 33564 00019058 488B4D20                        mov rcx, PARAM(0)
 33565                                          assert_integer(rcx)
    53 0001905C 803911              <1>  cmp byte [%1], %2
    54 0001905F 0F8533030000        <1>  jne L_error_incorrect_type
 33566 00019065 488B4901                        mov rcx, qword [rcx + 1]
 33567 00019069 4883F900                        cmp rcx, 0
 33568 0001906D 0F8CBA010000                    jl L_error_integer_range
 33569 00019073 488B5528                        mov rdx, PARAM(1)
 33570 00019077 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 33571 0001907F E871E5FFFF                      call malloc
 33572 00019084 C60022                          mov byte [rax], T_vector
 33573 00019087 48894801                        mov qword [rax + 1], rcx
 33574 0001908B 41B800000000                    mov r8, 0
 33575                                  .L0:
 33576 00019091 4939C8                          cmp r8, rcx
 33577 00019094 740A                            je .L1
 33578 00019096 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 33579 0001909B 49FFC0                          inc r8
 33580 0001909E EBF1                            jmp .L0
 33581                                  .L1:
 33582 000190A0 C9                              leave
 33583 000190A1 C22000                          ret AND_KILL_FRAME(2)
 33584                                          
 33585                                  L_code_ptr_make_string:
 33586 000190A4 C8000000                        enter 0, 0
 33587 000190A8 48837D1802                      cmp COUNT, 2
 33588 000190AD 0F8546020000                    jne L_error_arg_count_2
 33589 000190B3 488B4D20                        mov rcx, PARAM(0)
 33590                                          assert_integer(rcx)
    53 000190B7 803911              <1>  cmp byte [%1], %2
    54 000190BA 0F85D8020000        <1>  jne L_error_incorrect_type
 33591 000190C0 488B4901                        mov rcx, qword [rcx + 1]
 33592 000190C4 4883F900                        cmp rcx, 0
 33593 000190C8 0F8C5F010000                    jl L_error_integer_range
 33594 000190CE 488B5528                        mov rdx, PARAM(1)
 33595                                          assert_char(rdx)
    53 000190D2 803A02              <1>  cmp byte [%1], %2
    54 000190D5 0F85BD020000        <1>  jne L_error_incorrect_type
 33596 000190DB 8A5201                          mov dl, byte [rdx + 1]
 33597 000190DE 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 33598 000190E2 E80EE5FFFF                      call malloc
 33599 000190E7 C60003                          mov byte [rax], T_string
 33600 000190EA 48894801                        mov qword [rax + 1], rcx
 33601 000190EE 41B800000000                    mov r8, 0
 33602                                  .L0:
 33603 000190F4 4939C8                          cmp r8, rcx
 33604 000190F7 740A                            je .L1
 33605 000190F9 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 33606 000190FE 49FFC0                          inc r8
 33607 00019101 EBF1                            jmp .L0
 33608                                  .L1:
 33609 00019103 C9                              leave
 33610 00019104 C22000                          ret AND_KILL_FRAME(2)
 33611                                  
 33612                                  L_code_ptr_numerator:
 33613 00019107 C8000000                        enter 0, 0
 33614 0001910B 48837D1801                      cmp COUNT, 1
 33615 00019110 0F85AE010000                    jne L_error_arg_count_1
 33616 00019116 488B4520                        mov rax, PARAM(0)
 33617                                          assert_fraction(rax)
    53 0001911A 803812              <1>  cmp byte [%1], %2
    54 0001911D 0F8575020000        <1>  jne L_error_incorrect_type
 33618 00019123 488B7801                        mov rdi, qword [rax + 1]
 33619 00019127 E8E7000000                      call make_integer
 33620 0001912C C9                              leave
 33621 0001912D C21800                          ret AND_KILL_FRAME(1)
 33622                                          
 33623                                  L_code_ptr_denominator:
 33624 00019130 C8000000                        enter 0, 0
 33625 00019134 48837D1801                      cmp COUNT, 1
 33626 00019139 0F8585010000                    jne L_error_arg_count_1
 33627 0001913F 488B4520                        mov rax, PARAM(0)
 33628                                          assert_fraction(rax)
    53 00019143 803812              <1>  cmp byte [%1], %2
    54 00019146 0F854C020000        <1>  jne L_error_incorrect_type
 33629 0001914C 488B7809                        mov rdi, qword [rax + 1 + 8]
 33630 00019150 E8BE000000                      call make_integer
 33631 00019155 C9                              leave
 33632 00019156 C21800                          ret AND_KILL_FRAME(1)
 33633                                  
 33634                                  L_code_ptr_is_eq:
 33635 00019159 C8000000                	enter 0, 0
 33636 0001915D 48837D1802              	cmp COUNT, 2
 33637 00019162 0F8591010000            	jne L_error_arg_count_2
 33638 00019168 488B7D20                	mov rdi, PARAM(0)
 33639 0001916C 488B7528                	mov rsi, PARAM(1)
 33640 00019170 4839F7                  	cmp rdi, rsi
 33641 00019173 746C                    	je .L_eq_true
 33642 00019175 8A17                    	mov dl, byte [rdi]
 33643 00019177 3A16                    	cmp dl, byte [rsi]
 33644 00019179 7572                    	jne .L_eq_false
 33645 0001917B 80FA02                  	cmp dl, T_char
 33646 0001917E 7459                    	je .L_char
 33647 00019180 80FA41                  	cmp dl, T_interned_symbol
 33648 00019183 7440                    	je .L_interned_symbol
 33649 00019185 80FA42                          cmp dl, T_uninterned_symbol
 33650 00019188 7443                            je .L_uninterned_symbol
 33651 0001918A 80FA13                  	cmp dl, T_real
 33652 0001918D 742E                    	je .L_real
 33653 0001918F 80FA12                  	cmp dl, T_fraction
 33654 00019192 7413                    	je .L_fraction
 33655 00019194 80FA11                          cmp dl, T_integer
 33656 00019197 7402                            je .L_integer
 33657 00019199 EB52                    	jmp .L_eq_false
 33658                                  .L_integer:
 33659 0001919B 488B4601                        mov rax, qword [rsi + 1]
 33660 0001919F 483B4701                        cmp rax, qword [rdi + 1]
 33661 000191A3 7548                            jne .L_eq_false
 33662 000191A5 EB3A                            jmp .L_eq_true
 33663                                  .L_fraction:
 33664 000191A7 488B4601                	mov rax, qword [rsi + 1]
 33665 000191AB 483B4701                	cmp rax, qword [rdi + 1]
 33666 000191AF 753C                    	jne .L_eq_false
 33667 000191B1 488B4609                	mov rax, qword [rsi + 1 + 8]
 33668 000191B5 483B4709                	cmp rax, qword [rdi + 1 + 8]
 33669 000191B9 7532                    	jne .L_eq_false
 33670 000191BB EB24                    	jmp .L_eq_true
 33671                                  .L_real:
 33672 000191BD 488B4601                	mov rax, qword [rsi + 1]
 33673 000191C1 483B4701                	cmp rax, qword [rdi + 1]
 33674                                  .L_interned_symbol:
 33675                                  	; never reached, because interned_symbols are static!
 33676                                  	; but I'm keeping it in case, I'll ever change
 33677                                  	; the implementation
 33678 000191C5 488B4601                	mov rax, qword [rsi + 1]
 33679 000191C9 483B4701                	cmp rax, qword [rdi + 1]
 33680                                  .L_uninterned_symbol:
 33681 000191CD 4C8B4701                        mov r8, qword [rdi + 1]
 33682 000191D1 4C3B4601                        cmp r8, qword [rsi + 1]
 33683 000191D5 7516                            jne .L_eq_false
 33684 000191D7 EB08                            jmp .L_eq_true
 33685                                  .L_char:
 33686 000191D9 8A5E01                  	mov bl, byte [rsi + 1]
 33687 000191DC 3A5F01                  	cmp bl, byte [rdi + 1]
 33688 000191DF 750C                    	jne .L_eq_false
 33689                                  .L_eq_true:
 33690 000191E1 48B8-                   	mov rax, sob_boolean_true
 33690 000191E3 [0300000000000000] 
 33691 000191EB EB0A                    	jmp .L_eq_exit
 33692                                  .L_eq_false:
 33693 000191ED 48B8-                   	mov rax, sob_boolean_false
 33693 000191EF [0200000000000000] 
 33694                                  .L_eq_exit:
 33695 000191F7 C9                      	leave
 33696 000191F8 C22000                  	ret AND_KILL_FRAME(2)
 33697                                  
 33698                                  make_real:
 33699 000191FB C8000000                        enter 0, 0
 33700 000191FF BF09000000                      mov rdi, (1 + 8)
 33701 00019204 E8ECE3FFFF                      call malloc
 33702 00019209 C60013                          mov byte [rax], T_real
 33703 0001920C F20F114001                      movsd qword [rax + 1], xmm0
 33704 00019211 C9                              leave 
 33705 00019212 C3                              ret
 33706                                          
 33707                                  make_integer:
 33708 00019213 C8000000                        enter 0, 0
 33709 00019217 4889FE                          mov rsi, rdi
 33710 0001921A BF09000000                      mov rdi, (1 + 8)
 33711 0001921F E8D1E3FFFF                      call malloc
 33712 00019224 C60011                          mov byte [rax], T_integer
 33713 00019227 48897001                        mov qword [rax + 1], rsi
 33714 0001922B C9                              leave
 33715 0001922C C3                              ret
 33716                                          
 33717                                  L_error_integer_range:
 33718 0001922D 488B3C25[00000000]              mov rdi, qword [stderr]
 33719 00019235 48BE-                           mov rsi, fmt_integer_range
 33719 00019237 [C81B000000000000] 
 33720 0001923F B800000000                      mov rax, 0
 33721                                          ENTER
    44 00019244 C8000000            <1>  enter 0, 0
    45 00019248 4883E4F0            <1>  and rsp, ~15
 33722 0001924C E8(00000000)                    call fprintf
 33723                                          LEAVE
    49 00019251 C9                  <1>  leave
 33724 00019252 48C7C0FBFFFFFF                  mov rax, -5
 33725 00019259 E8(00000000)                    call exit
 33726                                  
 33727                                  L_error_arg_negative:
 33728 0001925E 488B3C25[00000000]              mov rdi, qword [stderr]
 33729 00019266 48BE-                           mov rsi, fmt_arg_negative
 33729 00019268 [A01A000000000000] 
 33730 00019270 B800000000                      mov rax, 0
 33731                                          ENTER
    44 00019275 C8000000            <1>  enter 0, 0
    45 00019279 4883E4F0            <1>  and rsp, ~15
 33732 0001927D E8(00000000)                    call fprintf
 33733                                          LEAVE
    49 00019282 C9                  <1>  leave
 33734 00019283 48C7C0FDFFFFFF                  mov rax, -3
 33735 0001928A E8(00000000)                    call exit
 33736                                  
 33737                                  L_error_arg_count_0:
 33738 0001928F 488B3C25[00000000]              mov rdi, qword [stderr]
 33739 00019297 48BE-                           mov rsi, fmt_arg_count_0
 33739 00019299 [C61A000000000000] 
 33740 000192A1 488B5518                        mov rdx, COUNT
 33741 000192A5 B800000000                      mov rax, 0
 33742                                          ENTER
    44 000192AA C8000000            <1>  enter 0, 0
    45 000192AE 4883E4F0            <1>  and rsp, ~15
 33743 000192B2 E8(00000000)                    call fprintf
 33744                                          LEAVE
    49 000192B7 C9                  <1>  leave
 33745 000192B8 48C7C0FDFFFFFF                  mov rax, -3
 33746 000192BF E8(00000000)                    call exit
 33747                                  
 33748                                  L_error_arg_count_1:
 33749 000192C4 488B3C25[00000000]              mov rdi, qword [stderr]
 33750 000192CC 48BE-                           mov rsi, fmt_arg_count_1
 33750 000192CE [EE1A000000000000] 
 33751 000192D6 488B5518                        mov rdx, COUNT
 33752 000192DA B800000000                      mov rax, 0
 33753                                          ENTER
    44 000192DF C8000000            <1>  enter 0, 0
    45 000192E3 4883E4F0            <1>  and rsp, ~15
 33754 000192E7 E8(00000000)                    call fprintf
 33755                                          LEAVE
    49 000192EC C9                  <1>  leave
 33756 000192ED 48C7C0FDFFFFFF                  mov rax, -3
 33757 000192F4 E8(00000000)                    call exit
 33758                                  
 33759                                  L_error_arg_count_2:
 33760 000192F9 488B3C25[00000000]              mov rdi, qword [stderr]
 33761 00019301 48BE-                           mov rsi, fmt_arg_count_2
 33761 00019303 [541B000000000000] 
 33762 0001930B 488B5518                        mov rdx, COUNT
 33763 0001930F B800000000                      mov rax, 0
 33764                                          ENTER
    44 00019314 C8000000            <1>  enter 0, 0
    45 00019318 4883E4F0            <1>  and rsp, ~15
 33765 0001931C E8(00000000)                    call fprintf
 33766                                          LEAVE
    49 00019321 C9                  <1>  leave
 33767 00019322 48C7C0FDFFFFFF                  mov rax, -3
 33768 00019329 E8(00000000)                    call exit
 33769                                  
 33770                                  L_error_arg_count_12:
 33771 0001932E 488B3C25[00000000]              mov rdi, qword [stderr]
 33772 00019336 48BE-                           mov rsi, fmt_arg_count_12
 33772 00019338 [141B000000000000] 
 33773 00019340 488B5518                        mov rdx, COUNT
 33774 00019344 B800000000                      mov rax, 0
 33775                                          ENTER
    44 00019349 C8000000            <1>  enter 0, 0
    45 0001934D 4883E4F0            <1>  and rsp, ~15
 33776 00019351 E8(00000000)                    call fprintf
 33777                                          LEAVE
    49 00019356 C9                  <1>  leave
 33778 00019357 48C7C0FDFFFFFF                  mov rax, -3
 33779 0001935E E8(00000000)                    call exit
 33780                                  
 33781                                  L_error_arg_count_3:
 33782 00019363 488B3C25[00000000]              mov rdi, qword [stderr]
 33783 0001936B 48BE-                           mov rsi, fmt_arg_count_3
 33783 0001936D [7B1B000000000000] 
 33784 00019375 488B5518                        mov rdx, COUNT
 33785 00019379 B800000000                      mov rax, 0
 33786                                          ENTER
    44 0001937E C8000000            <1>  enter 0, 0
    45 00019382 4883E4F0            <1>  and rsp, ~15
 33787 00019386 E8(00000000)                    call fprintf
 33788                                          LEAVE
    49 0001938B C9                  <1>  leave
 33789 0001938C 48C7C0FDFFFFFF                  mov rax, -3
 33790 00019393 E8(00000000)                    call exit
 33791                                          
 33792                                  L_error_incorrect_type:
 33793 00019398 488B3C25[00000000]              mov rdi, qword [stderr]
 33794 000193A0 48BE-                           mov rsi, fmt_type
 33794 000193A2 [A41B000000000000] 
 33795 000193AA B800000000                      mov rax, 0
 33796                                          ENTER
    44 000193AF C8000000            <1>  enter 0, 0
    45 000193B3 4883E4F0            <1>  and rsp, ~15
 33797 000193B7 E8(00000000)                    call fprintf
 33798                                          LEAVE
    49 000193BC C9                  <1>  leave
 33799 000193BD 48C7C0FCFFFFFF                  mov rax, -4
 33800 000193C4 E8(00000000)                    call exit
 33801                                  
 33802                                  L_error_division_by_zero:
 33803 000193C9 488B3C25[00000000]              mov rdi, qword [stderr]
 33804 000193D1 48BE-                           mov rsi, fmt_division_by_zero
 33804 000193D3 [E51B000000000000] 
 33805 000193DB B800000000                      mov rax, 0
 33806                                          ENTER
    44 000193E0 C8000000            <1>  enter 0, 0
    45 000193E4 4883E4F0            <1>  and rsp, ~15
 33807 000193E8 E8(00000000)                    call fprintf
 33808                                          LEAVE
    49 000193ED C9                  <1>  leave
 33809 000193EE 48C7C0F8FFFFFF                  mov rax, -8
 33810 000193F5 E8(00000000)                    call exit
 33811                                  
 33812                                  section .data
 33813                                  gensym_count:
 33814 00001A95 0000000000000000                dq 0
 33815                                  fmt_char:
 33816 00001A9D 256300                          db `%c\0`
 33817                                  fmt_arg_negative:
 33818 00001AA0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 33818 00001AA9 7267756D656E742063-
 33818 00001AB2 616E6E6F7420626520-
 33818 00001ABB 6E656761746976652E-
 33818 00001AC4 0A00               
 33819                                  fmt_arg_count_0:
 33820 00001AC6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 33820 00001ACF 74696E67207A65726F-
 33820 00001AD8 20617267756D656E74-
 33820 00001AE1 732E20466F756E6420-
 33820 00001AEA 25640A00           
 33821                                  fmt_arg_count_1:
 33822 00001AEE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 33822 00001AF7 74696E67206F6E6520-
 33822 00001B00 617267756D656E742E-
 33822 00001B09 20466F756E64202564-
 33822 00001B12 0A00               
 33823                                  fmt_arg_count_12:
 33824 00001B14 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 33824 00001B1D 74696E67206F6E6520-
 33824 00001B26 726571756972656420-
 33824 00001B2F 616E64206F6E65206F-
 33824 00001B38 7074696F6E616C2061-
 33824 00001B41 7267756D656E742E20-
 33824 00001B4A 466F756E642025640A-
 33824 00001B53 00                 
 33825                                  fmt_arg_count_2:
 33826 00001B54 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 33826 00001B5D 74696E672074776F20-
 33826 00001B66 617267756D656E7473-
 33826 00001B6F 2E20466F756E642025-
 33826 00001B78 640A00             
 33827                                  fmt_arg_count_3:
 33828 00001B7B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 33828 00001B84 74696E672074687265-
 33828 00001B8D 6520617267756D656E-
 33828 00001B96 74732E20466F756E64-
 33828 00001B9F 2025640A00         
 33829                                  fmt_type:
 33830 00001BA4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 33830 00001BAD 696F6E207061737365-
 33830 00001BB6 6420696E636F727265-
 33830 00001BBF 637420747970650A00 
 33831                                  fmt_integer_range:
 33832 00001BC8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 33832 00001BD1 7265637420696E7465-
 33832 00001BDA 6765722072616E6765-
 33832 00001BE3 0A00               
 33833                                  fmt_division_by_zero:
 33834 00001BE5 212121204469766973-             db `!!! Division by zero\n\0`
 33834 00001BEE 696F6E206279207A65-
 33834 00001BF7 726F0A00           
 33835                                  fmt_scheme_error_part_1:
 33836 00001BFB 0A2121212054686520-             db `\n!!! The procedure \0`
 33836 00001C04 70726F636564757265-
 33836 00001C0D 2000               
 33837                                  fmt_scheme_error_part_2:
 33838 00001C0F 2061736B656420746F-             db ` asked to terminate the program\n`
 33838 00001C18 207465726D696E6174-
 33838 00001C21 65207468652070726F-
 33838 00001C2A 6772616D0A         
 33839 00001C2F 202020207769746820-             db `    with the following message:\n\n\0`
 33839 00001C38 74686520666F6C6C6F-
 33839 00001C41 77696E67206D657373-
 33839 00001C4A 6167653A0A0A00     
 33840                                  fmt_scheme_error_part_3:
 33841 00001C51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 33841 00001C5A 210A0A00           
