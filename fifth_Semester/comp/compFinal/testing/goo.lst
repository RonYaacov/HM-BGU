     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [4804000000000000]      	dq L_constants + 1096
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [5C04000000000000]      	dq L_constants + 1116
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  	; L_constants + 3525:
  1005 00000DC5 11                      	db T_integer	; 10000
  1006 00000DC6 1027000000000000        	dq 10000
  1007                                  free_var_0:	; location of *
  1008 00000DCE [D60D000000000000]      	dq .undefined_object
  1009                                  .undefined_object:
  1010 00000DD6 05                      	db T_undefined
  1011 00000DD7 [D408000000000000]      	dq L_constants + 2260
  1012                                  
  1013                                  free_var_1:	; location of +
  1014 00000DDF [E70D000000000000]      	dq .undefined_object
  1015                                  .undefined_object:
  1016 00000DE7 05                      	db T_undefined
  1017 00000DE8 [4D08000000000000]      	dq L_constants + 2125
  1018                                  
  1019                                  free_var_2:	; location of -
  1020 00000DF0 [F80D000000000000]      	dq .undefined_object
  1021                                  .undefined_object:
  1022 00000DF8 05                      	db T_undefined
  1023 00000DF9 [B408000000000000]      	dq L_constants + 2228
  1024                                  
  1025                                  free_var_3:	; location of /
  1026 00000E01 [090E000000000000]      	dq .undefined_object
  1027                                  .undefined_object:
  1028 00000E09 05                      	db T_undefined
  1029 00000E0A [F008000000000000]      	dq L_constants + 2288
  1030                                  
  1031                                  free_var_4:	; location of <
  1032 00000E12 [1A0E000000000000]      	dq .undefined_object
  1033                                  .undefined_object:
  1034 00000E1A 05                      	db T_undefined
  1035 00000E1B [1009000000000000]      	dq L_constants + 2320
  1036                                  
  1037                                  free_var_5:	; location of <=
  1038 00000E23 [2B0E000000000000]      	dq .undefined_object
  1039                                  .undefined_object:
  1040 00000E2B 05                      	db T_undefined
  1041 00000E2C [1A09000000000000]      	dq L_constants + 2330
  1042                                  
  1043                                  free_var_6:	; location of =
  1044 00000E34 [3C0E000000000000]      	dq .undefined_object
  1045                                  .undefined_object:
  1046 00000E3C 05                      	db T_undefined
  1047 00000E3D [3A09000000000000]      	dq L_constants + 2362
  1048                                  
  1049                                  free_var_7:	; location of >
  1050 00000E45 [4D0E000000000000]      	dq .undefined_object
  1051                                  .undefined_object:
  1052 00000E4D 05                      	db T_undefined
  1053 00000E4E [2509000000000000]      	dq L_constants + 2341
  1054                                  
  1055                                  free_var_8:	; location of >=
  1056 00000E56 [5E0E000000000000]      	dq .undefined_object
  1057                                  .undefined_object:
  1058 00000E5E 05                      	db T_undefined
  1059 00000E5F [2F09000000000000]      	dq L_constants + 2351
  1060                                  
  1061                                  free_var_9:	; location of __bin-add-qq
  1062 00000E67 [6F0E000000000000]      	dq .undefined_object
  1063                                  .undefined_object:
  1064 00000E6F 05                      	db T_undefined
  1065 00000E70 [6902000000000000]      	dq L_constants + 617
  1066                                  
  1067                                  free_var_10:	; location of __bin-add-rr
  1068 00000E78 [800E000000000000]      	dq .undefined_object
  1069                                  .undefined_object:
  1070 00000E80 05                      	db T_undefined
  1071 00000E81 [1502000000000000]      	dq L_constants + 533
  1072                                  
  1073                                  free_var_11:	; location of __bin-add-zz
  1074 00000E89 [910E000000000000]      	dq .undefined_object
  1075                                  .undefined_object:
  1076 00000E91 05                      	db T_undefined
  1077 00000E92 [BD02000000000000]      	dq L_constants + 701
  1078                                  
  1079                                  free_var_12:	; location of __bin-apply
  1080 00000E9A [A20E000000000000]      	dq .undefined_object
  1081                                  .undefined_object:
  1082 00000EA2 05                      	db T_undefined
  1083 00000EA3 [0102000000000000]      	dq L_constants + 513
  1084                                  
  1085                                  free_var_13:	; location of __bin-div-qq
  1086 00000EAB [B30E000000000000]      	dq .undefined_object
  1087                                  .undefined_object:
  1088 00000EB3 05                      	db T_undefined
  1089 00000EB4 [A802000000000000]      	dq L_constants + 680
  1090                                  
  1091                                  free_var_14:	; location of __bin-div-rr
  1092 00000EBC [C40E000000000000]      	dq .undefined_object
  1093                                  .undefined_object:
  1094 00000EC4 05                      	db T_undefined
  1095 00000EC5 [5402000000000000]      	dq L_constants + 596
  1096                                  
  1097                                  free_var_15:	; location of __bin-div-zz
  1098 00000ECD [D50E000000000000]      	dq .undefined_object
  1099                                  .undefined_object:
  1100 00000ED5 05                      	db T_undefined
  1101 00000ED6 [FC02000000000000]      	dq L_constants + 764
  1102                                  
  1103                                  free_var_16:	; location of __bin-equal-qq
  1104 00000EDE [E60E000000000000]      	dq .undefined_object
  1105                                  .undefined_object:
  1106 00000EE6 05                      	db T_undefined
  1107 00000EE7 [8703000000000000]      	dq L_constants + 903
  1108                                  
  1109                                  free_var_17:	; location of __bin-equal-rr
  1110 00000EEF [F70E000000000000]      	dq .undefined_object
  1111                                  .undefined_object:
  1112 00000EF7 05                      	db T_undefined
  1113 00000EF8 [7003000000000000]      	dq L_constants + 880
  1114                                  
  1115                                  free_var_18:	; location of __bin-equal-zz
  1116 00000F00 [080F000000000000]      	dq .undefined_object
  1117                                  .undefined_object:
  1118 00000F08 05                      	db T_undefined
  1119 00000F09 [9E03000000000000]      	dq L_constants + 926
  1120                                  
  1121                                  free_var_19:	; location of __bin-less-than-qq
  1122 00000F11 [190F000000000000]      	dq .undefined_object
  1123                                  .undefined_object:
  1124 00000F19 05                      	db T_undefined
  1125 00000F1A [3A03000000000000]      	dq L_constants + 826
  1126                                  
  1127                                  free_var_20:	; location of __bin-less-than-rr
  1128 00000F22 [2A0F000000000000]      	dq .undefined_object
  1129                                  .undefined_object:
  1130 00000F2A 05                      	db T_undefined
  1131 00000F2B [1F03000000000000]      	dq L_constants + 799
  1132                                  
  1133                                  free_var_21:	; location of __bin-less-than-zz
  1134 00000F33 [3B0F000000000000]      	dq .undefined_object
  1135                                  .undefined_object:
  1136 00000F3B 05                      	db T_undefined
  1137 00000F3C [5503000000000000]      	dq L_constants + 853
  1138                                  
  1139                                  free_var_22:	; location of __bin-mul-qq
  1140 00000F44 [4C0F000000000000]      	dq .undefined_object
  1141                                  .undefined_object:
  1142 00000F4C 05                      	db T_undefined
  1143 00000F4D [9302000000000000]      	dq L_constants + 659
  1144                                  
  1145                                  free_var_23:	; location of __bin-mul-rr
  1146 00000F55 [5D0F000000000000]      	dq .undefined_object
  1147                                  .undefined_object:
  1148 00000F5D 05                      	db T_undefined
  1149 00000F5E [3F02000000000000]      	dq L_constants + 575
  1150                                  
  1151                                  free_var_24:	; location of __bin-mul-zz
  1152 00000F66 [6E0F000000000000]      	dq .undefined_object
  1153                                  .undefined_object:
  1154 00000F6E 05                      	db T_undefined
  1155 00000F6F [E702000000000000]      	dq L_constants + 743
  1156                                  
  1157                                  free_var_25:	; location of __bin-sub-qq
  1158 00000F77 [7F0F000000000000]      	dq .undefined_object
  1159                                  .undefined_object:
  1160 00000F7F 05                      	db T_undefined
  1161 00000F80 [7E02000000000000]      	dq L_constants + 638
  1162                                  
  1163                                  free_var_26:	; location of __bin-sub-rr
  1164 00000F88 [900F000000000000]      	dq .undefined_object
  1165                                  .undefined_object:
  1166 00000F90 05                      	db T_undefined
  1167 00000F91 [2A02000000000000]      	dq L_constants + 554
  1168                                  
  1169                                  free_var_27:	; location of __bin-sub-zz
  1170 00000F99 [A10F000000000000]      	dq .undefined_object
  1171                                  .undefined_object:
  1172 00000FA1 05                      	db T_undefined
  1173 00000FA2 [D202000000000000]      	dq L_constants + 722
  1174                                  
  1175                                  free_var_28:	; location of __bin_integer_to_fraction
  1176 00000FAA [B20F000000000000]      	dq .undefined_object
  1177                                  .undefined_object:
  1178 00000FB2 05                      	db T_undefined
  1179 00000FB3 [6008000000000000]      	dq L_constants + 2144
  1180                                  
  1181                                  free_var_29:	; location of __integer-to-fraction
  1182 00000FBB [C30F000000000000]      	dq .undefined_object
  1183                                  .undefined_object:
  1184 00000FC3 05                      	db T_undefined
  1185 00000FC4 [A204000000000000]      	dq L_constants + 1186
  1186                                  
  1187                                  free_var_30:	; location of abs
  1188 00000FCC [D40F000000000000]      	dq .undefined_object
  1189                                  .undefined_object:
  1190 00000FD4 05                      	db T_undefined
  1191 00000FD5 [8C0C000000000000]      	dq L_constants + 3212
  1192                                  
  1193                                  free_var_31:	; location of andmap
  1194 00000FDD [E50F000000000000]      	dq .undefined_object
  1195                                  .undefined_object:
  1196 00000FE5 05                      	db T_undefined
  1197 00000FE6 [FA07000000000000]      	dq L_constants + 2042
  1198                                  
  1199                                  free_var_32:	; location of append
  1200 00000FEE [F60F000000000000]      	dq .undefined_object
  1201                                  .undefined_object:
  1202 00000FF6 05                      	db T_undefined
  1203 00000FF7 [2B08000000000000]      	dq L_constants + 2091
  1204                                  
  1205                                  free_var_33:	; location of apply
  1206 00000FFF [0710000000000000]      	dq .undefined_object
  1207                                  .undefined_object:
  1208 00001007 05                      	db T_undefined
  1209 00001008 [D207000000000000]      	dq L_constants + 2002
  1210                                  
  1211                                  free_var_34:	; location of assoc
  1212 00001010 [1810000000000000]      	dq .undefined_object
  1213                                  .undefined_object:
  1214 00001018 05                      	db T_undefined
  1215 00001019 [A70C000000000000]      	dq L_constants + 3239
  1216                                  
  1217                                  free_var_35:	; location of caaaar
  1218 00001021 [2910000000000000]      	dq .undefined_object
  1219                                  .undefined_object:
  1220 00001029 05                      	db T_undefined
  1221 0000102A [8106000000000000]      	dq L_constants + 1665
  1222                                  
  1223                                  free_var_36:	; location of caaadr
  1224 00001032 [3A10000000000000]      	dq .undefined_object
  1225                                  .undefined_object:
  1226 0000103A 05                      	db T_undefined
  1227 0000103B [9006000000000000]      	dq L_constants + 1680
  1228                                  
  1229                                  free_var_37:	; location of caaar
  1230 00001043 [4B10000000000000]      	dq .undefined_object
  1231                                  .undefined_object:
  1232 0000104B 05                      	db T_undefined
  1233 0000104C [1106000000000000]      	dq L_constants + 1553
  1234                                  
  1235                                  free_var_38:	; location of caadar
  1236 00001054 [5C10000000000000]      	dq .undefined_object
  1237                                  .undefined_object:
  1238 0000105C 05                      	db T_undefined
  1239 0000105D [9F06000000000000]      	dq L_constants + 1695
  1240                                  
  1241                                  free_var_39:	; location of caaddr
  1242 00001065 [6D10000000000000]      	dq .undefined_object
  1243                                  .undefined_object:
  1244 0000106D 05                      	db T_undefined
  1245 0000106E [AE06000000000000]      	dq L_constants + 1710
  1246                                  
  1247                                  free_var_40:	; location of caadr
  1248 00001076 [7E10000000000000]      	dq .undefined_object
  1249                                  .undefined_object:
  1250 0000107E 05                      	db T_undefined
  1251 0000107F [1F06000000000000]      	dq L_constants + 1567
  1252                                  
  1253                                  free_var_41:	; location of caar
  1254 00001087 [8F10000000000000]      	dq .undefined_object
  1255                                  .undefined_object:
  1256 0000108F 05                      	db T_undefined
  1257 00001090 [DD05000000000000]      	dq L_constants + 1501
  1258                                  
  1259                                  free_var_42:	; location of cadaar
  1260 00001098 [A010000000000000]      	dq .undefined_object
  1261                                  .undefined_object:
  1262 000010A0 05                      	db T_undefined
  1263 000010A1 [BD06000000000000]      	dq L_constants + 1725
  1264                                  
  1265                                  free_var_43:	; location of cadadr
  1266 000010A9 [B110000000000000]      	dq .undefined_object
  1267                                  .undefined_object:
  1268 000010B1 05                      	db T_undefined
  1269 000010B2 [CC06000000000000]      	dq L_constants + 1740
  1270                                  
  1271                                  free_var_44:	; location of cadar
  1272 000010BA [C210000000000000]      	dq .undefined_object
  1273                                  .undefined_object:
  1274 000010C2 05                      	db T_undefined
  1275 000010C3 [2D06000000000000]      	dq L_constants + 1581
  1276                                  
  1277                                  free_var_45:	; location of caddar
  1278 000010CB [D310000000000000]      	dq .undefined_object
  1279                                  .undefined_object:
  1280 000010D3 05                      	db T_undefined
  1281 000010D4 [DB06000000000000]      	dq L_constants + 1755
  1282                                  
  1283                                  free_var_46:	; location of cadddr
  1284 000010DC [E410000000000000]      	dq .undefined_object
  1285                                  .undefined_object:
  1286 000010E4 05                      	db T_undefined
  1287 000010E5 [EA06000000000000]      	dq L_constants + 1770
  1288                                  
  1289                                  free_var_47:	; location of caddr
  1290 000010ED [F510000000000000]      	dq .undefined_object
  1291                                  .undefined_object:
  1292 000010F5 05                      	db T_undefined
  1293 000010F6 [3B06000000000000]      	dq L_constants + 1595
  1294                                  
  1295                                  free_var_48:	; location of cadr
  1296 000010FE [0611000000000000]      	dq .undefined_object
  1297                                  .undefined_object:
  1298 00001106 05                      	db T_undefined
  1299 00001107 [EA05000000000000]      	dq L_constants + 1514
  1300                                  
  1301                                  free_var_49:	; location of car
  1302 0000110F [1711000000000000]      	dq .undefined_object
  1303                                  .undefined_object:
  1304 00001117 05                      	db T_undefined
  1305 00001118 [1501000000000000]      	dq L_constants + 277
  1306                                  
  1307                                  free_var_50:	; location of cdaaar
  1308 00001120 [2811000000000000]      	dq .undefined_object
  1309                                  .undefined_object:
  1310 00001128 05                      	db T_undefined
  1311 00001129 [F906000000000000]      	dq L_constants + 1785
  1312                                  
  1313                                  free_var_51:	; location of cdaadr
  1314 00001131 [3911000000000000]      	dq .undefined_object
  1315                                  .undefined_object:
  1316 00001139 05                      	db T_undefined
  1317 0000113A [0807000000000000]      	dq L_constants + 1800
  1318                                  
  1319                                  free_var_52:	; location of cdaar
  1320 00001142 [4A11000000000000]      	dq .undefined_object
  1321                                  .undefined_object:
  1322 0000114A 05                      	db T_undefined
  1323 0000114B [4906000000000000]      	dq L_constants + 1609
  1324                                  
  1325                                  free_var_53:	; location of cdadar
  1326 00001153 [5B11000000000000]      	dq .undefined_object
  1327                                  .undefined_object:
  1328 0000115B 05                      	db T_undefined
  1329 0000115C [1707000000000000]      	dq L_constants + 1815
  1330                                  
  1331                                  free_var_54:	; location of cdaddr
  1332 00001164 [6C11000000000000]      	dq .undefined_object
  1333                                  .undefined_object:
  1334 0000116C 05                      	db T_undefined
  1335 0000116D [2607000000000000]      	dq L_constants + 1830
  1336                                  
  1337                                  free_var_55:	; location of cdadr
  1338 00001175 [7D11000000000000]      	dq .undefined_object
  1339                                  .undefined_object:
  1340 0000117D 05                      	db T_undefined
  1341 0000117E [5706000000000000]      	dq L_constants + 1623
  1342                                  
  1343                                  free_var_56:	; location of cdar
  1344 00001186 [8E11000000000000]      	dq .undefined_object
  1345                                  .undefined_object:
  1346 0000118E 05                      	db T_undefined
  1347 0000118F [F705000000000000]      	dq L_constants + 1527
  1348                                  
  1349                                  free_var_57:	; location of cddaar
  1350 00001197 [9F11000000000000]      	dq .undefined_object
  1351                                  .undefined_object:
  1352 0000119F 05                      	db T_undefined
  1353 000011A0 [3507000000000000]      	dq L_constants + 1845
  1354                                  
  1355                                  free_var_58:	; location of cddadr
  1356 000011A8 [B011000000000000]      	dq .undefined_object
  1357                                  .undefined_object:
  1358 000011B0 05                      	db T_undefined
  1359 000011B1 [4407000000000000]      	dq L_constants + 1860
  1360                                  
  1361                                  free_var_59:	; location of cddar
  1362 000011B9 [C111000000000000]      	dq .undefined_object
  1363                                  .undefined_object:
  1364 000011C1 05                      	db T_undefined
  1365 000011C2 [6506000000000000]      	dq L_constants + 1637
  1366                                  
  1367                                  free_var_60:	; location of cdddar
  1368 000011CA [D211000000000000]      	dq .undefined_object
  1369                                  .undefined_object:
  1370 000011D2 05                      	db T_undefined
  1371 000011D3 [5307000000000000]      	dq L_constants + 1875
  1372                                  
  1373                                  free_var_61:	; location of cddddr
  1374 000011DB [E311000000000000]      	dq .undefined_object
  1375                                  .undefined_object:
  1376 000011E3 05                      	db T_undefined
  1377 000011E4 [6207000000000000]      	dq L_constants + 1890
  1378                                  
  1379                                  free_var_62:	; location of cdddr
  1380 000011EC [F411000000000000]      	dq .undefined_object
  1381                                  .undefined_object:
  1382 000011F4 05                      	db T_undefined
  1383 000011F5 [7306000000000000]      	dq L_constants + 1651
  1384                                  
  1385                                  free_var_63:	; location of cddr
  1386 000011FD [0512000000000000]      	dq .undefined_object
  1387                                  .undefined_object:
  1388 00001205 05                      	db T_undefined
  1389 00001206 [0406000000000000]      	dq L_constants + 1540
  1390                                  
  1391                                  free_var_64:	; location of cdr
  1392 0000120E [1612000000000000]      	dq .undefined_object
  1393                                  .undefined_object:
  1394 00001216 05                      	db T_undefined
  1395 00001217 [2101000000000000]      	dq L_constants + 289
  1396                                  
  1397                                  free_var_65:	; location of char->integer
  1398 0000121F [2712000000000000]      	dq .undefined_object
  1399                                  .undefined_object:
  1400 00001227 05                      	db T_undefined
  1401 00001228 [A901000000000000]      	dq L_constants + 425
  1402                                  
  1403                                  free_var_66:	; location of char-ci<=?
  1404 00001230 [3812000000000000]      	dq .undefined_object
  1405                                  .undefined_object:
  1406 00001238 05                      	db T_undefined
  1407 00001239 [230A000000000000]      	dq L_constants + 2595
  1408                                  
  1409                                  free_var_67:	; location of char-ci<?
  1410 00001241 [4912000000000000]      	dq .undefined_object
  1411                                  .undefined_object:
  1412 00001249 05                      	db T_undefined
  1413 0000124A [110A000000000000]      	dq L_constants + 2577
  1414                                  
  1415                                  free_var_68:	; location of char-ci=?
  1416 00001252 [5A12000000000000]      	dq .undefined_object
  1417                                  .undefined_object:
  1418 0000125A 05                      	db T_undefined
  1419 0000125B [360A000000000000]      	dq L_constants + 2614
  1420                                  
  1421                                  free_var_69:	; location of char-ci>=?
  1422 00001263 [6B12000000000000]      	dq .undefined_object
  1423                                  .undefined_object:
  1424 0000126B 05                      	db T_undefined
  1425 0000126C [5A0A000000000000]      	dq L_constants + 2650
  1426                                  
  1427                                  free_var_70:	; location of char-ci>?
  1428 00001274 [7C12000000000000]      	dq .undefined_object
  1429                                  .undefined_object:
  1430 0000127C 05                      	db T_undefined
  1431 0000127D [480A000000000000]      	dq L_constants + 2632
  1432                                  
  1433                                  free_var_71:	; location of char-downcase
  1434 00001285 [8D12000000000000]      	dq .undefined_object
  1435                                  .undefined_object:
  1436 0000128D 05                      	db T_undefined
  1437 0000128E [DF09000000000000]      	dq L_constants + 2527
  1438                                  
  1439                                  free_var_72:	; location of char-upcase
  1440 00001296 [9E12000000000000]      	dq .undefined_object
  1441                                  .undefined_object:
  1442 0000129E 05                      	db T_undefined
  1443 0000129F [F509000000000000]      	dq L_constants + 2549
  1444                                  
  1445                                  free_var_73:	; location of char<=?
  1446 000012A7 [AF12000000000000]      	dq .undefined_object
  1447                                  .undefined_object:
  1448 000012AF 05                      	db T_undefined
  1449 000012B0 [A109000000000000]      	dq L_constants + 2465
  1450                                  
  1451                                  free_var_74:	; location of char<?
  1452 000012B8 [C012000000000000]      	dq .undefined_object
  1453                                  .undefined_object:
  1454 000012C0 05                      	db T_undefined
  1455 000012C1 [9209000000000000]      	dq L_constants + 2450
  1456                                  
  1457                                  free_var_75:	; location of char=?
  1458 000012C9 [D112000000000000]      	dq .undefined_object
  1459                                  .undefined_object:
  1460 000012D1 05                      	db T_undefined
  1461 000012D2 [B109000000000000]      	dq L_constants + 2481
  1462                                  
  1463                                  free_var_76:	; location of char>=?
  1464 000012DA [E212000000000000]      	dq .undefined_object
  1465                                  .undefined_object:
  1466 000012E2 05                      	db T_undefined
  1467 000012E3 [CF09000000000000]      	dq L_constants + 2511
  1468                                  
  1469                                  free_var_77:	; location of char>?
  1470 000012EB [F312000000000000]      	dq .undefined_object
  1471                                  .undefined_object:
  1472 000012F3 05                      	db T_undefined
  1473 000012F4 [C009000000000000]      	dq L_constants + 2496
  1474                                  
  1475                                  free_var_78:	; location of char?
  1476 000012FC [0413000000000000]      	dq .undefined_object
  1477                                  .undefined_object:
  1478 00001304 05                      	db T_undefined
  1479 00001305 [3000000000000000]      	dq L_constants + 48
  1480                                  
  1481                                  free_var_79:	; location of cons
  1482 0000130D [1513000000000000]      	dq .undefined_object
  1483                                  .undefined_object:
  1484 00001315 05                      	db T_undefined
  1485 00001316 [DF00000000000000]      	dq L_constants + 223
  1486                                  
  1487                                  free_var_80:	; location of eq?
  1488 0000131E [2613000000000000]      	dq .undefined_object
  1489                                  .undefined_object:
  1490 00001326 05                      	db T_undefined
  1491 00001327 [9604000000000000]      	dq L_constants + 1174
  1492                                  
  1493                                  free_var_81:	; location of equal?
  1494 0000132F [3713000000000000]      	dq .undefined_object
  1495                                  .undefined_object:
  1496 00001337 05                      	db T_undefined
  1497 00001338 [980C000000000000]      	dq L_constants + 3224
  1498                                  
  1499                                  free_var_82:	; location of error
  1500 00001340 [4813000000000000]      	dq .undefined_object
  1501                                  .undefined_object:
  1502 00001348 05                      	db T_undefined
  1503 00001349 [1103000000000000]      	dq L_constants + 785
  1504                                  
  1505                                  free_var_83:	; location of even?
  1506 00001351 [5913000000000000]      	dq .undefined_object
  1507                                  .undefined_object:
  1508 00001359 05                      	db T_undefined
  1509 0000135A [680C000000000000]      	dq L_constants + 3176
  1510                                  
  1511                                  free_var_84:	; location of fact
  1512 00001362 [6A13000000000000]      	dq .undefined_object
  1513                                  .undefined_object:
  1514 0000136A 05                      	db T_undefined
  1515 0000136B [0309000000000000]      	dq L_constants + 2307
  1516                                  
  1517                                  free_var_85:	; location of fold-left
  1518 00001373 [7B13000000000000]      	dq .undefined_object
  1519                                  .undefined_object:
  1520 0000137B 05                      	db T_undefined
  1521 0000137C [1908000000000000]      	dq L_constants + 2073
  1522                                  
  1523                                  free_var_86:	; location of fold-right
  1524 00001384 [8C13000000000000]      	dq .undefined_object
  1525                                  .undefined_object:
  1526 0000138C 05                      	db T_undefined
  1527 0000138D [3A08000000000000]      	dq L_constants + 2106
  1528                                  
  1529                                  free_var_87:	; location of fraction->real
  1530 00001395 [9D13000000000000]      	dq .undefined_object
  1531                                  .undefined_object:
  1532 0000139D 05                      	db T_undefined
  1533 0000139E [9201000000000000]      	dq L_constants + 402
  1534                                  
  1535                                  free_var_88:	; location of fraction?
  1536 000013A6 [AE13000000000000]      	dq .undefined_object
  1537                                  .undefined_object:
  1538 000013AE 05                      	db T_undefined
  1539 000013AF [9800000000000000]      	dq L_constants + 152
  1540                                  
  1541                                  free_var_89:	; location of integer->char
  1542 000013B7 [BF13000000000000]      	dq .undefined_object
  1543                                  .undefined_object:
  1544 000013BF 05                      	db T_undefined
  1545 000013C0 [BF01000000000000]      	dq L_constants + 447
  1546                                  
  1547                                  free_var_90:	; location of integer->real
  1548 000013C8 [D013000000000000]      	dq .undefined_object
  1549                                  .undefined_object:
  1550 000013D0 05                      	db T_undefined
  1551 000013D1 [7C01000000000000]      	dq L_constants + 380
  1552                                  
  1553                                  free_var_91:	; location of integer?
  1554 000013D9 [E113000000000000]      	dq .undefined_object
  1555                                  .undefined_object:
  1556 000013E1 05                      	db T_undefined
  1557 000013E2 [F001000000000000]      	dq L_constants + 496
  1558                                  
  1559                                  free_var_92:	; location of list
  1560 000013EA [F213000000000000]      	dq .undefined_object
  1561                                  .undefined_object:
  1562 000013F2 05                      	db T_undefined
  1563 000013F3 [7F07000000000000]      	dq L_constants + 1919
  1564                                  
  1565                                  free_var_93:	; location of list*
  1566 000013FB [0314000000000000]      	dq .undefined_object
  1567                                  .undefined_object:
  1568 00001403 05                      	db T_undefined
  1569 00001404 [AA07000000000000]      	dq L_constants + 1962
  1570                                  
  1571                                  free_var_94:	; location of list->string
  1572 0000140C [1414000000000000]      	dq .undefined_object
  1573                                  .undefined_object:
  1574 00001414 05                      	db T_undefined
  1575 00001415 [9B0A000000000000]      	dq L_constants + 2715
  1576                                  
  1577                                  free_var_95:	; location of list->vector
  1578 0000141D [2514000000000000]      	dq .undefined_object
  1579                                  .undefined_object:
  1580 00001425 05                      	db T_undefined
  1581 00001426 [FC0B000000000000]      	dq L_constants + 3068
  1582                                  
  1583                                  free_var_96:	; location of list?
  1584 0000142E [3614000000000000]      	dq .undefined_object
  1585                                  .undefined_object:
  1586 00001436 05                      	db T_undefined
  1587 00001437 [7107000000000000]      	dq L_constants + 1905
  1588                                  
  1589                                  free_var_97:	; location of logarithm
  1590 0000143F [4714000000000000]      	dq .undefined_object
  1591                                  .undefined_object:
  1592 00001447 05                      	db T_undefined
  1593 00001448 [8B0D000000000000]      	dq L_constants + 3467
  1594                                  
  1595                                  free_var_98:	; location of make-list-thunk
  1596 00001450 [5814000000000000]      	dq .undefined_object
  1597                                  .undefined_object:
  1598 00001458 05                      	db T_undefined
  1599 00001459 [3F0D000000000000]      	dq L_constants + 3391
  1600                                  
  1601                                  free_var_99:	; location of make-string
  1602 00001461 [6914000000000000]      	dq .undefined_object
  1603                                  .undefined_object:
  1604 00001469 05                      	db T_undefined
  1605 0000146A [5C04000000000000]      	dq L_constants + 1116
  1606                                  
  1607                                  free_var_100:	; location of make-string-thunk
  1608 00001472 [7A14000000000000]      	dq .undefined_object
  1609                                  .undefined_object:
  1610 0000147A 05                      	db T_undefined
  1611 0000147B [570D000000000000]      	dq L_constants + 3415
  1612                                  
  1613                                  free_var_101:	; location of make-vector
  1614 00001483 [8B14000000000000]      	dq .undefined_object
  1615                                  .undefined_object:
  1616 0000148B 05                      	db T_undefined
  1617 0000148C [4804000000000000]      	dq L_constants + 1096
  1618                                  
  1619                                  free_var_102:	; location of make-vector-thunk
  1620 00001494 [9C14000000000000]      	dq .undefined_object
  1621                                  .undefined_object:
  1622 0000149C 05                      	db T_undefined
  1623 0000149D [710D000000000000]      	dq L_constants + 3441
  1624                                  
  1625                                  free_var_103:	; location of map
  1626 000014A5 [AD14000000000000]      	dq .undefined_object
  1627                                  .undefined_object:
  1628 000014AD 05                      	db T_undefined
  1629 000014AE [EE07000000000000]      	dq L_constants + 2030
  1630                                  
  1631                                  free_var_104:	; location of negative?
  1632 000014B6 [BE14000000000000]      	dq .undefined_object
  1633                                  .undefined_object:
  1634 000014BE 05                      	db T_undefined
  1635 000014BF [560C000000000000]      	dq L_constants + 3158
  1636                                  
  1637                                  free_var_105:	; location of newline
  1638 000014C7 [CF14000000000000]      	dq .undefined_object
  1639                                  .undefined_object:
  1640 000014CF 05                      	db T_undefined
  1641 000014D0 [A60D000000000000]      	dq L_constants + 3494
  1642                                  
  1643                                  free_var_106:	; location of not
  1644 000014D8 [E014000000000000]      	dq .undefined_object
  1645                                  .undefined_object:
  1646 000014E0 05                      	db T_undefined
  1647 000014E1 [8C07000000000000]      	dq L_constants + 1932
  1648                                  
  1649                                  free_var_107:	; location of null?
  1650 000014E9 [F114000000000000]      	dq .undefined_object
  1651                                  .undefined_object:
  1652 000014F1 05                      	db T_undefined
  1653 000014F2 [0600000000000000]      	dq L_constants + 6
  1654                                  
  1655                                  free_var_108:	; location of number?
  1656 000014FA [0215000000000000]      	dq .undefined_object
  1657                                  .undefined_object:
  1658 00001502 05                      	db T_undefined
  1659 00001503 [BB00000000000000]      	dq L_constants + 187
  1660                                  
  1661                                  free_var_109:	; location of odd?
  1662 0000150B [1315000000000000]      	dq .undefined_object
  1663                                  .undefined_object:
  1664 00001513 05                      	db T_undefined
  1665 00001514 [7F0C000000000000]      	dq L_constants + 3199
  1666                                  
  1667                                  free_var_110:	; location of ormap
  1668 0000151C [2415000000000000]      	dq .undefined_object
  1669                                  .undefined_object:
  1670 00001524 05                      	db T_undefined
  1671 00001525 [E007000000000000]      	dq L_constants + 2016
  1672                                  
  1673                                  free_var_111:	; location of pair?
  1674 0000152D [3515000000000000]      	dq .undefined_object
  1675                                  .undefined_object:
  1676 00001535 05                      	db T_undefined
  1677 00001536 [1400000000000000]      	dq L_constants + 20
  1678                                  
  1679                                  free_var_112:	; location of positive?
  1680 0000153E [4615000000000000]      	dq .undefined_object
  1681                                  .undefined_object:
  1682 00001546 05                      	db T_undefined
  1683 00001547 [440C000000000000]      	dq L_constants + 3140
  1684                                  
  1685                                  free_var_113:	; location of random
  1686 0000154F [5715000000000000]      	dq .undefined_object
  1687                                  .undefined_object:
  1688 00001557 05                      	db T_undefined
  1689 00001558 [350C000000000000]      	dq L_constants + 3125
  1690                                  
  1691                                  free_var_114:	; location of rational?
  1692 00001560 [6815000000000000]      	dq .undefined_object
  1693                                  .undefined_object:
  1694 00001568 05                      	db T_undefined
  1695 00001569 [9807000000000000]      	dq L_constants + 1944
  1696                                  
  1697                                  free_var_115:	; location of real
  1698 00001571 [7915000000000000]      	dq .undefined_object
  1699                                  .undefined_object:
  1700 00001579 05                      	db T_undefined
  1701 0000157A [BE08000000000000]      	dq L_constants + 2238
  1702                                  
  1703                                  free_var_116:	; location of real?
  1704 00001582 [8A15000000000000]      	dq .undefined_object
  1705                                  .undefined_object:
  1706 0000158A 05                      	db T_undefined
  1707 0000158B [8A00000000000000]      	dq L_constants + 138
  1708                                  
  1709                                  free_var_117:	; location of remainder
  1710 00001593 [9B15000000000000]      	dq .undefined_object
  1711                                  .undefined_object:
  1712 0000159B 05                      	db T_undefined
  1713 0000159C [C603000000000000]      	dq L_constants + 966
  1714                                  
  1715                                  free_var_118:	; location of reverse
  1716 000015A4 [AC15000000000000]      	dq .undefined_object
  1717                                  .undefined_object:
  1718 000015AC 05                      	db T_undefined
  1719 000015AD [0908000000000000]      	dq L_constants + 2057
  1720                                  
  1721                                  free_var_119:	; location of string->list
  1722 000015B5 [BD15000000000000]      	dq .undefined_object
  1723                                  .undefined_object:
  1724 000015BD 05                      	db T_undefined
  1725 000015BE [B00A000000000000]      	dq L_constants + 2736
  1726                                  
  1727                                  free_var_120:	; location of string-append
  1728 000015C6 [CE15000000000000]      	dq .undefined_object
  1729                                  .undefined_object:
  1730 000015CE 05                      	db T_undefined
  1731 000015CF [B50C000000000000]      	dq L_constants + 3253
  1732                                  
  1733                                  free_var_121:	; location of string-ci<=?
  1734 000015D7 [DF15000000000000]      	dq .undefined_object
  1735                                  .undefined_object:
  1736 000015DF 05                      	db T_undefined
  1737 000015E0 [300B000000000000]      	dq L_constants + 2864
  1738                                  
  1739                                  free_var_122:	; location of string-ci<?
  1740 000015E8 [F015000000000000]      	dq .undefined_object
  1741                                  .undefined_object:
  1742 000015F0 05                      	db T_undefined
  1743 000015F1 [1C0B000000000000]      	dq L_constants + 2844
  1744                                  
  1745                                  free_var_123:	; location of string-ci=?
  1746 000015F9 [0116000000000000]      	dq .undefined_object
  1747                                  .undefined_object:
  1748 00001601 05                      	db T_undefined
  1749 00001602 [450B000000000000]      	dq L_constants + 2885
  1750                                  
  1751                                  free_var_124:	; location of string-ci>=?
  1752 0000160A [1216000000000000]      	dq .undefined_object
  1753                                  .undefined_object:
  1754 00001612 05                      	db T_undefined
  1755 00001613 [590B000000000000]      	dq L_constants + 2905
  1756                                  
  1757                                  free_var_125:	; location of string-ci>?
  1758 0000161B [2316000000000000]      	dq .undefined_object
  1759                                  .undefined_object:
  1760 00001623 05                      	db T_undefined
  1761 00001624 [6E0B000000000000]      	dq L_constants + 2926
  1762                                  
  1763                                  free_var_126:	; location of string-downcase
  1764 0000162C [3416000000000000]      	dq .undefined_object
  1765                                  .undefined_object:
  1766 00001634 05                      	db T_undefined
  1767 00001635 [6D0A000000000000]      	dq L_constants + 2669
  1768                                  
  1769                                  free_var_127:	; location of string-length
  1770 0000163D [4516000000000000]      	dq .undefined_object
  1771                                  .undefined_object:
  1772 00001645 05                      	db T_undefined
  1773 00001646 [2D01000000000000]      	dq L_constants + 301
  1774                                  
  1775                                  free_var_128:	; location of string-ref
  1776 0000164E [5616000000000000]      	dq .undefined_object
  1777                                  .undefined_object:
  1778 00001656 05                      	db T_undefined
  1779 00001657 [FA03000000000000]      	dq L_constants + 1018
  1780                                  
  1781                                  free_var_129:	; location of string-reverse
  1782 0000165F [6716000000000000]      	dq .undefined_object
  1783                                  .undefined_object:
  1784 00001667 05                      	db T_undefined
  1785 00001668 [E10C000000000000]      	dq L_constants + 3297
  1786                                  
  1787                                  free_var_130:	; location of string-reverse!
  1788 00001670 [7816000000000000]      	dq .undefined_object
  1789                                  .undefined_object:
  1790 00001678 05                      	db T_undefined
  1791 00001679 [0F0D000000000000]      	dq L_constants + 3343
  1792                                  
  1793                                  free_var_131:	; location of string-set!
  1794 00001681 [8916000000000000]      	dq .undefined_object
  1795                                  .undefined_object:
  1796 00001689 05                      	db T_undefined
  1797 0000168A [3404000000000000]      	dq L_constants + 1076
  1798                                  
  1799                                  free_var_132:	; location of string-upcase
  1800 00001692 [9A16000000000000]      	dq .undefined_object
  1801                                  .undefined_object:
  1802 0000169A 05                      	db T_undefined
  1803 0000169B [850A000000000000]      	dq L_constants + 2693
  1804                                  
  1805                                  free_var_133:	; location of string<=?
  1806 000016A3 [AB16000000000000]      	dq .undefined_object
  1807                                  .undefined_object:
  1808 000016AB 05                      	db T_undefined
  1809 000016AC [D60A000000000000]      	dq L_constants + 2774
  1810                                  
  1811                                  free_var_134:	; location of string<?
  1812 000016B4 [BC16000000000000]      	dq .undefined_object
  1813                                  .undefined_object:
  1814 000016BC 05                      	db T_undefined
  1815 000016BD [C50A000000000000]      	dq L_constants + 2757
  1816                                  
  1817                                  free_var_135:	; location of string=?
  1818 000016C5 [CD16000000000000]      	dq .undefined_object
  1819                                  .undefined_object:
  1820 000016CD 05                      	db T_undefined
  1821 000016CE [E80A000000000000]      	dq L_constants + 2792
  1822                                  
  1823                                  free_var_136:	; location of string>=?
  1824 000016D6 [DE16000000000000]      	dq .undefined_object
  1825                                  .undefined_object:
  1826 000016DE 05                      	db T_undefined
  1827 000016DF [F90A000000000000]      	dq L_constants + 2809
  1828                                  
  1829                                  free_var_137:	; location of string>?
  1830 000016E7 [EF16000000000000]      	dq .undefined_object
  1831                                  .undefined_object:
  1832 000016EF 05                      	db T_undefined
  1833 000016F0 [0B0B000000000000]      	dq L_constants + 2827
  1834                                  
  1835                                  free_var_138:	; location of string?
  1836 000016F8 [0017000000000000]      	dq .undefined_object
  1837                                  .undefined_object:
  1838 00001700 05                      	db T_undefined
  1839 00001701 [3E00000000000000]      	dq L_constants + 62
  1840                                  
  1841                                  free_var_139:	; location of trng
  1842 00001709 [1117000000000000]      	dq .undefined_object
  1843                                  .undefined_object:
  1844 00001711 05                      	db T_undefined
  1845 00001712 [D501000000000000]      	dq L_constants + 469
  1846                                  
  1847                                  free_var_140:	; location of vector
  1848 0000171A [2217000000000000]      	dq .undefined_object
  1849                                  .undefined_object:
  1850 00001722 05                      	db T_undefined
  1851 00001723 [110C000000000000]      	dq L_constants + 3089
  1852                                  
  1853                                  free_var_141:	; location of vector->list
  1854 0000172B [3317000000000000]      	dq .undefined_object
  1855                                  .undefined_object:
  1856 00001733 05                      	db T_undefined
  1857 00001734 [200C000000000000]      	dq L_constants + 3104
  1858                                  
  1859                                  free_var_142:	; location of vector-append
  1860 0000173C [4417000000000000]      	dq .undefined_object
  1861                                  .undefined_object:
  1862 00001744 05                      	db T_undefined
  1863 00001745 [CB0C000000000000]      	dq L_constants + 3275
  1864                                  
  1865                                  free_var_143:	; location of vector-length
  1866 0000174D [5517000000000000]      	dq .undefined_object
  1867                                  .undefined_object:
  1868 00001755 05                      	db T_undefined
  1869 00001756 [4301000000000000]      	dq L_constants + 323
  1870                                  
  1871                                  free_var_144:	; location of vector-ref
  1872 0000175E [6617000000000000]      	dq .undefined_object
  1873                                  .undefined_object:
  1874 00001766 05                      	db T_undefined
  1875 00001767 [0D04000000000000]      	dq L_constants + 1037
  1876                                  
  1877                                  free_var_145:	; location of vector-reverse
  1878 0000176F [7717000000000000]      	dq .undefined_object
  1879                                  .undefined_object:
  1880 00001777 05                      	db T_undefined
  1881 00001778 [F80C000000000000]      	dq L_constants + 3320
  1882                                  
  1883                                  free_var_146:	; location of vector-reverse!
  1884 00001780 [8817000000000000]      	dq .undefined_object
  1885                                  .undefined_object:
  1886 00001788 05                      	db T_undefined
  1887 00001789 [270D000000000000]      	dq L_constants + 3367
  1888                                  
  1889                                  free_var_147:	; location of vector-set!
  1890 00001791 [9917000000000000]      	dq .undefined_object
  1891                                  .undefined_object:
  1892 00001799 05                      	db T_undefined
  1893 0000179A [2004000000000000]      	dq L_constants + 1056
  1894                                  
  1895                                  free_var_148:	; location of vector?
  1896 000017A2 [AA17000000000000]      	dq .undefined_object
  1897                                  .undefined_object:
  1898 000017AA 05                      	db T_undefined
  1899 000017AB [6700000000000000]      	dq L_constants + 103
  1900                                  
  1901                                  free_var_149:	; location of void
  1902 000017B3 [BB17000000000000]      	dq .undefined_object
  1903                                  .undefined_object:
  1904 000017BB 05                      	db T_undefined
  1905 000017BC [B80D000000000000]      	dq L_constants + 3512
  1906                                  
  1907                                  free_var_150:	; location of write-char
  1908 000017C4 [CC17000000000000]      	dq .undefined_object
  1909                                  .undefined_object:
  1910 000017CC 05                      	db T_undefined
  1911 000017CD [0201000000000000]      	dq L_constants + 258
  1912                                  
  1913                                  free_var_151:	; location of zero?
  1914 000017D5 [DD17000000000000]      	dq .undefined_object
  1915                                  .undefined_object:
  1916 000017DD 05                      	db T_undefined
  1917 000017DE [E201000000000000]      	dq L_constants + 482
  1918                                  
  1919                                  
  1920                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1921                                  global main
  1922                                  section .text
  1923                                  main:
  1924 00000000 C8000000                        enter 0, 0
  1925 00000004 6A00                            push 0
  1926 00000006 6A00                            push 0
  1927 00000008 68[4B590100]                    push Lend
  1928 0000000D C8000000                        enter 0, 0
  1929                                  	; building closure for null?
  1930 00000011 48BF-                   	mov rdi, free_var_107
  1930 00000013 [E914000000000000] 
  1931 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1931 0000001D [DB64010000000000] 
  1932 00000025 E8BC620100              	call bind_primitive
  1933                                  
  1934                                  	; building closure for pair?
  1935 0000002A 48BF-                   	mov rdi, free_var_111
  1935 0000002C [2D15000000000000] 
  1936 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1936 00000036 [0D65010000000000] 
  1937 0000003E E8A3620100              	call bind_primitive
  1938                                  
  1939                                  	; building closure for char?
  1940 00000043 48BF-                   	mov rdi, free_var_78
  1940 00000045 [FC12000000000000] 
  1941 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1941 0000004F [7165010000000000] 
  1942 00000057 E88A620100              	call bind_primitive
  1943                                  
  1944                                  	; building closure for string?
  1945 0000005C 48BF-                   	mov rdi, free_var_138
  1945 0000005E [F816000000000000] 
  1946 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1946 00000068 [A365010000000000] 
  1947 00000070 E871620100              	call bind_primitive
  1948                                  
  1949                                  	; building closure for vector?
  1950 00000075 48BF-                   	mov rdi, free_var_148
  1950 00000077 [A217000000000000] 
  1951 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1951 00000081 [A166010000000000] 
  1952 00000089 E858620100              	call bind_primitive
  1953                                  
  1954                                  	; building closure for real?
  1955 0000008E 48BF-                   	mov rdi, free_var_116
  1955 00000090 [8215000000000000] 
  1956 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1956 0000009A [0567010000000000] 
  1957 000000A2 E83F620100              	call bind_primitive
  1958                                  
  1959                                  	; building closure for fraction?
  1960 000000A7 48BF-                   	mov rdi, free_var_88
  1960 000000A9 [A613000000000000] 
  1961 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1961 000000B3 [3767010000000000] 
  1962 000000BB E826620100              	call bind_primitive
  1963                                  
  1964                                  	; building closure for number?
  1965 000000C0 48BF-                   	mov rdi, free_var_108
  1965 000000C2 [FA14000000000000] 
  1966 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1966 000000CC [0568010000000000] 
  1967 000000D4 E80D620100              	call bind_primitive
  1968                                  
  1969                                  	; building closure for cons
  1970 000000D9 48BF-                   	mov rdi, free_var_79
  1970 000000DB [0D13000000000000] 
  1971 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1971 000000E5 [6D68010000000000] 
  1972 000000ED E8F4610100              	call bind_primitive
  1973                                  
  1974                                  	; building closure for write-char
  1975 000000F2 48BF-                   	mov rdi, free_var_150
  1975 000000F4 [C417000000000000] 
  1976 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  1976 000000FE [C368010000000000] 
  1977 00000106 E8DB610100              	call bind_primitive
  1978                                  
  1979                                  	; building closure for car
  1980 0000010B 48BF-                   	mov rdi, free_var_49
  1980 0000010D [0F11000000000000] 
  1981 00000115 48BE-                   	mov rsi, L_code_ptr_car
  1981 00000117 [1669010000000000] 
  1982 0000011F E8C2610100              	call bind_primitive
  1983                                  
  1984                                  	; building closure for cdr
  1985 00000124 48BF-                   	mov rdi, free_var_64
  1985 00000126 [0E12000000000000] 
  1986 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  1986 00000130 [3A69010000000000] 
  1987 00000138 E8A9610100              	call bind_primitive
  1988                                  
  1989                                  	; building closure for string-length
  1990 0000013D 48BF-                   	mov rdi, free_var_127
  1990 0000013F [3D16000000000000] 
  1991 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  1991 00000149 [5E69010000000000] 
  1992 00000151 E890610100              	call bind_primitive
  1993                                  
  1994                                  	; building closure for vector-length
  1995 00000156 48BF-                   	mov rdi, free_var_143
  1995 00000158 [4D17000000000000] 
  1996 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  1996 00000162 [8769010000000000] 
  1997 0000016A E877610100              	call bind_primitive
  1998                                  
  1999                                  	; building closure for integer->real
  2000 0000016F 48BF-                   	mov rdi, free_var_90
  2000 00000171 [C813000000000000] 
  2001 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  2001 0000017B [F869010000000000] 
  2002 00000183 E85E610100              	call bind_primitive
  2003                                  
  2004                                  	; building closure for fraction->real
  2005 00000188 48BF-                   	mov rdi, free_var_87
  2005 0000018A [9513000000000000] 
  2006 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2006 00000194 [266A010000000000] 
  2007 0000019C E845610100              	call bind_primitive
  2008                                  
  2009                                  	; building closure for char->integer
  2010 000001A1 48BF-                   	mov rdi, free_var_65
  2010 000001A3 [1F12000000000000] 
  2011 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2011 000001AD [616A010000000000] 
  2012 000001B5 E82C610100              	call bind_primitive
  2013                                  
  2014                                  	; building closure for integer->char
  2015 000001BA 48BF-                   	mov rdi, free_var_89
  2015 000001BC [B713000000000000] 
  2016 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2016 000001C6 [D06A010000000000] 
  2017 000001CE E813610100              	call bind_primitive
  2018                                  
  2019                                  	; building closure for trng
  2020 000001D3 48BF-                   	mov rdi, free_var_139
  2020 000001D5 [0917000000000000] 
  2021 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2021 000001DF [1B6B010000000000] 
  2022 000001E7 E8FA600100              	call bind_primitive
  2023                                  
  2024                                  	; building closure for zero?
  2025 000001EC 48BF-                   	mov rdi, free_var_151
  2025 000001EE [D517000000000000] 
  2026 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2026 000001F8 [3A6B010000000000] 
  2027 00000200 E8E1600100              	call bind_primitive
  2028                                  
  2029                                  	; building closure for integer?
  2030 00000205 48BF-                   	mov rdi, free_var_91
  2030 00000207 [D913000000000000] 
  2031 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2031 00000211 [9F6B010000000000] 
  2032 00000219 E8C8600100              	call bind_primitive
  2033                                  
  2034                                  	; building closure for __bin-apply
  2035 0000021E 48BF-                   	mov rdi, free_var_12
  2035 00000220 [9A0E000000000000] 
  2036 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2036 0000022A [5664010000000000] 
  2037 00000232 E8AF600100              	call bind_primitive
  2038                                  
  2039                                  	; building closure for __bin-add-rr
  2040 00000237 48BF-                   	mov rdi, free_var_10
  2040 00000239 [780E000000000000] 
  2041 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2041 00000243 [D16B010000000000] 
  2042 0000024B E896600100              	call bind_primitive
  2043                                  
  2044                                  	; building closure for __bin-sub-rr
  2045 00000250 48BF-                   	mov rdi, free_var_26
  2045 00000252 [880F000000000000] 
  2046 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2046 0000025C [116C010000000000] 
  2047 00000264 E87D600100              	call bind_primitive
  2048                                  
  2049                                  	; building closure for __bin-mul-rr
  2050 00000269 48BF-                   	mov rdi, free_var_23
  2050 0000026B [550F000000000000] 
  2051 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2051 00000275 [516C010000000000] 
  2052 0000027D E864600100              	call bind_primitive
  2053                                  
  2054                                  	; building closure for __bin-div-rr
  2055 00000282 48BF-                   	mov rdi, free_var_14
  2055 00000284 [BC0E000000000000] 
  2056 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2056 0000028E [916C010000000000] 
  2057 00000296 E84B600100              	call bind_primitive
  2058                                  
  2059                                  	; building closure for __bin-add-qq
  2060 0000029B 48BF-                   	mov rdi, free_var_9
  2060 0000029D [670E000000000000] 
  2061 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2061 000002A7 [1B6D010000000000] 
  2062 000002AF E832600100              	call bind_primitive
  2063                                  
  2064                                  	; building closure for __bin-sub-qq
  2065 000002B4 48BF-                   	mov rdi, free_var_25
  2065 000002B6 [770F000000000000] 
  2066 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2066 000002C0 [BB6D010000000000] 
  2067 000002C8 E819600100              	call bind_primitive
  2068                                  
  2069                                  	; building closure for __bin-mul-qq
  2070 000002CD 48BF-                   	mov rdi, free_var_22
  2070 000002CF [440F000000000000] 
  2071 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2071 000002D9 [606E010000000000] 
  2072 000002E1 E800600100              	call bind_primitive
  2073                                  
  2074                                  	; building closure for __bin-div-qq
  2075 000002E6 48BF-                   	mov rdi, free_var_13
  2075 000002E8 [AB0E000000000000] 
  2076 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2076 000002F2 [FA6E010000000000] 
  2077 000002FA E8E75F0100              	call bind_primitive
  2078                                  
  2079                                  	; building closure for __bin-add-zz
  2080 000002FF 48BF-                   	mov rdi, free_var_11
  2080 00000301 [890E000000000000] 
  2081 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2081 0000030B [DF6C010000000000] 
  2082 00000313 E8CE5F0100              	call bind_primitive
  2083                                  
  2084                                  	; building closure for __bin-sub-zz
  2085 00000318 48BF-                   	mov rdi, free_var_27
  2085 0000031A [990F000000000000] 
  2086 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2086 00000324 [7F6D010000000000] 
  2087 0000032C E8B55F0100              	call bind_primitive
  2088                                  
  2089                                  	; building closure for __bin-mul-zz
  2090 00000331 48BF-                   	mov rdi, free_var_24
  2090 00000333 [660F000000000000] 
  2091 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2091 0000033D [1F6E010000000000] 
  2092 00000345 E89C5F0100              	call bind_primitive
  2093                                  
  2094                                  	; building closure for __bin-div-zz
  2095 0000034A 48BF-                   	mov rdi, free_var_15
  2095 0000034C [CD0E000000000000] 
  2096 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2096 00000356 [B46E010000000000] 
  2097 0000035E E8835F0100              	call bind_primitive
  2098                                  
  2099                                  	; building closure for error
  2100 00000363 48BF-                   	mov rdi, free_var_82
  2100 00000365 [4013000000000000] 
  2101 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2101 0000036F [E46F010000000000] 
  2102 00000377 E86A5F0100              	call bind_primitive
  2103                                  
  2104                                  	; building closure for __bin-less-than-rr
  2105 0000037C 48BF-                   	mov rdi, free_var_20
  2105 0000037E [220F000000000000] 
  2106 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2106 00000388 [A070010000000000] 
  2107 00000390 E8515F0100              	call bind_primitive
  2108                                  
  2109                                  	; building closure for __bin-less-than-qq
  2110 00000395 48BF-                   	mov rdi, free_var_19
  2110 00000397 [110F000000000000] 
  2111 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2111 000003A1 [4271010000000000] 
  2112 000003A9 E8385F0100              	call bind_primitive
  2113                                  
  2114                                  	; building closure for __bin-less-than-zz
  2115 000003AE 48BF-                   	mov rdi, free_var_21
  2115 000003B0 [330F000000000000] 
  2116 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2116 000003BA [F370010000000000] 
  2117 000003C2 E81F5F0100              	call bind_primitive
  2118                                  
  2119                                  	; building closure for __bin-equal-rr
  2120 000003C7 48BF-                   	mov rdi, free_var_17
  2120 000003C9 [EF0E000000000000] 
  2121 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2121 000003D3 [A171010000000000] 
  2122 000003DB E8065F0100              	call bind_primitive
  2123                                  
  2124                                  	; building closure for __bin-equal-qq
  2125 000003E0 48BF-                   	mov rdi, free_var_16
  2125 000003E2 [DE0E000000000000] 
  2126 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2126 000003EC [4372010000000000] 
  2127 000003F4 E8ED5E0100              	call bind_primitive
  2128                                  
  2129                                  	; building closure for __bin-equal-zz
  2130 000003F9 48BF-                   	mov rdi, free_var_18
  2130 000003FB [000F000000000000] 
  2131 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2131 00000405 [F471010000000000] 
  2132 0000040D E8D45E0100              	call bind_primitive
  2133                                  
  2134                                  	; building closure for remainder
  2135 00000412 48BF-                   	mov rdi, free_var_117
  2135 00000414 [9315000000000000] 
  2136 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2136 0000041E [EE72010000000000] 
  2137 00000426 E8BB5E0100              	call bind_primitive
  2138                                  
  2139                                  	; building closure for string-ref
  2140 0000042B 48BF-                   	mov rdi, free_var_128
  2140 0000042D [4E16000000000000] 
  2141 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2141 00000437 [9E73010000000000] 
  2142 0000043F E8A25E0100              	call bind_primitive
  2143                                  
  2144                                  	; building closure for vector-ref
  2145 00000444 48BF-                   	mov rdi, free_var_144
  2145 00000446 [5E17000000000000] 
  2146 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2146 00000450 [FA73010000000000] 
  2147 00000458 E8895E0100              	call bind_primitive
  2148                                  
  2149                                  	; building closure for vector-set!
  2150 0000045D 48BF-                   	mov rdi, free_var_147
  2150 0000045F [9117000000000000] 
  2151 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2151 00000469 [4774010000000000] 
  2152 00000471 E8705E0100              	call bind_primitive
  2153                                  
  2154                                  	; building closure for string-set!
  2155 00000476 48BF-                   	mov rdi, free_var_131
  2155 00000478 [8116000000000000] 
  2156 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2156 00000482 [A274010000000000] 
  2157 0000048A E8575E0100              	call bind_primitive
  2158                                  
  2159                                  	; building closure for make-vector
  2160 0000048F 48BF-                   	mov rdi, free_var_101
  2160 00000491 [8314000000000000] 
  2161 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2161 0000049B [0875010000000000] 
  2162 000004A3 E83E5E0100              	call bind_primitive
  2163                                  
  2164                                  	; building closure for make-string
  2165 000004A8 48BF-                   	mov rdi, free_var_99
  2165 000004AA [6114000000000000] 
  2166 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2166 000004B4 [6375010000000000] 
  2167 000004BC E8255E0100              	call bind_primitive
  2168                                  
  2169                                  	; building closure for eq?
  2170 000004C1 48BF-                   	mov rdi, free_var_80
  2170 000004C3 [1E13000000000000] 
  2171 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2171 000004CD [1876010000000000] 
  2172 000004D5 E80C5E0100              	call bind_primitive
  2173                                  
  2174                                  	; building closure for __integer-to-fraction
  2175 000004DA 48BF-                   	mov rdi, free_var_29
  2175 000004DC [BB0F000000000000] 
  2176 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2176 000004E6 [926A010000000000] 
  2177 000004EE E8F35D0100              	call bind_primitive
  2178                                  
  2179 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2180 000004F8 E8B9550100              	call malloc
  2181 000004FD 50                      	push rax
  2182 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2183 00000503 E8AE550100              	call malloc
  2184 00000508 50                      	push rax
  2185 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2186 0000050E E8A3550100              	call malloc
  2187 00000513 488B7D10                	mov rdi, ENV
  2188 00000517 BE00000000              	mov rsi, 0
  2189 0000051C BA01000000              	mov rdx, 1
  2190                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  2191 00000521 4883FE00                	cmp rsi, 0
  2192 00000525 7410                    	je .L_lambda_simple_env_end_0001
  2193 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2194 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2195 0000052F 48FFC6                  	inc rsi
  2196 00000532 48FFC2                  	inc rdx
  2197 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_0001
  2198                                  .L_lambda_simple_env_end_0001:
  2199 00000537 5B                      	pop rbx
  2200 00000538 BE00000000              	mov rsi, 0
  2201                                  .L_lambda_simple_params_loop_0001:	; copy params
  2202 0000053D 4883FE00                	cmp rsi, 0
  2203 00000541 740E                    	je .L_lambda_simple_params_end_0001
  2204 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2205 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2206 0000054C 48FFC6                  	inc rsi
  2207 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_0001
  2208                                  .L_lambda_simple_params_end_0001:
  2209 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2210 00000554 4889C3                  	mov rbx, rax
  2211 00000557 58                      	pop rax
  2212 00000558 C60004                  	mov byte [rax], T_closure
  2213 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2214 0000055F 48C74009[6C050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  2215 00000567 E9A4000000              	jmp .L_lambda_simple_end_0001
  2216                                  .L_lambda_simple_code_0001:	; lambda-simple body
  2217 0000056C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2218 00000572 740B                    	je .L_lambda_simple_arity_check_ok_0001
  2219 00000574 FF742410                	push qword [rsp + 8 * 2]
  2220 00000578 6A01                    	push 1
  2221 0000057A E9F0540100              	jmp L_error_incorrect_arity_simple
  2222                                  .L_lambda_simple_arity_check_ok_0001:
  2223 0000057F C8000000                	enter 0, 0
  2224                                  	; preparing a tail-call
  2225                                  	; preparing a non-tail-call
  2226 00000583 488B4520                	mov rax, PARAM(0)	; param x
  2227 00000587 50                      	push rax
  2228 00000588 6A01                    	push 1	; arg count
  2229 0000058A 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2230 00000592 803805                  	cmp byte [rax], T_undefined
  2231 00000595 0F84EE530100            	je L_error_fvar_undefined
  2232 0000059B 803804                  	cmp byte [rax], T_closure
  2233 0000059E 0F8569540100            	jne L_error_non_closure
  2234 000005A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2235 000005A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2236 000005AA 50                      	push rax
  2237 000005AB 6A01                    	push 1	; arg count
  2238 000005AD 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2239 000005B5 803805                  	cmp byte [rax], T_undefined
  2240 000005B8 0F84CB530100            	je L_error_fvar_undefined
  2241 000005BE 803804                  	cmp byte [rax], T_closure
  2242 000005C1 0F8546540100            	jne L_error_non_closure
  2243 000005C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2244 000005CA FF7508                  	push qword [rbp + 8 * 1]
  2245                                   ; old ret addr
  2246 000005CD FF7500                  	push qword [rbp]
  2247                                   ; restore the old rbp
  2248 000005D0 BB01000000              	mov rbx, 1
  2249 000005D5 4883C303                	add rbx, 3
  2250 000005D9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2251 000005DD 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2252 000005E2 4C8D4DF8                	lea r9, [rbp - 8]
  2253 000005E6 B905000000              	mov rcx, 5
  2254                                  .L_tc_recycle_frame_loop_0001:
  2255 000005EB 4883F900                	cmp rcx, 0
  2256 000005EF 7413                    	je .L_tc_recycle_frame_done_0001
  2257 000005F1 4D8B11                  	mov r10, qword [r9]
  2258 000005F4 4D8910                  	mov qword [r8], r10
  2259 000005F7 4983E808                	sub r8, 8
  2260 000005FB 4983E908                	sub r9, 8
  2261 000005FF 48FFC9                  	dec rcx
  2262 00000602 EBE7                    	jmp .L_tc_recycle_frame_loop_0001
  2263                                  .L_tc_recycle_frame_done_0001:
  2264 00000604 498D6008                	lea rsp, [r8 + 8]
  2265 00000608 5D                      	pop rbp ; restore the old rbp
  2266 00000609 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2267 0000060C C9                      	leave
  2268 0000060D C21800                  	ret AND_KILL_FRAME(1)
  2269                                  .L_lambda_simple_end_0001:	; new closure is in rax
  2270 00000610 48890425[87100000]      	mov qword [free_var_41], rax
  2271 00000618 48B8-                   	mov rax, sob_void
  2271 0000061A [0000000000000000] 
  2272                                  
  2273 00000622 4889C7                  	mov rdi, rax
  2274 00000625 E8E1560100              	call print_sexpr_if_not_void
  2275 0000062A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2276 0000062F E882540100              	call malloc
  2277 00000634 50                      	push rax
  2278 00000635 BF00000000              	mov rdi, 8 * 0	; new rib
  2279 0000063A E877540100              	call malloc
  2280 0000063F 50                      	push rax
  2281 00000640 BF08000000              	mov rdi, 8 * 1	; extended env
  2282 00000645 E86C540100              	call malloc
  2283 0000064A 488B7D10                	mov rdi, ENV
  2284 0000064E BE00000000              	mov rsi, 0
  2285 00000653 BA01000000              	mov rdx, 1
  2286                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  2287 00000658 4883FE00                	cmp rsi, 0
  2288 0000065C 7410                    	je .L_lambda_simple_env_end_0002
  2289 0000065E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2290 00000662 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2291 00000666 48FFC6                  	inc rsi
  2292 00000669 48FFC2                  	inc rdx
  2293 0000066C EBEA                    	jmp .L_lambda_simple_env_loop_0002
  2294                                  .L_lambda_simple_env_end_0002:
  2295 0000066E 5B                      	pop rbx
  2296 0000066F BE00000000              	mov rsi, 0
  2297                                  .L_lambda_simple_params_loop_0002:	; copy params
  2298 00000674 4883FE00                	cmp rsi, 0
  2299 00000678 740E                    	je .L_lambda_simple_params_end_0002
  2300 0000067A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2301 0000067F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2302 00000683 48FFC6                  	inc rsi
  2303 00000686 EBEC                    	jmp .L_lambda_simple_params_loop_0002
  2304                                  .L_lambda_simple_params_end_0002:
  2305 00000688 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2306 0000068B 4889C3                  	mov rbx, rax
  2307 0000068E 58                      	pop rax
  2308 0000068F C60004                  	mov byte [rax], T_closure
  2309 00000692 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2310 00000696 48C74009[A3060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  2311 0000069E E9A4000000              	jmp .L_lambda_simple_end_0002
  2312                                  .L_lambda_simple_code_0002:	; lambda-simple body
  2313 000006A3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2314 000006A9 740B                    	je .L_lambda_simple_arity_check_ok_0002
  2315 000006AB FF742410                	push qword [rsp + 8 * 2]
  2316 000006AF 6A01                    	push 1
  2317 000006B1 E9B9530100              	jmp L_error_incorrect_arity_simple
  2318                                  .L_lambda_simple_arity_check_ok_0002:
  2319 000006B6 C8000000                	enter 0, 0
  2320                                  	; preparing a tail-call
  2321                                  	; preparing a non-tail-call
  2322 000006BA 488B4520                	mov rax, PARAM(0)	; param x
  2323 000006BE 50                      	push rax
  2324 000006BF 6A01                    	push 1	; arg count
  2325 000006C1 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  2326 000006C9 803805                  	cmp byte [rax], T_undefined
  2327 000006CC 0F84B7520100            	je L_error_fvar_undefined
  2328 000006D2 803804                  	cmp byte [rax], T_closure
  2329 000006D5 0F8532530100            	jne L_error_non_closure
  2330 000006DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2331 000006DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  2332 000006E1 50                      	push rax
  2333 000006E2 6A01                    	push 1	; arg count
  2334 000006E4 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2335 000006EC 803805                  	cmp byte [rax], T_undefined
  2336 000006EF 0F8494520100            	je L_error_fvar_undefined
  2337 000006F5 803804                  	cmp byte [rax], T_closure
  2338 000006F8 0F850F530100            	jne L_error_non_closure
  2339 000006FE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2340 00000701 FF7508                  	push qword [rbp + 8 * 1]
  2341                                   ; old ret addr
  2342 00000704 FF7500                  	push qword [rbp]
  2343                                   ; restore the old rbp
  2344 00000707 BB01000000              	mov rbx, 1
  2345 0000070C 4883C303                	add rbx, 3
  2346 00000710 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2347 00000714 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2348 00000719 4C8D4DF8                	lea r9, [rbp - 8]
  2349 0000071D B905000000              	mov rcx, 5
  2350                                  .L_tc_recycle_frame_loop_0002:
  2351 00000722 4883F900                	cmp rcx, 0
  2352 00000726 7413                    	je .L_tc_recycle_frame_done_0002
  2353 00000728 4D8B11                  	mov r10, qword [r9]
  2354 0000072B 4D8910                  	mov qword [r8], r10
  2355 0000072E 4983E808                	sub r8, 8
  2356 00000732 4983E908                	sub r9, 8
  2357 00000736 48FFC9                  	dec rcx
  2358 00000739 EBE7                    	jmp .L_tc_recycle_frame_loop_0002
  2359                                  .L_tc_recycle_frame_done_0002:
  2360 0000073B 498D6008                	lea rsp, [r8 + 8]
  2361 0000073F 5D                      	pop rbp ; restore the old rbp
  2362 00000740 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2363 00000743 C9                      	leave
  2364 00000744 C21800                  	ret AND_KILL_FRAME(1)
  2365                                  .L_lambda_simple_end_0002:	; new closure is in rax
  2366 00000747 48890425[FE100000]      	mov qword [free_var_48], rax
  2367 0000074F 48B8-                   	mov rax, sob_void
  2367 00000751 [0000000000000000] 
  2368                                  
  2369 00000759 4889C7                  	mov rdi, rax
  2370 0000075C E8AA550100              	call print_sexpr_if_not_void
  2371 00000761 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2372 00000766 E84B530100              	call malloc
  2373 0000076B 50                      	push rax
  2374 0000076C BF00000000              	mov rdi, 8 * 0	; new rib
  2375 00000771 E840530100              	call malloc
  2376 00000776 50                      	push rax
  2377 00000777 BF08000000              	mov rdi, 8 * 1	; extended env
  2378 0000077C E835530100              	call malloc
  2379 00000781 488B7D10                	mov rdi, ENV
  2380 00000785 BE00000000              	mov rsi, 0
  2381 0000078A BA01000000              	mov rdx, 1
  2382                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  2383 0000078F 4883FE00                	cmp rsi, 0
  2384 00000793 7410                    	je .L_lambda_simple_env_end_0003
  2385 00000795 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2386 00000799 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2387 0000079D 48FFC6                  	inc rsi
  2388 000007A0 48FFC2                  	inc rdx
  2389 000007A3 EBEA                    	jmp .L_lambda_simple_env_loop_0003
  2390                                  .L_lambda_simple_env_end_0003:
  2391 000007A5 5B                      	pop rbx
  2392 000007A6 BE00000000              	mov rsi, 0
  2393                                  .L_lambda_simple_params_loop_0003:	; copy params
  2394 000007AB 4883FE00                	cmp rsi, 0
  2395 000007AF 740E                    	je .L_lambda_simple_params_end_0003
  2396 000007B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2397 000007B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2398 000007BA 48FFC6                  	inc rsi
  2399 000007BD EBEC                    	jmp .L_lambda_simple_params_loop_0003
  2400                                  .L_lambda_simple_params_end_0003:
  2401 000007BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2402 000007C2 4889C3                  	mov rbx, rax
  2403 000007C5 58                      	pop rax
  2404 000007C6 C60004                  	mov byte [rax], T_closure
  2405 000007C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2406 000007CD 48C74009[DA070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  2407 000007D5 E9A4000000              	jmp .L_lambda_simple_end_0003
  2408                                  .L_lambda_simple_code_0003:	; lambda-simple body
  2409 000007DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2410 000007E0 740B                    	je .L_lambda_simple_arity_check_ok_0003
  2411 000007E2 FF742410                	push qword [rsp + 8 * 2]
  2412 000007E6 6A01                    	push 1
  2413 000007E8 E982520100              	jmp L_error_incorrect_arity_simple
  2414                                  .L_lambda_simple_arity_check_ok_0003:
  2415 000007ED C8000000                	enter 0, 0
  2416                                  	; preparing a tail-call
  2417                                  	; preparing a non-tail-call
  2418 000007F1 488B4520                	mov rax, PARAM(0)	; param x
  2419 000007F5 50                      	push rax
  2420 000007F6 6A01                    	push 1	; arg count
  2421 000007F8 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2422 00000800 803805                  	cmp byte [rax], T_undefined
  2423 00000803 0F8480510100            	je L_error_fvar_undefined
  2424 00000809 803804                  	cmp byte [rax], T_closure
  2425 0000080C 0F85FB510100            	jne L_error_non_closure
  2426 00000812 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2427 00000815 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2428 00000818 50                      	push rax
  2429 00000819 6A01                    	push 1	; arg count
  2430 0000081B 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  2431 00000823 803805                  	cmp byte [rax], T_undefined
  2432 00000826 0F845D510100            	je L_error_fvar_undefined
  2433 0000082C 803804                  	cmp byte [rax], T_closure
  2434 0000082F 0F85D8510100            	jne L_error_non_closure
  2435 00000835 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2436 00000838 FF7508                  	push qword [rbp + 8 * 1]
  2437                                   ; old ret addr
  2438 0000083B FF7500                  	push qword [rbp]
  2439                                   ; restore the old rbp
  2440 0000083E BB01000000              	mov rbx, 1
  2441 00000843 4883C303                	add rbx, 3
  2442 00000847 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2443 0000084B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2444 00000850 4C8D4DF8                	lea r9, [rbp - 8]
  2445 00000854 B905000000              	mov rcx, 5
  2446                                  .L_tc_recycle_frame_loop_0003:
  2447 00000859 4883F900                	cmp rcx, 0
  2448 0000085D 7413                    	je .L_tc_recycle_frame_done_0003
  2449 0000085F 4D8B11                  	mov r10, qword [r9]
  2450 00000862 4D8910                  	mov qword [r8], r10
  2451 00000865 4983E808                	sub r8, 8
  2452 00000869 4983E908                	sub r9, 8
  2453 0000086D 48FFC9                  	dec rcx
  2454 00000870 EBE7                    	jmp .L_tc_recycle_frame_loop_0003
  2455                                  .L_tc_recycle_frame_done_0003:
  2456 00000872 498D6008                	lea rsp, [r8 + 8]
  2457 00000876 5D                      	pop rbp ; restore the old rbp
  2458 00000877 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2459 0000087A C9                      	leave
  2460 0000087B C21800                  	ret AND_KILL_FRAME(1)
  2461                                  .L_lambda_simple_end_0003:	; new closure is in rax
  2462 0000087E 48890425[86110000]      	mov qword [free_var_56], rax
  2463 00000886 48B8-                   	mov rax, sob_void
  2463 00000888 [0000000000000000] 
  2464                                  
  2465 00000890 4889C7                  	mov rdi, rax
  2466 00000893 E873540100              	call print_sexpr_if_not_void
  2467 00000898 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2468 0000089D E814520100              	call malloc
  2469 000008A2 50                      	push rax
  2470 000008A3 BF00000000              	mov rdi, 8 * 0	; new rib
  2471 000008A8 E809520100              	call malloc
  2472 000008AD 50                      	push rax
  2473 000008AE BF08000000              	mov rdi, 8 * 1	; extended env
  2474 000008B3 E8FE510100              	call malloc
  2475 000008B8 488B7D10                	mov rdi, ENV
  2476 000008BC BE00000000              	mov rsi, 0
  2477 000008C1 BA01000000              	mov rdx, 1
  2478                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  2479 000008C6 4883FE00                	cmp rsi, 0
  2480 000008CA 7410                    	je .L_lambda_simple_env_end_0004
  2481 000008CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2482 000008D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2483 000008D4 48FFC6                  	inc rsi
  2484 000008D7 48FFC2                  	inc rdx
  2485 000008DA EBEA                    	jmp .L_lambda_simple_env_loop_0004
  2486                                  .L_lambda_simple_env_end_0004:
  2487 000008DC 5B                      	pop rbx
  2488 000008DD BE00000000              	mov rsi, 0
  2489                                  .L_lambda_simple_params_loop_0004:	; copy params
  2490 000008E2 4883FE00                	cmp rsi, 0
  2491 000008E6 740E                    	je .L_lambda_simple_params_end_0004
  2492 000008E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2493 000008ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2494 000008F1 48FFC6                  	inc rsi
  2495 000008F4 EBEC                    	jmp .L_lambda_simple_params_loop_0004
  2496                                  .L_lambda_simple_params_end_0004:
  2497 000008F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2498 000008F9 4889C3                  	mov rbx, rax
  2499 000008FC 58                      	pop rax
  2500 000008FD C60004                  	mov byte [rax], T_closure
  2501 00000900 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2502 00000904 48C74009[11090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  2503 0000090C E9A4000000              	jmp .L_lambda_simple_end_0004
  2504                                  .L_lambda_simple_code_0004:	; lambda-simple body
  2505 00000911 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2506 00000917 740B                    	je .L_lambda_simple_arity_check_ok_0004
  2507 00000919 FF742410                	push qword [rsp + 8 * 2]
  2508 0000091D 6A01                    	push 1
  2509 0000091F E94B510100              	jmp L_error_incorrect_arity_simple
  2510                                  .L_lambda_simple_arity_check_ok_0004:
  2511 00000924 C8000000                	enter 0, 0
  2512                                  	; preparing a tail-call
  2513                                  	; preparing a non-tail-call
  2514 00000928 488B4520                	mov rax, PARAM(0)	; param x
  2515 0000092C 50                      	push rax
  2516 0000092D 6A01                    	push 1	; arg count
  2517 0000092F 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  2518 00000937 803805                  	cmp byte [rax], T_undefined
  2519 0000093A 0F8449500100            	je L_error_fvar_undefined
  2520 00000940 803804                  	cmp byte [rax], T_closure
  2521 00000943 0F85C4500100            	jne L_error_non_closure
  2522 00000949 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2523 0000094C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2524 0000094F 50                      	push rax
  2525 00000950 6A01                    	push 1	; arg count
  2526 00000952 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  2527 0000095A 803805                  	cmp byte [rax], T_undefined
  2528 0000095D 0F8426500100            	je L_error_fvar_undefined
  2529 00000963 803804                  	cmp byte [rax], T_closure
  2530 00000966 0F85A1500100            	jne L_error_non_closure
  2531 0000096C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2532 0000096F FF7508                  	push qword [rbp + 8 * 1]
  2533                                   ; old ret addr
  2534 00000972 FF7500                  	push qword [rbp]
  2535                                   ; restore the old rbp
  2536 00000975 BB01000000              	mov rbx, 1
  2537 0000097A 4883C303                	add rbx, 3
  2538 0000097E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2539 00000982 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2540 00000987 4C8D4DF8                	lea r9, [rbp - 8]
  2541 0000098B B905000000              	mov rcx, 5
  2542                                  .L_tc_recycle_frame_loop_0004:
  2543 00000990 4883F900                	cmp rcx, 0
  2544 00000994 7413                    	je .L_tc_recycle_frame_done_0004
  2545 00000996 4D8B11                  	mov r10, qword [r9]
  2546 00000999 4D8910                  	mov qword [r8], r10
  2547 0000099C 4983E808                	sub r8, 8
  2548 000009A0 4983E908                	sub r9, 8
  2549 000009A4 48FFC9                  	dec rcx
  2550 000009A7 EBE7                    	jmp .L_tc_recycle_frame_loop_0004
  2551                                  .L_tc_recycle_frame_done_0004:
  2552 000009A9 498D6008                	lea rsp, [r8 + 8]
  2553 000009AD 5D                      	pop rbp ; restore the old rbp
  2554 000009AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2555 000009B1 C9                      	leave
  2556 000009B2 C21800                  	ret AND_KILL_FRAME(1)
  2557                                  .L_lambda_simple_end_0004:	; new closure is in rax
  2558 000009B5 48890425[FD110000]      	mov qword [free_var_63], rax
  2559 000009BD 48B8-                   	mov rax, sob_void
  2559 000009BF [0000000000000000] 
  2560                                  
  2561 000009C7 4889C7                  	mov rdi, rax
  2562 000009CA E83C530100              	call print_sexpr_if_not_void
  2563 000009CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2564 000009D4 E8DD500100              	call malloc
  2565 000009D9 50                      	push rax
  2566 000009DA BF00000000              	mov rdi, 8 * 0	; new rib
  2567 000009DF E8D2500100              	call malloc
  2568 000009E4 50                      	push rax
  2569 000009E5 BF08000000              	mov rdi, 8 * 1	; extended env
  2570 000009EA E8C7500100              	call malloc
  2571 000009EF 488B7D10                	mov rdi, ENV
  2572 000009F3 BE00000000              	mov rsi, 0
  2573 000009F8 BA01000000              	mov rdx, 1
  2574                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  2575 000009FD 4883FE00                	cmp rsi, 0
  2576 00000A01 7410                    	je .L_lambda_simple_env_end_0005
  2577 00000A03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2578 00000A07 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2579 00000A0B 48FFC6                  	inc rsi
  2580 00000A0E 48FFC2                  	inc rdx
  2581 00000A11 EBEA                    	jmp .L_lambda_simple_env_loop_0005
  2582                                  .L_lambda_simple_env_end_0005:
  2583 00000A13 5B                      	pop rbx
  2584 00000A14 BE00000000              	mov rsi, 0
  2585                                  .L_lambda_simple_params_loop_0005:	; copy params
  2586 00000A19 4883FE00                	cmp rsi, 0
  2587 00000A1D 740E                    	je .L_lambda_simple_params_end_0005
  2588 00000A1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2589 00000A24 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2590 00000A28 48FFC6                  	inc rsi
  2591 00000A2B EBEC                    	jmp .L_lambda_simple_params_loop_0005
  2592                                  .L_lambda_simple_params_end_0005:
  2593 00000A2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2594 00000A30 4889C3                  	mov rbx, rax
  2595 00000A33 58                      	pop rax
  2596 00000A34 C60004                  	mov byte [rax], T_closure
  2597 00000A37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2598 00000A3B 48C74009[480A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2599 00000A43 E9A4000000              	jmp .L_lambda_simple_end_0005
  2600                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2601 00000A48 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2602 00000A4E 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2603 00000A50 FF742410                	push qword [rsp + 8 * 2]
  2604 00000A54 6A01                    	push 1
  2605 00000A56 E914500100              	jmp L_error_incorrect_arity_simple
  2606                                  .L_lambda_simple_arity_check_ok_0005:
  2607 00000A5B C8000000                	enter 0, 0
  2608                                  	; preparing a tail-call
  2609                                  	; preparing a non-tail-call
  2610 00000A5F 488B4520                	mov rax, PARAM(0)	; param x
  2611 00000A63 50                      	push rax
  2612 00000A64 6A01                    	push 1	; arg count
  2613 00000A66 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  2614 00000A6E 803805                  	cmp byte [rax], T_undefined
  2615 00000A71 0F84124F0100            	je L_error_fvar_undefined
  2616 00000A77 803804                  	cmp byte [rax], T_closure
  2617 00000A7A 0F858D4F0100            	jne L_error_non_closure
  2618 00000A80 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2619 00000A83 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2620 00000A86 50                      	push rax
  2621 00000A87 6A01                    	push 1	; arg count
  2622 00000A89 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2623 00000A91 803805                  	cmp byte [rax], T_undefined
  2624 00000A94 0F84EF4E0100            	je L_error_fvar_undefined
  2625 00000A9A 803804                  	cmp byte [rax], T_closure
  2626 00000A9D 0F856A4F0100            	jne L_error_non_closure
  2627 00000AA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2628 00000AA6 FF7508                  	push qword [rbp + 8 * 1]
  2629                                   ; old ret addr
  2630 00000AA9 FF7500                  	push qword [rbp]
  2631                                   ; restore the old rbp
  2632 00000AAC BB01000000              	mov rbx, 1
  2633 00000AB1 4883C303                	add rbx, 3
  2634 00000AB5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2635 00000AB9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2636 00000ABE 4C8D4DF8                	lea r9, [rbp - 8]
  2637 00000AC2 B905000000              	mov rcx, 5
  2638                                  .L_tc_recycle_frame_loop_0005:
  2639 00000AC7 4883F900                	cmp rcx, 0
  2640 00000ACB 7413                    	je .L_tc_recycle_frame_done_0005
  2641 00000ACD 4D8B11                  	mov r10, qword [r9]
  2642 00000AD0 4D8910                  	mov qword [r8], r10
  2643 00000AD3 4983E808                	sub r8, 8
  2644 00000AD7 4983E908                	sub r9, 8
  2645 00000ADB 48FFC9                  	dec rcx
  2646 00000ADE EBE7                    	jmp .L_tc_recycle_frame_loop_0005
  2647                                  .L_tc_recycle_frame_done_0005:
  2648 00000AE0 498D6008                	lea rsp, [r8 + 8]
  2649 00000AE4 5D                      	pop rbp ; restore the old rbp
  2650 00000AE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2651 00000AE8 C9                      	leave
  2652 00000AE9 C21800                  	ret AND_KILL_FRAME(1)
  2653                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2654 00000AEC 48890425[43100000]      	mov qword [free_var_37], rax
  2655 00000AF4 48B8-                   	mov rax, sob_void
  2655 00000AF6 [0000000000000000] 
  2656                                  
  2657 00000AFE 4889C7                  	mov rdi, rax
  2658 00000B01 E805520100              	call print_sexpr_if_not_void
  2659 00000B06 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2660 00000B0B E8A64F0100              	call malloc
  2661 00000B10 50                      	push rax
  2662 00000B11 BF00000000              	mov rdi, 8 * 0	; new rib
  2663 00000B16 E89B4F0100              	call malloc
  2664 00000B1B 50                      	push rax
  2665 00000B1C BF08000000              	mov rdi, 8 * 1	; extended env
  2666 00000B21 E8904F0100              	call malloc
  2667 00000B26 488B7D10                	mov rdi, ENV
  2668 00000B2A BE00000000              	mov rsi, 0
  2669 00000B2F BA01000000              	mov rdx, 1
  2670                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2671 00000B34 4883FE00                	cmp rsi, 0
  2672 00000B38 7410                    	je .L_lambda_simple_env_end_0006
  2673 00000B3A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2674 00000B3E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2675 00000B42 48FFC6                  	inc rsi
  2676 00000B45 48FFC2                  	inc rdx
  2677 00000B48 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2678                                  .L_lambda_simple_env_end_0006:
  2679 00000B4A 5B                      	pop rbx
  2680 00000B4B BE00000000              	mov rsi, 0
  2681                                  .L_lambda_simple_params_loop_0006:	; copy params
  2682 00000B50 4883FE00                	cmp rsi, 0
  2683 00000B54 740E                    	je .L_lambda_simple_params_end_0006
  2684 00000B56 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2685 00000B5B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2686 00000B5F 48FFC6                  	inc rsi
  2687 00000B62 EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2688                                  .L_lambda_simple_params_end_0006:
  2689 00000B64 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2690 00000B67 4889C3                  	mov rbx, rax
  2691 00000B6A 58                      	pop rax
  2692 00000B6B C60004                  	mov byte [rax], T_closure
  2693 00000B6E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2694 00000B72 48C74009[7F0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2695 00000B7A E9A4000000              	jmp .L_lambda_simple_end_0006
  2696                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2697 00000B7F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2698 00000B85 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2699 00000B87 FF742410                	push qword [rsp + 8 * 2]
  2700 00000B8B 6A01                    	push 1
  2701 00000B8D E9DD4E0100              	jmp L_error_incorrect_arity_simple
  2702                                  .L_lambda_simple_arity_check_ok_0006:
  2703 00000B92 C8000000                	enter 0, 0
  2704                                  	; preparing a tail-call
  2705                                  	; preparing a non-tail-call
  2706 00000B96 488B4520                	mov rax, PARAM(0)	; param x
  2707 00000B9A 50                      	push rax
  2708 00000B9B 6A01                    	push 1	; arg count
  2709 00000B9D 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  2710 00000BA5 803805                  	cmp byte [rax], T_undefined
  2711 00000BA8 0F84DB4D0100            	je L_error_fvar_undefined
  2712 00000BAE 803804                  	cmp byte [rax], T_closure
  2713 00000BB1 0F85564E0100            	jne L_error_non_closure
  2714 00000BB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2715 00000BBA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2716 00000BBD 50                      	push rax
  2717 00000BBE 6A01                    	push 1	; arg count
  2718 00000BC0 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2719 00000BC8 803805                  	cmp byte [rax], T_undefined
  2720 00000BCB 0F84B84D0100            	je L_error_fvar_undefined
  2721 00000BD1 803804                  	cmp byte [rax], T_closure
  2722 00000BD4 0F85334E0100            	jne L_error_non_closure
  2723 00000BDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2724 00000BDD FF7508                  	push qword [rbp + 8 * 1]
  2725                                   ; old ret addr
  2726 00000BE0 FF7500                  	push qword [rbp]
  2727                                   ; restore the old rbp
  2728 00000BE3 BB01000000              	mov rbx, 1
  2729 00000BE8 4883C303                	add rbx, 3
  2730 00000BEC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2731 00000BF0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2732 00000BF5 4C8D4DF8                	lea r9, [rbp - 8]
  2733 00000BF9 B905000000              	mov rcx, 5
  2734                                  .L_tc_recycle_frame_loop_0006:
  2735 00000BFE 4883F900                	cmp rcx, 0
  2736 00000C02 7413                    	je .L_tc_recycle_frame_done_0006
  2737 00000C04 4D8B11                  	mov r10, qword [r9]
  2738 00000C07 4D8910                  	mov qword [r8], r10
  2739 00000C0A 4983E808                	sub r8, 8
  2740 00000C0E 4983E908                	sub r9, 8
  2741 00000C12 48FFC9                  	dec rcx
  2742 00000C15 EBE7                    	jmp .L_tc_recycle_frame_loop_0006
  2743                                  .L_tc_recycle_frame_done_0006:
  2744 00000C17 498D6008                	lea rsp, [r8 + 8]
  2745 00000C1B 5D                      	pop rbp ; restore the old rbp
  2746 00000C1C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2747 00000C1F C9                      	leave
  2748 00000C20 C21800                  	ret AND_KILL_FRAME(1)
  2749                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2750 00000C23 48890425[76100000]      	mov qword [free_var_40], rax
  2751 00000C2B 48B8-                   	mov rax, sob_void
  2751 00000C2D [0000000000000000] 
  2752                                  
  2753 00000C35 4889C7                  	mov rdi, rax
  2754 00000C38 E8CE500100              	call print_sexpr_if_not_void
  2755 00000C3D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2756 00000C42 E86F4E0100              	call malloc
  2757 00000C47 50                      	push rax
  2758 00000C48 BF00000000              	mov rdi, 8 * 0	; new rib
  2759 00000C4D E8644E0100              	call malloc
  2760 00000C52 50                      	push rax
  2761 00000C53 BF08000000              	mov rdi, 8 * 1	; extended env
  2762 00000C58 E8594E0100              	call malloc
  2763 00000C5D 488B7D10                	mov rdi, ENV
  2764 00000C61 BE00000000              	mov rsi, 0
  2765 00000C66 BA01000000              	mov rdx, 1
  2766                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2767 00000C6B 4883FE00                	cmp rsi, 0
  2768 00000C6F 7410                    	je .L_lambda_simple_env_end_0007
  2769 00000C71 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2770 00000C75 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2771 00000C79 48FFC6                  	inc rsi
  2772 00000C7C 48FFC2                  	inc rdx
  2773 00000C7F EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2774                                  .L_lambda_simple_env_end_0007:
  2775 00000C81 5B                      	pop rbx
  2776 00000C82 BE00000000              	mov rsi, 0
  2777                                  .L_lambda_simple_params_loop_0007:	; copy params
  2778 00000C87 4883FE00                	cmp rsi, 0
  2779 00000C8B 740E                    	je .L_lambda_simple_params_end_0007
  2780 00000C8D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2781 00000C92 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2782 00000C96 48FFC6                  	inc rsi
  2783 00000C99 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2784                                  .L_lambda_simple_params_end_0007:
  2785 00000C9B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2786 00000C9E 4889C3                  	mov rbx, rax
  2787 00000CA1 58                      	pop rax
  2788 00000CA2 C60004                  	mov byte [rax], T_closure
  2789 00000CA5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2790 00000CA9 48C74009[B60C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2791 00000CB1 E9A4000000              	jmp .L_lambda_simple_end_0007
  2792                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2793 00000CB6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2794 00000CBC 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2795 00000CBE FF742410                	push qword [rsp + 8 * 2]
  2796 00000CC2 6A01                    	push 1
  2797 00000CC4 E9A64D0100              	jmp L_error_incorrect_arity_simple
  2798                                  .L_lambda_simple_arity_check_ok_0007:
  2799 00000CC9 C8000000                	enter 0, 0
  2800                                  	; preparing a tail-call
  2801                                  	; preparing a non-tail-call
  2802 00000CCD 488B4520                	mov rax, PARAM(0)	; param x
  2803 00000CD1 50                      	push rax
  2804 00000CD2 6A01                    	push 1	; arg count
  2805 00000CD4 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  2806 00000CDC 803805                  	cmp byte [rax], T_undefined
  2807 00000CDF 0F84A44C0100            	je L_error_fvar_undefined
  2808 00000CE5 803804                  	cmp byte [rax], T_closure
  2809 00000CE8 0F851F4D0100            	jne L_error_non_closure
  2810 00000CEE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2811 00000CF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2812 00000CF4 50                      	push rax
  2813 00000CF5 6A01                    	push 1	; arg count
  2814 00000CF7 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2815 00000CFF 803805                  	cmp byte [rax], T_undefined
  2816 00000D02 0F84814C0100            	je L_error_fvar_undefined
  2817 00000D08 803804                  	cmp byte [rax], T_closure
  2818 00000D0B 0F85FC4C0100            	jne L_error_non_closure
  2819 00000D11 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2820 00000D14 FF7508                  	push qword [rbp + 8 * 1]
  2821                                   ; old ret addr
  2822 00000D17 FF7500                  	push qword [rbp]
  2823                                   ; restore the old rbp
  2824 00000D1A BB01000000              	mov rbx, 1
  2825 00000D1F 4883C303                	add rbx, 3
  2826 00000D23 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2827 00000D27 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2828 00000D2C 4C8D4DF8                	lea r9, [rbp - 8]
  2829 00000D30 B905000000              	mov rcx, 5
  2830                                  .L_tc_recycle_frame_loop_0007:
  2831 00000D35 4883F900                	cmp rcx, 0
  2832 00000D39 7413                    	je .L_tc_recycle_frame_done_0007
  2833 00000D3B 4D8B11                  	mov r10, qword [r9]
  2834 00000D3E 4D8910                  	mov qword [r8], r10
  2835 00000D41 4983E808                	sub r8, 8
  2836 00000D45 4983E908                	sub r9, 8
  2837 00000D49 48FFC9                  	dec rcx
  2838 00000D4C EBE7                    	jmp .L_tc_recycle_frame_loop_0007
  2839                                  .L_tc_recycle_frame_done_0007:
  2840 00000D4E 498D6008                	lea rsp, [r8 + 8]
  2841 00000D52 5D                      	pop rbp ; restore the old rbp
  2842 00000D53 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2843 00000D56 C9                      	leave
  2844 00000D57 C21800                  	ret AND_KILL_FRAME(1)
  2845                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2846 00000D5A 48890425[BA100000]      	mov qword [free_var_44], rax
  2847 00000D62 48B8-                   	mov rax, sob_void
  2847 00000D64 [0000000000000000] 
  2848                                  
  2849 00000D6C 4889C7                  	mov rdi, rax
  2850 00000D6F E8974F0100              	call print_sexpr_if_not_void
  2851 00000D74 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2852 00000D79 E8384D0100              	call malloc
  2853 00000D7E 50                      	push rax
  2854 00000D7F BF00000000              	mov rdi, 8 * 0	; new rib
  2855 00000D84 E82D4D0100              	call malloc
  2856 00000D89 50                      	push rax
  2857 00000D8A BF08000000              	mov rdi, 8 * 1	; extended env
  2858 00000D8F E8224D0100              	call malloc
  2859 00000D94 488B7D10                	mov rdi, ENV
  2860 00000D98 BE00000000              	mov rsi, 0
  2861 00000D9D BA01000000              	mov rdx, 1
  2862                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2863 00000DA2 4883FE00                	cmp rsi, 0
  2864 00000DA6 7410                    	je .L_lambda_simple_env_end_0008
  2865 00000DA8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2866 00000DAC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2867 00000DB0 48FFC6                  	inc rsi
  2868 00000DB3 48FFC2                  	inc rdx
  2869 00000DB6 EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2870                                  .L_lambda_simple_env_end_0008:
  2871 00000DB8 5B                      	pop rbx
  2872 00000DB9 BE00000000              	mov rsi, 0
  2873                                  .L_lambda_simple_params_loop_0008:	; copy params
  2874 00000DBE 4883FE00                	cmp rsi, 0
  2875 00000DC2 740E                    	je .L_lambda_simple_params_end_0008
  2876 00000DC4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2877 00000DC9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2878 00000DCD 48FFC6                  	inc rsi
  2879 00000DD0 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2880                                  .L_lambda_simple_params_end_0008:
  2881 00000DD2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2882 00000DD5 4889C3                  	mov rbx, rax
  2883 00000DD8 58                      	pop rax
  2884 00000DD9 C60004                  	mov byte [rax], T_closure
  2885 00000DDC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2886 00000DE0 48C74009[ED0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2887 00000DE8 E9A4000000              	jmp .L_lambda_simple_end_0008
  2888                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2889 00000DED 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2890 00000DF3 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2891 00000DF5 FF742410                	push qword [rsp + 8 * 2]
  2892 00000DF9 6A01                    	push 1
  2893 00000DFB E96F4C0100              	jmp L_error_incorrect_arity_simple
  2894                                  .L_lambda_simple_arity_check_ok_0008:
  2895 00000E00 C8000000                	enter 0, 0
  2896                                  	; preparing a tail-call
  2897                                  	; preparing a non-tail-call
  2898 00000E04 488B4520                	mov rax, PARAM(0)	; param x
  2899 00000E08 50                      	push rax
  2900 00000E09 6A01                    	push 1	; arg count
  2901 00000E0B 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  2902 00000E13 803805                  	cmp byte [rax], T_undefined
  2903 00000E16 0F846D4B0100            	je L_error_fvar_undefined
  2904 00000E1C 803804                  	cmp byte [rax], T_closure
  2905 00000E1F 0F85E84B0100            	jne L_error_non_closure
  2906 00000E25 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2907 00000E28 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2908 00000E2B 50                      	push rax
  2909 00000E2C 6A01                    	push 1	; arg count
  2910 00000E2E 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  2911 00000E36 803805                  	cmp byte [rax], T_undefined
  2912 00000E39 0F844A4B0100            	je L_error_fvar_undefined
  2913 00000E3F 803804                  	cmp byte [rax], T_closure
  2914 00000E42 0F85C54B0100            	jne L_error_non_closure
  2915 00000E48 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2916 00000E4B FF7508                  	push qword [rbp + 8 * 1]
  2917                                   ; old ret addr
  2918 00000E4E FF7500                  	push qword [rbp]
  2919                                   ; restore the old rbp
  2920 00000E51 BB01000000              	mov rbx, 1
  2921 00000E56 4883C303                	add rbx, 3
  2922 00000E5A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  2923 00000E5E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  2924 00000E63 4C8D4DF8                	lea r9, [rbp - 8]
  2925 00000E67 B905000000              	mov rcx, 5
  2926                                  .L_tc_recycle_frame_loop_0008:
  2927 00000E6C 4883F900                	cmp rcx, 0
  2928 00000E70 7413                    	je .L_tc_recycle_frame_done_0008
  2929 00000E72 4D8B11                  	mov r10, qword [r9]
  2930 00000E75 4D8910                  	mov qword [r8], r10
  2931 00000E78 4983E808                	sub r8, 8
  2932 00000E7C 4983E908                	sub r9, 8
  2933 00000E80 48FFC9                  	dec rcx
  2934 00000E83 EBE7                    	jmp .L_tc_recycle_frame_loop_0008
  2935                                  .L_tc_recycle_frame_done_0008:
  2936 00000E85 498D6008                	lea rsp, [r8 + 8]
  2937 00000E89 5D                      	pop rbp ; restore the old rbp
  2938 00000E8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2939 00000E8D C9                      	leave
  2940 00000E8E C21800                  	ret AND_KILL_FRAME(1)
  2941                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2942 00000E91 48890425[ED100000]      	mov qword [free_var_47], rax
  2943 00000E99 48B8-                   	mov rax, sob_void
  2943 00000E9B [0000000000000000] 
  2944                                  
  2945 00000EA3 4889C7                  	mov rdi, rax
  2946 00000EA6 E8604E0100              	call print_sexpr_if_not_void
  2947 00000EAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2948 00000EB0 E8014C0100              	call malloc
  2949 00000EB5 50                      	push rax
  2950 00000EB6 BF00000000              	mov rdi, 8 * 0	; new rib
  2951 00000EBB E8F64B0100              	call malloc
  2952 00000EC0 50                      	push rax
  2953 00000EC1 BF08000000              	mov rdi, 8 * 1	; extended env
  2954 00000EC6 E8EB4B0100              	call malloc
  2955 00000ECB 488B7D10                	mov rdi, ENV
  2956 00000ECF BE00000000              	mov rsi, 0
  2957 00000ED4 BA01000000              	mov rdx, 1
  2958                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2959 00000ED9 4883FE00                	cmp rsi, 0
  2960 00000EDD 7410                    	je .L_lambda_simple_env_end_0009
  2961 00000EDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2962 00000EE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2963 00000EE7 48FFC6                  	inc rsi
  2964 00000EEA 48FFC2                  	inc rdx
  2965 00000EED EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2966                                  .L_lambda_simple_env_end_0009:
  2967 00000EEF 5B                      	pop rbx
  2968 00000EF0 BE00000000              	mov rsi, 0
  2969                                  .L_lambda_simple_params_loop_0009:	; copy params
  2970 00000EF5 4883FE00                	cmp rsi, 0
  2971 00000EF9 740E                    	je .L_lambda_simple_params_end_0009
  2972 00000EFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2973 00000F00 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2974 00000F04 48FFC6                  	inc rsi
  2975 00000F07 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2976                                  .L_lambda_simple_params_end_0009:
  2977 00000F09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2978 00000F0C 4889C3                  	mov rbx, rax
  2979 00000F0F 58                      	pop rax
  2980 00000F10 C60004                  	mov byte [rax], T_closure
  2981 00000F13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2982 00000F17 48C74009[240F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2983 00000F1F E9A4000000              	jmp .L_lambda_simple_end_0009
  2984                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2985 00000F24 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2986 00000F2A 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2987 00000F2C FF742410                	push qword [rsp + 8 * 2]
  2988 00000F30 6A01                    	push 1
  2989 00000F32 E9384B0100              	jmp L_error_incorrect_arity_simple
  2990                                  .L_lambda_simple_arity_check_ok_0009:
  2991 00000F37 C8000000                	enter 0, 0
  2992                                  	; preparing a tail-call
  2993                                  	; preparing a non-tail-call
  2994 00000F3B 488B4520                	mov rax, PARAM(0)	; param x
  2995 00000F3F 50                      	push rax
  2996 00000F40 6A01                    	push 1	; arg count
  2997 00000F42 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  2998 00000F4A 803805                  	cmp byte [rax], T_undefined
  2999 00000F4D 0F84364A0100            	je L_error_fvar_undefined
  3000 00000F53 803804                  	cmp byte [rax], T_closure
  3001 00000F56 0F85B14A0100            	jne L_error_non_closure
  3002 00000F5C FF7001                  	push SOB_CLOSURE_ENV(rax)
  3003 00000F5F FF5009                  	call SOB_CLOSURE_CODE(rax)
  3004 00000F62 50                      	push rax
  3005 00000F63 6A01                    	push 1	; arg count
  3006 00000F65 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  3007 00000F6D 803805                  	cmp byte [rax], T_undefined
  3008 00000F70 0F84134A0100            	je L_error_fvar_undefined
  3009 00000F76 803804                  	cmp byte [rax], T_closure
  3010 00000F79 0F858E4A0100            	jne L_error_non_closure
  3011 00000F7F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3012 00000F82 FF7508                  	push qword [rbp + 8 * 1]
  3013                                   ; old ret addr
  3014 00000F85 FF7500                  	push qword [rbp]
  3015                                   ; restore the old rbp
  3016 00000F88 BB01000000              	mov rbx, 1
  3017 00000F8D 4883C303                	add rbx, 3
  3018 00000F91 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3019 00000F95 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3020 00000F9A 4C8D4DF8                	lea r9, [rbp - 8]
  3021 00000F9E B905000000              	mov rcx, 5
  3022                                  .L_tc_recycle_frame_loop_0009:
  3023 00000FA3 4883F900                	cmp rcx, 0
  3024 00000FA7 7413                    	je .L_tc_recycle_frame_done_0009
  3025 00000FA9 4D8B11                  	mov r10, qword [r9]
  3026 00000FAC 4D8910                  	mov qword [r8], r10
  3027 00000FAF 4983E808                	sub r8, 8
  3028 00000FB3 4983E908                	sub r9, 8
  3029 00000FB7 48FFC9                  	dec rcx
  3030 00000FBA EBE7                    	jmp .L_tc_recycle_frame_loop_0009
  3031                                  .L_tc_recycle_frame_done_0009:
  3032 00000FBC 498D6008                	lea rsp, [r8 + 8]
  3033 00000FC0 5D                      	pop rbp ; restore the old rbp
  3034 00000FC1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3035 00000FC4 C9                      	leave
  3036 00000FC5 C21800                  	ret AND_KILL_FRAME(1)
  3037                                  .L_lambda_simple_end_0009:	; new closure is in rax
  3038 00000FC8 48890425[42110000]      	mov qword [free_var_52], rax
  3039 00000FD0 48B8-                   	mov rax, sob_void
  3039 00000FD2 [0000000000000000] 
  3040                                  
  3041 00000FDA 4889C7                  	mov rdi, rax
  3042 00000FDD E8294D0100              	call print_sexpr_if_not_void
  3043 00000FE2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3044 00000FE7 E8CA4A0100              	call malloc
  3045 00000FEC 50                      	push rax
  3046 00000FED BF00000000              	mov rdi, 8 * 0	; new rib
  3047 00000FF2 E8BF4A0100              	call malloc
  3048 00000FF7 50                      	push rax
  3049 00000FF8 BF08000000              	mov rdi, 8 * 1	; extended env
  3050 00000FFD E8B44A0100              	call malloc
  3051 00001002 488B7D10                	mov rdi, ENV
  3052 00001006 BE00000000              	mov rsi, 0
  3053 0000100B BA01000000              	mov rdx, 1
  3054                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  3055 00001010 4883FE00                	cmp rsi, 0
  3056 00001014 7410                    	je .L_lambda_simple_env_end_000a
  3057 00001016 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3058 0000101A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3059 0000101E 48FFC6                  	inc rsi
  3060 00001021 48FFC2                  	inc rdx
  3061 00001024 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  3062                                  .L_lambda_simple_env_end_000a:
  3063 00001026 5B                      	pop rbx
  3064 00001027 BE00000000              	mov rsi, 0
  3065                                  .L_lambda_simple_params_loop_000a:	; copy params
  3066 0000102C 4883FE00                	cmp rsi, 0
  3067 00001030 740E                    	je .L_lambda_simple_params_end_000a
  3068 00001032 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3069 00001037 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3070 0000103B 48FFC6                  	inc rsi
  3071 0000103E EBEC                    	jmp .L_lambda_simple_params_loop_000a
  3072                                  .L_lambda_simple_params_end_000a:
  3073 00001040 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3074 00001043 4889C3                  	mov rbx, rax
  3075 00001046 58                      	pop rax
  3076 00001047 C60004                  	mov byte [rax], T_closure
  3077 0000104A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3078 0000104E 48C74009[5B100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  3079 00001056 E9A4000000              	jmp .L_lambda_simple_end_000a
  3080                                  .L_lambda_simple_code_000a:	; lambda-simple body
  3081 0000105B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3082 00001061 740B                    	je .L_lambda_simple_arity_check_ok_000a
  3083 00001063 FF742410                	push qword [rsp + 8 * 2]
  3084 00001067 6A01                    	push 1
  3085 00001069 E9014A0100              	jmp L_error_incorrect_arity_simple
  3086                                  .L_lambda_simple_arity_check_ok_000a:
  3087 0000106E C8000000                	enter 0, 0
  3088                                  	; preparing a tail-call
  3089                                  	; preparing a non-tail-call
  3090 00001072 488B4520                	mov rax, PARAM(0)	; param x
  3091 00001076 50                      	push rax
  3092 00001077 6A01                    	push 1	; arg count
  3093 00001079 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  3094 00001081 803805                  	cmp byte [rax], T_undefined
  3095 00001084 0F84FF480100            	je L_error_fvar_undefined
  3096 0000108A 803804                  	cmp byte [rax], T_closure
  3097 0000108D 0F857A490100            	jne L_error_non_closure
  3098 00001093 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3099 00001096 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3100 00001099 50                      	push rax
  3101 0000109A 6A01                    	push 1	; arg count
  3102 0000109C 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  3103 000010A4 803805                  	cmp byte [rax], T_undefined
  3104 000010A7 0F84DC480100            	je L_error_fvar_undefined
  3105 000010AD 803804                  	cmp byte [rax], T_closure
  3106 000010B0 0F8557490100            	jne L_error_non_closure
  3107 000010B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3108 000010B9 FF7508                  	push qword [rbp + 8 * 1]
  3109                                   ; old ret addr
  3110 000010BC FF7500                  	push qword [rbp]
  3111                                   ; restore the old rbp
  3112 000010BF BB01000000              	mov rbx, 1
  3113 000010C4 4883C303                	add rbx, 3
  3114 000010C8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3115 000010CC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3116 000010D1 4C8D4DF8                	lea r9, [rbp - 8]
  3117 000010D5 B905000000              	mov rcx, 5
  3118                                  .L_tc_recycle_frame_loop_000a:
  3119 000010DA 4883F900                	cmp rcx, 0
  3120 000010DE 7413                    	je .L_tc_recycle_frame_done_000a
  3121 000010E0 4D8B11                  	mov r10, qword [r9]
  3122 000010E3 4D8910                  	mov qword [r8], r10
  3123 000010E6 4983E808                	sub r8, 8
  3124 000010EA 4983E908                	sub r9, 8
  3125 000010EE 48FFC9                  	dec rcx
  3126 000010F1 EBE7                    	jmp .L_tc_recycle_frame_loop_000a
  3127                                  .L_tc_recycle_frame_done_000a:
  3128 000010F3 498D6008                	lea rsp, [r8 + 8]
  3129 000010F7 5D                      	pop rbp ; restore the old rbp
  3130 000010F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3131 000010FB C9                      	leave
  3132 000010FC C21800                  	ret AND_KILL_FRAME(1)
  3133                                  .L_lambda_simple_end_000a:	; new closure is in rax
  3134 000010FF 48890425[75110000]      	mov qword [free_var_55], rax
  3135 00001107 48B8-                   	mov rax, sob_void
  3135 00001109 [0000000000000000] 
  3136                                  
  3137 00001111 4889C7                  	mov rdi, rax
  3138 00001114 E8F24B0100              	call print_sexpr_if_not_void
  3139 00001119 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3140 0000111E E893490100              	call malloc
  3141 00001123 50                      	push rax
  3142 00001124 BF00000000              	mov rdi, 8 * 0	; new rib
  3143 00001129 E888490100              	call malloc
  3144 0000112E 50                      	push rax
  3145 0000112F BF08000000              	mov rdi, 8 * 1	; extended env
  3146 00001134 E87D490100              	call malloc
  3147 00001139 488B7D10                	mov rdi, ENV
  3148 0000113D BE00000000              	mov rsi, 0
  3149 00001142 BA01000000              	mov rdx, 1
  3150                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  3151 00001147 4883FE00                	cmp rsi, 0
  3152 0000114B 7410                    	je .L_lambda_simple_env_end_000b
  3153 0000114D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3154 00001151 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3155 00001155 48FFC6                  	inc rsi
  3156 00001158 48FFC2                  	inc rdx
  3157 0000115B EBEA                    	jmp .L_lambda_simple_env_loop_000b
  3158                                  .L_lambda_simple_env_end_000b:
  3159 0000115D 5B                      	pop rbx
  3160 0000115E BE00000000              	mov rsi, 0
  3161                                  .L_lambda_simple_params_loop_000b:	; copy params
  3162 00001163 4883FE00                	cmp rsi, 0
  3163 00001167 740E                    	je .L_lambda_simple_params_end_000b
  3164 00001169 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3165 0000116E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3166 00001172 48FFC6                  	inc rsi
  3167 00001175 EBEC                    	jmp .L_lambda_simple_params_loop_000b
  3168                                  .L_lambda_simple_params_end_000b:
  3169 00001177 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3170 0000117A 4889C3                  	mov rbx, rax
  3171 0000117D 58                      	pop rax
  3172 0000117E C60004                  	mov byte [rax], T_closure
  3173 00001181 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3174 00001185 48C74009[92110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  3175 0000118D E9A4000000              	jmp .L_lambda_simple_end_000b
  3176                                  .L_lambda_simple_code_000b:	; lambda-simple body
  3177 00001192 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3178 00001198 740B                    	je .L_lambda_simple_arity_check_ok_000b
  3179 0000119A FF742410                	push qword [rsp + 8 * 2]
  3180 0000119E 6A01                    	push 1
  3181 000011A0 E9CA480100              	jmp L_error_incorrect_arity_simple
  3182                                  .L_lambda_simple_arity_check_ok_000b:
  3183 000011A5 C8000000                	enter 0, 0
  3184                                  	; preparing a tail-call
  3185                                  	; preparing a non-tail-call
  3186 000011A9 488B4520                	mov rax, PARAM(0)	; param x
  3187 000011AD 50                      	push rax
  3188 000011AE 6A01                    	push 1	; arg count
  3189 000011B0 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  3190 000011B8 803805                  	cmp byte [rax], T_undefined
  3191 000011BB 0F84C8470100            	je L_error_fvar_undefined
  3192 000011C1 803804                  	cmp byte [rax], T_closure
  3193 000011C4 0F8543480100            	jne L_error_non_closure
  3194 000011CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  3195 000011CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  3196 000011D0 50                      	push rax
  3197 000011D1 6A01                    	push 1	; arg count
  3198 000011D3 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  3199 000011DB 803805                  	cmp byte [rax], T_undefined
  3200 000011DE 0F84A5470100            	je L_error_fvar_undefined
  3201 000011E4 803804                  	cmp byte [rax], T_closure
  3202 000011E7 0F8520480100            	jne L_error_non_closure
  3203 000011ED FF7001                  	push SOB_CLOSURE_ENV(rax)
  3204 000011F0 FF7508                  	push qword [rbp + 8 * 1]
  3205                                   ; old ret addr
  3206 000011F3 FF7500                  	push qword [rbp]
  3207                                   ; restore the old rbp
  3208 000011F6 BB01000000              	mov rbx, 1
  3209 000011FB 4883C303                	add rbx, 3
  3210 000011FF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3211 00001203 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3212 00001208 4C8D4DF8                	lea r9, [rbp - 8]
  3213 0000120C B905000000              	mov rcx, 5
  3214                                  .L_tc_recycle_frame_loop_000b:
  3215 00001211 4883F900                	cmp rcx, 0
  3216 00001215 7413                    	je .L_tc_recycle_frame_done_000b
  3217 00001217 4D8B11                  	mov r10, qword [r9]
  3218 0000121A 4D8910                  	mov qword [r8], r10
  3219 0000121D 4983E808                	sub r8, 8
  3220 00001221 4983E908                	sub r9, 8
  3221 00001225 48FFC9                  	dec rcx
  3222 00001228 EBE7                    	jmp .L_tc_recycle_frame_loop_000b
  3223                                  .L_tc_recycle_frame_done_000b:
  3224 0000122A 498D6008                	lea rsp, [r8 + 8]
  3225 0000122E 5D                      	pop rbp ; restore the old rbp
  3226 0000122F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3227 00001232 C9                      	leave
  3228 00001233 C21800                  	ret AND_KILL_FRAME(1)
  3229                                  .L_lambda_simple_end_000b:	; new closure is in rax
  3230 00001236 48890425[B9110000]      	mov qword [free_var_59], rax
  3231 0000123E 48B8-                   	mov rax, sob_void
  3231 00001240 [0000000000000000] 
  3232                                  
  3233 00001248 4889C7                  	mov rdi, rax
  3234 0000124B E8BB4A0100              	call print_sexpr_if_not_void
  3235 00001250 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3236 00001255 E85C480100              	call malloc
  3237 0000125A 50                      	push rax
  3238 0000125B BF00000000              	mov rdi, 8 * 0	; new rib
  3239 00001260 E851480100              	call malloc
  3240 00001265 50                      	push rax
  3241 00001266 BF08000000              	mov rdi, 8 * 1	; extended env
  3242 0000126B E846480100              	call malloc
  3243 00001270 488B7D10                	mov rdi, ENV
  3244 00001274 BE00000000              	mov rsi, 0
  3245 00001279 BA01000000              	mov rdx, 1
  3246                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  3247 0000127E 4883FE00                	cmp rsi, 0
  3248 00001282 7410                    	je .L_lambda_simple_env_end_000c
  3249 00001284 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3250 00001288 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3251 0000128C 48FFC6                  	inc rsi
  3252 0000128F 48FFC2                  	inc rdx
  3253 00001292 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  3254                                  .L_lambda_simple_env_end_000c:
  3255 00001294 5B                      	pop rbx
  3256 00001295 BE00000000              	mov rsi, 0
  3257                                  .L_lambda_simple_params_loop_000c:	; copy params
  3258 0000129A 4883FE00                	cmp rsi, 0
  3259 0000129E 740E                    	je .L_lambda_simple_params_end_000c
  3260 000012A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3261 000012A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3262 000012A9 48FFC6                  	inc rsi
  3263 000012AC EBEC                    	jmp .L_lambda_simple_params_loop_000c
  3264                                  .L_lambda_simple_params_end_000c:
  3265 000012AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3266 000012B1 4889C3                  	mov rbx, rax
  3267 000012B4 58                      	pop rax
  3268 000012B5 C60004                  	mov byte [rax], T_closure
  3269 000012B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3270 000012BC 48C74009[C9120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  3271 000012C4 E9A4000000              	jmp .L_lambda_simple_end_000c
  3272                                  .L_lambda_simple_code_000c:	; lambda-simple body
  3273 000012C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3274 000012CF 740B                    	je .L_lambda_simple_arity_check_ok_000c
  3275 000012D1 FF742410                	push qword [rsp + 8 * 2]
  3276 000012D5 6A01                    	push 1
  3277 000012D7 E993470100              	jmp L_error_incorrect_arity_simple
  3278                                  .L_lambda_simple_arity_check_ok_000c:
  3279 000012DC C8000000                	enter 0, 0
  3280                                  	; preparing a tail-call
  3281                                  	; preparing a non-tail-call
  3282 000012E0 488B4520                	mov rax, PARAM(0)	; param x
  3283 000012E4 50                      	push rax
  3284 000012E5 6A01                    	push 1	; arg count
  3285 000012E7 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  3286 000012EF 803805                  	cmp byte [rax], T_undefined
  3287 000012F2 0F8491460100            	je L_error_fvar_undefined
  3288 000012F8 803804                  	cmp byte [rax], T_closure
  3289 000012FB 0F850C470100            	jne L_error_non_closure
  3290 00001301 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3291 00001304 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3292 00001307 50                      	push rax
  3293 00001308 6A01                    	push 1	; arg count
  3294 0000130A 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  3295 00001312 803805                  	cmp byte [rax], T_undefined
  3296 00001315 0F846E460100            	je L_error_fvar_undefined
  3297 0000131B 803804                  	cmp byte [rax], T_closure
  3298 0000131E 0F85E9460100            	jne L_error_non_closure
  3299 00001324 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3300 00001327 FF7508                  	push qword [rbp + 8 * 1]
  3301                                   ; old ret addr
  3302 0000132A FF7500                  	push qword [rbp]
  3303                                   ; restore the old rbp
  3304 0000132D BB01000000              	mov rbx, 1
  3305 00001332 4883C303                	add rbx, 3
  3306 00001336 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3307 0000133A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3308 0000133F 4C8D4DF8                	lea r9, [rbp - 8]
  3309 00001343 B905000000              	mov rcx, 5
  3310                                  .L_tc_recycle_frame_loop_000c:
  3311 00001348 4883F900                	cmp rcx, 0
  3312 0000134C 7413                    	je .L_tc_recycle_frame_done_000c
  3313 0000134E 4D8B11                  	mov r10, qword [r9]
  3314 00001351 4D8910                  	mov qword [r8], r10
  3315 00001354 4983E808                	sub r8, 8
  3316 00001358 4983E908                	sub r9, 8
  3317 0000135C 48FFC9                  	dec rcx
  3318 0000135F EBE7                    	jmp .L_tc_recycle_frame_loop_000c
  3319                                  .L_tc_recycle_frame_done_000c:
  3320 00001361 498D6008                	lea rsp, [r8 + 8]
  3321 00001365 5D                      	pop rbp ; restore the old rbp
  3322 00001366 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3323 00001369 C9                      	leave
  3324 0000136A C21800                  	ret AND_KILL_FRAME(1)
  3325                                  .L_lambda_simple_end_000c:	; new closure is in rax
  3326 0000136D 48890425[EC110000]      	mov qword [free_var_62], rax
  3327 00001375 48B8-                   	mov rax, sob_void
  3327 00001377 [0000000000000000] 
  3328                                  
  3329 0000137F 4889C7                  	mov rdi, rax
  3330 00001382 E884490100              	call print_sexpr_if_not_void
  3331 00001387 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3332 0000138C E825470100              	call malloc
  3333 00001391 50                      	push rax
  3334 00001392 BF00000000              	mov rdi, 8 * 0	; new rib
  3335 00001397 E81A470100              	call malloc
  3336 0000139C 50                      	push rax
  3337 0000139D BF08000000              	mov rdi, 8 * 1	; extended env
  3338 000013A2 E80F470100              	call malloc
  3339 000013A7 488B7D10                	mov rdi, ENV
  3340 000013AB BE00000000              	mov rsi, 0
  3341 000013B0 BA01000000              	mov rdx, 1
  3342                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  3343 000013B5 4883FE00                	cmp rsi, 0
  3344 000013B9 7410                    	je .L_lambda_simple_env_end_000d
  3345 000013BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3346 000013BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3347 000013C3 48FFC6                  	inc rsi
  3348 000013C6 48FFC2                  	inc rdx
  3349 000013C9 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  3350                                  .L_lambda_simple_env_end_000d:
  3351 000013CB 5B                      	pop rbx
  3352 000013CC BE00000000              	mov rsi, 0
  3353                                  .L_lambda_simple_params_loop_000d:	; copy params
  3354 000013D1 4883FE00                	cmp rsi, 0
  3355 000013D5 740E                    	je .L_lambda_simple_params_end_000d
  3356 000013D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3357 000013DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3358 000013E0 48FFC6                  	inc rsi
  3359 000013E3 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  3360                                  .L_lambda_simple_params_end_000d:
  3361 000013E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3362 000013E8 4889C3                  	mov rbx, rax
  3363 000013EB 58                      	pop rax
  3364 000013EC C60004                  	mov byte [rax], T_closure
  3365 000013EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3366 000013F3 48C74009[00140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  3367 000013FB E9A4000000              	jmp .L_lambda_simple_end_000d
  3368                                  .L_lambda_simple_code_000d:	; lambda-simple body
  3369 00001400 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3370 00001406 740B                    	je .L_lambda_simple_arity_check_ok_000d
  3371 00001408 FF742410                	push qword [rsp + 8 * 2]
  3372 0000140C 6A01                    	push 1
  3373 0000140E E95C460100              	jmp L_error_incorrect_arity_simple
  3374                                  .L_lambda_simple_arity_check_ok_000d:
  3375 00001413 C8000000                	enter 0, 0
  3376                                  	; preparing a tail-call
  3377                                  	; preparing a non-tail-call
  3378 00001417 488B4520                	mov rax, PARAM(0)	; param x
  3379 0000141B 50                      	push rax
  3380 0000141C 6A01                    	push 1	; arg count
  3381 0000141E 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  3382 00001426 803805                  	cmp byte [rax], T_undefined
  3383 00001429 0F845A450100            	je L_error_fvar_undefined
  3384 0000142F 803804                  	cmp byte [rax], T_closure
  3385 00001432 0F85D5450100            	jne L_error_non_closure
  3386 00001438 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3387 0000143B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3388 0000143E 50                      	push rax
  3389 0000143F 6A01                    	push 1	; arg count
  3390 00001441 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  3391 00001449 803805                  	cmp byte [rax], T_undefined
  3392 0000144C 0F8437450100            	je L_error_fvar_undefined
  3393 00001452 803804                  	cmp byte [rax], T_closure
  3394 00001455 0F85B2450100            	jne L_error_non_closure
  3395 0000145B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3396 0000145E FF7508                  	push qword [rbp + 8 * 1]
  3397                                   ; old ret addr
  3398 00001461 FF7500                  	push qword [rbp]
  3399                                   ; restore the old rbp
  3400 00001464 BB01000000              	mov rbx, 1
  3401 00001469 4883C303                	add rbx, 3
  3402 0000146D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3403 00001471 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3404 00001476 4C8D4DF8                	lea r9, [rbp - 8]
  3405 0000147A B905000000              	mov rcx, 5
  3406                                  .L_tc_recycle_frame_loop_000d:
  3407 0000147F 4883F900                	cmp rcx, 0
  3408 00001483 7413                    	je .L_tc_recycle_frame_done_000d
  3409 00001485 4D8B11                  	mov r10, qword [r9]
  3410 00001488 4D8910                  	mov qword [r8], r10
  3411 0000148B 4983E808                	sub r8, 8
  3412 0000148F 4983E908                	sub r9, 8
  3413 00001493 48FFC9                  	dec rcx
  3414 00001496 EBE7                    	jmp .L_tc_recycle_frame_loop_000d
  3415                                  .L_tc_recycle_frame_done_000d:
  3416 00001498 498D6008                	lea rsp, [r8 + 8]
  3417 0000149C 5D                      	pop rbp ; restore the old rbp
  3418 0000149D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3419 000014A0 C9                      	leave
  3420 000014A1 C21800                  	ret AND_KILL_FRAME(1)
  3421                                  .L_lambda_simple_end_000d:	; new closure is in rax
  3422 000014A4 48890425[21100000]      	mov qword [free_var_35], rax
  3423 000014AC 48B8-                   	mov rax, sob_void
  3423 000014AE [0000000000000000] 
  3424                                  
  3425 000014B6 4889C7                  	mov rdi, rax
  3426 000014B9 E84D480100              	call print_sexpr_if_not_void
  3427 000014BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3428 000014C3 E8EE450100              	call malloc
  3429 000014C8 50                      	push rax
  3430 000014C9 BF00000000              	mov rdi, 8 * 0	; new rib
  3431 000014CE E8E3450100              	call malloc
  3432 000014D3 50                      	push rax
  3433 000014D4 BF08000000              	mov rdi, 8 * 1	; extended env
  3434 000014D9 E8D8450100              	call malloc
  3435 000014DE 488B7D10                	mov rdi, ENV
  3436 000014E2 BE00000000              	mov rsi, 0
  3437 000014E7 BA01000000              	mov rdx, 1
  3438                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  3439 000014EC 4883FE00                	cmp rsi, 0
  3440 000014F0 7410                    	je .L_lambda_simple_env_end_000e
  3441 000014F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3442 000014F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3443 000014FA 48FFC6                  	inc rsi
  3444 000014FD 48FFC2                  	inc rdx
  3445 00001500 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  3446                                  .L_lambda_simple_env_end_000e:
  3447 00001502 5B                      	pop rbx
  3448 00001503 BE00000000              	mov rsi, 0
  3449                                  .L_lambda_simple_params_loop_000e:	; copy params
  3450 00001508 4883FE00                	cmp rsi, 0
  3451 0000150C 740E                    	je .L_lambda_simple_params_end_000e
  3452 0000150E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3453 00001513 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3454 00001517 48FFC6                  	inc rsi
  3455 0000151A EBEC                    	jmp .L_lambda_simple_params_loop_000e
  3456                                  .L_lambda_simple_params_end_000e:
  3457 0000151C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3458 0000151F 4889C3                  	mov rbx, rax
  3459 00001522 58                      	pop rax
  3460 00001523 C60004                  	mov byte [rax], T_closure
  3461 00001526 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3462 0000152A 48C74009[37150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  3463 00001532 E9A4000000              	jmp .L_lambda_simple_end_000e
  3464                                  .L_lambda_simple_code_000e:	; lambda-simple body
  3465 00001537 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3466 0000153D 740B                    	je .L_lambda_simple_arity_check_ok_000e
  3467 0000153F FF742410                	push qword [rsp + 8 * 2]
  3468 00001543 6A01                    	push 1
  3469 00001545 E925450100              	jmp L_error_incorrect_arity_simple
  3470                                  .L_lambda_simple_arity_check_ok_000e:
  3471 0000154A C8000000                	enter 0, 0
  3472                                  	; preparing a tail-call
  3473                                  	; preparing a non-tail-call
  3474 0000154E 488B4520                	mov rax, PARAM(0)	; param x
  3475 00001552 50                      	push rax
  3476 00001553 6A01                    	push 1	; arg count
  3477 00001555 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  3478 0000155D 803805                  	cmp byte [rax], T_undefined
  3479 00001560 0F8423440100            	je L_error_fvar_undefined
  3480 00001566 803804                  	cmp byte [rax], T_closure
  3481 00001569 0F859E440100            	jne L_error_non_closure
  3482 0000156F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3483 00001572 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3484 00001575 50                      	push rax
  3485 00001576 6A01                    	push 1	; arg count
  3486 00001578 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  3487 00001580 803805                  	cmp byte [rax], T_undefined
  3488 00001583 0F8400440100            	je L_error_fvar_undefined
  3489 00001589 803804                  	cmp byte [rax], T_closure
  3490 0000158C 0F857B440100            	jne L_error_non_closure
  3491 00001592 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3492 00001595 FF7508                  	push qword [rbp + 8 * 1]
  3493                                   ; old ret addr
  3494 00001598 FF7500                  	push qword [rbp]
  3495                                   ; restore the old rbp
  3496 0000159B BB01000000              	mov rbx, 1
  3497 000015A0 4883C303                	add rbx, 3
  3498 000015A4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3499 000015A8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3500 000015AD 4C8D4DF8                	lea r9, [rbp - 8]
  3501 000015B1 B905000000              	mov rcx, 5
  3502                                  .L_tc_recycle_frame_loop_000e:
  3503 000015B6 4883F900                	cmp rcx, 0
  3504 000015BA 7413                    	je .L_tc_recycle_frame_done_000e
  3505 000015BC 4D8B11                  	mov r10, qword [r9]
  3506 000015BF 4D8910                  	mov qword [r8], r10
  3507 000015C2 4983E808                	sub r8, 8
  3508 000015C6 4983E908                	sub r9, 8
  3509 000015CA 48FFC9                  	dec rcx
  3510 000015CD EBE7                    	jmp .L_tc_recycle_frame_loop_000e
  3511                                  .L_tc_recycle_frame_done_000e:
  3512 000015CF 498D6008                	lea rsp, [r8 + 8]
  3513 000015D3 5D                      	pop rbp ; restore the old rbp
  3514 000015D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3515 000015D7 C9                      	leave
  3516 000015D8 C21800                  	ret AND_KILL_FRAME(1)
  3517                                  .L_lambda_simple_end_000e:	; new closure is in rax
  3518 000015DB 48890425[32100000]      	mov qword [free_var_36], rax
  3519 000015E3 48B8-                   	mov rax, sob_void
  3519 000015E5 [0000000000000000] 
  3520                                  
  3521 000015ED 4889C7                  	mov rdi, rax
  3522 000015F0 E816470100              	call print_sexpr_if_not_void
  3523 000015F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3524 000015FA E8B7440100              	call malloc
  3525 000015FF 50                      	push rax
  3526 00001600 BF00000000              	mov rdi, 8 * 0	; new rib
  3527 00001605 E8AC440100              	call malloc
  3528 0000160A 50                      	push rax
  3529 0000160B BF08000000              	mov rdi, 8 * 1	; extended env
  3530 00001610 E8A1440100              	call malloc
  3531 00001615 488B7D10                	mov rdi, ENV
  3532 00001619 BE00000000              	mov rsi, 0
  3533 0000161E BA01000000              	mov rdx, 1
  3534                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  3535 00001623 4883FE00                	cmp rsi, 0
  3536 00001627 7410                    	je .L_lambda_simple_env_end_000f
  3537 00001629 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3538 0000162D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3539 00001631 48FFC6                  	inc rsi
  3540 00001634 48FFC2                  	inc rdx
  3541 00001637 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  3542                                  .L_lambda_simple_env_end_000f:
  3543 00001639 5B                      	pop rbx
  3544 0000163A BE00000000              	mov rsi, 0
  3545                                  .L_lambda_simple_params_loop_000f:	; copy params
  3546 0000163F 4883FE00                	cmp rsi, 0
  3547 00001643 740E                    	je .L_lambda_simple_params_end_000f
  3548 00001645 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3549 0000164A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3550 0000164E 48FFC6                  	inc rsi
  3551 00001651 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  3552                                  .L_lambda_simple_params_end_000f:
  3553 00001653 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3554 00001656 4889C3                  	mov rbx, rax
  3555 00001659 58                      	pop rax
  3556 0000165A C60004                  	mov byte [rax], T_closure
  3557 0000165D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3558 00001661 48C74009[6E160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  3559 00001669 E9A4000000              	jmp .L_lambda_simple_end_000f
  3560                                  .L_lambda_simple_code_000f:	; lambda-simple body
  3561 0000166E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3562 00001674 740B                    	je .L_lambda_simple_arity_check_ok_000f
  3563 00001676 FF742410                	push qword [rsp + 8 * 2]
  3564 0000167A 6A01                    	push 1
  3565 0000167C E9EE430100              	jmp L_error_incorrect_arity_simple
  3566                                  .L_lambda_simple_arity_check_ok_000f:
  3567 00001681 C8000000                	enter 0, 0
  3568                                  	; preparing a tail-call
  3569                                  	; preparing a non-tail-call
  3570 00001685 488B4520                	mov rax, PARAM(0)	; param x
  3571 00001689 50                      	push rax
  3572 0000168A 6A01                    	push 1	; arg count
  3573 0000168C 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  3574 00001694 803805                  	cmp byte [rax], T_undefined
  3575 00001697 0F84EC420100            	je L_error_fvar_undefined
  3576 0000169D 803804                  	cmp byte [rax], T_closure
  3577 000016A0 0F8567430100            	jne L_error_non_closure
  3578 000016A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3579 000016A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3580 000016AC 50                      	push rax
  3581 000016AD 6A01                    	push 1	; arg count
  3582 000016AF 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  3583 000016B7 803805                  	cmp byte [rax], T_undefined
  3584 000016BA 0F84C9420100            	je L_error_fvar_undefined
  3585 000016C0 803804                  	cmp byte [rax], T_closure
  3586 000016C3 0F8544430100            	jne L_error_non_closure
  3587 000016C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3588 000016CC FF7508                  	push qword [rbp + 8 * 1]
  3589                                   ; old ret addr
  3590 000016CF FF7500                  	push qword [rbp]
  3591                                   ; restore the old rbp
  3592 000016D2 BB01000000              	mov rbx, 1
  3593 000016D7 4883C303                	add rbx, 3
  3594 000016DB 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3595 000016DF 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3596 000016E4 4C8D4DF8                	lea r9, [rbp - 8]
  3597 000016E8 B905000000              	mov rcx, 5
  3598                                  .L_tc_recycle_frame_loop_000f:
  3599 000016ED 4883F900                	cmp rcx, 0
  3600 000016F1 7413                    	je .L_tc_recycle_frame_done_000f
  3601 000016F3 4D8B11                  	mov r10, qword [r9]
  3602 000016F6 4D8910                  	mov qword [r8], r10
  3603 000016F9 4983E808                	sub r8, 8
  3604 000016FD 4983E908                	sub r9, 8
  3605 00001701 48FFC9                  	dec rcx
  3606 00001704 EBE7                    	jmp .L_tc_recycle_frame_loop_000f
  3607                                  .L_tc_recycle_frame_done_000f:
  3608 00001706 498D6008                	lea rsp, [r8 + 8]
  3609 0000170A 5D                      	pop rbp ; restore the old rbp
  3610 0000170B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3611 0000170E C9                      	leave
  3612 0000170F C21800                  	ret AND_KILL_FRAME(1)
  3613                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3614 00001712 48890425[54100000]      	mov qword [free_var_38], rax
  3615 0000171A 48B8-                   	mov rax, sob_void
  3615 0000171C [0000000000000000] 
  3616                                  
  3617 00001724 4889C7                  	mov rdi, rax
  3618 00001727 E8DF450100              	call print_sexpr_if_not_void
  3619 0000172C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3620 00001731 E880430100              	call malloc
  3621 00001736 50                      	push rax
  3622 00001737 BF00000000              	mov rdi, 8 * 0	; new rib
  3623 0000173C E875430100              	call malloc
  3624 00001741 50                      	push rax
  3625 00001742 BF08000000              	mov rdi, 8 * 1	; extended env
  3626 00001747 E86A430100              	call malloc
  3627 0000174C 488B7D10                	mov rdi, ENV
  3628 00001750 BE00000000              	mov rsi, 0
  3629 00001755 BA01000000              	mov rdx, 1
  3630                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3631 0000175A 4883FE00                	cmp rsi, 0
  3632 0000175E 7410                    	je .L_lambda_simple_env_end_0010
  3633 00001760 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3634 00001764 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3635 00001768 48FFC6                  	inc rsi
  3636 0000176B 48FFC2                  	inc rdx
  3637 0000176E EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3638                                  .L_lambda_simple_env_end_0010:
  3639 00001770 5B                      	pop rbx
  3640 00001771 BE00000000              	mov rsi, 0
  3641                                  .L_lambda_simple_params_loop_0010:	; copy params
  3642 00001776 4883FE00                	cmp rsi, 0
  3643 0000177A 740E                    	je .L_lambda_simple_params_end_0010
  3644 0000177C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3645 00001781 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3646 00001785 48FFC6                  	inc rsi
  3647 00001788 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3648                                  .L_lambda_simple_params_end_0010:
  3649 0000178A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3650 0000178D 4889C3                  	mov rbx, rax
  3651 00001790 58                      	pop rax
  3652 00001791 C60004                  	mov byte [rax], T_closure
  3653 00001794 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3654 00001798 48C74009[A5170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3655 000017A0 E9A4000000              	jmp .L_lambda_simple_end_0010
  3656                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3657 000017A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3658 000017AB 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3659 000017AD FF742410                	push qword [rsp + 8 * 2]
  3660 000017B1 6A01                    	push 1
  3661 000017B3 E9B7420100              	jmp L_error_incorrect_arity_simple
  3662                                  .L_lambda_simple_arity_check_ok_0010:
  3663 000017B8 C8000000                	enter 0, 0
  3664                                  	; preparing a tail-call
  3665                                  	; preparing a non-tail-call
  3666 000017BC 488B4520                	mov rax, PARAM(0)	; param x
  3667 000017C0 50                      	push rax
  3668 000017C1 6A01                    	push 1	; arg count
  3669 000017C3 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  3670 000017CB 803805                  	cmp byte [rax], T_undefined
  3671 000017CE 0F84B5410100            	je L_error_fvar_undefined
  3672 000017D4 803804                  	cmp byte [rax], T_closure
  3673 000017D7 0F8530420100            	jne L_error_non_closure
  3674 000017DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3675 000017E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3676 000017E3 50                      	push rax
  3677 000017E4 6A01                    	push 1	; arg count
  3678 000017E6 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  3679 000017EE 803805                  	cmp byte [rax], T_undefined
  3680 000017F1 0F8492410100            	je L_error_fvar_undefined
  3681 000017F7 803804                  	cmp byte [rax], T_closure
  3682 000017FA 0F850D420100            	jne L_error_non_closure
  3683 00001800 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3684 00001803 FF7508                  	push qword [rbp + 8 * 1]
  3685                                   ; old ret addr
  3686 00001806 FF7500                  	push qword [rbp]
  3687                                   ; restore the old rbp
  3688 00001809 BB01000000              	mov rbx, 1
  3689 0000180E 4883C303                	add rbx, 3
  3690 00001812 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3691 00001816 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3692 0000181B 4C8D4DF8                	lea r9, [rbp - 8]
  3693 0000181F B905000000              	mov rcx, 5
  3694                                  .L_tc_recycle_frame_loop_0010:
  3695 00001824 4883F900                	cmp rcx, 0
  3696 00001828 7413                    	je .L_tc_recycle_frame_done_0010
  3697 0000182A 4D8B11                  	mov r10, qword [r9]
  3698 0000182D 4D8910                  	mov qword [r8], r10
  3699 00001830 4983E808                	sub r8, 8
  3700 00001834 4983E908                	sub r9, 8
  3701 00001838 48FFC9                  	dec rcx
  3702 0000183B EBE7                    	jmp .L_tc_recycle_frame_loop_0010
  3703                                  .L_tc_recycle_frame_done_0010:
  3704 0000183D 498D6008                	lea rsp, [r8 + 8]
  3705 00001841 5D                      	pop rbp ; restore the old rbp
  3706 00001842 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3707 00001845 C9                      	leave
  3708 00001846 C21800                  	ret AND_KILL_FRAME(1)
  3709                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3710 00001849 48890425[65100000]      	mov qword [free_var_39], rax
  3711 00001851 48B8-                   	mov rax, sob_void
  3711 00001853 [0000000000000000] 
  3712                                  
  3713 0000185B 4889C7                  	mov rdi, rax
  3714 0000185E E8A8440100              	call print_sexpr_if_not_void
  3715 00001863 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3716 00001868 E849420100              	call malloc
  3717 0000186D 50                      	push rax
  3718 0000186E BF00000000              	mov rdi, 8 * 0	; new rib
  3719 00001873 E83E420100              	call malloc
  3720 00001878 50                      	push rax
  3721 00001879 BF08000000              	mov rdi, 8 * 1	; extended env
  3722 0000187E E833420100              	call malloc
  3723 00001883 488B7D10                	mov rdi, ENV
  3724 00001887 BE00000000              	mov rsi, 0
  3725 0000188C BA01000000              	mov rdx, 1
  3726                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3727 00001891 4883FE00                	cmp rsi, 0
  3728 00001895 7410                    	je .L_lambda_simple_env_end_0011
  3729 00001897 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3730 0000189B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3731 0000189F 48FFC6                  	inc rsi
  3732 000018A2 48FFC2                  	inc rdx
  3733 000018A5 EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3734                                  .L_lambda_simple_env_end_0011:
  3735 000018A7 5B                      	pop rbx
  3736 000018A8 BE00000000              	mov rsi, 0
  3737                                  .L_lambda_simple_params_loop_0011:	; copy params
  3738 000018AD 4883FE00                	cmp rsi, 0
  3739 000018B1 740E                    	je .L_lambda_simple_params_end_0011
  3740 000018B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3741 000018B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3742 000018BC 48FFC6                  	inc rsi
  3743 000018BF EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3744                                  .L_lambda_simple_params_end_0011:
  3745 000018C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3746 000018C4 4889C3                  	mov rbx, rax
  3747 000018C7 58                      	pop rax
  3748 000018C8 C60004                  	mov byte [rax], T_closure
  3749 000018CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3750 000018CF 48C74009[DC180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3751 000018D7 E9A4000000              	jmp .L_lambda_simple_end_0011
  3752                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3753 000018DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3754 000018E2 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3755 000018E4 FF742410                	push qword [rsp + 8 * 2]
  3756 000018E8 6A01                    	push 1
  3757 000018EA E980410100              	jmp L_error_incorrect_arity_simple
  3758                                  .L_lambda_simple_arity_check_ok_0011:
  3759 000018EF C8000000                	enter 0, 0
  3760                                  	; preparing a tail-call
  3761                                  	; preparing a non-tail-call
  3762 000018F3 488B4520                	mov rax, PARAM(0)	; param x
  3763 000018F7 50                      	push rax
  3764 000018F8 6A01                    	push 1	; arg count
  3765 000018FA 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  3766 00001902 803805                  	cmp byte [rax], T_undefined
  3767 00001905 0F847E400100            	je L_error_fvar_undefined
  3768 0000190B 803804                  	cmp byte [rax], T_closure
  3769 0000190E 0F85F9400100            	jne L_error_non_closure
  3770 00001914 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3771 00001917 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3772 0000191A 50                      	push rax
  3773 0000191B 6A01                    	push 1	; arg count
  3774 0000191D 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  3775 00001925 803805                  	cmp byte [rax], T_undefined
  3776 00001928 0F845B400100            	je L_error_fvar_undefined
  3777 0000192E 803804                  	cmp byte [rax], T_closure
  3778 00001931 0F85D6400100            	jne L_error_non_closure
  3779 00001937 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3780 0000193A FF7508                  	push qword [rbp + 8 * 1]
  3781                                   ; old ret addr
  3782 0000193D FF7500                  	push qword [rbp]
  3783                                   ; restore the old rbp
  3784 00001940 BB01000000              	mov rbx, 1
  3785 00001945 4883C303                	add rbx, 3
  3786 00001949 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3787 0000194D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3788 00001952 4C8D4DF8                	lea r9, [rbp - 8]
  3789 00001956 B905000000              	mov rcx, 5
  3790                                  .L_tc_recycle_frame_loop_0011:
  3791 0000195B 4883F900                	cmp rcx, 0
  3792 0000195F 7413                    	je .L_tc_recycle_frame_done_0011
  3793 00001961 4D8B11                  	mov r10, qword [r9]
  3794 00001964 4D8910                  	mov qword [r8], r10
  3795 00001967 4983E808                	sub r8, 8
  3796 0000196B 4983E908                	sub r9, 8
  3797 0000196F 48FFC9                  	dec rcx
  3798 00001972 EBE7                    	jmp .L_tc_recycle_frame_loop_0011
  3799                                  .L_tc_recycle_frame_done_0011:
  3800 00001974 498D6008                	lea rsp, [r8 + 8]
  3801 00001978 5D                      	pop rbp ; restore the old rbp
  3802 00001979 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3803 0000197C C9                      	leave
  3804 0000197D C21800                  	ret AND_KILL_FRAME(1)
  3805                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3806 00001980 48890425[98100000]      	mov qword [free_var_42], rax
  3807 00001988 48B8-                   	mov rax, sob_void
  3807 0000198A [0000000000000000] 
  3808                                  
  3809 00001992 4889C7                  	mov rdi, rax
  3810 00001995 E871430100              	call print_sexpr_if_not_void
  3811 0000199A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3812 0000199F E812410100              	call malloc
  3813 000019A4 50                      	push rax
  3814 000019A5 BF00000000              	mov rdi, 8 * 0	; new rib
  3815 000019AA E807410100              	call malloc
  3816 000019AF 50                      	push rax
  3817 000019B0 BF08000000              	mov rdi, 8 * 1	; extended env
  3818 000019B5 E8FC400100              	call malloc
  3819 000019BA 488B7D10                	mov rdi, ENV
  3820 000019BE BE00000000              	mov rsi, 0
  3821 000019C3 BA01000000              	mov rdx, 1
  3822                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3823 000019C8 4883FE00                	cmp rsi, 0
  3824 000019CC 7410                    	je .L_lambda_simple_env_end_0012
  3825 000019CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3826 000019D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3827 000019D6 48FFC6                  	inc rsi
  3828 000019D9 48FFC2                  	inc rdx
  3829 000019DC EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3830                                  .L_lambda_simple_env_end_0012:
  3831 000019DE 5B                      	pop rbx
  3832 000019DF BE00000000              	mov rsi, 0
  3833                                  .L_lambda_simple_params_loop_0012:	; copy params
  3834 000019E4 4883FE00                	cmp rsi, 0
  3835 000019E8 740E                    	je .L_lambda_simple_params_end_0012
  3836 000019EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3837 000019EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3838 000019F3 48FFC6                  	inc rsi
  3839 000019F6 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3840                                  .L_lambda_simple_params_end_0012:
  3841 000019F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3842 000019FB 4889C3                  	mov rbx, rax
  3843 000019FE 58                      	pop rax
  3844 000019FF C60004                  	mov byte [rax], T_closure
  3845 00001A02 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3846 00001A06 48C74009[131A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3847 00001A0E E9A4000000              	jmp .L_lambda_simple_end_0012
  3848                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3849 00001A13 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3850 00001A19 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3851 00001A1B FF742410                	push qword [rsp + 8 * 2]
  3852 00001A1F 6A01                    	push 1
  3853 00001A21 E949400100              	jmp L_error_incorrect_arity_simple
  3854                                  .L_lambda_simple_arity_check_ok_0012:
  3855 00001A26 C8000000                	enter 0, 0
  3856                                  	; preparing a tail-call
  3857                                  	; preparing a non-tail-call
  3858 00001A2A 488B4520                	mov rax, PARAM(0)	; param x
  3859 00001A2E 50                      	push rax
  3860 00001A2F 6A01                    	push 1	; arg count
  3861 00001A31 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  3862 00001A39 803805                  	cmp byte [rax], T_undefined
  3863 00001A3C 0F84473F0100            	je L_error_fvar_undefined
  3864 00001A42 803804                  	cmp byte [rax], T_closure
  3865 00001A45 0F85C23F0100            	jne L_error_non_closure
  3866 00001A4B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3867 00001A4E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3868 00001A51 50                      	push rax
  3869 00001A52 6A01                    	push 1	; arg count
  3870 00001A54 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  3871 00001A5C 803805                  	cmp byte [rax], T_undefined
  3872 00001A5F 0F84243F0100            	je L_error_fvar_undefined
  3873 00001A65 803804                  	cmp byte [rax], T_closure
  3874 00001A68 0F859F3F0100            	jne L_error_non_closure
  3875 00001A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3876 00001A71 FF7508                  	push qword [rbp + 8 * 1]
  3877                                   ; old ret addr
  3878 00001A74 FF7500                  	push qword [rbp]
  3879                                   ; restore the old rbp
  3880 00001A77 BB01000000              	mov rbx, 1
  3881 00001A7C 4883C303                	add rbx, 3
  3882 00001A80 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3883 00001A84 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3884 00001A89 4C8D4DF8                	lea r9, [rbp - 8]
  3885 00001A8D B905000000              	mov rcx, 5
  3886                                  .L_tc_recycle_frame_loop_0012:
  3887 00001A92 4883F900                	cmp rcx, 0
  3888 00001A96 7413                    	je .L_tc_recycle_frame_done_0012
  3889 00001A98 4D8B11                  	mov r10, qword [r9]
  3890 00001A9B 4D8910                  	mov qword [r8], r10
  3891 00001A9E 4983E808                	sub r8, 8
  3892 00001AA2 4983E908                	sub r9, 8
  3893 00001AA6 48FFC9                  	dec rcx
  3894 00001AA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0012
  3895                                  .L_tc_recycle_frame_done_0012:
  3896 00001AAB 498D6008                	lea rsp, [r8 + 8]
  3897 00001AAF 5D                      	pop rbp ; restore the old rbp
  3898 00001AB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3899 00001AB3 C9                      	leave
  3900 00001AB4 C21800                  	ret AND_KILL_FRAME(1)
  3901                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3902 00001AB7 48890425[A9100000]      	mov qword [free_var_43], rax
  3903 00001ABF 48B8-                   	mov rax, sob_void
  3903 00001AC1 [0000000000000000] 
  3904                                  
  3905 00001AC9 4889C7                  	mov rdi, rax
  3906 00001ACC E83A420100              	call print_sexpr_if_not_void
  3907 00001AD1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3908 00001AD6 E8DB3F0100              	call malloc
  3909 00001ADB 50                      	push rax
  3910 00001ADC BF00000000              	mov rdi, 8 * 0	; new rib
  3911 00001AE1 E8D03F0100              	call malloc
  3912 00001AE6 50                      	push rax
  3913 00001AE7 BF08000000              	mov rdi, 8 * 1	; extended env
  3914 00001AEC E8C53F0100              	call malloc
  3915 00001AF1 488B7D10                	mov rdi, ENV
  3916 00001AF5 BE00000000              	mov rsi, 0
  3917 00001AFA BA01000000              	mov rdx, 1
  3918                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3919 00001AFF 4883FE00                	cmp rsi, 0
  3920 00001B03 7410                    	je .L_lambda_simple_env_end_0013
  3921 00001B05 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3922 00001B09 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3923 00001B0D 48FFC6                  	inc rsi
  3924 00001B10 48FFC2                  	inc rdx
  3925 00001B13 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3926                                  .L_lambda_simple_env_end_0013:
  3927 00001B15 5B                      	pop rbx
  3928 00001B16 BE00000000              	mov rsi, 0
  3929                                  .L_lambda_simple_params_loop_0013:	; copy params
  3930 00001B1B 4883FE00                	cmp rsi, 0
  3931 00001B1F 740E                    	je .L_lambda_simple_params_end_0013
  3932 00001B21 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3933 00001B26 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3934 00001B2A 48FFC6                  	inc rsi
  3935 00001B2D EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3936                                  .L_lambda_simple_params_end_0013:
  3937 00001B2F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3938 00001B32 4889C3                  	mov rbx, rax
  3939 00001B35 58                      	pop rax
  3940 00001B36 C60004                  	mov byte [rax], T_closure
  3941 00001B39 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3942 00001B3D 48C74009[4A1B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3943 00001B45 E9A4000000              	jmp .L_lambda_simple_end_0013
  3944                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3945 00001B4A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3946 00001B50 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3947 00001B52 FF742410                	push qword [rsp + 8 * 2]
  3948 00001B56 6A01                    	push 1
  3949 00001B58 E9123F0100              	jmp L_error_incorrect_arity_simple
  3950                                  .L_lambda_simple_arity_check_ok_0013:
  3951 00001B5D C8000000                	enter 0, 0
  3952                                  	; preparing a tail-call
  3953                                  	; preparing a non-tail-call
  3954 00001B61 488B4520                	mov rax, PARAM(0)	; param x
  3955 00001B65 50                      	push rax
  3956 00001B66 6A01                    	push 1	; arg count
  3957 00001B68 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  3958 00001B70 803805                  	cmp byte [rax], T_undefined
  3959 00001B73 0F84103E0100            	je L_error_fvar_undefined
  3960 00001B79 803804                  	cmp byte [rax], T_closure
  3961 00001B7C 0F858B3E0100            	jne L_error_non_closure
  3962 00001B82 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3963 00001B85 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3964 00001B88 50                      	push rax
  3965 00001B89 6A01                    	push 1	; arg count
  3966 00001B8B 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  3967 00001B93 803805                  	cmp byte [rax], T_undefined
  3968 00001B96 0F84ED3D0100            	je L_error_fvar_undefined
  3969 00001B9C 803804                  	cmp byte [rax], T_closure
  3970 00001B9F 0F85683E0100            	jne L_error_non_closure
  3971 00001BA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3972 00001BA8 FF7508                  	push qword [rbp + 8 * 1]
  3973                                   ; old ret addr
  3974 00001BAB FF7500                  	push qword [rbp]
  3975                                   ; restore the old rbp
  3976 00001BAE BB01000000              	mov rbx, 1
  3977 00001BB3 4883C303                	add rbx, 3
  3978 00001BB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  3979 00001BBB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  3980 00001BC0 4C8D4DF8                	lea r9, [rbp - 8]
  3981 00001BC4 B905000000              	mov rcx, 5
  3982                                  .L_tc_recycle_frame_loop_0013:
  3983 00001BC9 4883F900                	cmp rcx, 0
  3984 00001BCD 7413                    	je .L_tc_recycle_frame_done_0013
  3985 00001BCF 4D8B11                  	mov r10, qword [r9]
  3986 00001BD2 4D8910                  	mov qword [r8], r10
  3987 00001BD5 4983E808                	sub r8, 8
  3988 00001BD9 4983E908                	sub r9, 8
  3989 00001BDD 48FFC9                  	dec rcx
  3990 00001BE0 EBE7                    	jmp .L_tc_recycle_frame_loop_0013
  3991                                  .L_tc_recycle_frame_done_0013:
  3992 00001BE2 498D6008                	lea rsp, [r8 + 8]
  3993 00001BE6 5D                      	pop rbp ; restore the old rbp
  3994 00001BE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3995 00001BEA C9                      	leave
  3996 00001BEB C21800                  	ret AND_KILL_FRAME(1)
  3997                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3998 00001BEE 48890425[CB100000]      	mov qword [free_var_45], rax
  3999 00001BF6 48B8-                   	mov rax, sob_void
  3999 00001BF8 [0000000000000000] 
  4000                                  
  4001 00001C00 4889C7                  	mov rdi, rax
  4002 00001C03 E803410100              	call print_sexpr_if_not_void
  4003 00001C08 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4004 00001C0D E8A43E0100              	call malloc
  4005 00001C12 50                      	push rax
  4006 00001C13 BF00000000              	mov rdi, 8 * 0	; new rib
  4007 00001C18 E8993E0100              	call malloc
  4008 00001C1D 50                      	push rax
  4009 00001C1E BF08000000              	mov rdi, 8 * 1	; extended env
  4010 00001C23 E88E3E0100              	call malloc
  4011 00001C28 488B7D10                	mov rdi, ENV
  4012 00001C2C BE00000000              	mov rsi, 0
  4013 00001C31 BA01000000              	mov rdx, 1
  4014                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  4015 00001C36 4883FE00                	cmp rsi, 0
  4016 00001C3A 7410                    	je .L_lambda_simple_env_end_0014
  4017 00001C3C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4018 00001C40 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4019 00001C44 48FFC6                  	inc rsi
  4020 00001C47 48FFC2                  	inc rdx
  4021 00001C4A EBEA                    	jmp .L_lambda_simple_env_loop_0014
  4022                                  .L_lambda_simple_env_end_0014:
  4023 00001C4C 5B                      	pop rbx
  4024 00001C4D BE00000000              	mov rsi, 0
  4025                                  .L_lambda_simple_params_loop_0014:	; copy params
  4026 00001C52 4883FE00                	cmp rsi, 0
  4027 00001C56 740E                    	je .L_lambda_simple_params_end_0014
  4028 00001C58 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4029 00001C5D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4030 00001C61 48FFC6                  	inc rsi
  4031 00001C64 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  4032                                  .L_lambda_simple_params_end_0014:
  4033 00001C66 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4034 00001C69 4889C3                  	mov rbx, rax
  4035 00001C6C 58                      	pop rax
  4036 00001C6D C60004                  	mov byte [rax], T_closure
  4037 00001C70 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4038 00001C74 48C74009[811C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  4039 00001C7C E9A4000000              	jmp .L_lambda_simple_end_0014
  4040                                  .L_lambda_simple_code_0014:	; lambda-simple body
  4041 00001C81 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4042 00001C87 740B                    	je .L_lambda_simple_arity_check_ok_0014
  4043 00001C89 FF742410                	push qword [rsp + 8 * 2]
  4044 00001C8D 6A01                    	push 1
  4045 00001C8F E9DB3D0100              	jmp L_error_incorrect_arity_simple
  4046                                  .L_lambda_simple_arity_check_ok_0014:
  4047 00001C94 C8000000                	enter 0, 0
  4048                                  	; preparing a tail-call
  4049                                  	; preparing a non-tail-call
  4050 00001C98 488B4520                	mov rax, PARAM(0)	; param x
  4051 00001C9C 50                      	push rax
  4052 00001C9D 6A01                    	push 1	; arg count
  4053 00001C9F 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4054 00001CA7 803805                  	cmp byte [rax], T_undefined
  4055 00001CAA 0F84D93C0100            	je L_error_fvar_undefined
  4056 00001CB0 803804                  	cmp byte [rax], T_closure
  4057 00001CB3 0F85543D0100            	jne L_error_non_closure
  4058 00001CB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4059 00001CBC FF5009                  	call SOB_CLOSURE_CODE(rax)
  4060 00001CBF 50                      	push rax
  4061 00001CC0 6A01                    	push 1	; arg count
  4062 00001CC2 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  4063 00001CCA 803805                  	cmp byte [rax], T_undefined
  4064 00001CCD 0F84B63C0100            	je L_error_fvar_undefined
  4065 00001CD3 803804                  	cmp byte [rax], T_closure
  4066 00001CD6 0F85313D0100            	jne L_error_non_closure
  4067 00001CDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4068 00001CDF FF7508                  	push qword [rbp + 8 * 1]
  4069                                   ; old ret addr
  4070 00001CE2 FF7500                  	push qword [rbp]
  4071                                   ; restore the old rbp
  4072 00001CE5 BB01000000              	mov rbx, 1
  4073 00001CEA 4883C303                	add rbx, 3
  4074 00001CEE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4075 00001CF2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4076 00001CF7 4C8D4DF8                	lea r9, [rbp - 8]
  4077 00001CFB B905000000              	mov rcx, 5
  4078                                  .L_tc_recycle_frame_loop_0014:
  4079 00001D00 4883F900                	cmp rcx, 0
  4080 00001D04 7413                    	je .L_tc_recycle_frame_done_0014
  4081 00001D06 4D8B11                  	mov r10, qword [r9]
  4082 00001D09 4D8910                  	mov qword [r8], r10
  4083 00001D0C 4983E808                	sub r8, 8
  4084 00001D10 4983E908                	sub r9, 8
  4085 00001D14 48FFC9                  	dec rcx
  4086 00001D17 EBE7                    	jmp .L_tc_recycle_frame_loop_0014
  4087                                  .L_tc_recycle_frame_done_0014:
  4088 00001D19 498D6008                	lea rsp, [r8 + 8]
  4089 00001D1D 5D                      	pop rbp ; restore the old rbp
  4090 00001D1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4091 00001D21 C9                      	leave
  4092 00001D22 C21800                  	ret AND_KILL_FRAME(1)
  4093                                  .L_lambda_simple_end_0014:	; new closure is in rax
  4094 00001D25 48890425[DC100000]      	mov qword [free_var_46], rax
  4095 00001D2D 48B8-                   	mov rax, sob_void
  4095 00001D2F [0000000000000000] 
  4096                                  
  4097 00001D37 4889C7                  	mov rdi, rax
  4098 00001D3A E8CC3F0100              	call print_sexpr_if_not_void
  4099 00001D3F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4100 00001D44 E86D3D0100              	call malloc
  4101 00001D49 50                      	push rax
  4102 00001D4A BF00000000              	mov rdi, 8 * 0	; new rib
  4103 00001D4F E8623D0100              	call malloc
  4104 00001D54 50                      	push rax
  4105 00001D55 BF08000000              	mov rdi, 8 * 1	; extended env
  4106 00001D5A E8573D0100              	call malloc
  4107 00001D5F 488B7D10                	mov rdi, ENV
  4108 00001D63 BE00000000              	mov rsi, 0
  4109 00001D68 BA01000000              	mov rdx, 1
  4110                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  4111 00001D6D 4883FE00                	cmp rsi, 0
  4112 00001D71 7410                    	je .L_lambda_simple_env_end_0015
  4113 00001D73 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4114 00001D77 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4115 00001D7B 48FFC6                  	inc rsi
  4116 00001D7E 48FFC2                  	inc rdx
  4117 00001D81 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  4118                                  .L_lambda_simple_env_end_0015:
  4119 00001D83 5B                      	pop rbx
  4120 00001D84 BE00000000              	mov rsi, 0
  4121                                  .L_lambda_simple_params_loop_0015:	; copy params
  4122 00001D89 4883FE00                	cmp rsi, 0
  4123 00001D8D 740E                    	je .L_lambda_simple_params_end_0015
  4124 00001D8F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4125 00001D94 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4126 00001D98 48FFC6                  	inc rsi
  4127 00001D9B EBEC                    	jmp .L_lambda_simple_params_loop_0015
  4128                                  .L_lambda_simple_params_end_0015:
  4129 00001D9D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4130 00001DA0 4889C3                  	mov rbx, rax
  4131 00001DA3 58                      	pop rax
  4132 00001DA4 C60004                  	mov byte [rax], T_closure
  4133 00001DA7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4134 00001DAB 48C74009[B81D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  4135 00001DB3 E9A4000000              	jmp .L_lambda_simple_end_0015
  4136                                  .L_lambda_simple_code_0015:	; lambda-simple body
  4137 00001DB8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4138 00001DBE 740B                    	je .L_lambda_simple_arity_check_ok_0015
  4139 00001DC0 FF742410                	push qword [rsp + 8 * 2]
  4140 00001DC4 6A01                    	push 1
  4141 00001DC6 E9A43C0100              	jmp L_error_incorrect_arity_simple
  4142                                  .L_lambda_simple_arity_check_ok_0015:
  4143 00001DCB C8000000                	enter 0, 0
  4144                                  	; preparing a tail-call
  4145                                  	; preparing a non-tail-call
  4146 00001DCF 488B4520                	mov rax, PARAM(0)	; param x
  4147 00001DD3 50                      	push rax
  4148 00001DD4 6A01                    	push 1	; arg count
  4149 00001DD6 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  4150 00001DDE 803805                  	cmp byte [rax], T_undefined
  4151 00001DE1 0F84A23B0100            	je L_error_fvar_undefined
  4152 00001DE7 803804                  	cmp byte [rax], T_closure
  4153 00001DEA 0F851D3C0100            	jne L_error_non_closure
  4154 00001DF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4155 00001DF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4156 00001DF6 50                      	push rax
  4157 00001DF7 6A01                    	push 1	; arg count
  4158 00001DF9 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  4159 00001E01 803805                  	cmp byte [rax], T_undefined
  4160 00001E04 0F847F3B0100            	je L_error_fvar_undefined
  4161 00001E0A 803804                  	cmp byte [rax], T_closure
  4162 00001E0D 0F85FA3B0100            	jne L_error_non_closure
  4163 00001E13 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4164 00001E16 FF7508                  	push qword [rbp + 8 * 1]
  4165                                   ; old ret addr
  4166 00001E19 FF7500                  	push qword [rbp]
  4167                                   ; restore the old rbp
  4168 00001E1C BB01000000              	mov rbx, 1
  4169 00001E21 4883C303                	add rbx, 3
  4170 00001E25 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4171 00001E29 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4172 00001E2E 4C8D4DF8                	lea r9, [rbp - 8]
  4173 00001E32 B905000000              	mov rcx, 5
  4174                                  .L_tc_recycle_frame_loop_0015:
  4175 00001E37 4883F900                	cmp rcx, 0
  4176 00001E3B 7413                    	je .L_tc_recycle_frame_done_0015
  4177 00001E3D 4D8B11                  	mov r10, qword [r9]
  4178 00001E40 4D8910                  	mov qword [r8], r10
  4179 00001E43 4983E808                	sub r8, 8
  4180 00001E47 4983E908                	sub r9, 8
  4181 00001E4B 48FFC9                  	dec rcx
  4182 00001E4E EBE7                    	jmp .L_tc_recycle_frame_loop_0015
  4183                                  .L_tc_recycle_frame_done_0015:
  4184 00001E50 498D6008                	lea rsp, [r8 + 8]
  4185 00001E54 5D                      	pop rbp ; restore the old rbp
  4186 00001E55 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4187 00001E58 C9                      	leave
  4188 00001E59 C21800                  	ret AND_KILL_FRAME(1)
  4189                                  .L_lambda_simple_end_0015:	; new closure is in rax
  4190 00001E5C 48890425[20110000]      	mov qword [free_var_50], rax
  4191 00001E64 48B8-                   	mov rax, sob_void
  4191 00001E66 [0000000000000000] 
  4192                                  
  4193 00001E6E 4889C7                  	mov rdi, rax
  4194 00001E71 E8953E0100              	call print_sexpr_if_not_void
  4195 00001E76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4196 00001E7B E8363C0100              	call malloc
  4197 00001E80 50                      	push rax
  4198 00001E81 BF00000000              	mov rdi, 8 * 0	; new rib
  4199 00001E86 E82B3C0100              	call malloc
  4200 00001E8B 50                      	push rax
  4201 00001E8C BF08000000              	mov rdi, 8 * 1	; extended env
  4202 00001E91 E8203C0100              	call malloc
  4203 00001E96 488B7D10                	mov rdi, ENV
  4204 00001E9A BE00000000              	mov rsi, 0
  4205 00001E9F BA01000000              	mov rdx, 1
  4206                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  4207 00001EA4 4883FE00                	cmp rsi, 0
  4208 00001EA8 7410                    	je .L_lambda_simple_env_end_0016
  4209 00001EAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4210 00001EAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4211 00001EB2 48FFC6                  	inc rsi
  4212 00001EB5 48FFC2                  	inc rdx
  4213 00001EB8 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  4214                                  .L_lambda_simple_env_end_0016:
  4215 00001EBA 5B                      	pop rbx
  4216 00001EBB BE00000000              	mov rsi, 0
  4217                                  .L_lambda_simple_params_loop_0016:	; copy params
  4218 00001EC0 4883FE00                	cmp rsi, 0
  4219 00001EC4 740E                    	je .L_lambda_simple_params_end_0016
  4220 00001EC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4221 00001ECB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4222 00001ECF 48FFC6                  	inc rsi
  4223 00001ED2 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  4224                                  .L_lambda_simple_params_end_0016:
  4225 00001ED4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4226 00001ED7 4889C3                  	mov rbx, rax
  4227 00001EDA 58                      	pop rax
  4228 00001EDB C60004                  	mov byte [rax], T_closure
  4229 00001EDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4230 00001EE2 48C74009[EF1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  4231 00001EEA E9A4000000              	jmp .L_lambda_simple_end_0016
  4232                                  .L_lambda_simple_code_0016:	; lambda-simple body
  4233 00001EEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4234 00001EF5 740B                    	je .L_lambda_simple_arity_check_ok_0016
  4235 00001EF7 FF742410                	push qword [rsp + 8 * 2]
  4236 00001EFB 6A01                    	push 1
  4237 00001EFD E96D3B0100              	jmp L_error_incorrect_arity_simple
  4238                                  .L_lambda_simple_arity_check_ok_0016:
  4239 00001F02 C8000000                	enter 0, 0
  4240                                  	; preparing a tail-call
  4241                                  	; preparing a non-tail-call
  4242 00001F06 488B4520                	mov rax, PARAM(0)	; param x
  4243 00001F0A 50                      	push rax
  4244 00001F0B 6A01                    	push 1	; arg count
  4245 00001F0D 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  4246 00001F15 803805                  	cmp byte [rax], T_undefined
  4247 00001F18 0F846B3A0100            	je L_error_fvar_undefined
  4248 00001F1E 803804                  	cmp byte [rax], T_closure
  4249 00001F21 0F85E63A0100            	jne L_error_non_closure
  4250 00001F27 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4251 00001F2A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4252 00001F2D 50                      	push rax
  4253 00001F2E 6A01                    	push 1	; arg count
  4254 00001F30 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  4255 00001F38 803805                  	cmp byte [rax], T_undefined
  4256 00001F3B 0F84483A0100            	je L_error_fvar_undefined
  4257 00001F41 803804                  	cmp byte [rax], T_closure
  4258 00001F44 0F85C33A0100            	jne L_error_non_closure
  4259 00001F4A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4260 00001F4D FF7508                  	push qword [rbp + 8 * 1]
  4261                                   ; old ret addr
  4262 00001F50 FF7500                  	push qword [rbp]
  4263                                   ; restore the old rbp
  4264 00001F53 BB01000000              	mov rbx, 1
  4265 00001F58 4883C303                	add rbx, 3
  4266 00001F5C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4267 00001F60 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4268 00001F65 4C8D4DF8                	lea r9, [rbp - 8]
  4269 00001F69 B905000000              	mov rcx, 5
  4270                                  .L_tc_recycle_frame_loop_0016:
  4271 00001F6E 4883F900                	cmp rcx, 0
  4272 00001F72 7413                    	je .L_tc_recycle_frame_done_0016
  4273 00001F74 4D8B11                  	mov r10, qword [r9]
  4274 00001F77 4D8910                  	mov qword [r8], r10
  4275 00001F7A 4983E808                	sub r8, 8
  4276 00001F7E 4983E908                	sub r9, 8
  4277 00001F82 48FFC9                  	dec rcx
  4278 00001F85 EBE7                    	jmp .L_tc_recycle_frame_loop_0016
  4279                                  .L_tc_recycle_frame_done_0016:
  4280 00001F87 498D6008                	lea rsp, [r8 + 8]
  4281 00001F8B 5D                      	pop rbp ; restore the old rbp
  4282 00001F8C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4283 00001F8F C9                      	leave
  4284 00001F90 C21800                  	ret AND_KILL_FRAME(1)
  4285                                  .L_lambda_simple_end_0016:	; new closure is in rax
  4286 00001F93 48890425[31110000]      	mov qword [free_var_51], rax
  4287 00001F9B 48B8-                   	mov rax, sob_void
  4287 00001F9D [0000000000000000] 
  4288                                  
  4289 00001FA5 4889C7                  	mov rdi, rax
  4290 00001FA8 E85E3D0100              	call print_sexpr_if_not_void
  4291 00001FAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4292 00001FB2 E8FF3A0100              	call malloc
  4293 00001FB7 50                      	push rax
  4294 00001FB8 BF00000000              	mov rdi, 8 * 0	; new rib
  4295 00001FBD E8F43A0100              	call malloc
  4296 00001FC2 50                      	push rax
  4297 00001FC3 BF08000000              	mov rdi, 8 * 1	; extended env
  4298 00001FC8 E8E93A0100              	call malloc
  4299 00001FCD 488B7D10                	mov rdi, ENV
  4300 00001FD1 BE00000000              	mov rsi, 0
  4301 00001FD6 BA01000000              	mov rdx, 1
  4302                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  4303 00001FDB 4883FE00                	cmp rsi, 0
  4304 00001FDF 7410                    	je .L_lambda_simple_env_end_0017
  4305 00001FE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4306 00001FE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4307 00001FE9 48FFC6                  	inc rsi
  4308 00001FEC 48FFC2                  	inc rdx
  4309 00001FEF EBEA                    	jmp .L_lambda_simple_env_loop_0017
  4310                                  .L_lambda_simple_env_end_0017:
  4311 00001FF1 5B                      	pop rbx
  4312 00001FF2 BE00000000              	mov rsi, 0
  4313                                  .L_lambda_simple_params_loop_0017:	; copy params
  4314 00001FF7 4883FE00                	cmp rsi, 0
  4315 00001FFB 740E                    	je .L_lambda_simple_params_end_0017
  4316 00001FFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4317 00002002 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4318 00002006 48FFC6                  	inc rsi
  4319 00002009 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  4320                                  .L_lambda_simple_params_end_0017:
  4321 0000200B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4322 0000200E 4889C3                  	mov rbx, rax
  4323 00002011 58                      	pop rax
  4324 00002012 C60004                  	mov byte [rax], T_closure
  4325 00002015 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4326 00002019 48C74009[26200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  4327 00002021 E9A4000000              	jmp .L_lambda_simple_end_0017
  4328                                  .L_lambda_simple_code_0017:	; lambda-simple body
  4329 00002026 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4330 0000202C 740B                    	je .L_lambda_simple_arity_check_ok_0017
  4331 0000202E FF742410                	push qword [rsp + 8 * 2]
  4332 00002032 6A01                    	push 1
  4333 00002034 E9363A0100              	jmp L_error_incorrect_arity_simple
  4334                                  .L_lambda_simple_arity_check_ok_0017:
  4335 00002039 C8000000                	enter 0, 0
  4336                                  	; preparing a tail-call
  4337                                  	; preparing a non-tail-call
  4338 0000203D 488B4520                	mov rax, PARAM(0)	; param x
  4339 00002041 50                      	push rax
  4340 00002042 6A01                    	push 1	; arg count
  4341 00002044 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  4342 0000204C 803805                  	cmp byte [rax], T_undefined
  4343 0000204F 0F8434390100            	je L_error_fvar_undefined
  4344 00002055 803804                  	cmp byte [rax], T_closure
  4345 00002058 0F85AF390100            	jne L_error_non_closure
  4346 0000205E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4347 00002061 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4348 00002064 50                      	push rax
  4349 00002065 6A01                    	push 1	; arg count
  4350 00002067 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  4351 0000206F 803805                  	cmp byte [rax], T_undefined
  4352 00002072 0F8411390100            	je L_error_fvar_undefined
  4353 00002078 803804                  	cmp byte [rax], T_closure
  4354 0000207B 0F858C390100            	jne L_error_non_closure
  4355 00002081 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4356 00002084 FF7508                  	push qword [rbp + 8 * 1]
  4357                                   ; old ret addr
  4358 00002087 FF7500                  	push qword [rbp]
  4359                                   ; restore the old rbp
  4360 0000208A BB01000000              	mov rbx, 1
  4361 0000208F 4883C303                	add rbx, 3
  4362 00002093 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4363 00002097 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4364 0000209C 4C8D4DF8                	lea r9, [rbp - 8]
  4365 000020A0 B905000000              	mov rcx, 5
  4366                                  .L_tc_recycle_frame_loop_0017:
  4367 000020A5 4883F900                	cmp rcx, 0
  4368 000020A9 7413                    	je .L_tc_recycle_frame_done_0017
  4369 000020AB 4D8B11                  	mov r10, qword [r9]
  4370 000020AE 4D8910                  	mov qword [r8], r10
  4371 000020B1 4983E808                	sub r8, 8
  4372 000020B5 4983E908                	sub r9, 8
  4373 000020B9 48FFC9                  	dec rcx
  4374 000020BC EBE7                    	jmp .L_tc_recycle_frame_loop_0017
  4375                                  .L_tc_recycle_frame_done_0017:
  4376 000020BE 498D6008                	lea rsp, [r8 + 8]
  4377 000020C2 5D                      	pop rbp ; restore the old rbp
  4378 000020C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4379 000020C6 C9                      	leave
  4380 000020C7 C21800                  	ret AND_KILL_FRAME(1)
  4381                                  .L_lambda_simple_end_0017:	; new closure is in rax
  4382 000020CA 48890425[53110000]      	mov qword [free_var_53], rax
  4383 000020D2 48B8-                   	mov rax, sob_void
  4383 000020D4 [0000000000000000] 
  4384                                  
  4385 000020DC 4889C7                  	mov rdi, rax
  4386 000020DF E8273C0100              	call print_sexpr_if_not_void
  4387 000020E4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4388 000020E9 E8C8390100              	call malloc
  4389 000020EE 50                      	push rax
  4390 000020EF BF00000000              	mov rdi, 8 * 0	; new rib
  4391 000020F4 E8BD390100              	call malloc
  4392 000020F9 50                      	push rax
  4393 000020FA BF08000000              	mov rdi, 8 * 1	; extended env
  4394 000020FF E8B2390100              	call malloc
  4395 00002104 488B7D10                	mov rdi, ENV
  4396 00002108 BE00000000              	mov rsi, 0
  4397 0000210D BA01000000              	mov rdx, 1
  4398                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  4399 00002112 4883FE00                	cmp rsi, 0
  4400 00002116 7410                    	je .L_lambda_simple_env_end_0018
  4401 00002118 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4402 0000211C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4403 00002120 48FFC6                  	inc rsi
  4404 00002123 48FFC2                  	inc rdx
  4405 00002126 EBEA                    	jmp .L_lambda_simple_env_loop_0018
  4406                                  .L_lambda_simple_env_end_0018:
  4407 00002128 5B                      	pop rbx
  4408 00002129 BE00000000              	mov rsi, 0
  4409                                  .L_lambda_simple_params_loop_0018:	; copy params
  4410 0000212E 4883FE00                	cmp rsi, 0
  4411 00002132 740E                    	je .L_lambda_simple_params_end_0018
  4412 00002134 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4413 00002139 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4414 0000213D 48FFC6                  	inc rsi
  4415 00002140 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  4416                                  .L_lambda_simple_params_end_0018:
  4417 00002142 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4418 00002145 4889C3                  	mov rbx, rax
  4419 00002148 58                      	pop rax
  4420 00002149 C60004                  	mov byte [rax], T_closure
  4421 0000214C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4422 00002150 48C74009[5D210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  4423 00002158 E9A4000000              	jmp .L_lambda_simple_end_0018
  4424                                  .L_lambda_simple_code_0018:	; lambda-simple body
  4425 0000215D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4426 00002163 740B                    	je .L_lambda_simple_arity_check_ok_0018
  4427 00002165 FF742410                	push qword [rsp + 8 * 2]
  4428 00002169 6A01                    	push 1
  4429 0000216B E9FF380100              	jmp L_error_incorrect_arity_simple
  4430                                  .L_lambda_simple_arity_check_ok_0018:
  4431 00002170 C8000000                	enter 0, 0
  4432                                  	; preparing a tail-call
  4433                                  	; preparing a non-tail-call
  4434 00002174 488B4520                	mov rax, PARAM(0)	; param x
  4435 00002178 50                      	push rax
  4436 00002179 6A01                    	push 1	; arg count
  4437 0000217B 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4438 00002183 803805                  	cmp byte [rax], T_undefined
  4439 00002186 0F84FD370100            	je L_error_fvar_undefined
  4440 0000218C 803804                  	cmp byte [rax], T_closure
  4441 0000218F 0F8578380100            	jne L_error_non_closure
  4442 00002195 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4443 00002198 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4444 0000219B 50                      	push rax
  4445 0000219C 6A01                    	push 1	; arg count
  4446 0000219E 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  4447 000021A6 803805                  	cmp byte [rax], T_undefined
  4448 000021A9 0F84DA370100            	je L_error_fvar_undefined
  4449 000021AF 803804                  	cmp byte [rax], T_closure
  4450 000021B2 0F8555380100            	jne L_error_non_closure
  4451 000021B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4452 000021BB FF7508                  	push qword [rbp + 8 * 1]
  4453                                   ; old ret addr
  4454 000021BE FF7500                  	push qword [rbp]
  4455                                   ; restore the old rbp
  4456 000021C1 BB01000000              	mov rbx, 1
  4457 000021C6 4883C303                	add rbx, 3
  4458 000021CA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4459 000021CE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4460 000021D3 4C8D4DF8                	lea r9, [rbp - 8]
  4461 000021D7 B905000000              	mov rcx, 5
  4462                                  .L_tc_recycle_frame_loop_0018:
  4463 000021DC 4883F900                	cmp rcx, 0
  4464 000021E0 7413                    	je .L_tc_recycle_frame_done_0018
  4465 000021E2 4D8B11                  	mov r10, qword [r9]
  4466 000021E5 4D8910                  	mov qword [r8], r10
  4467 000021E8 4983E808                	sub r8, 8
  4468 000021EC 4983E908                	sub r9, 8
  4469 000021F0 48FFC9                  	dec rcx
  4470 000021F3 EBE7                    	jmp .L_tc_recycle_frame_loop_0018
  4471                                  .L_tc_recycle_frame_done_0018:
  4472 000021F5 498D6008                	lea rsp, [r8 + 8]
  4473 000021F9 5D                      	pop rbp ; restore the old rbp
  4474 000021FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4475 000021FD C9                      	leave
  4476 000021FE C21800                  	ret AND_KILL_FRAME(1)
  4477                                  .L_lambda_simple_end_0018:	; new closure is in rax
  4478 00002201 48890425[64110000]      	mov qword [free_var_54], rax
  4479 00002209 48B8-                   	mov rax, sob_void
  4479 0000220B [0000000000000000] 
  4480                                  
  4481 00002213 4889C7                  	mov rdi, rax
  4482 00002216 E8F03A0100              	call print_sexpr_if_not_void
  4483 0000221B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4484 00002220 E891380100              	call malloc
  4485 00002225 50                      	push rax
  4486 00002226 BF00000000              	mov rdi, 8 * 0	; new rib
  4487 0000222B E886380100              	call malloc
  4488 00002230 50                      	push rax
  4489 00002231 BF08000000              	mov rdi, 8 * 1	; extended env
  4490 00002236 E87B380100              	call malloc
  4491 0000223B 488B7D10                	mov rdi, ENV
  4492 0000223F BE00000000              	mov rsi, 0
  4493 00002244 BA01000000              	mov rdx, 1
  4494                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4495 00002249 4883FE00                	cmp rsi, 0
  4496 0000224D 7410                    	je .L_lambda_simple_env_end_0019
  4497 0000224F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4498 00002253 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4499 00002257 48FFC6                  	inc rsi
  4500 0000225A 48FFC2                  	inc rdx
  4501 0000225D EBEA                    	jmp .L_lambda_simple_env_loop_0019
  4502                                  .L_lambda_simple_env_end_0019:
  4503 0000225F 5B                      	pop rbx
  4504 00002260 BE00000000              	mov rsi, 0
  4505                                  .L_lambda_simple_params_loop_0019:	; copy params
  4506 00002265 4883FE00                	cmp rsi, 0
  4507 00002269 740E                    	je .L_lambda_simple_params_end_0019
  4508 0000226B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4509 00002270 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4510 00002274 48FFC6                  	inc rsi
  4511 00002277 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  4512                                  .L_lambda_simple_params_end_0019:
  4513 00002279 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4514 0000227C 4889C3                  	mov rbx, rax
  4515 0000227F 58                      	pop rax
  4516 00002280 C60004                  	mov byte [rax], T_closure
  4517 00002283 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4518 00002287 48C74009[94220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  4519 0000228F E9A4000000              	jmp .L_lambda_simple_end_0019
  4520                                  .L_lambda_simple_code_0019:	; lambda-simple body
  4521 00002294 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4522 0000229A 740B                    	je .L_lambda_simple_arity_check_ok_0019
  4523 0000229C FF742410                	push qword [rsp + 8 * 2]
  4524 000022A0 6A01                    	push 1
  4525 000022A2 E9C8370100              	jmp L_error_incorrect_arity_simple
  4526                                  .L_lambda_simple_arity_check_ok_0019:
  4527 000022A7 C8000000                	enter 0, 0
  4528                                  	; preparing a tail-call
  4529                                  	; preparing a non-tail-call
  4530 000022AB 488B4520                	mov rax, PARAM(0)	; param x
  4531 000022AF 50                      	push rax
  4532 000022B0 6A01                    	push 1	; arg count
  4533 000022B2 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
  4534 000022BA 803805                  	cmp byte [rax], T_undefined
  4535 000022BD 0F84C6360100            	je L_error_fvar_undefined
  4536 000022C3 803804                  	cmp byte [rax], T_closure
  4537 000022C6 0F8541370100            	jne L_error_non_closure
  4538 000022CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4539 000022CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4540 000022D2 50                      	push rax
  4541 000022D3 6A01                    	push 1	; arg count
  4542 000022D5 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4543 000022DD 803805                  	cmp byte [rax], T_undefined
  4544 000022E0 0F84A3360100            	je L_error_fvar_undefined
  4545 000022E6 803804                  	cmp byte [rax], T_closure
  4546 000022E9 0F851E370100            	jne L_error_non_closure
  4547 000022EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4548 000022F2 FF7508                  	push qword [rbp + 8 * 1]
  4549                                   ; old ret addr
  4550 000022F5 FF7500                  	push qword [rbp]
  4551                                   ; restore the old rbp
  4552 000022F8 BB01000000              	mov rbx, 1
  4553 000022FD 4883C303                	add rbx, 3
  4554 00002301 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4555 00002305 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4556 0000230A 4C8D4DF8                	lea r9, [rbp - 8]
  4557 0000230E B905000000              	mov rcx, 5
  4558                                  .L_tc_recycle_frame_loop_0019:
  4559 00002313 4883F900                	cmp rcx, 0
  4560 00002317 7413                    	je .L_tc_recycle_frame_done_0019
  4561 00002319 4D8B11                  	mov r10, qword [r9]
  4562 0000231C 4D8910                  	mov qword [r8], r10
  4563 0000231F 4983E808                	sub r8, 8
  4564 00002323 4983E908                	sub r9, 8
  4565 00002327 48FFC9                  	dec rcx
  4566 0000232A EBE7                    	jmp .L_tc_recycle_frame_loop_0019
  4567                                  .L_tc_recycle_frame_done_0019:
  4568 0000232C 498D6008                	lea rsp, [r8 + 8]
  4569 00002330 5D                      	pop rbp ; restore the old rbp
  4570 00002331 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4571 00002334 C9                      	leave
  4572 00002335 C21800                  	ret AND_KILL_FRAME(1)
  4573                                  .L_lambda_simple_end_0019:	; new closure is in rax
  4574 00002338 48890425[97110000]      	mov qword [free_var_57], rax
  4575 00002340 48B8-                   	mov rax, sob_void
  4575 00002342 [0000000000000000] 
  4576                                  
  4577 0000234A 4889C7                  	mov rdi, rax
  4578 0000234D E8B9390100              	call print_sexpr_if_not_void
  4579 00002352 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4580 00002357 E85A370100              	call malloc
  4581 0000235C 50                      	push rax
  4582 0000235D BF00000000              	mov rdi, 8 * 0	; new rib
  4583 00002362 E84F370100              	call malloc
  4584 00002367 50                      	push rax
  4585 00002368 BF08000000              	mov rdi, 8 * 1	; extended env
  4586 0000236D E844370100              	call malloc
  4587 00002372 488B7D10                	mov rdi, ENV
  4588 00002376 BE00000000              	mov rsi, 0
  4589 0000237B BA01000000              	mov rdx, 1
  4590                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4591 00002380 4883FE00                	cmp rsi, 0
  4592 00002384 7410                    	je .L_lambda_simple_env_end_001a
  4593 00002386 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4594 0000238A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4595 0000238E 48FFC6                  	inc rsi
  4596 00002391 48FFC2                  	inc rdx
  4597 00002394 EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4598                                  .L_lambda_simple_env_end_001a:
  4599 00002396 5B                      	pop rbx
  4600 00002397 BE00000000              	mov rsi, 0
  4601                                  .L_lambda_simple_params_loop_001a:	; copy params
  4602 0000239C 4883FE00                	cmp rsi, 0
  4603 000023A0 740E                    	je .L_lambda_simple_params_end_001a
  4604 000023A2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4605 000023A7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4606 000023AB 48FFC6                  	inc rsi
  4607 000023AE EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4608                                  .L_lambda_simple_params_end_001a:
  4609 000023B0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4610 000023B3 4889C3                  	mov rbx, rax
  4611 000023B6 58                      	pop rax
  4612 000023B7 C60004                  	mov byte [rax], T_closure
  4613 000023BA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4614 000023BE 48C74009[CB230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4615 000023C6 E9A4000000              	jmp .L_lambda_simple_end_001a
  4616                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4617 000023CB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4618 000023D1 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4619 000023D3 FF742410                	push qword [rsp + 8 * 2]
  4620 000023D7 6A01                    	push 1
  4621 000023D9 E991360100              	jmp L_error_incorrect_arity_simple
  4622                                  .L_lambda_simple_arity_check_ok_001a:
  4623 000023DE C8000000                	enter 0, 0
  4624                                  	; preparing a tail-call
  4625                                  	; preparing a non-tail-call
  4626 000023E2 488B4520                	mov rax, PARAM(0)	; param x
  4627 000023E6 50                      	push rax
  4628 000023E7 6A01                    	push 1	; arg count
  4629 000023E9 488B0425[FE100000]      	mov rax, qword [free_var_48]	; free var cadr
  4630 000023F1 803805                  	cmp byte [rax], T_undefined
  4631 000023F4 0F848F350100            	je L_error_fvar_undefined
  4632 000023FA 803804                  	cmp byte [rax], T_closure
  4633 000023FD 0F850A360100            	jne L_error_non_closure
  4634 00002403 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4635 00002406 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4636 00002409 50                      	push rax
  4637 0000240A 6A01                    	push 1	; arg count
  4638 0000240C 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4639 00002414 803805                  	cmp byte [rax], T_undefined
  4640 00002417 0F846C350100            	je L_error_fvar_undefined
  4641 0000241D 803804                  	cmp byte [rax], T_closure
  4642 00002420 0F85E7350100            	jne L_error_non_closure
  4643 00002426 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4644 00002429 FF7508                  	push qword [rbp + 8 * 1]
  4645                                   ; old ret addr
  4646 0000242C FF7500                  	push qword [rbp]
  4647                                   ; restore the old rbp
  4648 0000242F BB01000000              	mov rbx, 1
  4649 00002434 4883C303                	add rbx, 3
  4650 00002438 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4651 0000243C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4652 00002441 4C8D4DF8                	lea r9, [rbp - 8]
  4653 00002445 B905000000              	mov rcx, 5
  4654                                  .L_tc_recycle_frame_loop_001a:
  4655 0000244A 4883F900                	cmp rcx, 0
  4656 0000244E 7413                    	je .L_tc_recycle_frame_done_001a
  4657 00002450 4D8B11                  	mov r10, qword [r9]
  4658 00002453 4D8910                  	mov qword [r8], r10
  4659 00002456 4983E808                	sub r8, 8
  4660 0000245A 4983E908                	sub r9, 8
  4661 0000245E 48FFC9                  	dec rcx
  4662 00002461 EBE7                    	jmp .L_tc_recycle_frame_loop_001a
  4663                                  .L_tc_recycle_frame_done_001a:
  4664 00002463 498D6008                	lea rsp, [r8 + 8]
  4665 00002467 5D                      	pop rbp ; restore the old rbp
  4666 00002468 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4667 0000246B C9                      	leave
  4668 0000246C C21800                  	ret AND_KILL_FRAME(1)
  4669                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4670 0000246F 48890425[A8110000]      	mov qword [free_var_58], rax
  4671 00002477 48B8-                   	mov rax, sob_void
  4671 00002479 [0000000000000000] 
  4672                                  
  4673 00002481 4889C7                  	mov rdi, rax
  4674 00002484 E882380100              	call print_sexpr_if_not_void
  4675 00002489 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4676 0000248E E823360100              	call malloc
  4677 00002493 50                      	push rax
  4678 00002494 BF00000000              	mov rdi, 8 * 0	; new rib
  4679 00002499 E818360100              	call malloc
  4680 0000249E 50                      	push rax
  4681 0000249F BF08000000              	mov rdi, 8 * 1	; extended env
  4682 000024A4 E80D360100              	call malloc
  4683 000024A9 488B7D10                	mov rdi, ENV
  4684 000024AD BE00000000              	mov rsi, 0
  4685 000024B2 BA01000000              	mov rdx, 1
  4686                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4687 000024B7 4883FE00                	cmp rsi, 0
  4688 000024BB 7410                    	je .L_lambda_simple_env_end_001b
  4689 000024BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4690 000024C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4691 000024C5 48FFC6                  	inc rsi
  4692 000024C8 48FFC2                  	inc rdx
  4693 000024CB EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4694                                  .L_lambda_simple_env_end_001b:
  4695 000024CD 5B                      	pop rbx
  4696 000024CE BE00000000              	mov rsi, 0
  4697                                  .L_lambda_simple_params_loop_001b:	; copy params
  4698 000024D3 4883FE00                	cmp rsi, 0
  4699 000024D7 740E                    	je .L_lambda_simple_params_end_001b
  4700 000024D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4701 000024DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4702 000024E2 48FFC6                  	inc rsi
  4703 000024E5 EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4704                                  .L_lambda_simple_params_end_001b:
  4705 000024E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4706 000024EA 4889C3                  	mov rbx, rax
  4707 000024ED 58                      	pop rax
  4708 000024EE C60004                  	mov byte [rax], T_closure
  4709 000024F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4710 000024F5 48C74009[02250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4711 000024FD E9A4000000              	jmp .L_lambda_simple_end_001b
  4712                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4713 00002502 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4714 00002508 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4715 0000250A FF742410                	push qword [rsp + 8 * 2]
  4716 0000250E 6A01                    	push 1
  4717 00002510 E95A350100              	jmp L_error_incorrect_arity_simple
  4718                                  .L_lambda_simple_arity_check_ok_001b:
  4719 00002515 C8000000                	enter 0, 0
  4720                                  	; preparing a tail-call
  4721                                  	; preparing a non-tail-call
  4722 00002519 488B4520                	mov rax, PARAM(0)	; param x
  4723 0000251D 50                      	push rax
  4724 0000251E 6A01                    	push 1	; arg count
  4725 00002520 488B0425[86110000]      	mov rax, qword [free_var_56]	; free var cdar
  4726 00002528 803805                  	cmp byte [rax], T_undefined
  4727 0000252B 0F8458340100            	je L_error_fvar_undefined
  4728 00002531 803804                  	cmp byte [rax], T_closure
  4729 00002534 0F85D3340100            	jne L_error_non_closure
  4730 0000253A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4731 0000253D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4732 00002540 50                      	push rax
  4733 00002541 6A01                    	push 1	; arg count
  4734 00002543 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4735 0000254B 803805                  	cmp byte [rax], T_undefined
  4736 0000254E 0F8435340100            	je L_error_fvar_undefined
  4737 00002554 803804                  	cmp byte [rax], T_closure
  4738 00002557 0F85B0340100            	jne L_error_non_closure
  4739 0000255D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4740 00002560 FF7508                  	push qword [rbp + 8 * 1]
  4741                                   ; old ret addr
  4742 00002563 FF7500                  	push qword [rbp]
  4743                                   ; restore the old rbp
  4744 00002566 BB01000000              	mov rbx, 1
  4745 0000256B 4883C303                	add rbx, 3
  4746 0000256F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4747 00002573 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4748 00002578 4C8D4DF8                	lea r9, [rbp - 8]
  4749 0000257C B905000000              	mov rcx, 5
  4750                                  .L_tc_recycle_frame_loop_001b:
  4751 00002581 4883F900                	cmp rcx, 0
  4752 00002585 7413                    	je .L_tc_recycle_frame_done_001b
  4753 00002587 4D8B11                  	mov r10, qword [r9]
  4754 0000258A 4D8910                  	mov qword [r8], r10
  4755 0000258D 4983E808                	sub r8, 8
  4756 00002591 4983E908                	sub r9, 8
  4757 00002595 48FFC9                  	dec rcx
  4758 00002598 EBE7                    	jmp .L_tc_recycle_frame_loop_001b
  4759                                  .L_tc_recycle_frame_done_001b:
  4760 0000259A 498D6008                	lea rsp, [r8 + 8]
  4761 0000259E 5D                      	pop rbp ; restore the old rbp
  4762 0000259F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4763 000025A2 C9                      	leave
  4764 000025A3 C21800                  	ret AND_KILL_FRAME(1)
  4765                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4766 000025A6 48890425[CA110000]      	mov qword [free_var_60], rax
  4767 000025AE 48B8-                   	mov rax, sob_void
  4767 000025B0 [0000000000000000] 
  4768                                  
  4769 000025B8 4889C7                  	mov rdi, rax
  4770 000025BB E84B370100              	call print_sexpr_if_not_void
  4771 000025C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4772 000025C5 E8EC340100              	call malloc
  4773 000025CA 50                      	push rax
  4774 000025CB BF00000000              	mov rdi, 8 * 0	; new rib
  4775 000025D0 E8E1340100              	call malloc
  4776 000025D5 50                      	push rax
  4777 000025D6 BF08000000              	mov rdi, 8 * 1	; extended env
  4778 000025DB E8D6340100              	call malloc
  4779 000025E0 488B7D10                	mov rdi, ENV
  4780 000025E4 BE00000000              	mov rsi, 0
  4781 000025E9 BA01000000              	mov rdx, 1
  4782                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4783 000025EE 4883FE00                	cmp rsi, 0
  4784 000025F2 7410                    	je .L_lambda_simple_env_end_001c
  4785 000025F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4786 000025F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4787 000025FC 48FFC6                  	inc rsi
  4788 000025FF 48FFC2                  	inc rdx
  4789 00002602 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4790                                  .L_lambda_simple_env_end_001c:
  4791 00002604 5B                      	pop rbx
  4792 00002605 BE00000000              	mov rsi, 0
  4793                                  .L_lambda_simple_params_loop_001c:	; copy params
  4794 0000260A 4883FE00                	cmp rsi, 0
  4795 0000260E 740E                    	je .L_lambda_simple_params_end_001c
  4796 00002610 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4797 00002615 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4798 00002619 48FFC6                  	inc rsi
  4799 0000261C EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4800                                  .L_lambda_simple_params_end_001c:
  4801 0000261E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4802 00002621 4889C3                  	mov rbx, rax
  4803 00002624 58                      	pop rax
  4804 00002625 C60004                  	mov byte [rax], T_closure
  4805 00002628 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4806 0000262C 48C74009[39260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4807 00002634 E9A4000000              	jmp .L_lambda_simple_end_001c
  4808                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4809 00002639 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4810 0000263F 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4811 00002641 FF742410                	push qword [rsp + 8 * 2]
  4812 00002645 6A01                    	push 1
  4813 00002647 E923340100              	jmp L_error_incorrect_arity_simple
  4814                                  .L_lambda_simple_arity_check_ok_001c:
  4815 0000264C C8000000                	enter 0, 0
  4816                                  	; preparing a tail-call
  4817                                  	; preparing a non-tail-call
  4818 00002650 488B4520                	mov rax, PARAM(0)	; param x
  4819 00002654 50                      	push rax
  4820 00002655 6A01                    	push 1	; arg count
  4821 00002657 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4822 0000265F 803805                  	cmp byte [rax], T_undefined
  4823 00002662 0F8421330100            	je L_error_fvar_undefined
  4824 00002668 803804                  	cmp byte [rax], T_closure
  4825 0000266B 0F859C330100            	jne L_error_non_closure
  4826 00002671 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4827 00002674 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4828 00002677 50                      	push rax
  4829 00002678 6A01                    	push 1	; arg count
  4830 0000267A 488B0425[FD110000]      	mov rax, qword [free_var_63]	; free var cddr
  4831 00002682 803805                  	cmp byte [rax], T_undefined
  4832 00002685 0F84FE320100            	je L_error_fvar_undefined
  4833 0000268B 803804                  	cmp byte [rax], T_closure
  4834 0000268E 0F8579330100            	jne L_error_non_closure
  4835 00002694 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4836 00002697 FF7508                  	push qword [rbp + 8 * 1]
  4837                                   ; old ret addr
  4838 0000269A FF7500                  	push qword [rbp]
  4839                                   ; restore the old rbp
  4840 0000269D BB01000000              	mov rbx, 1
  4841 000026A2 4883C303                	add rbx, 3
  4842 000026A6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4843 000026AA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4844 000026AF 4C8D4DF8                	lea r9, [rbp - 8]
  4845 000026B3 B905000000              	mov rcx, 5
  4846                                  .L_tc_recycle_frame_loop_001c:
  4847 000026B8 4883F900                	cmp rcx, 0
  4848 000026BC 7413                    	je .L_tc_recycle_frame_done_001c
  4849 000026BE 4D8B11                  	mov r10, qword [r9]
  4850 000026C1 4D8910                  	mov qword [r8], r10
  4851 000026C4 4983E808                	sub r8, 8
  4852 000026C8 4983E908                	sub r9, 8
  4853 000026CC 48FFC9                  	dec rcx
  4854 000026CF EBE7                    	jmp .L_tc_recycle_frame_loop_001c
  4855                                  .L_tc_recycle_frame_done_001c:
  4856 000026D1 498D6008                	lea rsp, [r8 + 8]
  4857 000026D5 5D                      	pop rbp ; restore the old rbp
  4858 000026D6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4859 000026D9 C9                      	leave
  4860 000026DA C21800                  	ret AND_KILL_FRAME(1)
  4861                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4862 000026DD 48890425[DB110000]      	mov qword [free_var_61], rax
  4863 000026E5 48B8-                   	mov rax, sob_void
  4863 000026E7 [0000000000000000] 
  4864                                  
  4865 000026EF 4889C7                  	mov rdi, rax
  4866 000026F2 E814360100              	call print_sexpr_if_not_void
  4867 000026F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4868 000026FC E8B5330100              	call malloc
  4869 00002701 50                      	push rax
  4870 00002702 BF00000000              	mov rdi, 8 * 0	; new rib
  4871 00002707 E8AA330100              	call malloc
  4872 0000270C 50                      	push rax
  4873 0000270D BF08000000              	mov rdi, 8 * 1	; extended env
  4874 00002712 E89F330100              	call malloc
  4875 00002717 488B7D10                	mov rdi, ENV
  4876 0000271B BE00000000              	mov rsi, 0
  4877 00002720 BA01000000              	mov rdx, 1
  4878                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4879 00002725 4883FE00                	cmp rsi, 0
  4880 00002729 7410                    	je .L_lambda_simple_env_end_001d
  4881 0000272B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4882 0000272F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4883 00002733 48FFC6                  	inc rsi
  4884 00002736 48FFC2                  	inc rdx
  4885 00002739 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4886                                  .L_lambda_simple_env_end_001d:
  4887 0000273B 5B                      	pop rbx
  4888 0000273C BE00000000              	mov rsi, 0
  4889                                  .L_lambda_simple_params_loop_001d:	; copy params
  4890 00002741 4883FE00                	cmp rsi, 0
  4891 00002745 740E                    	je .L_lambda_simple_params_end_001d
  4892 00002747 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4893 0000274C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4894 00002750 48FFC6                  	inc rsi
  4895 00002753 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4896                                  .L_lambda_simple_params_end_001d:
  4897 00002755 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4898 00002758 4889C3                  	mov rbx, rax
  4899 0000275B 58                      	pop rax
  4900 0000275C C60004                  	mov byte [rax], T_closure
  4901 0000275F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4902 00002763 48C74009[70270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4903 0000276B E916010000              	jmp .L_lambda_simple_end_001d
  4904                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4905 00002770 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4906 00002776 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4907 00002778 FF742410                	push qword [rsp + 8 * 2]
  4908 0000277C 6A01                    	push 1
  4909 0000277E E9EC320100              	jmp L_error_incorrect_arity_simple
  4910                                  .L_lambda_simple_arity_check_ok_001d:
  4911 00002783 C8000000                	enter 0, 0
  4912                                  	; preparing a non-tail-call
  4913 00002787 488B4520                	mov rax, PARAM(0)	; param e
  4914 0000278B 50                      	push rax
  4915 0000278C 6A01                    	push 1	; arg count
  4916 0000278E 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  4917 00002796 803805                  	cmp byte [rax], T_undefined
  4918 00002799 0F84EA310100            	je L_error_fvar_undefined
  4919 0000279F 803804                  	cmp byte [rax], T_closure
  4920 000027A2 0F8565320100            	jne L_error_non_closure
  4921 000027A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4922 000027AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  4923 000027AE 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  4924 000027B4 0F85C8000000            	jne .L_or_end_0001; if its not false (true) then we need to return it and not the last element
  4925                                  	; preparing a non-tail-call
  4926 000027BA 488B4520                	mov rax, PARAM(0)	; param e
  4927 000027BE 50                      	push rax
  4928 000027BF 6A01                    	push 1	; arg count
  4929 000027C1 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
  4930 000027C9 803805                  	cmp byte [rax], T_undefined
  4931 000027CC 0F84B7310100            	je L_error_fvar_undefined
  4932 000027D2 803804                  	cmp byte [rax], T_closure
  4933 000027D5 0F8532320100            	jne L_error_non_closure
  4934 000027DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4935 000027DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  4936 000027E1 483D[02000000]          	cmp rax, sob_boolean_false
  4937 000027E7 0F848B000000            	je .L_if_else_0001
  4938                                  	; preparing a tail-call
  4939                                  	; preparing a non-tail-call
  4940 000027ED 488B4520                	mov rax, PARAM(0)	; param e
  4941 000027F1 50                      	push rax
  4942 000027F2 6A01                    	push 1	; arg count
  4943 000027F4 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  4944 000027FC 803805                  	cmp byte [rax], T_undefined
  4945 000027FF 0F8484310100            	je L_error_fvar_undefined
  4946 00002805 803804                  	cmp byte [rax], T_closure
  4947 00002808 0F85FF310100            	jne L_error_non_closure
  4948 0000280E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4949 00002811 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4950 00002814 50                      	push rax
  4951 00002815 6A01                    	push 1	; arg count
  4952 00002817 488B0425[2E140000]      	mov rax, qword [free_var_96]	; free var list?
  4953 0000281F 803805                  	cmp byte [rax], T_undefined
  4954 00002822 0F8461310100            	je L_error_fvar_undefined
  4955 00002828 803804                  	cmp byte [rax], T_closure
  4956 0000282B 0F85DC310100            	jne L_error_non_closure
  4957 00002831 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4958 00002834 FF7508                  	push qword [rbp + 8 * 1]
  4959                                   ; old ret addr
  4960 00002837 FF7500                  	push qword [rbp]
  4961                                   ; restore the old rbp
  4962 0000283A BB01000000              	mov rbx, 1
  4963 0000283F 4883C303                	add rbx, 3
  4964 00002843 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  4965 00002847 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  4966 0000284C 4C8D4DF8                	lea r9, [rbp - 8]
  4967 00002850 B905000000              	mov rcx, 5
  4968                                  .L_tc_recycle_frame_loop_001d:
  4969 00002855 4883F900                	cmp rcx, 0
  4970 00002859 7413                    	je .L_tc_recycle_frame_done_001d
  4971 0000285B 4D8B11                  	mov r10, qword [r9]
  4972 0000285E 4D8910                  	mov qword [r8], r10
  4973 00002861 4983E808                	sub r8, 8
  4974 00002865 4983E908                	sub r9, 8
  4975 00002869 48FFC9                  	dec rcx
  4976 0000286C EBE7                    	jmp .L_tc_recycle_frame_loop_001d
  4977                                  .L_tc_recycle_frame_done_001d:
  4978 0000286E 498D6008                	lea rsp, [r8 + 8]
  4979 00002872 5D                      	pop rbp ; restore the old rbp
  4980 00002873 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4981 00002876 EB0A                    	jmp .L_if_end_0001
  4982                                  .L_if_else_0001:
  4983 00002878 48B8-                   	mov rax, L_constants + 2
  4983 0000287A [0200000000000000] 
  4984                                  .L_if_end_0001:
  4985                                  .L_or_end_0001:
  4986 00002882 C9                      	leave
  4987 00002883 C21800                  	ret AND_KILL_FRAME(1)
  4988                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4989 00002886 48890425[2E140000]      	mov qword [free_var_96], rax
  4990 0000288E 48B8-                   	mov rax, sob_void
  4990 00002890 [0000000000000000] 
  4991                                  
  4992 00002898 4889C7                  	mov rdi, rax
  4993 0000289B E86B340100              	call print_sexpr_if_not_void
  4994 000028A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4995 000028A5 E80C320100              	call malloc
  4996 000028AA 50                      	push rax
  4997 000028AB BF00000000              	mov rdi, 8 * 0	; new rib
  4998 000028B0 E801320100              	call malloc
  4999 000028B5 50                      	push rax
  5000 000028B6 BF08000000              	mov rdi, 8 * 1	; extended env
  5001 000028BB E8F6310100              	call malloc
  5002 000028C0 488B7D10                	mov rdi, ENV
  5003 000028C4 4831F6                  	 xor rsi, rsi
  5004 000028C7 4831D2                  	 xor rdx, rdx
  5005 000028CA 48FFC2                  	inc rdx
  5006                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  5007 000028CD 4883FE00                	cmp rsi, 0
  5008 000028D1 7410                    	je .L_lambda_opt_env_end_0001
  5009 000028D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5010 000028D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5011 000028DB 48FFC6                  	inc rsi
  5012 000028DE 48FFC2                  	inc rdx
  5013 000028E1 EBEA                    	jmp .L_lambda_opt_env_loop_0001
  5014                                  .L_lambda_opt_env_end_0001:
  5015 000028E3 5B                      	pop rbx
  5016 000028E4 4831F6                  	xor rsi, rsi
  5017                                  .L_lambda_opt_params_loop_0001:	; copy params
  5018 000028E7 4883FE00                	cmp rsi, 0
  5019 000028EB 740E                    	je .L_lambda_opt_params_end_0001
  5020 000028ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5021 000028F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5022 000028F6 48FFC6                  	inc rsi
  5023 000028F9 EBEC                    	jmp .L_lambda_opt_params_loop_0001
  5024                                  .L_lambda_opt_params_end_0001:
  5025 000028FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5026 000028FE 4889C3                  	mov rbx, rax
  5027 00002901 58                      	pop rax
  5028 00002902 C60004                  	mov byte [rax], T_closure
  5029 00002905 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5030 00002909 48C74009[16290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  5031 00002911 E9FA000000              	jmp .L_lambda_opt_end_0001
  5032                                  .L_lambda_opt_code_0001:; lambda opt body
  5033 00002916 48837C241000            	cmp qword [rsp + 8 * 2], 0
  5034 0000291C 7409                    	je .L_lambda_opt_arity_check_exact_0001
  5035 0000291E 7F57                    	jg .L_lambda_opt_arity_check_more_0001
  5036 00002920 6A00                    	push 0
  5037 00002922 E95C310100              	jmp L_error_incorrect_arity_opt
  5038                                  .L_lambda_opt_arity_check_exact_0001:
  5039 00002927 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  5040 0000292B 4C894C24F8              	mov qword [rsp -8], r9
  5041 00002930 4C8B4C2408              	mov r9, qword [rsp +8]
  5042 00002935 4C890C24                	mov qword [rsp +8 * 0], r9
  5043 00002939 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  5044 0000293E 4C89C9                  	mov rcx, r9
  5045 00002941 49FFC1                  	inc r9
  5046 00002944 4C894C2408              	mov qword [rsp +8], r9
  5047 00002949 4889E2                  	mov rdx, rsp
  5048 0000294C 4883C218                	add rdx, 24
  5049                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0001:
  5050 00002950 4883F900                	cmp rcx, 0
  5051 00002954 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0001
  5052 00002956 4C8B02                  	mov r8, qword [rdx]
  5053 00002959 4C8942F8                	mov qword [rdx - 8], r8
  5054 0000295D 4883C208                	add rdx, 8
  5055 00002961 48FFC9                  	dec rcx
  5056 00002964 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0001
  5057                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0001:
  5058 00002966 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5059 0000296E 4883EC08                	sub rsp, 8
  5060 00002972 E984000000              	jmp .L_lambda_opt_stack_adjusted_0001
  5061                                  .L_lambda_opt_arity_check_more_0001:
  5062 00002977 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5063 0000297C 4D89C4                  	mov r12, r8
  5064 0000297F 4C89C1                  	mov rcx, r8
  5065 00002982 4D8D5002                	lea r10, [r8 + 2] 
  5066 00002986 4883E900                	sub rcx, 0
  5067 0000298A 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  5068 0000298F 49B9-                   	mov r9, sob_nil
  5068 00002991 [0100000000000000] 
  5069                                  .L_lambda_opt_create_list_of_opt_params_0001:
  5070 00002999 4883F900                	cmp rcx, 0
  5071 0000299D 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0001
  5072 0000299F BF11000000              	mov rdi, 17
  5073 000029A4 E80D310100              	call malloc
  5074 000029A9 C60021                  	mov byte [rax], T_pair
  5075 000029AC 498B1B                  	mov rbx, qword [r11]
  5076 000029AF 48895801                	mov qword [rax +1], rbx
  5077 000029B3 4C894809                	mov qword [rax + 1 + 8], r9
  5078 000029B7 4989C1                  	mov r9, rax
  5079 000029BA 48FFC9                  	dec rcx
  5080 000029BD 4983EB08                	sub r11, 8
  5081 000029C1 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0001
  5082                                  .L_lambda_opt_create_list_of_opt_params_end_0001:
  5083 000029C3 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
  5084 000029C8 4D8908                  	mov qword [r8], r9
  5085 000029CB 4E8D14D500000000        	lea r10, [8 * r10]
  5086 000029D3 4901E2                  	add r10, rsp
  5087 000029D6 B904000000              	mov rcx, 4 + 0
  5088                                  .L_lambda_opt_stack_shrink_loop_0001:
  5089 000029DB 4883F900                	cmp rcx, 0
  5090 000029DF 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0001
  5091 000029E1 4D8B18                  	mov r11, qword [r8]
  5092 000029E4 4D891A                  	mov qword [r10], r11
  5093 000029E7 4983E808                	sub r8, 8
  5094 000029EB 4983EA08                	sub r10, 8
  5095 000029EF 48FFC9                  	dec rcx
  5096 000029F2 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  5097                                  .L_lambda_opt_stack_shrink_loop_exit_0001:
  5098 000029F4 4983C208                	add r10, 8
  5099 000029F8 4C89D4                  	mov rsp, r10
  5100                                  .L_lambda_opt_stack_adjusted_0001:;continue with the code, the stack is ok
  5101 000029FB 48C744241001000000      	mov qword [rsp + 8*2], 1
  5102 00002A04 C8000000                	enter 0, 0
  5103 00002A08 488B4520                	mov rax, PARAM(0)	; param args
  5104 00002A0C C9                      	leave
  5105 00002A0D C21800                  	ret 8 * (2 + 1)
  5106                                  .L_lambda_opt_end_0001:	; new closure is in rax
  5107 00002A10 48890425[EA130000]      	mov qword [free_var_92], rax
  5108 00002A18 48B8-                   	mov rax, sob_void
  5108 00002A1A [0000000000000000] 
  5109                                  
  5110 00002A22 4889C7                  	mov rdi, rax
  5111 00002A25 E8E1320100              	call print_sexpr_if_not_void
  5112 00002A2A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5113 00002A2F E882300100              	call malloc
  5114 00002A34 50                      	push rax
  5115 00002A35 BF00000000              	mov rdi, 8 * 0	; new rib
  5116 00002A3A E877300100              	call malloc
  5117 00002A3F 50                      	push rax
  5118 00002A40 BF08000000              	mov rdi, 8 * 1	; extended env
  5119 00002A45 E86C300100              	call malloc
  5120 00002A4A 488B7D10                	mov rdi, ENV
  5121 00002A4E BE00000000              	mov rsi, 0
  5122 00002A53 BA01000000              	mov rdx, 1
  5123                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  5124 00002A58 4883FE00                	cmp rsi, 0
  5125 00002A5C 7410                    	je .L_lambda_simple_env_end_001e
  5126 00002A5E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5127 00002A62 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5128 00002A66 48FFC6                  	inc rsi
  5129 00002A69 48FFC2                  	inc rdx
  5130 00002A6C EBEA                    	jmp .L_lambda_simple_env_loop_001e
  5131                                  .L_lambda_simple_env_end_001e:
  5132 00002A6E 5B                      	pop rbx
  5133 00002A6F BE00000000              	mov rsi, 0
  5134                                  .L_lambda_simple_params_loop_001e:	; copy params
  5135 00002A74 4883FE00                	cmp rsi, 0
  5136 00002A78 740E                    	je .L_lambda_simple_params_end_001e
  5137 00002A7A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5138 00002A7F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5139 00002A83 48FFC6                  	inc rsi
  5140 00002A86 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  5141                                  .L_lambda_simple_params_end_001e:
  5142 00002A88 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5143 00002A8B 4889C3                  	mov rbx, rax
  5144 00002A8E 58                      	pop rax
  5145 00002A8F C60004                  	mov byte [rax], T_closure
  5146 00002A92 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5147 00002A96 48C74009[A02A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  5148 00002A9E EB3D                    	jmp .L_lambda_simple_end_001e
  5149                                  .L_lambda_simple_code_001e:	; lambda-simple body
  5150 00002AA0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5151 00002AA6 740B                    	je .L_lambda_simple_arity_check_ok_001e
  5152 00002AA8 FF742410                	push qword [rsp + 8 * 2]
  5153 00002AAC 6A01                    	push 1
  5154 00002AAE E9BC2F0100              	jmp L_error_incorrect_arity_simple
  5155                                  .L_lambda_simple_arity_check_ok_001e:
  5156 00002AB3 C8000000                	enter 0, 0
  5157 00002AB7 488B4520                	mov rax, PARAM(0)	; param x
  5158 00002ABB 483D[02000000]          	cmp rax, sob_boolean_false
  5159 00002AC1 740C                    	je .L_if_else_0002
  5160 00002AC3 48B8-                   	mov rax, L_constants + 2
  5160 00002AC5 [0200000000000000] 
  5161 00002ACD EB0A                    	jmp .L_if_end_0002
  5162                                  .L_if_else_0002:
  5163 00002ACF 48B8-                   	mov rax, L_constants + 3
  5163 00002AD1 [0300000000000000] 
  5164                                  .L_if_end_0002:
  5165 00002AD9 C9                      	leave
  5166 00002ADA C21800                  	ret AND_KILL_FRAME(1)
  5167                                  .L_lambda_simple_end_001e:	; new closure is in rax
  5168 00002ADD 48890425[D8140000]      	mov qword [free_var_106], rax
  5169 00002AE5 48B8-                   	mov rax, sob_void
  5169 00002AE7 [0000000000000000] 
  5170                                  
  5171 00002AEF 4889C7                  	mov rdi, rax
  5172 00002AF2 E814320100              	call print_sexpr_if_not_void
  5173 00002AF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5174 00002AFC E8B52F0100              	call malloc
  5175 00002B01 50                      	push rax
  5176 00002B02 BF00000000              	mov rdi, 8 * 0	; new rib
  5177 00002B07 E8AA2F0100              	call malloc
  5178 00002B0C 50                      	push rax
  5179 00002B0D BF08000000              	mov rdi, 8 * 1	; extended env
  5180 00002B12 E89F2F0100              	call malloc
  5181 00002B17 488B7D10                	mov rdi, ENV
  5182 00002B1B BE00000000              	mov rsi, 0
  5183 00002B20 BA01000000              	mov rdx, 1
  5184                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  5185 00002B25 4883FE00                	cmp rsi, 0
  5186 00002B29 7410                    	je .L_lambda_simple_env_end_001f
  5187 00002B2B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5188 00002B2F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5189 00002B33 48FFC6                  	inc rsi
  5190 00002B36 48FFC2                  	inc rdx
  5191 00002B39 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  5192                                  .L_lambda_simple_env_end_001f:
  5193 00002B3B 5B                      	pop rbx
  5194 00002B3C BE00000000              	mov rsi, 0
  5195                                  .L_lambda_simple_params_loop_001f:	; copy params
  5196 00002B41 4883FE00                	cmp rsi, 0
  5197 00002B45 740E                    	je .L_lambda_simple_params_end_001f
  5198 00002B47 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5199 00002B4C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5200 00002B50 48FFC6                  	inc rsi
  5201 00002B53 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  5202                                  .L_lambda_simple_params_end_001f:
  5203 00002B55 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5204 00002B58 4889C3                  	mov rbx, rax
  5205 00002B5B 58                      	pop rax
  5206 00002B5C C60004                  	mov byte [rax], T_closure
  5207 00002B5F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5208 00002B63 48C74009[702B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  5209 00002B6B E9B0000000              	jmp .L_lambda_simple_end_001f
  5210                                  .L_lambda_simple_code_001f:	; lambda-simple body
  5211 00002B70 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5212 00002B76 740B                    	je .L_lambda_simple_arity_check_ok_001f
  5213 00002B78 FF742410                	push qword [rsp + 8 * 2]
  5214 00002B7C 6A01                    	push 1
  5215 00002B7E E9EC2E0100              	jmp L_error_incorrect_arity_simple
  5216                                  .L_lambda_simple_arity_check_ok_001f:
  5217 00002B83 C8000000                	enter 0, 0
  5218                                  	; preparing a non-tail-call
  5219 00002B87 488B4520                	mov rax, PARAM(0)	; param q
  5220 00002B8B 50                      	push rax
  5221 00002B8C 6A01                    	push 1	; arg count
  5222 00002B8E 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
  5223 00002B96 803805                  	cmp byte [rax], T_undefined
  5224 00002B99 0F84EA2D0100            	je L_error_fvar_undefined
  5225 00002B9F 803804                  	cmp byte [rax], T_closure
  5226 00002BA2 0F85652E0100            	jne L_error_non_closure
  5227 00002BA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5228 00002BAB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5229 00002BAE 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  5230 00002BB4 7566                    	jne .L_or_end_0002; if its not false (true) then we need to return it and not the last element
  5231                                  	; preparing a tail-call
  5232 00002BB6 488B4520                	mov rax, PARAM(0)	; param q
  5233 00002BBA 50                      	push rax
  5234 00002BBB 6A01                    	push 1	; arg count
  5235 00002BBD 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
  5236 00002BC5 803805                  	cmp byte [rax], T_undefined
  5237 00002BC8 0F84BB2D0100            	je L_error_fvar_undefined
  5238 00002BCE 803804                  	cmp byte [rax], T_closure
  5239 00002BD1 0F85362E0100            	jne L_error_non_closure
  5240 00002BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5241 00002BDA FF7508                  	push qword [rbp + 8 * 1]
  5242                                   ; old ret addr
  5243 00002BDD FF7500                  	push qword [rbp]
  5244                                   ; restore the old rbp
  5245 00002BE0 BB01000000              	mov rbx, 1
  5246 00002BE5 4883C303                	add rbx, 3
  5247 00002BE9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5248 00002BED 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5249 00002BF2 4C8D4DF8                	lea r9, [rbp - 8]
  5250 00002BF6 B905000000              	mov rcx, 5
  5251                                  .L_tc_recycle_frame_loop_001e:
  5252 00002BFB 4883F900                	cmp rcx, 0
  5253 00002BFF 7413                    	je .L_tc_recycle_frame_done_001e
  5254 00002C01 4D8B11                  	mov r10, qword [r9]
  5255 00002C04 4D8910                  	mov qword [r8], r10
  5256 00002C07 4983E808                	sub r8, 8
  5257 00002C0B 4983E908                	sub r9, 8
  5258 00002C0F 48FFC9                  	dec rcx
  5259 00002C12 EBE7                    	jmp .L_tc_recycle_frame_loop_001e
  5260                                  .L_tc_recycle_frame_done_001e:
  5261 00002C14 498D6008                	lea rsp, [r8 + 8]
  5262 00002C18 5D                      	pop rbp ; restore the old rbp
  5263 00002C19 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5264                                  .L_or_end_0002:
  5265 00002C1C C9                      	leave
  5266 00002C1D C21800                  	ret AND_KILL_FRAME(1)
  5267                                  .L_lambda_simple_end_001f:	; new closure is in rax
  5268 00002C20 48890425[60150000]      	mov qword [free_var_114], rax
  5269 00002C28 48B8-                   	mov rax, sob_void
  5269 00002C2A [0000000000000000] 
  5270                                  
  5271 00002C32 4889C7                  	mov rdi, rax
  5272 00002C35 E8D1300100              	call print_sexpr_if_not_void
  5273                                  	; preparing a non-tail-call
  5274 00002C3A 48B8-                   	mov rax, L_constants + 1993
  5274 00002C3C [C907000000000000] 
  5275 00002C44 50                      	push rax
  5276 00002C45 6A01                    	push 1	; arg count
  5277 00002C47 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5278 00002C4C E8652E0100              	call malloc
  5279 00002C51 50                      	push rax
  5280 00002C52 BF00000000              	mov rdi, 8 * 0	; new rib
  5281 00002C57 E85A2E0100              	call malloc
  5282 00002C5C 50                      	push rax
  5283 00002C5D BF08000000              	mov rdi, 8 * 1	; extended env
  5284 00002C62 E84F2E0100              	call malloc
  5285 00002C67 488B7D10                	mov rdi, ENV
  5286 00002C6B BE00000000              	mov rsi, 0
  5287 00002C70 BA01000000              	mov rdx, 1
  5288                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  5289 00002C75 4883FE00                	cmp rsi, 0
  5290 00002C79 7410                    	je .L_lambda_simple_env_end_0020
  5291 00002C7B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5292 00002C7F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5293 00002C83 48FFC6                  	inc rsi
  5294 00002C86 48FFC2                  	inc rdx
  5295 00002C89 EBEA                    	jmp .L_lambda_simple_env_loop_0020
  5296                                  .L_lambda_simple_env_end_0020:
  5297 00002C8B 5B                      	pop rbx
  5298 00002C8C BE00000000              	mov rsi, 0
  5299                                  .L_lambda_simple_params_loop_0020:	; copy params
  5300 00002C91 4883FE00                	cmp rsi, 0
  5301 00002C95 740E                    	je .L_lambda_simple_params_end_0020
  5302 00002C97 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5303 00002C9C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5304 00002CA0 48FFC6                  	inc rsi
  5305 00002CA3 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  5306                                  .L_lambda_simple_params_end_0020:
  5307 00002CA5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5308 00002CA8 4889C3                  	mov rbx, rax
  5309 00002CAB 58                      	pop rax
  5310 00002CAC C60004                  	mov byte [rax], T_closure
  5311 00002CAF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5312 00002CB3 48C74009[C02C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  5313 00002CBB E9BF030000              	jmp .L_lambda_simple_end_0020
  5314                                  .L_lambda_simple_code_0020:	; lambda-simple body
  5315 00002CC0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5316 00002CC6 740B                    	je .L_lambda_simple_arity_check_ok_0020
  5317 00002CC8 FF742410                	push qword [rsp + 8 * 2]
  5318 00002CCC 6A01                    	push 1
  5319 00002CCE E99C2D0100              	jmp L_error_incorrect_arity_simple
  5320                                  .L_lambda_simple_arity_check_ok_0020:
  5321 00002CD3 C8000000                	enter 0, 0
  5322 00002CD7 BF08000000              	mov rdi, 8*1
  5323 00002CDC E8D52D0100              	call malloc
  5324 00002CE1 488B5D20                	mov rbx, PARAM(0)
  5325 00002CE5 488918                  	mov qword [rax], rbx
  5326 00002CE8 48894520                	mov PARAM(0), rax
  5327 00002CEC 48B8-                   	mov rax, sob_void
  5327 00002CEE [0000000000000000] 
  5328                                  
  5329 00002CF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5330 00002CFB E8B62D0100              	call malloc
  5331 00002D00 50                      	push rax
  5332 00002D01 BF08000000              	mov rdi, 8 * 1	; new rib
  5333 00002D06 E8AB2D0100              	call malloc
  5334 00002D0B 50                      	push rax
  5335 00002D0C BF10000000              	mov rdi, 8 * 2	; extended env
  5336 00002D11 E8A02D0100              	call malloc
  5337 00002D16 488B7D10                	mov rdi, ENV
  5338 00002D1A BE00000000              	mov rsi, 0
  5339 00002D1F BA01000000              	mov rdx, 1
  5340                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  5341 00002D24 4883FE01                	cmp rsi, 1
  5342 00002D28 7410                    	je .L_lambda_simple_env_end_0021
  5343 00002D2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5344 00002D2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5345 00002D32 48FFC6                  	inc rsi
  5346 00002D35 48FFC2                  	inc rdx
  5347 00002D38 EBEA                    	jmp .L_lambda_simple_env_loop_0021
  5348                                  .L_lambda_simple_env_end_0021:
  5349 00002D3A 5B                      	pop rbx
  5350 00002D3B BE00000000              	mov rsi, 0
  5351                                  .L_lambda_simple_params_loop_0021:	; copy params
  5352 00002D40 4883FE01                	cmp rsi, 1
  5353 00002D44 740E                    	je .L_lambda_simple_params_end_0021
  5354 00002D46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5355 00002D4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5356 00002D4F 48FFC6                  	inc rsi
  5357 00002D52 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  5358                                  .L_lambda_simple_params_end_0021:
  5359 00002D54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5360 00002D57 4889C3                  	mov rbx, rax
  5361 00002D5A 58                      	pop rax
  5362 00002D5B C60004                  	mov byte [rax], T_closure
  5363 00002D5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5364 00002D62 48C74009[6F2D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  5365 00002D6A E928010000              	jmp .L_lambda_simple_end_0021
  5366                                  .L_lambda_simple_code_0021:	; lambda-simple body
  5367 00002D6F 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5368 00002D75 740B                    	je .L_lambda_simple_arity_check_ok_0021
  5369 00002D77 FF742410                	push qword [rsp + 8 * 2]
  5370 00002D7B 6A02                    	push 2
  5371 00002D7D E9ED2C0100              	jmp L_error_incorrect_arity_simple
  5372                                  .L_lambda_simple_arity_check_ok_0021:
  5373 00002D82 C8000000                	enter 0, 0
  5374                                  	; preparing a non-tail-call
  5375 00002D86 488B4528                	mov rax, PARAM(1)	; param s
  5376 00002D8A 50                      	push rax
  5377 00002D8B 6A01                    	push 1	; arg count
  5378 00002D8D 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  5379 00002D95 803805                  	cmp byte [rax], T_undefined
  5380 00002D98 0F84EB2B0100            	je L_error_fvar_undefined
  5381 00002D9E 803804                  	cmp byte [rax], T_closure
  5382 00002DA1 0F85662C0100            	jne L_error_non_closure
  5383 00002DA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5384 00002DAA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5385 00002DAD 483D[02000000]          	cmp rax, sob_boolean_false
  5386 00002DB3 7409                    	je .L_if_else_0003
  5387 00002DB5 488B4520                	mov rax, PARAM(0)	; param a
  5388 00002DB9 E9D5000000              	jmp .L_if_end_0003
  5389                                  .L_if_else_0003:
  5390                                  	; preparing a tail-call
  5391                                  	; preparing a non-tail-call
  5392                                  	; preparing a non-tail-call
  5393 00002DBE 488B4528                	mov rax, PARAM(1)	; param s
  5394 00002DC2 50                      	push rax
  5395 00002DC3 6A01                    	push 1	; arg count
  5396 00002DC5 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  5397 00002DCD 803805                  	cmp byte [rax], T_undefined
  5398 00002DD0 0F84B32B0100            	je L_error_fvar_undefined
  5399 00002DD6 803804                  	cmp byte [rax], T_closure
  5400 00002DD9 0F852E2C0100            	jne L_error_non_closure
  5401 00002DDF FF7001                  	push SOB_CLOSURE_ENV(rax)
  5402 00002DE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5403 00002DE5 50                      	push rax
  5404                                  	; preparing a non-tail-call
  5405 00002DE6 488B4528                	mov rax, PARAM(1)	; param s
  5406 00002DEA 50                      	push rax
  5407 00002DEB 6A01                    	push 1	; arg count
  5408 00002DED 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  5409 00002DF5 803805                  	cmp byte [rax], T_undefined
  5410 00002DF8 0F848B2B0100            	je L_error_fvar_undefined
  5411 00002DFE 803804                  	cmp byte [rax], T_closure
  5412 00002E01 0F85062C0100            	jne L_error_non_closure
  5413 00002E07 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5414 00002E0A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5415 00002E0D 50                      	push rax
  5416 00002E0E 6A02                    	push 2	; arg count
  5417 00002E10 488B4510                	mov rax, ENV
  5418 00002E14 488B00                  	mov rax, qword [rax + 8 * 0]
  5419 00002E17 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5420 00002E1A 488B00                  	mov rax, qword [rax]
  5421 00002E1D 803804                  	cmp byte [rax], T_closure
  5422 00002E20 0F85E72B0100            	jne L_error_non_closure
  5423 00002E26 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5424 00002E29 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5425 00002E2C 50                      	push rax
  5426 00002E2D 488B4520                	mov rax, PARAM(0)	; param a
  5427 00002E31 50                      	push rax
  5428 00002E32 6A02                    	push 2	; arg count
  5429 00002E34 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  5430 00002E3C 803805                  	cmp byte [rax], T_undefined
  5431 00002E3F 0F84442B0100            	je L_error_fvar_undefined
  5432 00002E45 803804                  	cmp byte [rax], T_closure
  5433 00002E48 0F85BF2B0100            	jne L_error_non_closure
  5434 00002E4E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5435 00002E51 FF7508                  	push qword [rbp + 8 * 1]
  5436                                   ; old ret addr
  5437 00002E54 FF7500                  	push qword [rbp]
  5438                                   ; restore the old rbp
  5439 00002E57 BB02000000              	mov rbx, 2
  5440 00002E5C 4883C303                	add rbx, 3
  5441 00002E60 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5442 00002E64 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5443 00002E69 4C8D4DF8                	lea r9, [rbp - 8]
  5444 00002E6D B906000000              	mov rcx, 6
  5445                                  .L_tc_recycle_frame_loop_001f:
  5446 00002E72 4883F900                	cmp rcx, 0
  5447 00002E76 7413                    	je .L_tc_recycle_frame_done_001f
  5448 00002E78 4D8B11                  	mov r10, qword [r9]
  5449 00002E7B 4D8910                  	mov qword [r8], r10
  5450 00002E7E 4983E808                	sub r8, 8
  5451 00002E82 4983E908                	sub r9, 8
  5452 00002E86 48FFC9                  	dec rcx
  5453 00002E89 EBE7                    	jmp .L_tc_recycle_frame_loop_001f
  5454                                  .L_tc_recycle_frame_done_001f:
  5455 00002E8B 498D6008                	lea rsp, [r8 + 8]
  5456 00002E8F 5D                      	pop rbp ; restore the old rbp
  5457 00002E90 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5458                                  .L_if_end_0003:
  5459 00002E93 C9                      	leave
  5460 00002E94 C22000                  	ret AND_KILL_FRAME(2)
  5461                                  .L_lambda_simple_end_0021:	; new closure is in rax
  5462 00002E97 50                      	push rax
  5463 00002E98 488B4520                	mov rax, PARAM(0)	; param run
  5464 00002E9C 8F00                    	pop qword [rax]
  5465 00002E9E 48B8-                   	mov rax, sob_void
  5465 00002EA0 [0000000000000000] 
  5466                                  
  5467 00002EA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5468 00002EAD E8042C0100              	call malloc
  5469 00002EB2 50                      	push rax
  5470 00002EB3 BF08000000              	mov rdi, 8 * 1	; new rib
  5471 00002EB8 E8F92B0100              	call malloc
  5472 00002EBD 50                      	push rax
  5473 00002EBE BF10000000              	mov rdi, 8 * 2	; extended env
  5474 00002EC3 E8EE2B0100              	call malloc
  5475 00002EC8 488B7D10                	mov rdi, ENV
  5476 00002ECC 4831F6                  	 xor rsi, rsi
  5477 00002ECF 4831D2                  	 xor rdx, rdx
  5478 00002ED2 48FFC2                  	inc rdx
  5479                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  5480 00002ED5 4883FE01                	cmp rsi, 1
  5481 00002ED9 7410                    	je .L_lambda_opt_env_end_0002
  5482 00002EDB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5483 00002EDF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5484 00002EE3 48FFC6                  	inc rsi
  5485 00002EE6 48FFC2                  	inc rdx
  5486 00002EE9 EBEA                    	jmp .L_lambda_opt_env_loop_0002
  5487                                  .L_lambda_opt_env_end_0002:
  5488 00002EEB 5B                      	pop rbx
  5489 00002EEC 4831F6                  	xor rsi, rsi
  5490                                  .L_lambda_opt_params_loop_0002:	; copy params
  5491 00002EEF 4883FE01                	cmp rsi, 1
  5492 00002EF3 740E                    	je .L_lambda_opt_params_end_0002
  5493 00002EF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5494 00002EFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5495 00002EFE 48FFC6                  	inc rsi
  5496 00002F01 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  5497                                  .L_lambda_opt_params_end_0002:
  5498 00002F03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5499 00002F06 4889C3                  	mov rbx, rax
  5500 00002F09 58                      	pop rax
  5501 00002F0A C60004                  	mov byte [rax], T_closure
  5502 00002F0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5503 00002F11 48C74009[1E2F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5504 00002F19 E95D010000              	jmp .L_lambda_opt_end_0002
  5505                                  .L_lambda_opt_code_0002:; lambda opt body
  5506 00002F1E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5507 00002F24 7409                    	je .L_lambda_opt_arity_check_exact_0002
  5508 00002F26 7F57                    	jg .L_lambda_opt_arity_check_more_0002
  5509 00002F28 6A01                    	push 1
  5510 00002F2A E9542B0100              	jmp L_error_incorrect_arity_opt
  5511                                  .L_lambda_opt_arity_check_exact_0002:
  5512 00002F2F 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  5513 00002F33 4C894C24F8              	mov qword [rsp -8], r9
  5514 00002F38 4C8B4C2408              	mov r9, qword [rsp +8]
  5515 00002F3D 4C890C24                	mov qword [rsp +8 * 0], r9
  5516 00002F41 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  5517 00002F46 4C89C9                  	mov rcx, r9
  5518 00002F49 49FFC1                  	inc r9
  5519 00002F4C 4C894C2408              	mov qword [rsp +8], r9
  5520 00002F51 4889E2                  	mov rdx, rsp
  5521 00002F54 4883C218                	add rdx, 24
  5522                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0002:
  5523 00002F58 4883F900                	cmp rcx, 0
  5524 00002F5C 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0002
  5525 00002F5E 4C8B02                  	mov r8, qword [rdx]
  5526 00002F61 4C8942F8                	mov qword [rdx - 8], r8
  5527 00002F65 4883C208                	add rdx, 8
  5528 00002F69 48FFC9                  	dec rcx
  5529 00002F6C EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0002
  5530                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0002:
  5531 00002F6E 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5532 00002F76 4883EC08                	sub rsp, 8
  5533 00002F7A E984000000              	jmp .L_lambda_opt_stack_adjusted_0002
  5534                                  .L_lambda_opt_arity_check_more_0002:
  5535 00002F7F 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5536 00002F84 4D89C4                  	mov r12, r8
  5537 00002F87 4C89C1                  	mov rcx, r8
  5538 00002F8A 4D8D5002                	lea r10, [r8 + 2] 
  5539 00002F8E 4883E901                	sub rcx, 1
  5540 00002F92 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  5541 00002F97 49B9-                   	mov r9, sob_nil
  5541 00002F99 [0100000000000000] 
  5542                                  .L_lambda_opt_create_list_of_opt_params_0002:
  5543 00002FA1 4883F900                	cmp rcx, 0
  5544 00002FA5 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0002
  5545 00002FA7 BF11000000              	mov rdi, 17
  5546 00002FAC E8052B0100              	call malloc
  5547 00002FB1 C60021                  	mov byte [rax], T_pair
  5548 00002FB4 498B1B                  	mov rbx, qword [r11]
  5549 00002FB7 48895801                	mov qword [rax +1], rbx
  5550 00002FBB 4C894809                	mov qword [rax + 1 + 8], r9
  5551 00002FBF 4989C1                  	mov r9, rax
  5552 00002FC2 48FFC9                  	dec rcx
  5553 00002FC5 4983EB08                	sub r11, 8
  5554 00002FC9 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0002
  5555                                  .L_lambda_opt_create_list_of_opt_params_end_0002:
  5556 00002FCB 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  5557 00002FD0 4D8908                  	mov qword [r8], r9
  5558 00002FD3 4E8D14D500000000        	lea r10, [8 * r10]
  5559 00002FDB 4901E2                  	add r10, rsp
  5560 00002FDE B905000000              	mov rcx, 4 + 1
  5561                                  .L_lambda_opt_stack_shrink_loop_0002:
  5562 00002FE3 4883F900                	cmp rcx, 0
  5563 00002FE7 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0002
  5564 00002FE9 4D8B18                  	mov r11, qword [r8]
  5565 00002FEC 4D891A                  	mov qword [r10], r11
  5566 00002FEF 4983E808                	sub r8, 8
  5567 00002FF3 4983EA08                	sub r10, 8
  5568 00002FF7 48FFC9                  	dec rcx
  5569 00002FFA EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5570                                  .L_lambda_opt_stack_shrink_loop_exit_0002:
  5571 00002FFC 4983C208                	add r10, 8
  5572 00003000 4C89D4                  	mov rsp, r10
  5573                                  .L_lambda_opt_stack_adjusted_0002:;continue with the code, the stack is ok
  5574 00003003 48C744241002000000      	mov qword [rsp + 8*2], 2
  5575 0000300C C8000000                	enter 0, 0
  5576                                  	; preparing a tail-call
  5577 00003010 488B4528                	mov rax, PARAM(1)	; param s
  5578 00003014 50                      	push rax
  5579 00003015 488B4520                	mov rax, PARAM(0)	; param a
  5580 00003019 50                      	push rax
  5581 0000301A 6A02                    	push 2	; arg count
  5582 0000301C 488B4510                	mov rax, ENV
  5583 00003020 488B00                  	mov rax, qword [rax + 8 * 0]
  5584 00003023 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5585 00003026 488B00                  	mov rax, qword [rax]
  5586 00003029 803804                  	cmp byte [rax], T_closure
  5587 0000302C 0F85DB290100            	jne L_error_non_closure
  5588 00003032 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5589 00003035 FF7508                  	push qword [rbp + 8 * 1]
  5590                                   ; old ret addr
  5591 00003038 FF7500                  	push qword [rbp]
  5592                                   ; restore the old rbp
  5593 0000303B BB02000000              	mov rbx, 2
  5594 00003040 4883C303                	add rbx, 3
  5595 00003044 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5596 00003048 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5597 0000304D 4C8D4DF8                	lea r9, [rbp - 8]
  5598 00003051 B906000000              	mov rcx, 6
  5599                                  .L_tc_recycle_frame_loop_0020:
  5600 00003056 4883F900                	cmp rcx, 0
  5601 0000305A 7413                    	je .L_tc_recycle_frame_done_0020
  5602 0000305C 4D8B11                  	mov r10, qword [r9]
  5603 0000305F 4D8910                  	mov qword [r8], r10
  5604 00003062 4983E808                	sub r8, 8
  5605 00003066 4983E908                	sub r9, 8
  5606 0000306A 48FFC9                  	dec rcx
  5607 0000306D EBE7                    	jmp .L_tc_recycle_frame_loop_0020
  5608                                  .L_tc_recycle_frame_done_0020:
  5609 0000306F 498D6008                	lea rsp, [r8 + 8]
  5610 00003073 5D                      	pop rbp ; restore the old rbp
  5611 00003074 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5612 00003077 C9                      	leave
  5613 00003078 C22000                  	ret 8 * (2 + 2)
  5614                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5615 0000307B C9                      	leave
  5616 0000307C C21800                  	ret AND_KILL_FRAME(1)
  5617                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5618 0000307F 803804                  	cmp byte [rax], T_closure
  5619 00003082 0F8585290100            	jne L_error_non_closure
  5620 00003088 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5621 0000308B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5622 0000308E 48890425[FB130000]      	mov qword [free_var_93], rax
  5623 00003096 48B8-                   	mov rax, sob_void
  5623 00003098 [0000000000000000] 
  5624                                  
  5625 000030A0 4889C7                  	mov rdi, rax
  5626 000030A3 E8632C0100              	call print_sexpr_if_not_void
  5627                                  	; preparing a non-tail-call
  5628 000030A8 48B8-                   	mov rax, L_constants + 1993
  5628 000030AA [C907000000000000] 
  5629 000030B2 50                      	push rax
  5630 000030B3 6A01                    	push 1	; arg count
  5631 000030B5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5632 000030BA E8F7290100              	call malloc
  5633 000030BF 50                      	push rax
  5634 000030C0 BF00000000              	mov rdi, 8 * 0	; new rib
  5635 000030C5 E8EC290100              	call malloc
  5636 000030CA 50                      	push rax
  5637 000030CB BF08000000              	mov rdi, 8 * 1	; extended env
  5638 000030D0 E8E1290100              	call malloc
  5639 000030D5 488B7D10                	mov rdi, ENV
  5640 000030D9 BE00000000              	mov rsi, 0
  5641 000030DE BA01000000              	mov rdx, 1
  5642                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5643 000030E3 4883FE00                	cmp rsi, 0
  5644 000030E7 7410                    	je .L_lambda_simple_env_end_0022
  5645 000030E9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5646 000030ED 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5647 000030F1 48FFC6                  	inc rsi
  5648 000030F4 48FFC2                  	inc rdx
  5649 000030F7 EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5650                                  .L_lambda_simple_env_end_0022:
  5651 000030F9 5B                      	pop rbx
  5652 000030FA BE00000000              	mov rsi, 0
  5653                                  .L_lambda_simple_params_loop_0022:	; copy params
  5654 000030FF 4883FE00                	cmp rsi, 0
  5655 00003103 740E                    	je .L_lambda_simple_params_end_0022
  5656 00003105 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5657 0000310A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5658 0000310E 48FFC6                  	inc rsi
  5659 00003111 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5660                                  .L_lambda_simple_params_end_0022:
  5661 00003113 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5662 00003116 4889C3                  	mov rbx, rax
  5663 00003119 58                      	pop rax
  5664 0000311A C60004                  	mov byte [rax], T_closure
  5665 0000311D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5666 00003121 48C74009[2E310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5667 00003129 E92E040000              	jmp .L_lambda_simple_end_0022
  5668                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5669 0000312E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5670 00003134 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5671 00003136 FF742410                	push qword [rsp + 8 * 2]
  5672 0000313A 6A01                    	push 1
  5673 0000313C E92E290100              	jmp L_error_incorrect_arity_simple
  5674                                  .L_lambda_simple_arity_check_ok_0022:
  5675 00003141 C8000000                	enter 0, 0
  5676 00003145 BF08000000              	mov rdi, 8*1
  5677 0000314A E867290100              	call malloc
  5678 0000314F 488B5D20                	mov rbx, PARAM(0)
  5679 00003153 488918                  	mov qword [rax], rbx
  5680 00003156 48894520                	mov PARAM(0), rax
  5681 0000315A 48B8-                   	mov rax, sob_void
  5681 0000315C [0000000000000000] 
  5682                                  
  5683 00003164 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5684 00003169 E848290100              	call malloc
  5685 0000316E 50                      	push rax
  5686 0000316F BF08000000              	mov rdi, 8 * 1	; new rib
  5687 00003174 E83D290100              	call malloc
  5688 00003179 50                      	push rax
  5689 0000317A BF10000000              	mov rdi, 8 * 2	; extended env
  5690 0000317F E832290100              	call malloc
  5691 00003184 488B7D10                	mov rdi, ENV
  5692 00003188 BE00000000              	mov rsi, 0
  5693 0000318D BA01000000              	mov rdx, 1
  5694                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5695 00003192 4883FE01                	cmp rsi, 1
  5696 00003196 7410                    	je .L_lambda_simple_env_end_0023
  5697 00003198 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5698 0000319C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5699 000031A0 48FFC6                  	inc rsi
  5700 000031A3 48FFC2                  	inc rdx
  5701 000031A6 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5702                                  .L_lambda_simple_env_end_0023:
  5703 000031A8 5B                      	pop rbx
  5704 000031A9 BE00000000              	mov rsi, 0
  5705                                  .L_lambda_simple_params_loop_0023:	; copy params
  5706 000031AE 4883FE01                	cmp rsi, 1
  5707 000031B2 740E                    	je .L_lambda_simple_params_end_0023
  5708 000031B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5709 000031B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5710 000031BD 48FFC6                  	inc rsi
  5711 000031C0 EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5712                                  .L_lambda_simple_params_end_0023:
  5713 000031C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5714 000031C5 4889C3                  	mov rbx, rax
  5715 000031C8 58                      	pop rax
  5716 000031C9 C60004                  	mov byte [rax], T_closure
  5717 000031CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5718 000031D0 48C74009[DD310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5719 000031D8 E929010000              	jmp .L_lambda_simple_end_0023
  5720                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5721 000031DD 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5722 000031E3 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5723 000031E5 FF742410                	push qword [rsp + 8 * 2]
  5724 000031E9 6A02                    	push 2
  5725 000031EB E97F280100              	jmp L_error_incorrect_arity_simple
  5726                                  .L_lambda_simple_arity_check_ok_0023:
  5727 000031F0 C8000000                	enter 0, 0
  5728                                  	; preparing a non-tail-call
  5729 000031F4 488B4528                	mov rax, PARAM(1)	; param s
  5730 000031F8 50                      	push rax
  5731 000031F9 6A01                    	push 1	; arg count
  5732 000031FB 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
  5733 00003203 803805                  	cmp byte [rax], T_undefined
  5734 00003206 0F847D270100            	je L_error_fvar_undefined
  5735 0000320C 803804                  	cmp byte [rax], T_closure
  5736 0000320F 0F85F8270100            	jne L_error_non_closure
  5737 00003215 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5738 00003218 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5739 0000321B 483D[02000000]          	cmp rax, sob_boolean_false
  5740 00003221 0F84D7000000            	je .L_if_else_0004
  5741                                  	; preparing a tail-call
  5742                                  	; preparing a non-tail-call
  5743                                  	; preparing a non-tail-call
  5744 00003227 488B4528                	mov rax, PARAM(1)	; param s
  5745 0000322B 50                      	push rax
  5746 0000322C 6A01                    	push 1	; arg count
  5747 0000322E 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  5748 00003236 803805                  	cmp byte [rax], T_undefined
  5749 00003239 0F844A270100            	je L_error_fvar_undefined
  5750 0000323F 803804                  	cmp byte [rax], T_closure
  5751 00003242 0F85C5270100            	jne L_error_non_closure
  5752 00003248 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5753 0000324B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5754 0000324E 50                      	push rax
  5755                                  	; preparing a non-tail-call
  5756 0000324F 488B4528                	mov rax, PARAM(1)	; param s
  5757 00003253 50                      	push rax
  5758 00003254 6A01                    	push 1	; arg count
  5759 00003256 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  5760 0000325E 803805                  	cmp byte [rax], T_undefined
  5761 00003261 0F8422270100            	je L_error_fvar_undefined
  5762 00003267 803804                  	cmp byte [rax], T_closure
  5763 0000326A 0F859D270100            	jne L_error_non_closure
  5764 00003270 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5765 00003273 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5766 00003276 50                      	push rax
  5767 00003277 6A02                    	push 2	; arg count
  5768 00003279 488B4510                	mov rax, ENV
  5769 0000327D 488B00                  	mov rax, qword [rax + 8 * 0]
  5770 00003280 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5771 00003283 488B00                  	mov rax, qword [rax]
  5772 00003286 803804                  	cmp byte [rax], T_closure
  5773 00003289 0F857E270100            	jne L_error_non_closure
  5774 0000328F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5775 00003292 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5776 00003295 50                      	push rax
  5777 00003296 488B4520                	mov rax, PARAM(0)	; param a
  5778 0000329A 50                      	push rax
  5779 0000329B 6A02                    	push 2	; arg count
  5780 0000329D 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  5781 000032A5 803805                  	cmp byte [rax], T_undefined
  5782 000032A8 0F84DB260100            	je L_error_fvar_undefined
  5783 000032AE 803804                  	cmp byte [rax], T_closure
  5784 000032B1 0F8556270100            	jne L_error_non_closure
  5785 000032B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5786 000032BA FF7508                  	push qword [rbp + 8 * 1]
  5787                                   ; old ret addr
  5788 000032BD FF7500                  	push qword [rbp]
  5789                                   ; restore the old rbp
  5790 000032C0 BB02000000              	mov rbx, 2
  5791 000032C5 4883C303                	add rbx, 3
  5792 000032C9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5793 000032CD 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5794 000032D2 4C8D4DF8                	lea r9, [rbp - 8]
  5795 000032D6 B906000000              	mov rcx, 6
  5796                                  .L_tc_recycle_frame_loop_0021:
  5797 000032DB 4883F900                	cmp rcx, 0
  5798 000032DF 7413                    	je .L_tc_recycle_frame_done_0021
  5799 000032E1 4D8B11                  	mov r10, qword [r9]
  5800 000032E4 4D8910                  	mov qword [r8], r10
  5801 000032E7 4983E808                	sub r8, 8
  5802 000032EB 4983E908                	sub r9, 8
  5803 000032EF 48FFC9                  	dec rcx
  5804 000032F2 EBE7                    	jmp .L_tc_recycle_frame_loop_0021
  5805                                  .L_tc_recycle_frame_done_0021:
  5806 000032F4 498D6008                	lea rsp, [r8 + 8]
  5807 000032F8 5D                      	pop rbp ; restore the old rbp
  5808 000032F9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5809 000032FC EB04                    	jmp .L_if_end_0004
  5810                                  .L_if_else_0004:
  5811 000032FE 488B4520                	mov rax, PARAM(0)	; param a
  5812                                  .L_if_end_0004:
  5813 00003302 C9                      	leave
  5814 00003303 C22000                  	ret AND_KILL_FRAME(2)
  5815                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5816 00003306 50                      	push rax
  5817 00003307 488B4520                	mov rax, PARAM(0)	; param run
  5818 0000330B 8F00                    	pop qword [rax]
  5819 0000330D 48B8-                   	mov rax, sob_void
  5819 0000330F [0000000000000000] 
  5820                                  
  5821 00003317 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5822 0000331C E895270100              	call malloc
  5823 00003321 50                      	push rax
  5824 00003322 BF08000000              	mov rdi, 8 * 1	; new rib
  5825 00003327 E88A270100              	call malloc
  5826 0000332C 50                      	push rax
  5827 0000332D BF10000000              	mov rdi, 8 * 2	; extended env
  5828 00003332 E87F270100              	call malloc
  5829 00003337 488B7D10                	mov rdi, ENV
  5830 0000333B 4831F6                  	 xor rsi, rsi
  5831 0000333E 4831D2                  	 xor rdx, rdx
  5832 00003341 48FFC2                  	inc rdx
  5833                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5834 00003344 4883FE01                	cmp rsi, 1
  5835 00003348 7410                    	je .L_lambda_opt_env_end_0003
  5836 0000334A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5837 0000334E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5838 00003352 48FFC6                  	inc rsi
  5839 00003355 48FFC2                  	inc rdx
  5840 00003358 EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5841                                  .L_lambda_opt_env_end_0003:
  5842 0000335A 5B                      	pop rbx
  5843 0000335B 4831F6                  	xor rsi, rsi
  5844                                  .L_lambda_opt_params_loop_0003:	; copy params
  5845 0000335E 4883FE01                	cmp rsi, 1
  5846 00003362 740E                    	je .L_lambda_opt_params_end_0003
  5847 00003364 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5848 00003369 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5849 0000336D 48FFC6                  	inc rsi
  5850 00003370 EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5851                                  .L_lambda_opt_params_end_0003:
  5852 00003372 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5853 00003375 4889C3                  	mov rbx, rax
  5854 00003378 58                      	pop rax
  5855 00003379 C60004                  	mov byte [rax], T_closure
  5856 0000337C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5857 00003380 48C74009[8D330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5858 00003388 E9CB010000              	jmp .L_lambda_opt_end_0003
  5859                                  .L_lambda_opt_code_0003:; lambda opt body
  5860 0000338D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5861 00003393 7409                    	je .L_lambda_opt_arity_check_exact_0003
  5862 00003395 7F57                    	jg .L_lambda_opt_arity_check_more_0003
  5863 00003397 6A01                    	push 1
  5864 00003399 E9E5260100              	jmp L_error_incorrect_arity_opt
  5865                                  .L_lambda_opt_arity_check_exact_0003:
  5866 0000339E 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  5867 000033A2 4C894C24F8              	mov qword [rsp -8], r9
  5868 000033A7 4C8B4C2408              	mov r9, qword [rsp +8]
  5869 000033AC 4C890C24                	mov qword [rsp +8 * 0], r9
  5870 000033B0 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  5871 000033B5 4C89C9                  	mov rcx, r9
  5872 000033B8 49FFC1                  	inc r9
  5873 000033BB 4C894C2408              	mov qword [rsp +8], r9
  5874 000033C0 4889E2                  	mov rdx, rsp
  5875 000033C3 4883C218                	add rdx, 24
  5876                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0003:
  5877 000033C7 4883F900                	cmp rcx, 0
  5878 000033CB 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0003
  5879 000033CD 4C8B02                  	mov r8, qword [rdx]
  5880 000033D0 4C8942F8                	mov qword [rdx - 8], r8
  5881 000033D4 4883C208                	add rdx, 8
  5882 000033D8 48FFC9                  	dec rcx
  5883 000033DB EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0003
  5884                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0003:
  5885 000033DD 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5886 000033E5 4883EC08                	sub rsp, 8
  5887 000033E9 E984000000              	jmp .L_lambda_opt_stack_adjusted_0003
  5888                                  .L_lambda_opt_arity_check_more_0003:
  5889 000033EE 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5890 000033F3 4D89C4                  	mov r12, r8
  5891 000033F6 4C89C1                  	mov rcx, r8
  5892 000033F9 4D8D5002                	lea r10, [r8 + 2] 
  5893 000033FD 4883E901                	sub rcx, 1
  5894 00003401 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  5895 00003406 49B9-                   	mov r9, sob_nil
  5895 00003408 [0100000000000000] 
  5896                                  .L_lambda_opt_create_list_of_opt_params_0003:
  5897 00003410 4883F900                	cmp rcx, 0
  5898 00003414 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0003
  5899 00003416 BF11000000              	mov rdi, 17
  5900 0000341B E896260100              	call malloc
  5901 00003420 C60021                  	mov byte [rax], T_pair
  5902 00003423 498B1B                  	mov rbx, qword [r11]
  5903 00003426 48895801                	mov qword [rax +1], rbx
  5904 0000342A 4C894809                	mov qword [rax + 1 + 8], r9
  5905 0000342E 4989C1                  	mov r9, rax
  5906 00003431 48FFC9                  	dec rcx
  5907 00003434 4983EB08                	sub r11, 8
  5908 00003438 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0003
  5909                                  .L_lambda_opt_create_list_of_opt_params_end_0003:
  5910 0000343A 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  5911 0000343F 4D8908                  	mov qword [r8], r9
  5912 00003442 4E8D14D500000000        	lea r10, [8 * r10]
  5913 0000344A 4901E2                  	add r10, rsp
  5914 0000344D B905000000              	mov rcx, 4 + 1
  5915                                  .L_lambda_opt_stack_shrink_loop_0003:
  5916 00003452 4883F900                	cmp rcx, 0
  5917 00003456 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0003
  5918 00003458 4D8B18                  	mov r11, qword [r8]
  5919 0000345B 4D891A                  	mov qword [r10], r11
  5920 0000345E 4983E808                	sub r8, 8
  5921 00003462 4983EA08                	sub r10, 8
  5922 00003466 48FFC9                  	dec rcx
  5923 00003469 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5924                                  .L_lambda_opt_stack_shrink_loop_exit_0003:
  5925 0000346B 4983C208                	add r10, 8
  5926 0000346F 4C89D4                  	mov rsp, r10
  5927                                  .L_lambda_opt_stack_adjusted_0003:;continue with the code, the stack is ok
  5928 00003472 48C744241002000000      	mov qword [rsp + 8*2], 2
  5929 0000347B C8000000                	enter 0, 0
  5930                                  	; preparing a tail-call
  5931                                  	; preparing a non-tail-call
  5932                                  	; preparing a non-tail-call
  5933 0000347F 488B4528                	mov rax, PARAM(1)	; param s
  5934 00003483 50                      	push rax
  5935 00003484 6A01                    	push 1	; arg count
  5936 00003486 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  5937 0000348E 803805                  	cmp byte [rax], T_undefined
  5938 00003491 0F84F2240100            	je L_error_fvar_undefined
  5939 00003497 803804                  	cmp byte [rax], T_closure
  5940 0000349A 0F856D250100            	jne L_error_non_closure
  5941 000034A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5942 000034A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5943 000034A6 50                      	push rax
  5944                                  	; preparing a non-tail-call
  5945 000034A7 488B4528                	mov rax, PARAM(1)	; param s
  5946 000034AB 50                      	push rax
  5947 000034AC 6A01                    	push 1	; arg count
  5948 000034AE 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  5949 000034B6 803805                  	cmp byte [rax], T_undefined
  5950 000034B9 0F84CA240100            	je L_error_fvar_undefined
  5951 000034BF 803804                  	cmp byte [rax], T_closure
  5952 000034C2 0F8545250100            	jne L_error_non_closure
  5953 000034C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5954 000034CB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5955 000034CE 50                      	push rax
  5956 000034CF 6A02                    	push 2	; arg count
  5957 000034D1 488B4510                	mov rax, ENV
  5958 000034D5 488B00                  	mov rax, qword [rax + 8 * 0]
  5959 000034D8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5960 000034DB 488B00                  	mov rax, qword [rax]
  5961 000034DE 803804                  	cmp byte [rax], T_closure
  5962 000034E1 0F8526250100            	jne L_error_non_closure
  5963 000034E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5964 000034EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5965 000034ED 50                      	push rax
  5966 000034EE 488B4520                	mov rax, PARAM(0)	; param f
  5967 000034F2 50                      	push rax
  5968 000034F3 6A02                    	push 2	; arg count
  5969 000034F5 488B0425[9A0E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5970 000034FD 803805                  	cmp byte [rax], T_undefined
  5971 00003500 0F8483240100            	je L_error_fvar_undefined
  5972 00003506 803804                  	cmp byte [rax], T_closure
  5973 00003509 0F85FE240100            	jne L_error_non_closure
  5974 0000350F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5975 00003512 FF7508                  	push qword [rbp + 8 * 1]
  5976                                   ; old ret addr
  5977 00003515 FF7500                  	push qword [rbp]
  5978                                   ; restore the old rbp
  5979 00003518 BB02000000              	mov rbx, 2
  5980 0000351D 4883C303                	add rbx, 3
  5981 00003521 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  5982 00003525 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  5983 0000352A 4C8D4DF8                	lea r9, [rbp - 8]
  5984 0000352E B906000000              	mov rcx, 6
  5985                                  .L_tc_recycle_frame_loop_0022:
  5986 00003533 4883F900                	cmp rcx, 0
  5987 00003537 7413                    	je .L_tc_recycle_frame_done_0022
  5988 00003539 4D8B11                  	mov r10, qword [r9]
  5989 0000353C 4D8910                  	mov qword [r8], r10
  5990 0000353F 4983E808                	sub r8, 8
  5991 00003543 4983E908                	sub r9, 8
  5992 00003547 48FFC9                  	dec rcx
  5993 0000354A EBE7                    	jmp .L_tc_recycle_frame_loop_0022
  5994                                  .L_tc_recycle_frame_done_0022:
  5995 0000354C 498D6008                	lea rsp, [r8 + 8]
  5996 00003550 5D                      	pop rbp ; restore the old rbp
  5997 00003551 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5998 00003554 C9                      	leave
  5999 00003555 C22000                  	ret 8 * (2 + 2)
  6000                                  .L_lambda_opt_end_0003:	; new closure is in rax
  6001 00003558 C9                      	leave
  6002 00003559 C21800                  	ret AND_KILL_FRAME(1)
  6003                                  .L_lambda_simple_end_0022:	; new closure is in rax
  6004 0000355C 803804                  	cmp byte [rax], T_closure
  6005 0000355F 0F85A8240100            	jne L_error_non_closure
  6006 00003565 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6007 00003568 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6008 0000356B 48890425[FF0F0000]      	mov qword [free_var_33], rax
  6009 00003573 48B8-                   	mov rax, sob_void
  6009 00003575 [0000000000000000] 
  6010                                  
  6011 0000357D 4889C7                  	mov rdi, rax
  6012 00003580 E886270100              	call print_sexpr_if_not_void
  6013 00003585 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6014 0000358A E827250100              	call malloc
  6015 0000358F 50                      	push rax
  6016 00003590 BF00000000              	mov rdi, 8 * 0	; new rib
  6017 00003595 E81C250100              	call malloc
  6018 0000359A 50                      	push rax
  6019 0000359B BF08000000              	mov rdi, 8 * 1	; extended env
  6020 000035A0 E811250100              	call malloc
  6021 000035A5 488B7D10                	mov rdi, ENV
  6022 000035A9 4831F6                  	 xor rsi, rsi
  6023 000035AC 4831D2                  	 xor rdx, rdx
  6024 000035AF 48FFC2                  	inc rdx
  6025                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  6026 000035B2 4883FE00                	cmp rsi, 0
  6027 000035B6 7410                    	je .L_lambda_opt_env_end_0004
  6028 000035B8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6029 000035BC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6030 000035C0 48FFC6                  	inc rsi
  6031 000035C3 48FFC2                  	inc rdx
  6032 000035C6 EBEA                    	jmp .L_lambda_opt_env_loop_0004
  6033                                  .L_lambda_opt_env_end_0004:
  6034 000035C8 5B                      	pop rbx
  6035 000035C9 4831F6                  	xor rsi, rsi
  6036                                  .L_lambda_opt_params_loop_0004:	; copy params
  6037 000035CC 4883FE00                	cmp rsi, 0
  6038 000035D0 740E                    	je .L_lambda_opt_params_end_0004
  6039 000035D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6040 000035D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6041 000035DB 48FFC6                  	inc rsi
  6042 000035DE EBEC                    	jmp .L_lambda_opt_params_loop_0004
  6043                                  .L_lambda_opt_params_end_0004:
  6044 000035E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6045 000035E3 4889C3                  	mov rbx, rax
  6046 000035E6 58                      	pop rax
  6047 000035E7 C60004                  	mov byte [rax], T_closure
  6048 000035EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6049 000035EE 48C74009[FB350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  6050 000035F6 E9BB040000              	jmp .L_lambda_opt_end_0004
  6051                                  .L_lambda_opt_code_0004:; lambda opt body
  6052 000035FB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6053 00003601 7409                    	je .L_lambda_opt_arity_check_exact_0004
  6054 00003603 7F57                    	jg .L_lambda_opt_arity_check_more_0004
  6055 00003605 6A01                    	push 1
  6056 00003607 E977240100              	jmp L_error_incorrect_arity_opt
  6057                                  .L_lambda_opt_arity_check_exact_0004:
  6058 0000360C 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  6059 00003610 4C894C24F8              	mov qword [rsp -8], r9
  6060 00003615 4C8B4C2408              	mov r9, qword [rsp +8]
  6061 0000361A 4C890C24                	mov qword [rsp +8 * 0], r9
  6062 0000361E 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  6063 00003623 4C89C9                  	mov rcx, r9
  6064 00003626 49FFC1                  	inc r9
  6065 00003629 4C894C2408              	mov qword [rsp +8], r9
  6066 0000362E 4889E2                  	mov rdx, rsp
  6067 00003631 4883C218                	add rdx, 24
  6068                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0004:
  6069 00003635 4883F900                	cmp rcx, 0
  6070 00003639 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0004
  6071 0000363B 4C8B02                  	mov r8, qword [rdx]
  6072 0000363E 4C8942F8                	mov qword [rdx - 8], r8
  6073 00003642 4883C208                	add rdx, 8
  6074 00003646 48FFC9                  	dec rcx
  6075 00003649 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0004
  6076                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0004:
  6077 0000364B 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  6078 00003653 4883EC08                	sub rsp, 8
  6079 00003657 E984000000              	jmp .L_lambda_opt_stack_adjusted_0004
  6080                                  .L_lambda_opt_arity_check_more_0004:
  6081 0000365C 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6082 00003661 4D89C4                  	mov r12, r8
  6083 00003664 4C89C1                  	mov rcx, r8
  6084 00003667 4D8D5002                	lea r10, [r8 + 2] 
  6085 0000366B 4883E901                	sub rcx, 1
  6086 0000366F 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  6087 00003674 49B9-                   	mov r9, sob_nil
  6087 00003676 [0100000000000000] 
  6088                                  .L_lambda_opt_create_list_of_opt_params_0004:
  6089 0000367E 4883F900                	cmp rcx, 0
  6090 00003682 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0004
  6091 00003684 BF11000000              	mov rdi, 17
  6092 00003689 E828240100              	call malloc
  6093 0000368E C60021                  	mov byte [rax], T_pair
  6094 00003691 498B1B                  	mov rbx, qword [r11]
  6095 00003694 48895801                	mov qword [rax +1], rbx
  6096 00003698 4C894809                	mov qword [rax + 1 + 8], r9
  6097 0000369C 4989C1                  	mov r9, rax
  6098 0000369F 48FFC9                  	dec rcx
  6099 000036A2 4983EB08                	sub r11, 8
  6100 000036A6 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0004
  6101                                  .L_lambda_opt_create_list_of_opt_params_end_0004:
  6102 000036A8 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  6103 000036AD 4D8908                  	mov qword [r8], r9
  6104 000036B0 4E8D14D500000000        	lea r10, [8 * r10]
  6105 000036B8 4901E2                  	add r10, rsp
  6106 000036BB B905000000              	mov rcx, 4 + 1
  6107                                  .L_lambda_opt_stack_shrink_loop_0004:
  6108 000036C0 4883F900                	cmp rcx, 0
  6109 000036C4 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0004
  6110 000036C6 4D8B18                  	mov r11, qword [r8]
  6111 000036C9 4D891A                  	mov qword [r10], r11
  6112 000036CC 4983E808                	sub r8, 8
  6113 000036D0 4983EA08                	sub r10, 8
  6114 000036D4 48FFC9                  	dec rcx
  6115 000036D7 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6116                                  .L_lambda_opt_stack_shrink_loop_exit_0004:
  6117 000036D9 4983C208                	add r10, 8
  6118 000036DD 4C89D4                  	mov rsp, r10
  6119                                  .L_lambda_opt_stack_adjusted_0004:;continue with the code, the stack is ok
  6120 000036E0 48C744241002000000      	mov qword [rsp + 8*2], 2
  6121 000036E9 C8000000                	enter 0, 0
  6122                                  	; preparing a tail-call
  6123 000036ED 48B8-                   	mov rax, L_constants + 1993
  6123 000036EF [C907000000000000] 
  6124 000036F7 50                      	push rax
  6125 000036F8 6A01                    	push 1	; arg count
  6126 000036FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6127 000036FF E8B2230100              	call malloc
  6128 00003704 50                      	push rax
  6129 00003705 BF10000000              	mov rdi, 8 * 2	; new rib
  6130 0000370A E8A7230100              	call malloc
  6131 0000370F 50                      	push rax
  6132 00003710 BF10000000              	mov rdi, 8 * 2	; extended env
  6133 00003715 E89C230100              	call malloc
  6134 0000371A 488B7D10                	mov rdi, ENV
  6135 0000371E BE00000000              	mov rsi, 0
  6136 00003723 BA01000000              	mov rdx, 1
  6137                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  6138 00003728 4883FE01                	cmp rsi, 1
  6139 0000372C 7410                    	je .L_lambda_simple_env_end_0024
  6140 0000372E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6141 00003732 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6142 00003736 48FFC6                  	inc rsi
  6143 00003739 48FFC2                  	inc rdx
  6144 0000373C EBEA                    	jmp .L_lambda_simple_env_loop_0024
  6145                                  .L_lambda_simple_env_end_0024:
  6146 0000373E 5B                      	pop rbx
  6147 0000373F BE00000000              	mov rsi, 0
  6148                                  .L_lambda_simple_params_loop_0024:	; copy params
  6149 00003744 4883FE02                	cmp rsi, 2
  6150 00003748 740E                    	je .L_lambda_simple_params_end_0024
  6151 0000374A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6152 0000374F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6153 00003753 48FFC6                  	inc rsi
  6154 00003756 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  6155                                  .L_lambda_simple_params_end_0024:
  6156 00003758 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6157 0000375B 4889C3                  	mov rbx, rax
  6158 0000375E 58                      	pop rax
  6159 0000375F C60004                  	mov byte [rax], T_closure
  6160 00003762 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6161 00003766 48C74009[73370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  6162 0000376E E9F1020000              	jmp .L_lambda_simple_end_0024
  6163                                  .L_lambda_simple_code_0024:	; lambda-simple body
  6164 00003773 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6165 00003779 740B                    	je .L_lambda_simple_arity_check_ok_0024
  6166 0000377B FF742410                	push qword [rsp + 8 * 2]
  6167 0000377F 6A01                    	push 1
  6168 00003781 E9E9220100              	jmp L_error_incorrect_arity_simple
  6169                                  .L_lambda_simple_arity_check_ok_0024:
  6170 00003786 C8000000                	enter 0, 0
  6171 0000378A BF08000000              	mov rdi, 8*1
  6172 0000378F E822230100              	call malloc
  6173 00003794 488B5D20                	mov rbx, PARAM(0)
  6174 00003798 488918                  	mov qword [rax], rbx
  6175 0000379B 48894520                	mov PARAM(0), rax
  6176 0000379F 48B8-                   	mov rax, sob_void
  6176 000037A1 [0000000000000000] 
  6177                                  
  6178 000037A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6179 000037AE E803230100              	call malloc
  6180 000037B3 50                      	push rax
  6181 000037B4 BF08000000              	mov rdi, 8 * 1	; new rib
  6182 000037B9 E8F8220100              	call malloc
  6183 000037BE 50                      	push rax
  6184 000037BF BF18000000              	mov rdi, 8 * 3	; extended env
  6185 000037C4 E8ED220100              	call malloc
  6186 000037C9 488B7D10                	mov rdi, ENV
  6187 000037CD BE00000000              	mov rsi, 0
  6188 000037D2 BA01000000              	mov rdx, 1
  6189                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  6190 000037D7 4883FE02                	cmp rsi, 2
  6191 000037DB 7410                    	je .L_lambda_simple_env_end_0025
  6192 000037DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6193 000037E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6194 000037E5 48FFC6                  	inc rsi
  6195 000037E8 48FFC2                  	inc rdx
  6196 000037EB EBEA                    	jmp .L_lambda_simple_env_loop_0025
  6197                                  .L_lambda_simple_env_end_0025:
  6198 000037ED 5B                      	pop rbx
  6199 000037EE BE00000000              	mov rsi, 0
  6200                                  .L_lambda_simple_params_loop_0025:	; copy params
  6201 000037F3 4883FE01                	cmp rsi, 1
  6202 000037F7 740E                    	je .L_lambda_simple_params_end_0025
  6203 000037F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6204 000037FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6205 00003802 48FFC6                  	inc rsi
  6206 00003805 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  6207                                  .L_lambda_simple_params_end_0025:
  6208 00003807 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6209 0000380A 4889C3                  	mov rbx, rax
  6210 0000380D 58                      	pop rax
  6211 0000380E C60004                  	mov byte [rax], T_closure
  6212 00003811 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6213 00003815 48C74009[22380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  6214 0000381D E988010000              	jmp .L_lambda_simple_end_0025
  6215                                  .L_lambda_simple_code_0025:	; lambda-simple body
  6216 00003822 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6217 00003828 740B                    	je .L_lambda_simple_arity_check_ok_0025
  6218 0000382A FF742410                	push qword [rsp + 8 * 2]
  6219 0000382E 6A01                    	push 1
  6220 00003830 E93A220100              	jmp L_error_incorrect_arity_simple
  6221                                  .L_lambda_simple_arity_check_ok_0025:
  6222 00003835 C8000000                	enter 0, 0
  6223                                  	; preparing a non-tail-call
  6224                                  	; preparing a non-tail-call
  6225 00003839 488B4520                	mov rax, PARAM(0)	; param s
  6226 0000383D 50                      	push rax
  6227 0000383E 6A01                    	push 1	; arg count
  6228 00003840 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  6229 00003848 803805                  	cmp byte [rax], T_undefined
  6230 0000384B 0F8438210100            	je L_error_fvar_undefined
  6231 00003851 803804                  	cmp byte [rax], T_closure
  6232 00003854 0F85B3210100            	jne L_error_non_closure
  6233 0000385A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6234 0000385D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6235 00003860 50                      	push rax
  6236 00003861 6A01                    	push 1	; arg count
  6237 00003863 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
  6238 0000386B 803805                  	cmp byte [rax], T_undefined
  6239 0000386E 0F8415210100            	je L_error_fvar_undefined
  6240 00003874 803804                  	cmp byte [rax], T_closure
  6241 00003877 0F8590210100            	jne L_error_non_closure
  6242 0000387D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6243 00003880 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6244 00003883 483D[02000000]          	cmp rax, sob_boolean_false
  6245 00003889 0F840D010000            	je .L_if_else_0005
  6246                                  	; preparing a non-tail-call
  6247                                  	; preparing a non-tail-call
  6248 0000388F 488B4520                	mov rax, PARAM(0)	; param s
  6249 00003893 50                      	push rax
  6250 00003894 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  6251 0000389C 803805                  	cmp byte [rax], T_undefined
  6252 0000389F 0F84E4200100            	je L_error_fvar_undefined
  6253 000038A5 50                      	push rax
  6254 000038A6 6A02                    	push 2	; arg count
  6255 000038A8 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  6256 000038B0 803805                  	cmp byte [rax], T_undefined
  6257 000038B3 0F84D0200100            	je L_error_fvar_undefined
  6258 000038B9 803804                  	cmp byte [rax], T_closure
  6259 000038BC 0F854B210100            	jne L_error_non_closure
  6260 000038C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6261 000038C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6262 000038C8 50                      	push rax
  6263 000038C9 488B4510                	mov rax, ENV
  6264 000038CD 488B4008                	mov rax, qword [rax + 8 * 1]
  6265 000038D1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6266 000038D4 50                      	push rax
  6267 000038D5 6A02                    	push 2	; arg count
  6268 000038D7 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
  6269 000038DF 803805                  	cmp byte [rax], T_undefined
  6270 000038E2 0F84A1200100            	je L_error_fvar_undefined
  6271 000038E8 803804                  	cmp byte [rax], T_closure
  6272 000038EB 0F851C210100            	jne L_error_non_closure
  6273 000038F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6274 000038F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6275 000038F7 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  6276 000038FD 0F8597000000            	jne .L_or_end_0003; if its not false (true) then we need to return it and not the last element
  6277                                  	; preparing a tail-call
  6278                                  	; preparing a non-tail-call
  6279 00003903 488B4520                	mov rax, PARAM(0)	; param s
  6280 00003907 50                      	push rax
  6281 00003908 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  6282 00003910 803805                  	cmp byte [rax], T_undefined
  6283 00003913 0F8470200100            	je L_error_fvar_undefined
  6284 00003919 50                      	push rax
  6285 0000391A 6A02                    	push 2	; arg count
  6286 0000391C 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  6287 00003924 803805                  	cmp byte [rax], T_undefined
  6288 00003927 0F845C200100            	je L_error_fvar_undefined
  6289 0000392D 803804                  	cmp byte [rax], T_closure
  6290 00003930 0F85D7200100            	jne L_error_non_closure
  6291 00003936 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6292 00003939 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6293 0000393C 50                      	push rax
  6294 0000393D 6A01                    	push 1	; arg count
  6295 0000393F 488B4510                	mov rax, ENV
  6296 00003943 488B00                  	mov rax, qword [rax + 8 * 0]
  6297 00003946 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6298 00003949 488B00                  	mov rax, qword [rax]
  6299 0000394C 803804                  	cmp byte [rax], T_closure
  6300 0000394F 0F85B8200100            	jne L_error_non_closure
  6301 00003955 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6302 00003958 FF7508                  	push qword [rbp + 8 * 1]
  6303                                   ; old ret addr
  6304 0000395B FF7500                  	push qword [rbp]
  6305                                   ; restore the old rbp
  6306 0000395E BB01000000              	mov rbx, 1
  6307 00003963 4883C303                	add rbx, 3
  6308 00003967 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6309 0000396B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6310 00003970 4C8D4DF8                	lea r9, [rbp - 8]
  6311 00003974 B905000000              	mov rcx, 5
  6312                                  .L_tc_recycle_frame_loop_0024:
  6313 00003979 4883F900                	cmp rcx, 0
  6314 0000397D 7413                    	je .L_tc_recycle_frame_done_0024
  6315 0000397F 4D8B11                  	mov r10, qword [r9]
  6316 00003982 4D8910                  	mov qword [r8], r10
  6317 00003985 4983E808                	sub r8, 8
  6318 00003989 4983E908                	sub r9, 8
  6319 0000398D 48FFC9                  	dec rcx
  6320 00003990 EBE7                    	jmp .L_tc_recycle_frame_loop_0024
  6321                                  .L_tc_recycle_frame_done_0024:
  6322 00003992 498D6008                	lea rsp, [r8 + 8]
  6323 00003996 5D                      	pop rbp ; restore the old rbp
  6324 00003997 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6325                                  .L_or_end_0003:
  6326 0000399A EB0A                    	jmp .L_if_end_0005
  6327                                  .L_if_else_0005:
  6328 0000399C 48B8-                   	mov rax, L_constants + 2
  6328 0000399E [0200000000000000] 
  6329                                  .L_if_end_0005:
  6330 000039A6 C9                      	leave
  6331 000039A7 C21800                  	ret AND_KILL_FRAME(1)
  6332                                  .L_lambda_simple_end_0025:	; new closure is in rax
  6333 000039AA 50                      	push rax
  6334 000039AB 488B4520                	mov rax, PARAM(0)	; param loop
  6335 000039AF 8F00                    	pop qword [rax]
  6336 000039B1 48B8-                   	mov rax, sob_void
  6336 000039B3 [0000000000000000] 
  6337                                  
  6338                                  	; preparing a non-tail-call
  6339 000039BB 488B4510                	mov rax, ENV
  6340 000039BF 488B00                  	mov rax, qword [rax + 8 * 0]
  6341 000039C2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6342 000039C6 50                      	push rax
  6343 000039C7 6A01                    	push 1	; arg count
  6344 000039C9 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
  6345 000039D1 803805                  	cmp byte [rax], T_undefined
  6346 000039D4 0F84AF1F0100            	je L_error_fvar_undefined
  6347 000039DA 803804                  	cmp byte [rax], T_closure
  6348 000039DD 0F852A200100            	jne L_error_non_closure
  6349 000039E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6350 000039E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6351 000039E9 483D[02000000]          	cmp rax, sob_boolean_false
  6352 000039EF 7465                    	je .L_if_else_0006
  6353                                  	; preparing a tail-call
  6354 000039F1 488B4510                	mov rax, ENV
  6355 000039F5 488B00                  	mov rax, qword [rax + 8 * 0]
  6356 000039F8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6357 000039FC 50                      	push rax
  6358 000039FD 6A01                    	push 1	; arg count
  6359 000039FF 488B4520                	mov rax, PARAM(0)	; param loop
  6360 00003A03 488B00                  	mov rax, qword [rax]
  6361 00003A06 803804                  	cmp byte [rax], T_closure
  6362 00003A09 0F85FE1F0100            	jne L_error_non_closure
  6363 00003A0F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6364 00003A12 FF7508                  	push qword [rbp + 8 * 1]
  6365                                   ; old ret addr
  6366 00003A15 FF7500                  	push qword [rbp]
  6367                                   ; restore the old rbp
  6368 00003A18 BB01000000              	mov rbx, 1
  6369 00003A1D 4883C303                	add rbx, 3
  6370 00003A21 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6371 00003A25 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6372 00003A2A 4C8D4DF8                	lea r9, [rbp - 8]
  6373 00003A2E B905000000              	mov rcx, 5
  6374                                  .L_tc_recycle_frame_loop_0025:
  6375 00003A33 4883F900                	cmp rcx, 0
  6376 00003A37 7413                    	je .L_tc_recycle_frame_done_0025
  6377 00003A39 4D8B11                  	mov r10, qword [r9]
  6378 00003A3C 4D8910                  	mov qword [r8], r10
  6379 00003A3F 4983E808                	sub r8, 8
  6380 00003A43 4983E908                	sub r9, 8
  6381 00003A47 48FFC9                  	dec rcx
  6382 00003A4A EBE7                    	jmp .L_tc_recycle_frame_loop_0025
  6383                                  .L_tc_recycle_frame_done_0025:
  6384 00003A4C 498D6008                	lea rsp, [r8 + 8]
  6385 00003A50 5D                      	pop rbp ; restore the old rbp
  6386 00003A51 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6387 00003A54 EB0A                    	jmp .L_if_end_0006
  6388                                  .L_if_else_0006:
  6389 00003A56 48B8-                   	mov rax, L_constants + 2
  6389 00003A58 [0200000000000000] 
  6390                                  .L_if_end_0006:
  6391 00003A60 C9                      	leave
  6392 00003A61 C21800                  	ret AND_KILL_FRAME(1)
  6393                                  .L_lambda_simple_end_0024:	; new closure is in rax
  6394 00003A64 803804                  	cmp byte [rax], T_closure
  6395 00003A67 0F85A01F0100            	jne L_error_non_closure
  6396 00003A6D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6397 00003A70 FF7508                  	push qword [rbp + 8 * 1]
  6398                                   ; old ret addr
  6399 00003A73 FF7500                  	push qword [rbp]
  6400                                   ; restore the old rbp
  6401 00003A76 BB01000000              	mov rbx, 1
  6402 00003A7B 4883C303                	add rbx, 3
  6403 00003A7F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6404 00003A83 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6405 00003A88 4C8D4DF8                	lea r9, [rbp - 8]
  6406 00003A8C B905000000              	mov rcx, 5
  6407                                  .L_tc_recycle_frame_loop_0023:
  6408 00003A91 4883F900                	cmp rcx, 0
  6409 00003A95 7413                    	je .L_tc_recycle_frame_done_0023
  6410 00003A97 4D8B11                  	mov r10, qword [r9]
  6411 00003A9A 4D8910                  	mov qword [r8], r10
  6412 00003A9D 4983E808                	sub r8, 8
  6413 00003AA1 4983E908                	sub r9, 8
  6414 00003AA5 48FFC9                  	dec rcx
  6415 00003AA8 EBE7                    	jmp .L_tc_recycle_frame_loop_0023
  6416                                  .L_tc_recycle_frame_done_0023:
  6417 00003AAA 498D6008                	lea rsp, [r8 + 8]
  6418 00003AAE 5D                      	pop rbp ; restore the old rbp
  6419 00003AAF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6420 00003AB2 C9                      	leave
  6421 00003AB3 C22000                  	ret 8 * (2 + 2)
  6422                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6423 00003AB6 48890425[1C150000]      	mov qword [free_var_110], rax
  6424 00003ABE 48B8-                   	mov rax, sob_void
  6424 00003AC0 [0000000000000000] 
  6425                                  
  6426 00003AC8 4889C7                  	mov rdi, rax
  6427 00003ACB E83B220100              	call print_sexpr_if_not_void
  6428 00003AD0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6429 00003AD5 E8DC1F0100              	call malloc
  6430 00003ADA 50                      	push rax
  6431 00003ADB BF00000000              	mov rdi, 8 * 0	; new rib
  6432 00003AE0 E8D11F0100              	call malloc
  6433 00003AE5 50                      	push rax
  6434 00003AE6 BF08000000              	mov rdi, 8 * 1	; extended env
  6435 00003AEB E8C61F0100              	call malloc
  6436 00003AF0 488B7D10                	mov rdi, ENV
  6437 00003AF4 4831F6                  	 xor rsi, rsi
  6438 00003AF7 4831D2                  	 xor rdx, rdx
  6439 00003AFA 48FFC2                  	inc rdx
  6440                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  6441 00003AFD 4883FE00                	cmp rsi, 0
  6442 00003B01 7410                    	je .L_lambda_opt_env_end_0005
  6443 00003B03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6444 00003B07 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6445 00003B0B 48FFC6                  	inc rsi
  6446 00003B0E 48FFC2                  	inc rdx
  6447 00003B11 EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6448                                  .L_lambda_opt_env_end_0005:
  6449 00003B13 5B                      	pop rbx
  6450 00003B14 4831F6                  	xor rsi, rsi
  6451                                  .L_lambda_opt_params_loop_0005:	; copy params
  6452 00003B17 4883FE00                	cmp rsi, 0
  6453 00003B1B 740E                    	je .L_lambda_opt_params_end_0005
  6454 00003B1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6455 00003B22 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6456 00003B26 48FFC6                  	inc rsi
  6457 00003B29 EBEC                    	jmp .L_lambda_opt_params_loop_0005
  6458                                  .L_lambda_opt_params_end_0005:
  6459 00003B2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6460 00003B2E 4889C3                  	mov rbx, rax
  6461 00003B31 58                      	pop rax
  6462 00003B32 C60004                  	mov byte [rax], T_closure
  6463 00003B35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6464 00003B39 48C74009[463B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6465 00003B41 E9F5040000              	jmp .L_lambda_opt_end_0005
  6466                                  .L_lambda_opt_code_0005:; lambda opt body
  6467 00003B46 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6468 00003B4C 7409                    	je .L_lambda_opt_arity_check_exact_0005
  6469 00003B4E 7F57                    	jg .L_lambda_opt_arity_check_more_0005
  6470 00003B50 6A01                    	push 1
  6471 00003B52 E92C1F0100              	jmp L_error_incorrect_arity_opt
  6472                                  .L_lambda_opt_arity_check_exact_0005:
  6473 00003B57 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  6474 00003B5B 4C894C24F8              	mov qword [rsp -8], r9
  6475 00003B60 4C8B4C2408              	mov r9, qword [rsp +8]
  6476 00003B65 4C890C24                	mov qword [rsp +8 * 0], r9
  6477 00003B69 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  6478 00003B6E 4C89C9                  	mov rcx, r9
  6479 00003B71 49FFC1                  	inc r9
  6480 00003B74 4C894C2408              	mov qword [rsp +8], r9
  6481 00003B79 4889E2                  	mov rdx, rsp
  6482 00003B7C 4883C218                	add rdx, 24
  6483                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0005:
  6484 00003B80 4883F900                	cmp rcx, 0
  6485 00003B84 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0005
  6486 00003B86 4C8B02                  	mov r8, qword [rdx]
  6487 00003B89 4C8942F8                	mov qword [rdx - 8], r8
  6488 00003B8D 4883C208                	add rdx, 8
  6489 00003B91 48FFC9                  	dec rcx
  6490 00003B94 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0005
  6491                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0005:
  6492 00003B96 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  6493 00003B9E 4883EC08                	sub rsp, 8
  6494 00003BA2 E984000000              	jmp .L_lambda_opt_stack_adjusted_0005
  6495                                  .L_lambda_opt_arity_check_more_0005:
  6496 00003BA7 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6497 00003BAC 4D89C4                  	mov r12, r8
  6498 00003BAF 4C89C1                  	mov rcx, r8
  6499 00003BB2 4D8D5002                	lea r10, [r8 + 2] 
  6500 00003BB6 4883E901                	sub rcx, 1
  6501 00003BBA 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  6502 00003BBF 49B9-                   	mov r9, sob_nil
  6502 00003BC1 [0100000000000000] 
  6503                                  .L_lambda_opt_create_list_of_opt_params_0005:
  6504 00003BC9 4883F900                	cmp rcx, 0
  6505 00003BCD 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0005
  6506 00003BCF BF11000000              	mov rdi, 17
  6507 00003BD4 E8DD1E0100              	call malloc
  6508 00003BD9 C60021                  	mov byte [rax], T_pair
  6509 00003BDC 498B1B                  	mov rbx, qword [r11]
  6510 00003BDF 48895801                	mov qword [rax +1], rbx
  6511 00003BE3 4C894809                	mov qword [rax + 1 + 8], r9
  6512 00003BE7 4989C1                  	mov r9, rax
  6513 00003BEA 48FFC9                  	dec rcx
  6514 00003BED 4983EB08                	sub r11, 8
  6515 00003BF1 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0005
  6516                                  .L_lambda_opt_create_list_of_opt_params_end_0005:
  6517 00003BF3 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  6518 00003BF8 4D8908                  	mov qword [r8], r9
  6519 00003BFB 4E8D14D500000000        	lea r10, [8 * r10]
  6520 00003C03 4901E2                  	add r10, rsp
  6521 00003C06 B905000000              	mov rcx, 4 + 1
  6522                                  .L_lambda_opt_stack_shrink_loop_0005:
  6523 00003C0B 4883F900                	cmp rcx, 0
  6524 00003C0F 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0005
  6525 00003C11 4D8B18                  	mov r11, qword [r8]
  6526 00003C14 4D891A                  	mov qword [r10], r11
  6527 00003C17 4983E808                	sub r8, 8
  6528 00003C1B 4983EA08                	sub r10, 8
  6529 00003C1F 48FFC9                  	dec rcx
  6530 00003C22 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6531                                  .L_lambda_opt_stack_shrink_loop_exit_0005:
  6532 00003C24 4983C208                	add r10, 8
  6533 00003C28 4C89D4                  	mov rsp, r10
  6534                                  .L_lambda_opt_stack_adjusted_0005:;continue with the code, the stack is ok
  6535 00003C2B 48C744241002000000      	mov qword [rsp + 8*2], 2
  6536 00003C34 C8000000                	enter 0, 0
  6537                                  	; preparing a tail-call
  6538 00003C38 48B8-                   	mov rax, L_constants + 1993
  6538 00003C3A [C907000000000000] 
  6539 00003C42 50                      	push rax
  6540 00003C43 6A01                    	push 1	; arg count
  6541 00003C45 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6542 00003C4A E8671E0100              	call malloc
  6543 00003C4F 50                      	push rax
  6544 00003C50 BF10000000              	mov rdi, 8 * 2	; new rib
  6545 00003C55 E85C1E0100              	call malloc
  6546 00003C5A 50                      	push rax
  6547 00003C5B BF10000000              	mov rdi, 8 * 2	; extended env
  6548 00003C60 E8511E0100              	call malloc
  6549 00003C65 488B7D10                	mov rdi, ENV
  6550 00003C69 BE00000000              	mov rsi, 0
  6551 00003C6E BA01000000              	mov rdx, 1
  6552                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  6553 00003C73 4883FE01                	cmp rsi, 1
  6554 00003C77 7410                    	je .L_lambda_simple_env_end_0026
  6555 00003C79 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6556 00003C7D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6557 00003C81 48FFC6                  	inc rsi
  6558 00003C84 48FFC2                  	inc rdx
  6559 00003C87 EBEA                    	jmp .L_lambda_simple_env_loop_0026
  6560                                  .L_lambda_simple_env_end_0026:
  6561 00003C89 5B                      	pop rbx
  6562 00003C8A BE00000000              	mov rsi, 0
  6563                                  .L_lambda_simple_params_loop_0026:	; copy params
  6564 00003C8F 4883FE02                	cmp rsi, 2
  6565 00003C93 740E                    	je .L_lambda_simple_params_end_0026
  6566 00003C95 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6567 00003C9A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6568 00003C9E 48FFC6                  	inc rsi
  6569 00003CA1 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6570                                  .L_lambda_simple_params_end_0026:
  6571 00003CA3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6572 00003CA6 4889C3                  	mov rbx, rax
  6573 00003CA9 58                      	pop rax
  6574 00003CAA C60004                  	mov byte [rax], T_closure
  6575 00003CAD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6576 00003CB1 48C74009[BE3C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6577 00003CB9 E92B030000              	jmp .L_lambda_simple_end_0026
  6578                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6579 00003CBE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6580 00003CC4 740B                    	je .L_lambda_simple_arity_check_ok_0026
  6581 00003CC6 FF742410                	push qword [rsp + 8 * 2]
  6582 00003CCA 6A01                    	push 1
  6583 00003CCC E99E1D0100              	jmp L_error_incorrect_arity_simple
  6584                                  .L_lambda_simple_arity_check_ok_0026:
  6585 00003CD1 C8000000                	enter 0, 0
  6586 00003CD5 BF08000000              	mov rdi, 8*1
  6587 00003CDA E8D71D0100              	call malloc
  6588 00003CDF 488B5D20                	mov rbx, PARAM(0)
  6589 00003CE3 488918                  	mov qword [rax], rbx
  6590 00003CE6 48894520                	mov PARAM(0), rax
  6591 00003CEA 48B8-                   	mov rax, sob_void
  6591 00003CEC [0000000000000000] 
  6592                                  
  6593 00003CF4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6594 00003CF9 E8B81D0100              	call malloc
  6595 00003CFE 50                      	push rax
  6596 00003CFF BF08000000              	mov rdi, 8 * 1	; new rib
  6597 00003D04 E8AD1D0100              	call malloc
  6598 00003D09 50                      	push rax
  6599 00003D0A BF18000000              	mov rdi, 8 * 3	; extended env
  6600 00003D0F E8A21D0100              	call malloc
  6601 00003D14 488B7D10                	mov rdi, ENV
  6602 00003D18 BE00000000              	mov rsi, 0
  6603 00003D1D BA01000000              	mov rdx, 1
  6604                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6605 00003D22 4883FE02                	cmp rsi, 2
  6606 00003D26 7410                    	je .L_lambda_simple_env_end_0027
  6607 00003D28 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6608 00003D2C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6609 00003D30 48FFC6                  	inc rsi
  6610 00003D33 48FFC2                  	inc rdx
  6611 00003D36 EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6612                                  .L_lambda_simple_env_end_0027:
  6613 00003D38 5B                      	pop rbx
  6614 00003D39 BE00000000              	mov rsi, 0
  6615                                  .L_lambda_simple_params_loop_0027:	; copy params
  6616 00003D3E 4883FE01                	cmp rsi, 1
  6617 00003D42 740E                    	je .L_lambda_simple_params_end_0027
  6618 00003D44 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6619 00003D49 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6620 00003D4D 48FFC6                  	inc rsi
  6621 00003D50 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6622                                  .L_lambda_simple_params_end_0027:
  6623 00003D52 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6624 00003D55 4889C3                  	mov rbx, rax
  6625 00003D58 58                      	pop rax
  6626 00003D59 C60004                  	mov byte [rax], T_closure
  6627 00003D5C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6628 00003D60 48C74009[6D3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6629 00003D68 E988010000              	jmp .L_lambda_simple_end_0027
  6630                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6631 00003D6D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6632 00003D73 740B                    	je .L_lambda_simple_arity_check_ok_0027
  6633 00003D75 FF742410                	push qword [rsp + 8 * 2]
  6634 00003D79 6A01                    	push 1
  6635 00003D7B E9EF1C0100              	jmp L_error_incorrect_arity_simple
  6636                                  .L_lambda_simple_arity_check_ok_0027:
  6637 00003D80 C8000000                	enter 0, 0
  6638                                  	; preparing a non-tail-call
  6639                                  	; preparing a non-tail-call
  6640 00003D84 488B4520                	mov rax, PARAM(0)	; param s
  6641 00003D88 50                      	push rax
  6642 00003D89 6A01                    	push 1	; arg count
  6643 00003D8B 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  6644 00003D93 803805                  	cmp byte [rax], T_undefined
  6645 00003D96 0F84ED1B0100            	je L_error_fvar_undefined
  6646 00003D9C 803804                  	cmp byte [rax], T_closure
  6647 00003D9F 0F85681C0100            	jne L_error_non_closure
  6648 00003DA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6649 00003DA8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6650 00003DAB 50                      	push rax
  6651 00003DAC 6A01                    	push 1	; arg count
  6652 00003DAE 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  6653 00003DB6 803805                  	cmp byte [rax], T_undefined
  6654 00003DB9 0F84CA1B0100            	je L_error_fvar_undefined
  6655 00003DBF 803804                  	cmp byte [rax], T_closure
  6656 00003DC2 0F85451C0100            	jne L_error_non_closure
  6657 00003DC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6658 00003DCB FF5009                  	call SOB_CLOSURE_CODE(rax)
  6659 00003DCE 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  6660 00003DD4 0F8517010000            	jne .L_or_end_0004; if its not false (true) then we need to return it and not the last element
  6661                                  	; preparing a non-tail-call
  6662                                  	; preparing a non-tail-call
  6663 00003DDA 488B4520                	mov rax, PARAM(0)	; param s
  6664 00003DDE 50                      	push rax
  6665 00003DDF 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  6666 00003DE7 803805                  	cmp byte [rax], T_undefined
  6667 00003DEA 0F84991B0100            	je L_error_fvar_undefined
  6668 00003DF0 50                      	push rax
  6669 00003DF1 6A02                    	push 2	; arg count
  6670 00003DF3 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  6671 00003DFB 803805                  	cmp byte [rax], T_undefined
  6672 00003DFE 0F84851B0100            	je L_error_fvar_undefined
  6673 00003E04 803804                  	cmp byte [rax], T_closure
  6674 00003E07 0F85001C0100            	jne L_error_non_closure
  6675 00003E0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6676 00003E10 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6677 00003E13 50                      	push rax
  6678 00003E14 488B4510                	mov rax, ENV
  6679 00003E18 488B4008                	mov rax, qword [rax + 8 * 1]
  6680 00003E1C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6681 00003E1F 50                      	push rax
  6682 00003E20 6A02                    	push 2	; arg count
  6683 00003E22 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
  6684 00003E2A 803805                  	cmp byte [rax], T_undefined
  6685 00003E2D 0F84561B0100            	je L_error_fvar_undefined
  6686 00003E33 803804                  	cmp byte [rax], T_closure
  6687 00003E36 0F85D11B0100            	jne L_error_non_closure
  6688 00003E3C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6689 00003E3F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6690 00003E42 483D[02000000]          	cmp rax, sob_boolean_false
  6691 00003E48 0F8499000000            	je .L_if_else_0007
  6692                                  	; preparing a tail-call
  6693                                  	; preparing a non-tail-call
  6694 00003E4E 488B4520                	mov rax, PARAM(0)	; param s
  6695 00003E52 50                      	push rax
  6696 00003E53 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  6697 00003E5B 803805                  	cmp byte [rax], T_undefined
  6698 00003E5E 0F84251B0100            	je L_error_fvar_undefined
  6699 00003E64 50                      	push rax
  6700 00003E65 6A02                    	push 2	; arg count
  6701 00003E67 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  6702 00003E6F 803805                  	cmp byte [rax], T_undefined
  6703 00003E72 0F84111B0100            	je L_error_fvar_undefined
  6704 00003E78 803804                  	cmp byte [rax], T_closure
  6705 00003E7B 0F858C1B0100            	jne L_error_non_closure
  6706 00003E81 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6707 00003E84 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6708 00003E87 50                      	push rax
  6709 00003E88 6A01                    	push 1	; arg count
  6710 00003E8A 488B4510                	mov rax, ENV
  6711 00003E8E 488B00                  	mov rax, qword [rax + 8 * 0]
  6712 00003E91 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6713 00003E94 488B00                  	mov rax, qword [rax]
  6714 00003E97 803804                  	cmp byte [rax], T_closure
  6715 00003E9A 0F856D1B0100            	jne L_error_non_closure
  6716 00003EA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6717 00003EA3 FF7508                  	push qword [rbp + 8 * 1]
  6718                                   ; old ret addr
  6719 00003EA6 FF7500                  	push qword [rbp]
  6720                                   ; restore the old rbp
  6721 00003EA9 BB01000000              	mov rbx, 1
  6722 00003EAE 4883C303                	add rbx, 3
  6723 00003EB2 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6724 00003EB6 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6725 00003EBB 4C8D4DF8                	lea r9, [rbp - 8]
  6726 00003EBF B905000000              	mov rcx, 5
  6727                                  .L_tc_recycle_frame_loop_0027:
  6728 00003EC4 4883F900                	cmp rcx, 0
  6729 00003EC8 7413                    	je .L_tc_recycle_frame_done_0027
  6730 00003ECA 4D8B11                  	mov r10, qword [r9]
  6731 00003ECD 4D8910                  	mov qword [r8], r10
  6732 00003ED0 4983E808                	sub r8, 8
  6733 00003ED4 4983E908                	sub r9, 8
  6734 00003ED8 48FFC9                  	dec rcx
  6735 00003EDB EBE7                    	jmp .L_tc_recycle_frame_loop_0027
  6736                                  .L_tc_recycle_frame_done_0027:
  6737 00003EDD 498D6008                	lea rsp, [r8 + 8]
  6738 00003EE1 5D                      	pop rbp ; restore the old rbp
  6739 00003EE2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6740 00003EE5 EB0A                    	jmp .L_if_end_0007
  6741                                  .L_if_else_0007:
  6742 00003EE7 48B8-                   	mov rax, L_constants + 2
  6742 00003EE9 [0200000000000000] 
  6743                                  .L_if_end_0007:
  6744                                  .L_or_end_0004:
  6745 00003EF1 C9                      	leave
  6746 00003EF2 C21800                  	ret AND_KILL_FRAME(1)
  6747                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6748 00003EF5 50                      	push rax
  6749 00003EF6 488B4520                	mov rax, PARAM(0)	; param loop
  6750 00003EFA 8F00                    	pop qword [rax]
  6751 00003EFC 48B8-                   	mov rax, sob_void
  6751 00003EFE [0000000000000000] 
  6752                                  
  6753                                  	; preparing a non-tail-call
  6754 00003F06 488B4510                	mov rax, ENV
  6755 00003F0A 488B00                  	mov rax, qword [rax + 8 * 0]
  6756 00003F0D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6757 00003F11 50                      	push rax
  6758 00003F12 6A01                    	push 1	; arg count
  6759 00003F14 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  6760 00003F1C 803805                  	cmp byte [rax], T_undefined
  6761 00003F1F 0F84641A0100            	je L_error_fvar_undefined
  6762 00003F25 803804                  	cmp byte [rax], T_closure
  6763 00003F28 0F85DF1A0100            	jne L_error_non_closure
  6764 00003F2E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6765 00003F31 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6766 00003F34 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
  6767 00003F3A 0F85A5000000            	jne .L_or_end_0005; if its not false (true) then we need to return it and not the last element
  6768                                  	; preparing a non-tail-call
  6769 00003F40 488B4510                	mov rax, ENV
  6770 00003F44 488B00                  	mov rax, qword [rax + 8 * 0]
  6771 00003F47 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6772 00003F4B 50                      	push rax
  6773 00003F4C 6A01                    	push 1	; arg count
  6774 00003F4E 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
  6775 00003F56 803805                  	cmp byte [rax], T_undefined
  6776 00003F59 0F842A1A0100            	je L_error_fvar_undefined
  6777 00003F5F 803804                  	cmp byte [rax], T_closure
  6778 00003F62 0F85A51A0100            	jne L_error_non_closure
  6779 00003F68 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6780 00003F6B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6781 00003F6E 483D[02000000]          	cmp rax, sob_boolean_false
  6782 00003F74 7465                    	je .L_if_else_0008
  6783                                  	; preparing a tail-call
  6784 00003F76 488B4510                	mov rax, ENV
  6785 00003F7A 488B00                  	mov rax, qword [rax + 8 * 0]
  6786 00003F7D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6787 00003F81 50                      	push rax
  6788 00003F82 6A01                    	push 1	; arg count
  6789 00003F84 488B4520                	mov rax, PARAM(0)	; param loop
  6790 00003F88 488B00                  	mov rax, qword [rax]
  6791 00003F8B 803804                  	cmp byte [rax], T_closure
  6792 00003F8E 0F85791A0100            	jne L_error_non_closure
  6793 00003F94 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6794 00003F97 FF7508                  	push qword [rbp + 8 * 1]
  6795                                   ; old ret addr
  6796 00003F9A FF7500                  	push qword [rbp]
  6797                                   ; restore the old rbp
  6798 00003F9D BB01000000              	mov rbx, 1
  6799 00003FA2 4883C303                	add rbx, 3
  6800 00003FA6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6801 00003FAA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6802 00003FAF 4C8D4DF8                	lea r9, [rbp - 8]
  6803 00003FB3 B905000000              	mov rcx, 5
  6804                                  .L_tc_recycle_frame_loop_0028:
  6805 00003FB8 4883F900                	cmp rcx, 0
  6806 00003FBC 7413                    	je .L_tc_recycle_frame_done_0028
  6807 00003FBE 4D8B11                  	mov r10, qword [r9]
  6808 00003FC1 4D8910                  	mov qword [r8], r10
  6809 00003FC4 4983E808                	sub r8, 8
  6810 00003FC8 4983E908                	sub r9, 8
  6811 00003FCC 48FFC9                  	dec rcx
  6812 00003FCF EBE7                    	jmp .L_tc_recycle_frame_loop_0028
  6813                                  .L_tc_recycle_frame_done_0028:
  6814 00003FD1 498D6008                	lea rsp, [r8 + 8]
  6815 00003FD5 5D                      	pop rbp ; restore the old rbp
  6816 00003FD6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6817 00003FD9 EB0A                    	jmp .L_if_end_0008
  6818                                  .L_if_else_0008:
  6819 00003FDB 48B8-                   	mov rax, L_constants + 2
  6819 00003FDD [0200000000000000] 
  6820                                  .L_if_end_0008:
  6821                                  .L_or_end_0005:
  6822 00003FE5 C9                      	leave
  6823 00003FE6 C21800                  	ret AND_KILL_FRAME(1)
  6824                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6825 00003FE9 803804                  	cmp byte [rax], T_closure
  6826 00003FEC 0F851B1A0100            	jne L_error_non_closure
  6827 00003FF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6828 00003FF5 FF7508                  	push qword [rbp + 8 * 1]
  6829                                   ; old ret addr
  6830 00003FF8 FF7500                  	push qword [rbp]
  6831                                   ; restore the old rbp
  6832 00003FFB BB01000000              	mov rbx, 1
  6833 00004000 4883C303                	add rbx, 3
  6834 00004004 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  6835 00004008 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  6836 0000400D 4C8D4DF8                	lea r9, [rbp - 8]
  6837 00004011 B905000000              	mov rcx, 5
  6838                                  .L_tc_recycle_frame_loop_0026:
  6839 00004016 4883F900                	cmp rcx, 0
  6840 0000401A 7413                    	je .L_tc_recycle_frame_done_0026
  6841 0000401C 4D8B11                  	mov r10, qword [r9]
  6842 0000401F 4D8910                  	mov qword [r8], r10
  6843 00004022 4983E808                	sub r8, 8
  6844 00004026 4983E908                	sub r9, 8
  6845 0000402A 48FFC9                  	dec rcx
  6846 0000402D EBE7                    	jmp .L_tc_recycle_frame_loop_0026
  6847                                  .L_tc_recycle_frame_done_0026:
  6848 0000402F 498D6008                	lea rsp, [r8 + 8]
  6849 00004033 5D                      	pop rbp ; restore the old rbp
  6850 00004034 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6851 00004037 C9                      	leave
  6852 00004038 C22000                  	ret 8 * (2 + 2)
  6853                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6854 0000403B 48890425[DD0F0000]      	mov qword [free_var_31], rax
  6855 00004043 48B8-                   	mov rax, sob_void
  6855 00004045 [0000000000000000] 
  6856                                  
  6857 0000404D 4889C7                  	mov rdi, rax
  6858 00004050 E8B61C0100              	call print_sexpr_if_not_void
  6859                                  	; preparing a non-tail-call
  6860 00004055 48B8-                   	mov rax, L_constants + 1993
  6860 00004057 [C907000000000000] 
  6861 0000405F 50                      	push rax
  6862 00004060 48B8-                   	mov rax, L_constants + 1993
  6862 00004062 [C907000000000000] 
  6863 0000406A 50                      	push rax
  6864 0000406B 6A02                    	push 2	; arg count
  6865 0000406D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6866 00004072 E83F1A0100              	call malloc
  6867 00004077 50                      	push rax
  6868 00004078 BF00000000              	mov rdi, 8 * 0	; new rib
  6869 0000407D E8341A0100              	call malloc
  6870 00004082 50                      	push rax
  6871 00004083 BF08000000              	mov rdi, 8 * 1	; extended env
  6872 00004088 E8291A0100              	call malloc
  6873 0000408D 488B7D10                	mov rdi, ENV
  6874 00004091 BE00000000              	mov rsi, 0
  6875 00004096 BA01000000              	mov rdx, 1
  6876                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6877 0000409B 4883FE00                	cmp rsi, 0
  6878 0000409F 7410                    	je .L_lambda_simple_env_end_0028
  6879 000040A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6880 000040A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6881 000040A9 48FFC6                  	inc rsi
  6882 000040AC 48FFC2                  	inc rdx
  6883 000040AF EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6884                                  .L_lambda_simple_env_end_0028:
  6885 000040B1 5B                      	pop rbx
  6886 000040B2 BE00000000              	mov rsi, 0
  6887                                  .L_lambda_simple_params_loop_0028:	; copy params
  6888 000040B7 4883FE00                	cmp rsi, 0
  6889 000040BB 740E                    	je .L_lambda_simple_params_end_0028
  6890 000040BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6891 000040C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6892 000040C6 48FFC6                  	inc rsi
  6893 000040C9 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6894                                  .L_lambda_simple_params_end_0028:
  6895 000040CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6896 000040CE 4889C3                  	mov rbx, rax
  6897 000040D1 58                      	pop rax
  6898 000040D2 C60004                  	mov byte [rax], T_closure
  6899 000040D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6900 000040D9 48C74009[E6400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6901 000040E1 E956060000              	jmp .L_lambda_simple_end_0028
  6902                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6903 000040E6 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6904 000040EC 740B                    	je .L_lambda_simple_arity_check_ok_0028
  6905 000040EE FF742410                	push qword [rsp + 8 * 2]
  6906 000040F2 6A02                    	push 2
  6907 000040F4 E976190100              	jmp L_error_incorrect_arity_simple
  6908                                  .L_lambda_simple_arity_check_ok_0028:
  6909 000040F9 C8000000                	enter 0, 0
  6910 000040FD BF08000000              	mov rdi, 8*1
  6911 00004102 E8AF190100              	call malloc
  6912 00004107 488B5D20                	mov rbx, PARAM(0)
  6913 0000410B 488918                  	mov qword [rax], rbx
  6914 0000410E 48894520                	mov PARAM(0), rax
  6915 00004112 48B8-                   	mov rax, sob_void
  6915 00004114 [0000000000000000] 
  6916                                  
  6917 0000411C BF08000000              	mov rdi, 8*1
  6918 00004121 E890190100              	call malloc
  6919 00004126 488B5D28                	mov rbx, PARAM(1)
  6920 0000412A 488918                  	mov qword [rax], rbx
  6921 0000412D 48894528                	mov PARAM(1), rax
  6922 00004131 48B8-                   	mov rax, sob_void
  6922 00004133 [0000000000000000] 
  6923                                  
  6924 0000413B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6925 00004140 E871190100              	call malloc
  6926 00004145 50                      	push rax
  6927 00004146 BF10000000              	mov rdi, 8 * 2	; new rib
  6928 0000414B E866190100              	call malloc
  6929 00004150 50                      	push rax
  6930 00004151 BF10000000              	mov rdi, 8 * 2	; extended env
  6931 00004156 E85B190100              	call malloc
  6932 0000415B 488B7D10                	mov rdi, ENV
  6933 0000415F BE00000000              	mov rsi, 0
  6934 00004164 BA01000000              	mov rdx, 1
  6935                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6936 00004169 4883FE01                	cmp rsi, 1
  6937 0000416D 7410                    	je .L_lambda_simple_env_end_0029
  6938 0000416F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6939 00004173 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6940 00004177 48FFC6                  	inc rsi
  6941 0000417A 48FFC2                  	inc rdx
  6942 0000417D EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6943                                  .L_lambda_simple_env_end_0029:
  6944 0000417F 5B                      	pop rbx
  6945 00004180 BE00000000              	mov rsi, 0
  6946                                  .L_lambda_simple_params_loop_0029:	; copy params
  6947 00004185 4883FE02                	cmp rsi, 2
  6948 00004189 740E                    	je .L_lambda_simple_params_end_0029
  6949 0000418B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6950 00004190 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6951 00004194 48FFC6                  	inc rsi
  6952 00004197 EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6953                                  .L_lambda_simple_params_end_0029:
  6954 00004199 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6955 0000419C 4889C3                  	mov rbx, rax
  6956 0000419F 58                      	pop rax
  6957 000041A0 C60004                  	mov byte [rax], T_closure
  6958 000041A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6959 000041A7 48C74009[B4410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6960 000041AF E944010000              	jmp .L_lambda_simple_end_0029
  6961                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6962 000041B4 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6963 000041BA 740B                    	je .L_lambda_simple_arity_check_ok_0029
  6964 000041BC FF742410                	push qword [rsp + 8 * 2]
  6965 000041C0 6A02                    	push 2
  6966 000041C2 E9A8180100              	jmp L_error_incorrect_arity_simple
  6967                                  .L_lambda_simple_arity_check_ok_0029:
  6968 000041C7 C8000000                	enter 0, 0
  6969                                  	; preparing a non-tail-call
  6970 000041CB 488B4528                	mov rax, PARAM(1)	; param s
  6971 000041CF 50                      	push rax
  6972 000041D0 6A01                    	push 1	; arg count
  6973 000041D2 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  6974 000041DA 803805                  	cmp byte [rax], T_undefined
  6975 000041DD 0F84A6170100            	je L_error_fvar_undefined
  6976 000041E3 803804                  	cmp byte [rax], T_closure
  6977 000041E6 0F8521180100            	jne L_error_non_closure
  6978 000041EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  6979 000041EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  6980 000041F2 483D[02000000]          	cmp rax, sob_boolean_false
  6981 000041F8 740F                    	je .L_if_else_0009
  6982 000041FA 48B8-                   	mov rax, L_constants + 1
  6982 000041FC [0100000000000000] 
  6983 00004204 E9EB000000              	jmp .L_if_end_0009
  6984                                  .L_if_else_0009:
  6985                                  	; preparing a tail-call
  6986                                  	; preparing a non-tail-call
  6987                                  	; preparing a non-tail-call
  6988 00004209 488B4528                	mov rax, PARAM(1)	; param s
  6989 0000420D 50                      	push rax
  6990 0000420E 6A01                    	push 1	; arg count
  6991 00004210 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  6992 00004218 803805                  	cmp byte [rax], T_undefined
  6993 0000421B 0F8468170100            	je L_error_fvar_undefined
  6994 00004221 803804                  	cmp byte [rax], T_closure
  6995 00004224 0F85E3170100            	jne L_error_non_closure
  6996 0000422A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6997 0000422D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6998 00004230 50                      	push rax
  6999 00004231 488B4520                	mov rax, PARAM(0)	; param f
  7000 00004235 50                      	push rax
  7001 00004236 6A02                    	push 2	; arg count
  7002 00004238 488B4510                	mov rax, ENV
  7003 0000423C 488B00                  	mov rax, qword [rax + 8 * 0]
  7004 0000423F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7005 00004242 488B00                  	mov rax, qword [rax]
  7006 00004245 803804                  	cmp byte [rax], T_closure
  7007 00004248 0F85BF170100            	jne L_error_non_closure
  7008 0000424E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7009 00004251 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7010 00004254 50                      	push rax
  7011                                  	; preparing a non-tail-call
  7012                                  	; preparing a non-tail-call
  7013 00004255 488B4528                	mov rax, PARAM(1)	; param s
  7014 00004259 50                      	push rax
  7015 0000425A 6A01                    	push 1	; arg count
  7016 0000425C 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  7017 00004264 803805                  	cmp byte [rax], T_undefined
  7018 00004267 0F841C170100            	je L_error_fvar_undefined
  7019 0000426D 803804                  	cmp byte [rax], T_closure
  7020 00004270 0F8597170100            	jne L_error_non_closure
  7021 00004276 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7022 00004279 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7023 0000427C 50                      	push rax
  7024 0000427D 6A01                    	push 1	; arg count
  7025 0000427F 488B4520                	mov rax, PARAM(0)	; param f
  7026 00004283 803804                  	cmp byte [rax], T_closure
  7027 00004286 0F8581170100            	jne L_error_non_closure
  7028 0000428C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7029 0000428F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7030 00004292 50                      	push rax
  7031 00004293 6A02                    	push 2	; arg count
  7032 00004295 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  7033 0000429D 803805                  	cmp byte [rax], T_undefined
  7034 000042A0 0F84E3160100            	je L_error_fvar_undefined
  7035 000042A6 803804                  	cmp byte [rax], T_closure
  7036 000042A9 0F855E170100            	jne L_error_non_closure
  7037 000042AF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7038 000042B2 FF7508                  	push qword [rbp + 8 * 1]
  7039                                   ; old ret addr
  7040 000042B5 FF7500                  	push qword [rbp]
  7041                                   ; restore the old rbp
  7042 000042B8 BB02000000              	mov rbx, 2
  7043 000042BD 4883C303                	add rbx, 3
  7044 000042C1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7045 000042C5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7046 000042CA 4C8D4DF8                	lea r9, [rbp - 8]
  7047 000042CE B906000000              	mov rcx, 6
  7048                                  .L_tc_recycle_frame_loop_0029:
  7049 000042D3 4883F900                	cmp rcx, 0
  7050 000042D7 7413                    	je .L_tc_recycle_frame_done_0029
  7051 000042D9 4D8B11                  	mov r10, qword [r9]
  7052 000042DC 4D8910                  	mov qword [r8], r10
  7053 000042DF 4983E808                	sub r8, 8
  7054 000042E3 4983E908                	sub r9, 8
  7055 000042E7 48FFC9                  	dec rcx
  7056 000042EA EBE7                    	jmp .L_tc_recycle_frame_loop_0029
  7057                                  .L_tc_recycle_frame_done_0029:
  7058 000042EC 498D6008                	lea rsp, [r8 + 8]
  7059 000042F0 5D                      	pop rbp ; restore the old rbp
  7060 000042F1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7061                                  .L_if_end_0009:
  7062 000042F4 C9                      	leave
  7063 000042F5 C22000                  	ret AND_KILL_FRAME(2)
  7064                                  .L_lambda_simple_end_0029:	; new closure is in rax
  7065 000042F8 50                      	push rax
  7066 000042F9 488B4520                	mov rax, PARAM(0)	; param map1
  7067 000042FD 8F00                    	pop qword [rax]
  7068 000042FF 48B8-                   	mov rax, sob_void
  7068 00004301 [0000000000000000] 
  7069                                  
  7070 00004309 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7071 0000430E E8A3170100              	call malloc
  7072 00004313 50                      	push rax
  7073 00004314 BF10000000              	mov rdi, 8 * 2	; new rib
  7074 00004319 E898170100              	call malloc
  7075 0000431E 50                      	push rax
  7076 0000431F BF10000000              	mov rdi, 8 * 2	; extended env
  7077 00004324 E88D170100              	call malloc
  7078 00004329 488B7D10                	mov rdi, ENV
  7079 0000432D BE00000000              	mov rsi, 0
  7080 00004332 BA01000000              	mov rdx, 1
  7081                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  7082 00004337 4883FE01                	cmp rsi, 1
  7083 0000433B 7410                    	je .L_lambda_simple_env_end_002a
  7084 0000433D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7085 00004341 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7086 00004345 48FFC6                  	inc rsi
  7087 00004348 48FFC2                  	inc rdx
  7088 0000434B EBEA                    	jmp .L_lambda_simple_env_loop_002a
  7089                                  .L_lambda_simple_env_end_002a:
  7090 0000434D 5B                      	pop rbx
  7091 0000434E BE00000000              	mov rsi, 0
  7092                                  .L_lambda_simple_params_loop_002a:	; copy params
  7093 00004353 4883FE02                	cmp rsi, 2
  7094 00004357 740E                    	je .L_lambda_simple_params_end_002a
  7095 00004359 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7096 0000435E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7097 00004362 48FFC6                  	inc rsi
  7098 00004365 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  7099                                  .L_lambda_simple_params_end_002a:
  7100 00004367 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7101 0000436A 4889C3                  	mov rbx, rax
  7102 0000436D 58                      	pop rax
  7103 0000436E C60004                  	mov byte [rax], T_closure
  7104 00004371 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7105 00004375 48C74009[82430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  7106 0000437D E996010000              	jmp .L_lambda_simple_end_002a
  7107                                  .L_lambda_simple_code_002a:	; lambda-simple body
  7108 00004382 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7109 00004388 740B                    	je .L_lambda_simple_arity_check_ok_002a
  7110 0000438A FF742410                	push qword [rsp + 8 * 2]
  7111 0000438E 6A02                    	push 2
  7112 00004390 E9DA160100              	jmp L_error_incorrect_arity_simple
  7113                                  .L_lambda_simple_arity_check_ok_002a:
  7114 00004395 C8000000                	enter 0, 0
  7115                                  	; preparing a non-tail-call
  7116                                  	; preparing a non-tail-call
  7117 00004399 488B4528                	mov rax, PARAM(1)	; param s
  7118 0000439D 50                      	push rax
  7119 0000439E 6A01                    	push 1	; arg count
  7120 000043A0 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  7121 000043A8 803805                  	cmp byte [rax], T_undefined
  7122 000043AB 0F84D8150100            	je L_error_fvar_undefined
  7123 000043B1 803804                  	cmp byte [rax], T_closure
  7124 000043B4 0F8553160100            	jne L_error_non_closure
  7125 000043BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7126 000043BD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7127 000043C0 50                      	push rax
  7128 000043C1 6A01                    	push 1	; arg count
  7129 000043C3 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  7130 000043CB 803805                  	cmp byte [rax], T_undefined
  7131 000043CE 0F84B5150100            	je L_error_fvar_undefined
  7132 000043D4 803804                  	cmp byte [rax], T_closure
  7133 000043D7 0F8530160100            	jne L_error_non_closure
  7134 000043DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7135 000043E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7136 000043E3 483D[02000000]          	cmp rax, sob_boolean_false
  7137 000043E9 740F                    	je .L_if_else_000a
  7138 000043EB 48B8-                   	mov rax, L_constants + 1
  7138 000043ED [0100000000000000] 
  7139 000043F5 E91A010000              	jmp .L_if_end_000a
  7140                                  .L_if_else_000a:
  7141                                  	; preparing a tail-call
  7142                                  	; preparing a non-tail-call
  7143                                  	; preparing a non-tail-call
  7144 000043FA 488B4528                	mov rax, PARAM(1)	; param s
  7145 000043FE 50                      	push rax
  7146 000043FF 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  7147 00004407 803805                  	cmp byte [rax], T_undefined
  7148 0000440A 0F8479150100            	je L_error_fvar_undefined
  7149 00004410 50                      	push rax
  7150 00004411 6A02                    	push 2	; arg count
  7151 00004413 488B4510                	mov rax, ENV
  7152 00004417 488B00                  	mov rax, qword [rax + 8 * 0]
  7153 0000441A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7154 0000441D 488B00                  	mov rax, qword [rax]
  7155 00004420 803804                  	cmp byte [rax], T_closure
  7156 00004423 0F85E4150100            	jne L_error_non_closure
  7157 00004429 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7158 0000442C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7159 0000442F 50                      	push rax
  7160 00004430 488B4520                	mov rax, PARAM(0)	; param f
  7161 00004434 50                      	push rax
  7162 00004435 6A02                    	push 2	; arg count
  7163 00004437 488B4510                	mov rax, ENV
  7164 0000443B 488B00                  	mov rax, qword [rax + 8 * 0]
  7165 0000443E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7166 00004442 488B00                  	mov rax, qword [rax]
  7167 00004445 803804                  	cmp byte [rax], T_closure
  7168 00004448 0F85BF150100            	jne L_error_non_closure
  7169 0000444E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7170 00004451 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7171 00004454 50                      	push rax
  7172                                  	; preparing a non-tail-call
  7173                                  	; preparing a non-tail-call
  7174 00004455 488B4528                	mov rax, PARAM(1)	; param s
  7175 00004459 50                      	push rax
  7176 0000445A 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  7177 00004462 803805                  	cmp byte [rax], T_undefined
  7178 00004465 0F841E150100            	je L_error_fvar_undefined
  7179 0000446B 50                      	push rax
  7180 0000446C 6A02                    	push 2	; arg count
  7181 0000446E 488B4510                	mov rax, ENV
  7182 00004472 488B00                  	mov rax, qword [rax + 8 * 0]
  7183 00004475 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7184 00004478 488B00                  	mov rax, qword [rax]
  7185 0000447B 803804                  	cmp byte [rax], T_closure
  7186 0000447E 0F8589150100            	jne L_error_non_closure
  7187 00004484 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7188 00004487 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7189 0000448A 50                      	push rax
  7190 0000448B 488B4520                	mov rax, PARAM(0)	; param f
  7191 0000448F 50                      	push rax
  7192 00004490 6A02                    	push 2	; arg count
  7193 00004492 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
  7194 0000449A 803805                  	cmp byte [rax], T_undefined
  7195 0000449D 0F84E6140100            	je L_error_fvar_undefined
  7196 000044A3 803804                  	cmp byte [rax], T_closure
  7197 000044A6 0F8561150100            	jne L_error_non_closure
  7198 000044AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7199 000044AF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7200 000044B2 50                      	push rax
  7201 000044B3 6A02                    	push 2	; arg count
  7202 000044B5 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  7203 000044BD 803805                  	cmp byte [rax], T_undefined
  7204 000044C0 0F84C3140100            	je L_error_fvar_undefined
  7205 000044C6 803804                  	cmp byte [rax], T_closure
  7206 000044C9 0F853E150100            	jne L_error_non_closure
  7207 000044CF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7208 000044D2 FF7508                  	push qword [rbp + 8 * 1]
  7209                                   ; old ret addr
  7210 000044D5 FF7500                  	push qword [rbp]
  7211                                   ; restore the old rbp
  7212 000044D8 BB02000000              	mov rbx, 2
  7213 000044DD 4883C303                	add rbx, 3
  7214 000044E1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7215 000044E5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7216 000044EA 4C8D4DF8                	lea r9, [rbp - 8]
  7217 000044EE B906000000              	mov rcx, 6
  7218                                  .L_tc_recycle_frame_loop_002a:
  7219 000044F3 4883F900                	cmp rcx, 0
  7220 000044F7 7413                    	je .L_tc_recycle_frame_done_002a
  7221 000044F9 4D8B11                  	mov r10, qword [r9]
  7222 000044FC 4D8910                  	mov qword [r8], r10
  7223 000044FF 4983E808                	sub r8, 8
  7224 00004503 4983E908                	sub r9, 8
  7225 00004507 48FFC9                  	dec rcx
  7226 0000450A EBE7                    	jmp .L_tc_recycle_frame_loop_002a
  7227                                  .L_tc_recycle_frame_done_002a:
  7228 0000450C 498D6008                	lea rsp, [r8 + 8]
  7229 00004510 5D                      	pop rbp ; restore the old rbp
  7230 00004511 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7231                                  .L_if_end_000a:
  7232 00004514 C9                      	leave
  7233 00004515 C22000                  	ret AND_KILL_FRAME(2)
  7234                                  .L_lambda_simple_end_002a:	; new closure is in rax
  7235 00004518 50                      	push rax
  7236 00004519 488B4528                	mov rax, PARAM(1)	; param map-list
  7237 0000451D 8F00                    	pop qword [rax]
  7238 0000451F 48B8-                   	mov rax, sob_void
  7238 00004521 [0000000000000000] 
  7239                                  
  7240 00004529 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7241 0000452E E883150100              	call malloc
  7242 00004533 50                      	push rax
  7243 00004534 BF10000000              	mov rdi, 8 * 2	; new rib
  7244 00004539 E878150100              	call malloc
  7245 0000453E 50                      	push rax
  7246 0000453F BF10000000              	mov rdi, 8 * 2	; extended env
  7247 00004544 E86D150100              	call malloc
  7248 00004549 488B7D10                	mov rdi, ENV
  7249 0000454D 4831F6                  	 xor rsi, rsi
  7250 00004550 4831D2                  	 xor rdx, rdx
  7251 00004553 48FFC2                  	inc rdx
  7252                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  7253 00004556 4883FE01                	cmp rsi, 1
  7254 0000455A 7410                    	je .L_lambda_opt_env_end_0006
  7255 0000455C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7256 00004560 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7257 00004564 48FFC6                  	inc rsi
  7258 00004567 48FFC2                  	inc rdx
  7259 0000456A EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7260                                  .L_lambda_opt_env_end_0006:
  7261 0000456C 5B                      	pop rbx
  7262 0000456D 4831F6                  	xor rsi, rsi
  7263                                  .L_lambda_opt_params_loop_0006:	; copy params
  7264 00004570 4883FE02                	cmp rsi, 2
  7265 00004574 740E                    	je .L_lambda_opt_params_end_0006
  7266 00004576 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7267 0000457B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7268 0000457F 48FFC6                  	inc rsi
  7269 00004582 EBEC                    	jmp .L_lambda_opt_params_loop_0006
  7270                                  .L_lambda_opt_params_end_0006:
  7271 00004584 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7272 00004587 4889C3                  	mov rbx, rax
  7273 0000458A 58                      	pop rax
  7274 0000458B C60004                  	mov byte [rax], T_closure
  7275 0000458E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7276 00004592 48C74009[9F450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7277 0000459A E999010000              	jmp .L_lambda_opt_end_0006
  7278                                  .L_lambda_opt_code_0006:; lambda opt body
  7279 0000459F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7280 000045A5 7409                    	je .L_lambda_opt_arity_check_exact_0006
  7281 000045A7 7F57                    	jg .L_lambda_opt_arity_check_more_0006
  7282 000045A9 6A01                    	push 1
  7283 000045AB E9D3140100              	jmp L_error_incorrect_arity_opt
  7284                                  .L_lambda_opt_arity_check_exact_0006:
  7285 000045B0 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  7286 000045B4 4C894C24F8              	mov qword [rsp -8], r9
  7287 000045B9 4C8B4C2408              	mov r9, qword [rsp +8]
  7288 000045BE 4C890C24                	mov qword [rsp +8 * 0], r9
  7289 000045C2 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  7290 000045C7 4C89C9                  	mov rcx, r9
  7291 000045CA 49FFC1                  	inc r9
  7292 000045CD 4C894C2408              	mov qword [rsp +8], r9
  7293 000045D2 4889E2                  	mov rdx, rsp
  7294 000045D5 4883C218                	add rdx, 24
  7295                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0006:
  7296 000045D9 4883F900                	cmp rcx, 0
  7297 000045DD 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0006
  7298 000045DF 4C8B02                  	mov r8, qword [rdx]
  7299 000045E2 4C8942F8                	mov qword [rdx - 8], r8
  7300 000045E6 4883C208                	add rdx, 8
  7301 000045EA 48FFC9                  	dec rcx
  7302 000045ED EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0006
  7303                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0006:
  7304 000045EF 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  7305 000045F7 4883EC08                	sub rsp, 8
  7306 000045FB E984000000              	jmp .L_lambda_opt_stack_adjusted_0006
  7307                                  .L_lambda_opt_arity_check_more_0006:
  7308 00004600 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  7309 00004605 4D89C4                  	mov r12, r8
  7310 00004608 4C89C1                  	mov rcx, r8
  7311 0000460B 4D8D5002                	lea r10, [r8 + 2] 
  7312 0000460F 4883E901                	sub rcx, 1
  7313 00004613 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  7314 00004618 49B9-                   	mov r9, sob_nil
  7314 0000461A [0100000000000000] 
  7315                                  .L_lambda_opt_create_list_of_opt_params_0006:
  7316 00004622 4883F900                	cmp rcx, 0
  7317 00004626 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0006
  7318 00004628 BF11000000              	mov rdi, 17
  7319 0000462D E884140100              	call malloc
  7320 00004632 C60021                  	mov byte [rax], T_pair
  7321 00004635 498B1B                  	mov rbx, qword [r11]
  7322 00004638 48895801                	mov qword [rax +1], rbx
  7323 0000463C 4C894809                	mov qword [rax + 1 + 8], r9
  7324 00004640 4989C1                  	mov r9, rax
  7325 00004643 48FFC9                  	dec rcx
  7326 00004646 4983EB08                	sub r11, 8
  7327 0000464A EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0006
  7328                                  .L_lambda_opt_create_list_of_opt_params_end_0006:
  7329 0000464C 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
  7330 00004651 4D8908                  	mov qword [r8], r9
  7331 00004654 4E8D14D500000000        	lea r10, [8 * r10]
  7332 0000465C 4901E2                  	add r10, rsp
  7333 0000465F B905000000              	mov rcx, 4 + 1
  7334                                  .L_lambda_opt_stack_shrink_loop_0006:
  7335 00004664 4883F900                	cmp rcx, 0
  7336 00004668 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0006
  7337 0000466A 4D8B18                  	mov r11, qword [r8]
  7338 0000466D 4D891A                  	mov qword [r10], r11
  7339 00004670 4983E808                	sub r8, 8
  7340 00004674 4983EA08                	sub r10, 8
  7341 00004678 48FFC9                  	dec rcx
  7342 0000467B EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7343                                  .L_lambda_opt_stack_shrink_loop_exit_0006:
  7344 0000467D 4983C208                	add r10, 8
  7345 00004681 4C89D4                  	mov rsp, r10
  7346                                  .L_lambda_opt_stack_adjusted_0006:;continue with the code, the stack is ok
  7347 00004684 48C744241002000000      	mov qword [rsp + 8*2], 2
  7348 0000468D C8000000                	enter 0, 0
  7349                                  	; preparing a non-tail-call
  7350 00004691 488B4528                	mov rax, PARAM(1)	; param s
  7351 00004695 50                      	push rax
  7352 00004696 6A01                    	push 1	; arg count
  7353 00004698 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  7354 000046A0 803805                  	cmp byte [rax], T_undefined
  7355 000046A3 0F84E0120100            	je L_error_fvar_undefined
  7356 000046A9 803804                  	cmp byte [rax], T_closure
  7357 000046AC 0F855B130100            	jne L_error_non_closure
  7358 000046B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7359 000046B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7360 000046B8 483D[02000000]          	cmp rax, sob_boolean_false
  7361 000046BE 740C                    	je .L_if_else_000b
  7362 000046C0 48B8-                   	mov rax, L_constants + 1
  7362 000046C2 [0100000000000000] 
  7363 000046CA EB68                    	jmp .L_if_end_000b
  7364                                  .L_if_else_000b:
  7365                                  	; preparing a tail-call
  7366 000046CC 488B4528                	mov rax, PARAM(1)	; param s
  7367 000046D0 50                      	push rax
  7368 000046D1 488B4520                	mov rax, PARAM(0)	; param f
  7369 000046D5 50                      	push rax
  7370 000046D6 6A02                    	push 2	; arg count
  7371 000046D8 488B4510                	mov rax, ENV
  7372 000046DC 488B00                  	mov rax, qword [rax + 8 * 0]
  7373 000046DF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7374 000046E3 488B00                  	mov rax, qword [rax]
  7375 000046E6 803804                  	cmp byte [rax], T_closure
  7376 000046E9 0F851E130100            	jne L_error_non_closure
  7377 000046EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7378 000046F2 FF7508                  	push qword [rbp + 8 * 1]
  7379                                   ; old ret addr
  7380 000046F5 FF7500                  	push qword [rbp]
  7381                                   ; restore the old rbp
  7382 000046F8 BB02000000              	mov rbx, 2
  7383 000046FD 4883C303                	add rbx, 3
  7384 00004701 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7385 00004705 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7386 0000470A 4C8D4DF8                	lea r9, [rbp - 8]
  7387 0000470E B906000000              	mov rcx, 6
  7388                                  .L_tc_recycle_frame_loop_002b:
  7389 00004713 4883F900                	cmp rcx, 0
  7390 00004717 7413                    	je .L_tc_recycle_frame_done_002b
  7391 00004719 4D8B11                  	mov r10, qword [r9]
  7392 0000471C 4D8910                  	mov qword [r8], r10
  7393 0000471F 4983E808                	sub r8, 8
  7394 00004723 4983E908                	sub r9, 8
  7395 00004727 48FFC9                  	dec rcx
  7396 0000472A EBE7                    	jmp .L_tc_recycle_frame_loop_002b
  7397                                  .L_tc_recycle_frame_done_002b:
  7398 0000472C 498D6008                	lea rsp, [r8 + 8]
  7399 00004730 5D                      	pop rbp ; restore the old rbp
  7400 00004731 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7401                                  .L_if_end_000b:
  7402 00004734 C9                      	leave
  7403 00004735 C22000                  	ret 8 * (2 + 2)
  7404                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7405 00004738 C9                      	leave
  7406 00004739 C22000                  	ret AND_KILL_FRAME(2)
  7407                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7408 0000473C 803804                  	cmp byte [rax], T_closure
  7409 0000473F 0F85C8120100            	jne L_error_non_closure
  7410 00004745 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7411 00004748 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7412 0000474B 48890425[A5140000]      	mov qword [free_var_103], rax
  7413 00004753 48B8-                   	mov rax, sob_void
  7413 00004755 [0000000000000000] 
  7414                                  
  7415 0000475D 4889C7                  	mov rdi, rax
  7416 00004760 E8A6150100              	call print_sexpr_if_not_void
  7417 00004765 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7418 0000476A E847130100              	call malloc
  7419 0000476F 50                      	push rax
  7420 00004770 BF00000000              	mov rdi, 8 * 0	; new rib
  7421 00004775 E83C130100              	call malloc
  7422 0000477A 50                      	push rax
  7423 0000477B BF08000000              	mov rdi, 8 * 1	; extended env
  7424 00004780 E831130100              	call malloc
  7425 00004785 488B7D10                	mov rdi, ENV
  7426 00004789 BE00000000              	mov rsi, 0
  7427 0000478E BA01000000              	mov rdx, 1
  7428                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  7429 00004793 4883FE00                	cmp rsi, 0
  7430 00004797 7410                    	je .L_lambda_simple_env_end_002b
  7431 00004799 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7432 0000479D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7433 000047A1 48FFC6                  	inc rsi
  7434 000047A4 48FFC2                  	inc rdx
  7435 000047A7 EBEA                    	jmp .L_lambda_simple_env_loop_002b
  7436                                  .L_lambda_simple_env_end_002b:
  7437 000047A9 5B                      	pop rbx
  7438 000047AA BE00000000              	mov rsi, 0
  7439                                  .L_lambda_simple_params_loop_002b:	; copy params
  7440 000047AF 4883FE00                	cmp rsi, 0
  7441 000047B3 740E                    	je .L_lambda_simple_params_end_002b
  7442 000047B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7443 000047BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7444 000047BE 48FFC6                  	inc rsi
  7445 000047C1 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  7446                                  .L_lambda_simple_params_end_002b:
  7447 000047C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7448 000047C6 4889C3                  	mov rbx, rax
  7449 000047C9 58                      	pop rax
  7450 000047CA C60004                  	mov byte [rax], T_closure
  7451 000047CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7452 000047D1 48C74009[DE470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  7453 000047D9 E98C010000              	jmp .L_lambda_simple_end_002b
  7454                                  .L_lambda_simple_code_002b:	; lambda-simple body
  7455 000047DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7456 000047E4 740B                    	je .L_lambda_simple_arity_check_ok_002b
  7457 000047E6 FF742410                	push qword [rsp + 8 * 2]
  7458 000047EA 6A01                    	push 1
  7459 000047EC E97E120100              	jmp L_error_incorrect_arity_simple
  7460                                  .L_lambda_simple_arity_check_ok_002b:
  7461 000047F1 C8000000                	enter 0, 0
  7462                                  	; preparing a tail-call
  7463 000047F5 488B4520                	mov rax, PARAM(0)	; param s
  7464 000047F9 50                      	push rax
  7465 000047FA 48B8-                   	mov rax, L_constants + 1
  7465 000047FC [0100000000000000] 
  7466 00004804 50                      	push rax
  7467 00004805 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7468 0000480A E8A7120100              	call malloc
  7469 0000480F 50                      	push rax
  7470 00004810 BF08000000              	mov rdi, 8 * 1	; new rib
  7471 00004815 E89C120100              	call malloc
  7472 0000481A 50                      	push rax
  7473 0000481B BF10000000              	mov rdi, 8 * 2	; extended env
  7474 00004820 E891120100              	call malloc
  7475 00004825 488B7D10                	mov rdi, ENV
  7476 00004829 BE00000000              	mov rsi, 0
  7477 0000482E BA01000000              	mov rdx, 1
  7478                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7479 00004833 4883FE01                	cmp rsi, 1
  7480 00004837 7410                    	je .L_lambda_simple_env_end_002c
  7481 00004839 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7482 0000483D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7483 00004841 48FFC6                  	inc rsi
  7484 00004844 48FFC2                  	inc rdx
  7485 00004847 EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7486                                  .L_lambda_simple_env_end_002c:
  7487 00004849 5B                      	pop rbx
  7488 0000484A BE00000000              	mov rsi, 0
  7489                                  .L_lambda_simple_params_loop_002c:	; copy params
  7490 0000484F 4883FE01                	cmp rsi, 1
  7491 00004853 740E                    	je .L_lambda_simple_params_end_002c
  7492 00004855 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7493 0000485A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7494 0000485E 48FFC6                  	inc rsi
  7495 00004861 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7496                                  .L_lambda_simple_params_end_002c:
  7497 00004863 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7498 00004866 4889C3                  	mov rbx, rax
  7499 00004869 58                      	pop rax
  7500 0000486A C60004                  	mov byte [rax], T_closure
  7501 0000486D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7502 00004871 48C74009[7E480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7503 00004879 E986000000              	jmp .L_lambda_simple_end_002c
  7504                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7505 0000487E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7506 00004884 740B                    	je .L_lambda_simple_arity_check_ok_002c
  7507 00004886 FF742410                	push qword [rsp + 8 * 2]
  7508 0000488A 6A02                    	push 2
  7509 0000488C E9DE110100              	jmp L_error_incorrect_arity_simple
  7510                                  .L_lambda_simple_arity_check_ok_002c:
  7511 00004891 C8000000                	enter 0, 0
  7512                                  	; preparing a tail-call
  7513 00004895 488B4520                	mov rax, PARAM(0)	; param r
  7514 00004899 50                      	push rax
  7515 0000489A 488B4528                	mov rax, PARAM(1)	; param a
  7516 0000489E 50                      	push rax
  7517 0000489F 6A02                    	push 2	; arg count
  7518 000048A1 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  7519 000048A9 803805                  	cmp byte [rax], T_undefined
  7520 000048AC 0F84D7100100            	je L_error_fvar_undefined
  7521 000048B2 803804                  	cmp byte [rax], T_closure
  7522 000048B5 0F8552110100            	jne L_error_non_closure
  7523 000048BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7524 000048BE FF7508                  	push qword [rbp + 8 * 1]
  7525                                   ; old ret addr
  7526 000048C1 FF7500                  	push qword [rbp]
  7527                                   ; restore the old rbp
  7528 000048C4 BB02000000              	mov rbx, 2
  7529 000048C9 4883C303                	add rbx, 3
  7530 000048CD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7531 000048D1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7532 000048D6 4C8D4DF8                	lea r9, [rbp - 8]
  7533 000048DA B906000000              	mov rcx, 6
  7534                                  .L_tc_recycle_frame_loop_002d:
  7535 000048DF 4883F900                	cmp rcx, 0
  7536 000048E3 7413                    	je .L_tc_recycle_frame_done_002d
  7537 000048E5 4D8B11                  	mov r10, qword [r9]
  7538 000048E8 4D8910                  	mov qword [r8], r10
  7539 000048EB 4983E808                	sub r8, 8
  7540 000048EF 4983E908                	sub r9, 8
  7541 000048F3 48FFC9                  	dec rcx
  7542 000048F6 EBE7                    	jmp .L_tc_recycle_frame_loop_002d
  7543                                  .L_tc_recycle_frame_done_002d:
  7544 000048F8 498D6008                	lea rsp, [r8 + 8]
  7545 000048FC 5D                      	pop rbp ; restore the old rbp
  7546 000048FD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7547 00004900 C9                      	leave
  7548 00004901 C22000                  	ret AND_KILL_FRAME(2)
  7549                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7550 00004904 50                      	push rax
  7551 00004905 6A03                    	push 3	; arg count
  7552 00004907 488B0425[73130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7553 0000490F 803805                  	cmp byte [rax], T_undefined
  7554 00004912 0F8471100100            	je L_error_fvar_undefined
  7555 00004918 803804                  	cmp byte [rax], T_closure
  7556 0000491B 0F85EC100100            	jne L_error_non_closure
  7557 00004921 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7558 00004924 FF7508                  	push qword [rbp + 8 * 1]
  7559                                   ; old ret addr
  7560 00004927 FF7500                  	push qword [rbp]
  7561                                   ; restore the old rbp
  7562 0000492A BB03000000              	mov rbx, 3
  7563 0000492F 4883C303                	add rbx, 3
  7564 00004933 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7565 00004937 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7566 0000493C 4C8D4DF8                	lea r9, [rbp - 8]
  7567 00004940 B907000000              	mov rcx, 7
  7568                                  .L_tc_recycle_frame_loop_002c:
  7569 00004945 4883F900                	cmp rcx, 0
  7570 00004949 7413                    	je .L_tc_recycle_frame_done_002c
  7571 0000494B 4D8B11                  	mov r10, qword [r9]
  7572 0000494E 4D8910                  	mov qword [r8], r10
  7573 00004951 4983E808                	sub r8, 8
  7574 00004955 4983E908                	sub r9, 8
  7575 00004959 48FFC9                  	dec rcx
  7576 0000495C EBE7                    	jmp .L_tc_recycle_frame_loop_002c
  7577                                  .L_tc_recycle_frame_done_002c:
  7578 0000495E 498D6008                	lea rsp, [r8 + 8]
  7579 00004962 5D                      	pop rbp ; restore the old rbp
  7580 00004963 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7581 00004966 C9                      	leave
  7582 00004967 C21800                  	ret AND_KILL_FRAME(1)
  7583                                  .L_lambda_simple_end_002b:	; new closure is in rax
  7584 0000496A 48890425[A4150000]      	mov qword [free_var_118], rax
  7585 00004972 48B8-                   	mov rax, sob_void
  7585 00004974 [0000000000000000] 
  7586                                  
  7587 0000497C 4889C7                  	mov rdi, rax
  7588 0000497F E887130100              	call print_sexpr_if_not_void
  7589                                  	; preparing a non-tail-call
  7590 00004984 48B8-                   	mov rax, L_constants + 1993
  7590 00004986 [C907000000000000] 
  7591 0000498E 50                      	push rax
  7592 0000498F 48B8-                   	mov rax, L_constants + 1993
  7592 00004991 [C907000000000000] 
  7593 00004999 50                      	push rax
  7594 0000499A 6A02                    	push 2	; arg count
  7595 0000499C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7596 000049A1 E810110100              	call malloc
  7597 000049A6 50                      	push rax
  7598 000049A7 BF00000000              	mov rdi, 8 * 0	; new rib
  7599 000049AC E805110100              	call malloc
  7600 000049B1 50                      	push rax
  7601 000049B2 BF08000000              	mov rdi, 8 * 1	; extended env
  7602 000049B7 E8FA100100              	call malloc
  7603 000049BC 488B7D10                	mov rdi, ENV
  7604 000049C0 BE00000000              	mov rsi, 0
  7605 000049C5 BA01000000              	mov rdx, 1
  7606                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7607 000049CA 4883FE00                	cmp rsi, 0
  7608 000049CE 7410                    	je .L_lambda_simple_env_end_002d
  7609 000049D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7610 000049D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7611 000049D8 48FFC6                  	inc rsi
  7612 000049DB 48FFC2                  	inc rdx
  7613 000049DE EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7614                                  .L_lambda_simple_env_end_002d:
  7615 000049E0 5B                      	pop rbx
  7616 000049E1 BE00000000              	mov rsi, 0
  7617                                  .L_lambda_simple_params_loop_002d:	; copy params
  7618 000049E6 4883FE00                	cmp rsi, 0
  7619 000049EA 740E                    	je .L_lambda_simple_params_end_002d
  7620 000049EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7621 000049F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7622 000049F5 48FFC6                  	inc rsi
  7623 000049F8 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7624                                  .L_lambda_simple_params_end_002d:
  7625 000049FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7626 000049FD 4889C3                  	mov rbx, rax
  7627 00004A00 58                      	pop rax
  7628 00004A01 C60004                  	mov byte [rax], T_closure
  7629 00004A04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7630 00004A08 48C74009[154A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7631 00004A10 E912060000              	jmp .L_lambda_simple_end_002d
  7632                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7633 00004A15 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7634 00004A1B 740B                    	je .L_lambda_simple_arity_check_ok_002d
  7635 00004A1D FF742410                	push qword [rsp + 8 * 2]
  7636 00004A21 6A02                    	push 2
  7637 00004A23 E947100100              	jmp L_error_incorrect_arity_simple
  7638                                  .L_lambda_simple_arity_check_ok_002d:
  7639 00004A28 C8000000                	enter 0, 0
  7640 00004A2C BF08000000              	mov rdi, 8*1
  7641 00004A31 E880100100              	call malloc
  7642 00004A36 488B5D20                	mov rbx, PARAM(0)
  7643 00004A3A 488918                  	mov qword [rax], rbx
  7644 00004A3D 48894520                	mov PARAM(0), rax
  7645 00004A41 48B8-                   	mov rax, sob_void
  7645 00004A43 [0000000000000000] 
  7646                                  
  7647 00004A4B BF08000000              	mov rdi, 8*1
  7648 00004A50 E861100100              	call malloc
  7649 00004A55 488B5D28                	mov rbx, PARAM(1)
  7650 00004A59 488918                  	mov qword [rax], rbx
  7651 00004A5C 48894528                	mov PARAM(1), rax
  7652 00004A60 48B8-                   	mov rax, sob_void
  7652 00004A62 [0000000000000000] 
  7653                                  
  7654 00004A6A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7655 00004A6F E842100100              	call malloc
  7656 00004A74 50                      	push rax
  7657 00004A75 BF10000000              	mov rdi, 8 * 2	; new rib
  7658 00004A7A E837100100              	call malloc
  7659 00004A7F 50                      	push rax
  7660 00004A80 BF10000000              	mov rdi, 8 * 2	; extended env
  7661 00004A85 E82C100100              	call malloc
  7662 00004A8A 488B7D10                	mov rdi, ENV
  7663 00004A8E BE00000000              	mov rsi, 0
  7664 00004A93 BA01000000              	mov rdx, 1
  7665                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7666 00004A98 4883FE01                	cmp rsi, 1
  7667 00004A9C 7410                    	je .L_lambda_simple_env_end_002e
  7668 00004A9E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7669 00004AA2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7670 00004AA6 48FFC6                  	inc rsi
  7671 00004AA9 48FFC2                  	inc rdx
  7672 00004AAC EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7673                                  .L_lambda_simple_env_end_002e:
  7674 00004AAE 5B                      	pop rbx
  7675 00004AAF BE00000000              	mov rsi, 0
  7676                                  .L_lambda_simple_params_loop_002e:	; copy params
  7677 00004AB4 4883FE02                	cmp rsi, 2
  7678 00004AB8 740E                    	je .L_lambda_simple_params_end_002e
  7679 00004ABA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7680 00004ABF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7681 00004AC3 48FFC6                  	inc rsi
  7682 00004AC6 EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7683                                  .L_lambda_simple_params_end_002e:
  7684 00004AC8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7685 00004ACB 4889C3                  	mov rbx, rax
  7686 00004ACE 58                      	pop rax
  7687 00004ACF C60004                  	mov byte [rax], T_closure
  7688 00004AD2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7689 00004AD6 48C74009[E34A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7690 00004ADE E925010000              	jmp .L_lambda_simple_end_002e
  7691                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7692 00004AE3 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7693 00004AE9 740B                    	je .L_lambda_simple_arity_check_ok_002e
  7694 00004AEB FF742410                	push qword [rsp + 8 * 2]
  7695 00004AEF 6A02                    	push 2
  7696 00004AF1 E9790F0100              	jmp L_error_incorrect_arity_simple
  7697                                  .L_lambda_simple_arity_check_ok_002e:
  7698 00004AF6 C8000000                	enter 0, 0
  7699                                  	; preparing a non-tail-call
  7700 00004AFA 488B4528                	mov rax, PARAM(1)	; param sr
  7701 00004AFE 50                      	push rax
  7702 00004AFF 6A01                    	push 1	; arg count
  7703 00004B01 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  7704 00004B09 803805                  	cmp byte [rax], T_undefined
  7705 00004B0C 0F84770E0100            	je L_error_fvar_undefined
  7706 00004B12 803804                  	cmp byte [rax], T_closure
  7707 00004B15 0F85F20E0100            	jne L_error_non_closure
  7708 00004B1B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7709 00004B1E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7710 00004B21 483D[02000000]          	cmp rax, sob_boolean_false
  7711 00004B27 7409                    	je .L_if_else_000c
  7712 00004B29 488B4520                	mov rax, PARAM(0)	; param s1
  7713 00004B2D E9D2000000              	jmp .L_if_end_000c
  7714                                  .L_if_else_000c:
  7715                                  	; preparing a tail-call
  7716                                  	; preparing a non-tail-call
  7717                                  	; preparing a non-tail-call
  7718 00004B32 488B4528                	mov rax, PARAM(1)	; param sr
  7719 00004B36 50                      	push rax
  7720 00004B37 6A01                    	push 1	; arg count
  7721 00004B39 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  7722 00004B41 803805                  	cmp byte [rax], T_undefined
  7723 00004B44 0F843F0E0100            	je L_error_fvar_undefined
  7724 00004B4A 803804                  	cmp byte [rax], T_closure
  7725 00004B4D 0F85BA0E0100            	jne L_error_non_closure
  7726 00004B53 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7727 00004B56 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7728 00004B59 50                      	push rax
  7729                                  	; preparing a non-tail-call
  7730 00004B5A 488B4528                	mov rax, PARAM(1)	; param sr
  7731 00004B5E 50                      	push rax
  7732 00004B5F 6A01                    	push 1	; arg count
  7733 00004B61 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  7734 00004B69 803805                  	cmp byte [rax], T_undefined
  7735 00004B6C 0F84170E0100            	je L_error_fvar_undefined
  7736 00004B72 803804                  	cmp byte [rax], T_closure
  7737 00004B75 0F85920E0100            	jne L_error_non_closure
  7738 00004B7B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7739 00004B7E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7740 00004B81 50                      	push rax
  7741 00004B82 6A02                    	push 2	; arg count
  7742 00004B84 488B4510                	mov rax, ENV
  7743 00004B88 488B00                  	mov rax, qword [rax + 8 * 0]
  7744 00004B8B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7745 00004B8E 488B00                  	mov rax, qword [rax]
  7746 00004B91 803804                  	cmp byte [rax], T_closure
  7747 00004B94 0F85730E0100            	jne L_error_non_closure
  7748 00004B9A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7749 00004B9D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7750 00004BA0 50                      	push rax
  7751 00004BA1 488B4520                	mov rax, PARAM(0)	; param s1
  7752 00004BA5 50                      	push rax
  7753 00004BA6 6A02                    	push 2	; arg count
  7754 00004BA8 488B4510                	mov rax, ENV
  7755 00004BAC 488B00                  	mov rax, qword [rax + 8 * 0]
  7756 00004BAF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7757 00004BB3 488B00                  	mov rax, qword [rax]
  7758 00004BB6 803804                  	cmp byte [rax], T_closure
  7759 00004BB9 0F854E0E0100            	jne L_error_non_closure
  7760 00004BBF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7761 00004BC2 FF7508                  	push qword [rbp + 8 * 1]
  7762                                   ; old ret addr
  7763 00004BC5 FF7500                  	push qword [rbp]
  7764                                   ; restore the old rbp
  7765 00004BC8 BB02000000              	mov rbx, 2
  7766 00004BCD 4883C303                	add rbx, 3
  7767 00004BD1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7768 00004BD5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7769 00004BDA 4C8D4DF8                	lea r9, [rbp - 8]
  7770 00004BDE B906000000              	mov rcx, 6
  7771                                  .L_tc_recycle_frame_loop_002e:
  7772 00004BE3 4883F900                	cmp rcx, 0
  7773 00004BE7 7413                    	je .L_tc_recycle_frame_done_002e
  7774 00004BE9 4D8B11                  	mov r10, qword [r9]
  7775 00004BEC 4D8910                  	mov qword [r8], r10
  7776 00004BEF 4983E808                	sub r8, 8
  7777 00004BF3 4983E908                	sub r9, 8
  7778 00004BF7 48FFC9                  	dec rcx
  7779 00004BFA EBE7                    	jmp .L_tc_recycle_frame_loop_002e
  7780                                  .L_tc_recycle_frame_done_002e:
  7781 00004BFC 498D6008                	lea rsp, [r8 + 8]
  7782 00004C00 5D                      	pop rbp ; restore the old rbp
  7783 00004C01 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7784                                  .L_if_end_000c:
  7785 00004C04 C9                      	leave
  7786 00004C05 C22000                  	ret AND_KILL_FRAME(2)
  7787                                  .L_lambda_simple_end_002e:	; new closure is in rax
  7788 00004C08 50                      	push rax
  7789 00004C09 488B4520                	mov rax, PARAM(0)	; param run-1
  7790 00004C0D 8F00                    	pop qword [rax]
  7791 00004C0F 48B8-                   	mov rax, sob_void
  7791 00004C11 [0000000000000000] 
  7792                                  
  7793 00004C19 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7794 00004C1E E8930E0100              	call malloc
  7795 00004C23 50                      	push rax
  7796 00004C24 BF10000000              	mov rdi, 8 * 2	; new rib
  7797 00004C29 E8880E0100              	call malloc
  7798 00004C2E 50                      	push rax
  7799 00004C2F BF10000000              	mov rdi, 8 * 2	; extended env
  7800 00004C34 E87D0E0100              	call malloc
  7801 00004C39 488B7D10                	mov rdi, ENV
  7802 00004C3D BE00000000              	mov rsi, 0
  7803 00004C42 BA01000000              	mov rdx, 1
  7804                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7805 00004C47 4883FE01                	cmp rsi, 1
  7806 00004C4B 7410                    	je .L_lambda_simple_env_end_002f
  7807 00004C4D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7808 00004C51 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7809 00004C55 48FFC6                  	inc rsi
  7810 00004C58 48FFC2                  	inc rdx
  7811 00004C5B EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7812                                  .L_lambda_simple_env_end_002f:
  7813 00004C5D 5B                      	pop rbx
  7814 00004C5E BE00000000              	mov rsi, 0
  7815                                  .L_lambda_simple_params_loop_002f:	; copy params
  7816 00004C63 4883FE02                	cmp rsi, 2
  7817 00004C67 740E                    	je .L_lambda_simple_params_end_002f
  7818 00004C69 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7819 00004C6E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7820 00004C72 48FFC6                  	inc rsi
  7821 00004C75 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7822                                  .L_lambda_simple_params_end_002f:
  7823 00004C77 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7824 00004C7A 4889C3                  	mov rbx, rax
  7825 00004C7D 58                      	pop rax
  7826 00004C7E C60004                  	mov byte [rax], T_closure
  7827 00004C81 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7828 00004C85 48C74009[924C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7829 00004C8D E929010000              	jmp .L_lambda_simple_end_002f
  7830                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7831 00004C92 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7832 00004C98 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7833 00004C9A FF742410                	push qword [rsp + 8 * 2]
  7834 00004C9E 6A02                    	push 2
  7835 00004CA0 E9CA0D0100              	jmp L_error_incorrect_arity_simple
  7836                                  .L_lambda_simple_arity_check_ok_002f:
  7837 00004CA5 C8000000                	enter 0, 0
  7838                                  	; preparing a non-tail-call
  7839 00004CA9 488B4520                	mov rax, PARAM(0)	; param s1
  7840 00004CAD 50                      	push rax
  7841 00004CAE 6A01                    	push 1	; arg count
  7842 00004CB0 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  7843 00004CB8 803805                  	cmp byte [rax], T_undefined
  7844 00004CBB 0F84C80C0100            	je L_error_fvar_undefined
  7845 00004CC1 803804                  	cmp byte [rax], T_closure
  7846 00004CC4 0F85430D0100            	jne L_error_non_closure
  7847 00004CCA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7848 00004CCD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7849 00004CD0 483D[02000000]          	cmp rax, sob_boolean_false
  7850 00004CD6 7409                    	je .L_if_else_000d
  7851 00004CD8 488B4528                	mov rax, PARAM(1)	; param s2
  7852 00004CDC E9D6000000              	jmp .L_if_end_000d
  7853                                  .L_if_else_000d:
  7854                                  	; preparing a tail-call
  7855                                  	; preparing a non-tail-call
  7856 00004CE1 488B4528                	mov rax, PARAM(1)	; param s2
  7857 00004CE5 50                      	push rax
  7858                                  	; preparing a non-tail-call
  7859 00004CE6 488B4520                	mov rax, PARAM(0)	; param s1
  7860 00004CEA 50                      	push rax
  7861 00004CEB 6A01                    	push 1	; arg count
  7862 00004CED 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  7863 00004CF5 803805                  	cmp byte [rax], T_undefined
  7864 00004CF8 0F848B0C0100            	je L_error_fvar_undefined
  7865 00004CFE 803804                  	cmp byte [rax], T_closure
  7866 00004D01 0F85060D0100            	jne L_error_non_closure
  7867 00004D07 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7868 00004D0A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7869 00004D0D 50                      	push rax
  7870 00004D0E 6A02                    	push 2	; arg count
  7871 00004D10 488B4510                	mov rax, ENV
  7872 00004D14 488B00                  	mov rax, qword [rax + 8 * 0]
  7873 00004D17 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7874 00004D1B 488B00                  	mov rax, qword [rax]
  7875 00004D1E 803804                  	cmp byte [rax], T_closure
  7876 00004D21 0F85E60C0100            	jne L_error_non_closure
  7877 00004D27 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7878 00004D2A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7879 00004D2D 50                      	push rax
  7880                                  	; preparing a non-tail-call
  7881 00004D2E 488B4520                	mov rax, PARAM(0)	; param s1
  7882 00004D32 50                      	push rax
  7883 00004D33 6A01                    	push 1	; arg count
  7884 00004D35 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  7885 00004D3D 803805                  	cmp byte [rax], T_undefined
  7886 00004D40 0F84430C0100            	je L_error_fvar_undefined
  7887 00004D46 803804                  	cmp byte [rax], T_closure
  7888 00004D49 0F85BE0C0100            	jne L_error_non_closure
  7889 00004D4F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7890 00004D52 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7891 00004D55 50                      	push rax
  7892 00004D56 6A02                    	push 2	; arg count
  7893 00004D58 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  7894 00004D60 803805                  	cmp byte [rax], T_undefined
  7895 00004D63 0F84200C0100            	je L_error_fvar_undefined
  7896 00004D69 803804                  	cmp byte [rax], T_closure
  7897 00004D6C 0F859B0C0100            	jne L_error_non_closure
  7898 00004D72 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7899 00004D75 FF7508                  	push qword [rbp + 8 * 1]
  7900                                   ; old ret addr
  7901 00004D78 FF7500                  	push qword [rbp]
  7902                                   ; restore the old rbp
  7903 00004D7B BB02000000              	mov rbx, 2
  7904 00004D80 4883C303                	add rbx, 3
  7905 00004D84 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  7906 00004D88 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  7907 00004D8D 4C8D4DF8                	lea r9, [rbp - 8]
  7908 00004D91 B906000000              	mov rcx, 6
  7909                                  .L_tc_recycle_frame_loop_002f:
  7910 00004D96 4883F900                	cmp rcx, 0
  7911 00004D9A 7413                    	je .L_tc_recycle_frame_done_002f
  7912 00004D9C 4D8B11                  	mov r10, qword [r9]
  7913 00004D9F 4D8910                  	mov qword [r8], r10
  7914 00004DA2 4983E808                	sub r8, 8
  7915 00004DA6 4983E908                	sub r9, 8
  7916 00004DAA 48FFC9                  	dec rcx
  7917 00004DAD EBE7                    	jmp .L_tc_recycle_frame_loop_002f
  7918                                  .L_tc_recycle_frame_done_002f:
  7919 00004DAF 498D6008                	lea rsp, [r8 + 8]
  7920 00004DB3 5D                      	pop rbp ; restore the old rbp
  7921 00004DB4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7922                                  .L_if_end_000d:
  7923 00004DB7 C9                      	leave
  7924 00004DB8 C22000                  	ret AND_KILL_FRAME(2)
  7925                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7926 00004DBB 50                      	push rax
  7927 00004DBC 488B4528                	mov rax, PARAM(1)	; param run-2
  7928 00004DC0 8F00                    	pop qword [rax]
  7929 00004DC2 48B8-                   	mov rax, sob_void
  7929 00004DC4 [0000000000000000] 
  7930                                  
  7931 00004DCC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7932 00004DD1 E8E00C0100              	call malloc
  7933 00004DD6 50                      	push rax
  7934 00004DD7 BF10000000              	mov rdi, 8 * 2	; new rib
  7935 00004DDC E8D50C0100              	call malloc
  7936 00004DE1 50                      	push rax
  7937 00004DE2 BF10000000              	mov rdi, 8 * 2	; extended env
  7938 00004DE7 E8CA0C0100              	call malloc
  7939 00004DEC 488B7D10                	mov rdi, ENV
  7940 00004DF0 4831F6                  	 xor rsi, rsi
  7941 00004DF3 4831D2                  	 xor rdx, rdx
  7942 00004DF6 48FFC2                  	inc rdx
  7943                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  7944 00004DF9 4883FE01                	cmp rsi, 1
  7945 00004DFD 7410                    	je .L_lambda_opt_env_end_0007
  7946 00004DFF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7947 00004E03 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7948 00004E07 48FFC6                  	inc rsi
  7949 00004E0A 48FFC2                  	inc rdx
  7950 00004E0D EBEA                    	jmp .L_lambda_opt_env_loop_0007
  7951                                  .L_lambda_opt_env_end_0007:
  7952 00004E0F 5B                      	pop rbx
  7953 00004E10 4831F6                  	xor rsi, rsi
  7954                                  .L_lambda_opt_params_loop_0007:	; copy params
  7955 00004E13 4883FE02                	cmp rsi, 2
  7956 00004E17 740E                    	je .L_lambda_opt_params_end_0007
  7957 00004E19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7958 00004E1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7959 00004E22 48FFC6                  	inc rsi
  7960 00004E25 EBEC                    	jmp .L_lambda_opt_params_loop_0007
  7961                                  .L_lambda_opt_params_end_0007:
  7962 00004E27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7963 00004E2A 4889C3                  	mov rbx, rax
  7964 00004E2D 58                      	pop rax
  7965 00004E2E C60004                  	mov byte [rax], T_closure
  7966 00004E31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7967 00004E35 48C74009[424E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  7968 00004E3D E9E1010000              	jmp .L_lambda_opt_end_0007
  7969                                  .L_lambda_opt_code_0007:; lambda opt body
  7970 00004E42 48837C241000            	cmp qword [rsp + 8 * 2], 0
  7971 00004E48 7409                    	je .L_lambda_opt_arity_check_exact_0007
  7972 00004E4A 7F57                    	jg .L_lambda_opt_arity_check_more_0007
  7973 00004E4C 6A00                    	push 0
  7974 00004E4E E9300C0100              	jmp L_error_incorrect_arity_opt
  7975                                  .L_lambda_opt_arity_check_exact_0007:
  7976 00004E53 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  7977 00004E57 4C894C24F8              	mov qword [rsp -8], r9
  7978 00004E5C 4C8B4C2408              	mov r9, qword [rsp +8]
  7979 00004E61 4C890C24                	mov qword [rsp +8 * 0], r9
  7980 00004E65 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  7981 00004E6A 4C89C9                  	mov rcx, r9
  7982 00004E6D 49FFC1                  	inc r9
  7983 00004E70 4C894C2408              	mov qword [rsp +8], r9
  7984 00004E75 4889E2                  	mov rdx, rsp
  7985 00004E78 4883C218                	add rdx, 24
  7986                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0007:
  7987 00004E7C 4883F900                	cmp rcx, 0
  7988 00004E80 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0007
  7989 00004E82 4C8B02                  	mov r8, qword [rdx]
  7990 00004E85 4C8942F8                	mov qword [rdx - 8], r8
  7991 00004E89 4883C208                	add rdx, 8
  7992 00004E8D 48FFC9                  	dec rcx
  7993 00004E90 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0007
  7994                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0007:
  7995 00004E92 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  7996 00004E9A 4883EC08                	sub rsp, 8
  7997 00004E9E E984000000              	jmp .L_lambda_opt_stack_adjusted_0007
  7998                                  .L_lambda_opt_arity_check_more_0007:
  7999 00004EA3 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8000 00004EA8 4D89C4                  	mov r12, r8
  8001 00004EAB 4C89C1                  	mov rcx, r8
  8002 00004EAE 4D8D5002                	lea r10, [r8 + 2] 
  8003 00004EB2 4883E900                	sub rcx, 0
  8004 00004EB6 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  8005 00004EBB 49B9-                   	mov r9, sob_nil
  8005 00004EBD [0100000000000000] 
  8006                                  .L_lambda_opt_create_list_of_opt_params_0007:
  8007 00004EC5 4883F900                	cmp rcx, 0
  8008 00004EC9 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0007
  8009 00004ECB BF11000000              	mov rdi, 17
  8010 00004ED0 E8E10B0100              	call malloc
  8011 00004ED5 C60021                  	mov byte [rax], T_pair
  8012 00004ED8 498B1B                  	mov rbx, qword [r11]
  8013 00004EDB 48895801                	mov qword [rax +1], rbx
  8014 00004EDF 4C894809                	mov qword [rax + 1 + 8], r9
  8015 00004EE3 4989C1                  	mov r9, rax
  8016 00004EE6 48FFC9                  	dec rcx
  8017 00004EE9 4983EB08                	sub r11, 8
  8018 00004EED EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0007
  8019                                  .L_lambda_opt_create_list_of_opt_params_end_0007:
  8020 00004EEF 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
  8021 00004EF4 4D8908                  	mov qword [r8], r9
  8022 00004EF7 4E8D14D500000000        	lea r10, [8 * r10]
  8023 00004EFF 4901E2                  	add r10, rsp
  8024 00004F02 B904000000              	mov rcx, 4 + 0
  8025                                  .L_lambda_opt_stack_shrink_loop_0007:
  8026 00004F07 4883F900                	cmp rcx, 0
  8027 00004F0B 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0007
  8028 00004F0D 4D8B18                  	mov r11, qword [r8]
  8029 00004F10 4D891A                  	mov qword [r10], r11
  8030 00004F13 4983E808                	sub r8, 8
  8031 00004F17 4983EA08                	sub r10, 8
  8032 00004F1B 48FFC9                  	dec rcx
  8033 00004F1E EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  8034                                  .L_lambda_opt_stack_shrink_loop_exit_0007:
  8035 00004F20 4983C208                	add r10, 8
  8036 00004F24 4C89D4                  	mov rsp, r10
  8037                                  .L_lambda_opt_stack_adjusted_0007:;continue with the code, the stack is ok
  8038 00004F27 48C744241001000000      	mov qword [rsp + 8*2], 1
  8039 00004F30 C8000000                	enter 0, 0
  8040                                  	; preparing a non-tail-call
  8041 00004F34 488B4520                	mov rax, PARAM(0)	; param s
  8042 00004F38 50                      	push rax
  8043 00004F39 6A01                    	push 1	; arg count
  8044 00004F3B 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  8045 00004F43 803805                  	cmp byte [rax], T_undefined
  8046 00004F46 0F843D0A0100            	je L_error_fvar_undefined
  8047 00004F4C 803804                  	cmp byte [rax], T_closure
  8048 00004F4F 0F85B80A0100            	jne L_error_non_closure
  8049 00004F55 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8050 00004F58 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8051 00004F5B 483D[02000000]          	cmp rax, sob_boolean_false
  8052 00004F61 740F                    	je .L_if_else_000e
  8053 00004F63 48B8-                   	mov rax, L_constants + 1
  8053 00004F65 [0100000000000000] 
  8054 00004F6D E9AD000000              	jmp .L_if_end_000e
  8055                                  .L_if_else_000e:
  8056                                  	; preparing a tail-call
  8057                                  	; preparing a non-tail-call
  8058 00004F72 488B4520                	mov rax, PARAM(0)	; param s
  8059 00004F76 50                      	push rax
  8060 00004F77 6A01                    	push 1	; arg count
  8061 00004F79 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  8062 00004F81 803805                  	cmp byte [rax], T_undefined
  8063 00004F84 0F84FF090100            	je L_error_fvar_undefined
  8064 00004F8A 803804                  	cmp byte [rax], T_closure
  8065 00004F8D 0F857A0A0100            	jne L_error_non_closure
  8066 00004F93 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8067 00004F96 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8068 00004F99 50                      	push rax
  8069                                  	; preparing a non-tail-call
  8070 00004F9A 488B4520                	mov rax, PARAM(0)	; param s
  8071 00004F9E 50                      	push rax
  8072 00004F9F 6A01                    	push 1	; arg count
  8073 00004FA1 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  8074 00004FA9 803805                  	cmp byte [rax], T_undefined
  8075 00004FAC 0F84D7090100            	je L_error_fvar_undefined
  8076 00004FB2 803804                  	cmp byte [rax], T_closure
  8077 00004FB5 0F85520A0100            	jne L_error_non_closure
  8078 00004FBB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8079 00004FBE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8080 00004FC1 50                      	push rax
  8081 00004FC2 6A02                    	push 2	; arg count
  8082 00004FC4 488B4510                	mov rax, ENV
  8083 00004FC8 488B00                  	mov rax, qword [rax + 8 * 0]
  8084 00004FCB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8085 00004FCE 488B00                  	mov rax, qword [rax]
  8086 00004FD1 803804                  	cmp byte [rax], T_closure
  8087 00004FD4 0F85330A0100            	jne L_error_non_closure
  8088 00004FDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  8089 00004FDD FF7508                  	push qword [rbp + 8 * 1]
  8090                                   ; old ret addr
  8091 00004FE0 FF7500                  	push qword [rbp]
  8092                                   ; restore the old rbp
  8093 00004FE3 BB02000000              	mov rbx, 2
  8094 00004FE8 4883C303                	add rbx, 3
  8095 00004FEC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8096 00004FF0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8097 00004FF5 4C8D4DF8                	lea r9, [rbp - 8]
  8098 00004FF9 B906000000              	mov rcx, 6
  8099                                  .L_tc_recycle_frame_loop_0030:
  8100 00004FFE 4883F900                	cmp rcx, 0
  8101 00005002 7413                    	je .L_tc_recycle_frame_done_0030
  8102 00005004 4D8B11                  	mov r10, qword [r9]
  8103 00005007 4D8910                  	mov qword [r8], r10
  8104 0000500A 4983E808                	sub r8, 8
  8105 0000500E 4983E908                	sub r9, 8
  8106 00005012 48FFC9                  	dec rcx
  8107 00005015 EBE7                    	jmp .L_tc_recycle_frame_loop_0030
  8108                                  .L_tc_recycle_frame_done_0030:
  8109 00005017 498D6008                	lea rsp, [r8 + 8]
  8110 0000501B 5D                      	pop rbp ; restore the old rbp
  8111 0000501C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8112                                  .L_if_end_000e:
  8113 0000501F C9                      	leave
  8114 00005020 C21800                  	ret 8 * (2 + 1)
  8115                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8116 00005023 C9                      	leave
  8117 00005024 C22000                  	ret AND_KILL_FRAME(2)
  8118                                  .L_lambda_simple_end_002d:	; new closure is in rax
  8119 00005027 803804                  	cmp byte [rax], T_closure
  8120 0000502A 0F85DD090100            	jne L_error_non_closure
  8121 00005030 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8122 00005033 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8123 00005036 48890425[EE0F0000]      	mov qword [free_var_32], rax
  8124 0000503E 48B8-                   	mov rax, sob_void
  8124 00005040 [0000000000000000] 
  8125                                  
  8126 00005048 4889C7                  	mov rdi, rax
  8127 0000504B E8BB0C0100              	call print_sexpr_if_not_void
  8128                                  	; preparing a non-tail-call
  8129 00005050 48B8-                   	mov rax, L_constants + 1993
  8129 00005052 [C907000000000000] 
  8130 0000505A 50                      	push rax
  8131 0000505B 6A01                    	push 1	; arg count
  8132 0000505D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8133 00005062 E84F0A0100              	call malloc
  8134 00005067 50                      	push rax
  8135 00005068 BF00000000              	mov rdi, 8 * 0	; new rib
  8136 0000506D E8440A0100              	call malloc
  8137 00005072 50                      	push rax
  8138 00005073 BF08000000              	mov rdi, 8 * 1	; extended env
  8139 00005078 E8390A0100              	call malloc
  8140 0000507D 488B7D10                	mov rdi, ENV
  8141 00005081 BE00000000              	mov rsi, 0
  8142 00005086 BA01000000              	mov rdx, 1
  8143                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  8144 0000508B 4883FE00                	cmp rsi, 0
  8145 0000508F 7410                    	je .L_lambda_simple_env_end_0030
  8146 00005091 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8147 00005095 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8148 00005099 48FFC6                  	inc rsi
  8149 0000509C 48FFC2                  	inc rdx
  8150 0000509F EBEA                    	jmp .L_lambda_simple_env_loop_0030
  8151                                  .L_lambda_simple_env_end_0030:
  8152 000050A1 5B                      	pop rbx
  8153 000050A2 BE00000000              	mov rsi, 0
  8154                                  .L_lambda_simple_params_loop_0030:	; copy params
  8155 000050A7 4883FE00                	cmp rsi, 0
  8156 000050AB 740E                    	je .L_lambda_simple_params_end_0030
  8157 000050AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8158 000050B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8159 000050B6 48FFC6                  	inc rsi
  8160 000050B9 EBEC                    	jmp .L_lambda_simple_params_loop_0030
  8161                                  .L_lambda_simple_params_end_0030:
  8162 000050BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8163 000050BE 4889C3                  	mov rbx, rax
  8164 000050C1 58                      	pop rax
  8165 000050C2 C60004                  	mov byte [rax], T_closure
  8166 000050C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8167 000050C9 48C74009[D6500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  8168 000050D1 E904040000              	jmp .L_lambda_simple_end_0030
  8169                                  .L_lambda_simple_code_0030:	; lambda-simple body
  8170 000050D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8171 000050DC 740B                    	je .L_lambda_simple_arity_check_ok_0030
  8172 000050DE FF742410                	push qword [rsp + 8 * 2]
  8173 000050E2 6A01                    	push 1
  8174 000050E4 E986090100              	jmp L_error_incorrect_arity_simple
  8175                                  .L_lambda_simple_arity_check_ok_0030:
  8176 000050E9 C8000000                	enter 0, 0
  8177 000050ED BF08000000              	mov rdi, 8*1
  8178 000050F2 E8BF090100              	call malloc
  8179 000050F7 488B5D20                	mov rbx, PARAM(0)
  8180 000050FB 488918                  	mov qword [rax], rbx
  8181 000050FE 48894520                	mov PARAM(0), rax
  8182 00005102 48B8-                   	mov rax, sob_void
  8182 00005104 [0000000000000000] 
  8183                                  
  8184 0000510C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8185 00005111 E8A0090100              	call malloc
  8186 00005116 50                      	push rax
  8187 00005117 BF08000000              	mov rdi, 8 * 1	; new rib
  8188 0000511C E895090100              	call malloc
  8189 00005121 50                      	push rax
  8190 00005122 BF10000000              	mov rdi, 8 * 2	; extended env
  8191 00005127 E88A090100              	call malloc
  8192 0000512C 488B7D10                	mov rdi, ENV
  8193 00005130 BE00000000              	mov rsi, 0
  8194 00005135 BA01000000              	mov rdx, 1
  8195                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  8196 0000513A 4883FE01                	cmp rsi, 1
  8197 0000513E 7410                    	je .L_lambda_simple_env_end_0031
  8198 00005140 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8199 00005144 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8200 00005148 48FFC6                  	inc rsi
  8201 0000514B 48FFC2                  	inc rdx
  8202 0000514E EBEA                    	jmp .L_lambda_simple_env_loop_0031
  8203                                  .L_lambda_simple_env_end_0031:
  8204 00005150 5B                      	pop rbx
  8205 00005151 BE00000000              	mov rsi, 0
  8206                                  .L_lambda_simple_params_loop_0031:	; copy params
  8207 00005156 4883FE01                	cmp rsi, 1
  8208 0000515A 740E                    	je .L_lambda_simple_params_end_0031
  8209 0000515C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8210 00005161 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8211 00005165 48FFC6                  	inc rsi
  8212 00005168 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  8213                                  .L_lambda_simple_params_end_0031:
  8214 0000516A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8215 0000516D 4889C3                  	mov rbx, rax
  8216 00005170 58                      	pop rax
  8217 00005171 C60004                  	mov byte [rax], T_closure
  8218 00005174 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8219 00005178 48C74009[85510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  8220 00005180 E968010000              	jmp .L_lambda_simple_end_0031
  8221                                  .L_lambda_simple_code_0031:	; lambda-simple body
  8222 00005185 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8223 0000518B 740B                    	je .L_lambda_simple_arity_check_ok_0031
  8224 0000518D FF742410                	push qword [rsp + 8 * 2]
  8225 00005191 6A03                    	push 3
  8226 00005193 E9D7080100              	jmp L_error_incorrect_arity_simple
  8227                                  .L_lambda_simple_arity_check_ok_0031:
  8228 00005198 C8000000                	enter 0, 0
  8229                                  	; preparing a non-tail-call
  8230 0000519C 488B4530                	mov rax, PARAM(2)	; param ss
  8231 000051A0 50                      	push rax
  8232 000051A1 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  8233 000051A9 803805                  	cmp byte [rax], T_undefined
  8234 000051AC 0F84D7070100            	je L_error_fvar_undefined
  8235 000051B2 50                      	push rax
  8236 000051B3 6A02                    	push 2	; arg count
  8237 000051B5 488B0425[1C150000]      	mov rax, qword [free_var_110]	; free var ormap
  8238 000051BD 803805                  	cmp byte [rax], T_undefined
  8239 000051C0 0F84C3070100            	je L_error_fvar_undefined
  8240 000051C6 803804                  	cmp byte [rax], T_closure
  8241 000051C9 0F853E080100            	jne L_error_non_closure
  8242 000051CF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8243 000051D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8244 000051D5 483D[02000000]          	cmp rax, sob_boolean_false
  8245 000051DB 7409                    	je .L_if_else_000f
  8246 000051DD 488B4528                	mov rax, PARAM(1)	; param unit
  8247 000051E1 E903010000              	jmp .L_if_end_000f
  8248                                  .L_if_else_000f:
  8249                                  	; preparing a tail-call
  8250                                  	; preparing a non-tail-call
  8251 000051E6 488B4530                	mov rax, PARAM(2)	; param ss
  8252 000051EA 50                      	push rax
  8253 000051EB 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  8254 000051F3 803805                  	cmp byte [rax], T_undefined
  8255 000051F6 0F848D070100            	je L_error_fvar_undefined
  8256 000051FC 50                      	push rax
  8257 000051FD 6A02                    	push 2	; arg count
  8258 000051FF 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  8259 00005207 803805                  	cmp byte [rax], T_undefined
  8260 0000520A 0F8479070100            	je L_error_fvar_undefined
  8261 00005210 803804                  	cmp byte [rax], T_closure
  8262 00005213 0F85F4070100            	jne L_error_non_closure
  8263 00005219 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8264 0000521C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8265 0000521F 50                      	push rax
  8266                                  	; preparing a non-tail-call
  8267                                  	; preparing a non-tail-call
  8268 00005220 488B4530                	mov rax, PARAM(2)	; param ss
  8269 00005224 50                      	push rax
  8270 00005225 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  8271 0000522D 803805                  	cmp byte [rax], T_undefined
  8272 00005230 0F8453070100            	je L_error_fvar_undefined
  8273 00005236 50                      	push rax
  8274 00005237 6A02                    	push 2	; arg count
  8275 00005239 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  8276 00005241 803805                  	cmp byte [rax], T_undefined
  8277 00005244 0F843F070100            	je L_error_fvar_undefined
  8278 0000524A 803804                  	cmp byte [rax], T_closure
  8279 0000524D 0F85BA070100            	jne L_error_non_closure
  8280 00005253 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8281 00005256 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8282 00005259 50                      	push rax
  8283 0000525A 488B4528                	mov rax, PARAM(1)	; param unit
  8284 0000525E 50                      	push rax
  8285 0000525F 488B4520                	mov rax, PARAM(0)	; param f
  8286 00005263 50                      	push rax
  8287 00005264 6A03                    	push 3	; arg count
  8288 00005266 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
  8289 0000526E 803805                  	cmp byte [rax], T_undefined
  8290 00005271 0F8412070100            	je L_error_fvar_undefined
  8291 00005277 803804                  	cmp byte [rax], T_closure
  8292 0000527A 0F858D070100            	jne L_error_non_closure
  8293 00005280 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8294 00005283 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8295 00005286 50                      	push rax
  8296 00005287 488B4520                	mov rax, PARAM(0)	; param f
  8297 0000528B 50                      	push rax
  8298 0000528C 6A03                    	push 3	; arg count
  8299 0000528E 488B4510                	mov rax, ENV
  8300 00005292 488B00                  	mov rax, qword [rax + 8 * 0]
  8301 00005295 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8302 00005298 488B00                  	mov rax, qword [rax]
  8303 0000529B 803804                  	cmp byte [rax], T_closure
  8304 0000529E 0F8569070100            	jne L_error_non_closure
  8305 000052A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8306 000052A7 FF7508                  	push qword [rbp + 8 * 1]
  8307                                   ; old ret addr
  8308 000052AA FF7500                  	push qword [rbp]
  8309                                   ; restore the old rbp
  8310 000052AD BB03000000              	mov rbx, 3
  8311 000052B2 4883C303                	add rbx, 3
  8312 000052B6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8313 000052BA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8314 000052BF 4C8D4DF8                	lea r9, [rbp - 8]
  8315 000052C3 B907000000              	mov rcx, 7
  8316                                  .L_tc_recycle_frame_loop_0031:
  8317 000052C8 4883F900                	cmp rcx, 0
  8318 000052CC 7413                    	je .L_tc_recycle_frame_done_0031
  8319 000052CE 4D8B11                  	mov r10, qword [r9]
  8320 000052D1 4D8910                  	mov qword [r8], r10
  8321 000052D4 4983E808                	sub r8, 8
  8322 000052D8 4983E908                	sub r9, 8
  8323 000052DC 48FFC9                  	dec rcx
  8324 000052DF EBE7                    	jmp .L_tc_recycle_frame_loop_0031
  8325                                  .L_tc_recycle_frame_done_0031:
  8326 000052E1 498D6008                	lea rsp, [r8 + 8]
  8327 000052E5 5D                      	pop rbp ; restore the old rbp
  8328 000052E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8329                                  .L_if_end_000f:
  8330 000052E9 C9                      	leave
  8331 000052EA C22800                  	ret AND_KILL_FRAME(3)
  8332                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8333 000052ED 50                      	push rax
  8334 000052EE 488B4520                	mov rax, PARAM(0)	; param run
  8335 000052F2 8F00                    	pop qword [rax]
  8336 000052F4 48B8-                   	mov rax, sob_void
  8336 000052F6 [0000000000000000] 
  8337                                  
  8338 000052FE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8339 00005303 E8AE070100              	call malloc
  8340 00005308 50                      	push rax
  8341 00005309 BF08000000              	mov rdi, 8 * 1	; new rib
  8342 0000530E E8A3070100              	call malloc
  8343 00005313 50                      	push rax
  8344 00005314 BF10000000              	mov rdi, 8 * 2	; extended env
  8345 00005319 E898070100              	call malloc
  8346 0000531E 488B7D10                	mov rdi, ENV
  8347 00005322 4831F6                  	 xor rsi, rsi
  8348 00005325 4831D2                  	 xor rdx, rdx
  8349 00005328 48FFC2                  	inc rdx
  8350                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  8351 0000532B 4883FE01                	cmp rsi, 1
  8352 0000532F 7410                    	je .L_lambda_opt_env_end_0008
  8353 00005331 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8354 00005335 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8355 00005339 48FFC6                  	inc rsi
  8356 0000533C 48FFC2                  	inc rdx
  8357 0000533F EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8358                                  .L_lambda_opt_env_end_0008:
  8359 00005341 5B                      	pop rbx
  8360 00005342 4831F6                  	xor rsi, rsi
  8361                                  .L_lambda_opt_params_loop_0008:	; copy params
  8362 00005345 4883FE01                	cmp rsi, 1
  8363 00005349 740E                    	je .L_lambda_opt_params_end_0008
  8364 0000534B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8365 00005350 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8366 00005354 48FFC6                  	inc rsi
  8367 00005357 EBEC                    	jmp .L_lambda_opt_params_loop_0008
  8368                                  .L_lambda_opt_params_end_0008:
  8369 00005359 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8370 0000535C 4889C3                  	mov rbx, rax
  8371 0000535F 58                      	pop rax
  8372 00005360 C60004                  	mov byte [rax], T_closure
  8373 00005363 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8374 00005367 48C74009[74530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8375 0000536F E962010000              	jmp .L_lambda_opt_end_0008
  8376                                  .L_lambda_opt_code_0008:; lambda opt body
  8377 00005374 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8378 0000537A 7409                    	je .L_lambda_opt_arity_check_exact_0008
  8379 0000537C 7F57                    	jg .L_lambda_opt_arity_check_more_0008
  8380 0000537E 6A02                    	push 2
  8381 00005380 E9FE060100              	jmp L_error_incorrect_arity_opt
  8382                                  .L_lambda_opt_arity_check_exact_0008:
  8383 00005385 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  8384 00005389 4C894C24F8              	mov qword [rsp -8], r9
  8385 0000538E 4C8B4C2408              	mov r9, qword [rsp +8]
  8386 00005393 4C890C24                	mov qword [rsp +8 * 0], r9
  8387 00005397 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  8388 0000539C 4C89C9                  	mov rcx, r9
  8389 0000539F 49FFC1                  	inc r9
  8390 000053A2 4C894C2408              	mov qword [rsp +8], r9
  8391 000053A7 4889E2                  	mov rdx, rsp
  8392 000053AA 4883C218                	add rdx, 24
  8393                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0008:
  8394 000053AE 4883F900                	cmp rcx, 0
  8395 000053B2 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0008
  8396 000053B4 4C8B02                  	mov r8, qword [rdx]
  8397 000053B7 4C8942F8                	mov qword [rdx - 8], r8
  8398 000053BB 4883C208                	add rdx, 8
  8399 000053BF 48FFC9                  	dec rcx
  8400 000053C2 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0008
  8401                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0008:
  8402 000053C4 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8403 000053CC 4883EC08                	sub rsp, 8
  8404 000053D0 E984000000              	jmp .L_lambda_opt_stack_adjusted_0008
  8405                                  .L_lambda_opt_arity_check_more_0008:
  8406 000053D5 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8407 000053DA 4D89C4                  	mov r12, r8
  8408 000053DD 4C89C1                  	mov rcx, r8
  8409 000053E0 4D8D5002                	lea r10, [r8 + 2] 
  8410 000053E4 4883E902                	sub rcx, 2
  8411 000053E8 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  8412 000053ED 49B9-                   	mov r9, sob_nil
  8412 000053EF [0100000000000000] 
  8413                                  .L_lambda_opt_create_list_of_opt_params_0008:
  8414 000053F7 4883F900                	cmp rcx, 0
  8415 000053FB 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0008
  8416 000053FD BF11000000              	mov rdi, 17
  8417 00005402 E8AF060100              	call malloc
  8418 00005407 C60021                  	mov byte [rax], T_pair
  8419 0000540A 498B1B                  	mov rbx, qword [r11]
  8420 0000540D 48895801                	mov qword [rax +1], rbx
  8421 00005411 4C894809                	mov qword [rax + 1 + 8], r9
  8422 00005415 4989C1                  	mov r9, rax
  8423 00005418 48FFC9                  	dec rcx
  8424 0000541B 4983EB08                	sub r11, 8
  8425 0000541F EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0008
  8426                                  .L_lambda_opt_create_list_of_opt_params_end_0008:
  8427 00005421 4C8D442428              	lea r8, [rsp + 2*8 + 8*3]
  8428 00005426 4D8908                  	mov qword [r8], r9
  8429 00005429 4E8D14D500000000        	lea r10, [8 * r10]
  8430 00005431 4901E2                  	add r10, rsp
  8431 00005434 B906000000              	mov rcx, 4 + 2
  8432                                  .L_lambda_opt_stack_shrink_loop_0008:
  8433 00005439 4883F900                	cmp rcx, 0
  8434 0000543D 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0008
  8435 0000543F 4D8B18                  	mov r11, qword [r8]
  8436 00005442 4D891A                  	mov qword [r10], r11
  8437 00005445 4983E808                	sub r8, 8
  8438 00005449 4983EA08                	sub r10, 8
  8439 0000544D 48FFC9                  	dec rcx
  8440 00005450 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8441                                  .L_lambda_opt_stack_shrink_loop_exit_0008:
  8442 00005452 4983C208                	add r10, 8
  8443 00005456 4C89D4                  	mov rsp, r10
  8444                                  .L_lambda_opt_stack_adjusted_0008:;continue with the code, the stack is ok
  8445 00005459 48C744241003000000      	mov qword [rsp + 8*2], 3
  8446 00005462 C8000000                	enter 0, 0
  8447                                  	; preparing a tail-call
  8448 00005466 488B4530                	mov rax, PARAM(2)	; param ss
  8449 0000546A 50                      	push rax
  8450 0000546B 488B4528                	mov rax, PARAM(1)	; param unit
  8451 0000546F 50                      	push rax
  8452 00005470 488B4520                	mov rax, PARAM(0)	; param f
  8453 00005474 50                      	push rax
  8454 00005475 6A03                    	push 3	; arg count
  8455 00005477 488B4510                	mov rax, ENV
  8456 0000547B 488B00                  	mov rax, qword [rax + 8 * 0]
  8457 0000547E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8458 00005481 488B00                  	mov rax, qword [rax]
  8459 00005484 803804                  	cmp byte [rax], T_closure
  8460 00005487 0F8580050100            	jne L_error_non_closure
  8461 0000548D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8462 00005490 FF7508                  	push qword [rbp + 8 * 1]
  8463                                   ; old ret addr
  8464 00005493 FF7500                  	push qword [rbp]
  8465                                   ; restore the old rbp
  8466 00005496 BB03000000              	mov rbx, 3
  8467 0000549B 4883C303                	add rbx, 3
  8468 0000549F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8469 000054A3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8470 000054A8 4C8D4DF8                	lea r9, [rbp - 8]
  8471 000054AC B907000000              	mov rcx, 7
  8472                                  .L_tc_recycle_frame_loop_0032:
  8473 000054B1 4883F900                	cmp rcx, 0
  8474 000054B5 7413                    	je .L_tc_recycle_frame_done_0032
  8475 000054B7 4D8B11                  	mov r10, qword [r9]
  8476 000054BA 4D8910                  	mov qword [r8], r10
  8477 000054BD 4983E808                	sub r8, 8
  8478 000054C1 4983E908                	sub r9, 8
  8479 000054C5 48FFC9                  	dec rcx
  8480 000054C8 EBE7                    	jmp .L_tc_recycle_frame_loop_0032
  8481                                  .L_tc_recycle_frame_done_0032:
  8482 000054CA 498D6008                	lea rsp, [r8 + 8]
  8483 000054CE 5D                      	pop rbp ; restore the old rbp
  8484 000054CF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8485 000054D2 C9                      	leave
  8486 000054D3 C22800                  	ret 8 * (2 + 3)
  8487                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8488 000054D6 C9                      	leave
  8489 000054D7 C21800                  	ret AND_KILL_FRAME(1)
  8490                                  .L_lambda_simple_end_0030:	; new closure is in rax
  8491 000054DA 803804                  	cmp byte [rax], T_closure
  8492 000054DD 0F852A050100            	jne L_error_non_closure
  8493 000054E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8494 000054E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8495 000054E9 48890425[73130000]      	mov qword [free_var_85], rax
  8496 000054F1 48B8-                   	mov rax, sob_void
  8496 000054F3 [0000000000000000] 
  8497                                  
  8498 000054FB 4889C7                  	mov rdi, rax
  8499 000054FE E808080100              	call print_sexpr_if_not_void
  8500                                  	; preparing a non-tail-call
  8501 00005503 48B8-                   	mov rax, L_constants + 1993
  8501 00005505 [C907000000000000] 
  8502 0000550D 50                      	push rax
  8503 0000550E 6A01                    	push 1	; arg count
  8504 00005510 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8505 00005515 E89C050100              	call malloc
  8506 0000551A 50                      	push rax
  8507 0000551B BF00000000              	mov rdi, 8 * 0	; new rib
  8508 00005520 E891050100              	call malloc
  8509 00005525 50                      	push rax
  8510 00005526 BF08000000              	mov rdi, 8 * 1	; extended env
  8511 0000552B E886050100              	call malloc
  8512 00005530 488B7D10                	mov rdi, ENV
  8513 00005534 BE00000000              	mov rsi, 0
  8514 00005539 BA01000000              	mov rdx, 1
  8515                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8516 0000553E 4883FE00                	cmp rsi, 0
  8517 00005542 7410                    	je .L_lambda_simple_env_end_0032
  8518 00005544 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8519 00005548 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8520 0000554C 48FFC6                  	inc rsi
  8521 0000554F 48FFC2                  	inc rdx
  8522 00005552 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8523                                  .L_lambda_simple_env_end_0032:
  8524 00005554 5B                      	pop rbx
  8525 00005555 BE00000000              	mov rsi, 0
  8526                                  .L_lambda_simple_params_loop_0032:	; copy params
  8527 0000555A 4883FE00                	cmp rsi, 0
  8528 0000555E 740E                    	je .L_lambda_simple_params_end_0032
  8529 00005560 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8530 00005565 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8531 00005569 48FFC6                  	inc rsi
  8532 0000556C EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8533                                  .L_lambda_simple_params_end_0032:
  8534 0000556E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8535 00005571 4889C3                  	mov rbx, rax
  8536 00005574 58                      	pop rax
  8537 00005575 C60004                  	mov byte [rax], T_closure
  8538 00005578 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8539 0000557C 48C74009[89550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8540 00005584 E955040000              	jmp .L_lambda_simple_end_0032
  8541                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8542 00005589 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8543 0000558F 740B                    	je .L_lambda_simple_arity_check_ok_0032
  8544 00005591 FF742410                	push qword [rsp + 8 * 2]
  8545 00005595 6A01                    	push 1
  8546 00005597 E9D3040100              	jmp L_error_incorrect_arity_simple
  8547                                  .L_lambda_simple_arity_check_ok_0032:
  8548 0000559C C8000000                	enter 0, 0
  8549 000055A0 BF08000000              	mov rdi, 8*1
  8550 000055A5 E80C050100              	call malloc
  8551 000055AA 488B5D20                	mov rbx, PARAM(0)
  8552 000055AE 488918                  	mov qword [rax], rbx
  8553 000055B1 48894520                	mov PARAM(0), rax
  8554 000055B5 48B8-                   	mov rax, sob_void
  8554 000055B7 [0000000000000000] 
  8555                                  
  8556 000055BF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8557 000055C4 E8ED040100              	call malloc
  8558 000055C9 50                      	push rax
  8559 000055CA BF08000000              	mov rdi, 8 * 1	; new rib
  8560 000055CF E8E2040100              	call malloc
  8561 000055D4 50                      	push rax
  8562 000055D5 BF10000000              	mov rdi, 8 * 2	; extended env
  8563 000055DA E8D7040100              	call malloc
  8564 000055DF 488B7D10                	mov rdi, ENV
  8565 000055E3 BE00000000              	mov rsi, 0
  8566 000055E8 BA01000000              	mov rdx, 1
  8567                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8568 000055ED 4883FE01                	cmp rsi, 1
  8569 000055F1 7410                    	je .L_lambda_simple_env_end_0033
  8570 000055F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8571 000055F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8572 000055FB 48FFC6                  	inc rsi
  8573 000055FE 48FFC2                  	inc rdx
  8574 00005601 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8575                                  .L_lambda_simple_env_end_0033:
  8576 00005603 5B                      	pop rbx
  8577 00005604 BE00000000              	mov rsi, 0
  8578                                  .L_lambda_simple_params_loop_0033:	; copy params
  8579 00005609 4883FE01                	cmp rsi, 1
  8580 0000560D 740E                    	je .L_lambda_simple_params_end_0033
  8581 0000560F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8582 00005614 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8583 00005618 48FFC6                  	inc rsi
  8584 0000561B EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8585                                  .L_lambda_simple_params_end_0033:
  8586 0000561D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8587 00005620 4889C3                  	mov rbx, rax
  8588 00005623 58                      	pop rax
  8589 00005624 C60004                  	mov byte [rax], T_closure
  8590 00005627 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8591 0000562B 48C74009[38560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8592 00005633 E9B9010000              	jmp .L_lambda_simple_end_0033
  8593                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8594 00005638 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8595 0000563E 740B                    	je .L_lambda_simple_arity_check_ok_0033
  8596 00005640 FF742410                	push qword [rsp + 8 * 2]
  8597 00005644 6A03                    	push 3
  8598 00005646 E924040100              	jmp L_error_incorrect_arity_simple
  8599                                  .L_lambda_simple_arity_check_ok_0033:
  8600 0000564B C8000000                	enter 0, 0
  8601                                  	; preparing a non-tail-call
  8602 0000564F 488B4530                	mov rax, PARAM(2)	; param ss
  8603 00005653 50                      	push rax
  8604 00005654 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
  8605 0000565C 803805                  	cmp byte [rax], T_undefined
  8606 0000565F 0F8424030100            	je L_error_fvar_undefined
  8607 00005665 50                      	push rax
  8608 00005666 6A02                    	push 2	; arg count
  8609 00005668 488B0425[1C150000]      	mov rax, qword [free_var_110]	; free var ormap
  8610 00005670 803805                  	cmp byte [rax], T_undefined
  8611 00005673 0F8410030100            	je L_error_fvar_undefined
  8612 00005679 803804                  	cmp byte [rax], T_closure
  8613 0000567C 0F858B030100            	jne L_error_non_closure
  8614 00005682 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8615 00005685 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8616 00005688 483D[02000000]          	cmp rax, sob_boolean_false
  8617 0000568E 7409                    	je .L_if_else_0010
  8618 00005690 488B4528                	mov rax, PARAM(1)	; param unit
  8619 00005694 E954010000              	jmp .L_if_end_0010
  8620                                  .L_if_else_0010:
  8621                                  	; preparing a tail-call
  8622                                  	; preparing a non-tail-call
  8623                                  	; preparing a non-tail-call
  8624 00005699 48B8-                   	mov rax, L_constants + 1
  8624 0000569B [0100000000000000] 
  8625 000056A3 50                      	push rax
  8626                                  	; preparing a non-tail-call
  8627                                  	; preparing a non-tail-call
  8628 000056A4 488B4530                	mov rax, PARAM(2)	; param ss
  8629 000056A8 50                      	push rax
  8630 000056A9 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
  8631 000056B1 803805                  	cmp byte [rax], T_undefined
  8632 000056B4 0F84CF020100            	je L_error_fvar_undefined
  8633 000056BA 50                      	push rax
  8634 000056BB 6A02                    	push 2	; arg count
  8635 000056BD 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  8636 000056C5 803805                  	cmp byte [rax], T_undefined
  8637 000056C8 0F84BB020100            	je L_error_fvar_undefined
  8638 000056CE 803804                  	cmp byte [rax], T_closure
  8639 000056D1 0F8536030100            	jne L_error_non_closure
  8640 000056D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8641 000056DA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8642 000056DD 50                      	push rax
  8643 000056DE 488B4528                	mov rax, PARAM(1)	; param unit
  8644 000056E2 50                      	push rax
  8645 000056E3 488B4520                	mov rax, PARAM(0)	; param f
  8646 000056E7 50                      	push rax
  8647 000056E8 6A03                    	push 3	; arg count
  8648 000056EA 488B4510                	mov rax, ENV
  8649 000056EE 488B00                  	mov rax, qword [rax + 8 * 0]
  8650 000056F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8651 000056F4 488B00                  	mov rax, qword [rax]
  8652 000056F7 803804                  	cmp byte [rax], T_closure
  8653 000056FA 0F850D030100            	jne L_error_non_closure
  8654 00005700 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8655 00005703 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8656 00005706 50                      	push rax
  8657 00005707 6A02                    	push 2	; arg count
  8658 00005709 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
  8659 00005711 803805                  	cmp byte [rax], T_undefined
  8660 00005714 0F846F020100            	je L_error_fvar_undefined
  8661 0000571A 803804                  	cmp byte [rax], T_closure
  8662 0000571D 0F85EA020100            	jne L_error_non_closure
  8663 00005723 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8664 00005726 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8665 00005729 50                      	push rax
  8666                                  	; preparing a non-tail-call
  8667 0000572A 488B4530                	mov rax, PARAM(2)	; param ss
  8668 0000572E 50                      	push rax
  8669 0000572F 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
  8670 00005737 803805                  	cmp byte [rax], T_undefined
  8671 0000573A 0F8449020100            	je L_error_fvar_undefined
  8672 00005740 50                      	push rax
  8673 00005741 6A02                    	push 2	; arg count
  8674 00005743 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
  8675 0000574B 803805                  	cmp byte [rax], T_undefined
  8676 0000574E 0F8435020100            	je L_error_fvar_undefined
  8677 00005754 803804                  	cmp byte [rax], T_closure
  8678 00005757 0F85B0020100            	jne L_error_non_closure
  8679 0000575D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8680 00005760 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8681 00005763 50                      	push rax
  8682 00005764 6A02                    	push 2	; arg count
  8683 00005766 488B0425[EE0F0000]      	mov rax, qword [free_var_32]	; free var append
  8684 0000576E 803805                  	cmp byte [rax], T_undefined
  8685 00005771 0F8412020100            	je L_error_fvar_undefined
  8686 00005777 803804                  	cmp byte [rax], T_closure
  8687 0000577A 0F858D020100            	jne L_error_non_closure
  8688 00005780 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8689 00005783 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8690 00005786 50                      	push rax
  8691 00005787 488B4520                	mov rax, PARAM(0)	; param f
  8692 0000578B 50                      	push rax
  8693 0000578C 6A02                    	push 2	; arg count
  8694 0000578E 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
  8695 00005796 803805                  	cmp byte [rax], T_undefined
  8696 00005799 0F84EA010100            	je L_error_fvar_undefined
  8697 0000579F 803804                  	cmp byte [rax], T_closure
  8698 000057A2 0F8565020100            	jne L_error_non_closure
  8699 000057A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8700 000057AB FF7508                  	push qword [rbp + 8 * 1]
  8701                                   ; old ret addr
  8702 000057AE FF7500                  	push qword [rbp]
  8703                                   ; restore the old rbp
  8704 000057B1 BB02000000              	mov rbx, 2
  8705 000057B6 4883C303                	add rbx, 3
  8706 000057BA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8707 000057BE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8708 000057C3 4C8D4DF8                	lea r9, [rbp - 8]
  8709 000057C7 B906000000              	mov rcx, 6
  8710                                  .L_tc_recycle_frame_loop_0033:
  8711 000057CC 4883F900                	cmp rcx, 0
  8712 000057D0 7413                    	je .L_tc_recycle_frame_done_0033
  8713 000057D2 4D8B11                  	mov r10, qword [r9]
  8714 000057D5 4D8910                  	mov qword [r8], r10
  8715 000057D8 4983E808                	sub r8, 8
  8716 000057DC 4983E908                	sub r9, 8
  8717 000057E0 48FFC9                  	dec rcx
  8718 000057E3 EBE7                    	jmp .L_tc_recycle_frame_loop_0033
  8719                                  .L_tc_recycle_frame_done_0033:
  8720 000057E5 498D6008                	lea rsp, [r8 + 8]
  8721 000057E9 5D                      	pop rbp ; restore the old rbp
  8722 000057EA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8723                                  .L_if_end_0010:
  8724 000057ED C9                      	leave
  8725 000057EE C22800                  	ret AND_KILL_FRAME(3)
  8726                                  .L_lambda_simple_end_0033:	; new closure is in rax
  8727 000057F1 50                      	push rax
  8728 000057F2 488B4520                	mov rax, PARAM(0)	; param run
  8729 000057F6 8F00                    	pop qword [rax]
  8730 000057F8 48B8-                   	mov rax, sob_void
  8730 000057FA [0000000000000000] 
  8731                                  
  8732 00005802 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8733 00005807 E8AA020100              	call malloc
  8734 0000580C 50                      	push rax
  8735 0000580D BF08000000              	mov rdi, 8 * 1	; new rib
  8736 00005812 E89F020100              	call malloc
  8737 00005817 50                      	push rax
  8738 00005818 BF10000000              	mov rdi, 8 * 2	; extended env
  8739 0000581D E894020100              	call malloc
  8740 00005822 488B7D10                	mov rdi, ENV
  8741 00005826 4831F6                  	 xor rsi, rsi
  8742 00005829 4831D2                  	 xor rdx, rdx
  8743 0000582C 48FFC2                  	inc rdx
  8744                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  8745 0000582F 4883FE01                	cmp rsi, 1
  8746 00005833 7410                    	je .L_lambda_opt_env_end_0009
  8747 00005835 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8748 00005839 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8749 0000583D 48FFC6                  	inc rsi
  8750 00005840 48FFC2                  	inc rdx
  8751 00005843 EBEA                    	jmp .L_lambda_opt_env_loop_0009
  8752                                  .L_lambda_opt_env_end_0009:
  8753 00005845 5B                      	pop rbx
  8754 00005846 4831F6                  	xor rsi, rsi
  8755                                  .L_lambda_opt_params_loop_0009:	; copy params
  8756 00005849 4883FE01                	cmp rsi, 1
  8757 0000584D 740E                    	je .L_lambda_opt_params_end_0009
  8758 0000584F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8759 00005854 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8760 00005858 48FFC6                  	inc rsi
  8761 0000585B EBEC                    	jmp .L_lambda_opt_params_loop_0009
  8762                                  .L_lambda_opt_params_end_0009:
  8763 0000585D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8764 00005860 4889C3                  	mov rbx, rax
  8765 00005863 58                      	pop rax
  8766 00005864 C60004                  	mov byte [rax], T_closure
  8767 00005867 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8768 0000586B 48C74009[78580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  8769 00005873 E962010000              	jmp .L_lambda_opt_end_0009
  8770                                  .L_lambda_opt_code_0009:; lambda opt body
  8771 00005878 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8772 0000587E 7409                    	je .L_lambda_opt_arity_check_exact_0009
  8773 00005880 7F57                    	jg .L_lambda_opt_arity_check_more_0009
  8774 00005882 6A02                    	push 2
  8775 00005884 E9FA010100              	jmp L_error_incorrect_arity_opt
  8776                                  .L_lambda_opt_arity_check_exact_0009:
  8777 00005889 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  8778 0000588D 4C894C24F8              	mov qword [rsp -8], r9
  8779 00005892 4C8B4C2408              	mov r9, qword [rsp +8]
  8780 00005897 4C890C24                	mov qword [rsp +8 * 0], r9
  8781 0000589B 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  8782 000058A0 4C89C9                  	mov rcx, r9
  8783 000058A3 49FFC1                  	inc r9
  8784 000058A6 4C894C2408              	mov qword [rsp +8], r9
  8785 000058AB 4889E2                  	mov rdx, rsp
  8786 000058AE 4883C218                	add rdx, 24
  8787                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0009:
  8788 000058B2 4883F900                	cmp rcx, 0
  8789 000058B6 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0009
  8790 000058B8 4C8B02                  	mov r8, qword [rdx]
  8791 000058BB 4C8942F8                	mov qword [rdx - 8], r8
  8792 000058BF 4883C208                	add rdx, 8
  8793 000058C3 48FFC9                  	dec rcx
  8794 000058C6 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0009
  8795                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0009:
  8796 000058C8 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8797 000058D0 4883EC08                	sub rsp, 8
  8798 000058D4 E984000000              	jmp .L_lambda_opt_stack_adjusted_0009
  8799                                  .L_lambda_opt_arity_check_more_0009:
  8800 000058D9 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8801 000058DE 4D89C4                  	mov r12, r8
  8802 000058E1 4C89C1                  	mov rcx, r8
  8803 000058E4 4D8D5002                	lea r10, [r8 + 2] 
  8804 000058E8 4883E902                	sub rcx, 2
  8805 000058EC 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  8806 000058F1 49B9-                   	mov r9, sob_nil
  8806 000058F3 [0100000000000000] 
  8807                                  .L_lambda_opt_create_list_of_opt_params_0009:
  8808 000058FB 4883F900                	cmp rcx, 0
  8809 000058FF 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0009
  8810 00005901 BF11000000              	mov rdi, 17
  8811 00005906 E8AB010100              	call malloc
  8812 0000590B C60021                  	mov byte [rax], T_pair
  8813 0000590E 498B1B                  	mov rbx, qword [r11]
  8814 00005911 48895801                	mov qword [rax +1], rbx
  8815 00005915 4C894809                	mov qword [rax + 1 + 8], r9
  8816 00005919 4989C1                  	mov r9, rax
  8817 0000591C 48FFC9                  	dec rcx
  8818 0000591F 4983EB08                	sub r11, 8
  8819 00005923 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0009
  8820                                  .L_lambda_opt_create_list_of_opt_params_end_0009:
  8821 00005925 4C8D442428              	lea r8, [rsp + 2*8 + 8*3]
  8822 0000592A 4D8908                  	mov qword [r8], r9
  8823 0000592D 4E8D14D500000000        	lea r10, [8 * r10]
  8824 00005935 4901E2                  	add r10, rsp
  8825 00005938 B906000000              	mov rcx, 4 + 2
  8826                                  .L_lambda_opt_stack_shrink_loop_0009:
  8827 0000593D 4883F900                	cmp rcx, 0
  8828 00005941 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0009
  8829 00005943 4D8B18                  	mov r11, qword [r8]
  8830 00005946 4D891A                  	mov qword [r10], r11
  8831 00005949 4983E808                	sub r8, 8
  8832 0000594D 4983EA08                	sub r10, 8
  8833 00005951 48FFC9                  	dec rcx
  8834 00005954 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8835                                  .L_lambda_opt_stack_shrink_loop_exit_0009:
  8836 00005956 4983C208                	add r10, 8
  8837 0000595A 4C89D4                  	mov rsp, r10
  8838                                  .L_lambda_opt_stack_adjusted_0009:;continue with the code, the stack is ok
  8839 0000595D 48C744241003000000      	mov qword [rsp + 8*2], 3
  8840 00005966 C8000000                	enter 0, 0
  8841                                  	; preparing a tail-call
  8842 0000596A 488B4530                	mov rax, PARAM(2)	; param ss
  8843 0000596E 50                      	push rax
  8844 0000596F 488B4528                	mov rax, PARAM(1)	; param unit
  8845 00005973 50                      	push rax
  8846 00005974 488B4520                	mov rax, PARAM(0)	; param f
  8847 00005978 50                      	push rax
  8848 00005979 6A03                    	push 3	; arg count
  8849 0000597B 488B4510                	mov rax, ENV
  8850 0000597F 488B00                  	mov rax, qword [rax + 8 * 0]
  8851 00005982 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8852 00005985 488B00                  	mov rax, qword [rax]
  8853 00005988 803804                  	cmp byte [rax], T_closure
  8854 0000598B 0F857C000100            	jne L_error_non_closure
  8855 00005991 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8856 00005994 FF7508                  	push qword [rbp + 8 * 1]
  8857                                   ; old ret addr
  8858 00005997 FF7500                  	push qword [rbp]
  8859                                   ; restore the old rbp
  8860 0000599A BB03000000              	mov rbx, 3
  8861 0000599F 4883C303                	add rbx, 3
  8862 000059A3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8863 000059A7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8864 000059AC 4C8D4DF8                	lea r9, [rbp - 8]
  8865 000059B0 B907000000              	mov rcx, 7
  8866                                  .L_tc_recycle_frame_loop_0034:
  8867 000059B5 4883F900                	cmp rcx, 0
  8868 000059B9 7413                    	je .L_tc_recycle_frame_done_0034
  8869 000059BB 4D8B11                  	mov r10, qword [r9]
  8870 000059BE 4D8910                  	mov qword [r8], r10
  8871 000059C1 4983E808                	sub r8, 8
  8872 000059C5 4983E908                	sub r9, 8
  8873 000059C9 48FFC9                  	dec rcx
  8874 000059CC EBE7                    	jmp .L_tc_recycle_frame_loop_0034
  8875                                  .L_tc_recycle_frame_done_0034:
  8876 000059CE 498D6008                	lea rsp, [r8 + 8]
  8877 000059D2 5D                      	pop rbp ; restore the old rbp
  8878 000059D3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8879 000059D6 C9                      	leave
  8880 000059D7 C22800                  	ret 8 * (2 + 3)
  8881                                  .L_lambda_opt_end_0009:	; new closure is in rax
  8882 000059DA C9                      	leave
  8883 000059DB C21800                  	ret AND_KILL_FRAME(1)
  8884                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8885 000059DE 803804                  	cmp byte [rax], T_closure
  8886 000059E1 0F8526000100            	jne L_error_non_closure
  8887 000059E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8888 000059EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8889 000059ED 48890425[84130000]      	mov qword [free_var_86], rax
  8890 000059F5 48B8-                   	mov rax, sob_void
  8890 000059F7 [0000000000000000] 
  8891                                  
  8892 000059FF 4889C7                  	mov rdi, rax
  8893 00005A02 E804030100              	call print_sexpr_if_not_void
  8894                                  	; preparing a non-tail-call
  8895 00005A07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8896 00005A0C E8A5000100              	call malloc
  8897 00005A11 50                      	push rax
  8898 00005A12 BF00000000              	mov rdi, 8 * 0	; new rib
  8899 00005A17 E89A000100              	call malloc
  8900 00005A1C 50                      	push rax
  8901 00005A1D BF08000000              	mov rdi, 8 * 1	; extended env
  8902 00005A22 E88F000100              	call malloc
  8903 00005A27 488B7D10                	mov rdi, ENV
  8904 00005A2B BE00000000              	mov rsi, 0
  8905 00005A30 BA01000000              	mov rdx, 1
  8906                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8907 00005A35 4883FE00                	cmp rsi, 0
  8908 00005A39 7410                    	je .L_lambda_simple_env_end_0034
  8909 00005A3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8910 00005A3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8911 00005A43 48FFC6                  	inc rsi
  8912 00005A46 48FFC2                  	inc rdx
  8913 00005A49 EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8914                                  .L_lambda_simple_env_end_0034:
  8915 00005A4B 5B                      	pop rbx
  8916 00005A4C BE00000000              	mov rsi, 0
  8917                                  .L_lambda_simple_params_loop_0034:	; copy params
  8918 00005A51 4883FE00                	cmp rsi, 0
  8919 00005A55 740E                    	je .L_lambda_simple_params_end_0034
  8920 00005A57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8921 00005A5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8922 00005A60 48FFC6                  	inc rsi
  8923 00005A63 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8924                                  .L_lambda_simple_params_end_0034:
  8925 00005A65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8926 00005A68 4889C3                  	mov rbx, rax
  8927 00005A6B 58                      	pop rax
  8928 00005A6C C60004                  	mov byte [rax], T_closure
  8929 00005A6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8930 00005A73 48C74009[805A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8931 00005A7B E992000000              	jmp .L_lambda_simple_end_0034
  8932                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8933 00005A80 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8934 00005A86 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8935 00005A88 FF742410                	push qword [rsp + 8 * 2]
  8936 00005A8C 6A00                    	push 0
  8937 00005A8E E9DCFF0000              	jmp L_error_incorrect_arity_simple
  8938                                  .L_lambda_simple_arity_check_ok_0034:
  8939 00005A93 C8000000                	enter 0, 0
  8940                                  	; preparing a tail-call
  8941 00005A97 48B8-                   	mov rax, L_constants + 2187
  8941 00005A99 [8B08000000000000] 
  8942 00005AA1 50                      	push rax
  8943 00005AA2 48B8-                   	mov rax, L_constants + 2178
  8943 00005AA4 [8208000000000000] 
  8944 00005AAC 50                      	push rax
  8945 00005AAD 6A02                    	push 2	; arg count
  8946 00005AAF 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
  8947 00005AB7 803805                  	cmp byte [rax], T_undefined
  8948 00005ABA 0F84C9FE0000            	je L_error_fvar_undefined
  8949 00005AC0 803804                  	cmp byte [rax], T_closure
  8950 00005AC3 0F8544FF0000            	jne L_error_non_closure
  8951 00005AC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8952 00005ACC FF7508                  	push qword [rbp + 8 * 1]
  8953                                   ; old ret addr
  8954 00005ACF FF7500                  	push qword [rbp]
  8955                                   ; restore the old rbp
  8956 00005AD2 BB02000000              	mov rbx, 2
  8957 00005AD7 4883C303                	add rbx, 3
  8958 00005ADB 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  8959 00005ADF 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  8960 00005AE4 4C8D4DF8                	lea r9, [rbp - 8]
  8961 00005AE8 B906000000              	mov rcx, 6
  8962                                  .L_tc_recycle_frame_loop_0035:
  8963 00005AED 4883F900                	cmp rcx, 0
  8964 00005AF1 7413                    	je .L_tc_recycle_frame_done_0035
  8965 00005AF3 4D8B11                  	mov r10, qword [r9]
  8966 00005AF6 4D8910                  	mov qword [r8], r10
  8967 00005AF9 4983E808                	sub r8, 8
  8968 00005AFD 4983E908                	sub r9, 8
  8969 00005B01 48FFC9                  	dec rcx
  8970 00005B04 EBE7                    	jmp .L_tc_recycle_frame_loop_0035
  8971                                  .L_tc_recycle_frame_done_0035:
  8972 00005B06 498D6008                	lea rsp, [r8 + 8]
  8973 00005B0A 5D                      	pop rbp ; restore the old rbp
  8974 00005B0B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8975 00005B0E C9                      	leave
  8976 00005B0F C21000                  	ret AND_KILL_FRAME(0)
  8977                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8978 00005B12 50                      	push rax
  8979 00005B13 6A01                    	push 1	; arg count
  8980 00005B15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8981 00005B1A E897FF0000              	call malloc
  8982 00005B1F 50                      	push rax
  8983 00005B20 BF00000000              	mov rdi, 8 * 0	; new rib
  8984 00005B25 E88CFF0000              	call malloc
  8985 00005B2A 50                      	push rax
  8986 00005B2B BF08000000              	mov rdi, 8 * 1	; extended env
  8987 00005B30 E881FF0000              	call malloc
  8988 00005B35 488B7D10                	mov rdi, ENV
  8989 00005B39 BE00000000              	mov rsi, 0
  8990 00005B3E BA01000000              	mov rdx, 1
  8991                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8992 00005B43 4883FE00                	cmp rsi, 0
  8993 00005B47 7410                    	je .L_lambda_simple_env_end_0035
  8994 00005B49 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8995 00005B4D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8996 00005B51 48FFC6                  	inc rsi
  8997 00005B54 48FFC2                  	inc rdx
  8998 00005B57 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  8999                                  .L_lambda_simple_env_end_0035:
  9000 00005B59 5B                      	pop rbx
  9001 00005B5A BE00000000              	mov rsi, 0
  9002                                  .L_lambda_simple_params_loop_0035:	; copy params
  9003 00005B5F 4883FE00                	cmp rsi, 0
  9004 00005B63 740E                    	je .L_lambda_simple_params_end_0035
  9005 00005B65 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9006 00005B6A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9007 00005B6E 48FFC6                  	inc rsi
  9008 00005B71 EBEC                    	jmp .L_lambda_simple_params_loop_0035
  9009                                  .L_lambda_simple_params_end_0035:
  9010 00005B73 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9011 00005B76 4889C3                  	mov rbx, rax
  9012 00005B79 58                      	pop rax
  9013 00005B7A C60004                  	mov byte [rax], T_closure
  9014 00005B7D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9015 00005B81 48C74009[8E5B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  9016 00005B89 E9010C0000              	jmp .L_lambda_simple_end_0035
  9017                                  .L_lambda_simple_code_0035:	; lambda-simple body
  9018 00005B8E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9019 00005B94 740B                    	je .L_lambda_simple_arity_check_ok_0035
  9020 00005B96 FF742410                	push qword [rsp + 8 * 2]
  9021 00005B9A 6A01                    	push 1
  9022 00005B9C E9CEFE0000              	jmp L_error_incorrect_arity_simple
  9023                                  .L_lambda_simple_arity_check_ok_0035:
  9024 00005BA1 C8000000                	enter 0, 0
  9025                                  	; preparing a tail-call
  9026 00005BA5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9027 00005BAA E807FF0000              	call malloc
  9028 00005BAF 50                      	push rax
  9029 00005BB0 BF08000000              	mov rdi, 8 * 1	; new rib
  9030 00005BB5 E8FCFE0000              	call malloc
  9031 00005BBA 50                      	push rax
  9032 00005BBB BF10000000              	mov rdi, 8 * 2	; extended env
  9033 00005BC0 E8F1FE0000              	call malloc
  9034 00005BC5 488B7D10                	mov rdi, ENV
  9035 00005BC9 BE00000000              	mov rsi, 0
  9036 00005BCE BA01000000              	mov rdx, 1
  9037                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  9038 00005BD3 4883FE01                	cmp rsi, 1
  9039 00005BD7 7410                    	je .L_lambda_simple_env_end_0036
  9040 00005BD9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9041 00005BDD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9042 00005BE1 48FFC6                  	inc rsi
  9043 00005BE4 48FFC2                  	inc rdx
  9044 00005BE7 EBEA                    	jmp .L_lambda_simple_env_loop_0036
  9045                                  .L_lambda_simple_env_end_0036:
  9046 00005BE9 5B                      	pop rbx
  9047 00005BEA BE00000000              	mov rsi, 0
  9048                                  .L_lambda_simple_params_loop_0036:	; copy params
  9049 00005BEF 4883FE01                	cmp rsi, 1
  9050 00005BF3 740E                    	je .L_lambda_simple_params_end_0036
  9051 00005BF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9052 00005BFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9053 00005BFE 48FFC6                  	inc rsi
  9054 00005C01 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  9055                                  .L_lambda_simple_params_end_0036:
  9056 00005C03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9057 00005C06 4889C3                  	mov rbx, rax
  9058 00005C09 58                      	pop rax
  9059 00005C0A C60004                  	mov byte [rax], T_closure
  9060 00005C0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9061 00005C11 48C74009[1E5C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  9062 00005C19 E9A0080000              	jmp .L_lambda_simple_end_0036
  9063                                  .L_lambda_simple_code_0036:	; lambda-simple body
  9064 00005C1E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9065 00005C24 740B                    	je .L_lambda_simple_arity_check_ok_0036
  9066 00005C26 FF742410                	push qword [rsp + 8 * 2]
  9067 00005C2A 6A02                    	push 2
  9068 00005C2C E93EFE0000              	jmp L_error_incorrect_arity_simple
  9069                                  .L_lambda_simple_arity_check_ok_0036:
  9070 00005C31 C8000000                	enter 0, 0
  9071                                  	; preparing a non-tail-call
  9072 00005C35 488B4520                	mov rax, PARAM(0)	; param a
  9073 00005C39 50                      	push rax
  9074 00005C3A 6A01                    	push 1	; arg count
  9075 00005C3C 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
  9076 00005C44 803805                  	cmp byte [rax], T_undefined
  9077 00005C47 0F843CFD0000            	je L_error_fvar_undefined
  9078 00005C4D 803804                  	cmp byte [rax], T_closure
  9079 00005C50 0F85B7FD0000            	jne L_error_non_closure
  9080 00005C56 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9081 00005C59 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9082 00005C5C 483D[02000000]          	cmp rax, sob_boolean_false
  9083 00005C62 0F8487020000            	je .L_if_else_001c
  9084                                  	; preparing a non-tail-call
  9085 00005C68 488B4528                	mov rax, PARAM(1)	; param b
  9086 00005C6C 50                      	push rax
  9087 00005C6D 6A01                    	push 1	; arg count
  9088 00005C6F 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
  9089 00005C77 803805                  	cmp byte [rax], T_undefined
  9090 00005C7A 0F8409FD0000            	je L_error_fvar_undefined
  9091 00005C80 803804                  	cmp byte [rax], T_closure
  9092 00005C83 0F8584FD0000            	jne L_error_non_closure
  9093 00005C89 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9094 00005C8C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9095 00005C8F 483D[02000000]          	cmp rax, sob_boolean_false
  9096 00005C95 7470                    	je .L_if_else_0013
  9097                                  	; preparing a tail-call
  9098 00005C97 488B4528                	mov rax, PARAM(1)	; param b
  9099 00005C9B 50                      	push rax
  9100 00005C9C 488B4520                	mov rax, PARAM(0)	; param a
  9101 00005CA0 50                      	push rax
  9102 00005CA1 6A02                    	push 2	; arg count
  9103 00005CA3 488B0425[890E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9104 00005CAB 803805                  	cmp byte [rax], T_undefined
  9105 00005CAE 0F84D5FC0000            	je L_error_fvar_undefined
  9106 00005CB4 803804                  	cmp byte [rax], T_closure
  9107 00005CB7 0F8550FD0000            	jne L_error_non_closure
  9108 00005CBD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9109 00005CC0 FF7508                  	push qword [rbp + 8 * 1]
  9110                                   ; old ret addr
  9111 00005CC3 FF7500                  	push qword [rbp]
  9112                                   ; restore the old rbp
  9113 00005CC6 BB02000000              	mov rbx, 2
  9114 00005CCB 4883C303                	add rbx, 3
  9115 00005CCF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9116 00005CD3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9117 00005CD8 4C8D4DF8                	lea r9, [rbp - 8]
  9118 00005CDC B906000000              	mov rcx, 6
  9119                                  .L_tc_recycle_frame_loop_0037:
  9120 00005CE1 4883F900                	cmp rcx, 0
  9121 00005CE5 7413                    	je .L_tc_recycle_frame_done_0037
  9122 00005CE7 4D8B11                  	mov r10, qword [r9]
  9123 00005CEA 4D8910                  	mov qword [r8], r10
  9124 00005CED 4983E808                	sub r8, 8
  9125 00005CF1 4983E908                	sub r9, 8
  9126 00005CF5 48FFC9                  	dec rcx
  9127 00005CF8 EBE7                    	jmp .L_tc_recycle_frame_loop_0037
  9128                                  .L_tc_recycle_frame_done_0037:
  9129 00005CFA 498D6008                	lea rsp, [r8 + 8]
  9130 00005CFE 5D                      	pop rbp ; restore the old rbp
  9131 00005CFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9132 00005D02 E9E3010000              	jmp .L_if_end_0013
  9133                                  .L_if_else_0013:
  9134                                  	; preparing a non-tail-call
  9135 00005D07 488B4528                	mov rax, PARAM(1)	; param b
  9136 00005D0B 50                      	push rax
  9137 00005D0C 6A01                    	push 1	; arg count
  9138 00005D0E 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9139 00005D16 803805                  	cmp byte [rax], T_undefined
  9140 00005D19 0F846AFC0000            	je L_error_fvar_undefined
  9141 00005D1F 803804                  	cmp byte [rax], T_closure
  9142 00005D22 0F85E5FC0000            	jne L_error_non_closure
  9143 00005D28 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9144 00005D2B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9145 00005D2E 483D[02000000]          	cmp rax, sob_boolean_false
  9146 00005D34 0F8493000000            	je .L_if_else_0012
  9147                                  	; preparing a tail-call
  9148 00005D3A 488B4528                	mov rax, PARAM(1)	; param b
  9149 00005D3E 50                      	push rax
  9150                                  	; preparing a non-tail-call
  9151 00005D3F 488B4520                	mov rax, PARAM(0)	; param a
  9152 00005D43 50                      	push rax
  9153 00005D44 6A01                    	push 1	; arg count
  9154 00005D46 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9155 00005D4E 803805                  	cmp byte [rax], T_undefined
  9156 00005D51 0F8432FC0000            	je L_error_fvar_undefined
  9157 00005D57 803804                  	cmp byte [rax], T_closure
  9158 00005D5A 0F85ADFC0000            	jne L_error_non_closure
  9159 00005D60 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9160 00005D63 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9161 00005D66 50                      	push rax
  9162 00005D67 6A02                    	push 2	; arg count
  9163 00005D69 488B0425[670E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9164 00005D71 803805                  	cmp byte [rax], T_undefined
  9165 00005D74 0F840FFC0000            	je L_error_fvar_undefined
  9166 00005D7A 803804                  	cmp byte [rax], T_closure
  9167 00005D7D 0F858AFC0000            	jne L_error_non_closure
  9168 00005D83 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9169 00005D86 FF7508                  	push qword [rbp + 8 * 1]
  9170                                   ; old ret addr
  9171 00005D89 FF7500                  	push qword [rbp]
  9172                                   ; restore the old rbp
  9173 00005D8C BB02000000              	mov rbx, 2
  9174 00005D91 4883C303                	add rbx, 3
  9175 00005D95 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9176 00005D99 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9177 00005D9E 4C8D4DF8                	lea r9, [rbp - 8]
  9178 00005DA2 B906000000              	mov rcx, 6
  9179                                  .L_tc_recycle_frame_loop_0038:
  9180 00005DA7 4883F900                	cmp rcx, 0
  9181 00005DAB 7413                    	je .L_tc_recycle_frame_done_0038
  9182 00005DAD 4D8B11                  	mov r10, qword [r9]
  9183 00005DB0 4D8910                  	mov qword [r8], r10
  9184 00005DB3 4983E808                	sub r8, 8
  9185 00005DB7 4983E908                	sub r9, 8
  9186 00005DBB 48FFC9                  	dec rcx
  9187 00005DBE EBE7                    	jmp .L_tc_recycle_frame_loop_0038
  9188                                  .L_tc_recycle_frame_done_0038:
  9189 00005DC0 498D6008                	lea rsp, [r8 + 8]
  9190 00005DC4 5D                      	pop rbp ; restore the old rbp
  9191 00005DC5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9192 00005DC8 E91D010000              	jmp .L_if_end_0012
  9193                                  .L_if_else_0012:
  9194                                  	; preparing a non-tail-call
  9195 00005DCD 488B4528                	mov rax, PARAM(1)	; param b
  9196 00005DD1 50                      	push rax
  9197 00005DD2 6A01                    	push 1	; arg count
  9198 00005DD4 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
  9199 00005DDC 803805                  	cmp byte [rax], T_undefined
  9200 00005DDF 0F84A4FB0000            	je L_error_fvar_undefined
  9201 00005DE5 803804                  	cmp byte [rax], T_closure
  9202 00005DE8 0F851FFC0000            	jne L_error_non_closure
  9203 00005DEE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9204 00005DF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9205 00005DF4 483D[02000000]          	cmp rax, sob_boolean_false
  9206 00005DFA 0F8490000000            	je .L_if_else_0011
  9207                                  	; preparing a tail-call
  9208 00005E00 488B4528                	mov rax, PARAM(1)	; param b
  9209 00005E04 50                      	push rax
  9210                                  	; preparing a non-tail-call
  9211 00005E05 488B4520                	mov rax, PARAM(0)	; param a
  9212 00005E09 50                      	push rax
  9213 00005E0A 6A01                    	push 1	; arg count
  9214 00005E0C 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9215 00005E14 803805                  	cmp byte [rax], T_undefined
  9216 00005E17 0F846CFB0000            	je L_error_fvar_undefined
  9217 00005E1D 803804                  	cmp byte [rax], T_closure
  9218 00005E20 0F85E7FB0000            	jne L_error_non_closure
  9219 00005E26 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9220 00005E29 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9221 00005E2C 50                      	push rax
  9222 00005E2D 6A02                    	push 2	; arg count
  9223 00005E2F 488B0425[780E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9224 00005E37 803805                  	cmp byte [rax], T_undefined
  9225 00005E3A 0F8449FB0000            	je L_error_fvar_undefined
  9226 00005E40 803804                  	cmp byte [rax], T_closure
  9227 00005E43 0F85C4FB0000            	jne L_error_non_closure
  9228 00005E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9229 00005E4C FF7508                  	push qword [rbp + 8 * 1]
  9230                                   ; old ret addr
  9231 00005E4F FF7500                  	push qword [rbp]
  9232                                   ; restore the old rbp
  9233 00005E52 BB02000000              	mov rbx, 2
  9234 00005E57 4883C303                	add rbx, 3
  9235 00005E5B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9236 00005E5F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9237 00005E64 4C8D4DF8                	lea r9, [rbp - 8]
  9238 00005E68 B906000000              	mov rcx, 6
  9239                                  .L_tc_recycle_frame_loop_0039:
  9240 00005E6D 4883F900                	cmp rcx, 0
  9241 00005E71 7413                    	je .L_tc_recycle_frame_done_0039
  9242 00005E73 4D8B11                  	mov r10, qword [r9]
  9243 00005E76 4D8910                  	mov qword [r8], r10
  9244 00005E79 4983E808                	sub r8, 8
  9245 00005E7D 4983E908                	sub r9, 8
  9246 00005E81 48FFC9                  	dec rcx
  9247 00005E84 EBE7                    	jmp .L_tc_recycle_frame_loop_0039
  9248                                  .L_tc_recycle_frame_done_0039:
  9249 00005E86 498D6008                	lea rsp, [r8 + 8]
  9250 00005E8A 5D                      	pop rbp ; restore the old rbp
  9251 00005E8B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9252 00005E8E EB5A                    	jmp .L_if_end_0011
  9253                                  .L_if_else_0011:
  9254                                  	; preparing a tail-call
  9255 00005E90 6A00                    	push 0	; arg count
  9256 00005E92 488B4510                	mov rax, ENV
  9257 00005E96 488B00                  	mov rax, qword [rax + 8 * 0]
  9258 00005E99 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9259 00005E9C 803804                  	cmp byte [rax], T_closure
  9260 00005E9F 0F8568FB0000            	jne L_error_non_closure
  9261 00005EA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9262 00005EA8 FF7508                  	push qword [rbp + 8 * 1]
  9263                                   ; old ret addr
  9264 00005EAB FF7500                  	push qword [rbp]
  9265                                   ; restore the old rbp
  9266 00005EAE BB00000000              	mov rbx, 0
  9267 00005EB3 4883C303                	add rbx, 3
  9268 00005EB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9269 00005EBB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9270 00005EC0 4C8D4DF8                	lea r9, [rbp - 8]
  9271 00005EC4 B904000000              	mov rcx, 4
  9272                                  .L_tc_recycle_frame_loop_003a:
  9273 00005EC9 4883F900                	cmp rcx, 0
  9274 00005ECD 7413                    	je .L_tc_recycle_frame_done_003a
  9275 00005ECF 4D8B11                  	mov r10, qword [r9]
  9276 00005ED2 4D8910                  	mov qword [r8], r10
  9277 00005ED5 4983E808                	sub r8, 8
  9278 00005ED9 4983E908                	sub r9, 8
  9279 00005EDD 48FFC9                  	dec rcx
  9280 00005EE0 EBE7                    	jmp .L_tc_recycle_frame_loop_003a
  9281                                  .L_tc_recycle_frame_done_003a:
  9282 00005EE2 498D6008                	lea rsp, [r8 + 8]
  9283 00005EE6 5D                      	pop rbp ; restore the old rbp
  9284 00005EE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9285                                  .L_if_end_0011:
  9286                                  .L_if_end_0012:
  9287                                  .L_if_end_0013:
  9288 00005EEA E9CB050000              	jmp .L_if_end_001c
  9289                                  .L_if_else_001c:
  9290                                  	; preparing a non-tail-call
  9291 00005EEF 488B4520                	mov rax, PARAM(0)	; param a
  9292 00005EF3 50                      	push rax
  9293 00005EF4 6A01                    	push 1	; arg count
  9294 00005EF6 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9295 00005EFE 803805                  	cmp byte [rax], T_undefined
  9296 00005F01 0F8482FA0000            	je L_error_fvar_undefined
  9297 00005F07 803804                  	cmp byte [rax], T_closure
  9298 00005F0A 0F85FDFA0000            	jne L_error_non_closure
  9299 00005F10 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9300 00005F13 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9301 00005F16 483D[02000000]          	cmp rax, sob_boolean_false
  9302 00005F1C 0F8487020000            	je .L_if_else_001b
  9303                                  	; preparing a non-tail-call
  9304 00005F22 488B4528                	mov rax, PARAM(1)	; param b
  9305 00005F26 50                      	push rax
  9306 00005F27 6A01                    	push 1	; arg count
  9307 00005F29 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
  9308 00005F31 803805                  	cmp byte [rax], T_undefined
  9309 00005F34 0F844FFA0000            	je L_error_fvar_undefined
  9310 00005F3A 803804                  	cmp byte [rax], T_closure
  9311 00005F3D 0F85CAFA0000            	jne L_error_non_closure
  9312 00005F43 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9313 00005F46 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9314 00005F49 483D[02000000]          	cmp rax, sob_boolean_false
  9315 00005F4F 0F8493000000            	je .L_if_else_0016
  9316                                  	; preparing a tail-call
  9317                                  	; preparing a non-tail-call
  9318 00005F55 488B4528                	mov rax, PARAM(1)	; param b
  9319 00005F59 50                      	push rax
  9320 00005F5A 6A01                    	push 1	; arg count
  9321 00005F5C 488B0425[AA0F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9322 00005F64 803805                  	cmp byte [rax], T_undefined
  9323 00005F67 0F841CFA0000            	je L_error_fvar_undefined
  9324 00005F6D 803804                  	cmp byte [rax], T_closure
  9325 00005F70 0F8597FA0000            	jne L_error_non_closure
  9326 00005F76 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9327 00005F79 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9328 00005F7C 50                      	push rax
  9329 00005F7D 488B4520                	mov rax, PARAM(0)	; param a
  9330 00005F81 50                      	push rax
  9331 00005F82 6A02                    	push 2	; arg count
  9332 00005F84 488B0425[670E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9333 00005F8C 803805                  	cmp byte [rax], T_undefined
  9334 00005F8F 0F84F4F90000            	je L_error_fvar_undefined
  9335 00005F95 803804                  	cmp byte [rax], T_closure
  9336 00005F98 0F856FFA0000            	jne L_error_non_closure
  9337 00005F9E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9338 00005FA1 FF7508                  	push qword [rbp + 8 * 1]
  9339                                   ; old ret addr
  9340 00005FA4 FF7500                  	push qword [rbp]
  9341                                   ; restore the old rbp
  9342 00005FA7 BB02000000              	mov rbx, 2
  9343 00005FAC 4883C303                	add rbx, 3
  9344 00005FB0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9345 00005FB4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9346 00005FB9 4C8D4DF8                	lea r9, [rbp - 8]
  9347 00005FBD B906000000              	mov rcx, 6
  9348                                  .L_tc_recycle_frame_loop_003b:
  9349 00005FC2 4883F900                	cmp rcx, 0
  9350 00005FC6 7413                    	je .L_tc_recycle_frame_done_003b
  9351 00005FC8 4D8B11                  	mov r10, qword [r9]
  9352 00005FCB 4D8910                  	mov qword [r8], r10
  9353 00005FCE 4983E808                	sub r8, 8
  9354 00005FD2 4983E908                	sub r9, 8
  9355 00005FD6 48FFC9                  	dec rcx
  9356 00005FD9 EBE7                    	jmp .L_tc_recycle_frame_loop_003b
  9357                                  .L_tc_recycle_frame_done_003b:
  9358 00005FDB 498D6008                	lea rsp, [r8 + 8]
  9359 00005FDF 5D                      	pop rbp ; restore the old rbp
  9360 00005FE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9361 00005FE3 E9BC010000              	jmp .L_if_end_0016
  9362                                  .L_if_else_0016:
  9363                                  	; preparing a non-tail-call
  9364 00005FE8 488B4528                	mov rax, PARAM(1)	; param b
  9365 00005FEC 50                      	push rax
  9366 00005FED 6A01                    	push 1	; arg count
  9367 00005FEF 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9368 00005FF7 803805                  	cmp byte [rax], T_undefined
  9369 00005FFA 0F8489F90000            	je L_error_fvar_undefined
  9370 00006000 803804                  	cmp byte [rax], T_closure
  9371 00006003 0F8504FA0000            	jne L_error_non_closure
  9372 00006009 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9373 0000600C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9374 0000600F 483D[02000000]          	cmp rax, sob_boolean_false
  9375 00006015 7470                    	je .L_if_else_0015
  9376                                  	; preparing a tail-call
  9377 00006017 488B4528                	mov rax, PARAM(1)	; param b
  9378 0000601B 50                      	push rax
  9379 0000601C 488B4520                	mov rax, PARAM(0)	; param a
  9380 00006020 50                      	push rax
  9381 00006021 6A02                    	push 2	; arg count
  9382 00006023 488B0425[670E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9383 0000602B 803805                  	cmp byte [rax], T_undefined
  9384 0000602E 0F8455F90000            	je L_error_fvar_undefined
  9385 00006034 803804                  	cmp byte [rax], T_closure
  9386 00006037 0F85D0F90000            	jne L_error_non_closure
  9387 0000603D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9388 00006040 FF7508                  	push qword [rbp + 8 * 1]
  9389                                   ; old ret addr
  9390 00006043 FF7500                  	push qword [rbp]
  9391                                   ; restore the old rbp
  9392 00006046 BB02000000              	mov rbx, 2
  9393 0000604B 4883C303                	add rbx, 3
  9394 0000604F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9395 00006053 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9396 00006058 4C8D4DF8                	lea r9, [rbp - 8]
  9397 0000605C B906000000              	mov rcx, 6
  9398                                  .L_tc_recycle_frame_loop_003c:
  9399 00006061 4883F900                	cmp rcx, 0
  9400 00006065 7413                    	je .L_tc_recycle_frame_done_003c
  9401 00006067 4D8B11                  	mov r10, qword [r9]
  9402 0000606A 4D8910                  	mov qword [r8], r10
  9403 0000606D 4983E808                	sub r8, 8
  9404 00006071 4983E908                	sub r9, 8
  9405 00006075 48FFC9                  	dec rcx
  9406 00006078 EBE7                    	jmp .L_tc_recycle_frame_loop_003c
  9407                                  .L_tc_recycle_frame_done_003c:
  9408 0000607A 498D6008                	lea rsp, [r8 + 8]
  9409 0000607E 5D                      	pop rbp ; restore the old rbp
  9410 0000607F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9411 00006082 E91D010000              	jmp .L_if_end_0015
  9412                                  .L_if_else_0015:
  9413                                  	; preparing a non-tail-call
  9414 00006087 488B4528                	mov rax, PARAM(1)	; param b
  9415 0000608B 50                      	push rax
  9416 0000608C 6A01                    	push 1	; arg count
  9417 0000608E 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
  9418 00006096 803805                  	cmp byte [rax], T_undefined
  9419 00006099 0F84EAF80000            	je L_error_fvar_undefined
  9420 0000609F 803804                  	cmp byte [rax], T_closure
  9421 000060A2 0F8565F90000            	jne L_error_non_closure
  9422 000060A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9423 000060AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  9424 000060AE 483D[02000000]          	cmp rax, sob_boolean_false
  9425 000060B4 0F8490000000            	je .L_if_else_0014
  9426                                  	; preparing a tail-call
  9427 000060BA 488B4528                	mov rax, PARAM(1)	; param b
  9428 000060BE 50                      	push rax
  9429                                  	; preparing a non-tail-call
  9430 000060BF 488B4520                	mov rax, PARAM(0)	; param a
  9431 000060C3 50                      	push rax
  9432 000060C4 6A01                    	push 1	; arg count
  9433 000060C6 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9434 000060CE 803805                  	cmp byte [rax], T_undefined
  9435 000060D1 0F84B2F80000            	je L_error_fvar_undefined
  9436 000060D7 803804                  	cmp byte [rax], T_closure
  9437 000060DA 0F852DF90000            	jne L_error_non_closure
  9438 000060E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9439 000060E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9440 000060E6 50                      	push rax
  9441 000060E7 6A02                    	push 2	; arg count
  9442 000060E9 488B0425[780E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9443 000060F1 803805                  	cmp byte [rax], T_undefined
  9444 000060F4 0F848FF80000            	je L_error_fvar_undefined
  9445 000060FA 803804                  	cmp byte [rax], T_closure
  9446 000060FD 0F850AF90000            	jne L_error_non_closure
  9447 00006103 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9448 00006106 FF7508                  	push qword [rbp + 8 * 1]
  9449                                   ; old ret addr
  9450 00006109 FF7500                  	push qword [rbp]
  9451                                   ; restore the old rbp
  9452 0000610C BB02000000              	mov rbx, 2
  9453 00006111 4883C303                	add rbx, 3
  9454 00006115 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9455 00006119 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9456 0000611E 4C8D4DF8                	lea r9, [rbp - 8]
  9457 00006122 B906000000              	mov rcx, 6
  9458                                  .L_tc_recycle_frame_loop_003d:
  9459 00006127 4883F900                	cmp rcx, 0
  9460 0000612B 7413                    	je .L_tc_recycle_frame_done_003d
  9461 0000612D 4D8B11                  	mov r10, qword [r9]
  9462 00006130 4D8910                  	mov qword [r8], r10
  9463 00006133 4983E808                	sub r8, 8
  9464 00006137 4983E908                	sub r9, 8
  9465 0000613B 48FFC9                  	dec rcx
  9466 0000613E EBE7                    	jmp .L_tc_recycle_frame_loop_003d
  9467                                  .L_tc_recycle_frame_done_003d:
  9468 00006140 498D6008                	lea rsp, [r8 + 8]
  9469 00006144 5D                      	pop rbp ; restore the old rbp
  9470 00006145 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9471 00006148 EB5A                    	jmp .L_if_end_0014
  9472                                  .L_if_else_0014:
  9473                                  	; preparing a tail-call
  9474 0000614A 6A00                    	push 0	; arg count
  9475 0000614C 488B4510                	mov rax, ENV
  9476 00006150 488B00                  	mov rax, qword [rax + 8 * 0]
  9477 00006153 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9478 00006156 803804                  	cmp byte [rax], T_closure
  9479 00006159 0F85AEF80000            	jne L_error_non_closure
  9480 0000615F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9481 00006162 FF7508                  	push qword [rbp + 8 * 1]
  9482                                   ; old ret addr
  9483 00006165 FF7500                  	push qword [rbp]
  9484                                   ; restore the old rbp
  9485 00006168 BB00000000              	mov rbx, 0
  9486 0000616D 4883C303                	add rbx, 3
  9487 00006171 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9488 00006175 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9489 0000617A 4C8D4DF8                	lea r9, [rbp - 8]
  9490 0000617E B904000000              	mov rcx, 4
  9491                                  .L_tc_recycle_frame_loop_003e:
  9492 00006183 4883F900                	cmp rcx, 0
  9493 00006187 7413                    	je .L_tc_recycle_frame_done_003e
  9494 00006189 4D8B11                  	mov r10, qword [r9]
  9495 0000618C 4D8910                  	mov qword [r8], r10
  9496 0000618F 4983E808                	sub r8, 8
  9497 00006193 4983E908                	sub r9, 8
  9498 00006197 48FFC9                  	dec rcx
  9499 0000619A EBE7                    	jmp .L_tc_recycle_frame_loop_003e
  9500                                  .L_tc_recycle_frame_done_003e:
  9501 0000619C 498D6008                	lea rsp, [r8 + 8]
  9502 000061A0 5D                      	pop rbp ; restore the old rbp
  9503 000061A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9504                                  .L_if_end_0014:
  9505                                  .L_if_end_0015:
  9506                                  .L_if_end_0016:
  9507 000061A4 E911030000              	jmp .L_if_end_001b
  9508                                  .L_if_else_001b:
  9509                                  	; preparing a non-tail-call
  9510 000061A9 488B4520                	mov rax, PARAM(0)	; param a
  9511 000061AD 50                      	push rax
  9512 000061AE 6A01                    	push 1	; arg count
  9513 000061B0 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
  9514 000061B8 803805                  	cmp byte [rax], T_undefined
  9515 000061BB 0F84C8F70000            	je L_error_fvar_undefined
  9516 000061C1 803804                  	cmp byte [rax], T_closure
  9517 000061C4 0F8543F80000            	jne L_error_non_closure
  9518 000061CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9519 000061CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9520 000061D0 483D[02000000]          	cmp rax, sob_boolean_false
  9521 000061D6 0F8484020000            	je .L_if_else_001a
  9522                                  	; preparing a non-tail-call
  9523 000061DC 488B4528                	mov rax, PARAM(1)	; param b
  9524 000061E0 50                      	push rax
  9525 000061E1 6A01                    	push 1	; arg count
  9526 000061E3 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
  9527 000061EB 803805                  	cmp byte [rax], T_undefined
  9528 000061EE 0F8495F70000            	je L_error_fvar_undefined
  9529 000061F4 803804                  	cmp byte [rax], T_closure
  9530 000061F7 0F8510F80000            	jne L_error_non_closure
  9531 000061FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9532 00006200 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9533 00006203 483D[02000000]          	cmp rax, sob_boolean_false
  9534 00006209 0F8493000000            	je .L_if_else_0019
  9535                                  	; preparing a tail-call
  9536                                  	; preparing a non-tail-call
  9537 0000620F 488B4528                	mov rax, PARAM(1)	; param b
  9538 00006213 50                      	push rax
  9539 00006214 6A01                    	push 1	; arg count
  9540 00006216 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9541 0000621E 803805                  	cmp byte [rax], T_undefined
  9542 00006221 0F8462F70000            	je L_error_fvar_undefined
  9543 00006227 803804                  	cmp byte [rax], T_closure
  9544 0000622A 0F85DDF70000            	jne L_error_non_closure
  9545 00006230 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9546 00006233 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9547 00006236 50                      	push rax
  9548 00006237 488B4520                	mov rax, PARAM(0)	; param a
  9549 0000623B 50                      	push rax
  9550 0000623C 6A02                    	push 2	; arg count
  9551 0000623E 488B0425[780E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9552 00006246 803805                  	cmp byte [rax], T_undefined
  9553 00006249 0F843AF70000            	je L_error_fvar_undefined
  9554 0000624F 803804                  	cmp byte [rax], T_closure
  9555 00006252 0F85B5F70000            	jne L_error_non_closure
  9556 00006258 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9557 0000625B FF7508                  	push qword [rbp + 8 * 1]
  9558                                   ; old ret addr
  9559 0000625E FF7500                  	push qword [rbp]
  9560                                   ; restore the old rbp
  9561 00006261 BB02000000              	mov rbx, 2
  9562 00006266 4883C303                	add rbx, 3
  9563 0000626A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9564 0000626E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9565 00006273 4C8D4DF8                	lea r9, [rbp - 8]
  9566 00006277 B906000000              	mov rcx, 6
  9567                                  .L_tc_recycle_frame_loop_003f:
  9568 0000627C 4883F900                	cmp rcx, 0
  9569 00006280 7413                    	je .L_tc_recycle_frame_done_003f
  9570 00006282 4D8B11                  	mov r10, qword [r9]
  9571 00006285 4D8910                  	mov qword [r8], r10
  9572 00006288 4983E808                	sub r8, 8
  9573 0000628C 4983E908                	sub r9, 8
  9574 00006290 48FFC9                  	dec rcx
  9575 00006293 EBE7                    	jmp .L_tc_recycle_frame_loop_003f
  9576                                  .L_tc_recycle_frame_done_003f:
  9577 00006295 498D6008                	lea rsp, [r8 + 8]
  9578 00006299 5D                      	pop rbp ; restore the old rbp
  9579 0000629A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9580 0000629D E9BC010000              	jmp .L_if_end_0019
  9581                                  .L_if_else_0019:
  9582                                  	; preparing a non-tail-call
  9583 000062A2 488B4528                	mov rax, PARAM(1)	; param b
  9584 000062A6 50                      	push rax
  9585 000062A7 6A01                    	push 1	; arg count
  9586 000062A9 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9587 000062B1 803805                  	cmp byte [rax], T_undefined
  9588 000062B4 0F84CFF60000            	je L_error_fvar_undefined
  9589 000062BA 803804                  	cmp byte [rax], T_closure
  9590 000062BD 0F854AF70000            	jne L_error_non_closure
  9591 000062C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9592 000062C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9593 000062C9 483D[02000000]          	cmp rax, sob_boolean_false
  9594 000062CF 0F8493000000            	je .L_if_else_0018
  9595                                  	; preparing a tail-call
  9596                                  	; preparing a non-tail-call
  9597 000062D5 488B4528                	mov rax, PARAM(1)	; param b
  9598 000062D9 50                      	push rax
  9599 000062DA 6A01                    	push 1	; arg count
  9600 000062DC 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9601 000062E4 803805                  	cmp byte [rax], T_undefined
  9602 000062E7 0F849CF60000            	je L_error_fvar_undefined
  9603 000062ED 803804                  	cmp byte [rax], T_closure
  9604 000062F0 0F8517F70000            	jne L_error_non_closure
  9605 000062F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9606 000062F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9607 000062FC 50                      	push rax
  9608 000062FD 488B4520                	mov rax, PARAM(0)	; param a
  9609 00006301 50                      	push rax
  9610 00006302 6A02                    	push 2	; arg count
  9611 00006304 488B0425[780E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9612 0000630C 803805                  	cmp byte [rax], T_undefined
  9613 0000630F 0F8474F60000            	je L_error_fvar_undefined
  9614 00006315 803804                  	cmp byte [rax], T_closure
  9615 00006318 0F85EFF60000            	jne L_error_non_closure
  9616 0000631E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9617 00006321 FF7508                  	push qword [rbp + 8 * 1]
  9618                                   ; old ret addr
  9619 00006324 FF7500                  	push qword [rbp]
  9620                                   ; restore the old rbp
  9621 00006327 BB02000000              	mov rbx, 2
  9622 0000632C 4883C303                	add rbx, 3
  9623 00006330 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9624 00006334 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9625 00006339 4C8D4DF8                	lea r9, [rbp - 8]
  9626 0000633D B906000000              	mov rcx, 6
  9627                                  .L_tc_recycle_frame_loop_0040:
  9628 00006342 4883F900                	cmp rcx, 0
  9629 00006346 7413                    	je .L_tc_recycle_frame_done_0040
  9630 00006348 4D8B11                  	mov r10, qword [r9]
  9631 0000634B 4D8910                  	mov qword [r8], r10
  9632 0000634E 4983E808                	sub r8, 8
  9633 00006352 4983E908                	sub r9, 8
  9634 00006356 48FFC9                  	dec rcx
  9635 00006359 EBE7                    	jmp .L_tc_recycle_frame_loop_0040
  9636                                  .L_tc_recycle_frame_done_0040:
  9637 0000635B 498D6008                	lea rsp, [r8 + 8]
  9638 0000635F 5D                      	pop rbp ; restore the old rbp
  9639 00006360 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9640 00006363 E9F6000000              	jmp .L_if_end_0018
  9641                                  .L_if_else_0018:
  9642                                  	; preparing a non-tail-call
  9643 00006368 488B4528                	mov rax, PARAM(1)	; param b
  9644 0000636C 50                      	push rax
  9645 0000636D 6A01                    	push 1	; arg count
  9646 0000636F 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
  9647 00006377 803805                  	cmp byte [rax], T_undefined
  9648 0000637A 0F8409F60000            	je L_error_fvar_undefined
  9649 00006380 803804                  	cmp byte [rax], T_closure
  9650 00006383 0F8584F60000            	jne L_error_non_closure
  9651 00006389 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9652 0000638C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9653 0000638F 483D[02000000]          	cmp rax, sob_boolean_false
  9654 00006395 746D                    	je .L_if_else_0017
  9655                                  	; preparing a tail-call
  9656 00006397 488B4528                	mov rax, PARAM(1)	; param b
  9657 0000639B 50                      	push rax
  9658 0000639C 488B4520                	mov rax, PARAM(0)	; param a
  9659 000063A0 50                      	push rax
  9660 000063A1 6A02                    	push 2	; arg count
  9661 000063A3 488B0425[780E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9662 000063AB 803805                  	cmp byte [rax], T_undefined
  9663 000063AE 0F84D5F50000            	je L_error_fvar_undefined
  9664 000063B4 803804                  	cmp byte [rax], T_closure
  9665 000063B7 0F8550F60000            	jne L_error_non_closure
  9666 000063BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9667 000063C0 FF7508                  	push qword [rbp + 8 * 1]
  9668                                   ; old ret addr
  9669 000063C3 FF7500                  	push qword [rbp]
  9670                                   ; restore the old rbp
  9671 000063C6 BB02000000              	mov rbx, 2
  9672 000063CB 4883C303                	add rbx, 3
  9673 000063CF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9674 000063D3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9675 000063D8 4C8D4DF8                	lea r9, [rbp - 8]
  9676 000063DC B906000000              	mov rcx, 6
  9677                                  .L_tc_recycle_frame_loop_0041:
  9678 000063E1 4883F900                	cmp rcx, 0
  9679 000063E5 7413                    	je .L_tc_recycle_frame_done_0041
  9680 000063E7 4D8B11                  	mov r10, qword [r9]
  9681 000063EA 4D8910                  	mov qword [r8], r10
  9682 000063ED 4983E808                	sub r8, 8
  9683 000063F1 4983E908                	sub r9, 8
  9684 000063F5 48FFC9                  	dec rcx
  9685 000063F8 EBE7                    	jmp .L_tc_recycle_frame_loop_0041
  9686                                  .L_tc_recycle_frame_done_0041:
  9687 000063FA 498D6008                	lea rsp, [r8 + 8]
  9688 000063FE 5D                      	pop rbp ; restore the old rbp
  9689 000063FF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9690 00006402 EB5A                    	jmp .L_if_end_0017
  9691                                  .L_if_else_0017:
  9692                                  	; preparing a tail-call
  9693 00006404 6A00                    	push 0	; arg count
  9694 00006406 488B4510                	mov rax, ENV
  9695 0000640A 488B00                  	mov rax, qword [rax + 8 * 0]
  9696 0000640D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9697 00006410 803804                  	cmp byte [rax], T_closure
  9698 00006413 0F85F4F50000            	jne L_error_non_closure
  9699 00006419 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9700 0000641C FF7508                  	push qword [rbp + 8 * 1]
  9701                                   ; old ret addr
  9702 0000641F FF7500                  	push qword [rbp]
  9703                                   ; restore the old rbp
  9704 00006422 BB00000000              	mov rbx, 0
  9705 00006427 4883C303                	add rbx, 3
  9706 0000642B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9707 0000642F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9708 00006434 4C8D4DF8                	lea r9, [rbp - 8]
  9709 00006438 B904000000              	mov rcx, 4
  9710                                  .L_tc_recycle_frame_loop_0042:
  9711 0000643D 4883F900                	cmp rcx, 0
  9712 00006441 7413                    	je .L_tc_recycle_frame_done_0042
  9713 00006443 4D8B11                  	mov r10, qword [r9]
  9714 00006446 4D8910                  	mov qword [r8], r10
  9715 00006449 4983E808                	sub r8, 8
  9716 0000644D 4983E908                	sub r9, 8
  9717 00006451 48FFC9                  	dec rcx
  9718 00006454 EBE7                    	jmp .L_tc_recycle_frame_loop_0042
  9719                                  .L_tc_recycle_frame_done_0042:
  9720 00006456 498D6008                	lea rsp, [r8 + 8]
  9721 0000645A 5D                      	pop rbp ; restore the old rbp
  9722 0000645B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9723                                  .L_if_end_0017:
  9724                                  .L_if_end_0018:
  9725                                  .L_if_end_0019:
  9726 0000645E EB5A                    	jmp .L_if_end_001a
  9727                                  .L_if_else_001a:
  9728                                  	; preparing a tail-call
  9729 00006460 6A00                    	push 0	; arg count
  9730 00006462 488B4510                	mov rax, ENV
  9731 00006466 488B00                  	mov rax, qword [rax + 8 * 0]
  9732 00006469 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9733 0000646C 803804                  	cmp byte [rax], T_closure
  9734 0000646F 0F8598F50000            	jne L_error_non_closure
  9735 00006475 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9736 00006478 FF7508                  	push qword [rbp + 8 * 1]
  9737                                   ; old ret addr
  9738 0000647B FF7500                  	push qword [rbp]
  9739                                   ; restore the old rbp
  9740 0000647E BB00000000              	mov rbx, 0
  9741 00006483 4883C303                	add rbx, 3
  9742 00006487 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9743 0000648B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9744 00006490 4C8D4DF8                	lea r9, [rbp - 8]
  9745 00006494 B904000000              	mov rcx, 4
  9746                                  .L_tc_recycle_frame_loop_0043:
  9747 00006499 4883F900                	cmp rcx, 0
  9748 0000649D 7413                    	je .L_tc_recycle_frame_done_0043
  9749 0000649F 4D8B11                  	mov r10, qword [r9]
  9750 000064A2 4D8910                  	mov qword [r8], r10
  9751 000064A5 4983E808                	sub r8, 8
  9752 000064A9 4983E908                	sub r9, 8
  9753 000064AD 48FFC9                  	dec rcx
  9754 000064B0 EBE7                    	jmp .L_tc_recycle_frame_loop_0043
  9755                                  .L_tc_recycle_frame_done_0043:
  9756 000064B2 498D6008                	lea rsp, [r8 + 8]
  9757 000064B6 5D                      	pop rbp ; restore the old rbp
  9758 000064B7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9759                                  .L_if_end_001a:
  9760                                  .L_if_end_001b:
  9761                                  .L_if_end_001c:
  9762 000064BA C9                      	leave
  9763 000064BB C22000                  	ret AND_KILL_FRAME(2)
  9764                                  .L_lambda_simple_end_0036:	; new closure is in rax
  9765 000064BE 50                      	push rax
  9766 000064BF 6A01                    	push 1	; arg count
  9767 000064C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9768 000064C6 E8EBF50000              	call malloc
  9769 000064CB 50                      	push rax
  9770 000064CC BF08000000              	mov rdi, 8 * 1	; new rib
  9771 000064D1 E8E0F50000              	call malloc
  9772 000064D6 50                      	push rax
  9773 000064D7 BF10000000              	mov rdi, 8 * 2	; extended env
  9774 000064DC E8D5F50000              	call malloc
  9775 000064E1 488B7D10                	mov rdi, ENV
  9776 000064E5 BE00000000              	mov rsi, 0
  9777 000064EA BA01000000              	mov rdx, 1
  9778                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9779 000064EF 4883FE01                	cmp rsi, 1
  9780 000064F3 7410                    	je .L_lambda_simple_env_end_0037
  9781 000064F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9782 000064F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9783 000064FD 48FFC6                  	inc rsi
  9784 00006500 48FFC2                  	inc rdx
  9785 00006503 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9786                                  .L_lambda_simple_env_end_0037:
  9787 00006505 5B                      	pop rbx
  9788 00006506 BE00000000              	mov rsi, 0
  9789                                  .L_lambda_simple_params_loop_0037:	; copy params
  9790 0000650B 4883FE01                	cmp rsi, 1
  9791 0000650F 740E                    	je .L_lambda_simple_params_end_0037
  9792 00006511 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9793 00006516 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9794 0000651A 48FFC6                  	inc rsi
  9795 0000651D EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9796                                  .L_lambda_simple_params_end_0037:
  9797 0000651F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9798 00006522 4889C3                  	mov rbx, rax
  9799 00006525 58                      	pop rax
  9800 00006526 C60004                  	mov byte [rax], T_closure
  9801 00006529 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9802 0000652D 48C74009[3A650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9803 00006535 E903020000              	jmp .L_lambda_simple_end_0037
  9804                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9805 0000653A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9806 00006540 740B                    	je .L_lambda_simple_arity_check_ok_0037
  9807 00006542 FF742410                	push qword [rsp + 8 * 2]
  9808 00006546 6A01                    	push 1
  9809 00006548 E922F50000              	jmp L_error_incorrect_arity_simple
  9810                                  .L_lambda_simple_arity_check_ok_0037:
  9811 0000654D C8000000                	enter 0, 0
  9812 00006551 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9813 00006556 E85BF50000              	call malloc
  9814 0000655B 50                      	push rax
  9815 0000655C BF08000000              	mov rdi, 8 * 1	; new rib
  9816 00006561 E850F50000              	call malloc
  9817 00006566 50                      	push rax
  9818 00006567 BF18000000              	mov rdi, 8 * 3	; extended env
  9819 0000656C E845F50000              	call malloc
  9820 00006571 488B7D10                	mov rdi, ENV
  9821 00006575 4831F6                  	 xor rsi, rsi
  9822 00006578 4831D2                  	 xor rdx, rdx
  9823 0000657B 48FFC2                  	inc rdx
  9824                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  9825 0000657E 4883FE02                	cmp rsi, 2
  9826 00006582 7410                    	je .L_lambda_opt_env_end_000a
  9827 00006584 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9828 00006588 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9829 0000658C 48FFC6                  	inc rsi
  9830 0000658F 48FFC2                  	inc rdx
  9831 00006592 EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9832                                  .L_lambda_opt_env_end_000a:
  9833 00006594 5B                      	pop rbx
  9834 00006595 4831F6                  	xor rsi, rsi
  9835                                  .L_lambda_opt_params_loop_000a:	; copy params
  9836 00006598 4883FE01                	cmp rsi, 1
  9837 0000659C 740E                    	je .L_lambda_opt_params_end_000a
  9838 0000659E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9839 000065A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9840 000065A7 48FFC6                  	inc rsi
  9841 000065AA EBEC                    	jmp .L_lambda_opt_params_loop_000a
  9842                                  .L_lambda_opt_params_end_000a:
  9843 000065AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9844 000065AF 4889C3                  	mov rbx, rax
  9845 000065B2 58                      	pop rax
  9846 000065B3 C60004                  	mov byte [rax], T_closure
  9847 000065B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9848 000065BA 48C74009[C7650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9849 000065C2 E972010000              	jmp .L_lambda_opt_end_000a
  9850                                  .L_lambda_opt_code_000a:; lambda opt body
  9851 000065C7 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9852 000065CD 7409                    	je .L_lambda_opt_arity_check_exact_000a
  9853 000065CF 7F57                    	jg .L_lambda_opt_arity_check_more_000a
  9854 000065D1 6A00                    	push 0
  9855 000065D3 E9ABF40000              	jmp L_error_incorrect_arity_opt
  9856                                  .L_lambda_opt_arity_check_exact_000a:
  9857 000065D8 4C8B0C24                	mov r9, qword [rsp -8 * 0]
  9858 000065DC 4C894C24F8              	mov qword [rsp -8], r9
  9859 000065E1 4C8B4C2408              	mov r9, qword [rsp +8]
  9860 000065E6 4C890C24                	mov qword [rsp +8 * 0], r9
  9861 000065EA 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
  9862 000065EF 4C89C9                  	mov rcx, r9
  9863 000065F2 49FFC1                  	inc r9
  9864 000065F5 4C894C2408              	mov qword [rsp +8], r9
  9865 000065FA 4889E2                  	mov rdx, rsp
  9866 000065FD 4883C218                	add rdx, 24
  9867                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000a:
  9868 00006601 4883F900                	cmp rcx, 0
  9869 00006605 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000a
  9870 00006607 4C8B02                  	mov r8, qword [rdx]
  9871 0000660A 4C8942F8                	mov qword [rdx - 8], r8
  9872 0000660E 4883C208                	add rdx, 8
  9873 00006612 48FFC9                  	dec rcx
  9874 00006615 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000a
  9875                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000a:
  9876 00006617 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  9877 0000661F 4883EC08                	sub rsp, 8
  9878 00006623 E984000000              	jmp .L_lambda_opt_stack_adjusted_000a
  9879                                  .L_lambda_opt_arity_check_more_000a:
  9880 00006628 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  9881 0000662D 4D89C4                  	mov r12, r8
  9882 00006630 4C89C1                  	mov rcx, r8
  9883 00006633 4D8D5002                	lea r10, [r8 + 2] 
  9884 00006637 4883E900                	sub rcx, 0
  9885 0000663B 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
  9886 00006640 49B9-                   	mov r9, sob_nil
  9886 00006642 [0100000000000000] 
  9887                                  .L_lambda_opt_create_list_of_opt_params_000a:
  9888 0000664A 4883F900                	cmp rcx, 0
  9889 0000664E 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000a
  9890 00006650 BF11000000              	mov rdi, 17
  9891 00006655 E85CF40000              	call malloc
  9892 0000665A C60021                  	mov byte [rax], T_pair
  9893 0000665D 498B1B                  	mov rbx, qword [r11]
  9894 00006660 48895801                	mov qword [rax +1], rbx
  9895 00006664 4C894809                	mov qword [rax + 1 + 8], r9
  9896 00006668 4989C1                  	mov r9, rax
  9897 0000666B 48FFC9                  	dec rcx
  9898 0000666E 4983EB08                	sub r11, 8
  9899 00006672 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000a
  9900                                  .L_lambda_opt_create_list_of_opt_params_end_000a:
  9901 00006674 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
  9902 00006679 4D8908                  	mov qword [r8], r9
  9903 0000667C 4E8D14D500000000        	lea r10, [8 * r10]
  9904 00006684 4901E2                  	add r10, rsp
  9905 00006687 B904000000              	mov rcx, 4 + 0
  9906                                  .L_lambda_opt_stack_shrink_loop_000a:
  9907 0000668C 4883F900                	cmp rcx, 0
  9908 00006690 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000a
  9909 00006692 4D8B18                  	mov r11, qword [r8]
  9910 00006695 4D891A                  	mov qword [r10], r11
  9911 00006698 4983E808                	sub r8, 8
  9912 0000669C 4983EA08                	sub r10, 8
  9913 000066A0 48FFC9                  	dec rcx
  9914 000066A3 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9915                                  .L_lambda_opt_stack_shrink_loop_exit_000a:
  9916 000066A5 4983C208                	add r10, 8
  9917 000066A9 4C89D4                  	mov rsp, r10
  9918                                  .L_lambda_opt_stack_adjusted_000a:;continue with the code, the stack is ok
  9919 000066AC 48C744241001000000      	mov qword [rsp + 8*2], 1
  9920 000066B5 C8000000                	enter 0, 0
  9921                                  	; preparing a tail-call
  9922 000066B9 488B4520                	mov rax, PARAM(0)	; param s
  9923 000066BD 50                      	push rax
  9924 000066BE 48B8-                   	mov rax, L_constants + 2135
  9924 000066C0 [5708000000000000] 
  9925 000066C8 50                      	push rax
  9926 000066C9 488B4510                	mov rax, ENV
  9927 000066CD 488B00                  	mov rax, qword [rax + 8 * 0]
  9928 000066D0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9929 000066D3 50                      	push rax
  9930 000066D4 6A03                    	push 3	; arg count
  9931 000066D6 488B0425[73130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9932 000066DE 803805                  	cmp byte [rax], T_undefined
  9933 000066E1 0F84A2F20000            	je L_error_fvar_undefined
  9934 000066E7 803804                  	cmp byte [rax], T_closure
  9935 000066EA 0F851DF30000            	jne L_error_non_closure
  9936 000066F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9937 000066F3 FF7508                  	push qword [rbp + 8 * 1]
  9938                                   ; old ret addr
  9939 000066F6 FF7500                  	push qword [rbp]
  9940                                   ; restore the old rbp
  9941 000066F9 BB03000000              	mov rbx, 3
  9942 000066FE 4883C303                	add rbx, 3
  9943 00006702 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9944 00006706 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9945 0000670B 4C8D4DF8                	lea r9, [rbp - 8]
  9946 0000670F B907000000              	mov rcx, 7
  9947                                  .L_tc_recycle_frame_loop_0044:
  9948 00006714 4883F900                	cmp rcx, 0
  9949 00006718 7413                    	je .L_tc_recycle_frame_done_0044
  9950 0000671A 4D8B11                  	mov r10, qword [r9]
  9951 0000671D 4D8910                  	mov qword [r8], r10
  9952 00006720 4983E808                	sub r8, 8
  9953 00006724 4983E908                	sub r9, 8
  9954 00006728 48FFC9                  	dec rcx
  9955 0000672B EBE7                    	jmp .L_tc_recycle_frame_loop_0044
  9956                                  .L_tc_recycle_frame_done_0044:
  9957 0000672D 498D6008                	lea rsp, [r8 + 8]
  9958 00006731 5D                      	pop rbp ; restore the old rbp
  9959 00006732 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9960 00006735 C9                      	leave
  9961 00006736 C21800                  	ret 8 * (2 + 1)
  9962                                  .L_lambda_opt_end_000a:	; new closure is in rax
  9963 00006739 C9                      	leave
  9964 0000673A C21800                  	ret AND_KILL_FRAME(1)
  9965                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9966 0000673D 803804                  	cmp byte [rax], T_closure
  9967 00006740 0F85C7F20000            	jne L_error_non_closure
  9968 00006746 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9969 00006749 FF7508                  	push qword [rbp + 8 * 1]
  9970                                   ; old ret addr
  9971 0000674C FF7500                  	push qword [rbp]
  9972                                   ; restore the old rbp
  9973 0000674F BB01000000              	mov rbx, 1
  9974 00006754 4883C303                	add rbx, 3
  9975 00006758 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
  9976 0000675C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
  9977 00006761 4C8D4DF8                	lea r9, [rbp - 8]
  9978 00006765 B905000000              	mov rcx, 5
  9979                                  .L_tc_recycle_frame_loop_0036:
  9980 0000676A 4883F900                	cmp rcx, 0
  9981 0000676E 7413                    	je .L_tc_recycle_frame_done_0036
  9982 00006770 4D8B11                  	mov r10, qword [r9]
  9983 00006773 4D8910                  	mov qword [r8], r10
  9984 00006776 4983E808                	sub r8, 8
  9985 0000677A 4983E908                	sub r9, 8
  9986 0000677E 48FFC9                  	dec rcx
  9987 00006781 EBE7                    	jmp .L_tc_recycle_frame_loop_0036
  9988                                  .L_tc_recycle_frame_done_0036:
  9989 00006783 498D6008                	lea rsp, [r8 + 8]
  9990 00006787 5D                      	pop rbp ; restore the old rbp
  9991 00006788 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9992 0000678B C9                      	leave
  9993 0000678C C21800                  	ret AND_KILL_FRAME(1)
  9994                                  .L_lambda_simple_end_0035:	; new closure is in rax
  9995 0000678F 803804                  	cmp byte [rax], T_closure
  9996 00006792 0F8575F20000            	jne L_error_non_closure
  9997 00006798 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9998 0000679B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9999 0000679E 48890425[DF0D0000]      	mov qword [free_var_1], rax
 10000 000067A6 48B8-                   	mov rax, sob_void
 10000 000067A8 [0000000000000000] 
 10001                                  
 10002 000067B0 4889C7                  	mov rdi, rax
 10003 000067B3 E853F50000              	call print_sexpr_if_not_void
 10004                                  	; preparing a non-tail-call
 10005 000067B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10006 000067BD E8F4F20000              	call malloc
 10007 000067C2 50                      	push rax
 10008 000067C3 BF00000000              	mov rdi, 8 * 0	; new rib
 10009 000067C8 E8E9F20000              	call malloc
 10010 000067CD 50                      	push rax
 10011 000067CE BF08000000              	mov rdi, 8 * 1	; extended env
 10012 000067D3 E8DEF20000              	call malloc
 10013 000067D8 488B7D10                	mov rdi, ENV
 10014 000067DC BE00000000              	mov rsi, 0
 10015 000067E1 BA01000000              	mov rdx, 1
 10016                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
 10017 000067E6 4883FE00                	cmp rsi, 0
 10018 000067EA 7410                    	je .L_lambda_simple_env_end_0038
 10019 000067EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10020 000067F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10021 000067F4 48FFC6                  	inc rsi
 10022 000067F7 48FFC2                  	inc rdx
 10023 000067FA EBEA                    	jmp .L_lambda_simple_env_loop_0038
 10024                                  .L_lambda_simple_env_end_0038:
 10025 000067FC 5B                      	pop rbx
 10026 000067FD BE00000000              	mov rsi, 0
 10027                                  .L_lambda_simple_params_loop_0038:	; copy params
 10028 00006802 4883FE00                	cmp rsi, 0
 10029 00006806 740E                    	je .L_lambda_simple_params_end_0038
 10030 00006808 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10031 0000680D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10032 00006811 48FFC6                  	inc rsi
 10033 00006814 EBEC                    	jmp .L_lambda_simple_params_loop_0038
 10034                                  .L_lambda_simple_params_end_0038:
 10035 00006816 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10036 00006819 4889C3                  	mov rbx, rax
 10037 0000681C 58                      	pop rax
 10038 0000681D C60004                  	mov byte [rax], T_closure
 10039 00006820 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10040 00006824 48C74009[31680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
 10041 0000682C E992000000              	jmp .L_lambda_simple_end_0038
 10042                                  .L_lambda_simple_code_0038:	; lambda-simple body
 10043 00006831 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10044 00006837 740B                    	je .L_lambda_simple_arity_check_ok_0038
 10045 00006839 FF742410                	push qword [rsp + 8 * 2]
 10046 0000683D 6A00                    	push 0
 10047 0000683F E92BF20000              	jmp L_error_incorrect_arity_simple
 10048                                  .L_lambda_simple_arity_check_ok_0038:
 10049 00006844 C8000000                	enter 0, 0
 10050                                  	; preparing a tail-call
 10051 00006848 48B8-                   	mov rax, L_constants + 2187
 10051 0000684A [8B08000000000000] 
 10052 00006852 50                      	push rax
 10053 00006853 48B8-                   	mov rax, L_constants + 2251
 10053 00006855 [CB08000000000000] 
 10054 0000685D 50                      	push rax
 10055 0000685E 6A02                    	push 2	; arg count
 10056 00006860 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
 10057 00006868 803805                  	cmp byte [rax], T_undefined
 10058 0000686B 0F8418F10000            	je L_error_fvar_undefined
 10059 00006871 803804                  	cmp byte [rax], T_closure
 10060 00006874 0F8593F10000            	jne L_error_non_closure
 10061 0000687A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10062 0000687D FF7508                  	push qword [rbp + 8 * 1]
 10063                                   ; old ret addr
 10064 00006880 FF7500                  	push qword [rbp]
 10065                                   ; restore the old rbp
 10066 00006883 BB02000000              	mov rbx, 2
 10067 00006888 4883C303                	add rbx, 3
 10068 0000688C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10069 00006890 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10070 00006895 4C8D4DF8                	lea r9, [rbp - 8]
 10071 00006899 B906000000              	mov rcx, 6
 10072                                  .L_tc_recycle_frame_loop_0045:
 10073 0000689E 4883F900                	cmp rcx, 0
 10074 000068A2 7413                    	je .L_tc_recycle_frame_done_0045
 10075 000068A4 4D8B11                  	mov r10, qword [r9]
 10076 000068A7 4D8910                  	mov qword [r8], r10
 10077 000068AA 4983E808                	sub r8, 8
 10078 000068AE 4983E908                	sub r9, 8
 10079 000068B2 48FFC9                  	dec rcx
 10080 000068B5 EBE7                    	jmp .L_tc_recycle_frame_loop_0045
 10081                                  .L_tc_recycle_frame_done_0045:
 10082 000068B7 498D6008                	lea rsp, [r8 + 8]
 10083 000068BB 5D                      	pop rbp ; restore the old rbp
 10084 000068BC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10085 000068BF C9                      	leave
 10086 000068C0 C21000                  	ret AND_KILL_FRAME(0)
 10087                                  .L_lambda_simple_end_0038:	; new closure is in rax
 10088 000068C3 50                      	push rax
 10089 000068C4 6A01                    	push 1	; arg count
 10090 000068C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10091 000068CB E8E6F10000              	call malloc
 10092 000068D0 50                      	push rax
 10093 000068D1 BF00000000              	mov rdi, 8 * 0	; new rib
 10094 000068D6 E8DBF10000              	call malloc
 10095 000068DB 50                      	push rax
 10096 000068DC BF08000000              	mov rdi, 8 * 1	; extended env
 10097 000068E1 E8D0F10000              	call malloc
 10098 000068E6 488B7D10                	mov rdi, ENV
 10099 000068EA BE00000000              	mov rsi, 0
 10100 000068EF BA01000000              	mov rdx, 1
 10101                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
 10102 000068F4 4883FE00                	cmp rsi, 0
 10103 000068F8 7410                    	je .L_lambda_simple_env_end_0039
 10104 000068FA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10105 000068FE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10106 00006902 48FFC6                  	inc rsi
 10107 00006905 48FFC2                  	inc rdx
 10108 00006908 EBEA                    	jmp .L_lambda_simple_env_loop_0039
 10109                                  .L_lambda_simple_env_end_0039:
 10110 0000690A 5B                      	pop rbx
 10111 0000690B BE00000000              	mov rsi, 0
 10112                                  .L_lambda_simple_params_loop_0039:	; copy params
 10113 00006910 4883FE00                	cmp rsi, 0
 10114 00006914 740E                    	je .L_lambda_simple_params_end_0039
 10115 00006916 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10116 0000691B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10117 0000691F 48FFC6                  	inc rsi
 10118 00006922 EBEC                    	jmp .L_lambda_simple_params_loop_0039
 10119                                  .L_lambda_simple_params_end_0039:
 10120 00006924 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10121 00006927 4889C3                  	mov rbx, rax
 10122 0000692A 58                      	pop rax
 10123 0000692B C60004                  	mov byte [rax], T_closure
 10124 0000692E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10125 00006932 48C74009[3F690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
 10126 0000693A E9B70D0000              	jmp .L_lambda_simple_end_0039
 10127                                  .L_lambda_simple_code_0039:	; lambda-simple body
 10128 0000693F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10129 00006945 740B                    	je .L_lambda_simple_arity_check_ok_0039
 10130 00006947 FF742410                	push qword [rsp + 8 * 2]
 10131 0000694B 6A01                    	push 1
 10132 0000694D E91DF10000              	jmp L_error_incorrect_arity_simple
 10133                                  .L_lambda_simple_arity_check_ok_0039:
 10134 00006952 C8000000                	enter 0, 0
 10135                                  	; preparing a tail-call
 10136 00006956 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10137 0000695B E856F10000              	call malloc
 10138 00006960 50                      	push rax
 10139 00006961 BF08000000              	mov rdi, 8 * 1	; new rib
 10140 00006966 E84BF10000              	call malloc
 10141 0000696B 50                      	push rax
 10142 0000696C BF10000000              	mov rdi, 8 * 2	; extended env
 10143 00006971 E840F10000              	call malloc
 10144 00006976 488B7D10                	mov rdi, ENV
 10145 0000697A BE00000000              	mov rsi, 0
 10146 0000697F BA01000000              	mov rdx, 1
 10147                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
 10148 00006984 4883FE01                	cmp rsi, 1
 10149 00006988 7410                    	je .L_lambda_simple_env_end_003a
 10150 0000698A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10151 0000698E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10152 00006992 48FFC6                  	inc rsi
 10153 00006995 48FFC2                  	inc rdx
 10154 00006998 EBEA                    	jmp .L_lambda_simple_env_loop_003a
 10155                                  .L_lambda_simple_env_end_003a:
 10156 0000699A 5B                      	pop rbx
 10157 0000699B BE00000000              	mov rsi, 0
 10158                                  .L_lambda_simple_params_loop_003a:	; copy params
 10159 000069A0 4883FE01                	cmp rsi, 1
 10160 000069A4 740E                    	je .L_lambda_simple_params_end_003a
 10161 000069A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10162 000069AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10163 000069AF 48FFC6                  	inc rsi
 10164 000069B2 EBEC                    	jmp .L_lambda_simple_params_loop_003a
 10165                                  .L_lambda_simple_params_end_003a:
 10166 000069B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10167 000069B7 4889C3                  	mov rbx, rax
 10168 000069BA 58                      	pop rax
 10169 000069BB C60004                  	mov byte [rax], T_closure
 10170 000069BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10171 000069C2 48C74009[CF690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
 10172 000069CA E9A0080000              	jmp .L_lambda_simple_end_003a
 10173                                  .L_lambda_simple_code_003a:	; lambda-simple body
 10174 000069CF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10175 000069D5 740B                    	je .L_lambda_simple_arity_check_ok_003a
 10176 000069D7 FF742410                	push qword [rsp + 8 * 2]
 10177 000069DB 6A02                    	push 2
 10178 000069DD E98DF00000              	jmp L_error_incorrect_arity_simple
 10179                                  .L_lambda_simple_arity_check_ok_003a:
 10180 000069E2 C8000000                	enter 0, 0
 10181                                  	; preparing a non-tail-call
 10182 000069E6 488B4520                	mov rax, PARAM(0)	; param a
 10183 000069EA 50                      	push rax
 10184 000069EB 6A01                    	push 1	; arg count
 10185 000069ED 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 10186 000069F5 803805                  	cmp byte [rax], T_undefined
 10187 000069F8 0F848BEF0000            	je L_error_fvar_undefined
 10188 000069FE 803804                  	cmp byte [rax], T_closure
 10189 00006A01 0F8506F00000            	jne L_error_non_closure
 10190 00006A07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10191 00006A0A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10192 00006A0D 483D[02000000]          	cmp rax, sob_boolean_false
 10193 00006A13 0F8487020000            	je .L_if_else_0028
 10194                                  	; preparing a non-tail-call
 10195 00006A19 488B4528                	mov rax, PARAM(1)	; param b
 10196 00006A1D 50                      	push rax
 10197 00006A1E 6A01                    	push 1	; arg count
 10198 00006A20 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 10199 00006A28 803805                  	cmp byte [rax], T_undefined
 10200 00006A2B 0F8458EF0000            	je L_error_fvar_undefined
 10201 00006A31 803804                  	cmp byte [rax], T_closure
 10202 00006A34 0F85D3EF0000            	jne L_error_non_closure
 10203 00006A3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10204 00006A3D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10205 00006A40 483D[02000000]          	cmp rax, sob_boolean_false
 10206 00006A46 7470                    	je .L_if_else_001f
 10207                                  	; preparing a tail-call
 10208 00006A48 488B4528                	mov rax, PARAM(1)	; param b
 10209 00006A4C 50                      	push rax
 10210 00006A4D 488B4520                	mov rax, PARAM(0)	; param a
 10211 00006A51 50                      	push rax
 10212 00006A52 6A02                    	push 2	; arg count
 10213 00006A54 488B0425[990F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10214 00006A5C 803805                  	cmp byte [rax], T_undefined
 10215 00006A5F 0F8424EF0000            	je L_error_fvar_undefined
 10216 00006A65 803804                  	cmp byte [rax], T_closure
 10217 00006A68 0F859FEF0000            	jne L_error_non_closure
 10218 00006A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10219 00006A71 FF7508                  	push qword [rbp + 8 * 1]
 10220                                   ; old ret addr
 10221 00006A74 FF7500                  	push qword [rbp]
 10222                                   ; restore the old rbp
 10223 00006A77 BB02000000              	mov rbx, 2
 10224 00006A7C 4883C303                	add rbx, 3
 10225 00006A80 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10226 00006A84 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10227 00006A89 4C8D4DF8                	lea r9, [rbp - 8]
 10228 00006A8D B906000000              	mov rcx, 6
 10229                                  .L_tc_recycle_frame_loop_0047:
 10230 00006A92 4883F900                	cmp rcx, 0
 10231 00006A96 7413                    	je .L_tc_recycle_frame_done_0047
 10232 00006A98 4D8B11                  	mov r10, qword [r9]
 10233 00006A9B 4D8910                  	mov qword [r8], r10
 10234 00006A9E 4983E808                	sub r8, 8
 10235 00006AA2 4983E908                	sub r9, 8
 10236 00006AA6 48FFC9                  	dec rcx
 10237 00006AA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0047
 10238                                  .L_tc_recycle_frame_done_0047:
 10239 00006AAB 498D6008                	lea rsp, [r8 + 8]
 10240 00006AAF 5D                      	pop rbp ; restore the old rbp
 10241 00006AB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10242 00006AB3 E9E3010000              	jmp .L_if_end_001f
 10243                                  .L_if_else_001f:
 10244                                  	; preparing a non-tail-call
 10245 00006AB8 488B4528                	mov rax, PARAM(1)	; param b
 10246 00006ABC 50                      	push rax
 10247 00006ABD 6A01                    	push 1	; arg count
 10248 00006ABF 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10249 00006AC7 803805                  	cmp byte [rax], T_undefined
 10250 00006ACA 0F84B9EE0000            	je L_error_fvar_undefined
 10251 00006AD0 803804                  	cmp byte [rax], T_closure
 10252 00006AD3 0F8534EF0000            	jne L_error_non_closure
 10253 00006AD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10254 00006ADC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10255 00006ADF 483D[02000000]          	cmp rax, sob_boolean_false
 10256 00006AE5 0F8493000000            	je .L_if_else_001e
 10257                                  	; preparing a tail-call
 10258 00006AEB 488B4528                	mov rax, PARAM(1)	; param b
 10259 00006AEF 50                      	push rax
 10260                                  	; preparing a non-tail-call
 10261 00006AF0 488B4520                	mov rax, PARAM(0)	; param a
 10262 00006AF4 50                      	push rax
 10263 00006AF5 6A01                    	push 1	; arg count
 10264 00006AF7 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10265 00006AFF 803805                  	cmp byte [rax], T_undefined
 10266 00006B02 0F8481EE0000            	je L_error_fvar_undefined
 10267 00006B08 803804                  	cmp byte [rax], T_closure
 10268 00006B0B 0F85FCEE0000            	jne L_error_non_closure
 10269 00006B11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10270 00006B14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10271 00006B17 50                      	push rax
 10272 00006B18 6A02                    	push 2	; arg count
 10273 00006B1A 488B0425[770F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10274 00006B22 803805                  	cmp byte [rax], T_undefined
 10275 00006B25 0F845EEE0000            	je L_error_fvar_undefined
 10276 00006B2B 803804                  	cmp byte [rax], T_closure
 10277 00006B2E 0F85D9EE0000            	jne L_error_non_closure
 10278 00006B34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10279 00006B37 FF7508                  	push qword [rbp + 8 * 1]
 10280                                   ; old ret addr
 10281 00006B3A FF7500                  	push qword [rbp]
 10282                                   ; restore the old rbp
 10283 00006B3D BB02000000              	mov rbx, 2
 10284 00006B42 4883C303                	add rbx, 3
 10285 00006B46 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10286 00006B4A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10287 00006B4F 4C8D4DF8                	lea r9, [rbp - 8]
 10288 00006B53 B906000000              	mov rcx, 6
 10289                                  .L_tc_recycle_frame_loop_0048:
 10290 00006B58 4883F900                	cmp rcx, 0
 10291 00006B5C 7413                    	je .L_tc_recycle_frame_done_0048
 10292 00006B5E 4D8B11                  	mov r10, qword [r9]
 10293 00006B61 4D8910                  	mov qword [r8], r10
 10294 00006B64 4983E808                	sub r8, 8
 10295 00006B68 4983E908                	sub r9, 8
 10296 00006B6C 48FFC9                  	dec rcx
 10297 00006B6F EBE7                    	jmp .L_tc_recycle_frame_loop_0048
 10298                                  .L_tc_recycle_frame_done_0048:
 10299 00006B71 498D6008                	lea rsp, [r8 + 8]
 10300 00006B75 5D                      	pop rbp ; restore the old rbp
 10301 00006B76 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10302 00006B79 E91D010000              	jmp .L_if_end_001e
 10303                                  .L_if_else_001e:
 10304                                  	; preparing a non-tail-call
 10305 00006B7E 488B4528                	mov rax, PARAM(1)	; param b
 10306 00006B82 50                      	push rax
 10307 00006B83 6A01                    	push 1	; arg count
 10308 00006B85 488B0425[71150000]      	mov rax, qword [free_var_115]	; free var real
 10309 00006B8D 803805                  	cmp byte [rax], T_undefined
 10310 00006B90 0F84F3ED0000            	je L_error_fvar_undefined
 10311 00006B96 803804                  	cmp byte [rax], T_closure
 10312 00006B99 0F856EEE0000            	jne L_error_non_closure
 10313 00006B9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10314 00006BA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10315 00006BA5 483D[02000000]          	cmp rax, sob_boolean_false
 10316 00006BAB 0F8490000000            	je .L_if_else_001d
 10317                                  	; preparing a tail-call
 10318 00006BB1 488B4528                	mov rax, PARAM(1)	; param b
 10319 00006BB5 50                      	push rax
 10320                                  	; preparing a non-tail-call
 10321 00006BB6 488B4520                	mov rax, PARAM(0)	; param a
 10322 00006BBA 50                      	push rax
 10323 00006BBB 6A01                    	push 1	; arg count
 10324 00006BBD 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10325 00006BC5 803805                  	cmp byte [rax], T_undefined
 10326 00006BC8 0F84BBED0000            	je L_error_fvar_undefined
 10327 00006BCE 803804                  	cmp byte [rax], T_closure
 10328 00006BD1 0F8536EE0000            	jne L_error_non_closure
 10329 00006BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10330 00006BDA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10331 00006BDD 50                      	push rax
 10332 00006BDE 6A02                    	push 2	; arg count
 10333 00006BE0 488B0425[880F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10334 00006BE8 803805                  	cmp byte [rax], T_undefined
 10335 00006BEB 0F8498ED0000            	je L_error_fvar_undefined
 10336 00006BF1 803804                  	cmp byte [rax], T_closure
 10337 00006BF4 0F8513EE0000            	jne L_error_non_closure
 10338 00006BFA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10339 00006BFD FF7508                  	push qword [rbp + 8 * 1]
 10340                                   ; old ret addr
 10341 00006C00 FF7500                  	push qword [rbp]
 10342                                   ; restore the old rbp
 10343 00006C03 BB02000000              	mov rbx, 2
 10344 00006C08 4883C303                	add rbx, 3
 10345 00006C0C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10346 00006C10 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10347 00006C15 4C8D4DF8                	lea r9, [rbp - 8]
 10348 00006C19 B906000000              	mov rcx, 6
 10349                                  .L_tc_recycle_frame_loop_0049:
 10350 00006C1E 4883F900                	cmp rcx, 0
 10351 00006C22 7413                    	je .L_tc_recycle_frame_done_0049
 10352 00006C24 4D8B11                  	mov r10, qword [r9]
 10353 00006C27 4D8910                  	mov qword [r8], r10
 10354 00006C2A 4983E808                	sub r8, 8
 10355 00006C2E 4983E908                	sub r9, 8
 10356 00006C32 48FFC9                  	dec rcx
 10357 00006C35 EBE7                    	jmp .L_tc_recycle_frame_loop_0049
 10358                                  .L_tc_recycle_frame_done_0049:
 10359 00006C37 498D6008                	lea rsp, [r8 + 8]
 10360 00006C3B 5D                      	pop rbp ; restore the old rbp
 10361 00006C3C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10362 00006C3F EB5A                    	jmp .L_if_end_001d
 10363                                  .L_if_else_001d:
 10364                                  	; preparing a tail-call
 10365 00006C41 6A00                    	push 0	; arg count
 10366 00006C43 488B4510                	mov rax, ENV
 10367 00006C47 488B00                  	mov rax, qword [rax + 8 * 0]
 10368 00006C4A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10369 00006C4D 803804                  	cmp byte [rax], T_closure
 10370 00006C50 0F85B7ED0000            	jne L_error_non_closure
 10371 00006C56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10372 00006C59 FF7508                  	push qword [rbp + 8 * 1]
 10373                                   ; old ret addr
 10374 00006C5C FF7500                  	push qword [rbp]
 10375                                   ; restore the old rbp
 10376 00006C5F BB00000000              	mov rbx, 0
 10377 00006C64 4883C303                	add rbx, 3
 10378 00006C68 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10379 00006C6C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10380 00006C71 4C8D4DF8                	lea r9, [rbp - 8]
 10381 00006C75 B904000000              	mov rcx, 4
 10382                                  .L_tc_recycle_frame_loop_004a:
 10383 00006C7A 4883F900                	cmp rcx, 0
 10384 00006C7E 7413                    	je .L_tc_recycle_frame_done_004a
 10385 00006C80 4D8B11                  	mov r10, qword [r9]
 10386 00006C83 4D8910                  	mov qword [r8], r10
 10387 00006C86 4983E808                	sub r8, 8
 10388 00006C8A 4983E908                	sub r9, 8
 10389 00006C8E 48FFC9                  	dec rcx
 10390 00006C91 EBE7                    	jmp .L_tc_recycle_frame_loop_004a
 10391                                  .L_tc_recycle_frame_done_004a:
 10392 00006C93 498D6008                	lea rsp, [r8 + 8]
 10393 00006C97 5D                      	pop rbp ; restore the old rbp
 10394 00006C98 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10395                                  .L_if_end_001d:
 10396                                  .L_if_end_001e:
 10397                                  .L_if_end_001f:
 10398 00006C9B E9CB050000              	jmp .L_if_end_0028
 10399                                  .L_if_else_0028:
 10400                                  	; preparing a non-tail-call
 10401 00006CA0 488B4520                	mov rax, PARAM(0)	; param a
 10402 00006CA4 50                      	push rax
 10403 00006CA5 6A01                    	push 1	; arg count
 10404 00006CA7 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10405 00006CAF 803805                  	cmp byte [rax], T_undefined
 10406 00006CB2 0F84D1EC0000            	je L_error_fvar_undefined
 10407 00006CB8 803804                  	cmp byte [rax], T_closure
 10408 00006CBB 0F854CED0000            	jne L_error_non_closure
 10409 00006CC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10410 00006CC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10411 00006CC7 483D[02000000]          	cmp rax, sob_boolean_false
 10412 00006CCD 0F8487020000            	je .L_if_else_0027
 10413                                  	; preparing a non-tail-call
 10414 00006CD3 488B4528                	mov rax, PARAM(1)	; param b
 10415 00006CD7 50                      	push rax
 10416 00006CD8 6A01                    	push 1	; arg count
 10417 00006CDA 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 10418 00006CE2 803805                  	cmp byte [rax], T_undefined
 10419 00006CE5 0F849EEC0000            	je L_error_fvar_undefined
 10420 00006CEB 803804                  	cmp byte [rax], T_closure
 10421 00006CEE 0F8519ED0000            	jne L_error_non_closure
 10422 00006CF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10423 00006CF7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10424 00006CFA 483D[02000000]          	cmp rax, sob_boolean_false
 10425 00006D00 0F8493000000            	je .L_if_else_0022
 10426                                  	; preparing a tail-call
 10427                                  	; preparing a non-tail-call
 10428 00006D06 488B4528                	mov rax, PARAM(1)	; param b
 10429 00006D0A 50                      	push rax
 10430 00006D0B 6A01                    	push 1	; arg count
 10431 00006D0D 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10432 00006D15 803805                  	cmp byte [rax], T_undefined
 10433 00006D18 0F846BEC0000            	je L_error_fvar_undefined
 10434 00006D1E 803804                  	cmp byte [rax], T_closure
 10435 00006D21 0F85E6EC0000            	jne L_error_non_closure
 10436 00006D27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10437 00006D2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10438 00006D2D 50                      	push rax
 10439 00006D2E 488B4520                	mov rax, PARAM(0)	; param a
 10440 00006D32 50                      	push rax
 10441 00006D33 6A02                    	push 2	; arg count
 10442 00006D35 488B0425[770F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10443 00006D3D 803805                  	cmp byte [rax], T_undefined
 10444 00006D40 0F8443EC0000            	je L_error_fvar_undefined
 10445 00006D46 803804                  	cmp byte [rax], T_closure
 10446 00006D49 0F85BEEC0000            	jne L_error_non_closure
 10447 00006D4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10448 00006D52 FF7508                  	push qword [rbp + 8 * 1]
 10449                                   ; old ret addr
 10450 00006D55 FF7500                  	push qword [rbp]
 10451                                   ; restore the old rbp
 10452 00006D58 BB02000000              	mov rbx, 2
 10453 00006D5D 4883C303                	add rbx, 3
 10454 00006D61 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10455 00006D65 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10456 00006D6A 4C8D4DF8                	lea r9, [rbp - 8]
 10457 00006D6E B906000000              	mov rcx, 6
 10458                                  .L_tc_recycle_frame_loop_004b:
 10459 00006D73 4883F900                	cmp rcx, 0
 10460 00006D77 7413                    	je .L_tc_recycle_frame_done_004b
 10461 00006D79 4D8B11                  	mov r10, qword [r9]
 10462 00006D7C 4D8910                  	mov qword [r8], r10
 10463 00006D7F 4983E808                	sub r8, 8
 10464 00006D83 4983E908                	sub r9, 8
 10465 00006D87 48FFC9                  	dec rcx
 10466 00006D8A EBE7                    	jmp .L_tc_recycle_frame_loop_004b
 10467                                  .L_tc_recycle_frame_done_004b:
 10468 00006D8C 498D6008                	lea rsp, [r8 + 8]
 10469 00006D90 5D                      	pop rbp ; restore the old rbp
 10470 00006D91 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10471 00006D94 E9BC010000              	jmp .L_if_end_0022
 10472                                  .L_if_else_0022:
 10473                                  	; preparing a non-tail-call
 10474 00006D99 488B4528                	mov rax, PARAM(1)	; param b
 10475 00006D9D 50                      	push rax
 10476 00006D9E 6A01                    	push 1	; arg count
 10477 00006DA0 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10478 00006DA8 803805                  	cmp byte [rax], T_undefined
 10479 00006DAB 0F84D8EB0000            	je L_error_fvar_undefined
 10480 00006DB1 803804                  	cmp byte [rax], T_closure
 10481 00006DB4 0F8553EC0000            	jne L_error_non_closure
 10482 00006DBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10483 00006DBD FF5009                  	call SOB_CLOSURE_CODE(rax)
 10484 00006DC0 483D[02000000]          	cmp rax, sob_boolean_false
 10485 00006DC6 7470                    	je .L_if_else_0021
 10486                                  	; preparing a tail-call
 10487 00006DC8 488B4528                	mov rax, PARAM(1)	; param b
 10488 00006DCC 50                      	push rax
 10489 00006DCD 488B4520                	mov rax, PARAM(0)	; param a
 10490 00006DD1 50                      	push rax
 10491 00006DD2 6A02                    	push 2	; arg count
 10492 00006DD4 488B0425[770F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10493 00006DDC 803805                  	cmp byte [rax], T_undefined
 10494 00006DDF 0F84A4EB0000            	je L_error_fvar_undefined
 10495 00006DE5 803804                  	cmp byte [rax], T_closure
 10496 00006DE8 0F851FEC0000            	jne L_error_non_closure
 10497 00006DEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10498 00006DF1 FF7508                  	push qword [rbp + 8 * 1]
 10499                                   ; old ret addr
 10500 00006DF4 FF7500                  	push qword [rbp]
 10501                                   ; restore the old rbp
 10502 00006DF7 BB02000000              	mov rbx, 2
 10503 00006DFC 4883C303                	add rbx, 3
 10504 00006E00 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10505 00006E04 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10506 00006E09 4C8D4DF8                	lea r9, [rbp - 8]
 10507 00006E0D B906000000              	mov rcx, 6
 10508                                  .L_tc_recycle_frame_loop_004c:
 10509 00006E12 4883F900                	cmp rcx, 0
 10510 00006E16 7413                    	je .L_tc_recycle_frame_done_004c
 10511 00006E18 4D8B11                  	mov r10, qword [r9]
 10512 00006E1B 4D8910                  	mov qword [r8], r10
 10513 00006E1E 4983E808                	sub r8, 8
 10514 00006E22 4983E908                	sub r9, 8
 10515 00006E26 48FFC9                  	dec rcx
 10516 00006E29 EBE7                    	jmp .L_tc_recycle_frame_loop_004c
 10517                                  .L_tc_recycle_frame_done_004c:
 10518 00006E2B 498D6008                	lea rsp, [r8 + 8]
 10519 00006E2F 5D                      	pop rbp ; restore the old rbp
 10520 00006E30 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10521 00006E33 E91D010000              	jmp .L_if_end_0021
 10522                                  .L_if_else_0021:
 10523                                  	; preparing a non-tail-call
 10524 00006E38 488B4528                	mov rax, PARAM(1)	; param b
 10525 00006E3C 50                      	push rax
 10526 00006E3D 6A01                    	push 1	; arg count
 10527 00006E3F 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 10528 00006E47 803805                  	cmp byte [rax], T_undefined
 10529 00006E4A 0F8439EB0000            	je L_error_fvar_undefined
 10530 00006E50 803804                  	cmp byte [rax], T_closure
 10531 00006E53 0F85B4EB0000            	jne L_error_non_closure
 10532 00006E59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10533 00006E5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10534 00006E5F 483D[02000000]          	cmp rax, sob_boolean_false
 10535 00006E65 0F8490000000            	je .L_if_else_0020
 10536                                  	; preparing a tail-call
 10537 00006E6B 488B4528                	mov rax, PARAM(1)	; param b
 10538 00006E6F 50                      	push rax
 10539                                  	; preparing a non-tail-call
 10540 00006E70 488B4520                	mov rax, PARAM(0)	; param a
 10541 00006E74 50                      	push rax
 10542 00006E75 6A01                    	push 1	; arg count
 10543 00006E77 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10544 00006E7F 803805                  	cmp byte [rax], T_undefined
 10545 00006E82 0F8401EB0000            	je L_error_fvar_undefined
 10546 00006E88 803804                  	cmp byte [rax], T_closure
 10547 00006E8B 0F857CEB0000            	jne L_error_non_closure
 10548 00006E91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10549 00006E94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10550 00006E97 50                      	push rax
 10551 00006E98 6A02                    	push 2	; arg count
 10552 00006E9A 488B0425[880F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10553 00006EA2 803805                  	cmp byte [rax], T_undefined
 10554 00006EA5 0F84DEEA0000            	je L_error_fvar_undefined
 10555 00006EAB 803804                  	cmp byte [rax], T_closure
 10556 00006EAE 0F8559EB0000            	jne L_error_non_closure
 10557 00006EB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10558 00006EB7 FF7508                  	push qword [rbp + 8 * 1]
 10559                                   ; old ret addr
 10560 00006EBA FF7500                  	push qword [rbp]
 10561                                   ; restore the old rbp
 10562 00006EBD BB02000000              	mov rbx, 2
 10563 00006EC2 4883C303                	add rbx, 3
 10564 00006EC6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10565 00006ECA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10566 00006ECF 4C8D4DF8                	lea r9, [rbp - 8]
 10567 00006ED3 B906000000              	mov rcx, 6
 10568                                  .L_tc_recycle_frame_loop_004d:
 10569 00006ED8 4883F900                	cmp rcx, 0
 10570 00006EDC 7413                    	je .L_tc_recycle_frame_done_004d
 10571 00006EDE 4D8B11                  	mov r10, qword [r9]
 10572 00006EE1 4D8910                  	mov qword [r8], r10
 10573 00006EE4 4983E808                	sub r8, 8
 10574 00006EE8 4983E908                	sub r9, 8
 10575 00006EEC 48FFC9                  	dec rcx
 10576 00006EEF EBE7                    	jmp .L_tc_recycle_frame_loop_004d
 10577                                  .L_tc_recycle_frame_done_004d:
 10578 00006EF1 498D6008                	lea rsp, [r8 + 8]
 10579 00006EF5 5D                      	pop rbp ; restore the old rbp
 10580 00006EF6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10581 00006EF9 EB5A                    	jmp .L_if_end_0020
 10582                                  .L_if_else_0020:
 10583                                  	; preparing a tail-call
 10584 00006EFB 6A00                    	push 0	; arg count
 10585 00006EFD 488B4510                	mov rax, ENV
 10586 00006F01 488B00                  	mov rax, qword [rax + 8 * 0]
 10587 00006F04 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10588 00006F07 803804                  	cmp byte [rax], T_closure
 10589 00006F0A 0F85FDEA0000            	jne L_error_non_closure
 10590 00006F10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10591 00006F13 FF7508                  	push qword [rbp + 8 * 1]
 10592                                   ; old ret addr
 10593 00006F16 FF7500                  	push qword [rbp]
 10594                                   ; restore the old rbp
 10595 00006F19 BB00000000              	mov rbx, 0
 10596 00006F1E 4883C303                	add rbx, 3
 10597 00006F22 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10598 00006F26 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10599 00006F2B 4C8D4DF8                	lea r9, [rbp - 8]
 10600 00006F2F B904000000              	mov rcx, 4
 10601                                  .L_tc_recycle_frame_loop_004e:
 10602 00006F34 4883F900                	cmp rcx, 0
 10603 00006F38 7413                    	je .L_tc_recycle_frame_done_004e
 10604 00006F3A 4D8B11                  	mov r10, qword [r9]
 10605 00006F3D 4D8910                  	mov qword [r8], r10
 10606 00006F40 4983E808                	sub r8, 8
 10607 00006F44 4983E908                	sub r9, 8
 10608 00006F48 48FFC9                  	dec rcx
 10609 00006F4B EBE7                    	jmp .L_tc_recycle_frame_loop_004e
 10610                                  .L_tc_recycle_frame_done_004e:
 10611 00006F4D 498D6008                	lea rsp, [r8 + 8]
 10612 00006F51 5D                      	pop rbp ; restore the old rbp
 10613 00006F52 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10614                                  .L_if_end_0020:
 10615                                  .L_if_end_0021:
 10616                                  .L_if_end_0022:
 10617 00006F55 E911030000              	jmp .L_if_end_0027
 10618                                  .L_if_else_0027:
 10619                                  	; preparing a non-tail-call
 10620 00006F5A 488B4520                	mov rax, PARAM(0)	; param a
 10621 00006F5E 50                      	push rax
 10622 00006F5F 6A01                    	push 1	; arg count
 10623 00006F61 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 10624 00006F69 803805                  	cmp byte [rax], T_undefined
 10625 00006F6C 0F8417EA0000            	je L_error_fvar_undefined
 10626 00006F72 803804                  	cmp byte [rax], T_closure
 10627 00006F75 0F8592EA0000            	jne L_error_non_closure
 10628 00006F7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10629 00006F7E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10630 00006F81 483D[02000000]          	cmp rax, sob_boolean_false
 10631 00006F87 0F8484020000            	je .L_if_else_0026
 10632                                  	; preparing a non-tail-call
 10633 00006F8D 488B4528                	mov rax, PARAM(1)	; param b
 10634 00006F91 50                      	push rax
 10635 00006F92 6A01                    	push 1	; arg count
 10636 00006F94 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 10637 00006F9C 803805                  	cmp byte [rax], T_undefined
 10638 00006F9F 0F84E4E90000            	je L_error_fvar_undefined
 10639 00006FA5 803804                  	cmp byte [rax], T_closure
 10640 00006FA8 0F855FEA0000            	jne L_error_non_closure
 10641 00006FAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10642 00006FB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10643 00006FB4 483D[02000000]          	cmp rax, sob_boolean_false
 10644 00006FBA 0F8493000000            	je .L_if_else_0025
 10645                                  	; preparing a tail-call
 10646                                  	; preparing a non-tail-call
 10647 00006FC0 488B4528                	mov rax, PARAM(1)	; param b
 10648 00006FC4 50                      	push rax
 10649 00006FC5 6A01                    	push 1	; arg count
 10650 00006FC7 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10651 00006FCF 803805                  	cmp byte [rax], T_undefined
 10652 00006FD2 0F84B1E90000            	je L_error_fvar_undefined
 10653 00006FD8 803804                  	cmp byte [rax], T_closure
 10654 00006FDB 0F852CEA0000            	jne L_error_non_closure
 10655 00006FE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10656 00006FE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10657 00006FE7 50                      	push rax
 10658 00006FE8 488B4520                	mov rax, PARAM(0)	; param a
 10659 00006FEC 50                      	push rax
 10660 00006FED 6A02                    	push 2	; arg count
 10661 00006FEF 488B0425[880F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10662 00006FF7 803805                  	cmp byte [rax], T_undefined
 10663 00006FFA 0F8489E90000            	je L_error_fvar_undefined
 10664 00007000 803804                  	cmp byte [rax], T_closure
 10665 00007003 0F8504EA0000            	jne L_error_non_closure
 10666 00007009 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10667 0000700C FF7508                  	push qword [rbp + 8 * 1]
 10668                                   ; old ret addr
 10669 0000700F FF7500                  	push qword [rbp]
 10670                                   ; restore the old rbp
 10671 00007012 BB02000000              	mov rbx, 2
 10672 00007017 4883C303                	add rbx, 3
 10673 0000701B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10674 0000701F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10675 00007024 4C8D4DF8                	lea r9, [rbp - 8]
 10676 00007028 B906000000              	mov rcx, 6
 10677                                  .L_tc_recycle_frame_loop_004f:
 10678 0000702D 4883F900                	cmp rcx, 0
 10679 00007031 7413                    	je .L_tc_recycle_frame_done_004f
 10680 00007033 4D8B11                  	mov r10, qword [r9]
 10681 00007036 4D8910                  	mov qword [r8], r10
 10682 00007039 4983E808                	sub r8, 8
 10683 0000703D 4983E908                	sub r9, 8
 10684 00007041 48FFC9                  	dec rcx
 10685 00007044 EBE7                    	jmp .L_tc_recycle_frame_loop_004f
 10686                                  .L_tc_recycle_frame_done_004f:
 10687 00007046 498D6008                	lea rsp, [r8 + 8]
 10688 0000704A 5D                      	pop rbp ; restore the old rbp
 10689 0000704B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10690 0000704E E9BC010000              	jmp .L_if_end_0025
 10691                                  .L_if_else_0025:
 10692                                  	; preparing a non-tail-call
 10693 00007053 488B4528                	mov rax, PARAM(1)	; param b
 10694 00007057 50                      	push rax
 10695 00007058 6A01                    	push 1	; arg count
 10696 0000705A 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10697 00007062 803805                  	cmp byte [rax], T_undefined
 10698 00007065 0F841EE90000            	je L_error_fvar_undefined
 10699 0000706B 803804                  	cmp byte [rax], T_closure
 10700 0000706E 0F8599E90000            	jne L_error_non_closure
 10701 00007074 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10702 00007077 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10703 0000707A 483D[02000000]          	cmp rax, sob_boolean_false
 10704 00007080 0F8493000000            	je .L_if_else_0024
 10705                                  	; preparing a tail-call
 10706                                  	; preparing a non-tail-call
 10707 00007086 488B4528                	mov rax, PARAM(1)	; param b
 10708 0000708A 50                      	push rax
 10709 0000708B 6A01                    	push 1	; arg count
 10710 0000708D 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10711 00007095 803805                  	cmp byte [rax], T_undefined
 10712 00007098 0F84EBE80000            	je L_error_fvar_undefined
 10713 0000709E 803804                  	cmp byte [rax], T_closure
 10714 000070A1 0F8566E90000            	jne L_error_non_closure
 10715 000070A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10716 000070AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10717 000070AD 50                      	push rax
 10718 000070AE 488B4520                	mov rax, PARAM(0)	; param a
 10719 000070B2 50                      	push rax
 10720 000070B3 6A02                    	push 2	; arg count
 10721 000070B5 488B0425[880F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10722 000070BD 803805                  	cmp byte [rax], T_undefined
 10723 000070C0 0F84C3E80000            	je L_error_fvar_undefined
 10724 000070C6 803804                  	cmp byte [rax], T_closure
 10725 000070C9 0F853EE90000            	jne L_error_non_closure
 10726 000070CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10727 000070D2 FF7508                  	push qword [rbp + 8 * 1]
 10728                                   ; old ret addr
 10729 000070D5 FF7500                  	push qword [rbp]
 10730                                   ; restore the old rbp
 10731 000070D8 BB02000000              	mov rbx, 2
 10732 000070DD 4883C303                	add rbx, 3
 10733 000070E1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10734 000070E5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10735 000070EA 4C8D4DF8                	lea r9, [rbp - 8]
 10736 000070EE B906000000              	mov rcx, 6
 10737                                  .L_tc_recycle_frame_loop_0050:
 10738 000070F3 4883F900                	cmp rcx, 0
 10739 000070F7 7413                    	je .L_tc_recycle_frame_done_0050
 10740 000070F9 4D8B11                  	mov r10, qword [r9]
 10741 000070FC 4D8910                  	mov qword [r8], r10
 10742 000070FF 4983E808                	sub r8, 8
 10743 00007103 4983E908                	sub r9, 8
 10744 00007107 48FFC9                  	dec rcx
 10745 0000710A EBE7                    	jmp .L_tc_recycle_frame_loop_0050
 10746                                  .L_tc_recycle_frame_done_0050:
 10747 0000710C 498D6008                	lea rsp, [r8 + 8]
 10748 00007110 5D                      	pop rbp ; restore the old rbp
 10749 00007111 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10750 00007114 E9F6000000              	jmp .L_if_end_0024
 10751                                  .L_if_else_0024:
 10752                                  	; preparing a non-tail-call
 10753 00007119 488B4528                	mov rax, PARAM(1)	; param b
 10754 0000711D 50                      	push rax
 10755 0000711E 6A01                    	push 1	; arg count
 10756 00007120 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 10757 00007128 803805                  	cmp byte [rax], T_undefined
 10758 0000712B 0F8458E80000            	je L_error_fvar_undefined
 10759 00007131 803804                  	cmp byte [rax], T_closure
 10760 00007134 0F85D3E80000            	jne L_error_non_closure
 10761 0000713A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10762 0000713D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10763 00007140 483D[02000000]          	cmp rax, sob_boolean_false
 10764 00007146 746D                    	je .L_if_else_0023
 10765                                  	; preparing a tail-call
 10766 00007148 488B4528                	mov rax, PARAM(1)	; param b
 10767 0000714C 50                      	push rax
 10768 0000714D 488B4520                	mov rax, PARAM(0)	; param a
 10769 00007151 50                      	push rax
 10770 00007152 6A02                    	push 2	; arg count
 10771 00007154 488B0425[880F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10772 0000715C 803805                  	cmp byte [rax], T_undefined
 10773 0000715F 0F8424E80000            	je L_error_fvar_undefined
 10774 00007165 803804                  	cmp byte [rax], T_closure
 10775 00007168 0F859FE80000            	jne L_error_non_closure
 10776 0000716E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10777 00007171 FF7508                  	push qword [rbp + 8 * 1]
 10778                                   ; old ret addr
 10779 00007174 FF7500                  	push qword [rbp]
 10780                                   ; restore the old rbp
 10781 00007177 BB02000000              	mov rbx, 2
 10782 0000717C 4883C303                	add rbx, 3
 10783 00007180 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10784 00007184 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10785 00007189 4C8D4DF8                	lea r9, [rbp - 8]
 10786 0000718D B906000000              	mov rcx, 6
 10787                                  .L_tc_recycle_frame_loop_0051:
 10788 00007192 4883F900                	cmp rcx, 0
 10789 00007196 7413                    	je .L_tc_recycle_frame_done_0051
 10790 00007198 4D8B11                  	mov r10, qword [r9]
 10791 0000719B 4D8910                  	mov qword [r8], r10
 10792 0000719E 4983E808                	sub r8, 8
 10793 000071A2 4983E908                	sub r9, 8
 10794 000071A6 48FFC9                  	dec rcx
 10795 000071A9 EBE7                    	jmp .L_tc_recycle_frame_loop_0051
 10796                                  .L_tc_recycle_frame_done_0051:
 10797 000071AB 498D6008                	lea rsp, [r8 + 8]
 10798 000071AF 5D                      	pop rbp ; restore the old rbp
 10799 000071B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10800 000071B3 EB5A                    	jmp .L_if_end_0023
 10801                                  .L_if_else_0023:
 10802                                  	; preparing a tail-call
 10803 000071B5 6A00                    	push 0	; arg count
 10804 000071B7 488B4510                	mov rax, ENV
 10805 000071BB 488B00                  	mov rax, qword [rax + 8 * 0]
 10806 000071BE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10807 000071C1 803804                  	cmp byte [rax], T_closure
 10808 000071C4 0F8543E80000            	jne L_error_non_closure
 10809 000071CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10810 000071CD FF7508                  	push qword [rbp + 8 * 1]
 10811                                   ; old ret addr
 10812 000071D0 FF7500                  	push qword [rbp]
 10813                                   ; restore the old rbp
 10814 000071D3 BB00000000              	mov rbx, 0
 10815 000071D8 4883C303                	add rbx, 3
 10816 000071DC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10817 000071E0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10818 000071E5 4C8D4DF8                	lea r9, [rbp - 8]
 10819 000071E9 B904000000              	mov rcx, 4
 10820                                  .L_tc_recycle_frame_loop_0052:
 10821 000071EE 4883F900                	cmp rcx, 0
 10822 000071F2 7413                    	je .L_tc_recycle_frame_done_0052
 10823 000071F4 4D8B11                  	mov r10, qword [r9]
 10824 000071F7 4D8910                  	mov qword [r8], r10
 10825 000071FA 4983E808                	sub r8, 8
 10826 000071FE 4983E908                	sub r9, 8
 10827 00007202 48FFC9                  	dec rcx
 10828 00007205 EBE7                    	jmp .L_tc_recycle_frame_loop_0052
 10829                                  .L_tc_recycle_frame_done_0052:
 10830 00007207 498D6008                	lea rsp, [r8 + 8]
 10831 0000720B 5D                      	pop rbp ; restore the old rbp
 10832 0000720C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10833                                  .L_if_end_0023:
 10834                                  .L_if_end_0024:
 10835                                  .L_if_end_0025:
 10836 0000720F EB5A                    	jmp .L_if_end_0026
 10837                                  .L_if_else_0026:
 10838                                  	; preparing a tail-call
 10839 00007211 6A00                    	push 0	; arg count
 10840 00007213 488B4510                	mov rax, ENV
 10841 00007217 488B00                  	mov rax, qword [rax + 8 * 0]
 10842 0000721A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10843 0000721D 803804                  	cmp byte [rax], T_closure
 10844 00007220 0F85E7E70000            	jne L_error_non_closure
 10845 00007226 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10846 00007229 FF7508                  	push qword [rbp + 8 * 1]
 10847                                   ; old ret addr
 10848 0000722C FF7500                  	push qword [rbp]
 10849                                   ; restore the old rbp
 10850 0000722F BB00000000              	mov rbx, 0
 10851 00007234 4883C303                	add rbx, 3
 10852 00007238 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 10853 0000723C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 10854 00007241 4C8D4DF8                	lea r9, [rbp - 8]
 10855 00007245 B904000000              	mov rcx, 4
 10856                                  .L_tc_recycle_frame_loop_0053:
 10857 0000724A 4883F900                	cmp rcx, 0
 10858 0000724E 7413                    	je .L_tc_recycle_frame_done_0053
 10859 00007250 4D8B11                  	mov r10, qword [r9]
 10860 00007253 4D8910                  	mov qword [r8], r10
 10861 00007256 4983E808                	sub r8, 8
 10862 0000725A 4983E908                	sub r9, 8
 10863 0000725E 48FFC9                  	dec rcx
 10864 00007261 EBE7                    	jmp .L_tc_recycle_frame_loop_0053
 10865                                  .L_tc_recycle_frame_done_0053:
 10866 00007263 498D6008                	lea rsp, [r8 + 8]
 10867 00007267 5D                      	pop rbp ; restore the old rbp
 10868 00007268 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10869                                  .L_if_end_0026:
 10870                                  .L_if_end_0027:
 10871                                  .L_if_end_0028:
 10872 0000726B C9                      	leave
 10873 0000726C C22000                  	ret AND_KILL_FRAME(2)
 10874                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10875 0000726F 50                      	push rax
 10876 00007270 6A01                    	push 1	; arg count
 10877 00007272 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10878 00007277 E83AE80000              	call malloc
 10879 0000727C 50                      	push rax
 10880 0000727D BF08000000              	mov rdi, 8 * 1	; new rib
 10881 00007282 E82FE80000              	call malloc
 10882 00007287 50                      	push rax
 10883 00007288 BF10000000              	mov rdi, 8 * 2	; extended env
 10884 0000728D E824E80000              	call malloc
 10885 00007292 488B7D10                	mov rdi, ENV
 10886 00007296 BE00000000              	mov rsi, 0
 10887 0000729B BA01000000              	mov rdx, 1
 10888                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10889 000072A0 4883FE01                	cmp rsi, 1
 10890 000072A4 7410                    	je .L_lambda_simple_env_end_003b
 10891 000072A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10892 000072AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10893 000072AE 48FFC6                  	inc rsi
 10894 000072B1 48FFC2                  	inc rdx
 10895 000072B4 EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10896                                  .L_lambda_simple_env_end_003b:
 10897 000072B6 5B                      	pop rbx
 10898 000072B7 BE00000000              	mov rsi, 0
 10899                                  .L_lambda_simple_params_loop_003b:	; copy params
 10900 000072BC 4883FE01                	cmp rsi, 1
 10901 000072C0 740E                    	je .L_lambda_simple_params_end_003b
 10902 000072C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10903 000072C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10904 000072CB 48FFC6                  	inc rsi
 10905 000072CE EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10906                                  .L_lambda_simple_params_end_003b:
 10907 000072D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10908 000072D3 4889C3                  	mov rbx, rax
 10909 000072D6 58                      	pop rax
 10910 000072D7 C60004                  	mov byte [rax], T_closure
 10911 000072DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10912 000072DE 48C74009[EB720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10913 000072E6 E9B9030000              	jmp .L_lambda_simple_end_003b
 10914                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10915 000072EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10916 000072F1 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10917 000072F3 FF742410                	push qword [rsp + 8 * 2]
 10918 000072F7 6A01                    	push 1
 10919 000072F9 E971E70000              	jmp L_error_incorrect_arity_simple
 10920                                  .L_lambda_simple_arity_check_ok_003b:
 10921 000072FE C8000000                	enter 0, 0
 10922 00007302 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10923 00007307 E8AAE70000              	call malloc
 10924 0000730C 50                      	push rax
 10925 0000730D BF08000000              	mov rdi, 8 * 1	; new rib
 10926 00007312 E89FE70000              	call malloc
 10927 00007317 50                      	push rax
 10928 00007318 BF18000000              	mov rdi, 8 * 3	; extended env
 10929 0000731D E894E70000              	call malloc
 10930 00007322 488B7D10                	mov rdi, ENV
 10931 00007326 4831F6                  	 xor rsi, rsi
 10932 00007329 4831D2                  	 xor rdx, rdx
 10933 0000732C 48FFC2                  	inc rdx
 10934                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 10935 0000732F 4883FE02                	cmp rsi, 2
 10936 00007333 7410                    	je .L_lambda_opt_env_end_000b
 10937 00007335 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10938 00007339 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10939 0000733D 48FFC6                  	inc rsi
 10940 00007340 48FFC2                  	inc rdx
 10941 00007343 EBEA                    	jmp .L_lambda_opt_env_loop_000b
 10942                                  .L_lambda_opt_env_end_000b:
 10943 00007345 5B                      	pop rbx
 10944 00007346 4831F6                  	xor rsi, rsi
 10945                                  .L_lambda_opt_params_loop_000b:	; copy params
 10946 00007349 4883FE01                	cmp rsi, 1
 10947 0000734D 740E                    	je .L_lambda_opt_params_end_000b
 10948 0000734F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10949 00007354 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10950 00007358 48FFC6                  	inc rsi
 10951 0000735B EBEC                    	jmp .L_lambda_opt_params_loop_000b
 10952                                  .L_lambda_opt_params_end_000b:
 10953 0000735D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10954 00007360 4889C3                  	mov rbx, rax
 10955 00007363 58                      	pop rax
 10956 00007364 C60004                  	mov byte [rax], T_closure
 10957 00007367 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10958 0000736B 48C74009[78730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 10959 00007373 E928030000              	jmp .L_lambda_opt_end_000b
 10960                                  .L_lambda_opt_code_000b:; lambda opt body
 10961 00007378 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10962 0000737E 7409                    	je .L_lambda_opt_arity_check_exact_000b
 10963 00007380 7F57                    	jg .L_lambda_opt_arity_check_more_000b
 10964 00007382 6A01                    	push 1
 10965 00007384 E9FAE60000              	jmp L_error_incorrect_arity_opt
 10966                                  .L_lambda_opt_arity_check_exact_000b:
 10967 00007389 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 10968 0000738D 4C894C24F8              	mov qword [rsp -8], r9
 10969 00007392 4C8B4C2408              	mov r9, qword [rsp +8]
 10970 00007397 4C890C24                	mov qword [rsp +8 * 0], r9
 10971 0000739B 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 10972 000073A0 4C89C9                  	mov rcx, r9
 10973 000073A3 49FFC1                  	inc r9
 10974 000073A6 4C894C2408              	mov qword [rsp +8], r9
 10975 000073AB 4889E2                  	mov rdx, rsp
 10976 000073AE 4883C218                	add rdx, 24
 10977                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000b:
 10978 000073B2 4883F900                	cmp rcx, 0
 10979 000073B6 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000b
 10980 000073B8 4C8B02                  	mov r8, qword [rdx]
 10981 000073BB 4C8942F8                	mov qword [rdx - 8], r8
 10982 000073BF 4883C208                	add rdx, 8
 10983 000073C3 48FFC9                  	dec rcx
 10984 000073C6 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000b
 10985                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000b:
 10986 000073C8 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 10987 000073D0 4883EC08                	sub rsp, 8
 10988 000073D4 E984000000              	jmp .L_lambda_opt_stack_adjusted_000b
 10989                                  .L_lambda_opt_arity_check_more_000b:
 10990 000073D9 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 10991 000073DE 4D89C4                  	mov r12, r8
 10992 000073E1 4C89C1                  	mov rcx, r8
 10993 000073E4 4D8D5002                	lea r10, [r8 + 2] 
 10994 000073E8 4883E901                	sub rcx, 1
 10995 000073EC 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 10996 000073F1 49B9-                   	mov r9, sob_nil
 10996 000073F3 [0100000000000000] 
 10997                                  .L_lambda_opt_create_list_of_opt_params_000b:
 10998 000073FB 4883F900                	cmp rcx, 0
 10999 000073FF 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000b
 11000 00007401 BF11000000              	mov rdi, 17
 11001 00007406 E8ABE60000              	call malloc
 11002 0000740B C60021                  	mov byte [rax], T_pair
 11003 0000740E 498B1B                  	mov rbx, qword [r11]
 11004 00007411 48895801                	mov qword [rax +1], rbx
 11005 00007415 4C894809                	mov qword [rax + 1 + 8], r9
 11006 00007419 4989C1                  	mov r9, rax
 11007 0000741C 48FFC9                  	dec rcx
 11008 0000741F 4983EB08                	sub r11, 8
 11009 00007423 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000b
 11010                                  .L_lambda_opt_create_list_of_opt_params_end_000b:
 11011 00007425 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 11012 0000742A 4D8908                  	mov qword [r8], r9
 11013 0000742D 4E8D14D500000000        	lea r10, [8 * r10]
 11014 00007435 4901E2                  	add r10, rsp
 11015 00007438 B905000000              	mov rcx, 4 + 1
 11016                                  .L_lambda_opt_stack_shrink_loop_000b:
 11017 0000743D 4883F900                	cmp rcx, 0
 11018 00007441 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000b
 11019 00007443 4D8B18                  	mov r11, qword [r8]
 11020 00007446 4D891A                  	mov qword [r10], r11
 11021 00007449 4983E808                	sub r8, 8
 11022 0000744D 4983EA08                	sub r10, 8
 11023 00007451 48FFC9                  	dec rcx
 11024 00007454 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 11025                                  .L_lambda_opt_stack_shrink_loop_exit_000b:
 11026 00007456 4983C208                	add r10, 8
 11027 0000745A 4C89D4                  	mov rsp, r10
 11028                                  .L_lambda_opt_stack_adjusted_000b:;continue with the code, the stack is ok
 11029 0000745D 48C744241002000000      	mov qword [rsp + 8*2], 2
 11030 00007466 C8000000                	enter 0, 0
 11031                                  	; preparing a non-tail-call
 11032 0000746A 488B4528                	mov rax, PARAM(1)	; param s
 11033 0000746E 50                      	push rax
 11034 0000746F 6A01                    	push 1	; arg count
 11035 00007471 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 11036 00007479 803805                  	cmp byte [rax], T_undefined
 11037 0000747C 0F8407E50000            	je L_error_fvar_undefined
 11038 00007482 803804                  	cmp byte [rax], T_closure
 11039 00007485 0F8582E50000            	jne L_error_non_closure
 11040 0000748B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11041 0000748E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11042 00007491 483D[02000000]          	cmp rax, sob_boolean_false
 11043 00007497 746F                    	je .L_if_else_0029
 11044                                  	; preparing a tail-call
 11045 00007499 488B4520                	mov rax, PARAM(0)	; param a
 11046 0000749D 50                      	push rax
 11047 0000749E 48B8-                   	mov rax, L_constants + 2135
 11047 000074A0 [5708000000000000] 
 11048 000074A8 50                      	push rax
 11049 000074A9 6A02                    	push 2	; arg count
 11050 000074AB 488B4510                	mov rax, ENV
 11051 000074AF 488B00                  	mov rax, qword [rax + 8 * 0]
 11052 000074B2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11053 000074B5 803804                  	cmp byte [rax], T_closure
 11054 000074B8 0F854FE50000            	jne L_error_non_closure
 11055 000074BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11056 000074C1 FF7508                  	push qword [rbp + 8 * 1]
 11057                                   ; old ret addr
 11058 000074C4 FF7500                  	push qword [rbp]
 11059                                   ; restore the old rbp
 11060 000074C7 BB02000000              	mov rbx, 2
 11061 000074CC 4883C303                	add rbx, 3
 11062 000074D0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11063 000074D4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11064 000074D9 4C8D4DF8                	lea r9, [rbp - 8]
 11065 000074DD B906000000              	mov rcx, 6
 11066                                  .L_tc_recycle_frame_loop_0054:
 11067 000074E2 4883F900                	cmp rcx, 0
 11068 000074E6 7413                    	je .L_tc_recycle_frame_done_0054
 11069 000074E8 4D8B11                  	mov r10, qword [r9]
 11070 000074EB 4D8910                  	mov qword [r8], r10
 11071 000074EE 4983E808                	sub r8, 8
 11072 000074F2 4983E908                	sub r9, 8
 11073 000074F6 48FFC9                  	dec rcx
 11074 000074F9 EBE7                    	jmp .L_tc_recycle_frame_loop_0054
 11075                                  .L_tc_recycle_frame_done_0054:
 11076 000074FB 498D6008                	lea rsp, [r8 + 8]
 11077 000074FF 5D                      	pop rbp ; restore the old rbp
 11078 00007500 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11079 00007503 E994010000              	jmp .L_if_end_0029
 11080                                  .L_if_else_0029:
 11081                                  	; preparing a tail-call
 11082                                  	; preparing a non-tail-call
 11083 00007508 488B4528                	mov rax, PARAM(1)	; param s
 11084 0000750C 50                      	push rax
 11085 0000750D 48B8-                   	mov rax, L_constants + 2135
 11085 0000750F [5708000000000000] 
 11086 00007517 50                      	push rax
 11087 00007518 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 11088 00007520 803805                  	cmp byte [rax], T_undefined
 11089 00007523 0F8460E40000            	je L_error_fvar_undefined
 11090 00007529 50                      	push rax
 11091 0000752A 6A03                    	push 3	; arg count
 11092 0000752C 488B0425[73130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11093 00007534 803805                  	cmp byte [rax], T_undefined
 11094 00007537 0F844CE40000            	je L_error_fvar_undefined
 11095 0000753D 803804                  	cmp byte [rax], T_closure
 11096 00007540 0F85C7E40000            	jne L_error_non_closure
 11097 00007546 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11098 00007549 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11099 0000754C 50                      	push rax
 11100 0000754D 6A01                    	push 1	; arg count
 11101 0000754F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11102 00007554 E85DE50000              	call malloc
 11103 00007559 50                      	push rax
 11104 0000755A BF10000000              	mov rdi, 8 * 2	; new rib
 11105 0000755F E852E50000              	call malloc
 11106 00007564 50                      	push rax
 11107 00007565 BF20000000              	mov rdi, 8 * 4	; extended env
 11108 0000756A E847E50000              	call malloc
 11109 0000756F 488B7D10                	mov rdi, ENV
 11110 00007573 BE00000000              	mov rsi, 0
 11111 00007578 BA01000000              	mov rdx, 1
 11112                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 11113 0000757D 4883FE03                	cmp rsi, 3
 11114 00007581 7410                    	je .L_lambda_simple_env_end_003c
 11115 00007583 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11116 00007587 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11117 0000758B 48FFC6                  	inc rsi
 11118 0000758E 48FFC2                  	inc rdx
 11119 00007591 EBEA                    	jmp .L_lambda_simple_env_loop_003c
 11120                                  .L_lambda_simple_env_end_003c:
 11121 00007593 5B                      	pop rbx
 11122 00007594 BE00000000              	mov rsi, 0
 11123                                  .L_lambda_simple_params_loop_003c:	; copy params
 11124 00007599 4883FE02                	cmp rsi, 2
 11125 0000759D 740E                    	je .L_lambda_simple_params_end_003c
 11126 0000759F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11127 000075A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11128 000075A8 48FFC6                  	inc rsi
 11129 000075AB EBEC                    	jmp .L_lambda_simple_params_loop_003c
 11130                                  .L_lambda_simple_params_end_003c:
 11131 000075AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11132 000075B0 4889C3                  	mov rbx, rax
 11133 000075B3 58                      	pop rax
 11134 000075B4 C60004                  	mov byte [rax], T_closure
 11135 000075B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11136 000075BB 48C74009[C8750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 11137 000075C3 E986000000              	jmp .L_lambda_simple_end_003c
 11138                                  .L_lambda_simple_code_003c:	; lambda-simple body
 11139 000075C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11140 000075CE 740B                    	je .L_lambda_simple_arity_check_ok_003c
 11141 000075D0 FF742410                	push qword [rsp + 8 * 2]
 11142 000075D4 6A01                    	push 1
 11143 000075D6 E994E40000              	jmp L_error_incorrect_arity_simple
 11144                                  .L_lambda_simple_arity_check_ok_003c:
 11145 000075DB C8000000                	enter 0, 0
 11146                                  	; preparing a tail-call
 11147 000075DF 488B4520                	mov rax, PARAM(0)	; param b
 11148 000075E3 50                      	push rax
 11149 000075E4 488B4510                	mov rax, ENV
 11150 000075E8 488B00                  	mov rax, qword [rax + 8 * 0]
 11151 000075EB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11152 000075EE 50                      	push rax
 11153 000075EF 6A02                    	push 2	; arg count
 11154 000075F1 488B4510                	mov rax, ENV
 11155 000075F5 488B4008                	mov rax, qword [rax + 8 * 1]
 11156 000075F9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11157 000075FC 803804                  	cmp byte [rax], T_closure
 11158 000075FF 0F8508E40000            	jne L_error_non_closure
 11159 00007605 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11160 00007608 FF7508                  	push qword [rbp + 8 * 1]
 11161                                   ; old ret addr
 11162 0000760B FF7500                  	push qword [rbp]
 11163                                   ; restore the old rbp
 11164 0000760E BB02000000              	mov rbx, 2
 11165 00007613 4883C303                	add rbx, 3
 11166 00007617 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11167 0000761B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11168 00007620 4C8D4DF8                	lea r9, [rbp - 8]
 11169 00007624 B906000000              	mov rcx, 6
 11170                                  .L_tc_recycle_frame_loop_0056:
 11171 00007629 4883F900                	cmp rcx, 0
 11172 0000762D 7413                    	je .L_tc_recycle_frame_done_0056
 11173 0000762F 4D8B11                  	mov r10, qword [r9]
 11174 00007632 4D8910                  	mov qword [r8], r10
 11175 00007635 4983E808                	sub r8, 8
 11176 00007639 4983E908                	sub r9, 8
 11177 0000763D 48FFC9                  	dec rcx
 11178 00007640 EBE7                    	jmp .L_tc_recycle_frame_loop_0056
 11179                                  .L_tc_recycle_frame_done_0056:
 11180 00007642 498D6008                	lea rsp, [r8 + 8]
 11181 00007646 5D                      	pop rbp ; restore the old rbp
 11182 00007647 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11183 0000764A C9                      	leave
 11184 0000764B C21800                  	ret AND_KILL_FRAME(1)
 11185                                  .L_lambda_simple_end_003c:	; new closure is in rax
 11186 0000764E 803804                  	cmp byte [rax], T_closure
 11187 00007651 0F85B6E30000            	jne L_error_non_closure
 11188 00007657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11189 0000765A FF7508                  	push qword [rbp + 8 * 1]
 11190                                   ; old ret addr
 11191 0000765D FF7500                  	push qword [rbp]
 11192                                   ; restore the old rbp
 11193 00007660 BB01000000              	mov rbx, 1
 11194 00007665 4883C303                	add rbx, 3
 11195 00007669 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11196 0000766D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11197 00007672 4C8D4DF8                	lea r9, [rbp - 8]
 11198 00007676 B905000000              	mov rcx, 5
 11199                                  .L_tc_recycle_frame_loop_0055:
 11200 0000767B 4883F900                	cmp rcx, 0
 11201 0000767F 7413                    	je .L_tc_recycle_frame_done_0055
 11202 00007681 4D8B11                  	mov r10, qword [r9]
 11203 00007684 4D8910                  	mov qword [r8], r10
 11204 00007687 4983E808                	sub r8, 8
 11205 0000768B 4983E908                	sub r9, 8
 11206 0000768F 48FFC9                  	dec rcx
 11207 00007692 EBE7                    	jmp .L_tc_recycle_frame_loop_0055
 11208                                  .L_tc_recycle_frame_done_0055:
 11209 00007694 498D6008                	lea rsp, [r8 + 8]
 11210 00007698 5D                      	pop rbp ; restore the old rbp
 11211 00007699 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11212                                  .L_if_end_0029:
 11213 0000769C C9                      	leave
 11214 0000769D C22000                  	ret 8 * (2 + 2)
 11215                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11216 000076A0 C9                      	leave
 11217 000076A1 C21800                  	ret AND_KILL_FRAME(1)
 11218                                  .L_lambda_simple_end_003b:	; new closure is in rax
 11219 000076A4 803804                  	cmp byte [rax], T_closure
 11220 000076A7 0F8560E30000            	jne L_error_non_closure
 11221 000076AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11222 000076B0 FF7508                  	push qword [rbp + 8 * 1]
 11223                                   ; old ret addr
 11224 000076B3 FF7500                  	push qword [rbp]
 11225                                   ; restore the old rbp
 11226 000076B6 BB01000000              	mov rbx, 1
 11227 000076BB 4883C303                	add rbx, 3
 11228 000076BF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11229 000076C3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11230 000076C8 4C8D4DF8                	lea r9, [rbp - 8]
 11231 000076CC B905000000              	mov rcx, 5
 11232                                  .L_tc_recycle_frame_loop_0046:
 11233 000076D1 4883F900                	cmp rcx, 0
 11234 000076D5 7413                    	je .L_tc_recycle_frame_done_0046
 11235 000076D7 4D8B11                  	mov r10, qword [r9]
 11236 000076DA 4D8910                  	mov qword [r8], r10
 11237 000076DD 4983E808                	sub r8, 8
 11238 000076E1 4983E908                	sub r9, 8
 11239 000076E5 48FFC9                  	dec rcx
 11240 000076E8 EBE7                    	jmp .L_tc_recycle_frame_loop_0046
 11241                                  .L_tc_recycle_frame_done_0046:
 11242 000076EA 498D6008                	lea rsp, [r8 + 8]
 11243 000076EE 5D                      	pop rbp ; restore the old rbp
 11244 000076EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11245 000076F2 C9                      	leave
 11246 000076F3 C21800                  	ret AND_KILL_FRAME(1)
 11247                                  .L_lambda_simple_end_0039:	; new closure is in rax
 11248 000076F6 803804                  	cmp byte [rax], T_closure
 11249 000076F9 0F850EE30000            	jne L_error_non_closure
 11250 000076FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11251 00007702 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11252 00007705 48890425[F00D0000]      	mov qword [free_var_2], rax
 11253 0000770D 48B8-                   	mov rax, sob_void
 11253 0000770F [0000000000000000] 
 11254                                  
 11255 00007717 4889C7                  	mov rdi, rax
 11256 0000771A E8ECE50000              	call print_sexpr_if_not_void
 11257                                  	; preparing a non-tail-call
 11258 0000771F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11259 00007724 E88DE30000              	call malloc
 11260 00007729 50                      	push rax
 11261 0000772A BF00000000              	mov rdi, 8 * 0	; new rib
 11262 0000772F E882E30000              	call malloc
 11263 00007734 50                      	push rax
 11264 00007735 BF08000000              	mov rdi, 8 * 1	; extended env
 11265 0000773A E877E30000              	call malloc
 11266 0000773F 488B7D10                	mov rdi, ENV
 11267 00007743 BE00000000              	mov rsi, 0
 11268 00007748 BA01000000              	mov rdx, 1
 11269                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 11270 0000774D 4883FE00                	cmp rsi, 0
 11271 00007751 7410                    	je .L_lambda_simple_env_end_003d
 11272 00007753 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11273 00007757 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11274 0000775B 48FFC6                  	inc rsi
 11275 0000775E 48FFC2                  	inc rdx
 11276 00007761 EBEA                    	jmp .L_lambda_simple_env_loop_003d
 11277                                  .L_lambda_simple_env_end_003d:
 11278 00007763 5B                      	pop rbx
 11279 00007764 BE00000000              	mov rsi, 0
 11280                                  .L_lambda_simple_params_loop_003d:	; copy params
 11281 00007769 4883FE00                	cmp rsi, 0
 11282 0000776D 740E                    	je .L_lambda_simple_params_end_003d
 11283 0000776F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11284 00007774 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11285 00007778 48FFC6                  	inc rsi
 11286 0000777B EBEC                    	jmp .L_lambda_simple_params_loop_003d
 11287                                  .L_lambda_simple_params_end_003d:
 11288 0000777D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11289 00007780 4889C3                  	mov rbx, rax
 11290 00007783 58                      	pop rax
 11291 00007784 C60004                  	mov byte [rax], T_closure
 11292 00007787 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11293 0000778B 48C74009[98770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 11294 00007793 E992000000              	jmp .L_lambda_simple_end_003d
 11295                                  .L_lambda_simple_code_003d:	; lambda-simple body
 11296 00007798 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11297 0000779E 740B                    	je .L_lambda_simple_arity_check_ok_003d
 11298 000077A0 FF742410                	push qword [rsp + 8 * 2]
 11299 000077A4 6A00                    	push 0
 11300 000077A6 E9C4E20000              	jmp L_error_incorrect_arity_simple
 11301                                  .L_lambda_simple_arity_check_ok_003d:
 11302 000077AB C8000000                	enter 0, 0
 11303                                  	; preparing a tail-call
 11304 000077AF 48B8-                   	mov rax, L_constants + 2187
 11304 000077B1 [8B08000000000000] 
 11305 000077B9 50                      	push rax
 11306 000077BA 48B8-                   	mov rax, L_constants + 2279
 11306 000077BC [E708000000000000] 
 11307 000077C4 50                      	push rax
 11308 000077C5 6A02                    	push 2	; arg count
 11309 000077C7 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
 11310 000077CF 803805                  	cmp byte [rax], T_undefined
 11311 000077D2 0F84B1E10000            	je L_error_fvar_undefined
 11312 000077D8 803804                  	cmp byte [rax], T_closure
 11313 000077DB 0F852CE20000            	jne L_error_non_closure
 11314 000077E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11315 000077E4 FF7508                  	push qword [rbp + 8 * 1]
 11316                                   ; old ret addr
 11317 000077E7 FF7500                  	push qword [rbp]
 11318                                   ; restore the old rbp
 11319 000077EA BB02000000              	mov rbx, 2
 11320 000077EF 4883C303                	add rbx, 3
 11321 000077F3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11322 000077F7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11323 000077FC 4C8D4DF8                	lea r9, [rbp - 8]
 11324 00007800 B906000000              	mov rcx, 6
 11325                                  .L_tc_recycle_frame_loop_0057:
 11326 00007805 4883F900                	cmp rcx, 0
 11327 00007809 7413                    	je .L_tc_recycle_frame_done_0057
 11328 0000780B 4D8B11                  	mov r10, qword [r9]
 11329 0000780E 4D8910                  	mov qword [r8], r10
 11330 00007811 4983E808                	sub r8, 8
 11331 00007815 4983E908                	sub r9, 8
 11332 00007819 48FFC9                  	dec rcx
 11333 0000781C EBE7                    	jmp .L_tc_recycle_frame_loop_0057
 11334                                  .L_tc_recycle_frame_done_0057:
 11335 0000781E 498D6008                	lea rsp, [r8 + 8]
 11336 00007822 5D                      	pop rbp ; restore the old rbp
 11337 00007823 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11338 00007826 C9                      	leave
 11339 00007827 C21000                  	ret AND_KILL_FRAME(0)
 11340                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11341 0000782A 50                      	push rax
 11342 0000782B 6A01                    	push 1	; arg count
 11343 0000782D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11344 00007832 E87FE20000              	call malloc
 11345 00007837 50                      	push rax
 11346 00007838 BF00000000              	mov rdi, 8 * 0	; new rib
 11347 0000783D E874E20000              	call malloc
 11348 00007842 50                      	push rax
 11349 00007843 BF08000000              	mov rdi, 8 * 1	; extended env
 11350 00007848 E869E20000              	call malloc
 11351 0000784D 488B7D10                	mov rdi, ENV
 11352 00007851 BE00000000              	mov rsi, 0
 11353 00007856 BA01000000              	mov rdx, 1
 11354                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11355 0000785B 4883FE00                	cmp rsi, 0
 11356 0000785F 7410                    	je .L_lambda_simple_env_end_003e
 11357 00007861 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11358 00007865 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11359 00007869 48FFC6                  	inc rsi
 11360 0000786C 48FFC2                  	inc rdx
 11361 0000786F EBEA                    	jmp .L_lambda_simple_env_loop_003e
 11362                                  .L_lambda_simple_env_end_003e:
 11363 00007871 5B                      	pop rbx
 11364 00007872 BE00000000              	mov rsi, 0
 11365                                  .L_lambda_simple_params_loop_003e:	; copy params
 11366 00007877 4883FE00                	cmp rsi, 0
 11367 0000787B 740E                    	je .L_lambda_simple_params_end_003e
 11368 0000787D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11369 00007882 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11370 00007886 48FFC6                  	inc rsi
 11371 00007889 EBEC                    	jmp .L_lambda_simple_params_loop_003e
 11372                                  .L_lambda_simple_params_end_003e:
 11373 0000788B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11374 0000788E 4889C3                  	mov rbx, rax
 11375 00007891 58                      	pop rax
 11376 00007892 C60004                  	mov byte [rax], T_closure
 11377 00007895 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11378 00007899 48C74009[A6780000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 11379 000078A1 E9010C0000              	jmp .L_lambda_simple_end_003e
 11380                                  .L_lambda_simple_code_003e:	; lambda-simple body
 11381 000078A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11382 000078AC 740B                    	je .L_lambda_simple_arity_check_ok_003e
 11383 000078AE FF742410                	push qword [rsp + 8 * 2]
 11384 000078B2 6A01                    	push 1
 11385 000078B4 E9B6E10000              	jmp L_error_incorrect_arity_simple
 11386                                  .L_lambda_simple_arity_check_ok_003e:
 11387 000078B9 C8000000                	enter 0, 0
 11388                                  	; preparing a tail-call
 11389 000078BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11390 000078C2 E8EFE10000              	call malloc
 11391 000078C7 50                      	push rax
 11392 000078C8 BF08000000              	mov rdi, 8 * 1	; new rib
 11393 000078CD E8E4E10000              	call malloc
 11394 000078D2 50                      	push rax
 11395 000078D3 BF10000000              	mov rdi, 8 * 2	; extended env
 11396 000078D8 E8D9E10000              	call malloc
 11397 000078DD 488B7D10                	mov rdi, ENV
 11398 000078E1 BE00000000              	mov rsi, 0
 11399 000078E6 BA01000000              	mov rdx, 1
 11400                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11401 000078EB 4883FE01                	cmp rsi, 1
 11402 000078EF 7410                    	je .L_lambda_simple_env_end_003f
 11403 000078F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11404 000078F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11405 000078F9 48FFC6                  	inc rsi
 11406 000078FC 48FFC2                  	inc rdx
 11407 000078FF EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11408                                  .L_lambda_simple_env_end_003f:
 11409 00007901 5B                      	pop rbx
 11410 00007902 BE00000000              	mov rsi, 0
 11411                                  .L_lambda_simple_params_loop_003f:	; copy params
 11412 00007907 4883FE01                	cmp rsi, 1
 11413 0000790B 740E                    	je .L_lambda_simple_params_end_003f
 11414 0000790D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11415 00007912 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11416 00007916 48FFC6                  	inc rsi
 11417 00007919 EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11418                                  .L_lambda_simple_params_end_003f:
 11419 0000791B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11420 0000791E 4889C3                  	mov rbx, rax
 11421 00007921 58                      	pop rax
 11422 00007922 C60004                  	mov byte [rax], T_closure
 11423 00007925 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11424 00007929 48C74009[36790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11425 00007931 E9A0080000              	jmp .L_lambda_simple_end_003f
 11426                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11427 00007936 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11428 0000793C 740B                    	je .L_lambda_simple_arity_check_ok_003f
 11429 0000793E FF742410                	push qword [rsp + 8 * 2]
 11430 00007942 6A02                    	push 2
 11431 00007944 E926E10000              	jmp L_error_incorrect_arity_simple
 11432                                  .L_lambda_simple_arity_check_ok_003f:
 11433 00007949 C8000000                	enter 0, 0
 11434                                  	; preparing a non-tail-call
 11435 0000794D 488B4520                	mov rax, PARAM(0)	; param a
 11436 00007951 50                      	push rax
 11437 00007952 6A01                    	push 1	; arg count
 11438 00007954 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 11439 0000795C 803805                  	cmp byte [rax], T_undefined
 11440 0000795F 0F8424E00000            	je L_error_fvar_undefined
 11441 00007965 803804                  	cmp byte [rax], T_closure
 11442 00007968 0F859FE00000            	jne L_error_non_closure
 11443 0000796E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11444 00007971 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11445 00007974 483D[02000000]          	cmp rax, sob_boolean_false
 11446 0000797A 0F8487020000            	je .L_if_else_0035
 11447                                  	; preparing a non-tail-call
 11448 00007980 488B4528                	mov rax, PARAM(1)	; param b
 11449 00007984 50                      	push rax
 11450 00007985 6A01                    	push 1	; arg count
 11451 00007987 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 11452 0000798F 803805                  	cmp byte [rax], T_undefined
 11453 00007992 0F84F1DF0000            	je L_error_fvar_undefined
 11454 00007998 803804                  	cmp byte [rax], T_closure
 11455 0000799B 0F856CE00000            	jne L_error_non_closure
 11456 000079A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11457 000079A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11458 000079A7 483D[02000000]          	cmp rax, sob_boolean_false
 11459 000079AD 7470                    	je .L_if_else_002c
 11460                                  	; preparing a tail-call
 11461 000079AF 488B4528                	mov rax, PARAM(1)	; param b
 11462 000079B3 50                      	push rax
 11463 000079B4 488B4520                	mov rax, PARAM(0)	; param a
 11464 000079B8 50                      	push rax
 11465 000079B9 6A02                    	push 2	; arg count
 11466 000079BB 488B0425[660F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11467 000079C3 803805                  	cmp byte [rax], T_undefined
 11468 000079C6 0F84BDDF0000            	je L_error_fvar_undefined
 11469 000079CC 803804                  	cmp byte [rax], T_closure
 11470 000079CF 0F8538E00000            	jne L_error_non_closure
 11471 000079D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11472 000079D8 FF7508                  	push qword [rbp + 8 * 1]
 11473                                   ; old ret addr
 11474 000079DB FF7500                  	push qword [rbp]
 11475                                   ; restore the old rbp
 11476 000079DE BB02000000              	mov rbx, 2
 11477 000079E3 4883C303                	add rbx, 3
 11478 000079E7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11479 000079EB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11480 000079F0 4C8D4DF8                	lea r9, [rbp - 8]
 11481 000079F4 B906000000              	mov rcx, 6
 11482                                  .L_tc_recycle_frame_loop_0059:
 11483 000079F9 4883F900                	cmp rcx, 0
 11484 000079FD 7413                    	je .L_tc_recycle_frame_done_0059
 11485 000079FF 4D8B11                  	mov r10, qword [r9]
 11486 00007A02 4D8910                  	mov qword [r8], r10
 11487 00007A05 4983E808                	sub r8, 8
 11488 00007A09 4983E908                	sub r9, 8
 11489 00007A0D 48FFC9                  	dec rcx
 11490 00007A10 EBE7                    	jmp .L_tc_recycle_frame_loop_0059
 11491                                  .L_tc_recycle_frame_done_0059:
 11492 00007A12 498D6008                	lea rsp, [r8 + 8]
 11493 00007A16 5D                      	pop rbp ; restore the old rbp
 11494 00007A17 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11495 00007A1A E9E3010000              	jmp .L_if_end_002c
 11496                                  .L_if_else_002c:
 11497                                  	; preparing a non-tail-call
 11498 00007A1F 488B4528                	mov rax, PARAM(1)	; param b
 11499 00007A23 50                      	push rax
 11500 00007A24 6A01                    	push 1	; arg count
 11501 00007A26 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11502 00007A2E 803805                  	cmp byte [rax], T_undefined
 11503 00007A31 0F8452DF0000            	je L_error_fvar_undefined
 11504 00007A37 803804                  	cmp byte [rax], T_closure
 11505 00007A3A 0F85CDDF0000            	jne L_error_non_closure
 11506 00007A40 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11507 00007A43 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11508 00007A46 483D[02000000]          	cmp rax, sob_boolean_false
 11509 00007A4C 0F8493000000            	je .L_if_else_002b
 11510                                  	; preparing a tail-call
 11511 00007A52 488B4528                	mov rax, PARAM(1)	; param b
 11512 00007A56 50                      	push rax
 11513                                  	; preparing a non-tail-call
 11514 00007A57 488B4520                	mov rax, PARAM(0)	; param a
 11515 00007A5B 50                      	push rax
 11516 00007A5C 6A01                    	push 1	; arg count
 11517 00007A5E 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11518 00007A66 803805                  	cmp byte [rax], T_undefined
 11519 00007A69 0F841ADF0000            	je L_error_fvar_undefined
 11520 00007A6F 803804                  	cmp byte [rax], T_closure
 11521 00007A72 0F8595DF0000            	jne L_error_non_closure
 11522 00007A78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11523 00007A7B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11524 00007A7E 50                      	push rax
 11525 00007A7F 6A02                    	push 2	; arg count
 11526 00007A81 488B0425[440F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11527 00007A89 803805                  	cmp byte [rax], T_undefined
 11528 00007A8C 0F84F7DE0000            	je L_error_fvar_undefined
 11529 00007A92 803804                  	cmp byte [rax], T_closure
 11530 00007A95 0F8572DF0000            	jne L_error_non_closure
 11531 00007A9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11532 00007A9E FF7508                  	push qword [rbp + 8 * 1]
 11533                                   ; old ret addr
 11534 00007AA1 FF7500                  	push qword [rbp]
 11535                                   ; restore the old rbp
 11536 00007AA4 BB02000000              	mov rbx, 2
 11537 00007AA9 4883C303                	add rbx, 3
 11538 00007AAD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11539 00007AB1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11540 00007AB6 4C8D4DF8                	lea r9, [rbp - 8]
 11541 00007ABA B906000000              	mov rcx, 6
 11542                                  .L_tc_recycle_frame_loop_005a:
 11543 00007ABF 4883F900                	cmp rcx, 0
 11544 00007AC3 7413                    	je .L_tc_recycle_frame_done_005a
 11545 00007AC5 4D8B11                  	mov r10, qword [r9]
 11546 00007AC8 4D8910                  	mov qword [r8], r10
 11547 00007ACB 4983E808                	sub r8, 8
 11548 00007ACF 4983E908                	sub r9, 8
 11549 00007AD3 48FFC9                  	dec rcx
 11550 00007AD6 EBE7                    	jmp .L_tc_recycle_frame_loop_005a
 11551                                  .L_tc_recycle_frame_done_005a:
 11552 00007AD8 498D6008                	lea rsp, [r8 + 8]
 11553 00007ADC 5D                      	pop rbp ; restore the old rbp
 11554 00007ADD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11555 00007AE0 E91D010000              	jmp .L_if_end_002b
 11556                                  .L_if_else_002b:
 11557                                  	; preparing a non-tail-call
 11558 00007AE5 488B4528                	mov rax, PARAM(1)	; param b
 11559 00007AE9 50                      	push rax
 11560 00007AEA 6A01                    	push 1	; arg count
 11561 00007AEC 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 11562 00007AF4 803805                  	cmp byte [rax], T_undefined
 11563 00007AF7 0F848CDE0000            	je L_error_fvar_undefined
 11564 00007AFD 803804                  	cmp byte [rax], T_closure
 11565 00007B00 0F8507DF0000            	jne L_error_non_closure
 11566 00007B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11567 00007B09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11568 00007B0C 483D[02000000]          	cmp rax, sob_boolean_false
 11569 00007B12 0F8490000000            	je .L_if_else_002a
 11570                                  	; preparing a tail-call
 11571 00007B18 488B4528                	mov rax, PARAM(1)	; param b
 11572 00007B1C 50                      	push rax
 11573                                  	; preparing a non-tail-call
 11574 00007B1D 488B4520                	mov rax, PARAM(0)	; param a
 11575 00007B21 50                      	push rax
 11576 00007B22 6A01                    	push 1	; arg count
 11577 00007B24 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11578 00007B2C 803805                  	cmp byte [rax], T_undefined
 11579 00007B2F 0F8454DE0000            	je L_error_fvar_undefined
 11580 00007B35 803804                  	cmp byte [rax], T_closure
 11581 00007B38 0F85CFDE0000            	jne L_error_non_closure
 11582 00007B3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11583 00007B41 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11584 00007B44 50                      	push rax
 11585 00007B45 6A02                    	push 2	; arg count
 11586 00007B47 488B0425[550F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11587 00007B4F 803805                  	cmp byte [rax], T_undefined
 11588 00007B52 0F8431DE0000            	je L_error_fvar_undefined
 11589 00007B58 803804                  	cmp byte [rax], T_closure
 11590 00007B5B 0F85ACDE0000            	jne L_error_non_closure
 11591 00007B61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11592 00007B64 FF7508                  	push qword [rbp + 8 * 1]
 11593                                   ; old ret addr
 11594 00007B67 FF7500                  	push qword [rbp]
 11595                                   ; restore the old rbp
 11596 00007B6A BB02000000              	mov rbx, 2
 11597 00007B6F 4883C303                	add rbx, 3
 11598 00007B73 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11599 00007B77 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11600 00007B7C 4C8D4DF8                	lea r9, [rbp - 8]
 11601 00007B80 B906000000              	mov rcx, 6
 11602                                  .L_tc_recycle_frame_loop_005b:
 11603 00007B85 4883F900                	cmp rcx, 0
 11604 00007B89 7413                    	je .L_tc_recycle_frame_done_005b
 11605 00007B8B 4D8B11                  	mov r10, qword [r9]
 11606 00007B8E 4D8910                  	mov qword [r8], r10
 11607 00007B91 4983E808                	sub r8, 8
 11608 00007B95 4983E908                	sub r9, 8
 11609 00007B99 48FFC9                  	dec rcx
 11610 00007B9C EBE7                    	jmp .L_tc_recycle_frame_loop_005b
 11611                                  .L_tc_recycle_frame_done_005b:
 11612 00007B9E 498D6008                	lea rsp, [r8 + 8]
 11613 00007BA2 5D                      	pop rbp ; restore the old rbp
 11614 00007BA3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11615 00007BA6 EB5A                    	jmp .L_if_end_002a
 11616                                  .L_if_else_002a:
 11617                                  	; preparing a tail-call
 11618 00007BA8 6A00                    	push 0	; arg count
 11619 00007BAA 488B4510                	mov rax, ENV
 11620 00007BAE 488B00                  	mov rax, qword [rax + 8 * 0]
 11621 00007BB1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11622 00007BB4 803804                  	cmp byte [rax], T_closure
 11623 00007BB7 0F8550DE0000            	jne L_error_non_closure
 11624 00007BBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11625 00007BC0 FF7508                  	push qword [rbp + 8 * 1]
 11626                                   ; old ret addr
 11627 00007BC3 FF7500                  	push qword [rbp]
 11628                                   ; restore the old rbp
 11629 00007BC6 BB00000000              	mov rbx, 0
 11630 00007BCB 4883C303                	add rbx, 3
 11631 00007BCF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11632 00007BD3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11633 00007BD8 4C8D4DF8                	lea r9, [rbp - 8]
 11634 00007BDC B904000000              	mov rcx, 4
 11635                                  .L_tc_recycle_frame_loop_005c:
 11636 00007BE1 4883F900                	cmp rcx, 0
 11637 00007BE5 7413                    	je .L_tc_recycle_frame_done_005c
 11638 00007BE7 4D8B11                  	mov r10, qword [r9]
 11639 00007BEA 4D8910                  	mov qword [r8], r10
 11640 00007BED 4983E808                	sub r8, 8
 11641 00007BF1 4983E908                	sub r9, 8
 11642 00007BF5 48FFC9                  	dec rcx
 11643 00007BF8 EBE7                    	jmp .L_tc_recycle_frame_loop_005c
 11644                                  .L_tc_recycle_frame_done_005c:
 11645 00007BFA 498D6008                	lea rsp, [r8 + 8]
 11646 00007BFE 5D                      	pop rbp ; restore the old rbp
 11647 00007BFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11648                                  .L_if_end_002a:
 11649                                  .L_if_end_002b:
 11650                                  .L_if_end_002c:
 11651 00007C02 E9CB050000              	jmp .L_if_end_0035
 11652                                  .L_if_else_0035:
 11653                                  	; preparing a non-tail-call
 11654 00007C07 488B4520                	mov rax, PARAM(0)	; param a
 11655 00007C0B 50                      	push rax
 11656 00007C0C 6A01                    	push 1	; arg count
 11657 00007C0E 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11658 00007C16 803805                  	cmp byte [rax], T_undefined
 11659 00007C19 0F846ADD0000            	je L_error_fvar_undefined
 11660 00007C1F 803804                  	cmp byte [rax], T_closure
 11661 00007C22 0F85E5DD0000            	jne L_error_non_closure
 11662 00007C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11663 00007C2B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11664 00007C2E 483D[02000000]          	cmp rax, sob_boolean_false
 11665 00007C34 0F8487020000            	je .L_if_else_0034
 11666                                  	; preparing a non-tail-call
 11667 00007C3A 488B4528                	mov rax, PARAM(1)	; param b
 11668 00007C3E 50                      	push rax
 11669 00007C3F 6A01                    	push 1	; arg count
 11670 00007C41 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 11671 00007C49 803805                  	cmp byte [rax], T_undefined
 11672 00007C4C 0F8437DD0000            	je L_error_fvar_undefined
 11673 00007C52 803804                  	cmp byte [rax], T_closure
 11674 00007C55 0F85B2DD0000            	jne L_error_non_closure
 11675 00007C5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11676 00007C5E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11677 00007C61 483D[02000000]          	cmp rax, sob_boolean_false
 11678 00007C67 0F8493000000            	je .L_if_else_002f
 11679                                  	; preparing a tail-call
 11680                                  	; preparing a non-tail-call
 11681 00007C6D 488B4528                	mov rax, PARAM(1)	; param b
 11682 00007C71 50                      	push rax
 11683 00007C72 6A01                    	push 1	; arg count
 11684 00007C74 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11685 00007C7C 803805                  	cmp byte [rax], T_undefined
 11686 00007C7F 0F8404DD0000            	je L_error_fvar_undefined
 11687 00007C85 803804                  	cmp byte [rax], T_closure
 11688 00007C88 0F857FDD0000            	jne L_error_non_closure
 11689 00007C8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11690 00007C91 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11691 00007C94 50                      	push rax
 11692 00007C95 488B4520                	mov rax, PARAM(0)	; param a
 11693 00007C99 50                      	push rax
 11694 00007C9A 6A02                    	push 2	; arg count
 11695 00007C9C 488B0425[440F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11696 00007CA4 803805                  	cmp byte [rax], T_undefined
 11697 00007CA7 0F84DCDC0000            	je L_error_fvar_undefined
 11698 00007CAD 803804                  	cmp byte [rax], T_closure
 11699 00007CB0 0F8557DD0000            	jne L_error_non_closure
 11700 00007CB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11701 00007CB9 FF7508                  	push qword [rbp + 8 * 1]
 11702                                   ; old ret addr
 11703 00007CBC FF7500                  	push qword [rbp]
 11704                                   ; restore the old rbp
 11705 00007CBF BB02000000              	mov rbx, 2
 11706 00007CC4 4883C303                	add rbx, 3
 11707 00007CC8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11708 00007CCC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11709 00007CD1 4C8D4DF8                	lea r9, [rbp - 8]
 11710 00007CD5 B906000000              	mov rcx, 6
 11711                                  .L_tc_recycle_frame_loop_005d:
 11712 00007CDA 4883F900                	cmp rcx, 0
 11713 00007CDE 7413                    	je .L_tc_recycle_frame_done_005d
 11714 00007CE0 4D8B11                  	mov r10, qword [r9]
 11715 00007CE3 4D8910                  	mov qword [r8], r10
 11716 00007CE6 4983E808                	sub r8, 8
 11717 00007CEA 4983E908                	sub r9, 8
 11718 00007CEE 48FFC9                  	dec rcx
 11719 00007CF1 EBE7                    	jmp .L_tc_recycle_frame_loop_005d
 11720                                  .L_tc_recycle_frame_done_005d:
 11721 00007CF3 498D6008                	lea rsp, [r8 + 8]
 11722 00007CF7 5D                      	pop rbp ; restore the old rbp
 11723 00007CF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11724 00007CFB E9BC010000              	jmp .L_if_end_002f
 11725                                  .L_if_else_002f:
 11726                                  	; preparing a non-tail-call
 11727 00007D00 488B4528                	mov rax, PARAM(1)	; param b
 11728 00007D04 50                      	push rax
 11729 00007D05 6A01                    	push 1	; arg count
 11730 00007D07 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11731 00007D0F 803805                  	cmp byte [rax], T_undefined
 11732 00007D12 0F8471DC0000            	je L_error_fvar_undefined
 11733 00007D18 803804                  	cmp byte [rax], T_closure
 11734 00007D1B 0F85ECDC0000            	jne L_error_non_closure
 11735 00007D21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11736 00007D24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11737 00007D27 483D[02000000]          	cmp rax, sob_boolean_false
 11738 00007D2D 7470                    	je .L_if_else_002e
 11739                                  	; preparing a tail-call
 11740 00007D2F 488B4528                	mov rax, PARAM(1)	; param b
 11741 00007D33 50                      	push rax
 11742 00007D34 488B4520                	mov rax, PARAM(0)	; param a
 11743 00007D38 50                      	push rax
 11744 00007D39 6A02                    	push 2	; arg count
 11745 00007D3B 488B0425[440F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11746 00007D43 803805                  	cmp byte [rax], T_undefined
 11747 00007D46 0F843DDC0000            	je L_error_fvar_undefined
 11748 00007D4C 803804                  	cmp byte [rax], T_closure
 11749 00007D4F 0F85B8DC0000            	jne L_error_non_closure
 11750 00007D55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11751 00007D58 FF7508                  	push qword [rbp + 8 * 1]
 11752                                   ; old ret addr
 11753 00007D5B FF7500                  	push qword [rbp]
 11754                                   ; restore the old rbp
 11755 00007D5E BB02000000              	mov rbx, 2
 11756 00007D63 4883C303                	add rbx, 3
 11757 00007D67 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11758 00007D6B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11759 00007D70 4C8D4DF8                	lea r9, [rbp - 8]
 11760 00007D74 B906000000              	mov rcx, 6
 11761                                  .L_tc_recycle_frame_loop_005e:
 11762 00007D79 4883F900                	cmp rcx, 0
 11763 00007D7D 7413                    	je .L_tc_recycle_frame_done_005e
 11764 00007D7F 4D8B11                  	mov r10, qword [r9]
 11765 00007D82 4D8910                  	mov qword [r8], r10
 11766 00007D85 4983E808                	sub r8, 8
 11767 00007D89 4983E908                	sub r9, 8
 11768 00007D8D 48FFC9                  	dec rcx
 11769 00007D90 EBE7                    	jmp .L_tc_recycle_frame_loop_005e
 11770                                  .L_tc_recycle_frame_done_005e:
 11771 00007D92 498D6008                	lea rsp, [r8 + 8]
 11772 00007D96 5D                      	pop rbp ; restore the old rbp
 11773 00007D97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11774 00007D9A E91D010000              	jmp .L_if_end_002e
 11775                                  .L_if_else_002e:
 11776                                  	; preparing a non-tail-call
 11777 00007D9F 488B4528                	mov rax, PARAM(1)	; param b
 11778 00007DA3 50                      	push rax
 11779 00007DA4 6A01                    	push 1	; arg count
 11780 00007DA6 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 11781 00007DAE 803805                  	cmp byte [rax], T_undefined
 11782 00007DB1 0F84D2DB0000            	je L_error_fvar_undefined
 11783 00007DB7 803804                  	cmp byte [rax], T_closure
 11784 00007DBA 0F854DDC0000            	jne L_error_non_closure
 11785 00007DC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11786 00007DC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11787 00007DC6 483D[02000000]          	cmp rax, sob_boolean_false
 11788 00007DCC 0F8490000000            	je .L_if_else_002d
 11789                                  	; preparing a tail-call
 11790 00007DD2 488B4528                	mov rax, PARAM(1)	; param b
 11791 00007DD6 50                      	push rax
 11792                                  	; preparing a non-tail-call
 11793 00007DD7 488B4520                	mov rax, PARAM(0)	; param a
 11794 00007DDB 50                      	push rax
 11795 00007DDC 6A01                    	push 1	; arg count
 11796 00007DDE 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11797 00007DE6 803805                  	cmp byte [rax], T_undefined
 11798 00007DE9 0F849ADB0000            	je L_error_fvar_undefined
 11799 00007DEF 803804                  	cmp byte [rax], T_closure
 11800 00007DF2 0F8515DC0000            	jne L_error_non_closure
 11801 00007DF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11802 00007DFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 11803 00007DFE 50                      	push rax
 11804 00007DFF 6A02                    	push 2	; arg count
 11805 00007E01 488B0425[550F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11806 00007E09 803805                  	cmp byte [rax], T_undefined
 11807 00007E0C 0F8477DB0000            	je L_error_fvar_undefined
 11808 00007E12 803804                  	cmp byte [rax], T_closure
 11809 00007E15 0F85F2DB0000            	jne L_error_non_closure
 11810 00007E1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11811 00007E1E FF7508                  	push qword [rbp + 8 * 1]
 11812                                   ; old ret addr
 11813 00007E21 FF7500                  	push qword [rbp]
 11814                                   ; restore the old rbp
 11815 00007E24 BB02000000              	mov rbx, 2
 11816 00007E29 4883C303                	add rbx, 3
 11817 00007E2D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11818 00007E31 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11819 00007E36 4C8D4DF8                	lea r9, [rbp - 8]
 11820 00007E3A B906000000              	mov rcx, 6
 11821                                  .L_tc_recycle_frame_loop_005f:
 11822 00007E3F 4883F900                	cmp rcx, 0
 11823 00007E43 7413                    	je .L_tc_recycle_frame_done_005f
 11824 00007E45 4D8B11                  	mov r10, qword [r9]
 11825 00007E48 4D8910                  	mov qword [r8], r10
 11826 00007E4B 4983E808                	sub r8, 8
 11827 00007E4F 4983E908                	sub r9, 8
 11828 00007E53 48FFC9                  	dec rcx
 11829 00007E56 EBE7                    	jmp .L_tc_recycle_frame_loop_005f
 11830                                  .L_tc_recycle_frame_done_005f:
 11831 00007E58 498D6008                	lea rsp, [r8 + 8]
 11832 00007E5C 5D                      	pop rbp ; restore the old rbp
 11833 00007E5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11834 00007E60 EB5A                    	jmp .L_if_end_002d
 11835                                  .L_if_else_002d:
 11836                                  	; preparing a tail-call
 11837 00007E62 6A00                    	push 0	; arg count
 11838 00007E64 488B4510                	mov rax, ENV
 11839 00007E68 488B00                  	mov rax, qword [rax + 8 * 0]
 11840 00007E6B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11841 00007E6E 803804                  	cmp byte [rax], T_closure
 11842 00007E71 0F8596DB0000            	jne L_error_non_closure
 11843 00007E77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11844 00007E7A FF7508                  	push qword [rbp + 8 * 1]
 11845                                   ; old ret addr
 11846 00007E7D FF7500                  	push qword [rbp]
 11847                                   ; restore the old rbp
 11848 00007E80 BB00000000              	mov rbx, 0
 11849 00007E85 4883C303                	add rbx, 3
 11850 00007E89 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11851 00007E8D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11852 00007E92 4C8D4DF8                	lea r9, [rbp - 8]
 11853 00007E96 B904000000              	mov rcx, 4
 11854                                  .L_tc_recycle_frame_loop_0060:
 11855 00007E9B 4883F900                	cmp rcx, 0
 11856 00007E9F 7413                    	je .L_tc_recycle_frame_done_0060
 11857 00007EA1 4D8B11                  	mov r10, qword [r9]
 11858 00007EA4 4D8910                  	mov qword [r8], r10
 11859 00007EA7 4983E808                	sub r8, 8
 11860 00007EAB 4983E908                	sub r9, 8
 11861 00007EAF 48FFC9                  	dec rcx
 11862 00007EB2 EBE7                    	jmp .L_tc_recycle_frame_loop_0060
 11863                                  .L_tc_recycle_frame_done_0060:
 11864 00007EB4 498D6008                	lea rsp, [r8 + 8]
 11865 00007EB8 5D                      	pop rbp ; restore the old rbp
 11866 00007EB9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11867                                  .L_if_end_002d:
 11868                                  .L_if_end_002e:
 11869                                  .L_if_end_002f:
 11870 00007EBC E911030000              	jmp .L_if_end_0034
 11871                                  .L_if_else_0034:
 11872                                  	; preparing a non-tail-call
 11873 00007EC1 488B4520                	mov rax, PARAM(0)	; param a
 11874 00007EC5 50                      	push rax
 11875 00007EC6 6A01                    	push 1	; arg count
 11876 00007EC8 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 11877 00007ED0 803805                  	cmp byte [rax], T_undefined
 11878 00007ED3 0F84B0DA0000            	je L_error_fvar_undefined
 11879 00007ED9 803804                  	cmp byte [rax], T_closure
 11880 00007EDC 0F852BDB0000            	jne L_error_non_closure
 11881 00007EE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11882 00007EE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11883 00007EE8 483D[02000000]          	cmp rax, sob_boolean_false
 11884 00007EEE 0F8484020000            	je .L_if_else_0033
 11885                                  	; preparing a non-tail-call
 11886 00007EF4 488B4528                	mov rax, PARAM(1)	; param b
 11887 00007EF8 50                      	push rax
 11888 00007EF9 6A01                    	push 1	; arg count
 11889 00007EFB 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 11890 00007F03 803805                  	cmp byte [rax], T_undefined
 11891 00007F06 0F847DDA0000            	je L_error_fvar_undefined
 11892 00007F0C 803804                  	cmp byte [rax], T_closure
 11893 00007F0F 0F85F8DA0000            	jne L_error_non_closure
 11894 00007F15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11895 00007F18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11896 00007F1B 483D[02000000]          	cmp rax, sob_boolean_false
 11897 00007F21 0F8493000000            	je .L_if_else_0032
 11898                                  	; preparing a tail-call
 11899                                  	; preparing a non-tail-call
 11900 00007F27 488B4528                	mov rax, PARAM(1)	; param b
 11901 00007F2B 50                      	push rax
 11902 00007F2C 6A01                    	push 1	; arg count
 11903 00007F2E 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11904 00007F36 803805                  	cmp byte [rax], T_undefined
 11905 00007F39 0F844ADA0000            	je L_error_fvar_undefined
 11906 00007F3F 803804                  	cmp byte [rax], T_closure
 11907 00007F42 0F85C5DA0000            	jne L_error_non_closure
 11908 00007F48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11909 00007F4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11910 00007F4E 50                      	push rax
 11911 00007F4F 488B4520                	mov rax, PARAM(0)	; param a
 11912 00007F53 50                      	push rax
 11913 00007F54 6A02                    	push 2	; arg count
 11914 00007F56 488B0425[550F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11915 00007F5E 803805                  	cmp byte [rax], T_undefined
 11916 00007F61 0F8422DA0000            	je L_error_fvar_undefined
 11917 00007F67 803804                  	cmp byte [rax], T_closure
 11918 00007F6A 0F859DDA0000            	jne L_error_non_closure
 11919 00007F70 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11920 00007F73 FF7508                  	push qword [rbp + 8 * 1]
 11921                                   ; old ret addr
 11922 00007F76 FF7500                  	push qword [rbp]
 11923                                   ; restore the old rbp
 11924 00007F79 BB02000000              	mov rbx, 2
 11925 00007F7E 4883C303                	add rbx, 3
 11926 00007F82 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11927 00007F86 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11928 00007F8B 4C8D4DF8                	lea r9, [rbp - 8]
 11929 00007F8F B906000000              	mov rcx, 6
 11930                                  .L_tc_recycle_frame_loop_0061:
 11931 00007F94 4883F900                	cmp rcx, 0
 11932 00007F98 7413                    	je .L_tc_recycle_frame_done_0061
 11933 00007F9A 4D8B11                  	mov r10, qword [r9]
 11934 00007F9D 4D8910                  	mov qword [r8], r10
 11935 00007FA0 4983E808                	sub r8, 8
 11936 00007FA4 4983E908                	sub r9, 8
 11937 00007FA8 48FFC9                  	dec rcx
 11938 00007FAB EBE7                    	jmp .L_tc_recycle_frame_loop_0061
 11939                                  .L_tc_recycle_frame_done_0061:
 11940 00007FAD 498D6008                	lea rsp, [r8 + 8]
 11941 00007FB1 5D                      	pop rbp ; restore the old rbp
 11942 00007FB2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11943 00007FB5 E9BC010000              	jmp .L_if_end_0032
 11944                                  .L_if_else_0032:
 11945                                  	; preparing a non-tail-call
 11946 00007FBA 488B4528                	mov rax, PARAM(1)	; param b
 11947 00007FBE 50                      	push rax
 11948 00007FBF 6A01                    	push 1	; arg count
 11949 00007FC1 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11950 00007FC9 803805                  	cmp byte [rax], T_undefined
 11951 00007FCC 0F84B7D90000            	je L_error_fvar_undefined
 11952 00007FD2 803804                  	cmp byte [rax], T_closure
 11953 00007FD5 0F8532DA0000            	jne L_error_non_closure
 11954 00007FDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11955 00007FDE FF5009                  	call SOB_CLOSURE_CODE(rax)
 11956 00007FE1 483D[02000000]          	cmp rax, sob_boolean_false
 11957 00007FE7 0F8493000000            	je .L_if_else_0031
 11958                                  	; preparing a tail-call
 11959                                  	; preparing a non-tail-call
 11960 00007FED 488B4528                	mov rax, PARAM(1)	; param b
 11961 00007FF1 50                      	push rax
 11962 00007FF2 6A01                    	push 1	; arg count
 11963 00007FF4 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11964 00007FFC 803805                  	cmp byte [rax], T_undefined
 11965 00007FFF 0F8484D90000            	je L_error_fvar_undefined
 11966 00008005 803804                  	cmp byte [rax], T_closure
 11967 00008008 0F85FFD90000            	jne L_error_non_closure
 11968 0000800E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11969 00008011 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11970 00008014 50                      	push rax
 11971 00008015 488B4520                	mov rax, PARAM(0)	; param a
 11972 00008019 50                      	push rax
 11973 0000801A 6A02                    	push 2	; arg count
 11974 0000801C 488B0425[550F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11975 00008024 803805                  	cmp byte [rax], T_undefined
 11976 00008027 0F845CD90000            	je L_error_fvar_undefined
 11977 0000802D 803804                  	cmp byte [rax], T_closure
 11978 00008030 0F85D7D90000            	jne L_error_non_closure
 11979 00008036 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11980 00008039 FF7508                  	push qword [rbp + 8 * 1]
 11981                                   ; old ret addr
 11982 0000803C FF7500                  	push qword [rbp]
 11983                                   ; restore the old rbp
 11984 0000803F BB02000000              	mov rbx, 2
 11985 00008044 4883C303                	add rbx, 3
 11986 00008048 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 11987 0000804C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 11988 00008051 4C8D4DF8                	lea r9, [rbp - 8]
 11989 00008055 B906000000              	mov rcx, 6
 11990                                  .L_tc_recycle_frame_loop_0062:
 11991 0000805A 4883F900                	cmp rcx, 0
 11992 0000805E 7413                    	je .L_tc_recycle_frame_done_0062
 11993 00008060 4D8B11                  	mov r10, qword [r9]
 11994 00008063 4D8910                  	mov qword [r8], r10
 11995 00008066 4983E808                	sub r8, 8
 11996 0000806A 4983E908                	sub r9, 8
 11997 0000806E 48FFC9                  	dec rcx
 11998 00008071 EBE7                    	jmp .L_tc_recycle_frame_loop_0062
 11999                                  .L_tc_recycle_frame_done_0062:
 12000 00008073 498D6008                	lea rsp, [r8 + 8]
 12001 00008077 5D                      	pop rbp ; restore the old rbp
 12002 00008078 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12003 0000807B E9F6000000              	jmp .L_if_end_0031
 12004                                  .L_if_else_0031:
 12005                                  	; preparing a non-tail-call
 12006 00008080 488B4528                	mov rax, PARAM(1)	; param b
 12007 00008084 50                      	push rax
 12008 00008085 6A01                    	push 1	; arg count
 12009 00008087 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 12010 0000808F 803805                  	cmp byte [rax], T_undefined
 12011 00008092 0F84F1D80000            	je L_error_fvar_undefined
 12012 00008098 803804                  	cmp byte [rax], T_closure
 12013 0000809B 0F856CD90000            	jne L_error_non_closure
 12014 000080A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12015 000080A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12016 000080A7 483D[02000000]          	cmp rax, sob_boolean_false
 12017 000080AD 746D                    	je .L_if_else_0030
 12018                                  	; preparing a tail-call
 12019 000080AF 488B4528                	mov rax, PARAM(1)	; param b
 12020 000080B3 50                      	push rax
 12021 000080B4 488B4520                	mov rax, PARAM(0)	; param a
 12022 000080B8 50                      	push rax
 12023 000080B9 6A02                    	push 2	; arg count
 12024 000080BB 488B0425[550F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12025 000080C3 803805                  	cmp byte [rax], T_undefined
 12026 000080C6 0F84BDD80000            	je L_error_fvar_undefined
 12027 000080CC 803804                  	cmp byte [rax], T_closure
 12028 000080CF 0F8538D90000            	jne L_error_non_closure
 12029 000080D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12030 000080D8 FF7508                  	push qword [rbp + 8 * 1]
 12031                                   ; old ret addr
 12032 000080DB FF7500                  	push qword [rbp]
 12033                                   ; restore the old rbp
 12034 000080DE BB02000000              	mov rbx, 2
 12035 000080E3 4883C303                	add rbx, 3
 12036 000080E7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12037 000080EB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12038 000080F0 4C8D4DF8                	lea r9, [rbp - 8]
 12039 000080F4 B906000000              	mov rcx, 6
 12040                                  .L_tc_recycle_frame_loop_0063:
 12041 000080F9 4883F900                	cmp rcx, 0
 12042 000080FD 7413                    	je .L_tc_recycle_frame_done_0063
 12043 000080FF 4D8B11                  	mov r10, qword [r9]
 12044 00008102 4D8910                  	mov qword [r8], r10
 12045 00008105 4983E808                	sub r8, 8
 12046 00008109 4983E908                	sub r9, 8
 12047 0000810D 48FFC9                  	dec rcx
 12048 00008110 EBE7                    	jmp .L_tc_recycle_frame_loop_0063
 12049                                  .L_tc_recycle_frame_done_0063:
 12050 00008112 498D6008                	lea rsp, [r8 + 8]
 12051 00008116 5D                      	pop rbp ; restore the old rbp
 12052 00008117 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12053 0000811A EB5A                    	jmp .L_if_end_0030
 12054                                  .L_if_else_0030:
 12055                                  	; preparing a tail-call
 12056 0000811C 6A00                    	push 0	; arg count
 12057 0000811E 488B4510                	mov rax, ENV
 12058 00008122 488B00                  	mov rax, qword [rax + 8 * 0]
 12059 00008125 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12060 00008128 803804                  	cmp byte [rax], T_closure
 12061 0000812B 0F85DCD80000            	jne L_error_non_closure
 12062 00008131 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12063 00008134 FF7508                  	push qword [rbp + 8 * 1]
 12064                                   ; old ret addr
 12065 00008137 FF7500                  	push qword [rbp]
 12066                                   ; restore the old rbp
 12067 0000813A BB00000000              	mov rbx, 0
 12068 0000813F 4883C303                	add rbx, 3
 12069 00008143 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12070 00008147 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12071 0000814C 4C8D4DF8                	lea r9, [rbp - 8]
 12072 00008150 B904000000              	mov rcx, 4
 12073                                  .L_tc_recycle_frame_loop_0064:
 12074 00008155 4883F900                	cmp rcx, 0
 12075 00008159 7413                    	je .L_tc_recycle_frame_done_0064
 12076 0000815B 4D8B11                  	mov r10, qword [r9]
 12077 0000815E 4D8910                  	mov qword [r8], r10
 12078 00008161 4983E808                	sub r8, 8
 12079 00008165 4983E908                	sub r9, 8
 12080 00008169 48FFC9                  	dec rcx
 12081 0000816C EBE7                    	jmp .L_tc_recycle_frame_loop_0064
 12082                                  .L_tc_recycle_frame_done_0064:
 12083 0000816E 498D6008                	lea rsp, [r8 + 8]
 12084 00008172 5D                      	pop rbp ; restore the old rbp
 12085 00008173 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12086                                  .L_if_end_0030:
 12087                                  .L_if_end_0031:
 12088                                  .L_if_end_0032:
 12089 00008176 EB5A                    	jmp .L_if_end_0033
 12090                                  .L_if_else_0033:
 12091                                  	; preparing a tail-call
 12092 00008178 6A00                    	push 0	; arg count
 12093 0000817A 488B4510                	mov rax, ENV
 12094 0000817E 488B00                  	mov rax, qword [rax + 8 * 0]
 12095 00008181 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12096 00008184 803804                  	cmp byte [rax], T_closure
 12097 00008187 0F8580D80000            	jne L_error_non_closure
 12098 0000818D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12099 00008190 FF7508                  	push qword [rbp + 8 * 1]
 12100                                   ; old ret addr
 12101 00008193 FF7500                  	push qword [rbp]
 12102                                   ; restore the old rbp
 12103 00008196 BB00000000              	mov rbx, 0
 12104 0000819B 4883C303                	add rbx, 3
 12105 0000819F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12106 000081A3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12107 000081A8 4C8D4DF8                	lea r9, [rbp - 8]
 12108 000081AC B904000000              	mov rcx, 4
 12109                                  .L_tc_recycle_frame_loop_0065:
 12110 000081B1 4883F900                	cmp rcx, 0
 12111 000081B5 7413                    	je .L_tc_recycle_frame_done_0065
 12112 000081B7 4D8B11                  	mov r10, qword [r9]
 12113 000081BA 4D8910                  	mov qword [r8], r10
 12114 000081BD 4983E808                	sub r8, 8
 12115 000081C1 4983E908                	sub r9, 8
 12116 000081C5 48FFC9                  	dec rcx
 12117 000081C8 EBE7                    	jmp .L_tc_recycle_frame_loop_0065
 12118                                  .L_tc_recycle_frame_done_0065:
 12119 000081CA 498D6008                	lea rsp, [r8 + 8]
 12120 000081CE 5D                      	pop rbp ; restore the old rbp
 12121 000081CF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12122                                  .L_if_end_0033:
 12123                                  .L_if_end_0034:
 12124                                  .L_if_end_0035:
 12125 000081D2 C9                      	leave
 12126 000081D3 C22000                  	ret AND_KILL_FRAME(2)
 12127                                  .L_lambda_simple_end_003f:	; new closure is in rax
 12128 000081D6 50                      	push rax
 12129 000081D7 6A01                    	push 1	; arg count
 12130 000081D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12131 000081DE E8D3D80000              	call malloc
 12132 000081E3 50                      	push rax
 12133 000081E4 BF08000000              	mov rdi, 8 * 1	; new rib
 12134 000081E9 E8C8D80000              	call malloc
 12135 000081EE 50                      	push rax
 12136 000081EF BF10000000              	mov rdi, 8 * 2	; extended env
 12137 000081F4 E8BDD80000              	call malloc
 12138 000081F9 488B7D10                	mov rdi, ENV
 12139 000081FD BE00000000              	mov rsi, 0
 12140 00008202 BA01000000              	mov rdx, 1
 12141                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 12142 00008207 4883FE01                	cmp rsi, 1
 12143 0000820B 7410                    	je .L_lambda_simple_env_end_0040
 12144 0000820D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12145 00008211 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12146 00008215 48FFC6                  	inc rsi
 12147 00008218 48FFC2                  	inc rdx
 12148 0000821B EBEA                    	jmp .L_lambda_simple_env_loop_0040
 12149                                  .L_lambda_simple_env_end_0040:
 12150 0000821D 5B                      	pop rbx
 12151 0000821E BE00000000              	mov rsi, 0
 12152                                  .L_lambda_simple_params_loop_0040:	; copy params
 12153 00008223 4883FE01                	cmp rsi, 1
 12154 00008227 740E                    	je .L_lambda_simple_params_end_0040
 12155 00008229 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12156 0000822E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12157 00008232 48FFC6                  	inc rsi
 12158 00008235 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 12159                                  .L_lambda_simple_params_end_0040:
 12160 00008237 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12161 0000823A 4889C3                  	mov rbx, rax
 12162 0000823D 58                      	pop rax
 12163 0000823E C60004                  	mov byte [rax], T_closure
 12164 00008241 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12165 00008245 48C74009[52820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 12166 0000824D E903020000              	jmp .L_lambda_simple_end_0040
 12167                                  .L_lambda_simple_code_0040:	; lambda-simple body
 12168 00008252 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12169 00008258 740B                    	je .L_lambda_simple_arity_check_ok_0040
 12170 0000825A FF742410                	push qword [rsp + 8 * 2]
 12171 0000825E 6A01                    	push 1
 12172 00008260 E90AD80000              	jmp L_error_incorrect_arity_simple
 12173                                  .L_lambda_simple_arity_check_ok_0040:
 12174 00008265 C8000000                	enter 0, 0
 12175 00008269 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12176 0000826E E843D80000              	call malloc
 12177 00008273 50                      	push rax
 12178 00008274 BF08000000              	mov rdi, 8 * 1	; new rib
 12179 00008279 E838D80000              	call malloc
 12180 0000827E 50                      	push rax
 12181 0000827F BF18000000              	mov rdi, 8 * 3	; extended env
 12182 00008284 E82DD80000              	call malloc
 12183 00008289 488B7D10                	mov rdi, ENV
 12184 0000828D 4831F6                  	 xor rsi, rsi
 12185 00008290 4831D2                  	 xor rdx, rdx
 12186 00008293 48FFC2                  	inc rdx
 12187                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 12188 00008296 4883FE02                	cmp rsi, 2
 12189 0000829A 7410                    	je .L_lambda_opt_env_end_000c
 12190 0000829C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12191 000082A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12192 000082A4 48FFC6                  	inc rsi
 12193 000082A7 48FFC2                  	inc rdx
 12194 000082AA EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12195                                  .L_lambda_opt_env_end_000c:
 12196 000082AC 5B                      	pop rbx
 12197 000082AD 4831F6                  	xor rsi, rsi
 12198                                  .L_lambda_opt_params_loop_000c:	; copy params
 12199 000082B0 4883FE01                	cmp rsi, 1
 12200 000082B4 740E                    	je .L_lambda_opt_params_end_000c
 12201 000082B6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12202 000082BB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12203 000082BF 48FFC6                  	inc rsi
 12204 000082C2 EBEC                    	jmp .L_lambda_opt_params_loop_000c
 12205                                  .L_lambda_opt_params_end_000c:
 12206 000082C4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12207 000082C7 4889C3                  	mov rbx, rax
 12208 000082CA 58                      	pop rax
 12209 000082CB C60004                  	mov byte [rax], T_closure
 12210 000082CE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12211 000082D2 48C74009[DF820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12212 000082DA E972010000              	jmp .L_lambda_opt_end_000c
 12213                                  .L_lambda_opt_code_000c:; lambda opt body
 12214 000082DF 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12215 000082E5 7409                    	je .L_lambda_opt_arity_check_exact_000c
 12216 000082E7 7F57                    	jg .L_lambda_opt_arity_check_more_000c
 12217 000082E9 6A00                    	push 0
 12218 000082EB E993D70000              	jmp L_error_incorrect_arity_opt
 12219                                  .L_lambda_opt_arity_check_exact_000c:
 12220 000082F0 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 12221 000082F4 4C894C24F8              	mov qword [rsp -8], r9
 12222 000082F9 4C8B4C2408              	mov r9, qword [rsp +8]
 12223 000082FE 4C890C24                	mov qword [rsp +8 * 0], r9
 12224 00008302 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 12225 00008307 4C89C9                  	mov rcx, r9
 12226 0000830A 49FFC1                  	inc r9
 12227 0000830D 4C894C2408              	mov qword [rsp +8], r9
 12228 00008312 4889E2                  	mov rdx, rsp
 12229 00008315 4883C218                	add rdx, 24
 12230                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000c:
 12231 00008319 4883F900                	cmp rcx, 0
 12232 0000831D 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000c
 12233 0000831F 4C8B02                  	mov r8, qword [rdx]
 12234 00008322 4C8942F8                	mov qword [rdx - 8], r8
 12235 00008326 4883C208                	add rdx, 8
 12236 0000832A 48FFC9                  	dec rcx
 12237 0000832D EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000c
 12238                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000c:
 12239 0000832F 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 12240 00008337 4883EC08                	sub rsp, 8
 12241 0000833B E984000000              	jmp .L_lambda_opt_stack_adjusted_000c
 12242                                  .L_lambda_opt_arity_check_more_000c:
 12243 00008340 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 12244 00008345 4D89C4                  	mov r12, r8
 12245 00008348 4C89C1                  	mov rcx, r8
 12246 0000834B 4D8D5002                	lea r10, [r8 + 2] 
 12247 0000834F 4883E900                	sub rcx, 0
 12248 00008353 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 12249 00008358 49B9-                   	mov r9, sob_nil
 12249 0000835A [0100000000000000] 
 12250                                  .L_lambda_opt_create_list_of_opt_params_000c:
 12251 00008362 4883F900                	cmp rcx, 0
 12252 00008366 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000c
 12253 00008368 BF11000000              	mov rdi, 17
 12254 0000836D E844D70000              	call malloc
 12255 00008372 C60021                  	mov byte [rax], T_pair
 12256 00008375 498B1B                  	mov rbx, qword [r11]
 12257 00008378 48895801                	mov qword [rax +1], rbx
 12258 0000837C 4C894809                	mov qword [rax + 1 + 8], r9
 12259 00008380 4989C1                  	mov r9, rax
 12260 00008383 48FFC9                  	dec rcx
 12261 00008386 4983EB08                	sub r11, 8
 12262 0000838A EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000c
 12263                                  .L_lambda_opt_create_list_of_opt_params_end_000c:
 12264 0000838C 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 12265 00008391 4D8908                  	mov qword [r8], r9
 12266 00008394 4E8D14D500000000        	lea r10, [8 * r10]
 12267 0000839C 4901E2                  	add r10, rsp
 12268 0000839F B904000000              	mov rcx, 4 + 0
 12269                                  .L_lambda_opt_stack_shrink_loop_000c:
 12270 000083A4 4883F900                	cmp rcx, 0
 12271 000083A8 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000c
 12272 000083AA 4D8B18                  	mov r11, qword [r8]
 12273 000083AD 4D891A                  	mov qword [r10], r11
 12274 000083B0 4983E808                	sub r8, 8
 12275 000083B4 4983EA08                	sub r10, 8
 12276 000083B8 48FFC9                  	dec rcx
 12277 000083BB EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12278                                  .L_lambda_opt_stack_shrink_loop_exit_000c:
 12279 000083BD 4983C208                	add r10, 8
 12280 000083C1 4C89D4                  	mov rsp, r10
 12281                                  .L_lambda_opt_stack_adjusted_000c:;continue with the code, the stack is ok
 12282 000083C4 48C744241001000000      	mov qword [rsp + 8*2], 1
 12283 000083CD C8000000                	enter 0, 0
 12284                                  	; preparing a tail-call
 12285 000083D1 488B4520                	mov rax, PARAM(0)	; param s
 12286 000083D5 50                      	push rax
 12287 000083D6 48B8-                   	mov rax, L_constants + 2270
 12287 000083D8 [DE08000000000000] 
 12288 000083E0 50                      	push rax
 12289 000083E1 488B4510                	mov rax, ENV
 12290 000083E5 488B00                  	mov rax, qword [rax + 8 * 0]
 12291 000083E8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12292 000083EB 50                      	push rax
 12293 000083EC 6A03                    	push 3	; arg count
 12294 000083EE 488B0425[73130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12295 000083F6 803805                  	cmp byte [rax], T_undefined
 12296 000083F9 0F848AD50000            	je L_error_fvar_undefined
 12297 000083FF 803804                  	cmp byte [rax], T_closure
 12298 00008402 0F8505D60000            	jne L_error_non_closure
 12299 00008408 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12300 0000840B FF7508                  	push qword [rbp + 8 * 1]
 12301                                   ; old ret addr
 12302 0000840E FF7500                  	push qword [rbp]
 12303                                   ; restore the old rbp
 12304 00008411 BB03000000              	mov rbx, 3
 12305 00008416 4883C303                	add rbx, 3
 12306 0000841A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12307 0000841E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12308 00008423 4C8D4DF8                	lea r9, [rbp - 8]
 12309 00008427 B907000000              	mov rcx, 7
 12310                                  .L_tc_recycle_frame_loop_0066:
 12311 0000842C 4883F900                	cmp rcx, 0
 12312 00008430 7413                    	je .L_tc_recycle_frame_done_0066
 12313 00008432 4D8B11                  	mov r10, qword [r9]
 12314 00008435 4D8910                  	mov qword [r8], r10
 12315 00008438 4983E808                	sub r8, 8
 12316 0000843C 4983E908                	sub r9, 8
 12317 00008440 48FFC9                  	dec rcx
 12318 00008443 EBE7                    	jmp .L_tc_recycle_frame_loop_0066
 12319                                  .L_tc_recycle_frame_done_0066:
 12320 00008445 498D6008                	lea rsp, [r8 + 8]
 12321 00008449 5D                      	pop rbp ; restore the old rbp
 12322 0000844A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12323 0000844D C9                      	leave
 12324 0000844E C21800                  	ret 8 * (2 + 1)
 12325                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12326 00008451 C9                      	leave
 12327 00008452 C21800                  	ret AND_KILL_FRAME(1)
 12328                                  .L_lambda_simple_end_0040:	; new closure is in rax
 12329 00008455 803804                  	cmp byte [rax], T_closure
 12330 00008458 0F85AFD50000            	jne L_error_non_closure
 12331 0000845E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12332 00008461 FF7508                  	push qword [rbp + 8 * 1]
 12333                                   ; old ret addr
 12334 00008464 FF7500                  	push qword [rbp]
 12335                                   ; restore the old rbp
 12336 00008467 BB01000000              	mov rbx, 1
 12337 0000846C 4883C303                	add rbx, 3
 12338 00008470 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12339 00008474 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12340 00008479 4C8D4DF8                	lea r9, [rbp - 8]
 12341 0000847D B905000000              	mov rcx, 5
 12342                                  .L_tc_recycle_frame_loop_0058:
 12343 00008482 4883F900                	cmp rcx, 0
 12344 00008486 7413                    	je .L_tc_recycle_frame_done_0058
 12345 00008488 4D8B11                  	mov r10, qword [r9]
 12346 0000848B 4D8910                  	mov qword [r8], r10
 12347 0000848E 4983E808                	sub r8, 8
 12348 00008492 4983E908                	sub r9, 8
 12349 00008496 48FFC9                  	dec rcx
 12350 00008499 EBE7                    	jmp .L_tc_recycle_frame_loop_0058
 12351                                  .L_tc_recycle_frame_done_0058:
 12352 0000849B 498D6008                	lea rsp, [r8 + 8]
 12353 0000849F 5D                      	pop rbp ; restore the old rbp
 12354 000084A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12355 000084A3 C9                      	leave
 12356 000084A4 C21800                  	ret AND_KILL_FRAME(1)
 12357                                  .L_lambda_simple_end_003e:	; new closure is in rax
 12358 000084A7 803804                  	cmp byte [rax], T_closure
 12359 000084AA 0F855DD50000            	jne L_error_non_closure
 12360 000084B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12361 000084B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12362 000084B6 48890425[CE0D0000]      	mov qword [free_var_0], rax
 12363 000084BE 48B8-                   	mov rax, sob_void
 12363 000084C0 [0000000000000000] 
 12364                                  
 12365 000084C8 4889C7                  	mov rdi, rax
 12366 000084CB E83BD80000              	call print_sexpr_if_not_void
 12367                                  	; preparing a non-tail-call
 12368 000084D0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12369 000084D5 E8DCD50000              	call malloc
 12370 000084DA 50                      	push rax
 12371 000084DB BF00000000              	mov rdi, 8 * 0	; new rib
 12372 000084E0 E8D1D50000              	call malloc
 12373 000084E5 50                      	push rax
 12374 000084E6 BF08000000              	mov rdi, 8 * 1	; extended env
 12375 000084EB E8C6D50000              	call malloc
 12376 000084F0 488B7D10                	mov rdi, ENV
 12377 000084F4 BE00000000              	mov rsi, 0
 12378 000084F9 BA01000000              	mov rdx, 1
 12379                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 12380 000084FE 4883FE00                	cmp rsi, 0
 12381 00008502 7410                    	je .L_lambda_simple_env_end_0041
 12382 00008504 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12383 00008508 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12384 0000850C 48FFC6                  	inc rsi
 12385 0000850F 48FFC2                  	inc rdx
 12386 00008512 EBEA                    	jmp .L_lambda_simple_env_loop_0041
 12387                                  .L_lambda_simple_env_end_0041:
 12388 00008514 5B                      	pop rbx
 12389 00008515 BE00000000              	mov rsi, 0
 12390                                  .L_lambda_simple_params_loop_0041:	; copy params
 12391 0000851A 4883FE00                	cmp rsi, 0
 12392 0000851E 740E                    	je .L_lambda_simple_params_end_0041
 12393 00008520 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12394 00008525 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12395 00008529 48FFC6                  	inc rsi
 12396 0000852C EBEC                    	jmp .L_lambda_simple_params_loop_0041
 12397                                  .L_lambda_simple_params_end_0041:
 12398 0000852E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12399 00008531 4889C3                  	mov rbx, rax
 12400 00008534 58                      	pop rax
 12401 00008535 C60004                  	mov byte [rax], T_closure
 12402 00008538 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12403 0000853C 48C74009[49850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 12404 00008544 E992000000              	jmp .L_lambda_simple_end_0041
 12405                                  .L_lambda_simple_code_0041:	; lambda-simple body
 12406 00008549 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12407 0000854F 740B                    	je .L_lambda_simple_arity_check_ok_0041
 12408 00008551 FF742410                	push qword [rsp + 8 * 2]
 12409 00008555 6A00                    	push 0
 12410 00008557 E913D50000              	jmp L_error_incorrect_arity_simple
 12411                                  .L_lambda_simple_arity_check_ok_0041:
 12412 0000855C C8000000                	enter 0, 0
 12413                                  	; preparing a tail-call
 12414 00008560 48B8-                   	mov rax, L_constants + 2187
 12414 00008562 [8B08000000000000] 
 12415 0000856A 50                      	push rax
 12416 0000856B 48B8-                   	mov rax, L_constants + 2298
 12416 0000856D [FA08000000000000] 
 12417 00008575 50                      	push rax
 12418 00008576 6A02                    	push 2	; arg count
 12419 00008578 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
 12420 00008580 803805                  	cmp byte [rax], T_undefined
 12421 00008583 0F8400D40000            	je L_error_fvar_undefined
 12422 00008589 803804                  	cmp byte [rax], T_closure
 12423 0000858C 0F857BD40000            	jne L_error_non_closure
 12424 00008592 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12425 00008595 FF7508                  	push qword [rbp + 8 * 1]
 12426                                   ; old ret addr
 12427 00008598 FF7500                  	push qword [rbp]
 12428                                   ; restore the old rbp
 12429 0000859B BB02000000              	mov rbx, 2
 12430 000085A0 4883C303                	add rbx, 3
 12431 000085A4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12432 000085A8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12433 000085AD 4C8D4DF8                	lea r9, [rbp - 8]
 12434 000085B1 B906000000              	mov rcx, 6
 12435                                  .L_tc_recycle_frame_loop_0067:
 12436 000085B6 4883F900                	cmp rcx, 0
 12437 000085BA 7413                    	je .L_tc_recycle_frame_done_0067
 12438 000085BC 4D8B11                  	mov r10, qword [r9]
 12439 000085BF 4D8910                  	mov qword [r8], r10
 12440 000085C2 4983E808                	sub r8, 8
 12441 000085C6 4983E908                	sub r9, 8
 12442 000085CA 48FFC9                  	dec rcx
 12443 000085CD EBE7                    	jmp .L_tc_recycle_frame_loop_0067
 12444                                  .L_tc_recycle_frame_done_0067:
 12445 000085CF 498D6008                	lea rsp, [r8 + 8]
 12446 000085D3 5D                      	pop rbp ; restore the old rbp
 12447 000085D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12448 000085D7 C9                      	leave
 12449 000085D8 C21000                  	ret AND_KILL_FRAME(0)
 12450                                  .L_lambda_simple_end_0041:	; new closure is in rax
 12451 000085DB 50                      	push rax
 12452 000085DC 6A01                    	push 1	; arg count
 12453 000085DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12454 000085E3 E8CED40000              	call malloc
 12455 000085E8 50                      	push rax
 12456 000085E9 BF00000000              	mov rdi, 8 * 0	; new rib
 12457 000085EE E8C3D40000              	call malloc
 12458 000085F3 50                      	push rax
 12459 000085F4 BF08000000              	mov rdi, 8 * 1	; extended env
 12460 000085F9 E8B8D40000              	call malloc
 12461 000085FE 488B7D10                	mov rdi, ENV
 12462 00008602 BE00000000              	mov rsi, 0
 12463 00008607 BA01000000              	mov rdx, 1
 12464                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 12465 0000860C 4883FE00                	cmp rsi, 0
 12466 00008610 7410                    	je .L_lambda_simple_env_end_0042
 12467 00008612 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12468 00008616 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12469 0000861A 48FFC6                  	inc rsi
 12470 0000861D 48FFC2                  	inc rdx
 12471 00008620 EBEA                    	jmp .L_lambda_simple_env_loop_0042
 12472                                  .L_lambda_simple_env_end_0042:
 12473 00008622 5B                      	pop rbx
 12474 00008623 BE00000000              	mov rsi, 0
 12475                                  .L_lambda_simple_params_loop_0042:	; copy params
 12476 00008628 4883FE00                	cmp rsi, 0
 12477 0000862C 740E                    	je .L_lambda_simple_params_end_0042
 12478 0000862E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12479 00008633 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12480 00008637 48FFC6                  	inc rsi
 12481 0000863A EBEC                    	jmp .L_lambda_simple_params_loop_0042
 12482                                  .L_lambda_simple_params_end_0042:
 12483 0000863C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12484 0000863F 4889C3                  	mov rbx, rax
 12485 00008642 58                      	pop rax
 12486 00008643 C60004                  	mov byte [rax], T_closure
 12487 00008646 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12488 0000864A 48C74009[57860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 12489 00008652 E9B70D0000              	jmp .L_lambda_simple_end_0042
 12490                                  .L_lambda_simple_code_0042:	; lambda-simple body
 12491 00008657 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12492 0000865D 740B                    	je .L_lambda_simple_arity_check_ok_0042
 12493 0000865F FF742410                	push qword [rsp + 8 * 2]
 12494 00008663 6A01                    	push 1
 12495 00008665 E905D40000              	jmp L_error_incorrect_arity_simple
 12496                                  .L_lambda_simple_arity_check_ok_0042:
 12497 0000866A C8000000                	enter 0, 0
 12498                                  	; preparing a tail-call
 12499 0000866E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12500 00008673 E83ED40000              	call malloc
 12501 00008678 50                      	push rax
 12502 00008679 BF08000000              	mov rdi, 8 * 1	; new rib
 12503 0000867E E833D40000              	call malloc
 12504 00008683 50                      	push rax
 12505 00008684 BF10000000              	mov rdi, 8 * 2	; extended env
 12506 00008689 E828D40000              	call malloc
 12507 0000868E 488B7D10                	mov rdi, ENV
 12508 00008692 BE00000000              	mov rsi, 0
 12509 00008697 BA01000000              	mov rdx, 1
 12510                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 12511 0000869C 4883FE01                	cmp rsi, 1
 12512 000086A0 7410                    	je .L_lambda_simple_env_end_0043
 12513 000086A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12514 000086A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12515 000086AA 48FFC6                  	inc rsi
 12516 000086AD 48FFC2                  	inc rdx
 12517 000086B0 EBEA                    	jmp .L_lambda_simple_env_loop_0043
 12518                                  .L_lambda_simple_env_end_0043:
 12519 000086B2 5B                      	pop rbx
 12520 000086B3 BE00000000              	mov rsi, 0
 12521                                  .L_lambda_simple_params_loop_0043:	; copy params
 12522 000086B8 4883FE01                	cmp rsi, 1
 12523 000086BC 740E                    	je .L_lambda_simple_params_end_0043
 12524 000086BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12525 000086C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12526 000086C7 48FFC6                  	inc rsi
 12527 000086CA EBEC                    	jmp .L_lambda_simple_params_loop_0043
 12528                                  .L_lambda_simple_params_end_0043:
 12529 000086CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12530 000086CF 4889C3                  	mov rbx, rax
 12531 000086D2 58                      	pop rax
 12532 000086D3 C60004                  	mov byte [rax], T_closure
 12533 000086D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12534 000086DA 48C74009[E7860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 12535 000086E2 E9A0080000              	jmp .L_lambda_simple_end_0043
 12536                                  .L_lambda_simple_code_0043:	; lambda-simple body
 12537 000086E7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12538 000086ED 740B                    	je .L_lambda_simple_arity_check_ok_0043
 12539 000086EF FF742410                	push qword [rsp + 8 * 2]
 12540 000086F3 6A02                    	push 2
 12541 000086F5 E975D30000              	jmp L_error_incorrect_arity_simple
 12542                                  .L_lambda_simple_arity_check_ok_0043:
 12543 000086FA C8000000                	enter 0, 0
 12544                                  	; preparing a non-tail-call
 12545 000086FE 488B4520                	mov rax, PARAM(0)	; param a
 12546 00008702 50                      	push rax
 12547 00008703 6A01                    	push 1	; arg count
 12548 00008705 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 12549 0000870D 803805                  	cmp byte [rax], T_undefined
 12550 00008710 0F8473D20000            	je L_error_fvar_undefined
 12551 00008716 803804                  	cmp byte [rax], T_closure
 12552 00008719 0F85EED20000            	jne L_error_non_closure
 12553 0000871F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12554 00008722 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12555 00008725 483D[02000000]          	cmp rax, sob_boolean_false
 12556 0000872B 0F8487020000            	je .L_if_else_0041
 12557                                  	; preparing a non-tail-call
 12558 00008731 488B4528                	mov rax, PARAM(1)	; param b
 12559 00008735 50                      	push rax
 12560 00008736 6A01                    	push 1	; arg count
 12561 00008738 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 12562 00008740 803805                  	cmp byte [rax], T_undefined
 12563 00008743 0F8440D20000            	je L_error_fvar_undefined
 12564 00008749 803804                  	cmp byte [rax], T_closure
 12565 0000874C 0F85BBD20000            	jne L_error_non_closure
 12566 00008752 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12567 00008755 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12568 00008758 483D[02000000]          	cmp rax, sob_boolean_false
 12569 0000875E 7470                    	je .L_if_else_0038
 12570                                  	; preparing a tail-call
 12571 00008760 488B4528                	mov rax, PARAM(1)	; param b
 12572 00008764 50                      	push rax
 12573 00008765 488B4520                	mov rax, PARAM(0)	; param a
 12574 00008769 50                      	push rax
 12575 0000876A 6A02                    	push 2	; arg count
 12576 0000876C 488B0425[CD0E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 12577 00008774 803805                  	cmp byte [rax], T_undefined
 12578 00008777 0F840CD20000            	je L_error_fvar_undefined
 12579 0000877D 803804                  	cmp byte [rax], T_closure
 12580 00008780 0F8587D20000            	jne L_error_non_closure
 12581 00008786 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12582 00008789 FF7508                  	push qword [rbp + 8 * 1]
 12583                                   ; old ret addr
 12584 0000878C FF7500                  	push qword [rbp]
 12585                                   ; restore the old rbp
 12586 0000878F BB02000000              	mov rbx, 2
 12587 00008794 4883C303                	add rbx, 3
 12588 00008798 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12589 0000879C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12590 000087A1 4C8D4DF8                	lea r9, [rbp - 8]
 12591 000087A5 B906000000              	mov rcx, 6
 12592                                  .L_tc_recycle_frame_loop_0069:
 12593 000087AA 4883F900                	cmp rcx, 0
 12594 000087AE 7413                    	je .L_tc_recycle_frame_done_0069
 12595 000087B0 4D8B11                  	mov r10, qword [r9]
 12596 000087B3 4D8910                  	mov qword [r8], r10
 12597 000087B6 4983E808                	sub r8, 8
 12598 000087BA 4983E908                	sub r9, 8
 12599 000087BE 48FFC9                  	dec rcx
 12600 000087C1 EBE7                    	jmp .L_tc_recycle_frame_loop_0069
 12601                                  .L_tc_recycle_frame_done_0069:
 12602 000087C3 498D6008                	lea rsp, [r8 + 8]
 12603 000087C7 5D                      	pop rbp ; restore the old rbp
 12604 000087C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12605 000087CB E9E3010000              	jmp .L_if_end_0038
 12606                                  .L_if_else_0038:
 12607                                  	; preparing a non-tail-call
 12608 000087D0 488B4528                	mov rax, PARAM(1)	; param b
 12609 000087D4 50                      	push rax
 12610 000087D5 6A01                    	push 1	; arg count
 12611 000087D7 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12612 000087DF 803805                  	cmp byte [rax], T_undefined
 12613 000087E2 0F84A1D10000            	je L_error_fvar_undefined
 12614 000087E8 803804                  	cmp byte [rax], T_closure
 12615 000087EB 0F851CD20000            	jne L_error_non_closure
 12616 000087F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12617 000087F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12618 000087F7 483D[02000000]          	cmp rax, sob_boolean_false
 12619 000087FD 0F8493000000            	je .L_if_else_0037
 12620                                  	; preparing a tail-call
 12621 00008803 488B4528                	mov rax, PARAM(1)	; param b
 12622 00008807 50                      	push rax
 12623                                  	; preparing a non-tail-call
 12624 00008808 488B4520                	mov rax, PARAM(0)	; param a
 12625 0000880C 50                      	push rax
 12626 0000880D 6A01                    	push 1	; arg count
 12627 0000880F 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12628 00008817 803805                  	cmp byte [rax], T_undefined
 12629 0000881A 0F8469D10000            	je L_error_fvar_undefined
 12630 00008820 803804                  	cmp byte [rax], T_closure
 12631 00008823 0F85E4D10000            	jne L_error_non_closure
 12632 00008829 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12633 0000882C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12634 0000882F 50                      	push rax
 12635 00008830 6A02                    	push 2	; arg count
 12636 00008832 488B0425[AB0E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12637 0000883A 803805                  	cmp byte [rax], T_undefined
 12638 0000883D 0F8446D10000            	je L_error_fvar_undefined
 12639 00008843 803804                  	cmp byte [rax], T_closure
 12640 00008846 0F85C1D10000            	jne L_error_non_closure
 12641 0000884C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12642 0000884F FF7508                  	push qword [rbp + 8 * 1]
 12643                                   ; old ret addr
 12644 00008852 FF7500                  	push qword [rbp]
 12645                                   ; restore the old rbp
 12646 00008855 BB02000000              	mov rbx, 2
 12647 0000885A 4883C303                	add rbx, 3
 12648 0000885E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12649 00008862 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12650 00008867 4C8D4DF8                	lea r9, [rbp - 8]
 12651 0000886B B906000000              	mov rcx, 6
 12652                                  .L_tc_recycle_frame_loop_006a:
 12653 00008870 4883F900                	cmp rcx, 0
 12654 00008874 7413                    	je .L_tc_recycle_frame_done_006a
 12655 00008876 4D8B11                  	mov r10, qword [r9]
 12656 00008879 4D8910                  	mov qword [r8], r10
 12657 0000887C 4983E808                	sub r8, 8
 12658 00008880 4983E908                	sub r9, 8
 12659 00008884 48FFC9                  	dec rcx
 12660 00008887 EBE7                    	jmp .L_tc_recycle_frame_loop_006a
 12661                                  .L_tc_recycle_frame_done_006a:
 12662 00008889 498D6008                	lea rsp, [r8 + 8]
 12663 0000888D 5D                      	pop rbp ; restore the old rbp
 12664 0000888E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12665 00008891 E91D010000              	jmp .L_if_end_0037
 12666                                  .L_if_else_0037:
 12667                                  	; preparing a non-tail-call
 12668 00008896 488B4528                	mov rax, PARAM(1)	; param b
 12669 0000889A 50                      	push rax
 12670 0000889B 6A01                    	push 1	; arg count
 12671 0000889D 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 12672 000088A5 803805                  	cmp byte [rax], T_undefined
 12673 000088A8 0F84DBD00000            	je L_error_fvar_undefined
 12674 000088AE 803804                  	cmp byte [rax], T_closure
 12675 000088B1 0F8556D10000            	jne L_error_non_closure
 12676 000088B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12677 000088BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12678 000088BD 483D[02000000]          	cmp rax, sob_boolean_false
 12679 000088C3 0F8490000000            	je .L_if_else_0036
 12680                                  	; preparing a tail-call
 12681 000088C9 488B4528                	mov rax, PARAM(1)	; param b
 12682 000088CD 50                      	push rax
 12683                                  	; preparing a non-tail-call
 12684 000088CE 488B4520                	mov rax, PARAM(0)	; param a
 12685 000088D2 50                      	push rax
 12686 000088D3 6A01                    	push 1	; arg count
 12687 000088D5 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12688 000088DD 803805                  	cmp byte [rax], T_undefined
 12689 000088E0 0F84A3D00000            	je L_error_fvar_undefined
 12690 000088E6 803804                  	cmp byte [rax], T_closure
 12691 000088E9 0F851ED10000            	jne L_error_non_closure
 12692 000088EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 12693 000088F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12694 000088F5 50                      	push rax
 12695 000088F6 6A02                    	push 2	; arg count
 12696 000088F8 488B0425[BC0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12697 00008900 803805                  	cmp byte [rax], T_undefined
 12698 00008903 0F8480D00000            	je L_error_fvar_undefined
 12699 00008909 803804                  	cmp byte [rax], T_closure
 12700 0000890C 0F85FBD00000            	jne L_error_non_closure
 12701 00008912 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12702 00008915 FF7508                  	push qword [rbp + 8 * 1]
 12703                                   ; old ret addr
 12704 00008918 FF7500                  	push qword [rbp]
 12705                                   ; restore the old rbp
 12706 0000891B BB02000000              	mov rbx, 2
 12707 00008920 4883C303                	add rbx, 3
 12708 00008924 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12709 00008928 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12710 0000892D 4C8D4DF8                	lea r9, [rbp - 8]
 12711 00008931 B906000000              	mov rcx, 6
 12712                                  .L_tc_recycle_frame_loop_006b:
 12713 00008936 4883F900                	cmp rcx, 0
 12714 0000893A 7413                    	je .L_tc_recycle_frame_done_006b
 12715 0000893C 4D8B11                  	mov r10, qword [r9]
 12716 0000893F 4D8910                  	mov qword [r8], r10
 12717 00008942 4983E808                	sub r8, 8
 12718 00008946 4983E908                	sub r9, 8
 12719 0000894A 48FFC9                  	dec rcx
 12720 0000894D EBE7                    	jmp .L_tc_recycle_frame_loop_006b
 12721                                  .L_tc_recycle_frame_done_006b:
 12722 0000894F 498D6008                	lea rsp, [r8 + 8]
 12723 00008953 5D                      	pop rbp ; restore the old rbp
 12724 00008954 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12725 00008957 EB5A                    	jmp .L_if_end_0036
 12726                                  .L_if_else_0036:
 12727                                  	; preparing a tail-call
 12728 00008959 6A00                    	push 0	; arg count
 12729 0000895B 488B4510                	mov rax, ENV
 12730 0000895F 488B00                  	mov rax, qword [rax + 8 * 0]
 12731 00008962 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12732 00008965 803804                  	cmp byte [rax], T_closure
 12733 00008968 0F859FD00000            	jne L_error_non_closure
 12734 0000896E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12735 00008971 FF7508                  	push qword [rbp + 8 * 1]
 12736                                   ; old ret addr
 12737 00008974 FF7500                  	push qword [rbp]
 12738                                   ; restore the old rbp
 12739 00008977 BB00000000              	mov rbx, 0
 12740 0000897C 4883C303                	add rbx, 3
 12741 00008980 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12742 00008984 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12743 00008989 4C8D4DF8                	lea r9, [rbp - 8]
 12744 0000898D B904000000              	mov rcx, 4
 12745                                  .L_tc_recycle_frame_loop_006c:
 12746 00008992 4883F900                	cmp rcx, 0
 12747 00008996 7413                    	je .L_tc_recycle_frame_done_006c
 12748 00008998 4D8B11                  	mov r10, qword [r9]
 12749 0000899B 4D8910                  	mov qword [r8], r10
 12750 0000899E 4983E808                	sub r8, 8
 12751 000089A2 4983E908                	sub r9, 8
 12752 000089A6 48FFC9                  	dec rcx
 12753 000089A9 EBE7                    	jmp .L_tc_recycle_frame_loop_006c
 12754                                  .L_tc_recycle_frame_done_006c:
 12755 000089AB 498D6008                	lea rsp, [r8 + 8]
 12756 000089AF 5D                      	pop rbp ; restore the old rbp
 12757 000089B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12758                                  .L_if_end_0036:
 12759                                  .L_if_end_0037:
 12760                                  .L_if_end_0038:
 12761 000089B3 E9CB050000              	jmp .L_if_end_0041
 12762                                  .L_if_else_0041:
 12763                                  	; preparing a non-tail-call
 12764 000089B8 488B4520                	mov rax, PARAM(0)	; param a
 12765 000089BC 50                      	push rax
 12766 000089BD 6A01                    	push 1	; arg count
 12767 000089BF 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12768 000089C7 803805                  	cmp byte [rax], T_undefined
 12769 000089CA 0F84B9CF0000            	je L_error_fvar_undefined
 12770 000089D0 803804                  	cmp byte [rax], T_closure
 12771 000089D3 0F8534D00000            	jne L_error_non_closure
 12772 000089D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12773 000089DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12774 000089DF 483D[02000000]          	cmp rax, sob_boolean_false
 12775 000089E5 0F8487020000            	je .L_if_else_0040
 12776                                  	; preparing a non-tail-call
 12777 000089EB 488B4528                	mov rax, PARAM(1)	; param b
 12778 000089EF 50                      	push rax
 12779 000089F0 6A01                    	push 1	; arg count
 12780 000089F2 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 12781 000089FA 803805                  	cmp byte [rax], T_undefined
 12782 000089FD 0F8486CF0000            	je L_error_fvar_undefined
 12783 00008A03 803804                  	cmp byte [rax], T_closure
 12784 00008A06 0F8501D00000            	jne L_error_non_closure
 12785 00008A0C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12786 00008A0F FF5009                  	call SOB_CLOSURE_CODE(rax)
 12787 00008A12 483D[02000000]          	cmp rax, sob_boolean_false
 12788 00008A18 0F8493000000            	je .L_if_else_003b
 12789                                  	; preparing a tail-call
 12790                                  	; preparing a non-tail-call
 12791 00008A1E 488B4528                	mov rax, PARAM(1)	; param b
 12792 00008A22 50                      	push rax
 12793 00008A23 6A01                    	push 1	; arg count
 12794 00008A25 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12795 00008A2D 803805                  	cmp byte [rax], T_undefined
 12796 00008A30 0F8453CF0000            	je L_error_fvar_undefined
 12797 00008A36 803804                  	cmp byte [rax], T_closure
 12798 00008A39 0F85CECF0000            	jne L_error_non_closure
 12799 00008A3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12800 00008A42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12801 00008A45 50                      	push rax
 12802 00008A46 488B4520                	mov rax, PARAM(0)	; param a
 12803 00008A4A 50                      	push rax
 12804 00008A4B 6A02                    	push 2	; arg count
 12805 00008A4D 488B0425[AB0E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12806 00008A55 803805                  	cmp byte [rax], T_undefined
 12807 00008A58 0F842BCF0000            	je L_error_fvar_undefined
 12808 00008A5E 803804                  	cmp byte [rax], T_closure
 12809 00008A61 0F85A6CF0000            	jne L_error_non_closure
 12810 00008A67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12811 00008A6A FF7508                  	push qword [rbp + 8 * 1]
 12812                                   ; old ret addr
 12813 00008A6D FF7500                  	push qword [rbp]
 12814                                   ; restore the old rbp
 12815 00008A70 BB02000000              	mov rbx, 2
 12816 00008A75 4883C303                	add rbx, 3
 12817 00008A79 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12818 00008A7D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12819 00008A82 4C8D4DF8                	lea r9, [rbp - 8]
 12820 00008A86 B906000000              	mov rcx, 6
 12821                                  .L_tc_recycle_frame_loop_006d:
 12822 00008A8B 4883F900                	cmp rcx, 0
 12823 00008A8F 7413                    	je .L_tc_recycle_frame_done_006d
 12824 00008A91 4D8B11                  	mov r10, qword [r9]
 12825 00008A94 4D8910                  	mov qword [r8], r10
 12826 00008A97 4983E808                	sub r8, 8
 12827 00008A9B 4983E908                	sub r9, 8
 12828 00008A9F 48FFC9                  	dec rcx
 12829 00008AA2 EBE7                    	jmp .L_tc_recycle_frame_loop_006d
 12830                                  .L_tc_recycle_frame_done_006d:
 12831 00008AA4 498D6008                	lea rsp, [r8 + 8]
 12832 00008AA8 5D                      	pop rbp ; restore the old rbp
 12833 00008AA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12834 00008AAC E9BC010000              	jmp .L_if_end_003b
 12835                                  .L_if_else_003b:
 12836                                  	; preparing a non-tail-call
 12837 00008AB1 488B4528                	mov rax, PARAM(1)	; param b
 12838 00008AB5 50                      	push rax
 12839 00008AB6 6A01                    	push 1	; arg count
 12840 00008AB8 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12841 00008AC0 803805                  	cmp byte [rax], T_undefined
 12842 00008AC3 0F84C0CE0000            	je L_error_fvar_undefined
 12843 00008AC9 803804                  	cmp byte [rax], T_closure
 12844 00008ACC 0F853BCF0000            	jne L_error_non_closure
 12845 00008AD2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12846 00008AD5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12847 00008AD8 483D[02000000]          	cmp rax, sob_boolean_false
 12848 00008ADE 7470                    	je .L_if_else_003a
 12849                                  	; preparing a tail-call
 12850 00008AE0 488B4528                	mov rax, PARAM(1)	; param b
 12851 00008AE4 50                      	push rax
 12852 00008AE5 488B4520                	mov rax, PARAM(0)	; param a
 12853 00008AE9 50                      	push rax
 12854 00008AEA 6A02                    	push 2	; arg count
 12855 00008AEC 488B0425[AB0E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12856 00008AF4 803805                  	cmp byte [rax], T_undefined
 12857 00008AF7 0F848CCE0000            	je L_error_fvar_undefined
 12858 00008AFD 803804                  	cmp byte [rax], T_closure
 12859 00008B00 0F8507CF0000            	jne L_error_non_closure
 12860 00008B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12861 00008B09 FF7508                  	push qword [rbp + 8 * 1]
 12862                                   ; old ret addr
 12863 00008B0C FF7500                  	push qword [rbp]
 12864                                   ; restore the old rbp
 12865 00008B0F BB02000000              	mov rbx, 2
 12866 00008B14 4883C303                	add rbx, 3
 12867 00008B18 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12868 00008B1C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12869 00008B21 4C8D4DF8                	lea r9, [rbp - 8]
 12870 00008B25 B906000000              	mov rcx, 6
 12871                                  .L_tc_recycle_frame_loop_006e:
 12872 00008B2A 4883F900                	cmp rcx, 0
 12873 00008B2E 7413                    	je .L_tc_recycle_frame_done_006e
 12874 00008B30 4D8B11                  	mov r10, qword [r9]
 12875 00008B33 4D8910                  	mov qword [r8], r10
 12876 00008B36 4983E808                	sub r8, 8
 12877 00008B3A 4983E908                	sub r9, 8
 12878 00008B3E 48FFC9                  	dec rcx
 12879 00008B41 EBE7                    	jmp .L_tc_recycle_frame_loop_006e
 12880                                  .L_tc_recycle_frame_done_006e:
 12881 00008B43 498D6008                	lea rsp, [r8 + 8]
 12882 00008B47 5D                      	pop rbp ; restore the old rbp
 12883 00008B48 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12884 00008B4B E91D010000              	jmp .L_if_end_003a
 12885                                  .L_if_else_003a:
 12886                                  	; preparing a non-tail-call
 12887 00008B50 488B4528                	mov rax, PARAM(1)	; param b
 12888 00008B54 50                      	push rax
 12889 00008B55 6A01                    	push 1	; arg count
 12890 00008B57 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 12891 00008B5F 803805                  	cmp byte [rax], T_undefined
 12892 00008B62 0F8421CE0000            	je L_error_fvar_undefined
 12893 00008B68 803804                  	cmp byte [rax], T_closure
 12894 00008B6B 0F859CCE0000            	jne L_error_non_closure
 12895 00008B71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12896 00008B74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12897 00008B77 483D[02000000]          	cmp rax, sob_boolean_false
 12898 00008B7D 0F8490000000            	je .L_if_else_0039
 12899                                  	; preparing a tail-call
 12900 00008B83 488B4528                	mov rax, PARAM(1)	; param b
 12901 00008B87 50                      	push rax
 12902                                  	; preparing a non-tail-call
 12903 00008B88 488B4520                	mov rax, PARAM(0)	; param a
 12904 00008B8C 50                      	push rax
 12905 00008B8D 6A01                    	push 1	; arg count
 12906 00008B8F 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12907 00008B97 803805                  	cmp byte [rax], T_undefined
 12908 00008B9A 0F84E9CD0000            	je L_error_fvar_undefined
 12909 00008BA0 803804                  	cmp byte [rax], T_closure
 12910 00008BA3 0F8564CE0000            	jne L_error_non_closure
 12911 00008BA9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12912 00008BAC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12913 00008BAF 50                      	push rax
 12914 00008BB0 6A02                    	push 2	; arg count
 12915 00008BB2 488B0425[BC0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12916 00008BBA 803805                  	cmp byte [rax], T_undefined
 12917 00008BBD 0F84C6CD0000            	je L_error_fvar_undefined
 12918 00008BC3 803804                  	cmp byte [rax], T_closure
 12919 00008BC6 0F8541CE0000            	jne L_error_non_closure
 12920 00008BCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 12921 00008BCF FF7508                  	push qword [rbp + 8 * 1]
 12922                                   ; old ret addr
 12923 00008BD2 FF7500                  	push qword [rbp]
 12924                                   ; restore the old rbp
 12925 00008BD5 BB02000000              	mov rbx, 2
 12926 00008BDA 4883C303                	add rbx, 3
 12927 00008BDE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12928 00008BE2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12929 00008BE7 4C8D4DF8                	lea r9, [rbp - 8]
 12930 00008BEB B906000000              	mov rcx, 6
 12931                                  .L_tc_recycle_frame_loop_006f:
 12932 00008BF0 4883F900                	cmp rcx, 0
 12933 00008BF4 7413                    	je .L_tc_recycle_frame_done_006f
 12934 00008BF6 4D8B11                  	mov r10, qword [r9]
 12935 00008BF9 4D8910                  	mov qword [r8], r10
 12936 00008BFC 4983E808                	sub r8, 8
 12937 00008C00 4983E908                	sub r9, 8
 12938 00008C04 48FFC9                  	dec rcx
 12939 00008C07 EBE7                    	jmp .L_tc_recycle_frame_loop_006f
 12940                                  .L_tc_recycle_frame_done_006f:
 12941 00008C09 498D6008                	lea rsp, [r8 + 8]
 12942 00008C0D 5D                      	pop rbp ; restore the old rbp
 12943 00008C0E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12944 00008C11 EB5A                    	jmp .L_if_end_0039
 12945                                  .L_if_else_0039:
 12946                                  	; preparing a tail-call
 12947 00008C13 6A00                    	push 0	; arg count
 12948 00008C15 488B4510                	mov rax, ENV
 12949 00008C19 488B00                  	mov rax, qword [rax + 8 * 0]
 12950 00008C1C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12951 00008C1F 803804                  	cmp byte [rax], T_closure
 12952 00008C22 0F85E5CD0000            	jne L_error_non_closure
 12953 00008C28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12954 00008C2B FF7508                  	push qword [rbp + 8 * 1]
 12955                                   ; old ret addr
 12956 00008C2E FF7500                  	push qword [rbp]
 12957                                   ; restore the old rbp
 12958 00008C31 BB00000000              	mov rbx, 0
 12959 00008C36 4883C303                	add rbx, 3
 12960 00008C3A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 12961 00008C3E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 12962 00008C43 4C8D4DF8                	lea r9, [rbp - 8]
 12963 00008C47 B904000000              	mov rcx, 4
 12964                                  .L_tc_recycle_frame_loop_0070:
 12965 00008C4C 4883F900                	cmp rcx, 0
 12966 00008C50 7413                    	je .L_tc_recycle_frame_done_0070
 12967 00008C52 4D8B11                  	mov r10, qword [r9]
 12968 00008C55 4D8910                  	mov qword [r8], r10
 12969 00008C58 4983E808                	sub r8, 8
 12970 00008C5C 4983E908                	sub r9, 8
 12971 00008C60 48FFC9                  	dec rcx
 12972 00008C63 EBE7                    	jmp .L_tc_recycle_frame_loop_0070
 12973                                  .L_tc_recycle_frame_done_0070:
 12974 00008C65 498D6008                	lea rsp, [r8 + 8]
 12975 00008C69 5D                      	pop rbp ; restore the old rbp
 12976 00008C6A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12977                                  .L_if_end_0039:
 12978                                  .L_if_end_003a:
 12979                                  .L_if_end_003b:
 12980 00008C6D E911030000              	jmp .L_if_end_0040
 12981                                  .L_if_else_0040:
 12982                                  	; preparing a non-tail-call
 12983 00008C72 488B4520                	mov rax, PARAM(0)	; param a
 12984 00008C76 50                      	push rax
 12985 00008C77 6A01                    	push 1	; arg count
 12986 00008C79 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 12987 00008C81 803805                  	cmp byte [rax], T_undefined
 12988 00008C84 0F84FFCC0000            	je L_error_fvar_undefined
 12989 00008C8A 803804                  	cmp byte [rax], T_closure
 12990 00008C8D 0F857ACD0000            	jne L_error_non_closure
 12991 00008C93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12992 00008C96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12993 00008C99 483D[02000000]          	cmp rax, sob_boolean_false
 12994 00008C9F 0F8484020000            	je .L_if_else_003f
 12995                                  	; preparing a non-tail-call
 12996 00008CA5 488B4528                	mov rax, PARAM(1)	; param b
 12997 00008CA9 50                      	push rax
 12998 00008CAA 6A01                    	push 1	; arg count
 12999 00008CAC 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 13000 00008CB4 803805                  	cmp byte [rax], T_undefined
 13001 00008CB7 0F84CCCC0000            	je L_error_fvar_undefined
 13002 00008CBD 803804                  	cmp byte [rax], T_closure
 13003 00008CC0 0F8547CD0000            	jne L_error_non_closure
 13004 00008CC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13005 00008CC9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13006 00008CCC 483D[02000000]          	cmp rax, sob_boolean_false
 13007 00008CD2 0F8493000000            	je .L_if_else_003e
 13008                                  	; preparing a tail-call
 13009                                  	; preparing a non-tail-call
 13010 00008CD8 488B4528                	mov rax, PARAM(1)	; param b
 13011 00008CDC 50                      	push rax
 13012 00008CDD 6A01                    	push 1	; arg count
 13013 00008CDF 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13014 00008CE7 803805                  	cmp byte [rax], T_undefined
 13015 00008CEA 0F8499CC0000            	je L_error_fvar_undefined
 13016 00008CF0 803804                  	cmp byte [rax], T_closure
 13017 00008CF3 0F8514CD0000            	jne L_error_non_closure
 13018 00008CF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13019 00008CFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 13020 00008CFF 50                      	push rax
 13021 00008D00 488B4520                	mov rax, PARAM(0)	; param a
 13022 00008D04 50                      	push rax
 13023 00008D05 6A02                    	push 2	; arg count
 13024 00008D07 488B0425[BC0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13025 00008D0F 803805                  	cmp byte [rax], T_undefined
 13026 00008D12 0F8471CC0000            	je L_error_fvar_undefined
 13027 00008D18 803804                  	cmp byte [rax], T_closure
 13028 00008D1B 0F85ECCC0000            	jne L_error_non_closure
 13029 00008D21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13030 00008D24 FF7508                  	push qword [rbp + 8 * 1]
 13031                                   ; old ret addr
 13032 00008D27 FF7500                  	push qword [rbp]
 13033                                   ; restore the old rbp
 13034 00008D2A BB02000000              	mov rbx, 2
 13035 00008D2F 4883C303                	add rbx, 3
 13036 00008D33 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13037 00008D37 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13038 00008D3C 4C8D4DF8                	lea r9, [rbp - 8]
 13039 00008D40 B906000000              	mov rcx, 6
 13040                                  .L_tc_recycle_frame_loop_0071:
 13041 00008D45 4883F900                	cmp rcx, 0
 13042 00008D49 7413                    	je .L_tc_recycle_frame_done_0071
 13043 00008D4B 4D8B11                  	mov r10, qword [r9]
 13044 00008D4E 4D8910                  	mov qword [r8], r10
 13045 00008D51 4983E808                	sub r8, 8
 13046 00008D55 4983E908                	sub r9, 8
 13047 00008D59 48FFC9                  	dec rcx
 13048 00008D5C EBE7                    	jmp .L_tc_recycle_frame_loop_0071
 13049                                  .L_tc_recycle_frame_done_0071:
 13050 00008D5E 498D6008                	lea rsp, [r8 + 8]
 13051 00008D62 5D                      	pop rbp ; restore the old rbp
 13052 00008D63 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13053 00008D66 E9BC010000              	jmp .L_if_end_003e
 13054                                  .L_if_else_003e:
 13055                                  	; preparing a non-tail-call
 13056 00008D6B 488B4528                	mov rax, PARAM(1)	; param b
 13057 00008D6F 50                      	push rax
 13058 00008D70 6A01                    	push 1	; arg count
 13059 00008D72 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13060 00008D7A 803805                  	cmp byte [rax], T_undefined
 13061 00008D7D 0F8406CC0000            	je L_error_fvar_undefined
 13062 00008D83 803804                  	cmp byte [rax], T_closure
 13063 00008D86 0F8581CC0000            	jne L_error_non_closure
 13064 00008D8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13065 00008D8F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13066 00008D92 483D[02000000]          	cmp rax, sob_boolean_false
 13067 00008D98 0F8493000000            	je .L_if_else_003d
 13068                                  	; preparing a tail-call
 13069                                  	; preparing a non-tail-call
 13070 00008D9E 488B4528                	mov rax, PARAM(1)	; param b
 13071 00008DA2 50                      	push rax
 13072 00008DA3 6A01                    	push 1	; arg count
 13073 00008DA5 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13074 00008DAD 803805                  	cmp byte [rax], T_undefined
 13075 00008DB0 0F84D3CB0000            	je L_error_fvar_undefined
 13076 00008DB6 803804                  	cmp byte [rax], T_closure
 13077 00008DB9 0F854ECC0000            	jne L_error_non_closure
 13078 00008DBF FF7001                  	push SOB_CLOSURE_ENV(rax)
 13079 00008DC2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13080 00008DC5 50                      	push rax
 13081 00008DC6 488B4520                	mov rax, PARAM(0)	; param a
 13082 00008DCA 50                      	push rax
 13083 00008DCB 6A02                    	push 2	; arg count
 13084 00008DCD 488B0425[BC0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13085 00008DD5 803805                  	cmp byte [rax], T_undefined
 13086 00008DD8 0F84ABCB0000            	je L_error_fvar_undefined
 13087 00008DDE 803804                  	cmp byte [rax], T_closure
 13088 00008DE1 0F8526CC0000            	jne L_error_non_closure
 13089 00008DE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13090 00008DEA FF7508                  	push qword [rbp + 8 * 1]
 13091                                   ; old ret addr
 13092 00008DED FF7500                  	push qword [rbp]
 13093                                   ; restore the old rbp
 13094 00008DF0 BB02000000              	mov rbx, 2
 13095 00008DF5 4883C303                	add rbx, 3
 13096 00008DF9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13097 00008DFD 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13098 00008E02 4C8D4DF8                	lea r9, [rbp - 8]
 13099 00008E06 B906000000              	mov rcx, 6
 13100                                  .L_tc_recycle_frame_loop_0072:
 13101 00008E0B 4883F900                	cmp rcx, 0
 13102 00008E0F 7413                    	je .L_tc_recycle_frame_done_0072
 13103 00008E11 4D8B11                  	mov r10, qword [r9]
 13104 00008E14 4D8910                  	mov qword [r8], r10
 13105 00008E17 4983E808                	sub r8, 8
 13106 00008E1B 4983E908                	sub r9, 8
 13107 00008E1F 48FFC9                  	dec rcx
 13108 00008E22 EBE7                    	jmp .L_tc_recycle_frame_loop_0072
 13109                                  .L_tc_recycle_frame_done_0072:
 13110 00008E24 498D6008                	lea rsp, [r8 + 8]
 13111 00008E28 5D                      	pop rbp ; restore the old rbp
 13112 00008E29 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13113 00008E2C E9F6000000              	jmp .L_if_end_003d
 13114                                  .L_if_else_003d:
 13115                                  	; preparing a non-tail-call
 13116 00008E31 488B4528                	mov rax, PARAM(1)	; param b
 13117 00008E35 50                      	push rax
 13118 00008E36 6A01                    	push 1	; arg count
 13119 00008E38 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 13120 00008E40 803805                  	cmp byte [rax], T_undefined
 13121 00008E43 0F8440CB0000            	je L_error_fvar_undefined
 13122 00008E49 803804                  	cmp byte [rax], T_closure
 13123 00008E4C 0F85BBCB0000            	jne L_error_non_closure
 13124 00008E52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13125 00008E55 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13126 00008E58 483D[02000000]          	cmp rax, sob_boolean_false
 13127 00008E5E 746D                    	je .L_if_else_003c
 13128                                  	; preparing a tail-call
 13129 00008E60 488B4528                	mov rax, PARAM(1)	; param b
 13130 00008E64 50                      	push rax
 13131 00008E65 488B4520                	mov rax, PARAM(0)	; param a
 13132 00008E69 50                      	push rax
 13133 00008E6A 6A02                    	push 2	; arg count
 13134 00008E6C 488B0425[BC0E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13135 00008E74 803805                  	cmp byte [rax], T_undefined
 13136 00008E77 0F840CCB0000            	je L_error_fvar_undefined
 13137 00008E7D 803804                  	cmp byte [rax], T_closure
 13138 00008E80 0F8587CB0000            	jne L_error_non_closure
 13139 00008E86 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13140 00008E89 FF7508                  	push qword [rbp + 8 * 1]
 13141                                   ; old ret addr
 13142 00008E8C FF7500                  	push qword [rbp]
 13143                                   ; restore the old rbp
 13144 00008E8F BB02000000              	mov rbx, 2
 13145 00008E94 4883C303                	add rbx, 3
 13146 00008E98 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13147 00008E9C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13148 00008EA1 4C8D4DF8                	lea r9, [rbp - 8]
 13149 00008EA5 B906000000              	mov rcx, 6
 13150                                  .L_tc_recycle_frame_loop_0073:
 13151 00008EAA 4883F900                	cmp rcx, 0
 13152 00008EAE 7413                    	je .L_tc_recycle_frame_done_0073
 13153 00008EB0 4D8B11                  	mov r10, qword [r9]
 13154 00008EB3 4D8910                  	mov qword [r8], r10
 13155 00008EB6 4983E808                	sub r8, 8
 13156 00008EBA 4983E908                	sub r9, 8
 13157 00008EBE 48FFC9                  	dec rcx
 13158 00008EC1 EBE7                    	jmp .L_tc_recycle_frame_loop_0073
 13159                                  .L_tc_recycle_frame_done_0073:
 13160 00008EC3 498D6008                	lea rsp, [r8 + 8]
 13161 00008EC7 5D                      	pop rbp ; restore the old rbp
 13162 00008EC8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13163 00008ECB EB5A                    	jmp .L_if_end_003c
 13164                                  .L_if_else_003c:
 13165                                  	; preparing a tail-call
 13166 00008ECD 6A00                    	push 0	; arg count
 13167 00008ECF 488B4510                	mov rax, ENV
 13168 00008ED3 488B00                  	mov rax, qword [rax + 8 * 0]
 13169 00008ED6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13170 00008ED9 803804                  	cmp byte [rax], T_closure
 13171 00008EDC 0F852BCB0000            	jne L_error_non_closure
 13172 00008EE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13173 00008EE5 FF7508                  	push qword [rbp + 8 * 1]
 13174                                   ; old ret addr
 13175 00008EE8 FF7500                  	push qword [rbp]
 13176                                   ; restore the old rbp
 13177 00008EEB BB00000000              	mov rbx, 0
 13178 00008EF0 4883C303                	add rbx, 3
 13179 00008EF4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13180 00008EF8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13181 00008EFD 4C8D4DF8                	lea r9, [rbp - 8]
 13182 00008F01 B904000000              	mov rcx, 4
 13183                                  .L_tc_recycle_frame_loop_0074:
 13184 00008F06 4883F900                	cmp rcx, 0
 13185 00008F0A 7413                    	je .L_tc_recycle_frame_done_0074
 13186 00008F0C 4D8B11                  	mov r10, qword [r9]
 13187 00008F0F 4D8910                  	mov qword [r8], r10
 13188 00008F12 4983E808                	sub r8, 8
 13189 00008F16 4983E908                	sub r9, 8
 13190 00008F1A 48FFC9                  	dec rcx
 13191 00008F1D EBE7                    	jmp .L_tc_recycle_frame_loop_0074
 13192                                  .L_tc_recycle_frame_done_0074:
 13193 00008F1F 498D6008                	lea rsp, [r8 + 8]
 13194 00008F23 5D                      	pop rbp ; restore the old rbp
 13195 00008F24 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13196                                  .L_if_end_003c:
 13197                                  .L_if_end_003d:
 13198                                  .L_if_end_003e:
 13199 00008F27 EB5A                    	jmp .L_if_end_003f
 13200                                  .L_if_else_003f:
 13201                                  	; preparing a tail-call
 13202 00008F29 6A00                    	push 0	; arg count
 13203 00008F2B 488B4510                	mov rax, ENV
 13204 00008F2F 488B00                  	mov rax, qword [rax + 8 * 0]
 13205 00008F32 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13206 00008F35 803804                  	cmp byte [rax], T_closure
 13207 00008F38 0F85CFCA0000            	jne L_error_non_closure
 13208 00008F3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13209 00008F41 FF7508                  	push qword [rbp + 8 * 1]
 13210                                   ; old ret addr
 13211 00008F44 FF7500                  	push qword [rbp]
 13212                                   ; restore the old rbp
 13213 00008F47 BB00000000              	mov rbx, 0
 13214 00008F4C 4883C303                	add rbx, 3
 13215 00008F50 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13216 00008F54 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13217 00008F59 4C8D4DF8                	lea r9, [rbp - 8]
 13218 00008F5D B904000000              	mov rcx, 4
 13219                                  .L_tc_recycle_frame_loop_0075:
 13220 00008F62 4883F900                	cmp rcx, 0
 13221 00008F66 7413                    	je .L_tc_recycle_frame_done_0075
 13222 00008F68 4D8B11                  	mov r10, qword [r9]
 13223 00008F6B 4D8910                  	mov qword [r8], r10
 13224 00008F6E 4983E808                	sub r8, 8
 13225 00008F72 4983E908                	sub r9, 8
 13226 00008F76 48FFC9                  	dec rcx
 13227 00008F79 EBE7                    	jmp .L_tc_recycle_frame_loop_0075
 13228                                  .L_tc_recycle_frame_done_0075:
 13229 00008F7B 498D6008                	lea rsp, [r8 + 8]
 13230 00008F7F 5D                      	pop rbp ; restore the old rbp
 13231 00008F80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13232                                  .L_if_end_003f:
 13233                                  .L_if_end_0040:
 13234                                  .L_if_end_0041:
 13235 00008F83 C9                      	leave
 13236 00008F84 C22000                  	ret AND_KILL_FRAME(2)
 13237                                  .L_lambda_simple_end_0043:	; new closure is in rax
 13238 00008F87 50                      	push rax
 13239 00008F88 6A01                    	push 1	; arg count
 13240 00008F8A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13241 00008F8F E822CB0000              	call malloc
 13242 00008F94 50                      	push rax
 13243 00008F95 BF08000000              	mov rdi, 8 * 1	; new rib
 13244 00008F9A E817CB0000              	call malloc
 13245 00008F9F 50                      	push rax
 13246 00008FA0 BF10000000              	mov rdi, 8 * 2	; extended env
 13247 00008FA5 E80CCB0000              	call malloc
 13248 00008FAA 488B7D10                	mov rdi, ENV
 13249 00008FAE BE00000000              	mov rsi, 0
 13250 00008FB3 BA01000000              	mov rdx, 1
 13251                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 13252 00008FB8 4883FE01                	cmp rsi, 1
 13253 00008FBC 7410                    	je .L_lambda_simple_env_end_0044
 13254 00008FBE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13255 00008FC2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13256 00008FC6 48FFC6                  	inc rsi
 13257 00008FC9 48FFC2                  	inc rdx
 13258 00008FCC EBEA                    	jmp .L_lambda_simple_env_loop_0044
 13259                                  .L_lambda_simple_env_end_0044:
 13260 00008FCE 5B                      	pop rbx
 13261 00008FCF BE00000000              	mov rsi, 0
 13262                                  .L_lambda_simple_params_loop_0044:	; copy params
 13263 00008FD4 4883FE01                	cmp rsi, 1
 13264 00008FD8 740E                    	je .L_lambda_simple_params_end_0044
 13265 00008FDA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13266 00008FDF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13267 00008FE3 48FFC6                  	inc rsi
 13268 00008FE6 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 13269                                  .L_lambda_simple_params_end_0044:
 13270 00008FE8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13271 00008FEB 4889C3                  	mov rbx, rax
 13272 00008FEE 58                      	pop rax
 13273 00008FEF C60004                  	mov byte [rax], T_closure
 13274 00008FF2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13275 00008FF6 48C74009[03900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 13276 00008FFE E9B9030000              	jmp .L_lambda_simple_end_0044
 13277                                  .L_lambda_simple_code_0044:	; lambda-simple body
 13278 00009003 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13279 00009009 740B                    	je .L_lambda_simple_arity_check_ok_0044
 13280 0000900B FF742410                	push qword [rsp + 8 * 2]
 13281 0000900F 6A01                    	push 1
 13282 00009011 E959CA0000              	jmp L_error_incorrect_arity_simple
 13283                                  .L_lambda_simple_arity_check_ok_0044:
 13284 00009016 C8000000                	enter 0, 0
 13285 0000901A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13286 0000901F E892CA0000              	call malloc
 13287 00009024 50                      	push rax
 13288 00009025 BF08000000              	mov rdi, 8 * 1	; new rib
 13289 0000902A E887CA0000              	call malloc
 13290 0000902F 50                      	push rax
 13291 00009030 BF18000000              	mov rdi, 8 * 3	; extended env
 13292 00009035 E87CCA0000              	call malloc
 13293 0000903A 488B7D10                	mov rdi, ENV
 13294 0000903E 4831F6                  	 xor rsi, rsi
 13295 00009041 4831D2                  	 xor rdx, rdx
 13296 00009044 48FFC2                  	inc rdx
 13297                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 13298 00009047 4883FE02                	cmp rsi, 2
 13299 0000904B 7410                    	je .L_lambda_opt_env_end_000d
 13300 0000904D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13301 00009051 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13302 00009055 48FFC6                  	inc rsi
 13303 00009058 48FFC2                  	inc rdx
 13304 0000905B EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13305                                  .L_lambda_opt_env_end_000d:
 13306 0000905D 5B                      	pop rbx
 13307 0000905E 4831F6                  	xor rsi, rsi
 13308                                  .L_lambda_opt_params_loop_000d:	; copy params
 13309 00009061 4883FE01                	cmp rsi, 1
 13310 00009065 740E                    	je .L_lambda_opt_params_end_000d
 13311 00009067 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13312 0000906C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13313 00009070 48FFC6                  	inc rsi
 13314 00009073 EBEC                    	jmp .L_lambda_opt_params_loop_000d
 13315                                  .L_lambda_opt_params_end_000d:
 13316 00009075 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13317 00009078 4889C3                  	mov rbx, rax
 13318 0000907B 58                      	pop rax
 13319 0000907C C60004                  	mov byte [rax], T_closure
 13320 0000907F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13321 00009083 48C74009[90900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13322 0000908B E928030000              	jmp .L_lambda_opt_end_000d
 13323                                  .L_lambda_opt_code_000d:; lambda opt body
 13324 00009090 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13325 00009096 7409                    	je .L_lambda_opt_arity_check_exact_000d
 13326 00009098 7F57                    	jg .L_lambda_opt_arity_check_more_000d
 13327 0000909A 6A01                    	push 1
 13328 0000909C E9E2C90000              	jmp L_error_incorrect_arity_opt
 13329                                  .L_lambda_opt_arity_check_exact_000d:
 13330 000090A1 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 13331 000090A5 4C894C24F8              	mov qword [rsp -8], r9
 13332 000090AA 4C8B4C2408              	mov r9, qword [rsp +8]
 13333 000090AF 4C890C24                	mov qword [rsp +8 * 0], r9
 13334 000090B3 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 13335 000090B8 4C89C9                  	mov rcx, r9
 13336 000090BB 49FFC1                  	inc r9
 13337 000090BE 4C894C2408              	mov qword [rsp +8], r9
 13338 000090C3 4889E2                  	mov rdx, rsp
 13339 000090C6 4883C218                	add rdx, 24
 13340                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000d:
 13341 000090CA 4883F900                	cmp rcx, 0
 13342 000090CE 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000d
 13343 000090D0 4C8B02                  	mov r8, qword [rdx]
 13344 000090D3 4C8942F8                	mov qword [rdx - 8], r8
 13345 000090D7 4883C208                	add rdx, 8
 13346 000090DB 48FFC9                  	dec rcx
 13347 000090DE EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000d
 13348                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000d:
 13349 000090E0 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 13350 000090E8 4883EC08                	sub rsp, 8
 13351 000090EC E984000000              	jmp .L_lambda_opt_stack_adjusted_000d
 13352                                  .L_lambda_opt_arity_check_more_000d:
 13353 000090F1 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 13354 000090F6 4D89C4                  	mov r12, r8
 13355 000090F9 4C89C1                  	mov rcx, r8
 13356 000090FC 4D8D5002                	lea r10, [r8 + 2] 
 13357 00009100 4883E901                	sub rcx, 1
 13358 00009104 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 13359 00009109 49B9-                   	mov r9, sob_nil
 13359 0000910B [0100000000000000] 
 13360                                  .L_lambda_opt_create_list_of_opt_params_000d:
 13361 00009113 4883F900                	cmp rcx, 0
 13362 00009117 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000d
 13363 00009119 BF11000000              	mov rdi, 17
 13364 0000911E E893C90000              	call malloc
 13365 00009123 C60021                  	mov byte [rax], T_pair
 13366 00009126 498B1B                  	mov rbx, qword [r11]
 13367 00009129 48895801                	mov qword [rax +1], rbx
 13368 0000912D 4C894809                	mov qword [rax + 1 + 8], r9
 13369 00009131 4989C1                  	mov r9, rax
 13370 00009134 48FFC9                  	dec rcx
 13371 00009137 4983EB08                	sub r11, 8
 13372 0000913B EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000d
 13373                                  .L_lambda_opt_create_list_of_opt_params_end_000d:
 13374 0000913D 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 13375 00009142 4D8908                  	mov qword [r8], r9
 13376 00009145 4E8D14D500000000        	lea r10, [8 * r10]
 13377 0000914D 4901E2                  	add r10, rsp
 13378 00009150 B905000000              	mov rcx, 4 + 1
 13379                                  .L_lambda_opt_stack_shrink_loop_000d:
 13380 00009155 4883F900                	cmp rcx, 0
 13381 00009159 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000d
 13382 0000915B 4D8B18                  	mov r11, qword [r8]
 13383 0000915E 4D891A                  	mov qword [r10], r11
 13384 00009161 4983E808                	sub r8, 8
 13385 00009165 4983EA08                	sub r10, 8
 13386 00009169 48FFC9                  	dec rcx
 13387 0000916C EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13388                                  .L_lambda_opt_stack_shrink_loop_exit_000d:
 13389 0000916E 4983C208                	add r10, 8
 13390 00009172 4C89D4                  	mov rsp, r10
 13391                                  .L_lambda_opt_stack_adjusted_000d:;continue with the code, the stack is ok
 13392 00009175 48C744241002000000      	mov qword [rsp + 8*2], 2
 13393 0000917E C8000000                	enter 0, 0
 13394                                  	; preparing a non-tail-call
 13395 00009182 488B4528                	mov rax, PARAM(1)	; param s
 13396 00009186 50                      	push rax
 13397 00009187 6A01                    	push 1	; arg count
 13398 00009189 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 13399 00009191 803805                  	cmp byte [rax], T_undefined
 13400 00009194 0F84EFC70000            	je L_error_fvar_undefined
 13401 0000919A 803804                  	cmp byte [rax], T_closure
 13402 0000919D 0F856AC80000            	jne L_error_non_closure
 13403 000091A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13404 000091A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13405 000091A9 483D[02000000]          	cmp rax, sob_boolean_false
 13406 000091AF 746F                    	je .L_if_else_0042
 13407                                  	; preparing a tail-call
 13408 000091B1 488B4520                	mov rax, PARAM(0)	; param a
 13409 000091B5 50                      	push rax
 13410 000091B6 48B8-                   	mov rax, L_constants + 2270
 13410 000091B8 [DE08000000000000] 
 13411 000091C0 50                      	push rax
 13412 000091C1 6A02                    	push 2	; arg count
 13413 000091C3 488B4510                	mov rax, ENV
 13414 000091C7 488B00                  	mov rax, qword [rax + 8 * 0]
 13415 000091CA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13416 000091CD 803804                  	cmp byte [rax], T_closure
 13417 000091D0 0F8537C80000            	jne L_error_non_closure
 13418 000091D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13419 000091D9 FF7508                  	push qword [rbp + 8 * 1]
 13420                                   ; old ret addr
 13421 000091DC FF7500                  	push qword [rbp]
 13422                                   ; restore the old rbp
 13423 000091DF BB02000000              	mov rbx, 2
 13424 000091E4 4883C303                	add rbx, 3
 13425 000091E8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13426 000091EC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13427 000091F1 4C8D4DF8                	lea r9, [rbp - 8]
 13428 000091F5 B906000000              	mov rcx, 6
 13429                                  .L_tc_recycle_frame_loop_0076:
 13430 000091FA 4883F900                	cmp rcx, 0
 13431 000091FE 7413                    	je .L_tc_recycle_frame_done_0076
 13432 00009200 4D8B11                  	mov r10, qword [r9]
 13433 00009203 4D8910                  	mov qword [r8], r10
 13434 00009206 4983E808                	sub r8, 8
 13435 0000920A 4983E908                	sub r9, 8
 13436 0000920E 48FFC9                  	dec rcx
 13437 00009211 EBE7                    	jmp .L_tc_recycle_frame_loop_0076
 13438                                  .L_tc_recycle_frame_done_0076:
 13439 00009213 498D6008                	lea rsp, [r8 + 8]
 13440 00009217 5D                      	pop rbp ; restore the old rbp
 13441 00009218 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13442 0000921B E994010000              	jmp .L_if_end_0042
 13443                                  .L_if_else_0042:
 13444                                  	; preparing a tail-call
 13445                                  	; preparing a non-tail-call
 13446 00009220 488B4528                	mov rax, PARAM(1)	; param s
 13447 00009224 50                      	push rax
 13448 00009225 48B8-                   	mov rax, L_constants + 2270
 13448 00009227 [DE08000000000000] 
 13449 0000922F 50                      	push rax
 13450 00009230 488B0425[CE0D0000]      	mov rax, qword [free_var_0]	; free var *
 13451 00009238 803805                  	cmp byte [rax], T_undefined
 13452 0000923B 0F8448C70000            	je L_error_fvar_undefined
 13453 00009241 50                      	push rax
 13454 00009242 6A03                    	push 3	; arg count
 13455 00009244 488B0425[73130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13456 0000924C 803805                  	cmp byte [rax], T_undefined
 13457 0000924F 0F8434C70000            	je L_error_fvar_undefined
 13458 00009255 803804                  	cmp byte [rax], T_closure
 13459 00009258 0F85AFC70000            	jne L_error_non_closure
 13460 0000925E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13461 00009261 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13462 00009264 50                      	push rax
 13463 00009265 6A01                    	push 1	; arg count
 13464 00009267 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13465 0000926C E845C80000              	call malloc
 13466 00009271 50                      	push rax
 13467 00009272 BF10000000              	mov rdi, 8 * 2	; new rib
 13468 00009277 E83AC80000              	call malloc
 13469 0000927C 50                      	push rax
 13470 0000927D BF20000000              	mov rdi, 8 * 4	; extended env
 13471 00009282 E82FC80000              	call malloc
 13472 00009287 488B7D10                	mov rdi, ENV
 13473 0000928B BE00000000              	mov rsi, 0
 13474 00009290 BA01000000              	mov rdx, 1
 13475                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 13476 00009295 4883FE03                	cmp rsi, 3
 13477 00009299 7410                    	je .L_lambda_simple_env_end_0045
 13478 0000929B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13479 0000929F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13480 000092A3 48FFC6                  	inc rsi
 13481 000092A6 48FFC2                  	inc rdx
 13482 000092A9 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 13483                                  .L_lambda_simple_env_end_0045:
 13484 000092AB 5B                      	pop rbx
 13485 000092AC BE00000000              	mov rsi, 0
 13486                                  .L_lambda_simple_params_loop_0045:	; copy params
 13487 000092B1 4883FE02                	cmp rsi, 2
 13488 000092B5 740E                    	je .L_lambda_simple_params_end_0045
 13489 000092B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13490 000092BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13491 000092C0 48FFC6                  	inc rsi
 13492 000092C3 EBEC                    	jmp .L_lambda_simple_params_loop_0045
 13493                                  .L_lambda_simple_params_end_0045:
 13494 000092C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13495 000092C8 4889C3                  	mov rbx, rax
 13496 000092CB 58                      	pop rax
 13497 000092CC C60004                  	mov byte [rax], T_closure
 13498 000092CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13499 000092D3 48C74009[E0920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 13500 000092DB E986000000              	jmp .L_lambda_simple_end_0045
 13501                                  .L_lambda_simple_code_0045:	; lambda-simple body
 13502 000092E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13503 000092E6 740B                    	je .L_lambda_simple_arity_check_ok_0045
 13504 000092E8 FF742410                	push qword [rsp + 8 * 2]
 13505 000092EC 6A01                    	push 1
 13506 000092EE E97CC70000              	jmp L_error_incorrect_arity_simple
 13507                                  .L_lambda_simple_arity_check_ok_0045:
 13508 000092F3 C8000000                	enter 0, 0
 13509                                  	; preparing a tail-call
 13510 000092F7 488B4520                	mov rax, PARAM(0)	; param b
 13511 000092FB 50                      	push rax
 13512 000092FC 488B4510                	mov rax, ENV
 13513 00009300 488B00                  	mov rax, qword [rax + 8 * 0]
 13514 00009303 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13515 00009306 50                      	push rax
 13516 00009307 6A02                    	push 2	; arg count
 13517 00009309 488B4510                	mov rax, ENV
 13518 0000930D 488B4008                	mov rax, qword [rax + 8 * 1]
 13519 00009311 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13520 00009314 803804                  	cmp byte [rax], T_closure
 13521 00009317 0F85F0C60000            	jne L_error_non_closure
 13522 0000931D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13523 00009320 FF7508                  	push qword [rbp + 8 * 1]
 13524                                   ; old ret addr
 13525 00009323 FF7500                  	push qword [rbp]
 13526                                   ; restore the old rbp
 13527 00009326 BB02000000              	mov rbx, 2
 13528 0000932B 4883C303                	add rbx, 3
 13529 0000932F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13530 00009333 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13531 00009338 4C8D4DF8                	lea r9, [rbp - 8]
 13532 0000933C B906000000              	mov rcx, 6
 13533                                  .L_tc_recycle_frame_loop_0078:
 13534 00009341 4883F900                	cmp rcx, 0
 13535 00009345 7413                    	je .L_tc_recycle_frame_done_0078
 13536 00009347 4D8B11                  	mov r10, qword [r9]
 13537 0000934A 4D8910                  	mov qword [r8], r10
 13538 0000934D 4983E808                	sub r8, 8
 13539 00009351 4983E908                	sub r9, 8
 13540 00009355 48FFC9                  	dec rcx
 13541 00009358 EBE7                    	jmp .L_tc_recycle_frame_loop_0078
 13542                                  .L_tc_recycle_frame_done_0078:
 13543 0000935A 498D6008                	lea rsp, [r8 + 8]
 13544 0000935E 5D                      	pop rbp ; restore the old rbp
 13545 0000935F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13546 00009362 C9                      	leave
 13547 00009363 C21800                  	ret AND_KILL_FRAME(1)
 13548                                  .L_lambda_simple_end_0045:	; new closure is in rax
 13549 00009366 803804                  	cmp byte [rax], T_closure
 13550 00009369 0F859EC60000            	jne L_error_non_closure
 13551 0000936F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13552 00009372 FF7508                  	push qword [rbp + 8 * 1]
 13553                                   ; old ret addr
 13554 00009375 FF7500                  	push qword [rbp]
 13555                                   ; restore the old rbp
 13556 00009378 BB01000000              	mov rbx, 1
 13557 0000937D 4883C303                	add rbx, 3
 13558 00009381 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13559 00009385 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13560 0000938A 4C8D4DF8                	lea r9, [rbp - 8]
 13561 0000938E B905000000              	mov rcx, 5
 13562                                  .L_tc_recycle_frame_loop_0077:
 13563 00009393 4883F900                	cmp rcx, 0
 13564 00009397 7413                    	je .L_tc_recycle_frame_done_0077
 13565 00009399 4D8B11                  	mov r10, qword [r9]
 13566 0000939C 4D8910                  	mov qword [r8], r10
 13567 0000939F 4983E808                	sub r8, 8
 13568 000093A3 4983E908                	sub r9, 8
 13569 000093A7 48FFC9                  	dec rcx
 13570 000093AA EBE7                    	jmp .L_tc_recycle_frame_loop_0077
 13571                                  .L_tc_recycle_frame_done_0077:
 13572 000093AC 498D6008                	lea rsp, [r8 + 8]
 13573 000093B0 5D                      	pop rbp ; restore the old rbp
 13574 000093B1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13575                                  .L_if_end_0042:
 13576 000093B4 C9                      	leave
 13577 000093B5 C22000                  	ret 8 * (2 + 2)
 13578                                  .L_lambda_opt_end_000d:	; new closure is in rax
 13579 000093B8 C9                      	leave
 13580 000093B9 C21800                  	ret AND_KILL_FRAME(1)
 13581                                  .L_lambda_simple_end_0044:	; new closure is in rax
 13582 000093BC 803804                  	cmp byte [rax], T_closure
 13583 000093BF 0F8548C60000            	jne L_error_non_closure
 13584 000093C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13585 000093C8 FF7508                  	push qword [rbp + 8 * 1]
 13586                                   ; old ret addr
 13587 000093CB FF7500                  	push qword [rbp]
 13588                                   ; restore the old rbp
 13589 000093CE BB01000000              	mov rbx, 1
 13590 000093D3 4883C303                	add rbx, 3
 13591 000093D7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13592 000093DB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13593 000093E0 4C8D4DF8                	lea r9, [rbp - 8]
 13594 000093E4 B905000000              	mov rcx, 5
 13595                                  .L_tc_recycle_frame_loop_0068:
 13596 000093E9 4883F900                	cmp rcx, 0
 13597 000093ED 7413                    	je .L_tc_recycle_frame_done_0068
 13598 000093EF 4D8B11                  	mov r10, qword [r9]
 13599 000093F2 4D8910                  	mov qword [r8], r10
 13600 000093F5 4983E808                	sub r8, 8
 13601 000093F9 4983E908                	sub r9, 8
 13602 000093FD 48FFC9                  	dec rcx
 13603 00009400 EBE7                    	jmp .L_tc_recycle_frame_loop_0068
 13604                                  .L_tc_recycle_frame_done_0068:
 13605 00009402 498D6008                	lea rsp, [r8 + 8]
 13606 00009406 5D                      	pop rbp ; restore the old rbp
 13607 00009407 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13608 0000940A C9                      	leave
 13609 0000940B C21800                  	ret AND_KILL_FRAME(1)
 13610                                  .L_lambda_simple_end_0042:	; new closure is in rax
 13611 0000940E 803804                  	cmp byte [rax], T_closure
 13612 00009411 0F85F6C50000            	jne L_error_non_closure
 13613 00009417 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13614 0000941A FF5009                  	call SOB_CLOSURE_CODE(rax)
 13615 0000941D 48890425[010E0000]      	mov qword [free_var_3], rax
 13616 00009425 48B8-                   	mov rax, sob_void
 13616 00009427 [0000000000000000] 
 13617                                  
 13618 0000942F 4889C7                  	mov rdi, rax
 13619 00009432 E8D4C80000              	call print_sexpr_if_not_void
 13620 00009437 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13621 0000943C E875C60000              	call malloc
 13622 00009441 50                      	push rax
 13623 00009442 BF00000000              	mov rdi, 8 * 0	; new rib
 13624 00009447 E86AC60000              	call malloc
 13625 0000944C 50                      	push rax
 13626 0000944D BF08000000              	mov rdi, 8 * 1	; extended env
 13627 00009452 E85FC60000              	call malloc
 13628 00009457 488B7D10                	mov rdi, ENV
 13629 0000945B BE00000000              	mov rsi, 0
 13630 00009460 BA01000000              	mov rdx, 1
 13631                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 13632 00009465 4883FE00                	cmp rsi, 0
 13633 00009469 7410                    	je .L_lambda_simple_env_end_0046
 13634 0000946B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13635 0000946F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13636 00009473 48FFC6                  	inc rsi
 13637 00009476 48FFC2                  	inc rdx
 13638 00009479 EBEA                    	jmp .L_lambda_simple_env_loop_0046
 13639                                  .L_lambda_simple_env_end_0046:
 13640 0000947B 5B                      	pop rbx
 13641 0000947C BE00000000              	mov rsi, 0
 13642                                  .L_lambda_simple_params_loop_0046:	; copy params
 13643 00009481 4883FE00                	cmp rsi, 0
 13644 00009485 740E                    	je .L_lambda_simple_params_end_0046
 13645 00009487 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13646 0000948C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13647 00009490 48FFC6                  	inc rsi
 13648 00009493 EBEC                    	jmp .L_lambda_simple_params_loop_0046
 13649                                  .L_lambda_simple_params_end_0046:
 13650 00009495 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13651 00009498 4889C3                  	mov rbx, rax
 13652 0000949B 58                      	pop rax
 13653 0000949C C60004                  	mov byte [rax], T_closure
 13654 0000949F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13655 000094A3 48C74009[B0940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 13656 000094AB E915010000              	jmp .L_lambda_simple_end_0046
 13657                                  .L_lambda_simple_code_0046:	; lambda-simple body
 13658 000094B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13659 000094B6 740B                    	je .L_lambda_simple_arity_check_ok_0046
 13660 000094B8 FF742410                	push qword [rsp + 8 * 2]
 13661 000094BC 6A01                    	push 1
 13662 000094BE E9ACC50000              	jmp L_error_incorrect_arity_simple
 13663                                  .L_lambda_simple_arity_check_ok_0046:
 13664 000094C3 C8000000                	enter 0, 0
 13665                                  	; preparing a non-tail-call
 13666 000094C7 488B4520                	mov rax, PARAM(0)	; param n
 13667 000094CB 50                      	push rax
 13668 000094CC 6A01                    	push 1	; arg count
 13669 000094CE 488B0425[D5170000]      	mov rax, qword [free_var_151]	; free var zero?
 13670 000094D6 803805                  	cmp byte [rax], T_undefined
 13671 000094D9 0F84AAC40000            	je L_error_fvar_undefined
 13672 000094DF 803804                  	cmp byte [rax], T_closure
 13673 000094E2 0F8525C50000            	jne L_error_non_closure
 13674 000094E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13675 000094EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13676 000094EE 483D[02000000]          	cmp rax, sob_boolean_false
 13677 000094F4 740F                    	je .L_if_else_0043
 13678 000094F6 48B8-                   	mov rax, L_constants + 2270
 13678 000094F8 [DE08000000000000] 
 13679 00009500 E9BC000000              	jmp .L_if_end_0043
 13680                                  .L_if_else_0043:
 13681                                  	; preparing a tail-call
 13682                                  	; preparing a non-tail-call
 13683                                  	; preparing a non-tail-call
 13684 00009505 48B8-                   	mov rax, L_constants + 2270
 13684 00009507 [DE08000000000000] 
 13685 0000950F 50                      	push rax
 13686 00009510 488B4520                	mov rax, PARAM(0)	; param n
 13687 00009514 50                      	push rax
 13688 00009515 6A02                    	push 2	; arg count
 13689 00009517 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 13690 0000951F 803805                  	cmp byte [rax], T_undefined
 13691 00009522 0F8461C40000            	je L_error_fvar_undefined
 13692 00009528 803804                  	cmp byte [rax], T_closure
 13693 0000952B 0F85DCC40000            	jne L_error_non_closure
 13694 00009531 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13695 00009534 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13696 00009537 50                      	push rax
 13697 00009538 6A01                    	push 1	; arg count
 13698 0000953A 488B0425[62130000]      	mov rax, qword [free_var_84]	; free var fact
 13699 00009542 803805                  	cmp byte [rax], T_undefined
 13700 00009545 0F843EC40000            	je L_error_fvar_undefined
 13701 0000954B 803804                  	cmp byte [rax], T_closure
 13702 0000954E 0F85B9C40000            	jne L_error_non_closure
 13703 00009554 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13704 00009557 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13705 0000955A 50                      	push rax
 13706 0000955B 488B4520                	mov rax, PARAM(0)	; param n
 13707 0000955F 50                      	push rax
 13708 00009560 6A02                    	push 2	; arg count
 13709 00009562 488B0425[CE0D0000]      	mov rax, qword [free_var_0]	; free var *
 13710 0000956A 803805                  	cmp byte [rax], T_undefined
 13711 0000956D 0F8416C40000            	je L_error_fvar_undefined
 13712 00009573 803804                  	cmp byte [rax], T_closure
 13713 00009576 0F8591C40000            	jne L_error_non_closure
 13714 0000957C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13715 0000957F FF7508                  	push qword [rbp + 8 * 1]
 13716                                   ; old ret addr
 13717 00009582 FF7500                  	push qword [rbp]
 13718                                   ; restore the old rbp
 13719 00009585 BB02000000              	mov rbx, 2
 13720 0000958A 4883C303                	add rbx, 3
 13721 0000958E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13722 00009592 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13723 00009597 4C8D4DF8                	lea r9, [rbp - 8]
 13724 0000959B B906000000              	mov rcx, 6
 13725                                  .L_tc_recycle_frame_loop_0079:
 13726 000095A0 4883F900                	cmp rcx, 0
 13727 000095A4 7413                    	je .L_tc_recycle_frame_done_0079
 13728 000095A6 4D8B11                  	mov r10, qword [r9]
 13729 000095A9 4D8910                  	mov qword [r8], r10
 13730 000095AC 4983E808                	sub r8, 8
 13731 000095B0 4983E908                	sub r9, 8
 13732 000095B4 48FFC9                  	dec rcx
 13733 000095B7 EBE7                    	jmp .L_tc_recycle_frame_loop_0079
 13734                                  .L_tc_recycle_frame_done_0079:
 13735 000095B9 498D6008                	lea rsp, [r8 + 8]
 13736 000095BD 5D                      	pop rbp ; restore the old rbp
 13737 000095BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13738                                  .L_if_end_0043:
 13739 000095C1 C9                      	leave
 13740 000095C2 C21800                  	ret AND_KILL_FRAME(1)
 13741                                  .L_lambda_simple_end_0046:	; new closure is in rax
 13742 000095C5 48890425[62130000]      	mov qword [free_var_84], rax
 13743 000095CD 48B8-                   	mov rax, sob_void
 13743 000095CF [0000000000000000] 
 13744                                  
 13745 000095D7 4889C7                  	mov rdi, rax
 13746 000095DA E82CC70000              	call print_sexpr_if_not_void
 13747 000095DF 48B8-                   	mov rax, L_constants + 0
 13747 000095E1 [0000000000000000] 
 13748 000095E9 48890425[120E0000]      	mov qword [free_var_4], rax
 13749 000095F1 48B8-                   	mov rax, sob_void
 13749 000095F3 [0000000000000000] 
 13750                                  
 13751 000095FB 4889C7                  	mov rdi, rax
 13752 000095FE E808C70000              	call print_sexpr_if_not_void
 13753 00009603 48B8-                   	mov rax, L_constants + 0
 13753 00009605 [0000000000000000] 
 13754 0000960D 48890425[230E0000]      	mov qword [free_var_5], rax
 13755 00009615 48B8-                   	mov rax, sob_void
 13755 00009617 [0000000000000000] 
 13756                                  
 13757 0000961F 4889C7                  	mov rdi, rax
 13758 00009622 E8E4C60000              	call print_sexpr_if_not_void
 13759 00009627 48B8-                   	mov rax, L_constants + 0
 13759 00009629 [0000000000000000] 
 13760 00009631 48890425[450E0000]      	mov qword [free_var_7], rax
 13761 00009639 48B8-                   	mov rax, sob_void
 13761 0000963B [0000000000000000] 
 13762                                  
 13763 00009643 4889C7                  	mov rdi, rax
 13764 00009646 E8C0C60000              	call print_sexpr_if_not_void
 13765 0000964B 48B8-                   	mov rax, L_constants + 0
 13765 0000964D [0000000000000000] 
 13766 00009655 48890425[560E0000]      	mov qword [free_var_8], rax
 13767 0000965D 48B8-                   	mov rax, sob_void
 13767 0000965F [0000000000000000] 
 13768                                  
 13769 00009667 4889C7                  	mov rdi, rax
 13770 0000966A E89CC60000              	call print_sexpr_if_not_void
 13771 0000966F 48B8-                   	mov rax, L_constants + 0
 13771 00009671 [0000000000000000] 
 13772 00009679 48890425[340E0000]      	mov qword [free_var_6], rax
 13773 00009681 48B8-                   	mov rax, sob_void
 13773 00009683 [0000000000000000] 
 13774                                  
 13775 0000968B 4889C7                  	mov rdi, rax
 13776 0000968E E878C60000              	call print_sexpr_if_not_void
 13777                                  	; preparing a non-tail-call
 13778 00009693 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13779 00009698 E819C40000              	call malloc
 13780 0000969D 50                      	push rax
 13781 0000969E BF00000000              	mov rdi, 8 * 0	; new rib
 13782 000096A3 E80EC40000              	call malloc
 13783 000096A8 50                      	push rax
 13784 000096A9 BF08000000              	mov rdi, 8 * 1	; extended env
 13785 000096AE E803C40000              	call malloc
 13786 000096B3 488B7D10                	mov rdi, ENV
 13787 000096B7 BE00000000              	mov rsi, 0
 13788 000096BC BA01000000              	mov rdx, 1
 13789                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 13790 000096C1 4883FE00                	cmp rsi, 0
 13791 000096C5 7410                    	je .L_lambda_simple_env_end_0047
 13792 000096C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13793 000096CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13794 000096CF 48FFC6                  	inc rsi
 13795 000096D2 48FFC2                  	inc rdx
 13796 000096D5 EBEA                    	jmp .L_lambda_simple_env_loop_0047
 13797                                  .L_lambda_simple_env_end_0047:
 13798 000096D7 5B                      	pop rbx
 13799 000096D8 BE00000000              	mov rsi, 0
 13800                                  .L_lambda_simple_params_loop_0047:	; copy params
 13801 000096DD 4883FE00                	cmp rsi, 0
 13802 000096E1 740E                    	je .L_lambda_simple_params_end_0047
 13803 000096E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13804 000096E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13805 000096EC 48FFC6                  	inc rsi
 13806 000096EF EBEC                    	jmp .L_lambda_simple_params_loop_0047
 13807                                  .L_lambda_simple_params_end_0047:
 13808 000096F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13809 000096F4 4889C3                  	mov rbx, rax
 13810 000096F7 58                      	pop rax
 13811 000096F8 C60004                  	mov byte [rax], T_closure
 13812 000096FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13813 000096FF 48C74009[0C970000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 13814 00009707 E992000000              	jmp .L_lambda_simple_end_0047
 13815                                  .L_lambda_simple_code_0047:	; lambda-simple body
 13816 0000970C 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13817 00009712 740B                    	je .L_lambda_simple_arity_check_ok_0047
 13818 00009714 FF742410                	push qword [rsp + 8 * 2]
 13819 00009718 6A00                    	push 0
 13820 0000971A E950C30000              	jmp L_error_incorrect_arity_simple
 13821                                  .L_lambda_simple_arity_check_ok_0047:
 13822 0000971F C8000000                	enter 0, 0
 13823                                  	; preparing a tail-call
 13824 00009723 48B8-                   	mov rax, L_constants + 2408
 13824 00009725 [6809000000000000] 
 13825 0000972D 50                      	push rax
 13826 0000972E 48B8-                   	mov rax, L_constants + 2399
 13826 00009730 [5F09000000000000] 
 13827 00009738 50                      	push rax
 13828 00009739 6A02                    	push 2	; arg count
 13829 0000973B 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
 13830 00009743 803805                  	cmp byte [rax], T_undefined
 13831 00009746 0F843DC20000            	je L_error_fvar_undefined
 13832 0000974C 803804                  	cmp byte [rax], T_closure
 13833 0000974F 0F85B8C20000            	jne L_error_non_closure
 13834 00009755 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13835 00009758 FF7508                  	push qword [rbp + 8 * 1]
 13836                                   ; old ret addr
 13837 0000975B FF7500                  	push qword [rbp]
 13838                                   ; restore the old rbp
 13839 0000975E BB02000000              	mov rbx, 2
 13840 00009763 4883C303                	add rbx, 3
 13841 00009767 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 13842 0000976B 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 13843 00009770 4C8D4DF8                	lea r9, [rbp - 8]
 13844 00009774 B906000000              	mov rcx, 6
 13845                                  .L_tc_recycle_frame_loop_007a:
 13846 00009779 4883F900                	cmp rcx, 0
 13847 0000977D 7413                    	je .L_tc_recycle_frame_done_007a
 13848 0000977F 4D8B11                  	mov r10, qword [r9]
 13849 00009782 4D8910                  	mov qword [r8], r10
 13850 00009785 4983E808                	sub r8, 8
 13851 00009789 4983E908                	sub r9, 8
 13852 0000978D 48FFC9                  	dec rcx
 13853 00009790 EBE7                    	jmp .L_tc_recycle_frame_loop_007a
 13854                                  .L_tc_recycle_frame_done_007a:
 13855 00009792 498D6008                	lea rsp, [r8 + 8]
 13856 00009796 5D                      	pop rbp ; restore the old rbp
 13857 00009797 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13858 0000979A C9                      	leave
 13859 0000979B C21000                  	ret AND_KILL_FRAME(0)
 13860                                  .L_lambda_simple_end_0047:	; new closure is in rax
 13861 0000979E 50                      	push rax
 13862 0000979F 6A01                    	push 1	; arg count
 13863 000097A1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13864 000097A6 E80BC30000              	call malloc
 13865 000097AB 50                      	push rax
 13866 000097AC BF00000000              	mov rdi, 8 * 0	; new rib
 13867 000097B1 E800C30000              	call malloc
 13868 000097B6 50                      	push rax
 13869 000097B7 BF08000000              	mov rdi, 8 * 1	; extended env
 13870 000097BC E8F5C20000              	call malloc
 13871 000097C1 488B7D10                	mov rdi, ENV
 13872 000097C5 BE00000000              	mov rsi, 0
 13873 000097CA BA01000000              	mov rdx, 1
 13874                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 13875 000097CF 4883FE00                	cmp rsi, 0
 13876 000097D3 7410                    	je .L_lambda_simple_env_end_0048
 13877 000097D5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13878 000097D9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13879 000097DD 48FFC6                  	inc rsi
 13880 000097E0 48FFC2                  	inc rdx
 13881 000097E3 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 13882                                  .L_lambda_simple_env_end_0048:
 13883 000097E5 5B                      	pop rbx
 13884 000097E6 BE00000000              	mov rsi, 0
 13885                                  .L_lambda_simple_params_loop_0048:	; copy params
 13886 000097EB 4883FE00                	cmp rsi, 0
 13887 000097EF 740E                    	je .L_lambda_simple_params_end_0048
 13888 000097F1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13889 000097F6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13890 000097FA 48FFC6                  	inc rsi
 13891 000097FD EBEC                    	jmp .L_lambda_simple_params_loop_0048
 13892                                  .L_lambda_simple_params_end_0048:
 13893 000097FF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13894 00009802 4889C3                  	mov rbx, rax
 13895 00009805 58                      	pop rax
 13896 00009806 C60004                  	mov byte [rax], T_closure
 13897 00009809 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13898 0000980D 48C74009[1A980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 13899 00009815 E9FD190000              	jmp .L_lambda_simple_end_0048
 13900                                  .L_lambda_simple_code_0048:	; lambda-simple body
 13901 0000981A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13902 00009820 740B                    	je .L_lambda_simple_arity_check_ok_0048
 13903 00009822 FF742410                	push qword [rsp + 8 * 2]
 13904 00009826 6A01                    	push 1
 13905 00009828 E942C20000              	jmp L_error_incorrect_arity_simple
 13906                                  .L_lambda_simple_arity_check_ok_0048:
 13907 0000982D C8000000                	enter 0, 0
 13908                                  	; preparing a tail-call
 13909 00009831 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13910 00009836 E87BC20000              	call malloc
 13911 0000983B 50                      	push rax
 13912 0000983C BF08000000              	mov rdi, 8 * 1	; new rib
 13913 00009841 E870C20000              	call malloc
 13914 00009846 50                      	push rax
 13915 00009847 BF10000000              	mov rdi, 8 * 2	; extended env
 13916 0000984C E865C20000              	call malloc
 13917 00009851 488B7D10                	mov rdi, ENV
 13918 00009855 BE00000000              	mov rsi, 0
 13919 0000985A BA01000000              	mov rdx, 1
 13920                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13921 0000985F 4883FE01                	cmp rsi, 1
 13922 00009863 7410                    	je .L_lambda_simple_env_end_0049
 13923 00009865 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13924 00009869 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13925 0000986D 48FFC6                  	inc rsi
 13926 00009870 48FFC2                  	inc rdx
 13927 00009873 EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13928                                  .L_lambda_simple_env_end_0049:
 13929 00009875 5B                      	pop rbx
 13930 00009876 BE00000000              	mov rsi, 0
 13931                                  .L_lambda_simple_params_loop_0049:	; copy params
 13932 0000987B 4883FE01                	cmp rsi, 1
 13933 0000987F 740E                    	je .L_lambda_simple_params_end_0049
 13934 00009881 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13935 00009886 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13936 0000988A 48FFC6                  	inc rsi
 13937 0000988D EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13938                                  .L_lambda_simple_params_end_0049:
 13939 0000988F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13940 00009892 4889C3                  	mov rbx, rax
 13941 00009895 58                      	pop rax
 13942 00009896 C60004                  	mov byte [rax], T_closure
 13943 00009899 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13944 0000989D 48C74009[AA980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13945 000098A5 E901090000              	jmp .L_lambda_simple_end_0049
 13946                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13947 000098AA 48837C241003            	cmp qword [rsp + 8 * 2], 3
 13948 000098B0 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13949 000098B2 FF742410                	push qword [rsp + 8 * 2]
 13950 000098B6 6A03                    	push 3
 13951 000098B8 E9B2C10000              	jmp L_error_incorrect_arity_simple
 13952                                  .L_lambda_simple_arity_check_ok_0049:
 13953 000098BD C8000000                	enter 0, 0
 13954 000098C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13955 000098C6 E8EBC10000              	call malloc
 13956 000098CB 50                      	push rax
 13957 000098CC BF18000000              	mov rdi, 8 * 3	; new rib
 13958 000098D1 E8E0C10000              	call malloc
 13959 000098D6 50                      	push rax
 13960 000098D7 BF18000000              	mov rdi, 8 * 3	; extended env
 13961 000098DC E8D5C10000              	call malloc
 13962 000098E1 488B7D10                	mov rdi, ENV
 13963 000098E5 BE00000000              	mov rsi, 0
 13964 000098EA BA01000000              	mov rdx, 1
 13965                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13966 000098EF 4883FE02                	cmp rsi, 2
 13967 000098F3 7410                    	je .L_lambda_simple_env_end_004a
 13968 000098F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13969 000098F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13970 000098FD 48FFC6                  	inc rsi
 13971 00009900 48FFC2                  	inc rdx
 13972 00009903 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13973                                  .L_lambda_simple_env_end_004a:
 13974 00009905 5B                      	pop rbx
 13975 00009906 BE00000000              	mov rsi, 0
 13976                                  .L_lambda_simple_params_loop_004a:	; copy params
 13977 0000990B 4883FE03                	cmp rsi, 3
 13978 0000990F 740E                    	je .L_lambda_simple_params_end_004a
 13979 00009911 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13980 00009916 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13981 0000991A 48FFC6                  	inc rsi
 13982 0000991D EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13983                                  .L_lambda_simple_params_end_004a:
 13984 0000991F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13985 00009922 4889C3                  	mov rbx, rax
 13986 00009925 58                      	pop rax
 13987 00009926 C60004                  	mov byte [rax], T_closure
 13988 00009929 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13989 0000992D 48C74009[3A990000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 13990 00009935 E96D080000              	jmp .L_lambda_simple_end_004a
 13991                                  .L_lambda_simple_code_004a:	; lambda-simple body
 13992 0000993A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13993 00009940 740B                    	je .L_lambda_simple_arity_check_ok_004a
 13994 00009942 FF742410                	push qword [rsp + 8 * 2]
 13995 00009946 6A02                    	push 2
 13996 00009948 E922C10000              	jmp L_error_incorrect_arity_simple
 13997                                  .L_lambda_simple_arity_check_ok_004a:
 13998 0000994D C8000000                	enter 0, 0
 13999                                  	; preparing a non-tail-call
 14000 00009951 488B4520                	mov rax, PARAM(0)	; param a
 14001 00009955 50                      	push rax
 14002 00009956 6A01                    	push 1	; arg count
 14003 00009958 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 14004 00009960 803805                  	cmp byte [rax], T_undefined
 14005 00009963 0F8420C00000            	je L_error_fvar_undefined
 14006 00009969 803804                  	cmp byte [rax], T_closure
 14007 0000996C 0F859BC00000            	jne L_error_non_closure
 14008 00009972 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14009 00009975 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14010 00009978 483D[02000000]          	cmp rax, sob_boolean_false
 14011 0000997E 0F8475020000            	je .L_if_else_004f
 14012                                  	; preparing a non-tail-call
 14013 00009984 488B4528                	mov rax, PARAM(1)	; param b
 14014 00009988 50                      	push rax
 14015 00009989 6A01                    	push 1	; arg count
 14016 0000998B 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 14017 00009993 803805                  	cmp byte [rax], T_undefined
 14018 00009996 0F84EDBF0000            	je L_error_fvar_undefined
 14019 0000999C 803804                  	cmp byte [rax], T_closure
 14020 0000999F 0F8568C00000            	jne L_error_non_closure
 14021 000099A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14022 000099A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14023 000099AB 483D[02000000]          	cmp rax, sob_boolean_false
 14024 000099B1 7469                    	je .L_if_else_0046
 14025                                  	; preparing a tail-call
 14026 000099B3 488B4528                	mov rax, PARAM(1)	; param b
 14027 000099B7 50                      	push rax
 14028 000099B8 488B4520                	mov rax, PARAM(0)	; param a
 14029 000099BC 50                      	push rax
 14030 000099BD 6A02                    	push 2	; arg count
 14031 000099BF 488B4510                	mov rax, ENV
 14032 000099C3 488B00                  	mov rax, qword [rax + 8 * 0]
 14033 000099C6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14034 000099C9 803804                  	cmp byte [rax], T_closure
 14035 000099CC 0F853BC00000            	jne L_error_non_closure
 14036 000099D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14037 000099D5 FF7508                  	push qword [rbp + 8 * 1]
 14038                                   ; old ret addr
 14039 000099D8 FF7500                  	push qword [rbp]
 14040                                   ; restore the old rbp
 14041 000099DB BB02000000              	mov rbx, 2
 14042 000099E0 4883C303                	add rbx, 3
 14043 000099E4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14044 000099E8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14045 000099ED 4C8D4DF8                	lea r9, [rbp - 8]
 14046 000099F1 B906000000              	mov rcx, 6
 14047                                  .L_tc_recycle_frame_loop_007c:
 14048 000099F6 4883F900                	cmp rcx, 0
 14049 000099FA 7413                    	je .L_tc_recycle_frame_done_007c
 14050 000099FC 4D8B11                  	mov r10, qword [r9]
 14051 000099FF 4D8910                  	mov qword [r8], r10
 14052 00009A02 4983E808                	sub r8, 8
 14053 00009A06 4983E908                	sub r9, 8
 14054 00009A0A 48FFC9                  	dec rcx
 14055 00009A0D EBE7                    	jmp .L_tc_recycle_frame_loop_007c
 14056                                  .L_tc_recycle_frame_done_007c:
 14057 00009A0F 498D6008                	lea rsp, [r8 + 8]
 14058 00009A13 5D                      	pop rbp ; restore the old rbp
 14059 00009A14 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14060 00009A17 E9D8010000              	jmp .L_if_end_0046
 14061                                  .L_if_else_0046:
 14062                                  	; preparing a non-tail-call
 14063 00009A1C 488B4528                	mov rax, PARAM(1)	; param b
 14064 00009A20 50                      	push rax
 14065 00009A21 6A01                    	push 1	; arg count
 14066 00009A23 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14067 00009A2B 803805                  	cmp byte [rax], T_undefined
 14068 00009A2E 0F8455BF0000            	je L_error_fvar_undefined
 14069 00009A34 803804                  	cmp byte [rax], T_closure
 14070 00009A37 0F85D0BF0000            	jne L_error_non_closure
 14071 00009A3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14072 00009A40 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14073 00009A43 483D[02000000]          	cmp rax, sob_boolean_false
 14074 00009A49 0F848D000000            	je .L_if_else_0045
 14075                                  	; preparing a tail-call
 14076 00009A4F 488B4528                	mov rax, PARAM(1)	; param b
 14077 00009A53 50                      	push rax
 14078                                  	; preparing a non-tail-call
 14079 00009A54 488B4520                	mov rax, PARAM(0)	; param a
 14080 00009A58 50                      	push rax
 14081 00009A59 6A01                    	push 1	; arg count
 14082 00009A5B 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14083 00009A63 803805                  	cmp byte [rax], T_undefined
 14084 00009A66 0F841DBF0000            	je L_error_fvar_undefined
 14085 00009A6C 803804                  	cmp byte [rax], T_closure
 14086 00009A6F 0F8598BF0000            	jne L_error_non_closure
 14087 00009A75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14088 00009A78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14089 00009A7B 50                      	push rax
 14090 00009A7C 6A02                    	push 2	; arg count
 14091 00009A7E 488B4510                	mov rax, ENV
 14092 00009A82 488B00                  	mov rax, qword [rax + 8 * 0]
 14093 00009A85 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14094 00009A89 803804                  	cmp byte [rax], T_closure
 14095 00009A8C 0F857BBF0000            	jne L_error_non_closure
 14096 00009A92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14097 00009A95 FF7508                  	push qword [rbp + 8 * 1]
 14098                                   ; old ret addr
 14099 00009A98 FF7500                  	push qword [rbp]
 14100                                   ; restore the old rbp
 14101 00009A9B BB02000000              	mov rbx, 2
 14102 00009AA0 4883C303                	add rbx, 3
 14103 00009AA4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14104 00009AA8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14105 00009AAD 4C8D4DF8                	lea r9, [rbp - 8]
 14106 00009AB1 B906000000              	mov rcx, 6
 14107                                  .L_tc_recycle_frame_loop_007d:
 14108 00009AB6 4883F900                	cmp rcx, 0
 14109 00009ABA 7413                    	je .L_tc_recycle_frame_done_007d
 14110 00009ABC 4D8B11                  	mov r10, qword [r9]
 14111 00009ABF 4D8910                  	mov qword [r8], r10
 14112 00009AC2 4983E808                	sub r8, 8
 14113 00009AC6 4983E908                	sub r9, 8
 14114 00009ACA 48FFC9                  	dec rcx
 14115 00009ACD EBE7                    	jmp .L_tc_recycle_frame_loop_007d
 14116                                  .L_tc_recycle_frame_done_007d:
 14117 00009ACF 498D6008                	lea rsp, [r8 + 8]
 14118 00009AD3 5D                      	pop rbp ; restore the old rbp
 14119 00009AD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14120 00009AD7 E918010000              	jmp .L_if_end_0045
 14121                                  .L_if_else_0045:
 14122                                  	; preparing a non-tail-call
 14123 00009ADC 488B4528                	mov rax, PARAM(1)	; param b
 14124 00009AE0 50                      	push rax
 14125 00009AE1 6A01                    	push 1	; arg count
 14126 00009AE3 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 14127 00009AEB 803805                  	cmp byte [rax], T_undefined
 14128 00009AEE 0F8495BE0000            	je L_error_fvar_undefined
 14129 00009AF4 803804                  	cmp byte [rax], T_closure
 14130 00009AF7 0F8510BF0000            	jne L_error_non_closure
 14131 00009AFD FF7001                  	push SOB_CLOSURE_ENV(rax)
 14132 00009B00 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14133 00009B03 483D[02000000]          	cmp rax, sob_boolean_false
 14134 00009B09 0F848A000000            	je .L_if_else_0044
 14135                                  	; preparing a tail-call
 14136 00009B0F 488B4528                	mov rax, PARAM(1)	; param b
 14137 00009B13 50                      	push rax
 14138                                  	; preparing a non-tail-call
 14139 00009B14 488B4520                	mov rax, PARAM(0)	; param a
 14140 00009B18 50                      	push rax
 14141 00009B19 6A01                    	push 1	; arg count
 14142 00009B1B 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14143 00009B23 803805                  	cmp byte [rax], T_undefined
 14144 00009B26 0F845DBE0000            	je L_error_fvar_undefined
 14145 00009B2C 803804                  	cmp byte [rax], T_closure
 14146 00009B2F 0F85D8BE0000            	jne L_error_non_closure
 14147 00009B35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14148 00009B38 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14149 00009B3B 50                      	push rax
 14150 00009B3C 6A02                    	push 2	; arg count
 14151 00009B3E 488B4510                	mov rax, ENV
 14152 00009B42 488B00                  	mov rax, qword [rax + 8 * 0]
 14153 00009B45 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14154 00009B49 803804                  	cmp byte [rax], T_closure
 14155 00009B4C 0F85BBBE0000            	jne L_error_non_closure
 14156 00009B52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14157 00009B55 FF7508                  	push qword [rbp + 8 * 1]
 14158                                   ; old ret addr
 14159 00009B58 FF7500                  	push qword [rbp]
 14160                                   ; restore the old rbp
 14161 00009B5B BB02000000              	mov rbx, 2
 14162 00009B60 4883C303                	add rbx, 3
 14163 00009B64 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14164 00009B68 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14165 00009B6D 4C8D4DF8                	lea r9, [rbp - 8]
 14166 00009B71 B906000000              	mov rcx, 6
 14167                                  .L_tc_recycle_frame_loop_007e:
 14168 00009B76 4883F900                	cmp rcx, 0
 14169 00009B7A 7413                    	je .L_tc_recycle_frame_done_007e
 14170 00009B7C 4D8B11                  	mov r10, qword [r9]
 14171 00009B7F 4D8910                  	mov qword [r8], r10
 14172 00009B82 4983E808                	sub r8, 8
 14173 00009B86 4983E908                	sub r9, 8
 14174 00009B8A 48FFC9                  	dec rcx
 14175 00009B8D EBE7                    	jmp .L_tc_recycle_frame_loop_007e
 14176                                  .L_tc_recycle_frame_done_007e:
 14177 00009B8F 498D6008                	lea rsp, [r8 + 8]
 14178 00009B93 5D                      	pop rbp ; restore the old rbp
 14179 00009B94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14180 00009B97 EB5B                    	jmp .L_if_end_0044
 14181                                  .L_if_else_0044:
 14182                                  	; preparing a tail-call
 14183 00009B99 6A00                    	push 0	; arg count
 14184 00009B9B 488B4510                	mov rax, ENV
 14185 00009B9F 488B4008                	mov rax, qword [rax + 8 * 1]
 14186 00009BA3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14187 00009BA6 803804                  	cmp byte [rax], T_closure
 14188 00009BA9 0F855EBE0000            	jne L_error_non_closure
 14189 00009BAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 14190 00009BB2 FF7508                  	push qword [rbp + 8 * 1]
 14191                                   ; old ret addr
 14192 00009BB5 FF7500                  	push qword [rbp]
 14193                                   ; restore the old rbp
 14194 00009BB8 BB00000000              	mov rbx, 0
 14195 00009BBD 4883C303                	add rbx, 3
 14196 00009BC1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14197 00009BC5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14198 00009BCA 4C8D4DF8                	lea r9, [rbp - 8]
 14199 00009BCE B904000000              	mov rcx, 4
 14200                                  .L_tc_recycle_frame_loop_007f:
 14201 00009BD3 4883F900                	cmp rcx, 0
 14202 00009BD7 7413                    	je .L_tc_recycle_frame_done_007f
 14203 00009BD9 4D8B11                  	mov r10, qword [r9]
 14204 00009BDC 4D8910                  	mov qword [r8], r10
 14205 00009BDF 4983E808                	sub r8, 8
 14206 00009BE3 4983E908                	sub r9, 8
 14207 00009BE7 48FFC9                  	dec rcx
 14208 00009BEA EBE7                    	jmp .L_tc_recycle_frame_loop_007f
 14209                                  .L_tc_recycle_frame_done_007f:
 14210 00009BEC 498D6008                	lea rsp, [r8 + 8]
 14211 00009BF0 5D                      	pop rbp ; restore the old rbp
 14212 00009BF1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14213                                  .L_if_end_0044:
 14214                                  .L_if_end_0045:
 14215                                  .L_if_end_0046:
 14216 00009BF4 E9AA050000              	jmp .L_if_end_004f
 14217                                  .L_if_else_004f:
 14218                                  	; preparing a non-tail-call
 14219 00009BF9 488B4520                	mov rax, PARAM(0)	; param a
 14220 00009BFD 50                      	push rax
 14221 00009BFE 6A01                    	push 1	; arg count
 14222 00009C00 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14223 00009C08 803805                  	cmp byte [rax], T_undefined
 14224 00009C0B 0F8478BD0000            	je L_error_fvar_undefined
 14225 00009C11 803804                  	cmp byte [rax], T_closure
 14226 00009C14 0F85F3BD0000            	jne L_error_non_closure
 14227 00009C1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14228 00009C1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14229 00009C20 483D[02000000]          	cmp rax, sob_boolean_false
 14230 00009C26 0F8476020000            	je .L_if_else_004e
 14231                                  	; preparing a non-tail-call
 14232 00009C2C 488B4528                	mov rax, PARAM(1)	; param b
 14233 00009C30 50                      	push rax
 14234 00009C31 6A01                    	push 1	; arg count
 14235 00009C33 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 14236 00009C3B 803805                  	cmp byte [rax], T_undefined
 14237 00009C3E 0F8445BD0000            	je L_error_fvar_undefined
 14238 00009C44 803804                  	cmp byte [rax], T_closure
 14239 00009C47 0F85C0BD0000            	jne L_error_non_closure
 14240 00009C4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14241 00009C50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14242 00009C53 483D[02000000]          	cmp rax, sob_boolean_false
 14243 00009C59 0F848D000000            	je .L_if_else_0049
 14244                                  	; preparing a tail-call
 14245                                  	; preparing a non-tail-call
 14246 00009C5F 488B4528                	mov rax, PARAM(1)	; param b
 14247 00009C63 50                      	push rax
 14248 00009C64 6A01                    	push 1	; arg count
 14249 00009C66 488B0425[BB0F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14250 00009C6E 803805                  	cmp byte [rax], T_undefined
 14251 00009C71 0F8412BD0000            	je L_error_fvar_undefined
 14252 00009C77 803804                  	cmp byte [rax], T_closure
 14253 00009C7A 0F858DBD0000            	jne L_error_non_closure
 14254 00009C80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14255 00009C83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14256 00009C86 50                      	push rax
 14257 00009C87 488B4520                	mov rax, PARAM(0)	; param a
 14258 00009C8B 50                      	push rax
 14259 00009C8C 6A02                    	push 2	; arg count
 14260 00009C8E 488B4510                	mov rax, ENV
 14261 00009C92 488B00                  	mov rax, qword [rax + 8 * 0]
 14262 00009C95 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14263 00009C99 803804                  	cmp byte [rax], T_closure
 14264 00009C9C 0F856BBD0000            	jne L_error_non_closure
 14265 00009CA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14266 00009CA5 FF7508                  	push qword [rbp + 8 * 1]
 14267                                   ; old ret addr
 14268 00009CA8 FF7500                  	push qword [rbp]
 14269                                   ; restore the old rbp
 14270 00009CAB BB02000000              	mov rbx, 2
 14271 00009CB0 4883C303                	add rbx, 3
 14272 00009CB4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14273 00009CB8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14274 00009CBD 4C8D4DF8                	lea r9, [rbp - 8]
 14275 00009CC1 B906000000              	mov rcx, 6
 14276                                  .L_tc_recycle_frame_loop_0080:
 14277 00009CC6 4883F900                	cmp rcx, 0
 14278 00009CCA 7413                    	je .L_tc_recycle_frame_done_0080
 14279 00009CCC 4D8B11                  	mov r10, qword [r9]
 14280 00009CCF 4D8910                  	mov qword [r8], r10
 14281 00009CD2 4983E808                	sub r8, 8
 14282 00009CD6 4983E908                	sub r9, 8
 14283 00009CDA 48FFC9                  	dec rcx
 14284 00009CDD EBE7                    	jmp .L_tc_recycle_frame_loop_0080
 14285                                  .L_tc_recycle_frame_done_0080:
 14286 00009CDF 498D6008                	lea rsp, [r8 + 8]
 14287 00009CE3 5D                      	pop rbp ; restore the old rbp
 14288 00009CE4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14289 00009CE7 E9B1010000              	jmp .L_if_end_0049
 14290                                  .L_if_else_0049:
 14291                                  	; preparing a non-tail-call
 14292 00009CEC 488B4528                	mov rax, PARAM(1)	; param b
 14293 00009CF0 50                      	push rax
 14294 00009CF1 6A01                    	push 1	; arg count
 14295 00009CF3 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14296 00009CFB 803805                  	cmp byte [rax], T_undefined
 14297 00009CFE 0F8485BC0000            	je L_error_fvar_undefined
 14298 00009D04 803804                  	cmp byte [rax], T_closure
 14299 00009D07 0F8500BD0000            	jne L_error_non_closure
 14300 00009D0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14301 00009D10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14302 00009D13 483D[02000000]          	cmp rax, sob_boolean_false
 14303 00009D19 746A                    	je .L_if_else_0048
 14304                                  	; preparing a tail-call
 14305 00009D1B 488B4528                	mov rax, PARAM(1)	; param b
 14306 00009D1F 50                      	push rax
 14307 00009D20 488B4520                	mov rax, PARAM(0)	; param a
 14308 00009D24 50                      	push rax
 14309 00009D25 6A02                    	push 2	; arg count
 14310 00009D27 488B4510                	mov rax, ENV
 14311 00009D2B 488B00                  	mov rax, qword [rax + 8 * 0]
 14312 00009D2E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14313 00009D32 803804                  	cmp byte [rax], T_closure
 14314 00009D35 0F85D2BC0000            	jne L_error_non_closure
 14315 00009D3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14316 00009D3E FF7508                  	push qword [rbp + 8 * 1]
 14317                                   ; old ret addr
 14318 00009D41 FF7500                  	push qword [rbp]
 14319                                   ; restore the old rbp
 14320 00009D44 BB02000000              	mov rbx, 2
 14321 00009D49 4883C303                	add rbx, 3
 14322 00009D4D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14323 00009D51 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14324 00009D56 4C8D4DF8                	lea r9, [rbp - 8]
 14325 00009D5A B906000000              	mov rcx, 6
 14326                                  .L_tc_recycle_frame_loop_0081:
 14327 00009D5F 4883F900                	cmp rcx, 0
 14328 00009D63 7413                    	je .L_tc_recycle_frame_done_0081
 14329 00009D65 4D8B11                  	mov r10, qword [r9]
 14330 00009D68 4D8910                  	mov qword [r8], r10
 14331 00009D6B 4983E808                	sub r8, 8
 14332 00009D6F 4983E908                	sub r9, 8
 14333 00009D73 48FFC9                  	dec rcx
 14334 00009D76 EBE7                    	jmp .L_tc_recycle_frame_loop_0081
 14335                                  .L_tc_recycle_frame_done_0081:
 14336 00009D78 498D6008                	lea rsp, [r8 + 8]
 14337 00009D7C 5D                      	pop rbp ; restore the old rbp
 14338 00009D7D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14339 00009D80 E918010000              	jmp .L_if_end_0048
 14340                                  .L_if_else_0048:
 14341                                  	; preparing a non-tail-call
 14342 00009D85 488B4528                	mov rax, PARAM(1)	; param b
 14343 00009D89 50                      	push rax
 14344 00009D8A 6A01                    	push 1	; arg count
 14345 00009D8C 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 14346 00009D94 803805                  	cmp byte [rax], T_undefined
 14347 00009D97 0F84ECBB0000            	je L_error_fvar_undefined
 14348 00009D9D 803804                  	cmp byte [rax], T_closure
 14349 00009DA0 0F8567BC0000            	jne L_error_non_closure
 14350 00009DA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14351 00009DA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14352 00009DAC 483D[02000000]          	cmp rax, sob_boolean_false
 14353 00009DB2 0F848A000000            	je .L_if_else_0047
 14354                                  	; preparing a tail-call
 14355 00009DB8 488B4528                	mov rax, PARAM(1)	; param b
 14356 00009DBC 50                      	push rax
 14357                                  	; preparing a non-tail-call
 14358 00009DBD 488B4520                	mov rax, PARAM(0)	; param a
 14359 00009DC1 50                      	push rax
 14360 00009DC2 6A01                    	push 1	; arg count
 14361 00009DC4 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14362 00009DCC 803805                  	cmp byte [rax], T_undefined
 14363 00009DCF 0F84B4BB0000            	je L_error_fvar_undefined
 14364 00009DD5 803804                  	cmp byte [rax], T_closure
 14365 00009DD8 0F852FBC0000            	jne L_error_non_closure
 14366 00009DDE FF7001                  	push SOB_CLOSURE_ENV(rax)
 14367 00009DE1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14368 00009DE4 50                      	push rax
 14369 00009DE5 6A02                    	push 2	; arg count
 14370 00009DE7 488B4510                	mov rax, ENV
 14371 00009DEB 488B00                  	mov rax, qword [rax + 8 * 0]
 14372 00009DEE 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14373 00009DF2 803804                  	cmp byte [rax], T_closure
 14374 00009DF5 0F8512BC0000            	jne L_error_non_closure
 14375 00009DFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14376 00009DFE FF7508                  	push qword [rbp + 8 * 1]
 14377                                   ; old ret addr
 14378 00009E01 FF7500                  	push qword [rbp]
 14379                                   ; restore the old rbp
 14380 00009E04 BB02000000              	mov rbx, 2
 14381 00009E09 4883C303                	add rbx, 3
 14382 00009E0D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14383 00009E11 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14384 00009E16 4C8D4DF8                	lea r9, [rbp - 8]
 14385 00009E1A B906000000              	mov rcx, 6
 14386                                  .L_tc_recycle_frame_loop_0082:
 14387 00009E1F 4883F900                	cmp rcx, 0
 14388 00009E23 7413                    	je .L_tc_recycle_frame_done_0082
 14389 00009E25 4D8B11                  	mov r10, qword [r9]
 14390 00009E28 4D8910                  	mov qword [r8], r10
 14391 00009E2B 4983E808                	sub r8, 8
 14392 00009E2F 4983E908                	sub r9, 8
 14393 00009E33 48FFC9                  	dec rcx
 14394 00009E36 EBE7                    	jmp .L_tc_recycle_frame_loop_0082
 14395                                  .L_tc_recycle_frame_done_0082:
 14396 00009E38 498D6008                	lea rsp, [r8 + 8]
 14397 00009E3C 5D                      	pop rbp ; restore the old rbp
 14398 00009E3D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14399 00009E40 EB5B                    	jmp .L_if_end_0047
 14400                                  .L_if_else_0047:
 14401                                  	; preparing a tail-call
 14402 00009E42 6A00                    	push 0	; arg count
 14403 00009E44 488B4510                	mov rax, ENV
 14404 00009E48 488B4008                	mov rax, qword [rax + 8 * 1]
 14405 00009E4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14406 00009E4F 803804                  	cmp byte [rax], T_closure
 14407 00009E52 0F85B5BB0000            	jne L_error_non_closure
 14408 00009E58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14409 00009E5B FF7508                  	push qword [rbp + 8 * 1]
 14410                                   ; old ret addr
 14411 00009E5E FF7500                  	push qword [rbp]
 14412                                   ; restore the old rbp
 14413 00009E61 BB00000000              	mov rbx, 0
 14414 00009E66 4883C303                	add rbx, 3
 14415 00009E6A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14416 00009E6E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14417 00009E73 4C8D4DF8                	lea r9, [rbp - 8]
 14418 00009E77 B904000000              	mov rcx, 4
 14419                                  .L_tc_recycle_frame_loop_0083:
 14420 00009E7C 4883F900                	cmp rcx, 0
 14421 00009E80 7413                    	je .L_tc_recycle_frame_done_0083
 14422 00009E82 4D8B11                  	mov r10, qword [r9]
 14423 00009E85 4D8910                  	mov qword [r8], r10
 14424 00009E88 4983E808                	sub r8, 8
 14425 00009E8C 4983E908                	sub r9, 8
 14426 00009E90 48FFC9                  	dec rcx
 14427 00009E93 EBE7                    	jmp .L_tc_recycle_frame_loop_0083
 14428                                  .L_tc_recycle_frame_done_0083:
 14429 00009E95 498D6008                	lea rsp, [r8 + 8]
 14430 00009E99 5D                      	pop rbp ; restore the old rbp
 14431 00009E9A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14432                                  .L_if_end_0047:
 14433                                  .L_if_end_0048:
 14434                                  .L_if_end_0049:
 14435 00009E9D E901030000              	jmp .L_if_end_004e
 14436                                  .L_if_else_004e:
 14437                                  	; preparing a non-tail-call
 14438 00009EA2 488B4520                	mov rax, PARAM(0)	; param a
 14439 00009EA6 50                      	push rax
 14440 00009EA7 6A01                    	push 1	; arg count
 14441 00009EA9 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 14442 00009EB1 803805                  	cmp byte [rax], T_undefined
 14443 00009EB4 0F84CFBA0000            	je L_error_fvar_undefined
 14444 00009EBA 803804                  	cmp byte [rax], T_closure
 14445 00009EBD 0F854ABB0000            	jne L_error_non_closure
 14446 00009EC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14447 00009EC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14448 00009EC9 483D[02000000]          	cmp rax, sob_boolean_false
 14449 00009ECF 0F8473020000            	je .L_if_else_004d
 14450                                  	; preparing a non-tail-call
 14451 00009ED5 488B4528                	mov rax, PARAM(1)	; param b
 14452 00009ED9 50                      	push rax
 14453 00009EDA 6A01                    	push 1	; arg count
 14454 00009EDC 488B0425[D9130000]      	mov rax, qword [free_var_91]	; free var integer?
 14455 00009EE4 803805                  	cmp byte [rax], T_undefined
 14456 00009EE7 0F849CBA0000            	je L_error_fvar_undefined
 14457 00009EED 803804                  	cmp byte [rax], T_closure
 14458 00009EF0 0F8517BB0000            	jne L_error_non_closure
 14459 00009EF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14460 00009EF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14461 00009EFC 483D[02000000]          	cmp rax, sob_boolean_false
 14462 00009F02 0F848D000000            	je .L_if_else_004c
 14463                                  	; preparing a tail-call
 14464                                  	; preparing a non-tail-call
 14465 00009F08 488B4528                	mov rax, PARAM(1)	; param b
 14466 00009F0C 50                      	push rax
 14467 00009F0D 6A01                    	push 1	; arg count
 14468 00009F0F 488B0425[C8130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14469 00009F17 803805                  	cmp byte [rax], T_undefined
 14470 00009F1A 0F8469BA0000            	je L_error_fvar_undefined
 14471 00009F20 803804                  	cmp byte [rax], T_closure
 14472 00009F23 0F85E4BA0000            	jne L_error_non_closure
 14473 00009F29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14474 00009F2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14475 00009F2F 50                      	push rax
 14476 00009F30 488B4520                	mov rax, PARAM(0)	; param a
 14477 00009F34 50                      	push rax
 14478 00009F35 6A02                    	push 2	; arg count
 14479 00009F37 488B4510                	mov rax, ENV
 14480 00009F3B 488B00                  	mov rax, qword [rax + 8 * 0]
 14481 00009F3E 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14482 00009F42 803804                  	cmp byte [rax], T_closure
 14483 00009F45 0F85C2BA0000            	jne L_error_non_closure
 14484 00009F4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14485 00009F4E FF7508                  	push qword [rbp + 8 * 1]
 14486                                   ; old ret addr
 14487 00009F51 FF7500                  	push qword [rbp]
 14488                                   ; restore the old rbp
 14489 00009F54 BB02000000              	mov rbx, 2
 14490 00009F59 4883C303                	add rbx, 3
 14491 00009F5D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14492 00009F61 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14493 00009F66 4C8D4DF8                	lea r9, [rbp - 8]
 14494 00009F6A B906000000              	mov rcx, 6
 14495                                  .L_tc_recycle_frame_loop_0084:
 14496 00009F6F 4883F900                	cmp rcx, 0
 14497 00009F73 7413                    	je .L_tc_recycle_frame_done_0084
 14498 00009F75 4D8B11                  	mov r10, qword [r9]
 14499 00009F78 4D8910                  	mov qword [r8], r10
 14500 00009F7B 4983E808                	sub r8, 8
 14501 00009F7F 4983E908                	sub r9, 8
 14502 00009F83 48FFC9                  	dec rcx
 14503 00009F86 EBE7                    	jmp .L_tc_recycle_frame_loop_0084
 14504                                  .L_tc_recycle_frame_done_0084:
 14505 00009F88 498D6008                	lea rsp, [r8 + 8]
 14506 00009F8C 5D                      	pop rbp ; restore the old rbp
 14507 00009F8D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14508 00009F90 E9B1010000              	jmp .L_if_end_004c
 14509                                  .L_if_else_004c:
 14510                                  	; preparing a non-tail-call
 14511 00009F95 488B4528                	mov rax, PARAM(1)	; param b
 14512 00009F99 50                      	push rax
 14513 00009F9A 6A01                    	push 1	; arg count
 14514 00009F9C 488B0425[A6130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14515 00009FA4 803805                  	cmp byte [rax], T_undefined
 14516 00009FA7 0F84DCB90000            	je L_error_fvar_undefined
 14517 00009FAD 803804                  	cmp byte [rax], T_closure
 14518 00009FB0 0F8557BA0000            	jne L_error_non_closure
 14519 00009FB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14520 00009FB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14521 00009FBC 483D[02000000]          	cmp rax, sob_boolean_false
 14522 00009FC2 0F848D000000            	je .L_if_else_004b
 14523                                  	; preparing a tail-call
 14524                                  	; preparing a non-tail-call
 14525 00009FC8 488B4528                	mov rax, PARAM(1)	; param b
 14526 00009FCC 50                      	push rax
 14527 00009FCD 6A01                    	push 1	; arg count
 14528 00009FCF 488B0425[95130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14529 00009FD7 803805                  	cmp byte [rax], T_undefined
 14530 00009FDA 0F84A9B90000            	je L_error_fvar_undefined
 14531 00009FE0 803804                  	cmp byte [rax], T_closure
 14532 00009FE3 0F8524BA0000            	jne L_error_non_closure
 14533 00009FE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14534 00009FEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 14535 00009FEF 50                      	push rax
 14536 00009FF0 488B4520                	mov rax, PARAM(0)	; param a
 14537 00009FF4 50                      	push rax
 14538 00009FF5 6A02                    	push 2	; arg count
 14539 00009FF7 488B4510                	mov rax, ENV
 14540 00009FFB 488B00                  	mov rax, qword [rax + 8 * 0]
 14541 00009FFE 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14542 0000A002 803804                  	cmp byte [rax], T_closure
 14543 0000A005 0F8502BA0000            	jne L_error_non_closure
 14544 0000A00B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14545 0000A00E FF7508                  	push qword [rbp + 8 * 1]
 14546                                   ; old ret addr
 14547 0000A011 FF7500                  	push qword [rbp]
 14548                                   ; restore the old rbp
 14549 0000A014 BB02000000              	mov rbx, 2
 14550 0000A019 4883C303                	add rbx, 3
 14551 0000A01D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14552 0000A021 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14553 0000A026 4C8D4DF8                	lea r9, [rbp - 8]
 14554 0000A02A B906000000              	mov rcx, 6
 14555                                  .L_tc_recycle_frame_loop_0085:
 14556 0000A02F 4883F900                	cmp rcx, 0
 14557 0000A033 7413                    	je .L_tc_recycle_frame_done_0085
 14558 0000A035 4D8B11                  	mov r10, qword [r9]
 14559 0000A038 4D8910                  	mov qword [r8], r10
 14560 0000A03B 4983E808                	sub r8, 8
 14561 0000A03F 4983E908                	sub r9, 8
 14562 0000A043 48FFC9                  	dec rcx
 14563 0000A046 EBE7                    	jmp .L_tc_recycle_frame_loop_0085
 14564                                  .L_tc_recycle_frame_done_0085:
 14565 0000A048 498D6008                	lea rsp, [r8 + 8]
 14566 0000A04C 5D                      	pop rbp ; restore the old rbp
 14567 0000A04D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14568 0000A050 E9F1000000              	jmp .L_if_end_004b
 14569                                  .L_if_else_004b:
 14570                                  	; preparing a non-tail-call
 14571 0000A055 488B4528                	mov rax, PARAM(1)	; param b
 14572 0000A059 50                      	push rax
 14573 0000A05A 6A01                    	push 1	; arg count
 14574 0000A05C 488B0425[82150000]      	mov rax, qword [free_var_116]	; free var real?
 14575 0000A064 803805                  	cmp byte [rax], T_undefined
 14576 0000A067 0F841CB90000            	je L_error_fvar_undefined
 14577 0000A06D 803804                  	cmp byte [rax], T_closure
 14578 0000A070 0F8597B90000            	jne L_error_non_closure
 14579 0000A076 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14580 0000A079 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14581 0000A07C 483D[02000000]          	cmp rax, sob_boolean_false
 14582 0000A082 7467                    	je .L_if_else_004a
 14583                                  	; preparing a tail-call
 14584 0000A084 488B4528                	mov rax, PARAM(1)	; param b
 14585 0000A088 50                      	push rax
 14586 0000A089 488B4520                	mov rax, PARAM(0)	; param a
 14587 0000A08D 50                      	push rax
 14588 0000A08E 6A02                    	push 2	; arg count
 14589 0000A090 488B4510                	mov rax, ENV
 14590 0000A094 488B00                  	mov rax, qword [rax + 8 * 0]
 14591 0000A097 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14592 0000A09B 803804                  	cmp byte [rax], T_closure
 14593 0000A09E 0F8569B90000            	jne L_error_non_closure
 14594 0000A0A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14595 0000A0A7 FF7508                  	push qword [rbp + 8 * 1]
 14596                                   ; old ret addr
 14597 0000A0AA FF7500                  	push qword [rbp]
 14598                                   ; restore the old rbp
 14599 0000A0AD BB02000000              	mov rbx, 2
 14600 0000A0B2 4883C303                	add rbx, 3
 14601 0000A0B6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14602 0000A0BA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14603 0000A0BF 4C8D4DF8                	lea r9, [rbp - 8]
 14604 0000A0C3 B906000000              	mov rcx, 6
 14605                                  .L_tc_recycle_frame_loop_0086:
 14606 0000A0C8 4883F900                	cmp rcx, 0
 14607 0000A0CC 7413                    	je .L_tc_recycle_frame_done_0086
 14608 0000A0CE 4D8B11                  	mov r10, qword [r9]
 14609 0000A0D1 4D8910                  	mov qword [r8], r10
 14610 0000A0D4 4983E808                	sub r8, 8
 14611 0000A0D8 4983E908                	sub r9, 8
 14612 0000A0DC 48FFC9                  	dec rcx
 14613 0000A0DF EBE7                    	jmp .L_tc_recycle_frame_loop_0086
 14614                                  .L_tc_recycle_frame_done_0086:
 14615 0000A0E1 498D6008                	lea rsp, [r8 + 8]
 14616 0000A0E5 5D                      	pop rbp ; restore the old rbp
 14617 0000A0E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14618 0000A0E9 EB5B                    	jmp .L_if_end_004a
 14619                                  .L_if_else_004a:
 14620                                  	; preparing a tail-call
 14621 0000A0EB 6A00                    	push 0	; arg count
 14622 0000A0ED 488B4510                	mov rax, ENV
 14623 0000A0F1 488B4008                	mov rax, qword [rax + 8 * 1]
 14624 0000A0F5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14625 0000A0F8 803804                  	cmp byte [rax], T_closure
 14626 0000A0FB 0F850CB90000            	jne L_error_non_closure
 14627 0000A101 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14628 0000A104 FF7508                  	push qword [rbp + 8 * 1]
 14629                                   ; old ret addr
 14630 0000A107 FF7500                  	push qword [rbp]
 14631                                   ; restore the old rbp
 14632 0000A10A BB00000000              	mov rbx, 0
 14633 0000A10F 4883C303                	add rbx, 3
 14634 0000A113 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14635 0000A117 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14636 0000A11C 4C8D4DF8                	lea r9, [rbp - 8]
 14637 0000A120 B904000000              	mov rcx, 4
 14638                                  .L_tc_recycle_frame_loop_0087:
 14639 0000A125 4883F900                	cmp rcx, 0
 14640 0000A129 7413                    	je .L_tc_recycle_frame_done_0087
 14641 0000A12B 4D8B11                  	mov r10, qword [r9]
 14642 0000A12E 4D8910                  	mov qword [r8], r10
 14643 0000A131 4983E808                	sub r8, 8
 14644 0000A135 4983E908                	sub r9, 8
 14645 0000A139 48FFC9                  	dec rcx
 14646 0000A13C EBE7                    	jmp .L_tc_recycle_frame_loop_0087
 14647                                  .L_tc_recycle_frame_done_0087:
 14648 0000A13E 498D6008                	lea rsp, [r8 + 8]
 14649 0000A142 5D                      	pop rbp ; restore the old rbp
 14650 0000A143 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14651                                  .L_if_end_004a:
 14652                                  .L_if_end_004b:
 14653                                  .L_if_end_004c:
 14654 0000A146 EB5B                    	jmp .L_if_end_004d
 14655                                  .L_if_else_004d:
 14656                                  	; preparing a tail-call
 14657 0000A148 6A00                    	push 0	; arg count
 14658 0000A14A 488B4510                	mov rax, ENV
 14659 0000A14E 488B4008                	mov rax, qword [rax + 8 * 1]
 14660 0000A152 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14661 0000A155 803804                  	cmp byte [rax], T_closure
 14662 0000A158 0F85AFB80000            	jne L_error_non_closure
 14663 0000A15E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14664 0000A161 FF7508                  	push qword [rbp + 8 * 1]
 14665                                   ; old ret addr
 14666 0000A164 FF7500                  	push qword [rbp]
 14667                                   ; restore the old rbp
 14668 0000A167 BB00000000              	mov rbx, 0
 14669 0000A16C 4883C303                	add rbx, 3
 14670 0000A170 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14671 0000A174 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14672 0000A179 4C8D4DF8                	lea r9, [rbp - 8]
 14673 0000A17D B904000000              	mov rcx, 4
 14674                                  .L_tc_recycle_frame_loop_0088:
 14675 0000A182 4883F900                	cmp rcx, 0
 14676 0000A186 7413                    	je .L_tc_recycle_frame_done_0088
 14677 0000A188 4D8B11                  	mov r10, qword [r9]
 14678 0000A18B 4D8910                  	mov qword [r8], r10
 14679 0000A18E 4983E808                	sub r8, 8
 14680 0000A192 4983E908                	sub r9, 8
 14681 0000A196 48FFC9                  	dec rcx
 14682 0000A199 EBE7                    	jmp .L_tc_recycle_frame_loop_0088
 14683                                  .L_tc_recycle_frame_done_0088:
 14684 0000A19B 498D6008                	lea rsp, [r8 + 8]
 14685 0000A19F 5D                      	pop rbp ; restore the old rbp
 14686 0000A1A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14687                                  .L_if_end_004d:
 14688                                  .L_if_end_004e:
 14689                                  .L_if_end_004f:
 14690 0000A1A3 C9                      	leave
 14691 0000A1A4 C22000                  	ret AND_KILL_FRAME(2)
 14692                                  .L_lambda_simple_end_004a:	; new closure is in rax
 14693 0000A1A7 C9                      	leave
 14694 0000A1A8 C22800                  	ret AND_KILL_FRAME(3)
 14695                                  .L_lambda_simple_end_0049:	; new closure is in rax
 14696 0000A1AB 50                      	push rax
 14697 0000A1AC 6A01                    	push 1	; arg count
 14698 0000A1AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14699 0000A1B3 E8FEB80000              	call malloc
 14700 0000A1B8 50                      	push rax
 14701 0000A1B9 BF08000000              	mov rdi, 8 * 1	; new rib
 14702 0000A1BE E8F3B80000              	call malloc
 14703 0000A1C3 50                      	push rax
 14704 0000A1C4 BF10000000              	mov rdi, 8 * 2	; extended env
 14705 0000A1C9 E8E8B80000              	call malloc
 14706 0000A1CE 488B7D10                	mov rdi, ENV
 14707 0000A1D2 BE00000000              	mov rsi, 0
 14708 0000A1D7 BA01000000              	mov rdx, 1
 14709                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 14710 0000A1DC 4883FE01                	cmp rsi, 1
 14711 0000A1E0 7410                    	je .L_lambda_simple_env_end_004b
 14712 0000A1E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14713 0000A1E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14714 0000A1EA 48FFC6                  	inc rsi
 14715 0000A1ED 48FFC2                  	inc rdx
 14716 0000A1F0 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 14717                                  .L_lambda_simple_env_end_004b:
 14718 0000A1F2 5B                      	pop rbx
 14719 0000A1F3 BE00000000              	mov rsi, 0
 14720                                  .L_lambda_simple_params_loop_004b:	; copy params
 14721 0000A1F8 4883FE01                	cmp rsi, 1
 14722 0000A1FC 740E                    	je .L_lambda_simple_params_end_004b
 14723 0000A1FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14724 0000A203 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14725 0000A207 48FFC6                  	inc rsi
 14726 0000A20A EBEC                    	jmp .L_lambda_simple_params_loop_004b
 14727                                  .L_lambda_simple_params_end_004b:
 14728 0000A20C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14729 0000A20F 4889C3                  	mov rbx, rax
 14730 0000A212 58                      	pop rax
 14731 0000A213 C60004                  	mov byte [rax], T_closure
 14732 0000A216 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14733 0000A21A 48C74009[27A20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 14734 0000A222 E99E0F0000              	jmp .L_lambda_simple_end_004b
 14735                                  .L_lambda_simple_code_004b:	; lambda-simple body
 14736 0000A227 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14737 0000A22D 740B                    	je .L_lambda_simple_arity_check_ok_004b
 14738 0000A22F FF742410                	push qword [rsp + 8 * 2]
 14739 0000A233 6A01                    	push 1
 14740 0000A235 E935B80000              	jmp L_error_incorrect_arity_simple
 14741                                  .L_lambda_simple_arity_check_ok_004b:
 14742 0000A23A C8000000                	enter 0, 0
 14743                                  	; preparing a tail-call
 14744                                  	; preparing a non-tail-call
 14745 0000A23E 488B0425[220F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 14746 0000A246 803805                  	cmp byte [rax], T_undefined
 14747 0000A249 0F843AB70000            	je L_error_fvar_undefined
 14748 0000A24F 50                      	push rax
 14749 0000A250 488B0425[110F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 14750 0000A258 803805                  	cmp byte [rax], T_undefined
 14751 0000A25B 0F8428B70000            	je L_error_fvar_undefined
 14752 0000A261 50                      	push rax
 14753 0000A262 488B0425[330F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 14754 0000A26A 803805                  	cmp byte [rax], T_undefined
 14755 0000A26D 0F8416B70000            	je L_error_fvar_undefined
 14756 0000A273 50                      	push rax
 14757 0000A274 6A03                    	push 3	; arg count
 14758 0000A276 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 14759 0000A27A 803804                  	cmp byte [rax], T_closure
 14760 0000A27D 0F858AB70000            	jne L_error_non_closure
 14761 0000A283 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14762 0000A286 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14763 0000A289 50                      	push rax
 14764 0000A28A 6A01                    	push 1	; arg count
 14765 0000A28C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14766 0000A291 E820B80000              	call malloc
 14767 0000A296 50                      	push rax
 14768 0000A297 BF08000000              	mov rdi, 8 * 1	; new rib
 14769 0000A29C E815B80000              	call malloc
 14770 0000A2A1 50                      	push rax
 14771 0000A2A2 BF18000000              	mov rdi, 8 * 3	; extended env
 14772 0000A2A7 E80AB80000              	call malloc
 14773 0000A2AC 488B7D10                	mov rdi, ENV
 14774 0000A2B0 BE00000000              	mov rsi, 0
 14775 0000A2B5 BA01000000              	mov rdx, 1
 14776                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 14777 0000A2BA 4883FE02                	cmp rsi, 2
 14778 0000A2BE 7410                    	je .L_lambda_simple_env_end_004c
 14779 0000A2C0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14780 0000A2C4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14781 0000A2C8 48FFC6                  	inc rsi
 14782 0000A2CB 48FFC2                  	inc rdx
 14783 0000A2CE EBEA                    	jmp .L_lambda_simple_env_loop_004c
 14784                                  .L_lambda_simple_env_end_004c:
 14785 0000A2D0 5B                      	pop rbx
 14786 0000A2D1 BE00000000              	mov rsi, 0
 14787                                  .L_lambda_simple_params_loop_004c:	; copy params
 14788 0000A2D6 4883FE01                	cmp rsi, 1
 14789 0000A2DA 740E                    	je .L_lambda_simple_params_end_004c
 14790 0000A2DC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14791 0000A2E1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14792 0000A2E5 48FFC6                  	inc rsi
 14793 0000A2E8 EBEC                    	jmp .L_lambda_simple_params_loop_004c
 14794                                  .L_lambda_simple_params_end_004c:
 14795 0000A2EA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14796 0000A2ED 4889C3                  	mov rbx, rax
 14797 0000A2F0 58                      	pop rax
 14798 0000A2F1 C60004                  	mov byte [rax], T_closure
 14799 0000A2F4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14800 0000A2F8 48C74009[05A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 14801 0000A300 E96E0E0000              	jmp .L_lambda_simple_end_004c
 14802                                  .L_lambda_simple_code_004c:	; lambda-simple body
 14803 0000A305 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14804 0000A30B 740B                    	je .L_lambda_simple_arity_check_ok_004c
 14805 0000A30D FF742410                	push qword [rsp + 8 * 2]
 14806 0000A311 6A01                    	push 1
 14807 0000A313 E957B70000              	jmp L_error_incorrect_arity_simple
 14808                                  .L_lambda_simple_arity_check_ok_004c:
 14809 0000A318 C8000000                	enter 0, 0
 14810                                  	; preparing a tail-call
 14811                                  	; preparing a non-tail-call
 14812 0000A31C 488B0425[EF0E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 14813 0000A324 803805                  	cmp byte [rax], T_undefined
 14814 0000A327 0F845CB60000            	je L_error_fvar_undefined
 14815 0000A32D 50                      	push rax
 14816 0000A32E 488B0425[DE0E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 14817 0000A336 803805                  	cmp byte [rax], T_undefined
 14818 0000A339 0F844AB60000            	je L_error_fvar_undefined
 14819 0000A33F 50                      	push rax
 14820 0000A340 488B0425[000F0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 14821 0000A348 803805                  	cmp byte [rax], T_undefined
 14822 0000A34B 0F8438B60000            	je L_error_fvar_undefined
 14823 0000A351 50                      	push rax
 14824 0000A352 6A03                    	push 3	; arg count
 14825 0000A354 488B4510                	mov rax, ENV
 14826 0000A358 488B00                  	mov rax, qword [rax + 8 * 0]
 14827 0000A35B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 14828 0000A35E 803804                  	cmp byte [rax], T_closure
 14829 0000A361 0F85A6B60000            	jne L_error_non_closure
 14830 0000A367 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14831 0000A36A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14832 0000A36D 50                      	push rax
 14833 0000A36E 6A01                    	push 1	; arg count
 14834 0000A370 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14835 0000A375 E83CB70000              	call malloc
 14836 0000A37A 50                      	push rax
 14837 0000A37B BF08000000              	mov rdi, 8 * 1	; new rib
 14838 0000A380 E831B70000              	call malloc
 14839 0000A385 50                      	push rax
 14840 0000A386 BF20000000              	mov rdi, 8 * 4	; extended env
 14841 0000A38B E826B70000              	call malloc
 14842 0000A390 488B7D10                	mov rdi, ENV
 14843 0000A394 BE00000000              	mov rsi, 0
 14844 0000A399 BA01000000              	mov rdx, 1
 14845                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14846 0000A39E 4883FE03                	cmp rsi, 3
 14847 0000A3A2 7410                    	je .L_lambda_simple_env_end_004d
 14848 0000A3A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14849 0000A3A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14850 0000A3AC 48FFC6                  	inc rsi
 14851 0000A3AF 48FFC2                  	inc rdx
 14852 0000A3B2 EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14853                                  .L_lambda_simple_env_end_004d:
 14854 0000A3B4 5B                      	pop rbx
 14855 0000A3B5 BE00000000              	mov rsi, 0
 14856                                  .L_lambda_simple_params_loop_004d:	; copy params
 14857 0000A3BA 4883FE01                	cmp rsi, 1
 14858 0000A3BE 740E                    	je .L_lambda_simple_params_end_004d
 14859 0000A3C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14860 0000A3C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14861 0000A3C9 48FFC6                  	inc rsi
 14862 0000A3CC EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14863                                  .L_lambda_simple_params_end_004d:
 14864 0000A3CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14865 0000A3D1 4889C3                  	mov rbx, rax
 14866 0000A3D4 58                      	pop rax
 14867 0000A3D5 C60004                  	mov byte [rax], T_closure
 14868 0000A3D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14869 0000A3DC 48C74009[E9A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14870 0000A3E4 E9380D0000              	jmp .L_lambda_simple_end_004d
 14871                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14872 0000A3E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14873 0000A3EF 740B                    	je .L_lambda_simple_arity_check_ok_004d
 14874 0000A3F1 FF742410                	push qword [rsp + 8 * 2]
 14875 0000A3F5 6A01                    	push 1
 14876 0000A3F7 E973B60000              	jmp L_error_incorrect_arity_simple
 14877                                  .L_lambda_simple_arity_check_ok_004d:
 14878 0000A3FC C8000000                	enter 0, 0
 14879                                  	; preparing a tail-call
 14880 0000A400 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14881 0000A405 E8ACB60000              	call malloc
 14882 0000A40A 50                      	push rax
 14883 0000A40B BF08000000              	mov rdi, 8 * 1	; new rib
 14884 0000A410 E8A1B60000              	call malloc
 14885 0000A415 50                      	push rax
 14886 0000A416 BF28000000              	mov rdi, 8 * 5	; extended env
 14887 0000A41B E896B60000              	call malloc
 14888 0000A420 488B7D10                	mov rdi, ENV
 14889 0000A424 BE00000000              	mov rsi, 0
 14890 0000A429 BA01000000              	mov rdx, 1
 14891                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14892 0000A42E 4883FE04                	cmp rsi, 4
 14893 0000A432 7410                    	je .L_lambda_simple_env_end_004e
 14894 0000A434 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14895 0000A438 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14896 0000A43C 48FFC6                  	inc rsi
 14897 0000A43F 48FFC2                  	inc rdx
 14898 0000A442 EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14899                                  .L_lambda_simple_env_end_004e:
 14900 0000A444 5B                      	pop rbx
 14901 0000A445 BE00000000              	mov rsi, 0
 14902                                  .L_lambda_simple_params_loop_004e:	; copy params
 14903 0000A44A 4883FE01                	cmp rsi, 1
 14904 0000A44E 740E                    	je .L_lambda_simple_params_end_004e
 14905 0000A450 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14906 0000A455 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14907 0000A459 48FFC6                  	inc rsi
 14908 0000A45C EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14909                                  .L_lambda_simple_params_end_004e:
 14910 0000A45E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14911 0000A461 4889C3                  	mov rbx, rax
 14912 0000A464 58                      	pop rax
 14913 0000A465 C60004                  	mov byte [rax], T_closure
 14914 0000A468 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14915 0000A46C 48C74009[79A40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14916 0000A474 E9A3000000              	jmp .L_lambda_simple_end_004e
 14917                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14918 0000A479 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14919 0000A47F 740B                    	je .L_lambda_simple_arity_check_ok_004e
 14920 0000A481 FF742410                	push qword [rsp + 8 * 2]
 14921 0000A485 6A02                    	push 2
 14922 0000A487 E9E3B50000              	jmp L_error_incorrect_arity_simple
 14923                                  .L_lambda_simple_arity_check_ok_004e:
 14924 0000A48C C8000000                	enter 0, 0
 14925                                  	; preparing a tail-call
 14926                                  	; preparing a non-tail-call
 14927 0000A490 488B4528                	mov rax, PARAM(1)	; param b
 14928 0000A494 50                      	push rax
 14929 0000A495 488B4520                	mov rax, PARAM(0)	; param a
 14930 0000A499 50                      	push rax
 14931 0000A49A 6A02                    	push 2	; arg count
 14932 0000A49C 488B4510                	mov rax, ENV
 14933 0000A4A0 488B4008                	mov rax, qword [rax + 8 * 1]
 14934 0000A4A4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14935 0000A4A7 803804                  	cmp byte [rax], T_closure
 14936 0000A4AA 0F855DB50000            	jne L_error_non_closure
 14937 0000A4B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14938 0000A4B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14939 0000A4B6 50                      	push rax
 14940 0000A4B7 6A01                    	push 1	; arg count
 14941 0000A4B9 488B0425[D8140000]      	mov rax, qword [free_var_106]	; free var not
 14942 0000A4C1 803805                  	cmp byte [rax], T_undefined
 14943 0000A4C4 0F84BFB40000            	je L_error_fvar_undefined
 14944 0000A4CA 803804                  	cmp byte [rax], T_closure
 14945 0000A4CD 0F853AB50000            	jne L_error_non_closure
 14946 0000A4D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14947 0000A4D6 FF7508                  	push qword [rbp + 8 * 1]
 14948                                   ; old ret addr
 14949 0000A4D9 FF7500                  	push qword [rbp]
 14950                                   ; restore the old rbp
 14951 0000A4DC BB01000000              	mov rbx, 1
 14952 0000A4E1 4883C303                	add rbx, 3
 14953 0000A4E5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 14954 0000A4E9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 14955 0000A4EE 4C8D4DF8                	lea r9, [rbp - 8]
 14956 0000A4F2 B905000000              	mov rcx, 5
 14957                                  .L_tc_recycle_frame_loop_008c:
 14958 0000A4F7 4883F900                	cmp rcx, 0
 14959 0000A4FB 7413                    	je .L_tc_recycle_frame_done_008c
 14960 0000A4FD 4D8B11                  	mov r10, qword [r9]
 14961 0000A500 4D8910                  	mov qword [r8], r10
 14962 0000A503 4983E808                	sub r8, 8
 14963 0000A507 4983E908                	sub r9, 8
 14964 0000A50B 48FFC9                  	dec rcx
 14965 0000A50E EBE7                    	jmp .L_tc_recycle_frame_loop_008c
 14966                                  .L_tc_recycle_frame_done_008c:
 14967 0000A510 498D6008                	lea rsp, [r8 + 8]
 14968 0000A514 5D                      	pop rbp ; restore the old rbp
 14969 0000A515 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14970 0000A518 C9                      	leave
 14971 0000A519 C22000                  	ret AND_KILL_FRAME(2)
 14972                                  .L_lambda_simple_end_004e:	; new closure is in rax
 14973 0000A51C 50                      	push rax
 14974 0000A51D 6A01                    	push 1	; arg count
 14975 0000A51F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14976 0000A524 E88DB50000              	call malloc
 14977 0000A529 50                      	push rax
 14978 0000A52A BF08000000              	mov rdi, 8 * 1	; new rib
 14979 0000A52F E882B50000              	call malloc
 14980 0000A534 50                      	push rax
 14981 0000A535 BF28000000              	mov rdi, 8 * 5	; extended env
 14982 0000A53A E877B50000              	call malloc
 14983 0000A53F 488B7D10                	mov rdi, ENV
 14984 0000A543 BE00000000              	mov rsi, 0
 14985 0000A548 BA01000000              	mov rdx, 1
 14986                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14987 0000A54D 4883FE04                	cmp rsi, 4
 14988 0000A551 7410                    	je .L_lambda_simple_env_end_004f
 14989 0000A553 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14990 0000A557 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14991 0000A55B 48FFC6                  	inc rsi
 14992 0000A55E 48FFC2                  	inc rdx
 14993 0000A561 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14994                                  .L_lambda_simple_env_end_004f:
 14995 0000A563 5B                      	pop rbx
 14996 0000A564 BE00000000              	mov rsi, 0
 14997                                  .L_lambda_simple_params_loop_004f:	; copy params
 14998 0000A569 4883FE01                	cmp rsi, 1
 14999 0000A56D 740E                    	je .L_lambda_simple_params_end_004f
 15000 0000A56F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15001 0000A574 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15002 0000A578 48FFC6                  	inc rsi
 15003 0000A57B EBEC                    	jmp .L_lambda_simple_params_loop_004f
 15004                                  .L_lambda_simple_params_end_004f:
 15005 0000A57D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15006 0000A580 4889C3                  	mov rbx, rax
 15007 0000A583 58                      	pop rax
 15008 0000A584 C60004                  	mov byte [rax], T_closure
 15009 0000A587 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15010 0000A58B 48C74009[98A50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 15011 0000A593 E9370B0000              	jmp .L_lambda_simple_end_004f
 15012                                  .L_lambda_simple_code_004f:	; lambda-simple body
 15013 0000A598 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15014 0000A59E 740B                    	je .L_lambda_simple_arity_check_ok_004f
 15015 0000A5A0 FF742410                	push qword [rsp + 8 * 2]
 15016 0000A5A4 6A01                    	push 1
 15017 0000A5A6 E9C4B40000              	jmp L_error_incorrect_arity_simple
 15018                                  .L_lambda_simple_arity_check_ok_004f:
 15019 0000A5AB C8000000                	enter 0, 0
 15020                                  	; preparing a tail-call
 15021 0000A5AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15022 0000A5B4 E8FDB40000              	call malloc
 15023 0000A5B9 50                      	push rax
 15024 0000A5BA BF08000000              	mov rdi, 8 * 1	; new rib
 15025 0000A5BF E8F2B40000              	call malloc
 15026 0000A5C4 50                      	push rax
 15027 0000A5C5 BF30000000              	mov rdi, 8 * 6	; extended env
 15028 0000A5CA E8E7B40000              	call malloc
 15029 0000A5CF 488B7D10                	mov rdi, ENV
 15030 0000A5D3 BE00000000              	mov rsi, 0
 15031 0000A5D8 BA01000000              	mov rdx, 1
 15032                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 15033 0000A5DD 4883FE05                	cmp rsi, 5
 15034 0000A5E1 7410                    	je .L_lambda_simple_env_end_0050
 15035 0000A5E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15036 0000A5E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15037 0000A5EB 48FFC6                  	inc rsi
 15038 0000A5EE 48FFC2                  	inc rdx
 15039 0000A5F1 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 15040                                  .L_lambda_simple_env_end_0050:
 15041 0000A5F3 5B                      	pop rbx
 15042 0000A5F4 BE00000000              	mov rsi, 0
 15043                                  .L_lambda_simple_params_loop_0050:	; copy params
 15044 0000A5F9 4883FE01                	cmp rsi, 1
 15045 0000A5FD 740E                    	je .L_lambda_simple_params_end_0050
 15046 0000A5FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15047 0000A604 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15048 0000A608 48FFC6                  	inc rsi
 15049 0000A60B EBEC                    	jmp .L_lambda_simple_params_loop_0050
 15050                                  .L_lambda_simple_params_end_0050:
 15051 0000A60D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15052 0000A610 4889C3                  	mov rbx, rax
 15053 0000A613 58                      	pop rax
 15054 0000A614 C60004                  	mov byte [rax], T_closure
 15055 0000A617 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15056 0000A61B 48C74009[28A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 15057 0000A623 E980000000              	jmp .L_lambda_simple_end_0050
 15058                                  .L_lambda_simple_code_0050:	; lambda-simple body
 15059 0000A628 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15060 0000A62E 740B                    	je .L_lambda_simple_arity_check_ok_0050
 15061 0000A630 FF742410                	push qword [rsp + 8 * 2]
 15062 0000A634 6A02                    	push 2
 15063 0000A636 E934B40000              	jmp L_error_incorrect_arity_simple
 15064                                  .L_lambda_simple_arity_check_ok_0050:
 15065 0000A63B C8000000                	enter 0, 0
 15066                                  	; preparing a tail-call
 15067 0000A63F 488B4520                	mov rax, PARAM(0)	; param a
 15068 0000A643 50                      	push rax
 15069 0000A644 488B4528                	mov rax, PARAM(1)	; param b
 15070 0000A648 50                      	push rax
 15071 0000A649 6A02                    	push 2	; arg count
 15072 0000A64B 488B4510                	mov rax, ENV
 15073 0000A64F 488B4010                	mov rax, qword [rax + 8 * 2]
 15074 0000A653 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15075 0000A656 803804                  	cmp byte [rax], T_closure
 15076 0000A659 0F85AEB30000            	jne L_error_non_closure
 15077 0000A65F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15078 0000A662 FF7508                  	push qword [rbp + 8 * 1]
 15079                                   ; old ret addr
 15080 0000A665 FF7500                  	push qword [rbp]
 15081                                   ; restore the old rbp
 15082 0000A668 BB02000000              	mov rbx, 2
 15083 0000A66D 4883C303                	add rbx, 3
 15084 0000A671 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15085 0000A675 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15086 0000A67A 4C8D4DF8                	lea r9, [rbp - 8]
 15087 0000A67E B906000000              	mov rcx, 6
 15088                                  .L_tc_recycle_frame_loop_008e:
 15089 0000A683 4883F900                	cmp rcx, 0
 15090 0000A687 7413                    	je .L_tc_recycle_frame_done_008e
 15091 0000A689 4D8B11                  	mov r10, qword [r9]
 15092 0000A68C 4D8910                  	mov qword [r8], r10
 15093 0000A68F 4983E808                	sub r8, 8
 15094 0000A693 4983E908                	sub r9, 8
 15095 0000A697 48FFC9                  	dec rcx
 15096 0000A69A EBE7                    	jmp .L_tc_recycle_frame_loop_008e
 15097                                  .L_tc_recycle_frame_done_008e:
 15098 0000A69C 498D6008                	lea rsp, [r8 + 8]
 15099 0000A6A0 5D                      	pop rbp ; restore the old rbp
 15100 0000A6A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15101 0000A6A4 C9                      	leave
 15102 0000A6A5 C22000                  	ret AND_KILL_FRAME(2)
 15103                                  .L_lambda_simple_end_0050:	; new closure is in rax
 15104 0000A6A8 50                      	push rax
 15105 0000A6A9 6A01                    	push 1	; arg count
 15106 0000A6AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15107 0000A6B0 E801B40000              	call malloc
 15108 0000A6B5 50                      	push rax
 15109 0000A6B6 BF08000000              	mov rdi, 8 * 1	; new rib
 15110 0000A6BB E8F6B30000              	call malloc
 15111 0000A6C0 50                      	push rax
 15112 0000A6C1 BF30000000              	mov rdi, 8 * 6	; extended env
 15113 0000A6C6 E8EBB30000              	call malloc
 15114 0000A6CB 488B7D10                	mov rdi, ENV
 15115 0000A6CF BE00000000              	mov rsi, 0
 15116 0000A6D4 BA01000000              	mov rdx, 1
 15117                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 15118 0000A6D9 4883FE05                	cmp rsi, 5
 15119 0000A6DD 7410                    	je .L_lambda_simple_env_end_0051
 15120 0000A6DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15121 0000A6E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15122 0000A6E7 48FFC6                  	inc rsi
 15123 0000A6EA 48FFC2                  	inc rdx
 15124 0000A6ED EBEA                    	jmp .L_lambda_simple_env_loop_0051
 15125                                  .L_lambda_simple_env_end_0051:
 15126 0000A6EF 5B                      	pop rbx
 15127 0000A6F0 BE00000000              	mov rsi, 0
 15128                                  .L_lambda_simple_params_loop_0051:	; copy params
 15129 0000A6F5 4883FE01                	cmp rsi, 1
 15130 0000A6F9 740E                    	je .L_lambda_simple_params_end_0051
 15131 0000A6FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15132 0000A700 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15133 0000A704 48FFC6                  	inc rsi
 15134 0000A707 EBEC                    	jmp .L_lambda_simple_params_loop_0051
 15135                                  .L_lambda_simple_params_end_0051:
 15136 0000A709 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15137 0000A70C 4889C3                  	mov rbx, rax
 15138 0000A70F 58                      	pop rax
 15139 0000A710 C60004                  	mov byte [rax], T_closure
 15140 0000A713 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15141 0000A717 48C74009[24A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 15142 0000A71F E959090000              	jmp .L_lambda_simple_end_0051
 15143                                  .L_lambda_simple_code_0051:	; lambda-simple body
 15144 0000A724 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15145 0000A72A 740B                    	je .L_lambda_simple_arity_check_ok_0051
 15146 0000A72C FF742410                	push qword [rsp + 8 * 2]
 15147 0000A730 6A01                    	push 1
 15148 0000A732 E938B30000              	jmp L_error_incorrect_arity_simple
 15149                                  .L_lambda_simple_arity_check_ok_0051:
 15150 0000A737 C8000000                	enter 0, 0
 15151                                  	; preparing a tail-call
 15152 0000A73B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15153 0000A740 E871B30000              	call malloc
 15154 0000A745 50                      	push rax
 15155 0000A746 BF08000000              	mov rdi, 8 * 1	; new rib
 15156 0000A74B E866B30000              	call malloc
 15157 0000A750 50                      	push rax
 15158 0000A751 BF38000000              	mov rdi, 8 * 7	; extended env
 15159 0000A756 E85BB30000              	call malloc
 15160 0000A75B 488B7D10                	mov rdi, ENV
 15161 0000A75F BE00000000              	mov rsi, 0
 15162 0000A764 BA01000000              	mov rdx, 1
 15163                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 15164 0000A769 4883FE06                	cmp rsi, 6
 15165 0000A76D 7410                    	je .L_lambda_simple_env_end_0052
 15166 0000A76F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15167 0000A773 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15168 0000A777 48FFC6                  	inc rsi
 15169 0000A77A 48FFC2                  	inc rdx
 15170 0000A77D EBEA                    	jmp .L_lambda_simple_env_loop_0052
 15171                                  .L_lambda_simple_env_end_0052:
 15172 0000A77F 5B                      	pop rbx
 15173 0000A780 BE00000000              	mov rsi, 0
 15174                                  .L_lambda_simple_params_loop_0052:	; copy params
 15175 0000A785 4883FE01                	cmp rsi, 1
 15176 0000A789 740E                    	je .L_lambda_simple_params_end_0052
 15177 0000A78B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15178 0000A790 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15179 0000A794 48FFC6                  	inc rsi
 15180 0000A797 EBEC                    	jmp .L_lambda_simple_params_loop_0052
 15181                                  .L_lambda_simple_params_end_0052:
 15182 0000A799 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15183 0000A79C 4889C3                  	mov rbx, rax
 15184 0000A79F 58                      	pop rax
 15185 0000A7A0 C60004                  	mov byte [rax], T_closure
 15186 0000A7A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15187 0000A7A7 48C74009[B4A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 15188 0000A7AF E9A2000000              	jmp .L_lambda_simple_end_0052
 15189                                  .L_lambda_simple_code_0052:	; lambda-simple body
 15190 0000A7B4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15191 0000A7BA 740B                    	je .L_lambda_simple_arity_check_ok_0052
 15192 0000A7BC FF742410                	push qword [rsp + 8 * 2]
 15193 0000A7C0 6A02                    	push 2
 15194 0000A7C2 E9A8B20000              	jmp L_error_incorrect_arity_simple
 15195                                  .L_lambda_simple_arity_check_ok_0052:
 15196 0000A7C7 C8000000                	enter 0, 0
 15197                                  	; preparing a tail-call
 15198                                  	; preparing a non-tail-call
 15199 0000A7CB 488B4528                	mov rax, PARAM(1)	; param b
 15200 0000A7CF 50                      	push rax
 15201 0000A7D0 488B4520                	mov rax, PARAM(0)	; param a
 15202 0000A7D4 50                      	push rax
 15203 0000A7D5 6A02                    	push 2	; arg count
 15204 0000A7D7 488B4510                	mov rax, ENV
 15205 0000A7DB 488B00                  	mov rax, qword [rax + 8 * 0]
 15206 0000A7DE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15207 0000A7E1 803804                  	cmp byte [rax], T_closure
 15208 0000A7E4 0F8523B20000            	jne L_error_non_closure
 15209 0000A7EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 15210 0000A7ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 15211 0000A7F0 50                      	push rax
 15212 0000A7F1 6A01                    	push 1	; arg count
 15213 0000A7F3 488B0425[D8140000]      	mov rax, qword [free_var_106]	; free var not
 15214 0000A7FB 803805                  	cmp byte [rax], T_undefined
 15215 0000A7FE 0F8485B10000            	je L_error_fvar_undefined
 15216 0000A804 803804                  	cmp byte [rax], T_closure
 15217 0000A807 0F8500B20000            	jne L_error_non_closure
 15218 0000A80D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15219 0000A810 FF7508                  	push qword [rbp + 8 * 1]
 15220                                   ; old ret addr
 15221 0000A813 FF7500                  	push qword [rbp]
 15222                                   ; restore the old rbp
 15223 0000A816 BB01000000              	mov rbx, 1
 15224 0000A81B 4883C303                	add rbx, 3
 15225 0000A81F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15226 0000A823 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15227 0000A828 4C8D4DF8                	lea r9, [rbp - 8]
 15228 0000A82C B905000000              	mov rcx, 5
 15229                                  .L_tc_recycle_frame_loop_0090:
 15230 0000A831 4883F900                	cmp rcx, 0
 15231 0000A835 7413                    	je .L_tc_recycle_frame_done_0090
 15232 0000A837 4D8B11                  	mov r10, qword [r9]
 15233 0000A83A 4D8910                  	mov qword [r8], r10
 15234 0000A83D 4983E808                	sub r8, 8
 15235 0000A841 4983E908                	sub r9, 8
 15236 0000A845 48FFC9                  	dec rcx
 15237 0000A848 EBE7                    	jmp .L_tc_recycle_frame_loop_0090
 15238                                  .L_tc_recycle_frame_done_0090:
 15239 0000A84A 498D6008                	lea rsp, [r8 + 8]
 15240 0000A84E 5D                      	pop rbp ; restore the old rbp
 15241 0000A84F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15242 0000A852 C9                      	leave
 15243 0000A853 C22000                  	ret AND_KILL_FRAME(2)
 15244                                  .L_lambda_simple_end_0052:	; new closure is in rax
 15245 0000A856 50                      	push rax
 15246 0000A857 6A01                    	push 1	; arg count
 15247 0000A859 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15248 0000A85E E853B20000              	call malloc
 15249 0000A863 50                      	push rax
 15250 0000A864 BF08000000              	mov rdi, 8 * 1	; new rib
 15251 0000A869 E848B20000              	call malloc
 15252 0000A86E 50                      	push rax
 15253 0000A86F BF38000000              	mov rdi, 8 * 7	; extended env
 15254 0000A874 E83DB20000              	call malloc
 15255 0000A879 488B7D10                	mov rdi, ENV
 15256 0000A87D BE00000000              	mov rsi, 0
 15257 0000A882 BA01000000              	mov rdx, 1
 15258                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15259 0000A887 4883FE06                	cmp rsi, 6
 15260 0000A88B 7410                    	je .L_lambda_simple_env_end_0053
 15261 0000A88D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15262 0000A891 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15263 0000A895 48FFC6                  	inc rsi
 15264 0000A898 48FFC2                  	inc rdx
 15265 0000A89B EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15266                                  .L_lambda_simple_env_end_0053:
 15267 0000A89D 5B                      	pop rbx
 15268 0000A89E BE00000000              	mov rsi, 0
 15269                                  .L_lambda_simple_params_loop_0053:	; copy params
 15270 0000A8A3 4883FE01                	cmp rsi, 1
 15271 0000A8A7 740E                    	je .L_lambda_simple_params_end_0053
 15272 0000A8A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15273 0000A8AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15274 0000A8B2 48FFC6                  	inc rsi
 15275 0000A8B5 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15276                                  .L_lambda_simple_params_end_0053:
 15277 0000A8B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15278 0000A8BA 4889C3                  	mov rbx, rax
 15279 0000A8BD 58                      	pop rax
 15280 0000A8BE C60004                  	mov byte [rax], T_closure
 15281 0000A8C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15282 0000A8C5 48C74009[D2A80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15283 0000A8CD E959070000              	jmp .L_lambda_simple_end_0053
 15284                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15285 0000A8D2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15286 0000A8D8 740B                    	je .L_lambda_simple_arity_check_ok_0053
 15287 0000A8DA FF742410                	push qword [rsp + 8 * 2]
 15288 0000A8DE 6A01                    	push 1
 15289 0000A8E0 E98AB10000              	jmp L_error_incorrect_arity_simple
 15290                                  .L_lambda_simple_arity_check_ok_0053:
 15291 0000A8E5 C8000000                	enter 0, 0
 15292                                  	; preparing a tail-call
 15293 0000A8E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15294 0000A8EE E8C3B10000              	call malloc
 15295 0000A8F3 50                      	push rax
 15296 0000A8F4 BF08000000              	mov rdi, 8 * 1	; new rib
 15297 0000A8F9 E8B8B10000              	call malloc
 15298 0000A8FE 50                      	push rax
 15299 0000A8FF BF40000000              	mov rdi, 8 * 8	; extended env
 15300 0000A904 E8ADB10000              	call malloc
 15301 0000A909 488B7D10                	mov rdi, ENV
 15302 0000A90D BE00000000              	mov rsi, 0
 15303 0000A912 BA01000000              	mov rdx, 1
 15304                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15305 0000A917 4883FE07                	cmp rsi, 7
 15306 0000A91B 7410                    	je .L_lambda_simple_env_end_0054
 15307 0000A91D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15308 0000A921 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15309 0000A925 48FFC6                  	inc rsi
 15310 0000A928 48FFC2                  	inc rdx
 15311 0000A92B EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15312                                  .L_lambda_simple_env_end_0054:
 15313 0000A92D 5B                      	pop rbx
 15314 0000A92E BE00000000              	mov rsi, 0
 15315                                  .L_lambda_simple_params_loop_0054:	; copy params
 15316 0000A933 4883FE01                	cmp rsi, 1
 15317 0000A937 740E                    	je .L_lambda_simple_params_end_0054
 15318 0000A939 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15319 0000A93E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15320 0000A942 48FFC6                  	inc rsi
 15321 0000A945 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15322                                  .L_lambda_simple_params_end_0054:
 15323 0000A947 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15324 0000A94A 4889C3                  	mov rbx, rax
 15325 0000A94D 58                      	pop rax
 15326 0000A94E C60004                  	mov byte [rax], T_closure
 15327 0000A951 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15328 0000A955 48C74009[62A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15329 0000A95D E9E2040000              	jmp .L_lambda_simple_end_0054
 15330                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15331 0000A962 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15332 0000A968 740B                    	je .L_lambda_simple_arity_check_ok_0054
 15333 0000A96A FF742410                	push qword [rsp + 8 * 2]
 15334 0000A96E 6A01                    	push 1
 15335 0000A970 E9FAB00000              	jmp L_error_incorrect_arity_simple
 15336                                  .L_lambda_simple_arity_check_ok_0054:
 15337 0000A975 C8000000                	enter 0, 0
 15338                                  	; preparing a tail-call
 15339 0000A979 48B8-                   	mov rax, L_constants + 1993
 15339 0000A97B [C907000000000000] 
 15340 0000A983 50                      	push rax
 15341 0000A984 6A01                    	push 1	; arg count
 15342 0000A986 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15343 0000A98B E826B10000              	call malloc
 15344 0000A990 50                      	push rax
 15345 0000A991 BF08000000              	mov rdi, 8 * 1	; new rib
 15346 0000A996 E81BB10000              	call malloc
 15347 0000A99B 50                      	push rax
 15348 0000A99C BF48000000              	mov rdi, 8 * 9	; extended env
 15349 0000A9A1 E810B10000              	call malloc
 15350 0000A9A6 488B7D10                	mov rdi, ENV
 15351 0000A9AA BE00000000              	mov rsi, 0
 15352 0000A9AF BA01000000              	mov rdx, 1
 15353                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15354 0000A9B4 4883FE08                	cmp rsi, 8
 15355 0000A9B8 7410                    	je .L_lambda_simple_env_end_0055
 15356 0000A9BA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15357 0000A9BE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15358 0000A9C2 48FFC6                  	inc rsi
 15359 0000A9C5 48FFC2                  	inc rdx
 15360 0000A9C8 EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15361                                  .L_lambda_simple_env_end_0055:
 15362 0000A9CA 5B                      	pop rbx
 15363 0000A9CB BE00000000              	mov rsi, 0
 15364                                  .L_lambda_simple_params_loop_0055:	; copy params
 15365 0000A9D0 4883FE01                	cmp rsi, 1
 15366 0000A9D4 740E                    	je .L_lambda_simple_params_end_0055
 15367 0000A9D6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15368 0000A9DB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15369 0000A9DF 48FFC6                  	inc rsi
 15370 0000A9E2 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15371                                  .L_lambda_simple_params_end_0055:
 15372 0000A9E4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15373 0000A9E7 4889C3                  	mov rbx, rax
 15374 0000A9EA 58                      	pop rax
 15375 0000A9EB C60004                  	mov byte [rax], T_closure
 15376 0000A9EE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15377 0000A9F2 48C74009[FFA90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15378 0000A9FA E9F3030000              	jmp .L_lambda_simple_end_0055
 15379                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15380 0000A9FF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15381 0000AA05 740B                    	je .L_lambda_simple_arity_check_ok_0055
 15382 0000AA07 FF742410                	push qword [rsp + 8 * 2]
 15383 0000AA0B 6A01                    	push 1
 15384 0000AA0D E95DB00000              	jmp L_error_incorrect_arity_simple
 15385                                  .L_lambda_simple_arity_check_ok_0055:
 15386 0000AA12 C8000000                	enter 0, 0
 15387 0000AA16 BF08000000              	mov rdi, 8*1
 15388 0000AA1B E896B00000              	call malloc
 15389 0000AA20 488B5D20                	mov rbx, PARAM(0)
 15390 0000AA24 488918                  	mov qword [rax], rbx
 15391 0000AA27 48894520                	mov PARAM(0), rax
 15392 0000AA2B 48B8-                   	mov rax, sob_void
 15392 0000AA2D [0000000000000000] 
 15393                                  
 15394 0000AA35 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15395 0000AA3A E877B00000              	call malloc
 15396 0000AA3F 50                      	push rax
 15397 0000AA40 BF08000000              	mov rdi, 8 * 1	; new rib
 15398 0000AA45 E86CB00000              	call malloc
 15399 0000AA4A 50                      	push rax
 15400 0000AA4B BF50000000              	mov rdi, 8 * 10	; extended env
 15401 0000AA50 E861B00000              	call malloc
 15402 0000AA55 488B7D10                	mov rdi, ENV
 15403 0000AA59 BE00000000              	mov rsi, 0
 15404 0000AA5E BA01000000              	mov rdx, 1
 15405                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15406 0000AA63 4883FE09                	cmp rsi, 9
 15407 0000AA67 7410                    	je .L_lambda_simple_env_end_0056
 15408 0000AA69 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15409 0000AA6D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15410 0000AA71 48FFC6                  	inc rsi
 15411 0000AA74 48FFC2                  	inc rdx
 15412 0000AA77 EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15413                                  .L_lambda_simple_env_end_0056:
 15414 0000AA79 5B                      	pop rbx
 15415 0000AA7A BE00000000              	mov rsi, 0
 15416                                  .L_lambda_simple_params_loop_0056:	; copy params
 15417 0000AA7F 4883FE01                	cmp rsi, 1
 15418 0000AA83 740E                    	je .L_lambda_simple_params_end_0056
 15419 0000AA85 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15420 0000AA8A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15421 0000AA8E 48FFC6                  	inc rsi
 15422 0000AA91 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15423                                  .L_lambda_simple_params_end_0056:
 15424 0000AA93 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15425 0000AA96 4889C3                  	mov rbx, rax
 15426 0000AA99 58                      	pop rax
 15427 0000AA9A C60004                  	mov byte [rax], T_closure
 15428 0000AA9D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15429 0000AAA1 48C74009[AEAA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15430 0000AAA9 E95C010000              	jmp .L_lambda_simple_end_0056
 15431                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15432 0000AAAE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15433 0000AAB4 740B                    	je .L_lambda_simple_arity_check_ok_0056
 15434 0000AAB6 FF742410                	push qword [rsp + 8 * 2]
 15435 0000AABA 6A02                    	push 2
 15436 0000AABC E9AEAF0000              	jmp L_error_incorrect_arity_simple
 15437                                  .L_lambda_simple_arity_check_ok_0056:
 15438 0000AAC1 C8000000                	enter 0, 0
 15439                                  	; preparing a non-tail-call
 15440 0000AAC5 488B4528                	mov rax, PARAM(1)	; param s
 15441 0000AAC9 50                      	push rax
 15442 0000AACA 6A01                    	push 1	; arg count
 15443 0000AACC 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 15444 0000AAD4 803805                  	cmp byte [rax], T_undefined
 15445 0000AAD7 0F84ACAE0000            	je L_error_fvar_undefined
 15446 0000AADD 803804                  	cmp byte [rax], T_closure
 15447 0000AAE0 0F8527AF0000            	jne L_error_non_closure
 15448 0000AAE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15449 0000AAE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15450 0000AAEC 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 15451 0000AAF2 0F850E010000            	jne .L_or_end_0006; if its not false (true) then we need to return it and not the last element
 15452                                  	; preparing a non-tail-call
 15453                                  	; preparing a non-tail-call
 15454 0000AAF8 488B4528                	mov rax, PARAM(1)	; param s
 15455 0000AAFC 50                      	push rax
 15456 0000AAFD 6A01                    	push 1	; arg count
 15457 0000AAFF 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 15458 0000AB07 803805                  	cmp byte [rax], T_undefined
 15459 0000AB0A 0F8479AE0000            	je L_error_fvar_undefined
 15460 0000AB10 803804                  	cmp byte [rax], T_closure
 15461 0000AB13 0F85F4AE0000            	jne L_error_non_closure
 15462 0000AB19 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15463 0000AB1C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15464 0000AB1F 50                      	push rax
 15465 0000AB20 488B4520                	mov rax, PARAM(0)	; param a
 15466 0000AB24 50                      	push rax
 15467 0000AB25 6A02                    	push 2	; arg count
 15468 0000AB27 488B4510                	mov rax, ENV
 15469 0000AB2B 488B4008                	mov rax, qword [rax + 8 * 1]
 15470 0000AB2F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15471 0000AB32 803804                  	cmp byte [rax], T_closure
 15472 0000AB35 0F85D2AE0000            	jne L_error_non_closure
 15473 0000AB3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15474 0000AB3E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15475 0000AB41 483D[02000000]          	cmp rax, sob_boolean_false
 15476 0000AB47 0F84AF000000            	je .L_if_else_0050
 15477                                  	; preparing a tail-call
 15478                                  	; preparing a non-tail-call
 15479 0000AB4D 488B4528                	mov rax, PARAM(1)	; param s
 15480 0000AB51 50                      	push rax
 15481 0000AB52 6A01                    	push 1	; arg count
 15482 0000AB54 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 15483 0000AB5C 803805                  	cmp byte [rax], T_undefined
 15484 0000AB5F 0F8424AE0000            	je L_error_fvar_undefined
 15485 0000AB65 803804                  	cmp byte [rax], T_closure
 15486 0000AB68 0F859FAE0000            	jne L_error_non_closure
 15487 0000AB6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15488 0000AB71 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15489 0000AB74 50                      	push rax
 15490                                  	; preparing a non-tail-call
 15491 0000AB75 488B4528                	mov rax, PARAM(1)	; param s
 15492 0000AB79 50                      	push rax
 15493 0000AB7A 6A01                    	push 1	; arg count
 15494 0000AB7C 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 15495 0000AB84 803805                  	cmp byte [rax], T_undefined
 15496 0000AB87 0F84FCAD0000            	je L_error_fvar_undefined
 15497 0000AB8D 803804                  	cmp byte [rax], T_closure
 15498 0000AB90 0F8577AE0000            	jne L_error_non_closure
 15499 0000AB96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15500 0000AB99 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15501 0000AB9C 50                      	push rax
 15502 0000AB9D 6A02                    	push 2	; arg count
 15503 0000AB9F 488B4510                	mov rax, ENV
 15504 0000ABA3 488B00                  	mov rax, qword [rax + 8 * 0]
 15505 0000ABA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15506 0000ABA9 488B00                  	mov rax, qword [rax]
 15507 0000ABAC 803804                  	cmp byte [rax], T_closure
 15508 0000ABAF 0F8558AE0000            	jne L_error_non_closure
 15509 0000ABB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15510 0000ABB8 FF7508                  	push qword [rbp + 8 * 1]
 15511                                   ; old ret addr
 15512 0000ABBB FF7500                  	push qword [rbp]
 15513                                   ; restore the old rbp
 15514 0000ABBE BB02000000              	mov rbx, 2
 15515 0000ABC3 4883C303                	add rbx, 3
 15516 0000ABC7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15517 0000ABCB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15518 0000ABD0 4C8D4DF8                	lea r9, [rbp - 8]
 15519 0000ABD4 B906000000              	mov rcx, 6
 15520                                  .L_tc_recycle_frame_loop_0093:
 15521 0000ABD9 4883F900                	cmp rcx, 0
 15522 0000ABDD 7413                    	je .L_tc_recycle_frame_done_0093
 15523 0000ABDF 4D8B11                  	mov r10, qword [r9]
 15524 0000ABE2 4D8910                  	mov qword [r8], r10
 15525 0000ABE5 4983E808                	sub r8, 8
 15526 0000ABE9 4983E908                	sub r9, 8
 15527 0000ABED 48FFC9                  	dec rcx
 15528 0000ABF0 EBE7                    	jmp .L_tc_recycle_frame_loop_0093
 15529                                  .L_tc_recycle_frame_done_0093:
 15530 0000ABF2 498D6008                	lea rsp, [r8 + 8]
 15531 0000ABF6 5D                      	pop rbp ; restore the old rbp
 15532 0000ABF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15533 0000ABFA EB0A                    	jmp .L_if_end_0050
 15534                                  .L_if_else_0050:
 15535 0000ABFC 48B8-                   	mov rax, L_constants + 2
 15535 0000ABFE [0200000000000000] 
 15536                                  .L_if_end_0050:
 15537                                  .L_or_end_0006:
 15538 0000AC06 C9                      	leave
 15539 0000AC07 C22000                  	ret AND_KILL_FRAME(2)
 15540                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15541 0000AC0A 50                      	push rax
 15542 0000AC0B 488B4520                	mov rax, PARAM(0)	; param run
 15543 0000AC0F 8F00                    	pop qword [rax]
 15544 0000AC11 48B8-                   	mov rax, sob_void
 15544 0000AC13 [0000000000000000] 
 15545                                  
 15546 0000AC1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15547 0000AC20 E891AE0000              	call malloc
 15548 0000AC25 50                      	push rax
 15549 0000AC26 BF08000000              	mov rdi, 8 * 1	; new rib
 15550 0000AC2B E886AE0000              	call malloc
 15551 0000AC30 50                      	push rax
 15552 0000AC31 BF50000000              	mov rdi, 8 * 10	; extended env
 15553 0000AC36 E87BAE0000              	call malloc
 15554 0000AC3B 488B7D10                	mov rdi, ENV
 15555 0000AC3F 4831F6                  	 xor rsi, rsi
 15556 0000AC42 4831D2                  	 xor rdx, rdx
 15557 0000AC45 48FFC2                  	inc rdx
 15558                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 15559 0000AC48 4883FE09                	cmp rsi, 9
 15560 0000AC4C 7410                    	je .L_lambda_opt_env_end_000e
 15561 0000AC4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15562 0000AC52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15563 0000AC56 48FFC6                  	inc rsi
 15564 0000AC59 48FFC2                  	inc rdx
 15565 0000AC5C EBEA                    	jmp .L_lambda_opt_env_loop_000e
 15566                                  .L_lambda_opt_env_end_000e:
 15567 0000AC5E 5B                      	pop rbx
 15568 0000AC5F 4831F6                  	xor rsi, rsi
 15569                                  .L_lambda_opt_params_loop_000e:	; copy params
 15570 0000AC62 4883FE01                	cmp rsi, 1
 15571 0000AC66 740E                    	je .L_lambda_opt_params_end_000e
 15572 0000AC68 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15573 0000AC6D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15574 0000AC71 48FFC6                  	inc rsi
 15575 0000AC74 EBEC                    	jmp .L_lambda_opt_params_loop_000e
 15576                                  .L_lambda_opt_params_end_000e:
 15577 0000AC76 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15578 0000AC79 4889C3                  	mov rbx, rax
 15579 0000AC7C 58                      	pop rax
 15580 0000AC7D C60004                  	mov byte [rax], T_closure
 15581 0000AC80 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15582 0000AC84 48C74009[91AC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 15583 0000AC8C E95D010000              	jmp .L_lambda_opt_end_000e
 15584                                  .L_lambda_opt_code_000e:; lambda opt body
 15585 0000AC91 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15586 0000AC97 7409                    	je .L_lambda_opt_arity_check_exact_000e
 15587 0000AC99 7F57                    	jg .L_lambda_opt_arity_check_more_000e
 15588 0000AC9B 6A01                    	push 1
 15589 0000AC9D E9E1AD0000              	jmp L_error_incorrect_arity_opt
 15590                                  .L_lambda_opt_arity_check_exact_000e:
 15591 0000ACA2 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 15592 0000ACA6 4C894C24F8              	mov qword [rsp -8], r9
 15593 0000ACAB 4C8B4C2408              	mov r9, qword [rsp +8]
 15594 0000ACB0 4C890C24                	mov qword [rsp +8 * 0], r9
 15595 0000ACB4 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 15596 0000ACB9 4C89C9                  	mov rcx, r9
 15597 0000ACBC 49FFC1                  	inc r9
 15598 0000ACBF 4C894C2408              	mov qword [rsp +8], r9
 15599 0000ACC4 4889E2                  	mov rdx, rsp
 15600 0000ACC7 4883C218                	add rdx, 24
 15601                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000e:
 15602 0000ACCB 4883F900                	cmp rcx, 0
 15603 0000ACCF 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000e
 15604 0000ACD1 4C8B02                  	mov r8, qword [rdx]
 15605 0000ACD4 4C8942F8                	mov qword [rdx - 8], r8
 15606 0000ACD8 4883C208                	add rdx, 8
 15607 0000ACDC 48FFC9                  	dec rcx
 15608 0000ACDF EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000e
 15609                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000e:
 15610 0000ACE1 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 15611 0000ACE9 4883EC08                	sub rsp, 8
 15612 0000ACED E984000000              	jmp .L_lambda_opt_stack_adjusted_000e
 15613                                  .L_lambda_opt_arity_check_more_000e:
 15614 0000ACF2 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 15615 0000ACF7 4D89C4                  	mov r12, r8
 15616 0000ACFA 4C89C1                  	mov rcx, r8
 15617 0000ACFD 4D8D5002                	lea r10, [r8 + 2] 
 15618 0000AD01 4883E901                	sub rcx, 1
 15619 0000AD05 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 15620 0000AD0A 49B9-                   	mov r9, sob_nil
 15620 0000AD0C [0100000000000000] 
 15621                                  .L_lambda_opt_create_list_of_opt_params_000e:
 15622 0000AD14 4883F900                	cmp rcx, 0
 15623 0000AD18 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000e
 15624 0000AD1A BF11000000              	mov rdi, 17
 15625 0000AD1F E892AD0000              	call malloc
 15626 0000AD24 C60021                  	mov byte [rax], T_pair
 15627 0000AD27 498B1B                  	mov rbx, qword [r11]
 15628 0000AD2A 48895801                	mov qword [rax +1], rbx
 15629 0000AD2E 4C894809                	mov qword [rax + 1 + 8], r9
 15630 0000AD32 4989C1                  	mov r9, rax
 15631 0000AD35 48FFC9                  	dec rcx
 15632 0000AD38 4983EB08                	sub r11, 8
 15633 0000AD3C EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000e
 15634                                  .L_lambda_opt_create_list_of_opt_params_end_000e:
 15635 0000AD3E 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 15636 0000AD43 4D8908                  	mov qword [r8], r9
 15637 0000AD46 4E8D14D500000000        	lea r10, [8 * r10]
 15638 0000AD4E 4901E2                  	add r10, rsp
 15639 0000AD51 B905000000              	mov rcx, 4 + 1
 15640                                  .L_lambda_opt_stack_shrink_loop_000e:
 15641 0000AD56 4883F900                	cmp rcx, 0
 15642 0000AD5A 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000e
 15643 0000AD5C 4D8B18                  	mov r11, qword [r8]
 15644 0000AD5F 4D891A                  	mov qword [r10], r11
 15645 0000AD62 4983E808                	sub r8, 8
 15646 0000AD66 4983EA08                	sub r10, 8
 15647 0000AD6A 48FFC9                  	dec rcx
 15648 0000AD6D EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15649                                  .L_lambda_opt_stack_shrink_loop_exit_000e:
 15650 0000AD6F 4983C208                	add r10, 8
 15651 0000AD73 4C89D4                  	mov rsp, r10
 15652                                  .L_lambda_opt_stack_adjusted_000e:;continue with the code, the stack is ok
 15653 0000AD76 48C744241002000000      	mov qword [rsp + 8*2], 2
 15654 0000AD7F C8000000                	enter 0, 0
 15655                                  	; preparing a tail-call
 15656 0000AD83 488B4528                	mov rax, PARAM(1)	; param s
 15657 0000AD87 50                      	push rax
 15658 0000AD88 488B4520                	mov rax, PARAM(0)	; param a
 15659 0000AD8C 50                      	push rax
 15660 0000AD8D 6A02                    	push 2	; arg count
 15661 0000AD8F 488B4510                	mov rax, ENV
 15662 0000AD93 488B00                  	mov rax, qword [rax + 8 * 0]
 15663 0000AD96 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15664 0000AD99 488B00                  	mov rax, qword [rax]
 15665 0000AD9C 803804                  	cmp byte [rax], T_closure
 15666 0000AD9F 0F8568AC0000            	jne L_error_non_closure
 15667 0000ADA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15668 0000ADA8 FF7508                  	push qword [rbp + 8 * 1]
 15669                                   ; old ret addr
 15670 0000ADAB FF7500                  	push qword [rbp]
 15671                                   ; restore the old rbp
 15672 0000ADAE BB02000000              	mov rbx, 2
 15673 0000ADB3 4883C303                	add rbx, 3
 15674 0000ADB7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15675 0000ADBB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15676 0000ADC0 4C8D4DF8                	lea r9, [rbp - 8]
 15677 0000ADC4 B906000000              	mov rcx, 6
 15678                                  .L_tc_recycle_frame_loop_0094:
 15679 0000ADC9 4883F900                	cmp rcx, 0
 15680 0000ADCD 7413                    	je .L_tc_recycle_frame_done_0094
 15681 0000ADCF 4D8B11                  	mov r10, qword [r9]
 15682 0000ADD2 4D8910                  	mov qword [r8], r10
 15683 0000ADD5 4983E808                	sub r8, 8
 15684 0000ADD9 4983E908                	sub r9, 8
 15685 0000ADDD 48FFC9                  	dec rcx
 15686 0000ADE0 EBE7                    	jmp .L_tc_recycle_frame_loop_0094
 15687                                  .L_tc_recycle_frame_done_0094:
 15688 0000ADE2 498D6008                	lea rsp, [r8 + 8]
 15689 0000ADE6 5D                      	pop rbp ; restore the old rbp
 15690 0000ADE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15691 0000ADEA C9                      	leave
 15692 0000ADEB C22000                  	ret 8 * (2 + 2)
 15693                                  .L_lambda_opt_end_000e:	; new closure is in rax
 15694 0000ADEE C9                      	leave
 15695 0000ADEF C21800                  	ret AND_KILL_FRAME(1)
 15696                                  .L_lambda_simple_end_0055:	; new closure is in rax
 15697 0000ADF2 803804                  	cmp byte [rax], T_closure
 15698 0000ADF5 0F8512AC0000            	jne L_error_non_closure
 15699 0000ADFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15700 0000ADFE FF7508                  	push qword [rbp + 8 * 1]
 15701                                   ; old ret addr
 15702 0000AE01 FF7500                  	push qword [rbp]
 15703                                   ; restore the old rbp
 15704 0000AE04 BB01000000              	mov rbx, 1
 15705 0000AE09 4883C303                	add rbx, 3
 15706 0000AE0D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15707 0000AE11 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15708 0000AE16 4C8D4DF8                	lea r9, [rbp - 8]
 15709 0000AE1A B905000000              	mov rcx, 5
 15710                                  .L_tc_recycle_frame_loop_0092:
 15711 0000AE1F 4883F900                	cmp rcx, 0
 15712 0000AE23 7413                    	je .L_tc_recycle_frame_done_0092
 15713 0000AE25 4D8B11                  	mov r10, qword [r9]
 15714 0000AE28 4D8910                  	mov qword [r8], r10
 15715 0000AE2B 4983E808                	sub r8, 8
 15716 0000AE2F 4983E908                	sub r9, 8
 15717 0000AE33 48FFC9                  	dec rcx
 15718 0000AE36 EBE7                    	jmp .L_tc_recycle_frame_loop_0092
 15719                                  .L_tc_recycle_frame_done_0092:
 15720 0000AE38 498D6008                	lea rsp, [r8 + 8]
 15721 0000AE3C 5D                      	pop rbp ; restore the old rbp
 15722 0000AE3D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15723 0000AE40 C9                      	leave
 15724 0000AE41 C21800                  	ret AND_KILL_FRAME(1)
 15725                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15726 0000AE44 50                      	push rax
 15727 0000AE45 6A01                    	push 1	; arg count
 15728 0000AE47 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15729 0000AE4C E865AC0000              	call malloc
 15730 0000AE51 50                      	push rax
 15731 0000AE52 BF08000000              	mov rdi, 8 * 1	; new rib
 15732 0000AE57 E85AAC0000              	call malloc
 15733 0000AE5C 50                      	push rax
 15734 0000AE5D BF40000000              	mov rdi, 8 * 8	; extended env
 15735 0000AE62 E84FAC0000              	call malloc
 15736 0000AE67 488B7D10                	mov rdi, ENV
 15737 0000AE6B BE00000000              	mov rsi, 0
 15738 0000AE70 BA01000000              	mov rdx, 1
 15739                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15740 0000AE75 4883FE07                	cmp rsi, 7
 15741 0000AE79 7410                    	je .L_lambda_simple_env_end_0057
 15742 0000AE7B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15743 0000AE7F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15744 0000AE83 48FFC6                  	inc rsi
 15745 0000AE86 48FFC2                  	inc rdx
 15746 0000AE89 EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15747                                  .L_lambda_simple_env_end_0057:
 15748 0000AE8B 5B                      	pop rbx
 15749 0000AE8C BE00000000              	mov rsi, 0
 15750                                  .L_lambda_simple_params_loop_0057:	; copy params
 15751 0000AE91 4883FE01                	cmp rsi, 1
 15752 0000AE95 740E                    	je .L_lambda_simple_params_end_0057
 15753 0000AE97 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15754 0000AE9C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15755 0000AEA0 48FFC6                  	inc rsi
 15756 0000AEA3 EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15757                                  .L_lambda_simple_params_end_0057:
 15758 0000AEA5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15759 0000AEA8 4889C3                  	mov rbx, rax
 15760 0000AEAB 58                      	pop rax
 15761 0000AEAC C60004                  	mov byte [rax], T_closure
 15762 0000AEAF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15763 0000AEB3 48C74009[C0AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15764 0000AEBB E919010000              	jmp .L_lambda_simple_end_0057
 15765                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15766 0000AEC0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15767 0000AEC6 740B                    	je .L_lambda_simple_arity_check_ok_0057
 15768 0000AEC8 FF742410                	push qword [rsp + 8 * 2]
 15769 0000AECC 6A01                    	push 1
 15770 0000AECE E99CAB0000              	jmp L_error_incorrect_arity_simple
 15771                                  .L_lambda_simple_arity_check_ok_0057:
 15772 0000AED3 C8000000                	enter 0, 0
 15773                                  	; preparing a non-tail-call
 15774 0000AED7 488B4510                	mov rax, ENV
 15775 0000AEDB 488B4020                	mov rax, qword [rax + 8 * 4]
 15776 0000AEDF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15777 0000AEE2 50                      	push rax
 15778 0000AEE3 6A01                    	push 1	; arg count
 15779 0000AEE5 488B4520                	mov rax, PARAM(0)	; param make-run
 15780 0000AEE9 803804                  	cmp byte [rax], T_closure
 15781 0000AEEC 0F851BAB0000            	jne L_error_non_closure
 15782 0000AEF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15783 0000AEF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15784 0000AEF8 48890425[120E0000]      	mov qword [free_var_4], rax
 15785 0000AF00 48B8-                   	mov rax, sob_void
 15785 0000AF02 [0000000000000000] 
 15786                                  
 15787                                  	; preparing a non-tail-call
 15788 0000AF0A 488B4510                	mov rax, ENV
 15789 0000AF0E 488B00                  	mov rax, qword [rax + 8 * 0]
 15790 0000AF11 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 15791 0000AF14 50                      	push rax
 15792 0000AF15 6A01                    	push 1	; arg count
 15793 0000AF17 488B4520                	mov rax, PARAM(0)	; param make-run
 15794 0000AF1B 803804                  	cmp byte [rax], T_closure
 15795 0000AF1E 0F85E9AA0000            	jne L_error_non_closure
 15796 0000AF24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15797 0000AF27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15798 0000AF2A 48890425[230E0000]      	mov qword [free_var_5], rax
 15799 0000AF32 48B8-                   	mov rax, sob_void
 15799 0000AF34 [0000000000000000] 
 15800                                  
 15801                                  	; preparing a non-tail-call
 15802 0000AF3C 488B4510                	mov rax, ENV
 15803 0000AF40 488B4008                	mov rax, qword [rax + 8 * 1]
 15804 0000AF44 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15805 0000AF47 50                      	push rax
 15806 0000AF48 6A01                    	push 1	; arg count
 15807 0000AF4A 488B4520                	mov rax, PARAM(0)	; param make-run
 15808 0000AF4E 803804                  	cmp byte [rax], T_closure
 15809 0000AF51 0F85B6AA0000            	jne L_error_non_closure
 15810 0000AF57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15811 0000AF5A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15812 0000AF5D 48890425[450E0000]      	mov qword [free_var_7], rax
 15813 0000AF65 48B8-                   	mov rax, sob_void
 15813 0000AF67 [0000000000000000] 
 15814                                  
 15815                                  	; preparing a non-tail-call
 15816 0000AF6F 488B4510                	mov rax, ENV
 15817 0000AF73 488B4010                	mov rax, qword [rax + 8 * 2]
 15818 0000AF77 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 15819 0000AF7A 50                      	push rax
 15820 0000AF7B 6A01                    	push 1	; arg count
 15821 0000AF7D 488B4520                	mov rax, PARAM(0)	; param make-run
 15822 0000AF81 803804                  	cmp byte [rax], T_closure
 15823 0000AF84 0F8583AA0000            	jne L_error_non_closure
 15824 0000AF8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15825 0000AF8D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15826 0000AF90 48890425[560E0000]      	mov qword [free_var_8], rax
 15827 0000AF98 48B8-                   	mov rax, sob_void
 15827 0000AF9A [0000000000000000] 
 15828                                  
 15829                                  	; preparing a non-tail-call
 15830 0000AFA2 488B4510                	mov rax, ENV
 15831 0000AFA6 488B4018                	mov rax, qword [rax + 8 * 3]
 15832 0000AFAA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 15833 0000AFAD 50                      	push rax
 15834 0000AFAE 6A01                    	push 1	; arg count
 15835 0000AFB0 488B4520                	mov rax, PARAM(0)	; param make-run
 15836 0000AFB4 803804                  	cmp byte [rax], T_closure
 15837 0000AFB7 0F8550AA0000            	jne L_error_non_closure
 15838 0000AFBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 15839 0000AFC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15840 0000AFC3 48890425[340E0000]      	mov qword [free_var_6], rax
 15841 0000AFCB 48B8-                   	mov rax, sob_void
 15841 0000AFCD [0000000000000000] 
 15842 0000AFD5 C9                      	leave
 15843 0000AFD6 C21800                  	ret AND_KILL_FRAME(1)
 15844                                  .L_lambda_simple_end_0057:	; new closure is in rax
 15845 0000AFD9 803804                  	cmp byte [rax], T_closure
 15846 0000AFDC 0F852BAA0000            	jne L_error_non_closure
 15847 0000AFE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15848 0000AFE5 FF7508                  	push qword [rbp + 8 * 1]
 15849                                   ; old ret addr
 15850 0000AFE8 FF7500                  	push qword [rbp]
 15851                                   ; restore the old rbp
 15852 0000AFEB BB01000000              	mov rbx, 1
 15853 0000AFF0 4883C303                	add rbx, 3
 15854 0000AFF4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15855 0000AFF8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15856 0000AFFD 4C8D4DF8                	lea r9, [rbp - 8]
 15857 0000B001 B905000000              	mov rcx, 5
 15858                                  .L_tc_recycle_frame_loop_0091:
 15859 0000B006 4883F900                	cmp rcx, 0
 15860 0000B00A 7413                    	je .L_tc_recycle_frame_done_0091
 15861 0000B00C 4D8B11                  	mov r10, qword [r9]
 15862 0000B00F 4D8910                  	mov qword [r8], r10
 15863 0000B012 4983E808                	sub r8, 8
 15864 0000B016 4983E908                	sub r9, 8
 15865 0000B01A 48FFC9                  	dec rcx
 15866 0000B01D EBE7                    	jmp .L_tc_recycle_frame_loop_0091
 15867                                  .L_tc_recycle_frame_done_0091:
 15868 0000B01F 498D6008                	lea rsp, [r8 + 8]
 15869 0000B023 5D                      	pop rbp ; restore the old rbp
 15870 0000B024 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15871 0000B027 C9                      	leave
 15872 0000B028 C21800                  	ret AND_KILL_FRAME(1)
 15873                                  .L_lambda_simple_end_0053:	; new closure is in rax
 15874 0000B02B 803804                  	cmp byte [rax], T_closure
 15875 0000B02E 0F85D9A90000            	jne L_error_non_closure
 15876 0000B034 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15877 0000B037 FF7508                  	push qword [rbp + 8 * 1]
 15878                                   ; old ret addr
 15879 0000B03A FF7500                  	push qword [rbp]
 15880                                   ; restore the old rbp
 15881 0000B03D BB01000000              	mov rbx, 1
 15882 0000B042 4883C303                	add rbx, 3
 15883 0000B046 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15884 0000B04A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15885 0000B04F 4C8D4DF8                	lea r9, [rbp - 8]
 15886 0000B053 B905000000              	mov rcx, 5
 15887                                  .L_tc_recycle_frame_loop_008f:
 15888 0000B058 4883F900                	cmp rcx, 0
 15889 0000B05C 7413                    	je .L_tc_recycle_frame_done_008f
 15890 0000B05E 4D8B11                  	mov r10, qword [r9]
 15891 0000B061 4D8910                  	mov qword [r8], r10
 15892 0000B064 4983E808                	sub r8, 8
 15893 0000B068 4983E908                	sub r9, 8
 15894 0000B06C 48FFC9                  	dec rcx
 15895 0000B06F EBE7                    	jmp .L_tc_recycle_frame_loop_008f
 15896                                  .L_tc_recycle_frame_done_008f:
 15897 0000B071 498D6008                	lea rsp, [r8 + 8]
 15898 0000B075 5D                      	pop rbp ; restore the old rbp
 15899 0000B076 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15900 0000B079 C9                      	leave
 15901 0000B07A C21800                  	ret AND_KILL_FRAME(1)
 15902                                  .L_lambda_simple_end_0051:	; new closure is in rax
 15903 0000B07D 803804                  	cmp byte [rax], T_closure
 15904 0000B080 0F8587A90000            	jne L_error_non_closure
 15905 0000B086 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15906 0000B089 FF7508                  	push qword [rbp + 8 * 1]
 15907                                   ; old ret addr
 15908 0000B08C FF7500                  	push qword [rbp]
 15909                                   ; restore the old rbp
 15910 0000B08F BB01000000              	mov rbx, 1
 15911 0000B094 4883C303                	add rbx, 3
 15912 0000B098 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15913 0000B09C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15914 0000B0A1 4C8D4DF8                	lea r9, [rbp - 8]
 15915 0000B0A5 B905000000              	mov rcx, 5
 15916                                  .L_tc_recycle_frame_loop_008d:
 15917 0000B0AA 4883F900                	cmp rcx, 0
 15918 0000B0AE 7413                    	je .L_tc_recycle_frame_done_008d
 15919 0000B0B0 4D8B11                  	mov r10, qword [r9]
 15920 0000B0B3 4D8910                  	mov qword [r8], r10
 15921 0000B0B6 4983E808                	sub r8, 8
 15922 0000B0BA 4983E908                	sub r9, 8
 15923 0000B0BE 48FFC9                  	dec rcx
 15924 0000B0C1 EBE7                    	jmp .L_tc_recycle_frame_loop_008d
 15925                                  .L_tc_recycle_frame_done_008d:
 15926 0000B0C3 498D6008                	lea rsp, [r8 + 8]
 15927 0000B0C7 5D                      	pop rbp ; restore the old rbp
 15928 0000B0C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15929 0000B0CB C9                      	leave
 15930 0000B0CC C21800                  	ret AND_KILL_FRAME(1)
 15931                                  .L_lambda_simple_end_004f:	; new closure is in rax
 15932 0000B0CF 803804                  	cmp byte [rax], T_closure
 15933 0000B0D2 0F8535A90000            	jne L_error_non_closure
 15934 0000B0D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15935 0000B0DB FF7508                  	push qword [rbp + 8 * 1]
 15936                                   ; old ret addr
 15937 0000B0DE FF7500                  	push qword [rbp]
 15938                                   ; restore the old rbp
 15939 0000B0E1 BB01000000              	mov rbx, 1
 15940 0000B0E6 4883C303                	add rbx, 3
 15941 0000B0EA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15942 0000B0EE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15943 0000B0F3 4C8D4DF8                	lea r9, [rbp - 8]
 15944 0000B0F7 B905000000              	mov rcx, 5
 15945                                  .L_tc_recycle_frame_loop_008b:
 15946 0000B0FC 4883F900                	cmp rcx, 0
 15947 0000B100 7413                    	je .L_tc_recycle_frame_done_008b
 15948 0000B102 4D8B11                  	mov r10, qword [r9]
 15949 0000B105 4D8910                  	mov qword [r8], r10
 15950 0000B108 4983E808                	sub r8, 8
 15951 0000B10C 4983E908                	sub r9, 8
 15952 0000B110 48FFC9                  	dec rcx
 15953 0000B113 EBE7                    	jmp .L_tc_recycle_frame_loop_008b
 15954                                  .L_tc_recycle_frame_done_008b:
 15955 0000B115 498D6008                	lea rsp, [r8 + 8]
 15956 0000B119 5D                      	pop rbp ; restore the old rbp
 15957 0000B11A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15958 0000B11D C9                      	leave
 15959 0000B11E C21800                  	ret AND_KILL_FRAME(1)
 15960                                  .L_lambda_simple_end_004d:	; new closure is in rax
 15961 0000B121 803804                  	cmp byte [rax], T_closure
 15962 0000B124 0F85E3A80000            	jne L_error_non_closure
 15963 0000B12A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15964 0000B12D FF7508                  	push qword [rbp + 8 * 1]
 15965                                   ; old ret addr
 15966 0000B130 FF7500                  	push qword [rbp]
 15967                                   ; restore the old rbp
 15968 0000B133 BB01000000              	mov rbx, 1
 15969 0000B138 4883C303                	add rbx, 3
 15970 0000B13C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 15971 0000B140 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 15972 0000B145 4C8D4DF8                	lea r9, [rbp - 8]
 15973 0000B149 B905000000              	mov rcx, 5
 15974                                  .L_tc_recycle_frame_loop_008a:
 15975 0000B14E 4883F900                	cmp rcx, 0
 15976 0000B152 7413                    	je .L_tc_recycle_frame_done_008a
 15977 0000B154 4D8B11                  	mov r10, qword [r9]
 15978 0000B157 4D8910                  	mov qword [r8], r10
 15979 0000B15A 4983E808                	sub r8, 8
 15980 0000B15E 4983E908                	sub r9, 8
 15981 0000B162 48FFC9                  	dec rcx
 15982 0000B165 EBE7                    	jmp .L_tc_recycle_frame_loop_008a
 15983                                  .L_tc_recycle_frame_done_008a:
 15984 0000B167 498D6008                	lea rsp, [r8 + 8]
 15985 0000B16B 5D                      	pop rbp ; restore the old rbp
 15986 0000B16C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15987 0000B16F C9                      	leave
 15988 0000B170 C21800                  	ret AND_KILL_FRAME(1)
 15989                                  .L_lambda_simple_end_004c:	; new closure is in rax
 15990 0000B173 803804                  	cmp byte [rax], T_closure
 15991 0000B176 0F8591A80000            	jne L_error_non_closure
 15992 0000B17C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15993 0000B17F FF7508                  	push qword [rbp + 8 * 1]
 15994                                   ; old ret addr
 15995 0000B182 FF7500                  	push qword [rbp]
 15996                                   ; restore the old rbp
 15997 0000B185 BB01000000              	mov rbx, 1
 15998 0000B18A 4883C303                	add rbx, 3
 15999 0000B18E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16000 0000B192 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16001 0000B197 4C8D4DF8                	lea r9, [rbp - 8]
 16002 0000B19B B905000000              	mov rcx, 5
 16003                                  .L_tc_recycle_frame_loop_0089:
 16004 0000B1A0 4883F900                	cmp rcx, 0
 16005 0000B1A4 7413                    	je .L_tc_recycle_frame_done_0089
 16006 0000B1A6 4D8B11                  	mov r10, qword [r9]
 16007 0000B1A9 4D8910                  	mov qword [r8], r10
 16008 0000B1AC 4983E808                	sub r8, 8
 16009 0000B1B0 4983E908                	sub r9, 8
 16010 0000B1B4 48FFC9                  	dec rcx
 16011 0000B1B7 EBE7                    	jmp .L_tc_recycle_frame_loop_0089
 16012                                  .L_tc_recycle_frame_done_0089:
 16013 0000B1B9 498D6008                	lea rsp, [r8 + 8]
 16014 0000B1BD 5D                      	pop rbp ; restore the old rbp
 16015 0000B1BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16016 0000B1C1 C9                      	leave
 16017 0000B1C2 C21800                  	ret AND_KILL_FRAME(1)
 16018                                  .L_lambda_simple_end_004b:	; new closure is in rax
 16019 0000B1C5 803804                  	cmp byte [rax], T_closure
 16020 0000B1C8 0F853FA80000            	jne L_error_non_closure
 16021 0000B1CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16022 0000B1D1 FF7508                  	push qword [rbp + 8 * 1]
 16023                                   ; old ret addr
 16024 0000B1D4 FF7500                  	push qword [rbp]
 16025                                   ; restore the old rbp
 16026 0000B1D7 BB01000000              	mov rbx, 1
 16027 0000B1DC 4883C303                	add rbx, 3
 16028 0000B1E0 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16029 0000B1E4 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16030 0000B1E9 4C8D4DF8                	lea r9, [rbp - 8]
 16031 0000B1ED B905000000              	mov rcx, 5
 16032                                  .L_tc_recycle_frame_loop_007b:
 16033 0000B1F2 4883F900                	cmp rcx, 0
 16034 0000B1F6 7413                    	je .L_tc_recycle_frame_done_007b
 16035 0000B1F8 4D8B11                  	mov r10, qword [r9]
 16036 0000B1FB 4D8910                  	mov qword [r8], r10
 16037 0000B1FE 4983E808                	sub r8, 8
 16038 0000B202 4983E908                	sub r9, 8
 16039 0000B206 48FFC9                  	dec rcx
 16040 0000B209 EBE7                    	jmp .L_tc_recycle_frame_loop_007b
 16041                                  .L_tc_recycle_frame_done_007b:
 16042 0000B20B 498D6008                	lea rsp, [r8 + 8]
 16043 0000B20F 5D                      	pop rbp ; restore the old rbp
 16044 0000B210 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16045 0000B213 C9                      	leave
 16046 0000B214 C21800                  	ret AND_KILL_FRAME(1)
 16047                                  .L_lambda_simple_end_0048:	; new closure is in rax
 16048 0000B217 803804                  	cmp byte [rax], T_closure
 16049 0000B21A 0F85EDA70000            	jne L_error_non_closure
 16050 0000B220 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16051 0000B223 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16052                                  
 16053 0000B226 4889C7                  	mov rdi, rax
 16054 0000B229 E8DDAA0000              	call print_sexpr_if_not_void
 16055 0000B22E 48B8-                   	mov rax, L_constants + 0
 16055 0000B230 [0000000000000000] 
 16056 0000B238 48890425[B8120000]      	mov qword [free_var_74], rax
 16057 0000B240 48B8-                   	mov rax, sob_void
 16057 0000B242 [0000000000000000] 
 16058                                  
 16059 0000B24A 4889C7                  	mov rdi, rax
 16060 0000B24D E8B9AA0000              	call print_sexpr_if_not_void
 16061 0000B252 48B8-                   	mov rax, L_constants + 0
 16061 0000B254 [0000000000000000] 
 16062 0000B25C 48890425[A7120000]      	mov qword [free_var_73], rax
 16063 0000B264 48B8-                   	mov rax, sob_void
 16063 0000B266 [0000000000000000] 
 16064                                  
 16065 0000B26E 4889C7                  	mov rdi, rax
 16066 0000B271 E895AA0000              	call print_sexpr_if_not_void
 16067 0000B276 48B8-                   	mov rax, L_constants + 0
 16067 0000B278 [0000000000000000] 
 16068 0000B280 48890425[C9120000]      	mov qword [free_var_75], rax
 16069 0000B288 48B8-                   	mov rax, sob_void
 16069 0000B28A [0000000000000000] 
 16070                                  
 16071 0000B292 4889C7                  	mov rdi, rax
 16072 0000B295 E871AA0000              	call print_sexpr_if_not_void
 16073 0000B29A 48B8-                   	mov rax, L_constants + 0
 16073 0000B29C [0000000000000000] 
 16074 0000B2A4 48890425[EB120000]      	mov qword [free_var_77], rax
 16075 0000B2AC 48B8-                   	mov rax, sob_void
 16075 0000B2AE [0000000000000000] 
 16076                                  
 16077 0000B2B6 4889C7                  	mov rdi, rax
 16078 0000B2B9 E84DAA0000              	call print_sexpr_if_not_void
 16079 0000B2BE 48B8-                   	mov rax, L_constants + 0
 16079 0000B2C0 [0000000000000000] 
 16080 0000B2C8 48890425[DA120000]      	mov qword [free_var_76], rax
 16081 0000B2D0 48B8-                   	mov rax, sob_void
 16081 0000B2D2 [0000000000000000] 
 16082                                  
 16083 0000B2DA 4889C7                  	mov rdi, rax
 16084 0000B2DD E829AA0000              	call print_sexpr_if_not_void
 16085                                  	; preparing a non-tail-call
 16086 0000B2E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16087 0000B2E7 E8CAA70000              	call malloc
 16088 0000B2EC 50                      	push rax
 16089 0000B2ED BF00000000              	mov rdi, 8 * 0	; new rib
 16090 0000B2F2 E8BFA70000              	call malloc
 16091 0000B2F7 50                      	push rax
 16092 0000B2F8 BF08000000              	mov rdi, 8 * 1	; extended env
 16093 0000B2FD E8B4A70000              	call malloc
 16094 0000B302 488B7D10                	mov rdi, ENV
 16095 0000B306 BE00000000              	mov rsi, 0
 16096 0000B30B BA01000000              	mov rdx, 1
 16097                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 16098 0000B310 4883FE00                	cmp rsi, 0
 16099 0000B314 7410                    	je .L_lambda_simple_env_end_0058
 16100 0000B316 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16101 0000B31A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16102 0000B31E 48FFC6                  	inc rsi
 16103 0000B321 48FFC2                  	inc rdx
 16104 0000B324 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 16105                                  .L_lambda_simple_env_end_0058:
 16106 0000B326 5B                      	pop rbx
 16107 0000B327 BE00000000              	mov rsi, 0
 16108                                  .L_lambda_simple_params_loop_0058:	; copy params
 16109 0000B32C 4883FE00                	cmp rsi, 0
 16110 0000B330 740E                    	je .L_lambda_simple_params_end_0058
 16111 0000B332 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16112 0000B337 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16113 0000B33B 48FFC6                  	inc rsi
 16114 0000B33E EBEC                    	jmp .L_lambda_simple_params_loop_0058
 16115                                  .L_lambda_simple_params_end_0058:
 16116 0000B340 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16117 0000B343 4889C3                  	mov rbx, rax
 16118 0000B346 58                      	pop rax
 16119 0000B347 C60004                  	mov byte [rax], T_closure
 16120 0000B34A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16121 0000B34E 48C74009[5BB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 16122 0000B356 E92D020000              	jmp .L_lambda_simple_end_0058
 16123                                  .L_lambda_simple_code_0058:	; lambda-simple body
 16124 0000B35B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16125 0000B361 740B                    	je .L_lambda_simple_arity_check_ok_0058
 16126 0000B363 FF742410                	push qword [rsp + 8 * 2]
 16127 0000B367 6A01                    	push 1
 16128 0000B369 E901A70000              	jmp L_error_incorrect_arity_simple
 16129                                  .L_lambda_simple_arity_check_ok_0058:
 16130 0000B36E C8000000                	enter 0, 0
 16131 0000B372 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16132 0000B377 E83AA70000              	call malloc
 16133 0000B37C 50                      	push rax
 16134 0000B37D BF08000000              	mov rdi, 8 * 1	; new rib
 16135 0000B382 E82FA70000              	call malloc
 16136 0000B387 50                      	push rax
 16137 0000B388 BF10000000              	mov rdi, 8 * 2	; extended env
 16138 0000B38D E824A70000              	call malloc
 16139 0000B392 488B7D10                	mov rdi, ENV
 16140 0000B396 4831F6                  	 xor rsi, rsi
 16141 0000B399 4831D2                  	 xor rdx, rdx
 16142 0000B39C 48FFC2                  	inc rdx
 16143                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 16144 0000B39F 4883FE01                	cmp rsi, 1
 16145 0000B3A3 7410                    	je .L_lambda_opt_env_end_000f
 16146 0000B3A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16147 0000B3A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16148 0000B3AD 48FFC6                  	inc rsi
 16149 0000B3B0 48FFC2                  	inc rdx
 16150 0000B3B3 EBEA                    	jmp .L_lambda_opt_env_loop_000f
 16151                                  .L_lambda_opt_env_end_000f:
 16152 0000B3B5 5B                      	pop rbx
 16153 0000B3B6 4831F6                  	xor rsi, rsi
 16154                                  .L_lambda_opt_params_loop_000f:	; copy params
 16155 0000B3B9 4883FE01                	cmp rsi, 1
 16156 0000B3BD 740E                    	je .L_lambda_opt_params_end_000f
 16157 0000B3BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16158 0000B3C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16159 0000B3C8 48FFC6                  	inc rsi
 16160 0000B3CB EBEC                    	jmp .L_lambda_opt_params_loop_000f
 16161                                  .L_lambda_opt_params_end_000f:
 16162 0000B3CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16163 0000B3D0 4889C3                  	mov rbx, rax
 16164 0000B3D3 58                      	pop rax
 16165 0000B3D4 C60004                  	mov byte [rax], T_closure
 16166 0000B3D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16167 0000B3DB 48C74009[E8B30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 16168 0000B3E3 E99C010000              	jmp .L_lambda_opt_end_000f
 16169                                  .L_lambda_opt_code_000f:; lambda opt body
 16170 0000B3E8 48837C241000            	cmp qword [rsp + 8 * 2], 0
 16171 0000B3EE 7409                    	je .L_lambda_opt_arity_check_exact_000f
 16172 0000B3F0 7F57                    	jg .L_lambda_opt_arity_check_more_000f
 16173 0000B3F2 6A00                    	push 0
 16174 0000B3F4 E98AA60000              	jmp L_error_incorrect_arity_opt
 16175                                  .L_lambda_opt_arity_check_exact_000f:
 16176 0000B3F9 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 16177 0000B3FD 4C894C24F8              	mov qword [rsp -8], r9
 16178 0000B402 4C8B4C2408              	mov r9, qword [rsp +8]
 16179 0000B407 4C890C24                	mov qword [rsp +8 * 0], r9
 16180 0000B40B 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 16181 0000B410 4C89C9                  	mov rcx, r9
 16182 0000B413 49FFC1                  	inc r9
 16183 0000B416 4C894C2408              	mov qword [rsp +8], r9
 16184 0000B41B 4889E2                  	mov rdx, rsp
 16185 0000B41E 4883C218                	add rdx, 24
 16186                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000f:
 16187 0000B422 4883F900                	cmp rcx, 0
 16188 0000B426 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000f
 16189 0000B428 4C8B02                  	mov r8, qword [rdx]
 16190 0000B42B 4C8942F8                	mov qword [rdx - 8], r8
 16191 0000B42F 4883C208                	add rdx, 8
 16192 0000B433 48FFC9                  	dec rcx
 16193 0000B436 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000f
 16194                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000f:
 16195 0000B438 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 16196 0000B440 4883EC08                	sub rsp, 8
 16197 0000B444 E984000000              	jmp .L_lambda_opt_stack_adjusted_000f
 16198                                  .L_lambda_opt_arity_check_more_000f:
 16199 0000B449 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16200 0000B44E 4D89C4                  	mov r12, r8
 16201 0000B451 4C89C1                  	mov rcx, r8
 16202 0000B454 4D8D5002                	lea r10, [r8 + 2] 
 16203 0000B458 4883E900                	sub rcx, 0
 16204 0000B45C 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 16205 0000B461 49B9-                   	mov r9, sob_nil
 16205 0000B463 [0100000000000000] 
 16206                                  .L_lambda_opt_create_list_of_opt_params_000f:
 16207 0000B46B 4883F900                	cmp rcx, 0
 16208 0000B46F 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000f
 16209 0000B471 BF11000000              	mov rdi, 17
 16210 0000B476 E83BA60000              	call malloc
 16211 0000B47B C60021                  	mov byte [rax], T_pair
 16212 0000B47E 498B1B                  	mov rbx, qword [r11]
 16213 0000B481 48895801                	mov qword [rax +1], rbx
 16214 0000B485 4C894809                	mov qword [rax + 1 + 8], r9
 16215 0000B489 4989C1                  	mov r9, rax
 16216 0000B48C 48FFC9                  	dec rcx
 16217 0000B48F 4983EB08                	sub r11, 8
 16218 0000B493 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000f
 16219                                  .L_lambda_opt_create_list_of_opt_params_end_000f:
 16220 0000B495 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 16221 0000B49A 4D8908                  	mov qword [r8], r9
 16222 0000B49D 4E8D14D500000000        	lea r10, [8 * r10]
 16223 0000B4A5 4901E2                  	add r10, rsp
 16224 0000B4A8 B904000000              	mov rcx, 4 + 0
 16225                                  .L_lambda_opt_stack_shrink_loop_000f:
 16226 0000B4AD 4883F900                	cmp rcx, 0
 16227 0000B4B1 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_000f
 16228 0000B4B3 4D8B18                  	mov r11, qword [r8]
 16229 0000B4B6 4D891A                  	mov qword [r10], r11
 16230 0000B4B9 4983E808                	sub r8, 8
 16231 0000B4BD 4983EA08                	sub r10, 8
 16232 0000B4C1 48FFC9                  	dec rcx
 16233 0000B4C4 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 16234                                  .L_lambda_opt_stack_shrink_loop_exit_000f:
 16235 0000B4C6 4983C208                	add r10, 8
 16236 0000B4CA 4C89D4                  	mov rsp, r10
 16237                                  .L_lambda_opt_stack_adjusted_000f:;continue with the code, the stack is ok
 16238 0000B4CD 48C744241001000000      	mov qword [rsp + 8*2], 1
 16239 0000B4D6 C8000000                	enter 0, 0
 16240                                  	; preparing a tail-call
 16241                                  	; preparing a non-tail-call
 16242 0000B4DA 488B4520                	mov rax, PARAM(0)	; param s
 16243 0000B4DE 50                      	push rax
 16244 0000B4DF 488B0425[1F120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16245 0000B4E7 803805                  	cmp byte [rax], T_undefined
 16246 0000B4EA 0F8499A40000            	je L_error_fvar_undefined
 16247 0000B4F0 50                      	push rax
 16248 0000B4F1 6A02                    	push 2	; arg count
 16249 0000B4F3 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
 16250 0000B4FB 803805                  	cmp byte [rax], T_undefined
 16251 0000B4FE 0F8485A40000            	je L_error_fvar_undefined
 16252 0000B504 803804                  	cmp byte [rax], T_closure
 16253 0000B507 0F8500A50000            	jne L_error_non_closure
 16254 0000B50D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16255 0000B510 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16256 0000B513 50                      	push rax
 16257 0000B514 488B4510                	mov rax, ENV
 16258 0000B518 488B00                  	mov rax, qword [rax + 8 * 0]
 16259 0000B51B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16260 0000B51E 50                      	push rax
 16261 0000B51F 6A02                    	push 2	; arg count
 16262 0000B521 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
 16263 0000B529 803805                  	cmp byte [rax], T_undefined
 16264 0000B52C 0F8457A40000            	je L_error_fvar_undefined
 16265 0000B532 803804                  	cmp byte [rax], T_closure
 16266 0000B535 0F85D2A40000            	jne L_error_non_closure
 16267 0000B53B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16268 0000B53E FF7508                  	push qword [rbp + 8 * 1]
 16269                                   ; old ret addr
 16270 0000B541 FF7500                  	push qword [rbp]
 16271                                   ; restore the old rbp
 16272 0000B544 BB02000000              	mov rbx, 2
 16273 0000B549 4883C303                	add rbx, 3
 16274 0000B54D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16275 0000B551 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16276 0000B556 4C8D4DF8                	lea r9, [rbp - 8]
 16277 0000B55A B906000000              	mov rcx, 6
 16278                                  .L_tc_recycle_frame_loop_0095:
 16279 0000B55F 4883F900                	cmp rcx, 0
 16280 0000B563 7413                    	je .L_tc_recycle_frame_done_0095
 16281 0000B565 4D8B11                  	mov r10, qword [r9]
 16282 0000B568 4D8910                  	mov qword [r8], r10
 16283 0000B56B 4983E808                	sub r8, 8
 16284 0000B56F 4983E908                	sub r9, 8
 16285 0000B573 48FFC9                  	dec rcx
 16286 0000B576 EBE7                    	jmp .L_tc_recycle_frame_loop_0095
 16287                                  .L_tc_recycle_frame_done_0095:
 16288 0000B578 498D6008                	lea rsp, [r8 + 8]
 16289 0000B57C 5D                      	pop rbp ; restore the old rbp
 16290 0000B57D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16291 0000B580 C9                      	leave
 16292 0000B581 C21800                  	ret 8 * (2 + 1)
 16293                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16294 0000B584 C9                      	leave
 16295 0000B585 C21800                  	ret AND_KILL_FRAME(1)
 16296                                  .L_lambda_simple_end_0058:	; new closure is in rax
 16297 0000B588 50                      	push rax
 16298 0000B589 6A01                    	push 1	; arg count
 16299 0000B58B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16300 0000B590 E821A50000              	call malloc
 16301 0000B595 50                      	push rax
 16302 0000B596 BF00000000              	mov rdi, 8 * 0	; new rib
 16303 0000B59B E816A50000              	call malloc
 16304 0000B5A0 50                      	push rax
 16305 0000B5A1 BF08000000              	mov rdi, 8 * 1	; extended env
 16306 0000B5A6 E80BA50000              	call malloc
 16307 0000B5AB 488B7D10                	mov rdi, ENV
 16308 0000B5AF BE00000000              	mov rsi, 0
 16309 0000B5B4 BA01000000              	mov rdx, 1
 16310                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 16311 0000B5B9 4883FE00                	cmp rsi, 0
 16312 0000B5BD 7410                    	je .L_lambda_simple_env_end_0059
 16313 0000B5BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16314 0000B5C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16315 0000B5C7 48FFC6                  	inc rsi
 16316 0000B5CA 48FFC2                  	inc rdx
 16317 0000B5CD EBEA                    	jmp .L_lambda_simple_env_loop_0059
 16318                                  .L_lambda_simple_env_end_0059:
 16319 0000B5CF 5B                      	pop rbx
 16320 0000B5D0 BE00000000              	mov rsi, 0
 16321                                  .L_lambda_simple_params_loop_0059:	; copy params
 16322 0000B5D5 4883FE00                	cmp rsi, 0
 16323 0000B5D9 740E                    	je .L_lambda_simple_params_end_0059
 16324 0000B5DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16325 0000B5E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16326 0000B5E4 48FFC6                  	inc rsi
 16327 0000B5E7 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 16328                                  .L_lambda_simple_params_end_0059:
 16329 0000B5E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16330 0000B5EC 4889C3                  	mov rbx, rax
 16331 0000B5EF 58                      	pop rax
 16332 0000B5F0 C60004                  	mov byte [rax], T_closure
 16333 0000B5F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16334 0000B5F7 48C74009[04B60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 16335 0000B5FF E938010000              	jmp .L_lambda_simple_end_0059
 16336                                  .L_lambda_simple_code_0059:	; lambda-simple body
 16337 0000B604 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16338 0000B60A 740B                    	je .L_lambda_simple_arity_check_ok_0059
 16339 0000B60C FF742410                	push qword [rsp + 8 * 2]
 16340 0000B610 6A01                    	push 1
 16341 0000B612 E958A40000              	jmp L_error_incorrect_arity_simple
 16342                                  .L_lambda_simple_arity_check_ok_0059:
 16343 0000B617 C8000000                	enter 0, 0
 16344                                  	; preparing a non-tail-call
 16345 0000B61B 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 16346 0000B623 803805                  	cmp byte [rax], T_undefined
 16347 0000B626 0F845DA30000            	je L_error_fvar_undefined
 16348 0000B62C 50                      	push rax
 16349 0000B62D 6A01                    	push 1	; arg count
 16350 0000B62F 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16351 0000B633 803804                  	cmp byte [rax], T_closure
 16352 0000B636 0F85D1A30000            	jne L_error_non_closure
 16353 0000B63C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16354 0000B63F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16355 0000B642 48890425[B8120000]      	mov qword [free_var_74], rax
 16356 0000B64A 48B8-                   	mov rax, sob_void
 16356 0000B64C [0000000000000000] 
 16357                                  
 16358                                  	; preparing a non-tail-call
 16359 0000B654 488B0425[230E0000]      	mov rax, qword [free_var_5]	; free var <=
 16360 0000B65C 803805                  	cmp byte [rax], T_undefined
 16361 0000B65F 0F8424A30000            	je L_error_fvar_undefined
 16362 0000B665 50                      	push rax
 16363 0000B666 6A01                    	push 1	; arg count
 16364 0000B668 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16365 0000B66C 803804                  	cmp byte [rax], T_closure
 16366 0000B66F 0F8598A30000            	jne L_error_non_closure
 16367 0000B675 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16368 0000B678 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16369 0000B67B 48890425[A7120000]      	mov qword [free_var_73], rax
 16370 0000B683 48B8-                   	mov rax, sob_void
 16370 0000B685 [0000000000000000] 
 16371                                  
 16372                                  	; preparing a non-tail-call
 16373 0000B68D 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 16374 0000B695 803805                  	cmp byte [rax], T_undefined
 16375 0000B698 0F84EBA20000            	je L_error_fvar_undefined
 16376 0000B69E 50                      	push rax
 16377 0000B69F 6A01                    	push 1	; arg count
 16378 0000B6A1 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16379 0000B6A5 803804                  	cmp byte [rax], T_closure
 16380 0000B6A8 0F855FA30000            	jne L_error_non_closure
 16381 0000B6AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16382 0000B6B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16383 0000B6B4 48890425[C9120000]      	mov qword [free_var_75], rax
 16384 0000B6BC 48B8-                   	mov rax, sob_void
 16384 0000B6BE [0000000000000000] 
 16385                                  
 16386                                  	; preparing a non-tail-call
 16387 0000B6C6 488B0425[450E0000]      	mov rax, qword [free_var_7]	; free var >
 16388 0000B6CE 803805                  	cmp byte [rax], T_undefined
 16389 0000B6D1 0F84B2A20000            	je L_error_fvar_undefined
 16390 0000B6D7 50                      	push rax
 16391 0000B6D8 6A01                    	push 1	; arg count
 16392 0000B6DA 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16393 0000B6DE 803804                  	cmp byte [rax], T_closure
 16394 0000B6E1 0F8526A30000            	jne L_error_non_closure
 16395 0000B6E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16396 0000B6EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 16397 0000B6ED 48890425[EB120000]      	mov qword [free_var_77], rax
 16398 0000B6F5 48B8-                   	mov rax, sob_void
 16398 0000B6F7 [0000000000000000] 
 16399                                  
 16400                                  	; preparing a non-tail-call
 16401 0000B6FF 488B0425[560E0000]      	mov rax, qword [free_var_8]	; free var >=
 16402 0000B707 803805                  	cmp byte [rax], T_undefined
 16403 0000B70A 0F8479A20000            	je L_error_fvar_undefined
 16404 0000B710 50                      	push rax
 16405 0000B711 6A01                    	push 1	; arg count
 16406 0000B713 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16407 0000B717 803804                  	cmp byte [rax], T_closure
 16408 0000B71A 0F85EDA20000            	jne L_error_non_closure
 16409 0000B720 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16410 0000B723 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16411 0000B726 48890425[DA120000]      	mov qword [free_var_76], rax
 16412 0000B72E 48B8-                   	mov rax, sob_void
 16412 0000B730 [0000000000000000] 
 16413 0000B738 C9                      	leave
 16414 0000B739 C21800                  	ret AND_KILL_FRAME(1)
 16415                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16416 0000B73C 803804                  	cmp byte [rax], T_closure
 16417 0000B73F 0F85C8A20000            	jne L_error_non_closure
 16418 0000B745 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16419 0000B748 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16420                                  
 16421 0000B74B 4889C7                  	mov rdi, rax
 16422 0000B74E E8B8A50000              	call print_sexpr_if_not_void
 16423 0000B753 48B8-                   	mov rax, L_constants + 0
 16423 0000B755 [0000000000000000] 
 16424 0000B75D 48890425[85120000]      	mov qword [free_var_71], rax
 16425 0000B765 48B8-                   	mov rax, sob_void
 16425 0000B767 [0000000000000000] 
 16426                                  
 16427 0000B76F 4889C7                  	mov rdi, rax
 16428 0000B772 E894A50000              	call print_sexpr_if_not_void
 16429 0000B777 48B8-                   	mov rax, L_constants + 0
 16429 0000B779 [0000000000000000] 
 16430 0000B781 48890425[96120000]      	mov qword [free_var_72], rax
 16431 0000B789 48B8-                   	mov rax, sob_void
 16431 0000B78B [0000000000000000] 
 16432                                  
 16433 0000B793 4889C7                  	mov rdi, rax
 16434 0000B796 E870A50000              	call print_sexpr_if_not_void
 16435                                  	; preparing a non-tail-call
 16436                                  	; preparing a non-tail-call
 16437                                  	; preparing a non-tail-call
 16438 0000B79B 48B8-                   	mov rax, L_constants + 2569
 16438 0000B79D [090A000000000000] 
 16439 0000B7A5 50                      	push rax
 16440 0000B7A6 6A01                    	push 1	; arg count
 16441 0000B7A8 488B0425[1F120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16442 0000B7B0 803805                  	cmp byte [rax], T_undefined
 16443 0000B7B3 0F84D0A10000            	je L_error_fvar_undefined
 16444 0000B7B9 803804                  	cmp byte [rax], T_closure
 16445 0000B7BC 0F854BA20000            	jne L_error_non_closure
 16446 0000B7C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16447 0000B7C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16448 0000B7C8 50                      	push rax
 16449                                  	; preparing a non-tail-call
 16450 0000B7C9 48B8-                   	mov rax, L_constants + 2573
 16450 0000B7CB [0D0A000000000000] 
 16451 0000B7D3 50                      	push rax
 16452 0000B7D4 6A01                    	push 1	; arg count
 16453 0000B7D6 488B0425[1F120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16454 0000B7DE 803805                  	cmp byte [rax], T_undefined
 16455 0000B7E1 0F84A2A10000            	je L_error_fvar_undefined
 16456 0000B7E7 803804                  	cmp byte [rax], T_closure
 16457 0000B7EA 0F851DA20000            	jne L_error_non_closure
 16458 0000B7F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16459 0000B7F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16460 0000B7F6 50                      	push rax
 16461 0000B7F7 6A02                    	push 2	; arg count
 16462 0000B7F9 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 16463 0000B801 803805                  	cmp byte [rax], T_undefined
 16464 0000B804 0F847FA10000            	je L_error_fvar_undefined
 16465 0000B80A 803804                  	cmp byte [rax], T_closure
 16466 0000B80D 0F85FAA10000            	jne L_error_non_closure
 16467 0000B813 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16468 0000B816 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16469 0000B819 50                      	push rax
 16470 0000B81A 6A01                    	push 1	; arg count
 16471 0000B81C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16472 0000B821 E890A20000              	call malloc
 16473 0000B826 50                      	push rax
 16474 0000B827 BF00000000              	mov rdi, 8 * 0	; new rib
 16475 0000B82C E885A20000              	call malloc
 16476 0000B831 50                      	push rax
 16477 0000B832 BF08000000              	mov rdi, 8 * 1	; extended env
 16478 0000B837 E87AA20000              	call malloc
 16479 0000B83C 488B7D10                	mov rdi, ENV
 16480 0000B840 BE00000000              	mov rsi, 0
 16481 0000B845 BA01000000              	mov rdx, 1
 16482                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 16483 0000B84A 4883FE00                	cmp rsi, 0
 16484 0000B84E 7410                    	je .L_lambda_simple_env_end_005a
 16485 0000B850 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16486 0000B854 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16487 0000B858 48FFC6                  	inc rsi
 16488 0000B85B 48FFC2                  	inc rdx
 16489 0000B85E EBEA                    	jmp .L_lambda_simple_env_loop_005a
 16490                                  .L_lambda_simple_env_end_005a:
 16491 0000B860 5B                      	pop rbx
 16492 0000B861 BE00000000              	mov rsi, 0
 16493                                  .L_lambda_simple_params_loop_005a:	; copy params
 16494 0000B866 4883FE00                	cmp rsi, 0
 16495 0000B86A 740E                    	je .L_lambda_simple_params_end_005a
 16496 0000B86C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16497 0000B871 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16498 0000B875 48FFC6                  	inc rsi
 16499 0000B878 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 16500                                  .L_lambda_simple_params_end_005a:
 16501 0000B87A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16502 0000B87D 4889C3                  	mov rbx, rax
 16503 0000B880 58                      	pop rax
 16504 0000B881 C60004                  	mov byte [rax], T_closure
 16505 0000B884 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16506 0000B888 48C74009[95B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 16507 0000B890 E973030000              	jmp .L_lambda_simple_end_005a
 16508                                  .L_lambda_simple_code_005a:	; lambda-simple body
 16509 0000B895 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16510 0000B89B 740B                    	je .L_lambda_simple_arity_check_ok_005a
 16511 0000B89D FF742410                	push qword [rsp + 8 * 2]
 16512 0000B8A1 6A01                    	push 1
 16513 0000B8A3 E9C7A10000              	jmp L_error_incorrect_arity_simple
 16514                                  .L_lambda_simple_arity_check_ok_005a:
 16515 0000B8A8 C8000000                	enter 0, 0
 16516 0000B8AC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16517 0000B8B1 E800A20000              	call malloc
 16518 0000B8B6 50                      	push rax
 16519 0000B8B7 BF08000000              	mov rdi, 8 * 1	; new rib
 16520 0000B8BC E8F5A10000              	call malloc
 16521 0000B8C1 50                      	push rax
 16522 0000B8C2 BF10000000              	mov rdi, 8 * 2	; extended env
 16523 0000B8C7 E8EAA10000              	call malloc
 16524 0000B8CC 488B7D10                	mov rdi, ENV
 16525 0000B8D0 BE00000000              	mov rsi, 0
 16526 0000B8D5 BA01000000              	mov rdx, 1
 16527                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 16528 0000B8DA 4883FE01                	cmp rsi, 1
 16529 0000B8DE 7410                    	je .L_lambda_simple_env_end_005b
 16530 0000B8E0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16531 0000B8E4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16532 0000B8E8 48FFC6                  	inc rsi
 16533 0000B8EB 48FFC2                  	inc rdx
 16534 0000B8EE EBEA                    	jmp .L_lambda_simple_env_loop_005b
 16535                                  .L_lambda_simple_env_end_005b:
 16536 0000B8F0 5B                      	pop rbx
 16537 0000B8F1 BE00000000              	mov rsi, 0
 16538                                  .L_lambda_simple_params_loop_005b:	; copy params
 16539 0000B8F6 4883FE01                	cmp rsi, 1
 16540 0000B8FA 740E                    	je .L_lambda_simple_params_end_005b
 16541 0000B8FC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16542 0000B901 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16543 0000B905 48FFC6                  	inc rsi
 16544 0000B908 EBEC                    	jmp .L_lambda_simple_params_loop_005b
 16545                                  .L_lambda_simple_params_end_005b:
 16546 0000B90A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16547 0000B90D 4889C3                  	mov rbx, rax
 16548 0000B910 58                      	pop rax
 16549 0000B911 C60004                  	mov byte [rax], T_closure
 16550 0000B914 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16551 0000B918 48C74009[25B90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 16552 0000B920 E921010000              	jmp .L_lambda_simple_end_005b
 16553                                  .L_lambda_simple_code_005b:	; lambda-simple body
 16554 0000B925 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16555 0000B92B 740B                    	je .L_lambda_simple_arity_check_ok_005b
 16556 0000B92D FF742410                	push qword [rsp + 8 * 2]
 16557 0000B931 6A01                    	push 1
 16558 0000B933 E937A10000              	jmp L_error_incorrect_arity_simple
 16559                                  .L_lambda_simple_arity_check_ok_005b:
 16560 0000B938 C8000000                	enter 0, 0
 16561                                  	; preparing a non-tail-call
 16562 0000B93C 48B8-                   	mov rax, L_constants + 2571
 16562 0000B93E [0B0A000000000000] 
 16563 0000B946 50                      	push rax
 16564 0000B947 488B4520                	mov rax, PARAM(0)	; param ch
 16565 0000B94B 50                      	push rax
 16566 0000B94C 48B8-                   	mov rax, L_constants + 2569
 16566 0000B94E [090A000000000000] 
 16567 0000B956 50                      	push rax
 16568 0000B957 6A03                    	push 3	; arg count
 16569 0000B959 488B0425[A7120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16570 0000B961 803805                  	cmp byte [rax], T_undefined
 16571 0000B964 0F841FA00000            	je L_error_fvar_undefined
 16572 0000B96A 803804                  	cmp byte [rax], T_closure
 16573 0000B96D 0F859AA00000            	jne L_error_non_closure
 16574 0000B973 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16575 0000B976 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16576 0000B979 483D[02000000]          	cmp rax, sob_boolean_false
 16577 0000B97F 0F84B9000000            	je .L_if_else_0051
 16578                                  	; preparing a tail-call
 16579                                  	; preparing a non-tail-call
 16580 0000B985 488B4510                	mov rax, ENV
 16581 0000B989 488B00                  	mov rax, qword [rax + 8 * 0]
 16582 0000B98C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16583 0000B98F 50                      	push rax
 16584                                  	; preparing a non-tail-call
 16585 0000B990 488B4520                	mov rax, PARAM(0)	; param ch
 16586 0000B994 50                      	push rax
 16587 0000B995 6A01                    	push 1	; arg count
 16588 0000B997 488B0425[1F120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16589 0000B99F 803805                  	cmp byte [rax], T_undefined
 16590 0000B9A2 0F84E19F0000            	je L_error_fvar_undefined
 16591 0000B9A8 803804                  	cmp byte [rax], T_closure
 16592 0000B9AB 0F855CA00000            	jne L_error_non_closure
 16593 0000B9B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16594 0000B9B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16595 0000B9B7 50                      	push rax
 16596 0000B9B8 6A02                    	push 2	; arg count
 16597 0000B9BA 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 16598 0000B9C2 803805                  	cmp byte [rax], T_undefined
 16599 0000B9C5 0F84BE9F0000            	je L_error_fvar_undefined
 16600 0000B9CB 803804                  	cmp byte [rax], T_closure
 16601 0000B9CE 0F8539A00000            	jne L_error_non_closure
 16602 0000B9D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16603 0000B9D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16604 0000B9DA 50                      	push rax
 16605 0000B9DB 6A01                    	push 1	; arg count
 16606 0000B9DD 488B0425[B7130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16607 0000B9E5 803805                  	cmp byte [rax], T_undefined
 16608 0000B9E8 0F849B9F0000            	je L_error_fvar_undefined
 16609 0000B9EE 803804                  	cmp byte [rax], T_closure
 16610 0000B9F1 0F8516A00000            	jne L_error_non_closure
 16611 0000B9F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16612 0000B9FA FF7508                  	push qword [rbp + 8 * 1]
 16613                                   ; old ret addr
 16614 0000B9FD FF7500                  	push qword [rbp]
 16615                                   ; restore the old rbp
 16616 0000BA00 BB01000000              	mov rbx, 1
 16617 0000BA05 4883C303                	add rbx, 3
 16618 0000BA09 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16619 0000BA0D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16620 0000BA12 4C8D4DF8                	lea r9, [rbp - 8]
 16621 0000BA16 B905000000              	mov rcx, 5
 16622                                  .L_tc_recycle_frame_loop_0096:
 16623 0000BA1B 4883F900                	cmp rcx, 0
 16624 0000BA1F 7413                    	je .L_tc_recycle_frame_done_0096
 16625 0000BA21 4D8B11                  	mov r10, qword [r9]
 16626 0000BA24 4D8910                  	mov qword [r8], r10
 16627 0000BA27 4983E808                	sub r8, 8
 16628 0000BA2B 4983E908                	sub r9, 8
 16629 0000BA2F 48FFC9                  	dec rcx
 16630 0000BA32 EBE7                    	jmp .L_tc_recycle_frame_loop_0096
 16631                                  .L_tc_recycle_frame_done_0096:
 16632 0000BA34 498D6008                	lea rsp, [r8 + 8]
 16633 0000BA38 5D                      	pop rbp ; restore the old rbp
 16634 0000BA39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16635 0000BA3C EB04                    	jmp .L_if_end_0051
 16636                                  .L_if_else_0051:
 16637 0000BA3E 488B4520                	mov rax, PARAM(0)	; param ch
 16638                                  .L_if_end_0051:
 16639 0000BA42 C9                      	leave
 16640 0000BA43 C21800                  	ret AND_KILL_FRAME(1)
 16641                                  .L_lambda_simple_end_005b:	; new closure is in rax
 16642 0000BA46 48890425[85120000]      	mov qword [free_var_71], rax
 16643 0000BA4E 48B8-                   	mov rax, sob_void
 16643 0000BA50 [0000000000000000] 
 16644                                  
 16645 0000BA58 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16646 0000BA5D E854A00000              	call malloc
 16647 0000BA62 50                      	push rax
 16648 0000BA63 BF08000000              	mov rdi, 8 * 1	; new rib
 16649 0000BA68 E849A00000              	call malloc
 16650 0000BA6D 50                      	push rax
 16651 0000BA6E BF10000000              	mov rdi, 8 * 2	; extended env
 16652 0000BA73 E83EA00000              	call malloc
 16653 0000BA78 488B7D10                	mov rdi, ENV
 16654 0000BA7C BE00000000              	mov rsi, 0
 16655 0000BA81 BA01000000              	mov rdx, 1
 16656                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 16657 0000BA86 4883FE01                	cmp rsi, 1
 16658 0000BA8A 7410                    	je .L_lambda_simple_env_end_005c
 16659 0000BA8C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16660 0000BA90 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16661 0000BA94 48FFC6                  	inc rsi
 16662 0000BA97 48FFC2                  	inc rdx
 16663 0000BA9A EBEA                    	jmp .L_lambda_simple_env_loop_005c
 16664                                  .L_lambda_simple_env_end_005c:
 16665 0000BA9C 5B                      	pop rbx
 16666 0000BA9D BE00000000              	mov rsi, 0
 16667                                  .L_lambda_simple_params_loop_005c:	; copy params
 16668 0000BAA2 4883FE01                	cmp rsi, 1
 16669 0000BAA6 740E                    	je .L_lambda_simple_params_end_005c
 16670 0000BAA8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16671 0000BAAD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16672 0000BAB1 48FFC6                  	inc rsi
 16673 0000BAB4 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 16674                                  .L_lambda_simple_params_end_005c:
 16675 0000BAB6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16676 0000BAB9 4889C3                  	mov rbx, rax
 16677 0000BABC 58                      	pop rax
 16678 0000BABD C60004                  	mov byte [rax], T_closure
 16679 0000BAC0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16680 0000BAC4 48C74009[D1BA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 16681 0000BACC E921010000              	jmp .L_lambda_simple_end_005c
 16682                                  .L_lambda_simple_code_005c:	; lambda-simple body
 16683 0000BAD1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16684 0000BAD7 740B                    	je .L_lambda_simple_arity_check_ok_005c
 16685 0000BAD9 FF742410                	push qword [rsp + 8 * 2]
 16686 0000BADD 6A01                    	push 1
 16687 0000BADF E98B9F0000              	jmp L_error_incorrect_arity_simple
 16688                                  .L_lambda_simple_arity_check_ok_005c:
 16689 0000BAE4 C8000000                	enter 0, 0
 16690                                  	; preparing a non-tail-call
 16691 0000BAE8 48B8-                   	mov rax, L_constants + 2575
 16691 0000BAEA [0F0A000000000000] 
 16692 0000BAF2 50                      	push rax
 16693 0000BAF3 488B4520                	mov rax, PARAM(0)	; param ch
 16694 0000BAF7 50                      	push rax
 16695 0000BAF8 48B8-                   	mov rax, L_constants + 2573
 16695 0000BAFA [0D0A000000000000] 
 16696 0000BB02 50                      	push rax
 16697 0000BB03 6A03                    	push 3	; arg count
 16698 0000BB05 488B0425[A7120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16699 0000BB0D 803805                  	cmp byte [rax], T_undefined
 16700 0000BB10 0F84739E0000            	je L_error_fvar_undefined
 16701 0000BB16 803804                  	cmp byte [rax], T_closure
 16702 0000BB19 0F85EE9E0000            	jne L_error_non_closure
 16703 0000BB1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16704 0000BB22 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16705 0000BB25 483D[02000000]          	cmp rax, sob_boolean_false
 16706 0000BB2B 0F84B9000000            	je .L_if_else_0052
 16707                                  	; preparing a tail-call
 16708                                  	; preparing a non-tail-call
 16709 0000BB31 488B4510                	mov rax, ENV
 16710 0000BB35 488B00                  	mov rax, qword [rax + 8 * 0]
 16711 0000BB38 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16712 0000BB3B 50                      	push rax
 16713                                  	; preparing a non-tail-call
 16714 0000BB3C 488B4520                	mov rax, PARAM(0)	; param ch
 16715 0000BB40 50                      	push rax
 16716 0000BB41 6A01                    	push 1	; arg count
 16717 0000BB43 488B0425[1F120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16718 0000BB4B 803805                  	cmp byte [rax], T_undefined
 16719 0000BB4E 0F84359E0000            	je L_error_fvar_undefined
 16720 0000BB54 803804                  	cmp byte [rax], T_closure
 16721 0000BB57 0F85B09E0000            	jne L_error_non_closure
 16722 0000BB5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16723 0000BB60 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16724 0000BB63 50                      	push rax
 16725 0000BB64 6A02                    	push 2	; arg count
 16726 0000BB66 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 16727 0000BB6E 803805                  	cmp byte [rax], T_undefined
 16728 0000BB71 0F84129E0000            	je L_error_fvar_undefined
 16729 0000BB77 803804                  	cmp byte [rax], T_closure
 16730 0000BB7A 0F858D9E0000            	jne L_error_non_closure
 16731 0000BB80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16732 0000BB83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16733 0000BB86 50                      	push rax
 16734 0000BB87 6A01                    	push 1	; arg count
 16735 0000BB89 488B0425[B7130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16736 0000BB91 803805                  	cmp byte [rax], T_undefined
 16737 0000BB94 0F84EF9D0000            	je L_error_fvar_undefined
 16738 0000BB9A 803804                  	cmp byte [rax], T_closure
 16739 0000BB9D 0F856A9E0000            	jne L_error_non_closure
 16740 0000BBA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16741 0000BBA6 FF7508                  	push qword [rbp + 8 * 1]
 16742                                   ; old ret addr
 16743 0000BBA9 FF7500                  	push qword [rbp]
 16744                                   ; restore the old rbp
 16745 0000BBAC BB01000000              	mov rbx, 1
 16746 0000BBB1 4883C303                	add rbx, 3
 16747 0000BBB5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 16748 0000BBB9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 16749 0000BBBE 4C8D4DF8                	lea r9, [rbp - 8]
 16750 0000BBC2 B905000000              	mov rcx, 5
 16751                                  .L_tc_recycle_frame_loop_0097:
 16752 0000BBC7 4883F900                	cmp rcx, 0
 16753 0000BBCB 7413                    	je .L_tc_recycle_frame_done_0097
 16754 0000BBCD 4D8B11                  	mov r10, qword [r9]
 16755 0000BBD0 4D8910                  	mov qword [r8], r10
 16756 0000BBD3 4983E808                	sub r8, 8
 16757 0000BBD7 4983E908                	sub r9, 8
 16758 0000BBDB 48FFC9                  	dec rcx
 16759 0000BBDE EBE7                    	jmp .L_tc_recycle_frame_loop_0097
 16760                                  .L_tc_recycle_frame_done_0097:
 16761 0000BBE0 498D6008                	lea rsp, [r8 + 8]
 16762 0000BBE4 5D                      	pop rbp ; restore the old rbp
 16763 0000BBE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16764 0000BBE8 EB04                    	jmp .L_if_end_0052
 16765                                  .L_if_else_0052:
 16766 0000BBEA 488B4520                	mov rax, PARAM(0)	; param ch
 16767                                  .L_if_end_0052:
 16768 0000BBEE C9                      	leave
 16769 0000BBEF C21800                  	ret AND_KILL_FRAME(1)
 16770                                  .L_lambda_simple_end_005c:	; new closure is in rax
 16771 0000BBF2 48890425[96120000]      	mov qword [free_var_72], rax
 16772 0000BBFA 48B8-                   	mov rax, sob_void
 16772 0000BBFC [0000000000000000] 
 16773 0000BC04 C9                      	leave
 16774 0000BC05 C21800                  	ret AND_KILL_FRAME(1)
 16775                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16776 0000BC08 803804                  	cmp byte [rax], T_closure
 16777 0000BC0B 0F85FC9D0000            	jne L_error_non_closure
 16778 0000BC11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16779 0000BC14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16780                                  
 16781 0000BC17 4889C7                  	mov rdi, rax
 16782 0000BC1A E8ECA00000              	call print_sexpr_if_not_void
 16783 0000BC1F 48B8-                   	mov rax, L_constants + 0
 16783 0000BC21 [0000000000000000] 
 16784 0000BC29 48890425[41120000]      	mov qword [free_var_67], rax
 16785 0000BC31 48B8-                   	mov rax, sob_void
 16785 0000BC33 [0000000000000000] 
 16786                                  
 16787 0000BC3B 4889C7                  	mov rdi, rax
 16788 0000BC3E E8C8A00000              	call print_sexpr_if_not_void
 16789 0000BC43 48B8-                   	mov rax, L_constants + 0
 16789 0000BC45 [0000000000000000] 
 16790 0000BC4D 48890425[30120000]      	mov qword [free_var_66], rax
 16791 0000BC55 48B8-                   	mov rax, sob_void
 16791 0000BC57 [0000000000000000] 
 16792                                  
 16793 0000BC5F 4889C7                  	mov rdi, rax
 16794 0000BC62 E8A4A00000              	call print_sexpr_if_not_void
 16795 0000BC67 48B8-                   	mov rax, L_constants + 0
 16795 0000BC69 [0000000000000000] 
 16796 0000BC71 48890425[52120000]      	mov qword [free_var_68], rax
 16797 0000BC79 48B8-                   	mov rax, sob_void
 16797 0000BC7B [0000000000000000] 
 16798                                  
 16799 0000BC83 4889C7                  	mov rdi, rax
 16800 0000BC86 E880A00000              	call print_sexpr_if_not_void
 16801 0000BC8B 48B8-                   	mov rax, L_constants + 0
 16801 0000BC8D [0000000000000000] 
 16802 0000BC95 48890425[74120000]      	mov qword [free_var_70], rax
 16803 0000BC9D 48B8-                   	mov rax, sob_void
 16803 0000BC9F [0000000000000000] 
 16804                                  
 16805 0000BCA7 4889C7                  	mov rdi, rax
 16806 0000BCAA E85CA00000              	call print_sexpr_if_not_void
 16807 0000BCAF 48B8-                   	mov rax, L_constants + 0
 16807 0000BCB1 [0000000000000000] 
 16808 0000BCB9 48890425[63120000]      	mov qword [free_var_69], rax
 16809 0000BCC1 48B8-                   	mov rax, sob_void
 16809 0000BCC3 [0000000000000000] 
 16810                                  
 16811 0000BCCB 4889C7                  	mov rdi, rax
 16812 0000BCCE E838A00000              	call print_sexpr_if_not_void
 16813                                  	; preparing a non-tail-call
 16814 0000BCD3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16815 0000BCD8 E8D99D0000              	call malloc
 16816 0000BCDD 50                      	push rax
 16817 0000BCDE BF00000000              	mov rdi, 8 * 0	; new rib
 16818 0000BCE3 E8CE9D0000              	call malloc
 16819 0000BCE8 50                      	push rax
 16820 0000BCE9 BF08000000              	mov rdi, 8 * 1	; extended env
 16821 0000BCEE E8C39D0000              	call malloc
 16822 0000BCF3 488B7D10                	mov rdi, ENV
 16823 0000BCF7 BE00000000              	mov rsi, 0
 16824 0000BCFC BA01000000              	mov rdx, 1
 16825                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 16826 0000BD01 4883FE00                	cmp rsi, 0
 16827 0000BD05 7410                    	je .L_lambda_simple_env_end_005d
 16828 0000BD07 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16829 0000BD0B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16830 0000BD0F 48FFC6                  	inc rsi
 16831 0000BD12 48FFC2                  	inc rdx
 16832 0000BD15 EBEA                    	jmp .L_lambda_simple_env_loop_005d
 16833                                  .L_lambda_simple_env_end_005d:
 16834 0000BD17 5B                      	pop rbx
 16835 0000BD18 BE00000000              	mov rsi, 0
 16836                                  .L_lambda_simple_params_loop_005d:	; copy params
 16837 0000BD1D 4883FE00                	cmp rsi, 0
 16838 0000BD21 740E                    	je .L_lambda_simple_params_end_005d
 16839 0000BD23 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16840 0000BD28 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16841 0000BD2C 48FFC6                  	inc rsi
 16842 0000BD2F EBEC                    	jmp .L_lambda_simple_params_loop_005d
 16843                                  .L_lambda_simple_params_end_005d:
 16844 0000BD31 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16845 0000BD34 4889C3                  	mov rbx, rax
 16846 0000BD37 58                      	pop rax
 16847 0000BD38 C60004                  	mov byte [rax], T_closure
 16848 0000BD3B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16849 0000BD3F 48C74009[4CBD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 16850 0000BD47 E939030000              	jmp .L_lambda_simple_end_005d
 16851                                  .L_lambda_simple_code_005d:	; lambda-simple body
 16852 0000BD4C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16853 0000BD52 740B                    	je .L_lambda_simple_arity_check_ok_005d
 16854 0000BD54 FF742410                	push qword [rsp + 8 * 2]
 16855 0000BD58 6A01                    	push 1
 16856 0000BD5A E9109D0000              	jmp L_error_incorrect_arity_simple
 16857                                  .L_lambda_simple_arity_check_ok_005d:
 16858 0000BD5F C8000000                	enter 0, 0
 16859 0000BD63 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16860 0000BD68 E8499D0000              	call malloc
 16861 0000BD6D 50                      	push rax
 16862 0000BD6E BF08000000              	mov rdi, 8 * 1	; new rib
 16863 0000BD73 E83E9D0000              	call malloc
 16864 0000BD78 50                      	push rax
 16865 0000BD79 BF10000000              	mov rdi, 8 * 2	; extended env
 16866 0000BD7E E8339D0000              	call malloc
 16867 0000BD83 488B7D10                	mov rdi, ENV
 16868 0000BD87 4831F6                  	 xor rsi, rsi
 16869 0000BD8A 4831D2                  	 xor rdx, rdx
 16870 0000BD8D 48FFC2                  	inc rdx
 16871                                  .L_lambda_opt_env_loop_0010:	; ext_env[i + 1] <-- env[i]
 16872 0000BD90 4883FE01                	cmp rsi, 1
 16873 0000BD94 7410                    	je .L_lambda_opt_env_end_0010
 16874 0000BD96 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16875 0000BD9A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16876 0000BD9E 48FFC6                  	inc rsi
 16877 0000BDA1 48FFC2                  	inc rdx
 16878 0000BDA4 EBEA                    	jmp .L_lambda_opt_env_loop_0010
 16879                                  .L_lambda_opt_env_end_0010:
 16880 0000BDA6 5B                      	pop rbx
 16881 0000BDA7 4831F6                  	xor rsi, rsi
 16882                                  .L_lambda_opt_params_loop_0010:	; copy params
 16883 0000BDAA 4883FE01                	cmp rsi, 1
 16884 0000BDAE 740E                    	je .L_lambda_opt_params_end_0010
 16885 0000BDB0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16886 0000BDB5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16887 0000BDB9 48FFC6                  	inc rsi
 16888 0000BDBC EBEC                    	jmp .L_lambda_opt_params_loop_0010
 16889                                  .L_lambda_opt_params_end_0010:
 16890 0000BDBE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16891 0000BDC1 4889C3                  	mov rbx, rax
 16892 0000BDC4 58                      	pop rax
 16893 0000BDC5 C60004                  	mov byte [rax], T_closure
 16894 0000BDC8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16895 0000BDCC 48C74009[D9BD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 16896 0000BDD4 E9A8020000              	jmp .L_lambda_opt_end_0010
 16897                                  .L_lambda_opt_code_0010:; lambda opt body
 16898 0000BDD9 48837C241000            	cmp qword [rsp + 8 * 2], 0
 16899 0000BDDF 7409                    	je .L_lambda_opt_arity_check_exact_0010
 16900 0000BDE1 7F57                    	jg .L_lambda_opt_arity_check_more_0010
 16901 0000BDE3 6A00                    	push 0
 16902 0000BDE5 E9999C0000              	jmp L_error_incorrect_arity_opt
 16903                                  .L_lambda_opt_arity_check_exact_0010:
 16904 0000BDEA 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 16905 0000BDEE 4C894C24F8              	mov qword [rsp -8], r9
 16906 0000BDF3 4C8B4C2408              	mov r9, qword [rsp +8]
 16907 0000BDF8 4C890C24                	mov qword [rsp +8 * 0], r9
 16908 0000BDFC 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 16909 0000BE01 4C89C9                  	mov rcx, r9
 16910 0000BE04 49FFC1                  	inc r9
 16911 0000BE07 4C894C2408              	mov qword [rsp +8], r9
 16912 0000BE0C 4889E2                  	mov rdx, rsp
 16913 0000BE0F 4883C218                	add rdx, 24
 16914                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0010:
 16915 0000BE13 4883F900                	cmp rcx, 0
 16916 0000BE17 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0010
 16917 0000BE19 4C8B02                  	mov r8, qword [rdx]
 16918 0000BE1C 4C8942F8                	mov qword [rdx - 8], r8
 16919 0000BE20 4883C208                	add rdx, 8
 16920 0000BE24 48FFC9                  	dec rcx
 16921 0000BE27 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0010
 16922                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0010:
 16923 0000BE29 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 16924 0000BE31 4883EC08                	sub rsp, 8
 16925 0000BE35 E984000000              	jmp .L_lambda_opt_stack_adjusted_0010
 16926                                  .L_lambda_opt_arity_check_more_0010:
 16927 0000BE3A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16928 0000BE3F 4D89C4                  	mov r12, r8
 16929 0000BE42 4C89C1                  	mov rcx, r8
 16930 0000BE45 4D8D5002                	lea r10, [r8 + 2] 
 16931 0000BE49 4883E900                	sub rcx, 0
 16932 0000BE4D 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 16933 0000BE52 49B9-                   	mov r9, sob_nil
 16933 0000BE54 [0100000000000000] 
 16934                                  .L_lambda_opt_create_list_of_opt_params_0010:
 16935 0000BE5C 4883F900                	cmp rcx, 0
 16936 0000BE60 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0010
 16937 0000BE62 BF11000000              	mov rdi, 17
 16938 0000BE67 E84A9C0000              	call malloc
 16939 0000BE6C C60021                  	mov byte [rax], T_pair
 16940 0000BE6F 498B1B                  	mov rbx, qword [r11]
 16941 0000BE72 48895801                	mov qword [rax +1], rbx
 16942 0000BE76 4C894809                	mov qword [rax + 1 + 8], r9
 16943 0000BE7A 4989C1                  	mov r9, rax
 16944 0000BE7D 48FFC9                  	dec rcx
 16945 0000BE80 4983EB08                	sub r11, 8
 16946 0000BE84 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0010
 16947                                  .L_lambda_opt_create_list_of_opt_params_end_0010:
 16948 0000BE86 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 16949 0000BE8B 4D8908                  	mov qword [r8], r9
 16950 0000BE8E 4E8D14D500000000        	lea r10, [8 * r10]
 16951 0000BE96 4901E2                  	add r10, rsp
 16952 0000BE99 B904000000              	mov rcx, 4 + 0
 16953                                  .L_lambda_opt_stack_shrink_loop_0010:
 16954 0000BE9E 4883F900                	cmp rcx, 0
 16955 0000BEA2 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0010
 16956 0000BEA4 4D8B18                  	mov r11, qword [r8]
 16957 0000BEA7 4D891A                  	mov qword [r10], r11
 16958 0000BEAA 4983E808                	sub r8, 8
 16959 0000BEAE 4983EA08                	sub r10, 8
 16960 0000BEB2 48FFC9                  	dec rcx
 16961 0000BEB5 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 16962                                  .L_lambda_opt_stack_shrink_loop_exit_0010:
 16963 0000BEB7 4983C208                	add r10, 8
 16964 0000BEBB 4C89D4                  	mov rsp, r10
 16965                                  .L_lambda_opt_stack_adjusted_0010:;continue with the code, the stack is ok
 16966 0000BEBE 48C744241001000000      	mov qword [rsp + 8*2], 1
 16967 0000BEC7 C8000000                	enter 0, 0
 16968                                  	; preparing a tail-call
 16969                                  	; preparing a non-tail-call
 16970 0000BECB 488B4520                	mov rax, PARAM(0)	; param s
 16971 0000BECF 50                      	push rax
 16972 0000BED0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16973 0000BED5 E8DC9B0000              	call malloc
 16974 0000BEDA 50                      	push rax
 16975 0000BEDB BF08000000              	mov rdi, 8 * 1	; new rib
 16976 0000BEE0 E8D19B0000              	call malloc
 16977 0000BEE5 50                      	push rax
 16978 0000BEE6 BF18000000              	mov rdi, 8 * 3	; extended env
 16979 0000BEEB E8C69B0000              	call malloc
 16980 0000BEF0 488B7D10                	mov rdi, ENV
 16981 0000BEF4 BE00000000              	mov rsi, 0
 16982 0000BEF9 BA01000000              	mov rdx, 1
 16983                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 16984 0000BEFE 4883FE02                	cmp rsi, 2
 16985 0000BF02 7410                    	je .L_lambda_simple_env_end_005e
 16986 0000BF04 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16987 0000BF08 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16988 0000BF0C 48FFC6                  	inc rsi
 16989 0000BF0F 48FFC2                  	inc rdx
 16990 0000BF12 EBEA                    	jmp .L_lambda_simple_env_loop_005e
 16991                                  .L_lambda_simple_env_end_005e:
 16992 0000BF14 5B                      	pop rbx
 16993 0000BF15 BE00000000              	mov rsi, 0
 16994                                  .L_lambda_simple_params_loop_005e:	; copy params
 16995 0000BF1A 4883FE01                	cmp rsi, 1
 16996 0000BF1E 740E                    	je .L_lambda_simple_params_end_005e
 16997 0000BF20 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16998 0000BF25 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16999 0000BF29 48FFC6                  	inc rsi
 17000 0000BF2C EBEC                    	jmp .L_lambda_simple_params_loop_005e
 17001                                  .L_lambda_simple_params_end_005e:
 17002 0000BF2E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17003 0000BF31 4889C3                  	mov rbx, rax
 17004 0000BF34 58                      	pop rax
 17005 0000BF35 C60004                  	mov byte [rax], T_closure
 17006 0000BF38 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17007 0000BF3C 48C74009[49BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 17008 0000BF44 E9A4000000              	jmp .L_lambda_simple_end_005e
 17009                                  .L_lambda_simple_code_005e:	; lambda-simple body
 17010 0000BF49 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17011 0000BF4F 740B                    	je .L_lambda_simple_arity_check_ok_005e
 17012 0000BF51 FF742410                	push qword [rsp + 8 * 2]
 17013 0000BF55 6A01                    	push 1
 17014 0000BF57 E9139B0000              	jmp L_error_incorrect_arity_simple
 17015                                  .L_lambda_simple_arity_check_ok_005e:
 17016 0000BF5C C8000000                	enter 0, 0
 17017                                  	; preparing a tail-call
 17018                                  	; preparing a non-tail-call
 17019 0000BF60 488B4520                	mov rax, PARAM(0)	; param ch
 17020 0000BF64 50                      	push rax
 17021 0000BF65 6A01                    	push 1	; arg count
 17022 0000BF67 488B0425[85120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17023 0000BF6F 803805                  	cmp byte [rax], T_undefined
 17024 0000BF72 0F84119A0000            	je L_error_fvar_undefined
 17025 0000BF78 803804                  	cmp byte [rax], T_closure
 17026 0000BF7B 0F858C9A0000            	jne L_error_non_closure
 17027 0000BF81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17028 0000BF84 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17029 0000BF87 50                      	push rax
 17030 0000BF88 6A01                    	push 1	; arg count
 17031 0000BF8A 488B0425[1F120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17032 0000BF92 803805                  	cmp byte [rax], T_undefined
 17033 0000BF95 0F84EE990000            	je L_error_fvar_undefined
 17034 0000BF9B 803804                  	cmp byte [rax], T_closure
 17035 0000BF9E 0F85699A0000            	jne L_error_non_closure
 17036 0000BFA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17037 0000BFA7 FF7508                  	push qword [rbp + 8 * 1]
 17038                                   ; old ret addr
 17039 0000BFAA FF7500                  	push qword [rbp]
 17040                                   ; restore the old rbp
 17041 0000BFAD BB01000000              	mov rbx, 1
 17042 0000BFB2 4883C303                	add rbx, 3
 17043 0000BFB6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17044 0000BFBA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17045 0000BFBF 4C8D4DF8                	lea r9, [rbp - 8]
 17046 0000BFC3 B905000000              	mov rcx, 5
 17047                                  .L_tc_recycle_frame_loop_0099:
 17048 0000BFC8 4883F900                	cmp rcx, 0
 17049 0000BFCC 7413                    	je .L_tc_recycle_frame_done_0099
 17050 0000BFCE 4D8B11                  	mov r10, qword [r9]
 17051 0000BFD1 4D8910                  	mov qword [r8], r10
 17052 0000BFD4 4983E808                	sub r8, 8
 17053 0000BFD8 4983E908                	sub r9, 8
 17054 0000BFDC 48FFC9                  	dec rcx
 17055 0000BFDF EBE7                    	jmp .L_tc_recycle_frame_loop_0099
 17056                                  .L_tc_recycle_frame_done_0099:
 17057 0000BFE1 498D6008                	lea rsp, [r8 + 8]
 17058 0000BFE5 5D                      	pop rbp ; restore the old rbp
 17059 0000BFE6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17060 0000BFE9 C9                      	leave
 17061 0000BFEA C21800                  	ret AND_KILL_FRAME(1)
 17062                                  .L_lambda_simple_end_005e:	; new closure is in rax
 17063 0000BFED 50                      	push rax
 17064 0000BFEE 6A02                    	push 2	; arg count
 17065 0000BFF0 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
 17066 0000BFF8 803805                  	cmp byte [rax], T_undefined
 17067 0000BFFB 0F8488990000            	je L_error_fvar_undefined
 17068 0000C001 803804                  	cmp byte [rax], T_closure
 17069 0000C004 0F85039A0000            	jne L_error_non_closure
 17070 0000C00A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17071 0000C00D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17072 0000C010 50                      	push rax
 17073 0000C011 488B4510                	mov rax, ENV
 17074 0000C015 488B00                  	mov rax, qword [rax + 8 * 0]
 17075 0000C018 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17076 0000C01B 50                      	push rax
 17077 0000C01C 6A02                    	push 2	; arg count
 17078 0000C01E 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
 17079 0000C026 803805                  	cmp byte [rax], T_undefined
 17080 0000C029 0F845A990000            	je L_error_fvar_undefined
 17081 0000C02F 803804                  	cmp byte [rax], T_closure
 17082 0000C032 0F85D5990000            	jne L_error_non_closure
 17083 0000C038 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17084 0000C03B FF7508                  	push qword [rbp + 8 * 1]
 17085                                   ; old ret addr
 17086 0000C03E FF7500                  	push qword [rbp]
 17087                                   ; restore the old rbp
 17088 0000C041 BB02000000              	mov rbx, 2
 17089 0000C046 4883C303                	add rbx, 3
 17090 0000C04A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17091 0000C04E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17092 0000C053 4C8D4DF8                	lea r9, [rbp - 8]
 17093 0000C057 B906000000              	mov rcx, 6
 17094                                  .L_tc_recycle_frame_loop_0098:
 17095 0000C05C 4883F900                	cmp rcx, 0
 17096 0000C060 7413                    	je .L_tc_recycle_frame_done_0098
 17097 0000C062 4D8B11                  	mov r10, qword [r9]
 17098 0000C065 4D8910                  	mov qword [r8], r10
 17099 0000C068 4983E808                	sub r8, 8
 17100 0000C06C 4983E908                	sub r9, 8
 17101 0000C070 48FFC9                  	dec rcx
 17102 0000C073 EBE7                    	jmp .L_tc_recycle_frame_loop_0098
 17103                                  .L_tc_recycle_frame_done_0098:
 17104 0000C075 498D6008                	lea rsp, [r8 + 8]
 17105 0000C079 5D                      	pop rbp ; restore the old rbp
 17106 0000C07A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17107 0000C07D C9                      	leave
 17108 0000C07E C21800                  	ret 8 * (2 + 1)
 17109                                  .L_lambda_opt_end_0010:	; new closure is in rax
 17110 0000C081 C9                      	leave
 17111 0000C082 C21800                  	ret AND_KILL_FRAME(1)
 17112                                  .L_lambda_simple_end_005d:	; new closure is in rax
 17113 0000C085 50                      	push rax
 17114 0000C086 6A01                    	push 1	; arg count
 17115 0000C088 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17116 0000C08D E8249A0000              	call malloc
 17117 0000C092 50                      	push rax
 17118 0000C093 BF00000000              	mov rdi, 8 * 0	; new rib
 17119 0000C098 E8199A0000              	call malloc
 17120 0000C09D 50                      	push rax
 17121 0000C09E BF08000000              	mov rdi, 8 * 1	; extended env
 17122 0000C0A3 E80E9A0000              	call malloc
 17123 0000C0A8 488B7D10                	mov rdi, ENV
 17124 0000C0AC BE00000000              	mov rsi, 0
 17125 0000C0B1 BA01000000              	mov rdx, 1
 17126                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 17127 0000C0B6 4883FE00                	cmp rsi, 0
 17128 0000C0BA 7410                    	je .L_lambda_simple_env_end_005f
 17129 0000C0BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17130 0000C0C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17131 0000C0C4 48FFC6                  	inc rsi
 17132 0000C0C7 48FFC2                  	inc rdx
 17133 0000C0CA EBEA                    	jmp .L_lambda_simple_env_loop_005f
 17134                                  .L_lambda_simple_env_end_005f:
 17135 0000C0CC 5B                      	pop rbx
 17136 0000C0CD BE00000000              	mov rsi, 0
 17137                                  .L_lambda_simple_params_loop_005f:	; copy params
 17138 0000C0D2 4883FE00                	cmp rsi, 0
 17139 0000C0D6 740E                    	je .L_lambda_simple_params_end_005f
 17140 0000C0D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17141 0000C0DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17142 0000C0E1 48FFC6                  	inc rsi
 17143 0000C0E4 EBEC                    	jmp .L_lambda_simple_params_loop_005f
 17144                                  .L_lambda_simple_params_end_005f:
 17145 0000C0E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17146 0000C0E9 4889C3                  	mov rbx, rax
 17147 0000C0EC 58                      	pop rax
 17148 0000C0ED C60004                  	mov byte [rax], T_closure
 17149 0000C0F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17150 0000C0F4 48C74009[01C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 17151 0000C0FC E938010000              	jmp .L_lambda_simple_end_005f
 17152                                  .L_lambda_simple_code_005f:	; lambda-simple body
 17153 0000C101 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17154 0000C107 740B                    	je .L_lambda_simple_arity_check_ok_005f
 17155 0000C109 FF742410                	push qword [rsp + 8 * 2]
 17156 0000C10D 6A01                    	push 1
 17157 0000C10F E95B990000              	jmp L_error_incorrect_arity_simple
 17158                                  .L_lambda_simple_arity_check_ok_005f:
 17159 0000C114 C8000000                	enter 0, 0
 17160                                  	; preparing a non-tail-call
 17161 0000C118 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 17162 0000C120 803805                  	cmp byte [rax], T_undefined
 17163 0000C123 0F8460980000            	je L_error_fvar_undefined
 17164 0000C129 50                      	push rax
 17165 0000C12A 6A01                    	push 1	; arg count
 17166 0000C12C 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17167 0000C130 803804                  	cmp byte [rax], T_closure
 17168 0000C133 0F85D4980000            	jne L_error_non_closure
 17169 0000C139 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17170 0000C13C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17171 0000C13F 48890425[41120000]      	mov qword [free_var_67], rax
 17172 0000C147 48B8-                   	mov rax, sob_void
 17172 0000C149 [0000000000000000] 
 17173                                  
 17174                                  	; preparing a non-tail-call
 17175 0000C151 488B0425[230E0000]      	mov rax, qword [free_var_5]	; free var <=
 17176 0000C159 803805                  	cmp byte [rax], T_undefined
 17177 0000C15C 0F8427980000            	je L_error_fvar_undefined
 17178 0000C162 50                      	push rax
 17179 0000C163 6A01                    	push 1	; arg count
 17180 0000C165 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17181 0000C169 803804                  	cmp byte [rax], T_closure
 17182 0000C16C 0F859B980000            	jne L_error_non_closure
 17183 0000C172 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17184 0000C175 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17185 0000C178 48890425[30120000]      	mov qword [free_var_66], rax
 17186 0000C180 48B8-                   	mov rax, sob_void
 17186 0000C182 [0000000000000000] 
 17187                                  
 17188                                  	; preparing a non-tail-call
 17189 0000C18A 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 17190 0000C192 803805                  	cmp byte [rax], T_undefined
 17191 0000C195 0F84EE970000            	je L_error_fvar_undefined
 17192 0000C19B 50                      	push rax
 17193 0000C19C 6A01                    	push 1	; arg count
 17194 0000C19E 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17195 0000C1A2 803804                  	cmp byte [rax], T_closure
 17196 0000C1A5 0F8562980000            	jne L_error_non_closure
 17197 0000C1AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17198 0000C1AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17199 0000C1B1 48890425[52120000]      	mov qword [free_var_68], rax
 17200 0000C1B9 48B8-                   	mov rax, sob_void
 17200 0000C1BB [0000000000000000] 
 17201                                  
 17202                                  	; preparing a non-tail-call
 17203 0000C1C3 488B0425[450E0000]      	mov rax, qword [free_var_7]	; free var >
 17204 0000C1CB 803805                  	cmp byte [rax], T_undefined
 17205 0000C1CE 0F84B5970000            	je L_error_fvar_undefined
 17206 0000C1D4 50                      	push rax
 17207 0000C1D5 6A01                    	push 1	; arg count
 17208 0000C1D7 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17209 0000C1DB 803804                  	cmp byte [rax], T_closure
 17210 0000C1DE 0F8529980000            	jne L_error_non_closure
 17211 0000C1E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17212 0000C1E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17213 0000C1EA 48890425[74120000]      	mov qword [free_var_70], rax
 17214 0000C1F2 48B8-                   	mov rax, sob_void
 17214 0000C1F4 [0000000000000000] 
 17215                                  
 17216                                  	; preparing a non-tail-call
 17217 0000C1FC 488B0425[560E0000]      	mov rax, qword [free_var_8]	; free var >=
 17218 0000C204 803805                  	cmp byte [rax], T_undefined
 17219 0000C207 0F847C970000            	je L_error_fvar_undefined
 17220 0000C20D 50                      	push rax
 17221 0000C20E 6A01                    	push 1	; arg count
 17222 0000C210 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17223 0000C214 803804                  	cmp byte [rax], T_closure
 17224 0000C217 0F85F0970000            	jne L_error_non_closure
 17225 0000C21D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17226 0000C220 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17227 0000C223 48890425[63120000]      	mov qword [free_var_69], rax
 17228 0000C22B 48B8-                   	mov rax, sob_void
 17228 0000C22D [0000000000000000] 
 17229 0000C235 C9                      	leave
 17230 0000C236 C21800                  	ret AND_KILL_FRAME(1)
 17231                                  .L_lambda_simple_end_005f:	; new closure is in rax
 17232 0000C239 803804                  	cmp byte [rax], T_closure
 17233 0000C23C 0F85CB970000            	jne L_error_non_closure
 17234 0000C242 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17235 0000C245 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17236                                  
 17237 0000C248 4889C7                  	mov rdi, rax
 17238 0000C24B E8BB9A0000              	call print_sexpr_if_not_void
 17239 0000C250 48B8-                   	mov rax, L_constants + 0
 17239 0000C252 [0000000000000000] 
 17240 0000C25A 48890425[2C160000]      	mov qword [free_var_126], rax
 17241 0000C262 48B8-                   	mov rax, sob_void
 17241 0000C264 [0000000000000000] 
 17242                                  
 17243 0000C26C 4889C7                  	mov rdi, rax
 17244 0000C26F E8979A0000              	call print_sexpr_if_not_void
 17245 0000C274 48B8-                   	mov rax, L_constants + 0
 17245 0000C276 [0000000000000000] 
 17246 0000C27E 48890425[92160000]      	mov qword [free_var_132], rax
 17247 0000C286 48B8-                   	mov rax, sob_void
 17247 0000C288 [0000000000000000] 
 17248                                  
 17249 0000C290 4889C7                  	mov rdi, rax
 17250 0000C293 E8739A0000              	call print_sexpr_if_not_void
 17251                                  	; preparing a non-tail-call
 17252 0000C298 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17253 0000C29D E814980000              	call malloc
 17254 0000C2A2 50                      	push rax
 17255 0000C2A3 BF00000000              	mov rdi, 8 * 0	; new rib
 17256 0000C2A8 E809980000              	call malloc
 17257 0000C2AD 50                      	push rax
 17258 0000C2AE BF08000000              	mov rdi, 8 * 1	; extended env
 17259 0000C2B3 E8FE970000              	call malloc
 17260 0000C2B8 488B7D10                	mov rdi, ENV
 17261 0000C2BC BE00000000              	mov rsi, 0
 17262 0000C2C1 BA01000000              	mov rdx, 1
 17263                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 17264 0000C2C6 4883FE00                	cmp rsi, 0
 17265 0000C2CA 7410                    	je .L_lambda_simple_env_end_0060
 17266 0000C2CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17267 0000C2D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17268 0000C2D4 48FFC6                  	inc rsi
 17269 0000C2D7 48FFC2                  	inc rdx
 17270 0000C2DA EBEA                    	jmp .L_lambda_simple_env_loop_0060
 17271                                  .L_lambda_simple_env_end_0060:
 17272 0000C2DC 5B                      	pop rbx
 17273 0000C2DD BE00000000              	mov rsi, 0
 17274                                  .L_lambda_simple_params_loop_0060:	; copy params
 17275 0000C2E2 4883FE00                	cmp rsi, 0
 17276 0000C2E6 740E                    	je .L_lambda_simple_params_end_0060
 17277 0000C2E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17278 0000C2ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17279 0000C2F1 48FFC6                  	inc rsi
 17280 0000C2F4 EBEC                    	jmp .L_lambda_simple_params_loop_0060
 17281                                  .L_lambda_simple_params_end_0060:
 17282 0000C2F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17283 0000C2F9 4889C3                  	mov rbx, rax
 17284 0000C2FC 58                      	pop rax
 17285 0000C2FD C60004                  	mov byte [rax], T_closure
 17286 0000C300 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17287 0000C304 48C74009[11C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 17288 0000C30C E966010000              	jmp .L_lambda_simple_end_0060
 17289                                  .L_lambda_simple_code_0060:	; lambda-simple body
 17290 0000C311 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17291 0000C317 740B                    	je .L_lambda_simple_arity_check_ok_0060
 17292 0000C319 FF742410                	push qword [rsp + 8 * 2]
 17293 0000C31D 6A01                    	push 1
 17294 0000C31F E94B970000              	jmp L_error_incorrect_arity_simple
 17295                                  .L_lambda_simple_arity_check_ok_0060:
 17296 0000C324 C8000000                	enter 0, 0
 17297 0000C328 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17298 0000C32D E884970000              	call malloc
 17299 0000C332 50                      	push rax
 17300 0000C333 BF08000000              	mov rdi, 8 * 1	; new rib
 17301 0000C338 E879970000              	call malloc
 17302 0000C33D 50                      	push rax
 17303 0000C33E BF10000000              	mov rdi, 8 * 2	; extended env
 17304 0000C343 E86E970000              	call malloc
 17305 0000C348 488B7D10                	mov rdi, ENV
 17306 0000C34C BE00000000              	mov rsi, 0
 17307 0000C351 BA01000000              	mov rdx, 1
 17308                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 17309 0000C356 4883FE01                	cmp rsi, 1
 17310 0000C35A 7410                    	je .L_lambda_simple_env_end_0061
 17311 0000C35C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17312 0000C360 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17313 0000C364 48FFC6                  	inc rsi
 17314 0000C367 48FFC2                  	inc rdx
 17315 0000C36A EBEA                    	jmp .L_lambda_simple_env_loop_0061
 17316                                  .L_lambda_simple_env_end_0061:
 17317 0000C36C 5B                      	pop rbx
 17318 0000C36D BE00000000              	mov rsi, 0
 17319                                  .L_lambda_simple_params_loop_0061:	; copy params
 17320 0000C372 4883FE01                	cmp rsi, 1
 17321 0000C376 740E                    	je .L_lambda_simple_params_end_0061
 17322 0000C378 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17323 0000C37D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17324 0000C381 48FFC6                  	inc rsi
 17325 0000C384 EBEC                    	jmp .L_lambda_simple_params_loop_0061
 17326                                  .L_lambda_simple_params_end_0061:
 17327 0000C386 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17328 0000C389 4889C3                  	mov rbx, rax
 17329 0000C38C 58                      	pop rax
 17330 0000C38D C60004                  	mov byte [rax], T_closure
 17331 0000C390 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17332 0000C394 48C74009[A1C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 17333 0000C39C E9D2000000              	jmp .L_lambda_simple_end_0061
 17334                                  .L_lambda_simple_code_0061:	; lambda-simple body
 17335 0000C3A1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17336 0000C3A7 740B                    	je .L_lambda_simple_arity_check_ok_0061
 17337 0000C3A9 FF742410                	push qword [rsp + 8 * 2]
 17338 0000C3AD 6A01                    	push 1
 17339 0000C3AF E9BB960000              	jmp L_error_incorrect_arity_simple
 17340                                  .L_lambda_simple_arity_check_ok_0061:
 17341 0000C3B4 C8000000                	enter 0, 0
 17342                                  	; preparing a tail-call
 17343                                  	; preparing a non-tail-call
 17344                                  	; preparing a non-tail-call
 17345 0000C3B8 488B4520                	mov rax, PARAM(0)	; param str
 17346 0000C3BC 50                      	push rax
 17347 0000C3BD 6A01                    	push 1	; arg count
 17348 0000C3BF 488B0425[B5150000]      	mov rax, qword [free_var_119]	; free var string->list
 17349 0000C3C7 803805                  	cmp byte [rax], T_undefined
 17350 0000C3CA 0F84B9950000            	je L_error_fvar_undefined
 17351 0000C3D0 803804                  	cmp byte [rax], T_closure
 17352 0000C3D3 0F8534960000            	jne L_error_non_closure
 17353 0000C3D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17354 0000C3DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17355 0000C3DF 50                      	push rax
 17356 0000C3E0 488B4510                	mov rax, ENV
 17357 0000C3E4 488B00                  	mov rax, qword [rax + 8 * 0]
 17358 0000C3E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17359 0000C3EA 50                      	push rax
 17360 0000C3EB 6A02                    	push 2	; arg count
 17361 0000C3ED 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
 17362 0000C3F5 803805                  	cmp byte [rax], T_undefined
 17363 0000C3F8 0F848B950000            	je L_error_fvar_undefined
 17364 0000C3FE 803804                  	cmp byte [rax], T_closure
 17365 0000C401 0F8506960000            	jne L_error_non_closure
 17366 0000C407 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17367 0000C40A FF5009                  	call SOB_CLOSURE_CODE(rax)
 17368 0000C40D 50                      	push rax
 17369 0000C40E 6A01                    	push 1	; arg count
 17370 0000C410 488B0425[0C140000]      	mov rax, qword [free_var_94]	; free var list->string
 17371 0000C418 803805                  	cmp byte [rax], T_undefined
 17372 0000C41B 0F8468950000            	je L_error_fvar_undefined
 17373 0000C421 803804                  	cmp byte [rax], T_closure
 17374 0000C424 0F85E3950000            	jne L_error_non_closure
 17375 0000C42A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17376 0000C42D FF7508                  	push qword [rbp + 8 * 1]
 17377                                   ; old ret addr
 17378 0000C430 FF7500                  	push qword [rbp]
 17379                                   ; restore the old rbp
 17380 0000C433 BB01000000              	mov rbx, 1
 17381 0000C438 4883C303                	add rbx, 3
 17382 0000C43C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17383 0000C440 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17384 0000C445 4C8D4DF8                	lea r9, [rbp - 8]
 17385 0000C449 B905000000              	mov rcx, 5
 17386                                  .L_tc_recycle_frame_loop_009a:
 17387 0000C44E 4883F900                	cmp rcx, 0
 17388 0000C452 7413                    	je .L_tc_recycle_frame_done_009a
 17389 0000C454 4D8B11                  	mov r10, qword [r9]
 17390 0000C457 4D8910                  	mov qword [r8], r10
 17391 0000C45A 4983E808                	sub r8, 8
 17392 0000C45E 4983E908                	sub r9, 8
 17393 0000C462 48FFC9                  	dec rcx
 17394 0000C465 EBE7                    	jmp .L_tc_recycle_frame_loop_009a
 17395                                  .L_tc_recycle_frame_done_009a:
 17396 0000C467 498D6008                	lea rsp, [r8 + 8]
 17397 0000C46B 5D                      	pop rbp ; restore the old rbp
 17398 0000C46C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17399 0000C46F C9                      	leave
 17400 0000C470 C21800                  	ret AND_KILL_FRAME(1)
 17401                                  .L_lambda_simple_end_0061:	; new closure is in rax
 17402 0000C473 C9                      	leave
 17403 0000C474 C21800                  	ret AND_KILL_FRAME(1)
 17404                                  .L_lambda_simple_end_0060:	; new closure is in rax
 17405 0000C477 50                      	push rax
 17406 0000C478 6A01                    	push 1	; arg count
 17407 0000C47A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17408 0000C47F E832960000              	call malloc
 17409 0000C484 50                      	push rax
 17410 0000C485 BF00000000              	mov rdi, 8 * 0	; new rib
 17411 0000C48A E827960000              	call malloc
 17412 0000C48F 50                      	push rax
 17413 0000C490 BF08000000              	mov rdi, 8 * 1	; extended env
 17414 0000C495 E81C960000              	call malloc
 17415 0000C49A 488B7D10                	mov rdi, ENV
 17416 0000C49E BE00000000              	mov rsi, 0
 17417 0000C4A3 BA01000000              	mov rdx, 1
 17418                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 17419 0000C4A8 4883FE00                	cmp rsi, 0
 17420 0000C4AC 7410                    	je .L_lambda_simple_env_end_0062
 17421 0000C4AE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17422 0000C4B2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17423 0000C4B6 48FFC6                  	inc rsi
 17424 0000C4B9 48FFC2                  	inc rdx
 17425 0000C4BC EBEA                    	jmp .L_lambda_simple_env_loop_0062
 17426                                  .L_lambda_simple_env_end_0062:
 17427 0000C4BE 5B                      	pop rbx
 17428 0000C4BF BE00000000              	mov rsi, 0
 17429                                  .L_lambda_simple_params_loop_0062:	; copy params
 17430 0000C4C4 4883FE00                	cmp rsi, 0
 17431 0000C4C8 740E                    	je .L_lambda_simple_params_end_0062
 17432 0000C4CA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17433 0000C4CF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17434 0000C4D3 48FFC6                  	inc rsi
 17435 0000C4D6 EBEC                    	jmp .L_lambda_simple_params_loop_0062
 17436                                  .L_lambda_simple_params_end_0062:
 17437 0000C4D8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17438 0000C4DB 4889C3                  	mov rbx, rax
 17439 0000C4DE 58                      	pop rax
 17440 0000C4DF C60004                  	mov byte [rax], T_closure
 17441 0000C4E2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17442 0000C4E6 48C74009[F3C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 17443 0000C4EE E98D000000              	jmp .L_lambda_simple_end_0062
 17444                                  .L_lambda_simple_code_0062:	; lambda-simple body
 17445 0000C4F3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17446 0000C4F9 740B                    	je .L_lambda_simple_arity_check_ok_0062
 17447 0000C4FB FF742410                	push qword [rsp + 8 * 2]
 17448 0000C4FF 6A01                    	push 1
 17449 0000C501 E969950000              	jmp L_error_incorrect_arity_simple
 17450                                  .L_lambda_simple_arity_check_ok_0062:
 17451 0000C506 C8000000                	enter 0, 0
 17452                                  	; preparing a non-tail-call
 17453 0000C50A 488B0425[85120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17454 0000C512 803805                  	cmp byte [rax], T_undefined
 17455 0000C515 0F846E940000            	je L_error_fvar_undefined
 17456 0000C51B 50                      	push rax
 17457 0000C51C 6A01                    	push 1	; arg count
 17458 0000C51E 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17459 0000C522 803804                  	cmp byte [rax], T_closure
 17460 0000C525 0F85E2940000            	jne L_error_non_closure
 17461 0000C52B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17462 0000C52E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17463 0000C531 48890425[2C160000]      	mov qword [free_var_126], rax
 17464 0000C539 48B8-                   	mov rax, sob_void
 17464 0000C53B [0000000000000000] 
 17465                                  
 17466                                  	; preparing a non-tail-call
 17467 0000C543 488B0425[96120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 17468 0000C54B 803805                  	cmp byte [rax], T_undefined
 17469 0000C54E 0F8435940000            	je L_error_fvar_undefined
 17470 0000C554 50                      	push rax
 17471 0000C555 6A01                    	push 1	; arg count
 17472 0000C557 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17473 0000C55B 803804                  	cmp byte [rax], T_closure
 17474 0000C55E 0F85A9940000            	jne L_error_non_closure
 17475 0000C564 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17476 0000C567 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17477 0000C56A 48890425[92160000]      	mov qword [free_var_132], rax
 17478 0000C572 48B8-                   	mov rax, sob_void
 17478 0000C574 [0000000000000000] 
 17479 0000C57C C9                      	leave
 17480 0000C57D C21800                  	ret AND_KILL_FRAME(1)
 17481                                  .L_lambda_simple_end_0062:	; new closure is in rax
 17482 0000C580 803804                  	cmp byte [rax], T_closure
 17483 0000C583 0F8584940000            	jne L_error_non_closure
 17484 0000C589 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17485 0000C58C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17486                                  
 17487 0000C58F 4889C7                  	mov rdi, rax
 17488 0000C592 E874970000              	call print_sexpr_if_not_void
 17489 0000C597 48B8-                   	mov rax, L_constants + 0
 17489 0000C599 [0000000000000000] 
 17490 0000C5A1 48890425[B4160000]      	mov qword [free_var_134], rax
 17491 0000C5A9 48B8-                   	mov rax, sob_void
 17491 0000C5AB [0000000000000000] 
 17492                                  
 17493 0000C5B3 4889C7                  	mov rdi, rax
 17494 0000C5B6 E850970000              	call print_sexpr_if_not_void
 17495 0000C5BB 48B8-                   	mov rax, L_constants + 0
 17495 0000C5BD [0000000000000000] 
 17496 0000C5C5 48890425[A3160000]      	mov qword [free_var_133], rax
 17497 0000C5CD 48B8-                   	mov rax, sob_void
 17497 0000C5CF [0000000000000000] 
 17498                                  
 17499 0000C5D7 4889C7                  	mov rdi, rax
 17500 0000C5DA E82C970000              	call print_sexpr_if_not_void
 17501 0000C5DF 48B8-                   	mov rax, L_constants + 0
 17501 0000C5E1 [0000000000000000] 
 17502 0000C5E9 48890425[C5160000]      	mov qword [free_var_135], rax
 17503 0000C5F1 48B8-                   	mov rax, sob_void
 17503 0000C5F3 [0000000000000000] 
 17504                                  
 17505 0000C5FB 4889C7                  	mov rdi, rax
 17506 0000C5FE E808970000              	call print_sexpr_if_not_void
 17507 0000C603 48B8-                   	mov rax, L_constants + 0
 17507 0000C605 [0000000000000000] 
 17508 0000C60D 48890425[D6160000]      	mov qword [free_var_136], rax
 17509 0000C615 48B8-                   	mov rax, sob_void
 17509 0000C617 [0000000000000000] 
 17510                                  
 17511 0000C61F 4889C7                  	mov rdi, rax
 17512 0000C622 E8E4960000              	call print_sexpr_if_not_void
 17513 0000C627 48B8-                   	mov rax, L_constants + 0
 17513 0000C629 [0000000000000000] 
 17514 0000C631 48890425[E7160000]      	mov qword [free_var_137], rax
 17515 0000C639 48B8-                   	mov rax, sob_void
 17515 0000C63B [0000000000000000] 
 17516                                  
 17517 0000C643 4889C7                  	mov rdi, rax
 17518 0000C646 E8C0960000              	call print_sexpr_if_not_void
 17519 0000C64B 48B8-                   	mov rax, L_constants + 0
 17519 0000C64D [0000000000000000] 
 17520 0000C655 48890425[E8150000]      	mov qword [free_var_122], rax
 17521 0000C65D 48B8-                   	mov rax, sob_void
 17521 0000C65F [0000000000000000] 
 17522                                  
 17523 0000C667 4889C7                  	mov rdi, rax
 17524 0000C66A E89C960000              	call print_sexpr_if_not_void
 17525 0000C66F 48B8-                   	mov rax, L_constants + 0
 17525 0000C671 [0000000000000000] 
 17526 0000C679 48890425[D7150000]      	mov qword [free_var_121], rax
 17527 0000C681 48B8-                   	mov rax, sob_void
 17527 0000C683 [0000000000000000] 
 17528                                  
 17529 0000C68B 4889C7                  	mov rdi, rax
 17530 0000C68E E878960000              	call print_sexpr_if_not_void
 17531 0000C693 48B8-                   	mov rax, L_constants + 0
 17531 0000C695 [0000000000000000] 
 17532 0000C69D 48890425[F9150000]      	mov qword [free_var_123], rax
 17533 0000C6A5 48B8-                   	mov rax, sob_void
 17533 0000C6A7 [0000000000000000] 
 17534                                  
 17535 0000C6AF 4889C7                  	mov rdi, rax
 17536 0000C6B2 E854960000              	call print_sexpr_if_not_void
 17537 0000C6B7 48B8-                   	mov rax, L_constants + 0
 17537 0000C6B9 [0000000000000000] 
 17538 0000C6C1 48890425[0A160000]      	mov qword [free_var_124], rax
 17539 0000C6C9 48B8-                   	mov rax, sob_void
 17539 0000C6CB [0000000000000000] 
 17540                                  
 17541 0000C6D3 4889C7                  	mov rdi, rax
 17542 0000C6D6 E830960000              	call print_sexpr_if_not_void
 17543 0000C6DB 48B8-                   	mov rax, L_constants + 0
 17543 0000C6DD [0000000000000000] 
 17544 0000C6E5 48890425[1B160000]      	mov qword [free_var_125], rax
 17545 0000C6ED 48B8-                   	mov rax, sob_void
 17545 0000C6EF [0000000000000000] 
 17546                                  
 17547 0000C6F7 4889C7                  	mov rdi, rax
 17548 0000C6FA E80C960000              	call print_sexpr_if_not_void
 17549                                  	; preparing a non-tail-call
 17550 0000C6FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17551 0000C704 E8AD930000              	call malloc
 17552 0000C709 50                      	push rax
 17553 0000C70A BF00000000              	mov rdi, 8 * 0	; new rib
 17554 0000C70F E8A2930000              	call malloc
 17555 0000C714 50                      	push rax
 17556 0000C715 BF08000000              	mov rdi, 8 * 1	; extended env
 17557 0000C71A E897930000              	call malloc
 17558 0000C71F 488B7D10                	mov rdi, ENV
 17559 0000C723 BE00000000              	mov rsi, 0
 17560 0000C728 BA01000000              	mov rdx, 1
 17561                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 17562 0000C72D 4883FE00                	cmp rsi, 0
 17563 0000C731 7410                    	je .L_lambda_simple_env_end_0063
 17564 0000C733 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17565 0000C737 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17566 0000C73B 48FFC6                  	inc rsi
 17567 0000C73E 48FFC2                  	inc rdx
 17568 0000C741 EBEA                    	jmp .L_lambda_simple_env_loop_0063
 17569                                  .L_lambda_simple_env_end_0063:
 17570 0000C743 5B                      	pop rbx
 17571 0000C744 BE00000000              	mov rsi, 0
 17572                                  .L_lambda_simple_params_loop_0063:	; copy params
 17573 0000C749 4883FE00                	cmp rsi, 0
 17574 0000C74D 740E                    	je .L_lambda_simple_params_end_0063
 17575 0000C74F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17576 0000C754 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17577 0000C758 48FFC6                  	inc rsi
 17578 0000C75B EBEC                    	jmp .L_lambda_simple_params_loop_0063
 17579                                  .L_lambda_simple_params_end_0063:
 17580 0000C75D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17581 0000C760 4889C3                  	mov rbx, rax
 17582 0000C763 58                      	pop rax
 17583 0000C764 C60004                  	mov byte [rax], T_closure
 17584 0000C767 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17585 0000C76B 48C74009[78C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 17586 0000C773 E9040D0000              	jmp .L_lambda_simple_end_0063
 17587                                  .L_lambda_simple_code_0063:	; lambda-simple body
 17588 0000C778 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17589 0000C77E 740B                    	je .L_lambda_simple_arity_check_ok_0063
 17590 0000C780 FF742410                	push qword [rsp + 8 * 2]
 17591 0000C784 6A02                    	push 2
 17592 0000C786 E9E4920000              	jmp L_error_incorrect_arity_simple
 17593                                  .L_lambda_simple_arity_check_ok_0063:
 17594 0000C78B C8000000                	enter 0, 0
 17595                                  	; preparing a tail-call
 17596 0000C78F 48B8-                   	mov rax, L_constants + 1993
 17596 0000C791 [C907000000000000] 
 17597 0000C799 50                      	push rax
 17598 0000C79A 6A01                    	push 1	; arg count
 17599 0000C79C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17600 0000C7A1 E810930000              	call malloc
 17601 0000C7A6 50                      	push rax
 17602 0000C7A7 BF10000000              	mov rdi, 8 * 2	; new rib
 17603 0000C7AC E805930000              	call malloc
 17604 0000C7B1 50                      	push rax
 17605 0000C7B2 BF10000000              	mov rdi, 8 * 2	; extended env
 17606 0000C7B7 E8FA920000              	call malloc
 17607 0000C7BC 488B7D10                	mov rdi, ENV
 17608 0000C7C0 BE00000000              	mov rsi, 0
 17609 0000C7C5 BA01000000              	mov rdx, 1
 17610                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 17611 0000C7CA 4883FE01                	cmp rsi, 1
 17612 0000C7CE 7410                    	je .L_lambda_simple_env_end_0064
 17613 0000C7D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17614 0000C7D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17615 0000C7D8 48FFC6                  	inc rsi
 17616 0000C7DB 48FFC2                  	inc rdx
 17617 0000C7DE EBEA                    	jmp .L_lambda_simple_env_loop_0064
 17618                                  .L_lambda_simple_env_end_0064:
 17619 0000C7E0 5B                      	pop rbx
 17620 0000C7E1 BE00000000              	mov rsi, 0
 17621                                  .L_lambda_simple_params_loop_0064:	; copy params
 17622 0000C7E6 4883FE02                	cmp rsi, 2
 17623 0000C7EA 740E                    	je .L_lambda_simple_params_end_0064
 17624 0000C7EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17625 0000C7F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17626 0000C7F5 48FFC6                  	inc rsi
 17627 0000C7F8 EBEC                    	jmp .L_lambda_simple_params_loop_0064
 17628                                  .L_lambda_simple_params_end_0064:
 17629 0000C7FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17630 0000C7FD 4889C3                  	mov rbx, rax
 17631 0000C800 58                      	pop rax
 17632 0000C801 C60004                  	mov byte [rax], T_closure
 17633 0000C804 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17634 0000C808 48C74009[15C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 17635 0000C810 E9150C0000              	jmp .L_lambda_simple_end_0064
 17636                                  .L_lambda_simple_code_0064:	; lambda-simple body
 17637 0000C815 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17638 0000C81B 740B                    	je .L_lambda_simple_arity_check_ok_0064
 17639 0000C81D FF742410                	push qword [rsp + 8 * 2]
 17640 0000C821 6A01                    	push 1
 17641 0000C823 E947920000              	jmp L_error_incorrect_arity_simple
 17642                                  .L_lambda_simple_arity_check_ok_0064:
 17643 0000C828 C8000000                	enter 0, 0
 17644 0000C82C BF08000000              	mov rdi, 8*1
 17645 0000C831 E880920000              	call malloc
 17646 0000C836 488B5D20                	mov rbx, PARAM(0)
 17647 0000C83A 488918                  	mov qword [rax], rbx
 17648 0000C83D 48894520                	mov PARAM(0), rax
 17649 0000C841 48B8-                   	mov rax, sob_void
 17649 0000C843 [0000000000000000] 
 17650                                  
 17651 0000C84B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17652 0000C850 E861920000              	call malloc
 17653 0000C855 50                      	push rax
 17654 0000C856 BF08000000              	mov rdi, 8 * 1	; new rib
 17655 0000C85B E856920000              	call malloc
 17656 0000C860 50                      	push rax
 17657 0000C861 BF18000000              	mov rdi, 8 * 3	; extended env
 17658 0000C866 E84B920000              	call malloc
 17659 0000C86B 488B7D10                	mov rdi, ENV
 17660 0000C86F BE00000000              	mov rsi, 0
 17661 0000C874 BA01000000              	mov rdx, 1
 17662                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 17663 0000C879 4883FE02                	cmp rsi, 2
 17664 0000C87D 7410                    	je .L_lambda_simple_env_end_0065
 17665 0000C87F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17666 0000C883 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17667 0000C887 48FFC6                  	inc rsi
 17668 0000C88A 48FFC2                  	inc rdx
 17669 0000C88D EBEA                    	jmp .L_lambda_simple_env_loop_0065
 17670                                  .L_lambda_simple_env_end_0065:
 17671 0000C88F 5B                      	pop rbx
 17672 0000C890 BE00000000              	mov rsi, 0
 17673                                  .L_lambda_simple_params_loop_0065:	; copy params
 17674 0000C895 4883FE01                	cmp rsi, 1
 17675 0000C899 740E                    	je .L_lambda_simple_params_end_0065
 17676 0000C89B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17677 0000C8A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17678 0000C8A4 48FFC6                  	inc rsi
 17679 0000C8A7 EBEC                    	jmp .L_lambda_simple_params_loop_0065
 17680                                  .L_lambda_simple_params_end_0065:
 17681 0000C8A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17682 0000C8AC 4889C3                  	mov rbx, rax
 17683 0000C8AF 58                      	pop rax
 17684 0000C8B0 C60004                  	mov byte [rax], T_closure
 17685 0000C8B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17686 0000C8B7 48C74009[C4C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 17687 0000C8BF E98C020000              	jmp .L_lambda_simple_end_0065
 17688                                  .L_lambda_simple_code_0065:	; lambda-simple body
 17689 0000C8C4 48837C241005            	cmp qword [rsp + 8 * 2], 5
 17690 0000C8CA 740B                    	je .L_lambda_simple_arity_check_ok_0065
 17691 0000C8CC FF742410                	push qword [rsp + 8 * 2]
 17692 0000C8D0 6A05                    	push 5
 17693 0000C8D2 E998910000              	jmp L_error_incorrect_arity_simple
 17694                                  .L_lambda_simple_arity_check_ok_0065:
 17695 0000C8D7 C8000000                	enter 0, 0
 17696                                  	; preparing a non-tail-call
 17697 0000C8DB 488B4530                	mov rax, PARAM(2)	; param len1
 17698 0000C8DF 50                      	push rax
 17699 0000C8E0 488B4520                	mov rax, PARAM(0)	; param i
 17700 0000C8E4 50                      	push rax
 17701 0000C8E5 6A02                    	push 2	; arg count
 17702 0000C8E7 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 17703 0000C8EF 803805                  	cmp byte [rax], T_undefined
 17704 0000C8F2 0F8491900000            	je L_error_fvar_undefined
 17705 0000C8F8 803804                  	cmp byte [rax], T_closure
 17706 0000C8FB 0F850C910000            	jne L_error_non_closure
 17707 0000C901 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17708 0000C904 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17709 0000C907 483D[02000000]          	cmp rax, sob_boolean_false
 17710 0000C90D 742E                    	je .L_if_else_0053
 17711                                  	; preparing a non-tail-call
 17712 0000C90F 488B4540                	mov rax, PARAM(4)	; param len2
 17713 0000C913 50                      	push rax
 17714 0000C914 488B4530                	mov rax, PARAM(2)	; param len1
 17715 0000C918 50                      	push rax
 17716 0000C919 6A02                    	push 2	; arg count
 17717 0000C91B 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 17718 0000C923 803805                  	cmp byte [rax], T_undefined
 17719 0000C926 0F845D900000            	je L_error_fvar_undefined
 17720 0000C92C 803804                  	cmp byte [rax], T_closure
 17721 0000C92F 0F85D8900000            	jne L_error_non_closure
 17722 0000C935 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17723 0000C938 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17724 0000C93B EB0A                    	jmp .L_if_end_0053
 17725                                  .L_if_else_0053:
 17726 0000C93D 48B8-                   	mov rax, L_constants + 2
 17726 0000C93F [0200000000000000] 
 17727                                  .L_if_end_0053:
 17728 0000C947 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 17729 0000C94D 0F85F9010000            	jne .L_or_end_0007; if its not false (true) then we need to return it and not the last element
 17730                                  	; preparing a non-tail-call
 17731 0000C953 488B4530                	mov rax, PARAM(2)	; param len1
 17732 0000C957 50                      	push rax
 17733 0000C958 488B4520                	mov rax, PARAM(0)	; param i
 17734 0000C95C 50                      	push rax
 17735 0000C95D 6A02                    	push 2	; arg count
 17736 0000C95F 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 17737 0000C967 803805                  	cmp byte [rax], T_undefined
 17738 0000C96A 0F8419900000            	je L_error_fvar_undefined
 17739 0000C970 803804                  	cmp byte [rax], T_closure
 17740 0000C973 0F8594900000            	jne L_error_non_closure
 17741 0000C979 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17742 0000C97C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17743 0000C97F 483D[02000000]          	cmp rax, sob_boolean_false
 17744 0000C985 0F84B7010000            	je .L_if_else_0055
 17745                                  	; preparing a non-tail-call
 17746                                  	; preparing a non-tail-call
 17747 0000C98B 488B4520                	mov rax, PARAM(0)	; param i
 17748 0000C98F 50                      	push rax
 17749 0000C990 488B4538                	mov rax, PARAM(3)	; param str2
 17750 0000C994 50                      	push rax
 17751 0000C995 6A02                    	push 2	; arg count
 17752 0000C997 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17753 0000C99F 803805                  	cmp byte [rax], T_undefined
 17754 0000C9A2 0F84E18F0000            	je L_error_fvar_undefined
 17755 0000C9A8 803804                  	cmp byte [rax], T_closure
 17756 0000C9AB 0F855C900000            	jne L_error_non_closure
 17757 0000C9B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17758 0000C9B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17759 0000C9B7 50                      	push rax
 17760                                  	; preparing a non-tail-call
 17761 0000C9B8 488B4520                	mov rax, PARAM(0)	; param i
 17762 0000C9BC 50                      	push rax
 17763 0000C9BD 488B4528                	mov rax, PARAM(1)	; param str1
 17764 0000C9C1 50                      	push rax
 17765 0000C9C2 6A02                    	push 2	; arg count
 17766 0000C9C4 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17767 0000C9CC 803805                  	cmp byte [rax], T_undefined
 17768 0000C9CF 0F84B48F0000            	je L_error_fvar_undefined
 17769 0000C9D5 803804                  	cmp byte [rax], T_closure
 17770 0000C9D8 0F852F900000            	jne L_error_non_closure
 17771 0000C9DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 17772 0000C9E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17773 0000C9E4 50                      	push rax
 17774 0000C9E5 6A02                    	push 2	; arg count
 17775 0000C9E7 488B4510                	mov rax, ENV
 17776 0000C9EB 488B4008                	mov rax, qword [rax + 8 * 1]
 17777 0000C9EF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 17778 0000C9F2 803804                  	cmp byte [rax], T_closure
 17779 0000C9F5 0F8512900000            	jne L_error_non_closure
 17780 0000C9FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17781 0000C9FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17782 0000CA01 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 17783 0000CA07 0F8533010000            	jne .L_or_end_0008; if its not false (true) then we need to return it and not the last element
 17784                                  	; preparing a non-tail-call
 17785                                  	; preparing a non-tail-call
 17786 0000CA0D 488B4520                	mov rax, PARAM(0)	; param i
 17787 0000CA11 50                      	push rax
 17788 0000CA12 488B4538                	mov rax, PARAM(3)	; param str2
 17789 0000CA16 50                      	push rax
 17790 0000CA17 6A02                    	push 2	; arg count
 17791 0000CA19 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17792 0000CA21 803805                  	cmp byte [rax], T_undefined
 17793 0000CA24 0F845F8F0000            	je L_error_fvar_undefined
 17794 0000CA2A 803804                  	cmp byte [rax], T_closure
 17795 0000CA2D 0F85DA8F0000            	jne L_error_non_closure
 17796 0000CA33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17797 0000CA36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17798 0000CA39 50                      	push rax
 17799                                  	; preparing a non-tail-call
 17800 0000CA3A 488B4520                	mov rax, PARAM(0)	; param i
 17801 0000CA3E 50                      	push rax
 17802 0000CA3F 488B4528                	mov rax, PARAM(1)	; param str1
 17803 0000CA43 50                      	push rax
 17804 0000CA44 6A02                    	push 2	; arg count
 17805 0000CA46 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17806 0000CA4E 803805                  	cmp byte [rax], T_undefined
 17807 0000CA51 0F84328F0000            	je L_error_fvar_undefined
 17808 0000CA57 803804                  	cmp byte [rax], T_closure
 17809 0000CA5A 0F85AD8F0000            	jne L_error_non_closure
 17810 0000CA60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17811 0000CA63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17812 0000CA66 50                      	push rax
 17813 0000CA67 6A02                    	push 2	; arg count
 17814 0000CA69 488B4510                	mov rax, ENV
 17815 0000CA6D 488B4008                	mov rax, qword [rax + 8 * 1]
 17816 0000CA71 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 17817 0000CA75 803804                  	cmp byte [rax], T_closure
 17818 0000CA78 0F858F8F0000            	jne L_error_non_closure
 17819 0000CA7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17820 0000CA81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17821 0000CA84 483D[02000000]          	cmp rax, sob_boolean_false
 17822 0000CA8A 0F84A6000000            	je .L_if_else_0054
 17823                                  	; preparing a tail-call
 17824 0000CA90 488B4540                	mov rax, PARAM(4)	; param len2
 17825 0000CA94 50                      	push rax
 17826 0000CA95 488B4538                	mov rax, PARAM(3)	; param str2
 17827 0000CA99 50                      	push rax
 17828 0000CA9A 488B4530                	mov rax, PARAM(2)	; param len1
 17829 0000CA9E 50                      	push rax
 17830 0000CA9F 488B4528                	mov rax, PARAM(1)	; param str1
 17831 0000CAA3 50                      	push rax
 17832                                  	; preparing a non-tail-call
 17833 0000CAA4 48B8-                   	mov rax, L_constants + 2270
 17833 0000CAA6 [DE08000000000000] 
 17834 0000CAAE 50                      	push rax
 17835 0000CAAF 488B4520                	mov rax, PARAM(0)	; param i
 17836 0000CAB3 50                      	push rax
 17837 0000CAB4 6A02                    	push 2	; arg count
 17838 0000CAB6 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 17839 0000CABE 803805                  	cmp byte [rax], T_undefined
 17840 0000CAC1 0F84C28E0000            	je L_error_fvar_undefined
 17841 0000CAC7 803804                  	cmp byte [rax], T_closure
 17842 0000CACA 0F853D8F0000            	jne L_error_non_closure
 17843 0000CAD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17844 0000CAD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17845 0000CAD6 50                      	push rax
 17846 0000CAD7 6A05                    	push 5	; arg count
 17847 0000CAD9 488B4510                	mov rax, ENV
 17848 0000CADD 488B00                  	mov rax, qword [rax + 8 * 0]
 17849 0000CAE0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17850 0000CAE3 488B00                  	mov rax, qword [rax]
 17851 0000CAE6 803804                  	cmp byte [rax], T_closure
 17852 0000CAE9 0F851E8F0000            	jne L_error_non_closure
 17853 0000CAEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 17854 0000CAF2 FF7508                  	push qword [rbp + 8 * 1]
 17855                                   ; old ret addr
 17856 0000CAF5 FF7500                  	push qword [rbp]
 17857                                   ; restore the old rbp
 17858 0000CAF8 BB05000000              	mov rbx, 5
 17859 0000CAFD 4883C303                	add rbx, 3
 17860 0000CB01 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 17861 0000CB05 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 17862 0000CB0A 4C8D4DF8                	lea r9, [rbp - 8]
 17863 0000CB0E B909000000              	mov rcx, 9
 17864                                  .L_tc_recycle_frame_loop_009c:
 17865 0000CB13 4883F900                	cmp rcx, 0
 17866 0000CB17 7413                    	je .L_tc_recycle_frame_done_009c
 17867 0000CB19 4D8B11                  	mov r10, qword [r9]
 17868 0000CB1C 4D8910                  	mov qword [r8], r10
 17869 0000CB1F 4983E808                	sub r8, 8
 17870 0000CB23 4983E908                	sub r9, 8
 17871 0000CB27 48FFC9                  	dec rcx
 17872 0000CB2A EBE7                    	jmp .L_tc_recycle_frame_loop_009c
 17873                                  .L_tc_recycle_frame_done_009c:
 17874 0000CB2C 498D6008                	lea rsp, [r8 + 8]
 17875 0000CB30 5D                      	pop rbp ; restore the old rbp
 17876 0000CB31 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17877 0000CB34 EB0A                    	jmp .L_if_end_0054
 17878                                  .L_if_else_0054:
 17879 0000CB36 48B8-                   	mov rax, L_constants + 2
 17879 0000CB38 [0200000000000000] 
 17880                                  .L_if_end_0054:
 17881                                  .L_or_end_0008:
 17882 0000CB40 EB0A                    	jmp .L_if_end_0055
 17883                                  .L_if_else_0055:
 17884 0000CB42 48B8-                   	mov rax, L_constants + 2
 17884 0000CB44 [0200000000000000] 
 17885                                  .L_if_end_0055:
 17886                                  .L_or_end_0007:
 17887 0000CB4C C9                      	leave
 17888 0000CB4D C23800                  	ret AND_KILL_FRAME(5)
 17889                                  .L_lambda_simple_end_0065:	; new closure is in rax
 17890 0000CB50 50                      	push rax
 17891 0000CB51 488B4520                	mov rax, PARAM(0)	; param run
 17892 0000CB55 8F00                    	pop qword [rax]
 17893 0000CB57 48B8-                   	mov rax, sob_void
 17893 0000CB59 [0000000000000000] 
 17894                                  
 17895                                  	; preparing a tail-call
 17896 0000CB61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17897 0000CB66 E84B8F0000              	call malloc
 17898 0000CB6B 50                      	push rax
 17899 0000CB6C BF08000000              	mov rdi, 8 * 1	; new rib
 17900 0000CB71 E8408F0000              	call malloc
 17901 0000CB76 50                      	push rax
 17902 0000CB77 BF18000000              	mov rdi, 8 * 3	; extended env
 17903 0000CB7C E8358F0000              	call malloc
 17904 0000CB81 488B7D10                	mov rdi, ENV
 17905 0000CB85 BE00000000              	mov rsi, 0
 17906 0000CB8A BA01000000              	mov rdx, 1
 17907                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 17908 0000CB8F 4883FE02                	cmp rsi, 2
 17909 0000CB93 7410                    	je .L_lambda_simple_env_end_0066
 17910 0000CB95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17911 0000CB99 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17912 0000CB9D 48FFC6                  	inc rsi
 17913 0000CBA0 48FFC2                  	inc rdx
 17914 0000CBA3 EBEA                    	jmp .L_lambda_simple_env_loop_0066
 17915                                  .L_lambda_simple_env_end_0066:
 17916 0000CBA5 5B                      	pop rbx
 17917 0000CBA6 BE00000000              	mov rsi, 0
 17918                                  .L_lambda_simple_params_loop_0066:	; copy params
 17919 0000CBAB 4883FE01                	cmp rsi, 1
 17920 0000CBAF 740E                    	je .L_lambda_simple_params_end_0066
 17921 0000CBB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17922 0000CBB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17923 0000CBBA 48FFC6                  	inc rsi
 17924 0000CBBD EBEC                    	jmp .L_lambda_simple_params_loop_0066
 17925                                  .L_lambda_simple_params_end_0066:
 17926 0000CBBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17927 0000CBC2 4889C3                  	mov rbx, rax
 17928 0000CBC5 58                      	pop rax
 17929 0000CBC6 C60004                  	mov byte [rax], T_closure
 17930 0000CBC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17931 0000CBCD 48C74009[DACB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 17932 0000CBD5 E9A0020000              	jmp .L_lambda_simple_end_0066
 17933                                  .L_lambda_simple_code_0066:	; lambda-simple body
 17934 0000CBDA 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17935 0000CBE0 740B                    	je .L_lambda_simple_arity_check_ok_0066
 17936 0000CBE2 FF742410                	push qword [rsp + 8 * 2]
 17937 0000CBE6 6A02                    	push 2
 17938 0000CBE8 E9828E0000              	jmp L_error_incorrect_arity_simple
 17939                                  .L_lambda_simple_arity_check_ok_0066:
 17940 0000CBED C8000000                	enter 0, 0
 17941                                  	; preparing a tail-call
 17942                                  	; preparing a non-tail-call
 17943 0000CBF1 488B4528                	mov rax, PARAM(1)	; param str2
 17944 0000CBF5 50                      	push rax
 17945 0000CBF6 6A01                    	push 1	; arg count
 17946 0000CBF8 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 17947 0000CC00 803805                  	cmp byte [rax], T_undefined
 17948 0000CC03 0F84808D0000            	je L_error_fvar_undefined
 17949 0000CC09 803804                  	cmp byte [rax], T_closure
 17950 0000CC0C 0F85FB8D0000            	jne L_error_non_closure
 17951 0000CC12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17952 0000CC15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17953 0000CC18 50                      	push rax
 17954                                  	; preparing a non-tail-call
 17955 0000CC19 488B4520                	mov rax, PARAM(0)	; param str1
 17956 0000CC1D 50                      	push rax
 17957 0000CC1E 6A01                    	push 1	; arg count
 17958 0000CC20 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 17959 0000CC28 803805                  	cmp byte [rax], T_undefined
 17960 0000CC2B 0F84588D0000            	je L_error_fvar_undefined
 17961 0000CC31 803804                  	cmp byte [rax], T_closure
 17962 0000CC34 0F85D38D0000            	jne L_error_non_closure
 17963 0000CC3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17964 0000CC3D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17965 0000CC40 50                      	push rax
 17966 0000CC41 6A02                    	push 2	; arg count
 17967 0000CC43 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17968 0000CC48 E8698E0000              	call malloc
 17969 0000CC4D 50                      	push rax
 17970 0000CC4E BF10000000              	mov rdi, 8 * 2	; new rib
 17971 0000CC53 E85E8E0000              	call malloc
 17972 0000CC58 50                      	push rax
 17973 0000CC59 BF20000000              	mov rdi, 8 * 4	; extended env
 17974 0000CC5E E8538E0000              	call malloc
 17975 0000CC63 488B7D10                	mov rdi, ENV
 17976 0000CC67 BE00000000              	mov rsi, 0
 17977 0000CC6C BA01000000              	mov rdx, 1
 17978                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 17979 0000CC71 4883FE03                	cmp rsi, 3
 17980 0000CC75 7410                    	je .L_lambda_simple_env_end_0067
 17981 0000CC77 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17982 0000CC7B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17983 0000CC7F 48FFC6                  	inc rsi
 17984 0000CC82 48FFC2                  	inc rdx
 17985 0000CC85 EBEA                    	jmp .L_lambda_simple_env_loop_0067
 17986                                  .L_lambda_simple_env_end_0067:
 17987 0000CC87 5B                      	pop rbx
 17988 0000CC88 BE00000000              	mov rsi, 0
 17989                                  .L_lambda_simple_params_loop_0067:	; copy params
 17990 0000CC8D 4883FE02                	cmp rsi, 2
 17991 0000CC91 740E                    	je .L_lambda_simple_params_end_0067
 17992 0000CC93 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17993 0000CC98 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17994 0000CC9C 48FFC6                  	inc rsi
 17995 0000CC9F EBEC                    	jmp .L_lambda_simple_params_loop_0067
 17996                                  .L_lambda_simple_params_end_0067:
 17997 0000CCA1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17998 0000CCA4 4889C3                  	mov rbx, rax
 17999 0000CCA7 58                      	pop rax
 18000 0000CCA8 C60004                  	mov byte [rax], T_closure
 18001 0000CCAB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18002 0000CCAF 48C74009[BCCC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 18003 0000CCB7 E96C010000              	jmp .L_lambda_simple_end_0067
 18004                                  .L_lambda_simple_code_0067:	; lambda-simple body
 18005 0000CCBC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18006 0000CCC2 740B                    	je .L_lambda_simple_arity_check_ok_0067
 18007 0000CCC4 FF742410                	push qword [rsp + 8 * 2]
 18008 0000CCC8 6A02                    	push 2
 18009 0000CCCA E9A08D0000              	jmp L_error_incorrect_arity_simple
 18010                                  .L_lambda_simple_arity_check_ok_0067:
 18011 0000CCCF C8000000                	enter 0, 0
 18012                                  	; preparing a non-tail-call
 18013 0000CCD3 488B4528                	mov rax, PARAM(1)	; param len2
 18014 0000CCD7 50                      	push rax
 18015 0000CCD8 488B4520                	mov rax, PARAM(0)	; param len1
 18016 0000CCDC 50                      	push rax
 18017 0000CCDD 6A02                    	push 2	; arg count
 18018 0000CCDF 488B0425[230E0000]      	mov rax, qword [free_var_5]	; free var <=
 18019 0000CCE7 803805                  	cmp byte [rax], T_undefined
 18020 0000CCEA 0F84998C0000            	je L_error_fvar_undefined
 18021 0000CCF0 803804                  	cmp byte [rax], T_closure
 18022 0000CCF3 0F85148D0000            	jne L_error_non_closure
 18023 0000CCF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18024 0000CCFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18025 0000CCFF 483D[02000000]          	cmp rax, sob_boolean_false
 18026 0000CD05 0F848F000000            	je .L_if_else_0056
 18027                                  	; preparing a tail-call
 18028 0000CD0B 488B4528                	mov rax, PARAM(1)	; param len2
 18029 0000CD0F 50                      	push rax
 18030 0000CD10 488B4510                	mov rax, ENV
 18031 0000CD14 488B00                  	mov rax, qword [rax + 8 * 0]
 18032 0000CD17 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18033 0000CD1B 50                      	push rax
 18034 0000CD1C 488B4520                	mov rax, PARAM(0)	; param len1
 18035 0000CD20 50                      	push rax
 18036 0000CD21 488B4510                	mov rax, ENV
 18037 0000CD25 488B00                  	mov rax, qword [rax + 8 * 0]
 18038 0000CD28 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18039 0000CD2B 50                      	push rax
 18040 0000CD2C 48B8-                   	mov rax, L_constants + 2135
 18040 0000CD2E [5708000000000000] 
 18041 0000CD36 50                      	push rax
 18042 0000CD37 6A05                    	push 5	; arg count
 18043 0000CD39 488B4510                	mov rax, ENV
 18044 0000CD3D 488B4008                	mov rax, qword [rax + 8 * 1]
 18045 0000CD41 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18046 0000CD44 488B00                  	mov rax, qword [rax]
 18047 0000CD47 803804                  	cmp byte [rax], T_closure
 18048 0000CD4A 0F85BD8C0000            	jne L_error_non_closure
 18049 0000CD50 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18050 0000CD53 FF7508                  	push qword [rbp + 8 * 1]
 18051                                   ; old ret addr
 18052 0000CD56 FF7500                  	push qword [rbp]
 18053                                   ; restore the old rbp
 18054 0000CD59 BB05000000              	mov rbx, 5
 18055 0000CD5E 4883C303                	add rbx, 3
 18056 0000CD62 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18057 0000CD66 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18058 0000CD6B 4C8D4DF8                	lea r9, [rbp - 8]
 18059 0000CD6F B909000000              	mov rcx, 9
 18060                                  .L_tc_recycle_frame_loop_009f:
 18061 0000CD74 4883F900                	cmp rcx, 0
 18062 0000CD78 7413                    	je .L_tc_recycle_frame_done_009f
 18063 0000CD7A 4D8B11                  	mov r10, qword [r9]
 18064 0000CD7D 4D8910                  	mov qword [r8], r10
 18065 0000CD80 4983E808                	sub r8, 8
 18066 0000CD84 4983E908                	sub r9, 8
 18067 0000CD88 48FFC9                  	dec rcx
 18068 0000CD8B EBE7                    	jmp .L_tc_recycle_frame_loop_009f
 18069                                  .L_tc_recycle_frame_done_009f:
 18070 0000CD8D 498D6008                	lea rsp, [r8 + 8]
 18071 0000CD91 5D                      	pop rbp ; restore the old rbp
 18072 0000CD92 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18073 0000CD95 E98A000000              	jmp .L_if_end_0056
 18074                                  .L_if_else_0056:
 18075                                  	; preparing a tail-call
 18076 0000CD9A 488B4520                	mov rax, PARAM(0)	; param len1
 18077 0000CD9E 50                      	push rax
 18078 0000CD9F 488B4510                	mov rax, ENV
 18079 0000CDA3 488B00                  	mov rax, qword [rax + 8 * 0]
 18080 0000CDA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18081 0000CDA9 50                      	push rax
 18082 0000CDAA 488B4528                	mov rax, PARAM(1)	; param len2
 18083 0000CDAE 50                      	push rax
 18084 0000CDAF 488B4510                	mov rax, ENV
 18085 0000CDB3 488B00                  	mov rax, qword [rax + 8 * 0]
 18086 0000CDB6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18087 0000CDBA 50                      	push rax
 18088 0000CDBB 48B8-                   	mov rax, L_constants + 2135
 18088 0000CDBD [5708000000000000] 
 18089 0000CDC5 50                      	push rax
 18090 0000CDC6 6A05                    	push 5	; arg count
 18091 0000CDC8 488B4510                	mov rax, ENV
 18092 0000CDCC 488B4008                	mov rax, qword [rax + 8 * 1]
 18093 0000CDD0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18094 0000CDD3 488B00                  	mov rax, qword [rax]
 18095 0000CDD6 803804                  	cmp byte [rax], T_closure
 18096 0000CDD9 0F852E8C0000            	jne L_error_non_closure
 18097 0000CDDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18098 0000CDE2 FF7508                  	push qword [rbp + 8 * 1]
 18099                                   ; old ret addr
 18100 0000CDE5 FF7500                  	push qword [rbp]
 18101                                   ; restore the old rbp
 18102 0000CDE8 BB05000000              	mov rbx, 5
 18103 0000CDED 4883C303                	add rbx, 3
 18104 0000CDF1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18105 0000CDF5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18106 0000CDFA 4C8D4DF8                	lea r9, [rbp - 8]
 18107 0000CDFE B909000000              	mov rcx, 9
 18108                                  .L_tc_recycle_frame_loop_00a0:
 18109 0000CE03 4883F900                	cmp rcx, 0
 18110 0000CE07 7413                    	je .L_tc_recycle_frame_done_00a0
 18111 0000CE09 4D8B11                  	mov r10, qword [r9]
 18112 0000CE0C 4D8910                  	mov qword [r8], r10
 18113 0000CE0F 4983E808                	sub r8, 8
 18114 0000CE13 4983E908                	sub r9, 8
 18115 0000CE17 48FFC9                  	dec rcx
 18116 0000CE1A EBE7                    	jmp .L_tc_recycle_frame_loop_00a0
 18117                                  .L_tc_recycle_frame_done_00a0:
 18118 0000CE1C 498D6008                	lea rsp, [r8 + 8]
 18119 0000CE20 5D                      	pop rbp ; restore the old rbp
 18120 0000CE21 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18121                                  .L_if_end_0056:
 18122 0000CE24 C9                      	leave
 18123 0000CE25 C22000                  	ret AND_KILL_FRAME(2)
 18124                                  .L_lambda_simple_end_0067:	; new closure is in rax
 18125 0000CE28 803804                  	cmp byte [rax], T_closure
 18126 0000CE2B 0F85DC8B0000            	jne L_error_non_closure
 18127 0000CE31 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18128 0000CE34 FF7508                  	push qword [rbp + 8 * 1]
 18129                                   ; old ret addr
 18130 0000CE37 FF7500                  	push qword [rbp]
 18131                                   ; restore the old rbp
 18132 0000CE3A BB02000000              	mov rbx, 2
 18133 0000CE3F 4883C303                	add rbx, 3
 18134 0000CE43 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18135 0000CE47 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18136 0000CE4C 4C8D4DF8                	lea r9, [rbp - 8]
 18137 0000CE50 B906000000              	mov rcx, 6
 18138                                  .L_tc_recycle_frame_loop_009e:
 18139 0000CE55 4883F900                	cmp rcx, 0
 18140 0000CE59 7413                    	je .L_tc_recycle_frame_done_009e
 18141 0000CE5B 4D8B11                  	mov r10, qword [r9]
 18142 0000CE5E 4D8910                  	mov qword [r8], r10
 18143 0000CE61 4983E808                	sub r8, 8
 18144 0000CE65 4983E908                	sub r9, 8
 18145 0000CE69 48FFC9                  	dec rcx
 18146 0000CE6C EBE7                    	jmp .L_tc_recycle_frame_loop_009e
 18147                                  .L_tc_recycle_frame_done_009e:
 18148 0000CE6E 498D6008                	lea rsp, [r8 + 8]
 18149 0000CE72 5D                      	pop rbp ; restore the old rbp
 18150 0000CE73 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18151 0000CE76 C9                      	leave
 18152 0000CE77 C22000                  	ret AND_KILL_FRAME(2)
 18153                                  .L_lambda_simple_end_0066:	; new closure is in rax
 18154 0000CE7A 50                      	push rax
 18155 0000CE7B 6A01                    	push 1	; arg count
 18156 0000CE7D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18157 0000CE82 E82F8C0000              	call malloc
 18158 0000CE87 50                      	push rax
 18159 0000CE88 BF08000000              	mov rdi, 8 * 1	; new rib
 18160 0000CE8D E8248C0000              	call malloc
 18161 0000CE92 50                      	push rax
 18162 0000CE93 BF18000000              	mov rdi, 8 * 3	; extended env
 18163 0000CE98 E8198C0000              	call malloc
 18164 0000CE9D 488B7D10                	mov rdi, ENV
 18165 0000CEA1 BE00000000              	mov rsi, 0
 18166 0000CEA6 BA01000000              	mov rdx, 1
 18167                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 18168 0000CEAB 4883FE02                	cmp rsi, 2
 18169 0000CEAF 7410                    	je .L_lambda_simple_env_end_0068
 18170 0000CEB1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18171 0000CEB5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18172 0000CEB9 48FFC6                  	inc rsi
 18173 0000CEBC 48FFC2                  	inc rdx
 18174 0000CEBF EBEA                    	jmp .L_lambda_simple_env_loop_0068
 18175                                  .L_lambda_simple_env_end_0068:
 18176 0000CEC1 5B                      	pop rbx
 18177 0000CEC2 BE00000000              	mov rsi, 0
 18178                                  .L_lambda_simple_params_loop_0068:	; copy params
 18179 0000CEC7 4883FE01                	cmp rsi, 1
 18180 0000CECB 740E                    	je .L_lambda_simple_params_end_0068
 18181 0000CECD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18182 0000CED2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18183 0000CED6 48FFC6                  	inc rsi
 18184 0000CED9 EBEC                    	jmp .L_lambda_simple_params_loop_0068
 18185                                  .L_lambda_simple_params_end_0068:
 18186 0000CEDB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18187 0000CEDE 4889C3                  	mov rbx, rax
 18188 0000CEE1 58                      	pop rax
 18189 0000CEE2 C60004                  	mov byte [rax], T_closure
 18190 0000CEE5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18191 0000CEE9 48C74009[F6CE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 18192 0000CEF1 E9E2040000              	jmp .L_lambda_simple_end_0068
 18193                                  .L_lambda_simple_code_0068:	; lambda-simple body
 18194 0000CEF6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18195 0000CEFC 740B                    	je .L_lambda_simple_arity_check_ok_0068
 18196 0000CEFE FF742410                	push qword [rsp + 8 * 2]
 18197 0000CF02 6A01                    	push 1
 18198 0000CF04 E9668B0000              	jmp L_error_incorrect_arity_simple
 18199                                  .L_lambda_simple_arity_check_ok_0068:
 18200 0000CF09 C8000000                	enter 0, 0
 18201                                  	; preparing a tail-call
 18202 0000CF0D 48B8-                   	mov rax, L_constants + 1993
 18202 0000CF0F [C907000000000000] 
 18203 0000CF17 50                      	push rax
 18204 0000CF18 6A01                    	push 1	; arg count
 18205 0000CF1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18206 0000CF1F E8928B0000              	call malloc
 18207 0000CF24 50                      	push rax
 18208 0000CF25 BF08000000              	mov rdi, 8 * 1	; new rib
 18209 0000CF2A E8878B0000              	call malloc
 18210 0000CF2F 50                      	push rax
 18211 0000CF30 BF20000000              	mov rdi, 8 * 4	; extended env
 18212 0000CF35 E87C8B0000              	call malloc
 18213 0000CF3A 488B7D10                	mov rdi, ENV
 18214 0000CF3E BE00000000              	mov rsi, 0
 18215 0000CF43 BA01000000              	mov rdx, 1
 18216                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 18217 0000CF48 4883FE03                	cmp rsi, 3
 18218 0000CF4C 7410                    	je .L_lambda_simple_env_end_0069
 18219 0000CF4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18220 0000CF52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18221 0000CF56 48FFC6                  	inc rsi
 18222 0000CF59 48FFC2                  	inc rdx
 18223 0000CF5C EBEA                    	jmp .L_lambda_simple_env_loop_0069
 18224                                  .L_lambda_simple_env_end_0069:
 18225 0000CF5E 5B                      	pop rbx
 18226 0000CF5F BE00000000              	mov rsi, 0
 18227                                  .L_lambda_simple_params_loop_0069:	; copy params
 18228 0000CF64 4883FE01                	cmp rsi, 1
 18229 0000CF68 740E                    	je .L_lambda_simple_params_end_0069
 18230 0000CF6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18231 0000CF6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18232 0000CF73 48FFC6                  	inc rsi
 18233 0000CF76 EBEC                    	jmp .L_lambda_simple_params_loop_0069
 18234                                  .L_lambda_simple_params_end_0069:
 18235 0000CF78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18236 0000CF7B 4889C3                  	mov rbx, rax
 18237 0000CF7E 58                      	pop rax
 18238 0000CF7F C60004                  	mov byte [rax], T_closure
 18239 0000CF82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18240 0000CF86 48C74009[93CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 18241 0000CF8E E9F3030000              	jmp .L_lambda_simple_end_0069
 18242                                  .L_lambda_simple_code_0069:	; lambda-simple body
 18243 0000CF93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18244 0000CF99 740B                    	je .L_lambda_simple_arity_check_ok_0069
 18245 0000CF9B FF742410                	push qword [rsp + 8 * 2]
 18246 0000CF9F 6A01                    	push 1
 18247 0000CFA1 E9C98A0000              	jmp L_error_incorrect_arity_simple
 18248                                  .L_lambda_simple_arity_check_ok_0069:
 18249 0000CFA6 C8000000                	enter 0, 0
 18250 0000CFAA BF08000000              	mov rdi, 8*1
 18251 0000CFAF E8028B0000              	call malloc
 18252 0000CFB4 488B5D20                	mov rbx, PARAM(0)
 18253 0000CFB8 488918                  	mov qword [rax], rbx
 18254 0000CFBB 48894520                	mov PARAM(0), rax
 18255 0000CFBF 48B8-                   	mov rax, sob_void
 18255 0000CFC1 [0000000000000000] 
 18256                                  
 18257 0000CFC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18258 0000CFCE E8E38A0000              	call malloc
 18259 0000CFD3 50                      	push rax
 18260 0000CFD4 BF08000000              	mov rdi, 8 * 1	; new rib
 18261 0000CFD9 E8D88A0000              	call malloc
 18262 0000CFDE 50                      	push rax
 18263 0000CFDF BF28000000              	mov rdi, 8 * 5	; extended env
 18264 0000CFE4 E8CD8A0000              	call malloc
 18265 0000CFE9 488B7D10                	mov rdi, ENV
 18266 0000CFED BE00000000              	mov rsi, 0
 18267 0000CFF2 BA01000000              	mov rdx, 1
 18268                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 18269 0000CFF7 4883FE04                	cmp rsi, 4
 18270 0000CFFB 7410                    	je .L_lambda_simple_env_end_006a
 18271 0000CFFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18272 0000D001 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18273 0000D005 48FFC6                  	inc rsi
 18274 0000D008 48FFC2                  	inc rdx
 18275 0000D00B EBEA                    	jmp .L_lambda_simple_env_loop_006a
 18276                                  .L_lambda_simple_env_end_006a:
 18277 0000D00D 5B                      	pop rbx
 18278 0000D00E BE00000000              	mov rsi, 0
 18279                                  .L_lambda_simple_params_loop_006a:	; copy params
 18280 0000D013 4883FE01                	cmp rsi, 1
 18281 0000D017 740E                    	je .L_lambda_simple_params_end_006a
 18282 0000D019 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18283 0000D01E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18284 0000D022 48FFC6                  	inc rsi
 18285 0000D025 EBEC                    	jmp .L_lambda_simple_params_loop_006a
 18286                                  .L_lambda_simple_params_end_006a:
 18287 0000D027 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18288 0000D02A 4889C3                  	mov rbx, rax
 18289 0000D02D 58                      	pop rax
 18290 0000D02E C60004                  	mov byte [rax], T_closure
 18291 0000D031 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18292 0000D035 48C74009[42D00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 18293 0000D03D E95C010000              	jmp .L_lambda_simple_end_006a
 18294                                  .L_lambda_simple_code_006a:	; lambda-simple body
 18295 0000D042 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18296 0000D048 740B                    	je .L_lambda_simple_arity_check_ok_006a
 18297 0000D04A FF742410                	push qword [rsp + 8 * 2]
 18298 0000D04E 6A02                    	push 2
 18299 0000D050 E91A8A0000              	jmp L_error_incorrect_arity_simple
 18300                                  .L_lambda_simple_arity_check_ok_006a:
 18301 0000D055 C8000000                	enter 0, 0
 18302                                  	; preparing a non-tail-call
 18303 0000D059 488B4528                	mov rax, PARAM(1)	; param strs
 18304 0000D05D 50                      	push rax
 18305 0000D05E 6A01                    	push 1	; arg count
 18306 0000D060 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 18307 0000D068 803805                  	cmp byte [rax], T_undefined
 18308 0000D06B 0F8418890000            	je L_error_fvar_undefined
 18309 0000D071 803804                  	cmp byte [rax], T_closure
 18310 0000D074 0F8593890000            	jne L_error_non_closure
 18311 0000D07A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18312 0000D07D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18313 0000D080 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 18314 0000D086 0F850E010000            	jne .L_or_end_0009; if its not false (true) then we need to return it and not the last element
 18315                                  	; preparing a non-tail-call
 18316                                  	; preparing a non-tail-call
 18317 0000D08C 488B4528                	mov rax, PARAM(1)	; param strs
 18318 0000D090 50                      	push rax
 18319 0000D091 6A01                    	push 1	; arg count
 18320 0000D093 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 18321 0000D09B 803805                  	cmp byte [rax], T_undefined
 18322 0000D09E 0F84E5880000            	je L_error_fvar_undefined
 18323 0000D0A4 803804                  	cmp byte [rax], T_closure
 18324 0000D0A7 0F8560890000            	jne L_error_non_closure
 18325 0000D0AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18326 0000D0B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18327 0000D0B3 50                      	push rax
 18328 0000D0B4 488B4520                	mov rax, PARAM(0)	; param str
 18329 0000D0B8 50                      	push rax
 18330 0000D0B9 6A02                    	push 2	; arg count
 18331 0000D0BB 488B4510                	mov rax, ENV
 18332 0000D0BF 488B4008                	mov rax, qword [rax + 8 * 1]
 18333 0000D0C3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18334 0000D0C6 803804                  	cmp byte [rax], T_closure
 18335 0000D0C9 0F853E890000            	jne L_error_non_closure
 18336 0000D0CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18337 0000D0D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18338 0000D0D5 483D[02000000]          	cmp rax, sob_boolean_false
 18339 0000D0DB 0F84AF000000            	je .L_if_else_0057
 18340                                  	; preparing a tail-call
 18341                                  	; preparing a non-tail-call
 18342 0000D0E1 488B4528                	mov rax, PARAM(1)	; param strs
 18343 0000D0E5 50                      	push rax
 18344 0000D0E6 6A01                    	push 1	; arg count
 18345 0000D0E8 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 18346 0000D0F0 803805                  	cmp byte [rax], T_undefined
 18347 0000D0F3 0F8490880000            	je L_error_fvar_undefined
 18348 0000D0F9 803804                  	cmp byte [rax], T_closure
 18349 0000D0FC 0F850B890000            	jne L_error_non_closure
 18350 0000D102 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18351 0000D105 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18352 0000D108 50                      	push rax
 18353                                  	; preparing a non-tail-call
 18354 0000D109 488B4528                	mov rax, PARAM(1)	; param strs
 18355 0000D10D 50                      	push rax
 18356 0000D10E 6A01                    	push 1	; arg count
 18357 0000D110 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 18358 0000D118 803805                  	cmp byte [rax], T_undefined
 18359 0000D11B 0F8468880000            	je L_error_fvar_undefined
 18360 0000D121 803804                  	cmp byte [rax], T_closure
 18361 0000D124 0F85E3880000            	jne L_error_non_closure
 18362 0000D12A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18363 0000D12D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18364 0000D130 50                      	push rax
 18365 0000D131 6A02                    	push 2	; arg count
 18366 0000D133 488B4510                	mov rax, ENV
 18367 0000D137 488B00                  	mov rax, qword [rax + 8 * 0]
 18368 0000D13A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18369 0000D13D 488B00                  	mov rax, qword [rax]
 18370 0000D140 803804                  	cmp byte [rax], T_closure
 18371 0000D143 0F85C4880000            	jne L_error_non_closure
 18372 0000D149 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18373 0000D14C FF7508                  	push qword [rbp + 8 * 1]
 18374                                   ; old ret addr
 18375 0000D14F FF7500                  	push qword [rbp]
 18376                                   ; restore the old rbp
 18377 0000D152 BB02000000              	mov rbx, 2
 18378 0000D157 4883C303                	add rbx, 3
 18379 0000D15B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18380 0000D15F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18381 0000D164 4C8D4DF8                	lea r9, [rbp - 8]
 18382 0000D168 B906000000              	mov rcx, 6
 18383                                  .L_tc_recycle_frame_loop_00a2:
 18384 0000D16D 4883F900                	cmp rcx, 0
 18385 0000D171 7413                    	je .L_tc_recycle_frame_done_00a2
 18386 0000D173 4D8B11                  	mov r10, qword [r9]
 18387 0000D176 4D8910                  	mov qword [r8], r10
 18388 0000D179 4983E808                	sub r8, 8
 18389 0000D17D 4983E908                	sub r9, 8
 18390 0000D181 48FFC9                  	dec rcx
 18391 0000D184 EBE7                    	jmp .L_tc_recycle_frame_loop_00a2
 18392                                  .L_tc_recycle_frame_done_00a2:
 18393 0000D186 498D6008                	lea rsp, [r8 + 8]
 18394 0000D18A 5D                      	pop rbp ; restore the old rbp
 18395 0000D18B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18396 0000D18E EB0A                    	jmp .L_if_end_0057
 18397                                  .L_if_else_0057:
 18398 0000D190 48B8-                   	mov rax, L_constants + 2
 18398 0000D192 [0200000000000000] 
 18399                                  .L_if_end_0057:
 18400                                  .L_or_end_0009:
 18401 0000D19A C9                      	leave
 18402 0000D19B C22000                  	ret AND_KILL_FRAME(2)
 18403                                  .L_lambda_simple_end_006a:	; new closure is in rax
 18404 0000D19E 50                      	push rax
 18405 0000D19F 488B4520                	mov rax, PARAM(0)	; param run
 18406 0000D1A3 8F00                    	pop qword [rax]
 18407 0000D1A5 48B8-                   	mov rax, sob_void
 18407 0000D1A7 [0000000000000000] 
 18408                                  
 18409 0000D1AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18410 0000D1B4 E8FD880000              	call malloc
 18411 0000D1B9 50                      	push rax
 18412 0000D1BA BF08000000              	mov rdi, 8 * 1	; new rib
 18413 0000D1BF E8F2880000              	call malloc
 18414 0000D1C4 50                      	push rax
 18415 0000D1C5 BF28000000              	mov rdi, 8 * 5	; extended env
 18416 0000D1CA E8E7880000              	call malloc
 18417 0000D1CF 488B7D10                	mov rdi, ENV
 18418 0000D1D3 4831F6                  	 xor rsi, rsi
 18419 0000D1D6 4831D2                  	 xor rdx, rdx
 18420 0000D1D9 48FFC2                  	inc rdx
 18421                                  .L_lambda_opt_env_loop_0011:	; ext_env[i + 1] <-- env[i]
 18422 0000D1DC 4883FE04                	cmp rsi, 4
 18423 0000D1E0 7410                    	je .L_lambda_opt_env_end_0011
 18424 0000D1E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18425 0000D1E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18426 0000D1EA 48FFC6                  	inc rsi
 18427 0000D1ED 48FFC2                  	inc rdx
 18428 0000D1F0 EBEA                    	jmp .L_lambda_opt_env_loop_0011
 18429                                  .L_lambda_opt_env_end_0011:
 18430 0000D1F2 5B                      	pop rbx
 18431 0000D1F3 4831F6                  	xor rsi, rsi
 18432                                  .L_lambda_opt_params_loop_0011:	; copy params
 18433 0000D1F6 4883FE01                	cmp rsi, 1
 18434 0000D1FA 740E                    	je .L_lambda_opt_params_end_0011
 18435 0000D1FC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18436 0000D201 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18437 0000D205 48FFC6                  	inc rsi
 18438 0000D208 EBEC                    	jmp .L_lambda_opt_params_loop_0011
 18439                                  .L_lambda_opt_params_end_0011:
 18440 0000D20A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18441 0000D20D 4889C3                  	mov rbx, rax
 18442 0000D210 58                      	pop rax
 18443 0000D211 C60004                  	mov byte [rax], T_closure
 18444 0000D214 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18445 0000D218 48C74009[25D20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 18446 0000D220 E95D010000              	jmp .L_lambda_opt_end_0011
 18447                                  .L_lambda_opt_code_0011:; lambda opt body
 18448 0000D225 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18449 0000D22B 7409                    	je .L_lambda_opt_arity_check_exact_0011
 18450 0000D22D 7F57                    	jg .L_lambda_opt_arity_check_more_0011
 18451 0000D22F 6A01                    	push 1
 18452 0000D231 E94D880000              	jmp L_error_incorrect_arity_opt
 18453                                  .L_lambda_opt_arity_check_exact_0011:
 18454 0000D236 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 18455 0000D23A 4C894C24F8              	mov qword [rsp -8], r9
 18456 0000D23F 4C8B4C2408              	mov r9, qword [rsp +8]
 18457 0000D244 4C890C24                	mov qword [rsp +8 * 0], r9
 18458 0000D248 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 18459 0000D24D 4C89C9                  	mov rcx, r9
 18460 0000D250 49FFC1                  	inc r9
 18461 0000D253 4C894C2408              	mov qword [rsp +8], r9
 18462 0000D258 4889E2                  	mov rdx, rsp
 18463 0000D25B 4883C218                	add rdx, 24
 18464                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0011:
 18465 0000D25F 4883F900                	cmp rcx, 0
 18466 0000D263 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0011
 18467 0000D265 4C8B02                  	mov r8, qword [rdx]
 18468 0000D268 4C8942F8                	mov qword [rdx - 8], r8
 18469 0000D26C 4883C208                	add rdx, 8
 18470 0000D270 48FFC9                  	dec rcx
 18471 0000D273 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0011
 18472                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0011:
 18473 0000D275 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 18474 0000D27D 4883EC08                	sub rsp, 8
 18475 0000D281 E984000000              	jmp .L_lambda_opt_stack_adjusted_0011
 18476                                  .L_lambda_opt_arity_check_more_0011:
 18477 0000D286 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 18478 0000D28B 4D89C4                  	mov r12, r8
 18479 0000D28E 4C89C1                  	mov rcx, r8
 18480 0000D291 4D8D5002                	lea r10, [r8 + 2] 
 18481 0000D295 4883E901                	sub rcx, 1
 18482 0000D299 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 18483 0000D29E 49B9-                   	mov r9, sob_nil
 18483 0000D2A0 [0100000000000000] 
 18484                                  .L_lambda_opt_create_list_of_opt_params_0011:
 18485 0000D2A8 4883F900                	cmp rcx, 0
 18486 0000D2AC 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0011
 18487 0000D2AE BF11000000              	mov rdi, 17
 18488 0000D2B3 E8FE870000              	call malloc
 18489 0000D2B8 C60021                  	mov byte [rax], T_pair
 18490 0000D2BB 498B1B                  	mov rbx, qword [r11]
 18491 0000D2BE 48895801                	mov qword [rax +1], rbx
 18492 0000D2C2 4C894809                	mov qword [rax + 1 + 8], r9
 18493 0000D2C6 4989C1                  	mov r9, rax
 18494 0000D2C9 48FFC9                  	dec rcx
 18495 0000D2CC 4983EB08                	sub r11, 8
 18496 0000D2D0 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0011
 18497                                  .L_lambda_opt_create_list_of_opt_params_end_0011:
 18498 0000D2D2 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 18499 0000D2D7 4D8908                  	mov qword [r8], r9
 18500 0000D2DA 4E8D14D500000000        	lea r10, [8 * r10]
 18501 0000D2E2 4901E2                  	add r10, rsp
 18502 0000D2E5 B905000000              	mov rcx, 4 + 1
 18503                                  .L_lambda_opt_stack_shrink_loop_0011:
 18504 0000D2EA 4883F900                	cmp rcx, 0
 18505 0000D2EE 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0011
 18506 0000D2F0 4D8B18                  	mov r11, qword [r8]
 18507 0000D2F3 4D891A                  	mov qword [r10], r11
 18508 0000D2F6 4983E808                	sub r8, 8
 18509 0000D2FA 4983EA08                	sub r10, 8
 18510 0000D2FE 48FFC9                  	dec rcx
 18511 0000D301 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18512                                  .L_lambda_opt_stack_shrink_loop_exit_0011:
 18513 0000D303 4983C208                	add r10, 8
 18514 0000D307 4C89D4                  	mov rsp, r10
 18515                                  .L_lambda_opt_stack_adjusted_0011:;continue with the code, the stack is ok
 18516 0000D30A 48C744241002000000      	mov qword [rsp + 8*2], 2
 18517 0000D313 C8000000                	enter 0, 0
 18518                                  	; preparing a tail-call
 18519 0000D317 488B4528                	mov rax, PARAM(1)	; param strs
 18520 0000D31B 50                      	push rax
 18521 0000D31C 488B4520                	mov rax, PARAM(0)	; param str
 18522 0000D320 50                      	push rax
 18523 0000D321 6A02                    	push 2	; arg count
 18524 0000D323 488B4510                	mov rax, ENV
 18525 0000D327 488B00                  	mov rax, qword [rax + 8 * 0]
 18526 0000D32A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18527 0000D32D 488B00                  	mov rax, qword [rax]
 18528 0000D330 803804                  	cmp byte [rax], T_closure
 18529 0000D333 0F85D4860000            	jne L_error_non_closure
 18530 0000D339 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18531 0000D33C FF7508                  	push qword [rbp + 8 * 1]
 18532                                   ; old ret addr
 18533 0000D33F FF7500                  	push qword [rbp]
 18534                                   ; restore the old rbp
 18535 0000D342 BB02000000              	mov rbx, 2
 18536 0000D347 4883C303                	add rbx, 3
 18537 0000D34B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18538 0000D34F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18539 0000D354 4C8D4DF8                	lea r9, [rbp - 8]
 18540 0000D358 B906000000              	mov rcx, 6
 18541                                  .L_tc_recycle_frame_loop_00a3:
 18542 0000D35D 4883F900                	cmp rcx, 0
 18543 0000D361 7413                    	je .L_tc_recycle_frame_done_00a3
 18544 0000D363 4D8B11                  	mov r10, qword [r9]
 18545 0000D366 4D8910                  	mov qword [r8], r10
 18546 0000D369 4983E808                	sub r8, 8
 18547 0000D36D 4983E908                	sub r9, 8
 18548 0000D371 48FFC9                  	dec rcx
 18549 0000D374 EBE7                    	jmp .L_tc_recycle_frame_loop_00a3
 18550                                  .L_tc_recycle_frame_done_00a3:
 18551 0000D376 498D6008                	lea rsp, [r8 + 8]
 18552 0000D37A 5D                      	pop rbp ; restore the old rbp
 18553 0000D37B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18554 0000D37E C9                      	leave
 18555 0000D37F C22000                  	ret 8 * (2 + 2)
 18556                                  .L_lambda_opt_end_0011:	; new closure is in rax
 18557 0000D382 C9                      	leave
 18558 0000D383 C21800                  	ret AND_KILL_FRAME(1)
 18559                                  .L_lambda_simple_end_0069:	; new closure is in rax
 18560 0000D386 803804                  	cmp byte [rax], T_closure
 18561 0000D389 0F857E860000            	jne L_error_non_closure
 18562 0000D38F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18563 0000D392 FF7508                  	push qword [rbp + 8 * 1]
 18564                                   ; old ret addr
 18565 0000D395 FF7500                  	push qword [rbp]
 18566                                   ; restore the old rbp
 18567 0000D398 BB01000000              	mov rbx, 1
 18568 0000D39D 4883C303                	add rbx, 3
 18569 0000D3A1 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18570 0000D3A5 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18571 0000D3AA 4C8D4DF8                	lea r9, [rbp - 8]
 18572 0000D3AE B905000000              	mov rcx, 5
 18573                                  .L_tc_recycle_frame_loop_00a1:
 18574 0000D3B3 4883F900                	cmp rcx, 0
 18575 0000D3B7 7413                    	je .L_tc_recycle_frame_done_00a1
 18576 0000D3B9 4D8B11                  	mov r10, qword [r9]
 18577 0000D3BC 4D8910                  	mov qword [r8], r10
 18578 0000D3BF 4983E808                	sub r8, 8
 18579 0000D3C3 4983E908                	sub r9, 8
 18580 0000D3C7 48FFC9                  	dec rcx
 18581 0000D3CA EBE7                    	jmp .L_tc_recycle_frame_loop_00a1
 18582                                  .L_tc_recycle_frame_done_00a1:
 18583 0000D3CC 498D6008                	lea rsp, [r8 + 8]
 18584 0000D3D0 5D                      	pop rbp ; restore the old rbp
 18585 0000D3D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18586 0000D3D4 C9                      	leave
 18587 0000D3D5 C21800                  	ret AND_KILL_FRAME(1)
 18588                                  .L_lambda_simple_end_0068:	; new closure is in rax
 18589 0000D3D8 803804                  	cmp byte [rax], T_closure
 18590 0000D3DB 0F852C860000            	jne L_error_non_closure
 18591 0000D3E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18592 0000D3E4 FF7508                  	push qword [rbp + 8 * 1]
 18593                                   ; old ret addr
 18594 0000D3E7 FF7500                  	push qword [rbp]
 18595                                   ; restore the old rbp
 18596 0000D3EA BB01000000              	mov rbx, 1
 18597 0000D3EF 4883C303                	add rbx, 3
 18598 0000D3F3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18599 0000D3F7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18600 0000D3FC 4C8D4DF8                	lea r9, [rbp - 8]
 18601 0000D400 B905000000              	mov rcx, 5
 18602                                  .L_tc_recycle_frame_loop_009d:
 18603 0000D405 4883F900                	cmp rcx, 0
 18604 0000D409 7413                    	je .L_tc_recycle_frame_done_009d
 18605 0000D40B 4D8B11                  	mov r10, qword [r9]
 18606 0000D40E 4D8910                  	mov qword [r8], r10
 18607 0000D411 4983E808                	sub r8, 8
 18608 0000D415 4983E908                	sub r9, 8
 18609 0000D419 48FFC9                  	dec rcx
 18610 0000D41C EBE7                    	jmp .L_tc_recycle_frame_loop_009d
 18611                                  .L_tc_recycle_frame_done_009d:
 18612 0000D41E 498D6008                	lea rsp, [r8 + 8]
 18613 0000D422 5D                      	pop rbp ; restore the old rbp
 18614 0000D423 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18615 0000D426 C9                      	leave
 18616 0000D427 C21800                  	ret AND_KILL_FRAME(1)
 18617                                  .L_lambda_simple_end_0064:	; new closure is in rax
 18618 0000D42A 803804                  	cmp byte [rax], T_closure
 18619 0000D42D 0F85DA850000            	jne L_error_non_closure
 18620 0000D433 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18621 0000D436 FF7508                  	push qword [rbp + 8 * 1]
 18622                                   ; old ret addr
 18623 0000D439 FF7500                  	push qword [rbp]
 18624                                   ; restore the old rbp
 18625 0000D43C BB01000000              	mov rbx, 1
 18626 0000D441 4883C303                	add rbx, 3
 18627 0000D445 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 18628 0000D449 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 18629 0000D44E 4C8D4DF8                	lea r9, [rbp - 8]
 18630 0000D452 B905000000              	mov rcx, 5
 18631                                  .L_tc_recycle_frame_loop_009b:
 18632 0000D457 4883F900                	cmp rcx, 0
 18633 0000D45B 7413                    	je .L_tc_recycle_frame_done_009b
 18634 0000D45D 4D8B11                  	mov r10, qword [r9]
 18635 0000D460 4D8910                  	mov qword [r8], r10
 18636 0000D463 4983E808                	sub r8, 8
 18637 0000D467 4983E908                	sub r9, 8
 18638 0000D46B 48FFC9                  	dec rcx
 18639 0000D46E EBE7                    	jmp .L_tc_recycle_frame_loop_009b
 18640                                  .L_tc_recycle_frame_done_009b:
 18641 0000D470 498D6008                	lea rsp, [r8 + 8]
 18642 0000D474 5D                      	pop rbp ; restore the old rbp
 18643 0000D475 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18644 0000D478 C9                      	leave
 18645 0000D479 C22000                  	ret AND_KILL_FRAME(2)
 18646                                  .L_lambda_simple_end_0063:	; new closure is in rax
 18647 0000D47C 50                      	push rax
 18648 0000D47D 6A01                    	push 1	; arg count
 18649 0000D47F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18650 0000D484 E82D860000              	call malloc
 18651 0000D489 50                      	push rax
 18652 0000D48A BF00000000              	mov rdi, 8 * 0	; new rib
 18653 0000D48F E822860000              	call malloc
 18654 0000D494 50                      	push rax
 18655 0000D495 BF08000000              	mov rdi, 8 * 1	; extended env
 18656 0000D49A E817860000              	call malloc
 18657 0000D49F 488B7D10                	mov rdi, ENV
 18658 0000D4A3 BE00000000              	mov rsi, 0
 18659 0000D4A8 BA01000000              	mov rdx, 1
 18660                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 18661 0000D4AD 4883FE00                	cmp rsi, 0
 18662 0000D4B1 7410                    	je .L_lambda_simple_env_end_006b
 18663 0000D4B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18664 0000D4B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18665 0000D4BB 48FFC6                  	inc rsi
 18666 0000D4BE 48FFC2                  	inc rdx
 18667 0000D4C1 EBEA                    	jmp .L_lambda_simple_env_loop_006b
 18668                                  .L_lambda_simple_env_end_006b:
 18669 0000D4C3 5B                      	pop rbx
 18670 0000D4C4 BE00000000              	mov rsi, 0
 18671                                  .L_lambda_simple_params_loop_006b:	; copy params
 18672 0000D4C9 4883FE00                	cmp rsi, 0
 18673 0000D4CD 740E                    	je .L_lambda_simple_params_end_006b
 18674 0000D4CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18675 0000D4D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18676 0000D4D8 48FFC6                  	inc rsi
 18677 0000D4DB EBEC                    	jmp .L_lambda_simple_params_loop_006b
 18678                                  .L_lambda_simple_params_end_006b:
 18679 0000D4DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18680 0000D4E0 4889C3                  	mov rbx, rax
 18681 0000D4E3 58                      	pop rax
 18682 0000D4E4 C60004                  	mov byte [rax], T_closure
 18683 0000D4E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18684 0000D4EB 48C74009[F8D40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 18685 0000D4F3 E947010000              	jmp .L_lambda_simple_end_006b
 18686                                  .L_lambda_simple_code_006b:	; lambda-simple body
 18687 0000D4F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18688 0000D4FE 740B                    	je .L_lambda_simple_arity_check_ok_006b
 18689 0000D500 FF742410                	push qword [rsp + 8 * 2]
 18690 0000D504 6A01                    	push 1
 18691 0000D506 E964850000              	jmp L_error_incorrect_arity_simple
 18692                                  .L_lambda_simple_arity_check_ok_006b:
 18693 0000D50B C8000000                	enter 0, 0
 18694                                  	; preparing a non-tail-call
 18695 0000D50F 488B0425[C9120000]      	mov rax, qword [free_var_75]	; free var char=?
 18696 0000D517 803805                  	cmp byte [rax], T_undefined
 18697 0000D51A 0F8469840000            	je L_error_fvar_undefined
 18698 0000D520 50                      	push rax
 18699 0000D521 488B0425[B8120000]      	mov rax, qword [free_var_74]	; free var char<?
 18700 0000D529 803805                  	cmp byte [rax], T_undefined
 18701 0000D52C 0F8457840000            	je L_error_fvar_undefined
 18702 0000D532 50                      	push rax
 18703 0000D533 6A02                    	push 2	; arg count
 18704 0000D535 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18705 0000D539 803804                  	cmp byte [rax], T_closure
 18706 0000D53C 0F85CB840000            	jne L_error_non_closure
 18707 0000D542 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18708 0000D545 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18709 0000D548 48890425[B4160000]      	mov qword [free_var_134], rax
 18710 0000D550 48B8-                   	mov rax, sob_void
 18710 0000D552 [0000000000000000] 
 18711                                  
 18712                                  	; preparing a non-tail-call
 18713 0000D55A 488B0425[52120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18714 0000D562 803805                  	cmp byte [rax], T_undefined
 18715 0000D565 0F841E840000            	je L_error_fvar_undefined
 18716 0000D56B 50                      	push rax
 18717 0000D56C 488B0425[41120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 18718 0000D574 803805                  	cmp byte [rax], T_undefined
 18719 0000D577 0F840C840000            	je L_error_fvar_undefined
 18720 0000D57D 50                      	push rax
 18721 0000D57E 6A02                    	push 2	; arg count
 18722 0000D580 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18723 0000D584 803804                  	cmp byte [rax], T_closure
 18724 0000D587 0F8580840000            	jne L_error_non_closure
 18725 0000D58D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18726 0000D590 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18727 0000D593 48890425[E8150000]      	mov qword [free_var_122], rax
 18728 0000D59B 48B8-                   	mov rax, sob_void
 18728 0000D59D [0000000000000000] 
 18729                                  
 18730                                  	; preparing a non-tail-call
 18731 0000D5A5 488B0425[C9120000]      	mov rax, qword [free_var_75]	; free var char=?
 18732 0000D5AD 803805                  	cmp byte [rax], T_undefined
 18733 0000D5B0 0F84D3830000            	je L_error_fvar_undefined
 18734 0000D5B6 50                      	push rax
 18735 0000D5B7 488B0425[EB120000]      	mov rax, qword [free_var_77]	; free var char>?
 18736 0000D5BF 803805                  	cmp byte [rax], T_undefined
 18737 0000D5C2 0F84C1830000            	je L_error_fvar_undefined
 18738 0000D5C8 50                      	push rax
 18739 0000D5C9 6A02                    	push 2	; arg count
 18740 0000D5CB 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18741 0000D5CF 803804                  	cmp byte [rax], T_closure
 18742 0000D5D2 0F8535840000            	jne L_error_non_closure
 18743 0000D5D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18744 0000D5DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18745 0000D5DE 48890425[E7160000]      	mov qword [free_var_137], rax
 18746 0000D5E6 48B8-                   	mov rax, sob_void
 18746 0000D5E8 [0000000000000000] 
 18747                                  
 18748                                  	; preparing a non-tail-call
 18749 0000D5F0 488B0425[52120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18750 0000D5F8 803805                  	cmp byte [rax], T_undefined
 18751 0000D5FB 0F8488830000            	je L_error_fvar_undefined
 18752 0000D601 50                      	push rax
 18753 0000D602 488B0425[74120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 18754 0000D60A 803805                  	cmp byte [rax], T_undefined
 18755 0000D60D 0F8476830000            	je L_error_fvar_undefined
 18756 0000D613 50                      	push rax
 18757 0000D614 6A02                    	push 2	; arg count
 18758 0000D616 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18759 0000D61A 803804                  	cmp byte [rax], T_closure
 18760 0000D61D 0F85EA830000            	jne L_error_non_closure
 18761 0000D623 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18762 0000D626 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18763 0000D629 48890425[1B160000]      	mov qword [free_var_125], rax
 18764 0000D631 48B8-                   	mov rax, sob_void
 18764 0000D633 [0000000000000000] 
 18765 0000D63B C9                      	leave
 18766 0000D63C C21800                  	ret AND_KILL_FRAME(1)
 18767                                  .L_lambda_simple_end_006b:	; new closure is in rax
 18768 0000D63F 803804                  	cmp byte [rax], T_closure
 18769 0000D642 0F85C5830000            	jne L_error_non_closure
 18770 0000D648 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18771 0000D64B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18772                                  
 18773 0000D64E 4889C7                  	mov rdi, rax
 18774 0000D651 E8B5860000              	call print_sexpr_if_not_void
 18775                                  	; preparing a non-tail-call
 18776 0000D656 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18777 0000D65B E856840000              	call malloc
 18778 0000D660 50                      	push rax
 18779 0000D661 BF00000000              	mov rdi, 8 * 0	; new rib
 18780 0000D666 E84B840000              	call malloc
 18781 0000D66B 50                      	push rax
 18782 0000D66C BF08000000              	mov rdi, 8 * 1	; extended env
 18783 0000D671 E840840000              	call malloc
 18784 0000D676 488B7D10                	mov rdi, ENV
 18785 0000D67A BE00000000              	mov rsi, 0
 18786 0000D67F BA01000000              	mov rdx, 1
 18787                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 18788 0000D684 4883FE00                	cmp rsi, 0
 18789 0000D688 7410                    	je .L_lambda_simple_env_end_006c
 18790 0000D68A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18791 0000D68E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18792 0000D692 48FFC6                  	inc rsi
 18793 0000D695 48FFC2                  	inc rdx
 18794 0000D698 EBEA                    	jmp .L_lambda_simple_env_loop_006c
 18795                                  .L_lambda_simple_env_end_006c:
 18796 0000D69A 5B                      	pop rbx
 18797 0000D69B BE00000000              	mov rsi, 0
 18798                                  .L_lambda_simple_params_loop_006c:	; copy params
 18799 0000D6A0 4883FE00                	cmp rsi, 0
 18800 0000D6A4 740E                    	je .L_lambda_simple_params_end_006c
 18801 0000D6A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18802 0000D6AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18803 0000D6AF 48FFC6                  	inc rsi
 18804 0000D6B2 EBEC                    	jmp .L_lambda_simple_params_loop_006c
 18805                                  .L_lambda_simple_params_end_006c:
 18806 0000D6B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18807 0000D6B7 4889C3                  	mov rbx, rax
 18808 0000D6BA 58                      	pop rax
 18809 0000D6BB C60004                  	mov byte [rax], T_closure
 18810 0000D6BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18811 0000D6C2 48C74009[CFD60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 18812 0000D6CA E9C40C0000              	jmp .L_lambda_simple_end_006c
 18813                                  .L_lambda_simple_code_006c:	; lambda-simple body
 18814 0000D6CF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18815 0000D6D5 740B                    	je .L_lambda_simple_arity_check_ok_006c
 18816 0000D6D7 FF742410                	push qword [rsp + 8 * 2]
 18817 0000D6DB 6A02                    	push 2
 18818 0000D6DD E98D830000              	jmp L_error_incorrect_arity_simple
 18819                                  .L_lambda_simple_arity_check_ok_006c:
 18820 0000D6E2 C8000000                	enter 0, 0
 18821                                  	; preparing a tail-call
 18822 0000D6E6 48B8-                   	mov rax, L_constants + 1993
 18822 0000D6E8 [C907000000000000] 
 18823 0000D6F0 50                      	push rax
 18824 0000D6F1 6A01                    	push 1	; arg count
 18825 0000D6F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18826 0000D6F8 E8B9830000              	call malloc
 18827 0000D6FD 50                      	push rax
 18828 0000D6FE BF10000000              	mov rdi, 8 * 2	; new rib
 18829 0000D703 E8AE830000              	call malloc
 18830 0000D708 50                      	push rax
 18831 0000D709 BF10000000              	mov rdi, 8 * 2	; extended env
 18832 0000D70E E8A3830000              	call malloc
 18833 0000D713 488B7D10                	mov rdi, ENV
 18834 0000D717 BE00000000              	mov rsi, 0
 18835 0000D71C BA01000000              	mov rdx, 1
 18836                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 18837 0000D721 4883FE01                	cmp rsi, 1
 18838 0000D725 7410                    	je .L_lambda_simple_env_end_006d
 18839 0000D727 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18840 0000D72B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18841 0000D72F 48FFC6                  	inc rsi
 18842 0000D732 48FFC2                  	inc rdx
 18843 0000D735 EBEA                    	jmp .L_lambda_simple_env_loop_006d
 18844                                  .L_lambda_simple_env_end_006d:
 18845 0000D737 5B                      	pop rbx
 18846 0000D738 BE00000000              	mov rsi, 0
 18847                                  .L_lambda_simple_params_loop_006d:	; copy params
 18848 0000D73D 4883FE02                	cmp rsi, 2
 18849 0000D741 740E                    	je .L_lambda_simple_params_end_006d
 18850 0000D743 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18851 0000D748 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18852 0000D74C 48FFC6                  	inc rsi
 18853 0000D74F EBEC                    	jmp .L_lambda_simple_params_loop_006d
 18854                                  .L_lambda_simple_params_end_006d:
 18855 0000D751 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18856 0000D754 4889C3                  	mov rbx, rax
 18857 0000D757 58                      	pop rax
 18858 0000D758 C60004                  	mov byte [rax], T_closure
 18859 0000D75B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18860 0000D75F 48C74009[6CD70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 18861 0000D767 E9D50B0000              	jmp .L_lambda_simple_end_006d
 18862                                  .L_lambda_simple_code_006d:	; lambda-simple body
 18863 0000D76C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18864 0000D772 740B                    	je .L_lambda_simple_arity_check_ok_006d
 18865 0000D774 FF742410                	push qword [rsp + 8 * 2]
 18866 0000D778 6A01                    	push 1
 18867 0000D77A E9F0820000              	jmp L_error_incorrect_arity_simple
 18868                                  .L_lambda_simple_arity_check_ok_006d:
 18869 0000D77F C8000000                	enter 0, 0
 18870 0000D783 BF08000000              	mov rdi, 8*1
 18871 0000D788 E829830000              	call malloc
 18872 0000D78D 488B5D20                	mov rbx, PARAM(0)
 18873 0000D791 488918                  	mov qword [rax], rbx
 18874 0000D794 48894520                	mov PARAM(0), rax
 18875 0000D798 48B8-                   	mov rax, sob_void
 18875 0000D79A [0000000000000000] 
 18876                                  
 18877 0000D7A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18878 0000D7A7 E80A830000              	call malloc
 18879 0000D7AC 50                      	push rax
 18880 0000D7AD BF08000000              	mov rdi, 8 * 1	; new rib
 18881 0000D7B2 E8FF820000              	call malloc
 18882 0000D7B7 50                      	push rax
 18883 0000D7B8 BF18000000              	mov rdi, 8 * 3	; extended env
 18884 0000D7BD E8F4820000              	call malloc
 18885 0000D7C2 488B7D10                	mov rdi, ENV
 18886 0000D7C6 BE00000000              	mov rsi, 0
 18887 0000D7CB BA01000000              	mov rdx, 1
 18888                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 18889 0000D7D0 4883FE02                	cmp rsi, 2
 18890 0000D7D4 7410                    	je .L_lambda_simple_env_end_006e
 18891 0000D7D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18892 0000D7DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18893 0000D7DE 48FFC6                  	inc rsi
 18894 0000D7E1 48FFC2                  	inc rdx
 18895 0000D7E4 EBEA                    	jmp .L_lambda_simple_env_loop_006e
 18896                                  .L_lambda_simple_env_end_006e:
 18897 0000D7E6 5B                      	pop rbx
 18898 0000D7E7 BE00000000              	mov rsi, 0
 18899                                  .L_lambda_simple_params_loop_006e:	; copy params
 18900 0000D7EC 4883FE01                	cmp rsi, 1
 18901 0000D7F0 740E                    	je .L_lambda_simple_params_end_006e
 18902 0000D7F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18903 0000D7F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18904 0000D7FB 48FFC6                  	inc rsi
 18905 0000D7FE EBEC                    	jmp .L_lambda_simple_params_loop_006e
 18906                                  .L_lambda_simple_params_end_006e:
 18907 0000D800 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18908 0000D803 4889C3                  	mov rbx, rax
 18909 0000D806 58                      	pop rax
 18910 0000D807 C60004                  	mov byte [rax], T_closure
 18911 0000D80A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18912 0000D80E 48C74009[1BD80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 18913 0000D816 E94C020000              	jmp .L_lambda_simple_end_006e
 18914                                  .L_lambda_simple_code_006e:	; lambda-simple body
 18915 0000D81B 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18916 0000D821 740B                    	je .L_lambda_simple_arity_check_ok_006e
 18917 0000D823 FF742410                	push qword [rsp + 8 * 2]
 18918 0000D827 6A05                    	push 5
 18919 0000D829 E941820000              	jmp L_error_incorrect_arity_simple
 18920                                  .L_lambda_simple_arity_check_ok_006e:
 18921 0000D82E C8000000                	enter 0, 0
 18922                                  	; preparing a non-tail-call
 18923 0000D832 488B4530                	mov rax, PARAM(2)	; param len1
 18924 0000D836 50                      	push rax
 18925 0000D837 488B4520                	mov rax, PARAM(0)	; param i
 18926 0000D83B 50                      	push rax
 18927 0000D83C 6A02                    	push 2	; arg count
 18928 0000D83E 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 18929 0000D846 803805                  	cmp byte [rax], T_undefined
 18930 0000D849 0F843A810000            	je L_error_fvar_undefined
 18931 0000D84F 803804                  	cmp byte [rax], T_closure
 18932 0000D852 0F85B5810000            	jne L_error_non_closure
 18933 0000D858 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18934 0000D85B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18935 0000D85E 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 18936 0000D864 0F85F9010000            	jne .L_or_end_000a; if its not false (true) then we need to return it and not the last element
 18937                                  	; preparing a non-tail-call
 18938                                  	; preparing a non-tail-call
 18939 0000D86A 488B4520                	mov rax, PARAM(0)	; param i
 18940 0000D86E 50                      	push rax
 18941 0000D86F 488B4538                	mov rax, PARAM(3)	; param str2
 18942 0000D873 50                      	push rax
 18943 0000D874 6A02                    	push 2	; arg count
 18944 0000D876 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18945 0000D87E 803805                  	cmp byte [rax], T_undefined
 18946 0000D881 0F8402810000            	je L_error_fvar_undefined
 18947 0000D887 803804                  	cmp byte [rax], T_closure
 18948 0000D88A 0F857D810000            	jne L_error_non_closure
 18949 0000D890 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18950 0000D893 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18951 0000D896 50                      	push rax
 18952                                  	; preparing a non-tail-call
 18953 0000D897 488B4520                	mov rax, PARAM(0)	; param i
 18954 0000D89B 50                      	push rax
 18955 0000D89C 488B4528                	mov rax, PARAM(1)	; param str1
 18956 0000D8A0 50                      	push rax
 18957 0000D8A1 6A02                    	push 2	; arg count
 18958 0000D8A3 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18959 0000D8AB 803805                  	cmp byte [rax], T_undefined
 18960 0000D8AE 0F84D5800000            	je L_error_fvar_undefined
 18961 0000D8B4 803804                  	cmp byte [rax], T_closure
 18962 0000D8B7 0F8550810000            	jne L_error_non_closure
 18963 0000D8BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18964 0000D8C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18965 0000D8C3 50                      	push rax
 18966 0000D8C4 6A02                    	push 2	; arg count
 18967 0000D8C6 488B4510                	mov rax, ENV
 18968 0000D8CA 488B4008                	mov rax, qword [rax + 8 * 1]
 18969 0000D8CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18970 0000D8D1 803804                  	cmp byte [rax], T_closure
 18971 0000D8D4 0F8533810000            	jne L_error_non_closure
 18972 0000D8DA FF7001                  	push SOB_CLOSURE_ENV(rax)
 18973 0000D8DD FF5009                  	call SOB_CLOSURE_CODE(rax)
 18974 0000D8E0 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 18975 0000D8E6 0F8577010000            	jne .L_or_end_000a; if its not false (true) then we need to return it and not the last element
 18976                                  	; preparing a non-tail-call
 18977 0000D8EC 488B4530                	mov rax, PARAM(2)	; param len1
 18978 0000D8F0 50                      	push rax
 18979 0000D8F1 488B4520                	mov rax, PARAM(0)	; param i
 18980 0000D8F5 50                      	push rax
 18981 0000D8F6 6A02                    	push 2	; arg count
 18982 0000D8F8 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 18983 0000D900 803805                  	cmp byte [rax], T_undefined
 18984 0000D903 0F8480800000            	je L_error_fvar_undefined
 18985 0000D909 803804                  	cmp byte [rax], T_closure
 18986 0000D90C 0F85FB800000            	jne L_error_non_closure
 18987 0000D912 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18988 0000D915 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18989 0000D918 483D[02000000]          	cmp rax, sob_boolean_false
 18990 0000D91E 0F8435010000            	je .L_if_else_0059
 18991                                  	; preparing a non-tail-call
 18992                                  	; preparing a non-tail-call
 18993 0000D924 488B4520                	mov rax, PARAM(0)	; param i
 18994 0000D928 50                      	push rax
 18995 0000D929 488B4538                	mov rax, PARAM(3)	; param str2
 18996 0000D92D 50                      	push rax
 18997 0000D92E 6A02                    	push 2	; arg count
 18998 0000D930 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18999 0000D938 803805                  	cmp byte [rax], T_undefined
 19000 0000D93B 0F8448800000            	je L_error_fvar_undefined
 19001 0000D941 803804                  	cmp byte [rax], T_closure
 19002 0000D944 0F85C3800000            	jne L_error_non_closure
 19003 0000D94A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19004 0000D94D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19005 0000D950 50                      	push rax
 19006                                  	; preparing a non-tail-call
 19007 0000D951 488B4520                	mov rax, PARAM(0)	; param i
 19008 0000D955 50                      	push rax
 19009 0000D956 488B4528                	mov rax, PARAM(1)	; param str1
 19010 0000D95A 50                      	push rax
 19011 0000D95B 6A02                    	push 2	; arg count
 19012 0000D95D 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19013 0000D965 803805                  	cmp byte [rax], T_undefined
 19014 0000D968 0F841B800000            	je L_error_fvar_undefined
 19015 0000D96E 803804                  	cmp byte [rax], T_closure
 19016 0000D971 0F8596800000            	jne L_error_non_closure
 19017 0000D977 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19018 0000D97A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19019 0000D97D 50                      	push rax
 19020 0000D97E 6A02                    	push 2	; arg count
 19021 0000D980 488B4510                	mov rax, ENV
 19022 0000D984 488B4008                	mov rax, qword [rax + 8 * 1]
 19023 0000D988 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19024 0000D98C 803804                  	cmp byte [rax], T_closure
 19025 0000D98F 0F8578800000            	jne L_error_non_closure
 19026 0000D995 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19027 0000D998 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19028 0000D99B 483D[02000000]          	cmp rax, sob_boolean_false
 19029 0000D9A1 0F84A6000000            	je .L_if_else_0058
 19030                                  	; preparing a tail-call
 19031 0000D9A7 488B4540                	mov rax, PARAM(4)	; param len2
 19032 0000D9AB 50                      	push rax
 19033 0000D9AC 488B4538                	mov rax, PARAM(3)	; param str2
 19034 0000D9B0 50                      	push rax
 19035 0000D9B1 488B4530                	mov rax, PARAM(2)	; param len1
 19036 0000D9B5 50                      	push rax
 19037 0000D9B6 488B4528                	mov rax, PARAM(1)	; param str1
 19038 0000D9BA 50                      	push rax
 19039                                  	; preparing a non-tail-call
 19040 0000D9BB 48B8-                   	mov rax, L_constants + 2270
 19040 0000D9BD [DE08000000000000] 
 19041 0000D9C5 50                      	push rax
 19042 0000D9C6 488B4520                	mov rax, PARAM(0)	; param i
 19043 0000D9CA 50                      	push rax
 19044 0000D9CB 6A02                    	push 2	; arg count
 19045 0000D9CD 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 19046 0000D9D5 803805                  	cmp byte [rax], T_undefined
 19047 0000D9D8 0F84AB7F0000            	je L_error_fvar_undefined
 19048 0000D9DE 803804                  	cmp byte [rax], T_closure
 19049 0000D9E1 0F8526800000            	jne L_error_non_closure
 19050 0000D9E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19051 0000D9EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 19052 0000D9ED 50                      	push rax
 19053 0000D9EE 6A05                    	push 5	; arg count
 19054 0000D9F0 488B4510                	mov rax, ENV
 19055 0000D9F4 488B00                  	mov rax, qword [rax + 8 * 0]
 19056 0000D9F7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19057 0000D9FA 488B00                  	mov rax, qword [rax]
 19058 0000D9FD 803804                  	cmp byte [rax], T_closure
 19059 0000DA00 0F8507800000            	jne L_error_non_closure
 19060 0000DA06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19061 0000DA09 FF7508                  	push qword [rbp + 8 * 1]
 19062                                   ; old ret addr
 19063 0000DA0C FF7500                  	push qword [rbp]
 19064                                   ; restore the old rbp
 19065 0000DA0F BB05000000              	mov rbx, 5
 19066 0000DA14 4883C303                	add rbx, 3
 19067 0000DA18 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19068 0000DA1C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19069 0000DA21 4C8D4DF8                	lea r9, [rbp - 8]
 19070 0000DA25 B909000000              	mov rcx, 9
 19071                                  .L_tc_recycle_frame_loop_00a5:
 19072 0000DA2A 4883F900                	cmp rcx, 0
 19073 0000DA2E 7413                    	je .L_tc_recycle_frame_done_00a5
 19074 0000DA30 4D8B11                  	mov r10, qword [r9]
 19075 0000DA33 4D8910                  	mov qword [r8], r10
 19076 0000DA36 4983E808                	sub r8, 8
 19077 0000DA3A 4983E908                	sub r9, 8
 19078 0000DA3E 48FFC9                  	dec rcx
 19079 0000DA41 EBE7                    	jmp .L_tc_recycle_frame_loop_00a5
 19080                                  .L_tc_recycle_frame_done_00a5:
 19081 0000DA43 498D6008                	lea rsp, [r8 + 8]
 19082 0000DA47 5D                      	pop rbp ; restore the old rbp
 19083 0000DA48 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19084 0000DA4B EB0A                    	jmp .L_if_end_0058
 19085                                  .L_if_else_0058:
 19086 0000DA4D 48B8-                   	mov rax, L_constants + 2
 19086 0000DA4F [0200000000000000] 
 19087                                  .L_if_end_0058:
 19088 0000DA57 EB0A                    	jmp .L_if_end_0059
 19089                                  .L_if_else_0059:
 19090 0000DA59 48B8-                   	mov rax, L_constants + 2
 19090 0000DA5B [0200000000000000] 
 19091                                  .L_if_end_0059:
 19092                                  .L_or_end_000a:
 19093 0000DA63 C9                      	leave
 19094 0000DA64 C23800                  	ret AND_KILL_FRAME(5)
 19095                                  .L_lambda_simple_end_006e:	; new closure is in rax
 19096 0000DA67 50                      	push rax
 19097 0000DA68 488B4520                	mov rax, PARAM(0)	; param run
 19098 0000DA6C 8F00                    	pop qword [rax]
 19099 0000DA6E 48B8-                   	mov rax, sob_void
 19099 0000DA70 [0000000000000000] 
 19100                                  
 19101                                  	; preparing a tail-call
 19102 0000DA78 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19103 0000DA7D E834800000              	call malloc
 19104 0000DA82 50                      	push rax
 19105 0000DA83 BF08000000              	mov rdi, 8 * 1	; new rib
 19106 0000DA88 E829800000              	call malloc
 19107 0000DA8D 50                      	push rax
 19108 0000DA8E BF18000000              	mov rdi, 8 * 3	; extended env
 19109 0000DA93 E81E800000              	call malloc
 19110 0000DA98 488B7D10                	mov rdi, ENV
 19111 0000DA9C BE00000000              	mov rsi, 0
 19112 0000DAA1 BA01000000              	mov rdx, 1
 19113                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 19114 0000DAA6 4883FE02                	cmp rsi, 2
 19115 0000DAAA 7410                    	je .L_lambda_simple_env_end_006f
 19116 0000DAAC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19117 0000DAB0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19118 0000DAB4 48FFC6                  	inc rsi
 19119 0000DAB7 48FFC2                  	inc rdx
 19120 0000DABA EBEA                    	jmp .L_lambda_simple_env_loop_006f
 19121                                  .L_lambda_simple_env_end_006f:
 19122 0000DABC 5B                      	pop rbx
 19123 0000DABD BE00000000              	mov rsi, 0
 19124                                  .L_lambda_simple_params_loop_006f:	; copy params
 19125 0000DAC2 4883FE01                	cmp rsi, 1
 19126 0000DAC6 740E                    	je .L_lambda_simple_params_end_006f
 19127 0000DAC8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19128 0000DACD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19129 0000DAD1 48FFC6                  	inc rsi
 19130 0000DAD4 EBEC                    	jmp .L_lambda_simple_params_loop_006f
 19131                                  .L_lambda_simple_params_end_006f:
 19132 0000DAD6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19133 0000DAD9 4889C3                  	mov rbx, rax
 19134 0000DADC 58                      	pop rax
 19135 0000DADD C60004                  	mov byte [rax], T_closure
 19136 0000DAE0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19137 0000DAE4 48C74009[F1DA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 19138 0000DAEC E9A0020000              	jmp .L_lambda_simple_end_006f
 19139                                  .L_lambda_simple_code_006f:	; lambda-simple body
 19140 0000DAF1 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19141 0000DAF7 740B                    	je .L_lambda_simple_arity_check_ok_006f
 19142 0000DAF9 FF742410                	push qword [rsp + 8 * 2]
 19143 0000DAFD 6A02                    	push 2
 19144 0000DAFF E96B7F0000              	jmp L_error_incorrect_arity_simple
 19145                                  .L_lambda_simple_arity_check_ok_006f:
 19146 0000DB04 C8000000                	enter 0, 0
 19147                                  	; preparing a tail-call
 19148                                  	; preparing a non-tail-call
 19149 0000DB08 488B4528                	mov rax, PARAM(1)	; param str2
 19150 0000DB0C 50                      	push rax
 19151 0000DB0D 6A01                    	push 1	; arg count
 19152 0000DB0F 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 19153 0000DB17 803805                  	cmp byte [rax], T_undefined
 19154 0000DB1A 0F84697E0000            	je L_error_fvar_undefined
 19155 0000DB20 803804                  	cmp byte [rax], T_closure
 19156 0000DB23 0F85E47E0000            	jne L_error_non_closure
 19157 0000DB29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19158 0000DB2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19159 0000DB2F 50                      	push rax
 19160                                  	; preparing a non-tail-call
 19161 0000DB30 488B4520                	mov rax, PARAM(0)	; param str1
 19162 0000DB34 50                      	push rax
 19163 0000DB35 6A01                    	push 1	; arg count
 19164 0000DB37 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 19165 0000DB3F 803805                  	cmp byte [rax], T_undefined
 19166 0000DB42 0F84417E0000            	je L_error_fvar_undefined
 19167 0000DB48 803804                  	cmp byte [rax], T_closure
 19168 0000DB4B 0F85BC7E0000            	jne L_error_non_closure
 19169 0000DB51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19170 0000DB54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19171 0000DB57 50                      	push rax
 19172 0000DB58 6A02                    	push 2	; arg count
 19173 0000DB5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19174 0000DB5F E8527F0000              	call malloc
 19175 0000DB64 50                      	push rax
 19176 0000DB65 BF10000000              	mov rdi, 8 * 2	; new rib
 19177 0000DB6A E8477F0000              	call malloc
 19178 0000DB6F 50                      	push rax
 19179 0000DB70 BF20000000              	mov rdi, 8 * 4	; extended env
 19180 0000DB75 E83C7F0000              	call malloc
 19181 0000DB7A 488B7D10                	mov rdi, ENV
 19182 0000DB7E BE00000000              	mov rsi, 0
 19183 0000DB83 BA01000000              	mov rdx, 1
 19184                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 19185 0000DB88 4883FE03                	cmp rsi, 3
 19186 0000DB8C 7410                    	je .L_lambda_simple_env_end_0070
 19187 0000DB8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19188 0000DB92 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19189 0000DB96 48FFC6                  	inc rsi
 19190 0000DB99 48FFC2                  	inc rdx
 19191 0000DB9C EBEA                    	jmp .L_lambda_simple_env_loop_0070
 19192                                  .L_lambda_simple_env_end_0070:
 19193 0000DB9E 5B                      	pop rbx
 19194 0000DB9F BE00000000              	mov rsi, 0
 19195                                  .L_lambda_simple_params_loop_0070:	; copy params
 19196 0000DBA4 4883FE02                	cmp rsi, 2
 19197 0000DBA8 740E                    	je .L_lambda_simple_params_end_0070
 19198 0000DBAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19199 0000DBAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19200 0000DBB3 48FFC6                  	inc rsi
 19201 0000DBB6 EBEC                    	jmp .L_lambda_simple_params_loop_0070
 19202                                  .L_lambda_simple_params_end_0070:
 19203 0000DBB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19204 0000DBBB 4889C3                  	mov rbx, rax
 19205 0000DBBE 58                      	pop rax
 19206 0000DBBF C60004                  	mov byte [rax], T_closure
 19207 0000DBC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19208 0000DBC6 48C74009[D3DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 19209 0000DBCE E96C010000              	jmp .L_lambda_simple_end_0070
 19210                                  .L_lambda_simple_code_0070:	; lambda-simple body
 19211 0000DBD3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19212 0000DBD9 740B                    	je .L_lambda_simple_arity_check_ok_0070
 19213 0000DBDB FF742410                	push qword [rsp + 8 * 2]
 19214 0000DBDF 6A02                    	push 2
 19215 0000DBE1 E9897E0000              	jmp L_error_incorrect_arity_simple
 19216                                  .L_lambda_simple_arity_check_ok_0070:
 19217 0000DBE6 C8000000                	enter 0, 0
 19218                                  	; preparing a non-tail-call
 19219 0000DBEA 488B4528                	mov rax, PARAM(1)	; param len2
 19220 0000DBEE 50                      	push rax
 19221 0000DBEF 488B4520                	mov rax, PARAM(0)	; param len1
 19222 0000DBF3 50                      	push rax
 19223 0000DBF4 6A02                    	push 2	; arg count
 19224 0000DBF6 488B0425[230E0000]      	mov rax, qword [free_var_5]	; free var <=
 19225 0000DBFE 803805                  	cmp byte [rax], T_undefined
 19226 0000DC01 0F84827D0000            	je L_error_fvar_undefined
 19227 0000DC07 803804                  	cmp byte [rax], T_closure
 19228 0000DC0A 0F85FD7D0000            	jne L_error_non_closure
 19229 0000DC10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19230 0000DC13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19231 0000DC16 483D[02000000]          	cmp rax, sob_boolean_false
 19232 0000DC1C 0F848F000000            	je .L_if_else_005a
 19233                                  	; preparing a tail-call
 19234 0000DC22 488B4528                	mov rax, PARAM(1)	; param len2
 19235 0000DC26 50                      	push rax
 19236 0000DC27 488B4510                	mov rax, ENV
 19237 0000DC2B 488B00                  	mov rax, qword [rax + 8 * 0]
 19238 0000DC2E 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19239 0000DC32 50                      	push rax
 19240 0000DC33 488B4520                	mov rax, PARAM(0)	; param len1
 19241 0000DC37 50                      	push rax
 19242 0000DC38 488B4510                	mov rax, ENV
 19243 0000DC3C 488B00                  	mov rax, qword [rax + 8 * 0]
 19244 0000DC3F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19245 0000DC42 50                      	push rax
 19246 0000DC43 48B8-                   	mov rax, L_constants + 2135
 19246 0000DC45 [5708000000000000] 
 19247 0000DC4D 50                      	push rax
 19248 0000DC4E 6A05                    	push 5	; arg count
 19249 0000DC50 488B4510                	mov rax, ENV
 19250 0000DC54 488B4008                	mov rax, qword [rax + 8 * 1]
 19251 0000DC58 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19252 0000DC5B 488B00                  	mov rax, qword [rax]
 19253 0000DC5E 803804                  	cmp byte [rax], T_closure
 19254 0000DC61 0F85A67D0000            	jne L_error_non_closure
 19255 0000DC67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19256 0000DC6A FF7508                  	push qword [rbp + 8 * 1]
 19257                                   ; old ret addr
 19258 0000DC6D FF7500                  	push qword [rbp]
 19259                                   ; restore the old rbp
 19260 0000DC70 BB05000000              	mov rbx, 5
 19261 0000DC75 4883C303                	add rbx, 3
 19262 0000DC79 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19263 0000DC7D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19264 0000DC82 4C8D4DF8                	lea r9, [rbp - 8]
 19265 0000DC86 B909000000              	mov rcx, 9
 19266                                  .L_tc_recycle_frame_loop_00a8:
 19267 0000DC8B 4883F900                	cmp rcx, 0
 19268 0000DC8F 7413                    	je .L_tc_recycle_frame_done_00a8
 19269 0000DC91 4D8B11                  	mov r10, qword [r9]
 19270 0000DC94 4D8910                  	mov qword [r8], r10
 19271 0000DC97 4983E808                	sub r8, 8
 19272 0000DC9B 4983E908                	sub r9, 8
 19273 0000DC9F 48FFC9                  	dec rcx
 19274 0000DCA2 EBE7                    	jmp .L_tc_recycle_frame_loop_00a8
 19275                                  .L_tc_recycle_frame_done_00a8:
 19276 0000DCA4 498D6008                	lea rsp, [r8 + 8]
 19277 0000DCA8 5D                      	pop rbp ; restore the old rbp
 19278 0000DCA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19279 0000DCAC E98A000000              	jmp .L_if_end_005a
 19280                                  .L_if_else_005a:
 19281                                  	; preparing a tail-call
 19282 0000DCB1 488B4520                	mov rax, PARAM(0)	; param len1
 19283 0000DCB5 50                      	push rax
 19284 0000DCB6 488B4510                	mov rax, ENV
 19285 0000DCBA 488B00                  	mov rax, qword [rax + 8 * 0]
 19286 0000DCBD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19287 0000DCC0 50                      	push rax
 19288 0000DCC1 488B4528                	mov rax, PARAM(1)	; param len2
 19289 0000DCC5 50                      	push rax
 19290 0000DCC6 488B4510                	mov rax, ENV
 19291 0000DCCA 488B00                  	mov rax, qword [rax + 8 * 0]
 19292 0000DCCD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19293 0000DCD1 50                      	push rax
 19294 0000DCD2 48B8-                   	mov rax, L_constants + 2135
 19294 0000DCD4 [5708000000000000] 
 19295 0000DCDC 50                      	push rax
 19296 0000DCDD 6A05                    	push 5	; arg count
 19297 0000DCDF 488B4510                	mov rax, ENV
 19298 0000DCE3 488B4008                	mov rax, qword [rax + 8 * 1]
 19299 0000DCE7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19300 0000DCEA 488B00                  	mov rax, qword [rax]
 19301 0000DCED 803804                  	cmp byte [rax], T_closure
 19302 0000DCF0 0F85177D0000            	jne L_error_non_closure
 19303 0000DCF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19304 0000DCF9 FF7508                  	push qword [rbp + 8 * 1]
 19305                                   ; old ret addr
 19306 0000DCFC FF7500                  	push qword [rbp]
 19307                                   ; restore the old rbp
 19308 0000DCFF BB05000000              	mov rbx, 5
 19309 0000DD04 4883C303                	add rbx, 3
 19310 0000DD08 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19311 0000DD0C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19312 0000DD11 4C8D4DF8                	lea r9, [rbp - 8]
 19313 0000DD15 B909000000              	mov rcx, 9
 19314                                  .L_tc_recycle_frame_loop_00a9:
 19315 0000DD1A 4883F900                	cmp rcx, 0
 19316 0000DD1E 7413                    	je .L_tc_recycle_frame_done_00a9
 19317 0000DD20 4D8B11                  	mov r10, qword [r9]
 19318 0000DD23 4D8910                  	mov qword [r8], r10
 19319 0000DD26 4983E808                	sub r8, 8
 19320 0000DD2A 4983E908                	sub r9, 8
 19321 0000DD2E 48FFC9                  	dec rcx
 19322 0000DD31 EBE7                    	jmp .L_tc_recycle_frame_loop_00a9
 19323                                  .L_tc_recycle_frame_done_00a9:
 19324 0000DD33 498D6008                	lea rsp, [r8 + 8]
 19325 0000DD37 5D                      	pop rbp ; restore the old rbp
 19326 0000DD38 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19327                                  .L_if_end_005a:
 19328 0000DD3B C9                      	leave
 19329 0000DD3C C22000                  	ret AND_KILL_FRAME(2)
 19330                                  .L_lambda_simple_end_0070:	; new closure is in rax
 19331 0000DD3F 803804                  	cmp byte [rax], T_closure
 19332 0000DD42 0F85C57C0000            	jne L_error_non_closure
 19333 0000DD48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19334 0000DD4B FF7508                  	push qword [rbp + 8 * 1]
 19335                                   ; old ret addr
 19336 0000DD4E FF7500                  	push qword [rbp]
 19337                                   ; restore the old rbp
 19338 0000DD51 BB02000000              	mov rbx, 2
 19339 0000DD56 4883C303                	add rbx, 3
 19340 0000DD5A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19341 0000DD5E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19342 0000DD63 4C8D4DF8                	lea r9, [rbp - 8]
 19343 0000DD67 B906000000              	mov rcx, 6
 19344                                  .L_tc_recycle_frame_loop_00a7:
 19345 0000DD6C 4883F900                	cmp rcx, 0
 19346 0000DD70 7413                    	je .L_tc_recycle_frame_done_00a7
 19347 0000DD72 4D8B11                  	mov r10, qword [r9]
 19348 0000DD75 4D8910                  	mov qword [r8], r10
 19349 0000DD78 4983E808                	sub r8, 8
 19350 0000DD7C 4983E908                	sub r9, 8
 19351 0000DD80 48FFC9                  	dec rcx
 19352 0000DD83 EBE7                    	jmp .L_tc_recycle_frame_loop_00a7
 19353                                  .L_tc_recycle_frame_done_00a7:
 19354 0000DD85 498D6008                	lea rsp, [r8 + 8]
 19355 0000DD89 5D                      	pop rbp ; restore the old rbp
 19356 0000DD8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19357 0000DD8D C9                      	leave
 19358 0000DD8E C22000                  	ret AND_KILL_FRAME(2)
 19359                                  .L_lambda_simple_end_006f:	; new closure is in rax
 19360 0000DD91 50                      	push rax
 19361 0000DD92 6A01                    	push 1	; arg count
 19362 0000DD94 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19363 0000DD99 E8187D0000              	call malloc
 19364 0000DD9E 50                      	push rax
 19365 0000DD9F BF08000000              	mov rdi, 8 * 1	; new rib
 19366 0000DDA4 E80D7D0000              	call malloc
 19367 0000DDA9 50                      	push rax
 19368 0000DDAA BF18000000              	mov rdi, 8 * 3	; extended env
 19369 0000DDAF E8027D0000              	call malloc
 19370 0000DDB4 488B7D10                	mov rdi, ENV
 19371 0000DDB8 BE00000000              	mov rsi, 0
 19372 0000DDBD BA01000000              	mov rdx, 1
 19373                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 19374 0000DDC2 4883FE02                	cmp rsi, 2
 19375 0000DDC6 7410                    	je .L_lambda_simple_env_end_0071
 19376 0000DDC8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19377 0000DDCC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19378 0000DDD0 48FFC6                  	inc rsi
 19379 0000DDD3 48FFC2                  	inc rdx
 19380 0000DDD6 EBEA                    	jmp .L_lambda_simple_env_loop_0071
 19381                                  .L_lambda_simple_env_end_0071:
 19382 0000DDD8 5B                      	pop rbx
 19383 0000DDD9 BE00000000              	mov rsi, 0
 19384                                  .L_lambda_simple_params_loop_0071:	; copy params
 19385 0000DDDE 4883FE01                	cmp rsi, 1
 19386 0000DDE2 740E                    	je .L_lambda_simple_params_end_0071
 19387 0000DDE4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19388 0000DDE9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19389 0000DDED 48FFC6                  	inc rsi
 19390 0000DDF0 EBEC                    	jmp .L_lambda_simple_params_loop_0071
 19391                                  .L_lambda_simple_params_end_0071:
 19392 0000DDF2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19393 0000DDF5 4889C3                  	mov rbx, rax
 19394 0000DDF8 58                      	pop rax
 19395 0000DDF9 C60004                  	mov byte [rax], T_closure
 19396 0000DDFC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19397 0000DE00 48C74009[0DDE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 19398 0000DE08 E9E2040000              	jmp .L_lambda_simple_end_0071
 19399                                  .L_lambda_simple_code_0071:	; lambda-simple body
 19400 0000DE0D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19401 0000DE13 740B                    	je .L_lambda_simple_arity_check_ok_0071
 19402 0000DE15 FF742410                	push qword [rsp + 8 * 2]
 19403 0000DE19 6A01                    	push 1
 19404 0000DE1B E94F7C0000              	jmp L_error_incorrect_arity_simple
 19405                                  .L_lambda_simple_arity_check_ok_0071:
 19406 0000DE20 C8000000                	enter 0, 0
 19407                                  	; preparing a tail-call
 19408 0000DE24 48B8-                   	mov rax, L_constants + 1993
 19408 0000DE26 [C907000000000000] 
 19409 0000DE2E 50                      	push rax
 19410 0000DE2F 6A01                    	push 1	; arg count
 19411 0000DE31 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19412 0000DE36 E87B7C0000              	call malloc
 19413 0000DE3B 50                      	push rax
 19414 0000DE3C BF08000000              	mov rdi, 8 * 1	; new rib
 19415 0000DE41 E8707C0000              	call malloc
 19416 0000DE46 50                      	push rax
 19417 0000DE47 BF20000000              	mov rdi, 8 * 4	; extended env
 19418 0000DE4C E8657C0000              	call malloc
 19419 0000DE51 488B7D10                	mov rdi, ENV
 19420 0000DE55 BE00000000              	mov rsi, 0
 19421 0000DE5A BA01000000              	mov rdx, 1
 19422                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 19423 0000DE5F 4883FE03                	cmp rsi, 3
 19424 0000DE63 7410                    	je .L_lambda_simple_env_end_0072
 19425 0000DE65 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19426 0000DE69 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19427 0000DE6D 48FFC6                  	inc rsi
 19428 0000DE70 48FFC2                  	inc rdx
 19429 0000DE73 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 19430                                  .L_lambda_simple_env_end_0072:
 19431 0000DE75 5B                      	pop rbx
 19432 0000DE76 BE00000000              	mov rsi, 0
 19433                                  .L_lambda_simple_params_loop_0072:	; copy params
 19434 0000DE7B 4883FE01                	cmp rsi, 1
 19435 0000DE7F 740E                    	je .L_lambda_simple_params_end_0072
 19436 0000DE81 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19437 0000DE86 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19438 0000DE8A 48FFC6                  	inc rsi
 19439 0000DE8D EBEC                    	jmp .L_lambda_simple_params_loop_0072
 19440                                  .L_lambda_simple_params_end_0072:
 19441 0000DE8F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19442 0000DE92 4889C3                  	mov rbx, rax
 19443 0000DE95 58                      	pop rax
 19444 0000DE96 C60004                  	mov byte [rax], T_closure
 19445 0000DE99 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19446 0000DE9D 48C74009[AADE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 19447 0000DEA5 E9F3030000              	jmp .L_lambda_simple_end_0072
 19448                                  .L_lambda_simple_code_0072:	; lambda-simple body
 19449 0000DEAA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19450 0000DEB0 740B                    	je .L_lambda_simple_arity_check_ok_0072
 19451 0000DEB2 FF742410                	push qword [rsp + 8 * 2]
 19452 0000DEB6 6A01                    	push 1
 19453 0000DEB8 E9B27B0000              	jmp L_error_incorrect_arity_simple
 19454                                  .L_lambda_simple_arity_check_ok_0072:
 19455 0000DEBD C8000000                	enter 0, 0
 19456 0000DEC1 BF08000000              	mov rdi, 8*1
 19457 0000DEC6 E8EB7B0000              	call malloc
 19458 0000DECB 488B5D20                	mov rbx, PARAM(0)
 19459 0000DECF 488918                  	mov qword [rax], rbx
 19460 0000DED2 48894520                	mov PARAM(0), rax
 19461 0000DED6 48B8-                   	mov rax, sob_void
 19461 0000DED8 [0000000000000000] 
 19462                                  
 19463 0000DEE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19464 0000DEE5 E8CC7B0000              	call malloc
 19465 0000DEEA 50                      	push rax
 19466 0000DEEB BF08000000              	mov rdi, 8 * 1	; new rib
 19467 0000DEF0 E8C17B0000              	call malloc
 19468 0000DEF5 50                      	push rax
 19469 0000DEF6 BF28000000              	mov rdi, 8 * 5	; extended env
 19470 0000DEFB E8B67B0000              	call malloc
 19471 0000DF00 488B7D10                	mov rdi, ENV
 19472 0000DF04 BE00000000              	mov rsi, 0
 19473 0000DF09 BA01000000              	mov rdx, 1
 19474                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 19475 0000DF0E 4883FE04                	cmp rsi, 4
 19476 0000DF12 7410                    	je .L_lambda_simple_env_end_0073
 19477 0000DF14 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19478 0000DF18 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19479 0000DF1C 48FFC6                  	inc rsi
 19480 0000DF1F 48FFC2                  	inc rdx
 19481 0000DF22 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 19482                                  .L_lambda_simple_env_end_0073:
 19483 0000DF24 5B                      	pop rbx
 19484 0000DF25 BE00000000              	mov rsi, 0
 19485                                  .L_lambda_simple_params_loop_0073:	; copy params
 19486 0000DF2A 4883FE01                	cmp rsi, 1
 19487 0000DF2E 740E                    	je .L_lambda_simple_params_end_0073
 19488 0000DF30 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19489 0000DF35 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19490 0000DF39 48FFC6                  	inc rsi
 19491 0000DF3C EBEC                    	jmp .L_lambda_simple_params_loop_0073
 19492                                  .L_lambda_simple_params_end_0073:
 19493 0000DF3E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19494 0000DF41 4889C3                  	mov rbx, rax
 19495 0000DF44 58                      	pop rax
 19496 0000DF45 C60004                  	mov byte [rax], T_closure
 19497 0000DF48 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19498 0000DF4C 48C74009[59DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 19499 0000DF54 E95C010000              	jmp .L_lambda_simple_end_0073
 19500                                  .L_lambda_simple_code_0073:	; lambda-simple body
 19501 0000DF59 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19502 0000DF5F 740B                    	je .L_lambda_simple_arity_check_ok_0073
 19503 0000DF61 FF742410                	push qword [rsp + 8 * 2]
 19504 0000DF65 6A02                    	push 2
 19505 0000DF67 E9037B0000              	jmp L_error_incorrect_arity_simple
 19506                                  .L_lambda_simple_arity_check_ok_0073:
 19507 0000DF6C C8000000                	enter 0, 0
 19508                                  	; preparing a non-tail-call
 19509 0000DF70 488B4528                	mov rax, PARAM(1)	; param strs
 19510 0000DF74 50                      	push rax
 19511 0000DF75 6A01                    	push 1	; arg count
 19512 0000DF77 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 19513 0000DF7F 803805                  	cmp byte [rax], T_undefined
 19514 0000DF82 0F84017A0000            	je L_error_fvar_undefined
 19515 0000DF88 803804                  	cmp byte [rax], T_closure
 19516 0000DF8B 0F857C7A0000            	jne L_error_non_closure
 19517 0000DF91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19518 0000DF94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19519 0000DF97 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 19520 0000DF9D 0F850E010000            	jne .L_or_end_000b; if its not false (true) then we need to return it and not the last element
 19521                                  	; preparing a non-tail-call
 19522                                  	; preparing a non-tail-call
 19523 0000DFA3 488B4528                	mov rax, PARAM(1)	; param strs
 19524 0000DFA7 50                      	push rax
 19525 0000DFA8 6A01                    	push 1	; arg count
 19526 0000DFAA 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 19527 0000DFB2 803805                  	cmp byte [rax], T_undefined
 19528 0000DFB5 0F84CE790000            	je L_error_fvar_undefined
 19529 0000DFBB 803804                  	cmp byte [rax], T_closure
 19530 0000DFBE 0F85497A0000            	jne L_error_non_closure
 19531 0000DFC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19532 0000DFC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19533 0000DFCA 50                      	push rax
 19534 0000DFCB 488B4520                	mov rax, PARAM(0)	; param str
 19535 0000DFCF 50                      	push rax
 19536 0000DFD0 6A02                    	push 2	; arg count
 19537 0000DFD2 488B4510                	mov rax, ENV
 19538 0000DFD6 488B4008                	mov rax, qword [rax + 8 * 1]
 19539 0000DFDA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 19540 0000DFDD 803804                  	cmp byte [rax], T_closure
 19541 0000DFE0 0F85277A0000            	jne L_error_non_closure
 19542 0000DFE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19543 0000DFE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19544 0000DFEC 483D[02000000]          	cmp rax, sob_boolean_false
 19545 0000DFF2 0F84AF000000            	je .L_if_else_005b
 19546                                  	; preparing a tail-call
 19547                                  	; preparing a non-tail-call
 19548 0000DFF8 488B4528                	mov rax, PARAM(1)	; param strs
 19549 0000DFFC 50                      	push rax
 19550 0000DFFD 6A01                    	push 1	; arg count
 19551 0000DFFF 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 19552 0000E007 803805                  	cmp byte [rax], T_undefined
 19553 0000E00A 0F8479790000            	je L_error_fvar_undefined
 19554 0000E010 803804                  	cmp byte [rax], T_closure
 19555 0000E013 0F85F4790000            	jne L_error_non_closure
 19556 0000E019 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19557 0000E01C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19558 0000E01F 50                      	push rax
 19559                                  	; preparing a non-tail-call
 19560 0000E020 488B4528                	mov rax, PARAM(1)	; param strs
 19561 0000E024 50                      	push rax
 19562 0000E025 6A01                    	push 1	; arg count
 19563 0000E027 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 19564 0000E02F 803805                  	cmp byte [rax], T_undefined
 19565 0000E032 0F8451790000            	je L_error_fvar_undefined
 19566 0000E038 803804                  	cmp byte [rax], T_closure
 19567 0000E03B 0F85CC790000            	jne L_error_non_closure
 19568 0000E041 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19569 0000E044 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19570 0000E047 50                      	push rax
 19571 0000E048 6A02                    	push 2	; arg count
 19572 0000E04A 488B4510                	mov rax, ENV
 19573 0000E04E 488B00                  	mov rax, qword [rax + 8 * 0]
 19574 0000E051 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19575 0000E054 488B00                  	mov rax, qword [rax]
 19576 0000E057 803804                  	cmp byte [rax], T_closure
 19577 0000E05A 0F85AD790000            	jne L_error_non_closure
 19578 0000E060 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19579 0000E063 FF7508                  	push qword [rbp + 8 * 1]
 19580                                   ; old ret addr
 19581 0000E066 FF7500                  	push qword [rbp]
 19582                                   ; restore the old rbp
 19583 0000E069 BB02000000              	mov rbx, 2
 19584 0000E06E 4883C303                	add rbx, 3
 19585 0000E072 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19586 0000E076 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19587 0000E07B 4C8D4DF8                	lea r9, [rbp - 8]
 19588 0000E07F B906000000              	mov rcx, 6
 19589                                  .L_tc_recycle_frame_loop_00ab:
 19590 0000E084 4883F900                	cmp rcx, 0
 19591 0000E088 7413                    	je .L_tc_recycle_frame_done_00ab
 19592 0000E08A 4D8B11                  	mov r10, qword [r9]
 19593 0000E08D 4D8910                  	mov qword [r8], r10
 19594 0000E090 4983E808                	sub r8, 8
 19595 0000E094 4983E908                	sub r9, 8
 19596 0000E098 48FFC9                  	dec rcx
 19597 0000E09B EBE7                    	jmp .L_tc_recycle_frame_loop_00ab
 19598                                  .L_tc_recycle_frame_done_00ab:
 19599 0000E09D 498D6008                	lea rsp, [r8 + 8]
 19600 0000E0A1 5D                      	pop rbp ; restore the old rbp
 19601 0000E0A2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19602 0000E0A5 EB0A                    	jmp .L_if_end_005b
 19603                                  .L_if_else_005b:
 19604 0000E0A7 48B8-                   	mov rax, L_constants + 2
 19604 0000E0A9 [0200000000000000] 
 19605                                  .L_if_end_005b:
 19606                                  .L_or_end_000b:
 19607 0000E0B1 C9                      	leave
 19608 0000E0B2 C22000                  	ret AND_KILL_FRAME(2)
 19609                                  .L_lambda_simple_end_0073:	; new closure is in rax
 19610 0000E0B5 50                      	push rax
 19611 0000E0B6 488B4520                	mov rax, PARAM(0)	; param run
 19612 0000E0BA 8F00                    	pop qword [rax]
 19613 0000E0BC 48B8-                   	mov rax, sob_void
 19613 0000E0BE [0000000000000000] 
 19614                                  
 19615 0000E0C6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19616 0000E0CB E8E6790000              	call malloc
 19617 0000E0D0 50                      	push rax
 19618 0000E0D1 BF08000000              	mov rdi, 8 * 1	; new rib
 19619 0000E0D6 E8DB790000              	call malloc
 19620 0000E0DB 50                      	push rax
 19621 0000E0DC BF28000000              	mov rdi, 8 * 5	; extended env
 19622 0000E0E1 E8D0790000              	call malloc
 19623 0000E0E6 488B7D10                	mov rdi, ENV
 19624 0000E0EA 4831F6                  	 xor rsi, rsi
 19625 0000E0ED 4831D2                  	 xor rdx, rdx
 19626 0000E0F0 48FFC2                  	inc rdx
 19627                                  .L_lambda_opt_env_loop_0012:	; ext_env[i + 1] <-- env[i]
 19628 0000E0F3 4883FE04                	cmp rsi, 4
 19629 0000E0F7 7410                    	je .L_lambda_opt_env_end_0012
 19630 0000E0F9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19631 0000E0FD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19632 0000E101 48FFC6                  	inc rsi
 19633 0000E104 48FFC2                  	inc rdx
 19634 0000E107 EBEA                    	jmp .L_lambda_opt_env_loop_0012
 19635                                  .L_lambda_opt_env_end_0012:
 19636 0000E109 5B                      	pop rbx
 19637 0000E10A 4831F6                  	xor rsi, rsi
 19638                                  .L_lambda_opt_params_loop_0012:	; copy params
 19639 0000E10D 4883FE01                	cmp rsi, 1
 19640 0000E111 740E                    	je .L_lambda_opt_params_end_0012
 19641 0000E113 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19642 0000E118 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19643 0000E11C 48FFC6                  	inc rsi
 19644 0000E11F EBEC                    	jmp .L_lambda_opt_params_loop_0012
 19645                                  .L_lambda_opt_params_end_0012:
 19646 0000E121 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19647 0000E124 4889C3                  	mov rbx, rax
 19648 0000E127 58                      	pop rax
 19649 0000E128 C60004                  	mov byte [rax], T_closure
 19650 0000E12B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19651 0000E12F 48C74009[3CE10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 19652 0000E137 E95D010000              	jmp .L_lambda_opt_end_0012
 19653                                  .L_lambda_opt_code_0012:; lambda opt body
 19654 0000E13C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19655 0000E142 7409                    	je .L_lambda_opt_arity_check_exact_0012
 19656 0000E144 7F57                    	jg .L_lambda_opt_arity_check_more_0012
 19657 0000E146 6A01                    	push 1
 19658 0000E148 E936790000              	jmp L_error_incorrect_arity_opt
 19659                                  .L_lambda_opt_arity_check_exact_0012:
 19660 0000E14D 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 19661 0000E151 4C894C24F8              	mov qword [rsp -8], r9
 19662 0000E156 4C8B4C2408              	mov r9, qword [rsp +8]
 19663 0000E15B 4C890C24                	mov qword [rsp +8 * 0], r9
 19664 0000E15F 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 19665 0000E164 4C89C9                  	mov rcx, r9
 19666 0000E167 49FFC1                  	inc r9
 19667 0000E16A 4C894C2408              	mov qword [rsp +8], r9
 19668 0000E16F 4889E2                  	mov rdx, rsp
 19669 0000E172 4883C218                	add rdx, 24
 19670                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0012:
 19671 0000E176 4883F900                	cmp rcx, 0
 19672 0000E17A 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0012
 19673 0000E17C 4C8B02                  	mov r8, qword [rdx]
 19674 0000E17F 4C8942F8                	mov qword [rdx - 8], r8
 19675 0000E183 4883C208                	add rdx, 8
 19676 0000E187 48FFC9                  	dec rcx
 19677 0000E18A EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0012
 19678                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0012:
 19679 0000E18C 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 19680 0000E194 4883EC08                	sub rsp, 8
 19681 0000E198 E984000000              	jmp .L_lambda_opt_stack_adjusted_0012
 19682                                  .L_lambda_opt_arity_check_more_0012:
 19683 0000E19D 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 19684 0000E1A2 4D89C4                  	mov r12, r8
 19685 0000E1A5 4C89C1                  	mov rcx, r8
 19686 0000E1A8 4D8D5002                	lea r10, [r8 + 2] 
 19687 0000E1AC 4883E901                	sub rcx, 1
 19688 0000E1B0 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 19689 0000E1B5 49B9-                   	mov r9, sob_nil
 19689 0000E1B7 [0100000000000000] 
 19690                                  .L_lambda_opt_create_list_of_opt_params_0012:
 19691 0000E1BF 4883F900                	cmp rcx, 0
 19692 0000E1C3 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0012
 19693 0000E1C5 BF11000000              	mov rdi, 17
 19694 0000E1CA E8E7780000              	call malloc
 19695 0000E1CF C60021                  	mov byte [rax], T_pair
 19696 0000E1D2 498B1B                  	mov rbx, qword [r11]
 19697 0000E1D5 48895801                	mov qword [rax +1], rbx
 19698 0000E1D9 4C894809                	mov qword [rax + 1 + 8], r9
 19699 0000E1DD 4989C1                  	mov r9, rax
 19700 0000E1E0 48FFC9                  	dec rcx
 19701 0000E1E3 4983EB08                	sub r11, 8
 19702 0000E1E7 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0012
 19703                                  .L_lambda_opt_create_list_of_opt_params_end_0012:
 19704 0000E1E9 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 19705 0000E1EE 4D8908                  	mov qword [r8], r9
 19706 0000E1F1 4E8D14D500000000        	lea r10, [8 * r10]
 19707 0000E1F9 4901E2                  	add r10, rsp
 19708 0000E1FC B905000000              	mov rcx, 4 + 1
 19709                                  .L_lambda_opt_stack_shrink_loop_0012:
 19710 0000E201 4883F900                	cmp rcx, 0
 19711 0000E205 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0012
 19712 0000E207 4D8B18                  	mov r11, qword [r8]
 19713 0000E20A 4D891A                  	mov qword [r10], r11
 19714 0000E20D 4983E808                	sub r8, 8
 19715 0000E211 4983EA08                	sub r10, 8
 19716 0000E215 48FFC9                  	dec rcx
 19717 0000E218 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19718                                  .L_lambda_opt_stack_shrink_loop_exit_0012:
 19719 0000E21A 4983C208                	add r10, 8
 19720 0000E21E 4C89D4                  	mov rsp, r10
 19721                                  .L_lambda_opt_stack_adjusted_0012:;continue with the code, the stack is ok
 19722 0000E221 48C744241002000000      	mov qword [rsp + 8*2], 2
 19723 0000E22A C8000000                	enter 0, 0
 19724                                  	; preparing a tail-call
 19725 0000E22E 488B4528                	mov rax, PARAM(1)	; param strs
 19726 0000E232 50                      	push rax
 19727 0000E233 488B4520                	mov rax, PARAM(0)	; param str
 19728 0000E237 50                      	push rax
 19729 0000E238 6A02                    	push 2	; arg count
 19730 0000E23A 488B4510                	mov rax, ENV
 19731 0000E23E 488B00                  	mov rax, qword [rax + 8 * 0]
 19732 0000E241 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19733 0000E244 488B00                  	mov rax, qword [rax]
 19734 0000E247 803804                  	cmp byte [rax], T_closure
 19735 0000E24A 0F85BD770000            	jne L_error_non_closure
 19736 0000E250 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19737 0000E253 FF7508                  	push qword [rbp + 8 * 1]
 19738                                   ; old ret addr
 19739 0000E256 FF7500                  	push qword [rbp]
 19740                                   ; restore the old rbp
 19741 0000E259 BB02000000              	mov rbx, 2
 19742 0000E25E 4883C303                	add rbx, 3
 19743 0000E262 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19744 0000E266 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19745 0000E26B 4C8D4DF8                	lea r9, [rbp - 8]
 19746 0000E26F B906000000              	mov rcx, 6
 19747                                  .L_tc_recycle_frame_loop_00ac:
 19748 0000E274 4883F900                	cmp rcx, 0
 19749 0000E278 7413                    	je .L_tc_recycle_frame_done_00ac
 19750 0000E27A 4D8B11                  	mov r10, qword [r9]
 19751 0000E27D 4D8910                  	mov qword [r8], r10
 19752 0000E280 4983E808                	sub r8, 8
 19753 0000E284 4983E908                	sub r9, 8
 19754 0000E288 48FFC9                  	dec rcx
 19755 0000E28B EBE7                    	jmp .L_tc_recycle_frame_loop_00ac
 19756                                  .L_tc_recycle_frame_done_00ac:
 19757 0000E28D 498D6008                	lea rsp, [r8 + 8]
 19758 0000E291 5D                      	pop rbp ; restore the old rbp
 19759 0000E292 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19760 0000E295 C9                      	leave
 19761 0000E296 C22000                  	ret 8 * (2 + 2)
 19762                                  .L_lambda_opt_end_0012:	; new closure is in rax
 19763 0000E299 C9                      	leave
 19764 0000E29A C21800                  	ret AND_KILL_FRAME(1)
 19765                                  .L_lambda_simple_end_0072:	; new closure is in rax
 19766 0000E29D 803804                  	cmp byte [rax], T_closure
 19767 0000E2A0 0F8567770000            	jne L_error_non_closure
 19768 0000E2A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19769 0000E2A9 FF7508                  	push qword [rbp + 8 * 1]
 19770                                   ; old ret addr
 19771 0000E2AC FF7500                  	push qword [rbp]
 19772                                   ; restore the old rbp
 19773 0000E2AF BB01000000              	mov rbx, 1
 19774 0000E2B4 4883C303                	add rbx, 3
 19775 0000E2B8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19776 0000E2BC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19777 0000E2C1 4C8D4DF8                	lea r9, [rbp - 8]
 19778 0000E2C5 B905000000              	mov rcx, 5
 19779                                  .L_tc_recycle_frame_loop_00aa:
 19780 0000E2CA 4883F900                	cmp rcx, 0
 19781 0000E2CE 7413                    	je .L_tc_recycle_frame_done_00aa
 19782 0000E2D0 4D8B11                  	mov r10, qword [r9]
 19783 0000E2D3 4D8910                  	mov qword [r8], r10
 19784 0000E2D6 4983E808                	sub r8, 8
 19785 0000E2DA 4983E908                	sub r9, 8
 19786 0000E2DE 48FFC9                  	dec rcx
 19787 0000E2E1 EBE7                    	jmp .L_tc_recycle_frame_loop_00aa
 19788                                  .L_tc_recycle_frame_done_00aa:
 19789 0000E2E3 498D6008                	lea rsp, [r8 + 8]
 19790 0000E2E7 5D                      	pop rbp ; restore the old rbp
 19791 0000E2E8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19792 0000E2EB C9                      	leave
 19793 0000E2EC C21800                  	ret AND_KILL_FRAME(1)
 19794                                  .L_lambda_simple_end_0071:	; new closure is in rax
 19795 0000E2EF 803804                  	cmp byte [rax], T_closure
 19796 0000E2F2 0F8515770000            	jne L_error_non_closure
 19797 0000E2F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19798 0000E2FB FF7508                  	push qword [rbp + 8 * 1]
 19799                                   ; old ret addr
 19800 0000E2FE FF7500                  	push qword [rbp]
 19801                                   ; restore the old rbp
 19802 0000E301 BB01000000              	mov rbx, 1
 19803 0000E306 4883C303                	add rbx, 3
 19804 0000E30A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19805 0000E30E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19806 0000E313 4C8D4DF8                	lea r9, [rbp - 8]
 19807 0000E317 B905000000              	mov rcx, 5
 19808                                  .L_tc_recycle_frame_loop_00a6:
 19809 0000E31C 4883F900                	cmp rcx, 0
 19810 0000E320 7413                    	je .L_tc_recycle_frame_done_00a6
 19811 0000E322 4D8B11                  	mov r10, qword [r9]
 19812 0000E325 4D8910                  	mov qword [r8], r10
 19813 0000E328 4983E808                	sub r8, 8
 19814 0000E32C 4983E908                	sub r9, 8
 19815 0000E330 48FFC9                  	dec rcx
 19816 0000E333 EBE7                    	jmp .L_tc_recycle_frame_loop_00a6
 19817                                  .L_tc_recycle_frame_done_00a6:
 19818 0000E335 498D6008                	lea rsp, [r8 + 8]
 19819 0000E339 5D                      	pop rbp ; restore the old rbp
 19820 0000E33A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19821 0000E33D C9                      	leave
 19822 0000E33E C21800                  	ret AND_KILL_FRAME(1)
 19823                                  .L_lambda_simple_end_006d:	; new closure is in rax
 19824 0000E341 803804                  	cmp byte [rax], T_closure
 19825 0000E344 0F85C3760000            	jne L_error_non_closure
 19826 0000E34A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19827 0000E34D FF7508                  	push qword [rbp + 8 * 1]
 19828                                   ; old ret addr
 19829 0000E350 FF7500                  	push qword [rbp]
 19830                                   ; restore the old rbp
 19831 0000E353 BB01000000              	mov rbx, 1
 19832 0000E358 4883C303                	add rbx, 3
 19833 0000E35C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 19834 0000E360 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 19835 0000E365 4C8D4DF8                	lea r9, [rbp - 8]
 19836 0000E369 B905000000              	mov rcx, 5
 19837                                  .L_tc_recycle_frame_loop_00a4:
 19838 0000E36E 4883F900                	cmp rcx, 0
 19839 0000E372 7413                    	je .L_tc_recycle_frame_done_00a4
 19840 0000E374 4D8B11                  	mov r10, qword [r9]
 19841 0000E377 4D8910                  	mov qword [r8], r10
 19842 0000E37A 4983E808                	sub r8, 8
 19843 0000E37E 4983E908                	sub r9, 8
 19844 0000E382 48FFC9                  	dec rcx
 19845 0000E385 EBE7                    	jmp .L_tc_recycle_frame_loop_00a4
 19846                                  .L_tc_recycle_frame_done_00a4:
 19847 0000E387 498D6008                	lea rsp, [r8 + 8]
 19848 0000E38B 5D                      	pop rbp ; restore the old rbp
 19849 0000E38C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19850 0000E38F C9                      	leave
 19851 0000E390 C22000                  	ret AND_KILL_FRAME(2)
 19852                                  .L_lambda_simple_end_006c:	; new closure is in rax
 19853 0000E393 50                      	push rax
 19854 0000E394 6A01                    	push 1	; arg count
 19855 0000E396 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19856 0000E39B E816770000              	call malloc
 19857 0000E3A0 50                      	push rax
 19858 0000E3A1 BF00000000              	mov rdi, 8 * 0	; new rib
 19859 0000E3A6 E80B770000              	call malloc
 19860 0000E3AB 50                      	push rax
 19861 0000E3AC BF08000000              	mov rdi, 8 * 1	; extended env
 19862 0000E3B1 E800770000              	call malloc
 19863 0000E3B6 488B7D10                	mov rdi, ENV
 19864 0000E3BA BE00000000              	mov rsi, 0
 19865 0000E3BF BA01000000              	mov rdx, 1
 19866                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 19867 0000E3C4 4883FE00                	cmp rsi, 0
 19868 0000E3C8 7410                    	je .L_lambda_simple_env_end_0074
 19869 0000E3CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19870 0000E3CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19871 0000E3D2 48FFC6                  	inc rsi
 19872 0000E3D5 48FFC2                  	inc rdx
 19873 0000E3D8 EBEA                    	jmp .L_lambda_simple_env_loop_0074
 19874                                  .L_lambda_simple_env_end_0074:
 19875 0000E3DA 5B                      	pop rbx
 19876 0000E3DB BE00000000              	mov rsi, 0
 19877                                  .L_lambda_simple_params_loop_0074:	; copy params
 19878 0000E3E0 4883FE00                	cmp rsi, 0
 19879 0000E3E4 740E                    	je .L_lambda_simple_params_end_0074
 19880 0000E3E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19881 0000E3EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19882 0000E3EF 48FFC6                  	inc rsi
 19883 0000E3F2 EBEC                    	jmp .L_lambda_simple_params_loop_0074
 19884                                  .L_lambda_simple_params_end_0074:
 19885 0000E3F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19886 0000E3F7 4889C3                  	mov rbx, rax
 19887 0000E3FA 58                      	pop rax
 19888 0000E3FB C60004                  	mov byte [rax], T_closure
 19889 0000E3FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19890 0000E402 48C74009[0FE40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 19891 0000E40A E947010000              	jmp .L_lambda_simple_end_0074
 19892                                  .L_lambda_simple_code_0074:	; lambda-simple body
 19893 0000E40F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19894 0000E415 740B                    	je .L_lambda_simple_arity_check_ok_0074
 19895 0000E417 FF742410                	push qword [rsp + 8 * 2]
 19896 0000E41B 6A01                    	push 1
 19897 0000E41D E94D760000              	jmp L_error_incorrect_arity_simple
 19898                                  .L_lambda_simple_arity_check_ok_0074:
 19899 0000E422 C8000000                	enter 0, 0
 19900                                  	; preparing a non-tail-call
 19901 0000E426 488B0425[C9120000]      	mov rax, qword [free_var_75]	; free var char=?
 19902 0000E42E 803805                  	cmp byte [rax], T_undefined
 19903 0000E431 0F8452750000            	je L_error_fvar_undefined
 19904 0000E437 50                      	push rax
 19905 0000E438 488B0425[B8120000]      	mov rax, qword [free_var_74]	; free var char<?
 19906 0000E440 803805                  	cmp byte [rax], T_undefined
 19907 0000E443 0F8440750000            	je L_error_fvar_undefined
 19908 0000E449 50                      	push rax
 19909 0000E44A 6A02                    	push 2	; arg count
 19910 0000E44C 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19911 0000E450 803804                  	cmp byte [rax], T_closure
 19912 0000E453 0F85B4750000            	jne L_error_non_closure
 19913 0000E459 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19914 0000E45C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19915 0000E45F 48890425[A3160000]      	mov qword [free_var_133], rax
 19916 0000E467 48B8-                   	mov rax, sob_void
 19916 0000E469 [0000000000000000] 
 19917                                  
 19918                                  	; preparing a non-tail-call
 19919 0000E471 488B0425[52120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19920 0000E479 803805                  	cmp byte [rax], T_undefined
 19921 0000E47C 0F8407750000            	je L_error_fvar_undefined
 19922 0000E482 50                      	push rax
 19923 0000E483 488B0425[41120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19924 0000E48B 803805                  	cmp byte [rax], T_undefined
 19925 0000E48E 0F84F5740000            	je L_error_fvar_undefined
 19926 0000E494 50                      	push rax
 19927 0000E495 6A02                    	push 2	; arg count
 19928 0000E497 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19929 0000E49B 803804                  	cmp byte [rax], T_closure
 19930 0000E49E 0F8569750000            	jne L_error_non_closure
 19931 0000E4A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19932 0000E4A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19933 0000E4AA 48890425[D7150000]      	mov qword [free_var_121], rax
 19934 0000E4B2 48B8-                   	mov rax, sob_void
 19934 0000E4B4 [0000000000000000] 
 19935                                  
 19936                                  	; preparing a non-tail-call
 19937 0000E4BC 488B0425[C9120000]      	mov rax, qword [free_var_75]	; free var char=?
 19938 0000E4C4 803805                  	cmp byte [rax], T_undefined
 19939 0000E4C7 0F84BC740000            	je L_error_fvar_undefined
 19940 0000E4CD 50                      	push rax
 19941 0000E4CE 488B0425[EB120000]      	mov rax, qword [free_var_77]	; free var char>?
 19942 0000E4D6 803805                  	cmp byte [rax], T_undefined
 19943 0000E4D9 0F84AA740000            	je L_error_fvar_undefined
 19944 0000E4DF 50                      	push rax
 19945 0000E4E0 6A02                    	push 2	; arg count
 19946 0000E4E2 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19947 0000E4E6 803804                  	cmp byte [rax], T_closure
 19948 0000E4E9 0F851E750000            	jne L_error_non_closure
 19949 0000E4EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19950 0000E4F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19951 0000E4F5 48890425[D6160000]      	mov qword [free_var_136], rax
 19952 0000E4FD 48B8-                   	mov rax, sob_void
 19952 0000E4FF [0000000000000000] 
 19953                                  
 19954                                  	; preparing a non-tail-call
 19955 0000E507 488B0425[52120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19956 0000E50F 803805                  	cmp byte [rax], T_undefined
 19957 0000E512 0F8471740000            	je L_error_fvar_undefined
 19958 0000E518 50                      	push rax
 19959 0000E519 488B0425[74120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19960 0000E521 803805                  	cmp byte [rax], T_undefined
 19961 0000E524 0F845F740000            	je L_error_fvar_undefined
 19962 0000E52A 50                      	push rax
 19963 0000E52B 6A02                    	push 2	; arg count
 19964 0000E52D 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19965 0000E531 803804                  	cmp byte [rax], T_closure
 19966 0000E534 0F85D3740000            	jne L_error_non_closure
 19967 0000E53A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19968 0000E53D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19969 0000E540 48890425[0A160000]      	mov qword [free_var_124], rax
 19970 0000E548 48B8-                   	mov rax, sob_void
 19970 0000E54A [0000000000000000] 
 19971 0000E552 C9                      	leave
 19972 0000E553 C21800                  	ret AND_KILL_FRAME(1)
 19973                                  .L_lambda_simple_end_0074:	; new closure is in rax
 19974 0000E556 803804                  	cmp byte [rax], T_closure
 19975 0000E559 0F85AE740000            	jne L_error_non_closure
 19976 0000E55F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19977 0000E562 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19978                                  
 19979 0000E565 4889C7                  	mov rdi, rax
 19980 0000E568 E89E770000              	call print_sexpr_if_not_void
 19981                                  	; preparing a non-tail-call
 19982 0000E56D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19983 0000E572 E83F750000              	call malloc
 19984 0000E577 50                      	push rax
 19985 0000E578 BF00000000              	mov rdi, 8 * 0	; new rib
 19986 0000E57D E834750000              	call malloc
 19987 0000E582 50                      	push rax
 19988 0000E583 BF08000000              	mov rdi, 8 * 1	; extended env
 19989 0000E588 E829750000              	call malloc
 19990 0000E58D 488B7D10                	mov rdi, ENV
 19991 0000E591 BE00000000              	mov rsi, 0
 19992 0000E596 BA01000000              	mov rdx, 1
 19993                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 19994 0000E59B 4883FE00                	cmp rsi, 0
 19995 0000E59F 7410                    	je .L_lambda_simple_env_end_0075
 19996 0000E5A1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19997 0000E5A5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19998 0000E5A9 48FFC6                  	inc rsi
 19999 0000E5AC 48FFC2                  	inc rdx
 20000 0000E5AF EBEA                    	jmp .L_lambda_simple_env_loop_0075
 20001                                  .L_lambda_simple_env_end_0075:
 20002 0000E5B1 5B                      	pop rbx
 20003 0000E5B2 BE00000000              	mov rsi, 0
 20004                                  .L_lambda_simple_params_loop_0075:	; copy params
 20005 0000E5B7 4883FE00                	cmp rsi, 0
 20006 0000E5BB 740E                    	je .L_lambda_simple_params_end_0075
 20007 0000E5BD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20008 0000E5C2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20009 0000E5C6 48FFC6                  	inc rsi
 20010 0000E5C9 EBEC                    	jmp .L_lambda_simple_params_loop_0075
 20011                                  .L_lambda_simple_params_end_0075:
 20012 0000E5CB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20013 0000E5CE 4889C3                  	mov rbx, rax
 20014 0000E5D1 58                      	pop rax
 20015 0000E5D2 C60004                  	mov byte [rax], T_closure
 20016 0000E5D5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20017 0000E5D9 48C74009[E6E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 20018 0000E5E1 E9B40B0000              	jmp .L_lambda_simple_end_0075
 20019                                  .L_lambda_simple_code_0075:	; lambda-simple body
 20020 0000E5E6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20021 0000E5EC 740B                    	je .L_lambda_simple_arity_check_ok_0075
 20022 0000E5EE FF742410                	push qword [rsp + 8 * 2]
 20023 0000E5F2 6A01                    	push 1
 20024 0000E5F4 E976740000              	jmp L_error_incorrect_arity_simple
 20025                                  .L_lambda_simple_arity_check_ok_0075:
 20026 0000E5F9 C8000000                	enter 0, 0
 20027                                  	; preparing a tail-call
 20028 0000E5FD 48B8-                   	mov rax, L_constants + 1993
 20028 0000E5FF [C907000000000000] 
 20029 0000E607 50                      	push rax
 20030 0000E608 6A01                    	push 1	; arg count
 20031 0000E60A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20032 0000E60F E8A2740000              	call malloc
 20033 0000E614 50                      	push rax
 20034 0000E615 BF08000000              	mov rdi, 8 * 1	; new rib
 20035 0000E61A E897740000              	call malloc
 20036 0000E61F 50                      	push rax
 20037 0000E620 BF10000000              	mov rdi, 8 * 2	; extended env
 20038 0000E625 E88C740000              	call malloc
 20039 0000E62A 488B7D10                	mov rdi, ENV
 20040 0000E62E BE00000000              	mov rsi, 0
 20041 0000E633 BA01000000              	mov rdx, 1
 20042                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 20043 0000E638 4883FE01                	cmp rsi, 1
 20044 0000E63C 7410                    	je .L_lambda_simple_env_end_0076
 20045 0000E63E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20046 0000E642 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20047 0000E646 48FFC6                  	inc rsi
 20048 0000E649 48FFC2                  	inc rdx
 20049 0000E64C EBEA                    	jmp .L_lambda_simple_env_loop_0076
 20050                                  .L_lambda_simple_env_end_0076:
 20051 0000E64E 5B                      	pop rbx
 20052 0000E64F BE00000000              	mov rsi, 0
 20053                                  .L_lambda_simple_params_loop_0076:	; copy params
 20054 0000E654 4883FE01                	cmp rsi, 1
 20055 0000E658 740E                    	je .L_lambda_simple_params_end_0076
 20056 0000E65A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20057 0000E65F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20058 0000E663 48FFC6                  	inc rsi
 20059 0000E666 EBEC                    	jmp .L_lambda_simple_params_loop_0076
 20060                                  .L_lambda_simple_params_end_0076:
 20061 0000E668 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20062 0000E66B 4889C3                  	mov rbx, rax
 20063 0000E66E 58                      	pop rax
 20064 0000E66F C60004                  	mov byte [rax], T_closure
 20065 0000E672 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20066 0000E676 48C74009[83E60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 20067 0000E67E E9C50A0000              	jmp .L_lambda_simple_end_0076
 20068                                  .L_lambda_simple_code_0076:	; lambda-simple body
 20069 0000E683 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20070 0000E689 740B                    	je .L_lambda_simple_arity_check_ok_0076
 20071 0000E68B FF742410                	push qword [rsp + 8 * 2]
 20072 0000E68F 6A01                    	push 1
 20073 0000E691 E9D9730000              	jmp L_error_incorrect_arity_simple
 20074                                  .L_lambda_simple_arity_check_ok_0076:
 20075 0000E696 C8000000                	enter 0, 0
 20076 0000E69A BF08000000              	mov rdi, 8*1
 20077 0000E69F E812740000              	call malloc
 20078 0000E6A4 488B5D20                	mov rbx, PARAM(0)
 20079 0000E6A8 488918                  	mov qword [rax], rbx
 20080 0000E6AB 48894520                	mov PARAM(0), rax
 20081 0000E6AF 48B8-                   	mov rax, sob_void
 20081 0000E6B1 [0000000000000000] 
 20082                                  
 20083 0000E6B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20084 0000E6BE E8F3730000              	call malloc
 20085 0000E6C3 50                      	push rax
 20086 0000E6C4 BF08000000              	mov rdi, 8 * 1	; new rib
 20087 0000E6C9 E8E8730000              	call malloc
 20088 0000E6CE 50                      	push rax
 20089 0000E6CF BF18000000              	mov rdi, 8 * 3	; extended env
 20090 0000E6D4 E8DD730000              	call malloc
 20091 0000E6D9 488B7D10                	mov rdi, ENV
 20092 0000E6DD BE00000000              	mov rsi, 0
 20093 0000E6E2 BA01000000              	mov rdx, 1
 20094                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 20095 0000E6E7 4883FE02                	cmp rsi, 2
 20096 0000E6EB 7410                    	je .L_lambda_simple_env_end_0077
 20097 0000E6ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20098 0000E6F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20099 0000E6F5 48FFC6                  	inc rsi
 20100 0000E6F8 48FFC2                  	inc rdx
 20101 0000E6FB EBEA                    	jmp .L_lambda_simple_env_loop_0077
 20102                                  .L_lambda_simple_env_end_0077:
 20103 0000E6FD 5B                      	pop rbx
 20104 0000E6FE BE00000000              	mov rsi, 0
 20105                                  .L_lambda_simple_params_loop_0077:	; copy params
 20106 0000E703 4883FE01                	cmp rsi, 1
 20107 0000E707 740E                    	je .L_lambda_simple_params_end_0077
 20108 0000E709 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20109 0000E70E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20110 0000E712 48FFC6                  	inc rsi
 20111 0000E715 EBEC                    	jmp .L_lambda_simple_params_loop_0077
 20112                                  .L_lambda_simple_params_end_0077:
 20113 0000E717 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20114 0000E71A 4889C3                  	mov rbx, rax
 20115 0000E71D 58                      	pop rax
 20116 0000E71E C60004                  	mov byte [rax], T_closure
 20117 0000E721 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20118 0000E725 48C74009[32E70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 20119 0000E72D E9C4010000              	jmp .L_lambda_simple_end_0077
 20120                                  .L_lambda_simple_code_0077:	; lambda-simple body
 20121 0000E732 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20122 0000E738 740B                    	je .L_lambda_simple_arity_check_ok_0077
 20123 0000E73A FF742410                	push qword [rsp + 8 * 2]
 20124 0000E73E 6A04                    	push 4
 20125 0000E740 E92A730000              	jmp L_error_incorrect_arity_simple
 20126                                  .L_lambda_simple_arity_check_ok_0077:
 20127 0000E745 C8000000                	enter 0, 0
 20128                                  	; preparing a non-tail-call
 20129 0000E749 488B4538                	mov rax, PARAM(3)	; param len
 20130 0000E74D 50                      	push rax
 20131 0000E74E 488B4520                	mov rax, PARAM(0)	; param i
 20132 0000E752 50                      	push rax
 20133 0000E753 6A02                    	push 2	; arg count
 20134 0000E755 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 20135 0000E75D 803805                  	cmp byte [rax], T_undefined
 20136 0000E760 0F8423720000            	je L_error_fvar_undefined
 20137 0000E766 803804                  	cmp byte [rax], T_closure
 20138 0000E769 0F859E720000            	jne L_error_non_closure
 20139 0000E76F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20140 0000E772 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20141 0000E775 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 20142 0000E77B 0F8571010000            	jne .L_or_end_000c; if its not false (true) then we need to return it and not the last element
 20143                                  	; preparing a non-tail-call
 20144 0000E781 488B4538                	mov rax, PARAM(3)	; param len
 20145 0000E785 50                      	push rax
 20146 0000E786 488B4520                	mov rax, PARAM(0)	; param i
 20147 0000E78A 50                      	push rax
 20148 0000E78B 6A02                    	push 2	; arg count
 20149 0000E78D 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 20150 0000E795 803805                  	cmp byte [rax], T_undefined
 20151 0000E798 0F84EB710000            	je L_error_fvar_undefined
 20152 0000E79E 803804                  	cmp byte [rax], T_closure
 20153 0000E7A1 0F8566720000            	jne L_error_non_closure
 20154 0000E7A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20155 0000E7AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20156 0000E7AD 483D[02000000]          	cmp rax, sob_boolean_false
 20157 0000E7B3 0F842F010000            	je .L_if_else_005d
 20158                                  	; preparing a non-tail-call
 20159                                  	; preparing a non-tail-call
 20160 0000E7B9 488B4520                	mov rax, PARAM(0)	; param i
 20161 0000E7BD 50                      	push rax
 20162 0000E7BE 488B4530                	mov rax, PARAM(2)	; param str2
 20163 0000E7C2 50                      	push rax
 20164 0000E7C3 6A02                    	push 2	; arg count
 20165 0000E7C5 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20166 0000E7CD 803805                  	cmp byte [rax], T_undefined
 20167 0000E7D0 0F84B3710000            	je L_error_fvar_undefined
 20168 0000E7D6 803804                  	cmp byte [rax], T_closure
 20169 0000E7D9 0F852E720000            	jne L_error_non_closure
 20170 0000E7DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20171 0000E7E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20172 0000E7E5 50                      	push rax
 20173                                  	; preparing a non-tail-call
 20174 0000E7E6 488B4520                	mov rax, PARAM(0)	; param i
 20175 0000E7EA 50                      	push rax
 20176 0000E7EB 488B4528                	mov rax, PARAM(1)	; param str1
 20177 0000E7EF 50                      	push rax
 20178 0000E7F0 6A02                    	push 2	; arg count
 20179 0000E7F2 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20180 0000E7FA 803805                  	cmp byte [rax], T_undefined
 20181 0000E7FD 0F8486710000            	je L_error_fvar_undefined
 20182 0000E803 803804                  	cmp byte [rax], T_closure
 20183 0000E806 0F8501720000            	jne L_error_non_closure
 20184 0000E80C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20185 0000E80F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20186 0000E812 50                      	push rax
 20187 0000E813 6A02                    	push 2	; arg count
 20188 0000E815 488B4510                	mov rax, ENV
 20189 0000E819 488B4008                	mov rax, qword [rax + 8 * 1]
 20190 0000E81D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20191 0000E820 803804                  	cmp byte [rax], T_closure
 20192 0000E823 0F85E4710000            	jne L_error_non_closure
 20193 0000E829 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20194 0000E82C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20195 0000E82F 483D[02000000]          	cmp rax, sob_boolean_false
 20196 0000E835 0F84A1000000            	je .L_if_else_005c
 20197                                  	; preparing a tail-call
 20198 0000E83B 488B4538                	mov rax, PARAM(3)	; param len
 20199 0000E83F 50                      	push rax
 20200 0000E840 488B4530                	mov rax, PARAM(2)	; param str2
 20201 0000E844 50                      	push rax
 20202 0000E845 488B4528                	mov rax, PARAM(1)	; param str1
 20203 0000E849 50                      	push rax
 20204                                  	; preparing a non-tail-call
 20205 0000E84A 48B8-                   	mov rax, L_constants + 2270
 20205 0000E84C [DE08000000000000] 
 20206 0000E854 50                      	push rax
 20207 0000E855 488B4520                	mov rax, PARAM(0)	; param i
 20208 0000E859 50                      	push rax
 20209 0000E85A 6A02                    	push 2	; arg count
 20210 0000E85C 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 20211 0000E864 803805                  	cmp byte [rax], T_undefined
 20212 0000E867 0F841C710000            	je L_error_fvar_undefined
 20213 0000E86D 803804                  	cmp byte [rax], T_closure
 20214 0000E870 0F8597710000            	jne L_error_non_closure
 20215 0000E876 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20216 0000E879 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20217 0000E87C 50                      	push rax
 20218 0000E87D 6A04                    	push 4	; arg count
 20219 0000E87F 488B4510                	mov rax, ENV
 20220 0000E883 488B00                  	mov rax, qword [rax + 8 * 0]
 20221 0000E886 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20222 0000E889 488B00                  	mov rax, qword [rax]
 20223 0000E88C 803804                  	cmp byte [rax], T_closure
 20224 0000E88F 0F8578710000            	jne L_error_non_closure
 20225 0000E895 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20226 0000E898 FF7508                  	push qword [rbp + 8 * 1]
 20227                                   ; old ret addr
 20228 0000E89B FF7500                  	push qword [rbp]
 20229                                   ; restore the old rbp
 20230 0000E89E BB04000000              	mov rbx, 4
 20231 0000E8A3 4883C303                	add rbx, 3
 20232 0000E8A7 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20233 0000E8AB 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20234 0000E8B0 4C8D4DF8                	lea r9, [rbp - 8]
 20235 0000E8B4 B908000000              	mov rcx, 8
 20236                                  .L_tc_recycle_frame_loop_00ae:
 20237 0000E8B9 4883F900                	cmp rcx, 0
 20238 0000E8BD 7413                    	je .L_tc_recycle_frame_done_00ae
 20239 0000E8BF 4D8B11                  	mov r10, qword [r9]
 20240 0000E8C2 4D8910                  	mov qword [r8], r10
 20241 0000E8C5 4983E808                	sub r8, 8
 20242 0000E8C9 4983E908                	sub r9, 8
 20243 0000E8CD 48FFC9                  	dec rcx
 20244 0000E8D0 EBE7                    	jmp .L_tc_recycle_frame_loop_00ae
 20245                                  .L_tc_recycle_frame_done_00ae:
 20246 0000E8D2 498D6008                	lea rsp, [r8 + 8]
 20247 0000E8D6 5D                      	pop rbp ; restore the old rbp
 20248 0000E8D7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20249 0000E8DA EB0A                    	jmp .L_if_end_005c
 20250                                  .L_if_else_005c:
 20251 0000E8DC 48B8-                   	mov rax, L_constants + 2
 20251 0000E8DE [0200000000000000] 
 20252                                  .L_if_end_005c:
 20253 0000E8E6 EB0A                    	jmp .L_if_end_005d
 20254                                  .L_if_else_005d:
 20255 0000E8E8 48B8-                   	mov rax, L_constants + 2
 20255 0000E8EA [0200000000000000] 
 20256                                  .L_if_end_005d:
 20257                                  .L_or_end_000c:
 20258 0000E8F2 C9                      	leave
 20259 0000E8F3 C23000                  	ret AND_KILL_FRAME(4)
 20260                                  .L_lambda_simple_end_0077:	; new closure is in rax
 20261 0000E8F6 50                      	push rax
 20262 0000E8F7 488B4520                	mov rax, PARAM(0)	; param run
 20263 0000E8FB 8F00                    	pop qword [rax]
 20264 0000E8FD 48B8-                   	mov rax, sob_void
 20264 0000E8FF [0000000000000000] 
 20265                                  
 20266                                  	; preparing a tail-call
 20267 0000E907 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20268 0000E90C E8A5710000              	call malloc
 20269 0000E911 50                      	push rax
 20270 0000E912 BF08000000              	mov rdi, 8 * 1	; new rib
 20271 0000E917 E89A710000              	call malloc
 20272 0000E91C 50                      	push rax
 20273 0000E91D BF18000000              	mov rdi, 8 * 3	; extended env
 20274 0000E922 E88F710000              	call malloc
 20275 0000E927 488B7D10                	mov rdi, ENV
 20276 0000E92B BE00000000              	mov rsi, 0
 20277 0000E930 BA01000000              	mov rdx, 1
 20278                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 20279 0000E935 4883FE02                	cmp rsi, 2
 20280 0000E939 7410                    	je .L_lambda_simple_env_end_0078
 20281 0000E93B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20282 0000E93F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20283 0000E943 48FFC6                  	inc rsi
 20284 0000E946 48FFC2                  	inc rdx
 20285 0000E949 EBEA                    	jmp .L_lambda_simple_env_loop_0078
 20286                                  .L_lambda_simple_env_end_0078:
 20287 0000E94B 5B                      	pop rbx
 20288 0000E94C BE00000000              	mov rsi, 0
 20289                                  .L_lambda_simple_params_loop_0078:	; copy params
 20290 0000E951 4883FE01                	cmp rsi, 1
 20291 0000E955 740E                    	je .L_lambda_simple_params_end_0078
 20292 0000E957 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20293 0000E95C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20294 0000E960 48FFC6                  	inc rsi
 20295 0000E963 EBEC                    	jmp .L_lambda_simple_params_loop_0078
 20296                                  .L_lambda_simple_params_end_0078:
 20297 0000E965 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20298 0000E968 4889C3                  	mov rbx, rax
 20299 0000E96B 58                      	pop rax
 20300 0000E96C C60004                  	mov byte [rax], T_closure
 20301 0000E96F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20302 0000E973 48C74009[80E90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 20303 0000E97B E918020000              	jmp .L_lambda_simple_end_0078
 20304                                  .L_lambda_simple_code_0078:	; lambda-simple body
 20305 0000E980 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20306 0000E986 740B                    	je .L_lambda_simple_arity_check_ok_0078
 20307 0000E988 FF742410                	push qword [rsp + 8 * 2]
 20308 0000E98C 6A02                    	push 2
 20309 0000E98E E9DC700000              	jmp L_error_incorrect_arity_simple
 20310                                  .L_lambda_simple_arity_check_ok_0078:
 20311 0000E993 C8000000                	enter 0, 0
 20312                                  	; preparing a tail-call
 20313                                  	; preparing a non-tail-call
 20314 0000E997 488B4528                	mov rax, PARAM(1)	; param str2
 20315 0000E99B 50                      	push rax
 20316 0000E99C 6A01                    	push 1	; arg count
 20317 0000E99E 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 20318 0000E9A6 803805                  	cmp byte [rax], T_undefined
 20319 0000E9A9 0F84DA6F0000            	je L_error_fvar_undefined
 20320 0000E9AF 803804                  	cmp byte [rax], T_closure
 20321 0000E9B2 0F8555700000            	jne L_error_non_closure
 20322 0000E9B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20323 0000E9BB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20324 0000E9BE 50                      	push rax
 20325                                  	; preparing a non-tail-call
 20326 0000E9BF 488B4520                	mov rax, PARAM(0)	; param str1
 20327 0000E9C3 50                      	push rax
 20328 0000E9C4 6A01                    	push 1	; arg count
 20329 0000E9C6 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 20330 0000E9CE 803805                  	cmp byte [rax], T_undefined
 20331 0000E9D1 0F84B26F0000            	je L_error_fvar_undefined
 20332 0000E9D7 803804                  	cmp byte [rax], T_closure
 20333 0000E9DA 0F852D700000            	jne L_error_non_closure
 20334 0000E9E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20335 0000E9E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20336 0000E9E6 50                      	push rax
 20337 0000E9E7 6A02                    	push 2	; arg count
 20338 0000E9E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20339 0000E9EE E8C3700000              	call malloc
 20340 0000E9F3 50                      	push rax
 20341 0000E9F4 BF10000000              	mov rdi, 8 * 2	; new rib
 20342 0000E9F9 E8B8700000              	call malloc
 20343 0000E9FE 50                      	push rax
 20344 0000E9FF BF20000000              	mov rdi, 8 * 4	; extended env
 20345 0000EA04 E8AD700000              	call malloc
 20346 0000EA09 488B7D10                	mov rdi, ENV
 20347 0000EA0D BE00000000              	mov rsi, 0
 20348 0000EA12 BA01000000              	mov rdx, 1
 20349                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 20350 0000EA17 4883FE03                	cmp rsi, 3
 20351 0000EA1B 7410                    	je .L_lambda_simple_env_end_0079
 20352 0000EA1D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20353 0000EA21 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20354 0000EA25 48FFC6                  	inc rsi
 20355 0000EA28 48FFC2                  	inc rdx
 20356 0000EA2B EBEA                    	jmp .L_lambda_simple_env_loop_0079
 20357                                  .L_lambda_simple_env_end_0079:
 20358 0000EA2D 5B                      	pop rbx
 20359 0000EA2E BE00000000              	mov rsi, 0
 20360                                  .L_lambda_simple_params_loop_0079:	; copy params
 20361 0000EA33 4883FE02                	cmp rsi, 2
 20362 0000EA37 740E                    	je .L_lambda_simple_params_end_0079
 20363 0000EA39 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20364 0000EA3E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20365 0000EA42 48FFC6                  	inc rsi
 20366 0000EA45 EBEC                    	jmp .L_lambda_simple_params_loop_0079
 20367                                  .L_lambda_simple_params_end_0079:
 20368 0000EA47 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20369 0000EA4A 4889C3                  	mov rbx, rax
 20370 0000EA4D 58                      	pop rax
 20371 0000EA4E C60004                  	mov byte [rax], T_closure
 20372 0000EA51 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20373 0000EA55 48C74009[62EA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 20374 0000EA5D E9E4000000              	jmp .L_lambda_simple_end_0079
 20375                                  .L_lambda_simple_code_0079:	; lambda-simple body
 20376 0000EA62 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20377 0000EA68 740B                    	je .L_lambda_simple_arity_check_ok_0079
 20378 0000EA6A FF742410                	push qword [rsp + 8 * 2]
 20379 0000EA6E 6A02                    	push 2
 20380 0000EA70 E9FA6F0000              	jmp L_error_incorrect_arity_simple
 20381                                  .L_lambda_simple_arity_check_ok_0079:
 20382 0000EA75 C8000000                	enter 0, 0
 20383                                  	; preparing a non-tail-call
 20384 0000EA79 488B4528                	mov rax, PARAM(1)	; param len2
 20385 0000EA7D 50                      	push rax
 20386 0000EA7E 488B4520                	mov rax, PARAM(0)	; param len1
 20387 0000EA82 50                      	push rax
 20388 0000EA83 6A02                    	push 2	; arg count
 20389 0000EA85 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 20390 0000EA8D 803805                  	cmp byte [rax], T_undefined
 20391 0000EA90 0F84F36E0000            	je L_error_fvar_undefined
 20392 0000EA96 803804                  	cmp byte [rax], T_closure
 20393 0000EA99 0F856E6F0000            	jne L_error_non_closure
 20394 0000EA9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20395 0000EAA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20396 0000EAA5 483D[02000000]          	cmp rax, sob_boolean_false
 20397 0000EAAB 0F8487000000            	je .L_if_else_005e
 20398                                  	; preparing a tail-call
 20399 0000EAB1 488B4520                	mov rax, PARAM(0)	; param len1
 20400 0000EAB5 50                      	push rax
 20401 0000EAB6 488B4510                	mov rax, ENV
 20402 0000EABA 488B00                  	mov rax, qword [rax + 8 * 0]
 20403 0000EABD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20404 0000EAC1 50                      	push rax
 20405 0000EAC2 488B4510                	mov rax, ENV
 20406 0000EAC6 488B00                  	mov rax, qword [rax + 8 * 0]
 20407 0000EAC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20408 0000EACC 50                      	push rax
 20409 0000EACD 48B8-                   	mov rax, L_constants + 2135
 20409 0000EACF [5708000000000000] 
 20410 0000EAD7 50                      	push rax
 20411 0000EAD8 6A04                    	push 4	; arg count
 20412 0000EADA 488B4510                	mov rax, ENV
 20413 0000EADE 488B4008                	mov rax, qword [rax + 8 * 1]
 20414 0000EAE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20415 0000EAE5 488B00                  	mov rax, qword [rax]
 20416 0000EAE8 803804                  	cmp byte [rax], T_closure
 20417 0000EAEB 0F851C6F0000            	jne L_error_non_closure
 20418 0000EAF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20419 0000EAF4 FF7508                  	push qword [rbp + 8 * 1]
 20420                                   ; old ret addr
 20421 0000EAF7 FF7500                  	push qword [rbp]
 20422                                   ; restore the old rbp
 20423 0000EAFA BB04000000              	mov rbx, 4
 20424 0000EAFF 4883C303                	add rbx, 3
 20425 0000EB03 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20426 0000EB07 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20427 0000EB0C 4C8D4DF8                	lea r9, [rbp - 8]
 20428 0000EB10 B908000000              	mov rcx, 8
 20429                                  .L_tc_recycle_frame_loop_00b1:
 20430 0000EB15 4883F900                	cmp rcx, 0
 20431 0000EB19 7413                    	je .L_tc_recycle_frame_done_00b1
 20432 0000EB1B 4D8B11                  	mov r10, qword [r9]
 20433 0000EB1E 4D8910                  	mov qword [r8], r10
 20434 0000EB21 4983E808                	sub r8, 8
 20435 0000EB25 4983E908                	sub r9, 8
 20436 0000EB29 48FFC9                  	dec rcx
 20437 0000EB2C EBE7                    	jmp .L_tc_recycle_frame_loop_00b1
 20438                                  .L_tc_recycle_frame_done_00b1:
 20439 0000EB2E 498D6008                	lea rsp, [r8 + 8]
 20440 0000EB32 5D                      	pop rbp ; restore the old rbp
 20441 0000EB33 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20442 0000EB36 EB0A                    	jmp .L_if_end_005e
 20443                                  .L_if_else_005e:
 20444 0000EB38 48B8-                   	mov rax, L_constants + 2
 20444 0000EB3A [0200000000000000] 
 20445                                  .L_if_end_005e:
 20446 0000EB42 C9                      	leave
 20447 0000EB43 C22000                  	ret AND_KILL_FRAME(2)
 20448                                  .L_lambda_simple_end_0079:	; new closure is in rax
 20449 0000EB46 803804                  	cmp byte [rax], T_closure
 20450 0000EB49 0F85BE6E0000            	jne L_error_non_closure
 20451 0000EB4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 20452 0000EB52 FF7508                  	push qword [rbp + 8 * 1]
 20453                                   ; old ret addr
 20454 0000EB55 FF7500                  	push qword [rbp]
 20455                                   ; restore the old rbp
 20456 0000EB58 BB02000000              	mov rbx, 2
 20457 0000EB5D 4883C303                	add rbx, 3
 20458 0000EB61 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20459 0000EB65 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20460 0000EB6A 4C8D4DF8                	lea r9, [rbp - 8]
 20461 0000EB6E B906000000              	mov rcx, 6
 20462                                  .L_tc_recycle_frame_loop_00b0:
 20463 0000EB73 4883F900                	cmp rcx, 0
 20464 0000EB77 7413                    	je .L_tc_recycle_frame_done_00b0
 20465 0000EB79 4D8B11                  	mov r10, qword [r9]
 20466 0000EB7C 4D8910                  	mov qword [r8], r10
 20467 0000EB7F 4983E808                	sub r8, 8
 20468 0000EB83 4983E908                	sub r9, 8
 20469 0000EB87 48FFC9                  	dec rcx
 20470 0000EB8A EBE7                    	jmp .L_tc_recycle_frame_loop_00b0
 20471                                  .L_tc_recycle_frame_done_00b0:
 20472 0000EB8C 498D6008                	lea rsp, [r8 + 8]
 20473 0000EB90 5D                      	pop rbp ; restore the old rbp
 20474 0000EB91 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20475 0000EB94 C9                      	leave
 20476 0000EB95 C22000                  	ret AND_KILL_FRAME(2)
 20477                                  .L_lambda_simple_end_0078:	; new closure is in rax
 20478 0000EB98 50                      	push rax
 20479 0000EB99 6A01                    	push 1	; arg count
 20480 0000EB9B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20481 0000EBA0 E8116F0000              	call malloc
 20482 0000EBA5 50                      	push rax
 20483 0000EBA6 BF08000000              	mov rdi, 8 * 1	; new rib
 20484 0000EBAB E8066F0000              	call malloc
 20485 0000EBB0 50                      	push rax
 20486 0000EBB1 BF18000000              	mov rdi, 8 * 3	; extended env
 20487 0000EBB6 E8FB6E0000              	call malloc
 20488 0000EBBB 488B7D10                	mov rdi, ENV
 20489 0000EBBF BE00000000              	mov rsi, 0
 20490 0000EBC4 BA01000000              	mov rdx, 1
 20491                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 20492 0000EBC9 4883FE02                	cmp rsi, 2
 20493 0000EBCD 7410                    	je .L_lambda_simple_env_end_007a
 20494 0000EBCF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20495 0000EBD3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20496 0000EBD7 48FFC6                  	inc rsi
 20497 0000EBDA 48FFC2                  	inc rdx
 20498 0000EBDD EBEA                    	jmp .L_lambda_simple_env_loop_007a
 20499                                  .L_lambda_simple_env_end_007a:
 20500 0000EBDF 5B                      	pop rbx
 20501 0000EBE0 BE00000000              	mov rsi, 0
 20502                                  .L_lambda_simple_params_loop_007a:	; copy params
 20503 0000EBE5 4883FE01                	cmp rsi, 1
 20504 0000EBE9 740E                    	je .L_lambda_simple_params_end_007a
 20505 0000EBEB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20506 0000EBF0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20507 0000EBF4 48FFC6                  	inc rsi
 20508 0000EBF7 EBEC                    	jmp .L_lambda_simple_params_loop_007a
 20509                                  .L_lambda_simple_params_end_007a:
 20510 0000EBF9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20511 0000EBFC 4889C3                  	mov rbx, rax
 20512 0000EBFF 58                      	pop rax
 20513 0000EC00 C60004                  	mov byte [rax], T_closure
 20514 0000EC03 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20515 0000EC07 48C74009[14EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 20516 0000EC0F E9E2040000              	jmp .L_lambda_simple_end_007a
 20517                                  .L_lambda_simple_code_007a:	; lambda-simple body
 20518 0000EC14 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20519 0000EC1A 740B                    	je .L_lambda_simple_arity_check_ok_007a
 20520 0000EC1C FF742410                	push qword [rsp + 8 * 2]
 20521 0000EC20 6A01                    	push 1
 20522 0000EC22 E9486E0000              	jmp L_error_incorrect_arity_simple
 20523                                  .L_lambda_simple_arity_check_ok_007a:
 20524 0000EC27 C8000000                	enter 0, 0
 20525                                  	; preparing a tail-call
 20526 0000EC2B 48B8-                   	mov rax, L_constants + 1993
 20526 0000EC2D [C907000000000000] 
 20527 0000EC35 50                      	push rax
 20528 0000EC36 6A01                    	push 1	; arg count
 20529 0000EC38 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20530 0000EC3D E8746E0000              	call malloc
 20531 0000EC42 50                      	push rax
 20532 0000EC43 BF08000000              	mov rdi, 8 * 1	; new rib
 20533 0000EC48 E8696E0000              	call malloc
 20534 0000EC4D 50                      	push rax
 20535 0000EC4E BF20000000              	mov rdi, 8 * 4	; extended env
 20536 0000EC53 E85E6E0000              	call malloc
 20537 0000EC58 488B7D10                	mov rdi, ENV
 20538 0000EC5C BE00000000              	mov rsi, 0
 20539 0000EC61 BA01000000              	mov rdx, 1
 20540                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 20541 0000EC66 4883FE03                	cmp rsi, 3
 20542 0000EC6A 7410                    	je .L_lambda_simple_env_end_007b
 20543 0000EC6C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20544 0000EC70 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20545 0000EC74 48FFC6                  	inc rsi
 20546 0000EC77 48FFC2                  	inc rdx
 20547 0000EC7A EBEA                    	jmp .L_lambda_simple_env_loop_007b
 20548                                  .L_lambda_simple_env_end_007b:
 20549 0000EC7C 5B                      	pop rbx
 20550 0000EC7D BE00000000              	mov rsi, 0
 20551                                  .L_lambda_simple_params_loop_007b:	; copy params
 20552 0000EC82 4883FE01                	cmp rsi, 1
 20553 0000EC86 740E                    	je .L_lambda_simple_params_end_007b
 20554 0000EC88 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20555 0000EC8D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20556 0000EC91 48FFC6                  	inc rsi
 20557 0000EC94 EBEC                    	jmp .L_lambda_simple_params_loop_007b
 20558                                  .L_lambda_simple_params_end_007b:
 20559 0000EC96 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20560 0000EC99 4889C3                  	mov rbx, rax
 20561 0000EC9C 58                      	pop rax
 20562 0000EC9D C60004                  	mov byte [rax], T_closure
 20563 0000ECA0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20564 0000ECA4 48C74009[B1EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 20565 0000ECAC E9F3030000              	jmp .L_lambda_simple_end_007b
 20566                                  .L_lambda_simple_code_007b:	; lambda-simple body
 20567 0000ECB1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20568 0000ECB7 740B                    	je .L_lambda_simple_arity_check_ok_007b
 20569 0000ECB9 FF742410                	push qword [rsp + 8 * 2]
 20570 0000ECBD 6A01                    	push 1
 20571 0000ECBF E9AB6D0000              	jmp L_error_incorrect_arity_simple
 20572                                  .L_lambda_simple_arity_check_ok_007b:
 20573 0000ECC4 C8000000                	enter 0, 0
 20574 0000ECC8 BF08000000              	mov rdi, 8*1
 20575 0000ECCD E8E46D0000              	call malloc
 20576 0000ECD2 488B5D20                	mov rbx, PARAM(0)
 20577 0000ECD6 488918                  	mov qword [rax], rbx
 20578 0000ECD9 48894520                	mov PARAM(0), rax
 20579 0000ECDD 48B8-                   	mov rax, sob_void
 20579 0000ECDF [0000000000000000] 
 20580                                  
 20581 0000ECE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20582 0000ECEC E8C56D0000              	call malloc
 20583 0000ECF1 50                      	push rax
 20584 0000ECF2 BF08000000              	mov rdi, 8 * 1	; new rib
 20585 0000ECF7 E8BA6D0000              	call malloc
 20586 0000ECFC 50                      	push rax
 20587 0000ECFD BF28000000              	mov rdi, 8 * 5	; extended env
 20588 0000ED02 E8AF6D0000              	call malloc
 20589 0000ED07 488B7D10                	mov rdi, ENV
 20590 0000ED0B BE00000000              	mov rsi, 0
 20591 0000ED10 BA01000000              	mov rdx, 1
 20592                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 20593 0000ED15 4883FE04                	cmp rsi, 4
 20594 0000ED19 7410                    	je .L_lambda_simple_env_end_007c
 20595 0000ED1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20596 0000ED1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20597 0000ED23 48FFC6                  	inc rsi
 20598 0000ED26 48FFC2                  	inc rdx
 20599 0000ED29 EBEA                    	jmp .L_lambda_simple_env_loop_007c
 20600                                  .L_lambda_simple_env_end_007c:
 20601 0000ED2B 5B                      	pop rbx
 20602 0000ED2C BE00000000              	mov rsi, 0
 20603                                  .L_lambda_simple_params_loop_007c:	; copy params
 20604 0000ED31 4883FE01                	cmp rsi, 1
 20605 0000ED35 740E                    	je .L_lambda_simple_params_end_007c
 20606 0000ED37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20607 0000ED3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20608 0000ED40 48FFC6                  	inc rsi
 20609 0000ED43 EBEC                    	jmp .L_lambda_simple_params_loop_007c
 20610                                  .L_lambda_simple_params_end_007c:
 20611 0000ED45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20612 0000ED48 4889C3                  	mov rbx, rax
 20613 0000ED4B 58                      	pop rax
 20614 0000ED4C C60004                  	mov byte [rax], T_closure
 20615 0000ED4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20616 0000ED53 48C74009[60ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 20617 0000ED5B E95C010000              	jmp .L_lambda_simple_end_007c
 20618                                  .L_lambda_simple_code_007c:	; lambda-simple body
 20619 0000ED60 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20620 0000ED66 740B                    	je .L_lambda_simple_arity_check_ok_007c
 20621 0000ED68 FF742410                	push qword [rsp + 8 * 2]
 20622 0000ED6C 6A02                    	push 2
 20623 0000ED6E E9FC6C0000              	jmp L_error_incorrect_arity_simple
 20624                                  .L_lambda_simple_arity_check_ok_007c:
 20625 0000ED73 C8000000                	enter 0, 0
 20626                                  	; preparing a non-tail-call
 20627 0000ED77 488B4528                	mov rax, PARAM(1)	; param strs
 20628 0000ED7B 50                      	push rax
 20629 0000ED7C 6A01                    	push 1	; arg count
 20630 0000ED7E 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 20631 0000ED86 803805                  	cmp byte [rax], T_undefined
 20632 0000ED89 0F84FA6B0000            	je L_error_fvar_undefined
 20633 0000ED8F 803804                  	cmp byte [rax], T_closure
 20634 0000ED92 0F85756C0000            	jne L_error_non_closure
 20635 0000ED98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20636 0000ED9B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20637 0000ED9E 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 20638 0000EDA4 0F850E010000            	jne .L_or_end_000d; if its not false (true) then we need to return it and not the last element
 20639                                  	; preparing a non-tail-call
 20640                                  	; preparing a non-tail-call
 20641 0000EDAA 488B4528                	mov rax, PARAM(1)	; param strs
 20642 0000EDAE 50                      	push rax
 20643 0000EDAF 6A01                    	push 1	; arg count
 20644 0000EDB1 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 20645 0000EDB9 803805                  	cmp byte [rax], T_undefined
 20646 0000EDBC 0F84C76B0000            	je L_error_fvar_undefined
 20647 0000EDC2 803804                  	cmp byte [rax], T_closure
 20648 0000EDC5 0F85426C0000            	jne L_error_non_closure
 20649 0000EDCB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20650 0000EDCE FF5009                  	call SOB_CLOSURE_CODE(rax)
 20651 0000EDD1 50                      	push rax
 20652 0000EDD2 488B4520                	mov rax, PARAM(0)	; param str
 20653 0000EDD6 50                      	push rax
 20654 0000EDD7 6A02                    	push 2	; arg count
 20655 0000EDD9 488B4510                	mov rax, ENV
 20656 0000EDDD 488B4008                	mov rax, qword [rax + 8 * 1]
 20657 0000EDE1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 20658 0000EDE4 803804                  	cmp byte [rax], T_closure
 20659 0000EDE7 0F85206C0000            	jne L_error_non_closure
 20660 0000EDED FF7001                  	push SOB_CLOSURE_ENV(rax)
 20661 0000EDF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20662 0000EDF3 483D[02000000]          	cmp rax, sob_boolean_false
 20663 0000EDF9 0F84AF000000            	je .L_if_else_005f
 20664                                  	; preparing a tail-call
 20665                                  	; preparing a non-tail-call
 20666 0000EDFF 488B4528                	mov rax, PARAM(1)	; param strs
 20667 0000EE03 50                      	push rax
 20668 0000EE04 6A01                    	push 1	; arg count
 20669 0000EE06 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 20670 0000EE0E 803805                  	cmp byte [rax], T_undefined
 20671 0000EE11 0F84726B0000            	je L_error_fvar_undefined
 20672 0000EE17 803804                  	cmp byte [rax], T_closure
 20673 0000EE1A 0F85ED6B0000            	jne L_error_non_closure
 20674 0000EE20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20675 0000EE23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20676 0000EE26 50                      	push rax
 20677                                  	; preparing a non-tail-call
 20678 0000EE27 488B4528                	mov rax, PARAM(1)	; param strs
 20679 0000EE2B 50                      	push rax
 20680 0000EE2C 6A01                    	push 1	; arg count
 20681 0000EE2E 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 20682 0000EE36 803805                  	cmp byte [rax], T_undefined
 20683 0000EE39 0F844A6B0000            	je L_error_fvar_undefined
 20684 0000EE3F 803804                  	cmp byte [rax], T_closure
 20685 0000EE42 0F85C56B0000            	jne L_error_non_closure
 20686 0000EE48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20687 0000EE4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20688 0000EE4E 50                      	push rax
 20689 0000EE4F 6A02                    	push 2	; arg count
 20690 0000EE51 488B4510                	mov rax, ENV
 20691 0000EE55 488B00                  	mov rax, qword [rax + 8 * 0]
 20692 0000EE58 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20693 0000EE5B 488B00                  	mov rax, qword [rax]
 20694 0000EE5E 803804                  	cmp byte [rax], T_closure
 20695 0000EE61 0F85A66B0000            	jne L_error_non_closure
 20696 0000EE67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20697 0000EE6A FF7508                  	push qword [rbp + 8 * 1]
 20698                                   ; old ret addr
 20699 0000EE6D FF7500                  	push qword [rbp]
 20700                                   ; restore the old rbp
 20701 0000EE70 BB02000000              	mov rbx, 2
 20702 0000EE75 4883C303                	add rbx, 3
 20703 0000EE79 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20704 0000EE7D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20705 0000EE82 4C8D4DF8                	lea r9, [rbp - 8]
 20706 0000EE86 B906000000              	mov rcx, 6
 20707                                  .L_tc_recycle_frame_loop_00b3:
 20708 0000EE8B 4883F900                	cmp rcx, 0
 20709 0000EE8F 7413                    	je .L_tc_recycle_frame_done_00b3
 20710 0000EE91 4D8B11                  	mov r10, qword [r9]
 20711 0000EE94 4D8910                  	mov qword [r8], r10
 20712 0000EE97 4983E808                	sub r8, 8
 20713 0000EE9B 4983E908                	sub r9, 8
 20714 0000EE9F 48FFC9                  	dec rcx
 20715 0000EEA2 EBE7                    	jmp .L_tc_recycle_frame_loop_00b3
 20716                                  .L_tc_recycle_frame_done_00b3:
 20717 0000EEA4 498D6008                	lea rsp, [r8 + 8]
 20718 0000EEA8 5D                      	pop rbp ; restore the old rbp
 20719 0000EEA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20720 0000EEAC EB0A                    	jmp .L_if_end_005f
 20721                                  .L_if_else_005f:
 20722 0000EEAE 48B8-                   	mov rax, L_constants + 2
 20722 0000EEB0 [0200000000000000] 
 20723                                  .L_if_end_005f:
 20724                                  .L_or_end_000d:
 20725 0000EEB8 C9                      	leave
 20726 0000EEB9 C22000                  	ret AND_KILL_FRAME(2)
 20727                                  .L_lambda_simple_end_007c:	; new closure is in rax
 20728 0000EEBC 50                      	push rax
 20729 0000EEBD 488B4520                	mov rax, PARAM(0)	; param run
 20730 0000EEC1 8F00                    	pop qword [rax]
 20731 0000EEC3 48B8-                   	mov rax, sob_void
 20731 0000EEC5 [0000000000000000] 
 20732                                  
 20733 0000EECD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20734 0000EED2 E8DF6B0000              	call malloc
 20735 0000EED7 50                      	push rax
 20736 0000EED8 BF08000000              	mov rdi, 8 * 1	; new rib
 20737 0000EEDD E8D46B0000              	call malloc
 20738 0000EEE2 50                      	push rax
 20739 0000EEE3 BF28000000              	mov rdi, 8 * 5	; extended env
 20740 0000EEE8 E8C96B0000              	call malloc
 20741 0000EEED 488B7D10                	mov rdi, ENV
 20742 0000EEF1 4831F6                  	 xor rsi, rsi
 20743 0000EEF4 4831D2                  	 xor rdx, rdx
 20744 0000EEF7 48FFC2                  	inc rdx
 20745                                  .L_lambda_opt_env_loop_0013:	; ext_env[i + 1] <-- env[i]
 20746 0000EEFA 4883FE04                	cmp rsi, 4
 20747 0000EEFE 7410                    	je .L_lambda_opt_env_end_0013
 20748 0000EF00 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20749 0000EF04 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20750 0000EF08 48FFC6                  	inc rsi
 20751 0000EF0B 48FFC2                  	inc rdx
 20752 0000EF0E EBEA                    	jmp .L_lambda_opt_env_loop_0013
 20753                                  .L_lambda_opt_env_end_0013:
 20754 0000EF10 5B                      	pop rbx
 20755 0000EF11 4831F6                  	xor rsi, rsi
 20756                                  .L_lambda_opt_params_loop_0013:	; copy params
 20757 0000EF14 4883FE01                	cmp rsi, 1
 20758 0000EF18 740E                    	je .L_lambda_opt_params_end_0013
 20759 0000EF1A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20760 0000EF1F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20761 0000EF23 48FFC6                  	inc rsi
 20762 0000EF26 EBEC                    	jmp .L_lambda_opt_params_loop_0013
 20763                                  .L_lambda_opt_params_end_0013:
 20764 0000EF28 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20765 0000EF2B 4889C3                  	mov rbx, rax
 20766 0000EF2E 58                      	pop rax
 20767 0000EF2F C60004                  	mov byte [rax], T_closure
 20768 0000EF32 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20769 0000EF36 48C74009[43EF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 20770 0000EF3E E95D010000              	jmp .L_lambda_opt_end_0013
 20771                                  .L_lambda_opt_code_0013:; lambda opt body
 20772 0000EF43 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20773 0000EF49 7409                    	je .L_lambda_opt_arity_check_exact_0013
 20774 0000EF4B 7F57                    	jg .L_lambda_opt_arity_check_more_0013
 20775 0000EF4D 6A01                    	push 1
 20776 0000EF4F E92F6B0000              	jmp L_error_incorrect_arity_opt
 20777                                  .L_lambda_opt_arity_check_exact_0013:
 20778 0000EF54 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 20779 0000EF58 4C894C24F8              	mov qword [rsp -8], r9
 20780 0000EF5D 4C8B4C2408              	mov r9, qword [rsp +8]
 20781 0000EF62 4C890C24                	mov qword [rsp +8 * 0], r9
 20782 0000EF66 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 20783 0000EF6B 4C89C9                  	mov rcx, r9
 20784 0000EF6E 49FFC1                  	inc r9
 20785 0000EF71 4C894C2408              	mov qword [rsp +8], r9
 20786 0000EF76 4889E2                  	mov rdx, rsp
 20787 0000EF79 4883C218                	add rdx, 24
 20788                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0013:
 20789 0000EF7D 4883F900                	cmp rcx, 0
 20790 0000EF81 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0013
 20791 0000EF83 4C8B02                  	mov r8, qword [rdx]
 20792 0000EF86 4C8942F8                	mov qword [rdx - 8], r8
 20793 0000EF8A 4883C208                	add rdx, 8
 20794 0000EF8E 48FFC9                  	dec rcx
 20795 0000EF91 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0013
 20796                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0013:
 20797 0000EF93 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 20798 0000EF9B 4883EC08                	sub rsp, 8
 20799 0000EF9F E984000000              	jmp .L_lambda_opt_stack_adjusted_0013
 20800                                  .L_lambda_opt_arity_check_more_0013:
 20801 0000EFA4 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 20802 0000EFA9 4D89C4                  	mov r12, r8
 20803 0000EFAC 4C89C1                  	mov rcx, r8
 20804 0000EFAF 4D8D5002                	lea r10, [r8 + 2] 
 20805 0000EFB3 4883E901                	sub rcx, 1
 20806 0000EFB7 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 20807 0000EFBC 49B9-                   	mov r9, sob_nil
 20807 0000EFBE [0100000000000000] 
 20808                                  .L_lambda_opt_create_list_of_opt_params_0013:
 20809 0000EFC6 4883F900                	cmp rcx, 0
 20810 0000EFCA 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0013
 20811 0000EFCC BF11000000              	mov rdi, 17
 20812 0000EFD1 E8E06A0000              	call malloc
 20813 0000EFD6 C60021                  	mov byte [rax], T_pair
 20814 0000EFD9 498B1B                  	mov rbx, qword [r11]
 20815 0000EFDC 48895801                	mov qword [rax +1], rbx
 20816 0000EFE0 4C894809                	mov qword [rax + 1 + 8], r9
 20817 0000EFE4 4989C1                  	mov r9, rax
 20818 0000EFE7 48FFC9                  	dec rcx
 20819 0000EFEA 4983EB08                	sub r11, 8
 20820 0000EFEE EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0013
 20821                                  .L_lambda_opt_create_list_of_opt_params_end_0013:
 20822 0000EFF0 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 20823 0000EFF5 4D8908                  	mov qword [r8], r9
 20824 0000EFF8 4E8D14D500000000        	lea r10, [8 * r10]
 20825 0000F000 4901E2                  	add r10, rsp
 20826 0000F003 B905000000              	mov rcx, 4 + 1
 20827                                  .L_lambda_opt_stack_shrink_loop_0013:
 20828 0000F008 4883F900                	cmp rcx, 0
 20829 0000F00C 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0013
 20830 0000F00E 4D8B18                  	mov r11, qword [r8]
 20831 0000F011 4D891A                  	mov qword [r10], r11
 20832 0000F014 4983E808                	sub r8, 8
 20833 0000F018 4983EA08                	sub r10, 8
 20834 0000F01C 48FFC9                  	dec rcx
 20835 0000F01F EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 20836                                  .L_lambda_opt_stack_shrink_loop_exit_0013:
 20837 0000F021 4983C208                	add r10, 8
 20838 0000F025 4C89D4                  	mov rsp, r10
 20839                                  .L_lambda_opt_stack_adjusted_0013:;continue with the code, the stack is ok
 20840 0000F028 48C744241002000000      	mov qword [rsp + 8*2], 2
 20841 0000F031 C8000000                	enter 0, 0
 20842                                  	; preparing a tail-call
 20843 0000F035 488B4528                	mov rax, PARAM(1)	; param strs
 20844 0000F039 50                      	push rax
 20845 0000F03A 488B4520                	mov rax, PARAM(0)	; param str
 20846 0000F03E 50                      	push rax
 20847 0000F03F 6A02                    	push 2	; arg count
 20848 0000F041 488B4510                	mov rax, ENV
 20849 0000F045 488B00                  	mov rax, qword [rax + 8 * 0]
 20850 0000F048 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20851 0000F04B 488B00                  	mov rax, qword [rax]
 20852 0000F04E 803804                  	cmp byte [rax], T_closure
 20853 0000F051 0F85B6690000            	jne L_error_non_closure
 20854 0000F057 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20855 0000F05A FF7508                  	push qword [rbp + 8 * 1]
 20856                                   ; old ret addr
 20857 0000F05D FF7500                  	push qword [rbp]
 20858                                   ; restore the old rbp
 20859 0000F060 BB02000000              	mov rbx, 2
 20860 0000F065 4883C303                	add rbx, 3
 20861 0000F069 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20862 0000F06D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20863 0000F072 4C8D4DF8                	lea r9, [rbp - 8]
 20864 0000F076 B906000000              	mov rcx, 6
 20865                                  .L_tc_recycle_frame_loop_00b4:
 20866 0000F07B 4883F900                	cmp rcx, 0
 20867 0000F07F 7413                    	je .L_tc_recycle_frame_done_00b4
 20868 0000F081 4D8B11                  	mov r10, qword [r9]
 20869 0000F084 4D8910                  	mov qword [r8], r10
 20870 0000F087 4983E808                	sub r8, 8
 20871 0000F08B 4983E908                	sub r9, 8
 20872 0000F08F 48FFC9                  	dec rcx
 20873 0000F092 EBE7                    	jmp .L_tc_recycle_frame_loop_00b4
 20874                                  .L_tc_recycle_frame_done_00b4:
 20875 0000F094 498D6008                	lea rsp, [r8 + 8]
 20876 0000F098 5D                      	pop rbp ; restore the old rbp
 20877 0000F099 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20878 0000F09C C9                      	leave
 20879 0000F09D C22000                  	ret 8 * (2 + 2)
 20880                                  .L_lambda_opt_end_0013:	; new closure is in rax
 20881 0000F0A0 C9                      	leave
 20882 0000F0A1 C21800                  	ret AND_KILL_FRAME(1)
 20883                                  .L_lambda_simple_end_007b:	; new closure is in rax
 20884 0000F0A4 803804                  	cmp byte [rax], T_closure
 20885 0000F0A7 0F8560690000            	jne L_error_non_closure
 20886 0000F0AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20887 0000F0B0 FF7508                  	push qword [rbp + 8 * 1]
 20888                                   ; old ret addr
 20889 0000F0B3 FF7500                  	push qword [rbp]
 20890                                   ; restore the old rbp
 20891 0000F0B6 BB01000000              	mov rbx, 1
 20892 0000F0BB 4883C303                	add rbx, 3
 20893 0000F0BF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20894 0000F0C3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20895 0000F0C8 4C8D4DF8                	lea r9, [rbp - 8]
 20896 0000F0CC B905000000              	mov rcx, 5
 20897                                  .L_tc_recycle_frame_loop_00b2:
 20898 0000F0D1 4883F900                	cmp rcx, 0
 20899 0000F0D5 7413                    	je .L_tc_recycle_frame_done_00b2
 20900 0000F0D7 4D8B11                  	mov r10, qword [r9]
 20901 0000F0DA 4D8910                  	mov qword [r8], r10
 20902 0000F0DD 4983E808                	sub r8, 8
 20903 0000F0E1 4983E908                	sub r9, 8
 20904 0000F0E5 48FFC9                  	dec rcx
 20905 0000F0E8 EBE7                    	jmp .L_tc_recycle_frame_loop_00b2
 20906                                  .L_tc_recycle_frame_done_00b2:
 20907 0000F0EA 498D6008                	lea rsp, [r8 + 8]
 20908 0000F0EE 5D                      	pop rbp ; restore the old rbp
 20909 0000F0EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20910 0000F0F2 C9                      	leave
 20911 0000F0F3 C21800                  	ret AND_KILL_FRAME(1)
 20912                                  .L_lambda_simple_end_007a:	; new closure is in rax
 20913 0000F0F6 803804                  	cmp byte [rax], T_closure
 20914 0000F0F9 0F850E690000            	jne L_error_non_closure
 20915 0000F0FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20916 0000F102 FF7508                  	push qword [rbp + 8 * 1]
 20917                                   ; old ret addr
 20918 0000F105 FF7500                  	push qword [rbp]
 20919                                   ; restore the old rbp
 20920 0000F108 BB01000000              	mov rbx, 1
 20921 0000F10D 4883C303                	add rbx, 3
 20922 0000F111 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20923 0000F115 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20924 0000F11A 4C8D4DF8                	lea r9, [rbp - 8]
 20925 0000F11E B905000000              	mov rcx, 5
 20926                                  .L_tc_recycle_frame_loop_00af:
 20927 0000F123 4883F900                	cmp rcx, 0
 20928 0000F127 7413                    	je .L_tc_recycle_frame_done_00af
 20929 0000F129 4D8B11                  	mov r10, qword [r9]
 20930 0000F12C 4D8910                  	mov qword [r8], r10
 20931 0000F12F 4983E808                	sub r8, 8
 20932 0000F133 4983E908                	sub r9, 8
 20933 0000F137 48FFC9                  	dec rcx
 20934 0000F13A EBE7                    	jmp .L_tc_recycle_frame_loop_00af
 20935                                  .L_tc_recycle_frame_done_00af:
 20936 0000F13C 498D6008                	lea rsp, [r8 + 8]
 20937 0000F140 5D                      	pop rbp ; restore the old rbp
 20938 0000F141 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20939 0000F144 C9                      	leave
 20940 0000F145 C21800                  	ret AND_KILL_FRAME(1)
 20941                                  .L_lambda_simple_end_0076:	; new closure is in rax
 20942 0000F148 803804                  	cmp byte [rax], T_closure
 20943 0000F14B 0F85BC680000            	jne L_error_non_closure
 20944 0000F151 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20945 0000F154 FF7508                  	push qword [rbp + 8 * 1]
 20946                                   ; old ret addr
 20947 0000F157 FF7500                  	push qword [rbp]
 20948                                   ; restore the old rbp
 20949 0000F15A BB01000000              	mov rbx, 1
 20950 0000F15F 4883C303                	add rbx, 3
 20951 0000F163 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 20952 0000F167 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 20953 0000F16C 4C8D4DF8                	lea r9, [rbp - 8]
 20954 0000F170 B905000000              	mov rcx, 5
 20955                                  .L_tc_recycle_frame_loop_00ad:
 20956 0000F175 4883F900                	cmp rcx, 0
 20957 0000F179 7413                    	je .L_tc_recycle_frame_done_00ad
 20958 0000F17B 4D8B11                  	mov r10, qword [r9]
 20959 0000F17E 4D8910                  	mov qword [r8], r10
 20960 0000F181 4983E808                	sub r8, 8
 20961 0000F185 4983E908                	sub r9, 8
 20962 0000F189 48FFC9                  	dec rcx
 20963 0000F18C EBE7                    	jmp .L_tc_recycle_frame_loop_00ad
 20964                                  .L_tc_recycle_frame_done_00ad:
 20965 0000F18E 498D6008                	lea rsp, [r8 + 8]
 20966 0000F192 5D                      	pop rbp ; restore the old rbp
 20967 0000F193 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20968 0000F196 C9                      	leave
 20969 0000F197 C21800                  	ret AND_KILL_FRAME(1)
 20970                                  .L_lambda_simple_end_0075:	; new closure is in rax
 20971 0000F19A 50                      	push rax
 20972 0000F19B 6A01                    	push 1	; arg count
 20973 0000F19D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20974 0000F1A2 E80F690000              	call malloc
 20975 0000F1A7 50                      	push rax
 20976 0000F1A8 BF00000000              	mov rdi, 8 * 0	; new rib
 20977 0000F1AD E804690000              	call malloc
 20978 0000F1B2 50                      	push rax
 20979 0000F1B3 BF08000000              	mov rdi, 8 * 1	; extended env
 20980 0000F1B8 E8F9680000              	call malloc
 20981 0000F1BD 488B7D10                	mov rdi, ENV
 20982 0000F1C1 BE00000000              	mov rsi, 0
 20983 0000F1C6 BA01000000              	mov rdx, 1
 20984                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 20985 0000F1CB 4883FE00                	cmp rsi, 0
 20986 0000F1CF 7410                    	je .L_lambda_simple_env_end_007d
 20987 0000F1D1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20988 0000F1D5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20989 0000F1D9 48FFC6                  	inc rsi
 20990 0000F1DC 48FFC2                  	inc rdx
 20991 0000F1DF EBEA                    	jmp .L_lambda_simple_env_loop_007d
 20992                                  .L_lambda_simple_env_end_007d:
 20993 0000F1E1 5B                      	pop rbx
 20994 0000F1E2 BE00000000              	mov rsi, 0
 20995                                  .L_lambda_simple_params_loop_007d:	; copy params
 20996 0000F1E7 4883FE00                	cmp rsi, 0
 20997 0000F1EB 740E                    	je .L_lambda_simple_params_end_007d
 20998 0000F1ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20999 0000F1F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21000 0000F1F6 48FFC6                  	inc rsi
 21001 0000F1F9 EBEC                    	jmp .L_lambda_simple_params_loop_007d
 21002                                  .L_lambda_simple_params_end_007d:
 21003 0000F1FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21004 0000F1FE 4889C3                  	mov rbx, rax
 21005 0000F201 58                      	pop rax
 21006 0000F202 C60004                  	mov byte [rax], T_closure
 21007 0000F205 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21008 0000F209 48C74009[16F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 21009 0000F211 E98D000000              	jmp .L_lambda_simple_end_007d
 21010                                  .L_lambda_simple_code_007d:	; lambda-simple body
 21011 0000F216 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21012 0000F21C 740B                    	je .L_lambda_simple_arity_check_ok_007d
 21013 0000F21E FF742410                	push qword [rsp + 8 * 2]
 21014 0000F222 6A01                    	push 1
 21015 0000F224 E946680000              	jmp L_error_incorrect_arity_simple
 21016                                  .L_lambda_simple_arity_check_ok_007d:
 21017 0000F229 C8000000                	enter 0, 0
 21018                                  	; preparing a non-tail-call
 21019 0000F22D 488B0425[C9120000]      	mov rax, qword [free_var_75]	; free var char=?
 21020 0000F235 803805                  	cmp byte [rax], T_undefined
 21021 0000F238 0F844B670000            	je L_error_fvar_undefined
 21022 0000F23E 50                      	push rax
 21023 0000F23F 6A01                    	push 1	; arg count
 21024 0000F241 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21025 0000F245 803804                  	cmp byte [rax], T_closure
 21026 0000F248 0F85BF670000            	jne L_error_non_closure
 21027 0000F24E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21028 0000F251 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21029 0000F254 48890425[C5160000]      	mov qword [free_var_135], rax
 21030 0000F25C 48B8-                   	mov rax, sob_void
 21030 0000F25E [0000000000000000] 
 21031                                  
 21032                                  	; preparing a non-tail-call
 21033 0000F266 488B0425[52120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 21034 0000F26E 803805                  	cmp byte [rax], T_undefined
 21035 0000F271 0F8412670000            	je L_error_fvar_undefined
 21036 0000F277 50                      	push rax
 21037 0000F278 6A01                    	push 1	; arg count
 21038 0000F27A 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21039 0000F27E 803804                  	cmp byte [rax], T_closure
 21040 0000F281 0F8586670000            	jne L_error_non_closure
 21041 0000F287 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21042 0000F28A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21043 0000F28D 48890425[F9150000]      	mov qword [free_var_123], rax
 21044 0000F295 48B8-                   	mov rax, sob_void
 21044 0000F297 [0000000000000000] 
 21045 0000F29F C9                      	leave
 21046 0000F2A0 C21800                  	ret AND_KILL_FRAME(1)
 21047                                  .L_lambda_simple_end_007d:	; new closure is in rax
 21048 0000F2A3 803804                  	cmp byte [rax], T_closure
 21049 0000F2A6 0F8561670000            	jne L_error_non_closure
 21050 0000F2AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21051 0000F2AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21052                                  
 21053 0000F2B2 4889C7                  	mov rdi, rax
 21054 0000F2B5 E8516A0000              	call print_sexpr_if_not_void
 21055 0000F2BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21056 0000F2BF E8F2670000              	call malloc
 21057 0000F2C4 50                      	push rax
 21058 0000F2C5 BF00000000              	mov rdi, 8 * 0	; new rib
 21059 0000F2CA E8E7670000              	call malloc
 21060 0000F2CF 50                      	push rax
 21061 0000F2D0 BF08000000              	mov rdi, 8 * 1	; extended env
 21062 0000F2D5 E8DC670000              	call malloc
 21063 0000F2DA 488B7D10                	mov rdi, ENV
 21064 0000F2DE BE00000000              	mov rsi, 0
 21065 0000F2E3 BA01000000              	mov rdx, 1
 21066                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 21067 0000F2E8 4883FE00                	cmp rsi, 0
 21068 0000F2EC 7410                    	je .L_lambda_simple_env_end_007e
 21069 0000F2EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21070 0000F2F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21071 0000F2F6 48FFC6                  	inc rsi
 21072 0000F2F9 48FFC2                  	inc rdx
 21073 0000F2FC EBEA                    	jmp .L_lambda_simple_env_loop_007e
 21074                                  .L_lambda_simple_env_end_007e:
 21075 0000F2FE 5B                      	pop rbx
 21076 0000F2FF BE00000000              	mov rsi, 0
 21077                                  .L_lambda_simple_params_loop_007e:	; copy params
 21078 0000F304 4883FE00                	cmp rsi, 0
 21079 0000F308 740E                    	je .L_lambda_simple_params_end_007e
 21080 0000F30A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21081 0000F30F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21082 0000F313 48FFC6                  	inc rsi
 21083 0000F316 EBEC                    	jmp .L_lambda_simple_params_loop_007e
 21084                                  .L_lambda_simple_params_end_007e:
 21085 0000F318 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21086 0000F31B 4889C3                  	mov rbx, rax
 21087 0000F31E 58                      	pop rax
 21088 0000F31F C60004                  	mov byte [rax], T_closure
 21089 0000F322 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21090 0000F326 48C74009[33F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 21091 0000F32E E916010000              	jmp .L_lambda_simple_end_007e
 21092                                  .L_lambda_simple_code_007e:	; lambda-simple body
 21093 0000F333 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21094 0000F339 740B                    	je .L_lambda_simple_arity_check_ok_007e
 21095 0000F33B FF742410                	push qword [rsp + 8 * 2]
 21096 0000F33F 6A01                    	push 1
 21097 0000F341 E929670000              	jmp L_error_incorrect_arity_simple
 21098                                  .L_lambda_simple_arity_check_ok_007e:
 21099 0000F346 C8000000                	enter 0, 0
 21100                                  	; preparing a non-tail-call
 21101 0000F34A 488B4520                	mov rax, PARAM(0)	; param e
 21102 0000F34E 50                      	push rax
 21103 0000F34F 6A01                    	push 1	; arg count
 21104 0000F351 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 21105 0000F359 803805                  	cmp byte [rax], T_undefined
 21106 0000F35C 0F8427660000            	je L_error_fvar_undefined
 21107 0000F362 803804                  	cmp byte [rax], T_closure
 21108 0000F365 0F85A2660000            	jne L_error_non_closure
 21109 0000F36B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21110 0000F36E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21111 0000F371 483D[02000000]          	cmp rax, sob_boolean_false ;check if the current element that was eval is false
 21112 0000F377 0F85C8000000            	jne .L_or_end_000e; if its not false (true) then we need to return it and not the last element
 21113                                  	; preparing a non-tail-call
 21114 0000F37D 488B4520                	mov rax, PARAM(0)	; param e
 21115 0000F381 50                      	push rax
 21116 0000F382 6A01                    	push 1	; arg count
 21117 0000F384 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
 21118 0000F38C 803805                  	cmp byte [rax], T_undefined
 21119 0000F38F 0F84F4650000            	je L_error_fvar_undefined
 21120 0000F395 803804                  	cmp byte [rax], T_closure
 21121 0000F398 0F856F660000            	jne L_error_non_closure
 21122 0000F39E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21123 0000F3A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21124 0000F3A4 483D[02000000]          	cmp rax, sob_boolean_false
 21125 0000F3AA 0F848B000000            	je .L_if_else_0060
 21126                                  	; preparing a tail-call
 21127                                  	; preparing a non-tail-call
 21128 0000F3B0 488B4520                	mov rax, PARAM(0)	; param e
 21129 0000F3B4 50                      	push rax
 21130 0000F3B5 6A01                    	push 1	; arg count
 21131 0000F3B7 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 21132 0000F3BF 803805                  	cmp byte [rax], T_undefined
 21133 0000F3C2 0F84C1650000            	je L_error_fvar_undefined
 21134 0000F3C8 803804                  	cmp byte [rax], T_closure
 21135 0000F3CB 0F853C660000            	jne L_error_non_closure
 21136 0000F3D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21137 0000F3D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21138 0000F3D7 50                      	push rax
 21139 0000F3D8 6A01                    	push 1	; arg count
 21140 0000F3DA 488B0425[2E140000]      	mov rax, qword [free_var_96]	; free var list?
 21141 0000F3E2 803805                  	cmp byte [rax], T_undefined
 21142 0000F3E5 0F849E650000            	je L_error_fvar_undefined
 21143 0000F3EB 803804                  	cmp byte [rax], T_closure
 21144 0000F3EE 0F8519660000            	jne L_error_non_closure
 21145 0000F3F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21146 0000F3F7 FF7508                  	push qword [rbp + 8 * 1]
 21147                                   ; old ret addr
 21148 0000F3FA FF7500                  	push qword [rbp]
 21149                                   ; restore the old rbp
 21150 0000F3FD BB01000000              	mov rbx, 1
 21151 0000F402 4883C303                	add rbx, 3
 21152 0000F406 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21153 0000F40A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21154 0000F40F 4C8D4DF8                	lea r9, [rbp - 8]
 21155 0000F413 B905000000              	mov rcx, 5
 21156                                  .L_tc_recycle_frame_loop_00b5:
 21157 0000F418 4883F900                	cmp rcx, 0
 21158 0000F41C 7413                    	je .L_tc_recycle_frame_done_00b5
 21159 0000F41E 4D8B11                  	mov r10, qword [r9]
 21160 0000F421 4D8910                  	mov qword [r8], r10
 21161 0000F424 4983E808                	sub r8, 8
 21162 0000F428 4983E908                	sub r9, 8
 21163 0000F42C 48FFC9                  	dec rcx
 21164 0000F42F EBE7                    	jmp .L_tc_recycle_frame_loop_00b5
 21165                                  .L_tc_recycle_frame_done_00b5:
 21166 0000F431 498D6008                	lea rsp, [r8 + 8]
 21167 0000F435 5D                      	pop rbp ; restore the old rbp
 21168 0000F436 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21169 0000F439 EB0A                    	jmp .L_if_end_0060
 21170                                  .L_if_else_0060:
 21171 0000F43B 48B8-                   	mov rax, L_constants + 2
 21171 0000F43D [0200000000000000] 
 21172                                  .L_if_end_0060:
 21173                                  .L_or_end_000e:
 21174 0000F445 C9                      	leave
 21175 0000F446 C21800                  	ret AND_KILL_FRAME(1)
 21176                                  .L_lambda_simple_end_007e:	; new closure is in rax
 21177 0000F449 48890425[2E140000]      	mov qword [free_var_96], rax
 21178 0000F451 48B8-                   	mov rax, sob_void
 21178 0000F453 [0000000000000000] 
 21179                                  
 21180 0000F45B 4889C7                  	mov rdi, rax
 21181 0000F45E E8A8680000              	call print_sexpr_if_not_void
 21182                                  	; preparing a non-tail-call
 21183 0000F463 488B0425[83140000]      	mov rax, qword [free_var_101]	; free var make-vector
 21184 0000F46B 803805                  	cmp byte [rax], T_undefined
 21185 0000F46E 0F8415650000            	je L_error_fvar_undefined
 21186 0000F474 50                      	push rax
 21187 0000F475 6A01                    	push 1	; arg count
 21188 0000F477 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21189 0000F47C E835660000              	call malloc
 21190 0000F481 50                      	push rax
 21191 0000F482 BF00000000              	mov rdi, 8 * 0	; new rib
 21192 0000F487 E82A660000              	call malloc
 21193 0000F48C 50                      	push rax
 21194 0000F48D BF08000000              	mov rdi, 8 * 1	; extended env
 21195 0000F492 E81F660000              	call malloc
 21196 0000F497 488B7D10                	mov rdi, ENV
 21197 0000F49B BE00000000              	mov rsi, 0
 21198 0000F4A0 BA01000000              	mov rdx, 1
 21199                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 21200 0000F4A5 4883FE00                	cmp rsi, 0
 21201 0000F4A9 7410                    	je .L_lambda_simple_env_end_007f
 21202 0000F4AB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21203 0000F4AF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21204 0000F4B3 48FFC6                  	inc rsi
 21205 0000F4B6 48FFC2                  	inc rdx
 21206 0000F4B9 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 21207                                  .L_lambda_simple_env_end_007f:
 21208 0000F4BB 5B                      	pop rbx
 21209 0000F4BC BE00000000              	mov rsi, 0
 21210                                  .L_lambda_simple_params_loop_007f:	; copy params
 21211 0000F4C1 4883FE00                	cmp rsi, 0
 21212 0000F4C5 740E                    	je .L_lambda_simple_params_end_007f
 21213 0000F4C7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21214 0000F4CC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21215 0000F4D0 48FFC6                  	inc rsi
 21216 0000F4D3 EBEC                    	jmp .L_lambda_simple_params_loop_007f
 21217                                  .L_lambda_simple_params_end_007f:
 21218 0000F4D5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21219 0000F4D8 4889C3                  	mov rbx, rax
 21220 0000F4DB 58                      	pop rax
 21221 0000F4DC C60004                  	mov byte [rax], T_closure
 21222 0000F4DF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21223 0000F4E3 48C74009[F0F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 21224 0000F4EB E903040000              	jmp .L_lambda_simple_end_007f
 21225                                  .L_lambda_simple_code_007f:	; lambda-simple body
 21226 0000F4F0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21227 0000F4F6 740B                    	je .L_lambda_simple_arity_check_ok_007f
 21228 0000F4F8 FF742410                	push qword [rsp + 8 * 2]
 21229 0000F4FC 6A01                    	push 1
 21230 0000F4FE E96C650000              	jmp L_error_incorrect_arity_simple
 21231                                  .L_lambda_simple_arity_check_ok_007f:
 21232 0000F503 C8000000                	enter 0, 0
 21233 0000F507 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21234 0000F50C E8A5650000              	call malloc
 21235 0000F511 50                      	push rax
 21236 0000F512 BF08000000              	mov rdi, 8 * 1	; new rib
 21237 0000F517 E89A650000              	call malloc
 21238 0000F51C 50                      	push rax
 21239 0000F51D BF10000000              	mov rdi, 8 * 2	; extended env
 21240 0000F522 E88F650000              	call malloc
 21241 0000F527 488B7D10                	mov rdi, ENV
 21242 0000F52B 4831F6                  	 xor rsi, rsi
 21243 0000F52E 4831D2                  	 xor rdx, rdx
 21244 0000F531 48FFC2                  	inc rdx
 21245                                  .L_lambda_opt_env_loop_0014:	; ext_env[i + 1] <-- env[i]
 21246 0000F534 4883FE01                	cmp rsi, 1
 21247 0000F538 7410                    	je .L_lambda_opt_env_end_0014
 21248 0000F53A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21249 0000F53E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21250 0000F542 48FFC6                  	inc rsi
 21251 0000F545 48FFC2                  	inc rdx
 21252 0000F548 EBEA                    	jmp .L_lambda_opt_env_loop_0014
 21253                                  .L_lambda_opt_env_end_0014:
 21254 0000F54A 5B                      	pop rbx
 21255 0000F54B 4831F6                  	xor rsi, rsi
 21256                                  .L_lambda_opt_params_loop_0014:	; copy params
 21257 0000F54E 4883FE01                	cmp rsi, 1
 21258 0000F552 740E                    	je .L_lambda_opt_params_end_0014
 21259 0000F554 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21260 0000F559 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21261 0000F55D 48FFC6                  	inc rsi
 21262 0000F560 EBEC                    	jmp .L_lambda_opt_params_loop_0014
 21263                                  .L_lambda_opt_params_end_0014:
 21264 0000F562 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21265 0000F565 4889C3                  	mov rbx, rax
 21266 0000F568 58                      	pop rax
 21267 0000F569 C60004                  	mov byte [rax], T_closure
 21268 0000F56C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21269 0000F570 48C74009[7DF50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 21270 0000F578 E972030000              	jmp .L_lambda_opt_end_0014
 21271                                  .L_lambda_opt_code_0014:; lambda opt body
 21272 0000F57D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21273 0000F583 7409                    	je .L_lambda_opt_arity_check_exact_0014
 21274 0000F585 7F57                    	jg .L_lambda_opt_arity_check_more_0014
 21275 0000F587 6A01                    	push 1
 21276 0000F589 E9F5640000              	jmp L_error_incorrect_arity_opt
 21277                                  .L_lambda_opt_arity_check_exact_0014:
 21278 0000F58E 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 21279 0000F592 4C894C24F8              	mov qword [rsp -8], r9
 21280 0000F597 4C8B4C2408              	mov r9, qword [rsp +8]
 21281 0000F59C 4C890C24                	mov qword [rsp +8 * 0], r9
 21282 0000F5A0 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 21283 0000F5A5 4C89C9                  	mov rcx, r9
 21284 0000F5A8 49FFC1                  	inc r9
 21285 0000F5AB 4C894C2408              	mov qword [rsp +8], r9
 21286 0000F5B0 4889E2                  	mov rdx, rsp
 21287 0000F5B3 4883C218                	add rdx, 24
 21288                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0014:
 21289 0000F5B7 4883F900                	cmp rcx, 0
 21290 0000F5BB 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0014
 21291 0000F5BD 4C8B02                  	mov r8, qword [rdx]
 21292 0000F5C0 4C8942F8                	mov qword [rdx - 8], r8
 21293 0000F5C4 4883C208                	add rdx, 8
 21294 0000F5C8 48FFC9                  	dec rcx
 21295 0000F5CB EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0014
 21296                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0014:
 21297 0000F5CD 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 21298 0000F5D5 4883EC08                	sub rsp, 8
 21299 0000F5D9 E984000000              	jmp .L_lambda_opt_stack_adjusted_0014
 21300                                  .L_lambda_opt_arity_check_more_0014:
 21301 0000F5DE 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21302 0000F5E3 4D89C4                  	mov r12, r8
 21303 0000F5E6 4C89C1                  	mov rcx, r8
 21304 0000F5E9 4D8D5002                	lea r10, [r8 + 2] 
 21305 0000F5ED 4883E901                	sub rcx, 1
 21306 0000F5F1 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 21307 0000F5F6 49B9-                   	mov r9, sob_nil
 21307 0000F5F8 [0100000000000000] 
 21308                                  .L_lambda_opt_create_list_of_opt_params_0014:
 21309 0000F600 4883F900                	cmp rcx, 0
 21310 0000F604 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0014
 21311 0000F606 BF11000000              	mov rdi, 17
 21312 0000F60B E8A6640000              	call malloc
 21313 0000F610 C60021                  	mov byte [rax], T_pair
 21314 0000F613 498B1B                  	mov rbx, qword [r11]
 21315 0000F616 48895801                	mov qword [rax +1], rbx
 21316 0000F61A 4C894809                	mov qword [rax + 1 + 8], r9
 21317 0000F61E 4989C1                  	mov r9, rax
 21318 0000F621 48FFC9                  	dec rcx
 21319 0000F624 4983EB08                	sub r11, 8
 21320 0000F628 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0014
 21321                                  .L_lambda_opt_create_list_of_opt_params_end_0014:
 21322 0000F62A 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 21323 0000F62F 4D8908                  	mov qword [r8], r9
 21324 0000F632 4E8D14D500000000        	lea r10, [8 * r10]
 21325 0000F63A 4901E2                  	add r10, rsp
 21326 0000F63D B905000000              	mov rcx, 4 + 1
 21327                                  .L_lambda_opt_stack_shrink_loop_0014:
 21328 0000F642 4883F900                	cmp rcx, 0
 21329 0000F646 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0014
 21330 0000F648 4D8B18                  	mov r11, qword [r8]
 21331 0000F64B 4D891A                  	mov qword [r10], r11
 21332 0000F64E 4983E808                	sub r8, 8
 21333 0000F652 4983EA08                	sub r10, 8
 21334 0000F656 48FFC9                  	dec rcx
 21335 0000F659 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 21336                                  .L_lambda_opt_stack_shrink_loop_exit_0014:
 21337 0000F65B 4983C208                	add r10, 8
 21338 0000F65F 4C89D4                  	mov rsp, r10
 21339                                  .L_lambda_opt_stack_adjusted_0014:;continue with the code, the stack is ok
 21340 0000F662 48C744241002000000      	mov qword [rsp + 8*2], 2
 21341 0000F66B C8000000                	enter 0, 0
 21342                                  	; preparing a tail-call
 21343                                  	; preparing a non-tail-call
 21344 0000F66F 488B4528                	mov rax, PARAM(1)	; param xs
 21345 0000F673 50                      	push rax
 21346 0000F674 6A01                    	push 1	; arg count
 21347 0000F676 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 21348 0000F67E 803805                  	cmp byte [rax], T_undefined
 21349 0000F681 0F8402630000            	je L_error_fvar_undefined
 21350 0000F687 803804                  	cmp byte [rax], T_closure
 21351 0000F68A 0F857D630000            	jne L_error_non_closure
 21352 0000F690 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21353 0000F693 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21354 0000F696 483D[02000000]          	cmp rax, sob_boolean_false
 21355 0000F69C 740F                    	je .L_if_else_0063
 21356 0000F69E 48B8-                   	mov rax, L_constants + 0
 21356 0000F6A0 [0000000000000000] 
 21357 0000F6A8 E9EE000000              	jmp .L_if_end_0063
 21358                                  .L_if_else_0063:
 21359                                  	; preparing a non-tail-call
 21360 0000F6AD 488B4528                	mov rax, PARAM(1)	; param xs
 21361 0000F6B1 50                      	push rax
 21362 0000F6B2 6A01                    	push 1	; arg count
 21363 0000F6B4 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
 21364 0000F6BC 803805                  	cmp byte [rax], T_undefined
 21365 0000F6BF 0F84C4620000            	je L_error_fvar_undefined
 21366 0000F6C5 803804                  	cmp byte [rax], T_closure
 21367 0000F6C8 0F853F630000            	jne L_error_non_closure
 21368 0000F6CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 21369 0000F6D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21370 0000F6D4 483D[02000000]          	cmp rax, sob_boolean_false
 21371 0000F6DA 744C                    	je .L_if_else_0061
 21372                                  	; preparing a non-tail-call
 21373                                  	; preparing a non-tail-call
 21374 0000F6DC 488B4528                	mov rax, PARAM(1)	; param xs
 21375 0000F6E0 50                      	push rax
 21376 0000F6E1 6A01                    	push 1	; arg count
 21377 0000F6E3 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 21378 0000F6EB 803805                  	cmp byte [rax], T_undefined
 21379 0000F6EE 0F8495620000            	je L_error_fvar_undefined
 21380 0000F6F4 803804                  	cmp byte [rax], T_closure
 21381 0000F6F7 0F8510630000            	jne L_error_non_closure
 21382 0000F6FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 21383 0000F700 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21384 0000F703 50                      	push rax
 21385 0000F704 6A01                    	push 1	; arg count
 21386 0000F706 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 21387 0000F70E 803805                  	cmp byte [rax], T_undefined
 21388 0000F711 0F8472620000            	je L_error_fvar_undefined
 21389 0000F717 803804                  	cmp byte [rax], T_closure
 21390 0000F71A 0F85ED620000            	jne L_error_non_closure
 21391 0000F720 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21392 0000F723 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21393 0000F726 EB0A                    	jmp .L_if_end_0061
 21394                                  .L_if_else_0061:
 21395 0000F728 48B8-                   	mov rax, L_constants + 2
 21395 0000F72A [0200000000000000] 
 21396                                  .L_if_end_0061:
 21397 0000F732 483D[02000000]          	cmp rax, sob_boolean_false
 21398 0000F738 7429                    	je .L_if_else_0062
 21399                                  	; preparing a non-tail-call
 21400 0000F73A 488B4528                	mov rax, PARAM(1)	; param xs
 21401 0000F73E 50                      	push rax
 21402 0000F73F 6A01                    	push 1	; arg count
 21403 0000F741 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 21404 0000F749 803805                  	cmp byte [rax], T_undefined
 21405 0000F74C 0F8437620000            	je L_error_fvar_undefined
 21406 0000F752 803804                  	cmp byte [rax], T_closure
 21407 0000F755 0F85B2620000            	jne L_error_non_closure
 21408 0000F75B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21409 0000F75E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21410 0000F761 EB38                    	jmp .L_if_end_0062
 21411                                  .L_if_else_0062:
 21412                                  	; preparing a non-tail-call
 21413 0000F763 48B8-                   	mov rax, L_constants + 2955
 21413 0000F765 [8B0B000000000000] 
 21414 0000F76D 50                      	push rax
 21415 0000F76E 48B8-                   	mov rax, L_constants + 2946
 21415 0000F770 [820B000000000000] 
 21416 0000F778 50                      	push rax
 21417 0000F779 6A02                    	push 2	; arg count
 21418 0000F77B 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
 21419 0000F783 803805                  	cmp byte [rax], T_undefined
 21420 0000F786 0F84FD610000            	je L_error_fvar_undefined
 21421 0000F78C 803804                  	cmp byte [rax], T_closure
 21422 0000F78F 0F8578620000            	jne L_error_non_closure
 21423 0000F795 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21424 0000F798 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21425                                  .L_if_end_0062:
 21426                                  .L_if_end_0063:
 21427 0000F79B 50                      	push rax
 21428 0000F79C 6A01                    	push 1	; arg count
 21429 0000F79E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21430 0000F7A3 E80E630000              	call malloc
 21431 0000F7A8 50                      	push rax
 21432 0000F7A9 BF10000000              	mov rdi, 8 * 2	; new rib
 21433 0000F7AE E803630000              	call malloc
 21434 0000F7B3 50                      	push rax
 21435 0000F7B4 BF18000000              	mov rdi, 8 * 3	; extended env
 21436 0000F7B9 E8F8620000              	call malloc
 21437 0000F7BE 488B7D10                	mov rdi, ENV
 21438 0000F7C2 BE00000000              	mov rsi, 0
 21439 0000F7C7 BA01000000              	mov rdx, 1
 21440                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 21441 0000F7CC 4883FE02                	cmp rsi, 2
 21442 0000F7D0 7410                    	je .L_lambda_simple_env_end_0080
 21443 0000F7D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21444 0000F7D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21445 0000F7DA 48FFC6                  	inc rsi
 21446 0000F7DD 48FFC2                  	inc rdx
 21447 0000F7E0 EBEA                    	jmp .L_lambda_simple_env_loop_0080
 21448                                  .L_lambda_simple_env_end_0080:
 21449 0000F7E2 5B                      	pop rbx
 21450 0000F7E3 BE00000000              	mov rsi, 0
 21451                                  .L_lambda_simple_params_loop_0080:	; copy params
 21452 0000F7E8 4883FE02                	cmp rsi, 2
 21453 0000F7EC 740E                    	je .L_lambda_simple_params_end_0080
 21454 0000F7EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21455 0000F7F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21456 0000F7F7 48FFC6                  	inc rsi
 21457 0000F7FA EBEC                    	jmp .L_lambda_simple_params_loop_0080
 21458                                  .L_lambda_simple_params_end_0080:
 21459 0000F7FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21460 0000F7FF 4889C3                  	mov rbx, rax
 21461 0000F802 58                      	pop rax
 21462 0000F803 C60004                  	mov byte [rax], T_closure
 21463 0000F806 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21464 0000F80A 48C74009[17F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 21465 0000F812 E986000000              	jmp .L_lambda_simple_end_0080
 21466                                  .L_lambda_simple_code_0080:	; lambda-simple body
 21467 0000F817 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21468 0000F81D 740B                    	je .L_lambda_simple_arity_check_ok_0080
 21469 0000F81F FF742410                	push qword [rsp + 8 * 2]
 21470 0000F823 6A01                    	push 1
 21471 0000F825 E945620000              	jmp L_error_incorrect_arity_simple
 21472                                  .L_lambda_simple_arity_check_ok_0080:
 21473 0000F82A C8000000                	enter 0, 0
 21474                                  	; preparing a tail-call
 21475 0000F82E 488B4520                	mov rax, PARAM(0)	; param x
 21476 0000F832 50                      	push rax
 21477 0000F833 488B4510                	mov rax, ENV
 21478 0000F837 488B00                  	mov rax, qword [rax + 8 * 0]
 21479 0000F83A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21480 0000F83D 50                      	push rax
 21481 0000F83E 6A02                    	push 2	; arg count
 21482 0000F840 488B4510                	mov rax, ENV
 21483 0000F844 488B4008                	mov rax, qword [rax + 8 * 1]
 21484 0000F848 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21485 0000F84B 803804                  	cmp byte [rax], T_closure
 21486 0000F84E 0F85B9610000            	jne L_error_non_closure
 21487 0000F854 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21488 0000F857 FF7508                  	push qword [rbp + 8 * 1]
 21489                                   ; old ret addr
 21490 0000F85A FF7500                  	push qword [rbp]
 21491                                   ; restore the old rbp
 21492 0000F85D BB02000000              	mov rbx, 2
 21493 0000F862 4883C303                	add rbx, 3
 21494 0000F866 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21495 0000F86A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21496 0000F86F 4C8D4DF8                	lea r9, [rbp - 8]
 21497 0000F873 B906000000              	mov rcx, 6
 21498                                  .L_tc_recycle_frame_loop_00b7:
 21499 0000F878 4883F900                	cmp rcx, 0
 21500 0000F87C 7413                    	je .L_tc_recycle_frame_done_00b7
 21501 0000F87E 4D8B11                  	mov r10, qword [r9]
 21502 0000F881 4D8910                  	mov qword [r8], r10
 21503 0000F884 4983E808                	sub r8, 8
 21504 0000F888 4983E908                	sub r9, 8
 21505 0000F88C 48FFC9                  	dec rcx
 21506 0000F88F EBE7                    	jmp .L_tc_recycle_frame_loop_00b7
 21507                                  .L_tc_recycle_frame_done_00b7:
 21508 0000F891 498D6008                	lea rsp, [r8 + 8]
 21509 0000F895 5D                      	pop rbp ; restore the old rbp
 21510 0000F896 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21511 0000F899 C9                      	leave
 21512 0000F89A C21800                  	ret AND_KILL_FRAME(1)
 21513                                  .L_lambda_simple_end_0080:	; new closure is in rax
 21514 0000F89D 803804                  	cmp byte [rax], T_closure
 21515 0000F8A0 0F8567610000            	jne L_error_non_closure
 21516 0000F8A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21517 0000F8A9 FF7508                  	push qword [rbp + 8 * 1]
 21518                                   ; old ret addr
 21519 0000F8AC FF7500                  	push qword [rbp]
 21520                                   ; restore the old rbp
 21521 0000F8AF BB01000000              	mov rbx, 1
 21522 0000F8B4 4883C303                	add rbx, 3
 21523 0000F8B8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21524 0000F8BC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21525 0000F8C1 4C8D4DF8                	lea r9, [rbp - 8]
 21526 0000F8C5 B905000000              	mov rcx, 5
 21527                                  .L_tc_recycle_frame_loop_00b6:
 21528 0000F8CA 4883F900                	cmp rcx, 0
 21529 0000F8CE 7413                    	je .L_tc_recycle_frame_done_00b6
 21530 0000F8D0 4D8B11                  	mov r10, qword [r9]
 21531 0000F8D3 4D8910                  	mov qword [r8], r10
 21532 0000F8D6 4983E808                	sub r8, 8
 21533 0000F8DA 4983E908                	sub r9, 8
 21534 0000F8DE 48FFC9                  	dec rcx
 21535 0000F8E1 EBE7                    	jmp .L_tc_recycle_frame_loop_00b6
 21536                                  .L_tc_recycle_frame_done_00b6:
 21537 0000F8E3 498D6008                	lea rsp, [r8 + 8]
 21538 0000F8E7 5D                      	pop rbp ; restore the old rbp
 21539 0000F8E8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21540 0000F8EB C9                      	leave
 21541 0000F8EC C22000                  	ret 8 * (2 + 2)
 21542                                  .L_lambda_opt_end_0014:	; new closure is in rax
 21543 0000F8EF C9                      	leave
 21544 0000F8F0 C21800                  	ret AND_KILL_FRAME(1)
 21545                                  .L_lambda_simple_end_007f:	; new closure is in rax
 21546 0000F8F3 803804                  	cmp byte [rax], T_closure
 21547 0000F8F6 0F8511610000            	jne L_error_non_closure
 21548 0000F8FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21549 0000F8FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21550 0000F902 48890425[83140000]      	mov qword [free_var_101], rax
 21551 0000F90A 48B8-                   	mov rax, sob_void
 21551 0000F90C [0000000000000000] 
 21552                                  
 21553 0000F914 4889C7                  	mov rdi, rax
 21554 0000F917 E8EF630000              	call print_sexpr_if_not_void
 21555                                  	; preparing a non-tail-call
 21556 0000F91C 488B0425[61140000]      	mov rax, qword [free_var_99]	; free var make-string
 21557 0000F924 803805                  	cmp byte [rax], T_undefined
 21558 0000F927 0F845C600000            	je L_error_fvar_undefined
 21559 0000F92D 50                      	push rax
 21560 0000F92E 6A01                    	push 1	; arg count
 21561 0000F930 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21562 0000F935 E87C610000              	call malloc
 21563 0000F93A 50                      	push rax
 21564 0000F93B BF00000000              	mov rdi, 8 * 0	; new rib
 21565 0000F940 E871610000              	call malloc
 21566 0000F945 50                      	push rax
 21567 0000F946 BF08000000              	mov rdi, 8 * 1	; extended env
 21568 0000F94B E866610000              	call malloc
 21569 0000F950 488B7D10                	mov rdi, ENV
 21570 0000F954 BE00000000              	mov rsi, 0
 21571 0000F959 BA01000000              	mov rdx, 1
 21572                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 21573 0000F95E 4883FE00                	cmp rsi, 0
 21574 0000F962 7410                    	je .L_lambda_simple_env_end_0081
 21575 0000F964 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21576 0000F968 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21577 0000F96C 48FFC6                  	inc rsi
 21578 0000F96F 48FFC2                  	inc rdx
 21579 0000F972 EBEA                    	jmp .L_lambda_simple_env_loop_0081
 21580                                  .L_lambda_simple_env_end_0081:
 21581 0000F974 5B                      	pop rbx
 21582 0000F975 BE00000000              	mov rsi, 0
 21583                                  .L_lambda_simple_params_loop_0081:	; copy params
 21584 0000F97A 4883FE00                	cmp rsi, 0
 21585 0000F97E 740E                    	je .L_lambda_simple_params_end_0081
 21586 0000F980 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21587 0000F985 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21588 0000F989 48FFC6                  	inc rsi
 21589 0000F98C EBEC                    	jmp .L_lambda_simple_params_loop_0081
 21590                                  .L_lambda_simple_params_end_0081:
 21591 0000F98E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21592 0000F991 4889C3                  	mov rbx, rax
 21593 0000F994 58                      	pop rax
 21594 0000F995 C60004                  	mov byte [rax], T_closure
 21595 0000F998 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21596 0000F99C 48C74009[A9F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 21597 0000F9A4 E903040000              	jmp .L_lambda_simple_end_0081
 21598                                  .L_lambda_simple_code_0081:	; lambda-simple body
 21599 0000F9A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21600 0000F9AF 740B                    	je .L_lambda_simple_arity_check_ok_0081
 21601 0000F9B1 FF742410                	push qword [rsp + 8 * 2]
 21602 0000F9B5 6A01                    	push 1
 21603 0000F9B7 E9B3600000              	jmp L_error_incorrect_arity_simple
 21604                                  .L_lambda_simple_arity_check_ok_0081:
 21605 0000F9BC C8000000                	enter 0, 0
 21606 0000F9C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21607 0000F9C5 E8EC600000              	call malloc
 21608 0000F9CA 50                      	push rax
 21609 0000F9CB BF08000000              	mov rdi, 8 * 1	; new rib
 21610 0000F9D0 E8E1600000              	call malloc
 21611 0000F9D5 50                      	push rax
 21612 0000F9D6 BF10000000              	mov rdi, 8 * 2	; extended env
 21613 0000F9DB E8D6600000              	call malloc
 21614 0000F9E0 488B7D10                	mov rdi, ENV
 21615 0000F9E4 4831F6                  	 xor rsi, rsi
 21616 0000F9E7 4831D2                  	 xor rdx, rdx
 21617 0000F9EA 48FFC2                  	inc rdx
 21618                                  .L_lambda_opt_env_loop_0015:	; ext_env[i + 1] <-- env[i]
 21619 0000F9ED 4883FE01                	cmp rsi, 1
 21620 0000F9F1 7410                    	je .L_lambda_opt_env_end_0015
 21621 0000F9F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21622 0000F9F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21623 0000F9FB 48FFC6                  	inc rsi
 21624 0000F9FE 48FFC2                  	inc rdx
 21625 0000FA01 EBEA                    	jmp .L_lambda_opt_env_loop_0015
 21626                                  .L_lambda_opt_env_end_0015:
 21627 0000FA03 5B                      	pop rbx
 21628 0000FA04 4831F6                  	xor rsi, rsi
 21629                                  .L_lambda_opt_params_loop_0015:	; copy params
 21630 0000FA07 4883FE01                	cmp rsi, 1
 21631 0000FA0B 740E                    	je .L_lambda_opt_params_end_0015
 21632 0000FA0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21633 0000FA12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21634 0000FA16 48FFC6                  	inc rsi
 21635 0000FA19 EBEC                    	jmp .L_lambda_opt_params_loop_0015
 21636                                  .L_lambda_opt_params_end_0015:
 21637 0000FA1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21638 0000FA1E 4889C3                  	mov rbx, rax
 21639 0000FA21 58                      	pop rax
 21640 0000FA22 C60004                  	mov byte [rax], T_closure
 21641 0000FA25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21642 0000FA29 48C74009[36FA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 21643 0000FA31 E972030000              	jmp .L_lambda_opt_end_0015
 21644                                  .L_lambda_opt_code_0015:; lambda opt body
 21645 0000FA36 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21646 0000FA3C 7409                    	je .L_lambda_opt_arity_check_exact_0015
 21647 0000FA3E 7F57                    	jg .L_lambda_opt_arity_check_more_0015
 21648 0000FA40 6A01                    	push 1
 21649 0000FA42 E93C600000              	jmp L_error_incorrect_arity_opt
 21650                                  .L_lambda_opt_arity_check_exact_0015:
 21651 0000FA47 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 21652 0000FA4B 4C894C24F8              	mov qword [rsp -8], r9
 21653 0000FA50 4C8B4C2408              	mov r9, qword [rsp +8]
 21654 0000FA55 4C890C24                	mov qword [rsp +8 * 0], r9
 21655 0000FA59 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 21656 0000FA5E 4C89C9                  	mov rcx, r9
 21657 0000FA61 49FFC1                  	inc r9
 21658 0000FA64 4C894C2408              	mov qword [rsp +8], r9
 21659 0000FA69 4889E2                  	mov rdx, rsp
 21660 0000FA6C 4883C218                	add rdx, 24
 21661                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0015:
 21662 0000FA70 4883F900                	cmp rcx, 0
 21663 0000FA74 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0015
 21664 0000FA76 4C8B02                  	mov r8, qword [rdx]
 21665 0000FA79 4C8942F8                	mov qword [rdx - 8], r8
 21666 0000FA7D 4883C208                	add rdx, 8
 21667 0000FA81 48FFC9                  	dec rcx
 21668 0000FA84 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0015
 21669                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0015:
 21670 0000FA86 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 21671 0000FA8E 4883EC08                	sub rsp, 8
 21672 0000FA92 E984000000              	jmp .L_lambda_opt_stack_adjusted_0015
 21673                                  .L_lambda_opt_arity_check_more_0015:
 21674 0000FA97 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21675 0000FA9C 4D89C4                  	mov r12, r8
 21676 0000FA9F 4C89C1                  	mov rcx, r8
 21677 0000FAA2 4D8D5002                	lea r10, [r8 + 2] 
 21678 0000FAA6 4883E901                	sub rcx, 1
 21679 0000FAAA 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 21680 0000FAAF 49B9-                   	mov r9, sob_nil
 21680 0000FAB1 [0100000000000000] 
 21681                                  .L_lambda_opt_create_list_of_opt_params_0015:
 21682 0000FAB9 4883F900                	cmp rcx, 0
 21683 0000FABD 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0015
 21684 0000FABF BF11000000              	mov rdi, 17
 21685 0000FAC4 E8ED5F0000              	call malloc
 21686 0000FAC9 C60021                  	mov byte [rax], T_pair
 21687 0000FACC 498B1B                  	mov rbx, qword [r11]
 21688 0000FACF 48895801                	mov qword [rax +1], rbx
 21689 0000FAD3 4C894809                	mov qword [rax + 1 + 8], r9
 21690 0000FAD7 4989C1                  	mov r9, rax
 21691 0000FADA 48FFC9                  	dec rcx
 21692 0000FADD 4983EB08                	sub r11, 8
 21693 0000FAE1 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0015
 21694                                  .L_lambda_opt_create_list_of_opt_params_end_0015:
 21695 0000FAE3 4C8D442420              	lea r8, [rsp + 1*8 + 8*3]
 21696 0000FAE8 4D8908                  	mov qword [r8], r9
 21697 0000FAEB 4E8D14D500000000        	lea r10, [8 * r10]
 21698 0000FAF3 4901E2                  	add r10, rsp
 21699 0000FAF6 B905000000              	mov rcx, 4 + 1
 21700                                  .L_lambda_opt_stack_shrink_loop_0015:
 21701 0000FAFB 4883F900                	cmp rcx, 0
 21702 0000FAFF 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0015
 21703 0000FB01 4D8B18                  	mov r11, qword [r8]
 21704 0000FB04 4D891A                  	mov qword [r10], r11
 21705 0000FB07 4983E808                	sub r8, 8
 21706 0000FB0B 4983EA08                	sub r10, 8
 21707 0000FB0F 48FFC9                  	dec rcx
 21708 0000FB12 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21709                                  .L_lambda_opt_stack_shrink_loop_exit_0015:
 21710 0000FB14 4983C208                	add r10, 8
 21711 0000FB18 4C89D4                  	mov rsp, r10
 21712                                  .L_lambda_opt_stack_adjusted_0015:;continue with the code, the stack is ok
 21713 0000FB1B 48C744241002000000      	mov qword [rsp + 8*2], 2
 21714 0000FB24 C8000000                	enter 0, 0
 21715                                  	; preparing a tail-call
 21716                                  	; preparing a non-tail-call
 21717 0000FB28 488B4528                	mov rax, PARAM(1)	; param chs
 21718 0000FB2C 50                      	push rax
 21719 0000FB2D 6A01                    	push 1	; arg count
 21720 0000FB2F 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 21721 0000FB37 803805                  	cmp byte [rax], T_undefined
 21722 0000FB3A 0F84495E0000            	je L_error_fvar_undefined
 21723 0000FB40 803804                  	cmp byte [rax], T_closure
 21724 0000FB43 0F85C45E0000            	jne L_error_non_closure
 21725 0000FB49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21726 0000FB4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21727 0000FB4F 483D[02000000]          	cmp rax, sob_boolean_false
 21728 0000FB55 740F                    	je .L_if_else_0066
 21729 0000FB57 48B8-                   	mov rax, L_constants + 4
 21729 0000FB59 [0400000000000000] 
 21730 0000FB61 E9EE000000              	jmp .L_if_end_0066
 21731                                  .L_if_else_0066:
 21732                                  	; preparing a non-tail-call
 21733 0000FB66 488B4528                	mov rax, PARAM(1)	; param chs
 21734 0000FB6A 50                      	push rax
 21735 0000FB6B 6A01                    	push 1	; arg count
 21736 0000FB6D 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
 21737 0000FB75 803805                  	cmp byte [rax], T_undefined
 21738 0000FB78 0F840B5E0000            	je L_error_fvar_undefined
 21739 0000FB7E 803804                  	cmp byte [rax], T_closure
 21740 0000FB81 0F85865E0000            	jne L_error_non_closure
 21741 0000FB87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21742 0000FB8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21743 0000FB8D 483D[02000000]          	cmp rax, sob_boolean_false
 21744 0000FB93 744C                    	je .L_if_else_0064
 21745                                  	; preparing a non-tail-call
 21746                                  	; preparing a non-tail-call
 21747 0000FB95 488B4528                	mov rax, PARAM(1)	; param chs
 21748 0000FB99 50                      	push rax
 21749 0000FB9A 6A01                    	push 1	; arg count
 21750 0000FB9C 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 21751 0000FBA4 803805                  	cmp byte [rax], T_undefined
 21752 0000FBA7 0F84DC5D0000            	je L_error_fvar_undefined
 21753 0000FBAD 803804                  	cmp byte [rax], T_closure
 21754 0000FBB0 0F85575E0000            	jne L_error_non_closure
 21755 0000FBB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21756 0000FBB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21757 0000FBBC 50                      	push rax
 21758 0000FBBD 6A01                    	push 1	; arg count
 21759 0000FBBF 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 21760 0000FBC7 803805                  	cmp byte [rax], T_undefined
 21761 0000FBCA 0F84B95D0000            	je L_error_fvar_undefined
 21762 0000FBD0 803804                  	cmp byte [rax], T_closure
 21763 0000FBD3 0F85345E0000            	jne L_error_non_closure
 21764 0000FBD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21765 0000FBDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 21766 0000FBDF EB0A                    	jmp .L_if_end_0064
 21767                                  .L_if_else_0064:
 21768 0000FBE1 48B8-                   	mov rax, L_constants + 2
 21768 0000FBE3 [0200000000000000] 
 21769                                  .L_if_end_0064:
 21770 0000FBEB 483D[02000000]          	cmp rax, sob_boolean_false
 21771 0000FBF1 7429                    	je .L_if_else_0065
 21772                                  	; preparing a non-tail-call
 21773 0000FBF3 488B4528                	mov rax, PARAM(1)	; param chs
 21774 0000FBF7 50                      	push rax
 21775 0000FBF8 6A01                    	push 1	; arg count
 21776 0000FBFA 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 21777 0000FC02 803805                  	cmp byte [rax], T_undefined
 21778 0000FC05 0F847E5D0000            	je L_error_fvar_undefined
 21779 0000FC0B 803804                  	cmp byte [rax], T_closure
 21780 0000FC0E 0F85F95D0000            	jne L_error_non_closure
 21781 0000FC14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21782 0000FC17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21783 0000FC1A EB38                    	jmp .L_if_end_0065
 21784                                  .L_if_else_0065:
 21785                                  	; preparing a non-tail-call
 21786 0000FC1C 48B8-                   	mov rax, L_constants + 3016
 21786 0000FC1E [C80B000000000000] 
 21787 0000FC26 50                      	push rax
 21788 0000FC27 48B8-                   	mov rax, L_constants + 3007
 21788 0000FC29 [BF0B000000000000] 
 21789 0000FC31 50                      	push rax
 21790 0000FC32 6A02                    	push 2	; arg count
 21791 0000FC34 488B0425[40130000]      	mov rax, qword [free_var_82]	; free var error
 21792 0000FC3C 803805                  	cmp byte [rax], T_undefined
 21793 0000FC3F 0F84445D0000            	je L_error_fvar_undefined
 21794 0000FC45 803804                  	cmp byte [rax], T_closure
 21795 0000FC48 0F85BF5D0000            	jne L_error_non_closure
 21796 0000FC4E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21797 0000FC51 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21798                                  .L_if_end_0065:
 21799                                  .L_if_end_0066:
 21800 0000FC54 50                      	push rax
 21801 0000FC55 6A01                    	push 1	; arg count
 21802 0000FC57 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21803 0000FC5C E8555E0000              	call malloc
 21804 0000FC61 50                      	push rax
 21805 0000FC62 BF10000000              	mov rdi, 8 * 2	; new rib
 21806 0000FC67 E84A5E0000              	call malloc
 21807 0000FC6C 50                      	push rax
 21808 0000FC6D BF18000000              	mov rdi, 8 * 3	; extended env
 21809 0000FC72 E83F5E0000              	call malloc
 21810 0000FC77 488B7D10                	mov rdi, ENV
 21811 0000FC7B BE00000000              	mov rsi, 0
 21812 0000FC80 BA01000000              	mov rdx, 1
 21813                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 21814 0000FC85 4883FE02                	cmp rsi, 2
 21815 0000FC89 7410                    	je .L_lambda_simple_env_end_0082
 21816 0000FC8B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21817 0000FC8F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21818 0000FC93 48FFC6                  	inc rsi
 21819 0000FC96 48FFC2                  	inc rdx
 21820 0000FC99 EBEA                    	jmp .L_lambda_simple_env_loop_0082
 21821                                  .L_lambda_simple_env_end_0082:
 21822 0000FC9B 5B                      	pop rbx
 21823 0000FC9C BE00000000              	mov rsi, 0
 21824                                  .L_lambda_simple_params_loop_0082:	; copy params
 21825 0000FCA1 4883FE02                	cmp rsi, 2
 21826 0000FCA5 740E                    	je .L_lambda_simple_params_end_0082
 21827 0000FCA7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21828 0000FCAC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21829 0000FCB0 48FFC6                  	inc rsi
 21830 0000FCB3 EBEC                    	jmp .L_lambda_simple_params_loop_0082
 21831                                  .L_lambda_simple_params_end_0082:
 21832 0000FCB5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21833 0000FCB8 4889C3                  	mov rbx, rax
 21834 0000FCBB 58                      	pop rax
 21835 0000FCBC C60004                  	mov byte [rax], T_closure
 21836 0000FCBF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21837 0000FCC3 48C74009[D0FC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 21838 0000FCCB E986000000              	jmp .L_lambda_simple_end_0082
 21839                                  .L_lambda_simple_code_0082:	; lambda-simple body
 21840 0000FCD0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21841 0000FCD6 740B                    	je .L_lambda_simple_arity_check_ok_0082
 21842 0000FCD8 FF742410                	push qword [rsp + 8 * 2]
 21843 0000FCDC 6A01                    	push 1
 21844 0000FCDE E98C5D0000              	jmp L_error_incorrect_arity_simple
 21845                                  .L_lambda_simple_arity_check_ok_0082:
 21846 0000FCE3 C8000000                	enter 0, 0
 21847                                  	; preparing a tail-call
 21848 0000FCE7 488B4520                	mov rax, PARAM(0)	; param ch
 21849 0000FCEB 50                      	push rax
 21850 0000FCEC 488B4510                	mov rax, ENV
 21851 0000FCF0 488B00                  	mov rax, qword [rax + 8 * 0]
 21852 0000FCF3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21853 0000FCF6 50                      	push rax
 21854 0000FCF7 6A02                    	push 2	; arg count
 21855 0000FCF9 488B4510                	mov rax, ENV
 21856 0000FCFD 488B4008                	mov rax, qword [rax + 8 * 1]
 21857 0000FD01 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 21858 0000FD04 803804                  	cmp byte [rax], T_closure
 21859 0000FD07 0F85005D0000            	jne L_error_non_closure
 21860 0000FD0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21861 0000FD10 FF7508                  	push qword [rbp + 8 * 1]
 21862                                   ; old ret addr
 21863 0000FD13 FF7500                  	push qword [rbp]
 21864                                   ; restore the old rbp
 21865 0000FD16 BB02000000              	mov rbx, 2
 21866 0000FD1B 4883C303                	add rbx, 3
 21867 0000FD1F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21868 0000FD23 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21869 0000FD28 4C8D4DF8                	lea r9, [rbp - 8]
 21870 0000FD2C B906000000              	mov rcx, 6
 21871                                  .L_tc_recycle_frame_loop_00b9:
 21872 0000FD31 4883F900                	cmp rcx, 0
 21873 0000FD35 7413                    	je .L_tc_recycle_frame_done_00b9
 21874 0000FD37 4D8B11                  	mov r10, qword [r9]
 21875 0000FD3A 4D8910                  	mov qword [r8], r10
 21876 0000FD3D 4983E808                	sub r8, 8
 21877 0000FD41 4983E908                	sub r9, 8
 21878 0000FD45 48FFC9                  	dec rcx
 21879 0000FD48 EBE7                    	jmp .L_tc_recycle_frame_loop_00b9
 21880                                  .L_tc_recycle_frame_done_00b9:
 21881 0000FD4A 498D6008                	lea rsp, [r8 + 8]
 21882 0000FD4E 5D                      	pop rbp ; restore the old rbp
 21883 0000FD4F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21884 0000FD52 C9                      	leave
 21885 0000FD53 C21800                  	ret AND_KILL_FRAME(1)
 21886                                  .L_lambda_simple_end_0082:	; new closure is in rax
 21887 0000FD56 803804                  	cmp byte [rax], T_closure
 21888 0000FD59 0F85AE5C0000            	jne L_error_non_closure
 21889 0000FD5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21890 0000FD62 FF7508                  	push qword [rbp + 8 * 1]
 21891                                   ; old ret addr
 21892 0000FD65 FF7500                  	push qword [rbp]
 21893                                   ; restore the old rbp
 21894 0000FD68 BB01000000              	mov rbx, 1
 21895 0000FD6D 4883C303                	add rbx, 3
 21896 0000FD71 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 21897 0000FD75 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 21898 0000FD7A 4C8D4DF8                	lea r9, [rbp - 8]
 21899 0000FD7E B905000000              	mov rcx, 5
 21900                                  .L_tc_recycle_frame_loop_00b8:
 21901 0000FD83 4883F900                	cmp rcx, 0
 21902 0000FD87 7413                    	je .L_tc_recycle_frame_done_00b8
 21903 0000FD89 4D8B11                  	mov r10, qword [r9]
 21904 0000FD8C 4D8910                  	mov qword [r8], r10
 21905 0000FD8F 4983E808                	sub r8, 8
 21906 0000FD93 4983E908                	sub r9, 8
 21907 0000FD97 48FFC9                  	dec rcx
 21908 0000FD9A EBE7                    	jmp .L_tc_recycle_frame_loop_00b8
 21909                                  .L_tc_recycle_frame_done_00b8:
 21910 0000FD9C 498D6008                	lea rsp, [r8 + 8]
 21911 0000FDA0 5D                      	pop rbp ; restore the old rbp
 21912 0000FDA1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21913 0000FDA4 C9                      	leave
 21914 0000FDA5 C22000                  	ret 8 * (2 + 2)
 21915                                  .L_lambda_opt_end_0015:	; new closure is in rax
 21916 0000FDA8 C9                      	leave
 21917 0000FDA9 C21800                  	ret AND_KILL_FRAME(1)
 21918                                  .L_lambda_simple_end_0081:	; new closure is in rax
 21919 0000FDAC 803804                  	cmp byte [rax], T_closure
 21920 0000FDAF 0F85585C0000            	jne L_error_non_closure
 21921 0000FDB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21922 0000FDB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21923 0000FDBB 48890425[61140000]      	mov qword [free_var_99], rax
 21924 0000FDC3 48B8-                   	mov rax, sob_void
 21924 0000FDC5 [0000000000000000] 
 21925                                  
 21926 0000FDCD 4889C7                  	mov rdi, rax
 21927 0000FDD0 E8365F0000              	call print_sexpr_if_not_void
 21928                                  	; preparing a non-tail-call
 21929 0000FDD5 48B8-                   	mov rax, L_constants + 1993
 21929 0000FDD7 [C907000000000000] 
 21930 0000FDDF 50                      	push rax
 21931 0000FDE0 6A01                    	push 1	; arg count
 21932 0000FDE2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21933 0000FDE7 E8CA5C0000              	call malloc
 21934 0000FDEC 50                      	push rax
 21935 0000FDED BF00000000              	mov rdi, 8 * 0	; new rib
 21936 0000FDF2 E8BF5C0000              	call malloc
 21937 0000FDF7 50                      	push rax
 21938 0000FDF8 BF08000000              	mov rdi, 8 * 1	; extended env
 21939 0000FDFD E8B45C0000              	call malloc
 21940 0000FE02 488B7D10                	mov rdi, ENV
 21941 0000FE06 BE00000000              	mov rsi, 0
 21942 0000FE0B BA01000000              	mov rdx, 1
 21943                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 21944 0000FE10 4883FE00                	cmp rsi, 0
 21945 0000FE14 7410                    	je .L_lambda_simple_env_end_0083
 21946 0000FE16 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21947 0000FE1A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21948 0000FE1E 48FFC6                  	inc rsi
 21949 0000FE21 48FFC2                  	inc rdx
 21950 0000FE24 EBEA                    	jmp .L_lambda_simple_env_loop_0083
 21951                                  .L_lambda_simple_env_end_0083:
 21952 0000FE26 5B                      	pop rbx
 21953 0000FE27 BE00000000              	mov rsi, 0
 21954                                  .L_lambda_simple_params_loop_0083:	; copy params
 21955 0000FE2C 4883FE00                	cmp rsi, 0
 21956 0000FE30 740E                    	je .L_lambda_simple_params_end_0083
 21957 0000FE32 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21958 0000FE37 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21959 0000FE3B 48FFC6                  	inc rsi
 21960 0000FE3E EBEC                    	jmp .L_lambda_simple_params_loop_0083
 21961                                  .L_lambda_simple_params_end_0083:
 21962 0000FE40 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21963 0000FE43 4889C3                  	mov rbx, rax
 21964 0000FE46 58                      	pop rax
 21965 0000FE47 C60004                  	mov byte [rax], T_closure
 21966 0000FE4A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21967 0000FE4E 48C74009[5BFE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 21968 0000FE56 E948040000              	jmp .L_lambda_simple_end_0083
 21969                                  .L_lambda_simple_code_0083:	; lambda-simple body
 21970 0000FE5B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21971 0000FE61 740B                    	je .L_lambda_simple_arity_check_ok_0083
 21972 0000FE63 FF742410                	push qword [rsp + 8 * 2]
 21973 0000FE67 6A01                    	push 1
 21974 0000FE69 E9015C0000              	jmp L_error_incorrect_arity_simple
 21975                                  .L_lambda_simple_arity_check_ok_0083:
 21976 0000FE6E C8000000                	enter 0, 0
 21977 0000FE72 BF08000000              	mov rdi, 8*1
 21978 0000FE77 E83A5C0000              	call malloc
 21979 0000FE7C 488B5D20                	mov rbx, PARAM(0)
 21980 0000FE80 488918                  	mov qword [rax], rbx
 21981 0000FE83 48894520                	mov PARAM(0), rax
 21982 0000FE87 48B8-                   	mov rax, sob_void
 21982 0000FE89 [0000000000000000] 
 21983                                  
 21984 0000FE91 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21985 0000FE96 E81B5C0000              	call malloc
 21986 0000FE9B 50                      	push rax
 21987 0000FE9C BF08000000              	mov rdi, 8 * 1	; new rib
 21988 0000FEA1 E8105C0000              	call malloc
 21989 0000FEA6 50                      	push rax
 21990 0000FEA7 BF10000000              	mov rdi, 8 * 2	; extended env
 21991 0000FEAC E8055C0000              	call malloc
 21992 0000FEB1 488B7D10                	mov rdi, ENV
 21993 0000FEB5 BE00000000              	mov rsi, 0
 21994 0000FEBA BA01000000              	mov rdx, 1
 21995                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 21996 0000FEBF 4883FE01                	cmp rsi, 1
 21997 0000FEC3 7410                    	je .L_lambda_simple_env_end_0084
 21998 0000FEC5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21999 0000FEC9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22000 0000FECD 48FFC6                  	inc rsi
 22001 0000FED0 48FFC2                  	inc rdx
 22002 0000FED3 EBEA                    	jmp .L_lambda_simple_env_loop_0084
 22003                                  .L_lambda_simple_env_end_0084:
 22004 0000FED5 5B                      	pop rbx
 22005 0000FED6 BE00000000              	mov rsi, 0
 22006                                  .L_lambda_simple_params_loop_0084:	; copy params
 22007 0000FEDB 4883FE01                	cmp rsi, 1
 22008 0000FEDF 740E                    	je .L_lambda_simple_params_end_0084
 22009 0000FEE1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22010 0000FEE6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22011 0000FEEA 48FFC6                  	inc rsi
 22012 0000FEED EBEC                    	jmp .L_lambda_simple_params_loop_0084
 22013                                  .L_lambda_simple_params_end_0084:
 22014 0000FEEF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22015 0000FEF2 4889C3                  	mov rbx, rax
 22016 0000FEF5 58                      	pop rax
 22017 0000FEF6 C60004                  	mov byte [rax], T_closure
 22018 0000FEF9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22019 0000FEFD 48C74009[0AFF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 22020 0000FF05 E983020000              	jmp .L_lambda_simple_end_0084
 22021                                  .L_lambda_simple_code_0084:	; lambda-simple body
 22022 0000FF0A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22023 0000FF10 740B                    	je .L_lambda_simple_arity_check_ok_0084
 22024 0000FF12 FF742410                	push qword [rsp + 8 * 2]
 22025 0000FF16 6A02                    	push 2
 22026 0000FF18 E9525B0000              	jmp L_error_incorrect_arity_simple
 22027                                  .L_lambda_simple_arity_check_ok_0084:
 22028 0000FF1D C8000000                	enter 0, 0
 22029                                  	; preparing a non-tail-call
 22030 0000FF21 488B4520                	mov rax, PARAM(0)	; param s
 22031 0000FF25 50                      	push rax
 22032 0000FF26 6A01                    	push 1	; arg count
 22033 0000FF28 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 22034 0000FF30 803805                  	cmp byte [rax], T_undefined
 22035 0000FF33 0F84505A0000            	je L_error_fvar_undefined
 22036 0000FF39 803804                  	cmp byte [rax], T_closure
 22037 0000FF3C 0F85CB5A0000            	jne L_error_non_closure
 22038 0000FF42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22039 0000FF45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22040 0000FF48 483D[02000000]          	cmp rax, sob_boolean_false
 22041 0000FF4E 7476                    	je .L_if_else_0067
 22042                                  	; preparing a tail-call
 22043 0000FF50 48B8-                   	mov rax, L_constants + 0
 22043 0000FF52 [0000000000000000] 
 22044 0000FF5A 50                      	push rax
 22045 0000FF5B 488B4528                	mov rax, PARAM(1)	; param i
 22046 0000FF5F 50                      	push rax
 22047 0000FF60 6A02                    	push 2	; arg count
 22048 0000FF62 488B0425[83140000]      	mov rax, qword [free_var_101]	; free var make-vector
 22049 0000FF6A 803805                  	cmp byte [rax], T_undefined
 22050 0000FF6D 0F84165A0000            	je L_error_fvar_undefined
 22051 0000FF73 803804                  	cmp byte [rax], T_closure
 22052 0000FF76 0F85915A0000            	jne L_error_non_closure
 22053 0000FF7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22054 0000FF7F FF7508                  	push qword [rbp + 8 * 1]
 22055                                   ; old ret addr
 22056 0000FF82 FF7500                  	push qword [rbp]
 22057                                   ; restore the old rbp
 22058 0000FF85 BB02000000              	mov rbx, 2
 22059 0000FF8A 4883C303                	add rbx, 3
 22060 0000FF8E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22061 0000FF92 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22062 0000FF97 4C8D4DF8                	lea r9, [rbp - 8]
 22063 0000FF9B B906000000              	mov rcx, 6
 22064                                  .L_tc_recycle_frame_loop_00ba:
 22065 0000FFA0 4883F900                	cmp rcx, 0
 22066 0000FFA4 7413                    	je .L_tc_recycle_frame_done_00ba
 22067 0000FFA6 4D8B11                  	mov r10, qword [r9]
 22068 0000FFA9 4D8910                  	mov qword [r8], r10
 22069 0000FFAC 4983E808                	sub r8, 8
 22070 0000FFB0 4983E908                	sub r9, 8
 22071 0000FFB4 48FFC9                  	dec rcx
 22072 0000FFB7 EBE7                    	jmp .L_tc_recycle_frame_loop_00ba
 22073                                  .L_tc_recycle_frame_done_00ba:
 22074 0000FFB9 498D6008                	lea rsp, [r8 + 8]
 22075 0000FFBD 5D                      	pop rbp ; restore the old rbp
 22076 0000FFBE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22077 0000FFC1 E9C3010000              	jmp .L_if_end_0067
 22078                                  .L_if_else_0067:
 22079                                  	; preparing a tail-call
 22080                                  	; preparing a non-tail-call
 22081                                  	; preparing a non-tail-call
 22082 0000FFC6 48B8-                   	mov rax, L_constants + 2270
 22082 0000FFC8 [DE08000000000000] 
 22083 0000FFD0 50                      	push rax
 22084 0000FFD1 488B4528                	mov rax, PARAM(1)	; param i
 22085 0000FFD5 50                      	push rax
 22086 0000FFD6 6A02                    	push 2	; arg count
 22087 0000FFD8 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 22088 0000FFE0 803805                  	cmp byte [rax], T_undefined
 22089 0000FFE3 0F84A0590000            	je L_error_fvar_undefined
 22090 0000FFE9 803804                  	cmp byte [rax], T_closure
 22091 0000FFEC 0F851B5A0000            	jne L_error_non_closure
 22092 0000FFF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22093 0000FFF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22094 0000FFF8 50                      	push rax
 22095                                  	; preparing a non-tail-call
 22096 0000FFF9 488B4520                	mov rax, PARAM(0)	; param s
 22097 0000FFFD 50                      	push rax
 22098 0000FFFE 6A01                    	push 1	; arg count
 22099 00010000 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 22100 00010008 803805                  	cmp byte [rax], T_undefined
 22101 0001000B 0F8478590000            	je L_error_fvar_undefined
 22102 00010011 803804                  	cmp byte [rax], T_closure
 22103 00010014 0F85F3590000            	jne L_error_non_closure
 22104 0001001A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22105 0001001D FF5009                  	call SOB_CLOSURE_CODE(rax)
 22106 00010020 50                      	push rax
 22107 00010021 6A02                    	push 2	; arg count
 22108 00010023 488B4510                	mov rax, ENV
 22109 00010027 488B00                  	mov rax, qword [rax + 8 * 0]
 22110 0001002A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22111 0001002D 488B00                  	mov rax, qword [rax]
 22112 00010030 803804                  	cmp byte [rax], T_closure
 22113 00010033 0F85D4590000            	jne L_error_non_closure
 22114 00010039 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22115 0001003C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22116 0001003F 50                      	push rax
 22117 00010040 6A01                    	push 1	; arg count
 22118 00010042 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22119 00010047 E86A5A0000              	call malloc
 22120 0001004C 50                      	push rax
 22121 0001004D BF10000000              	mov rdi, 8 * 2	; new rib
 22122 00010052 E85F5A0000              	call malloc
 22123 00010057 50                      	push rax
 22124 00010058 BF18000000              	mov rdi, 8 * 3	; extended env
 22125 0001005D E8545A0000              	call malloc
 22126 00010062 488B7D10                	mov rdi, ENV
 22127 00010066 BE00000000              	mov rsi, 0
 22128 0001006B BA01000000              	mov rdx, 1
 22129                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 22130 00010070 4883FE02                	cmp rsi, 2
 22131 00010074 7410                    	je .L_lambda_simple_env_end_0085
 22132 00010076 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22133 0001007A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22134 0001007E 48FFC6                  	inc rsi
 22135 00010081 48FFC2                  	inc rdx
 22136 00010084 EBEA                    	jmp .L_lambda_simple_env_loop_0085
 22137                                  .L_lambda_simple_env_end_0085:
 22138 00010086 5B                      	pop rbx
 22139 00010087 BE00000000              	mov rsi, 0
 22140                                  .L_lambda_simple_params_loop_0085:	; copy params
 22141 0001008C 4883FE02                	cmp rsi, 2
 22142 00010090 740E                    	je .L_lambda_simple_params_end_0085
 22143 00010092 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22144 00010097 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22145 0001009B 48FFC6                  	inc rsi
 22146 0001009E EBEC                    	jmp .L_lambda_simple_params_loop_0085
 22147                                  .L_lambda_simple_params_end_0085:
 22148 000100A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22149 000100A3 4889C3                  	mov rbx, rax
 22150 000100A6 58                      	pop rax
 22151 000100A7 C60004                  	mov byte [rax], T_closure
 22152 000100AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22153 000100AE 48C74009[BB000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 22154 000100B6 E980000000              	jmp .L_lambda_simple_end_0085
 22155                                  .L_lambda_simple_code_0085:	; lambda-simple body
 22156 000100BB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22157 000100C1 740B                    	je .L_lambda_simple_arity_check_ok_0085
 22158 000100C3 FF742410                	push qword [rsp + 8 * 2]
 22159 000100C7 6A01                    	push 1
 22160 000100C9 E9A1590000              	jmp L_error_incorrect_arity_simple
 22161                                  .L_lambda_simple_arity_check_ok_0085:
 22162 000100CE C8000000                	enter 0, 0
 22163                                  	; preparing a non-tail-call
 22164                                  	; preparing a non-tail-call
 22165 000100D2 488B4510                	mov rax, ENV
 22166 000100D6 488B00                  	mov rax, qword [rax + 8 * 0]
 22167 000100D9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22168 000100DC 50                      	push rax
 22169 000100DD 6A01                    	push 1	; arg count
 22170 000100DF 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 22171 000100E7 803805                  	cmp byte [rax], T_undefined
 22172 000100EA 0F8499580000            	je L_error_fvar_undefined
 22173 000100F0 803804                  	cmp byte [rax], T_closure
 22174 000100F3 0F8514590000            	jne L_error_non_closure
 22175 000100F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22176 000100FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22177 000100FF 50                      	push rax
 22178 00010100 488B4510                	mov rax, ENV
 22179 00010104 488B00                  	mov rax, qword [rax + 8 * 0]
 22180 00010107 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22181 0001010B 50                      	push rax
 22182 0001010C 488B4520                	mov rax, PARAM(0)	; param v
 22183 00010110 50                      	push rax
 22184 00010111 6A03                    	push 3	; arg count
 22185 00010113 488B0425[91170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 22186 0001011B 803805                  	cmp byte [rax], T_undefined
 22187 0001011E 0F8465580000            	je L_error_fvar_undefined
 22188 00010124 803804                  	cmp byte [rax], T_closure
 22189 00010127 0F85E0580000            	jne L_error_non_closure
 22190 0001012D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22191 00010130 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22192                                  
 22193 00010133 488B4520                	mov rax, PARAM(0)	; param v
 22194 00010137 C9                      	leave
 22195 00010138 C21800                  	ret AND_KILL_FRAME(1)
 22196                                  .L_lambda_simple_end_0085:	; new closure is in rax
 22197 0001013B 803804                  	cmp byte [rax], T_closure
 22198 0001013E 0F85C9580000            	jne L_error_non_closure
 22199 00010144 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22200 00010147 FF7508                  	push qword [rbp + 8 * 1]
 22201                                   ; old ret addr
 22202 0001014A FF7500                  	push qword [rbp]
 22203                                   ; restore the old rbp
 22204 0001014D BB01000000              	mov rbx, 1
 22205 00010152 4883C303                	add rbx, 3
 22206 00010156 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22207 0001015A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22208 0001015F 4C8D4DF8                	lea r9, [rbp - 8]
 22209 00010163 B905000000              	mov rcx, 5
 22210                                  .L_tc_recycle_frame_loop_00bb:
 22211 00010168 4883F900                	cmp rcx, 0
 22212 0001016C 7413                    	je .L_tc_recycle_frame_done_00bb
 22213 0001016E 4D8B11                  	mov r10, qword [r9]
 22214 00010171 4D8910                  	mov qword [r8], r10
 22215 00010174 4983E808                	sub r8, 8
 22216 00010178 4983E908                	sub r9, 8
 22217 0001017C 48FFC9                  	dec rcx
 22218 0001017F EBE7                    	jmp .L_tc_recycle_frame_loop_00bb
 22219                                  .L_tc_recycle_frame_done_00bb:
 22220 00010181 498D6008                	lea rsp, [r8 + 8]
 22221 00010185 5D                      	pop rbp ; restore the old rbp
 22222 00010186 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22223                                  .L_if_end_0067:
 22224 00010189 C9                      	leave
 22225 0001018A C22000                  	ret AND_KILL_FRAME(2)
 22226                                  .L_lambda_simple_end_0084:	; new closure is in rax
 22227 0001018D 50                      	push rax
 22228 0001018E 488B4520                	mov rax, PARAM(0)	; param run
 22229 00010192 8F00                    	pop qword [rax]
 22230 00010194 48B8-                   	mov rax, sob_void
 22230 00010196 [0000000000000000] 
 22231                                  
 22232 0001019E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22233 000101A3 E80E590000              	call malloc
 22234 000101A8 50                      	push rax
 22235 000101A9 BF08000000              	mov rdi, 8 * 1	; new rib
 22236 000101AE E803590000              	call malloc
 22237 000101B3 50                      	push rax
 22238 000101B4 BF10000000              	mov rdi, 8 * 2	; extended env
 22239 000101B9 E8F8580000              	call malloc
 22240 000101BE 488B7D10                	mov rdi, ENV
 22241 000101C2 BE00000000              	mov rsi, 0
 22242 000101C7 BA01000000              	mov rdx, 1
 22243                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 22244 000101CC 4883FE01                	cmp rsi, 1
 22245 000101D0 7410                    	je .L_lambda_simple_env_end_0086
 22246 000101D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22247 000101D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22248 000101DA 48FFC6                  	inc rsi
 22249 000101DD 48FFC2                  	inc rdx
 22250 000101E0 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 22251                                  .L_lambda_simple_env_end_0086:
 22252 000101E2 5B                      	pop rbx
 22253 000101E3 BE00000000              	mov rsi, 0
 22254                                  .L_lambda_simple_params_loop_0086:	; copy params
 22255 000101E8 4883FE01                	cmp rsi, 1
 22256 000101EC 740E                    	je .L_lambda_simple_params_end_0086
 22257 000101EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22258 000101F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22259 000101F7 48FFC6                  	inc rsi
 22260 000101FA EBEC                    	jmp .L_lambda_simple_params_loop_0086
 22261                                  .L_lambda_simple_params_end_0086:
 22262 000101FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22263 000101FF 4889C3                  	mov rbx, rax
 22264 00010202 58                      	pop rax
 22265 00010203 C60004                  	mov byte [rax], T_closure
 22266 00010206 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22267 0001020A 48C74009[17020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 22268 00010212 E988000000              	jmp .L_lambda_simple_end_0086
 22269                                  .L_lambda_simple_code_0086:	; lambda-simple body
 22270 00010217 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22271 0001021D 740B                    	je .L_lambda_simple_arity_check_ok_0086
 22272 0001021F FF742410                	push qword [rsp + 8 * 2]
 22273 00010223 6A01                    	push 1
 22274 00010225 E945580000              	jmp L_error_incorrect_arity_simple
 22275                                  .L_lambda_simple_arity_check_ok_0086:
 22276 0001022A C8000000                	enter 0, 0
 22277                                  	; preparing a tail-call
 22278 0001022E 48B8-                   	mov rax, L_constants + 2135
 22278 00010230 [5708000000000000] 
 22279 00010238 50                      	push rax
 22280 00010239 488B4520                	mov rax, PARAM(0)	; param s
 22281 0001023D 50                      	push rax
 22282 0001023E 6A02                    	push 2	; arg count
 22283 00010240 488B4510                	mov rax, ENV
 22284 00010244 488B00                  	mov rax, qword [rax + 8 * 0]
 22285 00010247 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22286 0001024A 488B00                  	mov rax, qword [rax]
 22287 0001024D 803804                  	cmp byte [rax], T_closure
 22288 00010250 0F85B7570000            	jne L_error_non_closure
 22289 00010256 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22290 00010259 FF7508                  	push qword [rbp + 8 * 1]
 22291                                   ; old ret addr
 22292 0001025C FF7500                  	push qword [rbp]
 22293                                   ; restore the old rbp
 22294 0001025F BB02000000              	mov rbx, 2
 22295 00010264 4883C303                	add rbx, 3
 22296 00010268 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22297 0001026C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22298 00010271 4C8D4DF8                	lea r9, [rbp - 8]
 22299 00010275 B906000000              	mov rcx, 6
 22300                                  .L_tc_recycle_frame_loop_00bc:
 22301 0001027A 4883F900                	cmp rcx, 0
 22302 0001027E 7413                    	je .L_tc_recycle_frame_done_00bc
 22303 00010280 4D8B11                  	mov r10, qword [r9]
 22304 00010283 4D8910                  	mov qword [r8], r10
 22305 00010286 4983E808                	sub r8, 8
 22306 0001028A 4983E908                	sub r9, 8
 22307 0001028E 48FFC9                  	dec rcx
 22308 00010291 EBE7                    	jmp .L_tc_recycle_frame_loop_00bc
 22309                                  .L_tc_recycle_frame_done_00bc:
 22310 00010293 498D6008                	lea rsp, [r8 + 8]
 22311 00010297 5D                      	pop rbp ; restore the old rbp
 22312 00010298 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22313 0001029B C9                      	leave
 22314 0001029C C21800                  	ret AND_KILL_FRAME(1)
 22315                                  .L_lambda_simple_end_0086:	; new closure is in rax
 22316 0001029F C9                      	leave
 22317 000102A0 C21800                  	ret AND_KILL_FRAME(1)
 22318                                  .L_lambda_simple_end_0083:	; new closure is in rax
 22319 000102A3 803804                  	cmp byte [rax], T_closure
 22320 000102A6 0F8561570000            	jne L_error_non_closure
 22321 000102AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22322 000102AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22323 000102B2 48890425[1D140000]      	mov qword [free_var_95], rax
 22324 000102BA 48B8-                   	mov rax, sob_void
 22324 000102BC [0000000000000000] 
 22325                                  
 22326 000102C4 4889C7                  	mov rdi, rax
 22327 000102C7 E83F5A0000              	call print_sexpr_if_not_void
 22328                                  	; preparing a non-tail-call
 22329 000102CC 48B8-                   	mov rax, L_constants + 1993
 22329 000102CE [C907000000000000] 
 22330 000102D6 50                      	push rax
 22331 000102D7 6A01                    	push 1	; arg count
 22332 000102D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22333 000102DE E8D3570000              	call malloc
 22334 000102E3 50                      	push rax
 22335 000102E4 BF00000000              	mov rdi, 8 * 0	; new rib
 22336 000102E9 E8C8570000              	call malloc
 22337 000102EE 50                      	push rax
 22338 000102EF BF08000000              	mov rdi, 8 * 1	; extended env
 22339 000102F4 E8BD570000              	call malloc
 22340 000102F9 488B7D10                	mov rdi, ENV
 22341 000102FD BE00000000              	mov rsi, 0
 22342 00010302 BA01000000              	mov rdx, 1
 22343                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 22344 00010307 4883FE00                	cmp rsi, 0
 22345 0001030B 7410                    	je .L_lambda_simple_env_end_0087
 22346 0001030D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22347 00010311 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22348 00010315 48FFC6                  	inc rsi
 22349 00010318 48FFC2                  	inc rdx
 22350 0001031B EBEA                    	jmp .L_lambda_simple_env_loop_0087
 22351                                  .L_lambda_simple_env_end_0087:
 22352 0001031D 5B                      	pop rbx
 22353 0001031E BE00000000              	mov rsi, 0
 22354                                  .L_lambda_simple_params_loop_0087:	; copy params
 22355 00010323 4883FE00                	cmp rsi, 0
 22356 00010327 740E                    	je .L_lambda_simple_params_end_0087
 22357 00010329 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22358 0001032E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22359 00010332 48FFC6                  	inc rsi
 22360 00010335 EBEC                    	jmp .L_lambda_simple_params_loop_0087
 22361                                  .L_lambda_simple_params_end_0087:
 22362 00010337 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22363 0001033A 4889C3                  	mov rbx, rax
 22364 0001033D 58                      	pop rax
 22365 0001033E C60004                  	mov byte [rax], T_closure
 22366 00010341 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22367 00010345 48C74009[52030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 22368 0001034D E948040000              	jmp .L_lambda_simple_end_0087
 22369                                  .L_lambda_simple_code_0087:	; lambda-simple body
 22370 00010352 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22371 00010358 740B                    	je .L_lambda_simple_arity_check_ok_0087
 22372 0001035A FF742410                	push qword [rsp + 8 * 2]
 22373 0001035E 6A01                    	push 1
 22374 00010360 E90A570000              	jmp L_error_incorrect_arity_simple
 22375                                  .L_lambda_simple_arity_check_ok_0087:
 22376 00010365 C8000000                	enter 0, 0
 22377 00010369 BF08000000              	mov rdi, 8*1
 22378 0001036E E843570000              	call malloc
 22379 00010373 488B5D20                	mov rbx, PARAM(0)
 22380 00010377 488918                  	mov qword [rax], rbx
 22381 0001037A 48894520                	mov PARAM(0), rax
 22382 0001037E 48B8-                   	mov rax, sob_void
 22382 00010380 [0000000000000000] 
 22383                                  
 22384 00010388 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22385 0001038D E824570000              	call malloc
 22386 00010392 50                      	push rax
 22387 00010393 BF08000000              	mov rdi, 8 * 1	; new rib
 22388 00010398 E819570000              	call malloc
 22389 0001039D 50                      	push rax
 22390 0001039E BF10000000              	mov rdi, 8 * 2	; extended env
 22391 000103A3 E80E570000              	call malloc
 22392 000103A8 488B7D10                	mov rdi, ENV
 22393 000103AC BE00000000              	mov rsi, 0
 22394 000103B1 BA01000000              	mov rdx, 1
 22395                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 22396 000103B6 4883FE01                	cmp rsi, 1
 22397 000103BA 7410                    	je .L_lambda_simple_env_end_0088
 22398 000103BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22399 000103C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22400 000103C4 48FFC6                  	inc rsi
 22401 000103C7 48FFC2                  	inc rdx
 22402 000103CA EBEA                    	jmp .L_lambda_simple_env_loop_0088
 22403                                  .L_lambda_simple_env_end_0088:
 22404 000103CC 5B                      	pop rbx
 22405 000103CD BE00000000              	mov rsi, 0
 22406                                  .L_lambda_simple_params_loop_0088:	; copy params
 22407 000103D2 4883FE01                	cmp rsi, 1
 22408 000103D6 740E                    	je .L_lambda_simple_params_end_0088
 22409 000103D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22410 000103DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22411 000103E1 48FFC6                  	inc rsi
 22412 000103E4 EBEC                    	jmp .L_lambda_simple_params_loop_0088
 22413                                  .L_lambda_simple_params_end_0088:
 22414 000103E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22415 000103E9 4889C3                  	mov rbx, rax
 22416 000103EC 58                      	pop rax
 22417 000103ED C60004                  	mov byte [rax], T_closure
 22418 000103F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22419 000103F4 48C74009[01040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 22420 000103FC E983020000              	jmp .L_lambda_simple_end_0088
 22421                                  .L_lambda_simple_code_0088:	; lambda-simple body
 22422 00010401 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22423 00010407 740B                    	je .L_lambda_simple_arity_check_ok_0088
 22424 00010409 FF742410                	push qword [rsp + 8 * 2]
 22425 0001040D 6A02                    	push 2
 22426 0001040F E95B560000              	jmp L_error_incorrect_arity_simple
 22427                                  .L_lambda_simple_arity_check_ok_0088:
 22428 00010414 C8000000                	enter 0, 0
 22429                                  	; preparing a non-tail-call
 22430 00010418 488B4520                	mov rax, PARAM(0)	; param s
 22431 0001041C 50                      	push rax
 22432 0001041D 6A01                    	push 1	; arg count
 22433 0001041F 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 22434 00010427 803805                  	cmp byte [rax], T_undefined
 22435 0001042A 0F8459550000            	je L_error_fvar_undefined
 22436 00010430 803804                  	cmp byte [rax], T_closure
 22437 00010433 0F85D4550000            	jne L_error_non_closure
 22438 00010439 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22439 0001043C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22440 0001043F 483D[02000000]          	cmp rax, sob_boolean_false
 22441 00010445 7476                    	je .L_if_else_0068
 22442                                  	; preparing a tail-call
 22443 00010447 48B8-                   	mov rax, L_constants + 4
 22443 00010449 [0400000000000000] 
 22444 00010451 50                      	push rax
 22445 00010452 488B4528                	mov rax, PARAM(1)	; param i
 22446 00010456 50                      	push rax
 22447 00010457 6A02                    	push 2	; arg count
 22448 00010459 488B0425[61140000]      	mov rax, qword [free_var_99]	; free var make-string
 22449 00010461 803805                  	cmp byte [rax], T_undefined
 22450 00010464 0F841F550000            	je L_error_fvar_undefined
 22451 0001046A 803804                  	cmp byte [rax], T_closure
 22452 0001046D 0F859A550000            	jne L_error_non_closure
 22453 00010473 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22454 00010476 FF7508                  	push qword [rbp + 8 * 1]
 22455                                   ; old ret addr
 22456 00010479 FF7500                  	push qword [rbp]
 22457                                   ; restore the old rbp
 22458 0001047C BB02000000              	mov rbx, 2
 22459 00010481 4883C303                	add rbx, 3
 22460 00010485 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22461 00010489 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22462 0001048E 4C8D4DF8                	lea r9, [rbp - 8]
 22463 00010492 B906000000              	mov rcx, 6
 22464                                  .L_tc_recycle_frame_loop_00bd:
 22465 00010497 4883F900                	cmp rcx, 0
 22466 0001049B 7413                    	je .L_tc_recycle_frame_done_00bd
 22467 0001049D 4D8B11                  	mov r10, qword [r9]
 22468 000104A0 4D8910                  	mov qword [r8], r10
 22469 000104A3 4983E808                	sub r8, 8
 22470 000104A7 4983E908                	sub r9, 8
 22471 000104AB 48FFC9                  	dec rcx
 22472 000104AE EBE7                    	jmp .L_tc_recycle_frame_loop_00bd
 22473                                  .L_tc_recycle_frame_done_00bd:
 22474 000104B0 498D6008                	lea rsp, [r8 + 8]
 22475 000104B4 5D                      	pop rbp ; restore the old rbp
 22476 000104B5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22477 000104B8 E9C3010000              	jmp .L_if_end_0068
 22478                                  .L_if_else_0068:
 22479                                  	; preparing a tail-call
 22480                                  	; preparing a non-tail-call
 22481                                  	; preparing a non-tail-call
 22482 000104BD 48B8-                   	mov rax, L_constants + 2270
 22482 000104BF [DE08000000000000] 
 22483 000104C7 50                      	push rax
 22484 000104C8 488B4528                	mov rax, PARAM(1)	; param i
 22485 000104CC 50                      	push rax
 22486 000104CD 6A02                    	push 2	; arg count
 22487 000104CF 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 22488 000104D7 803805                  	cmp byte [rax], T_undefined
 22489 000104DA 0F84A9540000            	je L_error_fvar_undefined
 22490 000104E0 803804                  	cmp byte [rax], T_closure
 22491 000104E3 0F8524550000            	jne L_error_non_closure
 22492 000104E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22493 000104EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22494 000104EF 50                      	push rax
 22495                                  	; preparing a non-tail-call
 22496 000104F0 488B4520                	mov rax, PARAM(0)	; param s
 22497 000104F4 50                      	push rax
 22498 000104F5 6A01                    	push 1	; arg count
 22499 000104F7 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 22500 000104FF 803805                  	cmp byte [rax], T_undefined
 22501 00010502 0F8481540000            	je L_error_fvar_undefined
 22502 00010508 803804                  	cmp byte [rax], T_closure
 22503 0001050B 0F85FC540000            	jne L_error_non_closure
 22504 00010511 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22505 00010514 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22506 00010517 50                      	push rax
 22507 00010518 6A02                    	push 2	; arg count
 22508 0001051A 488B4510                	mov rax, ENV
 22509 0001051E 488B00                  	mov rax, qword [rax + 8 * 0]
 22510 00010521 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22511 00010524 488B00                  	mov rax, qword [rax]
 22512 00010527 803804                  	cmp byte [rax], T_closure
 22513 0001052A 0F85DD540000            	jne L_error_non_closure
 22514 00010530 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22515 00010533 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22516 00010536 50                      	push rax
 22517 00010537 6A01                    	push 1	; arg count
 22518 00010539 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22519 0001053E E873550000              	call malloc
 22520 00010543 50                      	push rax
 22521 00010544 BF10000000              	mov rdi, 8 * 2	; new rib
 22522 00010549 E868550000              	call malloc
 22523 0001054E 50                      	push rax
 22524 0001054F BF18000000              	mov rdi, 8 * 3	; extended env
 22525 00010554 E85D550000              	call malloc
 22526 00010559 488B7D10                	mov rdi, ENV
 22527 0001055D BE00000000              	mov rsi, 0
 22528 00010562 BA01000000              	mov rdx, 1
 22529                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 22530 00010567 4883FE02                	cmp rsi, 2
 22531 0001056B 7410                    	je .L_lambda_simple_env_end_0089
 22532 0001056D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22533 00010571 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22534 00010575 48FFC6                  	inc rsi
 22535 00010578 48FFC2                  	inc rdx
 22536 0001057B EBEA                    	jmp .L_lambda_simple_env_loop_0089
 22537                                  .L_lambda_simple_env_end_0089:
 22538 0001057D 5B                      	pop rbx
 22539 0001057E BE00000000              	mov rsi, 0
 22540                                  .L_lambda_simple_params_loop_0089:	; copy params
 22541 00010583 4883FE02                	cmp rsi, 2
 22542 00010587 740E                    	je .L_lambda_simple_params_end_0089
 22543 00010589 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22544 0001058E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22545 00010592 48FFC6                  	inc rsi
 22546 00010595 EBEC                    	jmp .L_lambda_simple_params_loop_0089
 22547                                  .L_lambda_simple_params_end_0089:
 22548 00010597 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22549 0001059A 4889C3                  	mov rbx, rax
 22550 0001059D 58                      	pop rax
 22551 0001059E C60004                  	mov byte [rax], T_closure
 22552 000105A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22553 000105A5 48C74009[B2050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 22554 000105AD E980000000              	jmp .L_lambda_simple_end_0089
 22555                                  .L_lambda_simple_code_0089:	; lambda-simple body
 22556 000105B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22557 000105B8 740B                    	je .L_lambda_simple_arity_check_ok_0089
 22558 000105BA FF742410                	push qword [rsp + 8 * 2]
 22559 000105BE 6A01                    	push 1
 22560 000105C0 E9AA540000              	jmp L_error_incorrect_arity_simple
 22561                                  .L_lambda_simple_arity_check_ok_0089:
 22562 000105C5 C8000000                	enter 0, 0
 22563                                  	; preparing a non-tail-call
 22564                                  	; preparing a non-tail-call
 22565 000105C9 488B4510                	mov rax, ENV
 22566 000105CD 488B00                  	mov rax, qword [rax + 8 * 0]
 22567 000105D0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22568 000105D3 50                      	push rax
 22569 000105D4 6A01                    	push 1	; arg count
 22570 000105D6 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 22571 000105DE 803805                  	cmp byte [rax], T_undefined
 22572 000105E1 0F84A2530000            	je L_error_fvar_undefined
 22573 000105E7 803804                  	cmp byte [rax], T_closure
 22574 000105EA 0F851D540000            	jne L_error_non_closure
 22575 000105F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22576 000105F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22577 000105F6 50                      	push rax
 22578 000105F7 488B4510                	mov rax, ENV
 22579 000105FB 488B00                  	mov rax, qword [rax + 8 * 0]
 22580 000105FE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22581 00010602 50                      	push rax
 22582 00010603 488B4520                	mov rax, PARAM(0)	; param str
 22583 00010607 50                      	push rax
 22584 00010608 6A03                    	push 3	; arg count
 22585 0001060A 488B0425[81160000]      	mov rax, qword [free_var_131]	; free var string-set!
 22586 00010612 803805                  	cmp byte [rax], T_undefined
 22587 00010615 0F846E530000            	je L_error_fvar_undefined
 22588 0001061B 803804                  	cmp byte [rax], T_closure
 22589 0001061E 0F85E9530000            	jne L_error_non_closure
 22590 00010624 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22591 00010627 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22592                                  
 22593 0001062A 488B4520                	mov rax, PARAM(0)	; param str
 22594 0001062E C9                      	leave
 22595 0001062F C21800                  	ret AND_KILL_FRAME(1)
 22596                                  .L_lambda_simple_end_0089:	; new closure is in rax
 22597 00010632 803804                  	cmp byte [rax], T_closure
 22598 00010635 0F85D2530000            	jne L_error_non_closure
 22599 0001063B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22600 0001063E FF7508                  	push qword [rbp + 8 * 1]
 22601                                   ; old ret addr
 22602 00010641 FF7500                  	push qword [rbp]
 22603                                   ; restore the old rbp
 22604 00010644 BB01000000              	mov rbx, 1
 22605 00010649 4883C303                	add rbx, 3
 22606 0001064D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22607 00010651 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22608 00010656 4C8D4DF8                	lea r9, [rbp - 8]
 22609 0001065A B905000000              	mov rcx, 5
 22610                                  .L_tc_recycle_frame_loop_00be:
 22611 0001065F 4883F900                	cmp rcx, 0
 22612 00010663 7413                    	je .L_tc_recycle_frame_done_00be
 22613 00010665 4D8B11                  	mov r10, qword [r9]
 22614 00010668 4D8910                  	mov qword [r8], r10
 22615 0001066B 4983E808                	sub r8, 8
 22616 0001066F 4983E908                	sub r9, 8
 22617 00010673 48FFC9                  	dec rcx
 22618 00010676 EBE7                    	jmp .L_tc_recycle_frame_loop_00be
 22619                                  .L_tc_recycle_frame_done_00be:
 22620 00010678 498D6008                	lea rsp, [r8 + 8]
 22621 0001067C 5D                      	pop rbp ; restore the old rbp
 22622 0001067D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22623                                  .L_if_end_0068:
 22624 00010680 C9                      	leave
 22625 00010681 C22000                  	ret AND_KILL_FRAME(2)
 22626                                  .L_lambda_simple_end_0088:	; new closure is in rax
 22627 00010684 50                      	push rax
 22628 00010685 488B4520                	mov rax, PARAM(0)	; param run
 22629 00010689 8F00                    	pop qword [rax]
 22630 0001068B 48B8-                   	mov rax, sob_void
 22630 0001068D [0000000000000000] 
 22631                                  
 22632 00010695 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22633 0001069A E817540000              	call malloc
 22634 0001069F 50                      	push rax
 22635 000106A0 BF08000000              	mov rdi, 8 * 1	; new rib
 22636 000106A5 E80C540000              	call malloc
 22637 000106AA 50                      	push rax
 22638 000106AB BF10000000              	mov rdi, 8 * 2	; extended env
 22639 000106B0 E801540000              	call malloc
 22640 000106B5 488B7D10                	mov rdi, ENV
 22641 000106B9 BE00000000              	mov rsi, 0
 22642 000106BE BA01000000              	mov rdx, 1
 22643                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 22644 000106C3 4883FE01                	cmp rsi, 1
 22645 000106C7 7410                    	je .L_lambda_simple_env_end_008a
 22646 000106C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22647 000106CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22648 000106D1 48FFC6                  	inc rsi
 22649 000106D4 48FFC2                  	inc rdx
 22650 000106D7 EBEA                    	jmp .L_lambda_simple_env_loop_008a
 22651                                  .L_lambda_simple_env_end_008a:
 22652 000106D9 5B                      	pop rbx
 22653 000106DA BE00000000              	mov rsi, 0
 22654                                  .L_lambda_simple_params_loop_008a:	; copy params
 22655 000106DF 4883FE01                	cmp rsi, 1
 22656 000106E3 740E                    	je .L_lambda_simple_params_end_008a
 22657 000106E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22658 000106EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22659 000106EE 48FFC6                  	inc rsi
 22660 000106F1 EBEC                    	jmp .L_lambda_simple_params_loop_008a
 22661                                  .L_lambda_simple_params_end_008a:
 22662 000106F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22663 000106F6 4889C3                  	mov rbx, rax
 22664 000106F9 58                      	pop rax
 22665 000106FA C60004                  	mov byte [rax], T_closure
 22666 000106FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22667 00010701 48C74009[0E070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 22668 00010709 E988000000              	jmp .L_lambda_simple_end_008a
 22669                                  .L_lambda_simple_code_008a:	; lambda-simple body
 22670 0001070E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22671 00010714 740B                    	je .L_lambda_simple_arity_check_ok_008a
 22672 00010716 FF742410                	push qword [rsp + 8 * 2]
 22673 0001071A 6A01                    	push 1
 22674 0001071C E94E530000              	jmp L_error_incorrect_arity_simple
 22675                                  .L_lambda_simple_arity_check_ok_008a:
 22676 00010721 C8000000                	enter 0, 0
 22677                                  	; preparing a tail-call
 22678 00010725 48B8-                   	mov rax, L_constants + 2135
 22678 00010727 [5708000000000000] 
 22679 0001072F 50                      	push rax
 22680 00010730 488B4520                	mov rax, PARAM(0)	; param s
 22681 00010734 50                      	push rax
 22682 00010735 6A02                    	push 2	; arg count
 22683 00010737 488B4510                	mov rax, ENV
 22684 0001073B 488B00                  	mov rax, qword [rax + 8 * 0]
 22685 0001073E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22686 00010741 488B00                  	mov rax, qword [rax]
 22687 00010744 803804                  	cmp byte [rax], T_closure
 22688 00010747 0F85C0520000            	jne L_error_non_closure
 22689 0001074D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22690 00010750 FF7508                  	push qword [rbp + 8 * 1]
 22691                                   ; old ret addr
 22692 00010753 FF7500                  	push qword [rbp]
 22693                                   ; restore the old rbp
 22694 00010756 BB02000000              	mov rbx, 2
 22695 0001075B 4883C303                	add rbx, 3
 22696 0001075F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22697 00010763 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22698 00010768 4C8D4DF8                	lea r9, [rbp - 8]
 22699 0001076C B906000000              	mov rcx, 6
 22700                                  .L_tc_recycle_frame_loop_00bf:
 22701 00010771 4883F900                	cmp rcx, 0
 22702 00010775 7413                    	je .L_tc_recycle_frame_done_00bf
 22703 00010777 4D8B11                  	mov r10, qword [r9]
 22704 0001077A 4D8910                  	mov qword [r8], r10
 22705 0001077D 4983E808                	sub r8, 8
 22706 00010781 4983E908                	sub r9, 8
 22707 00010785 48FFC9                  	dec rcx
 22708 00010788 EBE7                    	jmp .L_tc_recycle_frame_loop_00bf
 22709                                  .L_tc_recycle_frame_done_00bf:
 22710 0001078A 498D6008                	lea rsp, [r8 + 8]
 22711 0001078E 5D                      	pop rbp ; restore the old rbp
 22712 0001078F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22713 00010792 C9                      	leave
 22714 00010793 C21800                  	ret AND_KILL_FRAME(1)
 22715                                  .L_lambda_simple_end_008a:	; new closure is in rax
 22716 00010796 C9                      	leave
 22717 00010797 C21800                  	ret AND_KILL_FRAME(1)
 22718                                  .L_lambda_simple_end_0087:	; new closure is in rax
 22719 0001079A 803804                  	cmp byte [rax], T_closure
 22720 0001079D 0F856A520000            	jne L_error_non_closure
 22721 000107A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22722 000107A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22723 000107A9 48890425[0C140000]      	mov qword [free_var_94], rax
 22724 000107B1 48B8-                   	mov rax, sob_void
 22724 000107B3 [0000000000000000] 
 22725                                  
 22726 000107BB 4889C7                  	mov rdi, rax
 22727 000107BE E848550000              	call print_sexpr_if_not_void
 22728 000107C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22729 000107C8 E8E9520000              	call malloc
 22730 000107CD 50                      	push rax
 22731 000107CE BF00000000              	mov rdi, 8 * 0	; new rib
 22732 000107D3 E8DE520000              	call malloc
 22733 000107D8 50                      	push rax
 22734 000107D9 BF08000000              	mov rdi, 8 * 1	; extended env
 22735 000107DE E8D3520000              	call malloc
 22736 000107E3 488B7D10                	mov rdi, ENV
 22737 000107E7 4831F6                  	 xor rsi, rsi
 22738 000107EA 4831D2                  	 xor rdx, rdx
 22739 000107ED 48FFC2                  	inc rdx
 22740                                  .L_lambda_opt_env_loop_0016:	; ext_env[i + 1] <-- env[i]
 22741 000107F0 4883FE00                	cmp rsi, 0
 22742 000107F4 7410                    	je .L_lambda_opt_env_end_0016
 22743 000107F6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22744 000107FA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22745 000107FE 48FFC6                  	inc rsi
 22746 00010801 48FFC2                  	inc rdx
 22747 00010804 EBEA                    	jmp .L_lambda_opt_env_loop_0016
 22748                                  .L_lambda_opt_env_end_0016:
 22749 00010806 5B                      	pop rbx
 22750 00010807 4831F6                  	xor rsi, rsi
 22751                                  .L_lambda_opt_params_loop_0016:	; copy params
 22752 0001080A 4883FE00                	cmp rsi, 0
 22753 0001080E 740E                    	je .L_lambda_opt_params_end_0016
 22754 00010810 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22755 00010815 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22756 00010819 48FFC6                  	inc rsi
 22757 0001081C EBEC                    	jmp .L_lambda_opt_params_loop_0016
 22758                                  .L_lambda_opt_params_end_0016:
 22759 0001081E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22760 00010821 4889C3                  	mov rbx, rax
 22761 00010824 58                      	pop rax
 22762 00010825 C60004                  	mov byte [rax], T_closure
 22763 00010828 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22764 0001082C 48C74009[39080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 22765 00010834 E95C010000              	jmp .L_lambda_opt_end_0016
 22766                                  .L_lambda_opt_code_0016:; lambda opt body
 22767 00010839 48837C241000            	cmp qword [rsp + 8 * 2], 0
 22768 0001083F 7409                    	je .L_lambda_opt_arity_check_exact_0016
 22769 00010841 7F57                    	jg .L_lambda_opt_arity_check_more_0016
 22770 00010843 6A00                    	push 0
 22771 00010845 E939520000              	jmp L_error_incorrect_arity_opt
 22772                                  .L_lambda_opt_arity_check_exact_0016:
 22773 0001084A 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 22774 0001084E 4C894C24F8              	mov qword [rsp -8], r9
 22775 00010853 4C8B4C2408              	mov r9, qword [rsp +8]
 22776 00010858 4C890C24                	mov qword [rsp +8 * 0], r9
 22777 0001085C 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 22778 00010861 4C89C9                  	mov rcx, r9
 22779 00010864 49FFC1                  	inc r9
 22780 00010867 4C894C2408              	mov qword [rsp +8], r9
 22781 0001086C 4889E2                  	mov rdx, rsp
 22782 0001086F 4883C218                	add rdx, 24
 22783                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0016:
 22784 00010873 4883F900                	cmp rcx, 0
 22785 00010877 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0016
 22786 00010879 4C8B02                  	mov r8, qword [rdx]
 22787 0001087C 4C8942F8                	mov qword [rdx - 8], r8
 22788 00010880 4883C208                	add rdx, 8
 22789 00010884 48FFC9                  	dec rcx
 22790 00010887 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0016
 22791                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0016:
 22792 00010889 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 22793 00010891 4883EC08                	sub rsp, 8
 22794 00010895 E984000000              	jmp .L_lambda_opt_stack_adjusted_0016
 22795                                  .L_lambda_opt_arity_check_more_0016:
 22796 0001089A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 22797 0001089F 4D89C4                  	mov r12, r8
 22798 000108A2 4C89C1                  	mov rcx, r8
 22799 000108A5 4D8D5002                	lea r10, [r8 + 2] 
 22800 000108A9 4883E900                	sub rcx, 0
 22801 000108AD 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 22802 000108B2 49B9-                   	mov r9, sob_nil
 22802 000108B4 [0100000000000000] 
 22803                                  .L_lambda_opt_create_list_of_opt_params_0016:
 22804 000108BC 4883F900                	cmp rcx, 0
 22805 000108C0 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0016
 22806 000108C2 BF11000000              	mov rdi, 17
 22807 000108C7 E8EA510000              	call malloc
 22808 000108CC C60021                  	mov byte [rax], T_pair
 22809 000108CF 498B1B                  	mov rbx, qword [r11]
 22810 000108D2 48895801                	mov qword [rax +1], rbx
 22811 000108D6 4C894809                	mov qword [rax + 1 + 8], r9
 22812 000108DA 4989C1                  	mov r9, rax
 22813 000108DD 48FFC9                  	dec rcx
 22814 000108E0 4983EB08                	sub r11, 8
 22815 000108E4 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0016
 22816                                  .L_lambda_opt_create_list_of_opt_params_end_0016:
 22817 000108E6 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 22818 000108EB 4D8908                  	mov qword [r8], r9
 22819 000108EE 4E8D14D500000000        	lea r10, [8 * r10]
 22820 000108F6 4901E2                  	add r10, rsp
 22821 000108F9 B904000000              	mov rcx, 4 + 0
 22822                                  .L_lambda_opt_stack_shrink_loop_0016:
 22823 000108FE 4883F900                	cmp rcx, 0
 22824 00010902 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0016
 22825 00010904 4D8B18                  	mov r11, qword [r8]
 22826 00010907 4D891A                  	mov qword [r10], r11
 22827 0001090A 4983E808                	sub r8, 8
 22828 0001090E 4983EA08                	sub r10, 8
 22829 00010912 48FFC9                  	dec rcx
 22830 00010915 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 22831                                  .L_lambda_opt_stack_shrink_loop_exit_0016:
 22832 00010917 4983C208                	add r10, 8
 22833 0001091B 4C89D4                  	mov rsp, r10
 22834                                  .L_lambda_opt_stack_adjusted_0016:;continue with the code, the stack is ok
 22835 0001091E 48C744241001000000      	mov qword [rsp + 8*2], 1
 22836 00010927 C8000000                	enter 0, 0
 22837                                  	; preparing a tail-call
 22838 0001092B 488B4520                	mov rax, PARAM(0)	; param s
 22839 0001092F 50                      	push rax
 22840 00010930 6A01                    	push 1	; arg count
 22841 00010932 488B0425[1D140000]      	mov rax, qword [free_var_95]	; free var list->vector
 22842 0001093A 803805                  	cmp byte [rax], T_undefined
 22843 0001093D 0F8446500000            	je L_error_fvar_undefined
 22844 00010943 803804                  	cmp byte [rax], T_closure
 22845 00010946 0F85C1500000            	jne L_error_non_closure
 22846 0001094C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22847 0001094F FF7508                  	push qword [rbp + 8 * 1]
 22848                                   ; old ret addr
 22849 00010952 FF7500                  	push qword [rbp]
 22850                                   ; restore the old rbp
 22851 00010955 BB01000000              	mov rbx, 1
 22852 0001095A 4883C303                	add rbx, 3
 22853 0001095E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 22854 00010962 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 22855 00010967 4C8D4DF8                	lea r9, [rbp - 8]
 22856 0001096B B905000000              	mov rcx, 5
 22857                                  .L_tc_recycle_frame_loop_00c0:
 22858 00010970 4883F900                	cmp rcx, 0
 22859 00010974 7413                    	je .L_tc_recycle_frame_done_00c0
 22860 00010976 4D8B11                  	mov r10, qword [r9]
 22861 00010979 4D8910                  	mov qword [r8], r10
 22862 0001097C 4983E808                	sub r8, 8
 22863 00010980 4983E908                	sub r9, 8
 22864 00010984 48FFC9                  	dec rcx
 22865 00010987 EBE7                    	jmp .L_tc_recycle_frame_loop_00c0
 22866                                  .L_tc_recycle_frame_done_00c0:
 22867 00010989 498D6008                	lea rsp, [r8 + 8]
 22868 0001098D 5D                      	pop rbp ; restore the old rbp
 22869 0001098E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22870 00010991 C9                      	leave
 22871 00010992 C21800                  	ret 8 * (2 + 1)
 22872                                  .L_lambda_opt_end_0016:	; new closure is in rax
 22873 00010995 48890425[1A170000]      	mov qword [free_var_140], rax
 22874 0001099D 48B8-                   	mov rax, sob_void
 22874 0001099F [0000000000000000] 
 22875                                  
 22876 000109A7 4889C7                  	mov rdi, rax
 22877 000109AA E85C530000              	call print_sexpr_if_not_void
 22878                                  	; preparing a non-tail-call
 22879 000109AF 48B8-                   	mov rax, L_constants + 1993
 22879 000109B1 [C907000000000000] 
 22880 000109B9 50                      	push rax
 22881 000109BA 6A01                    	push 1	; arg count
 22882 000109BC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22883 000109C1 E8F0500000              	call malloc
 22884 000109C6 50                      	push rax
 22885 000109C7 BF00000000              	mov rdi, 8 * 0	; new rib
 22886 000109CC E8E5500000              	call malloc
 22887 000109D1 50                      	push rax
 22888 000109D2 BF08000000              	mov rdi, 8 * 1	; extended env
 22889 000109D7 E8DA500000              	call malloc
 22890 000109DC 488B7D10                	mov rdi, ENV
 22891 000109E0 BE00000000              	mov rsi, 0
 22892 000109E5 BA01000000              	mov rdx, 1
 22893                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 22894 000109EA 4883FE00                	cmp rsi, 0
 22895 000109EE 7410                    	je .L_lambda_simple_env_end_008b
 22896 000109F0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22897 000109F4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22898 000109F8 48FFC6                  	inc rsi
 22899 000109FB 48FFC2                  	inc rdx
 22900 000109FE EBEA                    	jmp .L_lambda_simple_env_loop_008b
 22901                                  .L_lambda_simple_env_end_008b:
 22902 00010A00 5B                      	pop rbx
 22903 00010A01 BE00000000              	mov rsi, 0
 22904                                  .L_lambda_simple_params_loop_008b:	; copy params
 22905 00010A06 4883FE00                	cmp rsi, 0
 22906 00010A0A 740E                    	je .L_lambda_simple_params_end_008b
 22907 00010A0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22908 00010A11 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22909 00010A15 48FFC6                  	inc rsi
 22910 00010A18 EBEC                    	jmp .L_lambda_simple_params_loop_008b
 22911                                  .L_lambda_simple_params_end_008b:
 22912 00010A1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22913 00010A1D 4889C3                  	mov rbx, rax
 22914 00010A20 58                      	pop rax
 22915 00010A21 C60004                  	mov byte [rax], T_closure
 22916 00010A24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22917 00010A28 48C74009[350A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 22918 00010A30 E936030000              	jmp .L_lambda_simple_end_008b
 22919                                  .L_lambda_simple_code_008b:	; lambda-simple body
 22920 00010A35 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22921 00010A3B 740B                    	je .L_lambda_simple_arity_check_ok_008b
 22922 00010A3D FF742410                	push qword [rsp + 8 * 2]
 22923 00010A41 6A01                    	push 1
 22924 00010A43 E927500000              	jmp L_error_incorrect_arity_simple
 22925                                  .L_lambda_simple_arity_check_ok_008b:
 22926 00010A48 C8000000                	enter 0, 0
 22927 00010A4C BF08000000              	mov rdi, 8*1
 22928 00010A51 E860500000              	call malloc
 22929 00010A56 488B5D20                	mov rbx, PARAM(0)
 22930 00010A5A 488918                  	mov qword [rax], rbx
 22931 00010A5D 48894520                	mov PARAM(0), rax
 22932 00010A61 48B8-                   	mov rax, sob_void
 22932 00010A63 [0000000000000000] 
 22933                                  
 22934 00010A6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22935 00010A70 E841500000              	call malloc
 22936 00010A75 50                      	push rax
 22937 00010A76 BF08000000              	mov rdi, 8 * 1	; new rib
 22938 00010A7B E836500000              	call malloc
 22939 00010A80 50                      	push rax
 22940 00010A81 BF10000000              	mov rdi, 8 * 2	; extended env
 22941 00010A86 E82B500000              	call malloc
 22942 00010A8B 488B7D10                	mov rdi, ENV
 22943 00010A8F BE00000000              	mov rsi, 0
 22944 00010A94 BA01000000              	mov rdx, 1
 22945                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 22946 00010A99 4883FE01                	cmp rsi, 1
 22947 00010A9D 7410                    	je .L_lambda_simple_env_end_008c
 22948 00010A9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22949 00010AA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22950 00010AA7 48FFC6                  	inc rsi
 22951 00010AAA 48FFC2                  	inc rdx
 22952 00010AAD EBEA                    	jmp .L_lambda_simple_env_loop_008c
 22953                                  .L_lambda_simple_env_end_008c:
 22954 00010AAF 5B                      	pop rbx
 22955 00010AB0 BE00000000              	mov rsi, 0
 22956                                  .L_lambda_simple_params_loop_008c:	; copy params
 22957 00010AB5 4883FE01                	cmp rsi, 1
 22958 00010AB9 740E                    	je .L_lambda_simple_params_end_008c
 22959 00010ABB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22960 00010AC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22961 00010AC4 48FFC6                  	inc rsi
 22962 00010AC7 EBEC                    	jmp .L_lambda_simple_params_loop_008c
 22963                                  .L_lambda_simple_params_end_008c:
 22964 00010AC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22965 00010ACC 4889C3                  	mov rbx, rax
 22966 00010ACF 58                      	pop rax
 22967 00010AD0 C60004                  	mov byte [rax], T_closure
 22968 00010AD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22969 00010AD7 48C74009[E40A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 22970 00010ADF E949010000              	jmp .L_lambda_simple_end_008c
 22971                                  .L_lambda_simple_code_008c:	; lambda-simple body
 22972 00010AE4 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22973 00010AEA 740B                    	je .L_lambda_simple_arity_check_ok_008c
 22974 00010AEC FF742410                	push qword [rsp + 8 * 2]
 22975 00010AF0 6A03                    	push 3
 22976 00010AF2 E9784F0000              	jmp L_error_incorrect_arity_simple
 22977                                  .L_lambda_simple_arity_check_ok_008c:
 22978 00010AF7 C8000000                	enter 0, 0
 22979                                  	; preparing a non-tail-call
 22980 00010AFB 488B4530                	mov rax, PARAM(2)	; param n
 22981 00010AFF 50                      	push rax
 22982 00010B00 488B4528                	mov rax, PARAM(1)	; param i
 22983 00010B04 50                      	push rax
 22984 00010B05 6A02                    	push 2	; arg count
 22985 00010B07 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 22986 00010B0F 803805                  	cmp byte [rax], T_undefined
 22987 00010B12 0F84714E0000            	je L_error_fvar_undefined
 22988 00010B18 803804                  	cmp byte [rax], T_closure
 22989 00010B1B 0F85EC4E0000            	jne L_error_non_closure
 22990 00010B21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22991 00010B24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22992 00010B27 483D[02000000]          	cmp rax, sob_boolean_false
 22993 00010B2D 0F84EC000000            	je .L_if_else_0069
 22994                                  	; preparing a tail-call
 22995                                  	; preparing a non-tail-call
 22996 00010B33 488B4530                	mov rax, PARAM(2)	; param n
 22997 00010B37 50                      	push rax
 22998                                  	; preparing a non-tail-call
 22999 00010B38 48B8-                   	mov rax, L_constants + 2270
 22999 00010B3A [DE08000000000000] 
 23000 00010B42 50                      	push rax
 23001 00010B43 488B4528                	mov rax, PARAM(1)	; param i
 23002 00010B47 50                      	push rax
 23003 00010B48 6A02                    	push 2	; arg count
 23004 00010B4A 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 23005 00010B52 803805                  	cmp byte [rax], T_undefined
 23006 00010B55 0F842E4E0000            	je L_error_fvar_undefined
 23007 00010B5B 803804                  	cmp byte [rax], T_closure
 23008 00010B5E 0F85A94E0000            	jne L_error_non_closure
 23009 00010B64 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23010 00010B67 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23011 00010B6A 50                      	push rax
 23012 00010B6B 488B4520                	mov rax, PARAM(0)	; param str
 23013 00010B6F 50                      	push rax
 23014 00010B70 6A03                    	push 3	; arg count
 23015 00010B72 488B4510                	mov rax, ENV
 23016 00010B76 488B00                  	mov rax, qword [rax + 8 * 0]
 23017 00010B79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23018 00010B7C 488B00                  	mov rax, qword [rax]
 23019 00010B7F 803804                  	cmp byte [rax], T_closure
 23020 00010B82 0F85854E0000            	jne L_error_non_closure
 23021 00010B88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23022 00010B8B FF5009                  	call SOB_CLOSURE_CODE(rax)
 23023 00010B8E 50                      	push rax
 23024                                  	; preparing a non-tail-call
 23025 00010B8F 488B4528                	mov rax, PARAM(1)	; param i
 23026 00010B93 50                      	push rax
 23027 00010B94 488B4520                	mov rax, PARAM(0)	; param str
 23028 00010B98 50                      	push rax
 23029 00010B99 6A02                    	push 2	; arg count
 23030 00010B9B 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 23031 00010BA3 803805                  	cmp byte [rax], T_undefined
 23032 00010BA6 0F84DD4D0000            	je L_error_fvar_undefined
 23033 00010BAC 803804                  	cmp byte [rax], T_closure
 23034 00010BAF 0F85584E0000            	jne L_error_non_closure
 23035 00010BB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23036 00010BB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23037 00010BBB 50                      	push rax
 23038 00010BBC 6A02                    	push 2	; arg count
 23039 00010BBE 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
 23040 00010BC6 803805                  	cmp byte [rax], T_undefined
 23041 00010BC9 0F84BA4D0000            	je L_error_fvar_undefined
 23042 00010BCF 803804                  	cmp byte [rax], T_closure
 23043 00010BD2 0F85354E0000            	jne L_error_non_closure
 23044 00010BD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23045 00010BDB FF7508                  	push qword [rbp + 8 * 1]
 23046                                   ; old ret addr
 23047 00010BDE FF7500                  	push qword [rbp]
 23048                                   ; restore the old rbp
 23049 00010BE1 BB02000000              	mov rbx, 2
 23050 00010BE6 4883C303                	add rbx, 3
 23051 00010BEA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23052 00010BEE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23053 00010BF3 4C8D4DF8                	lea r9, [rbp - 8]
 23054 00010BF7 B906000000              	mov rcx, 6
 23055                                  .L_tc_recycle_frame_loop_00c1:
 23056 00010BFC 4883F900                	cmp rcx, 0
 23057 00010C00 7413                    	je .L_tc_recycle_frame_done_00c1
 23058 00010C02 4D8B11                  	mov r10, qword [r9]
 23059 00010C05 4D8910                  	mov qword [r8], r10
 23060 00010C08 4983E808                	sub r8, 8
 23061 00010C0C 4983E908                	sub r9, 8
 23062 00010C10 48FFC9                  	dec rcx
 23063 00010C13 EBE7                    	jmp .L_tc_recycle_frame_loop_00c1
 23064                                  .L_tc_recycle_frame_done_00c1:
 23065 00010C15 498D6008                	lea rsp, [r8 + 8]
 23066 00010C19 5D                      	pop rbp ; restore the old rbp
 23067 00010C1A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23068 00010C1D EB0A                    	jmp .L_if_end_0069
 23069                                  .L_if_else_0069:
 23070 00010C1F 48B8-                   	mov rax, L_constants + 1
 23070 00010C21 [0100000000000000] 
 23071                                  .L_if_end_0069:
 23072 00010C29 C9                      	leave
 23073 00010C2A C22800                  	ret AND_KILL_FRAME(3)
 23074                                  .L_lambda_simple_end_008c:	; new closure is in rax
 23075 00010C2D 50                      	push rax
 23076 00010C2E 488B4520                	mov rax, PARAM(0)	; param run
 23077 00010C32 8F00                    	pop qword [rax]
 23078 00010C34 48B8-                   	mov rax, sob_void
 23078 00010C36 [0000000000000000] 
 23079                                  
 23080 00010C3E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23081 00010C43 E86E4E0000              	call malloc
 23082 00010C48 50                      	push rax
 23083 00010C49 BF08000000              	mov rdi, 8 * 1	; new rib
 23084 00010C4E E8634E0000              	call malloc
 23085 00010C53 50                      	push rax
 23086 00010C54 BF10000000              	mov rdi, 8 * 2	; extended env
 23087 00010C59 E8584E0000              	call malloc
 23088 00010C5E 488B7D10                	mov rdi, ENV
 23089 00010C62 BE00000000              	mov rsi, 0
 23090 00010C67 BA01000000              	mov rdx, 1
 23091                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 23092 00010C6C 4883FE01                	cmp rsi, 1
 23093 00010C70 7410                    	je .L_lambda_simple_env_end_008d
 23094 00010C72 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23095 00010C76 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23096 00010C7A 48FFC6                  	inc rsi
 23097 00010C7D 48FFC2                  	inc rdx
 23098 00010C80 EBEA                    	jmp .L_lambda_simple_env_loop_008d
 23099                                  .L_lambda_simple_env_end_008d:
 23100 00010C82 5B                      	pop rbx
 23101 00010C83 BE00000000              	mov rsi, 0
 23102                                  .L_lambda_simple_params_loop_008d:	; copy params
 23103 00010C88 4883FE01                	cmp rsi, 1
 23104 00010C8C 740E                    	je .L_lambda_simple_params_end_008d
 23105 00010C8E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23106 00010C93 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23107 00010C97 48FFC6                  	inc rsi
 23108 00010C9A EBEC                    	jmp .L_lambda_simple_params_loop_008d
 23109                                  .L_lambda_simple_params_end_008d:
 23110 00010C9C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23111 00010C9F 4889C3                  	mov rbx, rax
 23112 00010CA2 58                      	pop rax
 23113 00010CA3 C60004                  	mov byte [rax], T_closure
 23114 00010CA6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23115 00010CAA 48C74009[B70C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 23116 00010CB2 E9B0000000              	jmp .L_lambda_simple_end_008d
 23117                                  .L_lambda_simple_code_008d:	; lambda-simple body
 23118 00010CB7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23119 00010CBD 740B                    	je .L_lambda_simple_arity_check_ok_008d
 23120 00010CBF FF742410                	push qword [rsp + 8 * 2]
 23121 00010CC3 6A01                    	push 1
 23122 00010CC5 E9A54D0000              	jmp L_error_incorrect_arity_simple
 23123                                  .L_lambda_simple_arity_check_ok_008d:
 23124 00010CCA C8000000                	enter 0, 0
 23125                                  	; preparing a tail-call
 23126                                  	; preparing a non-tail-call
 23127 00010CCE 488B4520                	mov rax, PARAM(0)	; param str
 23128 00010CD2 50                      	push rax
 23129 00010CD3 6A01                    	push 1	; arg count
 23130 00010CD5 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 23131 00010CDD 803805                  	cmp byte [rax], T_undefined
 23132 00010CE0 0F84A34C0000            	je L_error_fvar_undefined
 23133 00010CE6 803804                  	cmp byte [rax], T_closure
 23134 00010CE9 0F851E4D0000            	jne L_error_non_closure
 23135 00010CEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23136 00010CF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23137 00010CF5 50                      	push rax
 23138 00010CF6 48B8-                   	mov rax, L_constants + 2135
 23138 00010CF8 [5708000000000000] 
 23139 00010D00 50                      	push rax
 23140 00010D01 488B4520                	mov rax, PARAM(0)	; param str
 23141 00010D05 50                      	push rax
 23142 00010D06 6A03                    	push 3	; arg count
 23143 00010D08 488B4510                	mov rax, ENV
 23144 00010D0C 488B00                  	mov rax, qword [rax + 8 * 0]
 23145 00010D0F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23146 00010D12 488B00                  	mov rax, qword [rax]
 23147 00010D15 803804                  	cmp byte [rax], T_closure
 23148 00010D18 0F85EF4C0000            	jne L_error_non_closure
 23149 00010D1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23150 00010D21 FF7508                  	push qword [rbp + 8 * 1]
 23151                                   ; old ret addr
 23152 00010D24 FF7500                  	push qword [rbp]
 23153                                   ; restore the old rbp
 23154 00010D27 BB03000000              	mov rbx, 3
 23155 00010D2C 4883C303                	add rbx, 3
 23156 00010D30 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23157 00010D34 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23158 00010D39 4C8D4DF8                	lea r9, [rbp - 8]
 23159 00010D3D B907000000              	mov rcx, 7
 23160                                  .L_tc_recycle_frame_loop_00c2:
 23161 00010D42 4883F900                	cmp rcx, 0
 23162 00010D46 7413                    	je .L_tc_recycle_frame_done_00c2
 23163 00010D48 4D8B11                  	mov r10, qword [r9]
 23164 00010D4B 4D8910                  	mov qword [r8], r10
 23165 00010D4E 4983E808                	sub r8, 8
 23166 00010D52 4983E908                	sub r9, 8
 23167 00010D56 48FFC9                  	dec rcx
 23168 00010D59 EBE7                    	jmp .L_tc_recycle_frame_loop_00c2
 23169                                  .L_tc_recycle_frame_done_00c2:
 23170 00010D5B 498D6008                	lea rsp, [r8 + 8]
 23171 00010D5F 5D                      	pop rbp ; restore the old rbp
 23172 00010D60 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23173 00010D63 C9                      	leave
 23174 00010D64 C21800                  	ret AND_KILL_FRAME(1)
 23175                                  .L_lambda_simple_end_008d:	; new closure is in rax
 23176 00010D67 C9                      	leave
 23177 00010D68 C21800                  	ret AND_KILL_FRAME(1)
 23178                                  .L_lambda_simple_end_008b:	; new closure is in rax
 23179 00010D6B 803804                  	cmp byte [rax], T_closure
 23180 00010D6E 0F85994C0000            	jne L_error_non_closure
 23181 00010D74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23182 00010D77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23183 00010D7A 48890425[B5150000]      	mov qword [free_var_119], rax
 23184 00010D82 48B8-                   	mov rax, sob_void
 23184 00010D84 [0000000000000000] 
 23185                                  
 23186 00010D8C 4889C7                  	mov rdi, rax
 23187 00010D8F E8774F0000              	call print_sexpr_if_not_void
 23188                                  	; preparing a non-tail-call
 23189 00010D94 48B8-                   	mov rax, L_constants + 1993
 23189 00010D96 [C907000000000000] 
 23190 00010D9E 50                      	push rax
 23191 00010D9F 6A01                    	push 1	; arg count
 23192 00010DA1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23193 00010DA6 E80B4D0000              	call malloc
 23194 00010DAB 50                      	push rax
 23195 00010DAC BF00000000              	mov rdi, 8 * 0	; new rib
 23196 00010DB1 E8004D0000              	call malloc
 23197 00010DB6 50                      	push rax
 23198 00010DB7 BF08000000              	mov rdi, 8 * 1	; extended env
 23199 00010DBC E8F54C0000              	call malloc
 23200 00010DC1 488B7D10                	mov rdi, ENV
 23201 00010DC5 BE00000000              	mov rsi, 0
 23202 00010DCA BA01000000              	mov rdx, 1
 23203                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 23204 00010DCF 4883FE00                	cmp rsi, 0
 23205 00010DD3 7410                    	je .L_lambda_simple_env_end_008e
 23206 00010DD5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23207 00010DD9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23208 00010DDD 48FFC6                  	inc rsi
 23209 00010DE0 48FFC2                  	inc rdx
 23210 00010DE3 EBEA                    	jmp .L_lambda_simple_env_loop_008e
 23211                                  .L_lambda_simple_env_end_008e:
 23212 00010DE5 5B                      	pop rbx
 23213 00010DE6 BE00000000              	mov rsi, 0
 23214                                  .L_lambda_simple_params_loop_008e:	; copy params
 23215 00010DEB 4883FE00                	cmp rsi, 0
 23216 00010DEF 740E                    	je .L_lambda_simple_params_end_008e
 23217 00010DF1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23218 00010DF6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23219 00010DFA 48FFC6                  	inc rsi
 23220 00010DFD EBEC                    	jmp .L_lambda_simple_params_loop_008e
 23221                                  .L_lambda_simple_params_end_008e:
 23222 00010DFF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23223 00010E02 4889C3                  	mov rbx, rax
 23224 00010E05 58                      	pop rax
 23225 00010E06 C60004                  	mov byte [rax], T_closure
 23226 00010E09 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23227 00010E0D 48C74009[1A0E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 23228 00010E15 E936030000              	jmp .L_lambda_simple_end_008e
 23229                                  .L_lambda_simple_code_008e:	; lambda-simple body
 23230 00010E1A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23231 00010E20 740B                    	je .L_lambda_simple_arity_check_ok_008e
 23232 00010E22 FF742410                	push qword [rsp + 8 * 2]
 23233 00010E26 6A01                    	push 1
 23234 00010E28 E9424C0000              	jmp L_error_incorrect_arity_simple
 23235                                  .L_lambda_simple_arity_check_ok_008e:
 23236 00010E2D C8000000                	enter 0, 0
 23237 00010E31 BF08000000              	mov rdi, 8*1
 23238 00010E36 E87B4C0000              	call malloc
 23239 00010E3B 488B5D20                	mov rbx, PARAM(0)
 23240 00010E3F 488918                  	mov qword [rax], rbx
 23241 00010E42 48894520                	mov PARAM(0), rax
 23242 00010E46 48B8-                   	mov rax, sob_void
 23242 00010E48 [0000000000000000] 
 23243                                  
 23244 00010E50 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23245 00010E55 E85C4C0000              	call malloc
 23246 00010E5A 50                      	push rax
 23247 00010E5B BF08000000              	mov rdi, 8 * 1	; new rib
 23248 00010E60 E8514C0000              	call malloc
 23249 00010E65 50                      	push rax
 23250 00010E66 BF10000000              	mov rdi, 8 * 2	; extended env
 23251 00010E6B E8464C0000              	call malloc
 23252 00010E70 488B7D10                	mov rdi, ENV
 23253 00010E74 BE00000000              	mov rsi, 0
 23254 00010E79 BA01000000              	mov rdx, 1
 23255                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 23256 00010E7E 4883FE01                	cmp rsi, 1
 23257 00010E82 7410                    	je .L_lambda_simple_env_end_008f
 23258 00010E84 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23259 00010E88 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23260 00010E8C 48FFC6                  	inc rsi
 23261 00010E8F 48FFC2                  	inc rdx
 23262 00010E92 EBEA                    	jmp .L_lambda_simple_env_loop_008f
 23263                                  .L_lambda_simple_env_end_008f:
 23264 00010E94 5B                      	pop rbx
 23265 00010E95 BE00000000              	mov rsi, 0
 23266                                  .L_lambda_simple_params_loop_008f:	; copy params
 23267 00010E9A 4883FE01                	cmp rsi, 1
 23268 00010E9E 740E                    	je .L_lambda_simple_params_end_008f
 23269 00010EA0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23270 00010EA5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23271 00010EA9 48FFC6                  	inc rsi
 23272 00010EAC EBEC                    	jmp .L_lambda_simple_params_loop_008f
 23273                                  .L_lambda_simple_params_end_008f:
 23274 00010EAE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23275 00010EB1 4889C3                  	mov rbx, rax
 23276 00010EB4 58                      	pop rax
 23277 00010EB5 C60004                  	mov byte [rax], T_closure
 23278 00010EB8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23279 00010EBC 48C74009[C90E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 23280 00010EC4 E949010000              	jmp .L_lambda_simple_end_008f
 23281                                  .L_lambda_simple_code_008f:	; lambda-simple body
 23282 00010EC9 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23283 00010ECF 740B                    	je .L_lambda_simple_arity_check_ok_008f
 23284 00010ED1 FF742410                	push qword [rsp + 8 * 2]
 23285 00010ED5 6A03                    	push 3
 23286 00010ED7 E9934B0000              	jmp L_error_incorrect_arity_simple
 23287                                  .L_lambda_simple_arity_check_ok_008f:
 23288 00010EDC C8000000                	enter 0, 0
 23289                                  	; preparing a non-tail-call
 23290 00010EE0 488B4530                	mov rax, PARAM(2)	; param n
 23291 00010EE4 50                      	push rax
 23292 00010EE5 488B4528                	mov rax, PARAM(1)	; param i
 23293 00010EE9 50                      	push rax
 23294 00010EEA 6A02                    	push 2	; arg count
 23295 00010EEC 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 23296 00010EF4 803805                  	cmp byte [rax], T_undefined
 23297 00010EF7 0F848C4A0000            	je L_error_fvar_undefined
 23298 00010EFD 803804                  	cmp byte [rax], T_closure
 23299 00010F00 0F85074B0000            	jne L_error_non_closure
 23300 00010F06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23301 00010F09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23302 00010F0C 483D[02000000]          	cmp rax, sob_boolean_false
 23303 00010F12 0F84EC000000            	je .L_if_else_006a
 23304                                  	; preparing a tail-call
 23305                                  	; preparing a non-tail-call
 23306 00010F18 488B4530                	mov rax, PARAM(2)	; param n
 23307 00010F1C 50                      	push rax
 23308                                  	; preparing a non-tail-call
 23309 00010F1D 48B8-                   	mov rax, L_constants + 2270
 23309 00010F1F [DE08000000000000] 
 23310 00010F27 50                      	push rax
 23311 00010F28 488B4528                	mov rax, PARAM(1)	; param i
 23312 00010F2C 50                      	push rax
 23313 00010F2D 6A02                    	push 2	; arg count
 23314 00010F2F 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 23315 00010F37 803805                  	cmp byte [rax], T_undefined
 23316 00010F3A 0F84494A0000            	je L_error_fvar_undefined
 23317 00010F40 803804                  	cmp byte [rax], T_closure
 23318 00010F43 0F85C44A0000            	jne L_error_non_closure
 23319 00010F49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23320 00010F4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23321 00010F4F 50                      	push rax
 23322 00010F50 488B4520                	mov rax, PARAM(0)	; param v
 23323 00010F54 50                      	push rax
 23324 00010F55 6A03                    	push 3	; arg count
 23325 00010F57 488B4510                	mov rax, ENV
 23326 00010F5B 488B00                  	mov rax, qword [rax + 8 * 0]
 23327 00010F5E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23328 00010F61 488B00                  	mov rax, qword [rax]
 23329 00010F64 803804                  	cmp byte [rax], T_closure
 23330 00010F67 0F85A04A0000            	jne L_error_non_closure
 23331 00010F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23332 00010F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23333 00010F73 50                      	push rax
 23334                                  	; preparing a non-tail-call
 23335 00010F74 488B4528                	mov rax, PARAM(1)	; param i
 23336 00010F78 50                      	push rax
 23337 00010F79 488B4520                	mov rax, PARAM(0)	; param v
 23338 00010F7D 50                      	push rax
 23339 00010F7E 6A02                    	push 2	; arg count
 23340 00010F80 488B0425[5E170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 23341 00010F88 803805                  	cmp byte [rax], T_undefined
 23342 00010F8B 0F84F8490000            	je L_error_fvar_undefined
 23343 00010F91 803804                  	cmp byte [rax], T_closure
 23344 00010F94 0F85734A0000            	jne L_error_non_closure
 23345 00010F9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23346 00010F9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 23347 00010FA0 50                      	push rax
 23348 00010FA1 6A02                    	push 2	; arg count
 23349 00010FA3 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
 23350 00010FAB 803805                  	cmp byte [rax], T_undefined
 23351 00010FAE 0F84D5490000            	je L_error_fvar_undefined
 23352 00010FB4 803804                  	cmp byte [rax], T_closure
 23353 00010FB7 0F85504A0000            	jne L_error_non_closure
 23354 00010FBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 23355 00010FC0 FF7508                  	push qword [rbp + 8 * 1]
 23356                                   ; old ret addr
 23357 00010FC3 FF7500                  	push qword [rbp]
 23358                                   ; restore the old rbp
 23359 00010FC6 BB02000000              	mov rbx, 2
 23360 00010FCB 4883C303                	add rbx, 3
 23361 00010FCF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23362 00010FD3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23363 00010FD8 4C8D4DF8                	lea r9, [rbp - 8]
 23364 00010FDC B906000000              	mov rcx, 6
 23365                                  .L_tc_recycle_frame_loop_00c3:
 23366 00010FE1 4883F900                	cmp rcx, 0
 23367 00010FE5 7413                    	je .L_tc_recycle_frame_done_00c3
 23368 00010FE7 4D8B11                  	mov r10, qword [r9]
 23369 00010FEA 4D8910                  	mov qword [r8], r10
 23370 00010FED 4983E808                	sub r8, 8
 23371 00010FF1 4983E908                	sub r9, 8
 23372 00010FF5 48FFC9                  	dec rcx
 23373 00010FF8 EBE7                    	jmp .L_tc_recycle_frame_loop_00c3
 23374                                  .L_tc_recycle_frame_done_00c3:
 23375 00010FFA 498D6008                	lea rsp, [r8 + 8]
 23376 00010FFE 5D                      	pop rbp ; restore the old rbp
 23377 00010FFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23378 00011002 EB0A                    	jmp .L_if_end_006a
 23379                                  .L_if_else_006a:
 23380 00011004 48B8-                   	mov rax, L_constants + 1
 23380 00011006 [0100000000000000] 
 23381                                  .L_if_end_006a:
 23382 0001100E C9                      	leave
 23383 0001100F C22800                  	ret AND_KILL_FRAME(3)
 23384                                  .L_lambda_simple_end_008f:	; new closure is in rax
 23385 00011012 50                      	push rax
 23386 00011013 488B4520                	mov rax, PARAM(0)	; param run
 23387 00011017 8F00                    	pop qword [rax]
 23388 00011019 48B8-                   	mov rax, sob_void
 23388 0001101B [0000000000000000] 
 23389                                  
 23390 00011023 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23391 00011028 E8894A0000              	call malloc
 23392 0001102D 50                      	push rax
 23393 0001102E BF08000000              	mov rdi, 8 * 1	; new rib
 23394 00011033 E87E4A0000              	call malloc
 23395 00011038 50                      	push rax
 23396 00011039 BF10000000              	mov rdi, 8 * 2	; extended env
 23397 0001103E E8734A0000              	call malloc
 23398 00011043 488B7D10                	mov rdi, ENV
 23399 00011047 BE00000000              	mov rsi, 0
 23400 0001104C BA01000000              	mov rdx, 1
 23401                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 23402 00011051 4883FE01                	cmp rsi, 1
 23403 00011055 7410                    	je .L_lambda_simple_env_end_0090
 23404 00011057 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23405 0001105B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23406 0001105F 48FFC6                  	inc rsi
 23407 00011062 48FFC2                  	inc rdx
 23408 00011065 EBEA                    	jmp .L_lambda_simple_env_loop_0090
 23409                                  .L_lambda_simple_env_end_0090:
 23410 00011067 5B                      	pop rbx
 23411 00011068 BE00000000              	mov rsi, 0
 23412                                  .L_lambda_simple_params_loop_0090:	; copy params
 23413 0001106D 4883FE01                	cmp rsi, 1
 23414 00011071 740E                    	je .L_lambda_simple_params_end_0090
 23415 00011073 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23416 00011078 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23417 0001107C 48FFC6                  	inc rsi
 23418 0001107F EBEC                    	jmp .L_lambda_simple_params_loop_0090
 23419                                  .L_lambda_simple_params_end_0090:
 23420 00011081 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23421 00011084 4889C3                  	mov rbx, rax
 23422 00011087 58                      	pop rax
 23423 00011088 C60004                  	mov byte [rax], T_closure
 23424 0001108B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23425 0001108F 48C74009[9C100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 23426 00011097 E9B0000000              	jmp .L_lambda_simple_end_0090
 23427                                  .L_lambda_simple_code_0090:	; lambda-simple body
 23428 0001109C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23429 000110A2 740B                    	je .L_lambda_simple_arity_check_ok_0090
 23430 000110A4 FF742410                	push qword [rsp + 8 * 2]
 23431 000110A8 6A01                    	push 1
 23432 000110AA E9C0490000              	jmp L_error_incorrect_arity_simple
 23433                                  .L_lambda_simple_arity_check_ok_0090:
 23434 000110AF C8000000                	enter 0, 0
 23435                                  	; preparing a tail-call
 23436                                  	; preparing a non-tail-call
 23437 000110B3 488B4520                	mov rax, PARAM(0)	; param v
 23438 000110B7 50                      	push rax
 23439 000110B8 6A01                    	push 1	; arg count
 23440 000110BA 488B0425[4D170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23441 000110C2 803805                  	cmp byte [rax], T_undefined
 23442 000110C5 0F84BE480000            	je L_error_fvar_undefined
 23443 000110CB 803804                  	cmp byte [rax], T_closure
 23444 000110CE 0F8539490000            	jne L_error_non_closure
 23445 000110D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23446 000110D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23447 000110DA 50                      	push rax
 23448 000110DB 48B8-                   	mov rax, L_constants + 2135
 23448 000110DD [5708000000000000] 
 23449 000110E5 50                      	push rax
 23450 000110E6 488B4520                	mov rax, PARAM(0)	; param v
 23451 000110EA 50                      	push rax
 23452 000110EB 6A03                    	push 3	; arg count
 23453 000110ED 488B4510                	mov rax, ENV
 23454 000110F1 488B00                  	mov rax, qword [rax + 8 * 0]
 23455 000110F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23456 000110F7 488B00                  	mov rax, qword [rax]
 23457 000110FA 803804                  	cmp byte [rax], T_closure
 23458 000110FD 0F850A490000            	jne L_error_non_closure
 23459 00011103 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23460 00011106 FF7508                  	push qword [rbp + 8 * 1]
 23461                                   ; old ret addr
 23462 00011109 FF7500                  	push qword [rbp]
 23463                                   ; restore the old rbp
 23464 0001110C BB03000000              	mov rbx, 3
 23465 00011111 4883C303                	add rbx, 3
 23466 00011115 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23467 00011119 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23468 0001111E 4C8D4DF8                	lea r9, [rbp - 8]
 23469 00011122 B907000000              	mov rcx, 7
 23470                                  .L_tc_recycle_frame_loop_00c4:
 23471 00011127 4883F900                	cmp rcx, 0
 23472 0001112B 7413                    	je .L_tc_recycle_frame_done_00c4
 23473 0001112D 4D8B11                  	mov r10, qword [r9]
 23474 00011130 4D8910                  	mov qword [r8], r10
 23475 00011133 4983E808                	sub r8, 8
 23476 00011137 4983E908                	sub r9, 8
 23477 0001113B 48FFC9                  	dec rcx
 23478 0001113E EBE7                    	jmp .L_tc_recycle_frame_loop_00c4
 23479                                  .L_tc_recycle_frame_done_00c4:
 23480 00011140 498D6008                	lea rsp, [r8 + 8]
 23481 00011144 5D                      	pop rbp ; restore the old rbp
 23482 00011145 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23483 00011148 C9                      	leave
 23484 00011149 C21800                  	ret AND_KILL_FRAME(1)
 23485                                  .L_lambda_simple_end_0090:	; new closure is in rax
 23486 0001114C C9                      	leave
 23487 0001114D C21800                  	ret AND_KILL_FRAME(1)
 23488                                  .L_lambda_simple_end_008e:	; new closure is in rax
 23489 00011150 803804                  	cmp byte [rax], T_closure
 23490 00011153 0F85B4480000            	jne L_error_non_closure
 23491 00011159 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23492 0001115C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23493 0001115F 48890425[2B170000]      	mov qword [free_var_141], rax
 23494 00011167 48B8-                   	mov rax, sob_void
 23494 00011169 [0000000000000000] 
 23495                                  
 23496 00011171 4889C7                  	mov rdi, rax
 23497 00011174 E8924B0000              	call print_sexpr_if_not_void
 23498 00011179 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23499 0001117E E833490000              	call malloc
 23500 00011183 50                      	push rax
 23501 00011184 BF00000000              	mov rdi, 8 * 0	; new rib
 23502 00011189 E828490000              	call malloc
 23503 0001118E 50                      	push rax
 23504 0001118F BF08000000              	mov rdi, 8 * 1	; extended env
 23505 00011194 E81D490000              	call malloc
 23506 00011199 488B7D10                	mov rdi, ENV
 23507 0001119D BE00000000              	mov rsi, 0
 23508 000111A2 BA01000000              	mov rdx, 1
 23509                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 23510 000111A7 4883FE00                	cmp rsi, 0
 23511 000111AB 7410                    	je .L_lambda_simple_env_end_0091
 23512 000111AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23513 000111B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23514 000111B5 48FFC6                  	inc rsi
 23515 000111B8 48FFC2                  	inc rdx
 23516 000111BB EBEA                    	jmp .L_lambda_simple_env_loop_0091
 23517                                  .L_lambda_simple_env_end_0091:
 23518 000111BD 5B                      	pop rbx
 23519 000111BE BE00000000              	mov rsi, 0
 23520                                  .L_lambda_simple_params_loop_0091:	; copy params
 23521 000111C3 4883FE00                	cmp rsi, 0
 23522 000111C7 740E                    	je .L_lambda_simple_params_end_0091
 23523 000111C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23524 000111CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23525 000111D2 48FFC6                  	inc rsi
 23526 000111D5 EBEC                    	jmp .L_lambda_simple_params_loop_0091
 23527                                  .L_lambda_simple_params_end_0091:
 23528 000111D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23529 000111DA 4889C3                  	mov rbx, rax
 23530 000111DD 58                      	pop rax
 23531 000111DE C60004                  	mov byte [rax], T_closure
 23532 000111E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23533 000111E5 48C74009[F2110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 23534 000111ED E9A4000000              	jmp .L_lambda_simple_end_0091
 23535                                  .L_lambda_simple_code_0091:	; lambda-simple body
 23536 000111F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23537 000111F8 740B                    	je .L_lambda_simple_arity_check_ok_0091
 23538 000111FA FF742410                	push qword [rsp + 8 * 2]
 23539 000111FE 6A01                    	push 1
 23540 00011200 E96A480000              	jmp L_error_incorrect_arity_simple
 23541                                  .L_lambda_simple_arity_check_ok_0091:
 23542 00011205 C8000000                	enter 0, 0
 23543                                  	; preparing a tail-call
 23544 00011209 488B4520                	mov rax, PARAM(0)	; param n
 23545 0001120D 50                      	push rax
 23546                                  	; preparing a non-tail-call
 23547 0001120E 6A00                    	push 0	; arg count
 23548 00011210 488B0425[09170000]      	mov rax, qword [free_var_139]	; free var trng
 23549 00011218 803805                  	cmp byte [rax], T_undefined
 23550 0001121B 0F8468470000            	je L_error_fvar_undefined
 23551 00011221 803804                  	cmp byte [rax], T_closure
 23552 00011224 0F85E3470000            	jne L_error_non_closure
 23553 0001122A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23554 0001122D FF5009                  	call SOB_CLOSURE_CODE(rax)
 23555 00011230 50                      	push rax
 23556 00011231 6A02                    	push 2	; arg count
 23557 00011233 488B0425[93150000]      	mov rax, qword [free_var_117]	; free var remainder
 23558 0001123B 803805                  	cmp byte [rax], T_undefined
 23559 0001123E 0F8445470000            	je L_error_fvar_undefined
 23560 00011244 803804                  	cmp byte [rax], T_closure
 23561 00011247 0F85C0470000            	jne L_error_non_closure
 23562 0001124D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23563 00011250 FF7508                  	push qword [rbp + 8 * 1]
 23564                                   ; old ret addr
 23565 00011253 FF7500                  	push qword [rbp]
 23566                                   ; restore the old rbp
 23567 00011256 BB02000000              	mov rbx, 2
 23568 0001125B 4883C303                	add rbx, 3
 23569 0001125F 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23570 00011263 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23571 00011268 4C8D4DF8                	lea r9, [rbp - 8]
 23572 0001126C B906000000              	mov rcx, 6
 23573                                  .L_tc_recycle_frame_loop_00c5:
 23574 00011271 4883F900                	cmp rcx, 0
 23575 00011275 7413                    	je .L_tc_recycle_frame_done_00c5
 23576 00011277 4D8B11                  	mov r10, qword [r9]
 23577 0001127A 4D8910                  	mov qword [r8], r10
 23578 0001127D 4983E808                	sub r8, 8
 23579 00011281 4983E908                	sub r9, 8
 23580 00011285 48FFC9                  	dec rcx
 23581 00011288 EBE7                    	jmp .L_tc_recycle_frame_loop_00c5
 23582                                  .L_tc_recycle_frame_done_00c5:
 23583 0001128A 498D6008                	lea rsp, [r8 + 8]
 23584 0001128E 5D                      	pop rbp ; restore the old rbp
 23585 0001128F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23586 00011292 C9                      	leave
 23587 00011293 C21800                  	ret AND_KILL_FRAME(1)
 23588                                  .L_lambda_simple_end_0091:	; new closure is in rax
 23589 00011296 48890425[4F150000]      	mov qword [free_var_113], rax
 23590 0001129E 48B8-                   	mov rax, sob_void
 23590 000112A0 [0000000000000000] 
 23591                                  
 23592 000112A8 4889C7                  	mov rdi, rax
 23593 000112AB E85B4A0000              	call print_sexpr_if_not_void
 23594 000112B0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23595 000112B5 E8FC470000              	call malloc
 23596 000112BA 50                      	push rax
 23597 000112BB BF00000000              	mov rdi, 8 * 0	; new rib
 23598 000112C0 E8F1470000              	call malloc
 23599 000112C5 50                      	push rax
 23600 000112C6 BF08000000              	mov rdi, 8 * 1	; extended env
 23601 000112CB E8E6470000              	call malloc
 23602 000112D0 488B7D10                	mov rdi, ENV
 23603 000112D4 BE00000000              	mov rsi, 0
 23604 000112D9 BA01000000              	mov rdx, 1
 23605                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 23606 000112DE 4883FE00                	cmp rsi, 0
 23607 000112E2 7410                    	je .L_lambda_simple_env_end_0092
 23608 000112E4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23609 000112E8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23610 000112EC 48FFC6                  	inc rsi
 23611 000112EF 48FFC2                  	inc rdx
 23612 000112F2 EBEA                    	jmp .L_lambda_simple_env_loop_0092
 23613                                  .L_lambda_simple_env_end_0092:
 23614 000112F4 5B                      	pop rbx
 23615 000112F5 BE00000000              	mov rsi, 0
 23616                                  .L_lambda_simple_params_loop_0092:	; copy params
 23617 000112FA 4883FE00                	cmp rsi, 0
 23618 000112FE 740E                    	je .L_lambda_simple_params_end_0092
 23619 00011300 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23620 00011305 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23621 00011309 48FFC6                  	inc rsi
 23622 0001130C EBEC                    	jmp .L_lambda_simple_params_loop_0092
 23623                                  .L_lambda_simple_params_end_0092:
 23624 0001130E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23625 00011311 4889C3                  	mov rbx, rax
 23626 00011314 58                      	pop rax
 23627 00011315 C60004                  	mov byte [rax], T_closure
 23628 00011318 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23629 0001131C 48C74009[29130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 23630 00011324 E98C000000              	jmp .L_lambda_simple_end_0092
 23631                                  .L_lambda_simple_code_0092:	; lambda-simple body
 23632 00011329 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23633 0001132F 740B                    	je .L_lambda_simple_arity_check_ok_0092
 23634 00011331 FF742410                	push qword [rsp + 8 * 2]
 23635 00011335 6A01                    	push 1
 23636 00011337 E933470000              	jmp L_error_incorrect_arity_simple
 23637                                  .L_lambda_simple_arity_check_ok_0092:
 23638 0001133C C8000000                	enter 0, 0
 23639                                  	; preparing a tail-call
 23640 00011340 488B4520                	mov rax, PARAM(0)	; param x
 23641 00011344 50                      	push rax
 23642 00011345 48B8-                   	mov rax, L_constants + 2135
 23642 00011347 [5708000000000000] 
 23643 0001134F 50                      	push rax
 23644 00011350 6A02                    	push 2	; arg count
 23645 00011352 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 23646 0001135A 803805                  	cmp byte [rax], T_undefined
 23647 0001135D 0F8426460000            	je L_error_fvar_undefined
 23648 00011363 803804                  	cmp byte [rax], T_closure
 23649 00011366 0F85A1460000            	jne L_error_non_closure
 23650 0001136C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23651 0001136F FF7508                  	push qword [rbp + 8 * 1]
 23652                                   ; old ret addr
 23653 00011372 FF7500                  	push qword [rbp]
 23654                                   ; restore the old rbp
 23655 00011375 BB02000000              	mov rbx, 2
 23656 0001137A 4883C303                	add rbx, 3
 23657 0001137E 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23658 00011382 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23659 00011387 4C8D4DF8                	lea r9, [rbp - 8]
 23660 0001138B B906000000              	mov rcx, 6
 23661                                  .L_tc_recycle_frame_loop_00c6:
 23662 00011390 4883F900                	cmp rcx, 0
 23663 00011394 7413                    	je .L_tc_recycle_frame_done_00c6
 23664 00011396 4D8B11                  	mov r10, qword [r9]
 23665 00011399 4D8910                  	mov qword [r8], r10
 23666 0001139C 4983E808                	sub r8, 8
 23667 000113A0 4983E908                	sub r9, 8
 23668 000113A4 48FFC9                  	dec rcx
 23669 000113A7 EBE7                    	jmp .L_tc_recycle_frame_loop_00c6
 23670                                  .L_tc_recycle_frame_done_00c6:
 23671 000113A9 498D6008                	lea rsp, [r8 + 8]
 23672 000113AD 5D                      	pop rbp ; restore the old rbp
 23673 000113AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23674 000113B1 C9                      	leave
 23675 000113B2 C21800                  	ret AND_KILL_FRAME(1)
 23676                                  .L_lambda_simple_end_0092:	; new closure is in rax
 23677 000113B5 48890425[3E150000]      	mov qword [free_var_112], rax
 23678 000113BD 48B8-                   	mov rax, sob_void
 23678 000113BF [0000000000000000] 
 23679                                  
 23680 000113C7 4889C7                  	mov rdi, rax
 23681 000113CA E83C490000              	call print_sexpr_if_not_void
 23682 000113CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23683 000113D4 E8DD460000              	call malloc
 23684 000113D9 50                      	push rax
 23685 000113DA BF00000000              	mov rdi, 8 * 0	; new rib
 23686 000113DF E8D2460000              	call malloc
 23687 000113E4 50                      	push rax
 23688 000113E5 BF08000000              	mov rdi, 8 * 1	; extended env
 23689 000113EA E8C7460000              	call malloc
 23690 000113EF 488B7D10                	mov rdi, ENV
 23691 000113F3 BE00000000              	mov rsi, 0
 23692 000113F8 BA01000000              	mov rdx, 1
 23693                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 23694 000113FD 4883FE00                	cmp rsi, 0
 23695 00011401 7410                    	je .L_lambda_simple_env_end_0093
 23696 00011403 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23697 00011407 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23698 0001140B 48FFC6                  	inc rsi
 23699 0001140E 48FFC2                  	inc rdx
 23700 00011411 EBEA                    	jmp .L_lambda_simple_env_loop_0093
 23701                                  .L_lambda_simple_env_end_0093:
 23702 00011413 5B                      	pop rbx
 23703 00011414 BE00000000              	mov rsi, 0
 23704                                  .L_lambda_simple_params_loop_0093:	; copy params
 23705 00011419 4883FE00                	cmp rsi, 0
 23706 0001141D 740E                    	je .L_lambda_simple_params_end_0093
 23707 0001141F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23708 00011424 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23709 00011428 48FFC6                  	inc rsi
 23710 0001142B EBEC                    	jmp .L_lambda_simple_params_loop_0093
 23711                                  .L_lambda_simple_params_end_0093:
 23712 0001142D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23713 00011430 4889C3                  	mov rbx, rax
 23714 00011433 58                      	pop rax
 23715 00011434 C60004                  	mov byte [rax], T_closure
 23716 00011437 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23717 0001143B 48C74009[48140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 23718 00011443 E98C000000              	jmp .L_lambda_simple_end_0093
 23719                                  .L_lambda_simple_code_0093:	; lambda-simple body
 23720 00011448 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23721 0001144E 740B                    	je .L_lambda_simple_arity_check_ok_0093
 23722 00011450 FF742410                	push qword [rsp + 8 * 2]
 23723 00011454 6A01                    	push 1
 23724 00011456 E914460000              	jmp L_error_incorrect_arity_simple
 23725                                  .L_lambda_simple_arity_check_ok_0093:
 23726 0001145B C8000000                	enter 0, 0
 23727                                  	; preparing a tail-call
 23728 0001145F 48B8-                   	mov rax, L_constants + 2135
 23728 00011461 [5708000000000000] 
 23729 00011469 50                      	push rax
 23730 0001146A 488B4520                	mov rax, PARAM(0)	; param x
 23731 0001146E 50                      	push rax
 23732 0001146F 6A02                    	push 2	; arg count
 23733 00011471 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 23734 00011479 803805                  	cmp byte [rax], T_undefined
 23735 0001147C 0F8407450000            	je L_error_fvar_undefined
 23736 00011482 803804                  	cmp byte [rax], T_closure
 23737 00011485 0F8582450000            	jne L_error_non_closure
 23738 0001148B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23739 0001148E FF7508                  	push qword [rbp + 8 * 1]
 23740                                   ; old ret addr
 23741 00011491 FF7500                  	push qword [rbp]
 23742                                   ; restore the old rbp
 23743 00011494 BB02000000              	mov rbx, 2
 23744 00011499 4883C303                	add rbx, 3
 23745 0001149D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23746 000114A1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23747 000114A6 4C8D4DF8                	lea r9, [rbp - 8]
 23748 000114AA B906000000              	mov rcx, 6
 23749                                  .L_tc_recycle_frame_loop_00c7:
 23750 000114AF 4883F900                	cmp rcx, 0
 23751 000114B3 7413                    	je .L_tc_recycle_frame_done_00c7
 23752 000114B5 4D8B11                  	mov r10, qword [r9]
 23753 000114B8 4D8910                  	mov qword [r8], r10
 23754 000114BB 4983E808                	sub r8, 8
 23755 000114BF 4983E908                	sub r9, 8
 23756 000114C3 48FFC9                  	dec rcx
 23757 000114C6 EBE7                    	jmp .L_tc_recycle_frame_loop_00c7
 23758                                  .L_tc_recycle_frame_done_00c7:
 23759 000114C8 498D6008                	lea rsp, [r8 + 8]
 23760 000114CC 5D                      	pop rbp ; restore the old rbp
 23761 000114CD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23762 000114D0 C9                      	leave
 23763 000114D1 C21800                  	ret AND_KILL_FRAME(1)
 23764                                  .L_lambda_simple_end_0093:	; new closure is in rax
 23765 000114D4 48890425[B6140000]      	mov qword [free_var_104], rax
 23766 000114DC 48B8-                   	mov rax, sob_void
 23766 000114DE [0000000000000000] 
 23767                                  
 23768 000114E6 4889C7                  	mov rdi, rax
 23769 000114E9 E81D480000              	call print_sexpr_if_not_void
 23770 000114EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23771 000114F3 E8BE450000              	call malloc
 23772 000114F8 50                      	push rax
 23773 000114F9 BF00000000              	mov rdi, 8 * 0	; new rib
 23774 000114FE E8B3450000              	call malloc
 23775 00011503 50                      	push rax
 23776 00011504 BF08000000              	mov rdi, 8 * 1	; extended env
 23777 00011509 E8A8450000              	call malloc
 23778 0001150E 488B7D10                	mov rdi, ENV
 23779 00011512 BE00000000              	mov rsi, 0
 23780 00011517 BA01000000              	mov rdx, 1
 23781                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 23782 0001151C 4883FE00                	cmp rsi, 0
 23783 00011520 7410                    	je .L_lambda_simple_env_end_0094
 23784 00011522 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23785 00011526 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23786 0001152A 48FFC6                  	inc rsi
 23787 0001152D 48FFC2                  	inc rdx
 23788 00011530 EBEA                    	jmp .L_lambda_simple_env_loop_0094
 23789                                  .L_lambda_simple_env_end_0094:
 23790 00011532 5B                      	pop rbx
 23791 00011533 BE00000000              	mov rsi, 0
 23792                                  .L_lambda_simple_params_loop_0094:	; copy params
 23793 00011538 4883FE00                	cmp rsi, 0
 23794 0001153C 740E                    	je .L_lambda_simple_params_end_0094
 23795 0001153E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23796 00011543 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23797 00011547 48FFC6                  	inc rsi
 23798 0001154A EBEC                    	jmp .L_lambda_simple_params_loop_0094
 23799                                  .L_lambda_simple_params_end_0094:
 23800 0001154C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23801 0001154F 4889C3                  	mov rbx, rax
 23802 00011552 58                      	pop rax
 23803 00011553 C60004                  	mov byte [rax], T_closure
 23804 00011556 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23805 0001155A 48C74009[67150100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 23806 00011562 E9AF000000              	jmp .L_lambda_simple_end_0094
 23807                                  .L_lambda_simple_code_0094:	; lambda-simple body
 23808 00011567 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23809 0001156D 740B                    	je .L_lambda_simple_arity_check_ok_0094
 23810 0001156F FF742410                	push qword [rsp + 8 * 2]
 23811 00011573 6A01                    	push 1
 23812 00011575 E9F5440000              	jmp L_error_incorrect_arity_simple
 23813                                  .L_lambda_simple_arity_check_ok_0094:
 23814 0001157A C8000000                	enter 0, 0
 23815                                  	; preparing a tail-call
 23816                                  	; preparing a non-tail-call
 23817 0001157E 48B8-                   	mov rax, L_constants + 3190
 23817 00011580 [760C000000000000] 
 23818 00011588 50                      	push rax
 23819 00011589 488B4520                	mov rax, PARAM(0)	; param n
 23820 0001158D 50                      	push rax
 23821 0001158E 6A02                    	push 2	; arg count
 23822 00011590 488B0425[93150000]      	mov rax, qword [free_var_117]	; free var remainder
 23823 00011598 803805                  	cmp byte [rax], T_undefined
 23824 0001159B 0F84E8430000            	je L_error_fvar_undefined
 23825 000115A1 803804                  	cmp byte [rax], T_closure
 23826 000115A4 0F8563440000            	jne L_error_non_closure
 23827 000115AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23828 000115AD FF5009                  	call SOB_CLOSURE_CODE(rax)
 23829 000115B0 50                      	push rax
 23830 000115B1 6A01                    	push 1	; arg count
 23831 000115B3 488B0425[D5170000]      	mov rax, qword [free_var_151]	; free var zero?
 23832 000115BB 803805                  	cmp byte [rax], T_undefined
 23833 000115BE 0F84C5430000            	je L_error_fvar_undefined
 23834 000115C4 803804                  	cmp byte [rax], T_closure
 23835 000115C7 0F8540440000            	jne L_error_non_closure
 23836 000115CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 23837 000115D0 FF7508                  	push qword [rbp + 8 * 1]
 23838                                   ; old ret addr
 23839 000115D3 FF7500                  	push qword [rbp]
 23840                                   ; restore the old rbp
 23841 000115D6 BB01000000              	mov rbx, 1
 23842 000115DB 4883C303                	add rbx, 3
 23843 000115DF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23844 000115E3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23845 000115E8 4C8D4DF8                	lea r9, [rbp - 8]
 23846 000115EC B905000000              	mov rcx, 5
 23847                                  .L_tc_recycle_frame_loop_00c8:
 23848 000115F1 4883F900                	cmp rcx, 0
 23849 000115F5 7413                    	je .L_tc_recycle_frame_done_00c8
 23850 000115F7 4D8B11                  	mov r10, qword [r9]
 23851 000115FA 4D8910                  	mov qword [r8], r10
 23852 000115FD 4983E808                	sub r8, 8
 23853 00011601 4983E908                	sub r9, 8
 23854 00011605 48FFC9                  	dec rcx
 23855 00011608 EBE7                    	jmp .L_tc_recycle_frame_loop_00c8
 23856                                  .L_tc_recycle_frame_done_00c8:
 23857 0001160A 498D6008                	lea rsp, [r8 + 8]
 23858 0001160E 5D                      	pop rbp ; restore the old rbp
 23859 0001160F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23860 00011612 C9                      	leave
 23861 00011613 C21800                  	ret AND_KILL_FRAME(1)
 23862                                  .L_lambda_simple_end_0094:	; new closure is in rax
 23863 00011616 48890425[51130000]      	mov qword [free_var_83], rax
 23864 0001161E 48B8-                   	mov rax, sob_void
 23864 00011620 [0000000000000000] 
 23865                                  
 23866 00011628 4889C7                  	mov rdi, rax
 23867 0001162B E8DB460000              	call print_sexpr_if_not_void
 23868 00011630 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23869 00011635 E87C440000              	call malloc
 23870 0001163A 50                      	push rax
 23871 0001163B BF00000000              	mov rdi, 8 * 0	; new rib
 23872 00011640 E871440000              	call malloc
 23873 00011645 50                      	push rax
 23874 00011646 BF08000000              	mov rdi, 8 * 1	; extended env
 23875 0001164B E866440000              	call malloc
 23876 00011650 488B7D10                	mov rdi, ENV
 23877 00011654 BE00000000              	mov rsi, 0
 23878 00011659 BA01000000              	mov rdx, 1
 23879                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 23880 0001165E 4883FE00                	cmp rsi, 0
 23881 00011662 7410                    	je .L_lambda_simple_env_end_0095
 23882 00011664 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23883 00011668 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23884 0001166C 48FFC6                  	inc rsi
 23885 0001166F 48FFC2                  	inc rdx
 23886 00011672 EBEA                    	jmp .L_lambda_simple_env_loop_0095
 23887                                  .L_lambda_simple_env_end_0095:
 23888 00011674 5B                      	pop rbx
 23889 00011675 BE00000000              	mov rsi, 0
 23890                                  .L_lambda_simple_params_loop_0095:	; copy params
 23891 0001167A 4883FE00                	cmp rsi, 0
 23892 0001167E 740E                    	je .L_lambda_simple_params_end_0095
 23893 00011680 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23894 00011685 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23895 00011689 48FFC6                  	inc rsi
 23896 0001168C EBEC                    	jmp .L_lambda_simple_params_loop_0095
 23897                                  .L_lambda_simple_params_end_0095:
 23898 0001168E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23899 00011691 4889C3                  	mov rbx, rax
 23900 00011694 58                      	pop rax
 23901 00011695 C60004                  	mov byte [rax], T_closure
 23902 00011698 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23903 0001169C 48C74009[A9160100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 23904 000116A4 E9A4000000              	jmp .L_lambda_simple_end_0095
 23905                                  .L_lambda_simple_code_0095:	; lambda-simple body
 23906 000116A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23907 000116AF 740B                    	je .L_lambda_simple_arity_check_ok_0095
 23908 000116B1 FF742410                	push qword [rsp + 8 * 2]
 23909 000116B5 6A01                    	push 1
 23910 000116B7 E9B3430000              	jmp L_error_incorrect_arity_simple
 23911                                  .L_lambda_simple_arity_check_ok_0095:
 23912 000116BC C8000000                	enter 0, 0
 23913                                  	; preparing a tail-call
 23914                                  	; preparing a non-tail-call
 23915 000116C0 488B4520                	mov rax, PARAM(0)	; param n
 23916 000116C4 50                      	push rax
 23917 000116C5 6A01                    	push 1	; arg count
 23918 000116C7 488B0425[51130000]      	mov rax, qword [free_var_83]	; free var even?
 23919 000116CF 803805                  	cmp byte [rax], T_undefined
 23920 000116D2 0F84B1420000            	je L_error_fvar_undefined
 23921 000116D8 803804                  	cmp byte [rax], T_closure
 23922 000116DB 0F852C430000            	jne L_error_non_closure
 23923 000116E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23924 000116E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23925 000116E7 50                      	push rax
 23926 000116E8 6A01                    	push 1	; arg count
 23927 000116EA 488B0425[D8140000]      	mov rax, qword [free_var_106]	; free var not
 23928 000116F2 803805                  	cmp byte [rax], T_undefined
 23929 000116F5 0F848E420000            	je L_error_fvar_undefined
 23930 000116FB 803804                  	cmp byte [rax], T_closure
 23931 000116FE 0F8509430000            	jne L_error_non_closure
 23932 00011704 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23933 00011707 FF7508                  	push qword [rbp + 8 * 1]
 23934                                   ; old ret addr
 23935 0001170A FF7500                  	push qword [rbp]
 23936                                   ; restore the old rbp
 23937 0001170D BB01000000              	mov rbx, 1
 23938 00011712 4883C303                	add rbx, 3
 23939 00011716 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 23940 0001171A 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 23941 0001171F 4C8D4DF8                	lea r9, [rbp - 8]
 23942 00011723 B905000000              	mov rcx, 5
 23943                                  .L_tc_recycle_frame_loop_00c9:
 23944 00011728 4883F900                	cmp rcx, 0
 23945 0001172C 7413                    	je .L_tc_recycle_frame_done_00c9
 23946 0001172E 4D8B11                  	mov r10, qword [r9]
 23947 00011731 4D8910                  	mov qword [r8], r10
 23948 00011734 4983E808                	sub r8, 8
 23949 00011738 4983E908                	sub r9, 8
 23950 0001173C 48FFC9                  	dec rcx
 23951 0001173F EBE7                    	jmp .L_tc_recycle_frame_loop_00c9
 23952                                  .L_tc_recycle_frame_done_00c9:
 23953 00011741 498D6008                	lea rsp, [r8 + 8]
 23954 00011745 5D                      	pop rbp ; restore the old rbp
 23955 00011746 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23956 00011749 C9                      	leave
 23957 0001174A C21800                  	ret AND_KILL_FRAME(1)
 23958                                  .L_lambda_simple_end_0095:	; new closure is in rax
 23959 0001174D 48890425[0B150000]      	mov qword [free_var_109], rax
 23960 00011755 48B8-                   	mov rax, sob_void
 23960 00011757 [0000000000000000] 
 23961                                  
 23962 0001175F 4889C7                  	mov rdi, rax
 23963 00011762 E8A4450000              	call print_sexpr_if_not_void
 23964 00011767 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23965 0001176C E845430000              	call malloc
 23966 00011771 50                      	push rax
 23967 00011772 BF00000000              	mov rdi, 8 * 0	; new rib
 23968 00011777 E83A430000              	call malloc
 23969 0001177C 50                      	push rax
 23970 0001177D BF08000000              	mov rdi, 8 * 1	; extended env
 23971 00011782 E82F430000              	call malloc
 23972 00011787 488B7D10                	mov rdi, ENV
 23973 0001178B BE00000000              	mov rsi, 0
 23974 00011790 BA01000000              	mov rdx, 1
 23975                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 23976 00011795 4883FE00                	cmp rsi, 0
 23977 00011799 7410                    	je .L_lambda_simple_env_end_0096
 23978 0001179B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23979 0001179F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23980 000117A3 48FFC6                  	inc rsi
 23981 000117A6 48FFC2                  	inc rdx
 23982 000117A9 EBEA                    	jmp .L_lambda_simple_env_loop_0096
 23983                                  .L_lambda_simple_env_end_0096:
 23984 000117AB 5B                      	pop rbx
 23985 000117AC BE00000000              	mov rsi, 0
 23986                                  .L_lambda_simple_params_loop_0096:	; copy params
 23987 000117B1 4883FE00                	cmp rsi, 0
 23988 000117B5 740E                    	je .L_lambda_simple_params_end_0096
 23989 000117B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23990 000117BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23991 000117C0 48FFC6                  	inc rsi
 23992 000117C3 EBEC                    	jmp .L_lambda_simple_params_loop_0096
 23993                                  .L_lambda_simple_params_end_0096:
 23994 000117C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23995 000117C8 4889C3                  	mov rbx, rax
 23996 000117CB 58                      	pop rax
 23997 000117CC C60004                  	mov byte [rax], T_closure
 23998 000117CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23999 000117D3 48C74009[E0170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 24000 000117DB E9B6000000              	jmp .L_lambda_simple_end_0096
 24001                                  .L_lambda_simple_code_0096:	; lambda-simple body
 24002 000117E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24003 000117E6 740B                    	je .L_lambda_simple_arity_check_ok_0096
 24004 000117E8 FF742410                	push qword [rsp + 8 * 2]
 24005 000117EC 6A01                    	push 1
 24006 000117EE E97C420000              	jmp L_error_incorrect_arity_simple
 24007                                  .L_lambda_simple_arity_check_ok_0096:
 24008 000117F3 C8000000                	enter 0, 0
 24009                                  	; preparing a non-tail-call
 24010 000117F7 488B4520                	mov rax, PARAM(0)	; param x
 24011 000117FB 50                      	push rax
 24012 000117FC 6A01                    	push 1	; arg count
 24013 000117FE 488B0425[B6140000]      	mov rax, qword [free_var_104]	; free var negative?
 24014 00011806 803805                  	cmp byte [rax], T_undefined
 24015 00011809 0F847A410000            	je L_error_fvar_undefined
 24016 0001180F 803804                  	cmp byte [rax], T_closure
 24017 00011812 0F85F5410000            	jne L_error_non_closure
 24018 00011818 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24019 0001181B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24020 0001181E 483D[02000000]          	cmp rax, sob_boolean_false
 24021 00011824 7468                    	je .L_if_else_006b
 24022                                  	; preparing a tail-call
 24023 00011826 488B4520                	mov rax, PARAM(0)	; param x
 24024 0001182A 50                      	push rax
 24025 0001182B 6A01                    	push 1	; arg count
 24026 0001182D 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 24027 00011835 803805                  	cmp byte [rax], T_undefined
 24028 00011838 0F844B410000            	je L_error_fvar_undefined
 24029 0001183E 803804                  	cmp byte [rax], T_closure
 24030 00011841 0F85C6410000            	jne L_error_non_closure
 24031 00011847 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24032 0001184A FF7508                  	push qword [rbp + 8 * 1]
 24033                                   ; old ret addr
 24034 0001184D FF7500                  	push qword [rbp]
 24035                                   ; restore the old rbp
 24036 00011850 BB01000000              	mov rbx, 1
 24037 00011855 4883C303                	add rbx, 3
 24038 00011859 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24039 0001185D 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24040 00011862 4C8D4DF8                	lea r9, [rbp - 8]
 24041 00011866 B905000000              	mov rcx, 5
 24042                                  .L_tc_recycle_frame_loop_00ca:
 24043 0001186B 4883F900                	cmp rcx, 0
 24044 0001186F 7413                    	je .L_tc_recycle_frame_done_00ca
 24045 00011871 4D8B11                  	mov r10, qword [r9]
 24046 00011874 4D8910                  	mov qword [r8], r10
 24047 00011877 4983E808                	sub r8, 8
 24048 0001187B 4983E908                	sub r9, 8
 24049 0001187F 48FFC9                  	dec rcx
 24050 00011882 EBE7                    	jmp .L_tc_recycle_frame_loop_00ca
 24051                                  .L_tc_recycle_frame_done_00ca:
 24052 00011884 498D6008                	lea rsp, [r8 + 8]
 24053 00011888 5D                      	pop rbp ; restore the old rbp
 24054 00011889 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24055 0001188C EB04                    	jmp .L_if_end_006b
 24056                                  .L_if_else_006b:
 24057 0001188E 488B4520                	mov rax, PARAM(0)	; param x
 24058                                  .L_if_end_006b:
 24059 00011892 C9                      	leave
 24060 00011893 C21800                  	ret AND_KILL_FRAME(1)
 24061                                  .L_lambda_simple_end_0096:	; new closure is in rax
 24062 00011896 48890425[CC0F0000]      	mov qword [free_var_30], rax
 24063 0001189E 48B8-                   	mov rax, sob_void
 24063 000118A0 [0000000000000000] 
 24064                                  
 24065 000118A8 4889C7                  	mov rdi, rax
 24066 000118AB E85B440000              	call print_sexpr_if_not_void
 24067 000118B0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24068 000118B5 E8FC410000              	call malloc
 24069 000118BA 50                      	push rax
 24070 000118BB BF00000000              	mov rdi, 8 * 0	; new rib
 24071 000118C0 E8F1410000              	call malloc
 24072 000118C5 50                      	push rax
 24073 000118C6 BF08000000              	mov rdi, 8 * 1	; extended env
 24074 000118CB E8E6410000              	call malloc
 24075 000118D0 488B7D10                	mov rdi, ENV
 24076 000118D4 BE00000000              	mov rsi, 0
 24077 000118D9 BA01000000              	mov rdx, 1
 24078                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 24079 000118DE 4883FE00                	cmp rsi, 0
 24080 000118E2 7410                    	je .L_lambda_simple_env_end_0097
 24081 000118E4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24082 000118E8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24083 000118EC 48FFC6                  	inc rsi
 24084 000118EF 48FFC2                  	inc rdx
 24085 000118F2 EBEA                    	jmp .L_lambda_simple_env_loop_0097
 24086                                  .L_lambda_simple_env_end_0097:
 24087 000118F4 5B                      	pop rbx
 24088 000118F5 BE00000000              	mov rsi, 0
 24089                                  .L_lambda_simple_params_loop_0097:	; copy params
 24090 000118FA 4883FE00                	cmp rsi, 0
 24091 000118FE 740E                    	je .L_lambda_simple_params_end_0097
 24092 00011900 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24093 00011905 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24094 00011909 48FFC6                  	inc rsi
 24095 0001190C EBEC                    	jmp .L_lambda_simple_params_loop_0097
 24096                                  .L_lambda_simple_params_end_0097:
 24097 0001190E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24098 00011911 4889C3                  	mov rbx, rax
 24099 00011914 58                      	pop rax
 24100 00011915 C60004                  	mov byte [rax], T_closure
 24101 00011918 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24102 0001191C 48C74009[29190100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 24103 00011924 E9F7060000              	jmp .L_lambda_simple_end_0097
 24104                                  .L_lambda_simple_code_0097:	; lambda-simple body
 24105 00011929 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24106 0001192F 740B                    	je .L_lambda_simple_arity_check_ok_0097
 24107 00011931 FF742410                	push qword [rsp + 8 * 2]
 24108 00011935 6A02                    	push 2
 24109 00011937 E933410000              	jmp L_error_incorrect_arity_simple
 24110                                  .L_lambda_simple_arity_check_ok_0097:
 24111 0001193C C8000000                	enter 0, 0
 24112                                  	; preparing a non-tail-call
 24113 00011940 488B4520                	mov rax, PARAM(0)	; param e1
 24114 00011944 50                      	push rax
 24115 00011945 6A01                    	push 1	; arg count
 24116 00011947 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
 24117 0001194F 803805                  	cmp byte [rax], T_undefined
 24118 00011952 0F8431400000            	je L_error_fvar_undefined
 24119 00011958 803804                  	cmp byte [rax], T_closure
 24120 0001195B 0F85AC400000            	jne L_error_non_closure
 24121 00011961 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24122 00011964 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24123 00011967 483D[02000000]          	cmp rax, sob_boolean_false
 24124 0001196D 7429                    	je .L_if_else_006c
 24125                                  	; preparing a non-tail-call
 24126 0001196F 488B4528                	mov rax, PARAM(1)	; param e2
 24127 00011973 50                      	push rax
 24128 00011974 6A01                    	push 1	; arg count
 24129 00011976 488B0425[2D150000]      	mov rax, qword [free_var_111]	; free var pair?
 24130 0001197E 803805                  	cmp byte [rax], T_undefined
 24131 00011981 0F8402400000            	je L_error_fvar_undefined
 24132 00011987 803804                  	cmp byte [rax], T_closure
 24133 0001198A 0F857D400000            	jne L_error_non_closure
 24134 00011990 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24135 00011993 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24136 00011996 EB0A                    	jmp .L_if_end_006c
 24137                                  .L_if_else_006c:
 24138 00011998 48B8-                   	mov rax, L_constants + 2
 24138 0001199A [0200000000000000] 
 24139                                  .L_if_end_006c:
 24140 000119A2 483D[02000000]          	cmp rax, sob_boolean_false
 24141 000119A8 0F8440010000            	je .L_if_else_0078
 24142                                  	; preparing a non-tail-call
 24143                                  	; preparing a non-tail-call
 24144 000119AE 488B4528                	mov rax, PARAM(1)	; param e2
 24145 000119B2 50                      	push rax
 24146 000119B3 6A01                    	push 1	; arg count
 24147 000119B5 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 24148 000119BD 803805                  	cmp byte [rax], T_undefined
 24149 000119C0 0F84C33F0000            	je L_error_fvar_undefined
 24150 000119C6 803804                  	cmp byte [rax], T_closure
 24151 000119C9 0F853E400000            	jne L_error_non_closure
 24152 000119CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24153 000119D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24154 000119D5 50                      	push rax
 24155                                  	; preparing a non-tail-call
 24156 000119D6 488B4520                	mov rax, PARAM(0)	; param e1
 24157 000119DA 50                      	push rax
 24158 000119DB 6A01                    	push 1	; arg count
 24159 000119DD 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 24160 000119E5 803805                  	cmp byte [rax], T_undefined
 24161 000119E8 0F849B3F0000            	je L_error_fvar_undefined
 24162 000119EE 803804                  	cmp byte [rax], T_closure
 24163 000119F1 0F8516400000            	jne L_error_non_closure
 24164 000119F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24165 000119FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 24166 000119FD 50                      	push rax
 24167 000119FE 6A02                    	push 2	; arg count
 24168 00011A00 488B0425[2F130000]      	mov rax, qword [free_var_81]	; free var equal?
 24169 00011A08 803805                  	cmp byte [rax], T_undefined
 24170 00011A0B 0F84783F0000            	je L_error_fvar_undefined
 24171 00011A11 803804                  	cmp byte [rax], T_closure
 24172 00011A14 0F85F33F0000            	jne L_error_non_closure
 24173 00011A1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24174 00011A1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24175 00011A20 483D[02000000]          	cmp rax, sob_boolean_false
 24176 00011A26 0F84B3000000            	je .L_if_else_006d
 24177                                  	; preparing a tail-call
 24178                                  	; preparing a non-tail-call
 24179 00011A2C 488B4528                	mov rax, PARAM(1)	; param e2
 24180 00011A30 50                      	push rax
 24181 00011A31 6A01                    	push 1	; arg count
 24182 00011A33 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 24183 00011A3B 803805                  	cmp byte [rax], T_undefined
 24184 00011A3E 0F84453F0000            	je L_error_fvar_undefined
 24185 00011A44 803804                  	cmp byte [rax], T_closure
 24186 00011A47 0F85C03F0000            	jne L_error_non_closure
 24187 00011A4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24188 00011A50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24189 00011A53 50                      	push rax
 24190                                  	; preparing a non-tail-call
 24191 00011A54 488B4520                	mov rax, PARAM(0)	; param e1
 24192 00011A58 50                      	push rax
 24193 00011A59 6A01                    	push 1	; arg count
 24194 00011A5B 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 24195 00011A63 803805                  	cmp byte [rax], T_undefined
 24196 00011A66 0F841D3F0000            	je L_error_fvar_undefined
 24197 00011A6C 803804                  	cmp byte [rax], T_closure
 24198 00011A6F 0F85983F0000            	jne L_error_non_closure
 24199 00011A75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24200 00011A78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24201 00011A7B 50                      	push rax
 24202 00011A7C 6A02                    	push 2	; arg count
 24203 00011A7E 488B0425[2F130000]      	mov rax, qword [free_var_81]	; free var equal?
 24204 00011A86 803805                  	cmp byte [rax], T_undefined
 24205 00011A89 0F84FA3E0000            	je L_error_fvar_undefined
 24206 00011A8F 803804                  	cmp byte [rax], T_closure
 24207 00011A92 0F85753F0000            	jne L_error_non_closure
 24208 00011A98 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24209 00011A9B FF7508                  	push qword [rbp + 8 * 1]
 24210                                   ; old ret addr
 24211 00011A9E FF7500                  	push qword [rbp]
 24212                                   ; restore the old rbp
 24213 00011AA1 BB02000000              	mov rbx, 2
 24214 00011AA6 4883C303                	add rbx, 3
 24215 00011AAA 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24216 00011AAE 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24217 00011AB3 4C8D4DF8                	lea r9, [rbp - 8]
 24218 00011AB7 B906000000              	mov rcx, 6
 24219                                  .L_tc_recycle_frame_loop_00cb:
 24220 00011ABC 4883F900                	cmp rcx, 0
 24221 00011AC0 7413                    	je .L_tc_recycle_frame_done_00cb
 24222 00011AC2 4D8B11                  	mov r10, qword [r9]
 24223 00011AC5 4D8910                  	mov qword [r8], r10
 24224 00011AC8 4983E808                	sub r8, 8
 24225 00011ACC 4983E908                	sub r9, 8
 24226 00011AD0 48FFC9                  	dec rcx
 24227 00011AD3 EBE7                    	jmp .L_tc_recycle_frame_loop_00cb
 24228                                  .L_tc_recycle_frame_done_00cb:
 24229 00011AD5 498D6008                	lea rsp, [r8 + 8]
 24230 00011AD9 5D                      	pop rbp ; restore the old rbp
 24231 00011ADA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24232 00011ADD EB0A                    	jmp .L_if_end_006d
 24233                                  .L_if_else_006d:
 24234 00011ADF 48B8-                   	mov rax, L_constants + 2
 24234 00011AE1 [0200000000000000] 
 24235                                  .L_if_end_006d:
 24236 00011AE9 E92E050000              	jmp .L_if_end_0078
 24237                                  .L_if_else_0078:
 24238                                  	; preparing a non-tail-call
 24239 00011AEE 488B4520                	mov rax, PARAM(0)	; param e1
 24240 00011AF2 50                      	push rax
 24241 00011AF3 6A01                    	push 1	; arg count
 24242 00011AF5 488B0425[A2170000]      	mov rax, qword [free_var_148]	; free var vector?
 24243 00011AFD 803805                  	cmp byte [rax], T_undefined
 24244 00011B00 0F84833E0000            	je L_error_fvar_undefined
 24245 00011B06 803804                  	cmp byte [rax], T_closure
 24246 00011B09 0F85FE3E0000            	jne L_error_non_closure
 24247 00011B0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24248 00011B12 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24249 00011B15 483D[02000000]          	cmp rax, sob_boolean_false
 24250 00011B1B 0F84AF000000            	je .L_if_else_006f
 24251                                  	; preparing a non-tail-call
 24252 00011B21 488B4528                	mov rax, PARAM(1)	; param e2
 24253 00011B25 50                      	push rax
 24254 00011B26 6A01                    	push 1	; arg count
 24255 00011B28 488B0425[A2170000]      	mov rax, qword [free_var_148]	; free var vector?
 24256 00011B30 803805                  	cmp byte [rax], T_undefined
 24257 00011B33 0F84503E0000            	je L_error_fvar_undefined
 24258 00011B39 803804                  	cmp byte [rax], T_closure
 24259 00011B3C 0F85CB3E0000            	jne L_error_non_closure
 24260 00011B42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24261 00011B45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24262 00011B48 483D[02000000]          	cmp rax, sob_boolean_false
 24263 00011B4E 7474                    	je .L_if_else_006e
 24264                                  	; preparing a non-tail-call
 24265                                  	; preparing a non-tail-call
 24266 00011B50 488B4528                	mov rax, PARAM(1)	; param e2
 24267 00011B54 50                      	push rax
 24268 00011B55 6A01                    	push 1	; arg count
 24269 00011B57 488B0425[4D170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24270 00011B5F 803805                  	cmp byte [rax], T_undefined
 24271 00011B62 0F84213E0000            	je L_error_fvar_undefined
 24272 00011B68 803804                  	cmp byte [rax], T_closure
 24273 00011B6B 0F859C3E0000            	jne L_error_non_closure
 24274 00011B71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24275 00011B74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24276 00011B77 50                      	push rax
 24277                                  	; preparing a non-tail-call
 24278 00011B78 488B4520                	mov rax, PARAM(0)	; param e1
 24279 00011B7C 50                      	push rax
 24280 00011B7D 6A01                    	push 1	; arg count
 24281 00011B7F 488B0425[4D170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24282 00011B87 803805                  	cmp byte [rax], T_undefined
 24283 00011B8A 0F84F93D0000            	je L_error_fvar_undefined
 24284 00011B90 803804                  	cmp byte [rax], T_closure
 24285 00011B93 0F85743E0000            	jne L_error_non_closure
 24286 00011B99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24287 00011B9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24288 00011B9F 50                      	push rax
 24289 00011BA0 6A02                    	push 2	; arg count
 24290 00011BA2 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 24291 00011BAA 803805                  	cmp byte [rax], T_undefined
 24292 00011BAD 0F84D63D0000            	je L_error_fvar_undefined
 24293 00011BB3 803804                  	cmp byte [rax], T_closure
 24294 00011BB6 0F85513E0000            	jne L_error_non_closure
 24295 00011BBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24296 00011BBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24297 00011BC2 EB0A                    	jmp .L_if_end_006e
 24298                                  .L_if_else_006e:
 24299 00011BC4 48B8-                   	mov rax, L_constants + 2
 24299 00011BC6 [0200000000000000] 
 24300                                  .L_if_end_006e:
 24301 00011BCE EB0A                    	jmp .L_if_end_006f
 24302                                  .L_if_else_006f:
 24303 00011BD0 48B8-                   	mov rax, L_constants + 2
 24303 00011BD2 [0200000000000000] 
 24304                                  .L_if_end_006f:
 24305 00011BDA 483D[02000000]          	cmp rax, sob_boolean_false
 24306 00011BE0 0F84B6000000            	je .L_if_else_0077
 24307                                  	; preparing a tail-call
 24308                                  	; preparing a non-tail-call
 24309 00011BE6 488B4528                	mov rax, PARAM(1)	; param e2
 24310 00011BEA 50                      	push rax
 24311 00011BEB 6A01                    	push 1	; arg count
 24312 00011BED 488B0425[2B170000]      	mov rax, qword [free_var_141]	; free var vector->list
 24313 00011BF5 803805                  	cmp byte [rax], T_undefined
 24314 00011BF8 0F848B3D0000            	je L_error_fvar_undefined
 24315 00011BFE 803804                  	cmp byte [rax], T_closure
 24316 00011C01 0F85063E0000            	jne L_error_non_closure
 24317 00011C07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24318 00011C0A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24319 00011C0D 50                      	push rax
 24320                                  	; preparing a non-tail-call
 24321 00011C0E 488B4520                	mov rax, PARAM(0)	; param e1
 24322 00011C12 50                      	push rax
 24323 00011C13 6A01                    	push 1	; arg count
 24324 00011C15 488B0425[2B170000]      	mov rax, qword [free_var_141]	; free var vector->list
 24325 00011C1D 803805                  	cmp byte [rax], T_undefined
 24326 00011C20 0F84633D0000            	je L_error_fvar_undefined
 24327 00011C26 803804                  	cmp byte [rax], T_closure
 24328 00011C29 0F85DE3D0000            	jne L_error_non_closure
 24329 00011C2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24330 00011C32 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24331 00011C35 50                      	push rax
 24332 00011C36 6A02                    	push 2	; arg count
 24333 00011C38 488B0425[2F130000]      	mov rax, qword [free_var_81]	; free var equal?
 24334 00011C40 803805                  	cmp byte [rax], T_undefined
 24335 00011C43 0F84403D0000            	je L_error_fvar_undefined
 24336 00011C49 803804                  	cmp byte [rax], T_closure
 24337 00011C4C 0F85BB3D0000            	jne L_error_non_closure
 24338 00011C52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24339 00011C55 FF7508                  	push qword [rbp + 8 * 1]
 24340                                   ; old ret addr
 24341 00011C58 FF7500                  	push qword [rbp]
 24342                                   ; restore the old rbp
 24343 00011C5B BB02000000              	mov rbx, 2
 24344 00011C60 4883C303                	add rbx, 3
 24345 00011C64 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24346 00011C68 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24347 00011C6D 4C8D4DF8                	lea r9, [rbp - 8]
 24348 00011C71 B906000000              	mov rcx, 6
 24349                                  .L_tc_recycle_frame_loop_00cc:
 24350 00011C76 4883F900                	cmp rcx, 0
 24351 00011C7A 7413                    	je .L_tc_recycle_frame_done_00cc
 24352 00011C7C 4D8B11                  	mov r10, qword [r9]
 24353 00011C7F 4D8910                  	mov qword [r8], r10
 24354 00011C82 4983E808                	sub r8, 8
 24355 00011C86 4983E908                	sub r9, 8
 24356 00011C8A 48FFC9                  	dec rcx
 24357 00011C8D EBE7                    	jmp .L_tc_recycle_frame_loop_00cc
 24358                                  .L_tc_recycle_frame_done_00cc:
 24359 00011C8F 498D6008                	lea rsp, [r8 + 8]
 24360 00011C93 5D                      	pop rbp ; restore the old rbp
 24361 00011C94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24362 00011C97 E980030000              	jmp .L_if_end_0077
 24363                                  .L_if_else_0077:
 24364                                  	; preparing a non-tail-call
 24365 00011C9C 488B4520                	mov rax, PARAM(0)	; param e1
 24366 00011CA0 50                      	push rax
 24367 00011CA1 6A01                    	push 1	; arg count
 24368 00011CA3 488B0425[F8160000]      	mov rax, qword [free_var_138]	; free var string?
 24369 00011CAB 803805                  	cmp byte [rax], T_undefined
 24370 00011CAE 0F84D53C0000            	je L_error_fvar_undefined
 24371 00011CB4 803804                  	cmp byte [rax], T_closure
 24372 00011CB7 0F85503D0000            	jne L_error_non_closure
 24373 00011CBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24374 00011CC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24375 00011CC3 483D[02000000]          	cmp rax, sob_boolean_false
 24376 00011CC9 0F84AF000000            	je .L_if_else_0071
 24377                                  	; preparing a non-tail-call
 24378 00011CCF 488B4528                	mov rax, PARAM(1)	; param e2
 24379 00011CD3 50                      	push rax
 24380 00011CD4 6A01                    	push 1	; arg count
 24381 00011CD6 488B0425[F8160000]      	mov rax, qword [free_var_138]	; free var string?
 24382 00011CDE 803805                  	cmp byte [rax], T_undefined
 24383 00011CE1 0F84A23C0000            	je L_error_fvar_undefined
 24384 00011CE7 803804                  	cmp byte [rax], T_closure
 24385 00011CEA 0F851D3D0000            	jne L_error_non_closure
 24386 00011CF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24387 00011CF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24388 00011CF6 483D[02000000]          	cmp rax, sob_boolean_false
 24389 00011CFC 7474                    	je .L_if_else_0070
 24390                                  	; preparing a non-tail-call
 24391                                  	; preparing a non-tail-call
 24392 00011CFE 488B4528                	mov rax, PARAM(1)	; param e2
 24393 00011D02 50                      	push rax
 24394 00011D03 6A01                    	push 1	; arg count
 24395 00011D05 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 24396 00011D0D 803805                  	cmp byte [rax], T_undefined
 24397 00011D10 0F84733C0000            	je L_error_fvar_undefined
 24398 00011D16 803804                  	cmp byte [rax], T_closure
 24399 00011D19 0F85EE3C0000            	jne L_error_non_closure
 24400 00011D1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24401 00011D22 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24402 00011D25 50                      	push rax
 24403                                  	; preparing a non-tail-call
 24404 00011D26 488B4520                	mov rax, PARAM(0)	; param e1
 24405 00011D2A 50                      	push rax
 24406 00011D2B 6A01                    	push 1	; arg count
 24407 00011D2D 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 24408 00011D35 803805                  	cmp byte [rax], T_undefined
 24409 00011D38 0F844B3C0000            	je L_error_fvar_undefined
 24410 00011D3E 803804                  	cmp byte [rax], T_closure
 24411 00011D41 0F85C63C0000            	jne L_error_non_closure
 24412 00011D47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24413 00011D4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24414 00011D4D 50                      	push rax
 24415 00011D4E 6A02                    	push 2	; arg count
 24416 00011D50 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 24417 00011D58 803805                  	cmp byte [rax], T_undefined
 24418 00011D5B 0F84283C0000            	je L_error_fvar_undefined
 24419 00011D61 803804                  	cmp byte [rax], T_closure
 24420 00011D64 0F85A33C0000            	jne L_error_non_closure
 24421 00011D6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24422 00011D6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24423 00011D70 EB0A                    	jmp .L_if_end_0070
 24424                                  .L_if_else_0070:
 24425 00011D72 48B8-                   	mov rax, L_constants + 2
 24425 00011D74 [0200000000000000] 
 24426                                  .L_if_end_0070:
 24427 00011D7C EB0A                    	jmp .L_if_end_0071
 24428                                  .L_if_else_0071:
 24429 00011D7E 48B8-                   	mov rax, L_constants + 2
 24429 00011D80 [0200000000000000] 
 24430                                  .L_if_end_0071:
 24431 00011D88 483D[02000000]          	cmp rax, sob_boolean_false
 24432 00011D8E 7470                    	je .L_if_else_0076
 24433                                  	; preparing a tail-call
 24434 00011D90 488B4528                	mov rax, PARAM(1)	; param e2
 24435 00011D94 50                      	push rax
 24436 00011D95 488B4520                	mov rax, PARAM(0)	; param e1
 24437 00011D99 50                      	push rax
 24438 00011D9A 6A02                    	push 2	; arg count
 24439 00011D9C 488B0425[C5160000]      	mov rax, qword [free_var_135]	; free var string=?
 24440 00011DA4 803805                  	cmp byte [rax], T_undefined
 24441 00011DA7 0F84DC3B0000            	je L_error_fvar_undefined
 24442 00011DAD 803804                  	cmp byte [rax], T_closure
 24443 00011DB0 0F85573C0000            	jne L_error_non_closure
 24444 00011DB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24445 00011DB9 FF7508                  	push qword [rbp + 8 * 1]
 24446                                   ; old ret addr
 24447 00011DBC FF7500                  	push qword [rbp]
 24448                                   ; restore the old rbp
 24449 00011DBF BB02000000              	mov rbx, 2
 24450 00011DC4 4883C303                	add rbx, 3
 24451 00011DC8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24452 00011DCC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24453 00011DD1 4C8D4DF8                	lea r9, [rbp - 8]
 24454 00011DD5 B906000000              	mov rcx, 6
 24455                                  .L_tc_recycle_frame_loop_00cd:
 24456 00011DDA 4883F900                	cmp rcx, 0
 24457 00011DDE 7413                    	je .L_tc_recycle_frame_done_00cd
 24458 00011DE0 4D8B11                  	mov r10, qword [r9]
 24459 00011DE3 4D8910                  	mov qword [r8], r10
 24460 00011DE6 4983E808                	sub r8, 8
 24461 00011DEA 4983E908                	sub r9, 8
 24462 00011DEE 48FFC9                  	dec rcx
 24463 00011DF1 EBE7                    	jmp .L_tc_recycle_frame_loop_00cd
 24464                                  .L_tc_recycle_frame_done_00cd:
 24465 00011DF3 498D6008                	lea rsp, [r8 + 8]
 24466 00011DF7 5D                      	pop rbp ; restore the old rbp
 24467 00011DF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24468 00011DFB E91C020000              	jmp .L_if_end_0076
 24469                                  .L_if_else_0076:
 24470                                  	; preparing a non-tail-call
 24471 00011E00 488B4520                	mov rax, PARAM(0)	; param e1
 24472 00011E04 50                      	push rax
 24473 00011E05 6A01                    	push 1	; arg count
 24474 00011E07 488B0425[FA140000]      	mov rax, qword [free_var_108]	; free var number?
 24475 00011E0F 803805                  	cmp byte [rax], T_undefined
 24476 00011E12 0F84713B0000            	je L_error_fvar_undefined
 24477 00011E18 803804                  	cmp byte [rax], T_closure
 24478 00011E1B 0F85EC3B0000            	jne L_error_non_closure
 24479 00011E21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24480 00011E24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24481 00011E27 483D[02000000]          	cmp rax, sob_boolean_false
 24482 00011E2D 7429                    	je .L_if_else_0072
 24483                                  	; preparing a non-tail-call
 24484 00011E2F 488B4528                	mov rax, PARAM(1)	; param e2
 24485 00011E33 50                      	push rax
 24486 00011E34 6A01                    	push 1	; arg count
 24487 00011E36 488B0425[FA140000]      	mov rax, qword [free_var_108]	; free var number?
 24488 00011E3E 803805                  	cmp byte [rax], T_undefined
 24489 00011E41 0F84423B0000            	je L_error_fvar_undefined
 24490 00011E47 803804                  	cmp byte [rax], T_closure
 24491 00011E4A 0F85BD3B0000            	jne L_error_non_closure
 24492 00011E50 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24493 00011E53 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24494 00011E56 EB0A                    	jmp .L_if_end_0072
 24495                                  .L_if_else_0072:
 24496 00011E58 48B8-                   	mov rax, L_constants + 2
 24496 00011E5A [0200000000000000] 
 24497                                  .L_if_end_0072:
 24498 00011E62 483D[02000000]          	cmp rax, sob_boolean_false
 24499 00011E68 7470                    	je .L_if_else_0075
 24500                                  	; preparing a tail-call
 24501 00011E6A 488B4528                	mov rax, PARAM(1)	; param e2
 24502 00011E6E 50                      	push rax
 24503 00011E6F 488B4520                	mov rax, PARAM(0)	; param e1
 24504 00011E73 50                      	push rax
 24505 00011E74 6A02                    	push 2	; arg count
 24506 00011E76 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 24507 00011E7E 803805                  	cmp byte [rax], T_undefined
 24508 00011E81 0F84023B0000            	je L_error_fvar_undefined
 24509 00011E87 803804                  	cmp byte [rax], T_closure
 24510 00011E8A 0F857D3B0000            	jne L_error_non_closure
 24511 00011E90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24512 00011E93 FF7508                  	push qword [rbp + 8 * 1]
 24513                                   ; old ret addr
 24514 00011E96 FF7500                  	push qword [rbp]
 24515                                   ; restore the old rbp
 24516 00011E99 BB02000000              	mov rbx, 2
 24517 00011E9E 4883C303                	add rbx, 3
 24518 00011EA2 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24519 00011EA6 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24520 00011EAB 4C8D4DF8                	lea r9, [rbp - 8]
 24521 00011EAF B906000000              	mov rcx, 6
 24522                                  .L_tc_recycle_frame_loop_00ce:
 24523 00011EB4 4883F900                	cmp rcx, 0
 24524 00011EB8 7413                    	je .L_tc_recycle_frame_done_00ce
 24525 00011EBA 4D8B11                  	mov r10, qword [r9]
 24526 00011EBD 4D8910                  	mov qword [r8], r10
 24527 00011EC0 4983E808                	sub r8, 8
 24528 00011EC4 4983E908                	sub r9, 8
 24529 00011EC8 48FFC9                  	dec rcx
 24530 00011ECB EBE7                    	jmp .L_tc_recycle_frame_loop_00ce
 24531                                  .L_tc_recycle_frame_done_00ce:
 24532 00011ECD 498D6008                	lea rsp, [r8 + 8]
 24533 00011ED1 5D                      	pop rbp ; restore the old rbp
 24534 00011ED2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24535 00011ED5 E942010000              	jmp .L_if_end_0075
 24536                                  .L_if_else_0075:
 24537                                  	; preparing a non-tail-call
 24538 00011EDA 488B4520                	mov rax, PARAM(0)	; param e1
 24539 00011EDE 50                      	push rax
 24540 00011EDF 6A01                    	push 1	; arg count
 24541 00011EE1 488B0425[FC120000]      	mov rax, qword [free_var_78]	; free var char?
 24542 00011EE9 803805                  	cmp byte [rax], T_undefined
 24543 00011EEC 0F84973A0000            	je L_error_fvar_undefined
 24544 00011EF2 803804                  	cmp byte [rax], T_closure
 24545 00011EF5 0F85123B0000            	jne L_error_non_closure
 24546 00011EFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24547 00011EFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24548 00011F01 483D[02000000]          	cmp rax, sob_boolean_false
 24549 00011F07 7429                    	je .L_if_else_0073
 24550                                  	; preparing a non-tail-call
 24551 00011F09 488B4528                	mov rax, PARAM(1)	; param e2
 24552 00011F0D 50                      	push rax
 24553 00011F0E 6A01                    	push 1	; arg count
 24554 00011F10 488B0425[FC120000]      	mov rax, qword [free_var_78]	; free var char?
 24555 00011F18 803805                  	cmp byte [rax], T_undefined
 24556 00011F1B 0F84683A0000            	je L_error_fvar_undefined
 24557 00011F21 803804                  	cmp byte [rax], T_closure
 24558 00011F24 0F85E33A0000            	jne L_error_non_closure
 24559 00011F2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24560 00011F2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24561 00011F30 EB0A                    	jmp .L_if_end_0073
 24562                                  .L_if_else_0073:
 24563 00011F32 48B8-                   	mov rax, L_constants + 2
 24563 00011F34 [0200000000000000] 
 24564                                  .L_if_end_0073:
 24565 00011F3C 483D[02000000]          	cmp rax, sob_boolean_false
 24566 00011F42 746D                    	je .L_if_else_0074
 24567                                  	; preparing a tail-call
 24568 00011F44 488B4528                	mov rax, PARAM(1)	; param e2
 24569 00011F48 50                      	push rax
 24570 00011F49 488B4520                	mov rax, PARAM(0)	; param e1
 24571 00011F4D 50                      	push rax
 24572 00011F4E 6A02                    	push 2	; arg count
 24573 00011F50 488B0425[C9120000]      	mov rax, qword [free_var_75]	; free var char=?
 24574 00011F58 803805                  	cmp byte [rax], T_undefined
 24575 00011F5B 0F84283A0000            	je L_error_fvar_undefined
 24576 00011F61 803804                  	cmp byte [rax], T_closure
 24577 00011F64 0F85A33A0000            	jne L_error_non_closure
 24578 00011F6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24579 00011F6D FF7508                  	push qword [rbp + 8 * 1]
 24580                                   ; old ret addr
 24581 00011F70 FF7500                  	push qword [rbp]
 24582                                   ; restore the old rbp
 24583 00011F73 BB02000000              	mov rbx, 2
 24584 00011F78 4883C303                	add rbx, 3
 24585 00011F7C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24586 00011F80 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24587 00011F85 4C8D4DF8                	lea r9, [rbp - 8]
 24588 00011F89 B906000000              	mov rcx, 6
 24589                                  .L_tc_recycle_frame_loop_00cf:
 24590 00011F8E 4883F900                	cmp rcx, 0
 24591 00011F92 7413                    	je .L_tc_recycle_frame_done_00cf
 24592 00011F94 4D8B11                  	mov r10, qword [r9]
 24593 00011F97 4D8910                  	mov qword [r8], r10
 24594 00011F9A 4983E808                	sub r8, 8
 24595 00011F9E 4983E908                	sub r9, 8
 24596 00011FA2 48FFC9                  	dec rcx
 24597 00011FA5 EBE7                    	jmp .L_tc_recycle_frame_loop_00cf
 24598                                  .L_tc_recycle_frame_done_00cf:
 24599 00011FA7 498D6008                	lea rsp, [r8 + 8]
 24600 00011FAB 5D                      	pop rbp ; restore the old rbp
 24601 00011FAC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24602 00011FAF EB6B                    	jmp .L_if_end_0074
 24603                                  .L_if_else_0074:
 24604                                  	; preparing a tail-call
 24605 00011FB1 488B4528                	mov rax, PARAM(1)	; param e2
 24606 00011FB5 50                      	push rax
 24607 00011FB6 488B4520                	mov rax, PARAM(0)	; param e1
 24608 00011FBA 50                      	push rax
 24609 00011FBB 6A02                    	push 2	; arg count
 24610 00011FBD 488B0425[1E130000]      	mov rax, qword [free_var_80]	; free var eq?
 24611 00011FC5 803805                  	cmp byte [rax], T_undefined
 24612 00011FC8 0F84BB390000            	je L_error_fvar_undefined
 24613 00011FCE 803804                  	cmp byte [rax], T_closure
 24614 00011FD1 0F85363A0000            	jne L_error_non_closure
 24615 00011FD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24616 00011FDA FF7508                  	push qword [rbp + 8 * 1]
 24617                                   ; old ret addr
 24618 00011FDD FF7500                  	push qword [rbp]
 24619                                   ; restore the old rbp
 24620 00011FE0 BB02000000              	mov rbx, 2
 24621 00011FE5 4883C303                	add rbx, 3
 24622 00011FE9 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24623 00011FED 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24624 00011FF2 4C8D4DF8                	lea r9, [rbp - 8]
 24625 00011FF6 B906000000              	mov rcx, 6
 24626                                  .L_tc_recycle_frame_loop_00d0:
 24627 00011FFB 4883F900                	cmp rcx, 0
 24628 00011FFF 7413                    	je .L_tc_recycle_frame_done_00d0
 24629 00012001 4D8B11                  	mov r10, qword [r9]
 24630 00012004 4D8910                  	mov qword [r8], r10
 24631 00012007 4983E808                	sub r8, 8
 24632 0001200B 4983E908                	sub r9, 8
 24633 0001200F 48FFC9                  	dec rcx
 24634 00012012 EBE7                    	jmp .L_tc_recycle_frame_loop_00d0
 24635                                  .L_tc_recycle_frame_done_00d0:
 24636 00012014 498D6008                	lea rsp, [r8 + 8]
 24637 00012018 5D                      	pop rbp ; restore the old rbp
 24638 00012019 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24639                                  .L_if_end_0074:
 24640                                  .L_if_end_0075:
 24641                                  .L_if_end_0076:
 24642                                  .L_if_end_0077:
 24643                                  .L_if_end_0078:
 24644 0001201C C9                      	leave
 24645 0001201D C22000                  	ret AND_KILL_FRAME(2)
 24646                                  .L_lambda_simple_end_0097:	; new closure is in rax
 24647 00012020 48890425[2F130000]      	mov qword [free_var_81], rax
 24648 00012028 48B8-                   	mov rax, sob_void
 24648 0001202A [0000000000000000] 
 24649                                  
 24650 00012032 4889C7                  	mov rdi, rax
 24651 00012035 E8D13C0000              	call print_sexpr_if_not_void
 24652 0001203A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24653 0001203F E8723A0000              	call malloc
 24654 00012044 50                      	push rax
 24655 00012045 BF00000000              	mov rdi, 8 * 0	; new rib
 24656 0001204A E8673A0000              	call malloc
 24657 0001204F 50                      	push rax
 24658 00012050 BF08000000              	mov rdi, 8 * 1	; extended env
 24659 00012055 E85C3A0000              	call malloc
 24660 0001205A 488B7D10                	mov rdi, ENV
 24661 0001205E BE00000000              	mov rsi, 0
 24662 00012063 BA01000000              	mov rdx, 1
 24663                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 24664 00012068 4883FE00                	cmp rsi, 0
 24665 0001206C 7410                    	je .L_lambda_simple_env_end_0098
 24666 0001206E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24667 00012072 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24668 00012076 48FFC6                  	inc rsi
 24669 00012079 48FFC2                  	inc rdx
 24670 0001207C EBEA                    	jmp .L_lambda_simple_env_loop_0098
 24671                                  .L_lambda_simple_env_end_0098:
 24672 0001207E 5B                      	pop rbx
 24673 0001207F BE00000000              	mov rsi, 0
 24674                                  .L_lambda_simple_params_loop_0098:	; copy params
 24675 00012084 4883FE00                	cmp rsi, 0
 24676 00012088 740E                    	je .L_lambda_simple_params_end_0098
 24677 0001208A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24678 0001208F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24679 00012093 48FFC6                  	inc rsi
 24680 00012096 EBEC                    	jmp .L_lambda_simple_params_loop_0098
 24681                                  .L_lambda_simple_params_end_0098:
 24682 00012098 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24683 0001209B 4889C3                  	mov rbx, rax
 24684 0001209E 58                      	pop rax
 24685 0001209F C60004                  	mov byte [rax], T_closure
 24686 000120A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24687 000120A6 48C74009[B3200100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 24688 000120AE E9A9010000              	jmp .L_lambda_simple_end_0098
 24689                                  .L_lambda_simple_code_0098:	; lambda-simple body
 24690 000120B3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24691 000120B9 740B                    	je .L_lambda_simple_arity_check_ok_0098
 24692 000120BB FF742410                	push qword [rsp + 8 * 2]
 24693 000120BF 6A02                    	push 2
 24694 000120C1 E9A9390000              	jmp L_error_incorrect_arity_simple
 24695                                  .L_lambda_simple_arity_check_ok_0098:
 24696 000120C6 C8000000                	enter 0, 0
 24697                                  	; preparing a non-tail-call
 24698 000120CA 488B4528                	mov rax, PARAM(1)	; param s
 24699 000120CE 50                      	push rax
 24700 000120CF 6A01                    	push 1	; arg count
 24701 000120D1 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 24702 000120D9 803805                  	cmp byte [rax], T_undefined
 24703 000120DC 0F84A7380000            	je L_error_fvar_undefined
 24704 000120E2 803804                  	cmp byte [rax], T_closure
 24705 000120E5 0F8522390000            	jne L_error_non_closure
 24706 000120EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24707 000120EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24708 000120F1 483D[02000000]          	cmp rax, sob_boolean_false
 24709 000120F7 740F                    	je .L_if_else_007a
 24710 000120F9 48B8-                   	mov rax, L_constants + 2
 24710 000120FB [0200000000000000] 
 24711 00012103 E950010000              	jmp .L_if_end_007a
 24712                                  .L_if_else_007a:
 24713                                  	; preparing a non-tail-call
 24714 00012108 488B4520                	mov rax, PARAM(0)	; param a
 24715 0001210C 50                      	push rax
 24716                                  	; preparing a non-tail-call
 24717 0001210D 488B4528                	mov rax, PARAM(1)	; param s
 24718 00012111 50                      	push rax
 24719 00012112 6A01                    	push 1	; arg count
 24720 00012114 488B0425[87100000]      	mov rax, qword [free_var_41]	; free var caar
 24721 0001211C 803805                  	cmp byte [rax], T_undefined
 24722 0001211F 0F8464380000            	je L_error_fvar_undefined
 24723 00012125 803804                  	cmp byte [rax], T_closure
 24724 00012128 0F85DF380000            	jne L_error_non_closure
 24725 0001212E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24726 00012131 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24727 00012134 50                      	push rax
 24728 00012135 6A02                    	push 2	; arg count
 24729 00012137 488B0425[1E130000]      	mov rax, qword [free_var_80]	; free var eq?
 24730 0001213F 803805                  	cmp byte [rax], T_undefined
 24731 00012142 0F8441380000            	je L_error_fvar_undefined
 24732 00012148 803804                  	cmp byte [rax], T_closure
 24733 0001214B 0F85BC380000            	jne L_error_non_closure
 24734 00012151 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24735 00012154 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24736 00012157 483D[02000000]          	cmp rax, sob_boolean_false
 24737 0001215D 746B                    	je .L_if_else_0079
 24738                                  	; preparing a tail-call
 24739 0001215F 488B4528                	mov rax, PARAM(1)	; param s
 24740 00012163 50                      	push rax
 24741 00012164 6A01                    	push 1	; arg count
 24742 00012166 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 24743 0001216E 803805                  	cmp byte [rax], T_undefined
 24744 00012171 0F8412380000            	je L_error_fvar_undefined
 24745 00012177 803804                  	cmp byte [rax], T_closure
 24746 0001217A 0F858D380000            	jne L_error_non_closure
 24747 00012180 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24748 00012183 FF7508                  	push qword [rbp + 8 * 1]
 24749                                   ; old ret addr
 24750 00012186 FF7500                  	push qword [rbp]
 24751                                   ; restore the old rbp
 24752 00012189 BB01000000              	mov rbx, 1
 24753 0001218E 4883C303                	add rbx, 3
 24754 00012192 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24755 00012196 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24756 0001219B 4C8D4DF8                	lea r9, [rbp - 8]
 24757 0001219F B905000000              	mov rcx, 5
 24758                                  .L_tc_recycle_frame_loop_00d1:
 24759 000121A4 4883F900                	cmp rcx, 0
 24760 000121A8 7413                    	je .L_tc_recycle_frame_done_00d1
 24761 000121AA 4D8B11                  	mov r10, qword [r9]
 24762 000121AD 4D8910                  	mov qword [r8], r10
 24763 000121B0 4983E808                	sub r8, 8
 24764 000121B4 4983E908                	sub r9, 8
 24765 000121B8 48FFC9                  	dec rcx
 24766 000121BB EBE7                    	jmp .L_tc_recycle_frame_loop_00d1
 24767                                  .L_tc_recycle_frame_done_00d1:
 24768 000121BD 498D6008                	lea rsp, [r8 + 8]
 24769 000121C1 5D                      	pop rbp ; restore the old rbp
 24770 000121C2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24771 000121C5 E98E000000              	jmp .L_if_end_0079
 24772                                  .L_if_else_0079:
 24773                                  	; preparing a tail-call
 24774                                  	; preparing a non-tail-call
 24775 000121CA 488B4528                	mov rax, PARAM(1)	; param s
 24776 000121CE 50                      	push rax
 24777 000121CF 6A01                    	push 1	; arg count
 24778 000121D1 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 24779 000121D9 803805                  	cmp byte [rax], T_undefined
 24780 000121DC 0F84A7370000            	je L_error_fvar_undefined
 24781 000121E2 803804                  	cmp byte [rax], T_closure
 24782 000121E5 0F8522380000            	jne L_error_non_closure
 24783 000121EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 24784 000121EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 24785 000121F1 50                      	push rax
 24786 000121F2 488B4520                	mov rax, PARAM(0)	; param a
 24787 000121F6 50                      	push rax
 24788 000121F7 6A02                    	push 2	; arg count
 24789 000121F9 488B0425[10100000]      	mov rax, qword [free_var_34]	; free var assoc
 24790 00012201 803805                  	cmp byte [rax], T_undefined
 24791 00012204 0F847F370000            	je L_error_fvar_undefined
 24792 0001220A 803804                  	cmp byte [rax], T_closure
 24793 0001220D 0F85FA370000            	jne L_error_non_closure
 24794 00012213 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24795 00012216 FF7508                  	push qword [rbp + 8 * 1]
 24796                                   ; old ret addr
 24797 00012219 FF7500                  	push qword [rbp]
 24798                                   ; restore the old rbp
 24799 0001221C BB02000000              	mov rbx, 2
 24800 00012221 4883C303                	add rbx, 3
 24801 00012225 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 24802 00012229 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 24803 0001222E 4C8D4DF8                	lea r9, [rbp - 8]
 24804 00012232 B906000000              	mov rcx, 6
 24805                                  .L_tc_recycle_frame_loop_00d2:
 24806 00012237 4883F900                	cmp rcx, 0
 24807 0001223B 7413                    	je .L_tc_recycle_frame_done_00d2
 24808 0001223D 4D8B11                  	mov r10, qword [r9]
 24809 00012240 4D8910                  	mov qword [r8], r10
 24810 00012243 4983E808                	sub r8, 8
 24811 00012247 4983E908                	sub r9, 8
 24812 0001224B 48FFC9                  	dec rcx
 24813 0001224E EBE7                    	jmp .L_tc_recycle_frame_loop_00d2
 24814                                  .L_tc_recycle_frame_done_00d2:
 24815 00012250 498D6008                	lea rsp, [r8 + 8]
 24816 00012254 5D                      	pop rbp ; restore the old rbp
 24817 00012255 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24818                                  .L_if_end_0079:
 24819                                  .L_if_end_007a:
 24820 00012258 C9                      	leave
 24821 00012259 C22000                  	ret AND_KILL_FRAME(2)
 24822                                  .L_lambda_simple_end_0098:	; new closure is in rax
 24823 0001225C 48890425[10100000]      	mov qword [free_var_34], rax
 24824 00012264 48B8-                   	mov rax, sob_void
 24824 00012266 [0000000000000000] 
 24825                                  
 24826 0001226E 4889C7                  	mov rdi, rax
 24827 00012271 E8953A0000              	call print_sexpr_if_not_void
 24828                                  	; preparing a non-tail-call
 24829 00012276 48B8-                   	mov rax, L_constants + 1993
 24829 00012278 [C907000000000000] 
 24830 00012280 50                      	push rax
 24831 00012281 48B8-                   	mov rax, L_constants + 1993
 24831 00012283 [C907000000000000] 
 24832 0001228B 50                      	push rax
 24833 0001228C 6A02                    	push 2	; arg count
 24834 0001228E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24835 00012293 E81E380000              	call malloc
 24836 00012298 50                      	push rax
 24837 00012299 BF00000000              	mov rdi, 8 * 0	; new rib
 24838 0001229E E813380000              	call malloc
 24839 000122A3 50                      	push rax
 24840 000122A4 BF08000000              	mov rdi, 8 * 1	; extended env
 24841 000122A9 E808380000              	call malloc
 24842 000122AE 488B7D10                	mov rdi, ENV
 24843 000122B2 BE00000000              	mov rsi, 0
 24844 000122B7 BA01000000              	mov rdx, 1
 24845                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 24846 000122BC 4883FE00                	cmp rsi, 0
 24847 000122C0 7410                    	je .L_lambda_simple_env_end_0099
 24848 000122C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24849 000122C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24850 000122CA 48FFC6                  	inc rsi
 24851 000122CD 48FFC2                  	inc rdx
 24852 000122D0 EBEA                    	jmp .L_lambda_simple_env_loop_0099
 24853                                  .L_lambda_simple_env_end_0099:
 24854 000122D2 5B                      	pop rbx
 24855 000122D3 BE00000000              	mov rsi, 0
 24856                                  .L_lambda_simple_params_loop_0099:	; copy params
 24857 000122D8 4883FE00                	cmp rsi, 0
 24858 000122DC 740E                    	je .L_lambda_simple_params_end_0099
 24859 000122DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24860 000122E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24861 000122E7 48FFC6                  	inc rsi
 24862 000122EA EBEC                    	jmp .L_lambda_simple_params_loop_0099
 24863                                  .L_lambda_simple_params_end_0099:
 24864 000122EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24865 000122EF 4889C3                  	mov rbx, rax
 24866 000122F2 58                      	pop rax
 24867 000122F3 C60004                  	mov byte [rax], T_closure
 24868 000122F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24869 000122FA 48C74009[07230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 24870 00012302 E9D9070000              	jmp .L_lambda_simple_end_0099
 24871                                  .L_lambda_simple_code_0099:	; lambda-simple body
 24872 00012307 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24873 0001230D 740B                    	je .L_lambda_simple_arity_check_ok_0099
 24874 0001230F FF742410                	push qword [rsp + 8 * 2]
 24875 00012313 6A02                    	push 2
 24876 00012315 E955370000              	jmp L_error_incorrect_arity_simple
 24877                                  .L_lambda_simple_arity_check_ok_0099:
 24878 0001231A C8000000                	enter 0, 0
 24879 0001231E BF08000000              	mov rdi, 8*1
 24880 00012323 E88E370000              	call malloc
 24881 00012328 488B5D20                	mov rbx, PARAM(0)
 24882 0001232C 488918                  	mov qword [rax], rbx
 24883 0001232F 48894520                	mov PARAM(0), rax
 24884 00012333 48B8-                   	mov rax, sob_void
 24884 00012335 [0000000000000000] 
 24885                                  
 24886 0001233D BF08000000              	mov rdi, 8*1
 24887 00012342 E86F370000              	call malloc
 24888 00012347 488B5D28                	mov rbx, PARAM(1)
 24889 0001234B 488918                  	mov qword [rax], rbx
 24890 0001234E 48894528                	mov PARAM(1), rax
 24891 00012352 48B8-                   	mov rax, sob_void
 24891 00012354 [0000000000000000] 
 24892                                  
 24893 0001235C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24894 00012361 E850370000              	call malloc
 24895 00012366 50                      	push rax
 24896 00012367 BF10000000              	mov rdi, 8 * 2	; new rib
 24897 0001236C E845370000              	call malloc
 24898 00012371 50                      	push rax
 24899 00012372 BF10000000              	mov rdi, 8 * 2	; extended env
 24900 00012377 E83A370000              	call malloc
 24901 0001237C 488B7D10                	mov rdi, ENV
 24902 00012380 BE00000000              	mov rsi, 0
 24903 00012385 BA01000000              	mov rdx, 1
 24904                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 24905 0001238A 4883FE01                	cmp rsi, 1
 24906 0001238E 7410                    	je .L_lambda_simple_env_end_009a
 24907 00012390 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24908 00012394 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24909 00012398 48FFC6                  	inc rsi
 24910 0001239B 48FFC2                  	inc rdx
 24911 0001239E EBEA                    	jmp .L_lambda_simple_env_loop_009a
 24912                                  .L_lambda_simple_env_end_009a:
 24913 000123A0 5B                      	pop rbx
 24914 000123A1 BE00000000              	mov rsi, 0
 24915                                  .L_lambda_simple_params_loop_009a:	; copy params
 24916 000123A6 4883FE02                	cmp rsi, 2
 24917 000123AA 740E                    	je .L_lambda_simple_params_end_009a
 24918 000123AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24919 000123B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24920 000123B5 48FFC6                  	inc rsi
 24921 000123B8 EBEC                    	jmp .L_lambda_simple_params_loop_009a
 24922                                  .L_lambda_simple_params_end_009a:
 24923 000123BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24924 000123BD 4889C3                  	mov rbx, rax
 24925 000123C0 58                      	pop rax
 24926 000123C1 C60004                  	mov byte [rax], T_closure
 24927 000123C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24928 000123C8 48C74009[D5230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 24929 000123D0 E97C020000              	jmp .L_lambda_simple_end_009a
 24930                                  .L_lambda_simple_code_009a:	; lambda-simple body
 24931 000123D5 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24932 000123DB 740B                    	je .L_lambda_simple_arity_check_ok_009a
 24933 000123DD FF742410                	push qword [rsp + 8 * 2]
 24934 000123E1 6A03                    	push 3
 24935 000123E3 E987360000              	jmp L_error_incorrect_arity_simple
 24936                                  .L_lambda_simple_arity_check_ok_009a:
 24937 000123E8 C8000000                	enter 0, 0
 24938                                  	; preparing a non-tail-call
 24939 000123EC 488B4530                	mov rax, PARAM(2)	; param s
 24940 000123F0 50                      	push rax
 24941 000123F1 6A01                    	push 1	; arg count
 24942 000123F3 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 24943 000123FB 803805                  	cmp byte [rax], T_undefined
 24944 000123FE 0F8485350000            	je L_error_fvar_undefined
 24945 00012404 803804                  	cmp byte [rax], T_closure
 24946 00012407 0F8500360000            	jne L_error_non_closure
 24947 0001240D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24948 00012410 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24949 00012413 483D[02000000]          	cmp rax, sob_boolean_false
 24950 00012419 7409                    	je .L_if_else_007b
 24951 0001241B 488B4520                	mov rax, PARAM(0)	; param target
 24952 0001241F E929020000              	jmp .L_if_end_007b
 24953                                  .L_if_else_007b:
 24954                                  	; preparing a tail-call
 24955                                  	; preparing a non-tail-call
 24956                                  	; preparing a non-tail-call
 24957                                  	; preparing a non-tail-call
 24958 00012424 488B4530                	mov rax, PARAM(2)	; param s
 24959 00012428 50                      	push rax
 24960 00012429 6A01                    	push 1	; arg count
 24961 0001242B 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 24962 00012433 803805                  	cmp byte [rax], T_undefined
 24963 00012436 0F844D350000            	je L_error_fvar_undefined
 24964 0001243C 803804                  	cmp byte [rax], T_closure
 24965 0001243F 0F85C8350000            	jne L_error_non_closure
 24966 00012445 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24967 00012448 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24968 0001244B 50                      	push rax
 24969 0001244C 6A01                    	push 1	; arg count
 24970 0001244E 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 24971 00012456 803805                  	cmp byte [rax], T_undefined
 24972 00012459 0F842A350000            	je L_error_fvar_undefined
 24973 0001245F 803804                  	cmp byte [rax], T_closure
 24974 00012462 0F85A5350000            	jne L_error_non_closure
 24975 00012468 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24976 0001246B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24977 0001246E 50                      	push rax
 24978 0001246F 48B8-                   	mov rax, L_constants + 2135
 24978 00012471 [5708000000000000] 
 24979 00012479 50                      	push rax
 24980                                  	; preparing a non-tail-call
 24981 0001247A 488B4530                	mov rax, PARAM(2)	; param s
 24982 0001247E 50                      	push rax
 24983 0001247F 6A01                    	push 1	; arg count
 24984 00012481 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 24985 00012489 803805                  	cmp byte [rax], T_undefined
 24986 0001248C 0F84F7340000            	je L_error_fvar_undefined
 24987 00012492 803804                  	cmp byte [rax], T_closure
 24988 00012495 0F8572350000            	jne L_error_non_closure
 24989 0001249B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24990 0001249E FF5009                  	call SOB_CLOSURE_CODE(rax)
 24991 000124A1 50                      	push rax
 24992 000124A2 488B4528                	mov rax, PARAM(1)	; param i
 24993 000124A6 50                      	push rax
 24994 000124A7 488B4520                	mov rax, PARAM(0)	; param target
 24995 000124AB 50                      	push rax
 24996 000124AC 6A05                    	push 5	; arg count
 24997 000124AE 488B4510                	mov rax, ENV
 24998 000124B2 488B00                  	mov rax, qword [rax + 8 * 0]
 24999 000124B5 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25000 000124B9 488B00                  	mov rax, qword [rax]
 25001 000124BC 803804                  	cmp byte [rax], T_closure
 25002 000124BF 0F8548350000            	jne L_error_non_closure
 25003 000124C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25004 000124C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25005 000124CB 50                      	push rax
 25006 000124CC 6A01                    	push 1	; arg count
 25007 000124CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25008 000124D3 E8DE350000              	call malloc
 25009 000124D8 50                      	push rax
 25010 000124D9 BF18000000              	mov rdi, 8 * 3	; new rib
 25011 000124DE E8D3350000              	call malloc
 25012 000124E3 50                      	push rax
 25013 000124E4 BF18000000              	mov rdi, 8 * 3	; extended env
 25014 000124E9 E8C8350000              	call malloc
 25015 000124EE 488B7D10                	mov rdi, ENV
 25016 000124F2 BE00000000              	mov rsi, 0
 25017 000124F7 BA01000000              	mov rdx, 1
 25018                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 25019 000124FC 4883FE02                	cmp rsi, 2
 25020 00012500 7410                    	je .L_lambda_simple_env_end_009b
 25021 00012502 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25022 00012506 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25023 0001250A 48FFC6                  	inc rsi
 25024 0001250D 48FFC2                  	inc rdx
 25025 00012510 EBEA                    	jmp .L_lambda_simple_env_loop_009b
 25026                                  .L_lambda_simple_env_end_009b:
 25027 00012512 5B                      	pop rbx
 25028 00012513 BE00000000              	mov rsi, 0
 25029                                  .L_lambda_simple_params_loop_009b:	; copy params
 25030 00012518 4883FE03                	cmp rsi, 3
 25031 0001251C 740E                    	je .L_lambda_simple_params_end_009b
 25032 0001251E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25033 00012523 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25034 00012527 48FFC6                  	inc rsi
 25035 0001252A EBEC                    	jmp .L_lambda_simple_params_loop_009b
 25036                                  .L_lambda_simple_params_end_009b:
 25037 0001252C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25038 0001252F 4889C3                  	mov rbx, rax
 25039 00012532 58                      	pop rax
 25040 00012533 C60004                  	mov byte [rax], T_closure
 25041 00012536 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25042 0001253A 48C74009[47250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 25043 00012542 E9B8000000              	jmp .L_lambda_simple_end_009b
 25044                                  .L_lambda_simple_code_009b:	; lambda-simple body
 25045 00012547 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25046 0001254D 740B                    	je .L_lambda_simple_arity_check_ok_009b
 25047 0001254F FF742410                	push qword [rsp + 8 * 2]
 25048 00012553 6A01                    	push 1
 25049 00012555 E915350000              	jmp L_error_incorrect_arity_simple
 25050                                  .L_lambda_simple_arity_check_ok_009b:
 25051 0001255A C8000000                	enter 0, 0
 25052                                  	; preparing a tail-call
 25053                                  	; preparing a non-tail-call
 25054 0001255E 488B4510                	mov rax, ENV
 25055 00012562 488B00                  	mov rax, qword [rax + 8 * 0]
 25056 00012565 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25057 00012569 50                      	push rax
 25058 0001256A 6A01                    	push 1	; arg count
 25059 0001256C 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 25060 00012574 803805                  	cmp byte [rax], T_undefined
 25061 00012577 0F840C340000            	je L_error_fvar_undefined
 25062 0001257D 803804                  	cmp byte [rax], T_closure
 25063 00012580 0F8587340000            	jne L_error_non_closure
 25064 00012586 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25065 00012589 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25066 0001258C 50                      	push rax
 25067 0001258D 488B4520                	mov rax, PARAM(0)	; param i
 25068 00012591 50                      	push rax
 25069 00012592 488B4510                	mov rax, ENV
 25070 00012596 488B00                  	mov rax, qword [rax + 8 * 0]
 25071 00012599 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25072 0001259C 50                      	push rax
 25073 0001259D 6A03                    	push 3	; arg count
 25074 0001259F 488B4510                	mov rax, ENV
 25075 000125A3 488B4008                	mov rax, qword [rax + 8 * 1]
 25076 000125A7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25077 000125AA 488B00                  	mov rax, qword [rax]
 25078 000125AD 803804                  	cmp byte [rax], T_closure
 25079 000125B0 0F8557340000            	jne L_error_non_closure
 25080 000125B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25081 000125B9 FF7508                  	push qword [rbp + 8 * 1]
 25082                                   ; old ret addr
 25083 000125BC FF7500                  	push qword [rbp]
 25084                                   ; restore the old rbp
 25085 000125BF BB03000000              	mov rbx, 3
 25086 000125C4 4883C303                	add rbx, 3
 25087 000125C8 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25088 000125CC 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25089 000125D1 4C8D4DF8                	lea r9, [rbp - 8]
 25090 000125D5 B907000000              	mov rcx, 7
 25091                                  .L_tc_recycle_frame_loop_00d4:
 25092 000125DA 4883F900                	cmp rcx, 0
 25093 000125DE 7413                    	je .L_tc_recycle_frame_done_00d4
 25094 000125E0 4D8B11                  	mov r10, qword [r9]
 25095 000125E3 4D8910                  	mov qword [r8], r10
 25096 000125E6 4983E808                	sub r8, 8
 25097 000125EA 4983E908                	sub r9, 8
 25098 000125EE 48FFC9                  	dec rcx
 25099 000125F1 EBE7                    	jmp .L_tc_recycle_frame_loop_00d4
 25100                                  .L_tc_recycle_frame_done_00d4:
 25101 000125F3 498D6008                	lea rsp, [r8 + 8]
 25102 000125F7 5D                      	pop rbp ; restore the old rbp
 25103 000125F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25104 000125FB C9                      	leave
 25105 000125FC C21800                  	ret AND_KILL_FRAME(1)
 25106                                  .L_lambda_simple_end_009b:	; new closure is in rax
 25107 000125FF 803804                  	cmp byte [rax], T_closure
 25108 00012602 0F8505340000            	jne L_error_non_closure
 25109 00012608 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25110 0001260B FF7508                  	push qword [rbp + 8 * 1]
 25111                                   ; old ret addr
 25112 0001260E FF7500                  	push qword [rbp]
 25113                                   ; restore the old rbp
 25114 00012611 BB01000000              	mov rbx, 1
 25115 00012616 4883C303                	add rbx, 3
 25116 0001261A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25117 0001261E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25118 00012623 4C8D4DF8                	lea r9, [rbp - 8]
 25119 00012627 B905000000              	mov rcx, 5
 25120                                  .L_tc_recycle_frame_loop_00d3:
 25121 0001262C 4883F900                	cmp rcx, 0
 25122 00012630 7413                    	je .L_tc_recycle_frame_done_00d3
 25123 00012632 4D8B11                  	mov r10, qword [r9]
 25124 00012635 4D8910                  	mov qword [r8], r10
 25125 00012638 4983E808                	sub r8, 8
 25126 0001263C 4983E908                	sub r9, 8
 25127 00012640 48FFC9                  	dec rcx
 25128 00012643 EBE7                    	jmp .L_tc_recycle_frame_loop_00d3
 25129                                  .L_tc_recycle_frame_done_00d3:
 25130 00012645 498D6008                	lea rsp, [r8 + 8]
 25131 00012649 5D                      	pop rbp ; restore the old rbp
 25132 0001264A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25133                                  .L_if_end_007b:
 25134 0001264D C9                      	leave
 25135 0001264E C22800                  	ret AND_KILL_FRAME(3)
 25136                                  .L_lambda_simple_end_009a:	; new closure is in rax
 25137 00012651 50                      	push rax
 25138 00012652 488B4520                	mov rax, PARAM(0)	; param run
 25139 00012656 8F00                    	pop qword [rax]
 25140 00012658 48B8-                   	mov rax, sob_void
 25140 0001265A [0000000000000000] 
 25141                                  
 25142 00012662 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25143 00012667 E84A340000              	call malloc
 25144 0001266C 50                      	push rax
 25145 0001266D BF10000000              	mov rdi, 8 * 2	; new rib
 25146 00012672 E83F340000              	call malloc
 25147 00012677 50                      	push rax
 25148 00012678 BF10000000              	mov rdi, 8 * 2	; extended env
 25149 0001267D E834340000              	call malloc
 25150 00012682 488B7D10                	mov rdi, ENV
 25151 00012686 BE00000000              	mov rsi, 0
 25152 0001268B BA01000000              	mov rdx, 1
 25153                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 25154 00012690 4883FE01                	cmp rsi, 1
 25155 00012694 7410                    	je .L_lambda_simple_env_end_009c
 25156 00012696 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25157 0001269A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25158 0001269E 48FFC6                  	inc rsi
 25159 000126A1 48FFC2                  	inc rdx
 25160 000126A4 EBEA                    	jmp .L_lambda_simple_env_loop_009c
 25161                                  .L_lambda_simple_env_end_009c:
 25162 000126A6 5B                      	pop rbx
 25163 000126A7 BE00000000              	mov rsi, 0
 25164                                  .L_lambda_simple_params_loop_009c:	; copy params
 25165 000126AC 4883FE02                	cmp rsi, 2
 25166 000126B0 740E                    	je .L_lambda_simple_params_end_009c
 25167 000126B2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25168 000126B7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25169 000126BB 48FFC6                  	inc rsi
 25170 000126BE EBEC                    	jmp .L_lambda_simple_params_loop_009c
 25171                                  .L_lambda_simple_params_end_009c:
 25172 000126C0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25173 000126C3 4889C3                  	mov rbx, rax
 25174 000126C6 58                      	pop rax
 25175 000126C7 C60004                  	mov byte [rax], T_closure
 25176 000126CA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25177 000126CE 48C74009[DB260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 25178 000126D6 E985010000              	jmp .L_lambda_simple_end_009c
 25179                                  .L_lambda_simple_code_009c:	; lambda-simple body
 25180 000126DB 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25181 000126E1 740B                    	je .L_lambda_simple_arity_check_ok_009c
 25182 000126E3 FF742410                	push qword [rsp + 8 * 2]
 25183 000126E7 6A05                    	push 5
 25184 000126E9 E981330000              	jmp L_error_incorrect_arity_simple
 25185                                  .L_lambda_simple_arity_check_ok_009c:
 25186 000126EE C8000000                	enter 0, 0
 25187                                  	; preparing a non-tail-call
 25188 000126F2 488B4540                	mov rax, PARAM(4)	; param limit
 25189 000126F6 50                      	push rax
 25190 000126F7 488B4538                	mov rax, PARAM(3)	; param j
 25191 000126FB 50                      	push rax
 25192 000126FC 6A02                    	push 2	; arg count
 25193 000126FE 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 25194 00012706 803805                  	cmp byte [rax], T_undefined
 25195 00012709 0F847A320000            	je L_error_fvar_undefined
 25196 0001270F 803804                  	cmp byte [rax], T_closure
 25197 00012712 0F85F5320000            	jne L_error_non_closure
 25198 00012718 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25199 0001271B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25200 0001271E 483D[02000000]          	cmp rax, sob_boolean_false
 25201 00012724 0F842E010000            	je .L_if_else_007c
 25202                                  	; preparing a non-tail-call
 25203                                  	; preparing a non-tail-call
 25204 0001272A 488B4538                	mov rax, PARAM(3)	; param j
 25205 0001272E 50                      	push rax
 25206 0001272F 488B4530                	mov rax, PARAM(2)	; param str
 25207 00012733 50                      	push rax
 25208 00012734 6A02                    	push 2	; arg count
 25209 00012736 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 25210 0001273E 803805                  	cmp byte [rax], T_undefined
 25211 00012741 0F8442320000            	je L_error_fvar_undefined
 25212 00012747 803804                  	cmp byte [rax], T_closure
 25213 0001274A 0F85BD320000            	jne L_error_non_closure
 25214 00012750 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25215 00012753 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25216 00012756 50                      	push rax
 25217 00012757 488B4528                	mov rax, PARAM(1)	; param i
 25218 0001275B 50                      	push rax
 25219 0001275C 488B4520                	mov rax, PARAM(0)	; param target
 25220 00012760 50                      	push rax
 25221 00012761 6A03                    	push 3	; arg count
 25222 00012763 488B0425[81160000]      	mov rax, qword [free_var_131]	; free var string-set!
 25223 0001276B 803805                  	cmp byte [rax], T_undefined
 25224 0001276E 0F8415320000            	je L_error_fvar_undefined
 25225 00012774 803804                  	cmp byte [rax], T_closure
 25226 00012777 0F8590320000            	jne L_error_non_closure
 25227 0001277D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25228 00012780 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25229                                  
 25230                                  	; preparing a tail-call
 25231 00012783 488B4540                	mov rax, PARAM(4)	; param limit
 25232 00012787 50                      	push rax
 25233                                  	; preparing a non-tail-call
 25234 00012788 48B8-                   	mov rax, L_constants + 2270
 25234 0001278A [DE08000000000000] 
 25235 00012792 50                      	push rax
 25236 00012793 488B4538                	mov rax, PARAM(3)	; param j
 25237 00012797 50                      	push rax
 25238 00012798 6A02                    	push 2	; arg count
 25239 0001279A 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 25240 000127A2 803805                  	cmp byte [rax], T_undefined
 25241 000127A5 0F84DE310000            	je L_error_fvar_undefined
 25242 000127AB 803804                  	cmp byte [rax], T_closure
 25243 000127AE 0F8559320000            	jne L_error_non_closure
 25244 000127B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25245 000127B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25246 000127BA 50                      	push rax
 25247 000127BB 488B4530                	mov rax, PARAM(2)	; param str
 25248 000127BF 50                      	push rax
 25249                                  	; preparing a non-tail-call
 25250 000127C0 48B8-                   	mov rax, L_constants + 2270
 25250 000127C2 [DE08000000000000] 
 25251 000127CA 50                      	push rax
 25252 000127CB 488B4528                	mov rax, PARAM(1)	; param i
 25253 000127CF 50                      	push rax
 25254 000127D0 6A02                    	push 2	; arg count
 25255 000127D2 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 25256 000127DA 803805                  	cmp byte [rax], T_undefined
 25257 000127DD 0F84A6310000            	je L_error_fvar_undefined
 25258 000127E3 803804                  	cmp byte [rax], T_closure
 25259 000127E6 0F8521320000            	jne L_error_non_closure
 25260 000127EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 25261 000127EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 25262 000127F2 50                      	push rax
 25263 000127F3 488B4520                	mov rax, PARAM(0)	; param target
 25264 000127F7 50                      	push rax
 25265 000127F8 6A05                    	push 5	; arg count
 25266 000127FA 488B4510                	mov rax, ENV
 25267 000127FE 488B00                  	mov rax, qword [rax + 8 * 0]
 25268 00012801 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25269 00012805 488B00                  	mov rax, qword [rax]
 25270 00012808 803804                  	cmp byte [rax], T_closure
 25271 0001280B 0F85FC310000            	jne L_error_non_closure
 25272 00012811 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25273 00012814 FF7508                  	push qword [rbp + 8 * 1]
 25274                                   ; old ret addr
 25275 00012817 FF7500                  	push qword [rbp]
 25276                                   ; restore the old rbp
 25277 0001281A BB05000000              	mov rbx, 5
 25278 0001281F 4883C303                	add rbx, 3
 25279 00012823 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25280 00012827 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25281 0001282C 4C8D4DF8                	lea r9, [rbp - 8]
 25282 00012830 B909000000              	mov rcx, 9
 25283                                  .L_tc_recycle_frame_loop_00d5:
 25284 00012835 4883F900                	cmp rcx, 0
 25285 00012839 7413                    	je .L_tc_recycle_frame_done_00d5
 25286 0001283B 4D8B11                  	mov r10, qword [r9]
 25287 0001283E 4D8910                  	mov qword [r8], r10
 25288 00012841 4983E808                	sub r8, 8
 25289 00012845 4983E908                	sub r9, 8
 25290 00012849 48FFC9                  	dec rcx
 25291 0001284C EBE7                    	jmp .L_tc_recycle_frame_loop_00d5
 25292                                  .L_tc_recycle_frame_done_00d5:
 25293 0001284E 498D6008                	lea rsp, [r8 + 8]
 25294 00012852 5D                      	pop rbp ; restore the old rbp
 25295 00012853 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25296 00012856 EB04                    	jmp .L_if_end_007c
 25297                                  .L_if_else_007c:
 25298 00012858 488B4528                	mov rax, PARAM(1)	; param i
 25299                                  .L_if_end_007c:
 25300 0001285C C9                      	leave
 25301 0001285D C23800                  	ret AND_KILL_FRAME(5)
 25302                                  .L_lambda_simple_end_009c:	; new closure is in rax
 25303 00012860 50                      	push rax
 25304 00012861 488B4528                	mov rax, PARAM(1)	; param add
 25305 00012865 8F00                    	pop qword [rax]
 25306 00012867 48B8-                   	mov rax, sob_void
 25306 00012869 [0000000000000000] 
 25307                                  
 25308 00012871 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25309 00012876 E83B320000              	call malloc
 25310 0001287B 50                      	push rax
 25311 0001287C BF10000000              	mov rdi, 8 * 2	; new rib
 25312 00012881 E830320000              	call malloc
 25313 00012886 50                      	push rax
 25314 00012887 BF10000000              	mov rdi, 8 * 2	; extended env
 25315 0001288C E825320000              	call malloc
 25316 00012891 488B7D10                	mov rdi, ENV
 25317 00012895 4831F6                  	 xor rsi, rsi
 25318 00012898 4831D2                  	 xor rdx, rdx
 25319 0001289B 48FFC2                  	inc rdx
 25320                                  .L_lambda_opt_env_loop_0017:	; ext_env[i + 1] <-- env[i]
 25321 0001289E 4883FE01                	cmp rsi, 1
 25322 000128A2 7410                    	je .L_lambda_opt_env_end_0017
 25323 000128A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25324 000128A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25325 000128AC 48FFC6                  	inc rsi
 25326 000128AF 48FFC2                  	inc rdx
 25327 000128B2 EBEA                    	jmp .L_lambda_opt_env_loop_0017
 25328                                  .L_lambda_opt_env_end_0017:
 25329 000128B4 5B                      	pop rbx
 25330 000128B5 4831F6                  	xor rsi, rsi
 25331                                  .L_lambda_opt_params_loop_0017:	; copy params
 25332 000128B8 4883FE02                	cmp rsi, 2
 25333 000128BC 740E                    	je .L_lambda_opt_params_end_0017
 25334 000128BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25335 000128C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25336 000128C7 48FFC6                  	inc rsi
 25337 000128CA EBEC                    	jmp .L_lambda_opt_params_loop_0017
 25338                                  .L_lambda_opt_params_end_0017:
 25339 000128CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25340 000128CF 4889C3                  	mov rbx, rax
 25341 000128D2 58                      	pop rax
 25342 000128D3 C60004                  	mov byte [rax], T_closure
 25343 000128D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25344 000128DA 48C74009[E7280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 25345 000128E2 E9F5010000              	jmp .L_lambda_opt_end_0017
 25346                                  .L_lambda_opt_code_0017:; lambda opt body
 25347 000128E7 48837C241000            	cmp qword [rsp + 8 * 2], 0
 25348 000128ED 7409                    	je .L_lambda_opt_arity_check_exact_0017
 25349 000128EF 7F57                    	jg .L_lambda_opt_arity_check_more_0017
 25350 000128F1 6A00                    	push 0
 25351 000128F3 E98B310000              	jmp L_error_incorrect_arity_opt
 25352                                  .L_lambda_opt_arity_check_exact_0017:
 25353 000128F8 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 25354 000128FC 4C894C24F8              	mov qword [rsp -8], r9
 25355 00012901 4C8B4C2408              	mov r9, qword [rsp +8]
 25356 00012906 4C890C24                	mov qword [rsp +8 * 0], r9
 25357 0001290A 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 25358 0001290F 4C89C9                  	mov rcx, r9
 25359 00012912 49FFC1                  	inc r9
 25360 00012915 4C894C2408              	mov qword [rsp +8], r9
 25361 0001291A 4889E2                  	mov rdx, rsp
 25362 0001291D 4883C218                	add rdx, 24
 25363                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0017:
 25364 00012921 4883F900                	cmp rcx, 0
 25365 00012925 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0017
 25366 00012927 4C8B02                  	mov r8, qword [rdx]
 25367 0001292A 4C8942F8                	mov qword [rdx - 8], r8
 25368 0001292E 4883C208                	add rdx, 8
 25369 00012932 48FFC9                  	dec rcx
 25370 00012935 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0017
 25371                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0017:
 25372 00012937 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 25373 0001293F 4883EC08                	sub rsp, 8
 25374 00012943 E984000000              	jmp .L_lambda_opt_stack_adjusted_0017
 25375                                  .L_lambda_opt_arity_check_more_0017:
 25376 00012948 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 25377 0001294D 4D89C4                  	mov r12, r8
 25378 00012950 4C89C1                  	mov rcx, r8
 25379 00012953 4D8D5002                	lea r10, [r8 + 2] 
 25380 00012957 4883E900                	sub rcx, 0
 25381 0001295B 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 25382 00012960 49B9-                   	mov r9, sob_nil
 25382 00012962 [0100000000000000] 
 25383                                  .L_lambda_opt_create_list_of_opt_params_0017:
 25384 0001296A 4883F900                	cmp rcx, 0
 25385 0001296E 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0017
 25386 00012970 BF11000000              	mov rdi, 17
 25387 00012975 E83C310000              	call malloc
 25388 0001297A C60021                  	mov byte [rax], T_pair
 25389 0001297D 498B1B                  	mov rbx, qword [r11]
 25390 00012980 48895801                	mov qword [rax +1], rbx
 25391 00012984 4C894809                	mov qword [rax + 1 + 8], r9
 25392 00012988 4989C1                  	mov r9, rax
 25393 0001298B 48FFC9                  	dec rcx
 25394 0001298E 4983EB08                	sub r11, 8
 25395 00012992 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0017
 25396                                  .L_lambda_opt_create_list_of_opt_params_end_0017:
 25397 00012994 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 25398 00012999 4D8908                  	mov qword [r8], r9
 25399 0001299C 4E8D14D500000000        	lea r10, [8 * r10]
 25400 000129A4 4901E2                  	add r10, rsp
 25401 000129A7 B904000000              	mov rcx, 4 + 0
 25402                                  .L_lambda_opt_stack_shrink_loop_0017:
 25403 000129AC 4883F900                	cmp rcx, 0
 25404 000129B0 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0017
 25405 000129B2 4D8B18                  	mov r11, qword [r8]
 25406 000129B5 4D891A                  	mov qword [r10], r11
 25407 000129B8 4983E808                	sub r8, 8
 25408 000129BC 4983EA08                	sub r10, 8
 25409 000129C0 48FFC9                  	dec rcx
 25410 000129C3 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 25411                                  .L_lambda_opt_stack_shrink_loop_exit_0017:
 25412 000129C5 4983C208                	add r10, 8
 25413 000129C9 4C89D4                  	mov rsp, r10
 25414                                  .L_lambda_opt_stack_adjusted_0017:;continue with the code, the stack is ok
 25415 000129CC 48C744241001000000      	mov qword [rsp + 8*2], 1
 25416 000129D5 C8000000                	enter 0, 0
 25417                                  	; preparing a tail-call
 25418 000129D9 488B4520                	mov rax, PARAM(0)	; param strings
 25419 000129DD 50                      	push rax
 25420 000129DE 48B8-                   	mov rax, L_constants + 2135
 25420 000129E0 [5708000000000000] 
 25421 000129E8 50                      	push rax
 25422                                  	; preparing a non-tail-call
 25423                                  	; preparing a non-tail-call
 25424                                  	; preparing a non-tail-call
 25425 000129E9 488B4520                	mov rax, PARAM(0)	; param strings
 25426 000129ED 50                      	push rax
 25427 000129EE 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 25428 000129F6 803805                  	cmp byte [rax], T_undefined
 25429 000129F9 0F848A2F0000            	je L_error_fvar_undefined
 25430 000129FF 50                      	push rax
 25431 00012A00 6A02                    	push 2	; arg count
 25432 00012A02 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
 25433 00012A0A 803805                  	cmp byte [rax], T_undefined
 25434 00012A0D 0F84762F0000            	je L_error_fvar_undefined
 25435 00012A13 803804                  	cmp byte [rax], T_closure
 25436 00012A16 0F85F12F0000            	jne L_error_non_closure
 25437 00012A1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25438 00012A1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25439 00012A22 50                      	push rax
 25440 00012A23 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 25441 00012A2B 803805                  	cmp byte [rax], T_undefined
 25442 00012A2E 0F84552F0000            	je L_error_fvar_undefined
 25443 00012A34 50                      	push rax
 25444 00012A35 6A02                    	push 2	; arg count
 25445 00012A37 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
 25446 00012A3F 803805                  	cmp byte [rax], T_undefined
 25447 00012A42 0F84412F0000            	je L_error_fvar_undefined
 25448 00012A48 803804                  	cmp byte [rax], T_closure
 25449 00012A4B 0F85BC2F0000            	jne L_error_non_closure
 25450 00012A51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25451 00012A54 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25452 00012A57 50                      	push rax
 25453 00012A58 6A01                    	push 1	; arg count
 25454 00012A5A 488B0425[61140000]      	mov rax, qword [free_var_99]	; free var make-string
 25455 00012A62 803805                  	cmp byte [rax], T_undefined
 25456 00012A65 0F841E2F0000            	je L_error_fvar_undefined
 25457 00012A6B 803804                  	cmp byte [rax], T_closure
 25458 00012A6E 0F85992F0000            	jne L_error_non_closure
 25459 00012A74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25460 00012A77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25461 00012A7A 50                      	push rax
 25462 00012A7B 6A03                    	push 3	; arg count
 25463 00012A7D 488B4510                	mov rax, ENV
 25464 00012A81 488B00                  	mov rax, qword [rax + 8 * 0]
 25465 00012A84 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25466 00012A87 488B00                  	mov rax, qword [rax]
 25467 00012A8A 803804                  	cmp byte [rax], T_closure
 25468 00012A8D 0F857A2F0000            	jne L_error_non_closure
 25469 00012A93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25470 00012A96 FF7508                  	push qword [rbp + 8 * 1]
 25471                                   ; old ret addr
 25472 00012A99 FF7500                  	push qword [rbp]
 25473                                   ; restore the old rbp
 25474 00012A9C BB03000000              	mov rbx, 3
 25475 00012AA1 4883C303                	add rbx, 3
 25476 00012AA5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25477 00012AA9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25478 00012AAE 4C8D4DF8                	lea r9, [rbp - 8]
 25479 00012AB2 B907000000              	mov rcx, 7
 25480                                  .L_tc_recycle_frame_loop_00d6:
 25481 00012AB7 4883F900                	cmp rcx, 0
 25482 00012ABB 7413                    	je .L_tc_recycle_frame_done_00d6
 25483 00012ABD 4D8B11                  	mov r10, qword [r9]
 25484 00012AC0 4D8910                  	mov qword [r8], r10
 25485 00012AC3 4983E808                	sub r8, 8
 25486 00012AC7 4983E908                	sub r9, 8
 25487 00012ACB 48FFC9                  	dec rcx
 25488 00012ACE EBE7                    	jmp .L_tc_recycle_frame_loop_00d6
 25489                                  .L_tc_recycle_frame_done_00d6:
 25490 00012AD0 498D6008                	lea rsp, [r8 + 8]
 25491 00012AD4 5D                      	pop rbp ; restore the old rbp
 25492 00012AD5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25493 00012AD8 C9                      	leave
 25494 00012AD9 C21800                  	ret 8 * (2 + 1)
 25495                                  .L_lambda_opt_end_0017:	; new closure is in rax
 25496 00012ADC C9                      	leave
 25497 00012ADD C22000                  	ret AND_KILL_FRAME(2)
 25498                                  .L_lambda_simple_end_0099:	; new closure is in rax
 25499 00012AE0 803804                  	cmp byte [rax], T_closure
 25500 00012AE3 0F85242F0000            	jne L_error_non_closure
 25501 00012AE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25502 00012AEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 25503 00012AEF 48890425[C6150000]      	mov qword [free_var_120], rax
 25504 00012AF7 48B8-                   	mov rax, sob_void
 25504 00012AF9 [0000000000000000] 
 25505                                  
 25506 00012B01 4889C7                  	mov rdi, rax
 25507 00012B04 E802320000              	call print_sexpr_if_not_void
 25508                                  	; preparing a non-tail-call
 25509 00012B09 48B8-                   	mov rax, L_constants + 1993
 25509 00012B0B [C907000000000000] 
 25510 00012B13 50                      	push rax
 25511 00012B14 48B8-                   	mov rax, L_constants + 1993
 25511 00012B16 [C907000000000000] 
 25512 00012B1E 50                      	push rax
 25513 00012B1F 6A02                    	push 2	; arg count
 25514 00012B21 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25515 00012B26 E88B2F0000              	call malloc
 25516 00012B2B 50                      	push rax
 25517 00012B2C BF00000000              	mov rdi, 8 * 0	; new rib
 25518 00012B31 E8802F0000              	call malloc
 25519 00012B36 50                      	push rax
 25520 00012B37 BF08000000              	mov rdi, 8 * 1	; extended env
 25521 00012B3C E8752F0000              	call malloc
 25522 00012B41 488B7D10                	mov rdi, ENV
 25523 00012B45 BE00000000              	mov rsi, 0
 25524 00012B4A BA01000000              	mov rdx, 1
 25525                                  .L_lambda_simple_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 25526 00012B4F 4883FE00                	cmp rsi, 0
 25527 00012B53 7410                    	je .L_lambda_simple_env_end_009d
 25528 00012B55 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25529 00012B59 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25530 00012B5D 48FFC6                  	inc rsi
 25531 00012B60 48FFC2                  	inc rdx
 25532 00012B63 EBEA                    	jmp .L_lambda_simple_env_loop_009d
 25533                                  .L_lambda_simple_env_end_009d:
 25534 00012B65 5B                      	pop rbx
 25535 00012B66 BE00000000              	mov rsi, 0
 25536                                  .L_lambda_simple_params_loop_009d:	; copy params
 25537 00012B6B 4883FE00                	cmp rsi, 0
 25538 00012B6F 740E                    	je .L_lambda_simple_params_end_009d
 25539 00012B71 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25540 00012B76 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25541 00012B7A 48FFC6                  	inc rsi
 25542 00012B7D EBEC                    	jmp .L_lambda_simple_params_loop_009d
 25543                                  .L_lambda_simple_params_end_009d:
 25544 00012B7F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25545 00012B82 4889C3                  	mov rbx, rax
 25546 00012B85 58                      	pop rax
 25547 00012B86 C60004                  	mov byte [rax], T_closure
 25548 00012B89 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25549 00012B8D 48C74009[9A2B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009d
 25550 00012B95 E9D9070000              	jmp .L_lambda_simple_end_009d
 25551                                  .L_lambda_simple_code_009d:	; lambda-simple body
 25552 00012B9A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25553 00012BA0 740B                    	je .L_lambda_simple_arity_check_ok_009d
 25554 00012BA2 FF742410                	push qword [rsp + 8 * 2]
 25555 00012BA6 6A02                    	push 2
 25556 00012BA8 E9C22E0000              	jmp L_error_incorrect_arity_simple
 25557                                  .L_lambda_simple_arity_check_ok_009d:
 25558 00012BAD C8000000                	enter 0, 0
 25559 00012BB1 BF08000000              	mov rdi, 8*1
 25560 00012BB6 E8FB2E0000              	call malloc
 25561 00012BBB 488B5D20                	mov rbx, PARAM(0)
 25562 00012BBF 488918                  	mov qword [rax], rbx
 25563 00012BC2 48894520                	mov PARAM(0), rax
 25564 00012BC6 48B8-                   	mov rax, sob_void
 25564 00012BC8 [0000000000000000] 
 25565                                  
 25566 00012BD0 BF08000000              	mov rdi, 8*1
 25567 00012BD5 E8DC2E0000              	call malloc
 25568 00012BDA 488B5D28                	mov rbx, PARAM(1)
 25569 00012BDE 488918                  	mov qword [rax], rbx
 25570 00012BE1 48894528                	mov PARAM(1), rax
 25571 00012BE5 48B8-                   	mov rax, sob_void
 25571 00012BE7 [0000000000000000] 
 25572                                  
 25573 00012BEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25574 00012BF4 E8BD2E0000              	call malloc
 25575 00012BF9 50                      	push rax
 25576 00012BFA BF10000000              	mov rdi, 8 * 2	; new rib
 25577 00012BFF E8B22E0000              	call malloc
 25578 00012C04 50                      	push rax
 25579 00012C05 BF10000000              	mov rdi, 8 * 2	; extended env
 25580 00012C0A E8A72E0000              	call malloc
 25581 00012C0F 488B7D10                	mov rdi, ENV
 25582 00012C13 BE00000000              	mov rsi, 0
 25583 00012C18 BA01000000              	mov rdx, 1
 25584                                  .L_lambda_simple_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 25585 00012C1D 4883FE01                	cmp rsi, 1
 25586 00012C21 7410                    	je .L_lambda_simple_env_end_009e
 25587 00012C23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25588 00012C27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25589 00012C2B 48FFC6                  	inc rsi
 25590 00012C2E 48FFC2                  	inc rdx
 25591 00012C31 EBEA                    	jmp .L_lambda_simple_env_loop_009e
 25592                                  .L_lambda_simple_env_end_009e:
 25593 00012C33 5B                      	pop rbx
 25594 00012C34 BE00000000              	mov rsi, 0
 25595                                  .L_lambda_simple_params_loop_009e:	; copy params
 25596 00012C39 4883FE02                	cmp rsi, 2
 25597 00012C3D 740E                    	je .L_lambda_simple_params_end_009e
 25598 00012C3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25599 00012C44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25600 00012C48 48FFC6                  	inc rsi
 25601 00012C4B EBEC                    	jmp .L_lambda_simple_params_loop_009e
 25602                                  .L_lambda_simple_params_end_009e:
 25603 00012C4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25604 00012C50 4889C3                  	mov rbx, rax
 25605 00012C53 58                      	pop rax
 25606 00012C54 C60004                  	mov byte [rax], T_closure
 25607 00012C57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25608 00012C5B 48C74009[682C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009e
 25609 00012C63 E97C020000              	jmp .L_lambda_simple_end_009e
 25610                                  .L_lambda_simple_code_009e:	; lambda-simple body
 25611 00012C68 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25612 00012C6E 740B                    	je .L_lambda_simple_arity_check_ok_009e
 25613 00012C70 FF742410                	push qword [rsp + 8 * 2]
 25614 00012C74 6A03                    	push 3
 25615 00012C76 E9F42D0000              	jmp L_error_incorrect_arity_simple
 25616                                  .L_lambda_simple_arity_check_ok_009e:
 25617 00012C7B C8000000                	enter 0, 0
 25618                                  	; preparing a non-tail-call
 25619 00012C7F 488B4530                	mov rax, PARAM(2)	; param s
 25620 00012C83 50                      	push rax
 25621 00012C84 6A01                    	push 1	; arg count
 25622 00012C86 488B0425[E9140000]      	mov rax, qword [free_var_107]	; free var null?
 25623 00012C8E 803805                  	cmp byte [rax], T_undefined
 25624 00012C91 0F84F22C0000            	je L_error_fvar_undefined
 25625 00012C97 803804                  	cmp byte [rax], T_closure
 25626 00012C9A 0F856D2D0000            	jne L_error_non_closure
 25627 00012CA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25628 00012CA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25629 00012CA6 483D[02000000]          	cmp rax, sob_boolean_false
 25630 00012CAC 7409                    	je .L_if_else_007d
 25631 00012CAE 488B4520                	mov rax, PARAM(0)	; param target
 25632 00012CB2 E929020000              	jmp .L_if_end_007d
 25633                                  .L_if_else_007d:
 25634                                  	; preparing a tail-call
 25635                                  	; preparing a non-tail-call
 25636                                  	; preparing a non-tail-call
 25637                                  	; preparing a non-tail-call
 25638 00012CB7 488B4530                	mov rax, PARAM(2)	; param s
 25639 00012CBB 50                      	push rax
 25640 00012CBC 6A01                    	push 1	; arg count
 25641 00012CBE 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 25642 00012CC6 803805                  	cmp byte [rax], T_undefined
 25643 00012CC9 0F84BA2C0000            	je L_error_fvar_undefined
 25644 00012CCF 803804                  	cmp byte [rax], T_closure
 25645 00012CD2 0F85352D0000            	jne L_error_non_closure
 25646 00012CD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25647 00012CDB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25648 00012CDE 50                      	push rax
 25649 00012CDF 6A01                    	push 1	; arg count
 25650 00012CE1 488B0425[4D170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25651 00012CE9 803805                  	cmp byte [rax], T_undefined
 25652 00012CEC 0F84972C0000            	je L_error_fvar_undefined
 25653 00012CF2 803804                  	cmp byte [rax], T_closure
 25654 00012CF5 0F85122D0000            	jne L_error_non_closure
 25655 00012CFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25656 00012CFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25657 00012D01 50                      	push rax
 25658 00012D02 48B8-                   	mov rax, L_constants + 2135
 25658 00012D04 [5708000000000000] 
 25659 00012D0C 50                      	push rax
 25660                                  	; preparing a non-tail-call
 25661 00012D0D 488B4530                	mov rax, PARAM(2)	; param s
 25662 00012D11 50                      	push rax
 25663 00012D12 6A01                    	push 1	; arg count
 25664 00012D14 488B0425[0F110000]      	mov rax, qword [free_var_49]	; free var car
 25665 00012D1C 803805                  	cmp byte [rax], T_undefined
 25666 00012D1F 0F84642C0000            	je L_error_fvar_undefined
 25667 00012D25 803804                  	cmp byte [rax], T_closure
 25668 00012D28 0F85DF2C0000            	jne L_error_non_closure
 25669 00012D2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25670 00012D31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25671 00012D34 50                      	push rax
 25672 00012D35 488B4528                	mov rax, PARAM(1)	; param i
 25673 00012D39 50                      	push rax
 25674 00012D3A 488B4520                	mov rax, PARAM(0)	; param target
 25675 00012D3E 50                      	push rax
 25676 00012D3F 6A05                    	push 5	; arg count
 25677 00012D41 488B4510                	mov rax, ENV
 25678 00012D45 488B00                  	mov rax, qword [rax + 8 * 0]
 25679 00012D48 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25680 00012D4C 488B00                  	mov rax, qword [rax]
 25681 00012D4F 803804                  	cmp byte [rax], T_closure
 25682 00012D52 0F85B52C0000            	jne L_error_non_closure
 25683 00012D58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25684 00012D5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25685 00012D5E 50                      	push rax
 25686 00012D5F 6A01                    	push 1	; arg count
 25687 00012D61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25688 00012D66 E84B2D0000              	call malloc
 25689 00012D6B 50                      	push rax
 25690 00012D6C BF18000000              	mov rdi, 8 * 3	; new rib
 25691 00012D71 E8402D0000              	call malloc
 25692 00012D76 50                      	push rax
 25693 00012D77 BF18000000              	mov rdi, 8 * 3	; extended env
 25694 00012D7C E8352D0000              	call malloc
 25695 00012D81 488B7D10                	mov rdi, ENV
 25696 00012D85 BE00000000              	mov rsi, 0
 25697 00012D8A BA01000000              	mov rdx, 1
 25698                                  .L_lambda_simple_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 25699 00012D8F 4883FE02                	cmp rsi, 2
 25700 00012D93 7410                    	je .L_lambda_simple_env_end_009f
 25701 00012D95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25702 00012D99 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25703 00012D9D 48FFC6                  	inc rsi
 25704 00012DA0 48FFC2                  	inc rdx
 25705 00012DA3 EBEA                    	jmp .L_lambda_simple_env_loop_009f
 25706                                  .L_lambda_simple_env_end_009f:
 25707 00012DA5 5B                      	pop rbx
 25708 00012DA6 BE00000000              	mov rsi, 0
 25709                                  .L_lambda_simple_params_loop_009f:	; copy params
 25710 00012DAB 4883FE03                	cmp rsi, 3
 25711 00012DAF 740E                    	je .L_lambda_simple_params_end_009f
 25712 00012DB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25713 00012DB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25714 00012DBA 48FFC6                  	inc rsi
 25715 00012DBD EBEC                    	jmp .L_lambda_simple_params_loop_009f
 25716                                  .L_lambda_simple_params_end_009f:
 25717 00012DBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25718 00012DC2 4889C3                  	mov rbx, rax
 25719 00012DC5 58                      	pop rax
 25720 00012DC6 C60004                  	mov byte [rax], T_closure
 25721 00012DC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25722 00012DCD 48C74009[DA2D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009f
 25723 00012DD5 E9B8000000              	jmp .L_lambda_simple_end_009f
 25724                                  .L_lambda_simple_code_009f:	; lambda-simple body
 25725 00012DDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25726 00012DE0 740B                    	je .L_lambda_simple_arity_check_ok_009f
 25727 00012DE2 FF742410                	push qword [rsp + 8 * 2]
 25728 00012DE6 6A01                    	push 1
 25729 00012DE8 E9822C0000              	jmp L_error_incorrect_arity_simple
 25730                                  .L_lambda_simple_arity_check_ok_009f:
 25731 00012DED C8000000                	enter 0, 0
 25732                                  	; preparing a tail-call
 25733                                  	; preparing a non-tail-call
 25734 00012DF1 488B4510                	mov rax, ENV
 25735 00012DF5 488B00                  	mov rax, qword [rax + 8 * 0]
 25736 00012DF8 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25737 00012DFC 50                      	push rax
 25738 00012DFD 6A01                    	push 1	; arg count
 25739 00012DFF 488B0425[0E120000]      	mov rax, qword [free_var_64]	; free var cdr
 25740 00012E07 803805                  	cmp byte [rax], T_undefined
 25741 00012E0A 0F84792B0000            	je L_error_fvar_undefined
 25742 00012E10 803804                  	cmp byte [rax], T_closure
 25743 00012E13 0F85F42B0000            	jne L_error_non_closure
 25744 00012E19 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25745 00012E1C FF5009                  	call SOB_CLOSURE_CODE(rax)
 25746 00012E1F 50                      	push rax
 25747 00012E20 488B4520                	mov rax, PARAM(0)	; param i
 25748 00012E24 50                      	push rax
 25749 00012E25 488B4510                	mov rax, ENV
 25750 00012E29 488B00                  	mov rax, qword [rax + 8 * 0]
 25751 00012E2C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25752 00012E2F 50                      	push rax
 25753 00012E30 6A03                    	push 3	; arg count
 25754 00012E32 488B4510                	mov rax, ENV
 25755 00012E36 488B4008                	mov rax, qword [rax + 8 * 1]
 25756 00012E3A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25757 00012E3D 488B00                  	mov rax, qword [rax]
 25758 00012E40 803804                  	cmp byte [rax], T_closure
 25759 00012E43 0F85C42B0000            	jne L_error_non_closure
 25760 00012E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25761 00012E4C FF7508                  	push qword [rbp + 8 * 1]
 25762                                   ; old ret addr
 25763 00012E4F FF7500                  	push qword [rbp]
 25764                                   ; restore the old rbp
 25765 00012E52 BB03000000              	mov rbx, 3
 25766 00012E57 4883C303                	add rbx, 3
 25767 00012E5B 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25768 00012E5F 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25769 00012E64 4C8D4DF8                	lea r9, [rbp - 8]
 25770 00012E68 B907000000              	mov rcx, 7
 25771                                  .L_tc_recycle_frame_loop_00d8:
 25772 00012E6D 4883F900                	cmp rcx, 0
 25773 00012E71 7413                    	je .L_tc_recycle_frame_done_00d8
 25774 00012E73 4D8B11                  	mov r10, qword [r9]
 25775 00012E76 4D8910                  	mov qword [r8], r10
 25776 00012E79 4983E808                	sub r8, 8
 25777 00012E7D 4983E908                	sub r9, 8
 25778 00012E81 48FFC9                  	dec rcx
 25779 00012E84 EBE7                    	jmp .L_tc_recycle_frame_loop_00d8
 25780                                  .L_tc_recycle_frame_done_00d8:
 25781 00012E86 498D6008                	lea rsp, [r8 + 8]
 25782 00012E8A 5D                      	pop rbp ; restore the old rbp
 25783 00012E8B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25784 00012E8E C9                      	leave
 25785 00012E8F C21800                  	ret AND_KILL_FRAME(1)
 25786                                  .L_lambda_simple_end_009f:	; new closure is in rax
 25787 00012E92 803804                  	cmp byte [rax], T_closure
 25788 00012E95 0F85722B0000            	jne L_error_non_closure
 25789 00012E9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25790 00012E9E FF7508                  	push qword [rbp + 8 * 1]
 25791                                   ; old ret addr
 25792 00012EA1 FF7500                  	push qword [rbp]
 25793                                   ; restore the old rbp
 25794 00012EA4 BB01000000              	mov rbx, 1
 25795 00012EA9 4883C303                	add rbx, 3
 25796 00012EAD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25797 00012EB1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25798 00012EB6 4C8D4DF8                	lea r9, [rbp - 8]
 25799 00012EBA B905000000              	mov rcx, 5
 25800                                  .L_tc_recycle_frame_loop_00d7:
 25801 00012EBF 4883F900                	cmp rcx, 0
 25802 00012EC3 7413                    	je .L_tc_recycle_frame_done_00d7
 25803 00012EC5 4D8B11                  	mov r10, qword [r9]
 25804 00012EC8 4D8910                  	mov qword [r8], r10
 25805 00012ECB 4983E808                	sub r8, 8
 25806 00012ECF 4983E908                	sub r9, 8
 25807 00012ED3 48FFC9                  	dec rcx
 25808 00012ED6 EBE7                    	jmp .L_tc_recycle_frame_loop_00d7
 25809                                  .L_tc_recycle_frame_done_00d7:
 25810 00012ED8 498D6008                	lea rsp, [r8 + 8]
 25811 00012EDC 5D                      	pop rbp ; restore the old rbp
 25812 00012EDD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25813                                  .L_if_end_007d:
 25814 00012EE0 C9                      	leave
 25815 00012EE1 C22800                  	ret AND_KILL_FRAME(3)
 25816                                  .L_lambda_simple_end_009e:	; new closure is in rax
 25817 00012EE4 50                      	push rax
 25818 00012EE5 488B4520                	mov rax, PARAM(0)	; param run
 25819 00012EE9 8F00                    	pop qword [rax]
 25820 00012EEB 48B8-                   	mov rax, sob_void
 25820 00012EED [0000000000000000] 
 25821                                  
 25822 00012EF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25823 00012EFA E8B72B0000              	call malloc
 25824 00012EFF 50                      	push rax
 25825 00012F00 BF10000000              	mov rdi, 8 * 2	; new rib
 25826 00012F05 E8AC2B0000              	call malloc
 25827 00012F0A 50                      	push rax
 25828 00012F0B BF10000000              	mov rdi, 8 * 2	; extended env
 25829 00012F10 E8A12B0000              	call malloc
 25830 00012F15 488B7D10                	mov rdi, ENV
 25831 00012F19 BE00000000              	mov rsi, 0
 25832 00012F1E BA01000000              	mov rdx, 1
 25833                                  .L_lambda_simple_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 25834 00012F23 4883FE01                	cmp rsi, 1
 25835 00012F27 7410                    	je .L_lambda_simple_env_end_00a0
 25836 00012F29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25837 00012F2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25838 00012F31 48FFC6                  	inc rsi
 25839 00012F34 48FFC2                  	inc rdx
 25840 00012F37 EBEA                    	jmp .L_lambda_simple_env_loop_00a0
 25841                                  .L_lambda_simple_env_end_00a0:
 25842 00012F39 5B                      	pop rbx
 25843 00012F3A BE00000000              	mov rsi, 0
 25844                                  .L_lambda_simple_params_loop_00a0:	; copy params
 25845 00012F3F 4883FE02                	cmp rsi, 2
 25846 00012F43 740E                    	je .L_lambda_simple_params_end_00a0
 25847 00012F45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25848 00012F4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25849 00012F4E 48FFC6                  	inc rsi
 25850 00012F51 EBEC                    	jmp .L_lambda_simple_params_loop_00a0
 25851                                  .L_lambda_simple_params_end_00a0:
 25852 00012F53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25853 00012F56 4889C3                  	mov rbx, rax
 25854 00012F59 58                      	pop rax
 25855 00012F5A C60004                  	mov byte [rax], T_closure
 25856 00012F5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25857 00012F61 48C74009[6E2F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a0
 25858 00012F69 E985010000              	jmp .L_lambda_simple_end_00a0
 25859                                  .L_lambda_simple_code_00a0:	; lambda-simple body
 25860 00012F6E 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25861 00012F74 740B                    	je .L_lambda_simple_arity_check_ok_00a0
 25862 00012F76 FF742410                	push qword [rsp + 8 * 2]
 25863 00012F7A 6A05                    	push 5
 25864 00012F7C E9EE2A0000              	jmp L_error_incorrect_arity_simple
 25865                                  .L_lambda_simple_arity_check_ok_00a0:
 25866 00012F81 C8000000                	enter 0, 0
 25867                                  	; preparing a non-tail-call
 25868 00012F85 488B4540                	mov rax, PARAM(4)	; param limit
 25869 00012F89 50                      	push rax
 25870 00012F8A 488B4538                	mov rax, PARAM(3)	; param j
 25871 00012F8E 50                      	push rax
 25872 00012F8F 6A02                    	push 2	; arg count
 25873 00012F91 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 25874 00012F99 803805                  	cmp byte [rax], T_undefined
 25875 00012F9C 0F84E7290000            	je L_error_fvar_undefined
 25876 00012FA2 803804                  	cmp byte [rax], T_closure
 25877 00012FA5 0F85622A0000            	jne L_error_non_closure
 25878 00012FAB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25879 00012FAE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25880 00012FB1 483D[02000000]          	cmp rax, sob_boolean_false
 25881 00012FB7 0F842E010000            	je .L_if_else_007e
 25882                                  	; preparing a non-tail-call
 25883                                  	; preparing a non-tail-call
 25884 00012FBD 488B4538                	mov rax, PARAM(3)	; param j
 25885 00012FC1 50                      	push rax
 25886 00012FC2 488B4530                	mov rax, PARAM(2)	; param vec
 25887 00012FC6 50                      	push rax
 25888 00012FC7 6A02                    	push 2	; arg count
 25889 00012FC9 488B0425[5E170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 25890 00012FD1 803805                  	cmp byte [rax], T_undefined
 25891 00012FD4 0F84AF290000            	je L_error_fvar_undefined
 25892 00012FDA 803804                  	cmp byte [rax], T_closure
 25893 00012FDD 0F852A2A0000            	jne L_error_non_closure
 25894 00012FE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25895 00012FE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25896 00012FE9 50                      	push rax
 25897 00012FEA 488B4528                	mov rax, PARAM(1)	; param i
 25898 00012FEE 50                      	push rax
 25899 00012FEF 488B4520                	mov rax, PARAM(0)	; param target
 25900 00012FF3 50                      	push rax
 25901 00012FF4 6A03                    	push 3	; arg count
 25902 00012FF6 488B0425[91170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 25903 00012FFE 803805                  	cmp byte [rax], T_undefined
 25904 00013001 0F8482290000            	je L_error_fvar_undefined
 25905 00013007 803804                  	cmp byte [rax], T_closure
 25906 0001300A 0F85FD290000            	jne L_error_non_closure
 25907 00013010 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25908 00013013 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25909                                  
 25910                                  	; preparing a tail-call
 25911 00013016 488B4540                	mov rax, PARAM(4)	; param limit
 25912 0001301A 50                      	push rax
 25913                                  	; preparing a non-tail-call
 25914 0001301B 48B8-                   	mov rax, L_constants + 2270
 25914 0001301D [DE08000000000000] 
 25915 00013025 50                      	push rax
 25916 00013026 488B4538                	mov rax, PARAM(3)	; param j
 25917 0001302A 50                      	push rax
 25918 0001302B 6A02                    	push 2	; arg count
 25919 0001302D 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 25920 00013035 803805                  	cmp byte [rax], T_undefined
 25921 00013038 0F844B290000            	je L_error_fvar_undefined
 25922 0001303E 803804                  	cmp byte [rax], T_closure
 25923 00013041 0F85C6290000            	jne L_error_non_closure
 25924 00013047 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25925 0001304A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25926 0001304D 50                      	push rax
 25927 0001304E 488B4530                	mov rax, PARAM(2)	; param vec
 25928 00013052 50                      	push rax
 25929                                  	; preparing a non-tail-call
 25930 00013053 48B8-                   	mov rax, L_constants + 2270
 25930 00013055 [DE08000000000000] 
 25931 0001305D 50                      	push rax
 25932 0001305E 488B4528                	mov rax, PARAM(1)	; param i
 25933 00013062 50                      	push rax
 25934 00013063 6A02                    	push 2	; arg count
 25935 00013065 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 25936 0001306D 803805                  	cmp byte [rax], T_undefined
 25937 00013070 0F8413290000            	je L_error_fvar_undefined
 25938 00013076 803804                  	cmp byte [rax], T_closure
 25939 00013079 0F858E290000            	jne L_error_non_closure
 25940 0001307F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25941 00013082 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25942 00013085 50                      	push rax
 25943 00013086 488B4520                	mov rax, PARAM(0)	; param target
 25944 0001308A 50                      	push rax
 25945 0001308B 6A05                    	push 5	; arg count
 25946 0001308D 488B4510                	mov rax, ENV
 25947 00013091 488B00                  	mov rax, qword [rax + 8 * 0]
 25948 00013094 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25949 00013098 488B00                  	mov rax, qword [rax]
 25950 0001309B 803804                  	cmp byte [rax], T_closure
 25951 0001309E 0F8569290000            	jne L_error_non_closure
 25952 000130A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25953 000130A7 FF7508                  	push qword [rbp + 8 * 1]
 25954                                   ; old ret addr
 25955 000130AA FF7500                  	push qword [rbp]
 25956                                   ; restore the old rbp
 25957 000130AD BB05000000              	mov rbx, 5
 25958 000130B2 4883C303                	add rbx, 3
 25959 000130B6 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 25960 000130BA 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 25961 000130BF 4C8D4DF8                	lea r9, [rbp - 8]
 25962 000130C3 B909000000              	mov rcx, 9
 25963                                  .L_tc_recycle_frame_loop_00d9:
 25964 000130C8 4883F900                	cmp rcx, 0
 25965 000130CC 7413                    	je .L_tc_recycle_frame_done_00d9
 25966 000130CE 4D8B11                  	mov r10, qword [r9]
 25967 000130D1 4D8910                  	mov qword [r8], r10
 25968 000130D4 4983E808                	sub r8, 8
 25969 000130D8 4983E908                	sub r9, 8
 25970 000130DC 48FFC9                  	dec rcx
 25971 000130DF EBE7                    	jmp .L_tc_recycle_frame_loop_00d9
 25972                                  .L_tc_recycle_frame_done_00d9:
 25973 000130E1 498D6008                	lea rsp, [r8 + 8]
 25974 000130E5 5D                      	pop rbp ; restore the old rbp
 25975 000130E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25976 000130E9 EB04                    	jmp .L_if_end_007e
 25977                                  .L_if_else_007e:
 25978 000130EB 488B4528                	mov rax, PARAM(1)	; param i
 25979                                  .L_if_end_007e:
 25980 000130EF C9                      	leave
 25981 000130F0 C23800                  	ret AND_KILL_FRAME(5)
 25982                                  .L_lambda_simple_end_00a0:	; new closure is in rax
 25983 000130F3 50                      	push rax
 25984 000130F4 488B4528                	mov rax, PARAM(1)	; param add
 25985 000130F8 8F00                    	pop qword [rax]
 25986 000130FA 48B8-                   	mov rax, sob_void
 25986 000130FC [0000000000000000] 
 25987                                  
 25988 00013104 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25989 00013109 E8A8290000              	call malloc
 25990 0001310E 50                      	push rax
 25991 0001310F BF10000000              	mov rdi, 8 * 2	; new rib
 25992 00013114 E89D290000              	call malloc
 25993 00013119 50                      	push rax
 25994 0001311A BF10000000              	mov rdi, 8 * 2	; extended env
 25995 0001311F E892290000              	call malloc
 25996 00013124 488B7D10                	mov rdi, ENV
 25997 00013128 4831F6                  	 xor rsi, rsi
 25998 0001312B 4831D2                  	 xor rdx, rdx
 25999 0001312E 48FFC2                  	inc rdx
 26000                                  .L_lambda_opt_env_loop_0018:	; ext_env[i + 1] <-- env[i]
 26001 00013131 4883FE01                	cmp rsi, 1
 26002 00013135 7410                    	je .L_lambda_opt_env_end_0018
 26003 00013137 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26004 0001313B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26005 0001313F 48FFC6                  	inc rsi
 26006 00013142 48FFC2                  	inc rdx
 26007 00013145 EBEA                    	jmp .L_lambda_opt_env_loop_0018
 26008                                  .L_lambda_opt_env_end_0018:
 26009 00013147 5B                      	pop rbx
 26010 00013148 4831F6                  	xor rsi, rsi
 26011                                  .L_lambda_opt_params_loop_0018:	; copy params
 26012 0001314B 4883FE02                	cmp rsi, 2
 26013 0001314F 740E                    	je .L_lambda_opt_params_end_0018
 26014 00013151 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26015 00013156 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26016 0001315A 48FFC6                  	inc rsi
 26017 0001315D EBEC                    	jmp .L_lambda_opt_params_loop_0018
 26018                                  .L_lambda_opt_params_end_0018:
 26019 0001315F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26020 00013162 4889C3                  	mov rbx, rax
 26021 00013165 58                      	pop rax
 26022 00013166 C60004                  	mov byte [rax], T_closure
 26023 00013169 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26024 0001316D 48C74009[7A310100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0018
 26025 00013175 E9F5010000              	jmp .L_lambda_opt_end_0018
 26026                                  .L_lambda_opt_code_0018:; lambda opt body
 26027 0001317A 48837C241000            	cmp qword [rsp + 8 * 2], 0
 26028 00013180 7409                    	je .L_lambda_opt_arity_check_exact_0018
 26029 00013182 7F57                    	jg .L_lambda_opt_arity_check_more_0018
 26030 00013184 6A00                    	push 0
 26031 00013186 E9F8280000              	jmp L_error_incorrect_arity_opt
 26032                                  .L_lambda_opt_arity_check_exact_0018:
 26033 0001318B 4C8B0C24                	mov r9, qword [rsp -8 * 0]
 26034 0001318F 4C894C24F8              	mov qword [rsp -8], r9
 26035 00013194 4C8B4C2408              	mov r9, qword [rsp +8]
 26036 00013199 4C890C24                	mov qword [rsp +8 * 0], r9
 26037 0001319D 4C8B4C2410              	mov r9, qword [rsp +8 * 2]
 26038 000131A2 4C89C9                  	mov rcx, r9
 26039 000131A5 49FFC1                  	inc r9
 26040 000131A8 4C894C2408              	mov qword [rsp +8], r9
 26041 000131AD 4889E2                  	mov rdx, rsp
 26042 000131B0 4883C218                	add rdx, 24
 26043                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0018:
 26044 000131B4 4883F900                	cmp rcx, 0
 26045 000131B8 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0018
 26046 000131BA 4C8B02                  	mov r8, qword [rdx]
 26047 000131BD 4C8942F8                	mov qword [rdx - 8], r8
 26048 000131C1 4883C208                	add rdx, 8
 26049 000131C5 48FFC9                  	dec rcx
 26050 000131C8 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0018
 26051                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0018:
 26052 000131CA 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 26053 000131D2 4883EC08                	sub rsp, 8
 26054 000131D6 E984000000              	jmp .L_lambda_opt_stack_adjusted_0018
 26055                                  .L_lambda_opt_arity_check_more_0018:
 26056 000131DB 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 26057 000131E0 4D89C4                  	mov r12, r8
 26058 000131E3 4C89C1                  	mov rcx, r8
 26059 000131E6 4D8D5002                	lea r10, [r8 + 2] 
 26060 000131EA 4883E900                	sub rcx, 0
 26061 000131EE 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 8*2]
 26062 000131F3 49B9-                   	mov r9, sob_nil
 26062 000131F5 [0100000000000000] 
 26063                                  .L_lambda_opt_create_list_of_opt_params_0018:
 26064 000131FD 4883F900                	cmp rcx, 0
 26065 00013201 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0018
 26066 00013203 BF11000000              	mov rdi, 17
 26067 00013208 E8A9280000              	call malloc
 26068 0001320D C60021                  	mov byte [rax], T_pair
 26069 00013210 498B1B                  	mov rbx, qword [r11]
 26070 00013213 48895801                	mov qword [rax +1], rbx
 26071 00013217 4C894809                	mov qword [rax + 1 + 8], r9
 26072 0001321B 4989C1                  	mov r9, rax
 26073 0001321E 48FFC9                  	dec rcx
 26074 00013221 4983EB08                	sub r11, 8
 26075 00013225 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0018
 26076                                  .L_lambda_opt_create_list_of_opt_params_end_0018:
 26077 00013227 4C8D442418              	lea r8, [rsp + 0*8 + 8*3]
 26078 0001322C 4D8908                  	mov qword [r8], r9
 26079 0001322F 4E8D14D500000000        	lea r10, [8 * r10]
 26080 00013237 4901E2                  	add r10, rsp
 26081 0001323A B904000000              	mov rcx, 4 + 0
 26082                                  .L_lambda_opt_stack_shrink_loop_0018:
 26083 0001323F 4883F900                	cmp rcx, 0
 26084 00013243 7413                    	je .L_lambda_opt_stack_shrink_loop_exit_0018
 26085 00013245 4D8B18                  	mov r11, qword [r8]
 26086 00013248 4D891A                  	mov qword [r10], r11
 26087 0001324B 4983E808                	sub r8, 8
 26088 0001324F 4983EA08                	sub r10, 8
 26089 00013253 48FFC9                  	dec rcx
 26090 00013256 EBE7                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 26091                                  .L_lambda_opt_stack_shrink_loop_exit_0018:
 26092 00013258 4983C208                	add r10, 8
 26093 0001325C 4C89D4                  	mov rsp, r10
 26094                                  .L_lambda_opt_stack_adjusted_0018:;continue with the code, the stack is ok
 26095 0001325F 48C744241001000000      	mov qword [rsp + 8*2], 1
 26096 00013268 C8000000                	enter 0, 0
 26097                                  	; preparing a tail-call
 26098 0001326C 488B4520                	mov rax, PARAM(0)	; param vectors
 26099 00013270 50                      	push rax
 26100 00013271 48B8-                   	mov rax, L_constants + 2135
 26100 00013273 [5708000000000000] 
 26101 0001327B 50                      	push rax
 26102                                  	; preparing a non-tail-call
 26103                                  	; preparing a non-tail-call
 26104                                  	; preparing a non-tail-call
 26105 0001327C 488B4520                	mov rax, PARAM(0)	; param vectors
 26106 00013280 50                      	push rax
 26107 00013281 488B0425[4D170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26108 00013289 803805                  	cmp byte [rax], T_undefined
 26109 0001328C 0F84F7260000            	je L_error_fvar_undefined
 26110 00013292 50                      	push rax
 26111 00013293 6A02                    	push 2	; arg count
 26112 00013295 488B0425[A5140000]      	mov rax, qword [free_var_103]	; free var map
 26113 0001329D 803805                  	cmp byte [rax], T_undefined
 26114 000132A0 0F84E3260000            	je L_error_fvar_undefined
 26115 000132A6 803804                  	cmp byte [rax], T_closure
 26116 000132A9 0F855E270000            	jne L_error_non_closure
 26117 000132AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 26118 000132B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26119 000132B5 50                      	push rax
 26120 000132B6 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 26121 000132BE 803805                  	cmp byte [rax], T_undefined
 26122 000132C1 0F84C2260000            	je L_error_fvar_undefined
 26123 000132C7 50                      	push rax
 26124 000132C8 6A02                    	push 2	; arg count
 26125 000132CA 488B0425[FF0F0000]      	mov rax, qword [free_var_33]	; free var apply
 26126 000132D2 803805                  	cmp byte [rax], T_undefined
 26127 000132D5 0F84AE260000            	je L_error_fvar_undefined
 26128 000132DB 803804                  	cmp byte [rax], T_closure
 26129 000132DE 0F8529270000            	jne L_error_non_closure
 26130 000132E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26131 000132E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26132 000132EA 50                      	push rax
 26133 000132EB 6A01                    	push 1	; arg count
 26134 000132ED 488B0425[83140000]      	mov rax, qword [free_var_101]	; free var make-vector
 26135 000132F5 803805                  	cmp byte [rax], T_undefined
 26136 000132F8 0F848B260000            	je L_error_fvar_undefined
 26137 000132FE 803804                  	cmp byte [rax], T_closure
 26138 00013301 0F8506270000            	jne L_error_non_closure
 26139 00013307 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26140 0001330A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26141 0001330D 50                      	push rax
 26142 0001330E 6A03                    	push 3	; arg count
 26143 00013310 488B4510                	mov rax, ENV
 26144 00013314 488B00                  	mov rax, qword [rax + 8 * 0]
 26145 00013317 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26146 0001331A 488B00                  	mov rax, qword [rax]
 26147 0001331D 803804                  	cmp byte [rax], T_closure
 26148 00013320 0F85E7260000            	jne L_error_non_closure
 26149 00013326 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26150 00013329 FF7508                  	push qword [rbp + 8 * 1]
 26151                                   ; old ret addr
 26152 0001332C FF7500                  	push qword [rbp]
 26153                                   ; restore the old rbp
 26154 0001332F BB03000000              	mov rbx, 3
 26155 00013334 4883C303                	add rbx, 3
 26156 00013338 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26157 0001333C 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26158 00013341 4C8D4DF8                	lea r9, [rbp - 8]
 26159 00013345 B907000000              	mov rcx, 7
 26160                                  .L_tc_recycle_frame_loop_00da:
 26161 0001334A 4883F900                	cmp rcx, 0
 26162 0001334E 7413                    	je .L_tc_recycle_frame_done_00da
 26163 00013350 4D8B11                  	mov r10, qword [r9]
 26164 00013353 4D8910                  	mov qword [r8], r10
 26165 00013356 4983E808                	sub r8, 8
 26166 0001335A 4983E908                	sub r9, 8
 26167 0001335E 48FFC9                  	dec rcx
 26168 00013361 EBE7                    	jmp .L_tc_recycle_frame_loop_00da
 26169                                  .L_tc_recycle_frame_done_00da:
 26170 00013363 498D6008                	lea rsp, [r8 + 8]
 26171 00013367 5D                      	pop rbp ; restore the old rbp
 26172 00013368 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26173 0001336B C9                      	leave
 26174 0001336C C21800                  	ret 8 * (2 + 1)
 26175                                  .L_lambda_opt_end_0018:	; new closure is in rax
 26176 0001336F C9                      	leave
 26177 00013370 C22000                  	ret AND_KILL_FRAME(2)
 26178                                  .L_lambda_simple_end_009d:	; new closure is in rax
 26179 00013373 803804                  	cmp byte [rax], T_closure
 26180 00013376 0F8591260000            	jne L_error_non_closure
 26181 0001337C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26182 0001337F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26183 00013382 48890425[3C170000]      	mov qword [free_var_142], rax
 26184 0001338A 48B8-                   	mov rax, sob_void
 26184 0001338C [0000000000000000] 
 26185                                  
 26186 00013394 4889C7                  	mov rdi, rax
 26187 00013397 E86F290000              	call print_sexpr_if_not_void
 26188 0001339C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26189 000133A1 E810270000              	call malloc
 26190 000133A6 50                      	push rax
 26191 000133A7 BF00000000              	mov rdi, 8 * 0	; new rib
 26192 000133AC E805270000              	call malloc
 26193 000133B1 50                      	push rax
 26194 000133B2 BF08000000              	mov rdi, 8 * 1	; extended env
 26195 000133B7 E8FA260000              	call malloc
 26196 000133BC 488B7D10                	mov rdi, ENV
 26197 000133C0 BE00000000              	mov rsi, 0
 26198 000133C5 BA01000000              	mov rdx, 1
 26199                                  .L_lambda_simple_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 26200 000133CA 4883FE00                	cmp rsi, 0
 26201 000133CE 7410                    	je .L_lambda_simple_env_end_00a1
 26202 000133D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26203 000133D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26204 000133D8 48FFC6                  	inc rsi
 26205 000133DB 48FFC2                  	inc rdx
 26206 000133DE EBEA                    	jmp .L_lambda_simple_env_loop_00a1
 26207                                  .L_lambda_simple_env_end_00a1:
 26208 000133E0 5B                      	pop rbx
 26209 000133E1 BE00000000              	mov rsi, 0
 26210                                  .L_lambda_simple_params_loop_00a1:	; copy params
 26211 000133E6 4883FE00                	cmp rsi, 0
 26212 000133EA 740E                    	je .L_lambda_simple_params_end_00a1
 26213 000133EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26214 000133F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26215 000133F5 48FFC6                  	inc rsi
 26216 000133F8 EBEC                    	jmp .L_lambda_simple_params_loop_00a1
 26217                                  .L_lambda_simple_params_end_00a1:
 26218 000133FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26219 000133FD 4889C3                  	mov rbx, rax
 26220 00013400 58                      	pop rax
 26221 00013401 C60004                  	mov byte [rax], T_closure
 26222 00013404 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26223 00013408 48C74009[15340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a1
 26224 00013410 E9C7000000              	jmp .L_lambda_simple_end_00a1
 26225                                  .L_lambda_simple_code_00a1:	; lambda-simple body
 26226 00013415 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26227 0001341B 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 26228 0001341D FF742410                	push qword [rsp + 8 * 2]
 26229 00013421 6A01                    	push 1
 26230 00013423 E947260000              	jmp L_error_incorrect_arity_simple
 26231                                  .L_lambda_simple_arity_check_ok_00a1:
 26232 00013428 C8000000                	enter 0, 0
 26233                                  	; preparing a tail-call
 26234                                  	; preparing a non-tail-call
 26235                                  	; preparing a non-tail-call
 26236 0001342C 488B4520                	mov rax, PARAM(0)	; param str
 26237 00013430 50                      	push rax
 26238 00013431 6A01                    	push 1	; arg count
 26239 00013433 488B0425[B5150000]      	mov rax, qword [free_var_119]	; free var string->list
 26240 0001343B 803805                  	cmp byte [rax], T_undefined
 26241 0001343E 0F8445250000            	je L_error_fvar_undefined
 26242 00013444 803804                  	cmp byte [rax], T_closure
 26243 00013447 0F85C0250000            	jne L_error_non_closure
 26244 0001344D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26245 00013450 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26246 00013453 50                      	push rax
 26247 00013454 6A01                    	push 1	; arg count
 26248 00013456 488B0425[A4150000]      	mov rax, qword [free_var_118]	; free var reverse
 26249 0001345E 803805                  	cmp byte [rax], T_undefined
 26250 00013461 0F8422250000            	je L_error_fvar_undefined
 26251 00013467 803804                  	cmp byte [rax], T_closure
 26252 0001346A 0F859D250000            	jne L_error_non_closure
 26253 00013470 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26254 00013473 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26255 00013476 50                      	push rax
 26256 00013477 6A01                    	push 1	; arg count
 26257 00013479 488B0425[0C140000]      	mov rax, qword [free_var_94]	; free var list->string
 26258 00013481 803805                  	cmp byte [rax], T_undefined
 26259 00013484 0F84FF240000            	je L_error_fvar_undefined
 26260 0001348A 803804                  	cmp byte [rax], T_closure
 26261 0001348D 0F857A250000            	jne L_error_non_closure
 26262 00013493 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26263 00013496 FF7508                  	push qword [rbp + 8 * 1]
 26264                                   ; old ret addr
 26265 00013499 FF7500                  	push qword [rbp]
 26266                                   ; restore the old rbp
 26267 0001349C BB01000000              	mov rbx, 1
 26268 000134A1 4883C303                	add rbx, 3
 26269 000134A5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26270 000134A9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26271 000134AE 4C8D4DF8                	lea r9, [rbp - 8]
 26272 000134B2 B905000000              	mov rcx, 5
 26273                                  .L_tc_recycle_frame_loop_00db:
 26274 000134B7 4883F900                	cmp rcx, 0
 26275 000134BB 7413                    	je .L_tc_recycle_frame_done_00db
 26276 000134BD 4D8B11                  	mov r10, qword [r9]
 26277 000134C0 4D8910                  	mov qword [r8], r10
 26278 000134C3 4983E808                	sub r8, 8
 26279 000134C7 4983E908                	sub r9, 8
 26280 000134CB 48FFC9                  	dec rcx
 26281 000134CE EBE7                    	jmp .L_tc_recycle_frame_loop_00db
 26282                                  .L_tc_recycle_frame_done_00db:
 26283 000134D0 498D6008                	lea rsp, [r8 + 8]
 26284 000134D4 5D                      	pop rbp ; restore the old rbp
 26285 000134D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26286 000134D8 C9                      	leave
 26287 000134D9 C21800                  	ret AND_KILL_FRAME(1)
 26288                                  .L_lambda_simple_end_00a1:	; new closure is in rax
 26289 000134DC 48890425[5F160000]      	mov qword [free_var_129], rax
 26290 000134E4 48B8-                   	mov rax, sob_void
 26290 000134E6 [0000000000000000] 
 26291                                  
 26292 000134EE 4889C7                  	mov rdi, rax
 26293 000134F1 E815280000              	call print_sexpr_if_not_void
 26294 000134F6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26295 000134FB E8B6250000              	call malloc
 26296 00013500 50                      	push rax
 26297 00013501 BF00000000              	mov rdi, 8 * 0	; new rib
 26298 00013506 E8AB250000              	call malloc
 26299 0001350B 50                      	push rax
 26300 0001350C BF08000000              	mov rdi, 8 * 1	; extended env
 26301 00013511 E8A0250000              	call malloc
 26302 00013516 488B7D10                	mov rdi, ENV
 26303 0001351A BE00000000              	mov rsi, 0
 26304 0001351F BA01000000              	mov rdx, 1
 26305                                  .L_lambda_simple_env_loop_00a2:	; ext_env[i + 1] <-- env[i]
 26306 00013524 4883FE00                	cmp rsi, 0
 26307 00013528 7410                    	je .L_lambda_simple_env_end_00a2
 26308 0001352A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26309 0001352E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26310 00013532 48FFC6                  	inc rsi
 26311 00013535 48FFC2                  	inc rdx
 26312 00013538 EBEA                    	jmp .L_lambda_simple_env_loop_00a2
 26313                                  .L_lambda_simple_env_end_00a2:
 26314 0001353A 5B                      	pop rbx
 26315 0001353B BE00000000              	mov rsi, 0
 26316                                  .L_lambda_simple_params_loop_00a2:	; copy params
 26317 00013540 4883FE00                	cmp rsi, 0
 26318 00013544 740E                    	je .L_lambda_simple_params_end_00a2
 26319 00013546 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26320 0001354B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26321 0001354F 48FFC6                  	inc rsi
 26322 00013552 EBEC                    	jmp .L_lambda_simple_params_loop_00a2
 26323                                  .L_lambda_simple_params_end_00a2:
 26324 00013554 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26325 00013557 4889C3                  	mov rbx, rax
 26326 0001355A 58                      	pop rax
 26327 0001355B C60004                  	mov byte [rax], T_closure
 26328 0001355E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26329 00013562 48C74009[6F350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a2
 26330 0001356A E9C7000000              	jmp .L_lambda_simple_end_00a2
 26331                                  .L_lambda_simple_code_00a2:	; lambda-simple body
 26332 0001356F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26333 00013575 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 26334 00013577 FF742410                	push qword [rsp + 8 * 2]
 26335 0001357B 6A01                    	push 1
 26336 0001357D E9ED240000              	jmp L_error_incorrect_arity_simple
 26337                                  .L_lambda_simple_arity_check_ok_00a2:
 26338 00013582 C8000000                	enter 0, 0
 26339                                  	; preparing a tail-call
 26340                                  	; preparing a non-tail-call
 26341                                  	; preparing a non-tail-call
 26342 00013586 488B4520                	mov rax, PARAM(0)	; param vec
 26343 0001358A 50                      	push rax
 26344 0001358B 6A01                    	push 1	; arg count
 26345 0001358D 488B0425[2B170000]      	mov rax, qword [free_var_141]	; free var vector->list
 26346 00013595 803805                  	cmp byte [rax], T_undefined
 26347 00013598 0F84EB230000            	je L_error_fvar_undefined
 26348 0001359E 803804                  	cmp byte [rax], T_closure
 26349 000135A1 0F8566240000            	jne L_error_non_closure
 26350 000135A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26351 000135AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 26352 000135AD 50                      	push rax
 26353 000135AE 6A01                    	push 1	; arg count
 26354 000135B0 488B0425[A4150000]      	mov rax, qword [free_var_118]	; free var reverse
 26355 000135B8 803805                  	cmp byte [rax], T_undefined
 26356 000135BB 0F84C8230000            	je L_error_fvar_undefined
 26357 000135C1 803804                  	cmp byte [rax], T_closure
 26358 000135C4 0F8543240000            	jne L_error_non_closure
 26359 000135CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26360 000135CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26361 000135D0 50                      	push rax
 26362 000135D1 6A01                    	push 1	; arg count
 26363 000135D3 488B0425[1D140000]      	mov rax, qword [free_var_95]	; free var list->vector
 26364 000135DB 803805                  	cmp byte [rax], T_undefined
 26365 000135DE 0F84A5230000            	je L_error_fvar_undefined
 26366 000135E4 803804                  	cmp byte [rax], T_closure
 26367 000135E7 0F8520240000            	jne L_error_non_closure
 26368 000135ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 26369 000135F0 FF7508                  	push qword [rbp + 8 * 1]
 26370                                   ; old ret addr
 26371 000135F3 FF7500                  	push qword [rbp]
 26372                                   ; restore the old rbp
 26373 000135F6 BB01000000              	mov rbx, 1
 26374 000135FB 4883C303                	add rbx, 3
 26375 000135FF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26376 00013603 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26377 00013608 4C8D4DF8                	lea r9, [rbp - 8]
 26378 0001360C B905000000              	mov rcx, 5
 26379                                  .L_tc_recycle_frame_loop_00dc:
 26380 00013611 4883F900                	cmp rcx, 0
 26381 00013615 7413                    	je .L_tc_recycle_frame_done_00dc
 26382 00013617 4D8B11                  	mov r10, qword [r9]
 26383 0001361A 4D8910                  	mov qword [r8], r10
 26384 0001361D 4983E808                	sub r8, 8
 26385 00013621 4983E908                	sub r9, 8
 26386 00013625 48FFC9                  	dec rcx
 26387 00013628 EBE7                    	jmp .L_tc_recycle_frame_loop_00dc
 26388                                  .L_tc_recycle_frame_done_00dc:
 26389 0001362A 498D6008                	lea rsp, [r8 + 8]
 26390 0001362E 5D                      	pop rbp ; restore the old rbp
 26391 0001362F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26392 00013632 C9                      	leave
 26393 00013633 C21800                  	ret AND_KILL_FRAME(1)
 26394                                  .L_lambda_simple_end_00a2:	; new closure is in rax
 26395 00013636 48890425[6F170000]      	mov qword [free_var_145], rax
 26396 0001363E 48B8-                   	mov rax, sob_void
 26396 00013640 [0000000000000000] 
 26397                                  
 26398 00013648 4889C7                  	mov rdi, rax
 26399 0001364B E8BB260000              	call print_sexpr_if_not_void
 26400                                  	; preparing a non-tail-call
 26401 00013650 48B8-                   	mov rax, L_constants + 1993
 26401 00013652 [C907000000000000] 
 26402 0001365A 50                      	push rax
 26403 0001365B 6A01                    	push 1	; arg count
 26404 0001365D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26405 00013662 E84F240000              	call malloc
 26406 00013667 50                      	push rax
 26407 00013668 BF00000000              	mov rdi, 8 * 0	; new rib
 26408 0001366D E844240000              	call malloc
 26409 00013672 50                      	push rax
 26410 00013673 BF08000000              	mov rdi, 8 * 1	; extended env
 26411 00013678 E839240000              	call malloc
 26412 0001367D 488B7D10                	mov rdi, ENV
 26413 00013681 BE00000000              	mov rsi, 0
 26414 00013686 BA01000000              	mov rdx, 1
 26415                                  .L_lambda_simple_env_loop_00a3:	; ext_env[i + 1] <-- env[i]
 26416 0001368B 4883FE00                	cmp rsi, 0
 26417 0001368F 7410                    	je .L_lambda_simple_env_end_00a3
 26418 00013691 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26419 00013695 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26420 00013699 48FFC6                  	inc rsi
 26421 0001369C 48FFC2                  	inc rdx
 26422 0001369F EBEA                    	jmp .L_lambda_simple_env_loop_00a3
 26423                                  .L_lambda_simple_env_end_00a3:
 26424 000136A1 5B                      	pop rbx
 26425 000136A2 BE00000000              	mov rsi, 0
 26426                                  .L_lambda_simple_params_loop_00a3:	; copy params
 26427 000136A7 4883FE00                	cmp rsi, 0
 26428 000136AB 740E                    	je .L_lambda_simple_params_end_00a3
 26429 000136AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26430 000136B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26431 000136B6 48FFC6                  	inc rsi
 26432 000136B9 EBEC                    	jmp .L_lambda_simple_params_loop_00a3
 26433                                  .L_lambda_simple_params_end_00a3:
 26434 000136BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26435 000136BE 4889C3                  	mov rbx, rax
 26436 000136C1 58                      	pop rax
 26437 000136C2 C60004                  	mov byte [rax], T_closure
 26438 000136C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26439 000136C9 48C74009[D6360100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a3
 26440 000136D1 E941060000              	jmp .L_lambda_simple_end_00a3
 26441                                  .L_lambda_simple_code_00a3:	; lambda-simple body
 26442 000136D6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26443 000136DC 740B                    	je .L_lambda_simple_arity_check_ok_00a3
 26444 000136DE FF742410                	push qword [rsp + 8 * 2]
 26445 000136E2 6A01                    	push 1
 26446 000136E4 E986230000              	jmp L_error_incorrect_arity_simple
 26447                                  .L_lambda_simple_arity_check_ok_00a3:
 26448 000136E9 C8000000                	enter 0, 0
 26449 000136ED BF08000000              	mov rdi, 8*1
 26450 000136F2 E8BF230000              	call malloc
 26451 000136F7 488B5D20                	mov rbx, PARAM(0)
 26452 000136FB 488918                  	mov qword [rax], rbx
 26453 000136FE 48894520                	mov PARAM(0), rax
 26454 00013702 48B8-                   	mov rax, sob_void
 26454 00013704 [0000000000000000] 
 26455                                  
 26456 0001370C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26457 00013711 E8A0230000              	call malloc
 26458 00013716 50                      	push rax
 26459 00013717 BF08000000              	mov rdi, 8 * 1	; new rib
 26460 0001371C E895230000              	call malloc
 26461 00013721 50                      	push rax
 26462 00013722 BF10000000              	mov rdi, 8 * 2	; extended env
 26463 00013727 E88A230000              	call malloc
 26464 0001372C 488B7D10                	mov rdi, ENV
 26465 00013730 BE00000000              	mov rsi, 0
 26466 00013735 BA01000000              	mov rdx, 1
 26467                                  .L_lambda_simple_env_loop_00a4:	; ext_env[i + 1] <-- env[i]
 26468 0001373A 4883FE01                	cmp rsi, 1
 26469 0001373E 7410                    	je .L_lambda_simple_env_end_00a4
 26470 00013740 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26471 00013744 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26472 00013748 48FFC6                  	inc rsi
 26473 0001374B 48FFC2                  	inc rdx
 26474 0001374E EBEA                    	jmp .L_lambda_simple_env_loop_00a4
 26475                                  .L_lambda_simple_env_end_00a4:
 26476 00013750 5B                      	pop rbx
 26477 00013751 BE00000000              	mov rsi, 0
 26478                                  .L_lambda_simple_params_loop_00a4:	; copy params
 26479 00013756 4883FE01                	cmp rsi, 1
 26480 0001375A 740E                    	je .L_lambda_simple_params_end_00a4
 26481 0001375C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26482 00013761 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26483 00013765 48FFC6                  	inc rsi
 26484 00013768 EBEC                    	jmp .L_lambda_simple_params_loop_00a4
 26485                                  .L_lambda_simple_params_end_00a4:
 26486 0001376A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26487 0001376D 4889C3                  	mov rbx, rax
 26488 00013770 58                      	pop rax
 26489 00013771 C60004                  	mov byte [rax], T_closure
 26490 00013774 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26491 00013778 48C74009[85370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a4
 26492 00013780 E9F8020000              	jmp .L_lambda_simple_end_00a4
 26493                                  .L_lambda_simple_code_00a4:	; lambda-simple body
 26494 00013785 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26495 0001378B 740B                    	je .L_lambda_simple_arity_check_ok_00a4
 26496 0001378D FF742410                	push qword [rsp + 8 * 2]
 26497 00013791 6A03                    	push 3
 26498 00013793 E9D7220000              	jmp L_error_incorrect_arity_simple
 26499                                  .L_lambda_simple_arity_check_ok_00a4:
 26500 00013798 C8000000                	enter 0, 0
 26501                                  	; preparing a non-tail-call
 26502 0001379C 488B4530                	mov rax, PARAM(2)	; param j
 26503 000137A0 50                      	push rax
 26504 000137A1 488B4528                	mov rax, PARAM(1)	; param i
 26505 000137A5 50                      	push rax
 26506 000137A6 6A02                    	push 2	; arg count
 26507 000137A8 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 26508 000137B0 803805                  	cmp byte [rax], T_undefined
 26509 000137B3 0F84D0210000            	je L_error_fvar_undefined
 26510 000137B9 803804                  	cmp byte [rax], T_closure
 26511 000137BC 0F854B220000            	jne L_error_non_closure
 26512 000137C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26513 000137C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26514 000137C8 483D[02000000]          	cmp rax, sob_boolean_false
 26515 000137CE 0F84A1020000            	je .L_if_else_007f
 26516                                  	; preparing a tail-call
 26517                                  	; preparing a non-tail-call
 26518 000137D4 488B4528                	mov rax, PARAM(1)	; param i
 26519 000137D8 50                      	push rax
 26520 000137D9 488B4520                	mov rax, PARAM(0)	; param str
 26521 000137DD 50                      	push rax
 26522 000137DE 6A02                    	push 2	; arg count
 26523 000137E0 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26524 000137E8 803805                  	cmp byte [rax], T_undefined
 26525 000137EB 0F8498210000            	je L_error_fvar_undefined
 26526 000137F1 803804                  	cmp byte [rax], T_closure
 26527 000137F4 0F8513220000            	jne L_error_non_closure
 26528 000137FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26529 000137FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26530 00013800 50                      	push rax
 26531 00013801 6A01                    	push 1	; arg count
 26532 00013803 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26533 00013808 E8A9220000              	call malloc
 26534 0001380D 50                      	push rax
 26535 0001380E BF18000000              	mov rdi, 8 * 3	; new rib
 26536 00013813 E89E220000              	call malloc
 26537 00013818 50                      	push rax
 26538 00013819 BF18000000              	mov rdi, 8 * 3	; extended env
 26539 0001381E E893220000              	call malloc
 26540 00013823 488B7D10                	mov rdi, ENV
 26541 00013827 BE00000000              	mov rsi, 0
 26542 0001382C BA01000000              	mov rdx, 1
 26543                                  .L_lambda_simple_env_loop_00a5:	; ext_env[i + 1] <-- env[i]
 26544 00013831 4883FE02                	cmp rsi, 2
 26545 00013835 7410                    	je .L_lambda_simple_env_end_00a5
 26546 00013837 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26547 0001383B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26548 0001383F 48FFC6                  	inc rsi
 26549 00013842 48FFC2                  	inc rdx
 26550 00013845 EBEA                    	jmp .L_lambda_simple_env_loop_00a5
 26551                                  .L_lambda_simple_env_end_00a5:
 26552 00013847 5B                      	pop rbx
 26553 00013848 BE00000000              	mov rsi, 0
 26554                                  .L_lambda_simple_params_loop_00a5:	; copy params
 26555 0001384D 4883FE03                	cmp rsi, 3
 26556 00013851 740E                    	je .L_lambda_simple_params_end_00a5
 26557 00013853 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26558 00013858 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26559 0001385C 48FFC6                  	inc rsi
 26560 0001385F EBEC                    	jmp .L_lambda_simple_params_loop_00a5
 26561                                  .L_lambda_simple_params_end_00a5:
 26562 00013861 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26563 00013864 4889C3                  	mov rbx, rax
 26564 00013867 58                      	pop rax
 26565 00013868 C60004                  	mov byte [rax], T_closure
 26566 0001386B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26567 0001386F 48C74009[7C380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a5
 26568 00013877 E9A9010000              	jmp .L_lambda_simple_end_00a5
 26569                                  .L_lambda_simple_code_00a5:	; lambda-simple body
 26570 0001387C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26571 00013882 740B                    	je .L_lambda_simple_arity_check_ok_00a5
 26572 00013884 FF742410                	push qword [rsp + 8 * 2]
 26573 00013888 6A01                    	push 1
 26574 0001388A E9E0210000              	jmp L_error_incorrect_arity_simple
 26575                                  .L_lambda_simple_arity_check_ok_00a5:
 26576 0001388F C8000000                	enter 0, 0
 26577                                  	; preparing a non-tail-call
 26578                                  	; preparing a non-tail-call
 26579 00013893 488B4510                	mov rax, ENV
 26580 00013897 488B00                  	mov rax, qword [rax + 8 * 0]
 26581 0001389A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26582 0001389E 50                      	push rax
 26583 0001389F 488B4510                	mov rax, ENV
 26584 000138A3 488B00                  	mov rax, qword [rax + 8 * 0]
 26585 000138A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26586 000138A9 50                      	push rax
 26587 000138AA 6A02                    	push 2	; arg count
 26588 000138AC 488B0425[4E160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26589 000138B4 803805                  	cmp byte [rax], T_undefined
 26590 000138B7 0F84CC200000            	je L_error_fvar_undefined
 26591 000138BD 803804                  	cmp byte [rax], T_closure
 26592 000138C0 0F8547210000            	jne L_error_non_closure
 26593 000138C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26594 000138C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26595 000138CC 50                      	push rax
 26596 000138CD 488B4510                	mov rax, ENV
 26597 000138D1 488B00                  	mov rax, qword [rax + 8 * 0]
 26598 000138D4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26599 000138D8 50                      	push rax
 26600 000138D9 488B4510                	mov rax, ENV
 26601 000138DD 488B00                  	mov rax, qword [rax + 8 * 0]
 26602 000138E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26603 000138E3 50                      	push rax
 26604 000138E4 6A03                    	push 3	; arg count
 26605 000138E6 488B0425[81160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26606 000138EE 803805                  	cmp byte [rax], T_undefined
 26607 000138F1 0F8492200000            	je L_error_fvar_undefined
 26608 000138F7 803804                  	cmp byte [rax], T_closure
 26609 000138FA 0F850D210000            	jne L_error_non_closure
 26610 00013900 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26611 00013903 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26612                                  
 26613                                  	; preparing a non-tail-call
 26614 00013906 488B4520                	mov rax, PARAM(0)	; param ch
 26615 0001390A 50                      	push rax
 26616 0001390B 488B4510                	mov rax, ENV
 26617 0001390F 488B00                  	mov rax, qword [rax + 8 * 0]
 26618 00013912 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26619 00013916 50                      	push rax
 26620 00013917 488B4510                	mov rax, ENV
 26621 0001391B 488B00                  	mov rax, qword [rax + 8 * 0]
 26622 0001391E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26623 00013921 50                      	push rax
 26624 00013922 6A03                    	push 3	; arg count
 26625 00013924 488B0425[81160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26626 0001392C 803805                  	cmp byte [rax], T_undefined
 26627 0001392F 0F8454200000            	je L_error_fvar_undefined
 26628 00013935 803804                  	cmp byte [rax], T_closure
 26629 00013938 0F85CF200000            	jne L_error_non_closure
 26630 0001393E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26631 00013941 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26632                                  
 26633                                  	; preparing a tail-call
 26634                                  	; preparing a non-tail-call
 26635 00013944 48B8-                   	mov rax, L_constants + 2270
 26635 00013946 [DE08000000000000] 
 26636 0001394E 50                      	push rax
 26637 0001394F 488B4510                	mov rax, ENV
 26638 00013953 488B00                  	mov rax, qword [rax + 8 * 0]
 26639 00013956 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26640 0001395A 50                      	push rax
 26641 0001395B 6A02                    	push 2	; arg count
 26642 0001395D 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 26643 00013965 803805                  	cmp byte [rax], T_undefined
 26644 00013968 0F841B200000            	je L_error_fvar_undefined
 26645 0001396E 803804                  	cmp byte [rax], T_closure
 26646 00013971 0F8596200000            	jne L_error_non_closure
 26647 00013977 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26648 0001397A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26649 0001397D 50                      	push rax
 26650                                  	; preparing a non-tail-call
 26651 0001397E 48B8-                   	mov rax, L_constants + 2270
 26651 00013980 [DE08000000000000] 
 26652 00013988 50                      	push rax
 26653 00013989 488B4510                	mov rax, ENV
 26654 0001398D 488B00                  	mov rax, qword [rax + 8 * 0]
 26655 00013990 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26656 00013994 50                      	push rax
 26657 00013995 6A02                    	push 2	; arg count
 26658 00013997 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 26659 0001399F 803805                  	cmp byte [rax], T_undefined
 26660 000139A2 0F84E11F0000            	je L_error_fvar_undefined
 26661 000139A8 803804                  	cmp byte [rax], T_closure
 26662 000139AB 0F855C200000            	jne L_error_non_closure
 26663 000139B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26664 000139B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26665 000139B7 50                      	push rax
 26666 000139B8 488B4510                	mov rax, ENV
 26667 000139BC 488B00                  	mov rax, qword [rax + 8 * 0]
 26668 000139BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26669 000139C2 50                      	push rax
 26670 000139C3 6A03                    	push 3	; arg count
 26671 000139C5 488B4510                	mov rax, ENV
 26672 000139C9 488B4008                	mov rax, qword [rax + 8 * 1]
 26673 000139CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26674 000139D0 488B00                  	mov rax, qword [rax]
 26675 000139D3 803804                  	cmp byte [rax], T_closure
 26676 000139D6 0F8531200000            	jne L_error_non_closure
 26677 000139DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26678 000139DF FF7508                  	push qword [rbp + 8 * 1]
 26679                                   ; old ret addr
 26680 000139E2 FF7500                  	push qword [rbp]
 26681                                   ; restore the old rbp
 26682 000139E5 BB03000000              	mov rbx, 3
 26683 000139EA 4883C303                	add rbx, 3
 26684 000139EE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26685 000139F2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26686 000139F7 4C8D4DF8                	lea r9, [rbp - 8]
 26687 000139FB B907000000              	mov rcx, 7
 26688                                  .L_tc_recycle_frame_loop_00de:
 26689 00013A00 4883F900                	cmp rcx, 0
 26690 00013A04 7413                    	je .L_tc_recycle_frame_done_00de
 26691 00013A06 4D8B11                  	mov r10, qword [r9]
 26692 00013A09 4D8910                  	mov qword [r8], r10
 26693 00013A0C 4983E808                	sub r8, 8
 26694 00013A10 4983E908                	sub r9, 8
 26695 00013A14 48FFC9                  	dec rcx
 26696 00013A17 EBE7                    	jmp .L_tc_recycle_frame_loop_00de
 26697                                  .L_tc_recycle_frame_done_00de:
 26698 00013A19 498D6008                	lea rsp, [r8 + 8]
 26699 00013A1D 5D                      	pop rbp ; restore the old rbp
 26700 00013A1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26701 00013A21 C9                      	leave
 26702 00013A22 C21800                  	ret AND_KILL_FRAME(1)
 26703                                  .L_lambda_simple_end_00a5:	; new closure is in rax
 26704 00013A25 803804                  	cmp byte [rax], T_closure
 26705 00013A28 0F85DF1F0000            	jne L_error_non_closure
 26706 00013A2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26707 00013A31 FF7508                  	push qword [rbp + 8 * 1]
 26708                                   ; old ret addr
 26709 00013A34 FF7500                  	push qword [rbp]
 26710                                   ; restore the old rbp
 26711 00013A37 BB01000000              	mov rbx, 1
 26712 00013A3C 4883C303                	add rbx, 3
 26713 00013A40 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26714 00013A44 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26715 00013A49 4C8D4DF8                	lea r9, [rbp - 8]
 26716 00013A4D B905000000              	mov rcx, 5
 26717                                  .L_tc_recycle_frame_loop_00dd:
 26718 00013A52 4883F900                	cmp rcx, 0
 26719 00013A56 7413                    	je .L_tc_recycle_frame_done_00dd
 26720 00013A58 4D8B11                  	mov r10, qword [r9]
 26721 00013A5B 4D8910                  	mov qword [r8], r10
 26722 00013A5E 4983E808                	sub r8, 8
 26723 00013A62 4983E908                	sub r9, 8
 26724 00013A66 48FFC9                  	dec rcx
 26725 00013A69 EBE7                    	jmp .L_tc_recycle_frame_loop_00dd
 26726                                  .L_tc_recycle_frame_done_00dd:
 26727 00013A6B 498D6008                	lea rsp, [r8 + 8]
 26728 00013A6F 5D                      	pop rbp ; restore the old rbp
 26729 00013A70 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26730 00013A73 EB04                    	jmp .L_if_end_007f
 26731                                  .L_if_else_007f:
 26732 00013A75 488B4520                	mov rax, PARAM(0)	; param str
 26733                                  .L_if_end_007f:
 26734 00013A79 C9                      	leave
 26735 00013A7A C22800                  	ret AND_KILL_FRAME(3)
 26736                                  .L_lambda_simple_end_00a4:	; new closure is in rax
 26737 00013A7D 50                      	push rax
 26738 00013A7E 488B4520                	mov rax, PARAM(0)	; param run
 26739 00013A82 8F00                    	pop qword [rax]
 26740 00013A84 48B8-                   	mov rax, sob_void
 26740 00013A86 [0000000000000000] 
 26741                                  
 26742 00013A8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26743 00013A93 E81E200000              	call malloc
 26744 00013A98 50                      	push rax
 26745 00013A99 BF08000000              	mov rdi, 8 * 1	; new rib
 26746 00013A9E E813200000              	call malloc
 26747 00013AA3 50                      	push rax
 26748 00013AA4 BF10000000              	mov rdi, 8 * 2	; extended env
 26749 00013AA9 E808200000              	call malloc
 26750 00013AAE 488B7D10                	mov rdi, ENV
 26751 00013AB2 BE00000000              	mov rsi, 0
 26752 00013AB7 BA01000000              	mov rdx, 1
 26753                                  .L_lambda_simple_env_loop_00a6:	; ext_env[i + 1] <-- env[i]
 26754 00013ABC 4883FE01                	cmp rsi, 1
 26755 00013AC0 7410                    	je .L_lambda_simple_env_end_00a6
 26756 00013AC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26757 00013AC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26758 00013ACA 48FFC6                  	inc rsi
 26759 00013ACD 48FFC2                  	inc rdx
 26760 00013AD0 EBEA                    	jmp .L_lambda_simple_env_loop_00a6
 26761                                  .L_lambda_simple_env_end_00a6:
 26762 00013AD2 5B                      	pop rbx
 26763 00013AD3 BE00000000              	mov rsi, 0
 26764                                  .L_lambda_simple_params_loop_00a6:	; copy params
 26765 00013AD8 4883FE01                	cmp rsi, 1
 26766 00013ADC 740E                    	je .L_lambda_simple_params_end_00a6
 26767 00013ADE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26768 00013AE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26769 00013AE7 48FFC6                  	inc rsi
 26770 00013AEA EBEC                    	jmp .L_lambda_simple_params_loop_00a6
 26771                                  .L_lambda_simple_params_end_00a6:
 26772 00013AEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26773 00013AEF 4889C3                  	mov rbx, rax
 26774 00013AF2 58                      	pop rax
 26775 00013AF3 C60004                  	mov byte [rax], T_closure
 26776 00013AF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26777 00013AFA 48C74009[073B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a6
 26778 00013B02 E90C020000              	jmp .L_lambda_simple_end_00a6
 26779                                  .L_lambda_simple_code_00a6:	; lambda-simple body
 26780 00013B07 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26781 00013B0D 740B                    	je .L_lambda_simple_arity_check_ok_00a6
 26782 00013B0F FF742410                	push qword [rsp + 8 * 2]
 26783 00013B13 6A01                    	push 1
 26784 00013B15 E9551F0000              	jmp L_error_incorrect_arity_simple
 26785                                  .L_lambda_simple_arity_check_ok_00a6:
 26786 00013B1A C8000000                	enter 0, 0
 26787                                  	; preparing a tail-call
 26788                                  	; preparing a non-tail-call
 26789 00013B1E 488B4520                	mov rax, PARAM(0)	; param str
 26790 00013B22 50                      	push rax
 26791 00013B23 6A01                    	push 1	; arg count
 26792 00013B25 488B0425[3D160000]      	mov rax, qword [free_var_127]	; free var string-length
 26793 00013B2D 803805                  	cmp byte [rax], T_undefined
 26794 00013B30 0F84531E0000            	je L_error_fvar_undefined
 26795 00013B36 803804                  	cmp byte [rax], T_closure
 26796 00013B39 0F85CE1E0000            	jne L_error_non_closure
 26797 00013B3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26798 00013B42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26799 00013B45 50                      	push rax
 26800 00013B46 6A01                    	push 1	; arg count
 26801 00013B48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26802 00013B4D E8641F0000              	call malloc
 26803 00013B52 50                      	push rax
 26804 00013B53 BF08000000              	mov rdi, 8 * 1	; new rib
 26805 00013B58 E8591F0000              	call malloc
 26806 00013B5D 50                      	push rax
 26807 00013B5E BF18000000              	mov rdi, 8 * 3	; extended env
 26808 00013B63 E84E1F0000              	call malloc
 26809 00013B68 488B7D10                	mov rdi, ENV
 26810 00013B6C BE00000000              	mov rsi, 0
 26811 00013B71 BA01000000              	mov rdx, 1
 26812                                  .L_lambda_simple_env_loop_00a7:	; ext_env[i + 1] <-- env[i]
 26813 00013B76 4883FE02                	cmp rsi, 2
 26814 00013B7A 7410                    	je .L_lambda_simple_env_end_00a7
 26815 00013B7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26816 00013B80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26817 00013B84 48FFC6                  	inc rsi
 26818 00013B87 48FFC2                  	inc rdx
 26819 00013B8A EBEA                    	jmp .L_lambda_simple_env_loop_00a7
 26820                                  .L_lambda_simple_env_end_00a7:
 26821 00013B8C 5B                      	pop rbx
 26822 00013B8D BE00000000              	mov rsi, 0
 26823                                  .L_lambda_simple_params_loop_00a7:	; copy params
 26824 00013B92 4883FE01                	cmp rsi, 1
 26825 00013B96 740E                    	je .L_lambda_simple_params_end_00a7
 26826 00013B98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26827 00013B9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26828 00013BA1 48FFC6                  	inc rsi
 26829 00013BA4 EBEC                    	jmp .L_lambda_simple_params_loop_00a7
 26830                                  .L_lambda_simple_params_end_00a7:
 26831 00013BA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26832 00013BA9 4889C3                  	mov rbx, rax
 26833 00013BAC 58                      	pop rax
 26834 00013BAD C60004                  	mov byte [rax], T_closure
 26835 00013BB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26836 00013BB4 48C74009[C13B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a7
 26837 00013BBC E900010000              	jmp .L_lambda_simple_end_00a7
 26838                                  .L_lambda_simple_code_00a7:	; lambda-simple body
 26839 00013BC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26840 00013BC7 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 26841 00013BC9 FF742410                	push qword [rsp + 8 * 2]
 26842 00013BCD 6A01                    	push 1
 26843 00013BCF E99B1E0000              	jmp L_error_incorrect_arity_simple
 26844                                  .L_lambda_simple_arity_check_ok_00a7:
 26845 00013BD4 C8000000                	enter 0, 0
 26846                                  	; preparing a non-tail-call
 26847 00013BD8 488B4520                	mov rax, PARAM(0)	; param n
 26848 00013BDC 50                      	push rax
 26849 00013BDD 6A01                    	push 1	; arg count
 26850 00013BDF 488B0425[D5170000]      	mov rax, qword [free_var_151]	; free var zero?
 26851 00013BE7 803805                  	cmp byte [rax], T_undefined
 26852 00013BEA 0F84991D0000            	je L_error_fvar_undefined
 26853 00013BF0 803804                  	cmp byte [rax], T_closure
 26854 00013BF3 0F85141E0000            	jne L_error_non_closure
 26855 00013BF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26856 00013BFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 26857 00013BFF 483D[02000000]          	cmp rax, sob_boolean_false
 26858 00013C05 740F                    	je .L_if_else_0080
 26859 00013C07 488B4510                	mov rax, ENV
 26860 00013C0B 488B00                  	mov rax, qword [rax + 8 * 0]
 26861 00013C0E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26862 00013C11 E9A7000000              	jmp .L_if_end_0080
 26863                                  .L_if_else_0080:
 26864                                  	; preparing a tail-call
 26865                                  	; preparing a non-tail-call
 26866 00013C16 48B8-                   	mov rax, L_constants + 2270
 26866 00013C18 [DE08000000000000] 
 26867 00013C20 50                      	push rax
 26868 00013C21 488B4520                	mov rax, PARAM(0)	; param n
 26869 00013C25 50                      	push rax
 26870 00013C26 6A02                    	push 2	; arg count
 26871 00013C28 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 26872 00013C30 803805                  	cmp byte [rax], T_undefined
 26873 00013C33 0F84501D0000            	je L_error_fvar_undefined
 26874 00013C39 803804                  	cmp byte [rax], T_closure
 26875 00013C3C 0F85CB1D0000            	jne L_error_non_closure
 26876 00013C42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26877 00013C45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26878 00013C48 50                      	push rax
 26879 00013C49 48B8-                   	mov rax, L_constants + 2135
 26879 00013C4B [5708000000000000] 
 26880 00013C53 50                      	push rax
 26881 00013C54 488B4510                	mov rax, ENV
 26882 00013C58 488B00                  	mov rax, qword [rax + 8 * 0]
 26883 00013C5B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26884 00013C5E 50                      	push rax
 26885 00013C5F 6A03                    	push 3	; arg count
 26886 00013C61 488B4510                	mov rax, ENV
 26887 00013C65 488B4008                	mov rax, qword [rax + 8 * 1]
 26888 00013C69 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26889 00013C6C 488B00                  	mov rax, qword [rax]
 26890 00013C6F 803804                  	cmp byte [rax], T_closure
 26891 00013C72 0F85951D0000            	jne L_error_non_closure
 26892 00013C78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26893 00013C7B FF7508                  	push qword [rbp + 8 * 1]
 26894                                   ; old ret addr
 26895 00013C7E FF7500                  	push qword [rbp]
 26896                                   ; restore the old rbp
 26897 00013C81 BB03000000              	mov rbx, 3
 26898 00013C86 4883C303                	add rbx, 3
 26899 00013C8A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26900 00013C8E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26901 00013C93 4C8D4DF8                	lea r9, [rbp - 8]
 26902 00013C97 B907000000              	mov rcx, 7
 26903                                  .L_tc_recycle_frame_loop_00e0:
 26904 00013C9C 4883F900                	cmp rcx, 0
 26905 00013CA0 7413                    	je .L_tc_recycle_frame_done_00e0
 26906 00013CA2 4D8B11                  	mov r10, qword [r9]
 26907 00013CA5 4D8910                  	mov qword [r8], r10
 26908 00013CA8 4983E808                	sub r8, 8
 26909 00013CAC 4983E908                	sub r9, 8
 26910 00013CB0 48FFC9                  	dec rcx
 26911 00013CB3 EBE7                    	jmp .L_tc_recycle_frame_loop_00e0
 26912                                  .L_tc_recycle_frame_done_00e0:
 26913 00013CB5 498D6008                	lea rsp, [r8 + 8]
 26914 00013CB9 5D                      	pop rbp ; restore the old rbp
 26915 00013CBA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26916                                  .L_if_end_0080:
 26917 00013CBD C9                      	leave
 26918 00013CBE C21800                  	ret AND_KILL_FRAME(1)
 26919                                  .L_lambda_simple_end_00a7:	; new closure is in rax
 26920 00013CC1 803804                  	cmp byte [rax], T_closure
 26921 00013CC4 0F85431D0000            	jne L_error_non_closure
 26922 00013CCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26923 00013CCD FF7508                  	push qword [rbp + 8 * 1]
 26924                                   ; old ret addr
 26925 00013CD0 FF7500                  	push qword [rbp]
 26926                                   ; restore the old rbp
 26927 00013CD3 BB01000000              	mov rbx, 1
 26928 00013CD8 4883C303                	add rbx, 3
 26929 00013CDC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 26930 00013CE0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 26931 00013CE5 4C8D4DF8                	lea r9, [rbp - 8]
 26932 00013CE9 B905000000              	mov rcx, 5
 26933                                  .L_tc_recycle_frame_loop_00df:
 26934 00013CEE 4883F900                	cmp rcx, 0
 26935 00013CF2 7413                    	je .L_tc_recycle_frame_done_00df
 26936 00013CF4 4D8B11                  	mov r10, qword [r9]
 26937 00013CF7 4D8910                  	mov qword [r8], r10
 26938 00013CFA 4983E808                	sub r8, 8
 26939 00013CFE 4983E908                	sub r9, 8
 26940 00013D02 48FFC9                  	dec rcx
 26941 00013D05 EBE7                    	jmp .L_tc_recycle_frame_loop_00df
 26942                                  .L_tc_recycle_frame_done_00df:
 26943 00013D07 498D6008                	lea rsp, [r8 + 8]
 26944 00013D0B 5D                      	pop rbp ; restore the old rbp
 26945 00013D0C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26946 00013D0F C9                      	leave
 26947 00013D10 C21800                  	ret AND_KILL_FRAME(1)
 26948                                  .L_lambda_simple_end_00a6:	; new closure is in rax
 26949 00013D13 C9                      	leave
 26950 00013D14 C21800                  	ret AND_KILL_FRAME(1)
 26951                                  .L_lambda_simple_end_00a3:	; new closure is in rax
 26952 00013D17 803804                  	cmp byte [rax], T_closure
 26953 00013D1A 0F85ED1C0000            	jne L_error_non_closure
 26954 00013D20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26955 00013D23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26956 00013D26 48890425[70160000]      	mov qword [free_var_130], rax
 26957 00013D2E 48B8-                   	mov rax, sob_void
 26957 00013D30 [0000000000000000] 
 26958                                  
 26959 00013D38 4889C7                  	mov rdi, rax
 26960 00013D3B E8CB1F0000              	call print_sexpr_if_not_void
 26961                                  	; preparing a non-tail-call
 26962 00013D40 48B8-                   	mov rax, L_constants + 1993
 26962 00013D42 [C907000000000000] 
 26963 00013D4A 50                      	push rax
 26964 00013D4B 6A01                    	push 1	; arg count
 26965 00013D4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26966 00013D52 E85F1D0000              	call malloc
 26967 00013D57 50                      	push rax
 26968 00013D58 BF00000000              	mov rdi, 8 * 0	; new rib
 26969 00013D5D E8541D0000              	call malloc
 26970 00013D62 50                      	push rax
 26971 00013D63 BF08000000              	mov rdi, 8 * 1	; extended env
 26972 00013D68 E8491D0000              	call malloc
 26973 00013D6D 488B7D10                	mov rdi, ENV
 26974 00013D71 BE00000000              	mov rsi, 0
 26975 00013D76 BA01000000              	mov rdx, 1
 26976                                  .L_lambda_simple_env_loop_00a8:	; ext_env[i + 1] <-- env[i]
 26977 00013D7B 4883FE00                	cmp rsi, 0
 26978 00013D7F 7410                    	je .L_lambda_simple_env_end_00a8
 26979 00013D81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26980 00013D85 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26981 00013D89 48FFC6                  	inc rsi
 26982 00013D8C 48FFC2                  	inc rdx
 26983 00013D8F EBEA                    	jmp .L_lambda_simple_env_loop_00a8
 26984                                  .L_lambda_simple_env_end_00a8:
 26985 00013D91 5B                      	pop rbx
 26986 00013D92 BE00000000              	mov rsi, 0
 26987                                  .L_lambda_simple_params_loop_00a8:	; copy params
 26988 00013D97 4883FE00                	cmp rsi, 0
 26989 00013D9B 740E                    	je .L_lambda_simple_params_end_00a8
 26990 00013D9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26991 00013DA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26992 00013DA6 48FFC6                  	inc rsi
 26993 00013DA9 EBEC                    	jmp .L_lambda_simple_params_loop_00a8
 26994                                  .L_lambda_simple_params_end_00a8:
 26995 00013DAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26996 00013DAE 4889C3                  	mov rbx, rax
 26997 00013DB1 58                      	pop rax
 26998 00013DB2 C60004                  	mov byte [rax], T_closure
 26999 00013DB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27000 00013DB9 48C74009[C63D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a8
 27001 00013DC1 E941060000              	jmp .L_lambda_simple_end_00a8
 27002                                  .L_lambda_simple_code_00a8:	; lambda-simple body
 27003 00013DC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27004 00013DCC 740B                    	je .L_lambda_simple_arity_check_ok_00a8
 27005 00013DCE FF742410                	push qword [rsp + 8 * 2]
 27006 00013DD2 6A01                    	push 1
 27007 00013DD4 E9961C0000              	jmp L_error_incorrect_arity_simple
 27008                                  .L_lambda_simple_arity_check_ok_00a8:
 27009 00013DD9 C8000000                	enter 0, 0
 27010 00013DDD BF08000000              	mov rdi, 8*1
 27011 00013DE2 E8CF1C0000              	call malloc
 27012 00013DE7 488B5D20                	mov rbx, PARAM(0)
 27013 00013DEB 488918                  	mov qword [rax], rbx
 27014 00013DEE 48894520                	mov PARAM(0), rax
 27015 00013DF2 48B8-                   	mov rax, sob_void
 27015 00013DF4 [0000000000000000] 
 27016                                  
 27017 00013DFC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27018 00013E01 E8B01C0000              	call malloc
 27019 00013E06 50                      	push rax
 27020 00013E07 BF08000000              	mov rdi, 8 * 1	; new rib
 27021 00013E0C E8A51C0000              	call malloc
 27022 00013E11 50                      	push rax
 27023 00013E12 BF10000000              	mov rdi, 8 * 2	; extended env
 27024 00013E17 E89A1C0000              	call malloc
 27025 00013E1C 488B7D10                	mov rdi, ENV
 27026 00013E20 BE00000000              	mov rsi, 0
 27027 00013E25 BA01000000              	mov rdx, 1
 27028                                  .L_lambda_simple_env_loop_00a9:	; ext_env[i + 1] <-- env[i]
 27029 00013E2A 4883FE01                	cmp rsi, 1
 27030 00013E2E 7410                    	je .L_lambda_simple_env_end_00a9
 27031 00013E30 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27032 00013E34 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27033 00013E38 48FFC6                  	inc rsi
 27034 00013E3B 48FFC2                  	inc rdx
 27035 00013E3E EBEA                    	jmp .L_lambda_simple_env_loop_00a9
 27036                                  .L_lambda_simple_env_end_00a9:
 27037 00013E40 5B                      	pop rbx
 27038 00013E41 BE00000000              	mov rsi, 0
 27039                                  .L_lambda_simple_params_loop_00a9:	; copy params
 27040 00013E46 4883FE01                	cmp rsi, 1
 27041 00013E4A 740E                    	je .L_lambda_simple_params_end_00a9
 27042 00013E4C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27043 00013E51 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27044 00013E55 48FFC6                  	inc rsi
 27045 00013E58 EBEC                    	jmp .L_lambda_simple_params_loop_00a9
 27046                                  .L_lambda_simple_params_end_00a9:
 27047 00013E5A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27048 00013E5D 4889C3                  	mov rbx, rax
 27049 00013E60 58                      	pop rax
 27050 00013E61 C60004                  	mov byte [rax], T_closure
 27051 00013E64 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27052 00013E68 48C74009[753E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a9
 27053 00013E70 E9F8020000              	jmp .L_lambda_simple_end_00a9
 27054                                  .L_lambda_simple_code_00a9:	; lambda-simple body
 27055 00013E75 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27056 00013E7B 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 27057 00013E7D FF742410                	push qword [rsp + 8 * 2]
 27058 00013E81 6A03                    	push 3
 27059 00013E83 E9E71B0000              	jmp L_error_incorrect_arity_simple
 27060                                  .L_lambda_simple_arity_check_ok_00a9:
 27061 00013E88 C8000000                	enter 0, 0
 27062                                  	; preparing a non-tail-call
 27063 00013E8C 488B4530                	mov rax, PARAM(2)	; param j
 27064 00013E90 50                      	push rax
 27065 00013E91 488B4528                	mov rax, PARAM(1)	; param i
 27066 00013E95 50                      	push rax
 27067 00013E96 6A02                    	push 2	; arg count
 27068 00013E98 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 27069 00013EA0 803805                  	cmp byte [rax], T_undefined
 27070 00013EA3 0F84E01A0000            	je L_error_fvar_undefined
 27071 00013EA9 803804                  	cmp byte [rax], T_closure
 27072 00013EAC 0F855B1B0000            	jne L_error_non_closure
 27073 00013EB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27074 00013EB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27075 00013EB8 483D[02000000]          	cmp rax, sob_boolean_false
 27076 00013EBE 0F84A1020000            	je .L_if_else_0081
 27077                                  	; preparing a tail-call
 27078                                  	; preparing a non-tail-call
 27079 00013EC4 488B4528                	mov rax, PARAM(1)	; param i
 27080 00013EC8 50                      	push rax
 27081 00013EC9 488B4520                	mov rax, PARAM(0)	; param vec
 27082 00013ECD 50                      	push rax
 27083 00013ECE 6A02                    	push 2	; arg count
 27084 00013ED0 488B0425[5E170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27085 00013ED8 803805                  	cmp byte [rax], T_undefined
 27086 00013EDB 0F84A81A0000            	je L_error_fvar_undefined
 27087 00013EE1 803804                  	cmp byte [rax], T_closure
 27088 00013EE4 0F85231B0000            	jne L_error_non_closure
 27089 00013EEA FF7001                  	push SOB_CLOSURE_ENV(rax)
 27090 00013EED FF5009                  	call SOB_CLOSURE_CODE(rax)
 27091 00013EF0 50                      	push rax
 27092 00013EF1 6A01                    	push 1	; arg count
 27093 00013EF3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27094 00013EF8 E8B91B0000              	call malloc
 27095 00013EFD 50                      	push rax
 27096 00013EFE BF18000000              	mov rdi, 8 * 3	; new rib
 27097 00013F03 E8AE1B0000              	call malloc
 27098 00013F08 50                      	push rax
 27099 00013F09 BF18000000              	mov rdi, 8 * 3	; extended env
 27100 00013F0E E8A31B0000              	call malloc
 27101 00013F13 488B7D10                	mov rdi, ENV
 27102 00013F17 BE00000000              	mov rsi, 0
 27103 00013F1C BA01000000              	mov rdx, 1
 27104                                  .L_lambda_simple_env_loop_00aa:	; ext_env[i + 1] <-- env[i]
 27105 00013F21 4883FE02                	cmp rsi, 2
 27106 00013F25 7410                    	je .L_lambda_simple_env_end_00aa
 27107 00013F27 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27108 00013F2B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27109 00013F2F 48FFC6                  	inc rsi
 27110 00013F32 48FFC2                  	inc rdx
 27111 00013F35 EBEA                    	jmp .L_lambda_simple_env_loop_00aa
 27112                                  .L_lambda_simple_env_end_00aa:
 27113 00013F37 5B                      	pop rbx
 27114 00013F38 BE00000000              	mov rsi, 0
 27115                                  .L_lambda_simple_params_loop_00aa:	; copy params
 27116 00013F3D 4883FE03                	cmp rsi, 3
 27117 00013F41 740E                    	je .L_lambda_simple_params_end_00aa
 27118 00013F43 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27119 00013F48 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27120 00013F4C 48FFC6                  	inc rsi
 27121 00013F4F EBEC                    	jmp .L_lambda_simple_params_loop_00aa
 27122                                  .L_lambda_simple_params_end_00aa:
 27123 00013F51 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27124 00013F54 4889C3                  	mov rbx, rax
 27125 00013F57 58                      	pop rax
 27126 00013F58 C60004                  	mov byte [rax], T_closure
 27127 00013F5B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27128 00013F5F 48C74009[6C3F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00aa
 27129 00013F67 E9A9010000              	jmp .L_lambda_simple_end_00aa
 27130                                  .L_lambda_simple_code_00aa:	; lambda-simple body
 27131 00013F6C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27132 00013F72 740B                    	je .L_lambda_simple_arity_check_ok_00aa
 27133 00013F74 FF742410                	push qword [rsp + 8 * 2]
 27134 00013F78 6A01                    	push 1
 27135 00013F7A E9F01A0000              	jmp L_error_incorrect_arity_simple
 27136                                  .L_lambda_simple_arity_check_ok_00aa:
 27137 00013F7F C8000000                	enter 0, 0
 27138                                  	; preparing a non-tail-call
 27139                                  	; preparing a non-tail-call
 27140 00013F83 488B4510                	mov rax, ENV
 27141 00013F87 488B00                  	mov rax, qword [rax + 8 * 0]
 27142 00013F8A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27143 00013F8E 50                      	push rax
 27144 00013F8F 488B4510                	mov rax, ENV
 27145 00013F93 488B00                  	mov rax, qword [rax + 8 * 0]
 27146 00013F96 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27147 00013F99 50                      	push rax
 27148 00013F9A 6A02                    	push 2	; arg count
 27149 00013F9C 488B0425[5E170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27150 00013FA4 803805                  	cmp byte [rax], T_undefined
 27151 00013FA7 0F84DC190000            	je L_error_fvar_undefined
 27152 00013FAD 803804                  	cmp byte [rax], T_closure
 27153 00013FB0 0F85571A0000            	jne L_error_non_closure
 27154 00013FB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27155 00013FB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27156 00013FBC 50                      	push rax
 27157 00013FBD 488B4510                	mov rax, ENV
 27158 00013FC1 488B00                  	mov rax, qword [rax + 8 * 0]
 27159 00013FC4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27160 00013FC8 50                      	push rax
 27161 00013FC9 488B4510                	mov rax, ENV
 27162 00013FCD 488B00                  	mov rax, qword [rax + 8 * 0]
 27163 00013FD0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27164 00013FD3 50                      	push rax
 27165 00013FD4 6A03                    	push 3	; arg count
 27166 00013FD6 488B0425[91170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27167 00013FDE 803805                  	cmp byte [rax], T_undefined
 27168 00013FE1 0F84A2190000            	je L_error_fvar_undefined
 27169 00013FE7 803804                  	cmp byte [rax], T_closure
 27170 00013FEA 0F851D1A0000            	jne L_error_non_closure
 27171 00013FF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27172 00013FF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27173                                  
 27174                                  	; preparing a non-tail-call
 27175 00013FF6 488B4520                	mov rax, PARAM(0)	; param ch
 27176 00013FFA 50                      	push rax
 27177 00013FFB 488B4510                	mov rax, ENV
 27178 00013FFF 488B00                  	mov rax, qword [rax + 8 * 0]
 27179 00014002 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27180 00014006 50                      	push rax
 27181 00014007 488B4510                	mov rax, ENV
 27182 0001400B 488B00                  	mov rax, qword [rax + 8 * 0]
 27183 0001400E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27184 00014011 50                      	push rax
 27185 00014012 6A03                    	push 3	; arg count
 27186 00014014 488B0425[91170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27187 0001401C 803805                  	cmp byte [rax], T_undefined
 27188 0001401F 0F8464190000            	je L_error_fvar_undefined
 27189 00014025 803804                  	cmp byte [rax], T_closure
 27190 00014028 0F85DF190000            	jne L_error_non_closure
 27191 0001402E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27192 00014031 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27193                                  
 27194                                  	; preparing a tail-call
 27195                                  	; preparing a non-tail-call
 27196 00014034 48B8-                   	mov rax, L_constants + 2270
 27196 00014036 [DE08000000000000] 
 27197 0001403E 50                      	push rax
 27198 0001403F 488B4510                	mov rax, ENV
 27199 00014043 488B00                  	mov rax, qword [rax + 8 * 0]
 27200 00014046 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27201 0001404A 50                      	push rax
 27202 0001404B 6A02                    	push 2	; arg count
 27203 0001404D 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 27204 00014055 803805                  	cmp byte [rax], T_undefined
 27205 00014058 0F842B190000            	je L_error_fvar_undefined
 27206 0001405E 803804                  	cmp byte [rax], T_closure
 27207 00014061 0F85A6190000            	jne L_error_non_closure
 27208 00014067 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27209 0001406A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27210 0001406D 50                      	push rax
 27211                                  	; preparing a non-tail-call
 27212 0001406E 48B8-                   	mov rax, L_constants + 2270
 27212 00014070 [DE08000000000000] 
 27213 00014078 50                      	push rax
 27214 00014079 488B4510                	mov rax, ENV
 27215 0001407D 488B00                  	mov rax, qword [rax + 8 * 0]
 27216 00014080 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27217 00014084 50                      	push rax
 27218 00014085 6A02                    	push 2	; arg count
 27219 00014087 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 27220 0001408F 803805                  	cmp byte [rax], T_undefined
 27221 00014092 0F84F1180000            	je L_error_fvar_undefined
 27222 00014098 803804                  	cmp byte [rax], T_closure
 27223 0001409B 0F856C190000            	jne L_error_non_closure
 27224 000140A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27225 000140A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27226 000140A7 50                      	push rax
 27227 000140A8 488B4510                	mov rax, ENV
 27228 000140AC 488B00                  	mov rax, qword [rax + 8 * 0]
 27229 000140AF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27230 000140B2 50                      	push rax
 27231 000140B3 6A03                    	push 3	; arg count
 27232 000140B5 488B4510                	mov rax, ENV
 27233 000140B9 488B4008                	mov rax, qword [rax + 8 * 1]
 27234 000140BD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27235 000140C0 488B00                  	mov rax, qword [rax]
 27236 000140C3 803804                  	cmp byte [rax], T_closure
 27237 000140C6 0F8541190000            	jne L_error_non_closure
 27238 000140CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27239 000140CF FF7508                  	push qword [rbp + 8 * 1]
 27240                                   ; old ret addr
 27241 000140D2 FF7500                  	push qword [rbp]
 27242                                   ; restore the old rbp
 27243 000140D5 BB03000000              	mov rbx, 3
 27244 000140DA 4883C303                	add rbx, 3
 27245 000140DE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27246 000140E2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27247 000140E7 4C8D4DF8                	lea r9, [rbp - 8]
 27248 000140EB B907000000              	mov rcx, 7
 27249                                  .L_tc_recycle_frame_loop_00e2:
 27250 000140F0 4883F900                	cmp rcx, 0
 27251 000140F4 7413                    	je .L_tc_recycle_frame_done_00e2
 27252 000140F6 4D8B11                  	mov r10, qword [r9]
 27253 000140F9 4D8910                  	mov qword [r8], r10
 27254 000140FC 4983E808                	sub r8, 8
 27255 00014100 4983E908                	sub r9, 8
 27256 00014104 48FFC9                  	dec rcx
 27257 00014107 EBE7                    	jmp .L_tc_recycle_frame_loop_00e2
 27258                                  .L_tc_recycle_frame_done_00e2:
 27259 00014109 498D6008                	lea rsp, [r8 + 8]
 27260 0001410D 5D                      	pop rbp ; restore the old rbp
 27261 0001410E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27262 00014111 C9                      	leave
 27263 00014112 C21800                  	ret AND_KILL_FRAME(1)
 27264                                  .L_lambda_simple_end_00aa:	; new closure is in rax
 27265 00014115 803804                  	cmp byte [rax], T_closure
 27266 00014118 0F85EF180000            	jne L_error_non_closure
 27267 0001411E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27268 00014121 FF7508                  	push qword [rbp + 8 * 1]
 27269                                   ; old ret addr
 27270 00014124 FF7500                  	push qword [rbp]
 27271                                   ; restore the old rbp
 27272 00014127 BB01000000              	mov rbx, 1
 27273 0001412C 4883C303                	add rbx, 3
 27274 00014130 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27275 00014134 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27276 00014139 4C8D4DF8                	lea r9, [rbp - 8]
 27277 0001413D B905000000              	mov rcx, 5
 27278                                  .L_tc_recycle_frame_loop_00e1:
 27279 00014142 4883F900                	cmp rcx, 0
 27280 00014146 7413                    	je .L_tc_recycle_frame_done_00e1
 27281 00014148 4D8B11                  	mov r10, qword [r9]
 27282 0001414B 4D8910                  	mov qword [r8], r10
 27283 0001414E 4983E808                	sub r8, 8
 27284 00014152 4983E908                	sub r9, 8
 27285 00014156 48FFC9                  	dec rcx
 27286 00014159 EBE7                    	jmp .L_tc_recycle_frame_loop_00e1
 27287                                  .L_tc_recycle_frame_done_00e1:
 27288 0001415B 498D6008                	lea rsp, [r8 + 8]
 27289 0001415F 5D                      	pop rbp ; restore the old rbp
 27290 00014160 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27291 00014163 EB04                    	jmp .L_if_end_0081
 27292                                  .L_if_else_0081:
 27293 00014165 488B4520                	mov rax, PARAM(0)	; param vec
 27294                                  .L_if_end_0081:
 27295 00014169 C9                      	leave
 27296 0001416A C22800                  	ret AND_KILL_FRAME(3)
 27297                                  .L_lambda_simple_end_00a9:	; new closure is in rax
 27298 0001416D 50                      	push rax
 27299 0001416E 488B4520                	mov rax, PARAM(0)	; param run
 27300 00014172 8F00                    	pop qword [rax]
 27301 00014174 48B8-                   	mov rax, sob_void
 27301 00014176 [0000000000000000] 
 27302                                  
 27303 0001417E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27304 00014183 E82E190000              	call malloc
 27305 00014188 50                      	push rax
 27306 00014189 BF08000000              	mov rdi, 8 * 1	; new rib
 27307 0001418E E823190000              	call malloc
 27308 00014193 50                      	push rax
 27309 00014194 BF10000000              	mov rdi, 8 * 2	; extended env
 27310 00014199 E818190000              	call malloc
 27311 0001419E 488B7D10                	mov rdi, ENV
 27312 000141A2 BE00000000              	mov rsi, 0
 27313 000141A7 BA01000000              	mov rdx, 1
 27314                                  .L_lambda_simple_env_loop_00ab:	; ext_env[i + 1] <-- env[i]
 27315 000141AC 4883FE01                	cmp rsi, 1
 27316 000141B0 7410                    	je .L_lambda_simple_env_end_00ab
 27317 000141B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27318 000141B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27319 000141BA 48FFC6                  	inc rsi
 27320 000141BD 48FFC2                  	inc rdx
 27321 000141C0 EBEA                    	jmp .L_lambda_simple_env_loop_00ab
 27322                                  .L_lambda_simple_env_end_00ab:
 27323 000141C2 5B                      	pop rbx
 27324 000141C3 BE00000000              	mov rsi, 0
 27325                                  .L_lambda_simple_params_loop_00ab:	; copy params
 27326 000141C8 4883FE01                	cmp rsi, 1
 27327 000141CC 740E                    	je .L_lambda_simple_params_end_00ab
 27328 000141CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27329 000141D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27330 000141D7 48FFC6                  	inc rsi
 27331 000141DA EBEC                    	jmp .L_lambda_simple_params_loop_00ab
 27332                                  .L_lambda_simple_params_end_00ab:
 27333 000141DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27334 000141DF 4889C3                  	mov rbx, rax
 27335 000141E2 58                      	pop rax
 27336 000141E3 C60004                  	mov byte [rax], T_closure
 27337 000141E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27338 000141EA 48C74009[F7410100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ab
 27339 000141F2 E90C020000              	jmp .L_lambda_simple_end_00ab
 27340                                  .L_lambda_simple_code_00ab:	; lambda-simple body
 27341 000141F7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27342 000141FD 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 27343 000141FF FF742410                	push qword [rsp + 8 * 2]
 27344 00014203 6A01                    	push 1
 27345 00014205 E965180000              	jmp L_error_incorrect_arity_simple
 27346                                  .L_lambda_simple_arity_check_ok_00ab:
 27347 0001420A C8000000                	enter 0, 0
 27348                                  	; preparing a tail-call
 27349                                  	; preparing a non-tail-call
 27350 0001420E 488B4520                	mov rax, PARAM(0)	; param vec
 27351 00014212 50                      	push rax
 27352 00014213 6A01                    	push 1	; arg count
 27353 00014215 488B0425[4D170000]      	mov rax, qword [free_var_143]	; free var vector-length
 27354 0001421D 803805                  	cmp byte [rax], T_undefined
 27355 00014220 0F8463170000            	je L_error_fvar_undefined
 27356 00014226 803804                  	cmp byte [rax], T_closure
 27357 00014229 0F85DE170000            	jne L_error_non_closure
 27358 0001422F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27359 00014232 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27360 00014235 50                      	push rax
 27361 00014236 6A01                    	push 1	; arg count
 27362 00014238 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27363 0001423D E874180000              	call malloc
 27364 00014242 50                      	push rax
 27365 00014243 BF08000000              	mov rdi, 8 * 1	; new rib
 27366 00014248 E869180000              	call malloc
 27367 0001424D 50                      	push rax
 27368 0001424E BF18000000              	mov rdi, 8 * 3	; extended env
 27369 00014253 E85E180000              	call malloc
 27370 00014258 488B7D10                	mov rdi, ENV
 27371 0001425C BE00000000              	mov rsi, 0
 27372 00014261 BA01000000              	mov rdx, 1
 27373                                  .L_lambda_simple_env_loop_00ac:	; ext_env[i + 1] <-- env[i]
 27374 00014266 4883FE02                	cmp rsi, 2
 27375 0001426A 7410                    	je .L_lambda_simple_env_end_00ac
 27376 0001426C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27377 00014270 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27378 00014274 48FFC6                  	inc rsi
 27379 00014277 48FFC2                  	inc rdx
 27380 0001427A EBEA                    	jmp .L_lambda_simple_env_loop_00ac
 27381                                  .L_lambda_simple_env_end_00ac:
 27382 0001427C 5B                      	pop rbx
 27383 0001427D BE00000000              	mov rsi, 0
 27384                                  .L_lambda_simple_params_loop_00ac:	; copy params
 27385 00014282 4883FE01                	cmp rsi, 1
 27386 00014286 740E                    	je .L_lambda_simple_params_end_00ac
 27387 00014288 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27388 0001428D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27389 00014291 48FFC6                  	inc rsi
 27390 00014294 EBEC                    	jmp .L_lambda_simple_params_loop_00ac
 27391                                  .L_lambda_simple_params_end_00ac:
 27392 00014296 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27393 00014299 4889C3                  	mov rbx, rax
 27394 0001429C 58                      	pop rax
 27395 0001429D C60004                  	mov byte [rax], T_closure
 27396 000142A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27397 000142A4 48C74009[B1420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ac
 27398 000142AC E900010000              	jmp .L_lambda_simple_end_00ac
 27399                                  .L_lambda_simple_code_00ac:	; lambda-simple body
 27400 000142B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27401 000142B7 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 27402 000142B9 FF742410                	push qword [rsp + 8 * 2]
 27403 000142BD 6A01                    	push 1
 27404 000142BF E9AB170000              	jmp L_error_incorrect_arity_simple
 27405                                  .L_lambda_simple_arity_check_ok_00ac:
 27406 000142C4 C8000000                	enter 0, 0
 27407                                  	; preparing a non-tail-call
 27408 000142C8 488B4520                	mov rax, PARAM(0)	; param n
 27409 000142CC 50                      	push rax
 27410 000142CD 6A01                    	push 1	; arg count
 27411 000142CF 488B0425[D5170000]      	mov rax, qword [free_var_151]	; free var zero?
 27412 000142D7 803805                  	cmp byte [rax], T_undefined
 27413 000142DA 0F84A9160000            	je L_error_fvar_undefined
 27414 000142E0 803804                  	cmp byte [rax], T_closure
 27415 000142E3 0F8524170000            	jne L_error_non_closure
 27416 000142E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27417 000142EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27418 000142EF 483D[02000000]          	cmp rax, sob_boolean_false
 27419 000142F5 740F                    	je .L_if_else_0082
 27420 000142F7 488B4510                	mov rax, ENV
 27421 000142FB 488B00                  	mov rax, qword [rax + 8 * 0]
 27422 000142FE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27423 00014301 E9A7000000              	jmp .L_if_end_0082
 27424                                  .L_if_else_0082:
 27425                                  	; preparing a tail-call
 27426                                  	; preparing a non-tail-call
 27427 00014306 48B8-                   	mov rax, L_constants + 2270
 27427 00014308 [DE08000000000000] 
 27428 00014310 50                      	push rax
 27429 00014311 488B4520                	mov rax, PARAM(0)	; param n
 27430 00014315 50                      	push rax
 27431 00014316 6A02                    	push 2	; arg count
 27432 00014318 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 27433 00014320 803805                  	cmp byte [rax], T_undefined
 27434 00014323 0F8460160000            	je L_error_fvar_undefined
 27435 00014329 803804                  	cmp byte [rax], T_closure
 27436 0001432C 0F85DB160000            	jne L_error_non_closure
 27437 00014332 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27438 00014335 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27439 00014338 50                      	push rax
 27440 00014339 48B8-                   	mov rax, L_constants + 2135
 27440 0001433B [5708000000000000] 
 27441 00014343 50                      	push rax
 27442 00014344 488B4510                	mov rax, ENV
 27443 00014348 488B00                  	mov rax, qword [rax + 8 * 0]
 27444 0001434B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27445 0001434E 50                      	push rax
 27446 0001434F 6A03                    	push 3	; arg count
 27447 00014351 488B4510                	mov rax, ENV
 27448 00014355 488B4008                	mov rax, qword [rax + 8 * 1]
 27449 00014359 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27450 0001435C 488B00                  	mov rax, qword [rax]
 27451 0001435F 803804                  	cmp byte [rax], T_closure
 27452 00014362 0F85A5160000            	jne L_error_non_closure
 27453 00014368 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27454 0001436B FF7508                  	push qword [rbp + 8 * 1]
 27455                                   ; old ret addr
 27456 0001436E FF7500                  	push qword [rbp]
 27457                                   ; restore the old rbp
 27458 00014371 BB03000000              	mov rbx, 3
 27459 00014376 4883C303                	add rbx, 3
 27460 0001437A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27461 0001437E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27462 00014383 4C8D4DF8                	lea r9, [rbp - 8]
 27463 00014387 B907000000              	mov rcx, 7
 27464                                  .L_tc_recycle_frame_loop_00e4:
 27465 0001438C 4883F900                	cmp rcx, 0
 27466 00014390 7413                    	je .L_tc_recycle_frame_done_00e4
 27467 00014392 4D8B11                  	mov r10, qword [r9]
 27468 00014395 4D8910                  	mov qword [r8], r10
 27469 00014398 4983E808                	sub r8, 8
 27470 0001439C 4983E908                	sub r9, 8
 27471 000143A0 48FFC9                  	dec rcx
 27472 000143A3 EBE7                    	jmp .L_tc_recycle_frame_loop_00e4
 27473                                  .L_tc_recycle_frame_done_00e4:
 27474 000143A5 498D6008                	lea rsp, [r8 + 8]
 27475 000143A9 5D                      	pop rbp ; restore the old rbp
 27476 000143AA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27477                                  .L_if_end_0082:
 27478 000143AD C9                      	leave
 27479 000143AE C21800                  	ret AND_KILL_FRAME(1)
 27480                                  .L_lambda_simple_end_00ac:	; new closure is in rax
 27481 000143B1 803804                  	cmp byte [rax], T_closure
 27482 000143B4 0F8553160000            	jne L_error_non_closure
 27483 000143BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 27484 000143BD FF7508                  	push qword [rbp + 8 * 1]
 27485                                   ; old ret addr
 27486 000143C0 FF7500                  	push qword [rbp]
 27487                                   ; restore the old rbp
 27488 000143C3 BB01000000              	mov rbx, 1
 27489 000143C8 4883C303                	add rbx, 3
 27490 000143CC 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27491 000143D0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27492 000143D5 4C8D4DF8                	lea r9, [rbp - 8]
 27493 000143D9 B905000000              	mov rcx, 5
 27494                                  .L_tc_recycle_frame_loop_00e3:
 27495 000143DE 4883F900                	cmp rcx, 0
 27496 000143E2 7413                    	je .L_tc_recycle_frame_done_00e3
 27497 000143E4 4D8B11                  	mov r10, qword [r9]
 27498 000143E7 4D8910                  	mov qword [r8], r10
 27499 000143EA 4983E808                	sub r8, 8
 27500 000143EE 4983E908                	sub r9, 8
 27501 000143F2 48FFC9                  	dec rcx
 27502 000143F5 EBE7                    	jmp .L_tc_recycle_frame_loop_00e3
 27503                                  .L_tc_recycle_frame_done_00e3:
 27504 000143F7 498D6008                	lea rsp, [r8 + 8]
 27505 000143FB 5D                      	pop rbp ; restore the old rbp
 27506 000143FC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27507 000143FF C9                      	leave
 27508 00014400 C21800                  	ret AND_KILL_FRAME(1)
 27509                                  .L_lambda_simple_end_00ab:	; new closure is in rax
 27510 00014403 C9                      	leave
 27511 00014404 C21800                  	ret AND_KILL_FRAME(1)
 27512                                  .L_lambda_simple_end_00a8:	; new closure is in rax
 27513 00014407 803804                  	cmp byte [rax], T_closure
 27514 0001440A 0F85FD150000            	jne L_error_non_closure
 27515 00014410 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27516 00014413 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27517 00014416 48890425[80170000]      	mov qword [free_var_146], rax
 27518 0001441E 48B8-                   	mov rax, sob_void
 27518 00014420 [0000000000000000] 
 27519                                  
 27520 00014428 4889C7                  	mov rdi, rax
 27521 0001442B E8DB180000              	call print_sexpr_if_not_void
 27522 00014430 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27523 00014435 E87C160000              	call malloc
 27524 0001443A 50                      	push rax
 27525 0001443B BF00000000              	mov rdi, 8 * 0	; new rib
 27526 00014440 E871160000              	call malloc
 27527 00014445 50                      	push rax
 27528 00014446 BF08000000              	mov rdi, 8 * 1	; extended env
 27529 0001444B E866160000              	call malloc
 27530 00014450 488B7D10                	mov rdi, ENV
 27531 00014454 BE00000000              	mov rsi, 0
 27532 00014459 BA01000000              	mov rdx, 1
 27533                                  .L_lambda_simple_env_loop_00ad:	; ext_env[i + 1] <-- env[i]
 27534 0001445E 4883FE00                	cmp rsi, 0
 27535 00014462 7410                    	je .L_lambda_simple_env_end_00ad
 27536 00014464 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27537 00014468 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27538 0001446C 48FFC6                  	inc rsi
 27539 0001446F 48FFC2                  	inc rdx
 27540 00014472 EBEA                    	jmp .L_lambda_simple_env_loop_00ad
 27541                                  .L_lambda_simple_env_end_00ad:
 27542 00014474 5B                      	pop rbx
 27543 00014475 BE00000000              	mov rsi, 0
 27544                                  .L_lambda_simple_params_loop_00ad:	; copy params
 27545 0001447A 4883FE00                	cmp rsi, 0
 27546 0001447E 740E                    	je .L_lambda_simple_params_end_00ad
 27547 00014480 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27548 00014485 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27549 00014489 48FFC6                  	inc rsi
 27550 0001448C EBEC                    	jmp .L_lambda_simple_params_loop_00ad
 27551                                  .L_lambda_simple_params_end_00ad:
 27552 0001448E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27553 00014491 4889C3                  	mov rbx, rax
 27554 00014494 58                      	pop rax
 27555 00014495 C60004                  	mov byte [rax], T_closure
 27556 00014498 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27557 0001449C 48C74009[A9440100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ad
 27558 000144A4 E951030000              	jmp .L_lambda_simple_end_00ad
 27559                                  .L_lambda_simple_code_00ad:	; lambda-simple body
 27560 000144A9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27561 000144AF 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 27562 000144B1 FF742410                	push qword [rsp + 8 * 2]
 27563 000144B5 6A02                    	push 2
 27564 000144B7 E9B3150000              	jmp L_error_incorrect_arity_simple
 27565                                  .L_lambda_simple_arity_check_ok_00ad:
 27566 000144BC C8000000                	enter 0, 0
 27567                                  	; preparing a tail-call
 27568 000144C0 48B8-                   	mov rax, L_constants + 1993
 27568 000144C2 [C907000000000000] 
 27569 000144CA 50                      	push rax
 27570 000144CB 6A01                    	push 1	; arg count
 27571 000144CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27572 000144D2 E8DF150000              	call malloc
 27573 000144D7 50                      	push rax
 27574 000144D8 BF10000000              	mov rdi, 8 * 2	; new rib
 27575 000144DD E8D4150000              	call malloc
 27576 000144E2 50                      	push rax
 27577 000144E3 BF10000000              	mov rdi, 8 * 2	; extended env
 27578 000144E8 E8C9150000              	call malloc
 27579 000144ED 488B7D10                	mov rdi, ENV
 27580 000144F1 BE00000000              	mov rsi, 0
 27581 000144F6 BA01000000              	mov rdx, 1
 27582                                  .L_lambda_simple_env_loop_00ae:	; ext_env[i + 1] <-- env[i]
 27583 000144FB 4883FE01                	cmp rsi, 1
 27584 000144FF 7410                    	je .L_lambda_simple_env_end_00ae
 27585 00014501 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27586 00014505 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27587 00014509 48FFC6                  	inc rsi
 27588 0001450C 48FFC2                  	inc rdx
 27589 0001450F EBEA                    	jmp .L_lambda_simple_env_loop_00ae
 27590                                  .L_lambda_simple_env_end_00ae:
 27591 00014511 5B                      	pop rbx
 27592 00014512 BE00000000              	mov rsi, 0
 27593                                  .L_lambda_simple_params_loop_00ae:	; copy params
 27594 00014517 4883FE02                	cmp rsi, 2
 27595 0001451B 740E                    	je .L_lambda_simple_params_end_00ae
 27596 0001451D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27597 00014522 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27598 00014526 48FFC6                  	inc rsi
 27599 00014529 EBEC                    	jmp .L_lambda_simple_params_loop_00ae
 27600                                  .L_lambda_simple_params_end_00ae:
 27601 0001452B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27602 0001452E 4889C3                  	mov rbx, rax
 27603 00014531 58                      	pop rax
 27604 00014532 C60004                  	mov byte [rax], T_closure
 27605 00014535 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27606 00014539 48C74009[46450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ae
 27607 00014541 E962020000              	jmp .L_lambda_simple_end_00ae
 27608                                  .L_lambda_simple_code_00ae:	; lambda-simple body
 27609 00014546 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27610 0001454C 740B                    	je .L_lambda_simple_arity_check_ok_00ae
 27611 0001454E FF742410                	push qword [rsp + 8 * 2]
 27612 00014552 6A01                    	push 1
 27613 00014554 E916150000              	jmp L_error_incorrect_arity_simple
 27614                                  .L_lambda_simple_arity_check_ok_00ae:
 27615 00014559 C8000000                	enter 0, 0
 27616 0001455D BF08000000              	mov rdi, 8*1
 27617 00014562 E84F150000              	call malloc
 27618 00014567 488B5D20                	mov rbx, PARAM(0)
 27619 0001456B 488918                  	mov qword [rax], rbx
 27620 0001456E 48894520                	mov PARAM(0), rax
 27621 00014572 48B8-                   	mov rax, sob_void
 27621 00014574 [0000000000000000] 
 27622                                  
 27623 0001457C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27624 00014581 E830150000              	call malloc
 27625 00014586 50                      	push rax
 27626 00014587 BF08000000              	mov rdi, 8 * 1	; new rib
 27627 0001458C E825150000              	call malloc
 27628 00014591 50                      	push rax
 27629 00014592 BF18000000              	mov rdi, 8 * 3	; extended env
 27630 00014597 E81A150000              	call malloc
 27631 0001459C 488B7D10                	mov rdi, ENV
 27632 000145A0 BE00000000              	mov rsi, 0
 27633 000145A5 BA01000000              	mov rdx, 1
 27634                                  .L_lambda_simple_env_loop_00af:	; ext_env[i + 1] <-- env[i]
 27635 000145AA 4883FE02                	cmp rsi, 2
 27636 000145AE 7410                    	je .L_lambda_simple_env_end_00af
 27637 000145B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27638 000145B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27639 000145B8 48FFC6                  	inc rsi
 27640 000145BB 48FFC2                  	inc rdx
 27641 000145BE EBEA                    	jmp .L_lambda_simple_env_loop_00af
 27642                                  .L_lambda_simple_env_end_00af:
 27643 000145C0 5B                      	pop rbx
 27644 000145C1 BE00000000              	mov rsi, 0
 27645                                  .L_lambda_simple_params_loop_00af:	; copy params
 27646 000145C6 4883FE01                	cmp rsi, 1
 27647 000145CA 740E                    	je .L_lambda_simple_params_end_00af
 27648 000145CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27649 000145D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27650 000145D5 48FFC6                  	inc rsi
 27651 000145D8 EBEC                    	jmp .L_lambda_simple_params_loop_00af
 27652                                  .L_lambda_simple_params_end_00af:
 27653 000145DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27654 000145DD 4889C3                  	mov rbx, rax
 27655 000145E0 58                      	pop rax
 27656 000145E1 C60004                  	mov byte [rax], T_closure
 27657 000145E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27658 000145E8 48C74009[F5450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00af
 27659 000145F0 E93C010000              	jmp .L_lambda_simple_end_00af
 27660                                  .L_lambda_simple_code_00af:	; lambda-simple body
 27661 000145F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27662 000145FB 740B                    	je .L_lambda_simple_arity_check_ok_00af
 27663 000145FD FF742410                	push qword [rsp + 8 * 2]
 27664 00014601 6A01                    	push 1
 27665 00014603 E967140000              	jmp L_error_incorrect_arity_simple
 27666                                  .L_lambda_simple_arity_check_ok_00af:
 27667 00014608 C8000000                	enter 0, 0
 27668                                  	; preparing a non-tail-call
 27669 0001460C 488B4510                	mov rax, ENV
 27670 00014610 488B4008                	mov rax, qword [rax + 8 * 1]
 27671 00014614 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27672 00014617 50                      	push rax
 27673 00014618 488B4520                	mov rax, PARAM(0)	; param i
 27674 0001461C 50                      	push rax
 27675 0001461D 6A02                    	push 2	; arg count
 27676 0001461F 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 27677 00014627 803805                  	cmp byte [rax], T_undefined
 27678 0001462A 0F8459130000            	je L_error_fvar_undefined
 27679 00014630 803804                  	cmp byte [rax], T_closure
 27680 00014633 0F85D4130000            	jne L_error_non_closure
 27681 00014639 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27682 0001463C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27683 0001463F 483D[02000000]          	cmp rax, sob_boolean_false
 27684 00014645 0F84D8000000            	je .L_if_else_0083
 27685                                  	; preparing a tail-call
 27686                                  	; preparing a non-tail-call
 27687                                  	; preparing a non-tail-call
 27688 0001464B 48B8-                   	mov rax, L_constants + 2270
 27688 0001464D [DE08000000000000] 
 27689 00014655 50                      	push rax
 27690 00014656 488B4520                	mov rax, PARAM(0)	; param i
 27691 0001465A 50                      	push rax
 27692 0001465B 6A02                    	push 2	; arg count
 27693 0001465D 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 27694 00014665 803805                  	cmp byte [rax], T_undefined
 27695 00014668 0F841B130000            	je L_error_fvar_undefined
 27696 0001466E 803804                  	cmp byte [rax], T_closure
 27697 00014671 0F8596130000            	jne L_error_non_closure
 27698 00014677 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27699 0001467A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27700 0001467D 50                      	push rax
 27701 0001467E 6A01                    	push 1	; arg count
 27702 00014680 488B4510                	mov rax, ENV
 27703 00014684 488B00                  	mov rax, qword [rax + 8 * 0]
 27704 00014687 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27705 0001468A 488B00                  	mov rax, qword [rax]
 27706 0001468D 803804                  	cmp byte [rax], T_closure
 27707 00014690 0F8577130000            	jne L_error_non_closure
 27708 00014696 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27709 00014699 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27710 0001469C 50                      	push rax
 27711                                  	; preparing a non-tail-call
 27712 0001469D 488B4520                	mov rax, PARAM(0)	; param i
 27713 000146A1 50                      	push rax
 27714 000146A2 6A01                    	push 1	; arg count
 27715 000146A4 488B4510                	mov rax, ENV
 27716 000146A8 488B4008                	mov rax, qword [rax + 8 * 1]
 27717 000146AC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27718 000146B0 803804                  	cmp byte [rax], T_closure
 27719 000146B3 0F8554130000            	jne L_error_non_closure
 27720 000146B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27721 000146BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27722 000146BF 50                      	push rax
 27723 000146C0 6A02                    	push 2	; arg count
 27724 000146C2 488B0425[0D130000]      	mov rax, qword [free_var_79]	; free var cons
 27725 000146CA 803805                  	cmp byte [rax], T_undefined
 27726 000146CD 0F84B6120000            	je L_error_fvar_undefined
 27727 000146D3 803804                  	cmp byte [rax], T_closure
 27728 000146D6 0F8531130000            	jne L_error_non_closure
 27729 000146DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 27730 000146DF FF7508                  	push qword [rbp + 8 * 1]
 27731                                   ; old ret addr
 27732 000146E2 FF7500                  	push qword [rbp]
 27733                                   ; restore the old rbp
 27734 000146E5 BB02000000              	mov rbx, 2
 27735 000146EA 4883C303                	add rbx, 3
 27736 000146EE 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27737 000146F2 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27738 000146F7 4C8D4DF8                	lea r9, [rbp - 8]
 27739 000146FB B906000000              	mov rcx, 6
 27740                                  .L_tc_recycle_frame_loop_00e6:
 27741 00014700 4883F900                	cmp rcx, 0
 27742 00014704 7413                    	je .L_tc_recycle_frame_done_00e6
 27743 00014706 4D8B11                  	mov r10, qword [r9]
 27744 00014709 4D8910                  	mov qword [r8], r10
 27745 0001470C 4983E808                	sub r8, 8
 27746 00014710 4983E908                	sub r9, 8
 27747 00014714 48FFC9                  	dec rcx
 27748 00014717 EBE7                    	jmp .L_tc_recycle_frame_loop_00e6
 27749                                  .L_tc_recycle_frame_done_00e6:
 27750 00014719 498D6008                	lea rsp, [r8 + 8]
 27751 0001471D 5D                      	pop rbp ; restore the old rbp
 27752 0001471E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27753 00014721 EB0A                    	jmp .L_if_end_0083
 27754                                  .L_if_else_0083:
 27755 00014723 48B8-                   	mov rax, L_constants + 1
 27755 00014725 [0100000000000000] 
 27756                                  .L_if_end_0083:
 27757 0001472D C9                      	leave
 27758 0001472E C21800                  	ret AND_KILL_FRAME(1)
 27759                                  .L_lambda_simple_end_00af:	; new closure is in rax
 27760 00014731 50                      	push rax
 27761 00014732 488B4520                	mov rax, PARAM(0)	; param run
 27762 00014736 8F00                    	pop qword [rax]
 27763 00014738 48B8-                   	mov rax, sob_void
 27763 0001473A [0000000000000000] 
 27764                                  
 27765                                  	; preparing a tail-call
 27766 00014742 48B8-                   	mov rax, L_constants + 2135
 27766 00014744 [5708000000000000] 
 27767 0001474C 50                      	push rax
 27768 0001474D 6A01                    	push 1	; arg count
 27769 0001474F 488B4520                	mov rax, PARAM(0)	; param run
 27770 00014753 488B00                  	mov rax, qword [rax]
 27771 00014756 803804                  	cmp byte [rax], T_closure
 27772 00014759 0F85AE120000            	jne L_error_non_closure
 27773 0001475F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27774 00014762 FF7508                  	push qword [rbp + 8 * 1]
 27775                                   ; old ret addr
 27776 00014765 FF7500                  	push qword [rbp]
 27777                                   ; restore the old rbp
 27778 00014768 BB01000000              	mov rbx, 1
 27779 0001476D 4883C303                	add rbx, 3
 27780 00014771 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27781 00014775 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27782 0001477A 4C8D4DF8                	lea r9, [rbp - 8]
 27783 0001477E B905000000              	mov rcx, 5
 27784                                  .L_tc_recycle_frame_loop_00e7:
 27785 00014783 4883F900                	cmp rcx, 0
 27786 00014787 7413                    	je .L_tc_recycle_frame_done_00e7
 27787 00014789 4D8B11                  	mov r10, qword [r9]
 27788 0001478C 4D8910                  	mov qword [r8], r10
 27789 0001478F 4983E808                	sub r8, 8
 27790 00014793 4983E908                	sub r9, 8
 27791 00014797 48FFC9                  	dec rcx
 27792 0001479A EBE7                    	jmp .L_tc_recycle_frame_loop_00e7
 27793                                  .L_tc_recycle_frame_done_00e7:
 27794 0001479C 498D6008                	lea rsp, [r8 + 8]
 27795 000147A0 5D                      	pop rbp ; restore the old rbp
 27796 000147A1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27797 000147A4 C9                      	leave
 27798 000147A5 C21800                  	ret AND_KILL_FRAME(1)
 27799                                  .L_lambda_simple_end_00ae:	; new closure is in rax
 27800 000147A8 803804                  	cmp byte [rax], T_closure
 27801 000147AB 0F855C120000            	jne L_error_non_closure
 27802 000147B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27803 000147B4 FF7508                  	push qword [rbp + 8 * 1]
 27804                                   ; old ret addr
 27805 000147B7 FF7500                  	push qword [rbp]
 27806                                   ; restore the old rbp
 27807 000147BA BB01000000              	mov rbx, 1
 27808 000147BF 4883C303                	add rbx, 3
 27809 000147C3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 27810 000147C7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 27811 000147CC 4C8D4DF8                	lea r9, [rbp - 8]
 27812 000147D0 B905000000              	mov rcx, 5
 27813                                  .L_tc_recycle_frame_loop_00e5:
 27814 000147D5 4883F900                	cmp rcx, 0
 27815 000147D9 7413                    	je .L_tc_recycle_frame_done_00e5
 27816 000147DB 4D8B11                  	mov r10, qword [r9]
 27817 000147DE 4D8910                  	mov qword [r8], r10
 27818 000147E1 4983E808                	sub r8, 8
 27819 000147E5 4983E908                	sub r9, 8
 27820 000147E9 48FFC9                  	dec rcx
 27821 000147EC EBE7                    	jmp .L_tc_recycle_frame_loop_00e5
 27822                                  .L_tc_recycle_frame_done_00e5:
 27823 000147EE 498D6008                	lea rsp, [r8 + 8]
 27824 000147F2 5D                      	pop rbp ; restore the old rbp
 27825 000147F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27826 000147F6 C9                      	leave
 27827 000147F7 C22000                  	ret AND_KILL_FRAME(2)
 27828                                  .L_lambda_simple_end_00ad:	; new closure is in rax
 27829 000147FA 48890425[50140000]      	mov qword [free_var_98], rax
 27830 00014802 48B8-                   	mov rax, sob_void
 27830 00014804 [0000000000000000] 
 27831                                  
 27832 0001480C 4889C7                  	mov rdi, rax
 27833 0001480F E8F7140000              	call print_sexpr_if_not_void
 27834 00014814 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27835 00014819 E898120000              	call malloc
 27836 0001481E 50                      	push rax
 27837 0001481F BF00000000              	mov rdi, 8 * 0	; new rib
 27838 00014824 E88D120000              	call malloc
 27839 00014829 50                      	push rax
 27840 0001482A BF08000000              	mov rdi, 8 * 1	; extended env
 27841 0001482F E882120000              	call malloc
 27842 00014834 488B7D10                	mov rdi, ENV
 27843 00014838 BE00000000              	mov rsi, 0
 27844 0001483D BA01000000              	mov rdx, 1
 27845                                  .L_lambda_simple_env_loop_00b0:	; ext_env[i + 1] <-- env[i]
 27846 00014842 4883FE00                	cmp rsi, 0
 27847 00014846 7410                    	je .L_lambda_simple_env_end_00b0
 27848 00014848 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27849 0001484C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27850 00014850 48FFC6                  	inc rsi
 27851 00014853 48FFC2                  	inc rdx
 27852 00014856 EBEA                    	jmp .L_lambda_simple_env_loop_00b0
 27853                                  .L_lambda_simple_env_end_00b0:
 27854 00014858 5B                      	pop rbx
 27855 00014859 BE00000000              	mov rsi, 0
 27856                                  .L_lambda_simple_params_loop_00b0:	; copy params
 27857 0001485E 4883FE00                	cmp rsi, 0
 27858 00014862 740E                    	je .L_lambda_simple_params_end_00b0
 27859 00014864 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27860 00014869 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27861 0001486D 48FFC6                  	inc rsi
 27862 00014870 EBEC                    	jmp .L_lambda_simple_params_loop_00b0
 27863                                  .L_lambda_simple_params_end_00b0:
 27864 00014872 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27865 00014875 4889C3                  	mov rbx, rax
 27866 00014878 58                      	pop rax
 27867 00014879 C60004                  	mov byte [rax], T_closure
 27868 0001487C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27869 00014880 48C74009[8D480100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b0
 27870 00014888 E96E040000              	jmp .L_lambda_simple_end_00b0
 27871                                  .L_lambda_simple_code_00b0:	; lambda-simple body
 27872 0001488D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27873 00014893 740B                    	je .L_lambda_simple_arity_check_ok_00b0
 27874 00014895 FF742410                	push qword [rsp + 8 * 2]
 27875 00014899 6A02                    	push 2
 27876 0001489B E9CF110000              	jmp L_error_incorrect_arity_simple
 27877                                  .L_lambda_simple_arity_check_ok_00b0:
 27878 000148A0 C8000000                	enter 0, 0
 27879                                  	; preparing a tail-call
 27880                                  	; preparing a non-tail-call
 27881 000148A4 488B4520                	mov rax, PARAM(0)	; param n
 27882 000148A8 50                      	push rax
 27883 000148A9 6A01                    	push 1	; arg count
 27884 000148AB 488B0425[61140000]      	mov rax, qword [free_var_99]	; free var make-string
 27885 000148B3 803805                  	cmp byte [rax], T_undefined
 27886 000148B6 0F84CD100000            	je L_error_fvar_undefined
 27887 000148BC 803804                  	cmp byte [rax], T_closure
 27888 000148BF 0F8548110000            	jne L_error_non_closure
 27889 000148C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27890 000148C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27891 000148CB 50                      	push rax
 27892 000148CC 6A01                    	push 1	; arg count
 27893 000148CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27894 000148D3 E8DE110000              	call malloc
 27895 000148D8 50                      	push rax
 27896 000148D9 BF10000000              	mov rdi, 8 * 2	; new rib
 27897 000148DE E8D3110000              	call malloc
 27898 000148E3 50                      	push rax
 27899 000148E4 BF10000000              	mov rdi, 8 * 2	; extended env
 27900 000148E9 E8C8110000              	call malloc
 27901 000148EE 488B7D10                	mov rdi, ENV
 27902 000148F2 BE00000000              	mov rsi, 0
 27903 000148F7 BA01000000              	mov rdx, 1
 27904                                  .L_lambda_simple_env_loop_00b1:	; ext_env[i + 1] <-- env[i]
 27905 000148FC 4883FE01                	cmp rsi, 1
 27906 00014900 7410                    	je .L_lambda_simple_env_end_00b1
 27907 00014902 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27908 00014906 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27909 0001490A 48FFC6                  	inc rsi
 27910 0001490D 48FFC2                  	inc rdx
 27911 00014910 EBEA                    	jmp .L_lambda_simple_env_loop_00b1
 27912                                  .L_lambda_simple_env_end_00b1:
 27913 00014912 5B                      	pop rbx
 27914 00014913 BE00000000              	mov rsi, 0
 27915                                  .L_lambda_simple_params_loop_00b1:	; copy params
 27916 00014918 4883FE02                	cmp rsi, 2
 27917 0001491C 740E                    	je .L_lambda_simple_params_end_00b1
 27918 0001491E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27919 00014923 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27920 00014927 48FFC6                  	inc rsi
 27921 0001492A EBEC                    	jmp .L_lambda_simple_params_loop_00b1
 27922                                  .L_lambda_simple_params_end_00b1:
 27923 0001492C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27924 0001492F 4889C3                  	mov rbx, rax
 27925 00014932 58                      	pop rax
 27926 00014933 C60004                  	mov byte [rax], T_closure
 27927 00014936 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27928 0001493A 48C74009[47490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b1
 27929 00014942 E962030000              	jmp .L_lambda_simple_end_00b1
 27930                                  .L_lambda_simple_code_00b1:	; lambda-simple body
 27931 00014947 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27932 0001494D 740B                    	je .L_lambda_simple_arity_check_ok_00b1
 27933 0001494F FF742410                	push qword [rsp + 8 * 2]
 27934 00014953 6A01                    	push 1
 27935 00014955 E915110000              	jmp L_error_incorrect_arity_simple
 27936                                  .L_lambda_simple_arity_check_ok_00b1:
 27937 0001495A C8000000                	enter 0, 0
 27938                                  	; preparing a tail-call
 27939 0001495E 48B8-                   	mov rax, L_constants + 1993
 27939 00014960 [C907000000000000] 
 27940 00014968 50                      	push rax
 27941 00014969 6A01                    	push 1	; arg count
 27942 0001496B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27943 00014970 E841110000              	call malloc
 27944 00014975 50                      	push rax
 27945 00014976 BF08000000              	mov rdi, 8 * 1	; new rib
 27946 0001497B E836110000              	call malloc
 27947 00014980 50                      	push rax
 27948 00014981 BF18000000              	mov rdi, 8 * 3	; extended env
 27949 00014986 E82B110000              	call malloc
 27950 0001498B 488B7D10                	mov rdi, ENV
 27951 0001498F BE00000000              	mov rsi, 0
 27952 00014994 BA01000000              	mov rdx, 1
 27953                                  .L_lambda_simple_env_loop_00b2:	; ext_env[i + 1] <-- env[i]
 27954 00014999 4883FE02                	cmp rsi, 2
 27955 0001499D 7410                    	je .L_lambda_simple_env_end_00b2
 27956 0001499F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27957 000149A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27958 000149A7 48FFC6                  	inc rsi
 27959 000149AA 48FFC2                  	inc rdx
 27960 000149AD EBEA                    	jmp .L_lambda_simple_env_loop_00b2
 27961                                  .L_lambda_simple_env_end_00b2:
 27962 000149AF 5B                      	pop rbx
 27963 000149B0 BE00000000              	mov rsi, 0
 27964                                  .L_lambda_simple_params_loop_00b2:	; copy params
 27965 000149B5 4883FE01                	cmp rsi, 1
 27966 000149B9 740E                    	je .L_lambda_simple_params_end_00b2
 27967 000149BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27968 000149C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27969 000149C4 48FFC6                  	inc rsi
 27970 000149C7 EBEC                    	jmp .L_lambda_simple_params_loop_00b2
 27971                                  .L_lambda_simple_params_end_00b2:
 27972 000149C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27973 000149CC 4889C3                  	mov rbx, rax
 27974 000149CF 58                      	pop rax
 27975 000149D0 C60004                  	mov byte [rax], T_closure
 27976 000149D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27977 000149D7 48C74009[E4490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b2
 27978 000149DF E973020000              	jmp .L_lambda_simple_end_00b2
 27979                                  .L_lambda_simple_code_00b2:	; lambda-simple body
 27980 000149E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27981 000149EA 740B                    	je .L_lambda_simple_arity_check_ok_00b2
 27982 000149EC FF742410                	push qword [rsp + 8 * 2]
 27983 000149F0 6A01                    	push 1
 27984 000149F2 E978100000              	jmp L_error_incorrect_arity_simple
 27985                                  .L_lambda_simple_arity_check_ok_00b2:
 27986 000149F7 C8000000                	enter 0, 0
 27987 000149FB BF08000000              	mov rdi, 8*1
 27988 00014A00 E8B1100000              	call malloc
 27989 00014A05 488B5D20                	mov rbx, PARAM(0)
 27990 00014A09 488918                  	mov qword [rax], rbx
 27991 00014A0C 48894520                	mov PARAM(0), rax
 27992 00014A10 48B8-                   	mov rax, sob_void
 27992 00014A12 [0000000000000000] 
 27993                                  
 27994 00014A1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27995 00014A1F E892100000              	call malloc
 27996 00014A24 50                      	push rax
 27997 00014A25 BF08000000              	mov rdi, 8 * 1	; new rib
 27998 00014A2A E887100000              	call malloc
 27999 00014A2F 50                      	push rax
 28000 00014A30 BF20000000              	mov rdi, 8 * 4	; extended env
 28001 00014A35 E87C100000              	call malloc
 28002 00014A3A 488B7D10                	mov rdi, ENV
 28003 00014A3E BE00000000              	mov rsi, 0
 28004 00014A43 BA01000000              	mov rdx, 1
 28005                                  .L_lambda_simple_env_loop_00b3:	; ext_env[i + 1] <-- env[i]
 28006 00014A48 4883FE03                	cmp rsi, 3
 28007 00014A4C 7410                    	je .L_lambda_simple_env_end_00b3
 28008 00014A4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28009 00014A52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28010 00014A56 48FFC6                  	inc rsi
 28011 00014A59 48FFC2                  	inc rdx
 28012 00014A5C EBEA                    	jmp .L_lambda_simple_env_loop_00b3
 28013                                  .L_lambda_simple_env_end_00b3:
 28014 00014A5E 5B                      	pop rbx
 28015 00014A5F BE00000000              	mov rsi, 0
 28016                                  .L_lambda_simple_params_loop_00b3:	; copy params
 28017 00014A64 4883FE01                	cmp rsi, 1
 28018 00014A68 740E                    	je .L_lambda_simple_params_end_00b3
 28019 00014A6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28020 00014A6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28021 00014A73 48FFC6                  	inc rsi
 28022 00014A76 EBEC                    	jmp .L_lambda_simple_params_loop_00b3
 28023                                  .L_lambda_simple_params_end_00b3:
 28024 00014A78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28025 00014A7B 4889C3                  	mov rbx, rax
 28026 00014A7E 58                      	pop rax
 28027 00014A7F C60004                  	mov byte [rax], T_closure
 28028 00014A82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28029 00014A86 48C74009[934A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b3
 28030 00014A8E E94D010000              	jmp .L_lambda_simple_end_00b3
 28031                                  .L_lambda_simple_code_00b3:	; lambda-simple body
 28032 00014A93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28033 00014A99 740B                    	je .L_lambda_simple_arity_check_ok_00b3
 28034 00014A9B FF742410                	push qword [rsp + 8 * 2]
 28035 00014A9F 6A01                    	push 1
 28036 00014AA1 E9C90F0000              	jmp L_error_incorrect_arity_simple
 28037                                  .L_lambda_simple_arity_check_ok_00b3:
 28038 00014AA6 C8000000                	enter 0, 0
 28039                                  	; preparing a non-tail-call
 28040 00014AAA 488B4510                	mov rax, ENV
 28041 00014AAE 488B4010                	mov rax, qword [rax + 8 * 2]
 28042 00014AB2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28043 00014AB5 50                      	push rax
 28044 00014AB6 488B4520                	mov rax, PARAM(0)	; param i
 28045 00014ABA 50                      	push rax
 28046 00014ABB 6A02                    	push 2	; arg count
 28047 00014ABD 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 28048 00014AC5 803805                  	cmp byte [rax], T_undefined
 28049 00014AC8 0F84BB0E0000            	je L_error_fvar_undefined
 28050 00014ACE 803804                  	cmp byte [rax], T_closure
 28051 00014AD1 0F85360F0000            	jne L_error_non_closure
 28052 00014AD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28053 00014ADA FF5009                  	call SOB_CLOSURE_CODE(rax)
 28054 00014ADD 483D[02000000]          	cmp rax, sob_boolean_false
 28055 00014AE3 0F84E8000000            	je .L_if_else_0084
 28056                                  	; preparing a non-tail-call
 28057                                  	; preparing a non-tail-call
 28058 00014AE9 488B4520                	mov rax, PARAM(0)	; param i
 28059 00014AED 50                      	push rax
 28060 00014AEE 6A01                    	push 1	; arg count
 28061 00014AF0 488B4510                	mov rax, ENV
 28062 00014AF4 488B4010                	mov rax, qword [rax + 8 * 2]
 28063 00014AF8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28064 00014AFC 803804                  	cmp byte [rax], T_closure
 28065 00014AFF 0F85080F0000            	jne L_error_non_closure
 28066 00014B05 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28067 00014B08 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28068 00014B0B 50                      	push rax
 28069 00014B0C 488B4520                	mov rax, PARAM(0)	; param i
 28070 00014B10 50                      	push rax
 28071 00014B11 488B4510                	mov rax, ENV
 28072 00014B15 488B4008                	mov rax, qword [rax + 8 * 1]
 28073 00014B19 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28074 00014B1C 50                      	push rax
 28075 00014B1D 6A03                    	push 3	; arg count
 28076 00014B1F 488B0425[81160000]      	mov rax, qword [free_var_131]	; free var string-set!
 28077 00014B27 803805                  	cmp byte [rax], T_undefined
 28078 00014B2A 0F84590E0000            	je L_error_fvar_undefined
 28079 00014B30 803804                  	cmp byte [rax], T_closure
 28080 00014B33 0F85D40E0000            	jne L_error_non_closure
 28081 00014B39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28082 00014B3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28083                                  
 28084                                  	; preparing a tail-call
 28085                                  	; preparing a non-tail-call
 28086 00014B3F 48B8-                   	mov rax, L_constants + 2270
 28086 00014B41 [DE08000000000000] 
 28087 00014B49 50                      	push rax
 28088 00014B4A 488B4520                	mov rax, PARAM(0)	; param i
 28089 00014B4E 50                      	push rax
 28090 00014B4F 6A02                    	push 2	; arg count
 28091 00014B51 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 28092 00014B59 803805                  	cmp byte [rax], T_undefined
 28093 00014B5C 0F84270E0000            	je L_error_fvar_undefined
 28094 00014B62 803804                  	cmp byte [rax], T_closure
 28095 00014B65 0F85A20E0000            	jne L_error_non_closure
 28096 00014B6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28097 00014B6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 28098 00014B71 50                      	push rax
 28099 00014B72 6A01                    	push 1	; arg count
 28100 00014B74 488B4510                	mov rax, ENV
 28101 00014B78 488B00                  	mov rax, qword [rax + 8 * 0]
 28102 00014B7B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28103 00014B7E 488B00                  	mov rax, qword [rax]
 28104 00014B81 803804                  	cmp byte [rax], T_closure
 28105 00014B84 0F85830E0000            	jne L_error_non_closure
 28106 00014B8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28107 00014B8D FF7508                  	push qword [rbp + 8 * 1]
 28108                                   ; old ret addr
 28109 00014B90 FF7500                  	push qword [rbp]
 28110                                   ; restore the old rbp
 28111 00014B93 BB01000000              	mov rbx, 1
 28112 00014B98 4883C303                	add rbx, 3
 28113 00014B9C 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28114 00014BA0 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28115 00014BA5 4C8D4DF8                	lea r9, [rbp - 8]
 28116 00014BA9 B905000000              	mov rcx, 5
 28117                                  .L_tc_recycle_frame_loop_00ea:
 28118 00014BAE 4883F900                	cmp rcx, 0
 28119 00014BB2 7413                    	je .L_tc_recycle_frame_done_00ea
 28120 00014BB4 4D8B11                  	mov r10, qword [r9]
 28121 00014BB7 4D8910                  	mov qword [r8], r10
 28122 00014BBA 4983E808                	sub r8, 8
 28123 00014BBE 4983E908                	sub r9, 8
 28124 00014BC2 48FFC9                  	dec rcx
 28125 00014BC5 EBE7                    	jmp .L_tc_recycle_frame_loop_00ea
 28126                                  .L_tc_recycle_frame_done_00ea:
 28127 00014BC7 498D6008                	lea rsp, [r8 + 8]
 28128 00014BCB 5D                      	pop rbp ; restore the old rbp
 28129 00014BCC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28130 00014BCF EB0B                    	jmp .L_if_end_0084
 28131                                  .L_if_else_0084:
 28132 00014BD1 488B4510                	mov rax, ENV
 28133 00014BD5 488B4008                	mov rax, qword [rax + 8 * 1]
 28134 00014BD9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28135                                  .L_if_end_0084:
 28136 00014BDC C9                      	leave
 28137 00014BDD C21800                  	ret AND_KILL_FRAME(1)
 28138                                  .L_lambda_simple_end_00b3:	; new closure is in rax
 28139 00014BE0 50                      	push rax
 28140 00014BE1 488B4520                	mov rax, PARAM(0)	; param run
 28141 00014BE5 8F00                    	pop qword [rax]
 28142 00014BE7 48B8-                   	mov rax, sob_void
 28142 00014BE9 [0000000000000000] 
 28143                                  
 28144                                  	; preparing a tail-call
 28145 00014BF1 48B8-                   	mov rax, L_constants + 2135
 28145 00014BF3 [5708000000000000] 
 28146 00014BFB 50                      	push rax
 28147 00014BFC 6A01                    	push 1	; arg count
 28148 00014BFE 488B4520                	mov rax, PARAM(0)	; param run
 28149 00014C02 488B00                  	mov rax, qword [rax]
 28150 00014C05 803804                  	cmp byte [rax], T_closure
 28151 00014C08 0F85FF0D0000            	jne L_error_non_closure
 28152 00014C0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 28153 00014C11 FF7508                  	push qword [rbp + 8 * 1]
 28154                                   ; old ret addr
 28155 00014C14 FF7500                  	push qword [rbp]
 28156                                   ; restore the old rbp
 28157 00014C17 BB01000000              	mov rbx, 1
 28158 00014C1C 4883C303                	add rbx, 3
 28159 00014C20 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28160 00014C24 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28161 00014C29 4C8D4DF8                	lea r9, [rbp - 8]
 28162 00014C2D B905000000              	mov rcx, 5
 28163                                  .L_tc_recycle_frame_loop_00eb:
 28164 00014C32 4883F900                	cmp rcx, 0
 28165 00014C36 7413                    	je .L_tc_recycle_frame_done_00eb
 28166 00014C38 4D8B11                  	mov r10, qword [r9]
 28167 00014C3B 4D8910                  	mov qword [r8], r10
 28168 00014C3E 4983E808                	sub r8, 8
 28169 00014C42 4983E908                	sub r9, 8
 28170 00014C46 48FFC9                  	dec rcx
 28171 00014C49 EBE7                    	jmp .L_tc_recycle_frame_loop_00eb
 28172                                  .L_tc_recycle_frame_done_00eb:
 28173 00014C4B 498D6008                	lea rsp, [r8 + 8]
 28174 00014C4F 5D                      	pop rbp ; restore the old rbp
 28175 00014C50 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28176 00014C53 C9                      	leave
 28177 00014C54 C21800                  	ret AND_KILL_FRAME(1)
 28178                                  .L_lambda_simple_end_00b2:	; new closure is in rax
 28179 00014C57 803804                  	cmp byte [rax], T_closure
 28180 00014C5A 0F85AD0D0000            	jne L_error_non_closure
 28181 00014C60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28182 00014C63 FF7508                  	push qword [rbp + 8 * 1]
 28183                                   ; old ret addr
 28184 00014C66 FF7500                  	push qword [rbp]
 28185                                   ; restore the old rbp
 28186 00014C69 BB01000000              	mov rbx, 1
 28187 00014C6E 4883C303                	add rbx, 3
 28188 00014C72 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28189 00014C76 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28190 00014C7B 4C8D4DF8                	lea r9, [rbp - 8]
 28191 00014C7F B905000000              	mov rcx, 5
 28192                                  .L_tc_recycle_frame_loop_00e9:
 28193 00014C84 4883F900                	cmp rcx, 0
 28194 00014C88 7413                    	je .L_tc_recycle_frame_done_00e9
 28195 00014C8A 4D8B11                  	mov r10, qword [r9]
 28196 00014C8D 4D8910                  	mov qword [r8], r10
 28197 00014C90 4983E808                	sub r8, 8
 28198 00014C94 4983E908                	sub r9, 8
 28199 00014C98 48FFC9                  	dec rcx
 28200 00014C9B EBE7                    	jmp .L_tc_recycle_frame_loop_00e9
 28201                                  .L_tc_recycle_frame_done_00e9:
 28202 00014C9D 498D6008                	lea rsp, [r8 + 8]
 28203 00014CA1 5D                      	pop rbp ; restore the old rbp
 28204 00014CA2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28205 00014CA5 C9                      	leave
 28206 00014CA6 C21800                  	ret AND_KILL_FRAME(1)
 28207                                  .L_lambda_simple_end_00b1:	; new closure is in rax
 28208 00014CA9 803804                  	cmp byte [rax], T_closure
 28209 00014CAC 0F855B0D0000            	jne L_error_non_closure
 28210 00014CB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28211 00014CB5 FF7508                  	push qword [rbp + 8 * 1]
 28212                                   ; old ret addr
 28213 00014CB8 FF7500                  	push qword [rbp]
 28214                                   ; restore the old rbp
 28215 00014CBB BB01000000              	mov rbx, 1
 28216 00014CC0 4883C303                	add rbx, 3
 28217 00014CC4 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28218 00014CC8 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28219 00014CCD 4C8D4DF8                	lea r9, [rbp - 8]
 28220 00014CD1 B905000000              	mov rcx, 5
 28221                                  .L_tc_recycle_frame_loop_00e8:
 28222 00014CD6 4883F900                	cmp rcx, 0
 28223 00014CDA 7413                    	je .L_tc_recycle_frame_done_00e8
 28224 00014CDC 4D8B11                  	mov r10, qword [r9]
 28225 00014CDF 4D8910                  	mov qword [r8], r10
 28226 00014CE2 4983E808                	sub r8, 8
 28227 00014CE6 4983E908                	sub r9, 8
 28228 00014CEA 48FFC9                  	dec rcx
 28229 00014CED EBE7                    	jmp .L_tc_recycle_frame_loop_00e8
 28230                                  .L_tc_recycle_frame_done_00e8:
 28231 00014CEF 498D6008                	lea rsp, [r8 + 8]
 28232 00014CF3 5D                      	pop rbp ; restore the old rbp
 28233 00014CF4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28234 00014CF7 C9                      	leave
 28235 00014CF8 C22000                  	ret AND_KILL_FRAME(2)
 28236                                  .L_lambda_simple_end_00b0:	; new closure is in rax
 28237 00014CFB 48890425[72140000]      	mov qword [free_var_100], rax
 28238 00014D03 48B8-                   	mov rax, sob_void
 28238 00014D05 [0000000000000000] 
 28239                                  
 28240 00014D0D 4889C7                  	mov rdi, rax
 28241 00014D10 E8F60F0000              	call print_sexpr_if_not_void
 28242 00014D15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28243 00014D1A E8970D0000              	call malloc
 28244 00014D1F 50                      	push rax
 28245 00014D20 BF00000000              	mov rdi, 8 * 0	; new rib
 28246 00014D25 E88C0D0000              	call malloc
 28247 00014D2A 50                      	push rax
 28248 00014D2B BF08000000              	mov rdi, 8 * 1	; extended env
 28249 00014D30 E8810D0000              	call malloc
 28250 00014D35 488B7D10                	mov rdi, ENV
 28251 00014D39 BE00000000              	mov rsi, 0
 28252 00014D3E BA01000000              	mov rdx, 1
 28253                                  .L_lambda_simple_env_loop_00b4:	; ext_env[i + 1] <-- env[i]
 28254 00014D43 4883FE00                	cmp rsi, 0
 28255 00014D47 7410                    	je .L_lambda_simple_env_end_00b4
 28256 00014D49 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28257 00014D4D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28258 00014D51 48FFC6                  	inc rsi
 28259 00014D54 48FFC2                  	inc rdx
 28260 00014D57 EBEA                    	jmp .L_lambda_simple_env_loop_00b4
 28261                                  .L_lambda_simple_env_end_00b4:
 28262 00014D59 5B                      	pop rbx
 28263 00014D5A BE00000000              	mov rsi, 0
 28264                                  .L_lambda_simple_params_loop_00b4:	; copy params
 28265 00014D5F 4883FE00                	cmp rsi, 0
 28266 00014D63 740E                    	je .L_lambda_simple_params_end_00b4
 28267 00014D65 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28268 00014D6A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28269 00014D6E 48FFC6                  	inc rsi
 28270 00014D71 EBEC                    	jmp .L_lambda_simple_params_loop_00b4
 28271                                  .L_lambda_simple_params_end_00b4:
 28272 00014D73 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28273 00014D76 4889C3                  	mov rbx, rax
 28274 00014D79 58                      	pop rax
 28275 00014D7A C60004                  	mov byte [rax], T_closure
 28276 00014D7D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28277 00014D81 48C74009[8E4D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b4
 28278 00014D89 E96E040000              	jmp .L_lambda_simple_end_00b4
 28279                                  .L_lambda_simple_code_00b4:	; lambda-simple body
 28280 00014D8E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28281 00014D94 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 28282 00014D96 FF742410                	push qword [rsp + 8 * 2]
 28283 00014D9A 6A02                    	push 2
 28284 00014D9C E9CE0C0000              	jmp L_error_incorrect_arity_simple
 28285                                  .L_lambda_simple_arity_check_ok_00b4:
 28286 00014DA1 C8000000                	enter 0, 0
 28287                                  	; preparing a tail-call
 28288                                  	; preparing a non-tail-call
 28289 00014DA5 488B4520                	mov rax, PARAM(0)	; param n
 28290 00014DA9 50                      	push rax
 28291 00014DAA 6A01                    	push 1	; arg count
 28292 00014DAC 488B0425[83140000]      	mov rax, qword [free_var_101]	; free var make-vector
 28293 00014DB4 803805                  	cmp byte [rax], T_undefined
 28294 00014DB7 0F84CC0B0000            	je L_error_fvar_undefined
 28295 00014DBD 803804                  	cmp byte [rax], T_closure
 28296 00014DC0 0F85470C0000            	jne L_error_non_closure
 28297 00014DC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28298 00014DC9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28299 00014DCC 50                      	push rax
 28300 00014DCD 6A01                    	push 1	; arg count
 28301 00014DCF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28302 00014DD4 E8DD0C0000              	call malloc
 28303 00014DD9 50                      	push rax
 28304 00014DDA BF10000000              	mov rdi, 8 * 2	; new rib
 28305 00014DDF E8D20C0000              	call malloc
 28306 00014DE4 50                      	push rax
 28307 00014DE5 BF10000000              	mov rdi, 8 * 2	; extended env
 28308 00014DEA E8C70C0000              	call malloc
 28309 00014DEF 488B7D10                	mov rdi, ENV
 28310 00014DF3 BE00000000              	mov rsi, 0
 28311 00014DF8 BA01000000              	mov rdx, 1
 28312                                  .L_lambda_simple_env_loop_00b5:	; ext_env[i + 1] <-- env[i]
 28313 00014DFD 4883FE01                	cmp rsi, 1
 28314 00014E01 7410                    	je .L_lambda_simple_env_end_00b5
 28315 00014E03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28316 00014E07 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28317 00014E0B 48FFC6                  	inc rsi
 28318 00014E0E 48FFC2                  	inc rdx
 28319 00014E11 EBEA                    	jmp .L_lambda_simple_env_loop_00b5
 28320                                  .L_lambda_simple_env_end_00b5:
 28321 00014E13 5B                      	pop rbx
 28322 00014E14 BE00000000              	mov rsi, 0
 28323                                  .L_lambda_simple_params_loop_00b5:	; copy params
 28324 00014E19 4883FE02                	cmp rsi, 2
 28325 00014E1D 740E                    	je .L_lambda_simple_params_end_00b5
 28326 00014E1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28327 00014E24 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28328 00014E28 48FFC6                  	inc rsi
 28329 00014E2B EBEC                    	jmp .L_lambda_simple_params_loop_00b5
 28330                                  .L_lambda_simple_params_end_00b5:
 28331 00014E2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28332 00014E30 4889C3                  	mov rbx, rax
 28333 00014E33 58                      	pop rax
 28334 00014E34 C60004                  	mov byte [rax], T_closure
 28335 00014E37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28336 00014E3B 48C74009[484E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b5
 28337 00014E43 E962030000              	jmp .L_lambda_simple_end_00b5
 28338                                  .L_lambda_simple_code_00b5:	; lambda-simple body
 28339 00014E48 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28340 00014E4E 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 28341 00014E50 FF742410                	push qword [rsp + 8 * 2]
 28342 00014E54 6A01                    	push 1
 28343 00014E56 E9140C0000              	jmp L_error_incorrect_arity_simple
 28344                                  .L_lambda_simple_arity_check_ok_00b5:
 28345 00014E5B C8000000                	enter 0, 0
 28346                                  	; preparing a tail-call
 28347 00014E5F 48B8-                   	mov rax, L_constants + 1993
 28347 00014E61 [C907000000000000] 
 28348 00014E69 50                      	push rax
 28349 00014E6A 6A01                    	push 1	; arg count
 28350 00014E6C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28351 00014E71 E8400C0000              	call malloc
 28352 00014E76 50                      	push rax
 28353 00014E77 BF08000000              	mov rdi, 8 * 1	; new rib
 28354 00014E7C E8350C0000              	call malloc
 28355 00014E81 50                      	push rax
 28356 00014E82 BF18000000              	mov rdi, 8 * 3	; extended env
 28357 00014E87 E82A0C0000              	call malloc
 28358 00014E8C 488B7D10                	mov rdi, ENV
 28359 00014E90 BE00000000              	mov rsi, 0
 28360 00014E95 BA01000000              	mov rdx, 1
 28361                                  .L_lambda_simple_env_loop_00b6:	; ext_env[i + 1] <-- env[i]
 28362 00014E9A 4883FE02                	cmp rsi, 2
 28363 00014E9E 7410                    	je .L_lambda_simple_env_end_00b6
 28364 00014EA0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28365 00014EA4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28366 00014EA8 48FFC6                  	inc rsi
 28367 00014EAB 48FFC2                  	inc rdx
 28368 00014EAE EBEA                    	jmp .L_lambda_simple_env_loop_00b6
 28369                                  .L_lambda_simple_env_end_00b6:
 28370 00014EB0 5B                      	pop rbx
 28371 00014EB1 BE00000000              	mov rsi, 0
 28372                                  .L_lambda_simple_params_loop_00b6:	; copy params
 28373 00014EB6 4883FE01                	cmp rsi, 1
 28374 00014EBA 740E                    	je .L_lambda_simple_params_end_00b6
 28375 00014EBC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28376 00014EC1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28377 00014EC5 48FFC6                  	inc rsi
 28378 00014EC8 EBEC                    	jmp .L_lambda_simple_params_loop_00b6
 28379                                  .L_lambda_simple_params_end_00b6:
 28380 00014ECA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28381 00014ECD 4889C3                  	mov rbx, rax
 28382 00014ED0 58                      	pop rax
 28383 00014ED1 C60004                  	mov byte [rax], T_closure
 28384 00014ED4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28385 00014ED8 48C74009[E54E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b6
 28386 00014EE0 E973020000              	jmp .L_lambda_simple_end_00b6
 28387                                  .L_lambda_simple_code_00b6:	; lambda-simple body
 28388 00014EE5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28389 00014EEB 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 28390 00014EED FF742410                	push qword [rsp + 8 * 2]
 28391 00014EF1 6A01                    	push 1
 28392 00014EF3 E9770B0000              	jmp L_error_incorrect_arity_simple
 28393                                  .L_lambda_simple_arity_check_ok_00b6:
 28394 00014EF8 C8000000                	enter 0, 0
 28395 00014EFC BF08000000              	mov rdi, 8*1
 28396 00014F01 E8B00B0000              	call malloc
 28397 00014F06 488B5D20                	mov rbx, PARAM(0)
 28398 00014F0A 488918                  	mov qword [rax], rbx
 28399 00014F0D 48894520                	mov PARAM(0), rax
 28400 00014F11 48B8-                   	mov rax, sob_void
 28400 00014F13 [0000000000000000] 
 28401                                  
 28402 00014F1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28403 00014F20 E8910B0000              	call malloc
 28404 00014F25 50                      	push rax
 28405 00014F26 BF08000000              	mov rdi, 8 * 1	; new rib
 28406 00014F2B E8860B0000              	call malloc
 28407 00014F30 50                      	push rax
 28408 00014F31 BF20000000              	mov rdi, 8 * 4	; extended env
 28409 00014F36 E87B0B0000              	call malloc
 28410 00014F3B 488B7D10                	mov rdi, ENV
 28411 00014F3F BE00000000              	mov rsi, 0
 28412 00014F44 BA01000000              	mov rdx, 1
 28413                                  .L_lambda_simple_env_loop_00b7:	; ext_env[i + 1] <-- env[i]
 28414 00014F49 4883FE03                	cmp rsi, 3
 28415 00014F4D 7410                    	je .L_lambda_simple_env_end_00b7
 28416 00014F4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28417 00014F53 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28418 00014F57 48FFC6                  	inc rsi
 28419 00014F5A 48FFC2                  	inc rdx
 28420 00014F5D EBEA                    	jmp .L_lambda_simple_env_loop_00b7
 28421                                  .L_lambda_simple_env_end_00b7:
 28422 00014F5F 5B                      	pop rbx
 28423 00014F60 BE00000000              	mov rsi, 0
 28424                                  .L_lambda_simple_params_loop_00b7:	; copy params
 28425 00014F65 4883FE01                	cmp rsi, 1
 28426 00014F69 740E                    	je .L_lambda_simple_params_end_00b7
 28427 00014F6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28428 00014F70 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28429 00014F74 48FFC6                  	inc rsi
 28430 00014F77 EBEC                    	jmp .L_lambda_simple_params_loop_00b7
 28431                                  .L_lambda_simple_params_end_00b7:
 28432 00014F79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28433 00014F7C 4889C3                  	mov rbx, rax
 28434 00014F7F 58                      	pop rax
 28435 00014F80 C60004                  	mov byte [rax], T_closure
 28436 00014F83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28437 00014F87 48C74009[944F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b7
 28438 00014F8F E94D010000              	jmp .L_lambda_simple_end_00b7
 28439                                  .L_lambda_simple_code_00b7:	; lambda-simple body
 28440 00014F94 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28441 00014F9A 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 28442 00014F9C FF742410                	push qword [rsp + 8 * 2]
 28443 00014FA0 6A01                    	push 1
 28444 00014FA2 E9C80A0000              	jmp L_error_incorrect_arity_simple
 28445                                  .L_lambda_simple_arity_check_ok_00b7:
 28446 00014FA7 C8000000                	enter 0, 0
 28447                                  	; preparing a non-tail-call
 28448 00014FAB 488B4510                	mov rax, ENV
 28449 00014FAF 488B4010                	mov rax, qword [rax + 8 * 2]
 28450 00014FB3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28451 00014FB6 50                      	push rax
 28452 00014FB7 488B4520                	mov rax, PARAM(0)	; param i
 28453 00014FBB 50                      	push rax
 28454 00014FBC 6A02                    	push 2	; arg count
 28455 00014FBE 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 28456 00014FC6 803805                  	cmp byte [rax], T_undefined
 28457 00014FC9 0F84BA090000            	je L_error_fvar_undefined
 28458 00014FCF 803804                  	cmp byte [rax], T_closure
 28459 00014FD2 0F85350A0000            	jne L_error_non_closure
 28460 00014FD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28461 00014FDB FF5009                  	call SOB_CLOSURE_CODE(rax)
 28462 00014FDE 483D[02000000]          	cmp rax, sob_boolean_false
 28463 00014FE4 0F84E8000000            	je .L_if_else_0085
 28464                                  	; preparing a non-tail-call
 28465                                  	; preparing a non-tail-call
 28466 00014FEA 488B4520                	mov rax, PARAM(0)	; param i
 28467 00014FEE 50                      	push rax
 28468 00014FEF 6A01                    	push 1	; arg count
 28469 00014FF1 488B4510                	mov rax, ENV
 28470 00014FF5 488B4010                	mov rax, qword [rax + 8 * 2]
 28471 00014FF9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28472 00014FFD 803804                  	cmp byte [rax], T_closure
 28473 00015000 0F85070A0000            	jne L_error_non_closure
 28474 00015006 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28475 00015009 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28476 0001500C 50                      	push rax
 28477 0001500D 488B4520                	mov rax, PARAM(0)	; param i
 28478 00015011 50                      	push rax
 28479 00015012 488B4510                	mov rax, ENV
 28480 00015016 488B4008                	mov rax, qword [rax + 8 * 1]
 28481 0001501A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28482 0001501D 50                      	push rax
 28483 0001501E 6A03                    	push 3	; arg count
 28484 00015020 488B0425[91170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 28485 00015028 803805                  	cmp byte [rax], T_undefined
 28486 0001502B 0F8458090000            	je L_error_fvar_undefined
 28487 00015031 803804                  	cmp byte [rax], T_closure
 28488 00015034 0F85D3090000            	jne L_error_non_closure
 28489 0001503A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28490 0001503D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28491                                  
 28492                                  	; preparing a tail-call
 28493                                  	; preparing a non-tail-call
 28494 00015040 48B8-                   	mov rax, L_constants + 2270
 28494 00015042 [DE08000000000000] 
 28495 0001504A 50                      	push rax
 28496 0001504B 488B4520                	mov rax, PARAM(0)	; param i
 28497 0001504F 50                      	push rax
 28498 00015050 6A02                    	push 2	; arg count
 28499 00015052 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 28500 0001505A 803805                  	cmp byte [rax], T_undefined
 28501 0001505D 0F8426090000            	je L_error_fvar_undefined
 28502 00015063 803804                  	cmp byte [rax], T_closure
 28503 00015066 0F85A1090000            	jne L_error_non_closure
 28504 0001506C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28505 0001506F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28506 00015072 50                      	push rax
 28507 00015073 6A01                    	push 1	; arg count
 28508 00015075 488B4510                	mov rax, ENV
 28509 00015079 488B00                  	mov rax, qword [rax + 8 * 0]
 28510 0001507C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28511 0001507F 488B00                  	mov rax, qword [rax]
 28512 00015082 803804                  	cmp byte [rax], T_closure
 28513 00015085 0F8582090000            	jne L_error_non_closure
 28514 0001508B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28515 0001508E FF7508                  	push qword [rbp + 8 * 1]
 28516                                   ; old ret addr
 28517 00015091 FF7500                  	push qword [rbp]
 28518                                   ; restore the old rbp
 28519 00015094 BB01000000              	mov rbx, 1
 28520 00015099 4883C303                	add rbx, 3
 28521 0001509D 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28522 000150A1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28523 000150A6 4C8D4DF8                	lea r9, [rbp - 8]
 28524 000150AA B905000000              	mov rcx, 5
 28525                                  .L_tc_recycle_frame_loop_00ee:
 28526 000150AF 4883F900                	cmp rcx, 0
 28527 000150B3 7413                    	je .L_tc_recycle_frame_done_00ee
 28528 000150B5 4D8B11                  	mov r10, qword [r9]
 28529 000150B8 4D8910                  	mov qword [r8], r10
 28530 000150BB 4983E808                	sub r8, 8
 28531 000150BF 4983E908                	sub r9, 8
 28532 000150C3 48FFC9                  	dec rcx
 28533 000150C6 EBE7                    	jmp .L_tc_recycle_frame_loop_00ee
 28534                                  .L_tc_recycle_frame_done_00ee:
 28535 000150C8 498D6008                	lea rsp, [r8 + 8]
 28536 000150CC 5D                      	pop rbp ; restore the old rbp
 28537 000150CD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28538 000150D0 EB0B                    	jmp .L_if_end_0085
 28539                                  .L_if_else_0085:
 28540 000150D2 488B4510                	mov rax, ENV
 28541 000150D6 488B4008                	mov rax, qword [rax + 8 * 1]
 28542 000150DA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28543                                  .L_if_end_0085:
 28544 000150DD C9                      	leave
 28545 000150DE C21800                  	ret AND_KILL_FRAME(1)
 28546                                  .L_lambda_simple_end_00b7:	; new closure is in rax
 28547 000150E1 50                      	push rax
 28548 000150E2 488B4520                	mov rax, PARAM(0)	; param run
 28549 000150E6 8F00                    	pop qword [rax]
 28550 000150E8 48B8-                   	mov rax, sob_void
 28550 000150EA [0000000000000000] 
 28551                                  
 28552                                  	; preparing a tail-call
 28553 000150F2 48B8-                   	mov rax, L_constants + 2135
 28553 000150F4 [5708000000000000] 
 28554 000150FC 50                      	push rax
 28555 000150FD 6A01                    	push 1	; arg count
 28556 000150FF 488B4520                	mov rax, PARAM(0)	; param run
 28557 00015103 488B00                  	mov rax, qword [rax]
 28558 00015106 803804                  	cmp byte [rax], T_closure
 28559 00015109 0F85FE080000            	jne L_error_non_closure
 28560 0001510F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28561 00015112 FF7508                  	push qword [rbp + 8 * 1]
 28562                                   ; old ret addr
 28563 00015115 FF7500                  	push qword [rbp]
 28564                                   ; restore the old rbp
 28565 00015118 BB01000000              	mov rbx, 1
 28566 0001511D 4883C303                	add rbx, 3
 28567 00015121 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28568 00015125 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28569 0001512A 4C8D4DF8                	lea r9, [rbp - 8]
 28570 0001512E B905000000              	mov rcx, 5
 28571                                  .L_tc_recycle_frame_loop_00ef:
 28572 00015133 4883F900                	cmp rcx, 0
 28573 00015137 7413                    	je .L_tc_recycle_frame_done_00ef
 28574 00015139 4D8B11                  	mov r10, qword [r9]
 28575 0001513C 4D8910                  	mov qword [r8], r10
 28576 0001513F 4983E808                	sub r8, 8
 28577 00015143 4983E908                	sub r9, 8
 28578 00015147 48FFC9                  	dec rcx
 28579 0001514A EBE7                    	jmp .L_tc_recycle_frame_loop_00ef
 28580                                  .L_tc_recycle_frame_done_00ef:
 28581 0001514C 498D6008                	lea rsp, [r8 + 8]
 28582 00015150 5D                      	pop rbp ; restore the old rbp
 28583 00015151 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28584 00015154 C9                      	leave
 28585 00015155 C21800                  	ret AND_KILL_FRAME(1)
 28586                                  .L_lambda_simple_end_00b6:	; new closure is in rax
 28587 00015158 803804                  	cmp byte [rax], T_closure
 28588 0001515B 0F85AC080000            	jne L_error_non_closure
 28589 00015161 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28590 00015164 FF7508                  	push qword [rbp + 8 * 1]
 28591                                   ; old ret addr
 28592 00015167 FF7500                  	push qword [rbp]
 28593                                   ; restore the old rbp
 28594 0001516A BB01000000              	mov rbx, 1
 28595 0001516F 4883C303                	add rbx, 3
 28596 00015173 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28597 00015177 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28598 0001517C 4C8D4DF8                	lea r9, [rbp - 8]
 28599 00015180 B905000000              	mov rcx, 5
 28600                                  .L_tc_recycle_frame_loop_00ed:
 28601 00015185 4883F900                	cmp rcx, 0
 28602 00015189 7413                    	je .L_tc_recycle_frame_done_00ed
 28603 0001518B 4D8B11                  	mov r10, qword [r9]
 28604 0001518E 4D8910                  	mov qword [r8], r10
 28605 00015191 4983E808                	sub r8, 8
 28606 00015195 4983E908                	sub r9, 8
 28607 00015199 48FFC9                  	dec rcx
 28608 0001519C EBE7                    	jmp .L_tc_recycle_frame_loop_00ed
 28609                                  .L_tc_recycle_frame_done_00ed:
 28610 0001519E 498D6008                	lea rsp, [r8 + 8]
 28611 000151A2 5D                      	pop rbp ; restore the old rbp
 28612 000151A3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28613 000151A6 C9                      	leave
 28614 000151A7 C21800                  	ret AND_KILL_FRAME(1)
 28615                                  .L_lambda_simple_end_00b5:	; new closure is in rax
 28616 000151AA 803804                  	cmp byte [rax], T_closure
 28617 000151AD 0F855A080000            	jne L_error_non_closure
 28618 000151B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28619 000151B6 FF7508                  	push qword [rbp + 8 * 1]
 28620                                   ; old ret addr
 28621 000151B9 FF7500                  	push qword [rbp]
 28622                                   ; restore the old rbp
 28623 000151BC BB01000000              	mov rbx, 1
 28624 000151C1 4883C303                	add rbx, 3
 28625 000151C5 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28626 000151C9 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28627 000151CE 4C8D4DF8                	lea r9, [rbp - 8]
 28628 000151D2 B905000000              	mov rcx, 5
 28629                                  .L_tc_recycle_frame_loop_00ec:
 28630 000151D7 4883F900                	cmp rcx, 0
 28631 000151DB 7413                    	je .L_tc_recycle_frame_done_00ec
 28632 000151DD 4D8B11                  	mov r10, qword [r9]
 28633 000151E0 4D8910                  	mov qword [r8], r10
 28634 000151E3 4983E808                	sub r8, 8
 28635 000151E7 4983E908                	sub r9, 8
 28636 000151EB 48FFC9                  	dec rcx
 28637 000151EE EBE7                    	jmp .L_tc_recycle_frame_loop_00ec
 28638                                  .L_tc_recycle_frame_done_00ec:
 28639 000151F0 498D6008                	lea rsp, [r8 + 8]
 28640 000151F4 5D                      	pop rbp ; restore the old rbp
 28641 000151F5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28642 000151F8 C9                      	leave
 28643 000151F9 C22000                  	ret AND_KILL_FRAME(2)
 28644                                  .L_lambda_simple_end_00b4:	; new closure is in rax
 28645 000151FC 48890425[94140000]      	mov qword [free_var_102], rax
 28646 00015204 48B8-                   	mov rax, sob_void
 28646 00015206 [0000000000000000] 
 28647                                  
 28648 0001520E 4889C7                  	mov rdi, rax
 28649 00015211 E8F50A0000              	call print_sexpr_if_not_void
 28650 00015216 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28651 0001521B E896080000              	call malloc
 28652 00015220 50                      	push rax
 28653 00015221 BF00000000              	mov rdi, 8 * 0	; new rib
 28654 00015226 E88B080000              	call malloc
 28655 0001522B 50                      	push rax
 28656 0001522C BF08000000              	mov rdi, 8 * 1	; extended env
 28657 00015231 E880080000              	call malloc
 28658 00015236 488B7D10                	mov rdi, ENV
 28659 0001523A BE00000000              	mov rsi, 0
 28660 0001523F BA01000000              	mov rdx, 1
 28661                                  .L_lambda_simple_env_loop_00b8:	; ext_env[i + 1] <-- env[i]
 28662 00015244 4883FE00                	cmp rsi, 0
 28663 00015248 7410                    	je .L_lambda_simple_env_end_00b8
 28664 0001524A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28665 0001524E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28666 00015252 48FFC6                  	inc rsi
 28667 00015255 48FFC2                  	inc rdx
 28668 00015258 EBEA                    	jmp .L_lambda_simple_env_loop_00b8
 28669                                  .L_lambda_simple_env_end_00b8:
 28670 0001525A 5B                      	pop rbx
 28671 0001525B BE00000000              	mov rsi, 0
 28672                                  .L_lambda_simple_params_loop_00b8:	; copy params
 28673 00015260 4883FE00                	cmp rsi, 0
 28674 00015264 740E                    	je .L_lambda_simple_params_end_00b8
 28675 00015266 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28676 0001526B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28677 0001526F 48FFC6                  	inc rsi
 28678 00015272 EBEC                    	jmp .L_lambda_simple_params_loop_00b8
 28679                                  .L_lambda_simple_params_end_00b8:
 28680 00015274 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28681 00015277 4889C3                  	mov rbx, rax
 28682 0001527A 58                      	pop rax
 28683 0001527B C60004                  	mov byte [rax], T_closure
 28684 0001527E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28685 00015282 48C74009[8F520100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b8
 28686 0001528A E96B020000              	jmp .L_lambda_simple_end_00b8
 28687                                  .L_lambda_simple_code_00b8:	; lambda-simple body
 28688 0001528F 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28689 00015295 740B                    	je .L_lambda_simple_arity_check_ok_00b8
 28690 00015297 FF742410                	push qword [rsp + 8 * 2]
 28691 0001529B 6A03                    	push 3
 28692 0001529D E9CD070000              	jmp L_error_incorrect_arity_simple
 28693                                  .L_lambda_simple_arity_check_ok_00b8:
 28694 000152A2 C8000000                	enter 0, 0
 28695                                  	; preparing a non-tail-call
 28696 000152A6 488B4530                	mov rax, PARAM(2)	; param n
 28697 000152AA 50                      	push rax
 28698 000152AB 6A01                    	push 1	; arg count
 28699 000152AD 488B0425[D5170000]      	mov rax, qword [free_var_151]	; free var zero?
 28700 000152B5 803805                  	cmp byte [rax], T_undefined
 28701 000152B8 0F84CB060000            	je L_error_fvar_undefined
 28702 000152BE 803804                  	cmp byte [rax], T_closure
 28703 000152C1 0F8546070000            	jne L_error_non_closure
 28704 000152C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28705 000152CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 28706 000152CD 483D[02000000]          	cmp rax, sob_boolean_false
 28707 000152D3 740F                    	je .L_if_else_0088
 28708 000152D5 48B8-                   	mov rax, L_constants + 3485
 28708 000152D7 [9D0D000000000000] 
 28709 000152DF E912020000              	jmp .L_if_end_0088
 28710                                  .L_if_else_0088:
 28711                                  	; preparing a non-tail-call
 28712 000152E4 488B4528                	mov rax, PARAM(1)	; param b
 28713 000152E8 50                      	push rax
 28714 000152E9 488B4520                	mov rax, PARAM(0)	; param a
 28715 000152ED 50                      	push rax
 28716 000152EE 6A02                    	push 2	; arg count
 28717 000152F0 488B0425[120E0000]      	mov rax, qword [free_var_4]	; free var <
 28718 000152F8 803805                  	cmp byte [rax], T_undefined
 28719 000152FB 0F8488060000            	je L_error_fvar_undefined
 28720 00015301 803804                  	cmp byte [rax], T_closure
 28721 00015304 0F8503070000            	jne L_error_non_closure
 28722 0001530A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28723 0001530D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28724 00015310 483D[02000000]          	cmp rax, sob_boolean_false
 28725 00015316 0F84CB000000            	je .L_if_else_0087
 28726                                  	; preparing a tail-call
 28727                                  	; preparing a non-tail-call
 28728 0001531C 488B4530                	mov rax, PARAM(2)	; param n
 28729 00015320 50                      	push rax
 28730                                  	; preparing a non-tail-call
 28731 00015321 488B4520                	mov rax, PARAM(0)	; param a
 28732 00015325 50                      	push rax
 28733 00015326 488B4528                	mov rax, PARAM(1)	; param b
 28734 0001532A 50                      	push rax
 28735 0001532B 6A02                    	push 2	; arg count
 28736 0001532D 488B0425[010E0000]      	mov rax, qword [free_var_3]	; free var /
 28737 00015335 803805                  	cmp byte [rax], T_undefined
 28738 00015338 0F844B060000            	je L_error_fvar_undefined
 28739 0001533E 803804                  	cmp byte [rax], T_closure
 28740 00015341 0F85C6060000            	jne L_error_non_closure
 28741 00015347 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28742 0001534A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28743 0001534D 50                      	push rax
 28744 0001534E 488B4520                	mov rax, PARAM(0)	; param a
 28745 00015352 50                      	push rax
 28746 00015353 6A03                    	push 3	; arg count
 28747 00015355 488B0425[3F140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28748 0001535D 803805                  	cmp byte [rax], T_undefined
 28749 00015360 0F8423060000            	je L_error_fvar_undefined
 28750 00015366 803804                  	cmp byte [rax], T_closure
 28751 00015369 0F859E060000            	jne L_error_non_closure
 28752 0001536F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28753 00015372 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28754 00015375 50                      	push rax
 28755 00015376 48B8-                   	mov rax, L_constants + 3485
 28755 00015378 [9D0D000000000000] 
 28756 00015380 50                      	push rax
 28757 00015381 6A02                    	push 2	; arg count
 28758 00015383 488B0425[DF0D0000]      	mov rax, qword [free_var_1]	; free var +
 28759 0001538B 803805                  	cmp byte [rax], T_undefined
 28760 0001538E 0F84F5050000            	je L_error_fvar_undefined
 28761 00015394 803804                  	cmp byte [rax], T_closure
 28762 00015397 0F8570060000            	jne L_error_non_closure
 28763 0001539D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28764 000153A0 FF7508                  	push qword [rbp + 8 * 1]
 28765                                   ; old ret addr
 28766 000153A3 FF7500                  	push qword [rbp]
 28767                                   ; restore the old rbp
 28768 000153A6 BB02000000              	mov rbx, 2
 28769 000153AB 4883C303                	add rbx, 3
 28770 000153AF 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28771 000153B3 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28772 000153B8 4C8D4DF8                	lea r9, [rbp - 8]
 28773 000153BC B906000000              	mov rcx, 6
 28774                                  .L_tc_recycle_frame_loop_00f0:
 28775 000153C1 4883F900                	cmp rcx, 0
 28776 000153C5 7413                    	je .L_tc_recycle_frame_done_00f0
 28777 000153C7 4D8B11                  	mov r10, qword [r9]
 28778 000153CA 4D8910                  	mov qword [r8], r10
 28779 000153CD 4983E808                	sub r8, 8
 28780 000153D1 4983E908                	sub r9, 8
 28781 000153D5 48FFC9                  	dec rcx
 28782 000153D8 EBE7                    	jmp .L_tc_recycle_frame_loop_00f0
 28783                                  .L_tc_recycle_frame_done_00f0:
 28784 000153DA 498D6008                	lea rsp, [r8 + 8]
 28785 000153DE 5D                      	pop rbp ; restore the old rbp
 28786 000153DF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28787 000153E2 E90F010000              	jmp .L_if_end_0087
 28788                                  .L_if_else_0087:
 28789                                  	; preparing a non-tail-call
 28790 000153E7 488B4528                	mov rax, PARAM(1)	; param b
 28791 000153EB 50                      	push rax
 28792 000153EC 488B4520                	mov rax, PARAM(0)	; param a
 28793 000153F0 50                      	push rax
 28794 000153F1 6A02                    	push 2	; arg count
 28795 000153F3 488B0425[340E0000]      	mov rax, qword [free_var_6]	; free var =
 28796 000153FB 803805                  	cmp byte [rax], T_undefined
 28797 000153FE 0F8485050000            	je L_error_fvar_undefined
 28798 00015404 803804                  	cmp byte [rax], T_closure
 28799 00015407 0F8500060000            	jne L_error_non_closure
 28800 0001540D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28801 00015410 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28802 00015413 483D[02000000]          	cmp rax, sob_boolean_false
 28803 00015419 740F                    	je .L_if_else_0086
 28804 0001541B 48B8-                   	mov rax, L_constants + 3485
 28804 0001541D [9D0D000000000000] 
 28805 00015425 E9CC000000              	jmp .L_if_end_0086
 28806                                  .L_if_else_0086:
 28807                                  	; preparing a tail-call
 28808                                  	; preparing a non-tail-call
 28809                                  	; preparing a non-tail-call
 28810 0001542A 48B8-                   	mov rax, L_constants + 2270
 28810 0001542C [DE08000000000000] 
 28811 00015434 50                      	push rax
 28812 00015435 488B4530                	mov rax, PARAM(2)	; param n
 28813 00015439 50                      	push rax
 28814 0001543A 6A02                    	push 2	; arg count
 28815 0001543C 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 28816 00015444 803805                  	cmp byte [rax], T_undefined
 28817 00015447 0F843C050000            	je L_error_fvar_undefined
 28818 0001544D 803804                  	cmp byte [rax], T_closure
 28819 00015450 0F85B7050000            	jne L_error_non_closure
 28820 00015456 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28821 00015459 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28822 0001545C 50                      	push rax
 28823 0001545D 488B4520                	mov rax, PARAM(0)	; param a
 28824 00015461 50                      	push rax
 28825 00015462 488B4528                	mov rax, PARAM(1)	; param b
 28826 00015466 50                      	push rax
 28827 00015467 6A03                    	push 3	; arg count
 28828 00015469 488B0425[3F140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28829 00015471 803805                  	cmp byte [rax], T_undefined
 28830 00015474 0F840F050000            	je L_error_fvar_undefined
 28831 0001547A 803804                  	cmp byte [rax], T_closure
 28832 0001547D 0F858A050000            	jne L_error_non_closure
 28833 00015483 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28834 00015486 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28835 00015489 50                      	push rax
 28836 0001548A 48B8-                   	mov rax, L_constants + 3485
 28836 0001548C [9D0D000000000000] 
 28837 00015494 50                      	push rax
 28838 00015495 6A02                    	push 2	; arg count
 28839 00015497 488B0425[010E0000]      	mov rax, qword [free_var_3]	; free var /
 28840 0001549F 803805                  	cmp byte [rax], T_undefined
 28841 000154A2 0F84E1040000            	je L_error_fvar_undefined
 28842 000154A8 803804                  	cmp byte [rax], T_closure
 28843 000154AB 0F855C050000            	jne L_error_non_closure
 28844 000154B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28845 000154B4 FF7508                  	push qword [rbp + 8 * 1]
 28846                                   ; old ret addr
 28847 000154B7 FF7500                  	push qword [rbp]
 28848                                   ; restore the old rbp
 28849 000154BA BB02000000              	mov rbx, 2
 28850 000154BF 4883C303                	add rbx, 3
 28851 000154C3 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28852 000154C7 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28853 000154CC 4C8D4DF8                	lea r9, [rbp - 8]
 28854 000154D0 B906000000              	mov rcx, 6
 28855                                  .L_tc_recycle_frame_loop_00f1:
 28856 000154D5 4883F900                	cmp rcx, 0
 28857 000154D9 7413                    	je .L_tc_recycle_frame_done_00f1
 28858 000154DB 4D8B11                  	mov r10, qword [r9]
 28859 000154DE 4D8910                  	mov qword [r8], r10
 28860 000154E1 4983E808                	sub r8, 8
 28861 000154E5 4983E908                	sub r9, 8
 28862 000154E9 48FFC9                  	dec rcx
 28863 000154EC EBE7                    	jmp .L_tc_recycle_frame_loop_00f1
 28864                                  .L_tc_recycle_frame_done_00f1:
 28865 000154EE 498D6008                	lea rsp, [r8 + 8]
 28866 000154F2 5D                      	pop rbp ; restore the old rbp
 28867 000154F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28868                                  .L_if_end_0086:
 28869                                  .L_if_end_0087:
 28870                                  .L_if_end_0088:
 28871 000154F6 C9                      	leave
 28872 000154F7 C22800                  	ret AND_KILL_FRAME(3)
 28873                                  .L_lambda_simple_end_00b8:	; new closure is in rax
 28874 000154FA 48890425[3F140000]      	mov qword [free_var_97], rax
 28875 00015502 48B8-                   	mov rax, sob_void
 28875 00015504 [0000000000000000] 
 28876                                  
 28877 0001550C 4889C7                  	mov rdi, rax
 28878 0001550F E8F7070000              	call print_sexpr_if_not_void
 28879 00015514 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28880 00015519 E898050000              	call malloc
 28881 0001551E 50                      	push rax
 28882 0001551F BF00000000              	mov rdi, 8 * 0	; new rib
 28883 00015524 E88D050000              	call malloc
 28884 00015529 50                      	push rax
 28885 0001552A BF08000000              	mov rdi, 8 * 1	; extended env
 28886 0001552F E882050000              	call malloc
 28887 00015534 488B7D10                	mov rdi, ENV
 28888 00015538 BE00000000              	mov rsi, 0
 28889 0001553D BA01000000              	mov rdx, 1
 28890                                  .L_lambda_simple_env_loop_00b9:	; ext_env[i + 1] <-- env[i]
 28891 00015542 4883FE00                	cmp rsi, 0
 28892 00015546 7410                    	je .L_lambda_simple_env_end_00b9
 28893 00015548 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28894 0001554C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28895 00015550 48FFC6                  	inc rsi
 28896 00015553 48FFC2                  	inc rdx
 28897 00015556 EBEA                    	jmp .L_lambda_simple_env_loop_00b9
 28898                                  .L_lambda_simple_env_end_00b9:
 28899 00015558 5B                      	pop rbx
 28900 00015559 BE00000000              	mov rsi, 0
 28901                                  .L_lambda_simple_params_loop_00b9:	; copy params
 28902 0001555E 4883FE00                	cmp rsi, 0
 28903 00015562 740E                    	je .L_lambda_simple_params_end_00b9
 28904 00015564 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28905 00015569 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28906 0001556D 48FFC6                  	inc rsi
 28907 00015570 EBEC                    	jmp .L_lambda_simple_params_loop_00b9
 28908                                  .L_lambda_simple_params_end_00b9:
 28909 00015572 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28910 00015575 4889C3                  	mov rbx, rax
 28911 00015578 58                      	pop rax
 28912 00015579 C60004                  	mov byte [rax], T_closure
 28913 0001557C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28914 00015580 48C74009[8D550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b9
 28915 00015588 E987000000              	jmp .L_lambda_simple_end_00b9
 28916                                  .L_lambda_simple_code_00b9:	; lambda-simple body
 28917 0001558D 48837C241000            	cmp qword [rsp + 8 * 2], 0
 28918 00015593 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 28919 00015595 FF742410                	push qword [rsp + 8 * 2]
 28920 00015599 6A00                    	push 0
 28921 0001559B E9CF040000              	jmp L_error_incorrect_arity_simple
 28922                                  .L_lambda_simple_arity_check_ok_00b9:
 28923 000155A0 C8000000                	enter 0, 0
 28924                                  	; preparing a tail-call
 28925 000155A4 48B8-                   	mov rax, L_constants + 3510
 28925 000155A6 [B60D000000000000] 
 28926 000155AE 50                      	push rax
 28927 000155AF 6A01                    	push 1	; arg count
 28928 000155B1 488B0425[C4170000]      	mov rax, qword [free_var_150]	; free var write-char
 28929 000155B9 803805                  	cmp byte [rax], T_undefined
 28930 000155BC 0F84C7030000            	je L_error_fvar_undefined
 28931 000155C2 803804                  	cmp byte [rax], T_closure
 28932 000155C5 0F8542040000            	jne L_error_non_closure
 28933 000155CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28934 000155CE FF7508                  	push qword [rbp + 8 * 1]
 28935                                   ; old ret addr
 28936 000155D1 FF7500                  	push qword [rbp]
 28937                                   ; restore the old rbp
 28938 000155D4 BB01000000              	mov rbx, 1
 28939 000155D9 4883C303                	add rbx, 3
 28940 000155DD 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 28941 000155E1 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 28942 000155E6 4C8D4DF8                	lea r9, [rbp - 8]
 28943 000155EA B905000000              	mov rcx, 5
 28944                                  .L_tc_recycle_frame_loop_00f2:
 28945 000155EF 4883F900                	cmp rcx, 0
 28946 000155F3 7413                    	je .L_tc_recycle_frame_done_00f2
 28947 000155F5 4D8B11                  	mov r10, qword [r9]
 28948 000155F8 4D8910                  	mov qword [r8], r10
 28949 000155FB 4983E808                	sub r8, 8
 28950 000155FF 4983E908                	sub r9, 8
 28951 00015603 48FFC9                  	dec rcx
 28952 00015606 EBE7                    	jmp .L_tc_recycle_frame_loop_00f2
 28953                                  .L_tc_recycle_frame_done_00f2:
 28954 00015608 498D6008                	lea rsp, [r8 + 8]
 28955 0001560C 5D                      	pop rbp ; restore the old rbp
 28956 0001560D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28957 00015610 C9                      	leave
 28958 00015611 C21000                  	ret AND_KILL_FRAME(0)
 28959                                  .L_lambda_simple_end_00b9:	; new closure is in rax
 28960 00015614 48890425[C7140000]      	mov qword [free_var_105], rax
 28961 0001561C 48B8-                   	mov rax, sob_void
 28961 0001561E [0000000000000000] 
 28962                                  
 28963 00015626 4889C7                  	mov rdi, rax
 28964 00015629 E8DD060000              	call print_sexpr_if_not_void
 28965 0001562E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28966 00015633 E87E040000              	call malloc
 28967 00015638 50                      	push rax
 28968 00015639 BF00000000              	mov rdi, 8 * 0	; new rib
 28969 0001563E E873040000              	call malloc
 28970 00015643 50                      	push rax
 28971 00015644 BF08000000              	mov rdi, 8 * 1	; extended env
 28972 00015649 E868040000              	call malloc
 28973 0001564E 488B7D10                	mov rdi, ENV
 28974 00015652 BE00000000              	mov rsi, 0
 28975 00015657 BA01000000              	mov rdx, 1
 28976                                  .L_lambda_simple_env_loop_00ba:	; ext_env[i + 1] <-- env[i]
 28977 0001565C 4883FE00                	cmp rsi, 0
 28978 00015660 7410                    	je .L_lambda_simple_env_end_00ba
 28979 00015662 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28980 00015666 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28981 0001566A 48FFC6                  	inc rsi
 28982 0001566D 48FFC2                  	inc rdx
 28983 00015670 EBEA                    	jmp .L_lambda_simple_env_loop_00ba
 28984                                  .L_lambda_simple_env_end_00ba:
 28985 00015672 5B                      	pop rbx
 28986 00015673 BE00000000              	mov rsi, 0
 28987                                  .L_lambda_simple_params_loop_00ba:	; copy params
 28988 00015678 4883FE00                	cmp rsi, 0
 28989 0001567C 740E                    	je .L_lambda_simple_params_end_00ba
 28990 0001567E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28991 00015683 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28992 00015687 48FFC6                  	inc rsi
 28993 0001568A EBEC                    	jmp .L_lambda_simple_params_loop_00ba
 28994                                  .L_lambda_simple_params_end_00ba:
 28995 0001568C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28996 0001568F 4889C3                  	mov rbx, rax
 28997 00015692 58                      	pop rax
 28998 00015693 C60004                  	mov byte [rax], T_closure
 28999 00015696 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29000 0001569A 48C74009[A4560100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ba
 29001 000156A2 EB25                    	jmp .L_lambda_simple_end_00ba
 29002                                  .L_lambda_simple_code_00ba:	; lambda-simple body
 29003 000156A4 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29004 000156AA 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 29005 000156AC FF742410                	push qword [rsp + 8 * 2]
 29006 000156B0 6A00                    	push 0
 29007 000156B2 E9B8030000              	jmp L_error_incorrect_arity_simple
 29008                                  .L_lambda_simple_arity_check_ok_00ba:
 29009 000156B7 C8000000                	enter 0, 0
 29010 000156BB 48B8-                   	mov rax, L_constants + 0
 29010 000156BD [0000000000000000] 
 29011 000156C5 C9                      	leave
 29012 000156C6 C21000                  	ret AND_KILL_FRAME(0)
 29013                                  .L_lambda_simple_end_00ba:	; new closure is in rax
 29014 000156C9 48890425[B3170000]      	mov qword [free_var_149], rax
 29015 000156D1 48B8-                   	mov rax, sob_void
 29015 000156D3 [0000000000000000] 
 29016                                  
 29017 000156DB 4889C7                  	mov rdi, rax
 29018 000156DE E828060000              	call print_sexpr_if_not_void
 29019                                  	; preparing a non-tail-call
 29020 000156E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29021 000156E8 E8C9030000              	call malloc
 29022 000156ED 50                      	push rax
 29023 000156EE BF00000000              	mov rdi, 8 * 0	; new rib
 29024 000156F3 E8BE030000              	call malloc
 29025 000156F8 50                      	push rax
 29026 000156F9 BF08000000              	mov rdi, 8 * 1	; extended env
 29027 000156FE E8B3030000              	call malloc
 29028 00015703 488B7D10                	mov rdi, ENV
 29029 00015707 BE00000000              	mov rsi, 0
 29030 0001570C BA01000000              	mov rdx, 1
 29031                                  .L_lambda_simple_env_loop_00bb:	; ext_env[i + 1] <-- env[i]
 29032 00015711 4883FE00                	cmp rsi, 0
 29033 00015715 7410                    	je .L_lambda_simple_env_end_00bb
 29034 00015717 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29035 0001571B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29036 0001571F 48FFC6                  	inc rsi
 29037 00015722 48FFC2                  	inc rdx
 29038 00015725 EBEA                    	jmp .L_lambda_simple_env_loop_00bb
 29039                                  .L_lambda_simple_env_end_00bb:
 29040 00015727 5B                      	pop rbx
 29041 00015728 BE00000000              	mov rsi, 0
 29042                                  .L_lambda_simple_params_loop_00bb:	; copy params
 29043 0001572D 4883FE00                	cmp rsi, 0
 29044 00015731 740E                    	je .L_lambda_simple_params_end_00bb
 29045 00015733 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29046 00015738 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29047 0001573C 48FFC6                  	inc rsi
 29048 0001573F EBEC                    	jmp .L_lambda_simple_params_loop_00bb
 29049                                  .L_lambda_simple_params_end_00bb:
 29050 00015741 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29051 00015744 4889C3                  	mov rbx, rax
 29052 00015747 58                      	pop rax
 29053 00015748 C60004                  	mov byte [rax], T_closure
 29054 0001574B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29055 0001574F 48C74009[5C570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bb
 29056 00015757 E9E5000000              	jmp .L_lambda_simple_end_00bb
 29057                                  .L_lambda_simple_code_00bb:	; lambda-simple body
 29058 0001575C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29059 00015762 740B                    	je .L_lambda_simple_arity_check_ok_00bb
 29060 00015764 FF742410                	push qword [rsp + 8 * 2]
 29061 00015768 6A02                    	push 2
 29062 0001576A E900030000              	jmp L_error_incorrect_arity_simple
 29063                                  .L_lambda_simple_arity_check_ok_00bb:
 29064 0001576F C8000000                	enter 0, 0
 29065                                  	; preparing a non-tail-call
 29066 00015773 488B4528                	mov rax, PARAM(1)	; param n
 29067 00015777 50                      	push rax
 29068 00015778 6A01                    	push 1	; arg count
 29069 0001577A 488B0425[D5170000]      	mov rax, qword [free_var_151]	; free var zero?
 29070 00015782 803805                  	cmp byte [rax], T_undefined
 29071 00015785 0F84FE010000            	je L_error_fvar_undefined
 29072 0001578B 803804                  	cmp byte [rax], T_closure
 29073 0001578E 0F8579020000            	jne L_error_non_closure
 29074 00015794 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29075 00015797 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29076 0001579A 483D[02000000]          	cmp rax, sob_boolean_false
 29077 000157A0 740F                    	je .L_if_else_0089
 29078 000157A2 48B8-                   	mov rax, L_constants + 3
 29078 000157A4 [0300000000000000] 
 29079 000157AC E98C000000              	jmp .L_if_end_0089
 29080                                  .L_if_else_0089:
 29081                                  	; preparing a tail-call
 29082                                  	; preparing a non-tail-call
 29083 000157B1 48B8-                   	mov rax, L_constants + 2270
 29083 000157B3 [DE08000000000000] 
 29084 000157BB 50                      	push rax
 29085 000157BC 488B4528                	mov rax, PARAM(1)	; param n
 29086 000157C0 50                      	push rax
 29087 000157C1 6A02                    	push 2	; arg count
 29088 000157C3 488B0425[F00D0000]      	mov rax, qword [free_var_2]	; free var -
 29089 000157CB 803805                  	cmp byte [rax], T_undefined
 29090 000157CE 0F84B5010000            	je L_error_fvar_undefined
 29091 000157D4 803804                  	cmp byte [rax], T_closure
 29092 000157D7 0F8530020000            	jne L_error_non_closure
 29093 000157DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 29094 000157E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29095 000157E3 50                      	push rax
 29096 000157E4 488B4520                	mov rax, PARAM(0)	; param x
 29097 000157E8 50                      	push rax
 29098 000157E9 6A02                    	push 2	; arg count
 29099 000157EB 488B4520                	mov rax, PARAM(0)	; param x
 29100 000157EF 803804                  	cmp byte [rax], T_closure
 29101 000157F2 0F8515020000            	jne L_error_non_closure
 29102 000157F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29103 000157FB FF7508                  	push qword [rbp + 8 * 1]
 29104                                   ; old ret addr
 29105 000157FE FF7500                  	push qword [rbp]
 29106                                   ; restore the old rbp
 29107 00015801 BB02000000              	mov rbx, 2
 29108 00015806 4883C303                	add rbx, 3
 29109 0001580A 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29110 0001580E 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29111 00015813 4C8D4DF8                	lea r9, [rbp - 8]
 29112 00015817 B906000000              	mov rcx, 6
 29113                                  .L_tc_recycle_frame_loop_00f3:
 29114 0001581C 4883F900                	cmp rcx, 0
 29115 00015820 7413                    	je .L_tc_recycle_frame_done_00f3
 29116 00015822 4D8B11                  	mov r10, qword [r9]
 29117 00015825 4D8910                  	mov qword [r8], r10
 29118 00015828 4983E808                	sub r8, 8
 29119 0001582C 4983E908                	sub r9, 8
 29120 00015830 48FFC9                  	dec rcx
 29121 00015833 EBE7                    	jmp .L_tc_recycle_frame_loop_00f3
 29122                                  .L_tc_recycle_frame_done_00f3:
 29123 00015835 498D6008                	lea rsp, [r8 + 8]
 29124 00015839 5D                      	pop rbp ; restore the old rbp
 29125 0001583A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29126                                  .L_if_end_0089:
 29127 0001583D C9                      	leave
 29128 0001583E C22000                  	ret AND_KILL_FRAME(2)
 29129                                  .L_lambda_simple_end_00bb:	; new closure is in rax
 29130 00015841 50                      	push rax
 29131 00015842 6A01                    	push 1	; arg count
 29132 00015844 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29133 00015849 E868020000              	call malloc
 29134 0001584E 50                      	push rax
 29135 0001584F BF00000000              	mov rdi, 8 * 0	; new rib
 29136 00015854 E85D020000              	call malloc
 29137 00015859 50                      	push rax
 29138 0001585A BF08000000              	mov rdi, 8 * 1	; extended env
 29139 0001585F E852020000              	call malloc
 29140 00015864 488B7D10                	mov rdi, ENV
 29141 00015868 BE00000000              	mov rsi, 0
 29142 0001586D BA01000000              	mov rdx, 1
 29143                                  .L_lambda_simple_env_loop_00bc:	; ext_env[i + 1] <-- env[i]
 29144 00015872 4883FE00                	cmp rsi, 0
 29145 00015876 7410                    	je .L_lambda_simple_env_end_00bc
 29146 00015878 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29147 0001587C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29148 00015880 48FFC6                  	inc rsi
 29149 00015883 48FFC2                  	inc rdx
 29150 00015886 EBEA                    	jmp .L_lambda_simple_env_loop_00bc
 29151                                  .L_lambda_simple_env_end_00bc:
 29152 00015888 5B                      	pop rbx
 29153 00015889 BE00000000              	mov rsi, 0
 29154                                  .L_lambda_simple_params_loop_00bc:	; copy params
 29155 0001588E 4883FE00                	cmp rsi, 0
 29156 00015892 740E                    	je .L_lambda_simple_params_end_00bc
 29157 00015894 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29158 00015899 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29159 0001589D 48FFC6                  	inc rsi
 29160 000158A0 EBEC                    	jmp .L_lambda_simple_params_loop_00bc
 29161                                  .L_lambda_simple_params_end_00bc:
 29162 000158A2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29163 000158A5 4889C3                  	mov rbx, rax
 29164 000158A8 58                      	pop rax
 29165 000158A9 C60004                  	mov byte [rax], T_closure
 29166 000158AC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29167 000158B0 48C74009[BD580100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bc
 29168 000158B8 E97F000000              	jmp .L_lambda_simple_end_00bc
 29169                                  .L_lambda_simple_code_00bc:	; lambda-simple body
 29170 000158BD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29171 000158C3 740B                    	je .L_lambda_simple_arity_check_ok_00bc
 29172 000158C5 FF742410                	push qword [rsp + 8 * 2]
 29173 000158C9 6A01                    	push 1
 29174 000158CB E99F010000              	jmp L_error_incorrect_arity_simple
 29175                                  .L_lambda_simple_arity_check_ok_00bc:
 29176 000158D0 C8000000                	enter 0, 0
 29177                                  	; preparing a tail-call
 29178 000158D4 48B8-                   	mov rax, L_constants + 3525
 29178 000158D6 [C50D000000000000] 
 29179 000158DE 50                      	push rax
 29180 000158DF 488B4520                	mov rax, PARAM(0)	; param x
 29181 000158E3 50                      	push rax
 29182 000158E4 6A02                    	push 2	; arg count
 29183 000158E6 488B4520                	mov rax, PARAM(0)	; param x
 29184 000158EA 803804                  	cmp byte [rax], T_closure
 29185 000158ED 0F851A010000            	jne L_error_non_closure
 29186 000158F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29187 000158F6 FF7508                  	push qword [rbp + 8 * 1]
 29188                                   ; old ret addr
 29189 000158F9 FF7500                  	push qword [rbp]
 29190                                   ; restore the old rbp
 29191 000158FC BB02000000              	mov rbx, 2
 29192 00015901 4883C303                	add rbx, 3
 29193 00015905 4C8B4D18                	mov r9, qword [rbp + 8 * 3]
 29194 00015909 4E8D44CD18              	lea r8, [rbp + 8 * 3 + 8 * r9]
 29195 0001590E 4C8D4DF8                	lea r9, [rbp - 8]
 29196 00015912 B906000000              	mov rcx, 6
 29197                                  .L_tc_recycle_frame_loop_00f4:
 29198 00015917 4883F900                	cmp rcx, 0
 29199 0001591B 7413                    	je .L_tc_recycle_frame_done_00f4
 29200 0001591D 4D8B11                  	mov r10, qword [r9]
 29201 00015920 4D8910                  	mov qword [r8], r10
 29202 00015923 4983E808                	sub r8, 8
 29203 00015927 4983E908                	sub r9, 8
 29204 0001592B 48FFC9                  	dec rcx
 29205 0001592E EBE7                    	jmp .L_tc_recycle_frame_loop_00f4
 29206                                  .L_tc_recycle_frame_done_00f4:
 29207 00015930 498D6008                	lea rsp, [r8 + 8]
 29208 00015934 5D                      	pop rbp ; restore the old rbp
 29209 00015935 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29210 00015938 C9                      	leave
 29211 00015939 C21800                  	ret AND_KILL_FRAME(1)
 29212                                  .L_lambda_simple_end_00bc:	; new closure is in rax
 29213 0001593C 803804                  	cmp byte [rax], T_closure
 29214 0001593F 0F85C8000000            	jne L_error_non_closure
 29215 00015945 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29216 00015948 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29217                                  Lend:
 29218 0001594B 4889C7                  	mov rdi, rax
 29219 0001594E E8B8030000              	call print_sexpr_if_not_void
 29220                                  
 29221 00015953 48BF-                           mov rdi, fmt_memory_usage
 29221 00015955 [7E18000000000000] 
 29222 0001595D 488B3425[04190000]              mov rsi, qword [top_of_memory]
 29223 00015965 4881EE[00000000]                sub rsi, memory
 29224 0001596C B800000000                      mov rax, 0
 29225                                          ENTER
    44 00015971 C8000000            <1>  enter 0, 0
    45 00015975 4883E4F0            <1>  and rsp, ~15
 29226 00015979 E8(00000000)                    call printf
 29227                                          LEAVE
    49 0001597E C9                  <1>  leave
 29228 0001597F B800000000                      mov rax, 0
 29229 00015984 E8(00000000)                    call exit
 29230                                  
 29231                                  L_error_fvar_undefined:
 29232 00015989 50                              push rax
 29233 0001598A 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 29234 00015992 48BE-                           mov rsi, fmt_undefined_free_var_1
 29234 00015994 [E617000000000000] 
 29235 0001599C B800000000                      mov rax, 0
 29236                                          ENTER
    44 000159A1 C8000000            <1>  enter 0, 0
    45 000159A5 4883E4F0            <1>  and rsp, ~15
 29237 000159A9 E8(00000000)                    call fprintf
 29238                                          LEAVE
    49 000159AE C9                  <1>  leave
 29239 000159AF 58                              pop rax
 29240 000159B0 488B4001                        mov rax, qword [rax + 1] ; string
 29241 000159B4 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 29242 000159B8 BE01000000                      mov rsi, 1               ; sizeof(char)
 29243 000159BD 488B5001                        mov rdx, qword [rax + 1] ; string-length
 29244 000159C1 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 29245 000159C9 B800000000                      mov rax, 0
 29246                                          ENTER
    44 000159CE C8000000            <1>  enter 0, 0
    45 000159D2 4883E4F0            <1>  and rsp, ~15
 29247 000159D6 E8(00000000)                    call fwrite
 29248                                          LEAVE
    49 000159DB C9                  <1>  leave
 29249 000159DC 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 29250 000159E4 48BE-                           mov rsi, fmt_undefined_free_var_2
 29250 000159E6 [FD17000000000000] 
 29251 000159EE B800000000                      mov rax, 0
 29252                                          ENTER
    44 000159F3 C8000000            <1>  enter 0, 0
    45 000159F7 4883E4F0            <1>  and rsp, ~15
 29253 000159FB E8(00000000)                    call fprintf
 29254                                          LEAVE
    49 00015A00 C9                  <1>  leave
 29255 00015A01 48C7C0F6FFFFFF                  mov rax, -10
 29256 00015A08 E8(00000000)                    call exit
 29257                                  
 29258                                  L_error_non_closure:
 29259 00015A0D 488B3C25[00000000]              mov rdi, qword [stderr]
 29260 00015A15 48BE-                           mov rsi, fmt_non_closure
 29260 00015A17 [B418000000000000] 
 29261 00015A1F B800000000                      mov rax, 0
 29262                                          ENTER
    44 00015A24 C8000000            <1>  enter 0, 0
    45 00015A28 4883E4F0            <1>  and rsp, ~15
 29263 00015A2C E8(00000000)                    call fprintf
 29264                                          LEAVE
    49 00015A31 C9                  <1>  leave
 29265 00015A32 48C7C0FEFFFFFF                  mov rax, -2
 29266 00015A39 E8(00000000)                    call exit
 29267                                  
 29268                                  L_error_improper_list:
 29269 00015A3E 488B3C25[00000000]      	mov rdi, qword [stderr]
 29270 00015A46 48BE-                   	mov rsi, fmt_error_improper_list
 29270 00015A48 [DC18000000000000] 
 29271 00015A50 B800000000              	mov rax, 0
 29272                                          ENTER
    44 00015A55 C8000000            <1>  enter 0, 0
    45 00015A59 4883E4F0            <1>  and rsp, ~15
 29273 00015A5D E8(00000000)            	call fprintf
 29274                                          LEAVE
    49 00015A62 C9                  <1>  leave
 29275 00015A63 48C7C0F9FFFFFF          	mov rax, -7
 29276 00015A6A E8(00000000)            	call exit
 29277                                  
 29278                                  L_error_incorrect_arity_simple:
 29279 00015A6F 488B3C25[00000000]              mov rdi, qword [stderr]
 29280 00015A77 48BE-                           mov rsi, fmt_incorrect_arity_simple
 29280 00015A79 [1F18000000000000] 
 29281 00015A81 EB12                            jmp L_error_incorrect_arity_common
 29282                                  L_error_incorrect_arity_opt:
 29283 00015A83 488B3C25[00000000]              mov rdi, qword [stderr]
 29284 00015A8B 48BE-                           mov rsi, fmt_incorrect_arity_opt
 29284 00015A8D [4A18000000000000] 
 29285                                  L_error_incorrect_arity_common:
 29286 00015A95 5A                              pop rdx
 29287 00015A96 59                              pop rcx
 29288 00015A97 B800000000                      mov rax, 0
 29289                                          ENTER
    44 00015A9C C8000000            <1>  enter 0, 0
    45 00015AA0 4883E4F0            <1>  and rsp, ~15
 29290 00015AA4 E8(00000000)                    call fprintf
 29291                                          LEAVE
    49 00015AA9 C9                  <1>  leave
 29292 00015AAA 48C7C0FAFFFFFF                  mov rax, -6
 29293 00015AB1 E8(00000000)                    call exit
 29294                                  
 29295                                  section .data
 29296                                  fmt_undefined_free_var_1:
 29297 000017E6 212121205468652066-             db `!!! The free variable \0`
 29297 000017EF 726565207661726961-
 29297 000017F8 626C652000         
 29298                                  fmt_undefined_free_var_2:
 29299 000017FD 207761732075736564-             db ` was used before it was defined.\n\0`
 29299 00001806 206265666F72652069-
 29299 0000180F 742077617320646566-
 29299 00001818 696E65642E0A00     
 29300                                  fmt_incorrect_arity_simple:
 29301 0000181F 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 29301 00001828 74656420256C642061-
 29301 00001831 7267756D656E74732C-
 29301 0000183A 206275742067697665-
 29301 00001843 6E20256C640A00     
 29302                                  fmt_incorrect_arity_opt:
 29303 0000184A 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 29303 00001853 746564206174206C65-
 29303 0000185C 61737420256C642061-
 29303 00001865 7267756D656E74732C-
 29303 0000186E 206275742067697665-
 29303 00001877 6E20256C640A00     
 29304                                  fmt_memory_usage:
 29305 0000187E 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 29305 00001887 20256C642062797465-
 29305 00001890 73206F662064796E61-
 29305 00001899 6D6963616C6C792D61-
 29305 000018A2 6C6C6F636174656420-
 29305 000018AB 6D656D6F72790A0A00 
 29306                                  fmt_non_closure:
 29307 000018B4 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 29307 000018BD 7074696E6720746F20-
 29307 000018C6 6170706C792061206E-
 29307 000018CF 6F6E2D636C6F737572-
 29307 000018D8 65210A00           
 29308                                  fmt_error_improper_list:
 29309 000018DC 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 29309 000018E5 7267756D656E742069-
 29309 000018EE 73206E6F7420612070-
 29309 000018F7 726F706572206C6973-
 29309 00001900 74210A00           
 29310                                  
 29311                                  section .bss
 29312                                  memory:
 29313 00000000 <res 40000000h>         	resb gbytes(1)
 29314                                  
 29315                                  section .data
 29316                                  top_of_memory:
 29317 00001904 [0000000000000000]              dq memory
 29318                                  
 29319                                  section .text
 29320                                  malloc:
 29321 00015AB6 488B0425[04190000]              mov rax, qword [top_of_memory]
 29322 00015ABE 48013C25[04190000]              add qword [top_of_memory], rdi
 29323 00015AC6 C3                              ret
 29324                                  
 29325                                  L_code_ptr_return:
 29326 00015AC7 48837C241002            	cmp qword [rsp + 8*2], 2
 29327 00015ACD 0F85E51C0000            	jne L_error_arg_count_2
 29328 00015AD3 488B4C2418              	mov rcx, qword [rsp + 8*3]
 29329                                  	assert_integer(rcx)
    53 00015AD8 803911              <1>  cmp byte [%1], %2
    54 00015ADB 0F85761D0000        <1>  jne L_error_incorrect_type
 29330 00015AE1 488B4901                	mov rcx, qword [rcx + 1]
 29331 00015AE5 4883F900                	cmp rcx, 0
 29332 00015AE9 0F8CFD1B0000            	jl L_error_integer_range
 29333 00015AEF 488B442420              	mov rax, qword [rsp + 8*4]
 29334                                  .L0:
 29335 00015AF4 4883F900                        cmp rcx, 0
 29336 00015AF8 7409                            je .L1
 29337 00015AFA 488B6D00                	mov rbp, qword [rbp]
 29338 00015AFE 48FFC9                  	dec rcx
 29339 00015B01 7FF1                    	jg .L0
 29340                                  .L1:
 29341 00015B03 4889EC                  	mov rsp, rbp
 29342 00015B06 5D                      	pop rbp
 29343 00015B07 5B                              pop rbx
 29344 00015B08 488B4C2408                      mov rcx, qword [rsp + 8*1]
 29345 00015B0D 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 29346 00015B12 FFE3                    	jmp rbx
 29347                                  
 29348                                  L_code_ptr_make_list:
 29349 00015B14 C8000000                	enter 0, 0
 29350 00015B18 48837D1801                      cmp COUNT, 1
 29351 00015B1D 740C                            je .L0
 29352 00015B1F 48837D1802                      cmp COUNT, 2
 29353 00015B24 7411                            je .L1
 29354 00015B26 E9C21C0000                      jmp L_error_arg_count_12
 29355                                  .L0:
 29356 00015B2B 49B9-                           mov r9, sob_void
 29356 00015B2D [0000000000000000] 
 29357 00015B35 EB04                            jmp .L2
 29358                                  .L1:
 29359 00015B37 4C8B4D28                        mov r9, PARAM(1)
 29360                                  .L2:
 29361 00015B3B 488B4D20                        mov rcx, PARAM(0)
 29362                                          assert_integer(rcx)
    53 00015B3F 803911              <1>  cmp byte [%1], %2
    54 00015B42 0F850F1D0000        <1>  jne L_error_incorrect_type
 29363 00015B48 488B4901                        mov rcx, qword [rcx + 1]
 29364 00015B4C 4883F900                        cmp rcx, 0
 29365 00015B50 0F8CC71B0000                    jl L_error_arg_negative
 29366 00015B56 49B8-                           mov r8, sob_nil
 29366 00015B58 [0100000000000000] 
 29367                                  .L3:
 29368 00015B60 4883F900                        cmp rcx, 0
 29369 00015B64 7E1D                            jle .L4
 29370 00015B66 BF11000000                      mov rdi, 1 + 8 + 8
 29371 00015B6B E846FFFFFF                      call malloc
 29372 00015B70 C60021                          mov byte [rax], T_pair
 29373 00015B73 4C894801                        mov qword [rax + 1], r9
 29374 00015B77 4C894009                        mov qword [rax + 1 + 8], r8
 29375 00015B7B 4989C0                          mov r8, rax
 29376 00015B7E 48FFC9                          dec rcx
 29377 00015B81 EBDD                            jmp .L3
 29378                                  .L4:
 29379 00015B83 4C89C0                          mov rax, r8
 29380 00015B86 48837D1802                      cmp COUNT, 2
 29381 00015B8B 7404                            je .L5
 29382 00015B8D C9                              leave
 29383 00015B8E C21800                          ret AND_KILL_FRAME(1)
 29384                                  .L5:
 29385 00015B91 C9                      	leave
 29386 00015B92 C22000                  	ret AND_KILL_FRAME(2)
 29387                                  
 29388                                  L_code_ptr_is_primitive:
 29389 00015B95 C8000000                	enter 0, 0
 29390 00015B99 48837D1801              	cmp COUNT, 1
 29391 00015B9E 0F85DF1B0000            	jne L_error_arg_count_1
 29392 00015BA4 488B4520                	mov rax, PARAM(0)
 29393                                  	assert_closure(rax)
    53 00015BA8 803804              <1>  cmp byte [%1], %2
    54 00015BAB 0F85A61C0000        <1>  jne L_error_incorrect_type
 29394 00015BB1 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 29395 00015BB6 750C                    	jne .L_false
 29396 00015BB8 48B8-                   	mov rax, sob_boolean_true
 29396 00015BBA [0300000000000000] 
 29397 00015BC2 EB0A                    	jmp .L_end
 29398                                  .L_false:
 29399 00015BC4 48B8-                   	mov rax, sob_boolean_false
 29399 00015BC6 [0200000000000000] 
 29400                                  .L_end:
 29401 00015BCE C9                      	leave
 29402 00015BCF C21800                  	ret AND_KILL_FRAME(1)
 29403                                  
 29404                                  L_code_ptr_length:
 29405 00015BD2 C8000000                	enter 0, 0
 29406 00015BD6 48837D1801              	cmp COUNT, 1
 29407 00015BDB 0F85A21B0000            	jne L_error_arg_count_1
 29408 00015BE1 488B5D20                	mov rbx, PARAM(0)
 29409 00015BE5 BF00000000              	mov rdi, 0
 29410                                  .L:
 29411 00015BEA 803B01                  	cmp byte [rbx], T_nil
 29412 00015BED 7412                    	je .L_end
 29413                                  	assert_pair(rbx)
    53 00015BEF 803B21              <1>  cmp byte [%1], %2
    54 00015BF2 0F855F1C0000        <1>  jne L_error_incorrect_type
 29414 00015BF8 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 29415 00015BFC 48FFC7                  	inc rdi
 29416 00015BFF EBE9                    	jmp .L
 29417                                  .L_end:
 29418 00015C01 E8CC1A0000              	call make_integer
 29419 00015C06 C9                      	leave
 29420 00015C07 C21800                  	ret AND_KILL_FRAME(1)
 29421                                  
 29422                                  L_code_ptr_break:
 29423 00015C0A 48837C241000                    cmp qword [rsp + 8 * 2], 0
 29424 00015C10 0F85381B0000                    jne L_error_arg_count_0
 29425 00015C16 CC                              int3
 29426 00015C17 48B8-                           mov rax, sob_void
 29426 00015C19 [0000000000000000] 
 29427 00015C21 C21000                          ret AND_KILL_FRAME(0)        
 29428                                  
 29429                                  L_code_ptr_frame:
 29430 00015C24 C8000000                        enter 0, 0
 29431 00015C28 48837D1800                      cmp COUNT, 0
 29432 00015C2D 0F851B1B0000                    jne L_error_arg_count_0
 29433                                  
 29434 00015C33 48BF-                           mov rdi, fmt_frame
 29434 00015C35 [0C19000000000000] 
 29435 00015C3D 488B7500                        mov rsi, qword [rbp]    ; old rbp
 29436 00015C41 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 29437 00015C45 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 29438 00015C49 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 29439 00015C4D 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 29440 00015C51 6A00                            push 0
 29441 00015C53 4151                            push r9
 29442 00015C55 4150                            push r8                   ; we'll use it when printing the params
 29443 00015C57 B800000000                      mov rax, 0
 29444                                          
 29445                                          ENTER
    44 00015C5C C8000000            <1>  enter 0, 0
    45 00015C60 4883E4F0            <1>  and rsp, ~15
 29446 00015C64 E8(00000000)                    call printf
 29447                                          LEAVE
    49 00015C69 C9                  <1>  leave
 29448                                  
 29449                                  .L:
 29450 00015C6A 488B0C24                        mov rcx, qword [rsp]
 29451 00015C6E 4883F900                        cmp rcx, 0
 29452 00015C72 7467                            je .L_out
 29453 00015C74 48BF-                           mov rdi, fmt_frame_param_prefix
 29453 00015C76 [4519000000000000] 
 29454 00015C7E 488B742410                      mov rsi, qword [rsp + 8*2]
 29455 00015C83 B800000000                      mov rax, 0
 29456                                          
 29457                                          ENTER
    44 00015C88 C8000000            <1>  enter 0, 0
    45 00015C8C 4883E4F0            <1>  and rsp, ~15
 29458 00015C90 E8(00000000)                    call printf
 29459                                          LEAVE
    49 00015C95 C9                  <1>  leave
 29460                                  
 29461 00015C96 488B0C24                        mov rcx, qword [rsp]
 29462 00015C9A 48FFC9                          dec rcx
 29463 00015C9D 48890C24                        mov qword [rsp], rcx    ; dec arg count
 29464 00015CA1 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 29465 00015CA6 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 29466 00015CAB 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 29467 00015CAF 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 29468 00015CB4 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 29469 00015CB7 E87B000000                      call print_sexpr
 29470 00015CBC 48BF-                           mov rdi, fmt_newline
 29470 00015CBE [7119000000000000] 
 29471 00015CC6 B800000000                      mov rax, 0
 29472                                          ENTER
    44 00015CCB C8000000            <1>  enter 0, 0
    45 00015CCF 4883E4F0            <1>  and rsp, ~15
 29473 00015CD3 E8(00000000)                    call printf
 29474                                          LEAVE
    49 00015CD8 C9                  <1>  leave
 29475 00015CD9 EB8F                            jmp .L
 29476                                  .L_out:
 29477 00015CDB 48BF-                           mov rdi, fmt_frame_continue
 29477 00015CDD [5619000000000000] 
 29478 00015CE5 B800000000                      mov rax, 0
 29479                                          ENTER
    44 00015CEA C8000000            <1>  enter 0, 0
    45 00015CEE 4883E4F0            <1>  and rsp, ~15
 29480 00015CF2 E8(00000000)                    call printf
 29481 00015CF7 E8(00000000)                    call getchar
 29482                                          LEAVE
    49 00015CFC C9                  <1>  leave
 29483                                          
 29484 00015CFD 48B8-                           mov rax, sob_void
 29484 00015CFF [0000000000000000] 
 29485 00015D07 C9                              leave
 29486 00015D08 C21000                          ret AND_KILL_FRAME(0)
 29487                                          
 29488                                  print_sexpr_if_not_void:
 29489 00015D0B 4881FF[00000000]        	cmp rdi, sob_void
 29490 00015D12 7422                    	je .done
 29491 00015D14 E81E000000              	call print_sexpr
 29492 00015D19 48BF-                   	mov rdi, fmt_newline
 29492 00015D1B [7119000000000000] 
 29493 00015D23 B800000000              	mov rax, 0
 29494                                  	ENTER
    44 00015D28 C8000000            <1>  enter 0, 0
    45 00015D2C 4883E4F0            <1>  and rsp, ~15
 29495 00015D30 E8(00000000)            	call printf
 29496                                  	LEAVE
    49 00015D35 C9                  <1>  leave
 29497                                  .done:
 29498 00015D36 C3                      	ret
 29499                                  
 29500                                  section .data
 29501                                  fmt_frame:
 29502 0000190C 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 29502 00001915 207265742061646472-
 29502 0000191E 203D2025703B206C65-
 29502 00001927 7820656E76203D2025-
 29502 00001930 703B20706172616D20-
 29502 00001939 636F756E74203D2025-
 29502 00001942 640A00             
 29503                                  fmt_frame_param_prefix:
 29504 00001945 3D3D5B706172616D20-             db `==[param %d]==> \0`
 29504 0000194E 25645D3D3D3E2000   
 29505                                  fmt_frame_continue:
 29506 00001956 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 29506 0000195F 723E20746F20636F6E-
 29506 00001968 74696E75652E2E2E00 
 29507                                  fmt_newline:
 29508 00001971 0A00                    	db `\n\0`
 29509                                  fmt_void:
 29510 00001973 233C766F69643E00        	db `#<void>\0`
 29511                                  fmt_nil:
 29512 0000197B 282900                  	db `()\0`
 29513                                  fmt_boolean_false:
 29514 0000197E 236600                  	db `#f\0`
 29515                                  fmt_boolean_true:
 29516 00001981 237400                  	db `#t\0`
 29517                                  fmt_char_backslash:
 29518 00001984 235C5C00                	db `#\\\\\0`
 29519                                  fmt_char_dquote:
 29520 00001988 235C2200                	db `#\\"\0`
 29521                                  fmt_char_simple:
 29522 0000198C 235C256300              	db `#\\%c\0`
 29523                                  fmt_char_null:
 29524 00001991 235C6E756C00            	db `#\\nul\0`
 29525                                  fmt_char_bell:
 29526 00001997 235C62656C6C00          	db `#\\bell\0`
 29527                                  fmt_char_backspace:
 29528 0000199E 235C6261636B737061-     	db `#\\backspace\0`
 29528 000019A7 636500             
 29529                                  fmt_char_tab:
 29530 000019AA 235C74616200            	db `#\\tab\0`
 29531                                  fmt_char_newline:
 29532 000019B0 235C6E65776C696E65-     	db `#\\newline\0`
 29532 000019B9 00                 
 29533                                  fmt_char_formfeed:
 29534 000019BA 235C7061676500          	db `#\\page\0`
 29535                                  fmt_char_return:
 29536 000019C1 235C72657475726E00      	db `#\\return\0`
 29537                                  fmt_char_escape:
 29538 000019CA 235C65736300            	db `#\\esc\0`
 29539                                  fmt_char_space:
 29540 000019D0 235C737061636500        	db `#\\space\0`
 29541                                  fmt_char_hex:
 29542 000019D8 235C782530325800        	db `#\\x%02X\0`
 29543                                  fmt_gensym:
 29544 000019E0 47256C6400                      db `G%ld\0`
 29545                                  fmt_closure:
 29546 000019E5 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 29546 000019EE 206174203078253038-
 29546 000019F7 5820656E763D307825-
 29546 00001A00 30385820636F64653D-
 29546 00001A09 3078253038583E00   
 29547                                  fmt_lparen:
 29548 00001A11 2800                    	db `(\0`
 29549                                  fmt_dotted_pair:
 29550 00001A13 202E2000                	db ` . \0`
 29551                                  fmt_rparen:
 29552 00001A17 2900                    	db `)\0`
 29553                                  fmt_space:
 29554 00001A19 2000                    	db ` \0`
 29555                                  fmt_empty_vector:
 29556 00001A1B 23282900                	db `#()\0`
 29557                                  fmt_vector:
 29558 00001A1F 232800                  	db `#(\0`
 29559                                  fmt_real:
 29560 00001A22 256600                  	db `%f\0`
 29561                                  fmt_fraction:
 29562 00001A25 256C642F256C6400        	db `%ld/%ld\0`
 29563                                  fmt_zero:
 29564 00001A2D 3000                    	db `0\0`
 29565                                  fmt_int:
 29566 00001A2F 256C6400                	db `%ld\0`
 29567                                  fmt_unknown_scheme_object_error:
 29568 00001A33 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 29568 00001A3C 6F723A20556E6B6E6F-
 29568 00001A45 776E20536368656D65-
 29568 00001A4E 2D6F626A6563742028-
 29568 00001A57 525454492030782530-
 29568 00001A60 32582920           
 29569 00001A64 617420616464726573-     	db `at address 0x%08X\n\n\0`
 29569 00001A6D 73203078253038580A-
 29569 00001A76 0A00               
 29570                                  fmt_dquote:
 29571 00001A78 2200                    	db `\"\0`
 29572                                  fmt_string_char:
 29573 00001A7A 256300                          db `%c\0`
 29574                                  fmt_string_char_7:
 29575 00001A7D 5C6100                          db `\\a\0`
 29576                                  fmt_string_char_8:
 29577 00001A80 5C6200                          db `\\b\0`
 29578                                  fmt_string_char_9:
 29579 00001A83 5C7400                          db `\\t\0`
 29580                                  fmt_string_char_10:
 29581 00001A86 5C6E00                          db `\\n\0`
 29582                                  fmt_string_char_11:
 29583 00001A89 5C7600                          db `\\v\0`
 29584                                  fmt_string_char_12:
 29585 00001A8C 5C6600                          db `\\f\0`
 29586                                  fmt_string_char_13:
 29587 00001A8F 5C7200                          db `\\r\0`
 29588                                  fmt_string_char_34:
 29589 00001A92 5C2200                          db `\\"\0`
 29590                                  fmt_string_char_92:
 29591 00001A95 5C5C00                          db `\\\\\0`
 29592                                  fmt_string_char_hex:
 29593 00001A98 5C7825583B00                    db `\\x%X;\0`
 29594                                  
 29595                                  section .text
 29596                                  
 29597                                  print_sexpr:
 29598 00015D37 C8000000                	enter 0, 0
 29599 00015D3B 8A07                    	mov al, byte [rdi]
 29600 00015D3D 3C00                    	cmp al, T_void
 29601 00015D3F 7465                    	je .Lvoid
 29602 00015D41 3C01                    	cmp al, T_nil
 29603 00015D43 7470                    	je .Lnil
 29604 00015D45 3C09                    	cmp al, T_boolean_false
 29605 00015D47 747B                    	je .Lboolean_false
 29606 00015D49 3C0A                    	cmp al, T_boolean_true
 29607 00015D4B 0F8482000000            	je .Lboolean_true
 29608 00015D51 3C02                    	cmp al, T_char
 29609 00015D53 0F8489000000            	je .Lchar
 29610 00015D59 3C41                    	cmp al, T_interned_symbol
 29611 00015D5B 0F84CB010000            	je .Linterned_symbol
 29612 00015D61 3C42                            cmp al, T_uninterned_symbol
 29613 00015D63 0F84EF010000                    je .Luninterned_symbol
 29614 00015D69 3C21                    	cmp al, T_pair
 29615 00015D6B 0F84FA010000            	je .Lpair
 29616 00015D71 3C22                    	cmp al, T_vector
 29617 00015D73 0F84C3020000            	je .Lvector
 29618 00015D79 3C04                    	cmp al, T_closure
 29619 00015D7B 0F8491010000            	je .Lclosure
 29620 00015D81 3C13                    	cmp al, T_real
 29621 00015D83 0F8454030000            	je .Lreal
 29622 00015D89 3C12                    	cmp al, T_fraction
 29623 00015D8B 0F847A030000            	je .Lfraction
 29624 00015D91 3C11                    	cmp al, T_integer
 29625 00015D93 0F84B3030000            	je .Linteger
 29626 00015D99 3C03                    	cmp al, T_string
 29627 00015D9B 0F84BE030000            	je .Lstring
 29628                                  
 29629 00015DA1 E9F6040000              	jmp .Lunknown_sexpr_type
 29630                                  
 29631                                  .Lvoid:
 29632 00015DA6 48BF-                   	mov rdi, fmt_void
 29632 00015DA8 [7319000000000000] 
 29633 00015DB0 E91A050000              	jmp .Lemit
 29634                                  
 29635                                  .Lnil:
 29636 00015DB5 48BF-                   	mov rdi, fmt_nil
 29636 00015DB7 [7B19000000000000] 
 29637 00015DBF E90B050000              	jmp .Lemit
 29638                                  
 29639                                  .Lboolean_false:
 29640 00015DC4 48BF-                   	mov rdi, fmt_boolean_false
 29640 00015DC6 [7E19000000000000] 
 29641 00015DCE E9FC040000              	jmp .Lemit
 29642                                  
 29643                                  .Lboolean_true:
 29644 00015DD3 48BF-                   	mov rdi, fmt_boolean_true
 29644 00015DD5 [8119000000000000] 
 29645 00015DDD E9ED040000              	jmp .Lemit
 29646                                  
 29647                                  .Lchar:
 29648 00015DE2 8A4701                  	mov al, byte [rdi + 1]
 29649 00015DE5 3C20                    	cmp al, ' '
 29650 00015DE7 7E28                    	jle .Lchar_whitespace
 29651 00015DE9 3C5C                    	cmp al, 92 		; backslash
 29652 00015DEB 0F847C000000            	je .Lchar_backslash
 29653 00015DF1 3C22                    	cmp al, '"'
 29654 00015DF3 0F8483000000            	je .Lchar_dquote
 29655 00015DF9 4825FF000000            	and rax, 255
 29656 00015DFF 48BF-                   	mov rdi, fmt_char_simple
 29656 00015E01 [8C19000000000000] 
 29657 00015E09 4889C6                  	mov rsi, rax
 29658 00015E0C E9BE040000              	jmp .Lemit
 29659                                  
 29660                                  .Lchar_whitespace:
 29661 00015E11 3C00                    	cmp al, 0
 29662 00015E13 7476                    	je .Lchar_null
 29663 00015E15 3C07                    	cmp al, 7
 29664 00015E17 0F847D000000            	je .Lchar_bell
 29665 00015E1D 3C08                    	cmp al, 8
 29666 00015E1F 0F8484000000            	je .Lchar_backspace
 29667 00015E25 3C09                    	cmp al, 9
 29668 00015E27 0F848B000000            	je .Lchar_tab
 29669 00015E2D 3C0A                    	cmp al, 10
 29670 00015E2F 0F8492000000            	je .Lchar_newline
 29671 00015E35 3C0C                    	cmp al, 12
 29672 00015E37 0F8499000000            	je .Lchar_formfeed
 29673 00015E3D 3C0D                    	cmp al, 13
 29674 00015E3F 0F84A0000000            	je .Lchar_return
 29675 00015E45 3C1B                    	cmp al, 27
 29676 00015E47 0F84A7000000            	je .Lchar_escape
 29677 00015E4D 4825FF000000            	and rax, 255
 29678 00015E53 3C20                    	cmp al, ' '
 29679 00015E55 0F84A8000000            	je .Lchar_space
 29680 00015E5B 48BF-                   	mov rdi, fmt_char_hex
 29680 00015E5D [D819000000000000] 
 29681 00015E65 4889C6                  	mov rsi, rax
 29682 00015E68 E962040000              	jmp .Lemit	
 29683                                  
 29684                                  .Lchar_backslash:
 29685 00015E6D 48BF-                   	mov rdi, fmt_char_backslash
 29685 00015E6F [8419000000000000] 
 29686 00015E77 E953040000              	jmp .Lemit
 29687                                  
 29688                                  .Lchar_dquote:
 29689 00015E7C 48BF-                   	mov rdi, fmt_char_dquote
 29689 00015E7E [8819000000000000] 
 29690 00015E86 E944040000              	jmp .Lemit
 29691                                  
 29692                                  .Lchar_null:
 29693 00015E8B 48BF-                   	mov rdi, fmt_char_null
 29693 00015E8D [9119000000000000] 
 29694 00015E95 E935040000              	jmp .Lemit
 29695                                  
 29696                                  .Lchar_bell:
 29697 00015E9A 48BF-                   	mov rdi, fmt_char_bell
 29697 00015E9C [9719000000000000] 
 29698 00015EA4 E926040000              	jmp .Lemit
 29699                                  
 29700                                  .Lchar_backspace:
 29701 00015EA9 48BF-                   	mov rdi, fmt_char_backspace
 29701 00015EAB [9E19000000000000] 
 29702 00015EB3 E917040000              	jmp .Lemit
 29703                                  
 29704                                  .Lchar_tab:
 29705 00015EB8 48BF-                   	mov rdi, fmt_char_tab
 29705 00015EBA [AA19000000000000] 
 29706 00015EC2 E908040000              	jmp .Lemit
 29707                                  
 29708                                  .Lchar_newline:
 29709 00015EC7 48BF-                   	mov rdi, fmt_char_newline
 29709 00015EC9 [B019000000000000] 
 29710 00015ED1 E9F9030000              	jmp .Lemit
 29711                                  
 29712                                  .Lchar_formfeed:
 29713 00015ED6 48BF-                   	mov rdi, fmt_char_formfeed
 29713 00015ED8 [BA19000000000000] 
 29714 00015EE0 E9EA030000              	jmp .Lemit
 29715                                  
 29716                                  .Lchar_return:
 29717 00015EE5 48BF-                   	mov rdi, fmt_char_return
 29717 00015EE7 [C119000000000000] 
 29718 00015EEF E9DB030000              	jmp .Lemit
 29719                                  
 29720                                  .Lchar_escape:
 29721 00015EF4 48BF-                   	mov rdi, fmt_char_escape
 29721 00015EF6 [CA19000000000000] 
 29722 00015EFE E9CC030000              	jmp .Lemit
 29723                                  
 29724                                  .Lchar_space:
 29725 00015F03 48BF-                   	mov rdi, fmt_char_space
 29725 00015F05 [D019000000000000] 
 29726 00015F0D E9BD030000              	jmp .Lemit
 29727                                  
 29728                                  .Lclosure:
 29729 00015F12 4889FE                  	mov rsi, qword rdi
 29730 00015F15 48BF-                   	mov rdi, fmt_closure
 29730 00015F17 [E519000000000000] 
 29731 00015F1F 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 29732 00015F23 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 29733 00015F27 E9A3030000              	jmp .Lemit
 29734                                  
 29735                                  .Linterned_symbol:
 29736 00015F2C 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 29737 00015F30 BE01000000              	mov rsi, 1		 ; size = 1 byte
 29738 00015F35 488B5701                	mov rdx, qword [rdi + 1] ; length
 29739 00015F39 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 29740 00015F3D 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 29741                                  	ENTER
    44 00015F45 C8000000            <1>  enter 0, 0
    45 00015F49 4883E4F0            <1>  and rsp, ~15
 29742 00015F4D E8(00000000)            	call fwrite
 29743                                  	LEAVE
    49 00015F52 C9                  <1>  leave
 29744 00015F53 E98C030000              	jmp .Lend
 29745                                  
 29746                                  .Luninterned_symbol:
 29747 00015F58 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 29748 00015F5C 48BF-                           mov rdi, fmt_gensym
 29748 00015F5E [E019000000000000] 
 29749 00015F66 E964030000                      jmp .Lemit
 29750                                  	
 29751                                  .Lpair:
 29752 00015F6B 57                      	push rdi
 29753 00015F6C 48BF-                   	mov rdi, fmt_lparen
 29753 00015F6E [111A000000000000] 
 29754 00015F76 B800000000              	mov rax, 0
 29755                                          ENTER
    44 00015F7B C8000000            <1>  enter 0, 0
    45 00015F7F 4883E4F0            <1>  and rsp, ~15
 29756 00015F83 E8(00000000)            	call printf
 29757                                          LEAVE
    49 00015F88 C9                  <1>  leave
 29758 00015F89 488B3C24                	mov rdi, qword [rsp] 	; pair
 29759 00015F8D 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 29760 00015F91 E8A1FDFFFF              	call print_sexpr
 29761 00015F96 5F                      	pop rdi 		; pair
 29762 00015F97 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 29763                                  .Lcdr:
 29764 00015F9B 8A07                    	mov al, byte [rdi]
 29765 00015F9D 3C01                    	cmp al, T_nil
 29766 00015F9F 7447                    	je .Lcdr_nil
 29767 00015FA1 3C21                    	cmp al, T_pair
 29768 00015FA3 7462                    	je .Lcdr_pair
 29769 00015FA5 57                      	push rdi
 29770 00015FA6 48BF-                   	mov rdi, fmt_dotted_pair
 29770 00015FA8 [131A000000000000] 
 29771 00015FB0 B800000000              	mov rax, 0
 29772                                          ENTER
    44 00015FB5 C8000000            <1>  enter 0, 0
    45 00015FB9 4883E4F0            <1>  and rsp, ~15
 29773 00015FBD E8(00000000)            	call printf
 29774                                          LEAVE
    49 00015FC2 C9                  <1>  leave
 29775 00015FC3 5F                      	pop rdi
 29776 00015FC4 E86EFDFFFF              	call print_sexpr
 29777 00015FC9 48BF-                   	mov rdi, fmt_rparen
 29777 00015FCB [171A000000000000] 
 29778 00015FD3 B800000000              	mov rax, 0
 29779                                          ENTER
    44 00015FD8 C8000000            <1>  enter 0, 0
    45 00015FDC 4883E4F0            <1>  and rsp, ~15
 29780 00015FE0 E8(00000000)            	call printf
 29781                                          LEAVE
    49 00015FE5 C9                  <1>  leave
 29782 00015FE6 C9                      	leave
 29783 00015FE7 C3                      	ret
 29784                                  
 29785                                  .Lcdr_nil:
 29786 00015FE8 48BF-                   	mov rdi, fmt_rparen
 29786 00015FEA [171A000000000000] 
 29787 00015FF2 B800000000              	mov rax, 0
 29788                                          ENTER
    44 00015FF7 C8000000            <1>  enter 0, 0
    45 00015FFB 4883E4F0            <1>  and rsp, ~15
 29789 00015FFF E8(00000000)            	call printf
 29790                                          LEAVE
    49 00016004 C9                  <1>  leave
 29791 00016005 C9                      	leave
 29792 00016006 C3                      	ret
 29793                                  
 29794                                  .Lcdr_pair:
 29795 00016007 57                      	push rdi
 29796 00016008 48BF-                   	mov rdi, fmt_space
 29796 0001600A [191A000000000000] 
 29797 00016012 B800000000              	mov rax, 0
 29798                                          ENTER
    44 00016017 C8000000            <1>  enter 0, 0
    45 0001601B 4883E4F0            <1>  and rsp, ~15
 29799 0001601F E8(00000000)            	call printf
 29800                                          LEAVE
    49 00016024 C9                  <1>  leave
 29801 00016025 488B3C24                	mov rdi, qword [rsp]
 29802 00016029 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 29803 0001602D E805FDFFFF              	call print_sexpr
 29804 00016032 5F                      	pop rdi
 29805 00016033 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 29806 00016037 E95FFFFFFF              	jmp .Lcdr
 29807                                  
 29808                                  .Lvector:
 29809 0001603C 488B4701                	mov rax, qword [rdi + 1] ; length
 29810 00016040 4883F800                	cmp rax, 0
 29811 00016044 0F8484000000            	je .Lvector_empty
 29812 0001604A 57                      	push rdi
 29813 0001604B 48BF-                   	mov rdi, fmt_vector
 29813 0001604D [1F1A000000000000] 
 29814 00016055 B800000000              	mov rax, 0
 29815                                          ENTER
    44 0001605A C8000000            <1>  enter 0, 0
    45 0001605E 4883E4F0            <1>  and rsp, ~15
 29816 00016062 E8(00000000)            	call printf
 29817                                          LEAVE
    49 00016067 C9                  <1>  leave
 29818 00016068 488B3C24                	mov rdi, qword [rsp]
 29819 0001606C FF7701                  	push qword [rdi + 1]
 29820 0001606F 6A01                    	push 1
 29821 00016071 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 29822 00016075 E8BDFCFFFF              	call print_sexpr
 29823                                  .Lvector_loop:
 29824                                  	; [rsp] index
 29825                                  	; [rsp + 8*1] limit
 29826                                  	; [rsp + 8*2] vector
 29827 0001607A 488B0424                	mov rax, qword [rsp]
 29828 0001607E 483B442408              	cmp rax, qword [rsp + 8*1]
 29829 00016083 7436                    	je .Lvector_end
 29830 00016085 48BF-                   	mov rdi, fmt_space
 29830 00016087 [191A000000000000] 
 29831 0001608F B800000000              	mov rax, 0
 29832                                          ENTER
    44 00016094 C8000000            <1>  enter 0, 0
    45 00016098 4883E4F0            <1>  and rsp, ~15
 29833 0001609C E8(00000000)            	call printf
 29834                                          LEAVE
    49 000160A1 C9                  <1>  leave
 29835 000160A2 488B0424                	mov rax, qword [rsp]
 29836 000160A6 488B5C2410              	mov rbx, qword [rsp + 8*2]
 29837 000160AB 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 29838 000160B0 E882FCFFFF              	call print_sexpr
 29839 000160B5 48FF0424                	inc qword [rsp]
 29840 000160B9 EBBF                    	jmp .Lvector_loop
 29841                                  
 29842                                  .Lvector_end:
 29843 000160BB 4883C418                	add rsp, 8*3
 29844 000160BF 48BF-                   	mov rdi, fmt_rparen
 29844 000160C1 [171A000000000000] 
 29845 000160C9 E901020000              	jmp .Lemit	
 29846                                  
 29847                                  .Lvector_empty:
 29848 000160CE 48BF-                   	mov rdi, fmt_empty_vector
 29848 000160D0 [1B1A000000000000] 
 29849 000160D8 E9F2010000              	jmp .Lemit
 29850                                  
 29851                                  .Lreal:
 29852 000160DD FF7701                  	push qword [rdi + 1]
 29853 000160E0 F20F100424              	movsd xmm0, qword [rsp]
 29854 000160E5 4883C408                	add rsp, 8*1
 29855 000160E9 48BF-                   	mov rdi, fmt_real
 29855 000160EB [221A000000000000] 
 29856 000160F3 B801000000              	mov rax, 1
 29857                                  	ENTER
    44 000160F8 C8000000            <1>  enter 0, 0
    45 000160FC 4883E4F0            <1>  and rsp, ~15
 29858 00016100 E8(00000000)            	call printf
 29859                                  	LEAVE
    49 00016105 C9                  <1>  leave
 29860 00016106 E9D9010000              	jmp .Lend
 29861                                  
 29862                                  .Lfraction:
 29863 0001610B 488B7701                	mov rsi, qword [rdi + 1]
 29864 0001610F 488B5709                	mov rdx, qword [rdi + 1 + 8]
 29865 00016113 4883FE00                	cmp rsi, 0
 29866 00016117 7415                    	je .Lrat_zero
 29867 00016119 4883FA01                	cmp rdx, 1
 29868 0001611D 741E                    	je .Lrat_int
 29869 0001611F 48BF-                   	mov rdi, fmt_fraction
 29869 00016121 [251A000000000000] 
 29870 00016129 E9A1010000              	jmp .Lemit
 29871                                  
 29872                                  .Lrat_zero:
 29873 0001612E 48BF-                   	mov rdi, fmt_zero
 29873 00016130 [2D1A000000000000] 
 29874 00016138 E992010000              	jmp .Lemit
 29875                                  
 29876                                  .Lrat_int:
 29877 0001613D 48BF-                   	mov rdi, fmt_int
 29877 0001613F [2F1A000000000000] 
 29878 00016147 E983010000              	jmp .Lemit
 29879                                  
 29880                                  .Linteger:
 29881 0001614C 488B7701                	mov rsi, qword [rdi + 1]
 29882 00016150 48BF-                   	mov rdi, fmt_int
 29882 00016152 [2F1A000000000000] 
 29883 0001615A E970010000              	jmp .Lemit
 29884                                  
 29885                                  .Lstring:
 29886 0001615F 488D4709                	lea rax, [rdi + 1 + 8]
 29887 00016163 50                      	push rax
 29888 00016164 FF7701                  	push qword [rdi + 1]
 29889 00016167 48BF-                   	mov rdi, fmt_dquote
 29889 00016169 [781A000000000000] 
 29890 00016171 B800000000              	mov rax, 0
 29891                                  	ENTER
    44 00016176 C8000000            <1>  enter 0, 0
    45 0001617A 4883E4F0            <1>  and rsp, ~15
 29892 0001617E E8(00000000)            	call printf
 29893                                  	LEAVE
    49 00016183 C9                  <1>  leave
 29894                                  .Lstring_loop:
 29895                                  	; qword [rsp]: limit
 29896                                  	; qword [rsp + 8*1]: char *
 29897 00016184 48833C2400              	cmp qword [rsp], 0
 29898 00016189 0F84FD000000            	je .Lstring_end
 29899 0001618F 488B442408              	mov rax, qword [rsp + 8*1]
 29900 00016194 8A00                    	mov al, byte [rax]
 29901 00016196 4825FF000000            	and rax, 255
 29902 0001619C 3C07                    	cmp al, 7
 29903 0001619E 7468                            je .Lstring_char_7
 29904 000161A0 3C08                            cmp al, 8
 29905 000161A2 7470                            je .Lstring_char_8
 29906 000161A4 3C09                            cmp al, 9
 29907 000161A6 7478                            je .Lstring_char_9
 29908 000161A8 3C0A                            cmp al, 10
 29909 000161AA 0F847C000000                    je .Lstring_char_10
 29910 000161B0 3C0B                            cmp al, 11
 29911 000161B2 0F8480000000                    je .Lstring_char_11
 29912 000161B8 3C0C                            cmp al, 12
 29913 000161BA 0F8484000000                    je .Lstring_char_12
 29914 000161C0 3C0D                            cmp al, 13
 29915 000161C2 0F8488000000                    je .Lstring_char_13
 29916 000161C8 3C22                            cmp al, 34
 29917 000161CA 0F848C000000                    je .Lstring_char_34
 29918 000161D0 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 29920 000161D2 3C20                            cmp al, ' '
 29921 000161D4 0F8CA0000000                    jl .Lstring_char_hex
 29922 000161DA 48BF-                           mov rdi, fmt_string_char
 29922 000161DC [7A1A000000000000] 
 29923 000161E4 4889C6                          mov rsi, rax
 29924                                  .Lstring_char_emit:
 29925 000161E7 B800000000                      mov rax, 0
 29926                                          ENTER
    44 000161EC C8000000            <1>  enter 0, 0
    45 000161F0 4883E4F0            <1>  and rsp, ~15
 29927 000161F4 E8(00000000)                    call printf
 29928                                          LEAVE
    49 000161F9 C9                  <1>  leave
 29929 000161FA 48FF0C24                        dec qword [rsp]
 29930 000161FE 48FF442408                      inc qword [rsp + 8*1]
 29931 00016203 E97CFFFFFF                      jmp .Lstring_loop
 29932                                  
 29933                                  .Lstring_char_7:
 29934 00016208 48BF-                           mov rdi, fmt_string_char_7
 29934 0001620A [7D1A000000000000] 
 29935 00016212 EBD3                            jmp .Lstring_char_emit
 29936                                  
 29937                                  .Lstring_char_8:
 29938 00016214 48BF-                           mov rdi, fmt_string_char_8
 29938 00016216 [801A000000000000] 
 29939 0001621E EBC7                            jmp .Lstring_char_emit
 29940                                          
 29941                                  .Lstring_char_9:
 29942 00016220 48BF-                           mov rdi, fmt_string_char_9
 29942 00016222 [831A000000000000] 
 29943 0001622A EBBB                            jmp .Lstring_char_emit
 29944                                  
 29945                                  .Lstring_char_10:
 29946 0001622C 48BF-                           mov rdi, fmt_string_char_10
 29946 0001622E [861A000000000000] 
 29947 00016236 EBAF                            jmp .Lstring_char_emit
 29948                                  
 29949                                  .Lstring_char_11:
 29950 00016238 48BF-                           mov rdi, fmt_string_char_11
 29950 0001623A [891A000000000000] 
 29951 00016242 EBA3                            jmp .Lstring_char_emit
 29952                                  
 29953                                  .Lstring_char_12:
 29954 00016244 48BF-                           mov rdi, fmt_string_char_12
 29954 00016246 [8C1A000000000000] 
 29955 0001624E EB97                            jmp .Lstring_char_emit
 29956                                  
 29957                                  .Lstring_char_13:
 29958 00016250 48BF-                           mov rdi, fmt_string_char_13
 29958 00016252 [8F1A000000000000] 
 29959 0001625A EB8B                            jmp .Lstring_char_emit
 29960                                  
 29961                                  .Lstring_char_34:
 29962 0001625C 48BF-                           mov rdi, fmt_string_char_34
 29962 0001625E [921A000000000000] 
 29963 00016266 E97CFFFFFF                      jmp .Lstring_char_emit
 29964                                  
 29965                                  .Lstring_char_92:
 29966 0001626B 48BF-                           mov rdi, fmt_string_char_92
 29966 0001626D [951A000000000000] 
 29967 00016275 E96DFFFFFF                      jmp .Lstring_char_emit
 29968                                  
 29969                                  .Lstring_char_hex:
 29970 0001627A 48BF-                           mov rdi, fmt_string_char_hex
 29970 0001627C [981A000000000000] 
 29971 00016284 4889C6                          mov rsi, rax
 29972 00016287 E95BFFFFFF                      jmp .Lstring_char_emit        
 29973                                  
 29974                                  .Lstring_end:
 29975 0001628C 4883C410                	add rsp, 8 * 2
 29976 00016290 48BF-                   	mov rdi, fmt_dquote
 29976 00016292 [781A000000000000] 
 29977 0001629A EB33                    	jmp .Lemit
 29978                                  
 29979                                  .Lunknown_sexpr_type:
 29980 0001629C 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 29980 0001629E [331A000000000000] 
 29981 000162A6 4825FF000000            	and rax, 255
 29982 000162AC 4889C2                  	mov rdx, rax
 29983 000162AF 4889F9                  	mov rcx, rdi
 29984 000162B2 488B3C25[00000000]      	mov rdi, qword [stderr]
 29985 000162BA B800000000              	mov rax, 0
 29986                                          ENTER
    44 000162BF C8000000            <1>  enter 0, 0
    45 000162C3 4883E4F0            <1>  and rsp, ~15
 29987 000162C7 E8(00000000)            	call fprintf
 29988                                          LEAVE
    49 000162CC C9                  <1>  leave
 29989 000162CD C9                              leave
 29990 000162CE C3                              ret
 29991                                  
 29992                                  .Lemit:
 29993 000162CF B800000000              	mov rax, 0
 29994                                          ENTER
    44 000162D4 C8000000            <1>  enter 0, 0
    45 000162D8 4883E4F0            <1>  and rsp, ~15
 29995 000162DC E8(00000000)            	call printf
 29996                                          LEAVE
    49 000162E1 C9                  <1>  leave
 29997 000162E2 EB00                    	jmp .Lend
 29998                                  
 29999                                  .Lend:
 30000                                  	LEAVE
    49 000162E4 C9                  <1>  leave
 30001 000162E5 C3                      	ret
 30002                                  
 30003                                  ;;; rdi: address of free variable
 30004                                  ;;; rsi: address of code-pointer
 30005                                  bind_primitive:
 30006 000162E6 C8000000                        enter 0, 0
 30007 000162EA 57                              push rdi
 30008 000162EB BF11000000                      mov rdi, (1 + 8 + 8)
 30009 000162F0 E8C1F7FFFF                      call malloc
 30010 000162F5 5F                              pop rdi
 30011 000162F6 C60004                          mov byte [rax], T_closure
 30012 000162F9 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 30013 00016301 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 30014 00016305 488907                          mov qword [rdi], rax
 30015 00016308 48B8-                           mov rax, sob_void
 30015 0001630A [0000000000000000] 
 30016 00016312 C9                              leave
 30017 00016313 C3                              ret
 30018                                  
 30019                                  L_code_ptr_ash:
 30020 00016314 C8000000                        enter 0, 0
 30021 00016318 48837D1802                      cmp COUNT, 2
 30022 0001631D 0F8595140000                    jne L_error_arg_count_2
 30023 00016323 488B7D20                        mov rdi, PARAM(0)
 30024                                          assert_integer(rdi)
    53 00016327 803F11              <1>  cmp byte [%1], %2
    54 0001632A 0F8527150000        <1>  jne L_error_incorrect_type
 30025 00016330 488B4D28                        mov rcx, PARAM(1)
 30026                                          assert_integer(rcx)
    53 00016334 803911              <1>  cmp byte [%1], %2
    54 00016337 0F851A150000        <1>  jne L_error_incorrect_type
 30027 0001633D 488B7F01                        mov rdi, qword [rdi + 1]
 30028 00016341 488B4901                        mov rcx, qword [rcx + 1]
 30029 00016345 4883F900                        cmp rcx, 0
 30030 00016349 7C0F                            jl .L_negative
 30031                                  .L_loop_positive:
 30032 0001634B 4883F900                        cmp rcx, 0
 30033 0001634F 741B                            je .L_exit
 30034 00016351 48D3E7                          sal rdi, cl
 30035 00016354 48C1E908                        shr rcx, 8
 30036 00016358 EBF1                            jmp .L_loop_positive
 30037                                  .L_negative:
 30038 0001635A 48F7D9                          neg rcx
 30039                                  .L_loop_negative:
 30040 0001635D 4883F900                        cmp rcx, 0
 30041 00016361 7409                            je .L_exit
 30042 00016363 48D3FF                          sar rdi, cl
 30043 00016366 48C1E908                        shr rcx, 8
 30044 0001636A EBF1                            jmp .L_loop_negative
 30045                                  .L_exit:
 30046 0001636C E861130000                      call make_integer
 30047 00016371 C9                              leave
 30048 00016372 C22000                          ret AND_KILL_FRAME(2)
 30049                                  
 30050                                  L_code_ptr_logand:
 30051 00016375 C8000000                        enter 0, 0
 30052 00016379 48837D1802                      cmp COUNT, 2
 30053 0001637E 0F8534140000                    jne L_error_arg_count_2
 30054 00016384 4C8B4520                        mov r8, PARAM(0)
 30055                                          assert_integer(r8)
    53 00016388 41803811            <1>  cmp byte [%1], %2
    54 0001638C 0F85C5140000        <1>  jne L_error_incorrect_type
 30056 00016392 4C8B4D28                        mov r9, PARAM(1)
 30057                                          assert_integer(r9)
    53 00016396 41803911            <1>  cmp byte [%1], %2
    54 0001639A 0F85B7140000        <1>  jne L_error_incorrect_type
 30058 000163A0 498B7801                        mov rdi, qword [r8 + 1]
 30059 000163A4 49237901                        and rdi, qword [r9 + 1]
 30060 000163A8 E825130000                      call make_integer
 30061 000163AD C9                              leave
 30062 000163AE C22000                          ret AND_KILL_FRAME(2)
 30063                                  
 30064                                  L_code_ptr_logor:
 30065 000163B1 C8000000                        enter 0, 0
 30066 000163B5 48837D1802                      cmp COUNT, 2
 30067 000163BA 0F85F8130000                    jne L_error_arg_count_2
 30068 000163C0 4C8B4520                        mov r8, PARAM(0)
 30069                                          assert_integer(r8)
    53 000163C4 41803811            <1>  cmp byte [%1], %2
    54 000163C8 0F8589140000        <1>  jne L_error_incorrect_type
 30070 000163CE 4C8B4D28                        mov r9, PARAM(1)
 30071                                          assert_integer(r9)
    53 000163D2 41803911            <1>  cmp byte [%1], %2
    54 000163D6 0F857B140000        <1>  jne L_error_incorrect_type
 30072 000163DC 498B7801                        mov rdi, qword [r8 + 1]
 30073 000163E0 490B7901                        or rdi, qword [r9 + 1]
 30074 000163E4 E8E9120000                      call make_integer
 30075 000163E9 C9                              leave
 30076 000163EA C22000                          ret AND_KILL_FRAME(2)
 30077                                  
 30078                                  L_code_ptr_logxor:
 30079 000163ED C8000000                        enter 0, 0
 30080 000163F1 48837D1802                      cmp COUNT, 2
 30081 000163F6 0F85BC130000                    jne L_error_arg_count_2
 30082 000163FC 4C8B4520                        mov r8, PARAM(0)
 30083                                          assert_integer(r8)
    53 00016400 41803811            <1>  cmp byte [%1], %2
    54 00016404 0F854D140000        <1>  jne L_error_incorrect_type
 30084 0001640A 4C8B4D28                        mov r9, PARAM(1)
 30085                                          assert_integer(r9)
    53 0001640E 41803911            <1>  cmp byte [%1], %2
    54 00016412 0F853F140000        <1>  jne L_error_incorrect_type
 30086 00016418 498B7801                        mov rdi, qword [r8 + 1]
 30087 0001641C 49337901                        xor rdi, qword [r9 + 1]
 30088 00016420 E8AD120000                      call make_integer
 30089                                          LEAVE
    49 00016425 C9                  <1>  leave
 30090 00016426 C22000                          ret AND_KILL_FRAME(2)
 30091                                  
 30092                                  L_code_ptr_lognot:
 30093 00016429 C8000000                        enter 0, 0
 30094 0001642D 48837D1801                      cmp COUNT, 1
 30095 00016432 0F854B130000                    jne L_error_arg_count_1
 30096 00016438 4C8B4520                        mov r8, PARAM(0)
 30097                                          assert_integer(r8)
    53 0001643C 41803811            <1>  cmp byte [%1], %2
    54 00016440 0F8511140000        <1>  jne L_error_incorrect_type
 30098 00016446 498B7801                        mov rdi, qword [r8 + 1]
 30099 0001644A 48F7D7                          not rdi
 30100 0001644D E880120000                      call make_integer
 30101 00016452 C9                              leave
 30102 00016453 C21800                          ret AND_KILL_FRAME(1)
 30103                                  
 30104                                  ;;; fill in for final project!
 30105                                  L_code_ptr_bin_apply:
 30106 00016456 4989E8                  mov r8, rbp
 30107 00016459 FF7500                  push  qword [rbp]
 30108 0001645C 4889E5                  mov rbp, rsp
 30109                                  
 30110                                  ;calc args
 30111 0001645F 4C8B4D28                mov r9, PARAM(1) ; save for later start of the params
 30112 00016463 4D89CB                  mov r11, r9 
 30113 00016466 4831C9                  xor rcx, rcx ;args counter
 30114                                  
 30115                                  .count_args_loop:
 30116 00016469 4981FB[01000000]                cmp r11, sob_nil
 30117 00016470 7413                            je .count_args_loop_end
 30118                                          assert_pair(r11)
    53 00016472 41803B21            <1>  cmp byte [%1], %2
    54 00016476 0F85DB130000        <1>  jne L_error_incorrect_type
 30119 0001647C 4D8B5B09                        mov r11, SOB_PAIR_CDR(r11)
 30120 00016480 48FFC1                          inc rcx
 30121 00016483 EBE4                            jmp .count_args_loop
 30122                                  
 30123                                  .count_args_loop_end:
 30124                                          ;set place in the stack
 30125 00016485 4C8D1CCDE8FFFFFF                lea r11, [(8*rcx) - (3*8)]
 30126 0001648D 4C29DC                          sub rsp, r11
 30127                                  
 30128                                          ;save ret afddress on the stack
 30129 00016490 4C8B5D08                        mov r11, RET_ADDR
 30130 00016494 4C891C24                        mov qword [rsp], r11
 30131                                  
 30132                                          ;save lexical env address on the stack
 30133 00016498 488B7520                        mov rsi, PARAM(0)
 30134                                          assert_closure(rsi)
    53 0001649C 803E04              <1>  cmp byte [%1], %2
    54 0001649F 0F85B2130000        <1>  jne L_error_incorrect_type
 30135 000164A5 4C8B5E01                        mov r11, SOB_CLOSURE_ENV(rsi)
 30136 000164A9 4C895C2408                      mov qword [rsp + 8], r11
 30137                                  
 30138                                          ;save argc on the stack
 30139 000164AE 48894C2410                      mov qword [rsp + 2*8], rcx
 30140                                  
 30141                                          ;save params on the stack
 30142 000164B3 4C8D542418                      lea r10, [rsp + 3*8]
 30143 000164B8 4D89CB                          mov r11, r9
 30144                                          .save_params_loop:
 30145 000164BB 4981FB[01000000]                        cmp r11, sob_nil
 30146 000164C2 7411                                    je .save_params_loop_end
 30147 000164C4 4D8B6301                                mov r12, SOB_PAIR_CAR(r11)
 30148 000164C8 4D8922                                  mov qword [r10], r12
 30149 000164CB 4D8B5B09                                mov r11, SOB_PAIR_CDR(r11)
 30150 000164CF 4983C208                                add r10, 8
 30151 000164D3 EBE6                                    jmp .save_params_loop
 30152                                          .save_params_loop_end:
 30153 000164D5 4C89C5                                  mov rbp, r8
 30154 000164D8 FF6609                                  jmp SOB_CLOSURE_CODE(rsi)
 30155                                  
 30156                                  L_code_ptr_is_null:
 30157 000164DB C8000000                        enter 0, 0
 30158 000164DF 48837D1801                      cmp COUNT, 1
 30159 000164E4 0F8599120000                    jne L_error_arg_count_1
 30160 000164EA 488B4520                        mov rax, PARAM(0)
 30161 000164EE 803801                          cmp byte [rax], T_nil
 30162 000164F1 750C                            jne .L_false
 30163 000164F3 48B8-                           mov rax, sob_boolean_true
 30163 000164F5 [0300000000000000] 
 30164 000164FD EB0A                            jmp .L_end
 30165                                  .L_false:
 30166 000164FF 48B8-                           mov rax, sob_boolean_false
 30166 00016501 [0200000000000000] 
 30167                                  .L_end:
 30168 00016509 C9                              leave
 30169 0001650A C21800                          ret AND_KILL_FRAME(1)
 30170                                  
 30171                                  L_code_ptr_is_pair:
 30172 0001650D C8000000                        enter 0, 0
 30173 00016511 48837D1801                      cmp COUNT, 1
 30174 00016516 0F8567120000                    jne L_error_arg_count_1
 30175 0001651C 488B4520                        mov rax, PARAM(0)
 30176 00016520 803821                          cmp byte [rax], T_pair
 30177 00016523 750C                            jne .L_false
 30178 00016525 48B8-                           mov rax, sob_boolean_true
 30178 00016527 [0300000000000000] 
 30179 0001652F EB0A                            jmp .L_end
 30180                                  .L_false:
 30181 00016531 48B8-                           mov rax, sob_boolean_false
 30181 00016533 [0200000000000000] 
 30182                                  .L_end:
 30183 0001653B C9                              leave
 30184 0001653C C21800                          ret AND_KILL_FRAME(1)
 30185                                          
 30186                                  L_code_ptr_is_void:
 30187 0001653F C8000000                        enter 0, 0
 30188 00016543 48837D1801                      cmp COUNT, 1
 30189 00016548 0F8535120000                    jne L_error_arg_count_1
 30190 0001654E 488B4520                        mov rax, PARAM(0)
 30191 00016552 803800                          cmp byte [rax], T_void
 30192 00016555 750C                            jne .L_false
 30193 00016557 48B8-                           mov rax, sob_boolean_true
 30193 00016559 [0300000000000000] 
 30194 00016561 EB0A                            jmp .L_end
 30195                                  .L_false:
 30196 00016563 48B8-                           mov rax, sob_boolean_false
 30196 00016565 [0200000000000000] 
 30197                                  .L_end:
 30198 0001656D C9                              leave
 30199 0001656E C21800                          ret AND_KILL_FRAME(1)
 30200                                  
 30201                                  L_code_ptr_is_char:
 30202 00016571 C8000000                        enter 0, 0
 30203 00016575 48837D1801                      cmp COUNT, 1
 30204 0001657A 0F8503120000                    jne L_error_arg_count_1
 30205 00016580 488B4520                        mov rax, PARAM(0)
 30206 00016584 803802                          cmp byte [rax], T_char
 30207 00016587 750C                            jne .L_false
 30208 00016589 48B8-                           mov rax, sob_boolean_true
 30208 0001658B [0300000000000000] 
 30209 00016593 EB0A                            jmp .L_end
 30210                                  .L_false:
 30211 00016595 48B8-                           mov rax, sob_boolean_false
 30211 00016597 [0200000000000000] 
 30212                                  .L_end:
 30213 0001659F C9                              leave
 30214 000165A0 C21800                          ret AND_KILL_FRAME(1)
 30215                                  
 30216                                  L_code_ptr_is_string:
 30217 000165A3 C8000000                        enter 0, 0
 30218 000165A7 48837D1801                      cmp COUNT, 1
 30219 000165AC 0F85D1110000                    jne L_error_arg_count_1
 30220 000165B2 488B4520                        mov rax, PARAM(0)
 30221 000165B6 803803                          cmp byte [rax], T_string
 30222 000165B9 750C                            jne .L_false
 30223 000165BB 48B8-                           mov rax, sob_boolean_true
 30223 000165BD [0300000000000000] 
 30224 000165C5 EB0A                            jmp .L_end
 30225                                  .L_false:
 30226 000165C7 48B8-                           mov rax, sob_boolean_false
 30226 000165C9 [0200000000000000] 
 30227                                  .L_end:
 30228 000165D1 C9                              leave
 30229 000165D2 C21800                          ret AND_KILL_FRAME(1)
 30230                                  
 30231                                  L_code_ptr_is_symbol:
 30232 000165D5 C8000000                        enter 0, 0
 30233 000165D9 48837D1801                      cmp COUNT, 1
 30234 000165DE 0F859F110000                    jne L_error_arg_count_1
 30235 000165E4 4C8B4520                        mov r8, PARAM(0)
 30236 000165E8 41802040                        and byte [r8], T_symbol
 30237 000165EC 740C                            jz .L_false
 30238 000165EE 48B8-                           mov rax, sob_boolean_true
 30238 000165F0 [0300000000000000] 
 30239 000165F8 EB0A                            jmp .L_exit
 30240                                  .L_false:
 30241 000165FA 48B8-                           mov rax, sob_boolean_false
 30241 000165FC [0200000000000000] 
 30242                                  .L_exit:
 30243 00016604 C9                              leave
 30244 00016605 C21800                          ret AND_KILL_FRAME(1)
 30245                                  
 30246                                  L_code_ptr_is_uninterned_symbol:
 30247 00016608 C8000000                        enter 0, 0
 30248 0001660C 48837D1801                      cmp COUNT, 1
 30249 00016611 0F856C110000                    jne L_error_arg_count_1
 30250 00016617 4C8B4520                        mov r8, PARAM(0)
 30251 0001661B 41803842                        cmp byte [r8], T_uninterned_symbol
 30252 0001661F 750C                            jne .L_false
 30253 00016621 48B8-                           mov rax, sob_boolean_true
 30253 00016623 [0300000000000000] 
 30254 0001662B EB0A                            jmp .L_exit
 30255                                  .L_false:
 30256 0001662D 48B8-                           mov rax, sob_boolean_false
 30256 0001662F [0200000000000000] 
 30257                                  .L_exit:
 30258 00016637 C9                              leave
 30259 00016638 C21800                          ret AND_KILL_FRAME(1)
 30260                                  
 30261                                  L_code_ptr_is_interned_symbol:
 30262 0001663B C8000000                        enter 0, 0
 30263 0001663F 48837D1801                      cmp COUNT, 1
 30264 00016644 0F8539110000                    jne L_error_arg_count_1
 30265 0001664A 488B4520                        mov rax, PARAM(0)
 30266 0001664E 803841                          cmp byte [rax], T_interned_symbol
 30267 00016651 750C                            jne .L_false
 30268 00016653 48B8-                           mov rax, sob_boolean_true
 30268 00016655 [0300000000000000] 
 30269 0001665D EB0A                            jmp .L_end
 30270                                  .L_false:
 30271 0001665F 48B8-                           mov rax, sob_boolean_false
 30271 00016661 [0200000000000000] 
 30272                                  .L_end:
 30273 00016669 C9                              leave
 30274 0001666A C21800                          ret AND_KILL_FRAME(1)
 30275                                  
 30276                                  L_code_ptr_gensym:
 30277 0001666D C8000000                        enter 0, 0
 30278 00016671 48837D1800                      cmp COUNT, 0
 30279 00016676 0F85D2100000                    jne L_error_arg_count_0
 30280 0001667C 48FF0425[9E1A0000]              inc qword [gensym_count]
 30281 00016684 BF09000000                      mov rdi, (1 + 8)
 30282 00016689 E828F4FFFF                      call malloc
 30283 0001668E C60042                          mov byte [rax], T_uninterned_symbol
 30284 00016691 488B0C25[9E1A0000]              mov rcx, qword [gensym_count]
 30285 00016699 48894801                        mov qword [rax + 1], rcx
 30286 0001669D C9                              leave
 30287 0001669E C21000                          ret AND_KILL_FRAME(0)
 30288                                  
 30289                                  L_code_ptr_is_vector:
 30290 000166A1 C8000000                        enter 0, 0
 30291 000166A5 48837D1801                      cmp COUNT, 1
 30292 000166AA 0F85D3100000                    jne L_error_arg_count_1
 30293 000166B0 488B4520                        mov rax, PARAM(0)
 30294 000166B4 803822                          cmp byte [rax], T_vector
 30295 000166B7 750C                            jne .L_false
 30296 000166B9 48B8-                           mov rax, sob_boolean_true
 30296 000166BB [0300000000000000] 
 30297 000166C3 EB0A                            jmp .L_end
 30298                                  .L_false:
 30299 000166C5 48B8-                           mov rax, sob_boolean_false
 30299 000166C7 [0200000000000000] 
 30300                                  .L_end:
 30301 000166CF C9                              leave
 30302 000166D0 C21800                          ret AND_KILL_FRAME(1)
 30303                                  
 30304                                  L_code_ptr_is_closure:
 30305 000166D3 C8000000                        enter 0, 0
 30306 000166D7 48837D1801                      cmp COUNT, 1
 30307 000166DC 0F85A1100000                    jne L_error_arg_count_1
 30308 000166E2 488B4520                        mov rax, PARAM(0)
 30309 000166E6 803804                          cmp byte [rax], T_closure
 30310 000166E9 750C                            jne .L_false
 30311 000166EB 48B8-                           mov rax, sob_boolean_true
 30311 000166ED [0300000000000000] 
 30312 000166F5 EB0A                            jmp .L_end
 30313                                  .L_false:
 30314 000166F7 48B8-                           mov rax, sob_boolean_false
 30314 000166F9 [0200000000000000] 
 30315                                  .L_end:
 30316 00016701 C9                              leave
 30317 00016702 C21800                          ret AND_KILL_FRAME(1)
 30318                                  
 30319                                  L_code_ptr_is_real:
 30320 00016705 C8000000                        enter 0, 0
 30321 00016709 48837D1801                      cmp COUNT, 1
 30322 0001670E 0F856F100000                    jne L_error_arg_count_1
 30323 00016714 488B4520                        mov rax, PARAM(0)
 30324 00016718 803813                          cmp byte [rax], T_real
 30325 0001671B 750C                            jne .L_false
 30326 0001671D 48B8-                           mov rax, sob_boolean_true
 30326 0001671F [0300000000000000] 
 30327 00016727 EB0A                            jmp .L_end
 30328                                  .L_false:
 30329 00016729 48B8-                           mov rax, sob_boolean_false
 30329 0001672B [0200000000000000] 
 30330                                  .L_end:
 30331 00016733 C9                              leave
 30332 00016734 C21800                          ret AND_KILL_FRAME(1)
 30333                                  
 30334                                  L_code_ptr_is_fraction:
 30335 00016737 C8000000                        enter 0, 0
 30336 0001673B 48837D1801                      cmp COUNT, 1
 30337 00016740 0F853D100000                    jne L_error_arg_count_1
 30338 00016746 488B4520                        mov rax, PARAM(0)
 30339 0001674A 803812                          cmp byte [rax], T_fraction
 30340 0001674D 750C                            jne .L_false
 30341 0001674F 48B8-                           mov rax, sob_boolean_true
 30341 00016751 [0300000000000000] 
 30342 00016759 EB0A                            jmp .L_end
 30343                                  .L_false:
 30344 0001675B 48B8-                           mov rax, sob_boolean_false
 30344 0001675D [0200000000000000] 
 30345                                  .L_end:
 30346 00016765 C9                              leave
 30347 00016766 C21800                          ret AND_KILL_FRAME(1)
 30348                                  
 30349                                  L_code_ptr_is_boolean:
 30350 00016769 C8000000                        enter 0, 0
 30351 0001676D 48837D1801                      cmp COUNT, 1
 30352 00016772 0F850B100000                    jne L_error_arg_count_1
 30353 00016778 488B4520                        mov rax, PARAM(0)
 30354 0001677C 8A18                            mov bl, byte [rax]
 30355 0001677E 80E308                          and bl, T_boolean
 30356 00016781 740C                            je .L_false
 30357 00016783 48B8-                           mov rax, sob_boolean_true
 30357 00016785 [0300000000000000] 
 30358 0001678D EB0A                            jmp .L_end
 30359                                  .L_false:
 30360 0001678F 48B8-                           mov rax, sob_boolean_false
 30360 00016791 [0200000000000000] 
 30361                                  .L_end:
 30362 00016799 C9                              leave
 30363 0001679A C21800                          ret AND_KILL_FRAME(1)
 30364                                          
 30365                                  L_code_ptr_is_boolean_false:
 30366 0001679D C8000000                        enter 0, 0
 30367 000167A1 48837D1801                      cmp COUNT, 1
 30368 000167A6 0F85D70F0000                    jne L_error_arg_count_1
 30369 000167AC 488B4520                        mov rax, PARAM(0)
 30370 000167B0 8A18                            mov bl, byte [rax]
 30371 000167B2 80FB09                          cmp bl, T_boolean_false
 30372 000167B5 750C                            jne .L_false
 30373 000167B7 48B8-                           mov rax, sob_boolean_true
 30373 000167B9 [0300000000000000] 
 30374 000167C1 EB0A                            jmp .L_end
 30375                                  .L_false:
 30376 000167C3 48B8-                           mov rax, sob_boolean_false
 30376 000167C5 [0200000000000000] 
 30377                                  .L_end:
 30378 000167CD C9                              leave
 30379 000167CE C21800                          ret AND_KILL_FRAME(1)
 30380                                  
 30381                                  L_code_ptr_is_boolean_true:
 30382 000167D1 C8000000                        enter 0, 0
 30383 000167D5 48837D1801                      cmp COUNT, 1
 30384 000167DA 0F85A30F0000                    jne L_error_arg_count_1
 30385 000167E0 488B4520                        mov rax, PARAM(0)
 30386 000167E4 8A18                            mov bl, byte [rax]
 30387 000167E6 80FB0A                          cmp bl, T_boolean_true
 30388 000167E9 750C                            jne .L_false
 30389 000167EB 48B8-                           mov rax, sob_boolean_true
 30389 000167ED [0300000000000000] 
 30390 000167F5 EB0A                            jmp .L_end
 30391                                  .L_false:
 30392 000167F7 48B8-                           mov rax, sob_boolean_false
 30392 000167F9 [0200000000000000] 
 30393                                  .L_end:
 30394 00016801 C9                              leave
 30395 00016802 C21800                          ret AND_KILL_FRAME(1)
 30396                                  
 30397                                  L_code_ptr_is_number:
 30398 00016805 C8000000                        enter 0, 0
 30399 00016809 48837D1801                      cmp COUNT, 1
 30400 0001680E 0F856F0F0000                    jne L_error_arg_count_1
 30401 00016814 488B4520                        mov rax, PARAM(0)
 30402 00016818 8A18                            mov bl, byte [rax]
 30403 0001681A 80E310                          and bl, T_number
 30404 0001681D 740C                            jz .L_false
 30405 0001681F 48B8-                           mov rax, sob_boolean_true
 30405 00016821 [0300000000000000] 
 30406 00016829 EB0A                            jmp .L_end
 30407                                  .L_false:
 30408 0001682B 48B8-                           mov rax, sob_boolean_false
 30408 0001682D [0200000000000000] 
 30409                                  .L_end:
 30410 00016835 C9                              leave
 30411 00016836 C21800                          ret AND_KILL_FRAME(1)
 30412                                          
 30413                                  L_code_ptr_is_collection:
 30414 00016839 C8000000                        enter 0, 0
 30415 0001683D 48837D1801                      cmp COUNT, 1
 30416 00016842 0F853B0F0000                    jne L_error_arg_count_1
 30417 00016848 488B4520                        mov rax, PARAM(0)
 30418 0001684C 8A18                            mov bl, byte [rax]
 30419 0001684E 80E320                          and bl, T_collection
 30420 00016851 740C                            je .L_false
 30421 00016853 48B8-                           mov rax, sob_boolean_true
 30421 00016855 [0300000000000000] 
 30422 0001685D EB0A                            jmp .L_end
 30423                                  .L_false:
 30424 0001685F 48B8-                           mov rax, sob_boolean_false
 30424 00016861 [0200000000000000] 
 30425                                  .L_end:
 30426 00016869 C9                              leave
 30427 0001686A C21800                          ret AND_KILL_FRAME(1)
 30428                                  
 30429                                  L_code_ptr_cons:
 30430 0001686D C8000000                        enter 0, 0
 30431 00016871 48837D1802                      cmp COUNT, 2
 30432 00016876 0F853C0F0000                    jne L_error_arg_count_2
 30433 0001687C BF11000000                      mov rdi, (1 + 8 + 8)
 30434 00016881 E830F2FFFF                      call malloc
 30435 00016886 C60021                          mov byte [rax], T_pair
 30436 00016889 488B5D20                        mov rbx, PARAM(0)
 30437 0001688D 48895801                        mov SOB_PAIR_CAR(rax), rbx
 30438 00016891 488B5D28                        mov rbx, PARAM(1)
 30439 00016895 48895809                        mov SOB_PAIR_CDR(rax), rbx
 30440 00016899 C9                              leave
 30441 0001689A C22000                          ret AND_KILL_FRAME(2)
 30442                                  
 30443                                  L_code_ptr_display_sexpr:
 30444 0001689D C8000000                        enter 0, 0
 30445 000168A1 48837D1801                      cmp COUNT, 1
 30446 000168A6 0F85D70E0000                    jne L_error_arg_count_1
 30447 000168AC 488B7D20                        mov rdi, PARAM(0)
 30448 000168B0 E882F4FFFF                      call print_sexpr
 30449 000168B5 48B8-                           mov rax, sob_void
 30449 000168B7 [0000000000000000] 
 30450 000168BF C9                              leave
 30451 000168C0 C21800                          ret AND_KILL_FRAME(1)
 30452                                  
 30453                                  L_code_ptr_write_char:
 30454 000168C3 C8000000                        enter 0, 0
 30455 000168C7 48837D1801                      cmp COUNT, 1
 30456 000168CC 0F85B10E0000                    jne L_error_arg_count_1
 30457 000168D2 488B4520                        mov rax, PARAM(0)
 30458                                          assert_char(rax)
    53 000168D6 803802              <1>  cmp byte [%1], %2
    54 000168D9 0F85780F0000        <1>  jne L_error_incorrect_type
 30459 000168DF 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 30460 000168E2 4825FF000000                    and rax, 255
 30461 000168E8 48BF-                           mov rdi, fmt_char
 30461 000168EA [A61A000000000000] 
 30462 000168F2 4889C6                          mov rsi, rax
 30463 000168F5 B800000000                      mov rax, 0
 30464                                          ENTER
    44 000168FA C8000000            <1>  enter 0, 0
    45 000168FE 4883E4F0            <1>  and rsp, ~15
 30465 00016902 E8(00000000)                    call printf
 30466                                          LEAVE
    49 00016907 C9                  <1>  leave
 30467 00016908 48B8-                           mov rax, sob_void
 30467 0001690A [0000000000000000] 
 30468 00016912 C9                              leave
 30469 00016913 C21800                          ret AND_KILL_FRAME(1)
 30470                                  
 30471                                  L_code_ptr_car:
 30472 00016916 C8000000                        enter 0, 0
 30473 0001691A 48837D1801                      cmp COUNT, 1
 30474 0001691F 0F855E0E0000                    jne L_error_arg_count_1
 30475 00016925 488B4520                        mov rax, PARAM(0)
 30476                                          assert_pair(rax)
    53 00016929 803821              <1>  cmp byte [%1], %2
    54 0001692C 0F85250F0000        <1>  jne L_error_incorrect_type
 30477 00016932 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 30478 00016936 C9                              leave
 30479 00016937 C21800                          ret AND_KILL_FRAME(1)
 30480                                          
 30481                                  L_code_ptr_cdr:
 30482 0001693A C8000000                        enter 0, 0
 30483 0001693E 48837D1801                      cmp COUNT, 1
 30484 00016943 0F853A0E0000                    jne L_error_arg_count_1
 30485 00016949 488B4520                        mov rax, PARAM(0)
 30486                                          assert_pair(rax)
    53 0001694D 803821              <1>  cmp byte [%1], %2
    54 00016950 0F85010F0000        <1>  jne L_error_incorrect_type
 30487 00016956 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 30488 0001695A C9                              leave
 30489 0001695B C21800                          ret AND_KILL_FRAME(1)
 30490                                          
 30491                                  L_code_ptr_string_length:
 30492 0001695E C8000000                        enter 0, 0
 30493 00016962 48837D1801                      cmp COUNT, 1
 30494 00016967 0F85160E0000                    jne L_error_arg_count_1
 30495 0001696D 488B4520                        mov rax, PARAM(0)
 30496                                          assert_string(rax)
    53 00016971 803803              <1>  cmp byte [%1], %2
    54 00016974 0F85DD0E0000        <1>  jne L_error_incorrect_type
 30497 0001697A 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 30498 0001697E E84F0D0000                      call make_integer
 30499 00016983 C9                              leave
 30500 00016984 C21800                          ret AND_KILL_FRAME(1)
 30501                                  
 30502                                  L_code_ptr_vector_length:
 30503 00016987 C8000000                        enter 0, 0
 30504 0001698B 48837D1801                      cmp COUNT, 1
 30505 00016990 0F85ED0D0000                    jne L_error_arg_count_1
 30506 00016996 488B4520                        mov rax, PARAM(0)
 30507                                          assert_vector(rax)
    53 0001699A 803822              <1>  cmp byte [%1], %2
    54 0001699D 0F85B40E0000        <1>  jne L_error_incorrect_type
 30508 000169A3 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 30509 000169A7 E8260D0000                      call make_integer
 30510 000169AC C9                              leave
 30511 000169AD C21800                          ret AND_KILL_FRAME(1)
 30512                                  
 30513                                  L_code_ptr_real_to_integer:
 30514 000169B0 C8000000                        enter 0, 0
 30515 000169B4 48837D1801                      cmp COUNT, 1
 30516 000169B9 0F85C40D0000                    jne L_error_arg_count_1
 30517 000169BF 488B5D20                        mov rbx, PARAM(0)
 30518                                          assert_real(rbx)
    53 000169C3 803B13              <1>  cmp byte [%1], %2
    54 000169C6 0F858B0E0000        <1>  jne L_error_incorrect_type
 30519 000169CC F20F104301                      movsd xmm0, qword [rbx + 1]
 30520 000169D1 F2480F2CF8                      cvttsd2si rdi, xmm0
 30521 000169D6 E8F70C0000                      call make_integer
 30522 000169DB C9                              leave
 30523 000169DC C21800                          ret AND_KILL_FRAME(1)
 30524                                  
 30525                                  L_code_ptr_exit:
 30526 000169DF C8000000                        enter 0, 0
 30527 000169E3 48837D1800                      cmp COUNT, 0
 30528 000169E8 0F85600D0000                    jne L_error_arg_count_0
 30529 000169EE B800000000                      mov rax, 0
 30530 000169F3 E8(00000000)                    call exit
 30531                                  
 30532                                  L_code_ptr_integer_to_real:
 30533 000169F8 C8000000                        enter 0, 0
 30534 000169FC 48837D1801                      cmp COUNT, 1
 30535 00016A01 0F857C0D0000                    jne L_error_arg_count_1
 30536 00016A07 488B4520                        mov rax, PARAM(0)
 30537                                          assert_integer(rax)
    53 00016A0B 803811              <1>  cmp byte [%1], %2
    54 00016A0E 0F85430E0000        <1>  jne L_error_incorrect_type
 30538 00016A14 FF7001                          push qword [rax + 1]
 30539 00016A17 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 30540 00016A1D E8980C0000                      call make_real
 30541 00016A22 C9                              leave
 30542 00016A23 C21800                          ret AND_KILL_FRAME(1)
 30543                                  
 30544                                  L_code_ptr_fraction_to_real:
 30545 00016A26 C8000000                        enter 0, 0
 30546 00016A2A 48837D1801                      cmp COUNT, 1
 30547 00016A2F 0F854E0D0000                    jne L_error_arg_count_1
 30548 00016A35 488B4520                        mov rax, PARAM(0)
 30549                                          assert_fraction(rax)
    53 00016A39 803812              <1>  cmp byte [%1], %2
    54 00016A3C 0F85150E0000        <1>  jne L_error_incorrect_type
 30550 00016A42 FF7001                          push qword [rax + 1]
 30551 00016A45 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 30552 00016A4B FF7009                          push qword [rax + 1 + 8]
 30553 00016A4E F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 30554 00016A54 F20F5EC1                        divsd xmm0, xmm1
 30555 00016A58 E85D0C0000                      call make_real
 30556 00016A5D C9                              leave
 30557 00016A5E C21800                          ret AND_KILL_FRAME(1)
 30558                                  
 30559                                  L_code_ptr_char_to_integer:
 30560 00016A61 C8000000                        enter 0, 0
 30561 00016A65 48837D1801                      cmp COUNT, 1
 30562 00016A6A 0F85130D0000                    jne L_error_arg_count_1
 30563 00016A70 488B4520                        mov rax, PARAM(0)
 30564                                          assert_char(rax)
    53 00016A74 803802              <1>  cmp byte [%1], %2
    54 00016A77 0F85DA0D0000        <1>  jne L_error_incorrect_type
 30565 00016A7D 8A4001                          mov al, byte [rax + 1]
 30566 00016A80 4825FF000000                    and rax, 255
 30567 00016A86 4889C7                          mov rdi, rax
 30568 00016A89 E8440C0000                      call make_integer
 30569 00016A8E C9                              leave
 30570 00016A8F C21800                          ret AND_KILL_FRAME(1)
 30571                                  
 30572                                  L_code_ptr_integer_to_fraction:
 30573 00016A92 C8000000                        enter 0, 0
 30574 00016A96 48837D1801                      cmp COUNT, 1
 30575 00016A9B 0F85E20C0000                    jne L_error_arg_count_1
 30576 00016AA1 4C8B4520                        mov r8, PARAM(0)
 30577                                          assert_integer(r8)
    53 00016AA5 41803811            <1>  cmp byte [%1], %2
    54 00016AA9 0F85A80D0000        <1>  jne L_error_incorrect_type
 30578 00016AAF BF11000000                      mov rdi, (1 + 8 + 8)
 30579 00016AB4 E8FDEFFFFF                      call malloc
 30580 00016AB9 498B5801                        mov rbx, qword [r8 + 1]
 30581 00016ABD C60012                          mov byte [rax], T_fraction
 30582 00016AC0 48895801                        mov qword [rax + 1], rbx
 30583 00016AC4 48C7400901000000                mov qword [rax + 1 + 8], 1
 30584 00016ACC C9                              leave
 30585 00016ACD C21800                          ret AND_KILL_FRAME(1)
 30586                                  
 30587                                  L_code_ptr_integer_to_char:
 30588 00016AD0 C8000000                        enter 0, 0
 30589 00016AD4 48837D1801                      cmp COUNT, 1
 30590 00016AD9 0F85A40C0000                    jne L_error_arg_count_1
 30591 00016ADF 488B4520                        mov rax, PARAM(0)
 30592                                          assert_integer(rax)
    53 00016AE3 803811              <1>  cmp byte [%1], %2
    54 00016AE6 0F856B0D0000        <1>  jne L_error_incorrect_type
 30593 00016AEC 488B5801                        mov rbx, qword [rax + 1]
 30594 00016AF0 4883FB00                        cmp rbx, 0
 30595 00016AF4 0F8EF20B0000                    jle L_error_integer_range
 30596 00016AFA 4881FB00010000                  cmp rbx, 256
 30597 00016B01 0F8DE50B0000                    jge L_error_integer_range
 30598 00016B07 BF02000000                      mov rdi, (1 + 1)
 30599 00016B0C E8A5EFFFFF                      call malloc
 30600 00016B11 C60002                          mov byte [rax], T_char
 30601 00016B14 885801                          mov byte [rax + 1], bl
 30602 00016B17 C9                              leave
 30603 00016B18 C21800                          ret AND_KILL_FRAME(1)
 30604                                  
 30605                                  L_code_ptr_trng:
 30606 00016B1B C8000000                        enter 0, 0
 30607 00016B1F 48837D1800                      cmp COUNT, 0
 30608 00016B24 0F85240C0000                    jne L_error_arg_count_0
 30609 00016B2A 480FC7F7                        rdrand rdi
 30610 00016B2E 48D1EF                          shr rdi, 1
 30611 00016B31 E89C0B0000                      call make_integer
 30612 00016B36 C9                              leave
 30613 00016B37 C21000                          ret AND_KILL_FRAME(0)
 30614                                  
 30615                                  L_code_ptr_is_zero:
 30616 00016B3A C8000000                        enter 0, 0
 30617 00016B3E 48837D1801                      cmp COUNT, 1
 30618 00016B43 0F853A0C0000                    jne L_error_arg_count_1
 30619 00016B49 488B4520                        mov rax, PARAM(0)
 30620 00016B4D 803811                          cmp byte [rax], T_integer
 30621 00016B50 740F                            je .L_integer
 30622 00016B52 803812                          cmp byte [rax], T_fraction
 30623 00016B55 7413                            je .L_fraction
 30624 00016B57 803813                          cmp byte [rax], T_real
 30625 00016B5A 7417                            je .L_real
 30626 00016B5C E9F60C0000                      jmp L_error_incorrect_type
 30627                                  .L_integer:
 30628 00016B61 4883780100                      cmp qword [rax + 1], 0
 30629 00016B66 7429                            je .L_zero
 30630 00016B68 EB1B                            jmp .L_not_zero
 30631                                  .L_fraction:
 30632 00016B6A 4883780100                      cmp qword [rax + 1], 0
 30633 00016B6F 7420                            je .L_zero
 30634 00016B71 EB12                            jmp .L_not_zero
 30635                                  .L_real:
 30636 00016B73 660FEFC0                        pxor xmm0, xmm0
 30637 00016B77 FF7001                          push qword [rax + 1]
 30638 00016B7A F20F100C24                      movsd xmm1, qword [rsp]
 30639 00016B7F 660F2EC1                        ucomisd xmm0, xmm1
 30640 00016B83 740C                            je .L_zero
 30641                                  .L_not_zero:
 30642 00016B85 48B8-                           mov rax, sob_boolean_false
 30642 00016B87 [0200000000000000] 
 30643 00016B8F EB0A                            jmp .L_end
 30644                                  .L_zero:
 30645 00016B91 48B8-                           mov rax, sob_boolean_true
 30645 00016B93 [0300000000000000] 
 30646                                  .L_end:
 30647 00016B9B C9                              leave
 30648 00016B9C C21800                          ret AND_KILL_FRAME(1)
 30649                                  
 30650                                  L_code_ptr_is_integer:
 30651 00016B9F C8000000                        enter 0, 0
 30652 00016BA3 48837D1801                      cmp COUNT, 1
 30653 00016BA8 0F85D50B0000                    jne L_error_arg_count_1
 30654 00016BAE 488B4520                        mov rax, PARAM(0)
 30655 00016BB2 803811                          cmp byte [rax], T_integer
 30656 00016BB5 750C                            jne .L_false
 30657 00016BB7 48B8-                           mov rax, sob_boolean_true
 30657 00016BB9 [0300000000000000] 
 30658 00016BC1 EB0A                            jmp .L_exit
 30659                                  .L_false:
 30660 00016BC3 48B8-                           mov rax, sob_boolean_false
 30660 00016BC5 [0200000000000000] 
 30661                                  .L_exit:
 30662 00016BCD C9                              leave
 30663 00016BCE C21800                          ret AND_KILL_FRAME(1)
 30664                                  
 30665                                  L_code_ptr_raw_bin_add_rr:
 30666 00016BD1 C8000000                        enter 0, 0
 30667 00016BD5 48837D1802                      cmp COUNT, 2
 30668 00016BDA 0F85D80B0000                    jne L_error_arg_count_2
 30669 00016BE0 488B5D20                        mov rbx, PARAM(0)
 30670                                          assert_real(rbx)
    53 00016BE4 803B13              <1>  cmp byte [%1], %2
    54 00016BE7 0F856A0C0000        <1>  jne L_error_incorrect_type
 30671 00016BED 488B4D28                        mov rcx, PARAM(1)
 30672                                          assert_real(rcx)
    53 00016BF1 803913              <1>  cmp byte [%1], %2
    54 00016BF4 0F855D0C0000        <1>  jne L_error_incorrect_type
 30673 00016BFA F20F104301                      movsd xmm0, qword [rbx + 1]
 30674 00016BFF F20F104901                      movsd xmm1, qword [rcx + 1]
 30675 00016C04 F20F58C1                        addsd xmm0, xmm1
 30676 00016C08 E8AD0A0000                      call make_real
 30677 00016C0D C9                              leave
 30678 00016C0E C22000                          ret AND_KILL_FRAME(2)
 30679                                  
 30680                                  L_code_ptr_raw_bin_sub_rr:
 30681 00016C11 C8000000                        enter 0, 0
 30682 00016C15 48837D1802                      cmp COUNT, 2
 30683 00016C1A 0F85980B0000                    jne L_error_arg_count_2
 30684 00016C20 488B5D20                        mov rbx, PARAM(0)
 30685                                          assert_real(rbx)
    53 00016C24 803B13              <1>  cmp byte [%1], %2
    54 00016C27 0F852A0C0000        <1>  jne L_error_incorrect_type
 30686 00016C2D 488B4D28                        mov rcx, PARAM(1)
 30687                                          assert_real(rcx)
    53 00016C31 803913              <1>  cmp byte [%1], %2
    54 00016C34 0F851D0C0000        <1>  jne L_error_incorrect_type
 30688 00016C3A F20F104301                      movsd xmm0, qword [rbx + 1]
 30689 00016C3F F20F104901                      movsd xmm1, qword [rcx + 1]
 30690 00016C44 F20F5CC1                        subsd xmm0, xmm1
 30691 00016C48 E86D0A0000                      call make_real
 30692 00016C4D C9                              leave
 30693 00016C4E C22000                          ret AND_KILL_FRAME(2)
 30694                                  
 30695                                  L_code_ptr_raw_bin_mul_rr:
 30696 00016C51 C8000000                        enter 0, 0
 30697 00016C55 48837D1802                      cmp COUNT, 2
 30698 00016C5A 0F85580B0000                    jne L_error_arg_count_2
 30699 00016C60 488B5D20                        mov rbx, PARAM(0)
 30700                                          assert_real(rbx)
    53 00016C64 803B13              <1>  cmp byte [%1], %2
    54 00016C67 0F85EA0B0000        <1>  jne L_error_incorrect_type
 30701 00016C6D 488B4D28                        mov rcx, PARAM(1)
 30702                                          assert_real(rcx)
    53 00016C71 803913              <1>  cmp byte [%1], %2
    54 00016C74 0F85DD0B0000        <1>  jne L_error_incorrect_type
 30703 00016C7A F20F104301                      movsd xmm0, qword [rbx + 1]
 30704 00016C7F F20F104901                      movsd xmm1, qword [rcx + 1]
 30705 00016C84 F20F59C1                        mulsd xmm0, xmm1
 30706 00016C88 E82D0A0000                      call make_real
 30707 00016C8D C9                              leave
 30708 00016C8E C22000                          ret AND_KILL_FRAME(2)
 30709                                  
 30710                                  L_code_ptr_raw_bin_div_rr:
 30711 00016C91 C8000000                        enter 0, 0
 30712 00016C95 48837D1802                      cmp COUNT, 2
 30713 00016C9A 0F85180B0000                    jne L_error_arg_count_2
 30714 00016CA0 488B5D20                        mov rbx, PARAM(0)
 30715                                          assert_real(rbx)
    53 00016CA4 803B13              <1>  cmp byte [%1], %2
    54 00016CA7 0F85AA0B0000        <1>  jne L_error_incorrect_type
 30716 00016CAD 488B4D28                        mov rcx, PARAM(1)
 30717                                          assert_real(rcx)
    53 00016CB1 803913              <1>  cmp byte [%1], %2
    54 00016CB4 0F859D0B0000        <1>  jne L_error_incorrect_type
 30718 00016CBA F20F104301                      movsd xmm0, qword [rbx + 1]
 30719 00016CBF F20F104901                      movsd xmm1, qword [rcx + 1]
 30720 00016CC4 660FEFD2                        pxor xmm2, xmm2
 30721 00016CC8 660F2ECA                        ucomisd xmm1, xmm2
 30722 00016CCC 0F84B60B0000                    je L_error_division_by_zero
 30723 00016CD2 F20F5EC1                        divsd xmm0, xmm1
 30724 00016CD6 E8DF090000                      call make_real
 30725 00016CDB C9                              leave
 30726 00016CDC C22000                          ret AND_KILL_FRAME(2)
 30727                                  
 30728                                  L_code_ptr_raw_bin_add_zz:
 30729 00016CDF C8000000                	enter 0, 0
 30730 00016CE3 48837D1802              	cmp COUNT, 2
 30731 00016CE8 0F85CA0A0000            	jne L_error_arg_count_2
 30732 00016CEE 4C8B4520                	mov r8, PARAM(0)
 30733                                  	assert_integer(r8)
    53 00016CF2 41803811            <1>  cmp byte [%1], %2
    54 00016CF6 0F855B0B0000        <1>  jne L_error_incorrect_type
 30734 00016CFC 4C8B4D28                	mov r9, PARAM(1)
 30735                                  	assert_integer(r9)
    53 00016D00 41803911            <1>  cmp byte [%1], %2
    54 00016D04 0F854D0B0000        <1>  jne L_error_incorrect_type
 30736 00016D0A 498B7801                	mov rdi, qword [r8 + 1]
 30737 00016D0E 49037901                	add rdi, qword [r9 + 1]
 30738 00016D12 E8BB090000              	call make_integer
 30739 00016D17 C9                      	leave
 30740 00016D18 C22000                  	ret AND_KILL_FRAME(2)
 30741                                  
 30742                                  L_code_ptr_raw_bin_add_qq:
 30743 00016D1B C8000000                        enter 0, 0
 30744 00016D1F 48837D1802                      cmp COUNT, 2
 30745 00016D24 0F858E0A0000                    jne L_error_arg_count_2
 30746 00016D2A 4C8B4520                        mov r8, PARAM(0)
 30747                                          assert_fraction(r8)
    53 00016D2E 41803812            <1>  cmp byte [%1], %2
    54 00016D32 0F851F0B0000        <1>  jne L_error_incorrect_type
 30748 00016D38 4C8B4D28                        mov r9, PARAM(1)
 30749                                          assert_fraction(r9)
    53 00016D3C 41803912            <1>  cmp byte [%1], %2
    54 00016D40 0F85110B0000        <1>  jne L_error_incorrect_type
 30750 00016D46 498B4001                        mov rax, qword [r8 + 1] ; num1
 30751 00016D4A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30752 00016D4E 4899                            cqo
 30753 00016D50 48F7EB                          imul rbx
 30754 00016D53 4889C6                          mov rsi, rax
 30755 00016D56 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30756 00016D5A 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 30757 00016D5E 4899                            cqo
 30758 00016D60 48F7EB                          imul rbx
 30759 00016D63 4801C6                          add rsi, rax
 30760 00016D66 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30761 00016D6A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30762 00016D6E 4899                            cqo
 30763 00016D70 48F7EB                          imul rbx
 30764 00016D73 4889C7                          mov rdi, rax
 30765 00016D76 E8DE010000                      call normalize_fraction
 30766 00016D7B C9                              leave
 30767 00016D7C C22000                          ret AND_KILL_FRAME(2)
 30768                                  
 30769                                  L_code_ptr_raw_bin_sub_zz:
 30770 00016D7F C8000000                	enter 0, 0
 30771 00016D83 48837D1802              	cmp COUNT, 2
 30772 00016D88 0F852A0A0000            	jne L_error_arg_count_2
 30773 00016D8E 4C8B4520                	mov r8, PARAM(0)
 30774                                  	assert_integer(r8)
    53 00016D92 41803811            <1>  cmp byte [%1], %2
    54 00016D96 0F85BB0A0000        <1>  jne L_error_incorrect_type
 30775 00016D9C 4C8B4D28                	mov r9, PARAM(1)
 30776                                  	assert_integer(r9)
    53 00016DA0 41803911            <1>  cmp byte [%1], %2
    54 00016DA4 0F85AD0A0000        <1>  jne L_error_incorrect_type
 30777 00016DAA 498B7801                	mov rdi, qword [r8 + 1]
 30778 00016DAE 492B7901                	sub rdi, qword [r9 + 1]
 30779 00016DB2 E81B090000              	call make_integer
 30780 00016DB7 C9                      	leave
 30781 00016DB8 C22000                  	ret AND_KILL_FRAME(2)
 30782                                  
 30783                                  L_code_ptr_raw_bin_sub_qq:
 30784 00016DBB C8000000                        enter 0, 0
 30785 00016DBF 48837D1802                      cmp COUNT, 2
 30786 00016DC4 0F85EE090000                    jne L_error_arg_count_2
 30787 00016DCA 4C8B4520                        mov r8, PARAM(0)
 30788                                          assert_fraction(r8)
    53 00016DCE 41803812            <1>  cmp byte [%1], %2
    54 00016DD2 0F857F0A0000        <1>  jne L_error_incorrect_type
 30789 00016DD8 4C8B4D28                        mov r9, PARAM(1)
 30790                                          assert_fraction(r9)
    53 00016DDC 41803912            <1>  cmp byte [%1], %2
    54 00016DE0 0F85710A0000        <1>  jne L_error_incorrect_type
 30791 00016DE6 498B4001                        mov rax, qword [r8 + 1] ; num1
 30792 00016DEA 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30793 00016DEE 4899                            cqo
 30794 00016DF0 48F7EB                          imul rbx
 30795 00016DF3 4889C6                          mov rsi, rax
 30796 00016DF6 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30797 00016DFA 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 30798 00016DFE 4899                            cqo
 30799 00016E00 48F7EB                          imul rbx
 30800 00016E03 4829C6                          sub rsi, rax
 30801 00016E06 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30802 00016E0A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30803 00016E0E 4899                            cqo
 30804 00016E10 48F7EB                          imul rbx
 30805 00016E13 4889C7                          mov rdi, rax
 30806 00016E16 E83E010000                      call normalize_fraction
 30807 00016E1B C9                              leave
 30808 00016E1C C22000                          ret AND_KILL_FRAME(2)
 30809                                  
 30810                                  L_code_ptr_raw_bin_mul_zz:
 30811 00016E1F C8000000                	enter 0, 0
 30812 00016E23 48837D1802              	cmp COUNT, 2
 30813 00016E28 0F858A090000            	jne L_error_arg_count_2
 30814 00016E2E 4C8B4520                	mov r8, PARAM(0)
 30815                                  	assert_integer(r8)
    53 00016E32 41803811            <1>  cmp byte [%1], %2
    54 00016E36 0F851B0A0000        <1>  jne L_error_incorrect_type
 30816 00016E3C 4C8B4D28                	mov r9, PARAM(1)
 30817                                  	assert_integer(r9)
    53 00016E40 41803911            <1>  cmp byte [%1], %2
    54 00016E44 0F850D0A0000        <1>  jne L_error_incorrect_type
 30818 00016E4A 4899                    	cqo
 30819 00016E4C 498B4001                	mov rax, qword [r8 + 1]
 30820 00016E50 49F76101                	mul qword [r9 + 1]
 30821 00016E54 4889C7                  	mov rdi, rax
 30822 00016E57 E876080000              	call make_integer
 30823 00016E5C C9                      	leave
 30824 00016E5D C22000                  	ret AND_KILL_FRAME(2)
 30825                                  
 30826                                  L_code_ptr_raw_bin_mul_qq:
 30827 00016E60 C8000000                        enter 0, 0
 30828 00016E64 48837D1802                      cmp COUNT, 2
 30829 00016E69 0F8549090000                    jne L_error_arg_count_2
 30830 00016E6F 4C8B4520                        mov r8, PARAM(0)
 30831                                          assert_fraction(r8)
    53 00016E73 41803812            <1>  cmp byte [%1], %2
    54 00016E77 0F85DA090000        <1>  jne L_error_incorrect_type
 30832 00016E7D 4C8B4D28                        mov r9, PARAM(1)
 30833                                          assert_fraction(r9)
    53 00016E81 41803912            <1>  cmp byte [%1], %2
    54 00016E85 0F85CC090000        <1>  jne L_error_incorrect_type
 30834 00016E8B 498B4001                        mov rax, qword [r8 + 1] ; num1
 30835 00016E8F 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30836 00016E93 4899                            cqo
 30837 00016E95 48F7EB                          imul rbx
 30838 00016E98 4889C6                          mov rsi, rax
 30839 00016E9B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30840 00016E9F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 30841 00016EA3 4899                            cqo
 30842 00016EA5 48F7EB                          imul rbx
 30843 00016EA8 4889C7                          mov rdi, rax
 30844 00016EAB E8A9000000                      call normalize_fraction
 30845 00016EB0 C9                              leave
 30846 00016EB1 C22000                          ret AND_KILL_FRAME(2)
 30847                                          
 30848                                  L_code_ptr_raw_bin_div_zz:
 30849 00016EB4 C8000000                	enter 0, 0
 30850 00016EB8 48837D1802              	cmp COUNT, 2
 30851 00016EBD 0F85F5080000            	jne L_error_arg_count_2
 30852 00016EC3 4C8B4520                	mov r8, PARAM(0)
 30853                                  	assert_integer(r8)
    53 00016EC7 41803811            <1>  cmp byte [%1], %2
    54 00016ECB 0F8586090000        <1>  jne L_error_incorrect_type
 30854 00016ED1 4C8B4D28                	mov r9, PARAM(1)
 30855                                  	assert_integer(r9)
    53 00016ED5 41803911            <1>  cmp byte [%1], %2
    54 00016ED9 0F8578090000        <1>  jne L_error_incorrect_type
 30856 00016EDF 498B7901                	mov rdi, qword [r9 + 1]
 30857 00016EE3 4883FF00                	cmp rdi, 0
 30858 00016EE7 0F849B090000            	je L_error_division_by_zero
 30859 00016EED 498B7001                	mov rsi, qword [r8 + 1]
 30860 00016EF1 E863000000              	call normalize_fraction
 30861 00016EF6 C9                      	leave
 30862 00016EF7 C22000                  	ret AND_KILL_FRAME(2)
 30863                                  
 30864                                  L_code_ptr_raw_bin_div_qq:
 30865 00016EFA C8000000                        enter 0, 0
 30866 00016EFE 48837D1802                      cmp COUNT, 2
 30867 00016F03 0F85AF080000                    jne L_error_arg_count_2
 30868 00016F09 4C8B4520                        mov r8, PARAM(0)
 30869                                          assert_fraction(r8)
    53 00016F0D 41803812            <1>  cmp byte [%1], %2
    54 00016F11 0F8540090000        <1>  jne L_error_incorrect_type
 30870 00016F17 4C8B4D28                        mov r9, PARAM(1)
 30871                                          assert_fraction(r9)
    53 00016F1B 41803912            <1>  cmp byte [%1], %2
    54 00016F1F 0F8532090000        <1>  jne L_error_incorrect_type
 30872 00016F25 4983790100                      cmp qword [r9 + 1], 0
 30873 00016F2A 0F8458090000                    je L_error_division_by_zero
 30874 00016F30 498B4001                        mov rax, qword [r8 + 1] ; num1
 30875 00016F34 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 30876 00016F38 4899                            cqo
 30877 00016F3A 48F7EB                          imul rbx
 30878 00016F3D 4889C6                          mov rsi, rax
 30879 00016F40 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 30880 00016F44 498B5901                        mov rbx, qword [r9 + 1] ; num2
 30881 00016F48 4899                            cqo
 30882 00016F4A 48F7EB                          imul rbx
 30883 00016F4D 4889C7                          mov rdi, rax
 30884 00016F50 E804000000                      call normalize_fraction
 30885 00016F55 C9                              leave
 30886 00016F56 C22000                          ret AND_KILL_FRAME(2)
 30887                                          
 30888                                  normalize_fraction:
 30889 00016F59 56                              push rsi
 30890 00016F5A 57                              push rdi
 30891 00016F5B E859000000                      call gcd
 30892 00016F60 4889C3                          mov rbx, rax
 30893 00016F63 58                              pop rax
 30894 00016F64 4899                            cqo
 30895 00016F66 48F7FB                          idiv rbx
 30896 00016F69 4989C0                          mov r8, rax
 30897 00016F6C 58                              pop rax
 30898 00016F6D 4899                            cqo
 30899 00016F6F 48F7FB                          idiv rbx
 30900 00016F72 4989C1                          mov r9, rax
 30901 00016F75 4983F900                        cmp r9, 0
 30902 00016F79 741C                            je .L_zero
 30903 00016F7B 4983F801                        cmp r8, 1
 30904 00016F7F 7421                            je .L_int
 30905 00016F81 BF11000000                      mov rdi, (1 + 8 + 8)
 30906 00016F86 E82BEBFFFF                      call malloc
 30907 00016F8B C60012                          mov byte [rax], T_fraction
 30908 00016F8E 4C894801                        mov qword [rax + 1], r9
 30909 00016F92 4C894009                        mov qword [rax + 1 + 8], r8
 30910 00016F96 C3                              ret
 30911                                  .L_zero:
 30912 00016F97 BF00000000                      mov rdi, 0
 30913 00016F9C E831070000                      call make_integer
 30914 00016FA1 C3                              ret
 30915                                  .L_int:
 30916 00016FA2 4C89CF                          mov rdi, r9
 30917 00016FA5 E828070000                      call make_integer
 30918 00016FAA C3                              ret
 30919                                  
 30920                                  iabs:
 30921 00016FAB 4889F8                          mov rax, rdi
 30922 00016FAE 4883F800                        cmp rax, 0
 30923 00016FB2 7C01                            jl .Lneg
 30924 00016FB4 C3                              ret
 30925                                  .Lneg:
 30926 00016FB5 48F7D8                          neg rax
 30927 00016FB8 C3                              ret
 30928                                  
 30929                                  gcd:
 30930 00016FB9 E8EDFFFFFF                      call iabs
 30931 00016FBE 4889C3                          mov rbx, rax
 30932 00016FC1 4889F7                          mov rdi, rsi
 30933 00016FC4 E8E2FFFFFF                      call iabs
 30934 00016FC9 4883F800                        cmp rax, 0
 30935 00016FCD 7502                            jne .L0
 30936 00016FCF 4893                            xchg rax, rbx
 30937                                  .L0:
 30938 00016FD1 4883FB00                        cmp rbx, 0
 30939 00016FD5 740C                            je .L1
 30940 00016FD7 4899                            cqo
 30941 00016FD9 48F7F3                          div rbx
 30942 00016FDC 4889D0                          mov rax, rdx
 30943 00016FDF 4893                            xchg rax, rbx
 30944 00016FE1 EBEE                            jmp .L0
 30945                                  .L1:
 30946 00016FE3 C3                              ret
 30947                                  
 30948                                  L_code_ptr_error:
 30949 00016FE4 C8000000                        enter 0, 0
 30950 00016FE8 48837D1802                      cmp COUNT, 2
 30951 00016FED 0F85C5070000                    jne L_error_arg_count_2
 30952 00016FF3 488B7520                        mov rsi, PARAM(0)
 30953                                          assert_interned_symbol(rsi)
    53 00016FF7 803E41              <1>  cmp byte [%1], %2
    54 00016FFA 0F8557080000        <1>  jne L_error_incorrect_type
 30954 00017000 488B7528                        mov rsi, PARAM(1)
 30955                                          assert_string(rsi)
    53 00017004 803E03              <1>  cmp byte [%1], %2
    54 00017007 0F854A080000        <1>  jne L_error_incorrect_type
 30956 0001700D 48BF-                           mov rdi, fmt_scheme_error_part_1
 30956 0001700F [041C000000000000] 
 30957 00017017 B800000000                      mov rax, 0
 30958                                          ENTER
    44 0001701C C8000000            <1>  enter 0, 0
    45 00017020 4883E4F0            <1>  and rsp, ~15
 30959 00017024 E8(00000000)                    call printf
 30960                                          LEAVE
    49 00017029 C9                  <1>  leave
 30961 0001702A 488B7D20                        mov rdi, PARAM(0)
 30962 0001702E E804EDFFFF                      call print_sexpr
 30963 00017033 48BF-                           mov rdi, fmt_scheme_error_part_2
 30963 00017035 [181C000000000000] 
 30964 0001703D B800000000                      mov rax, 0
 30965                                          ENTER
    44 00017042 C8000000            <1>  enter 0, 0
    45 00017046 4883E4F0            <1>  and rsp, ~15
 30966 0001704A E8(00000000)                    call printf
 30967                                          LEAVE
    49 0001704F C9                  <1>  leave
 30968 00017050 488B4528                        mov rax, PARAM(1)       ; sob_string
 30969 00017054 BE01000000                      mov rsi, 1              ; size = 1 byte
 30970 00017059 488B5001                        mov rdx, qword [rax + 1] ; length
 30971 0001705D 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 30972 00017061 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 30973                                  	ENTER
    44 00017069 C8000000            <1>  enter 0, 0
    45 0001706D 4883E4F0            <1>  and rsp, ~15
 30974 00017071 E8(00000000)                    call fwrite
 30975                                  	LEAVE
    49 00017076 C9                  <1>  leave
 30976 00017077 48BF-                           mov rdi, fmt_scheme_error_part_3
 30976 00017079 [5A1C000000000000] 
 30977 00017081 B800000000                      mov rax, 0
 30978                                          ENTER
    44 00017086 C8000000            <1>  enter 0, 0
    45 0001708A 4883E4F0            <1>  and rsp, ~15
 30979 0001708E E8(00000000)                    call printf
 30980                                          LEAVE
    49 00017093 C9                  <1>  leave
 30981 00017094 48C7C0F7FFFFFF                  mov rax, -9
 30982 0001709B E8(00000000)                    call exit
 30983                                  
 30984                                  L_code_ptr_raw_less_than_rr:
 30985 000170A0 C8000000                        enter 0, 0
 30986 000170A4 48837D1802                      cmp COUNT, 2
 30987 000170A9 0F8509070000                    jne L_error_arg_count_2
 30988 000170AF 488B7520                        mov rsi, PARAM(0)
 30989                                          assert_real(rsi)
    53 000170B3 803E13              <1>  cmp byte [%1], %2
    54 000170B6 0F859B070000        <1>  jne L_error_incorrect_type
 30990 000170BC 488B7D28                        mov rdi, PARAM(1)
 30991                                          assert_real(rdi)
    53 000170C0 803F13              <1>  cmp byte [%1], %2
    54 000170C3 0F858E070000        <1>  jne L_error_incorrect_type
 30992 000170C9 F20F104601                      movsd xmm0, qword [rsi + 1]
 30993 000170CE F20F104F01                      movsd xmm1, qword [rdi + 1]
 30994 000170D3 660F2FC1                        comisd xmm0, xmm1
 30995 000170D7 730C                            jae .L_false
 30996 000170D9 48B8-                           mov rax, sob_boolean_true
 30996 000170DB [0300000000000000] 
 30997 000170E3 EB0A                            jmp .L_exit
 30998                                  .L_false:
 30999 000170E5 48B8-                           mov rax, sob_boolean_false
 30999 000170E7 [0200000000000000] 
 31000                                  .L_exit:
 31001 000170EF C9                              leave
 31002 000170F0 C22000                          ret AND_KILL_FRAME(2)
 31003                                          
 31004                                  L_code_ptr_raw_less_than_zz:
 31005 000170F3 C8000000                	enter 0, 0
 31006 000170F7 48837D1802              	cmp COUNT, 2
 31007 000170FC 0F85B6060000            	jne L_error_arg_count_2
 31008 00017102 4C8B4520                	mov r8, PARAM(0)
 31009                                  	assert_integer(r8)
    53 00017106 41803811            <1>  cmp byte [%1], %2
    54 0001710A 0F8547070000        <1>  jne L_error_incorrect_type
 31010 00017110 4C8B4D28                	mov r9, PARAM(1)
 31011                                  	assert_integer(r9)
    53 00017114 41803911            <1>  cmp byte [%1], %2
    54 00017118 0F8539070000        <1>  jne L_error_incorrect_type
 31012 0001711E 498B7801                	mov rdi, qword [r8 + 1]
 31013 00017122 493B7901                	cmp rdi, qword [r9 + 1]
 31014 00017126 7D0C                    	jge .L_false
 31015 00017128 48B8-                   	mov rax, sob_boolean_true
 31015 0001712A [0300000000000000] 
 31016 00017132 EB0A                    	jmp .L_exit
 31017                                  .L_false:
 31018 00017134 48B8-                   	mov rax, sob_boolean_false
 31018 00017136 [0200000000000000] 
 31019                                  .L_exit:
 31020 0001713E C9                      	leave
 31021 0001713F C22000                  	ret AND_KILL_FRAME(2)
 31022                                  
 31023                                  L_code_ptr_raw_less_than_qq:
 31024 00017142 C8000000                        enter 0, 0
 31025 00017146 48837D1802                      cmp COUNT, 2
 31026 0001714B 0F8567060000                    jne L_error_arg_count_2
 31027 00017151 488B7520                        mov rsi, PARAM(0)
 31028                                          assert_fraction(rsi)
    53 00017155 803E12              <1>  cmp byte [%1], %2
    54 00017158 0F85F9060000        <1>  jne L_error_incorrect_type
 31029 0001715E 488B7D28                        mov rdi, PARAM(1)
 31030                                          assert_fraction(rdi)
    53 00017162 803F12              <1>  cmp byte [%1], %2
    54 00017165 0F85EC060000        <1>  jne L_error_incorrect_type
 31031 0001716B 488B4601                        mov rax, qword [rsi + 1] ; num1
 31032 0001716F 4899                            cqo
 31033 00017171 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31034 00017175 4889C1                          mov rcx, rax
 31035 00017178 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 31036 0001717C 4899                            cqo
 31037 0001717E 48F76F01                        imul qword [rdi + 1]          ; num2
 31038 00017182 4829C1                          sub rcx, rax
 31039 00017185 7D0C                            jge .L_false
 31040 00017187 48B8-                           mov rax, sob_boolean_true
 31040 00017189 [0300000000000000] 
 31041 00017191 EB0A                            jmp .L_exit
 31042                                  .L_false:
 31043 00017193 48B8-                           mov rax, sob_boolean_false
 31043 00017195 [0200000000000000] 
 31044                                  .L_exit:
 31045 0001719D C9                              leave
 31046 0001719E C22000                          ret AND_KILL_FRAME(2)
 31047                                  
 31048                                  L_code_ptr_raw_equal_rr:
 31049 000171A1 C8000000                        enter 0, 0
 31050 000171A5 48837D1802                      cmp COUNT, 2
 31051 000171AA 0F8508060000                    jne L_error_arg_count_2
 31052 000171B0 488B7520                        mov rsi, PARAM(0)
 31053                                          assert_real(rsi)
    53 000171B4 803E13              <1>  cmp byte [%1], %2
    54 000171B7 0F859A060000        <1>  jne L_error_incorrect_type
 31054 000171BD 488B7D28                        mov rdi, PARAM(1)
 31055                                          assert_real(rdi)
    53 000171C1 803F13              <1>  cmp byte [%1], %2
    54 000171C4 0F858D060000        <1>  jne L_error_incorrect_type
 31056 000171CA F20F104601                      movsd xmm0, qword [rsi + 1]
 31057 000171CF F20F104F01                      movsd xmm1, qword [rdi + 1]
 31058 000171D4 660F2FC1                        comisd xmm0, xmm1
 31059 000171D8 750C                            jne .L_false
 31060 000171DA 48B8-                           mov rax, sob_boolean_true
 31060 000171DC [0300000000000000] 
 31061 000171E4 EB0A                            jmp .L_exit
 31062                                  .L_false:
 31063 000171E6 48B8-                           mov rax, sob_boolean_false
 31063 000171E8 [0200000000000000] 
 31064                                  .L_exit:
 31065 000171F0 C9                              leave
 31066 000171F1 C22000                          ret AND_KILL_FRAME(2)
 31067                                          
 31068                                  L_code_ptr_raw_equal_zz:
 31069 000171F4 C8000000                	enter 0, 0
 31070 000171F8 48837D1802              	cmp COUNT, 2
 31071 000171FD 0F85B5050000            	jne L_error_arg_count_2
 31072 00017203 4C8B4520                	mov r8, PARAM(0)
 31073                                  	assert_integer(r8)
    53 00017207 41803811            <1>  cmp byte [%1], %2
    54 0001720B 0F8546060000        <1>  jne L_error_incorrect_type
 31074 00017211 4C8B4D28                	mov r9, PARAM(1)
 31075                                  	assert_integer(r9)
    53 00017215 41803911            <1>  cmp byte [%1], %2
    54 00017219 0F8538060000        <1>  jne L_error_incorrect_type
 31076 0001721F 498B7801                	mov rdi, qword [r8 + 1]
 31077 00017223 493B7901                	cmp rdi, qword [r9 + 1]
 31078 00017227 750C                    	jne .L_false
 31079 00017229 48B8-                   	mov rax, sob_boolean_true
 31079 0001722B [0300000000000000] 
 31080 00017233 EB0A                    	jmp .L_exit
 31081                                  .L_false:
 31082 00017235 48B8-                   	mov rax, sob_boolean_false
 31082 00017237 [0200000000000000] 
 31083                                  .L_exit:
 31084 0001723F C9                      	leave
 31085 00017240 C22000                  	ret AND_KILL_FRAME(2)
 31086                                  
 31087                                  L_code_ptr_raw_equal_qq:
 31088 00017243 C8000000                        enter 0, 0
 31089 00017247 48837D1802                      cmp COUNT, 2
 31090 0001724C 0F8566050000                    jne L_error_arg_count_2
 31091 00017252 488B7520                        mov rsi, PARAM(0)
 31092                                          assert_fraction(rsi)
    53 00017256 803E12              <1>  cmp byte [%1], %2
    54 00017259 0F85F8050000        <1>  jne L_error_incorrect_type
 31093 0001725F 488B7D28                        mov rdi, PARAM(1)
 31094                                          assert_fraction(rdi)
    53 00017263 803F12              <1>  cmp byte [%1], %2
    54 00017266 0F85EB050000        <1>  jne L_error_incorrect_type
 31095 0001726C 488B4601                        mov rax, qword [rsi + 1] ; num1
 31096 00017270 4899                            cqo
 31097 00017272 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31098 00017276 4889C1                          mov rcx, rax
 31099 00017279 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 31100 0001727D 4899                            cqo
 31101 0001727F 48F76F01                        imul qword [rdi + 1]          ; num2
 31102 00017283 4829C1                          sub rcx, rax
 31103 00017286 750C                            jne .L_false
 31104 00017288 48B8-                           mov rax, sob_boolean_true
 31104 0001728A [0300000000000000] 
 31105 00017292 EB0A                            jmp .L_exit
 31106                                  .L_false:
 31107 00017294 48B8-                           mov rax, sob_boolean_false
 31107 00017296 [0200000000000000] 
 31108                                  .L_exit:
 31109 0001729E C9                              leave
 31110 0001729F C22000                          ret AND_KILL_FRAME(2)
 31111                                  
 31112                                  L_code_ptr_quotient:
 31113 000172A2 C8000000                        enter 0, 0
 31114 000172A6 48837D1802                      cmp COUNT, 2
 31115 000172AB 0F8507050000                    jne L_error_arg_count_2
 31116 000172B1 488B7520                        mov rsi, PARAM(0)
 31117                                          assert_integer(rsi)
    53 000172B5 803E11              <1>  cmp byte [%1], %2
    54 000172B8 0F8599050000        <1>  jne L_error_incorrect_type
 31118 000172BE 488B7D28                        mov rdi, PARAM(1)
 31119                                          assert_integer(rdi)
    53 000172C2 803F11              <1>  cmp byte [%1], %2
    54 000172C5 0F858C050000        <1>  jne L_error_incorrect_type
 31120 000172CB 488B4601                        mov rax, qword [rsi + 1]
 31121 000172CF 488B5F01                        mov rbx, qword [rdi + 1]
 31122 000172D3 4883FB00                        cmp rbx, 0
 31123 000172D7 0F84AB050000                    je L_error_division_by_zero
 31124 000172DD 4899                            cqo
 31125 000172DF 48F7FB                          idiv rbx
 31126 000172E2 4889C7                          mov rdi, rax
 31127 000172E5 E8E8030000                      call make_integer
 31128 000172EA C9                              leave
 31129 000172EB C22000                          ret AND_KILL_FRAME(2)
 31130                                          
 31131                                  L_code_ptr_remainder:
 31132 000172EE C8000000                        enter 0, 0
 31133 000172F2 48837D1802                      cmp COUNT, 2
 31134 000172F7 0F85BB040000                    jne L_error_arg_count_2
 31135 000172FD 488B7520                        mov rsi, PARAM(0)
 31136                                          assert_integer(rsi)
    53 00017301 803E11              <1>  cmp byte [%1], %2
    54 00017304 0F854D050000        <1>  jne L_error_incorrect_type
 31137 0001730A 488B7D28                        mov rdi, PARAM(1)
 31138                                          assert_integer(rdi)
    53 0001730E 803F11              <1>  cmp byte [%1], %2
    54 00017311 0F8540050000        <1>  jne L_error_incorrect_type
 31139 00017317 488B4601                        mov rax, qword [rsi + 1]
 31140 0001731B 488B5F01                        mov rbx, qword [rdi + 1]
 31141 0001731F 4883FB00                        cmp rbx, 0
 31142 00017323 0F845F050000                    je L_error_division_by_zero
 31143 00017329 4899                            cqo
 31144 0001732B 48F7FB                          idiv rbx
 31145 0001732E 4889D7                          mov rdi, rdx
 31146 00017331 E89C030000                      call make_integer
 31147 00017336 C9                              leave
 31148 00017337 C22000                          ret AND_KILL_FRAME(2)
 31149                                  
 31150                                  L_code_ptr_set_car:
 31151 0001733A C8000000                        enter 0, 0
 31152 0001733E 48837D1802                      cmp COUNT, 2
 31153 00017343 0F856F040000                    jne L_error_arg_count_2
 31154 00017349 488B4520                        mov rax, PARAM(0)
 31155                                          assert_pair(rax)
    53 0001734D 803821              <1>  cmp byte [%1], %2
    54 00017350 0F8501050000        <1>  jne L_error_incorrect_type
 31156 00017356 488B5D28                        mov rbx, PARAM(1)
 31157 0001735A 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31158 0001735E 48B8-                           mov rax, sob_void
 31158 00017360 [0000000000000000] 
 31159 00017368 C9                              leave
 31160 00017369 C22000                          ret AND_KILL_FRAME(2)
 31161                                  
 31162                                  L_code_ptr_set_cdr:
 31163 0001736C C8000000                        enter 0, 0
 31164 00017370 48837D1802                      cmp COUNT, 2
 31165 00017375 0F853D040000                    jne L_error_arg_count_2
 31166 0001737B 488B4520                        mov rax, PARAM(0)
 31167                                          assert_pair(rax)
    53 0001737F 803821              <1>  cmp byte [%1], %2
    54 00017382 0F85CF040000        <1>  jne L_error_incorrect_type
 31168 00017388 488B5D28                        mov rbx, PARAM(1)
 31169 0001738C 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31170 00017390 48B8-                           mov rax, sob_void
 31170 00017392 [0000000000000000] 
 31171 0001739A C9                              leave
 31172 0001739B C22000                          ret AND_KILL_FRAME(2)
 31173                                  
 31174                                  L_code_ptr_string_ref:
 31175 0001739E C8000000                        enter 0, 0
 31176 000173A2 48837D1802                      cmp COUNT, 2
 31177 000173A7 0F850B040000                    jne L_error_arg_count_2
 31178 000173AD 488B7D20                        mov rdi, PARAM(0)
 31179                                          assert_string(rdi)
    53 000173B1 803F03              <1>  cmp byte [%1], %2
    54 000173B4 0F859D040000        <1>  jne L_error_incorrect_type
 31180 000173BA 488B7528                        mov rsi, PARAM(1)
 31181                                          assert_integer(rsi)
    53 000173BE 803E11              <1>  cmp byte [%1], %2
    54 000173C1 0F8590040000        <1>  jne L_error_incorrect_type
 31182 000173C7 488B5701                        mov rdx, qword [rdi + 1]
 31183 000173CB 488B4E01                        mov rcx, qword [rsi + 1]
 31184 000173CF 4839D1                          cmp rcx, rdx
 31185 000173D2 0F8D14030000                    jge L_error_integer_range
 31186 000173D8 4883F900                        cmp rcx, 0
 31187 000173DC 0F8C0A030000                    jl L_error_integer_range
 31188 000173E2 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 31189 000173E6 BF02000000                      mov rdi, 2
 31190 000173EB E8C6E6FFFF                      call malloc
 31191 000173F0 C60002                          mov byte [rax], T_char
 31192 000173F3 885801                          mov byte [rax + 1], bl
 31193 000173F6 C9                              leave
 31194 000173F7 C22000                          ret AND_KILL_FRAME(2)
 31195                                  
 31196                                  L_code_ptr_vector_ref:
 31197 000173FA C8000000                        enter 0, 0
 31198 000173FE 48837D1802                      cmp COUNT, 2
 31199 00017403 0F85AF030000                    jne L_error_arg_count_2
 31200 00017409 488B7D20                        mov rdi, PARAM(0)
 31201                                          assert_vector(rdi)
    53 0001740D 803F22              <1>  cmp byte [%1], %2
    54 00017410 0F8541040000        <1>  jne L_error_incorrect_type
 31202 00017416 488B7528                        mov rsi, PARAM(1)
 31203                                          assert_integer(rsi)
    53 0001741A 803E11              <1>  cmp byte [%1], %2
    54 0001741D 0F8534040000        <1>  jne L_error_incorrect_type
 31204 00017423 488B5701                        mov rdx, qword [rdi + 1]
 31205 00017427 488B4E01                        mov rcx, qword [rsi + 1]
 31206 0001742B 4839D1                          cmp rcx, rdx
 31207 0001742E 0F8DB8020000                    jge L_error_integer_range
 31208 00017434 4883F900                        cmp rcx, 0
 31209 00017438 0F8CAE020000                    jl L_error_integer_range
 31210 0001743E 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 31211 00017443 C9                              leave
 31212 00017444 C22000                          ret AND_KILL_FRAME(2)
 31213                                  
 31214                                  L_code_ptr_vector_set:
 31215 00017447 C8000000                        enter 0, 0
 31216 0001744B 48837D1803                      cmp COUNT, 3
 31217 00017450 0F85CC030000                    jne L_error_arg_count_3
 31218 00017456 488B7D20                        mov rdi, PARAM(0)
 31219                                          assert_vector(rdi)
    53 0001745A 803F22              <1>  cmp byte [%1], %2
    54 0001745D 0F85F4030000        <1>  jne L_error_incorrect_type
 31220 00017463 488B7528                        mov rsi, PARAM(1)
 31221                                          assert_integer(rsi)
    53 00017467 803E11              <1>  cmp byte [%1], %2
    54 0001746A 0F85E7030000        <1>  jne L_error_incorrect_type
 31222 00017470 488B5701                        mov rdx, qword [rdi + 1]
 31223 00017474 488B4E01                        mov rcx, qword [rsi + 1]
 31224 00017478 4839D1                          cmp rcx, rdx
 31225 0001747B 0F8D6B020000                    jge L_error_integer_range
 31226 00017481 4883F900                        cmp rcx, 0
 31227 00017485 0F8C61020000                    jl L_error_integer_range
 31228 0001748B 488B4530                        mov rax, PARAM(2)
 31229 0001748F 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 31230 00017494 48B8-                           mov rax, sob_void
 31230 00017496 [0000000000000000] 
 31231 0001749E C9                              leave
 31232 0001749F C22800                          ret AND_KILL_FRAME(3)
 31233                                  
 31234                                  L_code_ptr_string_set:
 31235 000174A2 C8000000                        enter 0, 0
 31236 000174A6 48837D1803                      cmp COUNT, 3
 31237 000174AB 0F8571030000                    jne L_error_arg_count_3
 31238 000174B1 488B7D20                        mov rdi, PARAM(0)
 31239                                          assert_string(rdi)
    53 000174B5 803F03              <1>  cmp byte [%1], %2
    54 000174B8 0F8599030000        <1>  jne L_error_incorrect_type
 31240 000174BE 488B7528                        mov rsi, PARAM(1)
 31241                                          assert_integer(rsi)
    53 000174C2 803E11              <1>  cmp byte [%1], %2
    54 000174C5 0F858C030000        <1>  jne L_error_incorrect_type
 31242 000174CB 488B5701                        mov rdx, qword [rdi + 1]
 31243 000174CF 488B4E01                        mov rcx, qword [rsi + 1]
 31244 000174D3 4839D1                          cmp rcx, rdx
 31245 000174D6 0F8D10020000                    jge L_error_integer_range
 31246 000174DC 4883F900                        cmp rcx, 0
 31247 000174E0 0F8C06020000                    jl L_error_integer_range
 31248 000174E6 488B4530                        mov rax, PARAM(2)
 31249                                          assert_char(rax)
    53 000174EA 803802              <1>  cmp byte [%1], %2
    54 000174ED 0F8564030000        <1>  jne L_error_incorrect_type
 31250 000174F3 8A4001                          mov al, byte [rax + 1]
 31251 000174F6 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 31252 000174FA 48B8-                           mov rax, sob_void
 31252 000174FC [0000000000000000] 
 31253 00017504 C9                              leave
 31254 00017505 C22800                          ret AND_KILL_FRAME(3)
 31255                                  
 31256                                  L_code_ptr_make_vector:
 31257 00017508 C8000000                        enter 0, 0
 31258 0001750C 48837D1802                      cmp COUNT, 2
 31259 00017511 0F85A1020000                    jne L_error_arg_count_2
 31260 00017517 488B4D20                        mov rcx, PARAM(0)
 31261                                          assert_integer(rcx)
    53 0001751B 803911              <1>  cmp byte [%1], %2
    54 0001751E 0F8533030000        <1>  jne L_error_incorrect_type
 31262 00017524 488B4901                        mov rcx, qword [rcx + 1]
 31263 00017528 4883F900                        cmp rcx, 0
 31264 0001752C 0F8CBA010000                    jl L_error_integer_range
 31265 00017532 488B5528                        mov rdx, PARAM(1)
 31266 00017536 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 31267 0001753E E873E5FFFF                      call malloc
 31268 00017543 C60022                          mov byte [rax], T_vector
 31269 00017546 48894801                        mov qword [rax + 1], rcx
 31270 0001754A 41B800000000                    mov r8, 0
 31271                                  .L0:
 31272 00017550 4939C8                          cmp r8, rcx
 31273 00017553 740A                            je .L1
 31274 00017555 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 31275 0001755A 49FFC0                          inc r8
 31276 0001755D EBF1                            jmp .L0
 31277                                  .L1:
 31278 0001755F C9                              leave
 31279 00017560 C22000                          ret AND_KILL_FRAME(2)
 31280                                          
 31281                                  L_code_ptr_make_string:
 31282 00017563 C8000000                        enter 0, 0
 31283 00017567 48837D1802                      cmp COUNT, 2
 31284 0001756C 0F8546020000                    jne L_error_arg_count_2
 31285 00017572 488B4D20                        mov rcx, PARAM(0)
 31286                                          assert_integer(rcx)
    53 00017576 803911              <1>  cmp byte [%1], %2
    54 00017579 0F85D8020000        <1>  jne L_error_incorrect_type
 31287 0001757F 488B4901                        mov rcx, qword [rcx + 1]
 31288 00017583 4883F900                        cmp rcx, 0
 31289 00017587 0F8C5F010000                    jl L_error_integer_range
 31290 0001758D 488B5528                        mov rdx, PARAM(1)
 31291                                          assert_char(rdx)
    53 00017591 803A02              <1>  cmp byte [%1], %2
    54 00017594 0F85BD020000        <1>  jne L_error_incorrect_type
 31292 0001759A 8A5201                          mov dl, byte [rdx + 1]
 31293 0001759D 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 31294 000175A1 E810E5FFFF                      call malloc
 31295 000175A6 C60003                          mov byte [rax], T_string
 31296 000175A9 48894801                        mov qword [rax + 1], rcx
 31297 000175AD 41B800000000                    mov r8, 0
 31298                                  .L0:
 31299 000175B3 4939C8                          cmp r8, rcx
 31300 000175B6 740A                            je .L1
 31301 000175B8 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 31302 000175BD 49FFC0                          inc r8
 31303 000175C0 EBF1                            jmp .L0
 31304                                  .L1:
 31305 000175C2 C9                              leave
 31306 000175C3 C22000                          ret AND_KILL_FRAME(2)
 31307                                  
 31308                                  L_code_ptr_numerator:
 31309 000175C6 C8000000                        enter 0, 0
 31310 000175CA 48837D1801                      cmp COUNT, 1
 31311 000175CF 0F85AE010000                    jne L_error_arg_count_1
 31312 000175D5 488B4520                        mov rax, PARAM(0)
 31313                                          assert_fraction(rax)
    53 000175D9 803812              <1>  cmp byte [%1], %2
    54 000175DC 0F8575020000        <1>  jne L_error_incorrect_type
 31314 000175E2 488B7801                        mov rdi, qword [rax + 1]
 31315 000175E6 E8E7000000                      call make_integer
 31316 000175EB C9                              leave
 31317 000175EC C21800                          ret AND_KILL_FRAME(1)
 31318                                          
 31319                                  L_code_ptr_denominator:
 31320 000175EF C8000000                        enter 0, 0
 31321 000175F3 48837D1801                      cmp COUNT, 1
 31322 000175F8 0F8585010000                    jne L_error_arg_count_1
 31323 000175FE 488B4520                        mov rax, PARAM(0)
 31324                                          assert_fraction(rax)
    53 00017602 803812              <1>  cmp byte [%1], %2
    54 00017605 0F854C020000        <1>  jne L_error_incorrect_type
 31325 0001760B 488B7809                        mov rdi, qword [rax + 1 + 8]
 31326 0001760F E8BE000000                      call make_integer
 31327 00017614 C9                              leave
 31328 00017615 C21800                          ret AND_KILL_FRAME(1)
 31329                                  
 31330                                  L_code_ptr_is_eq:
 31331 00017618 C8000000                	enter 0, 0
 31332 0001761C 48837D1802              	cmp COUNT, 2
 31333 00017621 0F8591010000            	jne L_error_arg_count_2
 31334 00017627 488B7D20                	mov rdi, PARAM(0)
 31335 0001762B 488B7528                	mov rsi, PARAM(1)
 31336 0001762F 4839F7                  	cmp rdi, rsi
 31337 00017632 746C                    	je .L_eq_true
 31338 00017634 8A17                    	mov dl, byte [rdi]
 31339 00017636 3A16                    	cmp dl, byte [rsi]
 31340 00017638 7572                    	jne .L_eq_false
 31341 0001763A 80FA02                  	cmp dl, T_char
 31342 0001763D 7459                    	je .L_char
 31343 0001763F 80FA41                  	cmp dl, T_interned_symbol
 31344 00017642 7440                    	je .L_interned_symbol
 31345 00017644 80FA42                          cmp dl, T_uninterned_symbol
 31346 00017647 7443                            je .L_uninterned_symbol
 31347 00017649 80FA13                  	cmp dl, T_real
 31348 0001764C 742E                    	je .L_real
 31349 0001764E 80FA12                  	cmp dl, T_fraction
 31350 00017651 7413                    	je .L_fraction
 31351 00017653 80FA11                          cmp dl, T_integer
 31352 00017656 7402                            je .L_integer
 31353 00017658 EB52                    	jmp .L_eq_false
 31354                                  .L_integer:
 31355 0001765A 488B4601                        mov rax, qword [rsi + 1]
 31356 0001765E 483B4701                        cmp rax, qword [rdi + 1]
 31357 00017662 7548                            jne .L_eq_false
 31358 00017664 EB3A                            jmp .L_eq_true
 31359                                  .L_fraction:
 31360 00017666 488B4601                	mov rax, qword [rsi + 1]
 31361 0001766A 483B4701                	cmp rax, qword [rdi + 1]
 31362 0001766E 753C                    	jne .L_eq_false
 31363 00017670 488B4609                	mov rax, qword [rsi + 1 + 8]
 31364 00017674 483B4709                	cmp rax, qword [rdi + 1 + 8]
 31365 00017678 7532                    	jne .L_eq_false
 31366 0001767A EB24                    	jmp .L_eq_true
 31367                                  .L_real:
 31368 0001767C 488B4601                	mov rax, qword [rsi + 1]
 31369 00017680 483B4701                	cmp rax, qword [rdi + 1]
 31370                                  .L_interned_symbol:
 31371                                  	; never reached, because interned_symbols are static!
 31372                                  	; but I'm keeping it in case, I'll ever change
 31373                                  	; the implementation
 31374 00017684 488B4601                	mov rax, qword [rsi + 1]
 31375 00017688 483B4701                	cmp rax, qword [rdi + 1]
 31376                                  .L_uninterned_symbol:
 31377 0001768C 4C8B4701                        mov r8, qword [rdi + 1]
 31378 00017690 4C3B4601                        cmp r8, qword [rsi + 1]
 31379 00017694 7516                            jne .L_eq_false
 31380 00017696 EB08                            jmp .L_eq_true
 31381                                  .L_char:
 31382 00017698 8A5E01                  	mov bl, byte [rsi + 1]
 31383 0001769B 3A5F01                  	cmp bl, byte [rdi + 1]
 31384 0001769E 750C                    	jne .L_eq_false
 31385                                  .L_eq_true:
 31386 000176A0 48B8-                   	mov rax, sob_boolean_true
 31386 000176A2 [0300000000000000] 
 31387 000176AA EB0A                    	jmp .L_eq_exit
 31388                                  .L_eq_false:
 31389 000176AC 48B8-                   	mov rax, sob_boolean_false
 31389 000176AE [0200000000000000] 
 31390                                  .L_eq_exit:
 31391 000176B6 C9                      	leave
 31392 000176B7 C22000                  	ret AND_KILL_FRAME(2)
 31393                                  
 31394                                  make_real:
 31395 000176BA C8000000                        enter 0, 0
 31396 000176BE BF09000000                      mov rdi, (1 + 8)
 31397 000176C3 E8EEE3FFFF                      call malloc
 31398 000176C8 C60013                          mov byte [rax], T_real
 31399 000176CB F20F114001                      movsd qword [rax + 1], xmm0
 31400 000176D0 C9                              leave 
 31401 000176D1 C3                              ret
 31402                                          
 31403                                  make_integer:
 31404 000176D2 C8000000                        enter 0, 0
 31405 000176D6 4889FE                          mov rsi, rdi
 31406 000176D9 BF09000000                      mov rdi, (1 + 8)
 31407 000176DE E8D3E3FFFF                      call malloc
 31408 000176E3 C60011                          mov byte [rax], T_integer
 31409 000176E6 48897001                        mov qword [rax + 1], rsi
 31410 000176EA C9                              leave
 31411 000176EB C3                              ret
 31412                                          
 31413                                  L_error_integer_range:
 31414 000176EC 488B3C25[00000000]              mov rdi, qword [stderr]
 31415 000176F4 48BE-                           mov rsi, fmt_integer_range
 31415 000176F6 [D11B000000000000] 
 31416 000176FE B800000000                      mov rax, 0
 31417                                          ENTER
    44 00017703 C8000000            <1>  enter 0, 0
    45 00017707 4883E4F0            <1>  and rsp, ~15
 31418 0001770B E8(00000000)                    call fprintf
 31419                                          LEAVE
    49 00017710 C9                  <1>  leave
 31420 00017711 48C7C0FBFFFFFF                  mov rax, -5
 31421 00017718 E8(00000000)                    call exit
 31422                                  
 31423                                  L_error_arg_negative:
 31424 0001771D 488B3C25[00000000]              mov rdi, qword [stderr]
 31425 00017725 48BE-                           mov rsi, fmt_arg_negative
 31425 00017727 [A91A000000000000] 
 31426 0001772F B800000000                      mov rax, 0
 31427                                          ENTER
    44 00017734 C8000000            <1>  enter 0, 0
    45 00017738 4883E4F0            <1>  and rsp, ~15
 31428 0001773C E8(00000000)                    call fprintf
 31429                                          LEAVE
    49 00017741 C9                  <1>  leave
 31430 00017742 48C7C0FDFFFFFF                  mov rax, -3
 31431 00017749 E8(00000000)                    call exit
 31432                                  
 31433                                  L_error_arg_count_0:
 31434 0001774E 488B3C25[00000000]              mov rdi, qword [stderr]
 31435 00017756 48BE-                           mov rsi, fmt_arg_count_0
 31435 00017758 [CF1A000000000000] 
 31436 00017760 488B5518                        mov rdx, COUNT
 31437 00017764 B800000000                      mov rax, 0
 31438                                          ENTER
    44 00017769 C8000000            <1>  enter 0, 0
    45 0001776D 4883E4F0            <1>  and rsp, ~15
 31439 00017771 E8(00000000)                    call fprintf
 31440                                          LEAVE
    49 00017776 C9                  <1>  leave
 31441 00017777 48C7C0FDFFFFFF                  mov rax, -3
 31442 0001777E E8(00000000)                    call exit
 31443                                  
 31444                                  L_error_arg_count_1:
 31445 00017783 488B3C25[00000000]              mov rdi, qword [stderr]
 31446 0001778B 48BE-                           mov rsi, fmt_arg_count_1
 31446 0001778D [F71A000000000000] 
 31447 00017795 488B5518                        mov rdx, COUNT
 31448 00017799 B800000000                      mov rax, 0
 31449                                          ENTER
    44 0001779E C8000000            <1>  enter 0, 0
    45 000177A2 4883E4F0            <1>  and rsp, ~15
 31450 000177A6 E8(00000000)                    call fprintf
 31451                                          LEAVE
    49 000177AB C9                  <1>  leave
 31452 000177AC 48C7C0FDFFFFFF                  mov rax, -3
 31453 000177B3 E8(00000000)                    call exit
 31454                                  
 31455                                  L_error_arg_count_2:
 31456 000177B8 488B3C25[00000000]              mov rdi, qword [stderr]
 31457 000177C0 48BE-                           mov rsi, fmt_arg_count_2
 31457 000177C2 [5D1B000000000000] 
 31458 000177CA 488B5518                        mov rdx, COUNT
 31459 000177CE B800000000                      mov rax, 0
 31460                                          ENTER
    44 000177D3 C8000000            <1>  enter 0, 0
    45 000177D7 4883E4F0            <1>  and rsp, ~15
 31461 000177DB E8(00000000)                    call fprintf
 31462                                          LEAVE
    49 000177E0 C9                  <1>  leave
 31463 000177E1 48C7C0FDFFFFFF                  mov rax, -3
 31464 000177E8 E8(00000000)                    call exit
 31465                                  
 31466                                  L_error_arg_count_12:
 31467 000177ED 488B3C25[00000000]              mov rdi, qword [stderr]
 31468 000177F5 48BE-                           mov rsi, fmt_arg_count_12
 31468 000177F7 [1D1B000000000000] 
 31469 000177FF 488B5518                        mov rdx, COUNT
 31470 00017803 B800000000                      mov rax, 0
 31471                                          ENTER
    44 00017808 C8000000            <1>  enter 0, 0
    45 0001780C 4883E4F0            <1>  and rsp, ~15
 31472 00017810 E8(00000000)                    call fprintf
 31473                                          LEAVE
    49 00017815 C9                  <1>  leave
 31474 00017816 48C7C0FDFFFFFF                  mov rax, -3
 31475 0001781D E8(00000000)                    call exit
 31476                                  
 31477                                  L_error_arg_count_3:
 31478 00017822 488B3C25[00000000]              mov rdi, qword [stderr]
 31479 0001782A 48BE-                           mov rsi, fmt_arg_count_3
 31479 0001782C [841B000000000000] 
 31480 00017834 488B5518                        mov rdx, COUNT
 31481 00017838 B800000000                      mov rax, 0
 31482                                          ENTER
    44 0001783D C8000000            <1>  enter 0, 0
    45 00017841 4883E4F0            <1>  and rsp, ~15
 31483 00017845 E8(00000000)                    call fprintf
 31484                                          LEAVE
    49 0001784A C9                  <1>  leave
 31485 0001784B 48C7C0FDFFFFFF                  mov rax, -3
 31486 00017852 E8(00000000)                    call exit
 31487                                          
 31488                                  L_error_incorrect_type:
 31489 00017857 488B3C25[00000000]              mov rdi, qword [stderr]
 31490 0001785F 48BE-                           mov rsi, fmt_type
 31490 00017861 [AD1B000000000000] 
 31491 00017869 B800000000                      mov rax, 0
 31492                                          ENTER
    44 0001786E C8000000            <1>  enter 0, 0
    45 00017872 4883E4F0            <1>  and rsp, ~15
 31493 00017876 E8(00000000)                    call fprintf
 31494                                          LEAVE
    49 0001787B C9                  <1>  leave
 31495 0001787C 48C7C0FCFFFFFF                  mov rax, -4
 31496 00017883 E8(00000000)                    call exit
 31497                                  
 31498                                  L_error_division_by_zero:
 31499 00017888 488B3C25[00000000]              mov rdi, qword [stderr]
 31500 00017890 48BE-                           mov rsi, fmt_division_by_zero
 31500 00017892 [EE1B000000000000] 
 31501 0001789A B800000000                      mov rax, 0
 31502                                          ENTER
    44 0001789F C8000000            <1>  enter 0, 0
    45 000178A3 4883E4F0            <1>  and rsp, ~15
 31503 000178A7 E8(00000000)                    call fprintf
 31504                                          LEAVE
    49 000178AC C9                  <1>  leave
 31505 000178AD 48C7C0F8FFFFFF                  mov rax, -8
 31506 000178B4 E8(00000000)                    call exit
 31507                                  
 31508                                  section .data
 31509                                  gensym_count:
 31510 00001A9E 0000000000000000                dq 0
 31511                                  fmt_char:
 31512 00001AA6 256300                          db `%c\0`
 31513                                  fmt_arg_negative:
 31514 00001AA9 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 31514 00001AB2 7267756D656E742063-
 31514 00001ABB 616E6E6F7420626520-
 31514 00001AC4 6E656761746976652E-
 31514 00001ACD 0A00               
 31515                                  fmt_arg_count_0:
 31516 00001ACF 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 31516 00001AD8 74696E67207A65726F-
 31516 00001AE1 20617267756D656E74-
 31516 00001AEA 732E20466F756E6420-
 31516 00001AF3 25640A00           
 31517                                  fmt_arg_count_1:
 31518 00001AF7 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 31518 00001B00 74696E67206F6E6520-
 31518 00001B09 617267756D656E742E-
 31518 00001B12 20466F756E64202564-
 31518 00001B1B 0A00               
 31519                                  fmt_arg_count_12:
 31520 00001B1D 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 31520 00001B26 74696E67206F6E6520-
 31520 00001B2F 726571756972656420-
 31520 00001B38 616E64206F6E65206F-
 31520 00001B41 7074696F6E616C2061-
 31520 00001B4A 7267756D656E742E20-
 31520 00001B53 466F756E642025640A-
 31520 00001B5C 00                 
 31521                                  fmt_arg_count_2:
 31522 00001B5D 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 31522 00001B66 74696E672074776F20-
 31522 00001B6F 617267756D656E7473-
 31522 00001B78 2E20466F756E642025-
 31522 00001B81 640A00             
 31523                                  fmt_arg_count_3:
 31524 00001B84 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 31524 00001B8D 74696E672074687265-
 31524 00001B96 6520617267756D656E-
 31524 00001B9F 74732E20466F756E64-
 31524 00001BA8 2025640A00         
 31525                                  fmt_type:
 31526 00001BAD 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 31526 00001BB6 696F6E207061737365-
 31526 00001BBF 6420696E636F727265-
 31526 00001BC8 637420747970650A00 
 31527                                  fmt_integer_range:
 31528 00001BD1 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 31528 00001BDA 7265637420696E7465-
 31528 00001BE3 6765722072616E6765-
 31528 00001BEC 0A00               
 31529                                  fmt_division_by_zero:
 31530 00001BEE 212121204469766973-             db `!!! Division by zero\n\0`
 31530 00001BF7 696F6E206279207A65-
 31530 00001C00 726F0A00           
 31531                                  fmt_scheme_error_part_1:
 31532 00001C04 0A2121212054686520-             db `\n!!! The procedure \0`
 31532 00001C0D 70726F636564757265-
 31532 00001C16 2000               
 31533                                  fmt_scheme_error_part_2:
 31534 00001C18 2061736B656420746F-             db ` asked to terminate the program\n`
 31534 00001C21 207465726D696E6174-
 31534 00001C2A 65207468652070726F-
 31534 00001C33 6772616D0A         
 31535 00001C38 202020207769746820-             db `    with the following message:\n\n\0`
 31535 00001C41 74686520666F6C6C6F-
 31535 00001C4A 77696E67206D657373-
 31535 00001C53 6167653A0A0A00     
 31536                                  fmt_scheme_error_part_3:
 31537 00001C5A 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 31537 00001C63 210A0A00           
