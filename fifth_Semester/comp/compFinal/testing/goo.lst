     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [4804000000000000]      	dq L_constants + 1096
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [5C04000000000000]      	dq L_constants + 1116
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  free_var_0:	; location of *
  1005 00000DC5 [CD0D000000000000]      	dq .undefined_object
  1006                                  .undefined_object:
  1007 00000DCD 05                      	db T_undefined
  1008 00000DCE [D408000000000000]      	dq L_constants + 2260
  1009                                  
  1010                                  free_var_1:	; location of +
  1011 00000DD6 [DE0D000000000000]      	dq .undefined_object
  1012                                  .undefined_object:
  1013 00000DDE 05                      	db T_undefined
  1014 00000DDF [4D08000000000000]      	dq L_constants + 2125
  1015                                  
  1016                                  free_var_2:	; location of -
  1017 00000DE7 [EF0D000000000000]      	dq .undefined_object
  1018                                  .undefined_object:
  1019 00000DEF 05                      	db T_undefined
  1020 00000DF0 [B408000000000000]      	dq L_constants + 2228
  1021                                  
  1022                                  free_var_3:	; location of /
  1023 00000DF8 [000E000000000000]      	dq .undefined_object
  1024                                  .undefined_object:
  1025 00000E00 05                      	db T_undefined
  1026 00000E01 [F008000000000000]      	dq L_constants + 2288
  1027                                  
  1028                                  free_var_4:	; location of <
  1029 00000E09 [110E000000000000]      	dq .undefined_object
  1030                                  .undefined_object:
  1031 00000E11 05                      	db T_undefined
  1032 00000E12 [1009000000000000]      	dq L_constants + 2320
  1033                                  
  1034                                  free_var_5:	; location of <=
  1035 00000E1A [220E000000000000]      	dq .undefined_object
  1036                                  .undefined_object:
  1037 00000E22 05                      	db T_undefined
  1038 00000E23 [1A09000000000000]      	dq L_constants + 2330
  1039                                  
  1040                                  free_var_6:	; location of =
  1041 00000E2B [330E000000000000]      	dq .undefined_object
  1042                                  .undefined_object:
  1043 00000E33 05                      	db T_undefined
  1044 00000E34 [3A09000000000000]      	dq L_constants + 2362
  1045                                  
  1046                                  free_var_7:	; location of >
  1047 00000E3C [440E000000000000]      	dq .undefined_object
  1048                                  .undefined_object:
  1049 00000E44 05                      	db T_undefined
  1050 00000E45 [2509000000000000]      	dq L_constants + 2341
  1051                                  
  1052                                  free_var_8:	; location of >=
  1053 00000E4D [550E000000000000]      	dq .undefined_object
  1054                                  .undefined_object:
  1055 00000E55 05                      	db T_undefined
  1056 00000E56 [2F09000000000000]      	dq L_constants + 2351
  1057                                  
  1058                                  free_var_9:	; location of __bin-add-qq
  1059 00000E5E [660E000000000000]      	dq .undefined_object
  1060                                  .undefined_object:
  1061 00000E66 05                      	db T_undefined
  1062 00000E67 [6902000000000000]      	dq L_constants + 617
  1063                                  
  1064                                  free_var_10:	; location of __bin-add-rr
  1065 00000E6F [770E000000000000]      	dq .undefined_object
  1066                                  .undefined_object:
  1067 00000E77 05                      	db T_undefined
  1068 00000E78 [1502000000000000]      	dq L_constants + 533
  1069                                  
  1070                                  free_var_11:	; location of __bin-add-zz
  1071 00000E80 [880E000000000000]      	dq .undefined_object
  1072                                  .undefined_object:
  1073 00000E88 05                      	db T_undefined
  1074 00000E89 [BD02000000000000]      	dq L_constants + 701
  1075                                  
  1076                                  free_var_12:	; location of __bin-apply
  1077 00000E91 [990E000000000000]      	dq .undefined_object
  1078                                  .undefined_object:
  1079 00000E99 05                      	db T_undefined
  1080 00000E9A [0102000000000000]      	dq L_constants + 513
  1081                                  
  1082                                  free_var_13:	; location of __bin-div-qq
  1083 00000EA2 [AA0E000000000000]      	dq .undefined_object
  1084                                  .undefined_object:
  1085 00000EAA 05                      	db T_undefined
  1086 00000EAB [A802000000000000]      	dq L_constants + 680
  1087                                  
  1088                                  free_var_14:	; location of __bin-div-rr
  1089 00000EB3 [BB0E000000000000]      	dq .undefined_object
  1090                                  .undefined_object:
  1091 00000EBB 05                      	db T_undefined
  1092 00000EBC [5402000000000000]      	dq L_constants + 596
  1093                                  
  1094                                  free_var_15:	; location of __bin-div-zz
  1095 00000EC4 [CC0E000000000000]      	dq .undefined_object
  1096                                  .undefined_object:
  1097 00000ECC 05                      	db T_undefined
  1098 00000ECD [FC02000000000000]      	dq L_constants + 764
  1099                                  
  1100                                  free_var_16:	; location of __bin-equal-qq
  1101 00000ED5 [DD0E000000000000]      	dq .undefined_object
  1102                                  .undefined_object:
  1103 00000EDD 05                      	db T_undefined
  1104 00000EDE [8703000000000000]      	dq L_constants + 903
  1105                                  
  1106                                  free_var_17:	; location of __bin-equal-rr
  1107 00000EE6 [EE0E000000000000]      	dq .undefined_object
  1108                                  .undefined_object:
  1109 00000EEE 05                      	db T_undefined
  1110 00000EEF [7003000000000000]      	dq L_constants + 880
  1111                                  
  1112                                  free_var_18:	; location of __bin-equal-zz
  1113 00000EF7 [FF0E000000000000]      	dq .undefined_object
  1114                                  .undefined_object:
  1115 00000EFF 05                      	db T_undefined
  1116 00000F00 [9E03000000000000]      	dq L_constants + 926
  1117                                  
  1118                                  free_var_19:	; location of __bin-less-than-qq
  1119 00000F08 [100F000000000000]      	dq .undefined_object
  1120                                  .undefined_object:
  1121 00000F10 05                      	db T_undefined
  1122 00000F11 [3A03000000000000]      	dq L_constants + 826
  1123                                  
  1124                                  free_var_20:	; location of __bin-less-than-rr
  1125 00000F19 [210F000000000000]      	dq .undefined_object
  1126                                  .undefined_object:
  1127 00000F21 05                      	db T_undefined
  1128 00000F22 [1F03000000000000]      	dq L_constants + 799
  1129                                  
  1130                                  free_var_21:	; location of __bin-less-than-zz
  1131 00000F2A [320F000000000000]      	dq .undefined_object
  1132                                  .undefined_object:
  1133 00000F32 05                      	db T_undefined
  1134 00000F33 [5503000000000000]      	dq L_constants + 853
  1135                                  
  1136                                  free_var_22:	; location of __bin-mul-qq
  1137 00000F3B [430F000000000000]      	dq .undefined_object
  1138                                  .undefined_object:
  1139 00000F43 05                      	db T_undefined
  1140 00000F44 [9302000000000000]      	dq L_constants + 659
  1141                                  
  1142                                  free_var_23:	; location of __bin-mul-rr
  1143 00000F4C [540F000000000000]      	dq .undefined_object
  1144                                  .undefined_object:
  1145 00000F54 05                      	db T_undefined
  1146 00000F55 [3F02000000000000]      	dq L_constants + 575
  1147                                  
  1148                                  free_var_24:	; location of __bin-mul-zz
  1149 00000F5D [650F000000000000]      	dq .undefined_object
  1150                                  .undefined_object:
  1151 00000F65 05                      	db T_undefined
  1152 00000F66 [E702000000000000]      	dq L_constants + 743
  1153                                  
  1154                                  free_var_25:	; location of __bin-sub-qq
  1155 00000F6E [760F000000000000]      	dq .undefined_object
  1156                                  .undefined_object:
  1157 00000F76 05                      	db T_undefined
  1158 00000F77 [7E02000000000000]      	dq L_constants + 638
  1159                                  
  1160                                  free_var_26:	; location of __bin-sub-rr
  1161 00000F7F [870F000000000000]      	dq .undefined_object
  1162                                  .undefined_object:
  1163 00000F87 05                      	db T_undefined
  1164 00000F88 [2A02000000000000]      	dq L_constants + 554
  1165                                  
  1166                                  free_var_27:	; location of __bin-sub-zz
  1167 00000F90 [980F000000000000]      	dq .undefined_object
  1168                                  .undefined_object:
  1169 00000F98 05                      	db T_undefined
  1170 00000F99 [D202000000000000]      	dq L_constants + 722
  1171                                  
  1172                                  free_var_28:	; location of __bin_integer_to_fraction
  1173 00000FA1 [A90F000000000000]      	dq .undefined_object
  1174                                  .undefined_object:
  1175 00000FA9 05                      	db T_undefined
  1176 00000FAA [6008000000000000]      	dq L_constants + 2144
  1177                                  
  1178                                  free_var_29:	; location of __integer-to-fraction
  1179 00000FB2 [BA0F000000000000]      	dq .undefined_object
  1180                                  .undefined_object:
  1181 00000FBA 05                      	db T_undefined
  1182 00000FBB [A204000000000000]      	dq L_constants + 1186
  1183                                  
  1184                                  free_var_30:	; location of abs
  1185 00000FC3 [CB0F000000000000]      	dq .undefined_object
  1186                                  .undefined_object:
  1187 00000FCB 05                      	db T_undefined
  1188 00000FCC [8C0C000000000000]      	dq L_constants + 3212
  1189                                  
  1190                                  free_var_31:	; location of andmap
  1191 00000FD4 [DC0F000000000000]      	dq .undefined_object
  1192                                  .undefined_object:
  1193 00000FDC 05                      	db T_undefined
  1194 00000FDD [FA07000000000000]      	dq L_constants + 2042
  1195                                  
  1196                                  free_var_32:	; location of append
  1197 00000FE5 [ED0F000000000000]      	dq .undefined_object
  1198                                  .undefined_object:
  1199 00000FED 05                      	db T_undefined
  1200 00000FEE [2B08000000000000]      	dq L_constants + 2091
  1201                                  
  1202                                  free_var_33:	; location of apply
  1203 00000FF6 [FE0F000000000000]      	dq .undefined_object
  1204                                  .undefined_object:
  1205 00000FFE 05                      	db T_undefined
  1206 00000FFF [D207000000000000]      	dq L_constants + 2002
  1207                                  
  1208                                  free_var_34:	; location of assoc
  1209 00001007 [0F10000000000000]      	dq .undefined_object
  1210                                  .undefined_object:
  1211 0000100F 05                      	db T_undefined
  1212 00001010 [A70C000000000000]      	dq L_constants + 3239
  1213                                  
  1214                                  free_var_35:	; location of caaaar
  1215 00001018 [2010000000000000]      	dq .undefined_object
  1216                                  .undefined_object:
  1217 00001020 05                      	db T_undefined
  1218 00001021 [8106000000000000]      	dq L_constants + 1665
  1219                                  
  1220                                  free_var_36:	; location of caaadr
  1221 00001029 [3110000000000000]      	dq .undefined_object
  1222                                  .undefined_object:
  1223 00001031 05                      	db T_undefined
  1224 00001032 [9006000000000000]      	dq L_constants + 1680
  1225                                  
  1226                                  free_var_37:	; location of caaar
  1227 0000103A [4210000000000000]      	dq .undefined_object
  1228                                  .undefined_object:
  1229 00001042 05                      	db T_undefined
  1230 00001043 [1106000000000000]      	dq L_constants + 1553
  1231                                  
  1232                                  free_var_38:	; location of caadar
  1233 0000104B [5310000000000000]      	dq .undefined_object
  1234                                  .undefined_object:
  1235 00001053 05                      	db T_undefined
  1236 00001054 [9F06000000000000]      	dq L_constants + 1695
  1237                                  
  1238                                  free_var_39:	; location of caaddr
  1239 0000105C [6410000000000000]      	dq .undefined_object
  1240                                  .undefined_object:
  1241 00001064 05                      	db T_undefined
  1242 00001065 [AE06000000000000]      	dq L_constants + 1710
  1243                                  
  1244                                  free_var_40:	; location of caadr
  1245 0000106D [7510000000000000]      	dq .undefined_object
  1246                                  .undefined_object:
  1247 00001075 05                      	db T_undefined
  1248 00001076 [1F06000000000000]      	dq L_constants + 1567
  1249                                  
  1250                                  free_var_41:	; location of caar
  1251 0000107E [8610000000000000]      	dq .undefined_object
  1252                                  .undefined_object:
  1253 00001086 05                      	db T_undefined
  1254 00001087 [DD05000000000000]      	dq L_constants + 1501
  1255                                  
  1256                                  free_var_42:	; location of cadaar
  1257 0000108F [9710000000000000]      	dq .undefined_object
  1258                                  .undefined_object:
  1259 00001097 05                      	db T_undefined
  1260 00001098 [BD06000000000000]      	dq L_constants + 1725
  1261                                  
  1262                                  free_var_43:	; location of cadadr
  1263 000010A0 [A810000000000000]      	dq .undefined_object
  1264                                  .undefined_object:
  1265 000010A8 05                      	db T_undefined
  1266 000010A9 [CC06000000000000]      	dq L_constants + 1740
  1267                                  
  1268                                  free_var_44:	; location of cadar
  1269 000010B1 [B910000000000000]      	dq .undefined_object
  1270                                  .undefined_object:
  1271 000010B9 05                      	db T_undefined
  1272 000010BA [2D06000000000000]      	dq L_constants + 1581
  1273                                  
  1274                                  free_var_45:	; location of caddar
  1275 000010C2 [CA10000000000000]      	dq .undefined_object
  1276                                  .undefined_object:
  1277 000010CA 05                      	db T_undefined
  1278 000010CB [DB06000000000000]      	dq L_constants + 1755
  1279                                  
  1280                                  free_var_46:	; location of cadddr
  1281 000010D3 [DB10000000000000]      	dq .undefined_object
  1282                                  .undefined_object:
  1283 000010DB 05                      	db T_undefined
  1284 000010DC [EA06000000000000]      	dq L_constants + 1770
  1285                                  
  1286                                  free_var_47:	; location of caddr
  1287 000010E4 [EC10000000000000]      	dq .undefined_object
  1288                                  .undefined_object:
  1289 000010EC 05                      	db T_undefined
  1290 000010ED [3B06000000000000]      	dq L_constants + 1595
  1291                                  
  1292                                  free_var_48:	; location of cadr
  1293 000010F5 [FD10000000000000]      	dq .undefined_object
  1294                                  .undefined_object:
  1295 000010FD 05                      	db T_undefined
  1296 000010FE [EA05000000000000]      	dq L_constants + 1514
  1297                                  
  1298                                  free_var_49:	; location of car
  1299 00001106 [0E11000000000000]      	dq .undefined_object
  1300                                  .undefined_object:
  1301 0000110E 05                      	db T_undefined
  1302 0000110F [1501000000000000]      	dq L_constants + 277
  1303                                  
  1304                                  free_var_50:	; location of cdaaar
  1305 00001117 [1F11000000000000]      	dq .undefined_object
  1306                                  .undefined_object:
  1307 0000111F 05                      	db T_undefined
  1308 00001120 [F906000000000000]      	dq L_constants + 1785
  1309                                  
  1310                                  free_var_51:	; location of cdaadr
  1311 00001128 [3011000000000000]      	dq .undefined_object
  1312                                  .undefined_object:
  1313 00001130 05                      	db T_undefined
  1314 00001131 [0807000000000000]      	dq L_constants + 1800
  1315                                  
  1316                                  free_var_52:	; location of cdaar
  1317 00001139 [4111000000000000]      	dq .undefined_object
  1318                                  .undefined_object:
  1319 00001141 05                      	db T_undefined
  1320 00001142 [4906000000000000]      	dq L_constants + 1609
  1321                                  
  1322                                  free_var_53:	; location of cdadar
  1323 0000114A [5211000000000000]      	dq .undefined_object
  1324                                  .undefined_object:
  1325 00001152 05                      	db T_undefined
  1326 00001153 [1707000000000000]      	dq L_constants + 1815
  1327                                  
  1328                                  free_var_54:	; location of cdaddr
  1329 0000115B [6311000000000000]      	dq .undefined_object
  1330                                  .undefined_object:
  1331 00001163 05                      	db T_undefined
  1332 00001164 [2607000000000000]      	dq L_constants + 1830
  1333                                  
  1334                                  free_var_55:	; location of cdadr
  1335 0000116C [7411000000000000]      	dq .undefined_object
  1336                                  .undefined_object:
  1337 00001174 05                      	db T_undefined
  1338 00001175 [5706000000000000]      	dq L_constants + 1623
  1339                                  
  1340                                  free_var_56:	; location of cdar
  1341 0000117D [8511000000000000]      	dq .undefined_object
  1342                                  .undefined_object:
  1343 00001185 05                      	db T_undefined
  1344 00001186 [F705000000000000]      	dq L_constants + 1527
  1345                                  
  1346                                  free_var_57:	; location of cddaar
  1347 0000118E [9611000000000000]      	dq .undefined_object
  1348                                  .undefined_object:
  1349 00001196 05                      	db T_undefined
  1350 00001197 [3507000000000000]      	dq L_constants + 1845
  1351                                  
  1352                                  free_var_58:	; location of cddadr
  1353 0000119F [A711000000000000]      	dq .undefined_object
  1354                                  .undefined_object:
  1355 000011A7 05                      	db T_undefined
  1356 000011A8 [4407000000000000]      	dq L_constants + 1860
  1357                                  
  1358                                  free_var_59:	; location of cddar
  1359 000011B0 [B811000000000000]      	dq .undefined_object
  1360                                  .undefined_object:
  1361 000011B8 05                      	db T_undefined
  1362 000011B9 [6506000000000000]      	dq L_constants + 1637
  1363                                  
  1364                                  free_var_60:	; location of cdddar
  1365 000011C1 [C911000000000000]      	dq .undefined_object
  1366                                  .undefined_object:
  1367 000011C9 05                      	db T_undefined
  1368 000011CA [5307000000000000]      	dq L_constants + 1875
  1369                                  
  1370                                  free_var_61:	; location of cddddr
  1371 000011D2 [DA11000000000000]      	dq .undefined_object
  1372                                  .undefined_object:
  1373 000011DA 05                      	db T_undefined
  1374 000011DB [6207000000000000]      	dq L_constants + 1890
  1375                                  
  1376                                  free_var_62:	; location of cdddr
  1377 000011E3 [EB11000000000000]      	dq .undefined_object
  1378                                  .undefined_object:
  1379 000011EB 05                      	db T_undefined
  1380 000011EC [7306000000000000]      	dq L_constants + 1651
  1381                                  
  1382                                  free_var_63:	; location of cddr
  1383 000011F4 [FC11000000000000]      	dq .undefined_object
  1384                                  .undefined_object:
  1385 000011FC 05                      	db T_undefined
  1386 000011FD [0406000000000000]      	dq L_constants + 1540
  1387                                  
  1388                                  free_var_64:	; location of cdr
  1389 00001205 [0D12000000000000]      	dq .undefined_object
  1390                                  .undefined_object:
  1391 0000120D 05                      	db T_undefined
  1392 0000120E [2101000000000000]      	dq L_constants + 289
  1393                                  
  1394                                  free_var_65:	; location of char->integer
  1395 00001216 [1E12000000000000]      	dq .undefined_object
  1396                                  .undefined_object:
  1397 0000121E 05                      	db T_undefined
  1398 0000121F [A901000000000000]      	dq L_constants + 425
  1399                                  
  1400                                  free_var_66:	; location of char-ci<=?
  1401 00001227 [2F12000000000000]      	dq .undefined_object
  1402                                  .undefined_object:
  1403 0000122F 05                      	db T_undefined
  1404 00001230 [230A000000000000]      	dq L_constants + 2595
  1405                                  
  1406                                  free_var_67:	; location of char-ci<?
  1407 00001238 [4012000000000000]      	dq .undefined_object
  1408                                  .undefined_object:
  1409 00001240 05                      	db T_undefined
  1410 00001241 [110A000000000000]      	dq L_constants + 2577
  1411                                  
  1412                                  free_var_68:	; location of char-ci=?
  1413 00001249 [5112000000000000]      	dq .undefined_object
  1414                                  .undefined_object:
  1415 00001251 05                      	db T_undefined
  1416 00001252 [360A000000000000]      	dq L_constants + 2614
  1417                                  
  1418                                  free_var_69:	; location of char-ci>=?
  1419 0000125A [6212000000000000]      	dq .undefined_object
  1420                                  .undefined_object:
  1421 00001262 05                      	db T_undefined
  1422 00001263 [5A0A000000000000]      	dq L_constants + 2650
  1423                                  
  1424                                  free_var_70:	; location of char-ci>?
  1425 0000126B [7312000000000000]      	dq .undefined_object
  1426                                  .undefined_object:
  1427 00001273 05                      	db T_undefined
  1428 00001274 [480A000000000000]      	dq L_constants + 2632
  1429                                  
  1430                                  free_var_71:	; location of char-downcase
  1431 0000127C [8412000000000000]      	dq .undefined_object
  1432                                  .undefined_object:
  1433 00001284 05                      	db T_undefined
  1434 00001285 [DF09000000000000]      	dq L_constants + 2527
  1435                                  
  1436                                  free_var_72:	; location of char-upcase
  1437 0000128D [9512000000000000]      	dq .undefined_object
  1438                                  .undefined_object:
  1439 00001295 05                      	db T_undefined
  1440 00001296 [F509000000000000]      	dq L_constants + 2549
  1441                                  
  1442                                  free_var_73:	; location of char<=?
  1443 0000129E [A612000000000000]      	dq .undefined_object
  1444                                  .undefined_object:
  1445 000012A6 05                      	db T_undefined
  1446 000012A7 [A109000000000000]      	dq L_constants + 2465
  1447                                  
  1448                                  free_var_74:	; location of char<?
  1449 000012AF [B712000000000000]      	dq .undefined_object
  1450                                  .undefined_object:
  1451 000012B7 05                      	db T_undefined
  1452 000012B8 [9209000000000000]      	dq L_constants + 2450
  1453                                  
  1454                                  free_var_75:	; location of char=?
  1455 000012C0 [C812000000000000]      	dq .undefined_object
  1456                                  .undefined_object:
  1457 000012C8 05                      	db T_undefined
  1458 000012C9 [B109000000000000]      	dq L_constants + 2481
  1459                                  
  1460                                  free_var_76:	; location of char>=?
  1461 000012D1 [D912000000000000]      	dq .undefined_object
  1462                                  .undefined_object:
  1463 000012D9 05                      	db T_undefined
  1464 000012DA [CF09000000000000]      	dq L_constants + 2511
  1465                                  
  1466                                  free_var_77:	; location of char>?
  1467 000012E2 [EA12000000000000]      	dq .undefined_object
  1468                                  .undefined_object:
  1469 000012EA 05                      	db T_undefined
  1470 000012EB [C009000000000000]      	dq L_constants + 2496
  1471                                  
  1472                                  free_var_78:	; location of char?
  1473 000012F3 [FB12000000000000]      	dq .undefined_object
  1474                                  .undefined_object:
  1475 000012FB 05                      	db T_undefined
  1476 000012FC [3000000000000000]      	dq L_constants + 48
  1477                                  
  1478                                  free_var_79:	; location of cons
  1479 00001304 [0C13000000000000]      	dq .undefined_object
  1480                                  .undefined_object:
  1481 0000130C 05                      	db T_undefined
  1482 0000130D [DF00000000000000]      	dq L_constants + 223
  1483                                  
  1484                                  free_var_80:	; location of eq?
  1485 00001315 [1D13000000000000]      	dq .undefined_object
  1486                                  .undefined_object:
  1487 0000131D 05                      	db T_undefined
  1488 0000131E [9604000000000000]      	dq L_constants + 1174
  1489                                  
  1490                                  free_var_81:	; location of equal?
  1491 00001326 [2E13000000000000]      	dq .undefined_object
  1492                                  .undefined_object:
  1493 0000132E 05                      	db T_undefined
  1494 0000132F [980C000000000000]      	dq L_constants + 3224
  1495                                  
  1496                                  free_var_82:	; location of error
  1497 00001337 [3F13000000000000]      	dq .undefined_object
  1498                                  .undefined_object:
  1499 0000133F 05                      	db T_undefined
  1500 00001340 [1103000000000000]      	dq L_constants + 785
  1501                                  
  1502                                  free_var_83:	; location of even?
  1503 00001348 [5013000000000000]      	dq .undefined_object
  1504                                  .undefined_object:
  1505 00001350 05                      	db T_undefined
  1506 00001351 [680C000000000000]      	dq L_constants + 3176
  1507                                  
  1508                                  free_var_84:	; location of fact
  1509 00001359 [6113000000000000]      	dq .undefined_object
  1510                                  .undefined_object:
  1511 00001361 05                      	db T_undefined
  1512 00001362 [0309000000000000]      	dq L_constants + 2307
  1513                                  
  1514                                  free_var_85:	; location of fold-left
  1515 0000136A [7213000000000000]      	dq .undefined_object
  1516                                  .undefined_object:
  1517 00001372 05                      	db T_undefined
  1518 00001373 [1908000000000000]      	dq L_constants + 2073
  1519                                  
  1520                                  free_var_86:	; location of fold-right
  1521 0000137B [8313000000000000]      	dq .undefined_object
  1522                                  .undefined_object:
  1523 00001383 05                      	db T_undefined
  1524 00001384 [3A08000000000000]      	dq L_constants + 2106
  1525                                  
  1526                                  free_var_87:	; location of fraction->real
  1527 0000138C [9413000000000000]      	dq .undefined_object
  1528                                  .undefined_object:
  1529 00001394 05                      	db T_undefined
  1530 00001395 [9201000000000000]      	dq L_constants + 402
  1531                                  
  1532                                  free_var_88:	; location of fraction?
  1533 0000139D [A513000000000000]      	dq .undefined_object
  1534                                  .undefined_object:
  1535 000013A5 05                      	db T_undefined
  1536 000013A6 [9800000000000000]      	dq L_constants + 152
  1537                                  
  1538                                  free_var_89:	; location of integer->char
  1539 000013AE [B613000000000000]      	dq .undefined_object
  1540                                  .undefined_object:
  1541 000013B6 05                      	db T_undefined
  1542 000013B7 [BF01000000000000]      	dq L_constants + 447
  1543                                  
  1544                                  free_var_90:	; location of integer->real
  1545 000013BF [C713000000000000]      	dq .undefined_object
  1546                                  .undefined_object:
  1547 000013C7 05                      	db T_undefined
  1548 000013C8 [7C01000000000000]      	dq L_constants + 380
  1549                                  
  1550                                  free_var_91:	; location of integer?
  1551 000013D0 [D813000000000000]      	dq .undefined_object
  1552                                  .undefined_object:
  1553 000013D8 05                      	db T_undefined
  1554 000013D9 [F001000000000000]      	dq L_constants + 496
  1555                                  
  1556                                  free_var_92:	; location of list
  1557 000013E1 [E913000000000000]      	dq .undefined_object
  1558                                  .undefined_object:
  1559 000013E9 05                      	db T_undefined
  1560 000013EA [7F07000000000000]      	dq L_constants + 1919
  1561                                  
  1562                                  free_var_93:	; location of list*
  1563 000013F2 [FA13000000000000]      	dq .undefined_object
  1564                                  .undefined_object:
  1565 000013FA 05                      	db T_undefined
  1566 000013FB [AA07000000000000]      	dq L_constants + 1962
  1567                                  
  1568                                  free_var_94:	; location of list->string
  1569 00001403 [0B14000000000000]      	dq .undefined_object
  1570                                  .undefined_object:
  1571 0000140B 05                      	db T_undefined
  1572 0000140C [9B0A000000000000]      	dq L_constants + 2715
  1573                                  
  1574                                  free_var_95:	; location of list->vector
  1575 00001414 [1C14000000000000]      	dq .undefined_object
  1576                                  .undefined_object:
  1577 0000141C 05                      	db T_undefined
  1578 0000141D [FC0B000000000000]      	dq L_constants + 3068
  1579                                  
  1580                                  free_var_96:	; location of list?
  1581 00001425 [2D14000000000000]      	dq .undefined_object
  1582                                  .undefined_object:
  1583 0000142D 05                      	db T_undefined
  1584 0000142E [7107000000000000]      	dq L_constants + 1905
  1585                                  
  1586                                  free_var_97:	; location of logarithm
  1587 00001436 [3E14000000000000]      	dq .undefined_object
  1588                                  .undefined_object:
  1589 0000143E 05                      	db T_undefined
  1590 0000143F [8B0D000000000000]      	dq L_constants + 3467
  1591                                  
  1592                                  free_var_98:	; location of make-list-thunk
  1593 00001447 [4F14000000000000]      	dq .undefined_object
  1594                                  .undefined_object:
  1595 0000144F 05                      	db T_undefined
  1596 00001450 [3F0D000000000000]      	dq L_constants + 3391
  1597                                  
  1598                                  free_var_99:	; location of make-string
  1599 00001458 [6014000000000000]      	dq .undefined_object
  1600                                  .undefined_object:
  1601 00001460 05                      	db T_undefined
  1602 00001461 [5C04000000000000]      	dq L_constants + 1116
  1603                                  
  1604                                  free_var_100:	; location of make-string-thunk
  1605 00001469 [7114000000000000]      	dq .undefined_object
  1606                                  .undefined_object:
  1607 00001471 05                      	db T_undefined
  1608 00001472 [570D000000000000]      	dq L_constants + 3415
  1609                                  
  1610                                  free_var_101:	; location of make-vector
  1611 0000147A [8214000000000000]      	dq .undefined_object
  1612                                  .undefined_object:
  1613 00001482 05                      	db T_undefined
  1614 00001483 [4804000000000000]      	dq L_constants + 1096
  1615                                  
  1616                                  free_var_102:	; location of make-vector-thunk
  1617 0000148B [9314000000000000]      	dq .undefined_object
  1618                                  .undefined_object:
  1619 00001493 05                      	db T_undefined
  1620 00001494 [710D000000000000]      	dq L_constants + 3441
  1621                                  
  1622                                  free_var_103:	; location of map
  1623 0000149C [A414000000000000]      	dq .undefined_object
  1624                                  .undefined_object:
  1625 000014A4 05                      	db T_undefined
  1626 000014A5 [EE07000000000000]      	dq L_constants + 2030
  1627                                  
  1628                                  free_var_104:	; location of negative?
  1629 000014AD [B514000000000000]      	dq .undefined_object
  1630                                  .undefined_object:
  1631 000014B5 05                      	db T_undefined
  1632 000014B6 [560C000000000000]      	dq L_constants + 3158
  1633                                  
  1634                                  free_var_105:	; location of newline
  1635 000014BE [C614000000000000]      	dq .undefined_object
  1636                                  .undefined_object:
  1637 000014C6 05                      	db T_undefined
  1638 000014C7 [A60D000000000000]      	dq L_constants + 3494
  1639                                  
  1640                                  free_var_106:	; location of not
  1641 000014CF [D714000000000000]      	dq .undefined_object
  1642                                  .undefined_object:
  1643 000014D7 05                      	db T_undefined
  1644 000014D8 [8C07000000000000]      	dq L_constants + 1932
  1645                                  
  1646                                  free_var_107:	; location of null?
  1647 000014E0 [E814000000000000]      	dq .undefined_object
  1648                                  .undefined_object:
  1649 000014E8 05                      	db T_undefined
  1650 000014E9 [0600000000000000]      	dq L_constants + 6
  1651                                  
  1652                                  free_var_108:	; location of number?
  1653 000014F1 [F914000000000000]      	dq .undefined_object
  1654                                  .undefined_object:
  1655 000014F9 05                      	db T_undefined
  1656 000014FA [BB00000000000000]      	dq L_constants + 187
  1657                                  
  1658                                  free_var_109:	; location of odd?
  1659 00001502 [0A15000000000000]      	dq .undefined_object
  1660                                  .undefined_object:
  1661 0000150A 05                      	db T_undefined
  1662 0000150B [7F0C000000000000]      	dq L_constants + 3199
  1663                                  
  1664                                  free_var_110:	; location of ormap
  1665 00001513 [1B15000000000000]      	dq .undefined_object
  1666                                  .undefined_object:
  1667 0000151B 05                      	db T_undefined
  1668 0000151C [E007000000000000]      	dq L_constants + 2016
  1669                                  
  1670                                  free_var_111:	; location of pair?
  1671 00001524 [2C15000000000000]      	dq .undefined_object
  1672                                  .undefined_object:
  1673 0000152C 05                      	db T_undefined
  1674 0000152D [1400000000000000]      	dq L_constants + 20
  1675                                  
  1676                                  free_var_112:	; location of positive?
  1677 00001535 [3D15000000000000]      	dq .undefined_object
  1678                                  .undefined_object:
  1679 0000153D 05                      	db T_undefined
  1680 0000153E [440C000000000000]      	dq L_constants + 3140
  1681                                  
  1682                                  free_var_113:	; location of random
  1683 00001546 [4E15000000000000]      	dq .undefined_object
  1684                                  .undefined_object:
  1685 0000154E 05                      	db T_undefined
  1686 0000154F [350C000000000000]      	dq L_constants + 3125
  1687                                  
  1688                                  free_var_114:	; location of rational?
  1689 00001557 [5F15000000000000]      	dq .undefined_object
  1690                                  .undefined_object:
  1691 0000155F 05                      	db T_undefined
  1692 00001560 [9807000000000000]      	dq L_constants + 1944
  1693                                  
  1694                                  free_var_115:	; location of real
  1695 00001568 [7015000000000000]      	dq .undefined_object
  1696                                  .undefined_object:
  1697 00001570 05                      	db T_undefined
  1698 00001571 [BE08000000000000]      	dq L_constants + 2238
  1699                                  
  1700                                  free_var_116:	; location of real?
  1701 00001579 [8115000000000000]      	dq .undefined_object
  1702                                  .undefined_object:
  1703 00001581 05                      	db T_undefined
  1704 00001582 [8A00000000000000]      	dq L_constants + 138
  1705                                  
  1706                                  free_var_117:	; location of remainder
  1707 0000158A [9215000000000000]      	dq .undefined_object
  1708                                  .undefined_object:
  1709 00001592 05                      	db T_undefined
  1710 00001593 [C603000000000000]      	dq L_constants + 966
  1711                                  
  1712                                  free_var_118:	; location of reverse
  1713 0000159B [A315000000000000]      	dq .undefined_object
  1714                                  .undefined_object:
  1715 000015A3 05                      	db T_undefined
  1716 000015A4 [0908000000000000]      	dq L_constants + 2057
  1717                                  
  1718                                  free_var_119:	; location of string->list
  1719 000015AC [B415000000000000]      	dq .undefined_object
  1720                                  .undefined_object:
  1721 000015B4 05                      	db T_undefined
  1722 000015B5 [B00A000000000000]      	dq L_constants + 2736
  1723                                  
  1724                                  free_var_120:	; location of string-append
  1725 000015BD [C515000000000000]      	dq .undefined_object
  1726                                  .undefined_object:
  1727 000015C5 05                      	db T_undefined
  1728 000015C6 [B50C000000000000]      	dq L_constants + 3253
  1729                                  
  1730                                  free_var_121:	; location of string-ci<=?
  1731 000015CE [D615000000000000]      	dq .undefined_object
  1732                                  .undefined_object:
  1733 000015D6 05                      	db T_undefined
  1734 000015D7 [300B000000000000]      	dq L_constants + 2864
  1735                                  
  1736                                  free_var_122:	; location of string-ci<?
  1737 000015DF [E715000000000000]      	dq .undefined_object
  1738                                  .undefined_object:
  1739 000015E7 05                      	db T_undefined
  1740 000015E8 [1C0B000000000000]      	dq L_constants + 2844
  1741                                  
  1742                                  free_var_123:	; location of string-ci=?
  1743 000015F0 [F815000000000000]      	dq .undefined_object
  1744                                  .undefined_object:
  1745 000015F8 05                      	db T_undefined
  1746 000015F9 [450B000000000000]      	dq L_constants + 2885
  1747                                  
  1748                                  free_var_124:	; location of string-ci>=?
  1749 00001601 [0916000000000000]      	dq .undefined_object
  1750                                  .undefined_object:
  1751 00001609 05                      	db T_undefined
  1752 0000160A [590B000000000000]      	dq L_constants + 2905
  1753                                  
  1754                                  free_var_125:	; location of string-ci>?
  1755 00001612 [1A16000000000000]      	dq .undefined_object
  1756                                  .undefined_object:
  1757 0000161A 05                      	db T_undefined
  1758 0000161B [6E0B000000000000]      	dq L_constants + 2926
  1759                                  
  1760                                  free_var_126:	; location of string-downcase
  1761 00001623 [2B16000000000000]      	dq .undefined_object
  1762                                  .undefined_object:
  1763 0000162B 05                      	db T_undefined
  1764 0000162C [6D0A000000000000]      	dq L_constants + 2669
  1765                                  
  1766                                  free_var_127:	; location of string-length
  1767 00001634 [3C16000000000000]      	dq .undefined_object
  1768                                  .undefined_object:
  1769 0000163C 05                      	db T_undefined
  1770 0000163D [2D01000000000000]      	dq L_constants + 301
  1771                                  
  1772                                  free_var_128:	; location of string-ref
  1773 00001645 [4D16000000000000]      	dq .undefined_object
  1774                                  .undefined_object:
  1775 0000164D 05                      	db T_undefined
  1776 0000164E [FA03000000000000]      	dq L_constants + 1018
  1777                                  
  1778                                  free_var_129:	; location of string-reverse
  1779 00001656 [5E16000000000000]      	dq .undefined_object
  1780                                  .undefined_object:
  1781 0000165E 05                      	db T_undefined
  1782 0000165F [E10C000000000000]      	dq L_constants + 3297
  1783                                  
  1784                                  free_var_130:	; location of string-reverse!
  1785 00001667 [6F16000000000000]      	dq .undefined_object
  1786                                  .undefined_object:
  1787 0000166F 05                      	db T_undefined
  1788 00001670 [0F0D000000000000]      	dq L_constants + 3343
  1789                                  
  1790                                  free_var_131:	; location of string-set!
  1791 00001678 [8016000000000000]      	dq .undefined_object
  1792                                  .undefined_object:
  1793 00001680 05                      	db T_undefined
  1794 00001681 [3404000000000000]      	dq L_constants + 1076
  1795                                  
  1796                                  free_var_132:	; location of string-upcase
  1797 00001689 [9116000000000000]      	dq .undefined_object
  1798                                  .undefined_object:
  1799 00001691 05                      	db T_undefined
  1800 00001692 [850A000000000000]      	dq L_constants + 2693
  1801                                  
  1802                                  free_var_133:	; location of string<=?
  1803 0000169A [A216000000000000]      	dq .undefined_object
  1804                                  .undefined_object:
  1805 000016A2 05                      	db T_undefined
  1806 000016A3 [D60A000000000000]      	dq L_constants + 2774
  1807                                  
  1808                                  free_var_134:	; location of string<?
  1809 000016AB [B316000000000000]      	dq .undefined_object
  1810                                  .undefined_object:
  1811 000016B3 05                      	db T_undefined
  1812 000016B4 [C50A000000000000]      	dq L_constants + 2757
  1813                                  
  1814                                  free_var_135:	; location of string=?
  1815 000016BC [C416000000000000]      	dq .undefined_object
  1816                                  .undefined_object:
  1817 000016C4 05                      	db T_undefined
  1818 000016C5 [E80A000000000000]      	dq L_constants + 2792
  1819                                  
  1820                                  free_var_136:	; location of string>=?
  1821 000016CD [D516000000000000]      	dq .undefined_object
  1822                                  .undefined_object:
  1823 000016D5 05                      	db T_undefined
  1824 000016D6 [F90A000000000000]      	dq L_constants + 2809
  1825                                  
  1826                                  free_var_137:	; location of string>?
  1827 000016DE [E616000000000000]      	dq .undefined_object
  1828                                  .undefined_object:
  1829 000016E6 05                      	db T_undefined
  1830 000016E7 [0B0B000000000000]      	dq L_constants + 2827
  1831                                  
  1832                                  free_var_138:	; location of string?
  1833 000016EF [F716000000000000]      	dq .undefined_object
  1834                                  .undefined_object:
  1835 000016F7 05                      	db T_undefined
  1836 000016F8 [3E00000000000000]      	dq L_constants + 62
  1837                                  
  1838                                  free_var_139:	; location of trng
  1839 00001700 [0817000000000000]      	dq .undefined_object
  1840                                  .undefined_object:
  1841 00001708 05                      	db T_undefined
  1842 00001709 [D501000000000000]      	dq L_constants + 469
  1843                                  
  1844                                  free_var_140:	; location of vector
  1845 00001711 [1917000000000000]      	dq .undefined_object
  1846                                  .undefined_object:
  1847 00001719 05                      	db T_undefined
  1848 0000171A [110C000000000000]      	dq L_constants + 3089
  1849                                  
  1850                                  free_var_141:	; location of vector->list
  1851 00001722 [2A17000000000000]      	dq .undefined_object
  1852                                  .undefined_object:
  1853 0000172A 05                      	db T_undefined
  1854 0000172B [200C000000000000]      	dq L_constants + 3104
  1855                                  
  1856                                  free_var_142:	; location of vector-append
  1857 00001733 [3B17000000000000]      	dq .undefined_object
  1858                                  .undefined_object:
  1859 0000173B 05                      	db T_undefined
  1860 0000173C [CB0C000000000000]      	dq L_constants + 3275
  1861                                  
  1862                                  free_var_143:	; location of vector-length
  1863 00001744 [4C17000000000000]      	dq .undefined_object
  1864                                  .undefined_object:
  1865 0000174C 05                      	db T_undefined
  1866 0000174D [4301000000000000]      	dq L_constants + 323
  1867                                  
  1868                                  free_var_144:	; location of vector-ref
  1869 00001755 [5D17000000000000]      	dq .undefined_object
  1870                                  .undefined_object:
  1871 0000175D 05                      	db T_undefined
  1872 0000175E [0D04000000000000]      	dq L_constants + 1037
  1873                                  
  1874                                  free_var_145:	; location of vector-reverse
  1875 00001766 [6E17000000000000]      	dq .undefined_object
  1876                                  .undefined_object:
  1877 0000176E 05                      	db T_undefined
  1878 0000176F [F80C000000000000]      	dq L_constants + 3320
  1879                                  
  1880                                  free_var_146:	; location of vector-reverse!
  1881 00001777 [7F17000000000000]      	dq .undefined_object
  1882                                  .undefined_object:
  1883 0000177F 05                      	db T_undefined
  1884 00001780 [270D000000000000]      	dq L_constants + 3367
  1885                                  
  1886                                  free_var_147:	; location of vector-set!
  1887 00001788 [9017000000000000]      	dq .undefined_object
  1888                                  .undefined_object:
  1889 00001790 05                      	db T_undefined
  1890 00001791 [2004000000000000]      	dq L_constants + 1056
  1891                                  
  1892                                  free_var_148:	; location of vector?
  1893 00001799 [A117000000000000]      	dq .undefined_object
  1894                                  .undefined_object:
  1895 000017A1 05                      	db T_undefined
  1896 000017A2 [6700000000000000]      	dq L_constants + 103
  1897                                  
  1898                                  free_var_149:	; location of void
  1899 000017AA [B217000000000000]      	dq .undefined_object
  1900                                  .undefined_object:
  1901 000017B2 05                      	db T_undefined
  1902 000017B3 [B80D000000000000]      	dq L_constants + 3512
  1903                                  
  1904                                  free_var_150:	; location of write-char
  1905 000017BB [C317000000000000]      	dq .undefined_object
  1906                                  .undefined_object:
  1907 000017C3 05                      	db T_undefined
  1908 000017C4 [0201000000000000]      	dq L_constants + 258
  1909                                  
  1910                                  free_var_151:	; location of zero?
  1911 000017CC [D417000000000000]      	dq .undefined_object
  1912                                  .undefined_object:
  1913 000017D4 05                      	db T_undefined
  1914 000017D5 [E201000000000000]      	dq L_constants + 482
  1915                                  
  1916                                  
  1917                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1918                                  global main
  1919                                  section .text
  1920                                  main:
  1921 00000000 C8000000                        enter 0, 0
  1922 00000004 6A00                            push 0
  1923 00000006 6A00                            push 0
  1924 00000008 68[EA740100]                    push Lend
  1925 0000000D C8000000                        enter 0, 0
  1926                                  	; building closure for null?
  1927 00000011 48BF-                   	mov rdi, free_var_107
  1927 00000013 [E014000000000000] 
  1928 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1928 0000001D [7C80010000000000] 
  1929 00000025 E85B7E0100              	call bind_primitive
  1930                                  
  1931                                  	; building closure for pair?
  1932 0000002A 48BF-                   	mov rdi, free_var_111
  1932 0000002C [2415000000000000] 
  1933 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1933 00000036 [AE80010000000000] 
  1934 0000003E E8427E0100              	call bind_primitive
  1935                                  
  1936                                  	; building closure for char?
  1937 00000043 48BF-                   	mov rdi, free_var_78
  1937 00000045 [F312000000000000] 
  1938 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1938 0000004F [1281010000000000] 
  1939 00000057 E8297E0100              	call bind_primitive
  1940                                  
  1941                                  	; building closure for string?
  1942 0000005C 48BF-                   	mov rdi, free_var_138
  1942 0000005E [EF16000000000000] 
  1943 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1943 00000068 [4481010000000000] 
  1944 00000070 E8107E0100              	call bind_primitive
  1945                                  
  1946                                  	; building closure for vector?
  1947 00000075 48BF-                   	mov rdi, free_var_148
  1947 00000077 [9917000000000000] 
  1948 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1948 00000081 [4282010000000000] 
  1949 00000089 E8F77D0100              	call bind_primitive
  1950                                  
  1951                                  	; building closure for real?
  1952 0000008E 48BF-                   	mov rdi, free_var_116
  1952 00000090 [7915000000000000] 
  1953 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1953 0000009A [A682010000000000] 
  1954 000000A2 E8DE7D0100              	call bind_primitive
  1955                                  
  1956                                  	; building closure for fraction?
  1957 000000A7 48BF-                   	mov rdi, free_var_88
  1957 000000A9 [9D13000000000000] 
  1958 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1958 000000B3 [D882010000000000] 
  1959 000000BB E8C57D0100              	call bind_primitive
  1960                                  
  1961                                  	; building closure for number?
  1962 000000C0 48BF-                   	mov rdi, free_var_108
  1962 000000C2 [F114000000000000] 
  1963 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1963 000000CC [A683010000000000] 
  1964 000000D4 E8AC7D0100              	call bind_primitive
  1965                                  
  1966                                  	; building closure for cons
  1967 000000D9 48BF-                   	mov rdi, free_var_79
  1967 000000DB [0413000000000000] 
  1968 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1968 000000E5 [0E84010000000000] 
  1969 000000ED E8937D0100              	call bind_primitive
  1970                                  
  1971                                  	; building closure for write-char
  1972 000000F2 48BF-                   	mov rdi, free_var_150
  1972 000000F4 [BB17000000000000] 
  1973 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  1973 000000FE [6484010000000000] 
  1974 00000106 E87A7D0100              	call bind_primitive
  1975                                  
  1976                                  	; building closure for car
  1977 0000010B 48BF-                   	mov rdi, free_var_49
  1977 0000010D [0611000000000000] 
  1978 00000115 48BE-                   	mov rsi, L_code_ptr_car
  1978 00000117 [B784010000000000] 
  1979 0000011F E8617D0100              	call bind_primitive
  1980                                  
  1981                                  	; building closure for cdr
  1982 00000124 48BF-                   	mov rdi, free_var_64
  1982 00000126 [0512000000000000] 
  1983 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  1983 00000130 [DB84010000000000] 
  1984 00000138 E8487D0100              	call bind_primitive
  1985                                  
  1986                                  	; building closure for string-length
  1987 0000013D 48BF-                   	mov rdi, free_var_127
  1987 0000013F [3416000000000000] 
  1988 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  1988 00000149 [FF84010000000000] 
  1989 00000151 E82F7D0100              	call bind_primitive
  1990                                  
  1991                                  	; building closure for vector-length
  1992 00000156 48BF-                   	mov rdi, free_var_143
  1992 00000158 [4417000000000000] 
  1993 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  1993 00000162 [2885010000000000] 
  1994 0000016A E8167D0100              	call bind_primitive
  1995                                  
  1996                                  	; building closure for integer->real
  1997 0000016F 48BF-                   	mov rdi, free_var_90
  1997 00000171 [BF13000000000000] 
  1998 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  1998 0000017B [9985010000000000] 
  1999 00000183 E8FD7C0100              	call bind_primitive
  2000                                  
  2001                                  	; building closure for fraction->real
  2002 00000188 48BF-                   	mov rdi, free_var_87
  2002 0000018A [8C13000000000000] 
  2003 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2003 00000194 [C785010000000000] 
  2004 0000019C E8E47C0100              	call bind_primitive
  2005                                  
  2006                                  	; building closure for char->integer
  2007 000001A1 48BF-                   	mov rdi, free_var_65
  2007 000001A3 [1612000000000000] 
  2008 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2008 000001AD [0286010000000000] 
  2009 000001B5 E8CB7C0100              	call bind_primitive
  2010                                  
  2011                                  	; building closure for integer->char
  2012 000001BA 48BF-                   	mov rdi, free_var_89
  2012 000001BC [AE13000000000000] 
  2013 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2013 000001C6 [7186010000000000] 
  2014 000001CE E8B27C0100              	call bind_primitive
  2015                                  
  2016                                  	; building closure for trng
  2017 000001D3 48BF-                   	mov rdi, free_var_139
  2017 000001D5 [0017000000000000] 
  2018 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2018 000001DF [BC86010000000000] 
  2019 000001E7 E8997C0100              	call bind_primitive
  2020                                  
  2021                                  	; building closure for zero?
  2022 000001EC 48BF-                   	mov rdi, free_var_151
  2022 000001EE [CC17000000000000] 
  2023 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2023 000001F8 [DB86010000000000] 
  2024 00000200 E8807C0100              	call bind_primitive
  2025                                  
  2026                                  	; building closure for integer?
  2027 00000205 48BF-                   	mov rdi, free_var_91
  2027 00000207 [D013000000000000] 
  2028 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2028 00000211 [4087010000000000] 
  2029 00000219 E8677C0100              	call bind_primitive
  2030                                  
  2031                                  	; building closure for __bin-apply
  2032 0000021E 48BF-                   	mov rdi, free_var_12
  2032 00000220 [910E000000000000] 
  2033 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2033 0000022A [F57F010000000000] 
  2034 00000232 E84E7C0100              	call bind_primitive
  2035                                  
  2036                                  	; building closure for __bin-add-rr
  2037 00000237 48BF-                   	mov rdi, free_var_10
  2037 00000239 [6F0E000000000000] 
  2038 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2038 00000243 [7287010000000000] 
  2039 0000024B E8357C0100              	call bind_primitive
  2040                                  
  2041                                  	; building closure for __bin-sub-rr
  2042 00000250 48BF-                   	mov rdi, free_var_26
  2042 00000252 [7F0F000000000000] 
  2043 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2043 0000025C [B287010000000000] 
  2044 00000264 E81C7C0100              	call bind_primitive
  2045                                  
  2046                                  	; building closure for __bin-mul-rr
  2047 00000269 48BF-                   	mov rdi, free_var_23
  2047 0000026B [4C0F000000000000] 
  2048 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2048 00000275 [F287010000000000] 
  2049 0000027D E8037C0100              	call bind_primitive
  2050                                  
  2051                                  	; building closure for __bin-div-rr
  2052 00000282 48BF-                   	mov rdi, free_var_14
  2052 00000284 [B30E000000000000] 
  2053 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2053 0000028E [3288010000000000] 
  2054 00000296 E8EA7B0100              	call bind_primitive
  2055                                  
  2056                                  	; building closure for __bin-add-qq
  2057 0000029B 48BF-                   	mov rdi, free_var_9
  2057 0000029D [5E0E000000000000] 
  2058 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2058 000002A7 [BC88010000000000] 
  2059 000002AF E8D17B0100              	call bind_primitive
  2060                                  
  2061                                  	; building closure for __bin-sub-qq
  2062 000002B4 48BF-                   	mov rdi, free_var_25
  2062 000002B6 [6E0F000000000000] 
  2063 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2063 000002C0 [5C89010000000000] 
  2064 000002C8 E8B87B0100              	call bind_primitive
  2065                                  
  2066                                  	; building closure for __bin-mul-qq
  2067 000002CD 48BF-                   	mov rdi, free_var_22
  2067 000002CF [3B0F000000000000] 
  2068 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2068 000002D9 [018A010000000000] 
  2069 000002E1 E89F7B0100              	call bind_primitive
  2070                                  
  2071                                  	; building closure for __bin-div-qq
  2072 000002E6 48BF-                   	mov rdi, free_var_13
  2072 000002E8 [A20E000000000000] 
  2073 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2073 000002F2 [9B8A010000000000] 
  2074 000002FA E8867B0100              	call bind_primitive
  2075                                  
  2076                                  	; building closure for __bin-add-zz
  2077 000002FF 48BF-                   	mov rdi, free_var_11
  2077 00000301 [800E000000000000] 
  2078 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2078 0000030B [8088010000000000] 
  2079 00000313 E86D7B0100              	call bind_primitive
  2080                                  
  2081                                  	; building closure for __bin-sub-zz
  2082 00000318 48BF-                   	mov rdi, free_var_27
  2082 0000031A [900F000000000000] 
  2083 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2083 00000324 [2089010000000000] 
  2084 0000032C E8547B0100              	call bind_primitive
  2085                                  
  2086                                  	; building closure for __bin-mul-zz
  2087 00000331 48BF-                   	mov rdi, free_var_24
  2087 00000333 [5D0F000000000000] 
  2088 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2088 0000033D [C089010000000000] 
  2089 00000345 E83B7B0100              	call bind_primitive
  2090                                  
  2091                                  	; building closure for __bin-div-zz
  2092 0000034A 48BF-                   	mov rdi, free_var_15
  2092 0000034C [C40E000000000000] 
  2093 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2093 00000356 [558A010000000000] 
  2094 0000035E E8227B0100              	call bind_primitive
  2095                                  
  2096                                  	; building closure for error
  2097 00000363 48BF-                   	mov rdi, free_var_82
  2097 00000365 [3713000000000000] 
  2098 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2098 0000036F [858B010000000000] 
  2099 00000377 E8097B0100              	call bind_primitive
  2100                                  
  2101                                  	; building closure for __bin-less-than-rr
  2102 0000037C 48BF-                   	mov rdi, free_var_20
  2102 0000037E [190F000000000000] 
  2103 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2103 00000388 [418C010000000000] 
  2104 00000390 E8F07A0100              	call bind_primitive
  2105                                  
  2106                                  	; building closure for __bin-less-than-qq
  2107 00000395 48BF-                   	mov rdi, free_var_19
  2107 00000397 [080F000000000000] 
  2108 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2108 000003A1 [E38C010000000000] 
  2109 000003A9 E8D77A0100              	call bind_primitive
  2110                                  
  2111                                  	; building closure for __bin-less-than-zz
  2112 000003AE 48BF-                   	mov rdi, free_var_21
  2112 000003B0 [2A0F000000000000] 
  2113 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2113 000003BA [948C010000000000] 
  2114 000003C2 E8BE7A0100              	call bind_primitive
  2115                                  
  2116                                  	; building closure for __bin-equal-rr
  2117 000003C7 48BF-                   	mov rdi, free_var_17
  2117 000003C9 [E60E000000000000] 
  2118 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2118 000003D3 [428D010000000000] 
  2119 000003DB E8A57A0100              	call bind_primitive
  2120                                  
  2121                                  	; building closure for __bin-equal-qq
  2122 000003E0 48BF-                   	mov rdi, free_var_16
  2122 000003E2 [D50E000000000000] 
  2123 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2123 000003EC [E48D010000000000] 
  2124 000003F4 E88C7A0100              	call bind_primitive
  2125                                  
  2126                                  	; building closure for __bin-equal-zz
  2127 000003F9 48BF-                   	mov rdi, free_var_18
  2127 000003FB [F70E000000000000] 
  2128 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2128 00000405 [958D010000000000] 
  2129 0000040D E8737A0100              	call bind_primitive
  2130                                  
  2131                                  	; building closure for remainder
  2132 00000412 48BF-                   	mov rdi, free_var_117
  2132 00000414 [8A15000000000000] 
  2133 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2133 0000041E [8F8E010000000000] 
  2134 00000426 E85A7A0100              	call bind_primitive
  2135                                  
  2136                                  	; building closure for string-ref
  2137 0000042B 48BF-                   	mov rdi, free_var_128
  2137 0000042D [4516000000000000] 
  2138 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2138 00000437 [3F8F010000000000] 
  2139 0000043F E8417A0100              	call bind_primitive
  2140                                  
  2141                                  	; building closure for vector-ref
  2142 00000444 48BF-                   	mov rdi, free_var_144
  2142 00000446 [5517000000000000] 
  2143 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2143 00000450 [9B8F010000000000] 
  2144 00000458 E8287A0100              	call bind_primitive
  2145                                  
  2146                                  	; building closure for vector-set!
  2147 0000045D 48BF-                   	mov rdi, free_var_147
  2147 0000045F [8817000000000000] 
  2148 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2148 00000469 [E88F010000000000] 
  2149 00000471 E80F7A0100              	call bind_primitive
  2150                                  
  2151                                  	; building closure for string-set!
  2152 00000476 48BF-                   	mov rdi, free_var_131
  2152 00000478 [7816000000000000] 
  2153 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2153 00000482 [4390010000000000] 
  2154 0000048A E8F6790100              	call bind_primitive
  2155                                  
  2156                                  	; building closure for make-vector
  2157 0000048F 48BF-                   	mov rdi, free_var_101
  2157 00000491 [7A14000000000000] 
  2158 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2158 0000049B [A990010000000000] 
  2159 000004A3 E8DD790100              	call bind_primitive
  2160                                  
  2161                                  	; building closure for make-string
  2162 000004A8 48BF-                   	mov rdi, free_var_99
  2162 000004AA [5814000000000000] 
  2163 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2163 000004B4 [0491010000000000] 
  2164 000004BC E8C4790100              	call bind_primitive
  2165                                  
  2166                                  	; building closure for eq?
  2167 000004C1 48BF-                   	mov rdi, free_var_80
  2167 000004C3 [1513000000000000] 
  2168 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2168 000004CD [B991010000000000] 
  2169 000004D5 E8AB790100              	call bind_primitive
  2170                                  
  2171                                  	; building closure for __integer-to-fraction
  2172 000004DA 48BF-                   	mov rdi, free_var_29
  2172 000004DC [B20F000000000000] 
  2173 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2173 000004E6 [3386010000000000] 
  2174 000004EE E892790100              	call bind_primitive
  2175                                  
  2176 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2177 000004F8 E858710100              	call malloc
  2178 000004FD 50                      	push rax
  2179 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2180 00000503 E84D710100              	call malloc
  2181 00000508 50                      	push rax
  2182 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2183 0000050E E842710100              	call malloc
  2184 00000513 488B7D10                	mov rdi, ENV
  2185 00000517 BE00000000              	mov rsi, 0
  2186 0000051C BA01000000              	mov rdx, 1
  2187                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  2188 00000521 4883FE00                	cmp rsi, 0
  2189 00000525 7410                    	je .L_lambda_simple_env_end_0001
  2190 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2191 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2192 0000052F 48FFC6                  	inc rsi
  2193 00000532 48FFC2                  	inc rdx
  2194 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_0001
  2195                                  .L_lambda_simple_env_end_0001:
  2196 00000537 5B                      	pop rbx
  2197 00000538 BE00000000              	mov rsi, 0
  2198                                  .L_lambda_simple_params_loop_0001:	; copy params
  2199 0000053D 4883FE00                	cmp rsi, 0
  2200 00000541 740E                    	je .L_lambda_simple_params_end_0001
  2201 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2202 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2203 0000054C 48FFC6                  	inc rsi
  2204 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_0001
  2205                                  .L_lambda_simple_params_end_0001:
  2206 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2207 00000554 4889C3                  	mov rbx, rax
  2208 00000557 58                      	pop rax
  2209 00000558 C60004                  	mov byte [rax], T_closure
  2210 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2211 0000055F 48C74009[6C050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  2212 00000567 E9A4000000              	jmp .L_lambda_simple_end_0001
  2213                                  .L_lambda_simple_code_0001:	; lambda-simple body
  2214 0000056C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2215 00000572 740B                    	je .L_lambda_simple_arity_check_ok_0001
  2216 00000574 FF742410                	push qword [rsp + 8 * 2]
  2217 00000578 6A01                    	push 1
  2218 0000057A E98F700100              	jmp L_error_incorrect_arity_simple
  2219                                  .L_lambda_simple_arity_check_ok_0001:
  2220 0000057F C8000000                	enter 0, 0
  2221                                  	; preparing a tail-call
  2222                                  	; preparing a non-tail-call
  2223 00000583 488B4520                	mov rax, PARAM(0)	; param x
  2224 00000587 50                      	push rax
  2225 00000588 6A01                    	push 1	; arg count
  2226 0000058A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2227 00000592 803805                  	cmp byte [rax], T_undefined
  2228 00000595 0F848D6F0100            	je L_error_fvar_undefined
  2229 0000059B 803804                  	cmp byte [rax], T_closure
  2230 0000059E 0F8508700100            	jne L_error_non_closure
  2231 000005A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2232 000005A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2233 000005AA 50                      	push rax
  2234 000005AB 6A01                    	push 1	; arg count
  2235 000005AD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2236 000005B5 803805                  	cmp byte [rax], T_undefined
  2237 000005B8 0F846A6F0100            	je L_error_fvar_undefined
  2238 000005BE 803804                  	cmp byte [rax], T_closure
  2239 000005C1 0F85E56F0100            	jne L_error_non_closure
  2240 000005C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2241 000005CA FF7508                  	push qword [rbp + 8 * 1]
  2242                                   ; old ret addr
  2243 000005CD FF7500                  	push qword [rbp]
  2244                                   ; restore the old rbp
  2245 000005D0 BB01000000              	mov rbx, 1
  2246 000005D5 4883C303                	add rbx, 3
  2247 000005D9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2248 000005DD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2249 000005E2 4C8D4DF8                	lea r9, [rbp - 8]
  2250 000005E6 B905000000              	mov rcx, 5
  2251                                  .L_tc_recycle_frame_loop_0001:
  2252 000005EB 4883F900                	cmp rcx, 0
  2253 000005EF 7413                    	je .L_tc_recycle_frame_done_0001
  2254 000005F1 4D8B11                  	mov r10, qword [r9]
  2255 000005F4 4D8910                  	mov qword [r8], r10
  2256 000005F7 4983E808                	sub r8, 8
  2257 000005FB 4983E908                	sub r9, 8
  2258 000005FF 48FFC9                  	dec rcx
  2259 00000602 EBE7                    	jmp .L_tc_recycle_frame_loop_0001
  2260                                  .L_tc_recycle_frame_done_0001:
  2261 00000604 498D6008                	lea rsp, [r8 + 8]
  2262 00000608 5D                      	pop rbp ; restore the old rbp
  2263 00000609 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2264 0000060C C9                      	leave
  2265 0000060D C21800                  	ret AND_KILL_FRAME(1)
  2266                                  .L_lambda_simple_end_0001:	; new closure is in rax
  2267 00000610 48890425[7E100000]      	mov qword [free_var_41], rax
  2268 00000618 48B8-                   	mov rax, sob_void
  2268 0000061A [0000000000000000] 
  2269                                  
  2270 00000622 4889C7                  	mov rdi, rax
  2271 00000625 E880720100              	call print_sexpr_if_not_void
  2272 0000062A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2273 0000062F E821700100              	call malloc
  2274 00000634 50                      	push rax
  2275 00000635 BF00000000              	mov rdi, 8 * 0	; new rib
  2276 0000063A E816700100              	call malloc
  2277 0000063F 50                      	push rax
  2278 00000640 BF08000000              	mov rdi, 8 * 1	; extended env
  2279 00000645 E80B700100              	call malloc
  2280 0000064A 488B7D10                	mov rdi, ENV
  2281 0000064E BE00000000              	mov rsi, 0
  2282 00000653 BA01000000              	mov rdx, 1
  2283                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  2284 00000658 4883FE00                	cmp rsi, 0
  2285 0000065C 7410                    	je .L_lambda_simple_env_end_0002
  2286 0000065E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2287 00000662 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2288 00000666 48FFC6                  	inc rsi
  2289 00000669 48FFC2                  	inc rdx
  2290 0000066C EBEA                    	jmp .L_lambda_simple_env_loop_0002
  2291                                  .L_lambda_simple_env_end_0002:
  2292 0000066E 5B                      	pop rbx
  2293 0000066F BE00000000              	mov rsi, 0
  2294                                  .L_lambda_simple_params_loop_0002:	; copy params
  2295 00000674 4883FE00                	cmp rsi, 0
  2296 00000678 740E                    	je .L_lambda_simple_params_end_0002
  2297 0000067A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2298 0000067F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2299 00000683 48FFC6                  	inc rsi
  2300 00000686 EBEC                    	jmp .L_lambda_simple_params_loop_0002
  2301                                  .L_lambda_simple_params_end_0002:
  2302 00000688 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2303 0000068B 4889C3                  	mov rbx, rax
  2304 0000068E 58                      	pop rax
  2305 0000068F C60004                  	mov byte [rax], T_closure
  2306 00000692 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2307 00000696 48C74009[A3060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  2308 0000069E E9A4000000              	jmp .L_lambda_simple_end_0002
  2309                                  .L_lambda_simple_code_0002:	; lambda-simple body
  2310 000006A3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2311 000006A9 740B                    	je .L_lambda_simple_arity_check_ok_0002
  2312 000006AB FF742410                	push qword [rsp + 8 * 2]
  2313 000006AF 6A01                    	push 1
  2314 000006B1 E9586F0100              	jmp L_error_incorrect_arity_simple
  2315                                  .L_lambda_simple_arity_check_ok_0002:
  2316 000006B6 C8000000                	enter 0, 0
  2317                                  	; preparing a tail-call
  2318                                  	; preparing a non-tail-call
  2319 000006BA 488B4520                	mov rax, PARAM(0)	; param x
  2320 000006BE 50                      	push rax
  2321 000006BF 6A01                    	push 1	; arg count
  2322 000006C1 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2323 000006C9 803805                  	cmp byte [rax], T_undefined
  2324 000006CC 0F84566E0100            	je L_error_fvar_undefined
  2325 000006D2 803804                  	cmp byte [rax], T_closure
  2326 000006D5 0F85D16E0100            	jne L_error_non_closure
  2327 000006DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2328 000006DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  2329 000006E1 50                      	push rax
  2330 000006E2 6A01                    	push 1	; arg count
  2331 000006E4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2332 000006EC 803805                  	cmp byte [rax], T_undefined
  2333 000006EF 0F84336E0100            	je L_error_fvar_undefined
  2334 000006F5 803804                  	cmp byte [rax], T_closure
  2335 000006F8 0F85AE6E0100            	jne L_error_non_closure
  2336 000006FE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2337 00000701 FF7508                  	push qword [rbp + 8 * 1]
  2338                                   ; old ret addr
  2339 00000704 FF7500                  	push qword [rbp]
  2340                                   ; restore the old rbp
  2341 00000707 BB01000000              	mov rbx, 1
  2342 0000070C 4883C303                	add rbx, 3
  2343 00000710 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2344 00000714 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2345 00000719 4C8D4DF8                	lea r9, [rbp - 8]
  2346 0000071D B905000000              	mov rcx, 5
  2347                                  .L_tc_recycle_frame_loop_0002:
  2348 00000722 4883F900                	cmp rcx, 0
  2349 00000726 7413                    	je .L_tc_recycle_frame_done_0002
  2350 00000728 4D8B11                  	mov r10, qword [r9]
  2351 0000072B 4D8910                  	mov qword [r8], r10
  2352 0000072E 4983E808                	sub r8, 8
  2353 00000732 4983E908                	sub r9, 8
  2354 00000736 48FFC9                  	dec rcx
  2355 00000739 EBE7                    	jmp .L_tc_recycle_frame_loop_0002
  2356                                  .L_tc_recycle_frame_done_0002:
  2357 0000073B 498D6008                	lea rsp, [r8 + 8]
  2358 0000073F 5D                      	pop rbp ; restore the old rbp
  2359 00000740 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2360 00000743 C9                      	leave
  2361 00000744 C21800                  	ret AND_KILL_FRAME(1)
  2362                                  .L_lambda_simple_end_0002:	; new closure is in rax
  2363 00000747 48890425[F5100000]      	mov qword [free_var_48], rax
  2364 0000074F 48B8-                   	mov rax, sob_void
  2364 00000751 [0000000000000000] 
  2365                                  
  2366 00000759 4889C7                  	mov rdi, rax
  2367 0000075C E849710100              	call print_sexpr_if_not_void
  2368 00000761 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2369 00000766 E8EA6E0100              	call malloc
  2370 0000076B 50                      	push rax
  2371 0000076C BF00000000              	mov rdi, 8 * 0	; new rib
  2372 00000771 E8DF6E0100              	call malloc
  2373 00000776 50                      	push rax
  2374 00000777 BF08000000              	mov rdi, 8 * 1	; extended env
  2375 0000077C E8D46E0100              	call malloc
  2376 00000781 488B7D10                	mov rdi, ENV
  2377 00000785 BE00000000              	mov rsi, 0
  2378 0000078A BA01000000              	mov rdx, 1
  2379                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  2380 0000078F 4883FE00                	cmp rsi, 0
  2381 00000793 7410                    	je .L_lambda_simple_env_end_0003
  2382 00000795 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2383 00000799 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2384 0000079D 48FFC6                  	inc rsi
  2385 000007A0 48FFC2                  	inc rdx
  2386 000007A3 EBEA                    	jmp .L_lambda_simple_env_loop_0003
  2387                                  .L_lambda_simple_env_end_0003:
  2388 000007A5 5B                      	pop rbx
  2389 000007A6 BE00000000              	mov rsi, 0
  2390                                  .L_lambda_simple_params_loop_0003:	; copy params
  2391 000007AB 4883FE00                	cmp rsi, 0
  2392 000007AF 740E                    	je .L_lambda_simple_params_end_0003
  2393 000007B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2394 000007B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2395 000007BA 48FFC6                  	inc rsi
  2396 000007BD EBEC                    	jmp .L_lambda_simple_params_loop_0003
  2397                                  .L_lambda_simple_params_end_0003:
  2398 000007BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2399 000007C2 4889C3                  	mov rbx, rax
  2400 000007C5 58                      	pop rax
  2401 000007C6 C60004                  	mov byte [rax], T_closure
  2402 000007C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2403 000007CD 48C74009[DA070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  2404 000007D5 E9A4000000              	jmp .L_lambda_simple_end_0003
  2405                                  .L_lambda_simple_code_0003:	; lambda-simple body
  2406 000007DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2407 000007E0 740B                    	je .L_lambda_simple_arity_check_ok_0003
  2408 000007E2 FF742410                	push qword [rsp + 8 * 2]
  2409 000007E6 6A01                    	push 1
  2410 000007E8 E9216E0100              	jmp L_error_incorrect_arity_simple
  2411                                  .L_lambda_simple_arity_check_ok_0003:
  2412 000007ED C8000000                	enter 0, 0
  2413                                  	; preparing a tail-call
  2414                                  	; preparing a non-tail-call
  2415 000007F1 488B4520                	mov rax, PARAM(0)	; param x
  2416 000007F5 50                      	push rax
  2417 000007F6 6A01                    	push 1	; arg count
  2418 000007F8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2419 00000800 803805                  	cmp byte [rax], T_undefined
  2420 00000803 0F841F6D0100            	je L_error_fvar_undefined
  2421 00000809 803804                  	cmp byte [rax], T_closure
  2422 0000080C 0F859A6D0100            	jne L_error_non_closure
  2423 00000812 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2424 00000815 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2425 00000818 50                      	push rax
  2426 00000819 6A01                    	push 1	; arg count
  2427 0000081B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2428 00000823 803805                  	cmp byte [rax], T_undefined
  2429 00000826 0F84FC6C0100            	je L_error_fvar_undefined
  2430 0000082C 803804                  	cmp byte [rax], T_closure
  2431 0000082F 0F85776D0100            	jne L_error_non_closure
  2432 00000835 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2433 00000838 FF7508                  	push qword [rbp + 8 * 1]
  2434                                   ; old ret addr
  2435 0000083B FF7500                  	push qword [rbp]
  2436                                   ; restore the old rbp
  2437 0000083E BB01000000              	mov rbx, 1
  2438 00000843 4883C303                	add rbx, 3
  2439 00000847 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2440 0000084B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2441 00000850 4C8D4DF8                	lea r9, [rbp - 8]
  2442 00000854 B905000000              	mov rcx, 5
  2443                                  .L_tc_recycle_frame_loop_0003:
  2444 00000859 4883F900                	cmp rcx, 0
  2445 0000085D 7413                    	je .L_tc_recycle_frame_done_0003
  2446 0000085F 4D8B11                  	mov r10, qword [r9]
  2447 00000862 4D8910                  	mov qword [r8], r10
  2448 00000865 4983E808                	sub r8, 8
  2449 00000869 4983E908                	sub r9, 8
  2450 0000086D 48FFC9                  	dec rcx
  2451 00000870 EBE7                    	jmp .L_tc_recycle_frame_loop_0003
  2452                                  .L_tc_recycle_frame_done_0003:
  2453 00000872 498D6008                	lea rsp, [r8 + 8]
  2454 00000876 5D                      	pop rbp ; restore the old rbp
  2455 00000877 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2456 0000087A C9                      	leave
  2457 0000087B C21800                  	ret AND_KILL_FRAME(1)
  2458                                  .L_lambda_simple_end_0003:	; new closure is in rax
  2459 0000087E 48890425[7D110000]      	mov qword [free_var_56], rax
  2460 00000886 48B8-                   	mov rax, sob_void
  2460 00000888 [0000000000000000] 
  2461                                  
  2462 00000890 4889C7                  	mov rdi, rax
  2463 00000893 E812700100              	call print_sexpr_if_not_void
  2464 00000898 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2465 0000089D E8B36D0100              	call malloc
  2466 000008A2 50                      	push rax
  2467 000008A3 BF00000000              	mov rdi, 8 * 0	; new rib
  2468 000008A8 E8A86D0100              	call malloc
  2469 000008AD 50                      	push rax
  2470 000008AE BF08000000              	mov rdi, 8 * 1	; extended env
  2471 000008B3 E89D6D0100              	call malloc
  2472 000008B8 488B7D10                	mov rdi, ENV
  2473 000008BC BE00000000              	mov rsi, 0
  2474 000008C1 BA01000000              	mov rdx, 1
  2475                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  2476 000008C6 4883FE00                	cmp rsi, 0
  2477 000008CA 7410                    	je .L_lambda_simple_env_end_0004
  2478 000008CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2479 000008D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2480 000008D4 48FFC6                  	inc rsi
  2481 000008D7 48FFC2                  	inc rdx
  2482 000008DA EBEA                    	jmp .L_lambda_simple_env_loop_0004
  2483                                  .L_lambda_simple_env_end_0004:
  2484 000008DC 5B                      	pop rbx
  2485 000008DD BE00000000              	mov rsi, 0
  2486                                  .L_lambda_simple_params_loop_0004:	; copy params
  2487 000008E2 4883FE00                	cmp rsi, 0
  2488 000008E6 740E                    	je .L_lambda_simple_params_end_0004
  2489 000008E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2490 000008ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2491 000008F1 48FFC6                  	inc rsi
  2492 000008F4 EBEC                    	jmp .L_lambda_simple_params_loop_0004
  2493                                  .L_lambda_simple_params_end_0004:
  2494 000008F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2495 000008F9 4889C3                  	mov rbx, rax
  2496 000008FC 58                      	pop rax
  2497 000008FD C60004                  	mov byte [rax], T_closure
  2498 00000900 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2499 00000904 48C74009[11090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  2500 0000090C E9A4000000              	jmp .L_lambda_simple_end_0004
  2501                                  .L_lambda_simple_code_0004:	; lambda-simple body
  2502 00000911 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2503 00000917 740B                    	je .L_lambda_simple_arity_check_ok_0004
  2504 00000919 FF742410                	push qword [rsp + 8 * 2]
  2505 0000091D 6A01                    	push 1
  2506 0000091F E9EA6C0100              	jmp L_error_incorrect_arity_simple
  2507                                  .L_lambda_simple_arity_check_ok_0004:
  2508 00000924 C8000000                	enter 0, 0
  2509                                  	; preparing a tail-call
  2510                                  	; preparing a non-tail-call
  2511 00000928 488B4520                	mov rax, PARAM(0)	; param x
  2512 0000092C 50                      	push rax
  2513 0000092D 6A01                    	push 1	; arg count
  2514 0000092F 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2515 00000937 803805                  	cmp byte [rax], T_undefined
  2516 0000093A 0F84E86B0100            	je L_error_fvar_undefined
  2517 00000940 803804                  	cmp byte [rax], T_closure
  2518 00000943 0F85636C0100            	jne L_error_non_closure
  2519 00000949 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2520 0000094C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2521 0000094F 50                      	push rax
  2522 00000950 6A01                    	push 1	; arg count
  2523 00000952 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2524 0000095A 803805                  	cmp byte [rax], T_undefined
  2525 0000095D 0F84C56B0100            	je L_error_fvar_undefined
  2526 00000963 803804                  	cmp byte [rax], T_closure
  2527 00000966 0F85406C0100            	jne L_error_non_closure
  2528 0000096C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2529 0000096F FF7508                  	push qword [rbp + 8 * 1]
  2530                                   ; old ret addr
  2531 00000972 FF7500                  	push qword [rbp]
  2532                                   ; restore the old rbp
  2533 00000975 BB01000000              	mov rbx, 1
  2534 0000097A 4883C303                	add rbx, 3
  2535 0000097E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2536 00000982 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2537 00000987 4C8D4DF8                	lea r9, [rbp - 8]
  2538 0000098B B905000000              	mov rcx, 5
  2539                                  .L_tc_recycle_frame_loop_0004:
  2540 00000990 4883F900                	cmp rcx, 0
  2541 00000994 7413                    	je .L_tc_recycle_frame_done_0004
  2542 00000996 4D8B11                  	mov r10, qword [r9]
  2543 00000999 4D8910                  	mov qword [r8], r10
  2544 0000099C 4983E808                	sub r8, 8
  2545 000009A0 4983E908                	sub r9, 8
  2546 000009A4 48FFC9                  	dec rcx
  2547 000009A7 EBE7                    	jmp .L_tc_recycle_frame_loop_0004
  2548                                  .L_tc_recycle_frame_done_0004:
  2549 000009A9 498D6008                	lea rsp, [r8 + 8]
  2550 000009AD 5D                      	pop rbp ; restore the old rbp
  2551 000009AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2552 000009B1 C9                      	leave
  2553 000009B2 C21800                  	ret AND_KILL_FRAME(1)
  2554                                  .L_lambda_simple_end_0004:	; new closure is in rax
  2555 000009B5 48890425[F4110000]      	mov qword [free_var_63], rax
  2556 000009BD 48B8-                   	mov rax, sob_void
  2556 000009BF [0000000000000000] 
  2557                                  
  2558 000009C7 4889C7                  	mov rdi, rax
  2559 000009CA E8DB6E0100              	call print_sexpr_if_not_void
  2560 000009CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2561 000009D4 E87C6C0100              	call malloc
  2562 000009D9 50                      	push rax
  2563 000009DA BF00000000              	mov rdi, 8 * 0	; new rib
  2564 000009DF E8716C0100              	call malloc
  2565 000009E4 50                      	push rax
  2566 000009E5 BF08000000              	mov rdi, 8 * 1	; extended env
  2567 000009EA E8666C0100              	call malloc
  2568 000009EF 488B7D10                	mov rdi, ENV
  2569 000009F3 BE00000000              	mov rsi, 0
  2570 000009F8 BA01000000              	mov rdx, 1
  2571                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  2572 000009FD 4883FE00                	cmp rsi, 0
  2573 00000A01 7410                    	je .L_lambda_simple_env_end_0005
  2574 00000A03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2575 00000A07 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2576 00000A0B 48FFC6                  	inc rsi
  2577 00000A0E 48FFC2                  	inc rdx
  2578 00000A11 EBEA                    	jmp .L_lambda_simple_env_loop_0005
  2579                                  .L_lambda_simple_env_end_0005:
  2580 00000A13 5B                      	pop rbx
  2581 00000A14 BE00000000              	mov rsi, 0
  2582                                  .L_lambda_simple_params_loop_0005:	; copy params
  2583 00000A19 4883FE00                	cmp rsi, 0
  2584 00000A1D 740E                    	je .L_lambda_simple_params_end_0005
  2585 00000A1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2586 00000A24 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2587 00000A28 48FFC6                  	inc rsi
  2588 00000A2B EBEC                    	jmp .L_lambda_simple_params_loop_0005
  2589                                  .L_lambda_simple_params_end_0005:
  2590 00000A2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2591 00000A30 4889C3                  	mov rbx, rax
  2592 00000A33 58                      	pop rax
  2593 00000A34 C60004                  	mov byte [rax], T_closure
  2594 00000A37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2595 00000A3B 48C74009[480A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2596 00000A43 E9A4000000              	jmp .L_lambda_simple_end_0005
  2597                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2598 00000A48 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2599 00000A4E 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2600 00000A50 FF742410                	push qword [rsp + 8 * 2]
  2601 00000A54 6A01                    	push 1
  2602 00000A56 E9B36B0100              	jmp L_error_incorrect_arity_simple
  2603                                  .L_lambda_simple_arity_check_ok_0005:
  2604 00000A5B C8000000                	enter 0, 0
  2605                                  	; preparing a tail-call
  2606                                  	; preparing a non-tail-call
  2607 00000A5F 488B4520                	mov rax, PARAM(0)	; param x
  2608 00000A63 50                      	push rax
  2609 00000A64 6A01                    	push 1	; arg count
  2610 00000A66 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2611 00000A6E 803805                  	cmp byte [rax], T_undefined
  2612 00000A71 0F84B16A0100            	je L_error_fvar_undefined
  2613 00000A77 803804                  	cmp byte [rax], T_closure
  2614 00000A7A 0F852C6B0100            	jne L_error_non_closure
  2615 00000A80 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2616 00000A83 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2617 00000A86 50                      	push rax
  2618 00000A87 6A01                    	push 1	; arg count
  2619 00000A89 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2620 00000A91 803805                  	cmp byte [rax], T_undefined
  2621 00000A94 0F848E6A0100            	je L_error_fvar_undefined
  2622 00000A9A 803804                  	cmp byte [rax], T_closure
  2623 00000A9D 0F85096B0100            	jne L_error_non_closure
  2624 00000AA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2625 00000AA6 FF7508                  	push qword [rbp + 8 * 1]
  2626                                   ; old ret addr
  2627 00000AA9 FF7500                  	push qword [rbp]
  2628                                   ; restore the old rbp
  2629 00000AAC BB01000000              	mov rbx, 1
  2630 00000AB1 4883C303                	add rbx, 3
  2631 00000AB5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2632 00000AB9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2633 00000ABE 4C8D4DF8                	lea r9, [rbp - 8]
  2634 00000AC2 B905000000              	mov rcx, 5
  2635                                  .L_tc_recycle_frame_loop_0005:
  2636 00000AC7 4883F900                	cmp rcx, 0
  2637 00000ACB 7413                    	je .L_tc_recycle_frame_done_0005
  2638 00000ACD 4D8B11                  	mov r10, qword [r9]
  2639 00000AD0 4D8910                  	mov qword [r8], r10
  2640 00000AD3 4983E808                	sub r8, 8
  2641 00000AD7 4983E908                	sub r9, 8
  2642 00000ADB 48FFC9                  	dec rcx
  2643 00000ADE EBE7                    	jmp .L_tc_recycle_frame_loop_0005
  2644                                  .L_tc_recycle_frame_done_0005:
  2645 00000AE0 498D6008                	lea rsp, [r8 + 8]
  2646 00000AE4 5D                      	pop rbp ; restore the old rbp
  2647 00000AE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2648 00000AE8 C9                      	leave
  2649 00000AE9 C21800                  	ret AND_KILL_FRAME(1)
  2650                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2651 00000AEC 48890425[3A100000]      	mov qword [free_var_37], rax
  2652 00000AF4 48B8-                   	mov rax, sob_void
  2652 00000AF6 [0000000000000000] 
  2653                                  
  2654 00000AFE 4889C7                  	mov rdi, rax
  2655 00000B01 E8A46D0100              	call print_sexpr_if_not_void
  2656 00000B06 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2657 00000B0B E8456B0100              	call malloc
  2658 00000B10 50                      	push rax
  2659 00000B11 BF00000000              	mov rdi, 8 * 0	; new rib
  2660 00000B16 E83A6B0100              	call malloc
  2661 00000B1B 50                      	push rax
  2662 00000B1C BF08000000              	mov rdi, 8 * 1	; extended env
  2663 00000B21 E82F6B0100              	call malloc
  2664 00000B26 488B7D10                	mov rdi, ENV
  2665 00000B2A BE00000000              	mov rsi, 0
  2666 00000B2F BA01000000              	mov rdx, 1
  2667                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2668 00000B34 4883FE00                	cmp rsi, 0
  2669 00000B38 7410                    	je .L_lambda_simple_env_end_0006
  2670 00000B3A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2671 00000B3E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2672 00000B42 48FFC6                  	inc rsi
  2673 00000B45 48FFC2                  	inc rdx
  2674 00000B48 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2675                                  .L_lambda_simple_env_end_0006:
  2676 00000B4A 5B                      	pop rbx
  2677 00000B4B BE00000000              	mov rsi, 0
  2678                                  .L_lambda_simple_params_loop_0006:	; copy params
  2679 00000B50 4883FE00                	cmp rsi, 0
  2680 00000B54 740E                    	je .L_lambda_simple_params_end_0006
  2681 00000B56 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2682 00000B5B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2683 00000B5F 48FFC6                  	inc rsi
  2684 00000B62 EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2685                                  .L_lambda_simple_params_end_0006:
  2686 00000B64 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2687 00000B67 4889C3                  	mov rbx, rax
  2688 00000B6A 58                      	pop rax
  2689 00000B6B C60004                  	mov byte [rax], T_closure
  2690 00000B6E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2691 00000B72 48C74009[7F0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2692 00000B7A E9A4000000              	jmp .L_lambda_simple_end_0006
  2693                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2694 00000B7F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2695 00000B85 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2696 00000B87 FF742410                	push qword [rsp + 8 * 2]
  2697 00000B8B 6A01                    	push 1
  2698 00000B8D E97C6A0100              	jmp L_error_incorrect_arity_simple
  2699                                  .L_lambda_simple_arity_check_ok_0006:
  2700 00000B92 C8000000                	enter 0, 0
  2701                                  	; preparing a tail-call
  2702                                  	; preparing a non-tail-call
  2703 00000B96 488B4520                	mov rax, PARAM(0)	; param x
  2704 00000B9A 50                      	push rax
  2705 00000B9B 6A01                    	push 1	; arg count
  2706 00000B9D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  2707 00000BA5 803805                  	cmp byte [rax], T_undefined
  2708 00000BA8 0F847A690100            	je L_error_fvar_undefined
  2709 00000BAE 803804                  	cmp byte [rax], T_closure
  2710 00000BB1 0F85F5690100            	jne L_error_non_closure
  2711 00000BB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2712 00000BBA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2713 00000BBD 50                      	push rax
  2714 00000BBE 6A01                    	push 1	; arg count
  2715 00000BC0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2716 00000BC8 803805                  	cmp byte [rax], T_undefined
  2717 00000BCB 0F8457690100            	je L_error_fvar_undefined
  2718 00000BD1 803804                  	cmp byte [rax], T_closure
  2719 00000BD4 0F85D2690100            	jne L_error_non_closure
  2720 00000BDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  2721 00000BDD FF7508                  	push qword [rbp + 8 * 1]
  2722                                   ; old ret addr
  2723 00000BE0 FF7500                  	push qword [rbp]
  2724                                   ; restore the old rbp
  2725 00000BE3 BB01000000              	mov rbx, 1
  2726 00000BE8 4883C303                	add rbx, 3
  2727 00000BEC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2728 00000BF0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2729 00000BF5 4C8D4DF8                	lea r9, [rbp - 8]
  2730 00000BF9 B905000000              	mov rcx, 5
  2731                                  .L_tc_recycle_frame_loop_0006:
  2732 00000BFE 4883F900                	cmp rcx, 0
  2733 00000C02 7413                    	je .L_tc_recycle_frame_done_0006
  2734 00000C04 4D8B11                  	mov r10, qword [r9]
  2735 00000C07 4D8910                  	mov qword [r8], r10
  2736 00000C0A 4983E808                	sub r8, 8
  2737 00000C0E 4983E908                	sub r9, 8
  2738 00000C12 48FFC9                  	dec rcx
  2739 00000C15 EBE7                    	jmp .L_tc_recycle_frame_loop_0006
  2740                                  .L_tc_recycle_frame_done_0006:
  2741 00000C17 498D6008                	lea rsp, [r8 + 8]
  2742 00000C1B 5D                      	pop rbp ; restore the old rbp
  2743 00000C1C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2744 00000C1F C9                      	leave
  2745 00000C20 C21800                  	ret AND_KILL_FRAME(1)
  2746                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2747 00000C23 48890425[6D100000]      	mov qword [free_var_40], rax
  2748 00000C2B 48B8-                   	mov rax, sob_void
  2748 00000C2D [0000000000000000] 
  2749                                  
  2750 00000C35 4889C7                  	mov rdi, rax
  2751 00000C38 E86D6C0100              	call print_sexpr_if_not_void
  2752 00000C3D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2753 00000C42 E80E6A0100              	call malloc
  2754 00000C47 50                      	push rax
  2755 00000C48 BF00000000              	mov rdi, 8 * 0	; new rib
  2756 00000C4D E8036A0100              	call malloc
  2757 00000C52 50                      	push rax
  2758 00000C53 BF08000000              	mov rdi, 8 * 1	; extended env
  2759 00000C58 E8F8690100              	call malloc
  2760 00000C5D 488B7D10                	mov rdi, ENV
  2761 00000C61 BE00000000              	mov rsi, 0
  2762 00000C66 BA01000000              	mov rdx, 1
  2763                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2764 00000C6B 4883FE00                	cmp rsi, 0
  2765 00000C6F 7410                    	je .L_lambda_simple_env_end_0007
  2766 00000C71 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2767 00000C75 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2768 00000C79 48FFC6                  	inc rsi
  2769 00000C7C 48FFC2                  	inc rdx
  2770 00000C7F EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2771                                  .L_lambda_simple_env_end_0007:
  2772 00000C81 5B                      	pop rbx
  2773 00000C82 BE00000000              	mov rsi, 0
  2774                                  .L_lambda_simple_params_loop_0007:	; copy params
  2775 00000C87 4883FE00                	cmp rsi, 0
  2776 00000C8B 740E                    	je .L_lambda_simple_params_end_0007
  2777 00000C8D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2778 00000C92 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2779 00000C96 48FFC6                  	inc rsi
  2780 00000C99 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2781                                  .L_lambda_simple_params_end_0007:
  2782 00000C9B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2783 00000C9E 4889C3                  	mov rbx, rax
  2784 00000CA1 58                      	pop rax
  2785 00000CA2 C60004                  	mov byte [rax], T_closure
  2786 00000CA5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2787 00000CA9 48C74009[B60C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2788 00000CB1 E9A4000000              	jmp .L_lambda_simple_end_0007
  2789                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2790 00000CB6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2791 00000CBC 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2792 00000CBE FF742410                	push qword [rsp + 8 * 2]
  2793 00000CC2 6A01                    	push 1
  2794 00000CC4 E945690100              	jmp L_error_incorrect_arity_simple
  2795                                  .L_lambda_simple_arity_check_ok_0007:
  2796 00000CC9 C8000000                	enter 0, 0
  2797                                  	; preparing a tail-call
  2798                                  	; preparing a non-tail-call
  2799 00000CCD 488B4520                	mov rax, PARAM(0)	; param x
  2800 00000CD1 50                      	push rax
  2801 00000CD2 6A01                    	push 1	; arg count
  2802 00000CD4 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  2803 00000CDC 803805                  	cmp byte [rax], T_undefined
  2804 00000CDF 0F8443680100            	je L_error_fvar_undefined
  2805 00000CE5 803804                  	cmp byte [rax], T_closure
  2806 00000CE8 0F85BE680100            	jne L_error_non_closure
  2807 00000CEE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2808 00000CF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2809 00000CF4 50                      	push rax
  2810 00000CF5 6A01                    	push 1	; arg count
  2811 00000CF7 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2812 00000CFF 803805                  	cmp byte [rax], T_undefined
  2813 00000D02 0F8420680100            	je L_error_fvar_undefined
  2814 00000D08 803804                  	cmp byte [rax], T_closure
  2815 00000D0B 0F859B680100            	jne L_error_non_closure
  2816 00000D11 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2817 00000D14 FF7508                  	push qword [rbp + 8 * 1]
  2818                                   ; old ret addr
  2819 00000D17 FF7500                  	push qword [rbp]
  2820                                   ; restore the old rbp
  2821 00000D1A BB01000000              	mov rbx, 1
  2822 00000D1F 4883C303                	add rbx, 3
  2823 00000D23 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2824 00000D27 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2825 00000D2C 4C8D4DF8                	lea r9, [rbp - 8]
  2826 00000D30 B905000000              	mov rcx, 5
  2827                                  .L_tc_recycle_frame_loop_0007:
  2828 00000D35 4883F900                	cmp rcx, 0
  2829 00000D39 7413                    	je .L_tc_recycle_frame_done_0007
  2830 00000D3B 4D8B11                  	mov r10, qword [r9]
  2831 00000D3E 4D8910                  	mov qword [r8], r10
  2832 00000D41 4983E808                	sub r8, 8
  2833 00000D45 4983E908                	sub r9, 8
  2834 00000D49 48FFC9                  	dec rcx
  2835 00000D4C EBE7                    	jmp .L_tc_recycle_frame_loop_0007
  2836                                  .L_tc_recycle_frame_done_0007:
  2837 00000D4E 498D6008                	lea rsp, [r8 + 8]
  2838 00000D52 5D                      	pop rbp ; restore the old rbp
  2839 00000D53 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2840 00000D56 C9                      	leave
  2841 00000D57 C21800                  	ret AND_KILL_FRAME(1)
  2842                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2843 00000D5A 48890425[B1100000]      	mov qword [free_var_44], rax
  2844 00000D62 48B8-                   	mov rax, sob_void
  2844 00000D64 [0000000000000000] 
  2845                                  
  2846 00000D6C 4889C7                  	mov rdi, rax
  2847 00000D6F E8366B0100              	call print_sexpr_if_not_void
  2848 00000D74 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2849 00000D79 E8D7680100              	call malloc
  2850 00000D7E 50                      	push rax
  2851 00000D7F BF00000000              	mov rdi, 8 * 0	; new rib
  2852 00000D84 E8CC680100              	call malloc
  2853 00000D89 50                      	push rax
  2854 00000D8A BF08000000              	mov rdi, 8 * 1	; extended env
  2855 00000D8F E8C1680100              	call malloc
  2856 00000D94 488B7D10                	mov rdi, ENV
  2857 00000D98 BE00000000              	mov rsi, 0
  2858 00000D9D BA01000000              	mov rdx, 1
  2859                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2860 00000DA2 4883FE00                	cmp rsi, 0
  2861 00000DA6 7410                    	je .L_lambda_simple_env_end_0008
  2862 00000DA8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2863 00000DAC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2864 00000DB0 48FFC6                  	inc rsi
  2865 00000DB3 48FFC2                  	inc rdx
  2866 00000DB6 EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2867                                  .L_lambda_simple_env_end_0008:
  2868 00000DB8 5B                      	pop rbx
  2869 00000DB9 BE00000000              	mov rsi, 0
  2870                                  .L_lambda_simple_params_loop_0008:	; copy params
  2871 00000DBE 4883FE00                	cmp rsi, 0
  2872 00000DC2 740E                    	je .L_lambda_simple_params_end_0008
  2873 00000DC4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2874 00000DC9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2875 00000DCD 48FFC6                  	inc rsi
  2876 00000DD0 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2877                                  .L_lambda_simple_params_end_0008:
  2878 00000DD2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2879 00000DD5 4889C3                  	mov rbx, rax
  2880 00000DD8 58                      	pop rax
  2881 00000DD9 C60004                  	mov byte [rax], T_closure
  2882 00000DDC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2883 00000DE0 48C74009[ED0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2884 00000DE8 E9A4000000              	jmp .L_lambda_simple_end_0008
  2885                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2886 00000DED 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2887 00000DF3 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2888 00000DF5 FF742410                	push qword [rsp + 8 * 2]
  2889 00000DF9 6A01                    	push 1
  2890 00000DFB E90E680100              	jmp L_error_incorrect_arity_simple
  2891                                  .L_lambda_simple_arity_check_ok_0008:
  2892 00000E00 C8000000                	enter 0, 0
  2893                                  	; preparing a tail-call
  2894                                  	; preparing a non-tail-call
  2895 00000E04 488B4520                	mov rax, PARAM(0)	; param x
  2896 00000E08 50                      	push rax
  2897 00000E09 6A01                    	push 1	; arg count
  2898 00000E0B 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  2899 00000E13 803805                  	cmp byte [rax], T_undefined
  2900 00000E16 0F840C670100            	je L_error_fvar_undefined
  2901 00000E1C 803804                  	cmp byte [rax], T_closure
  2902 00000E1F 0F8587670100            	jne L_error_non_closure
  2903 00000E25 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2904 00000E28 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2905 00000E2B 50                      	push rax
  2906 00000E2C 6A01                    	push 1	; arg count
  2907 00000E2E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2908 00000E36 803805                  	cmp byte [rax], T_undefined
  2909 00000E39 0F84E9660100            	je L_error_fvar_undefined
  2910 00000E3F 803804                  	cmp byte [rax], T_closure
  2911 00000E42 0F8564670100            	jne L_error_non_closure
  2912 00000E48 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2913 00000E4B FF7508                  	push qword [rbp + 8 * 1]
  2914                                   ; old ret addr
  2915 00000E4E FF7500                  	push qword [rbp]
  2916                                   ; restore the old rbp
  2917 00000E51 BB01000000              	mov rbx, 1
  2918 00000E56 4883C303                	add rbx, 3
  2919 00000E5A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  2920 00000E5E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  2921 00000E63 4C8D4DF8                	lea r9, [rbp - 8]
  2922 00000E67 B905000000              	mov rcx, 5
  2923                                  .L_tc_recycle_frame_loop_0008:
  2924 00000E6C 4883F900                	cmp rcx, 0
  2925 00000E70 7413                    	je .L_tc_recycle_frame_done_0008
  2926 00000E72 4D8B11                  	mov r10, qword [r9]
  2927 00000E75 4D8910                  	mov qword [r8], r10
  2928 00000E78 4983E808                	sub r8, 8
  2929 00000E7C 4983E908                	sub r9, 8
  2930 00000E80 48FFC9                  	dec rcx
  2931 00000E83 EBE7                    	jmp .L_tc_recycle_frame_loop_0008
  2932                                  .L_tc_recycle_frame_done_0008:
  2933 00000E85 498D6008                	lea rsp, [r8 + 8]
  2934 00000E89 5D                      	pop rbp ; restore the old rbp
  2935 00000E8A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2936 00000E8D C9                      	leave
  2937 00000E8E C21800                  	ret AND_KILL_FRAME(1)
  2938                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2939 00000E91 48890425[E4100000]      	mov qword [free_var_47], rax
  2940 00000E99 48B8-                   	mov rax, sob_void
  2940 00000E9B [0000000000000000] 
  2941                                  
  2942 00000EA3 4889C7                  	mov rdi, rax
  2943 00000EA6 E8FF690100              	call print_sexpr_if_not_void
  2944 00000EAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2945 00000EB0 E8A0670100              	call malloc
  2946 00000EB5 50                      	push rax
  2947 00000EB6 BF00000000              	mov rdi, 8 * 0	; new rib
  2948 00000EBB E895670100              	call malloc
  2949 00000EC0 50                      	push rax
  2950 00000EC1 BF08000000              	mov rdi, 8 * 1	; extended env
  2951 00000EC6 E88A670100              	call malloc
  2952 00000ECB 488B7D10                	mov rdi, ENV
  2953 00000ECF BE00000000              	mov rsi, 0
  2954 00000ED4 BA01000000              	mov rdx, 1
  2955                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2956 00000ED9 4883FE00                	cmp rsi, 0
  2957 00000EDD 7410                    	je .L_lambda_simple_env_end_0009
  2958 00000EDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2959 00000EE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2960 00000EE7 48FFC6                  	inc rsi
  2961 00000EEA 48FFC2                  	inc rdx
  2962 00000EED EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2963                                  .L_lambda_simple_env_end_0009:
  2964 00000EEF 5B                      	pop rbx
  2965 00000EF0 BE00000000              	mov rsi, 0
  2966                                  .L_lambda_simple_params_loop_0009:	; copy params
  2967 00000EF5 4883FE00                	cmp rsi, 0
  2968 00000EF9 740E                    	je .L_lambda_simple_params_end_0009
  2969 00000EFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2970 00000F00 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2971 00000F04 48FFC6                  	inc rsi
  2972 00000F07 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2973                                  .L_lambda_simple_params_end_0009:
  2974 00000F09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2975 00000F0C 4889C3                  	mov rbx, rax
  2976 00000F0F 58                      	pop rax
  2977 00000F10 C60004                  	mov byte [rax], T_closure
  2978 00000F13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2979 00000F17 48C74009[240F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2980 00000F1F E9A4000000              	jmp .L_lambda_simple_end_0009
  2981                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2982 00000F24 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2983 00000F2A 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2984 00000F2C FF742410                	push qword [rsp + 8 * 2]
  2985 00000F30 6A01                    	push 1
  2986 00000F32 E9D7660100              	jmp L_error_incorrect_arity_simple
  2987                                  .L_lambda_simple_arity_check_ok_0009:
  2988 00000F37 C8000000                	enter 0, 0
  2989                                  	; preparing a tail-call
  2990                                  	; preparing a non-tail-call
  2991 00000F3B 488B4520                	mov rax, PARAM(0)	; param x
  2992 00000F3F 50                      	push rax
  2993 00000F40 6A01                    	push 1	; arg count
  2994 00000F42 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2995 00000F4A 803805                  	cmp byte [rax], T_undefined
  2996 00000F4D 0F84D5650100            	je L_error_fvar_undefined
  2997 00000F53 803804                  	cmp byte [rax], T_closure
  2998 00000F56 0F8550660100            	jne L_error_non_closure
  2999 00000F5C FF7001                  	push SOB_CLOSURE_ENV(rax)
  3000 00000F5F FF5009                  	call SOB_CLOSURE_CODE(rax)
  3001 00000F62 50                      	push rax
  3002 00000F63 6A01                    	push 1	; arg count
  3003 00000F65 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3004 00000F6D 803805                  	cmp byte [rax], T_undefined
  3005 00000F70 0F84B2650100            	je L_error_fvar_undefined
  3006 00000F76 803804                  	cmp byte [rax], T_closure
  3007 00000F79 0F852D660100            	jne L_error_non_closure
  3008 00000F7F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3009 00000F82 FF7508                  	push qword [rbp + 8 * 1]
  3010                                   ; old ret addr
  3011 00000F85 FF7500                  	push qword [rbp]
  3012                                   ; restore the old rbp
  3013 00000F88 BB01000000              	mov rbx, 1
  3014 00000F8D 4883C303                	add rbx, 3
  3015 00000F91 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3016 00000F95 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3017 00000F9A 4C8D4DF8                	lea r9, [rbp - 8]
  3018 00000F9E B905000000              	mov rcx, 5
  3019                                  .L_tc_recycle_frame_loop_0009:
  3020 00000FA3 4883F900                	cmp rcx, 0
  3021 00000FA7 7413                    	je .L_tc_recycle_frame_done_0009
  3022 00000FA9 4D8B11                  	mov r10, qword [r9]
  3023 00000FAC 4D8910                  	mov qword [r8], r10
  3024 00000FAF 4983E808                	sub r8, 8
  3025 00000FB3 4983E908                	sub r9, 8
  3026 00000FB7 48FFC9                  	dec rcx
  3027 00000FBA EBE7                    	jmp .L_tc_recycle_frame_loop_0009
  3028                                  .L_tc_recycle_frame_done_0009:
  3029 00000FBC 498D6008                	lea rsp, [r8 + 8]
  3030 00000FC0 5D                      	pop rbp ; restore the old rbp
  3031 00000FC1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3032 00000FC4 C9                      	leave
  3033 00000FC5 C21800                  	ret AND_KILL_FRAME(1)
  3034                                  .L_lambda_simple_end_0009:	; new closure is in rax
  3035 00000FC8 48890425[39110000]      	mov qword [free_var_52], rax
  3036 00000FD0 48B8-                   	mov rax, sob_void
  3036 00000FD2 [0000000000000000] 
  3037                                  
  3038 00000FDA 4889C7                  	mov rdi, rax
  3039 00000FDD E8C8680100              	call print_sexpr_if_not_void
  3040 00000FE2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3041 00000FE7 E869660100              	call malloc
  3042 00000FEC 50                      	push rax
  3043 00000FED BF00000000              	mov rdi, 8 * 0	; new rib
  3044 00000FF2 E85E660100              	call malloc
  3045 00000FF7 50                      	push rax
  3046 00000FF8 BF08000000              	mov rdi, 8 * 1	; extended env
  3047 00000FFD E853660100              	call malloc
  3048 00001002 488B7D10                	mov rdi, ENV
  3049 00001006 BE00000000              	mov rsi, 0
  3050 0000100B BA01000000              	mov rdx, 1
  3051                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  3052 00001010 4883FE00                	cmp rsi, 0
  3053 00001014 7410                    	je .L_lambda_simple_env_end_000a
  3054 00001016 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3055 0000101A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3056 0000101E 48FFC6                  	inc rsi
  3057 00001021 48FFC2                  	inc rdx
  3058 00001024 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  3059                                  .L_lambda_simple_env_end_000a:
  3060 00001026 5B                      	pop rbx
  3061 00001027 BE00000000              	mov rsi, 0
  3062                                  .L_lambda_simple_params_loop_000a:	; copy params
  3063 0000102C 4883FE00                	cmp rsi, 0
  3064 00001030 740E                    	je .L_lambda_simple_params_end_000a
  3065 00001032 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3066 00001037 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3067 0000103B 48FFC6                  	inc rsi
  3068 0000103E EBEC                    	jmp .L_lambda_simple_params_loop_000a
  3069                                  .L_lambda_simple_params_end_000a:
  3070 00001040 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3071 00001043 4889C3                  	mov rbx, rax
  3072 00001046 58                      	pop rax
  3073 00001047 C60004                  	mov byte [rax], T_closure
  3074 0000104A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3075 0000104E 48C74009[5B100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  3076 00001056 E9A4000000              	jmp .L_lambda_simple_end_000a
  3077                                  .L_lambda_simple_code_000a:	; lambda-simple body
  3078 0000105B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3079 00001061 740B                    	je .L_lambda_simple_arity_check_ok_000a
  3080 00001063 FF742410                	push qword [rsp + 8 * 2]
  3081 00001067 6A01                    	push 1
  3082 00001069 E9A0650100              	jmp L_error_incorrect_arity_simple
  3083                                  .L_lambda_simple_arity_check_ok_000a:
  3084 0000106E C8000000                	enter 0, 0
  3085                                  	; preparing a tail-call
  3086                                  	; preparing a non-tail-call
  3087 00001072 488B4520                	mov rax, PARAM(0)	; param x
  3088 00001076 50                      	push rax
  3089 00001077 6A01                    	push 1	; arg count
  3090 00001079 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3091 00001081 803805                  	cmp byte [rax], T_undefined
  3092 00001084 0F849E640100            	je L_error_fvar_undefined
  3093 0000108A 803804                  	cmp byte [rax], T_closure
  3094 0000108D 0F8519650100            	jne L_error_non_closure
  3095 00001093 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3096 00001096 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3097 00001099 50                      	push rax
  3098 0000109A 6A01                    	push 1	; arg count
  3099 0000109C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3100 000010A4 803805                  	cmp byte [rax], T_undefined
  3101 000010A7 0F847B640100            	je L_error_fvar_undefined
  3102 000010AD 803804                  	cmp byte [rax], T_closure
  3103 000010B0 0F85F6640100            	jne L_error_non_closure
  3104 000010B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3105 000010B9 FF7508                  	push qword [rbp + 8 * 1]
  3106                                   ; old ret addr
  3107 000010BC FF7500                  	push qword [rbp]
  3108                                   ; restore the old rbp
  3109 000010BF BB01000000              	mov rbx, 1
  3110 000010C4 4883C303                	add rbx, 3
  3111 000010C8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3112 000010CC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3113 000010D1 4C8D4DF8                	lea r9, [rbp - 8]
  3114 000010D5 B905000000              	mov rcx, 5
  3115                                  .L_tc_recycle_frame_loop_000a:
  3116 000010DA 4883F900                	cmp rcx, 0
  3117 000010DE 7413                    	je .L_tc_recycle_frame_done_000a
  3118 000010E0 4D8B11                  	mov r10, qword [r9]
  3119 000010E3 4D8910                  	mov qword [r8], r10
  3120 000010E6 4983E808                	sub r8, 8
  3121 000010EA 4983E908                	sub r9, 8
  3122 000010EE 48FFC9                  	dec rcx
  3123 000010F1 EBE7                    	jmp .L_tc_recycle_frame_loop_000a
  3124                                  .L_tc_recycle_frame_done_000a:
  3125 000010F3 498D6008                	lea rsp, [r8 + 8]
  3126 000010F7 5D                      	pop rbp ; restore the old rbp
  3127 000010F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3128 000010FB C9                      	leave
  3129 000010FC C21800                  	ret AND_KILL_FRAME(1)
  3130                                  .L_lambda_simple_end_000a:	; new closure is in rax
  3131 000010FF 48890425[6C110000]      	mov qword [free_var_55], rax
  3132 00001107 48B8-                   	mov rax, sob_void
  3132 00001109 [0000000000000000] 
  3133                                  
  3134 00001111 4889C7                  	mov rdi, rax
  3135 00001114 E891670100              	call print_sexpr_if_not_void
  3136 00001119 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3137 0000111E E832650100              	call malloc
  3138 00001123 50                      	push rax
  3139 00001124 BF00000000              	mov rdi, 8 * 0	; new rib
  3140 00001129 E827650100              	call malloc
  3141 0000112E 50                      	push rax
  3142 0000112F BF08000000              	mov rdi, 8 * 1	; extended env
  3143 00001134 E81C650100              	call malloc
  3144 00001139 488B7D10                	mov rdi, ENV
  3145 0000113D BE00000000              	mov rsi, 0
  3146 00001142 BA01000000              	mov rdx, 1
  3147                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  3148 00001147 4883FE00                	cmp rsi, 0
  3149 0000114B 7410                    	je .L_lambda_simple_env_end_000b
  3150 0000114D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3151 00001151 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3152 00001155 48FFC6                  	inc rsi
  3153 00001158 48FFC2                  	inc rdx
  3154 0000115B EBEA                    	jmp .L_lambda_simple_env_loop_000b
  3155                                  .L_lambda_simple_env_end_000b:
  3156 0000115D 5B                      	pop rbx
  3157 0000115E BE00000000              	mov rsi, 0
  3158                                  .L_lambda_simple_params_loop_000b:	; copy params
  3159 00001163 4883FE00                	cmp rsi, 0
  3160 00001167 740E                    	je .L_lambda_simple_params_end_000b
  3161 00001169 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3162 0000116E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3163 00001172 48FFC6                  	inc rsi
  3164 00001175 EBEC                    	jmp .L_lambda_simple_params_loop_000b
  3165                                  .L_lambda_simple_params_end_000b:
  3166 00001177 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3167 0000117A 4889C3                  	mov rbx, rax
  3168 0000117D 58                      	pop rax
  3169 0000117E C60004                  	mov byte [rax], T_closure
  3170 00001181 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3171 00001185 48C74009[92110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  3172 0000118D E9A4000000              	jmp .L_lambda_simple_end_000b
  3173                                  .L_lambda_simple_code_000b:	; lambda-simple body
  3174 00001192 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3175 00001198 740B                    	je .L_lambda_simple_arity_check_ok_000b
  3176 0000119A FF742410                	push qword [rsp + 8 * 2]
  3177 0000119E 6A01                    	push 1
  3178 000011A0 E969640100              	jmp L_error_incorrect_arity_simple
  3179                                  .L_lambda_simple_arity_check_ok_000b:
  3180 000011A5 C8000000                	enter 0, 0
  3181                                  	; preparing a tail-call
  3182                                  	; preparing a non-tail-call
  3183 000011A9 488B4520                	mov rax, PARAM(0)	; param x
  3184 000011AD 50                      	push rax
  3185 000011AE 6A01                    	push 1	; arg count
  3186 000011B0 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3187 000011B8 803805                  	cmp byte [rax], T_undefined
  3188 000011BB 0F8467630100            	je L_error_fvar_undefined
  3189 000011C1 803804                  	cmp byte [rax], T_closure
  3190 000011C4 0F85E2630100            	jne L_error_non_closure
  3191 000011CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  3192 000011CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  3193 000011D0 50                      	push rax
  3194 000011D1 6A01                    	push 1	; arg count
  3195 000011D3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3196 000011DB 803805                  	cmp byte [rax], T_undefined
  3197 000011DE 0F8444630100            	je L_error_fvar_undefined
  3198 000011E4 803804                  	cmp byte [rax], T_closure
  3199 000011E7 0F85BF630100            	jne L_error_non_closure
  3200 000011ED FF7001                  	push SOB_CLOSURE_ENV(rax)
  3201 000011F0 FF7508                  	push qword [rbp + 8 * 1]
  3202                                   ; old ret addr
  3203 000011F3 FF7500                  	push qword [rbp]
  3204                                   ; restore the old rbp
  3205 000011F6 BB01000000              	mov rbx, 1
  3206 000011FB 4883C303                	add rbx, 3
  3207 000011FF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3208 00001203 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3209 00001208 4C8D4DF8                	lea r9, [rbp - 8]
  3210 0000120C B905000000              	mov rcx, 5
  3211                                  .L_tc_recycle_frame_loop_000b:
  3212 00001211 4883F900                	cmp rcx, 0
  3213 00001215 7413                    	je .L_tc_recycle_frame_done_000b
  3214 00001217 4D8B11                  	mov r10, qword [r9]
  3215 0000121A 4D8910                  	mov qword [r8], r10
  3216 0000121D 4983E808                	sub r8, 8
  3217 00001221 4983E908                	sub r9, 8
  3218 00001225 48FFC9                  	dec rcx
  3219 00001228 EBE7                    	jmp .L_tc_recycle_frame_loop_000b
  3220                                  .L_tc_recycle_frame_done_000b:
  3221 0000122A 498D6008                	lea rsp, [r8 + 8]
  3222 0000122E 5D                      	pop rbp ; restore the old rbp
  3223 0000122F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3224 00001232 C9                      	leave
  3225 00001233 C21800                  	ret AND_KILL_FRAME(1)
  3226                                  .L_lambda_simple_end_000b:	; new closure is in rax
  3227 00001236 48890425[B0110000]      	mov qword [free_var_59], rax
  3228 0000123E 48B8-                   	mov rax, sob_void
  3228 00001240 [0000000000000000] 
  3229                                  
  3230 00001248 4889C7                  	mov rdi, rax
  3231 0000124B E85A660100              	call print_sexpr_if_not_void
  3232 00001250 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3233 00001255 E8FB630100              	call malloc
  3234 0000125A 50                      	push rax
  3235 0000125B BF00000000              	mov rdi, 8 * 0	; new rib
  3236 00001260 E8F0630100              	call malloc
  3237 00001265 50                      	push rax
  3238 00001266 BF08000000              	mov rdi, 8 * 1	; extended env
  3239 0000126B E8E5630100              	call malloc
  3240 00001270 488B7D10                	mov rdi, ENV
  3241 00001274 BE00000000              	mov rsi, 0
  3242 00001279 BA01000000              	mov rdx, 1
  3243                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  3244 0000127E 4883FE00                	cmp rsi, 0
  3245 00001282 7410                    	je .L_lambda_simple_env_end_000c
  3246 00001284 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3247 00001288 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3248 0000128C 48FFC6                  	inc rsi
  3249 0000128F 48FFC2                  	inc rdx
  3250 00001292 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  3251                                  .L_lambda_simple_env_end_000c:
  3252 00001294 5B                      	pop rbx
  3253 00001295 BE00000000              	mov rsi, 0
  3254                                  .L_lambda_simple_params_loop_000c:	; copy params
  3255 0000129A 4883FE00                	cmp rsi, 0
  3256 0000129E 740E                    	je .L_lambda_simple_params_end_000c
  3257 000012A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3258 000012A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3259 000012A9 48FFC6                  	inc rsi
  3260 000012AC EBEC                    	jmp .L_lambda_simple_params_loop_000c
  3261                                  .L_lambda_simple_params_end_000c:
  3262 000012AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3263 000012B1 4889C3                  	mov rbx, rax
  3264 000012B4 58                      	pop rax
  3265 000012B5 C60004                  	mov byte [rax], T_closure
  3266 000012B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3267 000012BC 48C74009[C9120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  3268 000012C4 E9A4000000              	jmp .L_lambda_simple_end_000c
  3269                                  .L_lambda_simple_code_000c:	; lambda-simple body
  3270 000012C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3271 000012CF 740B                    	je .L_lambda_simple_arity_check_ok_000c
  3272 000012D1 FF742410                	push qword [rsp + 8 * 2]
  3273 000012D5 6A01                    	push 1
  3274 000012D7 E932630100              	jmp L_error_incorrect_arity_simple
  3275                                  .L_lambda_simple_arity_check_ok_000c:
  3276 000012DC C8000000                	enter 0, 0
  3277                                  	; preparing a tail-call
  3278                                  	; preparing a non-tail-call
  3279 000012E0 488B4520                	mov rax, PARAM(0)	; param x
  3280 000012E4 50                      	push rax
  3281 000012E5 6A01                    	push 1	; arg count
  3282 000012E7 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3283 000012EF 803805                  	cmp byte [rax], T_undefined
  3284 000012F2 0F8430620100            	je L_error_fvar_undefined
  3285 000012F8 803804                  	cmp byte [rax], T_closure
  3286 000012FB 0F85AB620100            	jne L_error_non_closure
  3287 00001301 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3288 00001304 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3289 00001307 50                      	push rax
  3290 00001308 6A01                    	push 1	; arg count
  3291 0000130A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3292 00001312 803805                  	cmp byte [rax], T_undefined
  3293 00001315 0F840D620100            	je L_error_fvar_undefined
  3294 0000131B 803804                  	cmp byte [rax], T_closure
  3295 0000131E 0F8588620100            	jne L_error_non_closure
  3296 00001324 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3297 00001327 FF7508                  	push qword [rbp + 8 * 1]
  3298                                   ; old ret addr
  3299 0000132A FF7500                  	push qword [rbp]
  3300                                   ; restore the old rbp
  3301 0000132D BB01000000              	mov rbx, 1
  3302 00001332 4883C303                	add rbx, 3
  3303 00001336 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3304 0000133A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3305 0000133F 4C8D4DF8                	lea r9, [rbp - 8]
  3306 00001343 B905000000              	mov rcx, 5
  3307                                  .L_tc_recycle_frame_loop_000c:
  3308 00001348 4883F900                	cmp rcx, 0
  3309 0000134C 7413                    	je .L_tc_recycle_frame_done_000c
  3310 0000134E 4D8B11                  	mov r10, qword [r9]
  3311 00001351 4D8910                  	mov qword [r8], r10
  3312 00001354 4983E808                	sub r8, 8
  3313 00001358 4983E908                	sub r9, 8
  3314 0000135C 48FFC9                  	dec rcx
  3315 0000135F EBE7                    	jmp .L_tc_recycle_frame_loop_000c
  3316                                  .L_tc_recycle_frame_done_000c:
  3317 00001361 498D6008                	lea rsp, [r8 + 8]
  3318 00001365 5D                      	pop rbp ; restore the old rbp
  3319 00001366 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3320 00001369 C9                      	leave
  3321 0000136A C21800                  	ret AND_KILL_FRAME(1)
  3322                                  .L_lambda_simple_end_000c:	; new closure is in rax
  3323 0000136D 48890425[E3110000]      	mov qword [free_var_62], rax
  3324 00001375 48B8-                   	mov rax, sob_void
  3324 00001377 [0000000000000000] 
  3325                                  
  3326 0000137F 4889C7                  	mov rdi, rax
  3327 00001382 E823650100              	call print_sexpr_if_not_void
  3328 00001387 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3329 0000138C E8C4620100              	call malloc
  3330 00001391 50                      	push rax
  3331 00001392 BF00000000              	mov rdi, 8 * 0	; new rib
  3332 00001397 E8B9620100              	call malloc
  3333 0000139C 50                      	push rax
  3334 0000139D BF08000000              	mov rdi, 8 * 1	; extended env
  3335 000013A2 E8AE620100              	call malloc
  3336 000013A7 488B7D10                	mov rdi, ENV
  3337 000013AB BE00000000              	mov rsi, 0
  3338 000013B0 BA01000000              	mov rdx, 1
  3339                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  3340 000013B5 4883FE00                	cmp rsi, 0
  3341 000013B9 7410                    	je .L_lambda_simple_env_end_000d
  3342 000013BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3343 000013BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3344 000013C3 48FFC6                  	inc rsi
  3345 000013C6 48FFC2                  	inc rdx
  3346 000013C9 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  3347                                  .L_lambda_simple_env_end_000d:
  3348 000013CB 5B                      	pop rbx
  3349 000013CC BE00000000              	mov rsi, 0
  3350                                  .L_lambda_simple_params_loop_000d:	; copy params
  3351 000013D1 4883FE00                	cmp rsi, 0
  3352 000013D5 740E                    	je .L_lambda_simple_params_end_000d
  3353 000013D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3354 000013DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3355 000013E0 48FFC6                  	inc rsi
  3356 000013E3 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  3357                                  .L_lambda_simple_params_end_000d:
  3358 000013E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3359 000013E8 4889C3                  	mov rbx, rax
  3360 000013EB 58                      	pop rax
  3361 000013EC C60004                  	mov byte [rax], T_closure
  3362 000013EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3363 000013F3 48C74009[00140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  3364 000013FB E9A4000000              	jmp .L_lambda_simple_end_000d
  3365                                  .L_lambda_simple_code_000d:	; lambda-simple body
  3366 00001400 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3367 00001406 740B                    	je .L_lambda_simple_arity_check_ok_000d
  3368 00001408 FF742410                	push qword [rsp + 8 * 2]
  3369 0000140C 6A01                    	push 1
  3370 0000140E E9FB610100              	jmp L_error_incorrect_arity_simple
  3371                                  .L_lambda_simple_arity_check_ok_000d:
  3372 00001413 C8000000                	enter 0, 0
  3373                                  	; preparing a tail-call
  3374                                  	; preparing a non-tail-call
  3375 00001417 488B4520                	mov rax, PARAM(0)	; param x
  3376 0000141B 50                      	push rax
  3377 0000141C 6A01                    	push 1	; arg count
  3378 0000141E 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3379 00001426 803805                  	cmp byte [rax], T_undefined
  3380 00001429 0F84F9600100            	je L_error_fvar_undefined
  3381 0000142F 803804                  	cmp byte [rax], T_closure
  3382 00001432 0F8574610100            	jne L_error_non_closure
  3383 00001438 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3384 0000143B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3385 0000143E 50                      	push rax
  3386 0000143F 6A01                    	push 1	; arg count
  3387 00001441 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3388 00001449 803805                  	cmp byte [rax], T_undefined
  3389 0000144C 0F84D6600100            	je L_error_fvar_undefined
  3390 00001452 803804                  	cmp byte [rax], T_closure
  3391 00001455 0F8551610100            	jne L_error_non_closure
  3392 0000145B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3393 0000145E FF7508                  	push qword [rbp + 8 * 1]
  3394                                   ; old ret addr
  3395 00001461 FF7500                  	push qword [rbp]
  3396                                   ; restore the old rbp
  3397 00001464 BB01000000              	mov rbx, 1
  3398 00001469 4883C303                	add rbx, 3
  3399 0000146D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3400 00001471 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3401 00001476 4C8D4DF8                	lea r9, [rbp - 8]
  3402 0000147A B905000000              	mov rcx, 5
  3403                                  .L_tc_recycle_frame_loop_000d:
  3404 0000147F 4883F900                	cmp rcx, 0
  3405 00001483 7413                    	je .L_tc_recycle_frame_done_000d
  3406 00001485 4D8B11                  	mov r10, qword [r9]
  3407 00001488 4D8910                  	mov qword [r8], r10
  3408 0000148B 4983E808                	sub r8, 8
  3409 0000148F 4983E908                	sub r9, 8
  3410 00001493 48FFC9                  	dec rcx
  3411 00001496 EBE7                    	jmp .L_tc_recycle_frame_loop_000d
  3412                                  .L_tc_recycle_frame_done_000d:
  3413 00001498 498D6008                	lea rsp, [r8 + 8]
  3414 0000149C 5D                      	pop rbp ; restore the old rbp
  3415 0000149D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3416 000014A0 C9                      	leave
  3417 000014A1 C21800                  	ret AND_KILL_FRAME(1)
  3418                                  .L_lambda_simple_end_000d:	; new closure is in rax
  3419 000014A4 48890425[18100000]      	mov qword [free_var_35], rax
  3420 000014AC 48B8-                   	mov rax, sob_void
  3420 000014AE [0000000000000000] 
  3421                                  
  3422 000014B6 4889C7                  	mov rdi, rax
  3423 000014B9 E8EC630100              	call print_sexpr_if_not_void
  3424 000014BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3425 000014C3 E88D610100              	call malloc
  3426 000014C8 50                      	push rax
  3427 000014C9 BF00000000              	mov rdi, 8 * 0	; new rib
  3428 000014CE E882610100              	call malloc
  3429 000014D3 50                      	push rax
  3430 000014D4 BF08000000              	mov rdi, 8 * 1	; extended env
  3431 000014D9 E877610100              	call malloc
  3432 000014DE 488B7D10                	mov rdi, ENV
  3433 000014E2 BE00000000              	mov rsi, 0
  3434 000014E7 BA01000000              	mov rdx, 1
  3435                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  3436 000014EC 4883FE00                	cmp rsi, 0
  3437 000014F0 7410                    	je .L_lambda_simple_env_end_000e
  3438 000014F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3439 000014F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3440 000014FA 48FFC6                  	inc rsi
  3441 000014FD 48FFC2                  	inc rdx
  3442 00001500 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  3443                                  .L_lambda_simple_env_end_000e:
  3444 00001502 5B                      	pop rbx
  3445 00001503 BE00000000              	mov rsi, 0
  3446                                  .L_lambda_simple_params_loop_000e:	; copy params
  3447 00001508 4883FE00                	cmp rsi, 0
  3448 0000150C 740E                    	je .L_lambda_simple_params_end_000e
  3449 0000150E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3450 00001513 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3451 00001517 48FFC6                  	inc rsi
  3452 0000151A EBEC                    	jmp .L_lambda_simple_params_loop_000e
  3453                                  .L_lambda_simple_params_end_000e:
  3454 0000151C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3455 0000151F 4889C3                  	mov rbx, rax
  3456 00001522 58                      	pop rax
  3457 00001523 C60004                  	mov byte [rax], T_closure
  3458 00001526 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3459 0000152A 48C74009[37150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  3460 00001532 E9A4000000              	jmp .L_lambda_simple_end_000e
  3461                                  .L_lambda_simple_code_000e:	; lambda-simple body
  3462 00001537 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3463 0000153D 740B                    	je .L_lambda_simple_arity_check_ok_000e
  3464 0000153F FF742410                	push qword [rsp + 8 * 2]
  3465 00001543 6A01                    	push 1
  3466 00001545 E9C4600100              	jmp L_error_incorrect_arity_simple
  3467                                  .L_lambda_simple_arity_check_ok_000e:
  3468 0000154A C8000000                	enter 0, 0
  3469                                  	; preparing a tail-call
  3470                                  	; preparing a non-tail-call
  3471 0000154E 488B4520                	mov rax, PARAM(0)	; param x
  3472 00001552 50                      	push rax
  3473 00001553 6A01                    	push 1	; arg count
  3474 00001555 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3475 0000155D 803805                  	cmp byte [rax], T_undefined
  3476 00001560 0F84C25F0100            	je L_error_fvar_undefined
  3477 00001566 803804                  	cmp byte [rax], T_closure
  3478 00001569 0F853D600100            	jne L_error_non_closure
  3479 0000156F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3480 00001572 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3481 00001575 50                      	push rax
  3482 00001576 6A01                    	push 1	; arg count
  3483 00001578 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3484 00001580 803805                  	cmp byte [rax], T_undefined
  3485 00001583 0F849F5F0100            	je L_error_fvar_undefined
  3486 00001589 803804                  	cmp byte [rax], T_closure
  3487 0000158C 0F851A600100            	jne L_error_non_closure
  3488 00001592 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3489 00001595 FF7508                  	push qword [rbp + 8 * 1]
  3490                                   ; old ret addr
  3491 00001598 FF7500                  	push qword [rbp]
  3492                                   ; restore the old rbp
  3493 0000159B BB01000000              	mov rbx, 1
  3494 000015A0 4883C303                	add rbx, 3
  3495 000015A4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3496 000015A8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3497 000015AD 4C8D4DF8                	lea r9, [rbp - 8]
  3498 000015B1 B905000000              	mov rcx, 5
  3499                                  .L_tc_recycle_frame_loop_000e:
  3500 000015B6 4883F900                	cmp rcx, 0
  3501 000015BA 7413                    	je .L_tc_recycle_frame_done_000e
  3502 000015BC 4D8B11                  	mov r10, qword [r9]
  3503 000015BF 4D8910                  	mov qword [r8], r10
  3504 000015C2 4983E808                	sub r8, 8
  3505 000015C6 4983E908                	sub r9, 8
  3506 000015CA 48FFC9                  	dec rcx
  3507 000015CD EBE7                    	jmp .L_tc_recycle_frame_loop_000e
  3508                                  .L_tc_recycle_frame_done_000e:
  3509 000015CF 498D6008                	lea rsp, [r8 + 8]
  3510 000015D3 5D                      	pop rbp ; restore the old rbp
  3511 000015D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3512 000015D7 C9                      	leave
  3513 000015D8 C21800                  	ret AND_KILL_FRAME(1)
  3514                                  .L_lambda_simple_end_000e:	; new closure is in rax
  3515 000015DB 48890425[29100000]      	mov qword [free_var_36], rax
  3516 000015E3 48B8-                   	mov rax, sob_void
  3516 000015E5 [0000000000000000] 
  3517                                  
  3518 000015ED 4889C7                  	mov rdi, rax
  3519 000015F0 E8B5620100              	call print_sexpr_if_not_void
  3520 000015F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3521 000015FA E856600100              	call malloc
  3522 000015FF 50                      	push rax
  3523 00001600 BF00000000              	mov rdi, 8 * 0	; new rib
  3524 00001605 E84B600100              	call malloc
  3525 0000160A 50                      	push rax
  3526 0000160B BF08000000              	mov rdi, 8 * 1	; extended env
  3527 00001610 E840600100              	call malloc
  3528 00001615 488B7D10                	mov rdi, ENV
  3529 00001619 BE00000000              	mov rsi, 0
  3530 0000161E BA01000000              	mov rdx, 1
  3531                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  3532 00001623 4883FE00                	cmp rsi, 0
  3533 00001627 7410                    	je .L_lambda_simple_env_end_000f
  3534 00001629 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3535 0000162D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3536 00001631 48FFC6                  	inc rsi
  3537 00001634 48FFC2                  	inc rdx
  3538 00001637 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  3539                                  .L_lambda_simple_env_end_000f:
  3540 00001639 5B                      	pop rbx
  3541 0000163A BE00000000              	mov rsi, 0
  3542                                  .L_lambda_simple_params_loop_000f:	; copy params
  3543 0000163F 4883FE00                	cmp rsi, 0
  3544 00001643 740E                    	je .L_lambda_simple_params_end_000f
  3545 00001645 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3546 0000164A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3547 0000164E 48FFC6                  	inc rsi
  3548 00001651 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  3549                                  .L_lambda_simple_params_end_000f:
  3550 00001653 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3551 00001656 4889C3                  	mov rbx, rax
  3552 00001659 58                      	pop rax
  3553 0000165A C60004                  	mov byte [rax], T_closure
  3554 0000165D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3555 00001661 48C74009[6E160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  3556 00001669 E9A4000000              	jmp .L_lambda_simple_end_000f
  3557                                  .L_lambda_simple_code_000f:	; lambda-simple body
  3558 0000166E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3559 00001674 740B                    	je .L_lambda_simple_arity_check_ok_000f
  3560 00001676 FF742410                	push qword [rsp + 8 * 2]
  3561 0000167A 6A01                    	push 1
  3562 0000167C E98D5F0100              	jmp L_error_incorrect_arity_simple
  3563                                  .L_lambda_simple_arity_check_ok_000f:
  3564 00001681 C8000000                	enter 0, 0
  3565                                  	; preparing a tail-call
  3566                                  	; preparing a non-tail-call
  3567 00001685 488B4520                	mov rax, PARAM(0)	; param x
  3568 00001689 50                      	push rax
  3569 0000168A 6A01                    	push 1	; arg count
  3570 0000168C 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3571 00001694 803805                  	cmp byte [rax], T_undefined
  3572 00001697 0F848B5E0100            	je L_error_fvar_undefined
  3573 0000169D 803804                  	cmp byte [rax], T_closure
  3574 000016A0 0F85065F0100            	jne L_error_non_closure
  3575 000016A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3576 000016A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3577 000016AC 50                      	push rax
  3578 000016AD 6A01                    	push 1	; arg count
  3579 000016AF 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3580 000016B7 803805                  	cmp byte [rax], T_undefined
  3581 000016BA 0F84685E0100            	je L_error_fvar_undefined
  3582 000016C0 803804                  	cmp byte [rax], T_closure
  3583 000016C3 0F85E35E0100            	jne L_error_non_closure
  3584 000016C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3585 000016CC FF7508                  	push qword [rbp + 8 * 1]
  3586                                   ; old ret addr
  3587 000016CF FF7500                  	push qword [rbp]
  3588                                   ; restore the old rbp
  3589 000016D2 BB01000000              	mov rbx, 1
  3590 000016D7 4883C303                	add rbx, 3
  3591 000016DB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3592 000016DF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3593 000016E4 4C8D4DF8                	lea r9, [rbp - 8]
  3594 000016E8 B905000000              	mov rcx, 5
  3595                                  .L_tc_recycle_frame_loop_000f:
  3596 000016ED 4883F900                	cmp rcx, 0
  3597 000016F1 7413                    	je .L_tc_recycle_frame_done_000f
  3598 000016F3 4D8B11                  	mov r10, qword [r9]
  3599 000016F6 4D8910                  	mov qword [r8], r10
  3600 000016F9 4983E808                	sub r8, 8
  3601 000016FD 4983E908                	sub r9, 8
  3602 00001701 48FFC9                  	dec rcx
  3603 00001704 EBE7                    	jmp .L_tc_recycle_frame_loop_000f
  3604                                  .L_tc_recycle_frame_done_000f:
  3605 00001706 498D6008                	lea rsp, [r8 + 8]
  3606 0000170A 5D                      	pop rbp ; restore the old rbp
  3607 0000170B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3608 0000170E C9                      	leave
  3609 0000170F C21800                  	ret AND_KILL_FRAME(1)
  3610                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3611 00001712 48890425[4B100000]      	mov qword [free_var_38], rax
  3612 0000171A 48B8-                   	mov rax, sob_void
  3612 0000171C [0000000000000000] 
  3613                                  
  3614 00001724 4889C7                  	mov rdi, rax
  3615 00001727 E87E610100              	call print_sexpr_if_not_void
  3616 0000172C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3617 00001731 E81F5F0100              	call malloc
  3618 00001736 50                      	push rax
  3619 00001737 BF00000000              	mov rdi, 8 * 0	; new rib
  3620 0000173C E8145F0100              	call malloc
  3621 00001741 50                      	push rax
  3622 00001742 BF08000000              	mov rdi, 8 * 1	; extended env
  3623 00001747 E8095F0100              	call malloc
  3624 0000174C 488B7D10                	mov rdi, ENV
  3625 00001750 BE00000000              	mov rsi, 0
  3626 00001755 BA01000000              	mov rdx, 1
  3627                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3628 0000175A 4883FE00                	cmp rsi, 0
  3629 0000175E 7410                    	je .L_lambda_simple_env_end_0010
  3630 00001760 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3631 00001764 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3632 00001768 48FFC6                  	inc rsi
  3633 0000176B 48FFC2                  	inc rdx
  3634 0000176E EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3635                                  .L_lambda_simple_env_end_0010:
  3636 00001770 5B                      	pop rbx
  3637 00001771 BE00000000              	mov rsi, 0
  3638                                  .L_lambda_simple_params_loop_0010:	; copy params
  3639 00001776 4883FE00                	cmp rsi, 0
  3640 0000177A 740E                    	je .L_lambda_simple_params_end_0010
  3641 0000177C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3642 00001781 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3643 00001785 48FFC6                  	inc rsi
  3644 00001788 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3645                                  .L_lambda_simple_params_end_0010:
  3646 0000178A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3647 0000178D 4889C3                  	mov rbx, rax
  3648 00001790 58                      	pop rax
  3649 00001791 C60004                  	mov byte [rax], T_closure
  3650 00001794 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3651 00001798 48C74009[A5170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3652 000017A0 E9A4000000              	jmp .L_lambda_simple_end_0010
  3653                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3654 000017A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3655 000017AB 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3656 000017AD FF742410                	push qword [rsp + 8 * 2]
  3657 000017B1 6A01                    	push 1
  3658 000017B3 E9565E0100              	jmp L_error_incorrect_arity_simple
  3659                                  .L_lambda_simple_arity_check_ok_0010:
  3660 000017B8 C8000000                	enter 0, 0
  3661                                  	; preparing a tail-call
  3662                                  	; preparing a non-tail-call
  3663 000017BC 488B4520                	mov rax, PARAM(0)	; param x
  3664 000017C0 50                      	push rax
  3665 000017C1 6A01                    	push 1	; arg count
  3666 000017C3 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3667 000017CB 803805                  	cmp byte [rax], T_undefined
  3668 000017CE 0F84545D0100            	je L_error_fvar_undefined
  3669 000017D4 803804                  	cmp byte [rax], T_closure
  3670 000017D7 0F85CF5D0100            	jne L_error_non_closure
  3671 000017DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3672 000017E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3673 000017E3 50                      	push rax
  3674 000017E4 6A01                    	push 1	; arg count
  3675 000017E6 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3676 000017EE 803805                  	cmp byte [rax], T_undefined
  3677 000017F1 0F84315D0100            	je L_error_fvar_undefined
  3678 000017F7 803804                  	cmp byte [rax], T_closure
  3679 000017FA 0F85AC5D0100            	jne L_error_non_closure
  3680 00001800 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3681 00001803 FF7508                  	push qword [rbp + 8 * 1]
  3682                                   ; old ret addr
  3683 00001806 FF7500                  	push qword [rbp]
  3684                                   ; restore the old rbp
  3685 00001809 BB01000000              	mov rbx, 1
  3686 0000180E 4883C303                	add rbx, 3
  3687 00001812 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3688 00001816 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3689 0000181B 4C8D4DF8                	lea r9, [rbp - 8]
  3690 0000181F B905000000              	mov rcx, 5
  3691                                  .L_tc_recycle_frame_loop_0010:
  3692 00001824 4883F900                	cmp rcx, 0
  3693 00001828 7413                    	je .L_tc_recycle_frame_done_0010
  3694 0000182A 4D8B11                  	mov r10, qword [r9]
  3695 0000182D 4D8910                  	mov qword [r8], r10
  3696 00001830 4983E808                	sub r8, 8
  3697 00001834 4983E908                	sub r9, 8
  3698 00001838 48FFC9                  	dec rcx
  3699 0000183B EBE7                    	jmp .L_tc_recycle_frame_loop_0010
  3700                                  .L_tc_recycle_frame_done_0010:
  3701 0000183D 498D6008                	lea rsp, [r8 + 8]
  3702 00001841 5D                      	pop rbp ; restore the old rbp
  3703 00001842 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3704 00001845 C9                      	leave
  3705 00001846 C21800                  	ret AND_KILL_FRAME(1)
  3706                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3707 00001849 48890425[5C100000]      	mov qword [free_var_39], rax
  3708 00001851 48B8-                   	mov rax, sob_void
  3708 00001853 [0000000000000000] 
  3709                                  
  3710 0000185B 4889C7                  	mov rdi, rax
  3711 0000185E E847600100              	call print_sexpr_if_not_void
  3712 00001863 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3713 00001868 E8E85D0100              	call malloc
  3714 0000186D 50                      	push rax
  3715 0000186E BF00000000              	mov rdi, 8 * 0	; new rib
  3716 00001873 E8DD5D0100              	call malloc
  3717 00001878 50                      	push rax
  3718 00001879 BF08000000              	mov rdi, 8 * 1	; extended env
  3719 0000187E E8D25D0100              	call malloc
  3720 00001883 488B7D10                	mov rdi, ENV
  3721 00001887 BE00000000              	mov rsi, 0
  3722 0000188C BA01000000              	mov rdx, 1
  3723                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3724 00001891 4883FE00                	cmp rsi, 0
  3725 00001895 7410                    	je .L_lambda_simple_env_end_0011
  3726 00001897 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3727 0000189B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3728 0000189F 48FFC6                  	inc rsi
  3729 000018A2 48FFC2                  	inc rdx
  3730 000018A5 EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3731                                  .L_lambda_simple_env_end_0011:
  3732 000018A7 5B                      	pop rbx
  3733 000018A8 BE00000000              	mov rsi, 0
  3734                                  .L_lambda_simple_params_loop_0011:	; copy params
  3735 000018AD 4883FE00                	cmp rsi, 0
  3736 000018B1 740E                    	je .L_lambda_simple_params_end_0011
  3737 000018B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3738 000018B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3739 000018BC 48FFC6                  	inc rsi
  3740 000018BF EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3741                                  .L_lambda_simple_params_end_0011:
  3742 000018C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3743 000018C4 4889C3                  	mov rbx, rax
  3744 000018C7 58                      	pop rax
  3745 000018C8 C60004                  	mov byte [rax], T_closure
  3746 000018CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3747 000018CF 48C74009[DC180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3748 000018D7 E9A4000000              	jmp .L_lambda_simple_end_0011
  3749                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3750 000018DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3751 000018E2 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3752 000018E4 FF742410                	push qword [rsp + 8 * 2]
  3753 000018E8 6A01                    	push 1
  3754 000018EA E91F5D0100              	jmp L_error_incorrect_arity_simple
  3755                                  .L_lambda_simple_arity_check_ok_0011:
  3756 000018EF C8000000                	enter 0, 0
  3757                                  	; preparing a tail-call
  3758                                  	; preparing a non-tail-call
  3759 000018F3 488B4520                	mov rax, PARAM(0)	; param x
  3760 000018F7 50                      	push rax
  3761 000018F8 6A01                    	push 1	; arg count
  3762 000018FA 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3763 00001902 803805                  	cmp byte [rax], T_undefined
  3764 00001905 0F841D5C0100            	je L_error_fvar_undefined
  3765 0000190B 803804                  	cmp byte [rax], T_closure
  3766 0000190E 0F85985C0100            	jne L_error_non_closure
  3767 00001914 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3768 00001917 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3769 0000191A 50                      	push rax
  3770 0000191B 6A01                    	push 1	; arg count
  3771 0000191D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3772 00001925 803805                  	cmp byte [rax], T_undefined
  3773 00001928 0F84FA5B0100            	je L_error_fvar_undefined
  3774 0000192E 803804                  	cmp byte [rax], T_closure
  3775 00001931 0F85755C0100            	jne L_error_non_closure
  3776 00001937 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3777 0000193A FF7508                  	push qword [rbp + 8 * 1]
  3778                                   ; old ret addr
  3779 0000193D FF7500                  	push qword [rbp]
  3780                                   ; restore the old rbp
  3781 00001940 BB01000000              	mov rbx, 1
  3782 00001945 4883C303                	add rbx, 3
  3783 00001949 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3784 0000194D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3785 00001952 4C8D4DF8                	lea r9, [rbp - 8]
  3786 00001956 B905000000              	mov rcx, 5
  3787                                  .L_tc_recycle_frame_loop_0011:
  3788 0000195B 4883F900                	cmp rcx, 0
  3789 0000195F 7413                    	je .L_tc_recycle_frame_done_0011
  3790 00001961 4D8B11                  	mov r10, qword [r9]
  3791 00001964 4D8910                  	mov qword [r8], r10
  3792 00001967 4983E808                	sub r8, 8
  3793 0000196B 4983E908                	sub r9, 8
  3794 0000196F 48FFC9                  	dec rcx
  3795 00001972 EBE7                    	jmp .L_tc_recycle_frame_loop_0011
  3796                                  .L_tc_recycle_frame_done_0011:
  3797 00001974 498D6008                	lea rsp, [r8 + 8]
  3798 00001978 5D                      	pop rbp ; restore the old rbp
  3799 00001979 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3800 0000197C C9                      	leave
  3801 0000197D C21800                  	ret AND_KILL_FRAME(1)
  3802                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3803 00001980 48890425[8F100000]      	mov qword [free_var_42], rax
  3804 00001988 48B8-                   	mov rax, sob_void
  3804 0000198A [0000000000000000] 
  3805                                  
  3806 00001992 4889C7                  	mov rdi, rax
  3807 00001995 E8105F0100              	call print_sexpr_if_not_void
  3808 0000199A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3809 0000199F E8B15C0100              	call malloc
  3810 000019A4 50                      	push rax
  3811 000019A5 BF00000000              	mov rdi, 8 * 0	; new rib
  3812 000019AA E8A65C0100              	call malloc
  3813 000019AF 50                      	push rax
  3814 000019B0 BF08000000              	mov rdi, 8 * 1	; extended env
  3815 000019B5 E89B5C0100              	call malloc
  3816 000019BA 488B7D10                	mov rdi, ENV
  3817 000019BE BE00000000              	mov rsi, 0
  3818 000019C3 BA01000000              	mov rdx, 1
  3819                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3820 000019C8 4883FE00                	cmp rsi, 0
  3821 000019CC 7410                    	je .L_lambda_simple_env_end_0012
  3822 000019CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3823 000019D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3824 000019D6 48FFC6                  	inc rsi
  3825 000019D9 48FFC2                  	inc rdx
  3826 000019DC EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3827                                  .L_lambda_simple_env_end_0012:
  3828 000019DE 5B                      	pop rbx
  3829 000019DF BE00000000              	mov rsi, 0
  3830                                  .L_lambda_simple_params_loop_0012:	; copy params
  3831 000019E4 4883FE00                	cmp rsi, 0
  3832 000019E8 740E                    	je .L_lambda_simple_params_end_0012
  3833 000019EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3834 000019EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3835 000019F3 48FFC6                  	inc rsi
  3836 000019F6 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3837                                  .L_lambda_simple_params_end_0012:
  3838 000019F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3839 000019FB 4889C3                  	mov rbx, rax
  3840 000019FE 58                      	pop rax
  3841 000019FF C60004                  	mov byte [rax], T_closure
  3842 00001A02 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3843 00001A06 48C74009[131A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3844 00001A0E E9A4000000              	jmp .L_lambda_simple_end_0012
  3845                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3846 00001A13 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3847 00001A19 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3848 00001A1B FF742410                	push qword [rsp + 8 * 2]
  3849 00001A1F 6A01                    	push 1
  3850 00001A21 E9E85B0100              	jmp L_error_incorrect_arity_simple
  3851                                  .L_lambda_simple_arity_check_ok_0012:
  3852 00001A26 C8000000                	enter 0, 0
  3853                                  	; preparing a tail-call
  3854                                  	; preparing a non-tail-call
  3855 00001A2A 488B4520                	mov rax, PARAM(0)	; param x
  3856 00001A2E 50                      	push rax
  3857 00001A2F 6A01                    	push 1	; arg count
  3858 00001A31 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3859 00001A39 803805                  	cmp byte [rax], T_undefined
  3860 00001A3C 0F84E65A0100            	je L_error_fvar_undefined
  3861 00001A42 803804                  	cmp byte [rax], T_closure
  3862 00001A45 0F85615B0100            	jne L_error_non_closure
  3863 00001A4B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3864 00001A4E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3865 00001A51 50                      	push rax
  3866 00001A52 6A01                    	push 1	; arg count
  3867 00001A54 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3868 00001A5C 803805                  	cmp byte [rax], T_undefined
  3869 00001A5F 0F84C35A0100            	je L_error_fvar_undefined
  3870 00001A65 803804                  	cmp byte [rax], T_closure
  3871 00001A68 0F853E5B0100            	jne L_error_non_closure
  3872 00001A6E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3873 00001A71 FF7508                  	push qword [rbp + 8 * 1]
  3874                                   ; old ret addr
  3875 00001A74 FF7500                  	push qword [rbp]
  3876                                   ; restore the old rbp
  3877 00001A77 BB01000000              	mov rbx, 1
  3878 00001A7C 4883C303                	add rbx, 3
  3879 00001A80 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3880 00001A84 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3881 00001A89 4C8D4DF8                	lea r9, [rbp - 8]
  3882 00001A8D B905000000              	mov rcx, 5
  3883                                  .L_tc_recycle_frame_loop_0012:
  3884 00001A92 4883F900                	cmp rcx, 0
  3885 00001A96 7413                    	je .L_tc_recycle_frame_done_0012
  3886 00001A98 4D8B11                  	mov r10, qword [r9]
  3887 00001A9B 4D8910                  	mov qword [r8], r10
  3888 00001A9E 4983E808                	sub r8, 8
  3889 00001AA2 4983E908                	sub r9, 8
  3890 00001AA6 48FFC9                  	dec rcx
  3891 00001AA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0012
  3892                                  .L_tc_recycle_frame_done_0012:
  3893 00001AAB 498D6008                	lea rsp, [r8 + 8]
  3894 00001AAF 5D                      	pop rbp ; restore the old rbp
  3895 00001AB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3896 00001AB3 C9                      	leave
  3897 00001AB4 C21800                  	ret AND_KILL_FRAME(1)
  3898                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3899 00001AB7 48890425[A0100000]      	mov qword [free_var_43], rax
  3900 00001ABF 48B8-                   	mov rax, sob_void
  3900 00001AC1 [0000000000000000] 
  3901                                  
  3902 00001AC9 4889C7                  	mov rdi, rax
  3903 00001ACC E8D95D0100              	call print_sexpr_if_not_void
  3904 00001AD1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3905 00001AD6 E87A5B0100              	call malloc
  3906 00001ADB 50                      	push rax
  3907 00001ADC BF00000000              	mov rdi, 8 * 0	; new rib
  3908 00001AE1 E86F5B0100              	call malloc
  3909 00001AE6 50                      	push rax
  3910 00001AE7 BF08000000              	mov rdi, 8 * 1	; extended env
  3911 00001AEC E8645B0100              	call malloc
  3912 00001AF1 488B7D10                	mov rdi, ENV
  3913 00001AF5 BE00000000              	mov rsi, 0
  3914 00001AFA BA01000000              	mov rdx, 1
  3915                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3916 00001AFF 4883FE00                	cmp rsi, 0
  3917 00001B03 7410                    	je .L_lambda_simple_env_end_0013
  3918 00001B05 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3919 00001B09 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3920 00001B0D 48FFC6                  	inc rsi
  3921 00001B10 48FFC2                  	inc rdx
  3922 00001B13 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3923                                  .L_lambda_simple_env_end_0013:
  3924 00001B15 5B                      	pop rbx
  3925 00001B16 BE00000000              	mov rsi, 0
  3926                                  .L_lambda_simple_params_loop_0013:	; copy params
  3927 00001B1B 4883FE00                	cmp rsi, 0
  3928 00001B1F 740E                    	je .L_lambda_simple_params_end_0013
  3929 00001B21 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3930 00001B26 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3931 00001B2A 48FFC6                  	inc rsi
  3932 00001B2D EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3933                                  .L_lambda_simple_params_end_0013:
  3934 00001B2F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3935 00001B32 4889C3                  	mov rbx, rax
  3936 00001B35 58                      	pop rax
  3937 00001B36 C60004                  	mov byte [rax], T_closure
  3938 00001B39 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3939 00001B3D 48C74009[4A1B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3940 00001B45 E9A4000000              	jmp .L_lambda_simple_end_0013
  3941                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3942 00001B4A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3943 00001B50 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3944 00001B52 FF742410                	push qword [rsp + 8 * 2]
  3945 00001B56 6A01                    	push 1
  3946 00001B58 E9B15A0100              	jmp L_error_incorrect_arity_simple
  3947                                  .L_lambda_simple_arity_check_ok_0013:
  3948 00001B5D C8000000                	enter 0, 0
  3949                                  	; preparing a tail-call
  3950                                  	; preparing a non-tail-call
  3951 00001B61 488B4520                	mov rax, PARAM(0)	; param x
  3952 00001B65 50                      	push rax
  3953 00001B66 6A01                    	push 1	; arg count
  3954 00001B68 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3955 00001B70 803805                  	cmp byte [rax], T_undefined
  3956 00001B73 0F84AF590100            	je L_error_fvar_undefined
  3957 00001B79 803804                  	cmp byte [rax], T_closure
  3958 00001B7C 0F852A5A0100            	jne L_error_non_closure
  3959 00001B82 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3960 00001B85 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3961 00001B88 50                      	push rax
  3962 00001B89 6A01                    	push 1	; arg count
  3963 00001B8B 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3964 00001B93 803805                  	cmp byte [rax], T_undefined
  3965 00001B96 0F848C590100            	je L_error_fvar_undefined
  3966 00001B9C 803804                  	cmp byte [rax], T_closure
  3967 00001B9F 0F85075A0100            	jne L_error_non_closure
  3968 00001BA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3969 00001BA8 FF7508                  	push qword [rbp + 8 * 1]
  3970                                   ; old ret addr
  3971 00001BAB FF7500                  	push qword [rbp]
  3972                                   ; restore the old rbp
  3973 00001BAE BB01000000              	mov rbx, 1
  3974 00001BB3 4883C303                	add rbx, 3
  3975 00001BB7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  3976 00001BBB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  3977 00001BC0 4C8D4DF8                	lea r9, [rbp - 8]
  3978 00001BC4 B905000000              	mov rcx, 5
  3979                                  .L_tc_recycle_frame_loop_0013:
  3980 00001BC9 4883F900                	cmp rcx, 0
  3981 00001BCD 7413                    	je .L_tc_recycle_frame_done_0013
  3982 00001BCF 4D8B11                  	mov r10, qword [r9]
  3983 00001BD2 4D8910                  	mov qword [r8], r10
  3984 00001BD5 4983E808                	sub r8, 8
  3985 00001BD9 4983E908                	sub r9, 8
  3986 00001BDD 48FFC9                  	dec rcx
  3987 00001BE0 EBE7                    	jmp .L_tc_recycle_frame_loop_0013
  3988                                  .L_tc_recycle_frame_done_0013:
  3989 00001BE2 498D6008                	lea rsp, [r8 + 8]
  3990 00001BE6 5D                      	pop rbp ; restore the old rbp
  3991 00001BE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3992 00001BEA C9                      	leave
  3993 00001BEB C21800                  	ret AND_KILL_FRAME(1)
  3994                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3995 00001BEE 48890425[C2100000]      	mov qword [free_var_45], rax
  3996 00001BF6 48B8-                   	mov rax, sob_void
  3996 00001BF8 [0000000000000000] 
  3997                                  
  3998 00001C00 4889C7                  	mov rdi, rax
  3999 00001C03 E8A25C0100              	call print_sexpr_if_not_void
  4000 00001C08 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4001 00001C0D E8435A0100              	call malloc
  4002 00001C12 50                      	push rax
  4003 00001C13 BF00000000              	mov rdi, 8 * 0	; new rib
  4004 00001C18 E8385A0100              	call malloc
  4005 00001C1D 50                      	push rax
  4006 00001C1E BF08000000              	mov rdi, 8 * 1	; extended env
  4007 00001C23 E82D5A0100              	call malloc
  4008 00001C28 488B7D10                	mov rdi, ENV
  4009 00001C2C BE00000000              	mov rsi, 0
  4010 00001C31 BA01000000              	mov rdx, 1
  4011                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  4012 00001C36 4883FE00                	cmp rsi, 0
  4013 00001C3A 7410                    	je .L_lambda_simple_env_end_0014
  4014 00001C3C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4015 00001C40 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4016 00001C44 48FFC6                  	inc rsi
  4017 00001C47 48FFC2                  	inc rdx
  4018 00001C4A EBEA                    	jmp .L_lambda_simple_env_loop_0014
  4019                                  .L_lambda_simple_env_end_0014:
  4020 00001C4C 5B                      	pop rbx
  4021 00001C4D BE00000000              	mov rsi, 0
  4022                                  .L_lambda_simple_params_loop_0014:	; copy params
  4023 00001C52 4883FE00                	cmp rsi, 0
  4024 00001C56 740E                    	je .L_lambda_simple_params_end_0014
  4025 00001C58 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4026 00001C5D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4027 00001C61 48FFC6                  	inc rsi
  4028 00001C64 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  4029                                  .L_lambda_simple_params_end_0014:
  4030 00001C66 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4031 00001C69 4889C3                  	mov rbx, rax
  4032 00001C6C 58                      	pop rax
  4033 00001C6D C60004                  	mov byte [rax], T_closure
  4034 00001C70 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4035 00001C74 48C74009[811C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  4036 00001C7C E9A4000000              	jmp .L_lambda_simple_end_0014
  4037                                  .L_lambda_simple_code_0014:	; lambda-simple body
  4038 00001C81 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4039 00001C87 740B                    	je .L_lambda_simple_arity_check_ok_0014
  4040 00001C89 FF742410                	push qword [rsp + 8 * 2]
  4041 00001C8D 6A01                    	push 1
  4042 00001C8F E97A590100              	jmp L_error_incorrect_arity_simple
  4043                                  .L_lambda_simple_arity_check_ok_0014:
  4044 00001C94 C8000000                	enter 0, 0
  4045                                  	; preparing a tail-call
  4046                                  	; preparing a non-tail-call
  4047 00001C98 488B4520                	mov rax, PARAM(0)	; param x
  4048 00001C9C 50                      	push rax
  4049 00001C9D 6A01                    	push 1	; arg count
  4050 00001C9F 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4051 00001CA7 803805                  	cmp byte [rax], T_undefined
  4052 00001CAA 0F8478580100            	je L_error_fvar_undefined
  4053 00001CB0 803804                  	cmp byte [rax], T_closure
  4054 00001CB3 0F85F3580100            	jne L_error_non_closure
  4055 00001CB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4056 00001CBC FF5009                  	call SOB_CLOSURE_CODE(rax)
  4057 00001CBF 50                      	push rax
  4058 00001CC0 6A01                    	push 1	; arg count
  4059 00001CC2 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4060 00001CCA 803805                  	cmp byte [rax], T_undefined
  4061 00001CCD 0F8455580100            	je L_error_fvar_undefined
  4062 00001CD3 803804                  	cmp byte [rax], T_closure
  4063 00001CD6 0F85D0580100            	jne L_error_non_closure
  4064 00001CDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4065 00001CDF FF7508                  	push qword [rbp + 8 * 1]
  4066                                   ; old ret addr
  4067 00001CE2 FF7500                  	push qword [rbp]
  4068                                   ; restore the old rbp
  4069 00001CE5 BB01000000              	mov rbx, 1
  4070 00001CEA 4883C303                	add rbx, 3
  4071 00001CEE 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4072 00001CF2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4073 00001CF7 4C8D4DF8                	lea r9, [rbp - 8]
  4074 00001CFB B905000000              	mov rcx, 5
  4075                                  .L_tc_recycle_frame_loop_0014:
  4076 00001D00 4883F900                	cmp rcx, 0
  4077 00001D04 7413                    	je .L_tc_recycle_frame_done_0014
  4078 00001D06 4D8B11                  	mov r10, qword [r9]
  4079 00001D09 4D8910                  	mov qword [r8], r10
  4080 00001D0C 4983E808                	sub r8, 8
  4081 00001D10 4983E908                	sub r9, 8
  4082 00001D14 48FFC9                  	dec rcx
  4083 00001D17 EBE7                    	jmp .L_tc_recycle_frame_loop_0014
  4084                                  .L_tc_recycle_frame_done_0014:
  4085 00001D19 498D6008                	lea rsp, [r8 + 8]
  4086 00001D1D 5D                      	pop rbp ; restore the old rbp
  4087 00001D1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4088 00001D21 C9                      	leave
  4089 00001D22 C21800                  	ret AND_KILL_FRAME(1)
  4090                                  .L_lambda_simple_end_0014:	; new closure is in rax
  4091 00001D25 48890425[D3100000]      	mov qword [free_var_46], rax
  4092 00001D2D 48B8-                   	mov rax, sob_void
  4092 00001D2F [0000000000000000] 
  4093                                  
  4094 00001D37 4889C7                  	mov rdi, rax
  4095 00001D3A E86B5B0100              	call print_sexpr_if_not_void
  4096 00001D3F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4097 00001D44 E80C590100              	call malloc
  4098 00001D49 50                      	push rax
  4099 00001D4A BF00000000              	mov rdi, 8 * 0	; new rib
  4100 00001D4F E801590100              	call malloc
  4101 00001D54 50                      	push rax
  4102 00001D55 BF08000000              	mov rdi, 8 * 1	; extended env
  4103 00001D5A E8F6580100              	call malloc
  4104 00001D5F 488B7D10                	mov rdi, ENV
  4105 00001D63 BE00000000              	mov rsi, 0
  4106 00001D68 BA01000000              	mov rdx, 1
  4107                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  4108 00001D6D 4883FE00                	cmp rsi, 0
  4109 00001D71 7410                    	je .L_lambda_simple_env_end_0015
  4110 00001D73 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4111 00001D77 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4112 00001D7B 48FFC6                  	inc rsi
  4113 00001D7E 48FFC2                  	inc rdx
  4114 00001D81 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  4115                                  .L_lambda_simple_env_end_0015:
  4116 00001D83 5B                      	pop rbx
  4117 00001D84 BE00000000              	mov rsi, 0
  4118                                  .L_lambda_simple_params_loop_0015:	; copy params
  4119 00001D89 4883FE00                	cmp rsi, 0
  4120 00001D8D 740E                    	je .L_lambda_simple_params_end_0015
  4121 00001D8F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4122 00001D94 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4123 00001D98 48FFC6                  	inc rsi
  4124 00001D9B EBEC                    	jmp .L_lambda_simple_params_loop_0015
  4125                                  .L_lambda_simple_params_end_0015:
  4126 00001D9D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4127 00001DA0 4889C3                  	mov rbx, rax
  4128 00001DA3 58                      	pop rax
  4129 00001DA4 C60004                  	mov byte [rax], T_closure
  4130 00001DA7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4131 00001DAB 48C74009[B81D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  4132 00001DB3 E9A4000000              	jmp .L_lambda_simple_end_0015
  4133                                  .L_lambda_simple_code_0015:	; lambda-simple body
  4134 00001DB8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4135 00001DBE 740B                    	je .L_lambda_simple_arity_check_ok_0015
  4136 00001DC0 FF742410                	push qword [rsp + 8 * 2]
  4137 00001DC4 6A01                    	push 1
  4138 00001DC6 E943580100              	jmp L_error_incorrect_arity_simple
  4139                                  .L_lambda_simple_arity_check_ok_0015:
  4140 00001DCB C8000000                	enter 0, 0
  4141                                  	; preparing a tail-call
  4142                                  	; preparing a non-tail-call
  4143 00001DCF 488B4520                	mov rax, PARAM(0)	; param x
  4144 00001DD3 50                      	push rax
  4145 00001DD4 6A01                    	push 1	; arg count
  4146 00001DD6 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4147 00001DDE 803805                  	cmp byte [rax], T_undefined
  4148 00001DE1 0F8441570100            	je L_error_fvar_undefined
  4149 00001DE7 803804                  	cmp byte [rax], T_closure
  4150 00001DEA 0F85BC570100            	jne L_error_non_closure
  4151 00001DF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4152 00001DF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4153 00001DF6 50                      	push rax
  4154 00001DF7 6A01                    	push 1	; arg count
  4155 00001DF9 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4156 00001E01 803805                  	cmp byte [rax], T_undefined
  4157 00001E04 0F841E570100            	je L_error_fvar_undefined
  4158 00001E0A 803804                  	cmp byte [rax], T_closure
  4159 00001E0D 0F8599570100            	jne L_error_non_closure
  4160 00001E13 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4161 00001E16 FF7508                  	push qword [rbp + 8 * 1]
  4162                                   ; old ret addr
  4163 00001E19 FF7500                  	push qword [rbp]
  4164                                   ; restore the old rbp
  4165 00001E1C BB01000000              	mov rbx, 1
  4166 00001E21 4883C303                	add rbx, 3
  4167 00001E25 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4168 00001E29 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4169 00001E2E 4C8D4DF8                	lea r9, [rbp - 8]
  4170 00001E32 B905000000              	mov rcx, 5
  4171                                  .L_tc_recycle_frame_loop_0015:
  4172 00001E37 4883F900                	cmp rcx, 0
  4173 00001E3B 7413                    	je .L_tc_recycle_frame_done_0015
  4174 00001E3D 4D8B11                  	mov r10, qword [r9]
  4175 00001E40 4D8910                  	mov qword [r8], r10
  4176 00001E43 4983E808                	sub r8, 8
  4177 00001E47 4983E908                	sub r9, 8
  4178 00001E4B 48FFC9                  	dec rcx
  4179 00001E4E EBE7                    	jmp .L_tc_recycle_frame_loop_0015
  4180                                  .L_tc_recycle_frame_done_0015:
  4181 00001E50 498D6008                	lea rsp, [r8 + 8]
  4182 00001E54 5D                      	pop rbp ; restore the old rbp
  4183 00001E55 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4184 00001E58 C9                      	leave
  4185 00001E59 C21800                  	ret AND_KILL_FRAME(1)
  4186                                  .L_lambda_simple_end_0015:	; new closure is in rax
  4187 00001E5C 48890425[17110000]      	mov qword [free_var_50], rax
  4188 00001E64 48B8-                   	mov rax, sob_void
  4188 00001E66 [0000000000000000] 
  4189                                  
  4190 00001E6E 4889C7                  	mov rdi, rax
  4191 00001E71 E8345A0100              	call print_sexpr_if_not_void
  4192 00001E76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4193 00001E7B E8D5570100              	call malloc
  4194 00001E80 50                      	push rax
  4195 00001E81 BF00000000              	mov rdi, 8 * 0	; new rib
  4196 00001E86 E8CA570100              	call malloc
  4197 00001E8B 50                      	push rax
  4198 00001E8C BF08000000              	mov rdi, 8 * 1	; extended env
  4199 00001E91 E8BF570100              	call malloc
  4200 00001E96 488B7D10                	mov rdi, ENV
  4201 00001E9A BE00000000              	mov rsi, 0
  4202 00001E9F BA01000000              	mov rdx, 1
  4203                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  4204 00001EA4 4883FE00                	cmp rsi, 0
  4205 00001EA8 7410                    	je .L_lambda_simple_env_end_0016
  4206 00001EAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4207 00001EAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4208 00001EB2 48FFC6                  	inc rsi
  4209 00001EB5 48FFC2                  	inc rdx
  4210 00001EB8 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  4211                                  .L_lambda_simple_env_end_0016:
  4212 00001EBA 5B                      	pop rbx
  4213 00001EBB BE00000000              	mov rsi, 0
  4214                                  .L_lambda_simple_params_loop_0016:	; copy params
  4215 00001EC0 4883FE00                	cmp rsi, 0
  4216 00001EC4 740E                    	je .L_lambda_simple_params_end_0016
  4217 00001EC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4218 00001ECB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4219 00001ECF 48FFC6                  	inc rsi
  4220 00001ED2 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  4221                                  .L_lambda_simple_params_end_0016:
  4222 00001ED4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4223 00001ED7 4889C3                  	mov rbx, rax
  4224 00001EDA 58                      	pop rax
  4225 00001EDB C60004                  	mov byte [rax], T_closure
  4226 00001EDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4227 00001EE2 48C74009[EF1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  4228 00001EEA E9A4000000              	jmp .L_lambda_simple_end_0016
  4229                                  .L_lambda_simple_code_0016:	; lambda-simple body
  4230 00001EEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4231 00001EF5 740B                    	je .L_lambda_simple_arity_check_ok_0016
  4232 00001EF7 FF742410                	push qword [rsp + 8 * 2]
  4233 00001EFB 6A01                    	push 1
  4234 00001EFD E90C570100              	jmp L_error_incorrect_arity_simple
  4235                                  .L_lambda_simple_arity_check_ok_0016:
  4236 00001F02 C8000000                	enter 0, 0
  4237                                  	; preparing a tail-call
  4238                                  	; preparing a non-tail-call
  4239 00001F06 488B4520                	mov rax, PARAM(0)	; param x
  4240 00001F0A 50                      	push rax
  4241 00001F0B 6A01                    	push 1	; arg count
  4242 00001F0D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4243 00001F15 803805                  	cmp byte [rax], T_undefined
  4244 00001F18 0F840A560100            	je L_error_fvar_undefined
  4245 00001F1E 803804                  	cmp byte [rax], T_closure
  4246 00001F21 0F8585560100            	jne L_error_non_closure
  4247 00001F27 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4248 00001F2A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4249 00001F2D 50                      	push rax
  4250 00001F2E 6A01                    	push 1	; arg count
  4251 00001F30 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4252 00001F38 803805                  	cmp byte [rax], T_undefined
  4253 00001F3B 0F84E7550100            	je L_error_fvar_undefined
  4254 00001F41 803804                  	cmp byte [rax], T_closure
  4255 00001F44 0F8562560100            	jne L_error_non_closure
  4256 00001F4A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4257 00001F4D FF7508                  	push qword [rbp + 8 * 1]
  4258                                   ; old ret addr
  4259 00001F50 FF7500                  	push qword [rbp]
  4260                                   ; restore the old rbp
  4261 00001F53 BB01000000              	mov rbx, 1
  4262 00001F58 4883C303                	add rbx, 3
  4263 00001F5C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4264 00001F60 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4265 00001F65 4C8D4DF8                	lea r9, [rbp - 8]
  4266 00001F69 B905000000              	mov rcx, 5
  4267                                  .L_tc_recycle_frame_loop_0016:
  4268 00001F6E 4883F900                	cmp rcx, 0
  4269 00001F72 7413                    	je .L_tc_recycle_frame_done_0016
  4270 00001F74 4D8B11                  	mov r10, qword [r9]
  4271 00001F77 4D8910                  	mov qword [r8], r10
  4272 00001F7A 4983E808                	sub r8, 8
  4273 00001F7E 4983E908                	sub r9, 8
  4274 00001F82 48FFC9                  	dec rcx
  4275 00001F85 EBE7                    	jmp .L_tc_recycle_frame_loop_0016
  4276                                  .L_tc_recycle_frame_done_0016:
  4277 00001F87 498D6008                	lea rsp, [r8 + 8]
  4278 00001F8B 5D                      	pop rbp ; restore the old rbp
  4279 00001F8C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4280 00001F8F C9                      	leave
  4281 00001F90 C21800                  	ret AND_KILL_FRAME(1)
  4282                                  .L_lambda_simple_end_0016:	; new closure is in rax
  4283 00001F93 48890425[28110000]      	mov qword [free_var_51], rax
  4284 00001F9B 48B8-                   	mov rax, sob_void
  4284 00001F9D [0000000000000000] 
  4285                                  
  4286 00001FA5 4889C7                  	mov rdi, rax
  4287 00001FA8 E8FD580100              	call print_sexpr_if_not_void
  4288 00001FAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4289 00001FB2 E89E560100              	call malloc
  4290 00001FB7 50                      	push rax
  4291 00001FB8 BF00000000              	mov rdi, 8 * 0	; new rib
  4292 00001FBD E893560100              	call malloc
  4293 00001FC2 50                      	push rax
  4294 00001FC3 BF08000000              	mov rdi, 8 * 1	; extended env
  4295 00001FC8 E888560100              	call malloc
  4296 00001FCD 488B7D10                	mov rdi, ENV
  4297 00001FD1 BE00000000              	mov rsi, 0
  4298 00001FD6 BA01000000              	mov rdx, 1
  4299                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  4300 00001FDB 4883FE00                	cmp rsi, 0
  4301 00001FDF 7410                    	je .L_lambda_simple_env_end_0017
  4302 00001FE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4303 00001FE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4304 00001FE9 48FFC6                  	inc rsi
  4305 00001FEC 48FFC2                  	inc rdx
  4306 00001FEF EBEA                    	jmp .L_lambda_simple_env_loop_0017
  4307                                  .L_lambda_simple_env_end_0017:
  4308 00001FF1 5B                      	pop rbx
  4309 00001FF2 BE00000000              	mov rsi, 0
  4310                                  .L_lambda_simple_params_loop_0017:	; copy params
  4311 00001FF7 4883FE00                	cmp rsi, 0
  4312 00001FFB 740E                    	je .L_lambda_simple_params_end_0017
  4313 00001FFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4314 00002002 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4315 00002006 48FFC6                  	inc rsi
  4316 00002009 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  4317                                  .L_lambda_simple_params_end_0017:
  4318 0000200B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4319 0000200E 4889C3                  	mov rbx, rax
  4320 00002011 58                      	pop rax
  4321 00002012 C60004                  	mov byte [rax], T_closure
  4322 00002015 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4323 00002019 48C74009[26200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  4324 00002021 E9A4000000              	jmp .L_lambda_simple_end_0017
  4325                                  .L_lambda_simple_code_0017:	; lambda-simple body
  4326 00002026 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4327 0000202C 740B                    	je .L_lambda_simple_arity_check_ok_0017
  4328 0000202E FF742410                	push qword [rsp + 8 * 2]
  4329 00002032 6A01                    	push 1
  4330 00002034 E9D5550100              	jmp L_error_incorrect_arity_simple
  4331                                  .L_lambda_simple_arity_check_ok_0017:
  4332 00002039 C8000000                	enter 0, 0
  4333                                  	; preparing a tail-call
  4334                                  	; preparing a non-tail-call
  4335 0000203D 488B4520                	mov rax, PARAM(0)	; param x
  4336 00002041 50                      	push rax
  4337 00002042 6A01                    	push 1	; arg count
  4338 00002044 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4339 0000204C 803805                  	cmp byte [rax], T_undefined
  4340 0000204F 0F84D3540100            	je L_error_fvar_undefined
  4341 00002055 803804                  	cmp byte [rax], T_closure
  4342 00002058 0F854E550100            	jne L_error_non_closure
  4343 0000205E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4344 00002061 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4345 00002064 50                      	push rax
  4346 00002065 6A01                    	push 1	; arg count
  4347 00002067 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4348 0000206F 803805                  	cmp byte [rax], T_undefined
  4349 00002072 0F84B0540100            	je L_error_fvar_undefined
  4350 00002078 803804                  	cmp byte [rax], T_closure
  4351 0000207B 0F852B550100            	jne L_error_non_closure
  4352 00002081 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4353 00002084 FF7508                  	push qword [rbp + 8 * 1]
  4354                                   ; old ret addr
  4355 00002087 FF7500                  	push qword [rbp]
  4356                                   ; restore the old rbp
  4357 0000208A BB01000000              	mov rbx, 1
  4358 0000208F 4883C303                	add rbx, 3
  4359 00002093 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4360 00002097 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4361 0000209C 4C8D4DF8                	lea r9, [rbp - 8]
  4362 000020A0 B905000000              	mov rcx, 5
  4363                                  .L_tc_recycle_frame_loop_0017:
  4364 000020A5 4883F900                	cmp rcx, 0
  4365 000020A9 7413                    	je .L_tc_recycle_frame_done_0017
  4366 000020AB 4D8B11                  	mov r10, qword [r9]
  4367 000020AE 4D8910                  	mov qword [r8], r10
  4368 000020B1 4983E808                	sub r8, 8
  4369 000020B5 4983E908                	sub r9, 8
  4370 000020B9 48FFC9                  	dec rcx
  4371 000020BC EBE7                    	jmp .L_tc_recycle_frame_loop_0017
  4372                                  .L_tc_recycle_frame_done_0017:
  4373 000020BE 498D6008                	lea rsp, [r8 + 8]
  4374 000020C2 5D                      	pop rbp ; restore the old rbp
  4375 000020C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4376 000020C6 C9                      	leave
  4377 000020C7 C21800                  	ret AND_KILL_FRAME(1)
  4378                                  .L_lambda_simple_end_0017:	; new closure is in rax
  4379 000020CA 48890425[4A110000]      	mov qword [free_var_53], rax
  4380 000020D2 48B8-                   	mov rax, sob_void
  4380 000020D4 [0000000000000000] 
  4381                                  
  4382 000020DC 4889C7                  	mov rdi, rax
  4383 000020DF E8C6570100              	call print_sexpr_if_not_void
  4384 000020E4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4385 000020E9 E867550100              	call malloc
  4386 000020EE 50                      	push rax
  4387 000020EF BF00000000              	mov rdi, 8 * 0	; new rib
  4388 000020F4 E85C550100              	call malloc
  4389 000020F9 50                      	push rax
  4390 000020FA BF08000000              	mov rdi, 8 * 1	; extended env
  4391 000020FF E851550100              	call malloc
  4392 00002104 488B7D10                	mov rdi, ENV
  4393 00002108 BE00000000              	mov rsi, 0
  4394 0000210D BA01000000              	mov rdx, 1
  4395                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  4396 00002112 4883FE00                	cmp rsi, 0
  4397 00002116 7410                    	je .L_lambda_simple_env_end_0018
  4398 00002118 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4399 0000211C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4400 00002120 48FFC6                  	inc rsi
  4401 00002123 48FFC2                  	inc rdx
  4402 00002126 EBEA                    	jmp .L_lambda_simple_env_loop_0018
  4403                                  .L_lambda_simple_env_end_0018:
  4404 00002128 5B                      	pop rbx
  4405 00002129 BE00000000              	mov rsi, 0
  4406                                  .L_lambda_simple_params_loop_0018:	; copy params
  4407 0000212E 4883FE00                	cmp rsi, 0
  4408 00002132 740E                    	je .L_lambda_simple_params_end_0018
  4409 00002134 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4410 00002139 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4411 0000213D 48FFC6                  	inc rsi
  4412 00002140 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  4413                                  .L_lambda_simple_params_end_0018:
  4414 00002142 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4415 00002145 4889C3                  	mov rbx, rax
  4416 00002148 58                      	pop rax
  4417 00002149 C60004                  	mov byte [rax], T_closure
  4418 0000214C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4419 00002150 48C74009[5D210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  4420 00002158 E9A4000000              	jmp .L_lambda_simple_end_0018
  4421                                  .L_lambda_simple_code_0018:	; lambda-simple body
  4422 0000215D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4423 00002163 740B                    	je .L_lambda_simple_arity_check_ok_0018
  4424 00002165 FF742410                	push qword [rsp + 8 * 2]
  4425 00002169 6A01                    	push 1
  4426 0000216B E99E540100              	jmp L_error_incorrect_arity_simple
  4427                                  .L_lambda_simple_arity_check_ok_0018:
  4428 00002170 C8000000                	enter 0, 0
  4429                                  	; preparing a tail-call
  4430                                  	; preparing a non-tail-call
  4431 00002174 488B4520                	mov rax, PARAM(0)	; param x
  4432 00002178 50                      	push rax
  4433 00002179 6A01                    	push 1	; arg count
  4434 0000217B 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4435 00002183 803805                  	cmp byte [rax], T_undefined
  4436 00002186 0F849C530100            	je L_error_fvar_undefined
  4437 0000218C 803804                  	cmp byte [rax], T_closure
  4438 0000218F 0F8517540100            	jne L_error_non_closure
  4439 00002195 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4440 00002198 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4441 0000219B 50                      	push rax
  4442 0000219C 6A01                    	push 1	; arg count
  4443 0000219E 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4444 000021A6 803805                  	cmp byte [rax], T_undefined
  4445 000021A9 0F8479530100            	je L_error_fvar_undefined
  4446 000021AF 803804                  	cmp byte [rax], T_closure
  4447 000021B2 0F85F4530100            	jne L_error_non_closure
  4448 000021B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4449 000021BB FF7508                  	push qword [rbp + 8 * 1]
  4450                                   ; old ret addr
  4451 000021BE FF7500                  	push qword [rbp]
  4452                                   ; restore the old rbp
  4453 000021C1 BB01000000              	mov rbx, 1
  4454 000021C6 4883C303                	add rbx, 3
  4455 000021CA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4456 000021CE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4457 000021D3 4C8D4DF8                	lea r9, [rbp - 8]
  4458 000021D7 B905000000              	mov rcx, 5
  4459                                  .L_tc_recycle_frame_loop_0018:
  4460 000021DC 4883F900                	cmp rcx, 0
  4461 000021E0 7413                    	je .L_tc_recycle_frame_done_0018
  4462 000021E2 4D8B11                  	mov r10, qword [r9]
  4463 000021E5 4D8910                  	mov qword [r8], r10
  4464 000021E8 4983E808                	sub r8, 8
  4465 000021EC 4983E908                	sub r9, 8
  4466 000021F0 48FFC9                  	dec rcx
  4467 000021F3 EBE7                    	jmp .L_tc_recycle_frame_loop_0018
  4468                                  .L_tc_recycle_frame_done_0018:
  4469 000021F5 498D6008                	lea rsp, [r8 + 8]
  4470 000021F9 5D                      	pop rbp ; restore the old rbp
  4471 000021FA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4472 000021FD C9                      	leave
  4473 000021FE C21800                  	ret AND_KILL_FRAME(1)
  4474                                  .L_lambda_simple_end_0018:	; new closure is in rax
  4475 00002201 48890425[5B110000]      	mov qword [free_var_54], rax
  4476 00002209 48B8-                   	mov rax, sob_void
  4476 0000220B [0000000000000000] 
  4477                                  
  4478 00002213 4889C7                  	mov rdi, rax
  4479 00002216 E88F560100              	call print_sexpr_if_not_void
  4480 0000221B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4481 00002220 E830540100              	call malloc
  4482 00002225 50                      	push rax
  4483 00002226 BF00000000              	mov rdi, 8 * 0	; new rib
  4484 0000222B E825540100              	call malloc
  4485 00002230 50                      	push rax
  4486 00002231 BF08000000              	mov rdi, 8 * 1	; extended env
  4487 00002236 E81A540100              	call malloc
  4488 0000223B 488B7D10                	mov rdi, ENV
  4489 0000223F BE00000000              	mov rsi, 0
  4490 00002244 BA01000000              	mov rdx, 1
  4491                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4492 00002249 4883FE00                	cmp rsi, 0
  4493 0000224D 7410                    	je .L_lambda_simple_env_end_0019
  4494 0000224F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4495 00002253 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4496 00002257 48FFC6                  	inc rsi
  4497 0000225A 48FFC2                  	inc rdx
  4498 0000225D EBEA                    	jmp .L_lambda_simple_env_loop_0019
  4499                                  .L_lambda_simple_env_end_0019:
  4500 0000225F 5B                      	pop rbx
  4501 00002260 BE00000000              	mov rsi, 0
  4502                                  .L_lambda_simple_params_loop_0019:	; copy params
  4503 00002265 4883FE00                	cmp rsi, 0
  4504 00002269 740E                    	je .L_lambda_simple_params_end_0019
  4505 0000226B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4506 00002270 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4507 00002274 48FFC6                  	inc rsi
  4508 00002277 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  4509                                  .L_lambda_simple_params_end_0019:
  4510 00002279 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4511 0000227C 4889C3                  	mov rbx, rax
  4512 0000227F 58                      	pop rax
  4513 00002280 C60004                  	mov byte [rax], T_closure
  4514 00002283 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4515 00002287 48C74009[94220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  4516 0000228F E9A4000000              	jmp .L_lambda_simple_end_0019
  4517                                  .L_lambda_simple_code_0019:	; lambda-simple body
  4518 00002294 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4519 0000229A 740B                    	je .L_lambda_simple_arity_check_ok_0019
  4520 0000229C FF742410                	push qword [rsp + 8 * 2]
  4521 000022A0 6A01                    	push 1
  4522 000022A2 E967530100              	jmp L_error_incorrect_arity_simple
  4523                                  .L_lambda_simple_arity_check_ok_0019:
  4524 000022A7 C8000000                	enter 0, 0
  4525                                  	; preparing a tail-call
  4526                                  	; preparing a non-tail-call
  4527 000022AB 488B4520                	mov rax, PARAM(0)	; param x
  4528 000022AF 50                      	push rax
  4529 000022B0 6A01                    	push 1	; arg count
  4530 000022B2 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4531 000022BA 803805                  	cmp byte [rax], T_undefined
  4532 000022BD 0F8465520100            	je L_error_fvar_undefined
  4533 000022C3 803804                  	cmp byte [rax], T_closure
  4534 000022C6 0F85E0520100            	jne L_error_non_closure
  4535 000022CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4536 000022CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4537 000022D2 50                      	push rax
  4538 000022D3 6A01                    	push 1	; arg count
  4539 000022D5 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4540 000022DD 803805                  	cmp byte [rax], T_undefined
  4541 000022E0 0F8442520100            	je L_error_fvar_undefined
  4542 000022E6 803804                  	cmp byte [rax], T_closure
  4543 000022E9 0F85BD520100            	jne L_error_non_closure
  4544 000022EF FF7001                  	push SOB_CLOSURE_ENV(rax)
  4545 000022F2 FF7508                  	push qword [rbp + 8 * 1]
  4546                                   ; old ret addr
  4547 000022F5 FF7500                  	push qword [rbp]
  4548                                   ; restore the old rbp
  4549 000022F8 BB01000000              	mov rbx, 1
  4550 000022FD 4883C303                	add rbx, 3
  4551 00002301 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4552 00002305 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4553 0000230A 4C8D4DF8                	lea r9, [rbp - 8]
  4554 0000230E B905000000              	mov rcx, 5
  4555                                  .L_tc_recycle_frame_loop_0019:
  4556 00002313 4883F900                	cmp rcx, 0
  4557 00002317 7413                    	je .L_tc_recycle_frame_done_0019
  4558 00002319 4D8B11                  	mov r10, qword [r9]
  4559 0000231C 4D8910                  	mov qword [r8], r10
  4560 0000231F 4983E808                	sub r8, 8
  4561 00002323 4983E908                	sub r9, 8
  4562 00002327 48FFC9                  	dec rcx
  4563 0000232A EBE7                    	jmp .L_tc_recycle_frame_loop_0019
  4564                                  .L_tc_recycle_frame_done_0019:
  4565 0000232C 498D6008                	lea rsp, [r8 + 8]
  4566 00002330 5D                      	pop rbp ; restore the old rbp
  4567 00002331 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4568 00002334 C9                      	leave
  4569 00002335 C21800                  	ret AND_KILL_FRAME(1)
  4570                                  .L_lambda_simple_end_0019:	; new closure is in rax
  4571 00002338 48890425[8E110000]      	mov qword [free_var_57], rax
  4572 00002340 48B8-                   	mov rax, sob_void
  4572 00002342 [0000000000000000] 
  4573                                  
  4574 0000234A 4889C7                  	mov rdi, rax
  4575 0000234D E858550100              	call print_sexpr_if_not_void
  4576 00002352 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4577 00002357 E8F9520100              	call malloc
  4578 0000235C 50                      	push rax
  4579 0000235D BF00000000              	mov rdi, 8 * 0	; new rib
  4580 00002362 E8EE520100              	call malloc
  4581 00002367 50                      	push rax
  4582 00002368 BF08000000              	mov rdi, 8 * 1	; extended env
  4583 0000236D E8E3520100              	call malloc
  4584 00002372 488B7D10                	mov rdi, ENV
  4585 00002376 BE00000000              	mov rsi, 0
  4586 0000237B BA01000000              	mov rdx, 1
  4587                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4588 00002380 4883FE00                	cmp rsi, 0
  4589 00002384 7410                    	je .L_lambda_simple_env_end_001a
  4590 00002386 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4591 0000238A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4592 0000238E 48FFC6                  	inc rsi
  4593 00002391 48FFC2                  	inc rdx
  4594 00002394 EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4595                                  .L_lambda_simple_env_end_001a:
  4596 00002396 5B                      	pop rbx
  4597 00002397 BE00000000              	mov rsi, 0
  4598                                  .L_lambda_simple_params_loop_001a:	; copy params
  4599 0000239C 4883FE00                	cmp rsi, 0
  4600 000023A0 740E                    	je .L_lambda_simple_params_end_001a
  4601 000023A2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4602 000023A7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4603 000023AB 48FFC6                  	inc rsi
  4604 000023AE EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4605                                  .L_lambda_simple_params_end_001a:
  4606 000023B0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4607 000023B3 4889C3                  	mov rbx, rax
  4608 000023B6 58                      	pop rax
  4609 000023B7 C60004                  	mov byte [rax], T_closure
  4610 000023BA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4611 000023BE 48C74009[CB230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4612 000023C6 E9A4000000              	jmp .L_lambda_simple_end_001a
  4613                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4614 000023CB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4615 000023D1 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4616 000023D3 FF742410                	push qword [rsp + 8 * 2]
  4617 000023D7 6A01                    	push 1
  4618 000023D9 E930520100              	jmp L_error_incorrect_arity_simple
  4619                                  .L_lambda_simple_arity_check_ok_001a:
  4620 000023DE C8000000                	enter 0, 0
  4621                                  	; preparing a tail-call
  4622                                  	; preparing a non-tail-call
  4623 000023E2 488B4520                	mov rax, PARAM(0)	; param x
  4624 000023E6 50                      	push rax
  4625 000023E7 6A01                    	push 1	; arg count
  4626 000023E9 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4627 000023F1 803805                  	cmp byte [rax], T_undefined
  4628 000023F4 0F842E510100            	je L_error_fvar_undefined
  4629 000023FA 803804                  	cmp byte [rax], T_closure
  4630 000023FD 0F85A9510100            	jne L_error_non_closure
  4631 00002403 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4632 00002406 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4633 00002409 50                      	push rax
  4634 0000240A 6A01                    	push 1	; arg count
  4635 0000240C 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4636 00002414 803805                  	cmp byte [rax], T_undefined
  4637 00002417 0F840B510100            	je L_error_fvar_undefined
  4638 0000241D 803804                  	cmp byte [rax], T_closure
  4639 00002420 0F8586510100            	jne L_error_non_closure
  4640 00002426 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4641 00002429 FF7508                  	push qword [rbp + 8 * 1]
  4642                                   ; old ret addr
  4643 0000242C FF7500                  	push qword [rbp]
  4644                                   ; restore the old rbp
  4645 0000242F BB01000000              	mov rbx, 1
  4646 00002434 4883C303                	add rbx, 3
  4647 00002438 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4648 0000243C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4649 00002441 4C8D4DF8                	lea r9, [rbp - 8]
  4650 00002445 B905000000              	mov rcx, 5
  4651                                  .L_tc_recycle_frame_loop_001a:
  4652 0000244A 4883F900                	cmp rcx, 0
  4653 0000244E 7413                    	je .L_tc_recycle_frame_done_001a
  4654 00002450 4D8B11                  	mov r10, qword [r9]
  4655 00002453 4D8910                  	mov qword [r8], r10
  4656 00002456 4983E808                	sub r8, 8
  4657 0000245A 4983E908                	sub r9, 8
  4658 0000245E 48FFC9                  	dec rcx
  4659 00002461 EBE7                    	jmp .L_tc_recycle_frame_loop_001a
  4660                                  .L_tc_recycle_frame_done_001a:
  4661 00002463 498D6008                	lea rsp, [r8 + 8]
  4662 00002467 5D                      	pop rbp ; restore the old rbp
  4663 00002468 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4664 0000246B C9                      	leave
  4665 0000246C C21800                  	ret AND_KILL_FRAME(1)
  4666                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4667 0000246F 48890425[9F110000]      	mov qword [free_var_58], rax
  4668 00002477 48B8-                   	mov rax, sob_void
  4668 00002479 [0000000000000000] 
  4669                                  
  4670 00002481 4889C7                  	mov rdi, rax
  4671 00002484 E821540100              	call print_sexpr_if_not_void
  4672 00002489 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4673 0000248E E8C2510100              	call malloc
  4674 00002493 50                      	push rax
  4675 00002494 BF00000000              	mov rdi, 8 * 0	; new rib
  4676 00002499 E8B7510100              	call malloc
  4677 0000249E 50                      	push rax
  4678 0000249F BF08000000              	mov rdi, 8 * 1	; extended env
  4679 000024A4 E8AC510100              	call malloc
  4680 000024A9 488B7D10                	mov rdi, ENV
  4681 000024AD BE00000000              	mov rsi, 0
  4682 000024B2 BA01000000              	mov rdx, 1
  4683                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4684 000024B7 4883FE00                	cmp rsi, 0
  4685 000024BB 7410                    	je .L_lambda_simple_env_end_001b
  4686 000024BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4687 000024C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4688 000024C5 48FFC6                  	inc rsi
  4689 000024C8 48FFC2                  	inc rdx
  4690 000024CB EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4691                                  .L_lambda_simple_env_end_001b:
  4692 000024CD 5B                      	pop rbx
  4693 000024CE BE00000000              	mov rsi, 0
  4694                                  .L_lambda_simple_params_loop_001b:	; copy params
  4695 000024D3 4883FE00                	cmp rsi, 0
  4696 000024D7 740E                    	je .L_lambda_simple_params_end_001b
  4697 000024D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4698 000024DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4699 000024E2 48FFC6                  	inc rsi
  4700 000024E5 EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4701                                  .L_lambda_simple_params_end_001b:
  4702 000024E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4703 000024EA 4889C3                  	mov rbx, rax
  4704 000024ED 58                      	pop rax
  4705 000024EE C60004                  	mov byte [rax], T_closure
  4706 000024F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4707 000024F5 48C74009[02250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4708 000024FD E9A4000000              	jmp .L_lambda_simple_end_001b
  4709                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4710 00002502 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4711 00002508 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4712 0000250A FF742410                	push qword [rsp + 8 * 2]
  4713 0000250E 6A01                    	push 1
  4714 00002510 E9F9500100              	jmp L_error_incorrect_arity_simple
  4715                                  .L_lambda_simple_arity_check_ok_001b:
  4716 00002515 C8000000                	enter 0, 0
  4717                                  	; preparing a tail-call
  4718                                  	; preparing a non-tail-call
  4719 00002519 488B4520                	mov rax, PARAM(0)	; param x
  4720 0000251D 50                      	push rax
  4721 0000251E 6A01                    	push 1	; arg count
  4722 00002520 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4723 00002528 803805                  	cmp byte [rax], T_undefined
  4724 0000252B 0F84F74F0100            	je L_error_fvar_undefined
  4725 00002531 803804                  	cmp byte [rax], T_closure
  4726 00002534 0F8572500100            	jne L_error_non_closure
  4727 0000253A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4728 0000253D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4729 00002540 50                      	push rax
  4730 00002541 6A01                    	push 1	; arg count
  4731 00002543 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4732 0000254B 803805                  	cmp byte [rax], T_undefined
  4733 0000254E 0F84D44F0100            	je L_error_fvar_undefined
  4734 00002554 803804                  	cmp byte [rax], T_closure
  4735 00002557 0F854F500100            	jne L_error_non_closure
  4736 0000255D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4737 00002560 FF7508                  	push qword [rbp + 8 * 1]
  4738                                   ; old ret addr
  4739 00002563 FF7500                  	push qword [rbp]
  4740                                   ; restore the old rbp
  4741 00002566 BB01000000              	mov rbx, 1
  4742 0000256B 4883C303                	add rbx, 3
  4743 0000256F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4744 00002573 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4745 00002578 4C8D4DF8                	lea r9, [rbp - 8]
  4746 0000257C B905000000              	mov rcx, 5
  4747                                  .L_tc_recycle_frame_loop_001b:
  4748 00002581 4883F900                	cmp rcx, 0
  4749 00002585 7413                    	je .L_tc_recycle_frame_done_001b
  4750 00002587 4D8B11                  	mov r10, qword [r9]
  4751 0000258A 4D8910                  	mov qword [r8], r10
  4752 0000258D 4983E808                	sub r8, 8
  4753 00002591 4983E908                	sub r9, 8
  4754 00002595 48FFC9                  	dec rcx
  4755 00002598 EBE7                    	jmp .L_tc_recycle_frame_loop_001b
  4756                                  .L_tc_recycle_frame_done_001b:
  4757 0000259A 498D6008                	lea rsp, [r8 + 8]
  4758 0000259E 5D                      	pop rbp ; restore the old rbp
  4759 0000259F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4760 000025A2 C9                      	leave
  4761 000025A3 C21800                  	ret AND_KILL_FRAME(1)
  4762                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4763 000025A6 48890425[C1110000]      	mov qword [free_var_60], rax
  4764 000025AE 48B8-                   	mov rax, sob_void
  4764 000025B0 [0000000000000000] 
  4765                                  
  4766 000025B8 4889C7                  	mov rdi, rax
  4767 000025BB E8EA520100              	call print_sexpr_if_not_void
  4768 000025C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4769 000025C5 E88B500100              	call malloc
  4770 000025CA 50                      	push rax
  4771 000025CB BF00000000              	mov rdi, 8 * 0	; new rib
  4772 000025D0 E880500100              	call malloc
  4773 000025D5 50                      	push rax
  4774 000025D6 BF08000000              	mov rdi, 8 * 1	; extended env
  4775 000025DB E875500100              	call malloc
  4776 000025E0 488B7D10                	mov rdi, ENV
  4777 000025E4 BE00000000              	mov rsi, 0
  4778 000025E9 BA01000000              	mov rdx, 1
  4779                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4780 000025EE 4883FE00                	cmp rsi, 0
  4781 000025F2 7410                    	je .L_lambda_simple_env_end_001c
  4782 000025F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4783 000025F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4784 000025FC 48FFC6                  	inc rsi
  4785 000025FF 48FFC2                  	inc rdx
  4786 00002602 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4787                                  .L_lambda_simple_env_end_001c:
  4788 00002604 5B                      	pop rbx
  4789 00002605 BE00000000              	mov rsi, 0
  4790                                  .L_lambda_simple_params_loop_001c:	; copy params
  4791 0000260A 4883FE00                	cmp rsi, 0
  4792 0000260E 740E                    	je .L_lambda_simple_params_end_001c
  4793 00002610 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4794 00002615 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4795 00002619 48FFC6                  	inc rsi
  4796 0000261C EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4797                                  .L_lambda_simple_params_end_001c:
  4798 0000261E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4799 00002621 4889C3                  	mov rbx, rax
  4800 00002624 58                      	pop rax
  4801 00002625 C60004                  	mov byte [rax], T_closure
  4802 00002628 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4803 0000262C 48C74009[39260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4804 00002634 E9A4000000              	jmp .L_lambda_simple_end_001c
  4805                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4806 00002639 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4807 0000263F 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4808 00002641 FF742410                	push qword [rsp + 8 * 2]
  4809 00002645 6A01                    	push 1
  4810 00002647 E9C24F0100              	jmp L_error_incorrect_arity_simple
  4811                                  .L_lambda_simple_arity_check_ok_001c:
  4812 0000264C C8000000                	enter 0, 0
  4813                                  	; preparing a tail-call
  4814                                  	; preparing a non-tail-call
  4815 00002650 488B4520                	mov rax, PARAM(0)	; param x
  4816 00002654 50                      	push rax
  4817 00002655 6A01                    	push 1	; arg count
  4818 00002657 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4819 0000265F 803805                  	cmp byte [rax], T_undefined
  4820 00002662 0F84C04E0100            	je L_error_fvar_undefined
  4821 00002668 803804                  	cmp byte [rax], T_closure
  4822 0000266B 0F853B4F0100            	jne L_error_non_closure
  4823 00002671 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4824 00002674 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4825 00002677 50                      	push rax
  4826 00002678 6A01                    	push 1	; arg count
  4827 0000267A 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4828 00002682 803805                  	cmp byte [rax], T_undefined
  4829 00002685 0F849D4E0100            	je L_error_fvar_undefined
  4830 0000268B 803804                  	cmp byte [rax], T_closure
  4831 0000268E 0F85184F0100            	jne L_error_non_closure
  4832 00002694 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4833 00002697 FF7508                  	push qword [rbp + 8 * 1]
  4834                                   ; old ret addr
  4835 0000269A FF7500                  	push qword [rbp]
  4836                                   ; restore the old rbp
  4837 0000269D BB01000000              	mov rbx, 1
  4838 000026A2 4883C303                	add rbx, 3
  4839 000026A6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4840 000026AA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4841 000026AF 4C8D4DF8                	lea r9, [rbp - 8]
  4842 000026B3 B905000000              	mov rcx, 5
  4843                                  .L_tc_recycle_frame_loop_001c:
  4844 000026B8 4883F900                	cmp rcx, 0
  4845 000026BC 7413                    	je .L_tc_recycle_frame_done_001c
  4846 000026BE 4D8B11                  	mov r10, qword [r9]
  4847 000026C1 4D8910                  	mov qword [r8], r10
  4848 000026C4 4983E808                	sub r8, 8
  4849 000026C8 4983E908                	sub r9, 8
  4850 000026CC 48FFC9                  	dec rcx
  4851 000026CF EBE7                    	jmp .L_tc_recycle_frame_loop_001c
  4852                                  .L_tc_recycle_frame_done_001c:
  4853 000026D1 498D6008                	lea rsp, [r8 + 8]
  4854 000026D5 5D                      	pop rbp ; restore the old rbp
  4855 000026D6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4856 000026D9 C9                      	leave
  4857 000026DA C21800                  	ret AND_KILL_FRAME(1)
  4858                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4859 000026DD 48890425[D2110000]      	mov qword [free_var_61], rax
  4860 000026E5 48B8-                   	mov rax, sob_void
  4860 000026E7 [0000000000000000] 
  4861                                  
  4862 000026EF 4889C7                  	mov rdi, rax
  4863 000026F2 E8B3510100              	call print_sexpr_if_not_void
  4864 000026F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4865 000026FC E8544F0100              	call malloc
  4866 00002701 50                      	push rax
  4867 00002702 BF00000000              	mov rdi, 8 * 0	; new rib
  4868 00002707 E8494F0100              	call malloc
  4869 0000270C 50                      	push rax
  4870 0000270D BF08000000              	mov rdi, 8 * 1	; extended env
  4871 00002712 E83E4F0100              	call malloc
  4872 00002717 488B7D10                	mov rdi, ENV
  4873 0000271B BE00000000              	mov rsi, 0
  4874 00002720 BA01000000              	mov rdx, 1
  4875                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4876 00002725 4883FE00                	cmp rsi, 0
  4877 00002729 7410                    	je .L_lambda_simple_env_end_001d
  4878 0000272B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4879 0000272F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4880 00002733 48FFC6                  	inc rsi
  4881 00002736 48FFC2                  	inc rdx
  4882 00002739 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4883                                  .L_lambda_simple_env_end_001d:
  4884 0000273B 5B                      	pop rbx
  4885 0000273C BE00000000              	mov rsi, 0
  4886                                  .L_lambda_simple_params_loop_001d:	; copy params
  4887 00002741 4883FE00                	cmp rsi, 0
  4888 00002745 740E                    	je .L_lambda_simple_params_end_001d
  4889 00002747 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4890 0000274C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4891 00002750 48FFC6                  	inc rsi
  4892 00002753 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4893                                  .L_lambda_simple_params_end_001d:
  4894 00002755 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4895 00002758 4889C3                  	mov rbx, rax
  4896 0000275B 58                      	pop rax
  4897 0000275C C60004                  	mov byte [rax], T_closure
  4898 0000275F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4899 00002763 48C74009[70270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4900 0000276B E916010000              	jmp .L_lambda_simple_end_001d
  4901                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4902 00002770 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4903 00002776 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4904 00002778 FF742410                	push qword [rsp + 8 * 2]
  4905 0000277C 6A01                    	push 1
  4906 0000277E E98B4E0100              	jmp L_error_incorrect_arity_simple
  4907                                  .L_lambda_simple_arity_check_ok_001d:
  4908 00002783 C8000000                	enter 0, 0
  4909                                  	; preparing a non-tail-call
  4910 00002787 488B4520                	mov rax, PARAM(0)	; param e
  4911 0000278B 50                      	push rax
  4912 0000278C 6A01                    	push 1	; arg count
  4913 0000278E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  4914 00002796 803805                  	cmp byte [rax], T_undefined
  4915 00002799 0F84894D0100            	je L_error_fvar_undefined
  4916 0000279F 803804                  	cmp byte [rax], T_closure
  4917 000027A2 0F85044E0100            	jne L_error_non_closure
  4918 000027A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4919 000027AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  4920 000027AE 483D[02000000]          	cmp rax, sob_boolean_false
  4921 000027B4 0F85C8000000            	jne .L_or_end_0001
  4922                                  	; preparing a non-tail-call
  4923 000027BA 488B4520                	mov rax, PARAM(0)	; param e
  4924 000027BE 50                      	push rax
  4925 000027BF 6A01                    	push 1	; arg count
  4926 000027C1 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  4927 000027C9 803805                  	cmp byte [rax], T_undefined
  4928 000027CC 0F84564D0100            	je L_error_fvar_undefined
  4929 000027D2 803804                  	cmp byte [rax], T_closure
  4930 000027D5 0F85D14D0100            	jne L_error_non_closure
  4931 000027DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4932 000027DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  4933 000027E1 483D[02000000]          	cmp rax, sob_boolean_false
  4934 000027E7 0F848B000000            	je .L_if_else_0001
  4935                                  	; preparing a tail-call
  4936                                  	; preparing a non-tail-call
  4937 000027ED 488B4520                	mov rax, PARAM(0)	; param e
  4938 000027F1 50                      	push rax
  4939 000027F2 6A01                    	push 1	; arg count
  4940 000027F4 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  4941 000027FC 803805                  	cmp byte [rax], T_undefined
  4942 000027FF 0F84234D0100            	je L_error_fvar_undefined
  4943 00002805 803804                  	cmp byte [rax], T_closure
  4944 00002808 0F859E4D0100            	jne L_error_non_closure
  4945 0000280E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4946 00002811 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4947 00002814 50                      	push rax
  4948 00002815 6A01                    	push 1	; arg count
  4949 00002817 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
  4950 0000281F 803805                  	cmp byte [rax], T_undefined
  4951 00002822 0F84004D0100            	je L_error_fvar_undefined
  4952 00002828 803804                  	cmp byte [rax], T_closure
  4953 0000282B 0F857B4D0100            	jne L_error_non_closure
  4954 00002831 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4955 00002834 FF7508                  	push qword [rbp + 8 * 1]
  4956                                   ; old ret addr
  4957 00002837 FF7500                  	push qword [rbp]
  4958                                   ; restore the old rbp
  4959 0000283A BB01000000              	mov rbx, 1
  4960 0000283F 4883C303                	add rbx, 3
  4961 00002843 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  4962 00002847 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  4963 0000284C 4C8D4DF8                	lea r9, [rbp - 8]
  4964 00002850 B905000000              	mov rcx, 5
  4965                                  .L_tc_recycle_frame_loop_001d:
  4966 00002855 4883F900                	cmp rcx, 0
  4967 00002859 7413                    	je .L_tc_recycle_frame_done_001d
  4968 0000285B 4D8B11                  	mov r10, qword [r9]
  4969 0000285E 4D8910                  	mov qword [r8], r10
  4970 00002861 4983E808                	sub r8, 8
  4971 00002865 4983E908                	sub r9, 8
  4972 00002869 48FFC9                  	dec rcx
  4973 0000286C EBE7                    	jmp .L_tc_recycle_frame_loop_001d
  4974                                  .L_tc_recycle_frame_done_001d:
  4975 0000286E 498D6008                	lea rsp, [r8 + 8]
  4976 00002872 5D                      	pop rbp ; restore the old rbp
  4977 00002873 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4978 00002876 EB0A                    	jmp .L_if_end_0001
  4979                                  .L_if_else_0001:
  4980 00002878 48B8-                   	mov rax, L_constants + 2
  4980 0000287A [0200000000000000] 
  4981                                  .L_if_end_0001:
  4982                                  .L_or_end_0001:
  4983 00002882 C9                      	leave
  4984 00002883 C21800                  	ret AND_KILL_FRAME(1)
  4985                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4986 00002886 48890425[25140000]      	mov qword [free_var_96], rax
  4987 0000288E 48B8-                   	mov rax, sob_void
  4987 00002890 [0000000000000000] 
  4988                                  
  4989 00002898 4889C7                  	mov rdi, rax
  4990 0000289B E80A500100              	call print_sexpr_if_not_void
  4991 000028A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4992 000028A5 E8AB4D0100              	call malloc
  4993 000028AA 50                      	push rax
  4994 000028AB BF00000000              	mov rdi, 8 * 0	; new rib
  4995 000028B0 E8A04D0100              	call malloc
  4996 000028B5 50                      	push rax
  4997 000028B6 BF08000000              	mov rdi, 8 * 1	; extended env
  4998 000028BB E8954D0100              	call malloc
  4999 000028C0 488B7D10                	mov rdi, ENV
  5000 000028C4 4831F6                  	 xor rsi, rsi
  5001 000028C7 4831D2                  	 xor rdx, rdx
  5002 000028CA 48FFC2                  	inc rdx
  5003                                  .L_lambda_opt_env_loop_0001:	; 
  5004 000028CD 4883FE00                	cmp rsi, 0
  5005 000028D1 7410                    	je .L_lambda_opt_env_end_0001
  5006 000028D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5007 000028D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5008 000028DB 48FFC6                  	inc rsi
  5009 000028DE 48FFC2                  	inc rdx
  5010 000028E1 EBEA                    	jmp .L_lambda_opt_env_loop_0001
  5011                                  .L_lambda_opt_env_end_0001:
  5012 000028E3 5B                      	pop rbx
  5013 000028E4 4831F6                  	xor rsi, rsi
  5014                                  .L_lambda_opt_params_loop_0001:	; copy params
  5015 000028E7 4883FE00                	cmp rsi, 0
  5016 000028EB 740E                    	je .L_lambda_opt_params_end_0001
  5017 000028ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5018 000028F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5019 000028F6 48FFC6                  	inc rsi
  5020 000028F9 EBEC                    	jmp .L_lambda_opt_params_loop_0001
  5021                                  .L_lambda_opt_params_end_0001:
  5022 000028FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5023 000028FE 4889C3                  	mov rbx, rax
  5024 00002901 58                      	pop rax
  5025 00002902 C60004                  	mov byte [rax], T_closure
  5026 00002905 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5027 00002909 48C74009[16290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  5028 00002911 E9FE000000              	jmp .L_lambda_opt_end_0001
  5029                                  .L_lambda_opt_code_0001:
  5030 00002916 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  5031 0000291B 4983FF00                	cmp r15, 0
  5032 0000291F 7409                    	je .L_lambda_opt_arity_check_exact_0001
  5033 00002921 7F57                    	jg .L_lambda_opt_arity_check_more_0001
  5034 00002923 6A00                    	push 0
  5035 00002925 E9F84C0100              	jmp L_error_incorrect_arity_opt
  5036                                  .L_lambda_opt_arity_check_exact_0001: ;Exact case
  5037 0000292A 4C8B0424                	mov r8, qword [rsp -8 * 0]
  5038 0000292E 4C894424F8              	mov qword [rsp -8], r8
  5039 00002933 4C8B442408              	mov r8, qword [rsp +8]
  5040 00002938 4C890424                	mov qword [rsp +8 * 0], r8
  5041 0000293C 4C8B442410              	mov r8, qword [rsp +8 * 2]
  5042 00002941 4C89C1                  	mov rcx, r8
  5043 00002944 49FFC0                  	inc r8
  5044 00002947 4C89442408              	mov qword [rsp +8], r8
  5045 0000294C 4889E2                  	mov rdx, rsp
  5046 0000294F 4883C218                	add rdx, 24
  5047                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0001:
  5048 00002953 4883F900                	cmp rcx, 0
  5049 00002957 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0001
  5050 00002959 4C8B02                  	mov r8, qword [rdx]
  5051 0000295C 4C8942F8                	mov qword [rdx - 8], r8
  5052 00002960 4883C208                	add rdx, 8
  5053 00002964 48FFC9                  	dec rcx
  5054 00002967 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0001
  5055                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0001:
  5056 00002969 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5057 00002971 4883EC08                	sub rsp, 8
  5058 00002975 E985000000              	jmp .L_lambda_opt_stack_adjusted_0001
  5059                                  .L_lambda_opt_arity_check_more_0001:
  5060 0000297A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5061 0000297F 4D89C4                  	mov r12, r8
  5062 00002982 4C89C1                  	mov rcx, r8
  5063 00002985 4D8D6802                	lea r13, [r8 + 2] 
  5064 00002989 4883E900                	sub rcx, 0
  5065 0000298D 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  5066 00002992 49BE-                   	mov r14, sob_nil
  5066 00002994 [0100000000000000] 
  5067                                  .L_lambda_opt_create_list_of_opt_params_0001:
  5068 0000299C 4883F900                	cmp rcx, 0
  5069 000029A0 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0001
  5070 000029A2 BF11000000              	mov rdi, 17
  5071 000029A7 E8A94C0100              	call malloc
  5072 000029AC C60021                  	mov byte [rax], T_pair
  5073 000029AF 498B1B                  	mov rbx, qword [r11]
  5074 000029B2 48895801                	mov qword [rax +1], rbx
  5075 000029B6 4C897009                	mov qword [rax + 1 + 8], r14
  5076 000029BA 4989C6                  	mov r14, rax
  5077 000029BD 48FFC9                  	dec rcx
  5078 000029C0 4983EB08                	sub r11, 8
  5079 000029C4 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0001
  5080                                  .L_lambda_opt_create_list_of_opt_params_end_0001:
  5081 000029C6 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
  5082 000029CB 4D8932                  	mov qword [r10], r14
  5083 000029CE 4E8D2CED00000000        	lea r13, [8 * r13]
  5084 000029D6 4901E5                  	add r13, rsp
  5085 000029D9 B904000000              	mov rcx, 4 + 0
  5086                                  .L_lambda_opt_stack_shrink_loop_0001:
  5087 000029DE 4883F900                	cmp rcx, 0
  5088 000029E2 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0001
  5089 000029E4 4D8B1A                  	mov r11, qword [r10]
  5090 000029E7 4D895D00                	mov qword [r13], r11
  5091 000029EB 4983EA08                	sub r10, 8
  5092 000029EF 4983ED08                	sub r13, 8
  5093 000029F3 48FFC9                  	dec rcx
  5094 000029F6 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  5095                                  .L_lambda_opt_stack_shrink_loop_exit_0001:
  5096 000029F8 4983C508                	add r13, 8
  5097 000029FC 4C89EC                  	mov rsp, r13
  5098                                  .L_lambda_opt_stack_adjusted_0001:
  5099 000029FF 48C744241001000000      	mov qword [rsp + 8*2], 1
  5100 00002A08 C8000000                	enter 0, 0
  5101 00002A0C 488B4520                	mov rax, PARAM(0)	; param args
  5102 00002A10 C9                      	leave
  5103 00002A11 C21800                  	ret 8 * (2 + 1)
  5104                                  .L_lambda_opt_end_0001:	; new closure is in rax
  5105 00002A14 48890425[E1130000]      	mov qword [free_var_92], rax
  5106 00002A1C 48B8-                   	mov rax, sob_void
  5106 00002A1E [0000000000000000] 
  5107                                  
  5108 00002A26 4889C7                  	mov rdi, rax
  5109 00002A29 E87C4E0100              	call print_sexpr_if_not_void
  5110 00002A2E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5111 00002A33 E81D4C0100              	call malloc
  5112 00002A38 50                      	push rax
  5113 00002A39 BF00000000              	mov rdi, 8 * 0	; new rib
  5114 00002A3E E8124C0100              	call malloc
  5115 00002A43 50                      	push rax
  5116 00002A44 BF08000000              	mov rdi, 8 * 1	; extended env
  5117 00002A49 E8074C0100              	call malloc
  5118 00002A4E 488B7D10                	mov rdi, ENV
  5119 00002A52 BE00000000              	mov rsi, 0
  5120 00002A57 BA01000000              	mov rdx, 1
  5121                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  5122 00002A5C 4883FE00                	cmp rsi, 0
  5123 00002A60 7410                    	je .L_lambda_simple_env_end_001e
  5124 00002A62 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5125 00002A66 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5126 00002A6A 48FFC6                  	inc rsi
  5127 00002A6D 48FFC2                  	inc rdx
  5128 00002A70 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  5129                                  .L_lambda_simple_env_end_001e:
  5130 00002A72 5B                      	pop rbx
  5131 00002A73 BE00000000              	mov rsi, 0
  5132                                  .L_lambda_simple_params_loop_001e:	; copy params
  5133 00002A78 4883FE00                	cmp rsi, 0
  5134 00002A7C 740E                    	je .L_lambda_simple_params_end_001e
  5135 00002A7E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5136 00002A83 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5137 00002A87 48FFC6                  	inc rsi
  5138 00002A8A EBEC                    	jmp .L_lambda_simple_params_loop_001e
  5139                                  .L_lambda_simple_params_end_001e:
  5140 00002A8C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5141 00002A8F 4889C3                  	mov rbx, rax
  5142 00002A92 58                      	pop rax
  5143 00002A93 C60004                  	mov byte [rax], T_closure
  5144 00002A96 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5145 00002A9A 48C74009[A42A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  5146 00002AA2 EB3D                    	jmp .L_lambda_simple_end_001e
  5147                                  .L_lambda_simple_code_001e:	; lambda-simple body
  5148 00002AA4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5149 00002AAA 740B                    	je .L_lambda_simple_arity_check_ok_001e
  5150 00002AAC FF742410                	push qword [rsp + 8 * 2]
  5151 00002AB0 6A01                    	push 1
  5152 00002AB2 E9574B0100              	jmp L_error_incorrect_arity_simple
  5153                                  .L_lambda_simple_arity_check_ok_001e:
  5154 00002AB7 C8000000                	enter 0, 0
  5155 00002ABB 488B4520                	mov rax, PARAM(0)	; param x
  5156 00002ABF 483D[02000000]          	cmp rax, sob_boolean_false
  5157 00002AC5 740C                    	je .L_if_else_0002
  5158 00002AC7 48B8-                   	mov rax, L_constants + 2
  5158 00002AC9 [0200000000000000] 
  5159 00002AD1 EB0A                    	jmp .L_if_end_0002
  5160                                  .L_if_else_0002:
  5161 00002AD3 48B8-                   	mov rax, L_constants + 3
  5161 00002AD5 [0300000000000000] 
  5162                                  .L_if_end_0002:
  5163 00002ADD C9                      	leave
  5164 00002ADE C21800                  	ret AND_KILL_FRAME(1)
  5165                                  .L_lambda_simple_end_001e:	; new closure is in rax
  5166 00002AE1 48890425[CF140000]      	mov qword [free_var_106], rax
  5167 00002AE9 48B8-                   	mov rax, sob_void
  5167 00002AEB [0000000000000000] 
  5168                                  
  5169 00002AF3 4889C7                  	mov rdi, rax
  5170 00002AF6 E8AF4D0100              	call print_sexpr_if_not_void
  5171 00002AFB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5172 00002B00 E8504B0100              	call malloc
  5173 00002B05 50                      	push rax
  5174 00002B06 BF00000000              	mov rdi, 8 * 0	; new rib
  5175 00002B0B E8454B0100              	call malloc
  5176 00002B10 50                      	push rax
  5177 00002B11 BF08000000              	mov rdi, 8 * 1	; extended env
  5178 00002B16 E83A4B0100              	call malloc
  5179 00002B1B 488B7D10                	mov rdi, ENV
  5180 00002B1F BE00000000              	mov rsi, 0
  5181 00002B24 BA01000000              	mov rdx, 1
  5182                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  5183 00002B29 4883FE00                	cmp rsi, 0
  5184 00002B2D 7410                    	je .L_lambda_simple_env_end_001f
  5185 00002B2F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5186 00002B33 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5187 00002B37 48FFC6                  	inc rsi
  5188 00002B3A 48FFC2                  	inc rdx
  5189 00002B3D EBEA                    	jmp .L_lambda_simple_env_loop_001f
  5190                                  .L_lambda_simple_env_end_001f:
  5191 00002B3F 5B                      	pop rbx
  5192 00002B40 BE00000000              	mov rsi, 0
  5193                                  .L_lambda_simple_params_loop_001f:	; copy params
  5194 00002B45 4883FE00                	cmp rsi, 0
  5195 00002B49 740E                    	je .L_lambda_simple_params_end_001f
  5196 00002B4B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5197 00002B50 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5198 00002B54 48FFC6                  	inc rsi
  5199 00002B57 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  5200                                  .L_lambda_simple_params_end_001f:
  5201 00002B59 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5202 00002B5C 4889C3                  	mov rbx, rax
  5203 00002B5F 58                      	pop rax
  5204 00002B60 C60004                  	mov byte [rax], T_closure
  5205 00002B63 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5206 00002B67 48C74009[742B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  5207 00002B6F E9B0000000              	jmp .L_lambda_simple_end_001f
  5208                                  .L_lambda_simple_code_001f:	; lambda-simple body
  5209 00002B74 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5210 00002B7A 740B                    	je .L_lambda_simple_arity_check_ok_001f
  5211 00002B7C FF742410                	push qword [rsp + 8 * 2]
  5212 00002B80 6A01                    	push 1
  5213 00002B82 E9874A0100              	jmp L_error_incorrect_arity_simple
  5214                                  .L_lambda_simple_arity_check_ok_001f:
  5215 00002B87 C8000000                	enter 0, 0
  5216                                  	; preparing a non-tail-call
  5217 00002B8B 488B4520                	mov rax, PARAM(0)	; param q
  5218 00002B8F 50                      	push rax
  5219 00002B90 6A01                    	push 1	; arg count
  5220 00002B92 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  5221 00002B9A 803805                  	cmp byte [rax], T_undefined
  5222 00002B9D 0F8485490100            	je L_error_fvar_undefined
  5223 00002BA3 803804                  	cmp byte [rax], T_closure
  5224 00002BA6 0F85004A0100            	jne L_error_non_closure
  5225 00002BAC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5226 00002BAF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5227 00002BB2 483D[02000000]          	cmp rax, sob_boolean_false
  5228 00002BB8 7566                    	jne .L_or_end_0002
  5229                                  	; preparing a tail-call
  5230 00002BBA 488B4520                	mov rax, PARAM(0)	; param q
  5231 00002BBE 50                      	push rax
  5232 00002BBF 6A01                    	push 1	; arg count
  5233 00002BC1 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  5234 00002BC9 803805                  	cmp byte [rax], T_undefined
  5235 00002BCC 0F8456490100            	je L_error_fvar_undefined
  5236 00002BD2 803804                  	cmp byte [rax], T_closure
  5237 00002BD5 0F85D1490100            	jne L_error_non_closure
  5238 00002BDB FF7001                  	push SOB_CLOSURE_ENV(rax)
  5239 00002BDE FF7508                  	push qword [rbp + 8 * 1]
  5240                                   ; old ret addr
  5241 00002BE1 FF7500                  	push qword [rbp]
  5242                                   ; restore the old rbp
  5243 00002BE4 BB01000000              	mov rbx, 1
  5244 00002BE9 4883C303                	add rbx, 3
  5245 00002BED 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5246 00002BF1 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5247 00002BF6 4C8D4DF8                	lea r9, [rbp - 8]
  5248 00002BFA B905000000              	mov rcx, 5
  5249                                  .L_tc_recycle_frame_loop_001e:
  5250 00002BFF 4883F900                	cmp rcx, 0
  5251 00002C03 7413                    	je .L_tc_recycle_frame_done_001e
  5252 00002C05 4D8B11                  	mov r10, qword [r9]
  5253 00002C08 4D8910                  	mov qword [r8], r10
  5254 00002C0B 4983E808                	sub r8, 8
  5255 00002C0F 4983E908                	sub r9, 8
  5256 00002C13 48FFC9                  	dec rcx
  5257 00002C16 EBE7                    	jmp .L_tc_recycle_frame_loop_001e
  5258                                  .L_tc_recycle_frame_done_001e:
  5259 00002C18 498D6008                	lea rsp, [r8 + 8]
  5260 00002C1C 5D                      	pop rbp ; restore the old rbp
  5261 00002C1D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5262                                  .L_or_end_0002:
  5263 00002C20 C9                      	leave
  5264 00002C21 C21800                  	ret AND_KILL_FRAME(1)
  5265                                  .L_lambda_simple_end_001f:	; new closure is in rax
  5266 00002C24 48890425[57150000]      	mov qword [free_var_114], rax
  5267 00002C2C 48B8-                   	mov rax, sob_void
  5267 00002C2E [0000000000000000] 
  5268                                  
  5269 00002C36 4889C7                  	mov rdi, rax
  5270 00002C39 E86C4C0100              	call print_sexpr_if_not_void
  5271                                  	; preparing a non-tail-call
  5272 00002C3E 48B8-                   	mov rax, L_constants + 1993
  5272 00002C40 [C907000000000000] 
  5273 00002C48 50                      	push rax
  5274 00002C49 6A01                    	push 1	; arg count
  5275 00002C4B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5276 00002C50 E8004A0100              	call malloc
  5277 00002C55 50                      	push rax
  5278 00002C56 BF00000000              	mov rdi, 8 * 0	; new rib
  5279 00002C5B E8F5490100              	call malloc
  5280 00002C60 50                      	push rax
  5281 00002C61 BF08000000              	mov rdi, 8 * 1	; extended env
  5282 00002C66 E8EA490100              	call malloc
  5283 00002C6B 488B7D10                	mov rdi, ENV
  5284 00002C6F BE00000000              	mov rsi, 0
  5285 00002C74 BA01000000              	mov rdx, 1
  5286                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  5287 00002C79 4883FE00                	cmp rsi, 0
  5288 00002C7D 7410                    	je .L_lambda_simple_env_end_0020
  5289 00002C7F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5290 00002C83 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5291 00002C87 48FFC6                  	inc rsi
  5292 00002C8A 48FFC2                  	inc rdx
  5293 00002C8D EBEA                    	jmp .L_lambda_simple_env_loop_0020
  5294                                  .L_lambda_simple_env_end_0020:
  5295 00002C8F 5B                      	pop rbx
  5296 00002C90 BE00000000              	mov rsi, 0
  5297                                  .L_lambda_simple_params_loop_0020:	; copy params
  5298 00002C95 4883FE00                	cmp rsi, 0
  5299 00002C99 740E                    	je .L_lambda_simple_params_end_0020
  5300 00002C9B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5301 00002CA0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5302 00002CA4 48FFC6                  	inc rsi
  5303 00002CA7 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  5304                                  .L_lambda_simple_params_end_0020:
  5305 00002CA9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5306 00002CAC 4889C3                  	mov rbx, rax
  5307 00002CAF 58                      	pop rax
  5308 00002CB0 C60004                  	mov byte [rax], T_closure
  5309 00002CB3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5310 00002CB7 48C74009[C42C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  5311 00002CBF E9C3030000              	jmp .L_lambda_simple_end_0020
  5312                                  .L_lambda_simple_code_0020:	; lambda-simple body
  5313 00002CC4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5314 00002CCA 740B                    	je .L_lambda_simple_arity_check_ok_0020
  5315 00002CCC FF742410                	push qword [rsp + 8 * 2]
  5316 00002CD0 6A01                    	push 1
  5317 00002CD2 E937490100              	jmp L_error_incorrect_arity_simple
  5318                                  .L_lambda_simple_arity_check_ok_0020:
  5319 00002CD7 C8000000                	enter 0, 0
  5320 00002CDB BF08000000              	mov rdi, 8*1
  5321 00002CE0 E870490100              	call malloc
  5322 00002CE5 488B5D20                	mov rbx, PARAM(0)
  5323 00002CE9 488918                  	mov qword [rax], rbx
  5324 00002CEC 48894520                	mov PARAM(0), rax
  5325 00002CF0 48B8-                   	mov rax, sob_void
  5325 00002CF2 [0000000000000000] 
  5326                                  
  5327 00002CFA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5328 00002CFF E851490100              	call malloc
  5329 00002D04 50                      	push rax
  5330 00002D05 BF08000000              	mov rdi, 8 * 1	; new rib
  5331 00002D0A E846490100              	call malloc
  5332 00002D0F 50                      	push rax
  5333 00002D10 BF10000000              	mov rdi, 8 * 2	; extended env
  5334 00002D15 E83B490100              	call malloc
  5335 00002D1A 488B7D10                	mov rdi, ENV
  5336 00002D1E BE00000000              	mov rsi, 0
  5337 00002D23 BA01000000              	mov rdx, 1
  5338                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  5339 00002D28 4883FE01                	cmp rsi, 1
  5340 00002D2C 7410                    	je .L_lambda_simple_env_end_0021
  5341 00002D2E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5342 00002D32 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5343 00002D36 48FFC6                  	inc rsi
  5344 00002D39 48FFC2                  	inc rdx
  5345 00002D3C EBEA                    	jmp .L_lambda_simple_env_loop_0021
  5346                                  .L_lambda_simple_env_end_0021:
  5347 00002D3E 5B                      	pop rbx
  5348 00002D3F BE00000000              	mov rsi, 0
  5349                                  .L_lambda_simple_params_loop_0021:	; copy params
  5350 00002D44 4883FE01                	cmp rsi, 1
  5351 00002D48 740E                    	je .L_lambda_simple_params_end_0021
  5352 00002D4A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5353 00002D4F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5354 00002D53 48FFC6                  	inc rsi
  5355 00002D56 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  5356                                  .L_lambda_simple_params_end_0021:
  5357 00002D58 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5358 00002D5B 4889C3                  	mov rbx, rax
  5359 00002D5E 58                      	pop rax
  5360 00002D5F C60004                  	mov byte [rax], T_closure
  5361 00002D62 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5362 00002D66 48C74009[732D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  5363 00002D6E E928010000              	jmp .L_lambda_simple_end_0021
  5364                                  .L_lambda_simple_code_0021:	; lambda-simple body
  5365 00002D73 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5366 00002D79 740B                    	je .L_lambda_simple_arity_check_ok_0021
  5367 00002D7B FF742410                	push qword [rsp + 8 * 2]
  5368 00002D7F 6A02                    	push 2
  5369 00002D81 E988480100              	jmp L_error_incorrect_arity_simple
  5370                                  .L_lambda_simple_arity_check_ok_0021:
  5371 00002D86 C8000000                	enter 0, 0
  5372                                  	; preparing a non-tail-call
  5373 00002D8A 488B4528                	mov rax, PARAM(1)	; param s
  5374 00002D8E 50                      	push rax
  5375 00002D8F 6A01                    	push 1	; arg count
  5376 00002D91 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  5377 00002D99 803805                  	cmp byte [rax], T_undefined
  5378 00002D9C 0F8486470100            	je L_error_fvar_undefined
  5379 00002DA2 803804                  	cmp byte [rax], T_closure
  5380 00002DA5 0F8501480100            	jne L_error_non_closure
  5381 00002DAB FF7001                  	push SOB_CLOSURE_ENV(rax)
  5382 00002DAE FF5009                  	call SOB_CLOSURE_CODE(rax)
  5383 00002DB1 483D[02000000]          	cmp rax, sob_boolean_false
  5384 00002DB7 7409                    	je .L_if_else_0003
  5385 00002DB9 488B4520                	mov rax, PARAM(0)	; param a
  5386 00002DBD E9D5000000              	jmp .L_if_end_0003
  5387                                  .L_if_else_0003:
  5388                                  	; preparing a tail-call
  5389                                  	; preparing a non-tail-call
  5390                                  	; preparing a non-tail-call
  5391 00002DC2 488B4528                	mov rax, PARAM(1)	; param s
  5392 00002DC6 50                      	push rax
  5393 00002DC7 6A01                    	push 1	; arg count
  5394 00002DC9 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5395 00002DD1 803805                  	cmp byte [rax], T_undefined
  5396 00002DD4 0F844E470100            	je L_error_fvar_undefined
  5397 00002DDA 803804                  	cmp byte [rax], T_closure
  5398 00002DDD 0F85C9470100            	jne L_error_non_closure
  5399 00002DE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5400 00002DE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5401 00002DE9 50                      	push rax
  5402                                  	; preparing a non-tail-call
  5403 00002DEA 488B4528                	mov rax, PARAM(1)	; param s
  5404 00002DEE 50                      	push rax
  5405 00002DEF 6A01                    	push 1	; arg count
  5406 00002DF1 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5407 00002DF9 803805                  	cmp byte [rax], T_undefined
  5408 00002DFC 0F8426470100            	je L_error_fvar_undefined
  5409 00002E02 803804                  	cmp byte [rax], T_closure
  5410 00002E05 0F85A1470100            	jne L_error_non_closure
  5411 00002E0B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5412 00002E0E FF5009                  	call SOB_CLOSURE_CODE(rax)
  5413 00002E11 50                      	push rax
  5414 00002E12 6A02                    	push 2	; arg count
  5415 00002E14 488B4510                	mov rax, ENV
  5416 00002E18 488B00                  	mov rax, qword [rax + 8 * 0]
  5417 00002E1B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5418 00002E1E 488B00                  	mov rax, qword [rax]
  5419 00002E21 803804                  	cmp byte [rax], T_closure
  5420 00002E24 0F8582470100            	jne L_error_non_closure
  5421 00002E2A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5422 00002E2D FF5009                  	call SOB_CLOSURE_CODE(rax)
  5423 00002E30 50                      	push rax
  5424 00002E31 488B4520                	mov rax, PARAM(0)	; param a
  5425 00002E35 50                      	push rax
  5426 00002E36 6A02                    	push 2	; arg count
  5427 00002E38 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5428 00002E40 803805                  	cmp byte [rax], T_undefined
  5429 00002E43 0F84DF460100            	je L_error_fvar_undefined
  5430 00002E49 803804                  	cmp byte [rax], T_closure
  5431 00002E4C 0F855A470100            	jne L_error_non_closure
  5432 00002E52 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5433 00002E55 FF7508                  	push qword [rbp + 8 * 1]
  5434                                   ; old ret addr
  5435 00002E58 FF7500                  	push qword [rbp]
  5436                                   ; restore the old rbp
  5437 00002E5B BB02000000              	mov rbx, 2
  5438 00002E60 4883C303                	add rbx, 3
  5439 00002E64 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5440 00002E68 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5441 00002E6D 4C8D4DF8                	lea r9, [rbp - 8]
  5442 00002E71 B906000000              	mov rcx, 6
  5443                                  .L_tc_recycle_frame_loop_001f:
  5444 00002E76 4883F900                	cmp rcx, 0
  5445 00002E7A 7413                    	je .L_tc_recycle_frame_done_001f
  5446 00002E7C 4D8B11                  	mov r10, qword [r9]
  5447 00002E7F 4D8910                  	mov qword [r8], r10
  5448 00002E82 4983E808                	sub r8, 8
  5449 00002E86 4983E908                	sub r9, 8
  5450 00002E8A 48FFC9                  	dec rcx
  5451 00002E8D EBE7                    	jmp .L_tc_recycle_frame_loop_001f
  5452                                  .L_tc_recycle_frame_done_001f:
  5453 00002E8F 498D6008                	lea rsp, [r8 + 8]
  5454 00002E93 5D                      	pop rbp ; restore the old rbp
  5455 00002E94 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5456                                  .L_if_end_0003:
  5457 00002E97 C9                      	leave
  5458 00002E98 C22000                  	ret AND_KILL_FRAME(2)
  5459                                  .L_lambda_simple_end_0021:	; new closure is in rax
  5460 00002E9B 50                      	push rax
  5461 00002E9C 488B4520                	mov rax, PARAM(0)	; param run
  5462 00002EA0 8F00                    	pop qword [rax]
  5463 00002EA2 48B8-                   	mov rax, sob_void
  5463 00002EA4 [0000000000000000] 
  5464                                  
  5465 00002EAC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5466 00002EB1 E89F470100              	call malloc
  5467 00002EB6 50                      	push rax
  5468 00002EB7 BF08000000              	mov rdi, 8 * 1	; new rib
  5469 00002EBC E894470100              	call malloc
  5470 00002EC1 50                      	push rax
  5471 00002EC2 BF10000000              	mov rdi, 8 * 2	; extended env
  5472 00002EC7 E889470100              	call malloc
  5473 00002ECC 488B7D10                	mov rdi, ENV
  5474 00002ED0 4831F6                  	 xor rsi, rsi
  5475 00002ED3 4831D2                  	 xor rdx, rdx
  5476 00002ED6 48FFC2                  	inc rdx
  5477                                  .L_lambda_opt_env_loop_0002:	; 
  5478 00002ED9 4883FE01                	cmp rsi, 1
  5479 00002EDD 7410                    	je .L_lambda_opt_env_end_0002
  5480 00002EDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5481 00002EE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5482 00002EE7 48FFC6                  	inc rsi
  5483 00002EEA 48FFC2                  	inc rdx
  5484 00002EED EBEA                    	jmp .L_lambda_opt_env_loop_0002
  5485                                  .L_lambda_opt_env_end_0002:
  5486 00002EEF 5B                      	pop rbx
  5487 00002EF0 4831F6                  	xor rsi, rsi
  5488                                  .L_lambda_opt_params_loop_0002:	; copy params
  5489 00002EF3 4883FE01                	cmp rsi, 1
  5490 00002EF7 740E                    	je .L_lambda_opt_params_end_0002
  5491 00002EF9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5492 00002EFE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5493 00002F02 48FFC6                  	inc rsi
  5494 00002F05 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  5495                                  .L_lambda_opt_params_end_0002:
  5496 00002F07 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5497 00002F0A 4889C3                  	mov rbx, rax
  5498 00002F0D 58                      	pop rax
  5499 00002F0E C60004                  	mov byte [rax], T_closure
  5500 00002F11 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5501 00002F15 48C74009[222F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5502 00002F1D E961010000              	jmp .L_lambda_opt_end_0002
  5503                                  .L_lambda_opt_code_0002:
  5504 00002F22 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  5505 00002F27 4983FF01                	cmp r15, 1
  5506 00002F2B 7409                    	je .L_lambda_opt_arity_check_exact_0002
  5507 00002F2D 7F57                    	jg .L_lambda_opt_arity_check_more_0002
  5508 00002F2F 6A01                    	push 1
  5509 00002F31 E9EC460100              	jmp L_error_incorrect_arity_opt
  5510                                  .L_lambda_opt_arity_check_exact_0002: ;Exact case
  5511 00002F36 4C8B0424                	mov r8, qword [rsp -8 * 0]
  5512 00002F3A 4C894424F8              	mov qword [rsp -8], r8
  5513 00002F3F 4C8B442408              	mov r8, qword [rsp +8]
  5514 00002F44 4C890424                	mov qword [rsp +8 * 0], r8
  5515 00002F48 4C8B442410              	mov r8, qword [rsp +8 * 2]
  5516 00002F4D 4C89C1                  	mov rcx, r8
  5517 00002F50 49FFC0                  	inc r8
  5518 00002F53 4C89442408              	mov qword [rsp +8], r8
  5519 00002F58 4889E2                  	mov rdx, rsp
  5520 00002F5B 4883C218                	add rdx, 24
  5521                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0002:
  5522 00002F5F 4883F900                	cmp rcx, 0
  5523 00002F63 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0002
  5524 00002F65 4C8B02                  	mov r8, qword [rdx]
  5525 00002F68 4C8942F8                	mov qword [rdx - 8], r8
  5526 00002F6C 4883C208                	add rdx, 8
  5527 00002F70 48FFC9                  	dec rcx
  5528 00002F73 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0002
  5529                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0002:
  5530 00002F75 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5531 00002F7D 4883EC08                	sub rsp, 8
  5532 00002F81 E985000000              	jmp .L_lambda_opt_stack_adjusted_0002
  5533                                  .L_lambda_opt_arity_check_more_0002:
  5534 00002F86 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5535 00002F8B 4D89C4                  	mov r12, r8
  5536 00002F8E 4C89C1                  	mov rcx, r8
  5537 00002F91 4D8D6802                	lea r13, [r8 + 2] 
  5538 00002F95 4883E901                	sub rcx, 1
  5539 00002F99 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  5540 00002F9E 49BE-                   	mov r14, sob_nil
  5540 00002FA0 [0100000000000000] 
  5541                                  .L_lambda_opt_create_list_of_opt_params_0002:
  5542 00002FA8 4883F900                	cmp rcx, 0
  5543 00002FAC 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0002
  5544 00002FAE BF11000000              	mov rdi, 17
  5545 00002FB3 E89D460100              	call malloc
  5546 00002FB8 C60021                  	mov byte [rax], T_pair
  5547 00002FBB 498B1B                  	mov rbx, qword [r11]
  5548 00002FBE 48895801                	mov qword [rax +1], rbx
  5549 00002FC2 4C897009                	mov qword [rax + 1 + 8], r14
  5550 00002FC6 4989C6                  	mov r14, rax
  5551 00002FC9 48FFC9                  	dec rcx
  5552 00002FCC 4983EB08                	sub r11, 8
  5553 00002FD0 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0002
  5554                                  .L_lambda_opt_create_list_of_opt_params_end_0002:
  5555 00002FD2 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
  5556 00002FD7 4D8932                  	mov qword [r10], r14
  5557 00002FDA 4E8D2CED00000000        	lea r13, [8 * r13]
  5558 00002FE2 4901E5                  	add r13, rsp
  5559 00002FE5 B905000000              	mov rcx, 4 + 1
  5560                                  .L_lambda_opt_stack_shrink_loop_0002:
  5561 00002FEA 4883F900                	cmp rcx, 0
  5562 00002FEE 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0002
  5563 00002FF0 4D8B1A                  	mov r11, qword [r10]
  5564 00002FF3 4D895D00                	mov qword [r13], r11
  5565 00002FF7 4983EA08                	sub r10, 8
  5566 00002FFB 4983ED08                	sub r13, 8
  5567 00002FFF 48FFC9                  	dec rcx
  5568 00003002 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5569                                  .L_lambda_opt_stack_shrink_loop_exit_0002:
  5570 00003004 4983C508                	add r13, 8
  5571 00003008 4C89EC                  	mov rsp, r13
  5572                                  .L_lambda_opt_stack_adjusted_0002:
  5573 0000300B 48C744241002000000      	mov qword [rsp + 8*2], 2
  5574 00003014 C8000000                	enter 0, 0
  5575                                  	; preparing a tail-call
  5576 00003018 488B4528                	mov rax, PARAM(1)	; param s
  5577 0000301C 50                      	push rax
  5578 0000301D 488B4520                	mov rax, PARAM(0)	; param a
  5579 00003021 50                      	push rax
  5580 00003022 6A02                    	push 2	; arg count
  5581 00003024 488B4510                	mov rax, ENV
  5582 00003028 488B00                  	mov rax, qword [rax + 8 * 0]
  5583 0000302B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5584 0000302E 488B00                  	mov rax, qword [rax]
  5585 00003031 803804                  	cmp byte [rax], T_closure
  5586 00003034 0F8572450100            	jne L_error_non_closure
  5587 0000303A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5588 0000303D FF7508                  	push qword [rbp + 8 * 1]
  5589                                   ; old ret addr
  5590 00003040 FF7500                  	push qword [rbp]
  5591                                   ; restore the old rbp
  5592 00003043 BB02000000              	mov rbx, 2
  5593 00003048 4883C303                	add rbx, 3
  5594 0000304C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5595 00003050 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5596 00003055 4C8D4DF8                	lea r9, [rbp - 8]
  5597 00003059 B906000000              	mov rcx, 6
  5598                                  .L_tc_recycle_frame_loop_0020:
  5599 0000305E 4883F900                	cmp rcx, 0
  5600 00003062 7413                    	je .L_tc_recycle_frame_done_0020
  5601 00003064 4D8B11                  	mov r10, qword [r9]
  5602 00003067 4D8910                  	mov qword [r8], r10
  5603 0000306A 4983E808                	sub r8, 8
  5604 0000306E 4983E908                	sub r9, 8
  5605 00003072 48FFC9                  	dec rcx
  5606 00003075 EBE7                    	jmp .L_tc_recycle_frame_loop_0020
  5607                                  .L_tc_recycle_frame_done_0020:
  5608 00003077 498D6008                	lea rsp, [r8 + 8]
  5609 0000307B 5D                      	pop rbp ; restore the old rbp
  5610 0000307C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5611 0000307F C9                      	leave
  5612 00003080 C22000                  	ret 8 * (2 + 2)
  5613                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5614 00003083 C9                      	leave
  5615 00003084 C21800                  	ret AND_KILL_FRAME(1)
  5616                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5617 00003087 803804                  	cmp byte [rax], T_closure
  5618 0000308A 0F851C450100            	jne L_error_non_closure
  5619 00003090 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5620 00003093 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5621 00003096 48890425[F2130000]      	mov qword [free_var_93], rax
  5622 0000309E 48B8-                   	mov rax, sob_void
  5622 000030A0 [0000000000000000] 
  5623                                  
  5624 000030A8 4889C7                  	mov rdi, rax
  5625 000030AB E8FA470100              	call print_sexpr_if_not_void
  5626                                  	; preparing a non-tail-call
  5627 000030B0 48B8-                   	mov rax, L_constants + 1993
  5627 000030B2 [C907000000000000] 
  5628 000030BA 50                      	push rax
  5629 000030BB 6A01                    	push 1	; arg count
  5630 000030BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5631 000030C2 E88E450100              	call malloc
  5632 000030C7 50                      	push rax
  5633 000030C8 BF00000000              	mov rdi, 8 * 0	; new rib
  5634 000030CD E883450100              	call malloc
  5635 000030D2 50                      	push rax
  5636 000030D3 BF08000000              	mov rdi, 8 * 1	; extended env
  5637 000030D8 E878450100              	call malloc
  5638 000030DD 488B7D10                	mov rdi, ENV
  5639 000030E1 BE00000000              	mov rsi, 0
  5640 000030E6 BA01000000              	mov rdx, 1
  5641                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5642 000030EB 4883FE00                	cmp rsi, 0
  5643 000030EF 7410                    	je .L_lambda_simple_env_end_0022
  5644 000030F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5645 000030F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5646 000030F9 48FFC6                  	inc rsi
  5647 000030FC 48FFC2                  	inc rdx
  5648 000030FF EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5649                                  .L_lambda_simple_env_end_0022:
  5650 00003101 5B                      	pop rbx
  5651 00003102 BE00000000              	mov rsi, 0
  5652                                  .L_lambda_simple_params_loop_0022:	; copy params
  5653 00003107 4883FE00                	cmp rsi, 0
  5654 0000310B 740E                    	je .L_lambda_simple_params_end_0022
  5655 0000310D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5656 00003112 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5657 00003116 48FFC6                  	inc rsi
  5658 00003119 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5659                                  .L_lambda_simple_params_end_0022:
  5660 0000311B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5661 0000311E 4889C3                  	mov rbx, rax
  5662 00003121 58                      	pop rax
  5663 00003122 C60004                  	mov byte [rax], T_closure
  5664 00003125 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5665 00003129 48C74009[36310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5666 00003131 E932040000              	jmp .L_lambda_simple_end_0022
  5667                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5668 00003136 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5669 0000313C 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5670 0000313E FF742410                	push qword [rsp + 8 * 2]
  5671 00003142 6A01                    	push 1
  5672 00003144 E9C5440100              	jmp L_error_incorrect_arity_simple
  5673                                  .L_lambda_simple_arity_check_ok_0022:
  5674 00003149 C8000000                	enter 0, 0
  5675 0000314D BF08000000              	mov rdi, 8*1
  5676 00003152 E8FE440100              	call malloc
  5677 00003157 488B5D20                	mov rbx, PARAM(0)
  5678 0000315B 488918                  	mov qword [rax], rbx
  5679 0000315E 48894520                	mov PARAM(0), rax
  5680 00003162 48B8-                   	mov rax, sob_void
  5680 00003164 [0000000000000000] 
  5681                                  
  5682 0000316C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5683 00003171 E8DF440100              	call malloc
  5684 00003176 50                      	push rax
  5685 00003177 BF08000000              	mov rdi, 8 * 1	; new rib
  5686 0000317C E8D4440100              	call malloc
  5687 00003181 50                      	push rax
  5688 00003182 BF10000000              	mov rdi, 8 * 2	; extended env
  5689 00003187 E8C9440100              	call malloc
  5690 0000318C 488B7D10                	mov rdi, ENV
  5691 00003190 BE00000000              	mov rsi, 0
  5692 00003195 BA01000000              	mov rdx, 1
  5693                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5694 0000319A 4883FE01                	cmp rsi, 1
  5695 0000319E 7410                    	je .L_lambda_simple_env_end_0023
  5696 000031A0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5697 000031A4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5698 000031A8 48FFC6                  	inc rsi
  5699 000031AB 48FFC2                  	inc rdx
  5700 000031AE EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5701                                  .L_lambda_simple_env_end_0023:
  5702 000031B0 5B                      	pop rbx
  5703 000031B1 BE00000000              	mov rsi, 0
  5704                                  .L_lambda_simple_params_loop_0023:	; copy params
  5705 000031B6 4883FE01                	cmp rsi, 1
  5706 000031BA 740E                    	je .L_lambda_simple_params_end_0023
  5707 000031BC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5708 000031C1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5709 000031C5 48FFC6                  	inc rsi
  5710 000031C8 EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5711                                  .L_lambda_simple_params_end_0023:
  5712 000031CA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5713 000031CD 4889C3                  	mov rbx, rax
  5714 000031D0 58                      	pop rax
  5715 000031D1 C60004                  	mov byte [rax], T_closure
  5716 000031D4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5717 000031D8 48C74009[E5310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5718 000031E0 E929010000              	jmp .L_lambda_simple_end_0023
  5719                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5720 000031E5 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5721 000031EB 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5722 000031ED FF742410                	push qword [rsp + 8 * 2]
  5723 000031F1 6A02                    	push 2
  5724 000031F3 E916440100              	jmp L_error_incorrect_arity_simple
  5725                                  .L_lambda_simple_arity_check_ok_0023:
  5726 000031F8 C8000000                	enter 0, 0
  5727                                  	; preparing a non-tail-call
  5728 000031FC 488B4528                	mov rax, PARAM(1)	; param s
  5729 00003200 50                      	push rax
  5730 00003201 6A01                    	push 1	; arg count
  5731 00003203 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5732 0000320B 803805                  	cmp byte [rax], T_undefined
  5733 0000320E 0F8414430100            	je L_error_fvar_undefined
  5734 00003214 803804                  	cmp byte [rax], T_closure
  5735 00003217 0F858F430100            	jne L_error_non_closure
  5736 0000321D FF7001                  	push SOB_CLOSURE_ENV(rax)
  5737 00003220 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5738 00003223 483D[02000000]          	cmp rax, sob_boolean_false
  5739 00003229 0F84D7000000            	je .L_if_else_0004
  5740                                  	; preparing a tail-call
  5741                                  	; preparing a non-tail-call
  5742                                  	; preparing a non-tail-call
  5743 0000322F 488B4528                	mov rax, PARAM(1)	; param s
  5744 00003233 50                      	push rax
  5745 00003234 6A01                    	push 1	; arg count
  5746 00003236 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5747 0000323E 803805                  	cmp byte [rax], T_undefined
  5748 00003241 0F84E1420100            	je L_error_fvar_undefined
  5749 00003247 803804                  	cmp byte [rax], T_closure
  5750 0000324A 0F855C430100            	jne L_error_non_closure
  5751 00003250 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5752 00003253 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5753 00003256 50                      	push rax
  5754                                  	; preparing a non-tail-call
  5755 00003257 488B4528                	mov rax, PARAM(1)	; param s
  5756 0000325B 50                      	push rax
  5757 0000325C 6A01                    	push 1	; arg count
  5758 0000325E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5759 00003266 803805                  	cmp byte [rax], T_undefined
  5760 00003269 0F84B9420100            	je L_error_fvar_undefined
  5761 0000326F 803804                  	cmp byte [rax], T_closure
  5762 00003272 0F8534430100            	jne L_error_non_closure
  5763 00003278 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5764 0000327B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5765 0000327E 50                      	push rax
  5766 0000327F 6A02                    	push 2	; arg count
  5767 00003281 488B4510                	mov rax, ENV
  5768 00003285 488B00                  	mov rax, qword [rax + 8 * 0]
  5769 00003288 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5770 0000328B 488B00                  	mov rax, qword [rax]
  5771 0000328E 803804                  	cmp byte [rax], T_closure
  5772 00003291 0F8515430100            	jne L_error_non_closure
  5773 00003297 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5774 0000329A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5775 0000329D 50                      	push rax
  5776 0000329E 488B4520                	mov rax, PARAM(0)	; param a
  5777 000032A2 50                      	push rax
  5778 000032A3 6A02                    	push 2	; arg count
  5779 000032A5 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5780 000032AD 803805                  	cmp byte [rax], T_undefined
  5781 000032B0 0F8472420100            	je L_error_fvar_undefined
  5782 000032B6 803804                  	cmp byte [rax], T_closure
  5783 000032B9 0F85ED420100            	jne L_error_non_closure
  5784 000032BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  5785 000032C2 FF7508                  	push qword [rbp + 8 * 1]
  5786                                   ; old ret addr
  5787 000032C5 FF7500                  	push qword [rbp]
  5788                                   ; restore the old rbp
  5789 000032C8 BB02000000              	mov rbx, 2
  5790 000032CD 4883C303                	add rbx, 3
  5791 000032D1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5792 000032D5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5793 000032DA 4C8D4DF8                	lea r9, [rbp - 8]
  5794 000032DE B906000000              	mov rcx, 6
  5795                                  .L_tc_recycle_frame_loop_0021:
  5796 000032E3 4883F900                	cmp rcx, 0
  5797 000032E7 7413                    	je .L_tc_recycle_frame_done_0021
  5798 000032E9 4D8B11                  	mov r10, qword [r9]
  5799 000032EC 4D8910                  	mov qword [r8], r10
  5800 000032EF 4983E808                	sub r8, 8
  5801 000032F3 4983E908                	sub r9, 8
  5802 000032F7 48FFC9                  	dec rcx
  5803 000032FA EBE7                    	jmp .L_tc_recycle_frame_loop_0021
  5804                                  .L_tc_recycle_frame_done_0021:
  5805 000032FC 498D6008                	lea rsp, [r8 + 8]
  5806 00003300 5D                      	pop rbp ; restore the old rbp
  5807 00003301 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5808 00003304 EB04                    	jmp .L_if_end_0004
  5809                                  .L_if_else_0004:
  5810 00003306 488B4520                	mov rax, PARAM(0)	; param a
  5811                                  .L_if_end_0004:
  5812 0000330A C9                      	leave
  5813 0000330B C22000                  	ret AND_KILL_FRAME(2)
  5814                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5815 0000330E 50                      	push rax
  5816 0000330F 488B4520                	mov rax, PARAM(0)	; param run
  5817 00003313 8F00                    	pop qword [rax]
  5818 00003315 48B8-                   	mov rax, sob_void
  5818 00003317 [0000000000000000] 
  5819                                  
  5820 0000331F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5821 00003324 E82C430100              	call malloc
  5822 00003329 50                      	push rax
  5823 0000332A BF08000000              	mov rdi, 8 * 1	; new rib
  5824 0000332F E821430100              	call malloc
  5825 00003334 50                      	push rax
  5826 00003335 BF10000000              	mov rdi, 8 * 2	; extended env
  5827 0000333A E816430100              	call malloc
  5828 0000333F 488B7D10                	mov rdi, ENV
  5829 00003343 4831F6                  	 xor rsi, rsi
  5830 00003346 4831D2                  	 xor rdx, rdx
  5831 00003349 48FFC2                  	inc rdx
  5832                                  .L_lambda_opt_env_loop_0003:	; 
  5833 0000334C 4883FE01                	cmp rsi, 1
  5834 00003350 7410                    	je .L_lambda_opt_env_end_0003
  5835 00003352 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5836 00003356 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5837 0000335A 48FFC6                  	inc rsi
  5838 0000335D 48FFC2                  	inc rdx
  5839 00003360 EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5840                                  .L_lambda_opt_env_end_0003:
  5841 00003362 5B                      	pop rbx
  5842 00003363 4831F6                  	xor rsi, rsi
  5843                                  .L_lambda_opt_params_loop_0003:	; copy params
  5844 00003366 4883FE01                	cmp rsi, 1
  5845 0000336A 740E                    	je .L_lambda_opt_params_end_0003
  5846 0000336C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5847 00003371 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5848 00003375 48FFC6                  	inc rsi
  5849 00003378 EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5850                                  .L_lambda_opt_params_end_0003:
  5851 0000337A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5852 0000337D 4889C3                  	mov rbx, rax
  5853 00003380 58                      	pop rax
  5854 00003381 C60004                  	mov byte [rax], T_closure
  5855 00003384 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5856 00003388 48C74009[95330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5857 00003390 E9CF010000              	jmp .L_lambda_opt_end_0003
  5858                                  .L_lambda_opt_code_0003:
  5859 00003395 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  5860 0000339A 4983FF01                	cmp r15, 1
  5861 0000339E 7409                    	je .L_lambda_opt_arity_check_exact_0003
  5862 000033A0 7F57                    	jg .L_lambda_opt_arity_check_more_0003
  5863 000033A2 6A01                    	push 1
  5864 000033A4 E979420100              	jmp L_error_incorrect_arity_opt
  5865                                  .L_lambda_opt_arity_check_exact_0003: ;Exact case
  5866 000033A9 4C8B0424                	mov r8, qword [rsp -8 * 0]
  5867 000033AD 4C894424F8              	mov qword [rsp -8], r8
  5868 000033B2 4C8B442408              	mov r8, qword [rsp +8]
  5869 000033B7 4C890424                	mov qword [rsp +8 * 0], r8
  5870 000033BB 4C8B442410              	mov r8, qword [rsp +8 * 2]
  5871 000033C0 4C89C1                  	mov rcx, r8
  5872 000033C3 49FFC0                  	inc r8
  5873 000033C6 4C89442408              	mov qword [rsp +8], r8
  5874 000033CB 4889E2                  	mov rdx, rsp
  5875 000033CE 4883C218                	add rdx, 24
  5876                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0003:
  5877 000033D2 4883F900                	cmp rcx, 0
  5878 000033D6 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0003
  5879 000033D8 4C8B02                  	mov r8, qword [rdx]
  5880 000033DB 4C8942F8                	mov qword [rdx - 8], r8
  5881 000033DF 4883C208                	add rdx, 8
  5882 000033E3 48FFC9                  	dec rcx
  5883 000033E6 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0003
  5884                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0003:
  5885 000033E8 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  5886 000033F0 4883EC08                	sub rsp, 8
  5887 000033F4 E985000000              	jmp .L_lambda_opt_stack_adjusted_0003
  5888                                  .L_lambda_opt_arity_check_more_0003:
  5889 000033F9 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  5890 000033FE 4D89C4                  	mov r12, r8
  5891 00003401 4C89C1                  	mov rcx, r8
  5892 00003404 4D8D6802                	lea r13, [r8 + 2] 
  5893 00003408 4883E901                	sub rcx, 1
  5894 0000340C 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  5895 00003411 49BE-                   	mov r14, sob_nil
  5895 00003413 [0100000000000000] 
  5896                                  .L_lambda_opt_create_list_of_opt_params_0003:
  5897 0000341B 4883F900                	cmp rcx, 0
  5898 0000341F 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0003
  5899 00003421 BF11000000              	mov rdi, 17
  5900 00003426 E82A420100              	call malloc
  5901 0000342B C60021                  	mov byte [rax], T_pair
  5902 0000342E 498B1B                  	mov rbx, qword [r11]
  5903 00003431 48895801                	mov qword [rax +1], rbx
  5904 00003435 4C897009                	mov qword [rax + 1 + 8], r14
  5905 00003439 4989C6                  	mov r14, rax
  5906 0000343C 48FFC9                  	dec rcx
  5907 0000343F 4983EB08                	sub r11, 8
  5908 00003443 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0003
  5909                                  .L_lambda_opt_create_list_of_opt_params_end_0003:
  5910 00003445 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
  5911 0000344A 4D8932                  	mov qword [r10], r14
  5912 0000344D 4E8D2CED00000000        	lea r13, [8 * r13]
  5913 00003455 4901E5                  	add r13, rsp
  5914 00003458 B905000000              	mov rcx, 4 + 1
  5915                                  .L_lambda_opt_stack_shrink_loop_0003:
  5916 0000345D 4883F900                	cmp rcx, 0
  5917 00003461 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0003
  5918 00003463 4D8B1A                  	mov r11, qword [r10]
  5919 00003466 4D895D00                	mov qword [r13], r11
  5920 0000346A 4983EA08                	sub r10, 8
  5921 0000346E 4983ED08                	sub r13, 8
  5922 00003472 48FFC9                  	dec rcx
  5923 00003475 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5924                                  .L_lambda_opt_stack_shrink_loop_exit_0003:
  5925 00003477 4983C508                	add r13, 8
  5926 0000347B 4C89EC                  	mov rsp, r13
  5927                                  .L_lambda_opt_stack_adjusted_0003:
  5928 0000347E 48C744241002000000      	mov qword [rsp + 8*2], 2
  5929 00003487 C8000000                	enter 0, 0
  5930                                  	; preparing a tail-call
  5931                                  	; preparing a non-tail-call
  5932                                  	; preparing a non-tail-call
  5933 0000348B 488B4528                	mov rax, PARAM(1)	; param s
  5934 0000348F 50                      	push rax
  5935 00003490 6A01                    	push 1	; arg count
  5936 00003492 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5937 0000349A 803805                  	cmp byte [rax], T_undefined
  5938 0000349D 0F8485400100            	je L_error_fvar_undefined
  5939 000034A3 803804                  	cmp byte [rax], T_closure
  5940 000034A6 0F8500410100            	jne L_error_non_closure
  5941 000034AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5942 000034AF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5943 000034B2 50                      	push rax
  5944                                  	; preparing a non-tail-call
  5945 000034B3 488B4528                	mov rax, PARAM(1)	; param s
  5946 000034B7 50                      	push rax
  5947 000034B8 6A01                    	push 1	; arg count
  5948 000034BA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5949 000034C2 803805                  	cmp byte [rax], T_undefined
  5950 000034C5 0F845D400100            	je L_error_fvar_undefined
  5951 000034CB 803804                  	cmp byte [rax], T_closure
  5952 000034CE 0F85D8400100            	jne L_error_non_closure
  5953 000034D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5954 000034D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5955 000034DA 50                      	push rax
  5956 000034DB 6A02                    	push 2	; arg count
  5957 000034DD 488B4510                	mov rax, ENV
  5958 000034E1 488B00                  	mov rax, qword [rax + 8 * 0]
  5959 000034E4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5960 000034E7 488B00                  	mov rax, qword [rax]
  5961 000034EA 803804                  	cmp byte [rax], T_closure
  5962 000034ED 0F85B9400100            	jne L_error_non_closure
  5963 000034F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5964 000034F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5965 000034F9 50                      	push rax
  5966 000034FA 488B4520                	mov rax, PARAM(0)	; param f
  5967 000034FE 50                      	push rax
  5968 000034FF 6A02                    	push 2	; arg count
  5969 00003501 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5970 00003509 803805                  	cmp byte [rax], T_undefined
  5971 0000350C 0F8416400100            	je L_error_fvar_undefined
  5972 00003512 803804                  	cmp byte [rax], T_closure
  5973 00003515 0F8591400100            	jne L_error_non_closure
  5974 0000351B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5975 0000351E FF7508                  	push qword [rbp + 8 * 1]
  5976                                   ; old ret addr
  5977 00003521 FF7500                  	push qword [rbp]
  5978                                   ; restore the old rbp
  5979 00003524 BB02000000              	mov rbx, 2
  5980 00003529 4883C303                	add rbx, 3
  5981 0000352D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  5982 00003531 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  5983 00003536 4C8D4DF8                	lea r9, [rbp - 8]
  5984 0000353A B906000000              	mov rcx, 6
  5985                                  .L_tc_recycle_frame_loop_0022:
  5986 0000353F 4883F900                	cmp rcx, 0
  5987 00003543 7413                    	je .L_tc_recycle_frame_done_0022
  5988 00003545 4D8B11                  	mov r10, qword [r9]
  5989 00003548 4D8910                  	mov qword [r8], r10
  5990 0000354B 4983E808                	sub r8, 8
  5991 0000354F 4983E908                	sub r9, 8
  5992 00003553 48FFC9                  	dec rcx
  5993 00003556 EBE7                    	jmp .L_tc_recycle_frame_loop_0022
  5994                                  .L_tc_recycle_frame_done_0022:
  5995 00003558 498D6008                	lea rsp, [r8 + 8]
  5996 0000355C 5D                      	pop rbp ; restore the old rbp
  5997 0000355D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5998 00003560 C9                      	leave
  5999 00003561 C22000                  	ret 8 * (2 + 2)
  6000                                  .L_lambda_opt_end_0003:	; new closure is in rax
  6001 00003564 C9                      	leave
  6002 00003565 C21800                  	ret AND_KILL_FRAME(1)
  6003                                  .L_lambda_simple_end_0022:	; new closure is in rax
  6004 00003568 803804                  	cmp byte [rax], T_closure
  6005 0000356B 0F853B400100            	jne L_error_non_closure
  6006 00003571 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6007 00003574 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6008 00003577 48890425[F60F0000]      	mov qword [free_var_33], rax
  6009 0000357F 48B8-                   	mov rax, sob_void
  6009 00003581 [0000000000000000] 
  6010                                  
  6011 00003589 4889C7                  	mov rdi, rax
  6012 0000358C E819430100              	call print_sexpr_if_not_void
  6013 00003591 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6014 00003596 E8BA400100              	call malloc
  6015 0000359B 50                      	push rax
  6016 0000359C BF00000000              	mov rdi, 8 * 0	; new rib
  6017 000035A1 E8AF400100              	call malloc
  6018 000035A6 50                      	push rax
  6019 000035A7 BF08000000              	mov rdi, 8 * 1	; extended env
  6020 000035AC E8A4400100              	call malloc
  6021 000035B1 488B7D10                	mov rdi, ENV
  6022 000035B5 4831F6                  	 xor rsi, rsi
  6023 000035B8 4831D2                  	 xor rdx, rdx
  6024 000035BB 48FFC2                  	inc rdx
  6025                                  .L_lambda_opt_env_loop_0004:	; 
  6026 000035BE 4883FE00                	cmp rsi, 0
  6027 000035C2 7410                    	je .L_lambda_opt_env_end_0004
  6028 000035C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6029 000035C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6030 000035CC 48FFC6                  	inc rsi
  6031 000035CF 48FFC2                  	inc rdx
  6032 000035D2 EBEA                    	jmp .L_lambda_opt_env_loop_0004
  6033                                  .L_lambda_opt_env_end_0004:
  6034 000035D4 5B                      	pop rbx
  6035 000035D5 4831F6                  	xor rsi, rsi
  6036                                  .L_lambda_opt_params_loop_0004:	; copy params
  6037 000035D8 4883FE00                	cmp rsi, 0
  6038 000035DC 740E                    	je .L_lambda_opt_params_end_0004
  6039 000035DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6040 000035E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6041 000035E7 48FFC6                  	inc rsi
  6042 000035EA EBEC                    	jmp .L_lambda_opt_params_loop_0004
  6043                                  .L_lambda_opt_params_end_0004:
  6044 000035EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6045 000035EF 4889C3                  	mov rbx, rax
  6046 000035F2 58                      	pop rax
  6047 000035F3 C60004                  	mov byte [rax], T_closure
  6048 000035F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6049 000035FA 48C74009[07360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  6050 00003602 E9BF040000              	jmp .L_lambda_opt_end_0004
  6051                                  .L_lambda_opt_code_0004:
  6052 00003607 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  6053 0000360C 4983FF01                	cmp r15, 1
  6054 00003610 7409                    	je .L_lambda_opt_arity_check_exact_0004
  6055 00003612 7F57                    	jg .L_lambda_opt_arity_check_more_0004
  6056 00003614 6A01                    	push 1
  6057 00003616 E907400100              	jmp L_error_incorrect_arity_opt
  6058                                  .L_lambda_opt_arity_check_exact_0004: ;Exact case
  6059 0000361B 4C8B0424                	mov r8, qword [rsp -8 * 0]
  6060 0000361F 4C894424F8              	mov qword [rsp -8], r8
  6061 00003624 4C8B442408              	mov r8, qword [rsp +8]
  6062 00003629 4C890424                	mov qword [rsp +8 * 0], r8
  6063 0000362D 4C8B442410              	mov r8, qword [rsp +8 * 2]
  6064 00003632 4C89C1                  	mov rcx, r8
  6065 00003635 49FFC0                  	inc r8
  6066 00003638 4C89442408              	mov qword [rsp +8], r8
  6067 0000363D 4889E2                  	mov rdx, rsp
  6068 00003640 4883C218                	add rdx, 24
  6069                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0004:
  6070 00003644 4883F900                	cmp rcx, 0
  6071 00003648 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0004
  6072 0000364A 4C8B02                  	mov r8, qword [rdx]
  6073 0000364D 4C8942F8                	mov qword [rdx - 8], r8
  6074 00003651 4883C208                	add rdx, 8
  6075 00003655 48FFC9                  	dec rcx
  6076 00003658 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0004
  6077                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0004:
  6078 0000365A 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  6079 00003662 4883EC08                	sub rsp, 8
  6080 00003666 E985000000              	jmp .L_lambda_opt_stack_adjusted_0004
  6081                                  .L_lambda_opt_arity_check_more_0004:
  6082 0000366B 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6083 00003670 4D89C4                  	mov r12, r8
  6084 00003673 4C89C1                  	mov rcx, r8
  6085 00003676 4D8D6802                	lea r13, [r8 + 2] 
  6086 0000367A 4883E901                	sub rcx, 1
  6087 0000367E 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  6088 00003683 49BE-                   	mov r14, sob_nil
  6088 00003685 [0100000000000000] 
  6089                                  .L_lambda_opt_create_list_of_opt_params_0004:
  6090 0000368D 4883F900                	cmp rcx, 0
  6091 00003691 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0004
  6092 00003693 BF11000000              	mov rdi, 17
  6093 00003698 E8B83F0100              	call malloc
  6094 0000369D C60021                  	mov byte [rax], T_pair
  6095 000036A0 498B1B                  	mov rbx, qword [r11]
  6096 000036A3 48895801                	mov qword [rax +1], rbx
  6097 000036A7 4C897009                	mov qword [rax + 1 + 8], r14
  6098 000036AB 4989C6                  	mov r14, rax
  6099 000036AE 48FFC9                  	dec rcx
  6100 000036B1 4983EB08                	sub r11, 8
  6101 000036B5 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0004
  6102                                  .L_lambda_opt_create_list_of_opt_params_end_0004:
  6103 000036B7 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
  6104 000036BC 4D8932                  	mov qword [r10], r14
  6105 000036BF 4E8D2CED00000000        	lea r13, [8 * r13]
  6106 000036C7 4901E5                  	add r13, rsp
  6107 000036CA B905000000              	mov rcx, 4 + 1
  6108                                  .L_lambda_opt_stack_shrink_loop_0004:
  6109 000036CF 4883F900                	cmp rcx, 0
  6110 000036D3 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0004
  6111 000036D5 4D8B1A                  	mov r11, qword [r10]
  6112 000036D8 4D895D00                	mov qword [r13], r11
  6113 000036DC 4983EA08                	sub r10, 8
  6114 000036E0 4983ED08                	sub r13, 8
  6115 000036E4 48FFC9                  	dec rcx
  6116 000036E7 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6117                                  .L_lambda_opt_stack_shrink_loop_exit_0004:
  6118 000036E9 4983C508                	add r13, 8
  6119 000036ED 4C89EC                  	mov rsp, r13
  6120                                  .L_lambda_opt_stack_adjusted_0004:
  6121 000036F0 48C744241002000000      	mov qword [rsp + 8*2], 2
  6122 000036F9 C8000000                	enter 0, 0
  6123                                  	; preparing a tail-call
  6124 000036FD 48B8-                   	mov rax, L_constants + 1993
  6124 000036FF [C907000000000000] 
  6125 00003707 50                      	push rax
  6126 00003708 6A01                    	push 1	; arg count
  6127 0000370A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6128 0000370F E8413F0100              	call malloc
  6129 00003714 50                      	push rax
  6130 00003715 BF10000000              	mov rdi, 8 * 2	; new rib
  6131 0000371A E8363F0100              	call malloc
  6132 0000371F 50                      	push rax
  6133 00003720 BF10000000              	mov rdi, 8 * 2	; extended env
  6134 00003725 E82B3F0100              	call malloc
  6135 0000372A 488B7D10                	mov rdi, ENV
  6136 0000372E BE00000000              	mov rsi, 0
  6137 00003733 BA01000000              	mov rdx, 1
  6138                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  6139 00003738 4883FE01                	cmp rsi, 1
  6140 0000373C 7410                    	je .L_lambda_simple_env_end_0024
  6141 0000373E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6142 00003742 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6143 00003746 48FFC6                  	inc rsi
  6144 00003749 48FFC2                  	inc rdx
  6145 0000374C EBEA                    	jmp .L_lambda_simple_env_loop_0024
  6146                                  .L_lambda_simple_env_end_0024:
  6147 0000374E 5B                      	pop rbx
  6148 0000374F BE00000000              	mov rsi, 0
  6149                                  .L_lambda_simple_params_loop_0024:	; copy params
  6150 00003754 4883FE02                	cmp rsi, 2
  6151 00003758 740E                    	je .L_lambda_simple_params_end_0024
  6152 0000375A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6153 0000375F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6154 00003763 48FFC6                  	inc rsi
  6155 00003766 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  6156                                  .L_lambda_simple_params_end_0024:
  6157 00003768 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6158 0000376B 4889C3                  	mov rbx, rax
  6159 0000376E 58                      	pop rax
  6160 0000376F C60004                  	mov byte [rax], T_closure
  6161 00003772 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6162 00003776 48C74009[83370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  6163 0000377E E9F1020000              	jmp .L_lambda_simple_end_0024
  6164                                  .L_lambda_simple_code_0024:	; lambda-simple body
  6165 00003783 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6166 00003789 740B                    	je .L_lambda_simple_arity_check_ok_0024
  6167 0000378B FF742410                	push qword [rsp + 8 * 2]
  6168 0000378F 6A01                    	push 1
  6169 00003791 E9783E0100              	jmp L_error_incorrect_arity_simple
  6170                                  .L_lambda_simple_arity_check_ok_0024:
  6171 00003796 C8000000                	enter 0, 0
  6172 0000379A BF08000000              	mov rdi, 8*1
  6173 0000379F E8B13E0100              	call malloc
  6174 000037A4 488B5D20                	mov rbx, PARAM(0)
  6175 000037A8 488918                  	mov qword [rax], rbx
  6176 000037AB 48894520                	mov PARAM(0), rax
  6177 000037AF 48B8-                   	mov rax, sob_void
  6177 000037B1 [0000000000000000] 
  6178                                  
  6179 000037B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6180 000037BE E8923E0100              	call malloc
  6181 000037C3 50                      	push rax
  6182 000037C4 BF08000000              	mov rdi, 8 * 1	; new rib
  6183 000037C9 E8873E0100              	call malloc
  6184 000037CE 50                      	push rax
  6185 000037CF BF18000000              	mov rdi, 8 * 3	; extended env
  6186 000037D4 E87C3E0100              	call malloc
  6187 000037D9 488B7D10                	mov rdi, ENV
  6188 000037DD BE00000000              	mov rsi, 0
  6189 000037E2 BA01000000              	mov rdx, 1
  6190                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  6191 000037E7 4883FE02                	cmp rsi, 2
  6192 000037EB 7410                    	je .L_lambda_simple_env_end_0025
  6193 000037ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6194 000037F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6195 000037F5 48FFC6                  	inc rsi
  6196 000037F8 48FFC2                  	inc rdx
  6197 000037FB EBEA                    	jmp .L_lambda_simple_env_loop_0025
  6198                                  .L_lambda_simple_env_end_0025:
  6199 000037FD 5B                      	pop rbx
  6200 000037FE BE00000000              	mov rsi, 0
  6201                                  .L_lambda_simple_params_loop_0025:	; copy params
  6202 00003803 4883FE01                	cmp rsi, 1
  6203 00003807 740E                    	je .L_lambda_simple_params_end_0025
  6204 00003809 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6205 0000380E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6206 00003812 48FFC6                  	inc rsi
  6207 00003815 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  6208                                  .L_lambda_simple_params_end_0025:
  6209 00003817 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6210 0000381A 4889C3                  	mov rbx, rax
  6211 0000381D 58                      	pop rax
  6212 0000381E C60004                  	mov byte [rax], T_closure
  6213 00003821 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6214 00003825 48C74009[32380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  6215 0000382D E988010000              	jmp .L_lambda_simple_end_0025
  6216                                  .L_lambda_simple_code_0025:	; lambda-simple body
  6217 00003832 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6218 00003838 740B                    	je .L_lambda_simple_arity_check_ok_0025
  6219 0000383A FF742410                	push qword [rsp + 8 * 2]
  6220 0000383E 6A01                    	push 1
  6221 00003840 E9C93D0100              	jmp L_error_incorrect_arity_simple
  6222                                  .L_lambda_simple_arity_check_ok_0025:
  6223 00003845 C8000000                	enter 0, 0
  6224                                  	; preparing a non-tail-call
  6225                                  	; preparing a non-tail-call
  6226 00003849 488B4520                	mov rax, PARAM(0)	; param s
  6227 0000384D 50                      	push rax
  6228 0000384E 6A01                    	push 1	; arg count
  6229 00003850 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6230 00003858 803805                  	cmp byte [rax], T_undefined
  6231 0000385B 0F84C73C0100            	je L_error_fvar_undefined
  6232 00003861 803804                  	cmp byte [rax], T_closure
  6233 00003864 0F85423D0100            	jne L_error_non_closure
  6234 0000386A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6235 0000386D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6236 00003870 50                      	push rax
  6237 00003871 6A01                    	push 1	; arg count
  6238 00003873 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6239 0000387B 803805                  	cmp byte [rax], T_undefined
  6240 0000387E 0F84A43C0100            	je L_error_fvar_undefined
  6241 00003884 803804                  	cmp byte [rax], T_closure
  6242 00003887 0F851F3D0100            	jne L_error_non_closure
  6243 0000388D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6244 00003890 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6245 00003893 483D[02000000]          	cmp rax, sob_boolean_false
  6246 00003899 0F840D010000            	je .L_if_else_0005
  6247                                  	; preparing a non-tail-call
  6248                                  	; preparing a non-tail-call
  6249 0000389F 488B4520                	mov rax, PARAM(0)	; param s
  6250 000038A3 50                      	push rax
  6251 000038A4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6252 000038AC 803805                  	cmp byte [rax], T_undefined
  6253 000038AF 0F84733C0100            	je L_error_fvar_undefined
  6254 000038B5 50                      	push rax
  6255 000038B6 6A02                    	push 2	; arg count
  6256 000038B8 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6257 000038C0 803805                  	cmp byte [rax], T_undefined
  6258 000038C3 0F845F3C0100            	je L_error_fvar_undefined
  6259 000038C9 803804                  	cmp byte [rax], T_closure
  6260 000038CC 0F85DA3C0100            	jne L_error_non_closure
  6261 000038D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6262 000038D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6263 000038D8 50                      	push rax
  6264 000038D9 488B4510                	mov rax, ENV
  6265 000038DD 488B4008                	mov rax, qword [rax + 8 * 1]
  6266 000038E1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6267 000038E4 50                      	push rax
  6268 000038E5 6A02                    	push 2	; arg count
  6269 000038E7 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6270 000038EF 803805                  	cmp byte [rax], T_undefined
  6271 000038F2 0F84303C0100            	je L_error_fvar_undefined
  6272 000038F8 803804                  	cmp byte [rax], T_closure
  6273 000038FB 0F85AB3C0100            	jne L_error_non_closure
  6274 00003901 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6275 00003904 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6276 00003907 483D[02000000]          	cmp rax, sob_boolean_false
  6277 0000390D 0F8597000000            	jne .L_or_end_0003
  6278                                  	; preparing a tail-call
  6279                                  	; preparing a non-tail-call
  6280 00003913 488B4520                	mov rax, PARAM(0)	; param s
  6281 00003917 50                      	push rax
  6282 00003918 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6283 00003920 803805                  	cmp byte [rax], T_undefined
  6284 00003923 0F84FF3B0100            	je L_error_fvar_undefined
  6285 00003929 50                      	push rax
  6286 0000392A 6A02                    	push 2	; arg count
  6287 0000392C 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6288 00003934 803805                  	cmp byte [rax], T_undefined
  6289 00003937 0F84EB3B0100            	je L_error_fvar_undefined
  6290 0000393D 803804                  	cmp byte [rax], T_closure
  6291 00003940 0F85663C0100            	jne L_error_non_closure
  6292 00003946 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6293 00003949 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6294 0000394C 50                      	push rax
  6295 0000394D 6A01                    	push 1	; arg count
  6296 0000394F 488B4510                	mov rax, ENV
  6297 00003953 488B00                  	mov rax, qword [rax + 8 * 0]
  6298 00003956 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6299 00003959 488B00                  	mov rax, qword [rax]
  6300 0000395C 803804                  	cmp byte [rax], T_closure
  6301 0000395F 0F85473C0100            	jne L_error_non_closure
  6302 00003965 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6303 00003968 FF7508                  	push qword [rbp + 8 * 1]
  6304                                   ; old ret addr
  6305 0000396B FF7500                  	push qword [rbp]
  6306                                   ; restore the old rbp
  6307 0000396E BB01000000              	mov rbx, 1
  6308 00003973 4883C303                	add rbx, 3
  6309 00003977 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6310 0000397B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6311 00003980 4C8D4DF8                	lea r9, [rbp - 8]
  6312 00003984 B905000000              	mov rcx, 5
  6313                                  .L_tc_recycle_frame_loop_0024:
  6314 00003989 4883F900                	cmp rcx, 0
  6315 0000398D 7413                    	je .L_tc_recycle_frame_done_0024
  6316 0000398F 4D8B11                  	mov r10, qword [r9]
  6317 00003992 4D8910                  	mov qword [r8], r10
  6318 00003995 4983E808                	sub r8, 8
  6319 00003999 4983E908                	sub r9, 8
  6320 0000399D 48FFC9                  	dec rcx
  6321 000039A0 EBE7                    	jmp .L_tc_recycle_frame_loop_0024
  6322                                  .L_tc_recycle_frame_done_0024:
  6323 000039A2 498D6008                	lea rsp, [r8 + 8]
  6324 000039A6 5D                      	pop rbp ; restore the old rbp
  6325 000039A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6326                                  .L_or_end_0003:
  6327 000039AA EB0A                    	jmp .L_if_end_0005
  6328                                  .L_if_else_0005:
  6329 000039AC 48B8-                   	mov rax, L_constants + 2
  6329 000039AE [0200000000000000] 
  6330                                  .L_if_end_0005:
  6331 000039B6 C9                      	leave
  6332 000039B7 C21800                  	ret AND_KILL_FRAME(1)
  6333                                  .L_lambda_simple_end_0025:	; new closure is in rax
  6334 000039BA 50                      	push rax
  6335 000039BB 488B4520                	mov rax, PARAM(0)	; param loop
  6336 000039BF 8F00                    	pop qword [rax]
  6337 000039C1 48B8-                   	mov rax, sob_void
  6337 000039C3 [0000000000000000] 
  6338                                  
  6339                                  	; preparing a non-tail-call
  6340 000039CB 488B4510                	mov rax, ENV
  6341 000039CF 488B00                  	mov rax, qword [rax + 8 * 0]
  6342 000039D2 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6343 000039D6 50                      	push rax
  6344 000039D7 6A01                    	push 1	; arg count
  6345 000039D9 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6346 000039E1 803805                  	cmp byte [rax], T_undefined
  6347 000039E4 0F843E3B0100            	je L_error_fvar_undefined
  6348 000039EA 803804                  	cmp byte [rax], T_closure
  6349 000039ED 0F85B93B0100            	jne L_error_non_closure
  6350 000039F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6351 000039F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6352 000039F9 483D[02000000]          	cmp rax, sob_boolean_false
  6353 000039FF 7465                    	je .L_if_else_0006
  6354                                  	; preparing a tail-call
  6355 00003A01 488B4510                	mov rax, ENV
  6356 00003A05 488B00                  	mov rax, qword [rax + 8 * 0]
  6357 00003A08 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6358 00003A0C 50                      	push rax
  6359 00003A0D 6A01                    	push 1	; arg count
  6360 00003A0F 488B4520                	mov rax, PARAM(0)	; param loop
  6361 00003A13 488B00                  	mov rax, qword [rax]
  6362 00003A16 803804                  	cmp byte [rax], T_closure
  6363 00003A19 0F858D3B0100            	jne L_error_non_closure
  6364 00003A1F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6365 00003A22 FF7508                  	push qword [rbp + 8 * 1]
  6366                                   ; old ret addr
  6367 00003A25 FF7500                  	push qword [rbp]
  6368                                   ; restore the old rbp
  6369 00003A28 BB01000000              	mov rbx, 1
  6370 00003A2D 4883C303                	add rbx, 3
  6371 00003A31 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6372 00003A35 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6373 00003A3A 4C8D4DF8                	lea r9, [rbp - 8]
  6374 00003A3E B905000000              	mov rcx, 5
  6375                                  .L_tc_recycle_frame_loop_0025:
  6376 00003A43 4883F900                	cmp rcx, 0
  6377 00003A47 7413                    	je .L_tc_recycle_frame_done_0025
  6378 00003A49 4D8B11                  	mov r10, qword [r9]
  6379 00003A4C 4D8910                  	mov qword [r8], r10
  6380 00003A4F 4983E808                	sub r8, 8
  6381 00003A53 4983E908                	sub r9, 8
  6382 00003A57 48FFC9                  	dec rcx
  6383 00003A5A EBE7                    	jmp .L_tc_recycle_frame_loop_0025
  6384                                  .L_tc_recycle_frame_done_0025:
  6385 00003A5C 498D6008                	lea rsp, [r8 + 8]
  6386 00003A60 5D                      	pop rbp ; restore the old rbp
  6387 00003A61 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6388 00003A64 EB0A                    	jmp .L_if_end_0006
  6389                                  .L_if_else_0006:
  6390 00003A66 48B8-                   	mov rax, L_constants + 2
  6390 00003A68 [0200000000000000] 
  6391                                  .L_if_end_0006:
  6392 00003A70 C9                      	leave
  6393 00003A71 C21800                  	ret AND_KILL_FRAME(1)
  6394                                  .L_lambda_simple_end_0024:	; new closure is in rax
  6395 00003A74 803804                  	cmp byte [rax], T_closure
  6396 00003A77 0F852F3B0100            	jne L_error_non_closure
  6397 00003A7D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6398 00003A80 FF7508                  	push qword [rbp + 8 * 1]
  6399                                   ; old ret addr
  6400 00003A83 FF7500                  	push qword [rbp]
  6401                                   ; restore the old rbp
  6402 00003A86 BB01000000              	mov rbx, 1
  6403 00003A8B 4883C303                	add rbx, 3
  6404 00003A8F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6405 00003A93 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6406 00003A98 4C8D4DF8                	lea r9, [rbp - 8]
  6407 00003A9C B905000000              	mov rcx, 5
  6408                                  .L_tc_recycle_frame_loop_0023:
  6409 00003AA1 4883F900                	cmp rcx, 0
  6410 00003AA5 7413                    	je .L_tc_recycle_frame_done_0023
  6411 00003AA7 4D8B11                  	mov r10, qword [r9]
  6412 00003AAA 4D8910                  	mov qword [r8], r10
  6413 00003AAD 4983E808                	sub r8, 8
  6414 00003AB1 4983E908                	sub r9, 8
  6415 00003AB5 48FFC9                  	dec rcx
  6416 00003AB8 EBE7                    	jmp .L_tc_recycle_frame_loop_0023
  6417                                  .L_tc_recycle_frame_done_0023:
  6418 00003ABA 498D6008                	lea rsp, [r8 + 8]
  6419 00003ABE 5D                      	pop rbp ; restore the old rbp
  6420 00003ABF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6421 00003AC2 C9                      	leave
  6422 00003AC3 C22000                  	ret 8 * (2 + 2)
  6423                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6424 00003AC6 48890425[13150000]      	mov qword [free_var_110], rax
  6425 00003ACE 48B8-                   	mov rax, sob_void
  6425 00003AD0 [0000000000000000] 
  6426                                  
  6427 00003AD8 4889C7                  	mov rdi, rax
  6428 00003ADB E8CA3D0100              	call print_sexpr_if_not_void
  6429 00003AE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6430 00003AE5 E86B3B0100              	call malloc
  6431 00003AEA 50                      	push rax
  6432 00003AEB BF00000000              	mov rdi, 8 * 0	; new rib
  6433 00003AF0 E8603B0100              	call malloc
  6434 00003AF5 50                      	push rax
  6435 00003AF6 BF08000000              	mov rdi, 8 * 1	; extended env
  6436 00003AFB E8553B0100              	call malloc
  6437 00003B00 488B7D10                	mov rdi, ENV
  6438 00003B04 4831F6                  	 xor rsi, rsi
  6439 00003B07 4831D2                  	 xor rdx, rdx
  6440 00003B0A 48FFC2                  	inc rdx
  6441                                  .L_lambda_opt_env_loop_0005:	; 
  6442 00003B0D 4883FE00                	cmp rsi, 0
  6443 00003B11 7410                    	je .L_lambda_opt_env_end_0005
  6444 00003B13 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6445 00003B17 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6446 00003B1B 48FFC6                  	inc rsi
  6447 00003B1E 48FFC2                  	inc rdx
  6448 00003B21 EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6449                                  .L_lambda_opt_env_end_0005:
  6450 00003B23 5B                      	pop rbx
  6451 00003B24 4831F6                  	xor rsi, rsi
  6452                                  .L_lambda_opt_params_loop_0005:	; copy params
  6453 00003B27 4883FE00                	cmp rsi, 0
  6454 00003B2B 740E                    	je .L_lambda_opt_params_end_0005
  6455 00003B2D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6456 00003B32 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6457 00003B36 48FFC6                  	inc rsi
  6458 00003B39 EBEC                    	jmp .L_lambda_opt_params_loop_0005
  6459                                  .L_lambda_opt_params_end_0005:
  6460 00003B3B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6461 00003B3E 4889C3                  	mov rbx, rax
  6462 00003B41 58                      	pop rax
  6463 00003B42 C60004                  	mov byte [rax], T_closure
  6464 00003B45 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6465 00003B49 48C74009[563B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6466 00003B51 E9F9040000              	jmp .L_lambda_opt_end_0005
  6467                                  .L_lambda_opt_code_0005:
  6468 00003B56 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  6469 00003B5B 4983FF01                	cmp r15, 1
  6470 00003B5F 7409                    	je .L_lambda_opt_arity_check_exact_0005
  6471 00003B61 7F57                    	jg .L_lambda_opt_arity_check_more_0005
  6472 00003B63 6A01                    	push 1
  6473 00003B65 E9B83A0100              	jmp L_error_incorrect_arity_opt
  6474                                  .L_lambda_opt_arity_check_exact_0005: ;Exact case
  6475 00003B6A 4C8B0424                	mov r8, qword [rsp -8 * 0]
  6476 00003B6E 4C894424F8              	mov qword [rsp -8], r8
  6477 00003B73 4C8B442408              	mov r8, qword [rsp +8]
  6478 00003B78 4C890424                	mov qword [rsp +8 * 0], r8
  6479 00003B7C 4C8B442410              	mov r8, qword [rsp +8 * 2]
  6480 00003B81 4C89C1                  	mov rcx, r8
  6481 00003B84 49FFC0                  	inc r8
  6482 00003B87 4C89442408              	mov qword [rsp +8], r8
  6483 00003B8C 4889E2                  	mov rdx, rsp
  6484 00003B8F 4883C218                	add rdx, 24
  6485                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0005:
  6486 00003B93 4883F900                	cmp rcx, 0
  6487 00003B97 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0005
  6488 00003B99 4C8B02                  	mov r8, qword [rdx]
  6489 00003B9C 4C8942F8                	mov qword [rdx - 8], r8
  6490 00003BA0 4883C208                	add rdx, 8
  6491 00003BA4 48FFC9                  	dec rcx
  6492 00003BA7 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0005
  6493                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0005:
  6494 00003BA9 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  6495 00003BB1 4883EC08                	sub rsp, 8
  6496 00003BB5 E985000000              	jmp .L_lambda_opt_stack_adjusted_0005
  6497                                  .L_lambda_opt_arity_check_more_0005:
  6498 00003BBA 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  6499 00003BBF 4D89C4                  	mov r12, r8
  6500 00003BC2 4C89C1                  	mov rcx, r8
  6501 00003BC5 4D8D6802                	lea r13, [r8 + 2] 
  6502 00003BC9 4883E901                	sub rcx, 1
  6503 00003BCD 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  6504 00003BD2 49BE-                   	mov r14, sob_nil
  6504 00003BD4 [0100000000000000] 
  6505                                  .L_lambda_opt_create_list_of_opt_params_0005:
  6506 00003BDC 4883F900                	cmp rcx, 0
  6507 00003BE0 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0005
  6508 00003BE2 BF11000000              	mov rdi, 17
  6509 00003BE7 E8693A0100              	call malloc
  6510 00003BEC C60021                  	mov byte [rax], T_pair
  6511 00003BEF 498B1B                  	mov rbx, qword [r11]
  6512 00003BF2 48895801                	mov qword [rax +1], rbx
  6513 00003BF6 4C897009                	mov qword [rax + 1 + 8], r14
  6514 00003BFA 4989C6                  	mov r14, rax
  6515 00003BFD 48FFC9                  	dec rcx
  6516 00003C00 4983EB08                	sub r11, 8
  6517 00003C04 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0005
  6518                                  .L_lambda_opt_create_list_of_opt_params_end_0005:
  6519 00003C06 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
  6520 00003C0B 4D8932                  	mov qword [r10], r14
  6521 00003C0E 4E8D2CED00000000        	lea r13, [8 * r13]
  6522 00003C16 4901E5                  	add r13, rsp
  6523 00003C19 B905000000              	mov rcx, 4 + 1
  6524                                  .L_lambda_opt_stack_shrink_loop_0005:
  6525 00003C1E 4883F900                	cmp rcx, 0
  6526 00003C22 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0005
  6527 00003C24 4D8B1A                  	mov r11, qword [r10]
  6528 00003C27 4D895D00                	mov qword [r13], r11
  6529 00003C2B 4983EA08                	sub r10, 8
  6530 00003C2F 4983ED08                	sub r13, 8
  6531 00003C33 48FFC9                  	dec rcx
  6532 00003C36 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6533                                  .L_lambda_opt_stack_shrink_loop_exit_0005:
  6534 00003C38 4983C508                	add r13, 8
  6535 00003C3C 4C89EC                  	mov rsp, r13
  6536                                  .L_lambda_opt_stack_adjusted_0005:
  6537 00003C3F 48C744241002000000      	mov qword [rsp + 8*2], 2
  6538 00003C48 C8000000                	enter 0, 0
  6539                                  	; preparing a tail-call
  6540 00003C4C 48B8-                   	mov rax, L_constants + 1993
  6540 00003C4E [C907000000000000] 
  6541 00003C56 50                      	push rax
  6542 00003C57 6A01                    	push 1	; arg count
  6543 00003C59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6544 00003C5E E8F2390100              	call malloc
  6545 00003C63 50                      	push rax
  6546 00003C64 BF10000000              	mov rdi, 8 * 2	; new rib
  6547 00003C69 E8E7390100              	call malloc
  6548 00003C6E 50                      	push rax
  6549 00003C6F BF10000000              	mov rdi, 8 * 2	; extended env
  6550 00003C74 E8DC390100              	call malloc
  6551 00003C79 488B7D10                	mov rdi, ENV
  6552 00003C7D BE00000000              	mov rsi, 0
  6553 00003C82 BA01000000              	mov rdx, 1
  6554                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  6555 00003C87 4883FE01                	cmp rsi, 1
  6556 00003C8B 7410                    	je .L_lambda_simple_env_end_0026
  6557 00003C8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6558 00003C91 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6559 00003C95 48FFC6                  	inc rsi
  6560 00003C98 48FFC2                  	inc rdx
  6561 00003C9B EBEA                    	jmp .L_lambda_simple_env_loop_0026
  6562                                  .L_lambda_simple_env_end_0026:
  6563 00003C9D 5B                      	pop rbx
  6564 00003C9E BE00000000              	mov rsi, 0
  6565                                  .L_lambda_simple_params_loop_0026:	; copy params
  6566 00003CA3 4883FE02                	cmp rsi, 2
  6567 00003CA7 740E                    	je .L_lambda_simple_params_end_0026
  6568 00003CA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6569 00003CAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6570 00003CB2 48FFC6                  	inc rsi
  6571 00003CB5 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6572                                  .L_lambda_simple_params_end_0026:
  6573 00003CB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6574 00003CBA 4889C3                  	mov rbx, rax
  6575 00003CBD 58                      	pop rax
  6576 00003CBE C60004                  	mov byte [rax], T_closure
  6577 00003CC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6578 00003CC5 48C74009[D23C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6579 00003CCD E92B030000              	jmp .L_lambda_simple_end_0026
  6580                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6581 00003CD2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6582 00003CD8 740B                    	je .L_lambda_simple_arity_check_ok_0026
  6583 00003CDA FF742410                	push qword [rsp + 8 * 2]
  6584 00003CDE 6A01                    	push 1
  6585 00003CE0 E929390100              	jmp L_error_incorrect_arity_simple
  6586                                  .L_lambda_simple_arity_check_ok_0026:
  6587 00003CE5 C8000000                	enter 0, 0
  6588 00003CE9 BF08000000              	mov rdi, 8*1
  6589 00003CEE E862390100              	call malloc
  6590 00003CF3 488B5D20                	mov rbx, PARAM(0)
  6591 00003CF7 488918                  	mov qword [rax], rbx
  6592 00003CFA 48894520                	mov PARAM(0), rax
  6593 00003CFE 48B8-                   	mov rax, sob_void
  6593 00003D00 [0000000000000000] 
  6594                                  
  6595 00003D08 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6596 00003D0D E843390100              	call malloc
  6597 00003D12 50                      	push rax
  6598 00003D13 BF08000000              	mov rdi, 8 * 1	; new rib
  6599 00003D18 E838390100              	call malloc
  6600 00003D1D 50                      	push rax
  6601 00003D1E BF18000000              	mov rdi, 8 * 3	; extended env
  6602 00003D23 E82D390100              	call malloc
  6603 00003D28 488B7D10                	mov rdi, ENV
  6604 00003D2C BE00000000              	mov rsi, 0
  6605 00003D31 BA01000000              	mov rdx, 1
  6606                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6607 00003D36 4883FE02                	cmp rsi, 2
  6608 00003D3A 7410                    	je .L_lambda_simple_env_end_0027
  6609 00003D3C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6610 00003D40 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6611 00003D44 48FFC6                  	inc rsi
  6612 00003D47 48FFC2                  	inc rdx
  6613 00003D4A EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6614                                  .L_lambda_simple_env_end_0027:
  6615 00003D4C 5B                      	pop rbx
  6616 00003D4D BE00000000              	mov rsi, 0
  6617                                  .L_lambda_simple_params_loop_0027:	; copy params
  6618 00003D52 4883FE01                	cmp rsi, 1
  6619 00003D56 740E                    	je .L_lambda_simple_params_end_0027
  6620 00003D58 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6621 00003D5D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6622 00003D61 48FFC6                  	inc rsi
  6623 00003D64 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6624                                  .L_lambda_simple_params_end_0027:
  6625 00003D66 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6626 00003D69 4889C3                  	mov rbx, rax
  6627 00003D6C 58                      	pop rax
  6628 00003D6D C60004                  	mov byte [rax], T_closure
  6629 00003D70 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6630 00003D74 48C74009[813D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6631 00003D7C E988010000              	jmp .L_lambda_simple_end_0027
  6632                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6633 00003D81 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6634 00003D87 740B                    	je .L_lambda_simple_arity_check_ok_0027
  6635 00003D89 FF742410                	push qword [rsp + 8 * 2]
  6636 00003D8D 6A01                    	push 1
  6637 00003D8F E97A380100              	jmp L_error_incorrect_arity_simple
  6638                                  .L_lambda_simple_arity_check_ok_0027:
  6639 00003D94 C8000000                	enter 0, 0
  6640                                  	; preparing a non-tail-call
  6641                                  	; preparing a non-tail-call
  6642 00003D98 488B4520                	mov rax, PARAM(0)	; param s
  6643 00003D9C 50                      	push rax
  6644 00003D9D 6A01                    	push 1	; arg count
  6645 00003D9F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6646 00003DA7 803805                  	cmp byte [rax], T_undefined
  6647 00003DAA 0F8478370100            	je L_error_fvar_undefined
  6648 00003DB0 803804                  	cmp byte [rax], T_closure
  6649 00003DB3 0F85F3370100            	jne L_error_non_closure
  6650 00003DB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6651 00003DBC FF5009                  	call SOB_CLOSURE_CODE(rax)
  6652 00003DBF 50                      	push rax
  6653 00003DC0 6A01                    	push 1	; arg count
  6654 00003DC2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6655 00003DCA 803805                  	cmp byte [rax], T_undefined
  6656 00003DCD 0F8455370100            	je L_error_fvar_undefined
  6657 00003DD3 803804                  	cmp byte [rax], T_closure
  6658 00003DD6 0F85D0370100            	jne L_error_non_closure
  6659 00003DDC FF7001                  	push SOB_CLOSURE_ENV(rax)
  6660 00003DDF FF5009                  	call SOB_CLOSURE_CODE(rax)
  6661 00003DE2 483D[02000000]          	cmp rax, sob_boolean_false
  6662 00003DE8 0F8517010000            	jne .L_or_end_0004
  6663                                  	; preparing a non-tail-call
  6664                                  	; preparing a non-tail-call
  6665 00003DEE 488B4520                	mov rax, PARAM(0)	; param s
  6666 00003DF2 50                      	push rax
  6667 00003DF3 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6668 00003DFB 803805                  	cmp byte [rax], T_undefined
  6669 00003DFE 0F8424370100            	je L_error_fvar_undefined
  6670 00003E04 50                      	push rax
  6671 00003E05 6A02                    	push 2	; arg count
  6672 00003E07 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6673 00003E0F 803805                  	cmp byte [rax], T_undefined
  6674 00003E12 0F8410370100            	je L_error_fvar_undefined
  6675 00003E18 803804                  	cmp byte [rax], T_closure
  6676 00003E1B 0F858B370100            	jne L_error_non_closure
  6677 00003E21 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6678 00003E24 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6679 00003E27 50                      	push rax
  6680 00003E28 488B4510                	mov rax, ENV
  6681 00003E2C 488B4008                	mov rax, qword [rax + 8 * 1]
  6682 00003E30 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6683 00003E33 50                      	push rax
  6684 00003E34 6A02                    	push 2	; arg count
  6685 00003E36 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6686 00003E3E 803805                  	cmp byte [rax], T_undefined
  6687 00003E41 0F84E1360100            	je L_error_fvar_undefined
  6688 00003E47 803804                  	cmp byte [rax], T_closure
  6689 00003E4A 0F855C370100            	jne L_error_non_closure
  6690 00003E50 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6691 00003E53 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6692 00003E56 483D[02000000]          	cmp rax, sob_boolean_false
  6693 00003E5C 0F8499000000            	je .L_if_else_0007
  6694                                  	; preparing a tail-call
  6695                                  	; preparing a non-tail-call
  6696 00003E62 488B4520                	mov rax, PARAM(0)	; param s
  6697 00003E66 50                      	push rax
  6698 00003E67 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6699 00003E6F 803805                  	cmp byte [rax], T_undefined
  6700 00003E72 0F84B0360100            	je L_error_fvar_undefined
  6701 00003E78 50                      	push rax
  6702 00003E79 6A02                    	push 2	; arg count
  6703 00003E7B 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6704 00003E83 803805                  	cmp byte [rax], T_undefined
  6705 00003E86 0F849C360100            	je L_error_fvar_undefined
  6706 00003E8C 803804                  	cmp byte [rax], T_closure
  6707 00003E8F 0F8517370100            	jne L_error_non_closure
  6708 00003E95 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6709 00003E98 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6710 00003E9B 50                      	push rax
  6711 00003E9C 6A01                    	push 1	; arg count
  6712 00003E9E 488B4510                	mov rax, ENV
  6713 00003EA2 488B00                  	mov rax, qword [rax + 8 * 0]
  6714 00003EA5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6715 00003EA8 488B00                  	mov rax, qword [rax]
  6716 00003EAB 803804                  	cmp byte [rax], T_closure
  6717 00003EAE 0F85F8360100            	jne L_error_non_closure
  6718 00003EB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6719 00003EB7 FF7508                  	push qword [rbp + 8 * 1]
  6720                                   ; old ret addr
  6721 00003EBA FF7500                  	push qword [rbp]
  6722                                   ; restore the old rbp
  6723 00003EBD BB01000000              	mov rbx, 1
  6724 00003EC2 4883C303                	add rbx, 3
  6725 00003EC6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6726 00003ECA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6727 00003ECF 4C8D4DF8                	lea r9, [rbp - 8]
  6728 00003ED3 B905000000              	mov rcx, 5
  6729                                  .L_tc_recycle_frame_loop_0027:
  6730 00003ED8 4883F900                	cmp rcx, 0
  6731 00003EDC 7413                    	je .L_tc_recycle_frame_done_0027
  6732 00003EDE 4D8B11                  	mov r10, qword [r9]
  6733 00003EE1 4D8910                  	mov qword [r8], r10
  6734 00003EE4 4983E808                	sub r8, 8
  6735 00003EE8 4983E908                	sub r9, 8
  6736 00003EEC 48FFC9                  	dec rcx
  6737 00003EEF EBE7                    	jmp .L_tc_recycle_frame_loop_0027
  6738                                  .L_tc_recycle_frame_done_0027:
  6739 00003EF1 498D6008                	lea rsp, [r8 + 8]
  6740 00003EF5 5D                      	pop rbp ; restore the old rbp
  6741 00003EF6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6742 00003EF9 EB0A                    	jmp .L_if_end_0007
  6743                                  .L_if_else_0007:
  6744 00003EFB 48B8-                   	mov rax, L_constants + 2
  6744 00003EFD [0200000000000000] 
  6745                                  .L_if_end_0007:
  6746                                  .L_or_end_0004:
  6747 00003F05 C9                      	leave
  6748 00003F06 C21800                  	ret AND_KILL_FRAME(1)
  6749                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6750 00003F09 50                      	push rax
  6751 00003F0A 488B4520                	mov rax, PARAM(0)	; param loop
  6752 00003F0E 8F00                    	pop qword [rax]
  6753 00003F10 48B8-                   	mov rax, sob_void
  6753 00003F12 [0000000000000000] 
  6754                                  
  6755                                  	; preparing a non-tail-call
  6756 00003F1A 488B4510                	mov rax, ENV
  6757 00003F1E 488B00                  	mov rax, qword [rax + 8 * 0]
  6758 00003F21 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6759 00003F25 50                      	push rax
  6760 00003F26 6A01                    	push 1	; arg count
  6761 00003F28 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6762 00003F30 803805                  	cmp byte [rax], T_undefined
  6763 00003F33 0F84EF350100            	je L_error_fvar_undefined
  6764 00003F39 803804                  	cmp byte [rax], T_closure
  6765 00003F3C 0F856A360100            	jne L_error_non_closure
  6766 00003F42 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6767 00003F45 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6768 00003F48 483D[02000000]          	cmp rax, sob_boolean_false
  6769 00003F4E 0F85A5000000            	jne .L_or_end_0005
  6770                                  	; preparing a non-tail-call
  6771 00003F54 488B4510                	mov rax, ENV
  6772 00003F58 488B00                  	mov rax, qword [rax + 8 * 0]
  6773 00003F5B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6774 00003F5F 50                      	push rax
  6775 00003F60 6A01                    	push 1	; arg count
  6776 00003F62 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6777 00003F6A 803805                  	cmp byte [rax], T_undefined
  6778 00003F6D 0F84B5350100            	je L_error_fvar_undefined
  6779 00003F73 803804                  	cmp byte [rax], T_closure
  6780 00003F76 0F8530360100            	jne L_error_non_closure
  6781 00003F7C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6782 00003F7F FF5009                  	call SOB_CLOSURE_CODE(rax)
  6783 00003F82 483D[02000000]          	cmp rax, sob_boolean_false
  6784 00003F88 7465                    	je .L_if_else_0008
  6785                                  	; preparing a tail-call
  6786 00003F8A 488B4510                	mov rax, ENV
  6787 00003F8E 488B00                  	mov rax, qword [rax + 8 * 0]
  6788 00003F91 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6789 00003F95 50                      	push rax
  6790 00003F96 6A01                    	push 1	; arg count
  6791 00003F98 488B4520                	mov rax, PARAM(0)	; param loop
  6792 00003F9C 488B00                  	mov rax, qword [rax]
  6793 00003F9F 803804                  	cmp byte [rax], T_closure
  6794 00003FA2 0F8504360100            	jne L_error_non_closure
  6795 00003FA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6796 00003FAB FF7508                  	push qword [rbp + 8 * 1]
  6797                                   ; old ret addr
  6798 00003FAE FF7500                  	push qword [rbp]
  6799                                   ; restore the old rbp
  6800 00003FB1 BB01000000              	mov rbx, 1
  6801 00003FB6 4883C303                	add rbx, 3
  6802 00003FBA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6803 00003FBE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6804 00003FC3 4C8D4DF8                	lea r9, [rbp - 8]
  6805 00003FC7 B905000000              	mov rcx, 5
  6806                                  .L_tc_recycle_frame_loop_0028:
  6807 00003FCC 4883F900                	cmp rcx, 0
  6808 00003FD0 7413                    	je .L_tc_recycle_frame_done_0028
  6809 00003FD2 4D8B11                  	mov r10, qword [r9]
  6810 00003FD5 4D8910                  	mov qword [r8], r10
  6811 00003FD8 4983E808                	sub r8, 8
  6812 00003FDC 4983E908                	sub r9, 8
  6813 00003FE0 48FFC9                  	dec rcx
  6814 00003FE3 EBE7                    	jmp .L_tc_recycle_frame_loop_0028
  6815                                  .L_tc_recycle_frame_done_0028:
  6816 00003FE5 498D6008                	lea rsp, [r8 + 8]
  6817 00003FE9 5D                      	pop rbp ; restore the old rbp
  6818 00003FEA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6819 00003FED EB0A                    	jmp .L_if_end_0008
  6820                                  .L_if_else_0008:
  6821 00003FEF 48B8-                   	mov rax, L_constants + 2
  6821 00003FF1 [0200000000000000] 
  6822                                  .L_if_end_0008:
  6823                                  .L_or_end_0005:
  6824 00003FF9 C9                      	leave
  6825 00003FFA C21800                  	ret AND_KILL_FRAME(1)
  6826                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6827 00003FFD 803804                  	cmp byte [rax], T_closure
  6828 00004000 0F85A6350100            	jne L_error_non_closure
  6829 00004006 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6830 00004009 FF7508                  	push qword [rbp + 8 * 1]
  6831                                   ; old ret addr
  6832 0000400C FF7500                  	push qword [rbp]
  6833                                   ; restore the old rbp
  6834 0000400F BB01000000              	mov rbx, 1
  6835 00004014 4883C303                	add rbx, 3
  6836 00004018 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  6837 0000401C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  6838 00004021 4C8D4DF8                	lea r9, [rbp - 8]
  6839 00004025 B905000000              	mov rcx, 5
  6840                                  .L_tc_recycle_frame_loop_0026:
  6841 0000402A 4883F900                	cmp rcx, 0
  6842 0000402E 7413                    	je .L_tc_recycle_frame_done_0026
  6843 00004030 4D8B11                  	mov r10, qword [r9]
  6844 00004033 4D8910                  	mov qword [r8], r10
  6845 00004036 4983E808                	sub r8, 8
  6846 0000403A 4983E908                	sub r9, 8
  6847 0000403E 48FFC9                  	dec rcx
  6848 00004041 EBE7                    	jmp .L_tc_recycle_frame_loop_0026
  6849                                  .L_tc_recycle_frame_done_0026:
  6850 00004043 498D6008                	lea rsp, [r8 + 8]
  6851 00004047 5D                      	pop rbp ; restore the old rbp
  6852 00004048 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6853 0000404B C9                      	leave
  6854 0000404C C22000                  	ret 8 * (2 + 2)
  6855                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6856 0000404F 48890425[D40F0000]      	mov qword [free_var_31], rax
  6857 00004057 48B8-                   	mov rax, sob_void
  6857 00004059 [0000000000000000] 
  6858                                  
  6859 00004061 4889C7                  	mov rdi, rax
  6860 00004064 E841380100              	call print_sexpr_if_not_void
  6861                                  	; preparing a non-tail-call
  6862 00004069 48B8-                   	mov rax, L_constants + 1993
  6862 0000406B [C907000000000000] 
  6863 00004073 50                      	push rax
  6864 00004074 48B8-                   	mov rax, L_constants + 1993
  6864 00004076 [C907000000000000] 
  6865 0000407E 50                      	push rax
  6866 0000407F 6A02                    	push 2	; arg count
  6867 00004081 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6868 00004086 E8CA350100              	call malloc
  6869 0000408B 50                      	push rax
  6870 0000408C BF00000000              	mov rdi, 8 * 0	; new rib
  6871 00004091 E8BF350100              	call malloc
  6872 00004096 50                      	push rax
  6873 00004097 BF08000000              	mov rdi, 8 * 1	; extended env
  6874 0000409C E8B4350100              	call malloc
  6875 000040A1 488B7D10                	mov rdi, ENV
  6876 000040A5 BE00000000              	mov rsi, 0
  6877 000040AA BA01000000              	mov rdx, 1
  6878                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6879 000040AF 4883FE00                	cmp rsi, 0
  6880 000040B3 7410                    	je .L_lambda_simple_env_end_0028
  6881 000040B5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6882 000040B9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6883 000040BD 48FFC6                  	inc rsi
  6884 000040C0 48FFC2                  	inc rdx
  6885 000040C3 EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6886                                  .L_lambda_simple_env_end_0028:
  6887 000040C5 5B                      	pop rbx
  6888 000040C6 BE00000000              	mov rsi, 0
  6889                                  .L_lambda_simple_params_loop_0028:	; copy params
  6890 000040CB 4883FE00                	cmp rsi, 0
  6891 000040CF 740E                    	je .L_lambda_simple_params_end_0028
  6892 000040D1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6893 000040D6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6894 000040DA 48FFC6                  	inc rsi
  6895 000040DD EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6896                                  .L_lambda_simple_params_end_0028:
  6897 000040DF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6898 000040E2 4889C3                  	mov rbx, rax
  6899 000040E5 58                      	pop rax
  6900 000040E6 C60004                  	mov byte [rax], T_closure
  6901 000040E9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6902 000040ED 48C74009[FA400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6903 000040F5 E95A060000              	jmp .L_lambda_simple_end_0028
  6904                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6905 000040FA 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6906 00004100 740B                    	je .L_lambda_simple_arity_check_ok_0028
  6907 00004102 FF742410                	push qword [rsp + 8 * 2]
  6908 00004106 6A02                    	push 2
  6909 00004108 E901350100              	jmp L_error_incorrect_arity_simple
  6910                                  .L_lambda_simple_arity_check_ok_0028:
  6911 0000410D C8000000                	enter 0, 0
  6912 00004111 BF08000000              	mov rdi, 8*1
  6913 00004116 E83A350100              	call malloc
  6914 0000411B 488B5D20                	mov rbx, PARAM(0)
  6915 0000411F 488918                  	mov qword [rax], rbx
  6916 00004122 48894520                	mov PARAM(0), rax
  6917 00004126 48B8-                   	mov rax, sob_void
  6917 00004128 [0000000000000000] 
  6918                                  
  6919 00004130 BF08000000              	mov rdi, 8*1
  6920 00004135 E81B350100              	call malloc
  6921 0000413A 488B5D28                	mov rbx, PARAM(1)
  6922 0000413E 488918                  	mov qword [rax], rbx
  6923 00004141 48894528                	mov PARAM(1), rax
  6924 00004145 48B8-                   	mov rax, sob_void
  6924 00004147 [0000000000000000] 
  6925                                  
  6926 0000414F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6927 00004154 E8FC340100              	call malloc
  6928 00004159 50                      	push rax
  6929 0000415A BF10000000              	mov rdi, 8 * 2	; new rib
  6930 0000415F E8F1340100              	call malloc
  6931 00004164 50                      	push rax
  6932 00004165 BF10000000              	mov rdi, 8 * 2	; extended env
  6933 0000416A E8E6340100              	call malloc
  6934 0000416F 488B7D10                	mov rdi, ENV
  6935 00004173 BE00000000              	mov rsi, 0
  6936 00004178 BA01000000              	mov rdx, 1
  6937                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6938 0000417D 4883FE01                	cmp rsi, 1
  6939 00004181 7410                    	je .L_lambda_simple_env_end_0029
  6940 00004183 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6941 00004187 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6942 0000418B 48FFC6                  	inc rsi
  6943 0000418E 48FFC2                  	inc rdx
  6944 00004191 EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6945                                  .L_lambda_simple_env_end_0029:
  6946 00004193 5B                      	pop rbx
  6947 00004194 BE00000000              	mov rsi, 0
  6948                                  .L_lambda_simple_params_loop_0029:	; copy params
  6949 00004199 4883FE02                	cmp rsi, 2
  6950 0000419D 740E                    	je .L_lambda_simple_params_end_0029
  6951 0000419F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6952 000041A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6953 000041A8 48FFC6                  	inc rsi
  6954 000041AB EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6955                                  .L_lambda_simple_params_end_0029:
  6956 000041AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6957 000041B0 4889C3                  	mov rbx, rax
  6958 000041B3 58                      	pop rax
  6959 000041B4 C60004                  	mov byte [rax], T_closure
  6960 000041B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6961 000041BB 48C74009[C8410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6962 000041C3 E944010000              	jmp .L_lambda_simple_end_0029
  6963                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6964 000041C8 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6965 000041CE 740B                    	je .L_lambda_simple_arity_check_ok_0029
  6966 000041D0 FF742410                	push qword [rsp + 8 * 2]
  6967 000041D4 6A02                    	push 2
  6968 000041D6 E933340100              	jmp L_error_incorrect_arity_simple
  6969                                  .L_lambda_simple_arity_check_ok_0029:
  6970 000041DB C8000000                	enter 0, 0
  6971                                  	; preparing a non-tail-call
  6972 000041DF 488B4528                	mov rax, PARAM(1)	; param s
  6973 000041E3 50                      	push rax
  6974 000041E4 6A01                    	push 1	; arg count
  6975 000041E6 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6976 000041EE 803805                  	cmp byte [rax], T_undefined
  6977 000041F1 0F8431330100            	je L_error_fvar_undefined
  6978 000041F7 803804                  	cmp byte [rax], T_closure
  6979 000041FA 0F85AC330100            	jne L_error_non_closure
  6980 00004200 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6981 00004203 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6982 00004206 483D[02000000]          	cmp rax, sob_boolean_false
  6983 0000420C 740F                    	je .L_if_else_0009
  6984 0000420E 48B8-                   	mov rax, L_constants + 1
  6984 00004210 [0100000000000000] 
  6985 00004218 E9EB000000              	jmp .L_if_end_0009
  6986                                  .L_if_else_0009:
  6987                                  	; preparing a tail-call
  6988                                  	; preparing a non-tail-call
  6989                                  	; preparing a non-tail-call
  6990 0000421D 488B4528                	mov rax, PARAM(1)	; param s
  6991 00004221 50                      	push rax
  6992 00004222 6A01                    	push 1	; arg count
  6993 00004224 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6994 0000422C 803805                  	cmp byte [rax], T_undefined
  6995 0000422F 0F84F3320100            	je L_error_fvar_undefined
  6996 00004235 803804                  	cmp byte [rax], T_closure
  6997 00004238 0F856E330100            	jne L_error_non_closure
  6998 0000423E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6999 00004241 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7000 00004244 50                      	push rax
  7001 00004245 488B4520                	mov rax, PARAM(0)	; param f
  7002 00004249 50                      	push rax
  7003 0000424A 6A02                    	push 2	; arg count
  7004 0000424C 488B4510                	mov rax, ENV
  7005 00004250 488B00                  	mov rax, qword [rax + 8 * 0]
  7006 00004253 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7007 00004256 488B00                  	mov rax, qword [rax]
  7008 00004259 803804                  	cmp byte [rax], T_closure
  7009 0000425C 0F854A330100            	jne L_error_non_closure
  7010 00004262 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7011 00004265 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7012 00004268 50                      	push rax
  7013                                  	; preparing a non-tail-call
  7014                                  	; preparing a non-tail-call
  7015 00004269 488B4528                	mov rax, PARAM(1)	; param s
  7016 0000426D 50                      	push rax
  7017 0000426E 6A01                    	push 1	; arg count
  7018 00004270 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7019 00004278 803805                  	cmp byte [rax], T_undefined
  7020 0000427B 0F84A7320100            	je L_error_fvar_undefined
  7021 00004281 803804                  	cmp byte [rax], T_closure
  7022 00004284 0F8522330100            	jne L_error_non_closure
  7023 0000428A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7024 0000428D FF5009                  	call SOB_CLOSURE_CODE(rax)
  7025 00004290 50                      	push rax
  7026 00004291 6A01                    	push 1	; arg count
  7027 00004293 488B4520                	mov rax, PARAM(0)	; param f
  7028 00004297 803804                  	cmp byte [rax], T_closure
  7029 0000429A 0F850C330100            	jne L_error_non_closure
  7030 000042A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7031 000042A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7032 000042A6 50                      	push rax
  7033 000042A7 6A02                    	push 2	; arg count
  7034 000042A9 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7035 000042B1 803805                  	cmp byte [rax], T_undefined
  7036 000042B4 0F846E320100            	je L_error_fvar_undefined
  7037 000042BA 803804                  	cmp byte [rax], T_closure
  7038 000042BD 0F85E9320100            	jne L_error_non_closure
  7039 000042C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7040 000042C6 FF7508                  	push qword [rbp + 8 * 1]
  7041                                   ; old ret addr
  7042 000042C9 FF7500                  	push qword [rbp]
  7043                                   ; restore the old rbp
  7044 000042CC BB02000000              	mov rbx, 2
  7045 000042D1 4883C303                	add rbx, 3
  7046 000042D5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7047 000042D9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7048 000042DE 4C8D4DF8                	lea r9, [rbp - 8]
  7049 000042E2 B906000000              	mov rcx, 6
  7050                                  .L_tc_recycle_frame_loop_0029:
  7051 000042E7 4883F900                	cmp rcx, 0
  7052 000042EB 7413                    	je .L_tc_recycle_frame_done_0029
  7053 000042ED 4D8B11                  	mov r10, qword [r9]
  7054 000042F0 4D8910                  	mov qword [r8], r10
  7055 000042F3 4983E808                	sub r8, 8
  7056 000042F7 4983E908                	sub r9, 8
  7057 000042FB 48FFC9                  	dec rcx
  7058 000042FE EBE7                    	jmp .L_tc_recycle_frame_loop_0029
  7059                                  .L_tc_recycle_frame_done_0029:
  7060 00004300 498D6008                	lea rsp, [r8 + 8]
  7061 00004304 5D                      	pop rbp ; restore the old rbp
  7062 00004305 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7063                                  .L_if_end_0009:
  7064 00004308 C9                      	leave
  7065 00004309 C22000                  	ret AND_KILL_FRAME(2)
  7066                                  .L_lambda_simple_end_0029:	; new closure is in rax
  7067 0000430C 50                      	push rax
  7068 0000430D 488B4520                	mov rax, PARAM(0)	; param map1
  7069 00004311 8F00                    	pop qword [rax]
  7070 00004313 48B8-                   	mov rax, sob_void
  7070 00004315 [0000000000000000] 
  7071                                  
  7072 0000431D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7073 00004322 E82E330100              	call malloc
  7074 00004327 50                      	push rax
  7075 00004328 BF10000000              	mov rdi, 8 * 2	; new rib
  7076 0000432D E823330100              	call malloc
  7077 00004332 50                      	push rax
  7078 00004333 BF10000000              	mov rdi, 8 * 2	; extended env
  7079 00004338 E818330100              	call malloc
  7080 0000433D 488B7D10                	mov rdi, ENV
  7081 00004341 BE00000000              	mov rsi, 0
  7082 00004346 BA01000000              	mov rdx, 1
  7083                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  7084 0000434B 4883FE01                	cmp rsi, 1
  7085 0000434F 7410                    	je .L_lambda_simple_env_end_002a
  7086 00004351 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7087 00004355 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7088 00004359 48FFC6                  	inc rsi
  7089 0000435C 48FFC2                  	inc rdx
  7090 0000435F EBEA                    	jmp .L_lambda_simple_env_loop_002a
  7091                                  .L_lambda_simple_env_end_002a:
  7092 00004361 5B                      	pop rbx
  7093 00004362 BE00000000              	mov rsi, 0
  7094                                  .L_lambda_simple_params_loop_002a:	; copy params
  7095 00004367 4883FE02                	cmp rsi, 2
  7096 0000436B 740E                    	je .L_lambda_simple_params_end_002a
  7097 0000436D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7098 00004372 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7099 00004376 48FFC6                  	inc rsi
  7100 00004379 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  7101                                  .L_lambda_simple_params_end_002a:
  7102 0000437B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7103 0000437E 4889C3                  	mov rbx, rax
  7104 00004381 58                      	pop rax
  7105 00004382 C60004                  	mov byte [rax], T_closure
  7106 00004385 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7107 00004389 48C74009[96430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  7108 00004391 E996010000              	jmp .L_lambda_simple_end_002a
  7109                                  .L_lambda_simple_code_002a:	; lambda-simple body
  7110 00004396 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7111 0000439C 740B                    	je .L_lambda_simple_arity_check_ok_002a
  7112 0000439E FF742410                	push qword [rsp + 8 * 2]
  7113 000043A2 6A02                    	push 2
  7114 000043A4 E965320100              	jmp L_error_incorrect_arity_simple
  7115                                  .L_lambda_simple_arity_check_ok_002a:
  7116 000043A9 C8000000                	enter 0, 0
  7117                                  	; preparing a non-tail-call
  7118                                  	; preparing a non-tail-call
  7119 000043AD 488B4528                	mov rax, PARAM(1)	; param s
  7120 000043B1 50                      	push rax
  7121 000043B2 6A01                    	push 1	; arg count
  7122 000043B4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7123 000043BC 803805                  	cmp byte [rax], T_undefined
  7124 000043BF 0F8463310100            	je L_error_fvar_undefined
  7125 000043C5 803804                  	cmp byte [rax], T_closure
  7126 000043C8 0F85DE310100            	jne L_error_non_closure
  7127 000043CE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7128 000043D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7129 000043D4 50                      	push rax
  7130 000043D5 6A01                    	push 1	; arg count
  7131 000043D7 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7132 000043DF 803805                  	cmp byte [rax], T_undefined
  7133 000043E2 0F8440310100            	je L_error_fvar_undefined
  7134 000043E8 803804                  	cmp byte [rax], T_closure
  7135 000043EB 0F85BB310100            	jne L_error_non_closure
  7136 000043F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7137 000043F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7138 000043F7 483D[02000000]          	cmp rax, sob_boolean_false
  7139 000043FD 740F                    	je .L_if_else_000a
  7140 000043FF 48B8-                   	mov rax, L_constants + 1
  7140 00004401 [0100000000000000] 
  7141 00004409 E91A010000              	jmp .L_if_end_000a
  7142                                  .L_if_else_000a:
  7143                                  	; preparing a tail-call
  7144                                  	; preparing a non-tail-call
  7145                                  	; preparing a non-tail-call
  7146 0000440E 488B4528                	mov rax, PARAM(1)	; param s
  7147 00004412 50                      	push rax
  7148 00004413 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7149 0000441B 803805                  	cmp byte [rax], T_undefined
  7150 0000441E 0F8404310100            	je L_error_fvar_undefined
  7151 00004424 50                      	push rax
  7152 00004425 6A02                    	push 2	; arg count
  7153 00004427 488B4510                	mov rax, ENV
  7154 0000442B 488B00                  	mov rax, qword [rax + 8 * 0]
  7155 0000442E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7156 00004431 488B00                  	mov rax, qword [rax]
  7157 00004434 803804                  	cmp byte [rax], T_closure
  7158 00004437 0F856F310100            	jne L_error_non_closure
  7159 0000443D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7160 00004440 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7161 00004443 50                      	push rax
  7162 00004444 488B4520                	mov rax, PARAM(0)	; param f
  7163 00004448 50                      	push rax
  7164 00004449 6A02                    	push 2	; arg count
  7165 0000444B 488B4510                	mov rax, ENV
  7166 0000444F 488B00                  	mov rax, qword [rax + 8 * 0]
  7167 00004452 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7168 00004456 488B00                  	mov rax, qword [rax]
  7169 00004459 803804                  	cmp byte [rax], T_closure
  7170 0000445C 0F854A310100            	jne L_error_non_closure
  7171 00004462 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7172 00004465 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7173 00004468 50                      	push rax
  7174                                  	; preparing a non-tail-call
  7175                                  	; preparing a non-tail-call
  7176 00004469 488B4528                	mov rax, PARAM(1)	; param s
  7177 0000446D 50                      	push rax
  7178 0000446E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7179 00004476 803805                  	cmp byte [rax], T_undefined
  7180 00004479 0F84A9300100            	je L_error_fvar_undefined
  7181 0000447F 50                      	push rax
  7182 00004480 6A02                    	push 2	; arg count
  7183 00004482 488B4510                	mov rax, ENV
  7184 00004486 488B00                  	mov rax, qword [rax + 8 * 0]
  7185 00004489 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7186 0000448C 488B00                  	mov rax, qword [rax]
  7187 0000448F 803804                  	cmp byte [rax], T_closure
  7188 00004492 0F8514310100            	jne L_error_non_closure
  7189 00004498 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7190 0000449B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7191 0000449E 50                      	push rax
  7192 0000449F 488B4520                	mov rax, PARAM(0)	; param f
  7193 000044A3 50                      	push rax
  7194 000044A4 6A02                    	push 2	; arg count
  7195 000044A6 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  7196 000044AE 803805                  	cmp byte [rax], T_undefined
  7197 000044B1 0F8471300100            	je L_error_fvar_undefined
  7198 000044B7 803804                  	cmp byte [rax], T_closure
  7199 000044BA 0F85EC300100            	jne L_error_non_closure
  7200 000044C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7201 000044C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7202 000044C6 50                      	push rax
  7203 000044C7 6A02                    	push 2	; arg count
  7204 000044C9 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7205 000044D1 803805                  	cmp byte [rax], T_undefined
  7206 000044D4 0F844E300100            	je L_error_fvar_undefined
  7207 000044DA 803804                  	cmp byte [rax], T_closure
  7208 000044DD 0F85C9300100            	jne L_error_non_closure
  7209 000044E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7210 000044E6 FF7508                  	push qword [rbp + 8 * 1]
  7211                                   ; old ret addr
  7212 000044E9 FF7500                  	push qword [rbp]
  7213                                   ; restore the old rbp
  7214 000044EC BB02000000              	mov rbx, 2
  7215 000044F1 4883C303                	add rbx, 3
  7216 000044F5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7217 000044F9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7218 000044FE 4C8D4DF8                	lea r9, [rbp - 8]
  7219 00004502 B906000000              	mov rcx, 6
  7220                                  .L_tc_recycle_frame_loop_002a:
  7221 00004507 4883F900                	cmp rcx, 0
  7222 0000450B 7413                    	je .L_tc_recycle_frame_done_002a
  7223 0000450D 4D8B11                  	mov r10, qword [r9]
  7224 00004510 4D8910                  	mov qword [r8], r10
  7225 00004513 4983E808                	sub r8, 8
  7226 00004517 4983E908                	sub r9, 8
  7227 0000451B 48FFC9                  	dec rcx
  7228 0000451E EBE7                    	jmp .L_tc_recycle_frame_loop_002a
  7229                                  .L_tc_recycle_frame_done_002a:
  7230 00004520 498D6008                	lea rsp, [r8 + 8]
  7231 00004524 5D                      	pop rbp ; restore the old rbp
  7232 00004525 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7233                                  .L_if_end_000a:
  7234 00004528 C9                      	leave
  7235 00004529 C22000                  	ret AND_KILL_FRAME(2)
  7236                                  .L_lambda_simple_end_002a:	; new closure is in rax
  7237 0000452C 50                      	push rax
  7238 0000452D 488B4528                	mov rax, PARAM(1)	; param map-list
  7239 00004531 8F00                    	pop qword [rax]
  7240 00004533 48B8-                   	mov rax, sob_void
  7240 00004535 [0000000000000000] 
  7241                                  
  7242 0000453D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7243 00004542 E80E310100              	call malloc
  7244 00004547 50                      	push rax
  7245 00004548 BF10000000              	mov rdi, 8 * 2	; new rib
  7246 0000454D E803310100              	call malloc
  7247 00004552 50                      	push rax
  7248 00004553 BF10000000              	mov rdi, 8 * 2	; extended env
  7249 00004558 E8F8300100              	call malloc
  7250 0000455D 488B7D10                	mov rdi, ENV
  7251 00004561 4831F6                  	 xor rsi, rsi
  7252 00004564 4831D2                  	 xor rdx, rdx
  7253 00004567 48FFC2                  	inc rdx
  7254                                  .L_lambda_opt_env_loop_0006:	; 
  7255 0000456A 4883FE01                	cmp rsi, 1
  7256 0000456E 7410                    	je .L_lambda_opt_env_end_0006
  7257 00004570 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7258 00004574 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7259 00004578 48FFC6                  	inc rsi
  7260 0000457B 48FFC2                  	inc rdx
  7261 0000457E EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7262                                  .L_lambda_opt_env_end_0006:
  7263 00004580 5B                      	pop rbx
  7264 00004581 4831F6                  	xor rsi, rsi
  7265                                  .L_lambda_opt_params_loop_0006:	; copy params
  7266 00004584 4883FE02                	cmp rsi, 2
  7267 00004588 740E                    	je .L_lambda_opt_params_end_0006
  7268 0000458A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7269 0000458F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7270 00004593 48FFC6                  	inc rsi
  7271 00004596 EBEC                    	jmp .L_lambda_opt_params_loop_0006
  7272                                  .L_lambda_opt_params_end_0006:
  7273 00004598 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7274 0000459B 4889C3                  	mov rbx, rax
  7275 0000459E 58                      	pop rax
  7276 0000459F C60004                  	mov byte [rax], T_closure
  7277 000045A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7278 000045A6 48C74009[B3450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7279 000045AE E99D010000              	jmp .L_lambda_opt_end_0006
  7280                                  .L_lambda_opt_code_0006:
  7281 000045B3 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  7282 000045B8 4983FF01                	cmp r15, 1
  7283 000045BC 7409                    	je .L_lambda_opt_arity_check_exact_0006
  7284 000045BE 7F57                    	jg .L_lambda_opt_arity_check_more_0006
  7285 000045C0 6A01                    	push 1
  7286 000045C2 E95B300100              	jmp L_error_incorrect_arity_opt
  7287                                  .L_lambda_opt_arity_check_exact_0006: ;Exact case
  7288 000045C7 4C8B0424                	mov r8, qword [rsp -8 * 0]
  7289 000045CB 4C894424F8              	mov qword [rsp -8], r8
  7290 000045D0 4C8B442408              	mov r8, qword [rsp +8]
  7291 000045D5 4C890424                	mov qword [rsp +8 * 0], r8
  7292 000045D9 4C8B442410              	mov r8, qword [rsp +8 * 2]
  7293 000045DE 4C89C1                  	mov rcx, r8
  7294 000045E1 49FFC0                  	inc r8
  7295 000045E4 4C89442408              	mov qword [rsp +8], r8
  7296 000045E9 4889E2                  	mov rdx, rsp
  7297 000045EC 4883C218                	add rdx, 24
  7298                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0006:
  7299 000045F0 4883F900                	cmp rcx, 0
  7300 000045F4 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0006
  7301 000045F6 4C8B02                  	mov r8, qword [rdx]
  7302 000045F9 4C8942F8                	mov qword [rdx - 8], r8
  7303 000045FD 4883C208                	add rdx, 8
  7304 00004601 48FFC9                  	dec rcx
  7305 00004604 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0006
  7306                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0006:
  7307 00004606 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  7308 0000460E 4883EC08                	sub rsp, 8
  7309 00004612 E985000000              	jmp .L_lambda_opt_stack_adjusted_0006
  7310                                  .L_lambda_opt_arity_check_more_0006:
  7311 00004617 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  7312 0000461C 4D89C4                  	mov r12, r8
  7313 0000461F 4C89C1                  	mov rcx, r8
  7314 00004622 4D8D6802                	lea r13, [r8 + 2] 
  7315 00004626 4883E901                	sub rcx, 1
  7316 0000462A 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  7317 0000462F 49BE-                   	mov r14, sob_nil
  7317 00004631 [0100000000000000] 
  7318                                  .L_lambda_opt_create_list_of_opt_params_0006:
  7319 00004639 4883F900                	cmp rcx, 0
  7320 0000463D 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0006
  7321 0000463F BF11000000              	mov rdi, 17
  7322 00004644 E80C300100              	call malloc
  7323 00004649 C60021                  	mov byte [rax], T_pair
  7324 0000464C 498B1B                  	mov rbx, qword [r11]
  7325 0000464F 48895801                	mov qword [rax +1], rbx
  7326 00004653 4C897009                	mov qword [rax + 1 + 8], r14
  7327 00004657 4989C6                  	mov r14, rax
  7328 0000465A 48FFC9                  	dec rcx
  7329 0000465D 4983EB08                	sub r11, 8
  7330 00004661 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0006
  7331                                  .L_lambda_opt_create_list_of_opt_params_end_0006:
  7332 00004663 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
  7333 00004668 4D8932                  	mov qword [r10], r14
  7334 0000466B 4E8D2CED00000000        	lea r13, [8 * r13]
  7335 00004673 4901E5                  	add r13, rsp
  7336 00004676 B905000000              	mov rcx, 4 + 1
  7337                                  .L_lambda_opt_stack_shrink_loop_0006:
  7338 0000467B 4883F900                	cmp rcx, 0
  7339 0000467F 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0006
  7340 00004681 4D8B1A                  	mov r11, qword [r10]
  7341 00004684 4D895D00                	mov qword [r13], r11
  7342 00004688 4983EA08                	sub r10, 8
  7343 0000468C 4983ED08                	sub r13, 8
  7344 00004690 48FFC9                  	dec rcx
  7345 00004693 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7346                                  .L_lambda_opt_stack_shrink_loop_exit_0006:
  7347 00004695 4983C508                	add r13, 8
  7348 00004699 4C89EC                  	mov rsp, r13
  7349                                  .L_lambda_opt_stack_adjusted_0006:
  7350 0000469C 48C744241002000000      	mov qword [rsp + 8*2], 2
  7351 000046A5 C8000000                	enter 0, 0
  7352                                  	; preparing a non-tail-call
  7353 000046A9 488B4528                	mov rax, PARAM(1)	; param s
  7354 000046AD 50                      	push rax
  7355 000046AE 6A01                    	push 1	; arg count
  7356 000046B0 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7357 000046B8 803805                  	cmp byte [rax], T_undefined
  7358 000046BB 0F84672E0100            	je L_error_fvar_undefined
  7359 000046C1 803804                  	cmp byte [rax], T_closure
  7360 000046C4 0F85E22E0100            	jne L_error_non_closure
  7361 000046CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  7362 000046CD FF5009                  	call SOB_CLOSURE_CODE(rax)
  7363 000046D0 483D[02000000]          	cmp rax, sob_boolean_false
  7364 000046D6 740C                    	je .L_if_else_000b
  7365 000046D8 48B8-                   	mov rax, L_constants + 1
  7365 000046DA [0100000000000000] 
  7366 000046E2 EB68                    	jmp .L_if_end_000b
  7367                                  .L_if_else_000b:
  7368                                  	; preparing a tail-call
  7369 000046E4 488B4528                	mov rax, PARAM(1)	; param s
  7370 000046E8 50                      	push rax
  7371 000046E9 488B4520                	mov rax, PARAM(0)	; param f
  7372 000046ED 50                      	push rax
  7373 000046EE 6A02                    	push 2	; arg count
  7374 000046F0 488B4510                	mov rax, ENV
  7375 000046F4 488B00                  	mov rax, qword [rax + 8 * 0]
  7376 000046F7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7377 000046FB 488B00                  	mov rax, qword [rax]
  7378 000046FE 803804                  	cmp byte [rax], T_closure
  7379 00004701 0F85A52E0100            	jne L_error_non_closure
  7380 00004707 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7381 0000470A FF7508                  	push qword [rbp + 8 * 1]
  7382                                   ; old ret addr
  7383 0000470D FF7500                  	push qword [rbp]
  7384                                   ; restore the old rbp
  7385 00004710 BB02000000              	mov rbx, 2
  7386 00004715 4883C303                	add rbx, 3
  7387 00004719 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7388 0000471D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7389 00004722 4C8D4DF8                	lea r9, [rbp - 8]
  7390 00004726 B906000000              	mov rcx, 6
  7391                                  .L_tc_recycle_frame_loop_002b:
  7392 0000472B 4883F900                	cmp rcx, 0
  7393 0000472F 7413                    	je .L_tc_recycle_frame_done_002b
  7394 00004731 4D8B11                  	mov r10, qword [r9]
  7395 00004734 4D8910                  	mov qword [r8], r10
  7396 00004737 4983E808                	sub r8, 8
  7397 0000473B 4983E908                	sub r9, 8
  7398 0000473F 48FFC9                  	dec rcx
  7399 00004742 EBE7                    	jmp .L_tc_recycle_frame_loop_002b
  7400                                  .L_tc_recycle_frame_done_002b:
  7401 00004744 498D6008                	lea rsp, [r8 + 8]
  7402 00004748 5D                      	pop rbp ; restore the old rbp
  7403 00004749 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7404                                  .L_if_end_000b:
  7405 0000474C C9                      	leave
  7406 0000474D C22000                  	ret 8 * (2 + 2)
  7407                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7408 00004750 C9                      	leave
  7409 00004751 C22000                  	ret AND_KILL_FRAME(2)
  7410                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7411 00004754 803804                  	cmp byte [rax], T_closure
  7412 00004757 0F854F2E0100            	jne L_error_non_closure
  7413 0000475D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7414 00004760 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7415 00004763 48890425[9C140000]      	mov qword [free_var_103], rax
  7416 0000476B 48B8-                   	mov rax, sob_void
  7416 0000476D [0000000000000000] 
  7417                                  
  7418 00004775 4889C7                  	mov rdi, rax
  7419 00004778 E82D310100              	call print_sexpr_if_not_void
  7420 0000477D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7421 00004782 E8CE2E0100              	call malloc
  7422 00004787 50                      	push rax
  7423 00004788 BF00000000              	mov rdi, 8 * 0	; new rib
  7424 0000478D E8C32E0100              	call malloc
  7425 00004792 50                      	push rax
  7426 00004793 BF08000000              	mov rdi, 8 * 1	; extended env
  7427 00004798 E8B82E0100              	call malloc
  7428 0000479D 488B7D10                	mov rdi, ENV
  7429 000047A1 BE00000000              	mov rsi, 0
  7430 000047A6 BA01000000              	mov rdx, 1
  7431                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  7432 000047AB 4883FE00                	cmp rsi, 0
  7433 000047AF 7410                    	je .L_lambda_simple_env_end_002b
  7434 000047B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7435 000047B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7436 000047B9 48FFC6                  	inc rsi
  7437 000047BC 48FFC2                  	inc rdx
  7438 000047BF EBEA                    	jmp .L_lambda_simple_env_loop_002b
  7439                                  .L_lambda_simple_env_end_002b:
  7440 000047C1 5B                      	pop rbx
  7441 000047C2 BE00000000              	mov rsi, 0
  7442                                  .L_lambda_simple_params_loop_002b:	; copy params
  7443 000047C7 4883FE00                	cmp rsi, 0
  7444 000047CB 740E                    	je .L_lambda_simple_params_end_002b
  7445 000047CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7446 000047D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7447 000047D6 48FFC6                  	inc rsi
  7448 000047D9 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  7449                                  .L_lambda_simple_params_end_002b:
  7450 000047DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7451 000047DE 4889C3                  	mov rbx, rax
  7452 000047E1 58                      	pop rax
  7453 000047E2 C60004                  	mov byte [rax], T_closure
  7454 000047E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7455 000047E9 48C74009[F6470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  7456 000047F1 E98C010000              	jmp .L_lambda_simple_end_002b
  7457                                  .L_lambda_simple_code_002b:	; lambda-simple body
  7458 000047F6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7459 000047FC 740B                    	je .L_lambda_simple_arity_check_ok_002b
  7460 000047FE FF742410                	push qword [rsp + 8 * 2]
  7461 00004802 6A01                    	push 1
  7462 00004804 E9052E0100              	jmp L_error_incorrect_arity_simple
  7463                                  .L_lambda_simple_arity_check_ok_002b:
  7464 00004809 C8000000                	enter 0, 0
  7465                                  	; preparing a tail-call
  7466 0000480D 488B4520                	mov rax, PARAM(0)	; param s
  7467 00004811 50                      	push rax
  7468 00004812 48B8-                   	mov rax, L_constants + 1
  7468 00004814 [0100000000000000] 
  7469 0000481C 50                      	push rax
  7470 0000481D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7471 00004822 E82E2E0100              	call malloc
  7472 00004827 50                      	push rax
  7473 00004828 BF08000000              	mov rdi, 8 * 1	; new rib
  7474 0000482D E8232E0100              	call malloc
  7475 00004832 50                      	push rax
  7476 00004833 BF10000000              	mov rdi, 8 * 2	; extended env
  7477 00004838 E8182E0100              	call malloc
  7478 0000483D 488B7D10                	mov rdi, ENV
  7479 00004841 BE00000000              	mov rsi, 0
  7480 00004846 BA01000000              	mov rdx, 1
  7481                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7482 0000484B 4883FE01                	cmp rsi, 1
  7483 0000484F 7410                    	je .L_lambda_simple_env_end_002c
  7484 00004851 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7485 00004855 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7486 00004859 48FFC6                  	inc rsi
  7487 0000485C 48FFC2                  	inc rdx
  7488 0000485F EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7489                                  .L_lambda_simple_env_end_002c:
  7490 00004861 5B                      	pop rbx
  7491 00004862 BE00000000              	mov rsi, 0
  7492                                  .L_lambda_simple_params_loop_002c:	; copy params
  7493 00004867 4883FE01                	cmp rsi, 1
  7494 0000486B 740E                    	je .L_lambda_simple_params_end_002c
  7495 0000486D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7496 00004872 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7497 00004876 48FFC6                  	inc rsi
  7498 00004879 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7499                                  .L_lambda_simple_params_end_002c:
  7500 0000487B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7501 0000487E 4889C3                  	mov rbx, rax
  7502 00004881 58                      	pop rax
  7503 00004882 C60004                  	mov byte [rax], T_closure
  7504 00004885 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7505 00004889 48C74009[96480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7506 00004891 E986000000              	jmp .L_lambda_simple_end_002c
  7507                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7508 00004896 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7509 0000489C 740B                    	je .L_lambda_simple_arity_check_ok_002c
  7510 0000489E FF742410                	push qword [rsp + 8 * 2]
  7511 000048A2 6A02                    	push 2
  7512 000048A4 E9652D0100              	jmp L_error_incorrect_arity_simple
  7513                                  .L_lambda_simple_arity_check_ok_002c:
  7514 000048A9 C8000000                	enter 0, 0
  7515                                  	; preparing a tail-call
  7516 000048AD 488B4520                	mov rax, PARAM(0)	; param r
  7517 000048B1 50                      	push rax
  7518 000048B2 488B4528                	mov rax, PARAM(1)	; param a
  7519 000048B6 50                      	push rax
  7520 000048B7 6A02                    	push 2	; arg count
  7521 000048B9 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7522 000048C1 803805                  	cmp byte [rax], T_undefined
  7523 000048C4 0F845E2C0100            	je L_error_fvar_undefined
  7524 000048CA 803804                  	cmp byte [rax], T_closure
  7525 000048CD 0F85D92C0100            	jne L_error_non_closure
  7526 000048D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7527 000048D6 FF7508                  	push qword [rbp + 8 * 1]
  7528                                   ; old ret addr
  7529 000048D9 FF7500                  	push qword [rbp]
  7530                                   ; restore the old rbp
  7531 000048DC BB02000000              	mov rbx, 2
  7532 000048E1 4883C303                	add rbx, 3
  7533 000048E5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7534 000048E9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7535 000048EE 4C8D4DF8                	lea r9, [rbp - 8]
  7536 000048F2 B906000000              	mov rcx, 6
  7537                                  .L_tc_recycle_frame_loop_002d:
  7538 000048F7 4883F900                	cmp rcx, 0
  7539 000048FB 7413                    	je .L_tc_recycle_frame_done_002d
  7540 000048FD 4D8B11                  	mov r10, qword [r9]
  7541 00004900 4D8910                  	mov qword [r8], r10
  7542 00004903 4983E808                	sub r8, 8
  7543 00004907 4983E908                	sub r9, 8
  7544 0000490B 48FFC9                  	dec rcx
  7545 0000490E EBE7                    	jmp .L_tc_recycle_frame_loop_002d
  7546                                  .L_tc_recycle_frame_done_002d:
  7547 00004910 498D6008                	lea rsp, [r8 + 8]
  7548 00004914 5D                      	pop rbp ; restore the old rbp
  7549 00004915 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7550 00004918 C9                      	leave
  7551 00004919 C22000                  	ret AND_KILL_FRAME(2)
  7552                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7553 0000491C 50                      	push rax
  7554 0000491D 6A03                    	push 3	; arg count
  7555 0000491F 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7556 00004927 803805                  	cmp byte [rax], T_undefined
  7557 0000492A 0F84F82B0100            	je L_error_fvar_undefined
  7558 00004930 803804                  	cmp byte [rax], T_closure
  7559 00004933 0F85732C0100            	jne L_error_non_closure
  7560 00004939 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7561 0000493C FF7508                  	push qword [rbp + 8 * 1]
  7562                                   ; old ret addr
  7563 0000493F FF7500                  	push qword [rbp]
  7564                                   ; restore the old rbp
  7565 00004942 BB03000000              	mov rbx, 3
  7566 00004947 4883C303                	add rbx, 3
  7567 0000494B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7568 0000494F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7569 00004954 4C8D4DF8                	lea r9, [rbp - 8]
  7570 00004958 B907000000              	mov rcx, 7
  7571                                  .L_tc_recycle_frame_loop_002c:
  7572 0000495D 4883F900                	cmp rcx, 0
  7573 00004961 7413                    	je .L_tc_recycle_frame_done_002c
  7574 00004963 4D8B11                  	mov r10, qword [r9]
  7575 00004966 4D8910                  	mov qword [r8], r10
  7576 00004969 4983E808                	sub r8, 8
  7577 0000496D 4983E908                	sub r9, 8
  7578 00004971 48FFC9                  	dec rcx
  7579 00004974 EBE7                    	jmp .L_tc_recycle_frame_loop_002c
  7580                                  .L_tc_recycle_frame_done_002c:
  7581 00004976 498D6008                	lea rsp, [r8 + 8]
  7582 0000497A 5D                      	pop rbp ; restore the old rbp
  7583 0000497B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7584 0000497E C9                      	leave
  7585 0000497F C21800                  	ret AND_KILL_FRAME(1)
  7586                                  .L_lambda_simple_end_002b:	; new closure is in rax
  7587 00004982 48890425[9B150000]      	mov qword [free_var_118], rax
  7588 0000498A 48B8-                   	mov rax, sob_void
  7588 0000498C [0000000000000000] 
  7589                                  
  7590 00004994 4889C7                  	mov rdi, rax
  7591 00004997 E80E2F0100              	call print_sexpr_if_not_void
  7592                                  	; preparing a non-tail-call
  7593 0000499C 48B8-                   	mov rax, L_constants + 1993
  7593 0000499E [C907000000000000] 
  7594 000049A6 50                      	push rax
  7595 000049A7 48B8-                   	mov rax, L_constants + 1993
  7595 000049A9 [C907000000000000] 
  7596 000049B1 50                      	push rax
  7597 000049B2 6A02                    	push 2	; arg count
  7598 000049B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7599 000049B9 E8972C0100              	call malloc
  7600 000049BE 50                      	push rax
  7601 000049BF BF00000000              	mov rdi, 8 * 0	; new rib
  7602 000049C4 E88C2C0100              	call malloc
  7603 000049C9 50                      	push rax
  7604 000049CA BF08000000              	mov rdi, 8 * 1	; extended env
  7605 000049CF E8812C0100              	call malloc
  7606 000049D4 488B7D10                	mov rdi, ENV
  7607 000049D8 BE00000000              	mov rsi, 0
  7608 000049DD BA01000000              	mov rdx, 1
  7609                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7610 000049E2 4883FE00                	cmp rsi, 0
  7611 000049E6 7410                    	je .L_lambda_simple_env_end_002d
  7612 000049E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7613 000049EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7614 000049F0 48FFC6                  	inc rsi
  7615 000049F3 48FFC2                  	inc rdx
  7616 000049F6 EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7617                                  .L_lambda_simple_env_end_002d:
  7618 000049F8 5B                      	pop rbx
  7619 000049F9 BE00000000              	mov rsi, 0
  7620                                  .L_lambda_simple_params_loop_002d:	; copy params
  7621 000049FE 4883FE00                	cmp rsi, 0
  7622 00004A02 740E                    	je .L_lambda_simple_params_end_002d
  7623 00004A04 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7624 00004A09 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7625 00004A0D 48FFC6                  	inc rsi
  7626 00004A10 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7627                                  .L_lambda_simple_params_end_002d:
  7628 00004A12 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7629 00004A15 4889C3                  	mov rbx, rax
  7630 00004A18 58                      	pop rax
  7631 00004A19 C60004                  	mov byte [rax], T_closure
  7632 00004A1C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7633 00004A20 48C74009[2D4A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7634 00004A28 E916060000              	jmp .L_lambda_simple_end_002d
  7635                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7636 00004A2D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7637 00004A33 740B                    	je .L_lambda_simple_arity_check_ok_002d
  7638 00004A35 FF742410                	push qword [rsp + 8 * 2]
  7639 00004A39 6A02                    	push 2
  7640 00004A3B E9CE2B0100              	jmp L_error_incorrect_arity_simple
  7641                                  .L_lambda_simple_arity_check_ok_002d:
  7642 00004A40 C8000000                	enter 0, 0
  7643 00004A44 BF08000000              	mov rdi, 8*1
  7644 00004A49 E8072C0100              	call malloc
  7645 00004A4E 488B5D20                	mov rbx, PARAM(0)
  7646 00004A52 488918                  	mov qword [rax], rbx
  7647 00004A55 48894520                	mov PARAM(0), rax
  7648 00004A59 48B8-                   	mov rax, sob_void
  7648 00004A5B [0000000000000000] 
  7649                                  
  7650 00004A63 BF08000000              	mov rdi, 8*1
  7651 00004A68 E8E82B0100              	call malloc
  7652 00004A6D 488B5D28                	mov rbx, PARAM(1)
  7653 00004A71 488918                  	mov qword [rax], rbx
  7654 00004A74 48894528                	mov PARAM(1), rax
  7655 00004A78 48B8-                   	mov rax, sob_void
  7655 00004A7A [0000000000000000] 
  7656                                  
  7657 00004A82 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7658 00004A87 E8C92B0100              	call malloc
  7659 00004A8C 50                      	push rax
  7660 00004A8D BF10000000              	mov rdi, 8 * 2	; new rib
  7661 00004A92 E8BE2B0100              	call malloc
  7662 00004A97 50                      	push rax
  7663 00004A98 BF10000000              	mov rdi, 8 * 2	; extended env
  7664 00004A9D E8B32B0100              	call malloc
  7665 00004AA2 488B7D10                	mov rdi, ENV
  7666 00004AA6 BE00000000              	mov rsi, 0
  7667 00004AAB BA01000000              	mov rdx, 1
  7668                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7669 00004AB0 4883FE01                	cmp rsi, 1
  7670 00004AB4 7410                    	je .L_lambda_simple_env_end_002e
  7671 00004AB6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7672 00004ABA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7673 00004ABE 48FFC6                  	inc rsi
  7674 00004AC1 48FFC2                  	inc rdx
  7675 00004AC4 EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7676                                  .L_lambda_simple_env_end_002e:
  7677 00004AC6 5B                      	pop rbx
  7678 00004AC7 BE00000000              	mov rsi, 0
  7679                                  .L_lambda_simple_params_loop_002e:	; copy params
  7680 00004ACC 4883FE02                	cmp rsi, 2
  7681 00004AD0 740E                    	je .L_lambda_simple_params_end_002e
  7682 00004AD2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7683 00004AD7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7684 00004ADB 48FFC6                  	inc rsi
  7685 00004ADE EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7686                                  .L_lambda_simple_params_end_002e:
  7687 00004AE0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7688 00004AE3 4889C3                  	mov rbx, rax
  7689 00004AE6 58                      	pop rax
  7690 00004AE7 C60004                  	mov byte [rax], T_closure
  7691 00004AEA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7692 00004AEE 48C74009[FB4A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7693 00004AF6 E925010000              	jmp .L_lambda_simple_end_002e
  7694                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7695 00004AFB 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7696 00004B01 740B                    	je .L_lambda_simple_arity_check_ok_002e
  7697 00004B03 FF742410                	push qword [rsp + 8 * 2]
  7698 00004B07 6A02                    	push 2
  7699 00004B09 E9002B0100              	jmp L_error_incorrect_arity_simple
  7700                                  .L_lambda_simple_arity_check_ok_002e:
  7701 00004B0E C8000000                	enter 0, 0
  7702                                  	; preparing a non-tail-call
  7703 00004B12 488B4528                	mov rax, PARAM(1)	; param sr
  7704 00004B16 50                      	push rax
  7705 00004B17 6A01                    	push 1	; arg count
  7706 00004B19 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7707 00004B21 803805                  	cmp byte [rax], T_undefined
  7708 00004B24 0F84FE290100            	je L_error_fvar_undefined
  7709 00004B2A 803804                  	cmp byte [rax], T_closure
  7710 00004B2D 0F85792A0100            	jne L_error_non_closure
  7711 00004B33 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7712 00004B36 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7713 00004B39 483D[02000000]          	cmp rax, sob_boolean_false
  7714 00004B3F 7409                    	je .L_if_else_000c
  7715 00004B41 488B4520                	mov rax, PARAM(0)	; param s1
  7716 00004B45 E9D2000000              	jmp .L_if_end_000c
  7717                                  .L_if_else_000c:
  7718                                  	; preparing a tail-call
  7719                                  	; preparing a non-tail-call
  7720                                  	; preparing a non-tail-call
  7721 00004B4A 488B4528                	mov rax, PARAM(1)	; param sr
  7722 00004B4E 50                      	push rax
  7723 00004B4F 6A01                    	push 1	; arg count
  7724 00004B51 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7725 00004B59 803805                  	cmp byte [rax], T_undefined
  7726 00004B5C 0F84C6290100            	je L_error_fvar_undefined
  7727 00004B62 803804                  	cmp byte [rax], T_closure
  7728 00004B65 0F85412A0100            	jne L_error_non_closure
  7729 00004B6B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7730 00004B6E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7731 00004B71 50                      	push rax
  7732                                  	; preparing a non-tail-call
  7733 00004B72 488B4528                	mov rax, PARAM(1)	; param sr
  7734 00004B76 50                      	push rax
  7735 00004B77 6A01                    	push 1	; arg count
  7736 00004B79 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7737 00004B81 803805                  	cmp byte [rax], T_undefined
  7738 00004B84 0F849E290100            	je L_error_fvar_undefined
  7739 00004B8A 803804                  	cmp byte [rax], T_closure
  7740 00004B8D 0F85192A0100            	jne L_error_non_closure
  7741 00004B93 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7742 00004B96 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7743 00004B99 50                      	push rax
  7744 00004B9A 6A02                    	push 2	; arg count
  7745 00004B9C 488B4510                	mov rax, ENV
  7746 00004BA0 488B00                  	mov rax, qword [rax + 8 * 0]
  7747 00004BA3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7748 00004BA6 488B00                  	mov rax, qword [rax]
  7749 00004BA9 803804                  	cmp byte [rax], T_closure
  7750 00004BAC 0F85FA290100            	jne L_error_non_closure
  7751 00004BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7752 00004BB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7753 00004BB8 50                      	push rax
  7754 00004BB9 488B4520                	mov rax, PARAM(0)	; param s1
  7755 00004BBD 50                      	push rax
  7756 00004BBE 6A02                    	push 2	; arg count
  7757 00004BC0 488B4510                	mov rax, ENV
  7758 00004BC4 488B00                  	mov rax, qword [rax + 8 * 0]
  7759 00004BC7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7760 00004BCB 488B00                  	mov rax, qword [rax]
  7761 00004BCE 803804                  	cmp byte [rax], T_closure
  7762 00004BD1 0F85D5290100            	jne L_error_non_closure
  7763 00004BD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7764 00004BDA FF7508                  	push qword [rbp + 8 * 1]
  7765                                   ; old ret addr
  7766 00004BDD FF7500                  	push qword [rbp]
  7767                                   ; restore the old rbp
  7768 00004BE0 BB02000000              	mov rbx, 2
  7769 00004BE5 4883C303                	add rbx, 3
  7770 00004BE9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7771 00004BED 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7772 00004BF2 4C8D4DF8                	lea r9, [rbp - 8]
  7773 00004BF6 B906000000              	mov rcx, 6
  7774                                  .L_tc_recycle_frame_loop_002e:
  7775 00004BFB 4883F900                	cmp rcx, 0
  7776 00004BFF 7413                    	je .L_tc_recycle_frame_done_002e
  7777 00004C01 4D8B11                  	mov r10, qword [r9]
  7778 00004C04 4D8910                  	mov qword [r8], r10
  7779 00004C07 4983E808                	sub r8, 8
  7780 00004C0B 4983E908                	sub r9, 8
  7781 00004C0F 48FFC9                  	dec rcx
  7782 00004C12 EBE7                    	jmp .L_tc_recycle_frame_loop_002e
  7783                                  .L_tc_recycle_frame_done_002e:
  7784 00004C14 498D6008                	lea rsp, [r8 + 8]
  7785 00004C18 5D                      	pop rbp ; restore the old rbp
  7786 00004C19 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7787                                  .L_if_end_000c:
  7788 00004C1C C9                      	leave
  7789 00004C1D C22000                  	ret AND_KILL_FRAME(2)
  7790                                  .L_lambda_simple_end_002e:	; new closure is in rax
  7791 00004C20 50                      	push rax
  7792 00004C21 488B4520                	mov rax, PARAM(0)	; param run-1
  7793 00004C25 8F00                    	pop qword [rax]
  7794 00004C27 48B8-                   	mov rax, sob_void
  7794 00004C29 [0000000000000000] 
  7795                                  
  7796 00004C31 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7797 00004C36 E81A2A0100              	call malloc
  7798 00004C3B 50                      	push rax
  7799 00004C3C BF10000000              	mov rdi, 8 * 2	; new rib
  7800 00004C41 E80F2A0100              	call malloc
  7801 00004C46 50                      	push rax
  7802 00004C47 BF10000000              	mov rdi, 8 * 2	; extended env
  7803 00004C4C E8042A0100              	call malloc
  7804 00004C51 488B7D10                	mov rdi, ENV
  7805 00004C55 BE00000000              	mov rsi, 0
  7806 00004C5A BA01000000              	mov rdx, 1
  7807                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7808 00004C5F 4883FE01                	cmp rsi, 1
  7809 00004C63 7410                    	je .L_lambda_simple_env_end_002f
  7810 00004C65 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7811 00004C69 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7812 00004C6D 48FFC6                  	inc rsi
  7813 00004C70 48FFC2                  	inc rdx
  7814 00004C73 EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7815                                  .L_lambda_simple_env_end_002f:
  7816 00004C75 5B                      	pop rbx
  7817 00004C76 BE00000000              	mov rsi, 0
  7818                                  .L_lambda_simple_params_loop_002f:	; copy params
  7819 00004C7B 4883FE02                	cmp rsi, 2
  7820 00004C7F 740E                    	je .L_lambda_simple_params_end_002f
  7821 00004C81 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7822 00004C86 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7823 00004C8A 48FFC6                  	inc rsi
  7824 00004C8D EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7825                                  .L_lambda_simple_params_end_002f:
  7826 00004C8F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7827 00004C92 4889C3                  	mov rbx, rax
  7828 00004C95 58                      	pop rax
  7829 00004C96 C60004                  	mov byte [rax], T_closure
  7830 00004C99 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7831 00004C9D 48C74009[AA4C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7832 00004CA5 E929010000              	jmp .L_lambda_simple_end_002f
  7833                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7834 00004CAA 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7835 00004CB0 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7836 00004CB2 FF742410                	push qword [rsp + 8 * 2]
  7837 00004CB6 6A02                    	push 2
  7838 00004CB8 E951290100              	jmp L_error_incorrect_arity_simple
  7839                                  .L_lambda_simple_arity_check_ok_002f:
  7840 00004CBD C8000000                	enter 0, 0
  7841                                  	; preparing a non-tail-call
  7842 00004CC1 488B4520                	mov rax, PARAM(0)	; param s1
  7843 00004CC5 50                      	push rax
  7844 00004CC6 6A01                    	push 1	; arg count
  7845 00004CC8 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7846 00004CD0 803805                  	cmp byte [rax], T_undefined
  7847 00004CD3 0F844F280100            	je L_error_fvar_undefined
  7848 00004CD9 803804                  	cmp byte [rax], T_closure
  7849 00004CDC 0F85CA280100            	jne L_error_non_closure
  7850 00004CE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7851 00004CE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7852 00004CE8 483D[02000000]          	cmp rax, sob_boolean_false
  7853 00004CEE 7409                    	je .L_if_else_000d
  7854 00004CF0 488B4528                	mov rax, PARAM(1)	; param s2
  7855 00004CF4 E9D6000000              	jmp .L_if_end_000d
  7856                                  .L_if_else_000d:
  7857                                  	; preparing a tail-call
  7858                                  	; preparing a non-tail-call
  7859 00004CF9 488B4528                	mov rax, PARAM(1)	; param s2
  7860 00004CFD 50                      	push rax
  7861                                  	; preparing a non-tail-call
  7862 00004CFE 488B4520                	mov rax, PARAM(0)	; param s1
  7863 00004D02 50                      	push rax
  7864 00004D03 6A01                    	push 1	; arg count
  7865 00004D05 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7866 00004D0D 803805                  	cmp byte [rax], T_undefined
  7867 00004D10 0F8412280100            	je L_error_fvar_undefined
  7868 00004D16 803804                  	cmp byte [rax], T_closure
  7869 00004D19 0F858D280100            	jne L_error_non_closure
  7870 00004D1F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7871 00004D22 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7872 00004D25 50                      	push rax
  7873 00004D26 6A02                    	push 2	; arg count
  7874 00004D28 488B4510                	mov rax, ENV
  7875 00004D2C 488B00                  	mov rax, qword [rax + 8 * 0]
  7876 00004D2F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7877 00004D33 488B00                  	mov rax, qword [rax]
  7878 00004D36 803804                  	cmp byte [rax], T_closure
  7879 00004D39 0F856D280100            	jne L_error_non_closure
  7880 00004D3F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7881 00004D42 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7882 00004D45 50                      	push rax
  7883                                  	; preparing a non-tail-call
  7884 00004D46 488B4520                	mov rax, PARAM(0)	; param s1
  7885 00004D4A 50                      	push rax
  7886 00004D4B 6A01                    	push 1	; arg count
  7887 00004D4D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7888 00004D55 803805                  	cmp byte [rax], T_undefined
  7889 00004D58 0F84CA270100            	je L_error_fvar_undefined
  7890 00004D5E 803804                  	cmp byte [rax], T_closure
  7891 00004D61 0F8545280100            	jne L_error_non_closure
  7892 00004D67 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7893 00004D6A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7894 00004D6D 50                      	push rax
  7895 00004D6E 6A02                    	push 2	; arg count
  7896 00004D70 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7897 00004D78 803805                  	cmp byte [rax], T_undefined
  7898 00004D7B 0F84A7270100            	je L_error_fvar_undefined
  7899 00004D81 803804                  	cmp byte [rax], T_closure
  7900 00004D84 0F8522280100            	jne L_error_non_closure
  7901 00004D8A FF7001                  	push SOB_CLOSURE_ENV(rax)
  7902 00004D8D FF7508                  	push qword [rbp + 8 * 1]
  7903                                   ; old ret addr
  7904 00004D90 FF7500                  	push qword [rbp]
  7905                                   ; restore the old rbp
  7906 00004D93 BB02000000              	mov rbx, 2
  7907 00004D98 4883C303                	add rbx, 3
  7908 00004D9C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  7909 00004DA0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  7910 00004DA5 4C8D4DF8                	lea r9, [rbp - 8]
  7911 00004DA9 B906000000              	mov rcx, 6
  7912                                  .L_tc_recycle_frame_loop_002f:
  7913 00004DAE 4883F900                	cmp rcx, 0
  7914 00004DB2 7413                    	je .L_tc_recycle_frame_done_002f
  7915 00004DB4 4D8B11                  	mov r10, qword [r9]
  7916 00004DB7 4D8910                  	mov qword [r8], r10
  7917 00004DBA 4983E808                	sub r8, 8
  7918 00004DBE 4983E908                	sub r9, 8
  7919 00004DC2 48FFC9                  	dec rcx
  7920 00004DC5 EBE7                    	jmp .L_tc_recycle_frame_loop_002f
  7921                                  .L_tc_recycle_frame_done_002f:
  7922 00004DC7 498D6008                	lea rsp, [r8 + 8]
  7923 00004DCB 5D                      	pop rbp ; restore the old rbp
  7924 00004DCC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7925                                  .L_if_end_000d:
  7926 00004DCF C9                      	leave
  7927 00004DD0 C22000                  	ret AND_KILL_FRAME(2)
  7928                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7929 00004DD3 50                      	push rax
  7930 00004DD4 488B4528                	mov rax, PARAM(1)	; param run-2
  7931 00004DD8 8F00                    	pop qword [rax]
  7932 00004DDA 48B8-                   	mov rax, sob_void
  7932 00004DDC [0000000000000000] 
  7933                                  
  7934 00004DE4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7935 00004DE9 E867280100              	call malloc
  7936 00004DEE 50                      	push rax
  7937 00004DEF BF10000000              	mov rdi, 8 * 2	; new rib
  7938 00004DF4 E85C280100              	call malloc
  7939 00004DF9 50                      	push rax
  7940 00004DFA BF10000000              	mov rdi, 8 * 2	; extended env
  7941 00004DFF E851280100              	call malloc
  7942 00004E04 488B7D10                	mov rdi, ENV
  7943 00004E08 4831F6                  	 xor rsi, rsi
  7944 00004E0B 4831D2                  	 xor rdx, rdx
  7945 00004E0E 48FFC2                  	inc rdx
  7946                                  .L_lambda_opt_env_loop_0007:	; 
  7947 00004E11 4883FE01                	cmp rsi, 1
  7948 00004E15 7410                    	je .L_lambda_opt_env_end_0007
  7949 00004E17 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7950 00004E1B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7951 00004E1F 48FFC6                  	inc rsi
  7952 00004E22 48FFC2                  	inc rdx
  7953 00004E25 EBEA                    	jmp .L_lambda_opt_env_loop_0007
  7954                                  .L_lambda_opt_env_end_0007:
  7955 00004E27 5B                      	pop rbx
  7956 00004E28 4831F6                  	xor rsi, rsi
  7957                                  .L_lambda_opt_params_loop_0007:	; copy params
  7958 00004E2B 4883FE02                	cmp rsi, 2
  7959 00004E2F 740E                    	je .L_lambda_opt_params_end_0007
  7960 00004E31 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7961 00004E36 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7962 00004E3A 48FFC6                  	inc rsi
  7963 00004E3D EBEC                    	jmp .L_lambda_opt_params_loop_0007
  7964                                  .L_lambda_opt_params_end_0007:
  7965 00004E3F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7966 00004E42 4889C3                  	mov rbx, rax
  7967 00004E45 58                      	pop rax
  7968 00004E46 C60004                  	mov byte [rax], T_closure
  7969 00004E49 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7970 00004E4D 48C74009[5A4E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  7971 00004E55 E9E5010000              	jmp .L_lambda_opt_end_0007
  7972                                  .L_lambda_opt_code_0007:
  7973 00004E5A 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  7974 00004E5F 4983FF00                	cmp r15, 0
  7975 00004E63 7409                    	je .L_lambda_opt_arity_check_exact_0007
  7976 00004E65 7F57                    	jg .L_lambda_opt_arity_check_more_0007
  7977 00004E67 6A00                    	push 0
  7978 00004E69 E9B4270100              	jmp L_error_incorrect_arity_opt
  7979                                  .L_lambda_opt_arity_check_exact_0007: ;Exact case
  7980 00004E6E 4C8B0424                	mov r8, qword [rsp -8 * 0]
  7981 00004E72 4C894424F8              	mov qword [rsp -8], r8
  7982 00004E77 4C8B442408              	mov r8, qword [rsp +8]
  7983 00004E7C 4C890424                	mov qword [rsp +8 * 0], r8
  7984 00004E80 4C8B442410              	mov r8, qword [rsp +8 * 2]
  7985 00004E85 4C89C1                  	mov rcx, r8
  7986 00004E88 49FFC0                  	inc r8
  7987 00004E8B 4C89442408              	mov qword [rsp +8], r8
  7988 00004E90 4889E2                  	mov rdx, rsp
  7989 00004E93 4883C218                	add rdx, 24
  7990                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0007:
  7991 00004E97 4883F900                	cmp rcx, 0
  7992 00004E9B 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0007
  7993 00004E9D 4C8B02                  	mov r8, qword [rdx]
  7994 00004EA0 4C8942F8                	mov qword [rdx - 8], r8
  7995 00004EA4 4883C208                	add rdx, 8
  7996 00004EA8 48FFC9                  	dec rcx
  7997 00004EAB EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0007
  7998                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0007:
  7999 00004EAD 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8000 00004EB5 4883EC08                	sub rsp, 8
  8001 00004EB9 E985000000              	jmp .L_lambda_opt_stack_adjusted_0007
  8002                                  .L_lambda_opt_arity_check_more_0007:
  8003 00004EBE 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8004 00004EC3 4D89C4                  	mov r12, r8
  8005 00004EC6 4C89C1                  	mov rcx, r8
  8006 00004EC9 4D8D6802                	lea r13, [r8 + 2] 
  8007 00004ECD 4883E900                	sub rcx, 0
  8008 00004ED1 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  8009 00004ED6 49BE-                   	mov r14, sob_nil
  8009 00004ED8 [0100000000000000] 
  8010                                  .L_lambda_opt_create_list_of_opt_params_0007:
  8011 00004EE0 4883F900                	cmp rcx, 0
  8012 00004EE4 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0007
  8013 00004EE6 BF11000000              	mov rdi, 17
  8014 00004EEB E865270100              	call malloc
  8015 00004EF0 C60021                  	mov byte [rax], T_pair
  8016 00004EF3 498B1B                  	mov rbx, qword [r11]
  8017 00004EF6 48895801                	mov qword [rax +1], rbx
  8018 00004EFA 4C897009                	mov qword [rax + 1 + 8], r14
  8019 00004EFE 4989C6                  	mov r14, rax
  8020 00004F01 48FFC9                  	dec rcx
  8021 00004F04 4983EB08                	sub r11, 8
  8022 00004F08 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0007
  8023                                  .L_lambda_opt_create_list_of_opt_params_end_0007:
  8024 00004F0A 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
  8025 00004F0F 4D8932                  	mov qword [r10], r14
  8026 00004F12 4E8D2CED00000000        	lea r13, [8 * r13]
  8027 00004F1A 4901E5                  	add r13, rsp
  8028 00004F1D B904000000              	mov rcx, 4 + 0
  8029                                  .L_lambda_opt_stack_shrink_loop_0007:
  8030 00004F22 4883F900                	cmp rcx, 0
  8031 00004F26 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0007
  8032 00004F28 4D8B1A                  	mov r11, qword [r10]
  8033 00004F2B 4D895D00                	mov qword [r13], r11
  8034 00004F2F 4983EA08                	sub r10, 8
  8035 00004F33 4983ED08                	sub r13, 8
  8036 00004F37 48FFC9                  	dec rcx
  8037 00004F3A EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  8038                                  .L_lambda_opt_stack_shrink_loop_exit_0007:
  8039 00004F3C 4983C508                	add r13, 8
  8040 00004F40 4C89EC                  	mov rsp, r13
  8041                                  .L_lambda_opt_stack_adjusted_0007:
  8042 00004F43 48C744241001000000      	mov qword [rsp + 8*2], 1
  8043 00004F4C C8000000                	enter 0, 0
  8044                                  	; preparing a non-tail-call
  8045 00004F50 488B4520                	mov rax, PARAM(0)	; param s
  8046 00004F54 50                      	push rax
  8047 00004F55 6A01                    	push 1	; arg count
  8048 00004F57 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8049 00004F5F 803805                  	cmp byte [rax], T_undefined
  8050 00004F62 0F84C0250100            	je L_error_fvar_undefined
  8051 00004F68 803804                  	cmp byte [rax], T_closure
  8052 00004F6B 0F853B260100            	jne L_error_non_closure
  8053 00004F71 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8054 00004F74 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8055 00004F77 483D[02000000]          	cmp rax, sob_boolean_false
  8056 00004F7D 740F                    	je .L_if_else_000e
  8057 00004F7F 48B8-                   	mov rax, L_constants + 1
  8057 00004F81 [0100000000000000] 
  8058 00004F89 E9AD000000              	jmp .L_if_end_000e
  8059                                  .L_if_else_000e:
  8060                                  	; preparing a tail-call
  8061                                  	; preparing a non-tail-call
  8062 00004F8E 488B4520                	mov rax, PARAM(0)	; param s
  8063 00004F92 50                      	push rax
  8064 00004F93 6A01                    	push 1	; arg count
  8065 00004F95 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8066 00004F9D 803805                  	cmp byte [rax], T_undefined
  8067 00004FA0 0F8482250100            	je L_error_fvar_undefined
  8068 00004FA6 803804                  	cmp byte [rax], T_closure
  8069 00004FA9 0F85FD250100            	jne L_error_non_closure
  8070 00004FAF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8071 00004FB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8072 00004FB5 50                      	push rax
  8073                                  	; preparing a non-tail-call
  8074 00004FB6 488B4520                	mov rax, PARAM(0)	; param s
  8075 00004FBA 50                      	push rax
  8076 00004FBB 6A01                    	push 1	; arg count
  8077 00004FBD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8078 00004FC5 803805                  	cmp byte [rax], T_undefined
  8079 00004FC8 0F845A250100            	je L_error_fvar_undefined
  8080 00004FCE 803804                  	cmp byte [rax], T_closure
  8081 00004FD1 0F85D5250100            	jne L_error_non_closure
  8082 00004FD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8083 00004FDA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8084 00004FDD 50                      	push rax
  8085 00004FDE 6A02                    	push 2	; arg count
  8086 00004FE0 488B4510                	mov rax, ENV
  8087 00004FE4 488B00                  	mov rax, qword [rax + 8 * 0]
  8088 00004FE7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8089 00004FEA 488B00                  	mov rax, qword [rax]
  8090 00004FED 803804                  	cmp byte [rax], T_closure
  8091 00004FF0 0F85B6250100            	jne L_error_non_closure
  8092 00004FF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8093 00004FF9 FF7508                  	push qword [rbp + 8 * 1]
  8094                                   ; old ret addr
  8095 00004FFC FF7500                  	push qword [rbp]
  8096                                   ; restore the old rbp
  8097 00004FFF BB02000000              	mov rbx, 2
  8098 00005004 4883C303                	add rbx, 3
  8099 00005008 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8100 0000500C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8101 00005011 4C8D4DF8                	lea r9, [rbp - 8]
  8102 00005015 B906000000              	mov rcx, 6
  8103                                  .L_tc_recycle_frame_loop_0030:
  8104 0000501A 4883F900                	cmp rcx, 0
  8105 0000501E 7413                    	je .L_tc_recycle_frame_done_0030
  8106 00005020 4D8B11                  	mov r10, qword [r9]
  8107 00005023 4D8910                  	mov qword [r8], r10
  8108 00005026 4983E808                	sub r8, 8
  8109 0000502A 4983E908                	sub r9, 8
  8110 0000502E 48FFC9                  	dec rcx
  8111 00005031 EBE7                    	jmp .L_tc_recycle_frame_loop_0030
  8112                                  .L_tc_recycle_frame_done_0030:
  8113 00005033 498D6008                	lea rsp, [r8 + 8]
  8114 00005037 5D                      	pop rbp ; restore the old rbp
  8115 00005038 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8116                                  .L_if_end_000e:
  8117 0000503B C9                      	leave
  8118 0000503C C21800                  	ret 8 * (2 + 1)
  8119                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8120 0000503F C9                      	leave
  8121 00005040 C22000                  	ret AND_KILL_FRAME(2)
  8122                                  .L_lambda_simple_end_002d:	; new closure is in rax
  8123 00005043 803804                  	cmp byte [rax], T_closure
  8124 00005046 0F8560250100            	jne L_error_non_closure
  8125 0000504C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8126 0000504F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8127 00005052 48890425[E50F0000]      	mov qword [free_var_32], rax
  8128 0000505A 48B8-                   	mov rax, sob_void
  8128 0000505C [0000000000000000] 
  8129                                  
  8130 00005064 4889C7                  	mov rdi, rax
  8131 00005067 E83E280100              	call print_sexpr_if_not_void
  8132                                  	; preparing a non-tail-call
  8133 0000506C 48B8-                   	mov rax, L_constants + 1993
  8133 0000506E [C907000000000000] 
  8134 00005076 50                      	push rax
  8135 00005077 6A01                    	push 1	; arg count
  8136 00005079 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8137 0000507E E8D2250100              	call malloc
  8138 00005083 50                      	push rax
  8139 00005084 BF00000000              	mov rdi, 8 * 0	; new rib
  8140 00005089 E8C7250100              	call malloc
  8141 0000508E 50                      	push rax
  8142 0000508F BF08000000              	mov rdi, 8 * 1	; extended env
  8143 00005094 E8BC250100              	call malloc
  8144 00005099 488B7D10                	mov rdi, ENV
  8145 0000509D BE00000000              	mov rsi, 0
  8146 000050A2 BA01000000              	mov rdx, 1
  8147                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  8148 000050A7 4883FE00                	cmp rsi, 0
  8149 000050AB 7410                    	je .L_lambda_simple_env_end_0030
  8150 000050AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8151 000050B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8152 000050B5 48FFC6                  	inc rsi
  8153 000050B8 48FFC2                  	inc rdx
  8154 000050BB EBEA                    	jmp .L_lambda_simple_env_loop_0030
  8155                                  .L_lambda_simple_env_end_0030:
  8156 000050BD 5B                      	pop rbx
  8157 000050BE BE00000000              	mov rsi, 0
  8158                                  .L_lambda_simple_params_loop_0030:	; copy params
  8159 000050C3 4883FE00                	cmp rsi, 0
  8160 000050C7 740E                    	je .L_lambda_simple_params_end_0030
  8161 000050C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8162 000050CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8163 000050D2 48FFC6                  	inc rsi
  8164 000050D5 EBEC                    	jmp .L_lambda_simple_params_loop_0030
  8165                                  .L_lambda_simple_params_end_0030:
  8166 000050D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8167 000050DA 4889C3                  	mov rbx, rax
  8168 000050DD 58                      	pop rax
  8169 000050DE C60004                  	mov byte [rax], T_closure
  8170 000050E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8171 000050E5 48C74009[F2500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  8172 000050ED E908040000              	jmp .L_lambda_simple_end_0030
  8173                                  .L_lambda_simple_code_0030:	; lambda-simple body
  8174 000050F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8175 000050F8 740B                    	je .L_lambda_simple_arity_check_ok_0030
  8176 000050FA FF742410                	push qword [rsp + 8 * 2]
  8177 000050FE 6A01                    	push 1
  8178 00005100 E909250100              	jmp L_error_incorrect_arity_simple
  8179                                  .L_lambda_simple_arity_check_ok_0030:
  8180 00005105 C8000000                	enter 0, 0
  8181 00005109 BF08000000              	mov rdi, 8*1
  8182 0000510E E842250100              	call malloc
  8183 00005113 488B5D20                	mov rbx, PARAM(0)
  8184 00005117 488918                  	mov qword [rax], rbx
  8185 0000511A 48894520                	mov PARAM(0), rax
  8186 0000511E 48B8-                   	mov rax, sob_void
  8186 00005120 [0000000000000000] 
  8187                                  
  8188 00005128 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8189 0000512D E823250100              	call malloc
  8190 00005132 50                      	push rax
  8191 00005133 BF08000000              	mov rdi, 8 * 1	; new rib
  8192 00005138 E818250100              	call malloc
  8193 0000513D 50                      	push rax
  8194 0000513E BF10000000              	mov rdi, 8 * 2	; extended env
  8195 00005143 E80D250100              	call malloc
  8196 00005148 488B7D10                	mov rdi, ENV
  8197 0000514C BE00000000              	mov rsi, 0
  8198 00005151 BA01000000              	mov rdx, 1
  8199                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  8200 00005156 4883FE01                	cmp rsi, 1
  8201 0000515A 7410                    	je .L_lambda_simple_env_end_0031
  8202 0000515C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8203 00005160 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8204 00005164 48FFC6                  	inc rsi
  8205 00005167 48FFC2                  	inc rdx
  8206 0000516A EBEA                    	jmp .L_lambda_simple_env_loop_0031
  8207                                  .L_lambda_simple_env_end_0031:
  8208 0000516C 5B                      	pop rbx
  8209 0000516D BE00000000              	mov rsi, 0
  8210                                  .L_lambda_simple_params_loop_0031:	; copy params
  8211 00005172 4883FE01                	cmp rsi, 1
  8212 00005176 740E                    	je .L_lambda_simple_params_end_0031
  8213 00005178 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8214 0000517D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8215 00005181 48FFC6                  	inc rsi
  8216 00005184 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  8217                                  .L_lambda_simple_params_end_0031:
  8218 00005186 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8219 00005189 4889C3                  	mov rbx, rax
  8220 0000518C 58                      	pop rax
  8221 0000518D C60004                  	mov byte [rax], T_closure
  8222 00005190 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8223 00005194 48C74009[A1510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  8224 0000519C E968010000              	jmp .L_lambda_simple_end_0031
  8225                                  .L_lambda_simple_code_0031:	; lambda-simple body
  8226 000051A1 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8227 000051A7 740B                    	je .L_lambda_simple_arity_check_ok_0031
  8228 000051A9 FF742410                	push qword [rsp + 8 * 2]
  8229 000051AD 6A03                    	push 3
  8230 000051AF E95A240100              	jmp L_error_incorrect_arity_simple
  8231                                  .L_lambda_simple_arity_check_ok_0031:
  8232 000051B4 C8000000                	enter 0, 0
  8233                                  	; preparing a non-tail-call
  8234 000051B8 488B4530                	mov rax, PARAM(2)	; param ss
  8235 000051BC 50                      	push rax
  8236 000051BD 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8237 000051C5 803805                  	cmp byte [rax], T_undefined
  8238 000051C8 0F845A230100            	je L_error_fvar_undefined
  8239 000051CE 50                      	push rax
  8240 000051CF 6A02                    	push 2	; arg count
  8241 000051D1 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8242 000051D9 803805                  	cmp byte [rax], T_undefined
  8243 000051DC 0F8446230100            	je L_error_fvar_undefined
  8244 000051E2 803804                  	cmp byte [rax], T_closure
  8245 000051E5 0F85C1230100            	jne L_error_non_closure
  8246 000051EB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8247 000051EE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8248 000051F1 483D[02000000]          	cmp rax, sob_boolean_false
  8249 000051F7 7409                    	je .L_if_else_000f
  8250 000051F9 488B4528                	mov rax, PARAM(1)	; param unit
  8251 000051FD E903010000              	jmp .L_if_end_000f
  8252                                  .L_if_else_000f:
  8253                                  	; preparing a tail-call
  8254                                  	; preparing a non-tail-call
  8255 00005202 488B4530                	mov rax, PARAM(2)	; param ss
  8256 00005206 50                      	push rax
  8257 00005207 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8258 0000520F 803805                  	cmp byte [rax], T_undefined
  8259 00005212 0F8410230100            	je L_error_fvar_undefined
  8260 00005218 50                      	push rax
  8261 00005219 6A02                    	push 2	; arg count
  8262 0000521B 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8263 00005223 803805                  	cmp byte [rax], T_undefined
  8264 00005226 0F84FC220100            	je L_error_fvar_undefined
  8265 0000522C 803804                  	cmp byte [rax], T_closure
  8266 0000522F 0F8577230100            	jne L_error_non_closure
  8267 00005235 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8268 00005238 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8269 0000523B 50                      	push rax
  8270                                  	; preparing a non-tail-call
  8271                                  	; preparing a non-tail-call
  8272 0000523C 488B4530                	mov rax, PARAM(2)	; param ss
  8273 00005240 50                      	push rax
  8274 00005241 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8275 00005249 803805                  	cmp byte [rax], T_undefined
  8276 0000524C 0F84D6220100            	je L_error_fvar_undefined
  8277 00005252 50                      	push rax
  8278 00005253 6A02                    	push 2	; arg count
  8279 00005255 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8280 0000525D 803805                  	cmp byte [rax], T_undefined
  8281 00005260 0F84C2220100            	je L_error_fvar_undefined
  8282 00005266 803804                  	cmp byte [rax], T_closure
  8283 00005269 0F853D230100            	jne L_error_non_closure
  8284 0000526F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8285 00005272 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8286 00005275 50                      	push rax
  8287 00005276 488B4528                	mov rax, PARAM(1)	; param unit
  8288 0000527A 50                      	push rax
  8289 0000527B 488B4520                	mov rax, PARAM(0)	; param f
  8290 0000527F 50                      	push rax
  8291 00005280 6A03                    	push 3	; arg count
  8292 00005282 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8293 0000528A 803805                  	cmp byte [rax], T_undefined
  8294 0000528D 0F8495220100            	je L_error_fvar_undefined
  8295 00005293 803804                  	cmp byte [rax], T_closure
  8296 00005296 0F8510230100            	jne L_error_non_closure
  8297 0000529C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8298 0000529F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8299 000052A2 50                      	push rax
  8300 000052A3 488B4520                	mov rax, PARAM(0)	; param f
  8301 000052A7 50                      	push rax
  8302 000052A8 6A03                    	push 3	; arg count
  8303 000052AA 488B4510                	mov rax, ENV
  8304 000052AE 488B00                  	mov rax, qword [rax + 8 * 0]
  8305 000052B1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8306 000052B4 488B00                  	mov rax, qword [rax]
  8307 000052B7 803804                  	cmp byte [rax], T_closure
  8308 000052BA 0F85EC220100            	jne L_error_non_closure
  8309 000052C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8310 000052C3 FF7508                  	push qword [rbp + 8 * 1]
  8311                                   ; old ret addr
  8312 000052C6 FF7500                  	push qword [rbp]
  8313                                   ; restore the old rbp
  8314 000052C9 BB03000000              	mov rbx, 3
  8315 000052CE 4883C303                	add rbx, 3
  8316 000052D2 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8317 000052D6 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8318 000052DB 4C8D4DF8                	lea r9, [rbp - 8]
  8319 000052DF B907000000              	mov rcx, 7
  8320                                  .L_tc_recycle_frame_loop_0031:
  8321 000052E4 4883F900                	cmp rcx, 0
  8322 000052E8 7413                    	je .L_tc_recycle_frame_done_0031
  8323 000052EA 4D8B11                  	mov r10, qword [r9]
  8324 000052ED 4D8910                  	mov qword [r8], r10
  8325 000052F0 4983E808                	sub r8, 8
  8326 000052F4 4983E908                	sub r9, 8
  8327 000052F8 48FFC9                  	dec rcx
  8328 000052FB EBE7                    	jmp .L_tc_recycle_frame_loop_0031
  8329                                  .L_tc_recycle_frame_done_0031:
  8330 000052FD 498D6008                	lea rsp, [r8 + 8]
  8331 00005301 5D                      	pop rbp ; restore the old rbp
  8332 00005302 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8333                                  .L_if_end_000f:
  8334 00005305 C9                      	leave
  8335 00005306 C22800                  	ret AND_KILL_FRAME(3)
  8336                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8337 00005309 50                      	push rax
  8338 0000530A 488B4520                	mov rax, PARAM(0)	; param run
  8339 0000530E 8F00                    	pop qword [rax]
  8340 00005310 48B8-                   	mov rax, sob_void
  8340 00005312 [0000000000000000] 
  8341                                  
  8342 0000531A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8343 0000531F E831230100              	call malloc
  8344 00005324 50                      	push rax
  8345 00005325 BF08000000              	mov rdi, 8 * 1	; new rib
  8346 0000532A E826230100              	call malloc
  8347 0000532F 50                      	push rax
  8348 00005330 BF10000000              	mov rdi, 8 * 2	; extended env
  8349 00005335 E81B230100              	call malloc
  8350 0000533A 488B7D10                	mov rdi, ENV
  8351 0000533E 4831F6                  	 xor rsi, rsi
  8352 00005341 4831D2                  	 xor rdx, rdx
  8353 00005344 48FFC2                  	inc rdx
  8354                                  .L_lambda_opt_env_loop_0008:	; 
  8355 00005347 4883FE01                	cmp rsi, 1
  8356 0000534B 7410                    	je .L_lambda_opt_env_end_0008
  8357 0000534D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8358 00005351 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8359 00005355 48FFC6                  	inc rsi
  8360 00005358 48FFC2                  	inc rdx
  8361 0000535B EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8362                                  .L_lambda_opt_env_end_0008:
  8363 0000535D 5B                      	pop rbx
  8364 0000535E 4831F6                  	xor rsi, rsi
  8365                                  .L_lambda_opt_params_loop_0008:	; copy params
  8366 00005361 4883FE01                	cmp rsi, 1
  8367 00005365 740E                    	je .L_lambda_opt_params_end_0008
  8368 00005367 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8369 0000536C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8370 00005370 48FFC6                  	inc rsi
  8371 00005373 EBEC                    	jmp .L_lambda_opt_params_loop_0008
  8372                                  .L_lambda_opt_params_end_0008:
  8373 00005375 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8374 00005378 4889C3                  	mov rbx, rax
  8375 0000537B 58                      	pop rax
  8376 0000537C C60004                  	mov byte [rax], T_closure
  8377 0000537F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8378 00005383 48C74009[90530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8379 0000538B E966010000              	jmp .L_lambda_opt_end_0008
  8380                                  .L_lambda_opt_code_0008:
  8381 00005390 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  8382 00005395 4983FF02                	cmp r15, 2
  8383 00005399 7409                    	je .L_lambda_opt_arity_check_exact_0008
  8384 0000539B 7F57                    	jg .L_lambda_opt_arity_check_more_0008
  8385 0000539D 6A02                    	push 2
  8386 0000539F E97E220100              	jmp L_error_incorrect_arity_opt
  8387                                  .L_lambda_opt_arity_check_exact_0008: ;Exact case
  8388 000053A4 4C8B0424                	mov r8, qword [rsp -8 * 0]
  8389 000053A8 4C894424F8              	mov qword [rsp -8], r8
  8390 000053AD 4C8B442408              	mov r8, qword [rsp +8]
  8391 000053B2 4C890424                	mov qword [rsp +8 * 0], r8
  8392 000053B6 4C8B442410              	mov r8, qword [rsp +8 * 2]
  8393 000053BB 4C89C1                  	mov rcx, r8
  8394 000053BE 49FFC0                  	inc r8
  8395 000053C1 4C89442408              	mov qword [rsp +8], r8
  8396 000053C6 4889E2                  	mov rdx, rsp
  8397 000053C9 4883C218                	add rdx, 24
  8398                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0008:
  8399 000053CD 4883F900                	cmp rcx, 0
  8400 000053D1 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0008
  8401 000053D3 4C8B02                  	mov r8, qword [rdx]
  8402 000053D6 4C8942F8                	mov qword [rdx - 8], r8
  8403 000053DA 4883C208                	add rdx, 8
  8404 000053DE 48FFC9                  	dec rcx
  8405 000053E1 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0008
  8406                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0008:
  8407 000053E3 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8408 000053EB 4883EC08                	sub rsp, 8
  8409 000053EF E985000000              	jmp .L_lambda_opt_stack_adjusted_0008
  8410                                  .L_lambda_opt_arity_check_more_0008:
  8411 000053F4 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8412 000053F9 4D89C4                  	mov r12, r8
  8413 000053FC 4C89C1                  	mov rcx, r8
  8414 000053FF 4D8D6802                	lea r13, [r8 + 2] 
  8415 00005403 4883E902                	sub rcx, 2
  8416 00005407 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  8417 0000540C 49BE-                   	mov r14, sob_nil
  8417 0000540E [0100000000000000] 
  8418                                  .L_lambda_opt_create_list_of_opt_params_0008:
  8419 00005416 4883F900                	cmp rcx, 0
  8420 0000541A 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0008
  8421 0000541C BF11000000              	mov rdi, 17
  8422 00005421 E82F220100              	call malloc
  8423 00005426 C60021                  	mov byte [rax], T_pair
  8424 00005429 498B1B                  	mov rbx, qword [r11]
  8425 0000542C 48895801                	mov qword [rax +1], rbx
  8426 00005430 4C897009                	mov qword [rax + 1 + 8], r14
  8427 00005434 4989C6                  	mov r14, rax
  8428 00005437 48FFC9                  	dec rcx
  8429 0000543A 4983EB08                	sub r11, 8
  8430 0000543E EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0008
  8431                                  .L_lambda_opt_create_list_of_opt_params_end_0008:
  8432 00005440 4C8D542428              	lea r10, [rsp + 2*8 + 8*3]
  8433 00005445 4D8932                  	mov qword [r10], r14
  8434 00005448 4E8D2CED00000000        	lea r13, [8 * r13]
  8435 00005450 4901E5                  	add r13, rsp
  8436 00005453 B906000000              	mov rcx, 4 + 2
  8437                                  .L_lambda_opt_stack_shrink_loop_0008:
  8438 00005458 4883F900                	cmp rcx, 0
  8439 0000545C 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0008
  8440 0000545E 4D8B1A                  	mov r11, qword [r10]
  8441 00005461 4D895D00                	mov qword [r13], r11
  8442 00005465 4983EA08                	sub r10, 8
  8443 00005469 4983ED08                	sub r13, 8
  8444 0000546D 48FFC9                  	dec rcx
  8445 00005470 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8446                                  .L_lambda_opt_stack_shrink_loop_exit_0008:
  8447 00005472 4983C508                	add r13, 8
  8448 00005476 4C89EC                  	mov rsp, r13
  8449                                  .L_lambda_opt_stack_adjusted_0008:
  8450 00005479 48C744241003000000      	mov qword [rsp + 8*2], 3
  8451 00005482 C8000000                	enter 0, 0
  8452                                  	; preparing a tail-call
  8453 00005486 488B4530                	mov rax, PARAM(2)	; param ss
  8454 0000548A 50                      	push rax
  8455 0000548B 488B4528                	mov rax, PARAM(1)	; param unit
  8456 0000548F 50                      	push rax
  8457 00005490 488B4520                	mov rax, PARAM(0)	; param f
  8458 00005494 50                      	push rax
  8459 00005495 6A03                    	push 3	; arg count
  8460 00005497 488B4510                	mov rax, ENV
  8461 0000549B 488B00                  	mov rax, qword [rax + 8 * 0]
  8462 0000549E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8463 000054A1 488B00                  	mov rax, qword [rax]
  8464 000054A4 803804                  	cmp byte [rax], T_closure
  8465 000054A7 0F85FF200100            	jne L_error_non_closure
  8466 000054AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  8467 000054B0 FF7508                  	push qword [rbp + 8 * 1]
  8468                                   ; old ret addr
  8469 000054B3 FF7500                  	push qword [rbp]
  8470                                   ; restore the old rbp
  8471 000054B6 BB03000000              	mov rbx, 3
  8472 000054BB 4883C303                	add rbx, 3
  8473 000054BF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8474 000054C3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8475 000054C8 4C8D4DF8                	lea r9, [rbp - 8]
  8476 000054CC B907000000              	mov rcx, 7
  8477                                  .L_tc_recycle_frame_loop_0032:
  8478 000054D1 4883F900                	cmp rcx, 0
  8479 000054D5 7413                    	je .L_tc_recycle_frame_done_0032
  8480 000054D7 4D8B11                  	mov r10, qword [r9]
  8481 000054DA 4D8910                  	mov qword [r8], r10
  8482 000054DD 4983E808                	sub r8, 8
  8483 000054E1 4983E908                	sub r9, 8
  8484 000054E5 48FFC9                  	dec rcx
  8485 000054E8 EBE7                    	jmp .L_tc_recycle_frame_loop_0032
  8486                                  .L_tc_recycle_frame_done_0032:
  8487 000054EA 498D6008                	lea rsp, [r8 + 8]
  8488 000054EE 5D                      	pop rbp ; restore the old rbp
  8489 000054EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8490 000054F2 C9                      	leave
  8491 000054F3 C22800                  	ret 8 * (2 + 3)
  8492                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8493 000054F6 C9                      	leave
  8494 000054F7 C21800                  	ret AND_KILL_FRAME(1)
  8495                                  .L_lambda_simple_end_0030:	; new closure is in rax
  8496 000054FA 803804                  	cmp byte [rax], T_closure
  8497 000054FD 0F85A9200100            	jne L_error_non_closure
  8498 00005503 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8499 00005506 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8500 00005509 48890425[6A130000]      	mov qword [free_var_85], rax
  8501 00005511 48B8-                   	mov rax, sob_void
  8501 00005513 [0000000000000000] 
  8502                                  
  8503 0000551B 4889C7                  	mov rdi, rax
  8504 0000551E E887230100              	call print_sexpr_if_not_void
  8505                                  	; preparing a non-tail-call
  8506 00005523 48B8-                   	mov rax, L_constants + 1993
  8506 00005525 [C907000000000000] 
  8507 0000552D 50                      	push rax
  8508 0000552E 6A01                    	push 1	; arg count
  8509 00005530 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8510 00005535 E81B210100              	call malloc
  8511 0000553A 50                      	push rax
  8512 0000553B BF00000000              	mov rdi, 8 * 0	; new rib
  8513 00005540 E810210100              	call malloc
  8514 00005545 50                      	push rax
  8515 00005546 BF08000000              	mov rdi, 8 * 1	; extended env
  8516 0000554B E805210100              	call malloc
  8517 00005550 488B7D10                	mov rdi, ENV
  8518 00005554 BE00000000              	mov rsi, 0
  8519 00005559 BA01000000              	mov rdx, 1
  8520                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8521 0000555E 4883FE00                	cmp rsi, 0
  8522 00005562 7410                    	je .L_lambda_simple_env_end_0032
  8523 00005564 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8524 00005568 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8525 0000556C 48FFC6                  	inc rsi
  8526 0000556F 48FFC2                  	inc rdx
  8527 00005572 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8528                                  .L_lambda_simple_env_end_0032:
  8529 00005574 5B                      	pop rbx
  8530 00005575 BE00000000              	mov rsi, 0
  8531                                  .L_lambda_simple_params_loop_0032:	; copy params
  8532 0000557A 4883FE00                	cmp rsi, 0
  8533 0000557E 740E                    	je .L_lambda_simple_params_end_0032
  8534 00005580 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8535 00005585 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8536 00005589 48FFC6                  	inc rsi
  8537 0000558C EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8538                                  .L_lambda_simple_params_end_0032:
  8539 0000558E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8540 00005591 4889C3                  	mov rbx, rax
  8541 00005594 58                      	pop rax
  8542 00005595 C60004                  	mov byte [rax], T_closure
  8543 00005598 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8544 0000559C 48C74009[A9550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8545 000055A4 E959040000              	jmp .L_lambda_simple_end_0032
  8546                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8547 000055A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8548 000055AF 740B                    	je .L_lambda_simple_arity_check_ok_0032
  8549 000055B1 FF742410                	push qword [rsp + 8 * 2]
  8550 000055B5 6A01                    	push 1
  8551 000055B7 E952200100              	jmp L_error_incorrect_arity_simple
  8552                                  .L_lambda_simple_arity_check_ok_0032:
  8553 000055BC C8000000                	enter 0, 0
  8554 000055C0 BF08000000              	mov rdi, 8*1
  8555 000055C5 E88B200100              	call malloc
  8556 000055CA 488B5D20                	mov rbx, PARAM(0)
  8557 000055CE 488918                  	mov qword [rax], rbx
  8558 000055D1 48894520                	mov PARAM(0), rax
  8559 000055D5 48B8-                   	mov rax, sob_void
  8559 000055D7 [0000000000000000] 
  8560                                  
  8561 000055DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8562 000055E4 E86C200100              	call malloc
  8563 000055E9 50                      	push rax
  8564 000055EA BF08000000              	mov rdi, 8 * 1	; new rib
  8565 000055EF E861200100              	call malloc
  8566 000055F4 50                      	push rax
  8567 000055F5 BF10000000              	mov rdi, 8 * 2	; extended env
  8568 000055FA E856200100              	call malloc
  8569 000055FF 488B7D10                	mov rdi, ENV
  8570 00005603 BE00000000              	mov rsi, 0
  8571 00005608 BA01000000              	mov rdx, 1
  8572                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8573 0000560D 4883FE01                	cmp rsi, 1
  8574 00005611 7410                    	je .L_lambda_simple_env_end_0033
  8575 00005613 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8576 00005617 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8577 0000561B 48FFC6                  	inc rsi
  8578 0000561E 48FFC2                  	inc rdx
  8579 00005621 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8580                                  .L_lambda_simple_env_end_0033:
  8581 00005623 5B                      	pop rbx
  8582 00005624 BE00000000              	mov rsi, 0
  8583                                  .L_lambda_simple_params_loop_0033:	; copy params
  8584 00005629 4883FE01                	cmp rsi, 1
  8585 0000562D 740E                    	je .L_lambda_simple_params_end_0033
  8586 0000562F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8587 00005634 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8588 00005638 48FFC6                  	inc rsi
  8589 0000563B EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8590                                  .L_lambda_simple_params_end_0033:
  8591 0000563D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8592 00005640 4889C3                  	mov rbx, rax
  8593 00005643 58                      	pop rax
  8594 00005644 C60004                  	mov byte [rax], T_closure
  8595 00005647 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8596 0000564B 48C74009[58560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8597 00005653 E9B9010000              	jmp .L_lambda_simple_end_0033
  8598                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8599 00005658 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8600 0000565E 740B                    	je .L_lambda_simple_arity_check_ok_0033
  8601 00005660 FF742410                	push qword [rsp + 8 * 2]
  8602 00005664 6A03                    	push 3
  8603 00005666 E9A31F0100              	jmp L_error_incorrect_arity_simple
  8604                                  .L_lambda_simple_arity_check_ok_0033:
  8605 0000566B C8000000                	enter 0, 0
  8606                                  	; preparing a non-tail-call
  8607 0000566F 488B4530                	mov rax, PARAM(2)	; param ss
  8608 00005673 50                      	push rax
  8609 00005674 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8610 0000567C 803805                  	cmp byte [rax], T_undefined
  8611 0000567F 0F84A31E0100            	je L_error_fvar_undefined
  8612 00005685 50                      	push rax
  8613 00005686 6A02                    	push 2	; arg count
  8614 00005688 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8615 00005690 803805                  	cmp byte [rax], T_undefined
  8616 00005693 0F848F1E0100            	je L_error_fvar_undefined
  8617 00005699 803804                  	cmp byte [rax], T_closure
  8618 0000569C 0F850A1F0100            	jne L_error_non_closure
  8619 000056A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8620 000056A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8621 000056A8 483D[02000000]          	cmp rax, sob_boolean_false
  8622 000056AE 7409                    	je .L_if_else_0010
  8623 000056B0 488B4528                	mov rax, PARAM(1)	; param unit
  8624 000056B4 E954010000              	jmp .L_if_end_0010
  8625                                  .L_if_else_0010:
  8626                                  	; preparing a tail-call
  8627                                  	; preparing a non-tail-call
  8628                                  	; preparing a non-tail-call
  8629 000056B9 48B8-                   	mov rax, L_constants + 1
  8629 000056BB [0100000000000000] 
  8630 000056C3 50                      	push rax
  8631                                  	; preparing a non-tail-call
  8632                                  	; preparing a non-tail-call
  8633 000056C4 488B4530                	mov rax, PARAM(2)	; param ss
  8634 000056C8 50                      	push rax
  8635 000056C9 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8636 000056D1 803805                  	cmp byte [rax], T_undefined
  8637 000056D4 0F844E1E0100            	je L_error_fvar_undefined
  8638 000056DA 50                      	push rax
  8639 000056DB 6A02                    	push 2	; arg count
  8640 000056DD 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8641 000056E5 803805                  	cmp byte [rax], T_undefined
  8642 000056E8 0F843A1E0100            	je L_error_fvar_undefined
  8643 000056EE 803804                  	cmp byte [rax], T_closure
  8644 000056F1 0F85B51E0100            	jne L_error_non_closure
  8645 000056F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8646 000056FA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8647 000056FD 50                      	push rax
  8648 000056FE 488B4528                	mov rax, PARAM(1)	; param unit
  8649 00005702 50                      	push rax
  8650 00005703 488B4520                	mov rax, PARAM(0)	; param f
  8651 00005707 50                      	push rax
  8652 00005708 6A03                    	push 3	; arg count
  8653 0000570A 488B4510                	mov rax, ENV
  8654 0000570E 488B00                  	mov rax, qword [rax + 8 * 0]
  8655 00005711 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8656 00005714 488B00                  	mov rax, qword [rax]
  8657 00005717 803804                  	cmp byte [rax], T_closure
  8658 0000571A 0F858C1E0100            	jne L_error_non_closure
  8659 00005720 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8660 00005723 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8661 00005726 50                      	push rax
  8662 00005727 6A02                    	push 2	; arg count
  8663 00005729 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  8664 00005731 803805                  	cmp byte [rax], T_undefined
  8665 00005734 0F84EE1D0100            	je L_error_fvar_undefined
  8666 0000573A 803804                  	cmp byte [rax], T_closure
  8667 0000573D 0F85691E0100            	jne L_error_non_closure
  8668 00005743 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8669 00005746 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8670 00005749 50                      	push rax
  8671                                  	; preparing a non-tail-call
  8672 0000574A 488B4530                	mov rax, PARAM(2)	; param ss
  8673 0000574E 50                      	push rax
  8674 0000574F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8675 00005757 803805                  	cmp byte [rax], T_undefined
  8676 0000575A 0F84C81D0100            	je L_error_fvar_undefined
  8677 00005760 50                      	push rax
  8678 00005761 6A02                    	push 2	; arg count
  8679 00005763 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8680 0000576B 803805                  	cmp byte [rax], T_undefined
  8681 0000576E 0F84B41D0100            	je L_error_fvar_undefined
  8682 00005774 803804                  	cmp byte [rax], T_closure
  8683 00005777 0F852F1E0100            	jne L_error_non_closure
  8684 0000577D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8685 00005780 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8686 00005783 50                      	push rax
  8687 00005784 6A02                    	push 2	; arg count
  8688 00005786 488B0425[E50F0000]      	mov rax, qword [free_var_32]	; free var append
  8689 0000578E 803805                  	cmp byte [rax], T_undefined
  8690 00005791 0F84911D0100            	je L_error_fvar_undefined
  8691 00005797 803804                  	cmp byte [rax], T_closure
  8692 0000579A 0F850C1E0100            	jne L_error_non_closure
  8693 000057A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8694 000057A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8695 000057A6 50                      	push rax
  8696 000057A7 488B4520                	mov rax, PARAM(0)	; param f
  8697 000057AB 50                      	push rax
  8698 000057AC 6A02                    	push 2	; arg count
  8699 000057AE 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8700 000057B6 803805                  	cmp byte [rax], T_undefined
  8701 000057B9 0F84691D0100            	je L_error_fvar_undefined
  8702 000057BF 803804                  	cmp byte [rax], T_closure
  8703 000057C2 0F85E41D0100            	jne L_error_non_closure
  8704 000057C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8705 000057CB FF7508                  	push qword [rbp + 8 * 1]
  8706                                   ; old ret addr
  8707 000057CE FF7500                  	push qword [rbp]
  8708                                   ; restore the old rbp
  8709 000057D1 BB02000000              	mov rbx, 2
  8710 000057D6 4883C303                	add rbx, 3
  8711 000057DA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8712 000057DE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8713 000057E3 4C8D4DF8                	lea r9, [rbp - 8]
  8714 000057E7 B906000000              	mov rcx, 6
  8715                                  .L_tc_recycle_frame_loop_0033:
  8716 000057EC 4883F900                	cmp rcx, 0
  8717 000057F0 7413                    	je .L_tc_recycle_frame_done_0033
  8718 000057F2 4D8B11                  	mov r10, qword [r9]
  8719 000057F5 4D8910                  	mov qword [r8], r10
  8720 000057F8 4983E808                	sub r8, 8
  8721 000057FC 4983E908                	sub r9, 8
  8722 00005800 48FFC9                  	dec rcx
  8723 00005803 EBE7                    	jmp .L_tc_recycle_frame_loop_0033
  8724                                  .L_tc_recycle_frame_done_0033:
  8725 00005805 498D6008                	lea rsp, [r8 + 8]
  8726 00005809 5D                      	pop rbp ; restore the old rbp
  8727 0000580A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8728                                  .L_if_end_0010:
  8729 0000580D C9                      	leave
  8730 0000580E C22800                  	ret AND_KILL_FRAME(3)
  8731                                  .L_lambda_simple_end_0033:	; new closure is in rax
  8732 00005811 50                      	push rax
  8733 00005812 488B4520                	mov rax, PARAM(0)	; param run
  8734 00005816 8F00                    	pop qword [rax]
  8735 00005818 48B8-                   	mov rax, sob_void
  8735 0000581A [0000000000000000] 
  8736                                  
  8737 00005822 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8738 00005827 E8291E0100              	call malloc
  8739 0000582C 50                      	push rax
  8740 0000582D BF08000000              	mov rdi, 8 * 1	; new rib
  8741 00005832 E81E1E0100              	call malloc
  8742 00005837 50                      	push rax
  8743 00005838 BF10000000              	mov rdi, 8 * 2	; extended env
  8744 0000583D E8131E0100              	call malloc
  8745 00005842 488B7D10                	mov rdi, ENV
  8746 00005846 4831F6                  	 xor rsi, rsi
  8747 00005849 4831D2                  	 xor rdx, rdx
  8748 0000584C 48FFC2                  	inc rdx
  8749                                  .L_lambda_opt_env_loop_0009:	; 
  8750 0000584F 4883FE01                	cmp rsi, 1
  8751 00005853 7410                    	je .L_lambda_opt_env_end_0009
  8752 00005855 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8753 00005859 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8754 0000585D 48FFC6                  	inc rsi
  8755 00005860 48FFC2                  	inc rdx
  8756 00005863 EBEA                    	jmp .L_lambda_opt_env_loop_0009
  8757                                  .L_lambda_opt_env_end_0009:
  8758 00005865 5B                      	pop rbx
  8759 00005866 4831F6                  	xor rsi, rsi
  8760                                  .L_lambda_opt_params_loop_0009:	; copy params
  8761 00005869 4883FE01                	cmp rsi, 1
  8762 0000586D 740E                    	je .L_lambda_opt_params_end_0009
  8763 0000586F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8764 00005874 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8765 00005878 48FFC6                  	inc rsi
  8766 0000587B EBEC                    	jmp .L_lambda_opt_params_loop_0009
  8767                                  .L_lambda_opt_params_end_0009:
  8768 0000587D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8769 00005880 4889C3                  	mov rbx, rax
  8770 00005883 58                      	pop rax
  8771 00005884 C60004                  	mov byte [rax], T_closure
  8772 00005887 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8773 0000588B 48C74009[98580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  8774 00005893 E966010000              	jmp .L_lambda_opt_end_0009
  8775                                  .L_lambda_opt_code_0009:
  8776 00005898 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  8777 0000589D 4983FF02                	cmp r15, 2
  8778 000058A1 7409                    	je .L_lambda_opt_arity_check_exact_0009
  8779 000058A3 7F57                    	jg .L_lambda_opt_arity_check_more_0009
  8780 000058A5 6A02                    	push 2
  8781 000058A7 E9761D0100              	jmp L_error_incorrect_arity_opt
  8782                                  .L_lambda_opt_arity_check_exact_0009: ;Exact case
  8783 000058AC 4C8B0424                	mov r8, qword [rsp -8 * 0]
  8784 000058B0 4C894424F8              	mov qword [rsp -8], r8
  8785 000058B5 4C8B442408              	mov r8, qword [rsp +8]
  8786 000058BA 4C890424                	mov qword [rsp +8 * 0], r8
  8787 000058BE 4C8B442410              	mov r8, qword [rsp +8 * 2]
  8788 000058C3 4C89C1                  	mov rcx, r8
  8789 000058C6 49FFC0                  	inc r8
  8790 000058C9 4C89442408              	mov qword [rsp +8], r8
  8791 000058CE 4889E2                  	mov rdx, rsp
  8792 000058D1 4883C218                	add rdx, 24
  8793                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0009:
  8794 000058D5 4883F900                	cmp rcx, 0
  8795 000058D9 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0009
  8796 000058DB 4C8B02                  	mov r8, qword [rdx]
  8797 000058DE 4C8942F8                	mov qword [rdx - 8], r8
  8798 000058E2 4883C208                	add rdx, 8
  8799 000058E6 48FFC9                  	dec rcx
  8800 000058E9 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0009
  8801                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0009:
  8802 000058EB 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  8803 000058F3 4883EC08                	sub rsp, 8
  8804 000058F7 E985000000              	jmp .L_lambda_opt_stack_adjusted_0009
  8805                                  .L_lambda_opt_arity_check_more_0009:
  8806 000058FC 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  8807 00005901 4D89C4                  	mov r12, r8
  8808 00005904 4C89C1                  	mov rcx, r8
  8809 00005907 4D8D6802                	lea r13, [r8 + 2] 
  8810 0000590B 4883E902                	sub rcx, 2
  8811 0000590F 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  8812 00005914 49BE-                   	mov r14, sob_nil
  8812 00005916 [0100000000000000] 
  8813                                  .L_lambda_opt_create_list_of_opt_params_0009:
  8814 0000591E 4883F900                	cmp rcx, 0
  8815 00005922 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0009
  8816 00005924 BF11000000              	mov rdi, 17
  8817 00005929 E8271D0100              	call malloc
  8818 0000592E C60021                  	mov byte [rax], T_pair
  8819 00005931 498B1B                  	mov rbx, qword [r11]
  8820 00005934 48895801                	mov qword [rax +1], rbx
  8821 00005938 4C897009                	mov qword [rax + 1 + 8], r14
  8822 0000593C 4989C6                  	mov r14, rax
  8823 0000593F 48FFC9                  	dec rcx
  8824 00005942 4983EB08                	sub r11, 8
  8825 00005946 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0009
  8826                                  .L_lambda_opt_create_list_of_opt_params_end_0009:
  8827 00005948 4C8D542428              	lea r10, [rsp + 2*8 + 8*3]
  8828 0000594D 4D8932                  	mov qword [r10], r14
  8829 00005950 4E8D2CED00000000        	lea r13, [8 * r13]
  8830 00005958 4901E5                  	add r13, rsp
  8831 0000595B B906000000              	mov rcx, 4 + 2
  8832                                  .L_lambda_opt_stack_shrink_loop_0009:
  8833 00005960 4883F900                	cmp rcx, 0
  8834 00005964 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0009
  8835 00005966 4D8B1A                  	mov r11, qword [r10]
  8836 00005969 4D895D00                	mov qword [r13], r11
  8837 0000596D 4983EA08                	sub r10, 8
  8838 00005971 4983ED08                	sub r13, 8
  8839 00005975 48FFC9                  	dec rcx
  8840 00005978 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  8841                                  .L_lambda_opt_stack_shrink_loop_exit_0009:
  8842 0000597A 4983C508                	add r13, 8
  8843 0000597E 4C89EC                  	mov rsp, r13
  8844                                  .L_lambda_opt_stack_adjusted_0009:
  8845 00005981 48C744241003000000      	mov qword [rsp + 8*2], 3
  8846 0000598A C8000000                	enter 0, 0
  8847                                  	; preparing a tail-call
  8848 0000598E 488B4530                	mov rax, PARAM(2)	; param ss
  8849 00005992 50                      	push rax
  8850 00005993 488B4528                	mov rax, PARAM(1)	; param unit
  8851 00005997 50                      	push rax
  8852 00005998 488B4520                	mov rax, PARAM(0)	; param f
  8853 0000599C 50                      	push rax
  8854 0000599D 6A03                    	push 3	; arg count
  8855 0000599F 488B4510                	mov rax, ENV
  8856 000059A3 488B00                  	mov rax, qword [rax + 8 * 0]
  8857 000059A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8858 000059A9 488B00                  	mov rax, qword [rax]
  8859 000059AC 803804                  	cmp byte [rax], T_closure
  8860 000059AF 0F85F71B0100            	jne L_error_non_closure
  8861 000059B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8862 000059B8 FF7508                  	push qword [rbp + 8 * 1]
  8863                                   ; old ret addr
  8864 000059BB FF7500                  	push qword [rbp]
  8865                                   ; restore the old rbp
  8866 000059BE BB03000000              	mov rbx, 3
  8867 000059C3 4883C303                	add rbx, 3
  8868 000059C7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8869 000059CB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8870 000059D0 4C8D4DF8                	lea r9, [rbp - 8]
  8871 000059D4 B907000000              	mov rcx, 7
  8872                                  .L_tc_recycle_frame_loop_0034:
  8873 000059D9 4883F900                	cmp rcx, 0
  8874 000059DD 7413                    	je .L_tc_recycle_frame_done_0034
  8875 000059DF 4D8B11                  	mov r10, qword [r9]
  8876 000059E2 4D8910                  	mov qword [r8], r10
  8877 000059E5 4983E808                	sub r8, 8
  8878 000059E9 4983E908                	sub r9, 8
  8879 000059ED 48FFC9                  	dec rcx
  8880 000059F0 EBE7                    	jmp .L_tc_recycle_frame_loop_0034
  8881                                  .L_tc_recycle_frame_done_0034:
  8882 000059F2 498D6008                	lea rsp, [r8 + 8]
  8883 000059F6 5D                      	pop rbp ; restore the old rbp
  8884 000059F7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8885 000059FA C9                      	leave
  8886 000059FB C22800                  	ret 8 * (2 + 3)
  8887                                  .L_lambda_opt_end_0009:	; new closure is in rax
  8888 000059FE C9                      	leave
  8889 000059FF C21800                  	ret AND_KILL_FRAME(1)
  8890                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8891 00005A02 803804                  	cmp byte [rax], T_closure
  8892 00005A05 0F85A11B0100            	jne L_error_non_closure
  8893 00005A0B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8894 00005A0E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8895 00005A11 48890425[7B130000]      	mov qword [free_var_86], rax
  8896 00005A19 48B8-                   	mov rax, sob_void
  8896 00005A1B [0000000000000000] 
  8897                                  
  8898 00005A23 4889C7                  	mov rdi, rax
  8899 00005A26 E87F1E0100              	call print_sexpr_if_not_void
  8900                                  	; preparing a non-tail-call
  8901 00005A2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8902 00005A30 E8201C0100              	call malloc
  8903 00005A35 50                      	push rax
  8904 00005A36 BF00000000              	mov rdi, 8 * 0	; new rib
  8905 00005A3B E8151C0100              	call malloc
  8906 00005A40 50                      	push rax
  8907 00005A41 BF08000000              	mov rdi, 8 * 1	; extended env
  8908 00005A46 E80A1C0100              	call malloc
  8909 00005A4B 488B7D10                	mov rdi, ENV
  8910 00005A4F BE00000000              	mov rsi, 0
  8911 00005A54 BA01000000              	mov rdx, 1
  8912                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8913 00005A59 4883FE00                	cmp rsi, 0
  8914 00005A5D 7410                    	je .L_lambda_simple_env_end_0034
  8915 00005A5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8916 00005A63 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8917 00005A67 48FFC6                  	inc rsi
  8918 00005A6A 48FFC2                  	inc rdx
  8919 00005A6D EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8920                                  .L_lambda_simple_env_end_0034:
  8921 00005A6F 5B                      	pop rbx
  8922 00005A70 BE00000000              	mov rsi, 0
  8923                                  .L_lambda_simple_params_loop_0034:	; copy params
  8924 00005A75 4883FE00                	cmp rsi, 0
  8925 00005A79 740E                    	je .L_lambda_simple_params_end_0034
  8926 00005A7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8927 00005A80 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8928 00005A84 48FFC6                  	inc rsi
  8929 00005A87 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8930                                  .L_lambda_simple_params_end_0034:
  8931 00005A89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8932 00005A8C 4889C3                  	mov rbx, rax
  8933 00005A8F 58                      	pop rax
  8934 00005A90 C60004                  	mov byte [rax], T_closure
  8935 00005A93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8936 00005A97 48C74009[A45A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8937 00005A9F E992000000              	jmp .L_lambda_simple_end_0034
  8938                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8939 00005AA4 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8940 00005AAA 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8941 00005AAC FF742410                	push qword [rsp + 8 * 2]
  8942 00005AB0 6A00                    	push 0
  8943 00005AB2 E9571B0100              	jmp L_error_incorrect_arity_simple
  8944                                  .L_lambda_simple_arity_check_ok_0034:
  8945 00005AB7 C8000000                	enter 0, 0
  8946                                  	; preparing a tail-call
  8947 00005ABB 48B8-                   	mov rax, L_constants + 2187
  8947 00005ABD [8B08000000000000] 
  8948 00005AC5 50                      	push rax
  8949 00005AC6 48B8-                   	mov rax, L_constants + 2178
  8949 00005AC8 [8208000000000000] 
  8950 00005AD0 50                      	push rax
  8951 00005AD1 6A02                    	push 2	; arg count
  8952 00005AD3 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  8953 00005ADB 803805                  	cmp byte [rax], T_undefined
  8954 00005ADE 0F84441A0100            	je L_error_fvar_undefined
  8955 00005AE4 803804                  	cmp byte [rax], T_closure
  8956 00005AE7 0F85BF1A0100            	jne L_error_non_closure
  8957 00005AED FF7001                  	push SOB_CLOSURE_ENV(rax)
  8958 00005AF0 FF7508                  	push qword [rbp + 8 * 1]
  8959                                   ; old ret addr
  8960 00005AF3 FF7500                  	push qword [rbp]
  8961                                   ; restore the old rbp
  8962 00005AF6 BB02000000              	mov rbx, 2
  8963 00005AFB 4883C303                	add rbx, 3
  8964 00005AFF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  8965 00005B03 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  8966 00005B08 4C8D4DF8                	lea r9, [rbp - 8]
  8967 00005B0C B906000000              	mov rcx, 6
  8968                                  .L_tc_recycle_frame_loop_0035:
  8969 00005B11 4883F900                	cmp rcx, 0
  8970 00005B15 7413                    	je .L_tc_recycle_frame_done_0035
  8971 00005B17 4D8B11                  	mov r10, qword [r9]
  8972 00005B1A 4D8910                  	mov qword [r8], r10
  8973 00005B1D 4983E808                	sub r8, 8
  8974 00005B21 4983E908                	sub r9, 8
  8975 00005B25 48FFC9                  	dec rcx
  8976 00005B28 EBE7                    	jmp .L_tc_recycle_frame_loop_0035
  8977                                  .L_tc_recycle_frame_done_0035:
  8978 00005B2A 498D6008                	lea rsp, [r8 + 8]
  8979 00005B2E 5D                      	pop rbp ; restore the old rbp
  8980 00005B2F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8981 00005B32 C9                      	leave
  8982 00005B33 C21000                  	ret AND_KILL_FRAME(0)
  8983                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8984 00005B36 50                      	push rax
  8985 00005B37 6A01                    	push 1	; arg count
  8986 00005B39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8987 00005B3E E8121B0100              	call malloc
  8988 00005B43 50                      	push rax
  8989 00005B44 BF00000000              	mov rdi, 8 * 0	; new rib
  8990 00005B49 E8071B0100              	call malloc
  8991 00005B4E 50                      	push rax
  8992 00005B4F BF08000000              	mov rdi, 8 * 1	; extended env
  8993 00005B54 E8FC1A0100              	call malloc
  8994 00005B59 488B7D10                	mov rdi, ENV
  8995 00005B5D BE00000000              	mov rsi, 0
  8996 00005B62 BA01000000              	mov rdx, 1
  8997                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8998 00005B67 4883FE00                	cmp rsi, 0
  8999 00005B6B 7410                    	je .L_lambda_simple_env_end_0035
  9000 00005B6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9001 00005B71 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9002 00005B75 48FFC6                  	inc rsi
  9003 00005B78 48FFC2                  	inc rdx
  9004 00005B7B EBEA                    	jmp .L_lambda_simple_env_loop_0035
  9005                                  .L_lambda_simple_env_end_0035:
  9006 00005B7D 5B                      	pop rbx
  9007 00005B7E BE00000000              	mov rsi, 0
  9008                                  .L_lambda_simple_params_loop_0035:	; copy params
  9009 00005B83 4883FE00                	cmp rsi, 0
  9010 00005B87 740E                    	je .L_lambda_simple_params_end_0035
  9011 00005B89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9012 00005B8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9013 00005B92 48FFC6                  	inc rsi
  9014 00005B95 EBEC                    	jmp .L_lambda_simple_params_loop_0035
  9015                                  .L_lambda_simple_params_end_0035:
  9016 00005B97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9017 00005B9A 4889C3                  	mov rbx, rax
  9018 00005B9D 58                      	pop rax
  9019 00005B9E C60004                  	mov byte [rax], T_closure
  9020 00005BA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9021 00005BA5 48C74009[B25B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  9022 00005BAD E9050C0000              	jmp .L_lambda_simple_end_0035
  9023                                  .L_lambda_simple_code_0035:	; lambda-simple body
  9024 00005BB2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9025 00005BB8 740B                    	je .L_lambda_simple_arity_check_ok_0035
  9026 00005BBA FF742410                	push qword [rsp + 8 * 2]
  9027 00005BBE 6A01                    	push 1
  9028 00005BC0 E9491A0100              	jmp L_error_incorrect_arity_simple
  9029                                  .L_lambda_simple_arity_check_ok_0035:
  9030 00005BC5 C8000000                	enter 0, 0
  9031                                  	; preparing a tail-call
  9032 00005BC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9033 00005BCE E8821A0100              	call malloc
  9034 00005BD3 50                      	push rax
  9035 00005BD4 BF08000000              	mov rdi, 8 * 1	; new rib
  9036 00005BD9 E8771A0100              	call malloc
  9037 00005BDE 50                      	push rax
  9038 00005BDF BF10000000              	mov rdi, 8 * 2	; extended env
  9039 00005BE4 E86C1A0100              	call malloc
  9040 00005BE9 488B7D10                	mov rdi, ENV
  9041 00005BED BE00000000              	mov rsi, 0
  9042 00005BF2 BA01000000              	mov rdx, 1
  9043                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  9044 00005BF7 4883FE01                	cmp rsi, 1
  9045 00005BFB 7410                    	je .L_lambda_simple_env_end_0036
  9046 00005BFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9047 00005C01 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9048 00005C05 48FFC6                  	inc rsi
  9049 00005C08 48FFC2                  	inc rdx
  9050 00005C0B EBEA                    	jmp .L_lambda_simple_env_loop_0036
  9051                                  .L_lambda_simple_env_end_0036:
  9052 00005C0D 5B                      	pop rbx
  9053 00005C0E BE00000000              	mov rsi, 0
  9054                                  .L_lambda_simple_params_loop_0036:	; copy params
  9055 00005C13 4883FE01                	cmp rsi, 1
  9056 00005C17 740E                    	je .L_lambda_simple_params_end_0036
  9057 00005C19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9058 00005C1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9059 00005C22 48FFC6                  	inc rsi
  9060 00005C25 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  9061                                  .L_lambda_simple_params_end_0036:
  9062 00005C27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9063 00005C2A 4889C3                  	mov rbx, rax
  9064 00005C2D 58                      	pop rax
  9065 00005C2E C60004                  	mov byte [rax], T_closure
  9066 00005C31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9067 00005C35 48C74009[425C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  9068 00005C3D E9A0080000              	jmp .L_lambda_simple_end_0036
  9069                                  .L_lambda_simple_code_0036:	; lambda-simple body
  9070 00005C42 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9071 00005C48 740B                    	je .L_lambda_simple_arity_check_ok_0036
  9072 00005C4A FF742410                	push qword [rsp + 8 * 2]
  9073 00005C4E 6A02                    	push 2
  9074 00005C50 E9B9190100              	jmp L_error_incorrect_arity_simple
  9075                                  .L_lambda_simple_arity_check_ok_0036:
  9076 00005C55 C8000000                	enter 0, 0
  9077                                  	; preparing a non-tail-call
  9078 00005C59 488B4520                	mov rax, PARAM(0)	; param a
  9079 00005C5D 50                      	push rax
  9080 00005C5E 6A01                    	push 1	; arg count
  9081 00005C60 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9082 00005C68 803805                  	cmp byte [rax], T_undefined
  9083 00005C6B 0F84B7180100            	je L_error_fvar_undefined
  9084 00005C71 803804                  	cmp byte [rax], T_closure
  9085 00005C74 0F8532190100            	jne L_error_non_closure
  9086 00005C7A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9087 00005C7D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9088 00005C80 483D[02000000]          	cmp rax, sob_boolean_false
  9089 00005C86 0F8487020000            	je .L_if_else_001c
  9090                                  	; preparing a non-tail-call
  9091 00005C8C 488B4528                	mov rax, PARAM(1)	; param b
  9092 00005C90 50                      	push rax
  9093 00005C91 6A01                    	push 1	; arg count
  9094 00005C93 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9095 00005C9B 803805                  	cmp byte [rax], T_undefined
  9096 00005C9E 0F8484180100            	je L_error_fvar_undefined
  9097 00005CA4 803804                  	cmp byte [rax], T_closure
  9098 00005CA7 0F85FF180100            	jne L_error_non_closure
  9099 00005CAD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9100 00005CB0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9101 00005CB3 483D[02000000]          	cmp rax, sob_boolean_false
  9102 00005CB9 7470                    	je .L_if_else_0013
  9103                                  	; preparing a tail-call
  9104 00005CBB 488B4528                	mov rax, PARAM(1)	; param b
  9105 00005CBF 50                      	push rax
  9106 00005CC0 488B4520                	mov rax, PARAM(0)	; param a
  9107 00005CC4 50                      	push rax
  9108 00005CC5 6A02                    	push 2	; arg count
  9109 00005CC7 488B0425[800E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9110 00005CCF 803805                  	cmp byte [rax], T_undefined
  9111 00005CD2 0F8450180100            	je L_error_fvar_undefined
  9112 00005CD8 803804                  	cmp byte [rax], T_closure
  9113 00005CDB 0F85CB180100            	jne L_error_non_closure
  9114 00005CE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9115 00005CE4 FF7508                  	push qword [rbp + 8 * 1]
  9116                                   ; old ret addr
  9117 00005CE7 FF7500                  	push qword [rbp]
  9118                                   ; restore the old rbp
  9119 00005CEA BB02000000              	mov rbx, 2
  9120 00005CEF 4883C303                	add rbx, 3
  9121 00005CF3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9122 00005CF7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9123 00005CFC 4C8D4DF8                	lea r9, [rbp - 8]
  9124 00005D00 B906000000              	mov rcx, 6
  9125                                  .L_tc_recycle_frame_loop_0037:
  9126 00005D05 4883F900                	cmp rcx, 0
  9127 00005D09 7413                    	je .L_tc_recycle_frame_done_0037
  9128 00005D0B 4D8B11                  	mov r10, qword [r9]
  9129 00005D0E 4D8910                  	mov qword [r8], r10
  9130 00005D11 4983E808                	sub r8, 8
  9131 00005D15 4983E908                	sub r9, 8
  9132 00005D19 48FFC9                  	dec rcx
  9133 00005D1C EBE7                    	jmp .L_tc_recycle_frame_loop_0037
  9134                                  .L_tc_recycle_frame_done_0037:
  9135 00005D1E 498D6008                	lea rsp, [r8 + 8]
  9136 00005D22 5D                      	pop rbp ; restore the old rbp
  9137 00005D23 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9138 00005D26 E9E3010000              	jmp .L_if_end_0013
  9139                                  .L_if_else_0013:
  9140                                  	; preparing a non-tail-call
  9141 00005D2B 488B4528                	mov rax, PARAM(1)	; param b
  9142 00005D2F 50                      	push rax
  9143 00005D30 6A01                    	push 1	; arg count
  9144 00005D32 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9145 00005D3A 803805                  	cmp byte [rax], T_undefined
  9146 00005D3D 0F84E5170100            	je L_error_fvar_undefined
  9147 00005D43 803804                  	cmp byte [rax], T_closure
  9148 00005D46 0F8560180100            	jne L_error_non_closure
  9149 00005D4C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9150 00005D4F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9151 00005D52 483D[02000000]          	cmp rax, sob_boolean_false
  9152 00005D58 0F8493000000            	je .L_if_else_0012
  9153                                  	; preparing a tail-call
  9154 00005D5E 488B4528                	mov rax, PARAM(1)	; param b
  9155 00005D62 50                      	push rax
  9156                                  	; preparing a non-tail-call
  9157 00005D63 488B4520                	mov rax, PARAM(0)	; param a
  9158 00005D67 50                      	push rax
  9159 00005D68 6A01                    	push 1	; arg count
  9160 00005D6A 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9161 00005D72 803805                  	cmp byte [rax], T_undefined
  9162 00005D75 0F84AD170100            	je L_error_fvar_undefined
  9163 00005D7B 803804                  	cmp byte [rax], T_closure
  9164 00005D7E 0F8528180100            	jne L_error_non_closure
  9165 00005D84 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9166 00005D87 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9167 00005D8A 50                      	push rax
  9168 00005D8B 6A02                    	push 2	; arg count
  9169 00005D8D 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9170 00005D95 803805                  	cmp byte [rax], T_undefined
  9171 00005D98 0F848A170100            	je L_error_fvar_undefined
  9172 00005D9E 803804                  	cmp byte [rax], T_closure
  9173 00005DA1 0F8505180100            	jne L_error_non_closure
  9174 00005DA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9175 00005DAA FF7508                  	push qword [rbp + 8 * 1]
  9176                                   ; old ret addr
  9177 00005DAD FF7500                  	push qword [rbp]
  9178                                   ; restore the old rbp
  9179 00005DB0 BB02000000              	mov rbx, 2
  9180 00005DB5 4883C303                	add rbx, 3
  9181 00005DB9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9182 00005DBD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9183 00005DC2 4C8D4DF8                	lea r9, [rbp - 8]
  9184 00005DC6 B906000000              	mov rcx, 6
  9185                                  .L_tc_recycle_frame_loop_0038:
  9186 00005DCB 4883F900                	cmp rcx, 0
  9187 00005DCF 7413                    	je .L_tc_recycle_frame_done_0038
  9188 00005DD1 4D8B11                  	mov r10, qword [r9]
  9189 00005DD4 4D8910                  	mov qword [r8], r10
  9190 00005DD7 4983E808                	sub r8, 8
  9191 00005DDB 4983E908                	sub r9, 8
  9192 00005DDF 48FFC9                  	dec rcx
  9193 00005DE2 EBE7                    	jmp .L_tc_recycle_frame_loop_0038
  9194                                  .L_tc_recycle_frame_done_0038:
  9195 00005DE4 498D6008                	lea rsp, [r8 + 8]
  9196 00005DE8 5D                      	pop rbp ; restore the old rbp
  9197 00005DE9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9198 00005DEC E91D010000              	jmp .L_if_end_0012
  9199                                  .L_if_else_0012:
  9200                                  	; preparing a non-tail-call
  9201 00005DF1 488B4528                	mov rax, PARAM(1)	; param b
  9202 00005DF5 50                      	push rax
  9203 00005DF6 6A01                    	push 1	; arg count
  9204 00005DF8 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9205 00005E00 803805                  	cmp byte [rax], T_undefined
  9206 00005E03 0F841F170100            	je L_error_fvar_undefined
  9207 00005E09 803804                  	cmp byte [rax], T_closure
  9208 00005E0C 0F859A170100            	jne L_error_non_closure
  9209 00005E12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9210 00005E15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9211 00005E18 483D[02000000]          	cmp rax, sob_boolean_false
  9212 00005E1E 0F8490000000            	je .L_if_else_0011
  9213                                  	; preparing a tail-call
  9214 00005E24 488B4528                	mov rax, PARAM(1)	; param b
  9215 00005E28 50                      	push rax
  9216                                  	; preparing a non-tail-call
  9217 00005E29 488B4520                	mov rax, PARAM(0)	; param a
  9218 00005E2D 50                      	push rax
  9219 00005E2E 6A01                    	push 1	; arg count
  9220 00005E30 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9221 00005E38 803805                  	cmp byte [rax], T_undefined
  9222 00005E3B 0F84E7160100            	je L_error_fvar_undefined
  9223 00005E41 803804                  	cmp byte [rax], T_closure
  9224 00005E44 0F8562170100            	jne L_error_non_closure
  9225 00005E4A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9226 00005E4D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9227 00005E50 50                      	push rax
  9228 00005E51 6A02                    	push 2	; arg count
  9229 00005E53 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9230 00005E5B 803805                  	cmp byte [rax], T_undefined
  9231 00005E5E 0F84C4160100            	je L_error_fvar_undefined
  9232 00005E64 803804                  	cmp byte [rax], T_closure
  9233 00005E67 0F853F170100            	jne L_error_non_closure
  9234 00005E6D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9235 00005E70 FF7508                  	push qword [rbp + 8 * 1]
  9236                                   ; old ret addr
  9237 00005E73 FF7500                  	push qword [rbp]
  9238                                   ; restore the old rbp
  9239 00005E76 BB02000000              	mov rbx, 2
  9240 00005E7B 4883C303                	add rbx, 3
  9241 00005E7F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9242 00005E83 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9243 00005E88 4C8D4DF8                	lea r9, [rbp - 8]
  9244 00005E8C B906000000              	mov rcx, 6
  9245                                  .L_tc_recycle_frame_loop_0039:
  9246 00005E91 4883F900                	cmp rcx, 0
  9247 00005E95 7413                    	je .L_tc_recycle_frame_done_0039
  9248 00005E97 4D8B11                  	mov r10, qword [r9]
  9249 00005E9A 4D8910                  	mov qword [r8], r10
  9250 00005E9D 4983E808                	sub r8, 8
  9251 00005EA1 4983E908                	sub r9, 8
  9252 00005EA5 48FFC9                  	dec rcx
  9253 00005EA8 EBE7                    	jmp .L_tc_recycle_frame_loop_0039
  9254                                  .L_tc_recycle_frame_done_0039:
  9255 00005EAA 498D6008                	lea rsp, [r8 + 8]
  9256 00005EAE 5D                      	pop rbp ; restore the old rbp
  9257 00005EAF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9258 00005EB2 EB5A                    	jmp .L_if_end_0011
  9259                                  .L_if_else_0011:
  9260                                  	; preparing a tail-call
  9261 00005EB4 6A00                    	push 0	; arg count
  9262 00005EB6 488B4510                	mov rax, ENV
  9263 00005EBA 488B00                  	mov rax, qword [rax + 8 * 0]
  9264 00005EBD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9265 00005EC0 803804                  	cmp byte [rax], T_closure
  9266 00005EC3 0F85E3160100            	jne L_error_non_closure
  9267 00005EC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9268 00005ECC FF7508                  	push qword [rbp + 8 * 1]
  9269                                   ; old ret addr
  9270 00005ECF FF7500                  	push qword [rbp]
  9271                                   ; restore the old rbp
  9272 00005ED2 BB00000000              	mov rbx, 0
  9273 00005ED7 4883C303                	add rbx, 3
  9274 00005EDB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9275 00005EDF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9276 00005EE4 4C8D4DF8                	lea r9, [rbp - 8]
  9277 00005EE8 B904000000              	mov rcx, 4
  9278                                  .L_tc_recycle_frame_loop_003a:
  9279 00005EED 4883F900                	cmp rcx, 0
  9280 00005EF1 7413                    	je .L_tc_recycle_frame_done_003a
  9281 00005EF3 4D8B11                  	mov r10, qword [r9]
  9282 00005EF6 4D8910                  	mov qword [r8], r10
  9283 00005EF9 4983E808                	sub r8, 8
  9284 00005EFD 4983E908                	sub r9, 8
  9285 00005F01 48FFC9                  	dec rcx
  9286 00005F04 EBE7                    	jmp .L_tc_recycle_frame_loop_003a
  9287                                  .L_tc_recycle_frame_done_003a:
  9288 00005F06 498D6008                	lea rsp, [r8 + 8]
  9289 00005F0A 5D                      	pop rbp ; restore the old rbp
  9290 00005F0B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9291                                  .L_if_end_0011:
  9292                                  .L_if_end_0012:
  9293                                  .L_if_end_0013:
  9294 00005F0E E9CB050000              	jmp .L_if_end_001c
  9295                                  .L_if_else_001c:
  9296                                  	; preparing a non-tail-call
  9297 00005F13 488B4520                	mov rax, PARAM(0)	; param a
  9298 00005F17 50                      	push rax
  9299 00005F18 6A01                    	push 1	; arg count
  9300 00005F1A 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9301 00005F22 803805                  	cmp byte [rax], T_undefined
  9302 00005F25 0F84FD150100            	je L_error_fvar_undefined
  9303 00005F2B 803804                  	cmp byte [rax], T_closure
  9304 00005F2E 0F8578160100            	jne L_error_non_closure
  9305 00005F34 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9306 00005F37 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9307 00005F3A 483D[02000000]          	cmp rax, sob_boolean_false
  9308 00005F40 0F8487020000            	je .L_if_else_001b
  9309                                  	; preparing a non-tail-call
  9310 00005F46 488B4528                	mov rax, PARAM(1)	; param b
  9311 00005F4A 50                      	push rax
  9312 00005F4B 6A01                    	push 1	; arg count
  9313 00005F4D 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9314 00005F55 803805                  	cmp byte [rax], T_undefined
  9315 00005F58 0F84CA150100            	je L_error_fvar_undefined
  9316 00005F5E 803804                  	cmp byte [rax], T_closure
  9317 00005F61 0F8545160100            	jne L_error_non_closure
  9318 00005F67 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9319 00005F6A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9320 00005F6D 483D[02000000]          	cmp rax, sob_boolean_false
  9321 00005F73 0F8493000000            	je .L_if_else_0016
  9322                                  	; preparing a tail-call
  9323                                  	; preparing a non-tail-call
  9324 00005F79 488B4528                	mov rax, PARAM(1)	; param b
  9325 00005F7D 50                      	push rax
  9326 00005F7E 6A01                    	push 1	; arg count
  9327 00005F80 488B0425[A10F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9328 00005F88 803805                  	cmp byte [rax], T_undefined
  9329 00005F8B 0F8497150100            	je L_error_fvar_undefined
  9330 00005F91 803804                  	cmp byte [rax], T_closure
  9331 00005F94 0F8512160100            	jne L_error_non_closure
  9332 00005F9A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9333 00005F9D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9334 00005FA0 50                      	push rax
  9335 00005FA1 488B4520                	mov rax, PARAM(0)	; param a
  9336 00005FA5 50                      	push rax
  9337 00005FA6 6A02                    	push 2	; arg count
  9338 00005FA8 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9339 00005FB0 803805                  	cmp byte [rax], T_undefined
  9340 00005FB3 0F846F150100            	je L_error_fvar_undefined
  9341 00005FB9 803804                  	cmp byte [rax], T_closure
  9342 00005FBC 0F85EA150100            	jne L_error_non_closure
  9343 00005FC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9344 00005FC5 FF7508                  	push qword [rbp + 8 * 1]
  9345                                   ; old ret addr
  9346 00005FC8 FF7500                  	push qword [rbp]
  9347                                   ; restore the old rbp
  9348 00005FCB BB02000000              	mov rbx, 2
  9349 00005FD0 4883C303                	add rbx, 3
  9350 00005FD4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9351 00005FD8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9352 00005FDD 4C8D4DF8                	lea r9, [rbp - 8]
  9353 00005FE1 B906000000              	mov rcx, 6
  9354                                  .L_tc_recycle_frame_loop_003b:
  9355 00005FE6 4883F900                	cmp rcx, 0
  9356 00005FEA 7413                    	je .L_tc_recycle_frame_done_003b
  9357 00005FEC 4D8B11                  	mov r10, qword [r9]
  9358 00005FEF 4D8910                  	mov qword [r8], r10
  9359 00005FF2 4983E808                	sub r8, 8
  9360 00005FF6 4983E908                	sub r9, 8
  9361 00005FFA 48FFC9                  	dec rcx
  9362 00005FFD EBE7                    	jmp .L_tc_recycle_frame_loop_003b
  9363                                  .L_tc_recycle_frame_done_003b:
  9364 00005FFF 498D6008                	lea rsp, [r8 + 8]
  9365 00006003 5D                      	pop rbp ; restore the old rbp
  9366 00006004 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9367 00006007 E9BC010000              	jmp .L_if_end_0016
  9368                                  .L_if_else_0016:
  9369                                  	; preparing a non-tail-call
  9370 0000600C 488B4528                	mov rax, PARAM(1)	; param b
  9371 00006010 50                      	push rax
  9372 00006011 6A01                    	push 1	; arg count
  9373 00006013 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9374 0000601B 803805                  	cmp byte [rax], T_undefined
  9375 0000601E 0F8404150100            	je L_error_fvar_undefined
  9376 00006024 803804                  	cmp byte [rax], T_closure
  9377 00006027 0F857F150100            	jne L_error_non_closure
  9378 0000602D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9379 00006030 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9380 00006033 483D[02000000]          	cmp rax, sob_boolean_false
  9381 00006039 7470                    	je .L_if_else_0015
  9382                                  	; preparing a tail-call
  9383 0000603B 488B4528                	mov rax, PARAM(1)	; param b
  9384 0000603F 50                      	push rax
  9385 00006040 488B4520                	mov rax, PARAM(0)	; param a
  9386 00006044 50                      	push rax
  9387 00006045 6A02                    	push 2	; arg count
  9388 00006047 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9389 0000604F 803805                  	cmp byte [rax], T_undefined
  9390 00006052 0F84D0140100            	je L_error_fvar_undefined
  9391 00006058 803804                  	cmp byte [rax], T_closure
  9392 0000605B 0F854B150100            	jne L_error_non_closure
  9393 00006061 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9394 00006064 FF7508                  	push qword [rbp + 8 * 1]
  9395                                   ; old ret addr
  9396 00006067 FF7500                  	push qword [rbp]
  9397                                   ; restore the old rbp
  9398 0000606A BB02000000              	mov rbx, 2
  9399 0000606F 4883C303                	add rbx, 3
  9400 00006073 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9401 00006077 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9402 0000607C 4C8D4DF8                	lea r9, [rbp - 8]
  9403 00006080 B906000000              	mov rcx, 6
  9404                                  .L_tc_recycle_frame_loop_003c:
  9405 00006085 4883F900                	cmp rcx, 0
  9406 00006089 7413                    	je .L_tc_recycle_frame_done_003c
  9407 0000608B 4D8B11                  	mov r10, qword [r9]
  9408 0000608E 4D8910                  	mov qword [r8], r10
  9409 00006091 4983E808                	sub r8, 8
  9410 00006095 4983E908                	sub r9, 8
  9411 00006099 48FFC9                  	dec rcx
  9412 0000609C EBE7                    	jmp .L_tc_recycle_frame_loop_003c
  9413                                  .L_tc_recycle_frame_done_003c:
  9414 0000609E 498D6008                	lea rsp, [r8 + 8]
  9415 000060A2 5D                      	pop rbp ; restore the old rbp
  9416 000060A3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9417 000060A6 E91D010000              	jmp .L_if_end_0015
  9418                                  .L_if_else_0015:
  9419                                  	; preparing a non-tail-call
  9420 000060AB 488B4528                	mov rax, PARAM(1)	; param b
  9421 000060AF 50                      	push rax
  9422 000060B0 6A01                    	push 1	; arg count
  9423 000060B2 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9424 000060BA 803805                  	cmp byte [rax], T_undefined
  9425 000060BD 0F8465140100            	je L_error_fvar_undefined
  9426 000060C3 803804                  	cmp byte [rax], T_closure
  9427 000060C6 0F85E0140100            	jne L_error_non_closure
  9428 000060CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9429 000060CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  9430 000060D2 483D[02000000]          	cmp rax, sob_boolean_false
  9431 000060D8 0F8490000000            	je .L_if_else_0014
  9432                                  	; preparing a tail-call
  9433 000060DE 488B4528                	mov rax, PARAM(1)	; param b
  9434 000060E2 50                      	push rax
  9435                                  	; preparing a non-tail-call
  9436 000060E3 488B4520                	mov rax, PARAM(0)	; param a
  9437 000060E7 50                      	push rax
  9438 000060E8 6A01                    	push 1	; arg count
  9439 000060EA 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9440 000060F2 803805                  	cmp byte [rax], T_undefined
  9441 000060F5 0F842D140100            	je L_error_fvar_undefined
  9442 000060FB 803804                  	cmp byte [rax], T_closure
  9443 000060FE 0F85A8140100            	jne L_error_non_closure
  9444 00006104 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9445 00006107 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9446 0000610A 50                      	push rax
  9447 0000610B 6A02                    	push 2	; arg count
  9448 0000610D 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9449 00006115 803805                  	cmp byte [rax], T_undefined
  9450 00006118 0F840A140100            	je L_error_fvar_undefined
  9451 0000611E 803804                  	cmp byte [rax], T_closure
  9452 00006121 0F8585140100            	jne L_error_non_closure
  9453 00006127 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9454 0000612A FF7508                  	push qword [rbp + 8 * 1]
  9455                                   ; old ret addr
  9456 0000612D FF7500                  	push qword [rbp]
  9457                                   ; restore the old rbp
  9458 00006130 BB02000000              	mov rbx, 2
  9459 00006135 4883C303                	add rbx, 3
  9460 00006139 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9461 0000613D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9462 00006142 4C8D4DF8                	lea r9, [rbp - 8]
  9463 00006146 B906000000              	mov rcx, 6
  9464                                  .L_tc_recycle_frame_loop_003d:
  9465 0000614B 4883F900                	cmp rcx, 0
  9466 0000614F 7413                    	je .L_tc_recycle_frame_done_003d
  9467 00006151 4D8B11                  	mov r10, qword [r9]
  9468 00006154 4D8910                  	mov qword [r8], r10
  9469 00006157 4983E808                	sub r8, 8
  9470 0000615B 4983E908                	sub r9, 8
  9471 0000615F 48FFC9                  	dec rcx
  9472 00006162 EBE7                    	jmp .L_tc_recycle_frame_loop_003d
  9473                                  .L_tc_recycle_frame_done_003d:
  9474 00006164 498D6008                	lea rsp, [r8 + 8]
  9475 00006168 5D                      	pop rbp ; restore the old rbp
  9476 00006169 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9477 0000616C EB5A                    	jmp .L_if_end_0014
  9478                                  .L_if_else_0014:
  9479                                  	; preparing a tail-call
  9480 0000616E 6A00                    	push 0	; arg count
  9481 00006170 488B4510                	mov rax, ENV
  9482 00006174 488B00                  	mov rax, qword [rax + 8 * 0]
  9483 00006177 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9484 0000617A 803804                  	cmp byte [rax], T_closure
  9485 0000617D 0F8529140100            	jne L_error_non_closure
  9486 00006183 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9487 00006186 FF7508                  	push qword [rbp + 8 * 1]
  9488                                   ; old ret addr
  9489 00006189 FF7500                  	push qword [rbp]
  9490                                   ; restore the old rbp
  9491 0000618C BB00000000              	mov rbx, 0
  9492 00006191 4883C303                	add rbx, 3
  9493 00006195 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9494 00006199 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9495 0000619E 4C8D4DF8                	lea r9, [rbp - 8]
  9496 000061A2 B904000000              	mov rcx, 4
  9497                                  .L_tc_recycle_frame_loop_003e:
  9498 000061A7 4883F900                	cmp rcx, 0
  9499 000061AB 7413                    	je .L_tc_recycle_frame_done_003e
  9500 000061AD 4D8B11                  	mov r10, qword [r9]
  9501 000061B0 4D8910                  	mov qword [r8], r10
  9502 000061B3 4983E808                	sub r8, 8
  9503 000061B7 4983E908                	sub r9, 8
  9504 000061BB 48FFC9                  	dec rcx
  9505 000061BE EBE7                    	jmp .L_tc_recycle_frame_loop_003e
  9506                                  .L_tc_recycle_frame_done_003e:
  9507 000061C0 498D6008                	lea rsp, [r8 + 8]
  9508 000061C4 5D                      	pop rbp ; restore the old rbp
  9509 000061C5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9510                                  .L_if_end_0014:
  9511                                  .L_if_end_0015:
  9512                                  .L_if_end_0016:
  9513 000061C8 E911030000              	jmp .L_if_end_001b
  9514                                  .L_if_else_001b:
  9515                                  	; preparing a non-tail-call
  9516 000061CD 488B4520                	mov rax, PARAM(0)	; param a
  9517 000061D1 50                      	push rax
  9518 000061D2 6A01                    	push 1	; arg count
  9519 000061D4 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9520 000061DC 803805                  	cmp byte [rax], T_undefined
  9521 000061DF 0F8443130100            	je L_error_fvar_undefined
  9522 000061E5 803804                  	cmp byte [rax], T_closure
  9523 000061E8 0F85BE130100            	jne L_error_non_closure
  9524 000061EE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9525 000061F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9526 000061F4 483D[02000000]          	cmp rax, sob_boolean_false
  9527 000061FA 0F8484020000            	je .L_if_else_001a
  9528                                  	; preparing a non-tail-call
  9529 00006200 488B4528                	mov rax, PARAM(1)	; param b
  9530 00006204 50                      	push rax
  9531 00006205 6A01                    	push 1	; arg count
  9532 00006207 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9533 0000620F 803805                  	cmp byte [rax], T_undefined
  9534 00006212 0F8410130100            	je L_error_fvar_undefined
  9535 00006218 803804                  	cmp byte [rax], T_closure
  9536 0000621B 0F858B130100            	jne L_error_non_closure
  9537 00006221 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9538 00006224 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9539 00006227 483D[02000000]          	cmp rax, sob_boolean_false
  9540 0000622D 0F8493000000            	je .L_if_else_0019
  9541                                  	; preparing a tail-call
  9542                                  	; preparing a non-tail-call
  9543 00006233 488B4528                	mov rax, PARAM(1)	; param b
  9544 00006237 50                      	push rax
  9545 00006238 6A01                    	push 1	; arg count
  9546 0000623A 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9547 00006242 803805                  	cmp byte [rax], T_undefined
  9548 00006245 0F84DD120100            	je L_error_fvar_undefined
  9549 0000624B 803804                  	cmp byte [rax], T_closure
  9550 0000624E 0F8558130100            	jne L_error_non_closure
  9551 00006254 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9552 00006257 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9553 0000625A 50                      	push rax
  9554 0000625B 488B4520                	mov rax, PARAM(0)	; param a
  9555 0000625F 50                      	push rax
  9556 00006260 6A02                    	push 2	; arg count
  9557 00006262 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9558 0000626A 803805                  	cmp byte [rax], T_undefined
  9559 0000626D 0F84B5120100            	je L_error_fvar_undefined
  9560 00006273 803804                  	cmp byte [rax], T_closure
  9561 00006276 0F8530130100            	jne L_error_non_closure
  9562 0000627C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9563 0000627F FF7508                  	push qword [rbp + 8 * 1]
  9564                                   ; old ret addr
  9565 00006282 FF7500                  	push qword [rbp]
  9566                                   ; restore the old rbp
  9567 00006285 BB02000000              	mov rbx, 2
  9568 0000628A 4883C303                	add rbx, 3
  9569 0000628E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9570 00006292 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9571 00006297 4C8D4DF8                	lea r9, [rbp - 8]
  9572 0000629B B906000000              	mov rcx, 6
  9573                                  .L_tc_recycle_frame_loop_003f:
  9574 000062A0 4883F900                	cmp rcx, 0
  9575 000062A4 7413                    	je .L_tc_recycle_frame_done_003f
  9576 000062A6 4D8B11                  	mov r10, qword [r9]
  9577 000062A9 4D8910                  	mov qword [r8], r10
  9578 000062AC 4983E808                	sub r8, 8
  9579 000062B0 4983E908                	sub r9, 8
  9580 000062B4 48FFC9                  	dec rcx
  9581 000062B7 EBE7                    	jmp .L_tc_recycle_frame_loop_003f
  9582                                  .L_tc_recycle_frame_done_003f:
  9583 000062B9 498D6008                	lea rsp, [r8 + 8]
  9584 000062BD 5D                      	pop rbp ; restore the old rbp
  9585 000062BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9586 000062C1 E9BC010000              	jmp .L_if_end_0019
  9587                                  .L_if_else_0019:
  9588                                  	; preparing a non-tail-call
  9589 000062C6 488B4528                	mov rax, PARAM(1)	; param b
  9590 000062CA 50                      	push rax
  9591 000062CB 6A01                    	push 1	; arg count
  9592 000062CD 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9593 000062D5 803805                  	cmp byte [rax], T_undefined
  9594 000062D8 0F844A120100            	je L_error_fvar_undefined
  9595 000062DE 803804                  	cmp byte [rax], T_closure
  9596 000062E1 0F85C5120100            	jne L_error_non_closure
  9597 000062E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9598 000062EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  9599 000062ED 483D[02000000]          	cmp rax, sob_boolean_false
  9600 000062F3 0F8493000000            	je .L_if_else_0018
  9601                                  	; preparing a tail-call
  9602                                  	; preparing a non-tail-call
  9603 000062F9 488B4528                	mov rax, PARAM(1)	; param b
  9604 000062FD 50                      	push rax
  9605 000062FE 6A01                    	push 1	; arg count
  9606 00006300 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9607 00006308 803805                  	cmp byte [rax], T_undefined
  9608 0000630B 0F8417120100            	je L_error_fvar_undefined
  9609 00006311 803804                  	cmp byte [rax], T_closure
  9610 00006314 0F8592120100            	jne L_error_non_closure
  9611 0000631A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9612 0000631D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9613 00006320 50                      	push rax
  9614 00006321 488B4520                	mov rax, PARAM(0)	; param a
  9615 00006325 50                      	push rax
  9616 00006326 6A02                    	push 2	; arg count
  9617 00006328 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9618 00006330 803805                  	cmp byte [rax], T_undefined
  9619 00006333 0F84EF110100            	je L_error_fvar_undefined
  9620 00006339 803804                  	cmp byte [rax], T_closure
  9621 0000633C 0F856A120100            	jne L_error_non_closure
  9622 00006342 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9623 00006345 FF7508                  	push qword [rbp + 8 * 1]
  9624                                   ; old ret addr
  9625 00006348 FF7500                  	push qword [rbp]
  9626                                   ; restore the old rbp
  9627 0000634B BB02000000              	mov rbx, 2
  9628 00006350 4883C303                	add rbx, 3
  9629 00006354 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9630 00006358 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9631 0000635D 4C8D4DF8                	lea r9, [rbp - 8]
  9632 00006361 B906000000              	mov rcx, 6
  9633                                  .L_tc_recycle_frame_loop_0040:
  9634 00006366 4883F900                	cmp rcx, 0
  9635 0000636A 7413                    	je .L_tc_recycle_frame_done_0040
  9636 0000636C 4D8B11                  	mov r10, qword [r9]
  9637 0000636F 4D8910                  	mov qword [r8], r10
  9638 00006372 4983E808                	sub r8, 8
  9639 00006376 4983E908                	sub r9, 8
  9640 0000637A 48FFC9                  	dec rcx
  9641 0000637D EBE7                    	jmp .L_tc_recycle_frame_loop_0040
  9642                                  .L_tc_recycle_frame_done_0040:
  9643 0000637F 498D6008                	lea rsp, [r8 + 8]
  9644 00006383 5D                      	pop rbp ; restore the old rbp
  9645 00006384 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9646 00006387 E9F6000000              	jmp .L_if_end_0018
  9647                                  .L_if_else_0018:
  9648                                  	; preparing a non-tail-call
  9649 0000638C 488B4528                	mov rax, PARAM(1)	; param b
  9650 00006390 50                      	push rax
  9651 00006391 6A01                    	push 1	; arg count
  9652 00006393 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9653 0000639B 803805                  	cmp byte [rax], T_undefined
  9654 0000639E 0F8484110100            	je L_error_fvar_undefined
  9655 000063A4 803804                  	cmp byte [rax], T_closure
  9656 000063A7 0F85FF110100            	jne L_error_non_closure
  9657 000063AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9658 000063B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9659 000063B3 483D[02000000]          	cmp rax, sob_boolean_false
  9660 000063B9 746D                    	je .L_if_else_0017
  9661                                  	; preparing a tail-call
  9662 000063BB 488B4528                	mov rax, PARAM(1)	; param b
  9663 000063BF 50                      	push rax
  9664 000063C0 488B4520                	mov rax, PARAM(0)	; param a
  9665 000063C4 50                      	push rax
  9666 000063C5 6A02                    	push 2	; arg count
  9667 000063C7 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9668 000063CF 803805                  	cmp byte [rax], T_undefined
  9669 000063D2 0F8450110100            	je L_error_fvar_undefined
  9670 000063D8 803804                  	cmp byte [rax], T_closure
  9671 000063DB 0F85CB110100            	jne L_error_non_closure
  9672 000063E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9673 000063E4 FF7508                  	push qword [rbp + 8 * 1]
  9674                                   ; old ret addr
  9675 000063E7 FF7500                  	push qword [rbp]
  9676                                   ; restore the old rbp
  9677 000063EA BB02000000              	mov rbx, 2
  9678 000063EF 4883C303                	add rbx, 3
  9679 000063F3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9680 000063F7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9681 000063FC 4C8D4DF8                	lea r9, [rbp - 8]
  9682 00006400 B906000000              	mov rcx, 6
  9683                                  .L_tc_recycle_frame_loop_0041:
  9684 00006405 4883F900                	cmp rcx, 0
  9685 00006409 7413                    	je .L_tc_recycle_frame_done_0041
  9686 0000640B 4D8B11                  	mov r10, qword [r9]
  9687 0000640E 4D8910                  	mov qword [r8], r10
  9688 00006411 4983E808                	sub r8, 8
  9689 00006415 4983E908                	sub r9, 8
  9690 00006419 48FFC9                  	dec rcx
  9691 0000641C EBE7                    	jmp .L_tc_recycle_frame_loop_0041
  9692                                  .L_tc_recycle_frame_done_0041:
  9693 0000641E 498D6008                	lea rsp, [r8 + 8]
  9694 00006422 5D                      	pop rbp ; restore the old rbp
  9695 00006423 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9696 00006426 EB5A                    	jmp .L_if_end_0017
  9697                                  .L_if_else_0017:
  9698                                  	; preparing a tail-call
  9699 00006428 6A00                    	push 0	; arg count
  9700 0000642A 488B4510                	mov rax, ENV
  9701 0000642E 488B00                  	mov rax, qword [rax + 8 * 0]
  9702 00006431 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9703 00006434 803804                  	cmp byte [rax], T_closure
  9704 00006437 0F856F110100            	jne L_error_non_closure
  9705 0000643D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9706 00006440 FF7508                  	push qword [rbp + 8 * 1]
  9707                                   ; old ret addr
  9708 00006443 FF7500                  	push qword [rbp]
  9709                                   ; restore the old rbp
  9710 00006446 BB00000000              	mov rbx, 0
  9711 0000644B 4883C303                	add rbx, 3
  9712 0000644F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9713 00006453 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9714 00006458 4C8D4DF8                	lea r9, [rbp - 8]
  9715 0000645C B904000000              	mov rcx, 4
  9716                                  .L_tc_recycle_frame_loop_0042:
  9717 00006461 4883F900                	cmp rcx, 0
  9718 00006465 7413                    	je .L_tc_recycle_frame_done_0042
  9719 00006467 4D8B11                  	mov r10, qword [r9]
  9720 0000646A 4D8910                  	mov qword [r8], r10
  9721 0000646D 4983E808                	sub r8, 8
  9722 00006471 4983E908                	sub r9, 8
  9723 00006475 48FFC9                  	dec rcx
  9724 00006478 EBE7                    	jmp .L_tc_recycle_frame_loop_0042
  9725                                  .L_tc_recycle_frame_done_0042:
  9726 0000647A 498D6008                	lea rsp, [r8 + 8]
  9727 0000647E 5D                      	pop rbp ; restore the old rbp
  9728 0000647F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9729                                  .L_if_end_0017:
  9730                                  .L_if_end_0018:
  9731                                  .L_if_end_0019:
  9732 00006482 EB5A                    	jmp .L_if_end_001a
  9733                                  .L_if_else_001a:
  9734                                  	; preparing a tail-call
  9735 00006484 6A00                    	push 0	; arg count
  9736 00006486 488B4510                	mov rax, ENV
  9737 0000648A 488B00                  	mov rax, qword [rax + 8 * 0]
  9738 0000648D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9739 00006490 803804                  	cmp byte [rax], T_closure
  9740 00006493 0F8513110100            	jne L_error_non_closure
  9741 00006499 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9742 0000649C FF7508                  	push qword [rbp + 8 * 1]
  9743                                   ; old ret addr
  9744 0000649F FF7500                  	push qword [rbp]
  9745                                   ; restore the old rbp
  9746 000064A2 BB00000000              	mov rbx, 0
  9747 000064A7 4883C303                	add rbx, 3
  9748 000064AB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9749 000064AF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9750 000064B4 4C8D4DF8                	lea r9, [rbp - 8]
  9751 000064B8 B904000000              	mov rcx, 4
  9752                                  .L_tc_recycle_frame_loop_0043:
  9753 000064BD 4883F900                	cmp rcx, 0
  9754 000064C1 7413                    	je .L_tc_recycle_frame_done_0043
  9755 000064C3 4D8B11                  	mov r10, qword [r9]
  9756 000064C6 4D8910                  	mov qword [r8], r10
  9757 000064C9 4983E808                	sub r8, 8
  9758 000064CD 4983E908                	sub r9, 8
  9759 000064D1 48FFC9                  	dec rcx
  9760 000064D4 EBE7                    	jmp .L_tc_recycle_frame_loop_0043
  9761                                  .L_tc_recycle_frame_done_0043:
  9762 000064D6 498D6008                	lea rsp, [r8 + 8]
  9763 000064DA 5D                      	pop rbp ; restore the old rbp
  9764 000064DB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9765                                  .L_if_end_001a:
  9766                                  .L_if_end_001b:
  9767                                  .L_if_end_001c:
  9768 000064DE C9                      	leave
  9769 000064DF C22000                  	ret AND_KILL_FRAME(2)
  9770                                  .L_lambda_simple_end_0036:	; new closure is in rax
  9771 000064E2 50                      	push rax
  9772 000064E3 6A01                    	push 1	; arg count
  9773 000064E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9774 000064EA E866110100              	call malloc
  9775 000064EF 50                      	push rax
  9776 000064F0 BF08000000              	mov rdi, 8 * 1	; new rib
  9777 000064F5 E85B110100              	call malloc
  9778 000064FA 50                      	push rax
  9779 000064FB BF10000000              	mov rdi, 8 * 2	; extended env
  9780 00006500 E850110100              	call malloc
  9781 00006505 488B7D10                	mov rdi, ENV
  9782 00006509 BE00000000              	mov rsi, 0
  9783 0000650E BA01000000              	mov rdx, 1
  9784                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9785 00006513 4883FE01                	cmp rsi, 1
  9786 00006517 7410                    	je .L_lambda_simple_env_end_0037
  9787 00006519 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9788 0000651D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9789 00006521 48FFC6                  	inc rsi
  9790 00006524 48FFC2                  	inc rdx
  9791 00006527 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9792                                  .L_lambda_simple_env_end_0037:
  9793 00006529 5B                      	pop rbx
  9794 0000652A BE00000000              	mov rsi, 0
  9795                                  .L_lambda_simple_params_loop_0037:	; copy params
  9796 0000652F 4883FE01                	cmp rsi, 1
  9797 00006533 740E                    	je .L_lambda_simple_params_end_0037
  9798 00006535 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9799 0000653A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9800 0000653E 48FFC6                  	inc rsi
  9801 00006541 EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9802                                  .L_lambda_simple_params_end_0037:
  9803 00006543 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9804 00006546 4889C3                  	mov rbx, rax
  9805 00006549 58                      	pop rax
  9806 0000654A C60004                  	mov byte [rax], T_closure
  9807 0000654D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9808 00006551 48C74009[5E650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9809 00006559 E907020000              	jmp .L_lambda_simple_end_0037
  9810                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9811 0000655E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9812 00006564 740B                    	je .L_lambda_simple_arity_check_ok_0037
  9813 00006566 FF742410                	push qword [rsp + 8 * 2]
  9814 0000656A 6A01                    	push 1
  9815 0000656C E99D100100              	jmp L_error_incorrect_arity_simple
  9816                                  .L_lambda_simple_arity_check_ok_0037:
  9817 00006571 C8000000                	enter 0, 0
  9818 00006575 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9819 0000657A E8D6100100              	call malloc
  9820 0000657F 50                      	push rax
  9821 00006580 BF08000000              	mov rdi, 8 * 1	; new rib
  9822 00006585 E8CB100100              	call malloc
  9823 0000658A 50                      	push rax
  9824 0000658B BF18000000              	mov rdi, 8 * 3	; extended env
  9825 00006590 E8C0100100              	call malloc
  9826 00006595 488B7D10                	mov rdi, ENV
  9827 00006599 4831F6                  	 xor rsi, rsi
  9828 0000659C 4831D2                  	 xor rdx, rdx
  9829 0000659F 48FFC2                  	inc rdx
  9830                                  .L_lambda_opt_env_loop_000a:	; 
  9831 000065A2 4883FE02                	cmp rsi, 2
  9832 000065A6 7410                    	je .L_lambda_opt_env_end_000a
  9833 000065A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9834 000065AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9835 000065B0 48FFC6                  	inc rsi
  9836 000065B3 48FFC2                  	inc rdx
  9837 000065B6 EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9838                                  .L_lambda_opt_env_end_000a:
  9839 000065B8 5B                      	pop rbx
  9840 000065B9 4831F6                  	xor rsi, rsi
  9841                                  .L_lambda_opt_params_loop_000a:	; copy params
  9842 000065BC 4883FE01                	cmp rsi, 1
  9843 000065C0 740E                    	je .L_lambda_opt_params_end_000a
  9844 000065C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9845 000065C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9846 000065CB 48FFC6                  	inc rsi
  9847 000065CE EBEC                    	jmp .L_lambda_opt_params_loop_000a
  9848                                  .L_lambda_opt_params_end_000a:
  9849 000065D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9850 000065D3 4889C3                  	mov rbx, rax
  9851 000065D6 58                      	pop rax
  9852 000065D7 C60004                  	mov byte [rax], T_closure
  9853 000065DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9854 000065DE 48C74009[EB650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9855 000065E6 E976010000              	jmp .L_lambda_opt_end_000a
  9856                                  .L_lambda_opt_code_000a:
  9857 000065EB 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
  9858 000065F0 4983FF00                	cmp r15, 0
  9859 000065F4 7409                    	je .L_lambda_opt_arity_check_exact_000a
  9860 000065F6 7F57                    	jg .L_lambda_opt_arity_check_more_000a
  9861 000065F8 6A00                    	push 0
  9862 000065FA E923100100              	jmp L_error_incorrect_arity_opt
  9863                                  .L_lambda_opt_arity_check_exact_000a: ;Exact case
  9864 000065FF 4C8B0424                	mov r8, qword [rsp -8 * 0]
  9865 00006603 4C894424F8              	mov qword [rsp -8], r8
  9866 00006608 4C8B442408              	mov r8, qword [rsp +8]
  9867 0000660D 4C890424                	mov qword [rsp +8 * 0], r8
  9868 00006611 4C8B442410              	mov r8, qword [rsp +8 * 2]
  9869 00006616 4C89C1                  	mov rcx, r8
  9870 00006619 49FFC0                  	inc r8
  9871 0000661C 4C89442408              	mov qword [rsp +8], r8
  9872 00006621 4889E2                  	mov rdx, rsp
  9873 00006624 4883C218                	add rdx, 24
  9874                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000a:
  9875 00006628 4883F900                	cmp rcx, 0
  9876 0000662C 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000a
  9877 0000662E 4C8B02                  	mov r8, qword [rdx]
  9878 00006631 4C8942F8                	mov qword [rdx - 8], r8
  9879 00006635 4883C208                	add rdx, 8
  9880 00006639 48FFC9                  	dec rcx
  9881 0000663C EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000a
  9882                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000a:
  9883 0000663E 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
  9884 00006646 4883EC08                	sub rsp, 8
  9885 0000664A E985000000              	jmp .L_lambda_opt_stack_adjusted_000a
  9886                                  .L_lambda_opt_arity_check_more_000a:
  9887 0000664F 4C8B442410              	mov r8, qword [rsp + 8 * 2]
  9888 00006654 4D89C4                  	mov r12, r8
  9889 00006657 4C89C1                  	mov rcx, r8
  9890 0000665A 4D8D6802                	lea r13, [r8 + 2] 
  9891 0000665E 4883E900                	sub rcx, 0
  9892 00006662 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
  9893 00006667 49BE-                   	mov r14, sob_nil
  9893 00006669 [0100000000000000] 
  9894                                  .L_lambda_opt_create_list_of_opt_params_000a:
  9895 00006671 4883F900                	cmp rcx, 0
  9896 00006675 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000a
  9897 00006677 BF11000000              	mov rdi, 17
  9898 0000667C E8D40F0100              	call malloc
  9899 00006681 C60021                  	mov byte [rax], T_pair
  9900 00006684 498B1B                  	mov rbx, qword [r11]
  9901 00006687 48895801                	mov qword [rax +1], rbx
  9902 0000668B 4C897009                	mov qword [rax + 1 + 8], r14
  9903 0000668F 4989C6                  	mov r14, rax
  9904 00006692 48FFC9                  	dec rcx
  9905 00006695 4983EB08                	sub r11, 8
  9906 00006699 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000a
  9907                                  .L_lambda_opt_create_list_of_opt_params_end_000a:
  9908 0000669B 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
  9909 000066A0 4D8932                  	mov qword [r10], r14
  9910 000066A3 4E8D2CED00000000        	lea r13, [8 * r13]
  9911 000066AB 4901E5                  	add r13, rsp
  9912 000066AE B904000000              	mov rcx, 4 + 0
  9913                                  .L_lambda_opt_stack_shrink_loop_000a:
  9914 000066B3 4883F900                	cmp rcx, 0
  9915 000066B7 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_000a
  9916 000066B9 4D8B1A                  	mov r11, qword [r10]
  9917 000066BC 4D895D00                	mov qword [r13], r11
  9918 000066C0 4983EA08                	sub r10, 8
  9919 000066C4 4983ED08                	sub r13, 8
  9920 000066C8 48FFC9                  	dec rcx
  9921 000066CB EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_000a
  9922                                  .L_lambda_opt_stack_shrink_loop_exit_000a:
  9923 000066CD 4983C508                	add r13, 8
  9924 000066D1 4C89EC                  	mov rsp, r13
  9925                                  .L_lambda_opt_stack_adjusted_000a:
  9926 000066D4 48C744241001000000      	mov qword [rsp + 8*2], 1
  9927 000066DD C8000000                	enter 0, 0
  9928                                  	; preparing a tail-call
  9929 000066E1 488B4520                	mov rax, PARAM(0)	; param s
  9930 000066E5 50                      	push rax
  9931 000066E6 48B8-                   	mov rax, L_constants + 2135
  9931 000066E8 [5708000000000000] 
  9932 000066F0 50                      	push rax
  9933 000066F1 488B4510                	mov rax, ENV
  9934 000066F5 488B00                  	mov rax, qword [rax + 8 * 0]
  9935 000066F8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9936 000066FB 50                      	push rax
  9937 000066FC 6A03                    	push 3	; arg count
  9938 000066FE 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9939 00006706 803805                  	cmp byte [rax], T_undefined
  9940 00006709 0F84190E0100            	je L_error_fvar_undefined
  9941 0000670F 803804                  	cmp byte [rax], T_closure
  9942 00006712 0F85940E0100            	jne L_error_non_closure
  9943 00006718 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9944 0000671B FF7508                  	push qword [rbp + 8 * 1]
  9945                                   ; old ret addr
  9946 0000671E FF7500                  	push qword [rbp]
  9947                                   ; restore the old rbp
  9948 00006721 BB03000000              	mov rbx, 3
  9949 00006726 4883C303                	add rbx, 3
  9950 0000672A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9951 0000672E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9952 00006733 4C8D4DF8                	lea r9, [rbp - 8]
  9953 00006737 B907000000              	mov rcx, 7
  9954                                  .L_tc_recycle_frame_loop_0044:
  9955 0000673C 4883F900                	cmp rcx, 0
  9956 00006740 7413                    	je .L_tc_recycle_frame_done_0044
  9957 00006742 4D8B11                  	mov r10, qword [r9]
  9958 00006745 4D8910                  	mov qword [r8], r10
  9959 00006748 4983E808                	sub r8, 8
  9960 0000674C 4983E908                	sub r9, 8
  9961 00006750 48FFC9                  	dec rcx
  9962 00006753 EBE7                    	jmp .L_tc_recycle_frame_loop_0044
  9963                                  .L_tc_recycle_frame_done_0044:
  9964 00006755 498D6008                	lea rsp, [r8 + 8]
  9965 00006759 5D                      	pop rbp ; restore the old rbp
  9966 0000675A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9967 0000675D C9                      	leave
  9968 0000675E C21800                  	ret 8 * (2 + 1)
  9969                                  .L_lambda_opt_end_000a:	; new closure is in rax
  9970 00006761 C9                      	leave
  9971 00006762 C21800                  	ret AND_KILL_FRAME(1)
  9972                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9973 00006765 803804                  	cmp byte [rax], T_closure
  9974 00006768 0F853E0E0100            	jne L_error_non_closure
  9975 0000676E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9976 00006771 FF7508                  	push qword [rbp + 8 * 1]
  9977                                   ; old ret addr
  9978 00006774 FF7500                  	push qword [rbp]
  9979                                   ; restore the old rbp
  9980 00006777 BB01000000              	mov rbx, 1
  9981 0000677C 4883C303                	add rbx, 3
  9982 00006780 4C8B4518                	mov r8, qword [rbp + 8 * 3]
  9983 00006784 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
  9984 00006789 4C8D4DF8                	lea r9, [rbp - 8]
  9985 0000678D B905000000              	mov rcx, 5
  9986                                  .L_tc_recycle_frame_loop_0036:
  9987 00006792 4883F900                	cmp rcx, 0
  9988 00006796 7413                    	je .L_tc_recycle_frame_done_0036
  9989 00006798 4D8B11                  	mov r10, qword [r9]
  9990 0000679B 4D8910                  	mov qword [r8], r10
  9991 0000679E 4983E808                	sub r8, 8
  9992 000067A2 4983E908                	sub r9, 8
  9993 000067A6 48FFC9                  	dec rcx
  9994 000067A9 EBE7                    	jmp .L_tc_recycle_frame_loop_0036
  9995                                  .L_tc_recycle_frame_done_0036:
  9996 000067AB 498D6008                	lea rsp, [r8 + 8]
  9997 000067AF 5D                      	pop rbp ; restore the old rbp
  9998 000067B0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9999 000067B3 C9                      	leave
 10000 000067B4 C21800                  	ret AND_KILL_FRAME(1)
 10001                                  .L_lambda_simple_end_0035:	; new closure is in rax
 10002 000067B7 803804                  	cmp byte [rax], T_closure
 10003 000067BA 0F85EC0D0100            	jne L_error_non_closure
 10004 000067C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10005 000067C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10006 000067C6 48890425[D60D0000]      	mov qword [free_var_1], rax
 10007 000067CE 48B8-                   	mov rax, sob_void
 10007 000067D0 [0000000000000000] 
 10008                                  
 10009 000067D8 4889C7                  	mov rdi, rax
 10010 000067DB E8CA100100              	call print_sexpr_if_not_void
 10011                                  	; preparing a non-tail-call
 10012 000067E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10013 000067E5 E86B0E0100              	call malloc
 10014 000067EA 50                      	push rax
 10015 000067EB BF00000000              	mov rdi, 8 * 0	; new rib
 10016 000067F0 E8600E0100              	call malloc
 10017 000067F5 50                      	push rax
 10018 000067F6 BF08000000              	mov rdi, 8 * 1	; extended env
 10019 000067FB E8550E0100              	call malloc
 10020 00006800 488B7D10                	mov rdi, ENV
 10021 00006804 BE00000000              	mov rsi, 0
 10022 00006809 BA01000000              	mov rdx, 1
 10023                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
 10024 0000680E 4883FE00                	cmp rsi, 0
 10025 00006812 7410                    	je .L_lambda_simple_env_end_0038
 10026 00006814 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10027 00006818 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10028 0000681C 48FFC6                  	inc rsi
 10029 0000681F 48FFC2                  	inc rdx
 10030 00006822 EBEA                    	jmp .L_lambda_simple_env_loop_0038
 10031                                  .L_lambda_simple_env_end_0038:
 10032 00006824 5B                      	pop rbx
 10033 00006825 BE00000000              	mov rsi, 0
 10034                                  .L_lambda_simple_params_loop_0038:	; copy params
 10035 0000682A 4883FE00                	cmp rsi, 0
 10036 0000682E 740E                    	je .L_lambda_simple_params_end_0038
 10037 00006830 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10038 00006835 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10039 00006839 48FFC6                  	inc rsi
 10040 0000683C EBEC                    	jmp .L_lambda_simple_params_loop_0038
 10041                                  .L_lambda_simple_params_end_0038:
 10042 0000683E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10043 00006841 4889C3                  	mov rbx, rax
 10044 00006844 58                      	pop rax
 10045 00006845 C60004                  	mov byte [rax], T_closure
 10046 00006848 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10047 0000684C 48C74009[59680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
 10048 00006854 E992000000              	jmp .L_lambda_simple_end_0038
 10049                                  .L_lambda_simple_code_0038:	; lambda-simple body
 10050 00006859 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10051 0000685F 740B                    	je .L_lambda_simple_arity_check_ok_0038
 10052 00006861 FF742410                	push qword [rsp + 8 * 2]
 10053 00006865 6A00                    	push 0
 10054 00006867 E9A20D0100              	jmp L_error_incorrect_arity_simple
 10055                                  .L_lambda_simple_arity_check_ok_0038:
 10056 0000686C C8000000                	enter 0, 0
 10057                                  	; preparing a tail-call
 10058 00006870 48B8-                   	mov rax, L_constants + 2187
 10058 00006872 [8B08000000000000] 
 10059 0000687A 50                      	push rax
 10060 0000687B 48B8-                   	mov rax, L_constants + 2251
 10060 0000687D [CB08000000000000] 
 10061 00006885 50                      	push rax
 10062 00006886 6A02                    	push 2	; arg count
 10063 00006888 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 10064 00006890 803805                  	cmp byte [rax], T_undefined
 10065 00006893 0F848F0C0100            	je L_error_fvar_undefined
 10066 00006899 803804                  	cmp byte [rax], T_closure
 10067 0000689C 0F850A0D0100            	jne L_error_non_closure
 10068 000068A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10069 000068A5 FF7508                  	push qword [rbp + 8 * 1]
 10070                                   ; old ret addr
 10071 000068A8 FF7500                  	push qword [rbp]
 10072                                   ; restore the old rbp
 10073 000068AB BB02000000              	mov rbx, 2
 10074 000068B0 4883C303                	add rbx, 3
 10075 000068B4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10076 000068B8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10077 000068BD 4C8D4DF8                	lea r9, [rbp - 8]
 10078 000068C1 B906000000              	mov rcx, 6
 10079                                  .L_tc_recycle_frame_loop_0045:
 10080 000068C6 4883F900                	cmp rcx, 0
 10081 000068CA 7413                    	je .L_tc_recycle_frame_done_0045
 10082 000068CC 4D8B11                  	mov r10, qword [r9]
 10083 000068CF 4D8910                  	mov qword [r8], r10
 10084 000068D2 4983E808                	sub r8, 8
 10085 000068D6 4983E908                	sub r9, 8
 10086 000068DA 48FFC9                  	dec rcx
 10087 000068DD EBE7                    	jmp .L_tc_recycle_frame_loop_0045
 10088                                  .L_tc_recycle_frame_done_0045:
 10089 000068DF 498D6008                	lea rsp, [r8 + 8]
 10090 000068E3 5D                      	pop rbp ; restore the old rbp
 10091 000068E4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10092 000068E7 C9                      	leave
 10093 000068E8 C21000                  	ret AND_KILL_FRAME(0)
 10094                                  .L_lambda_simple_end_0038:	; new closure is in rax
 10095 000068EB 50                      	push rax
 10096 000068EC 6A01                    	push 1	; arg count
 10097 000068EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10098 000068F3 E85D0D0100              	call malloc
 10099 000068F8 50                      	push rax
 10100 000068F9 BF00000000              	mov rdi, 8 * 0	; new rib
 10101 000068FE E8520D0100              	call malloc
 10102 00006903 50                      	push rax
 10103 00006904 BF08000000              	mov rdi, 8 * 1	; extended env
 10104 00006909 E8470D0100              	call malloc
 10105 0000690E 488B7D10                	mov rdi, ENV
 10106 00006912 BE00000000              	mov rsi, 0
 10107 00006917 BA01000000              	mov rdx, 1
 10108                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
 10109 0000691C 4883FE00                	cmp rsi, 0
 10110 00006920 7410                    	je .L_lambda_simple_env_end_0039
 10111 00006922 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10112 00006926 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10113 0000692A 48FFC6                  	inc rsi
 10114 0000692D 48FFC2                  	inc rdx
 10115 00006930 EBEA                    	jmp .L_lambda_simple_env_loop_0039
 10116                                  .L_lambda_simple_env_end_0039:
 10117 00006932 5B                      	pop rbx
 10118 00006933 BE00000000              	mov rsi, 0
 10119                                  .L_lambda_simple_params_loop_0039:	; copy params
 10120 00006938 4883FE00                	cmp rsi, 0
 10121 0000693C 740E                    	je .L_lambda_simple_params_end_0039
 10122 0000693E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10123 00006943 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10124 00006947 48FFC6                  	inc rsi
 10125 0000694A EBEC                    	jmp .L_lambda_simple_params_loop_0039
 10126                                  .L_lambda_simple_params_end_0039:
 10127 0000694C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10128 0000694F 4889C3                  	mov rbx, rax
 10129 00006952 58                      	pop rax
 10130 00006953 C60004                  	mov byte [rax], T_closure
 10131 00006956 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10132 0000695A 48C74009[67690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
 10133 00006962 E9BB0D0000              	jmp .L_lambda_simple_end_0039
 10134                                  .L_lambda_simple_code_0039:	; lambda-simple body
 10135 00006967 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10136 0000696D 740B                    	je .L_lambda_simple_arity_check_ok_0039
 10137 0000696F FF742410                	push qword [rsp + 8 * 2]
 10138 00006973 6A01                    	push 1
 10139 00006975 E9940C0100              	jmp L_error_incorrect_arity_simple
 10140                                  .L_lambda_simple_arity_check_ok_0039:
 10141 0000697A C8000000                	enter 0, 0
 10142                                  	; preparing a tail-call
 10143 0000697E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10144 00006983 E8CD0C0100              	call malloc
 10145 00006988 50                      	push rax
 10146 00006989 BF08000000              	mov rdi, 8 * 1	; new rib
 10147 0000698E E8C20C0100              	call malloc
 10148 00006993 50                      	push rax
 10149 00006994 BF10000000              	mov rdi, 8 * 2	; extended env
 10150 00006999 E8B70C0100              	call malloc
 10151 0000699E 488B7D10                	mov rdi, ENV
 10152 000069A2 BE00000000              	mov rsi, 0
 10153 000069A7 BA01000000              	mov rdx, 1
 10154                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
 10155 000069AC 4883FE01                	cmp rsi, 1
 10156 000069B0 7410                    	je .L_lambda_simple_env_end_003a
 10157 000069B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10158 000069B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10159 000069BA 48FFC6                  	inc rsi
 10160 000069BD 48FFC2                  	inc rdx
 10161 000069C0 EBEA                    	jmp .L_lambda_simple_env_loop_003a
 10162                                  .L_lambda_simple_env_end_003a:
 10163 000069C2 5B                      	pop rbx
 10164 000069C3 BE00000000              	mov rsi, 0
 10165                                  .L_lambda_simple_params_loop_003a:	; copy params
 10166 000069C8 4883FE01                	cmp rsi, 1
 10167 000069CC 740E                    	je .L_lambda_simple_params_end_003a
 10168 000069CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10169 000069D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10170 000069D7 48FFC6                  	inc rsi
 10171 000069DA EBEC                    	jmp .L_lambda_simple_params_loop_003a
 10172                                  .L_lambda_simple_params_end_003a:
 10173 000069DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10174 000069DF 4889C3                  	mov rbx, rax
 10175 000069E2 58                      	pop rax
 10176 000069E3 C60004                  	mov byte [rax], T_closure
 10177 000069E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10178 000069EA 48C74009[F7690000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
 10179 000069F2 E9A0080000              	jmp .L_lambda_simple_end_003a
 10180                                  .L_lambda_simple_code_003a:	; lambda-simple body
 10181 000069F7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10182 000069FD 740B                    	je .L_lambda_simple_arity_check_ok_003a
 10183 000069FF FF742410                	push qword [rsp + 8 * 2]
 10184 00006A03 6A02                    	push 2
 10185 00006A05 E9040C0100              	jmp L_error_incorrect_arity_simple
 10186                                  .L_lambda_simple_arity_check_ok_003a:
 10187 00006A0A C8000000                	enter 0, 0
 10188                                  	; preparing a non-tail-call
 10189 00006A0E 488B4520                	mov rax, PARAM(0)	; param a
 10190 00006A12 50                      	push rax
 10191 00006A13 6A01                    	push 1	; arg count
 10192 00006A15 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10193 00006A1D 803805                  	cmp byte [rax], T_undefined
 10194 00006A20 0F84020B0100            	je L_error_fvar_undefined
 10195 00006A26 803804                  	cmp byte [rax], T_closure
 10196 00006A29 0F857D0B0100            	jne L_error_non_closure
 10197 00006A2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10198 00006A32 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10199 00006A35 483D[02000000]          	cmp rax, sob_boolean_false
 10200 00006A3B 0F8487020000            	je .L_if_else_0028
 10201                                  	; preparing a non-tail-call
 10202 00006A41 488B4528                	mov rax, PARAM(1)	; param b
 10203 00006A45 50                      	push rax
 10204 00006A46 6A01                    	push 1	; arg count
 10205 00006A48 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10206 00006A50 803805                  	cmp byte [rax], T_undefined
 10207 00006A53 0F84CF0A0100            	je L_error_fvar_undefined
 10208 00006A59 803804                  	cmp byte [rax], T_closure
 10209 00006A5C 0F854A0B0100            	jne L_error_non_closure
 10210 00006A62 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10211 00006A65 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10212 00006A68 483D[02000000]          	cmp rax, sob_boolean_false
 10213 00006A6E 7470                    	je .L_if_else_001f
 10214                                  	; preparing a tail-call
 10215 00006A70 488B4528                	mov rax, PARAM(1)	; param b
 10216 00006A74 50                      	push rax
 10217 00006A75 488B4520                	mov rax, PARAM(0)	; param a
 10218 00006A79 50                      	push rax
 10219 00006A7A 6A02                    	push 2	; arg count
 10220 00006A7C 488B0425[900F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10221 00006A84 803805                  	cmp byte [rax], T_undefined
 10222 00006A87 0F849B0A0100            	je L_error_fvar_undefined
 10223 00006A8D 803804                  	cmp byte [rax], T_closure
 10224 00006A90 0F85160B0100            	jne L_error_non_closure
 10225 00006A96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10226 00006A99 FF7508                  	push qword [rbp + 8 * 1]
 10227                                   ; old ret addr
 10228 00006A9C FF7500                  	push qword [rbp]
 10229                                   ; restore the old rbp
 10230 00006A9F BB02000000              	mov rbx, 2
 10231 00006AA4 4883C303                	add rbx, 3
 10232 00006AA8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10233 00006AAC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10234 00006AB1 4C8D4DF8                	lea r9, [rbp - 8]
 10235 00006AB5 B906000000              	mov rcx, 6
 10236                                  .L_tc_recycle_frame_loop_0047:
 10237 00006ABA 4883F900                	cmp rcx, 0
 10238 00006ABE 7413                    	je .L_tc_recycle_frame_done_0047
 10239 00006AC0 4D8B11                  	mov r10, qword [r9]
 10240 00006AC3 4D8910                  	mov qword [r8], r10
 10241 00006AC6 4983E808                	sub r8, 8
 10242 00006ACA 4983E908                	sub r9, 8
 10243 00006ACE 48FFC9                  	dec rcx
 10244 00006AD1 EBE7                    	jmp .L_tc_recycle_frame_loop_0047
 10245                                  .L_tc_recycle_frame_done_0047:
 10246 00006AD3 498D6008                	lea rsp, [r8 + 8]
 10247 00006AD7 5D                      	pop rbp ; restore the old rbp
 10248 00006AD8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10249 00006ADB E9E3010000              	jmp .L_if_end_001f
 10250                                  .L_if_else_001f:
 10251                                  	; preparing a non-tail-call
 10252 00006AE0 488B4528                	mov rax, PARAM(1)	; param b
 10253 00006AE4 50                      	push rax
 10254 00006AE5 6A01                    	push 1	; arg count
 10255 00006AE7 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10256 00006AEF 803805                  	cmp byte [rax], T_undefined
 10257 00006AF2 0F84300A0100            	je L_error_fvar_undefined
 10258 00006AF8 803804                  	cmp byte [rax], T_closure
 10259 00006AFB 0F85AB0A0100            	jne L_error_non_closure
 10260 00006B01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10261 00006B04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10262 00006B07 483D[02000000]          	cmp rax, sob_boolean_false
 10263 00006B0D 0F8493000000            	je .L_if_else_001e
 10264                                  	; preparing a tail-call
 10265 00006B13 488B4528                	mov rax, PARAM(1)	; param b
 10266 00006B17 50                      	push rax
 10267                                  	; preparing a non-tail-call
 10268 00006B18 488B4520                	mov rax, PARAM(0)	; param a
 10269 00006B1C 50                      	push rax
 10270 00006B1D 6A01                    	push 1	; arg count
 10271 00006B1F 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10272 00006B27 803805                  	cmp byte [rax], T_undefined
 10273 00006B2A 0F84F8090100            	je L_error_fvar_undefined
 10274 00006B30 803804                  	cmp byte [rax], T_closure
 10275 00006B33 0F85730A0100            	jne L_error_non_closure
 10276 00006B39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10277 00006B3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10278 00006B3F 50                      	push rax
 10279 00006B40 6A02                    	push 2	; arg count
 10280 00006B42 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10281 00006B4A 803805                  	cmp byte [rax], T_undefined
 10282 00006B4D 0F84D5090100            	je L_error_fvar_undefined
 10283 00006B53 803804                  	cmp byte [rax], T_closure
 10284 00006B56 0F85500A0100            	jne L_error_non_closure
 10285 00006B5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10286 00006B5F FF7508                  	push qword [rbp + 8 * 1]
 10287                                   ; old ret addr
 10288 00006B62 FF7500                  	push qword [rbp]
 10289                                   ; restore the old rbp
 10290 00006B65 BB02000000              	mov rbx, 2
 10291 00006B6A 4883C303                	add rbx, 3
 10292 00006B6E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10293 00006B72 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10294 00006B77 4C8D4DF8                	lea r9, [rbp - 8]
 10295 00006B7B B906000000              	mov rcx, 6
 10296                                  .L_tc_recycle_frame_loop_0048:
 10297 00006B80 4883F900                	cmp rcx, 0
 10298 00006B84 7413                    	je .L_tc_recycle_frame_done_0048
 10299 00006B86 4D8B11                  	mov r10, qword [r9]
 10300 00006B89 4D8910                  	mov qword [r8], r10
 10301 00006B8C 4983E808                	sub r8, 8
 10302 00006B90 4983E908                	sub r9, 8
 10303 00006B94 48FFC9                  	dec rcx
 10304 00006B97 EBE7                    	jmp .L_tc_recycle_frame_loop_0048
 10305                                  .L_tc_recycle_frame_done_0048:
 10306 00006B99 498D6008                	lea rsp, [r8 + 8]
 10307 00006B9D 5D                      	pop rbp ; restore the old rbp
 10308 00006B9E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10309 00006BA1 E91D010000              	jmp .L_if_end_001e
 10310                                  .L_if_else_001e:
 10311                                  	; preparing a non-tail-call
 10312 00006BA6 488B4528                	mov rax, PARAM(1)	; param b
 10313 00006BAA 50                      	push rax
 10314 00006BAB 6A01                    	push 1	; arg count
 10315 00006BAD 488B0425[68150000]      	mov rax, qword [free_var_115]	; free var real
 10316 00006BB5 803805                  	cmp byte [rax], T_undefined
 10317 00006BB8 0F846A090100            	je L_error_fvar_undefined
 10318 00006BBE 803804                  	cmp byte [rax], T_closure
 10319 00006BC1 0F85E5090100            	jne L_error_non_closure
 10320 00006BC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10321 00006BCA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10322 00006BCD 483D[02000000]          	cmp rax, sob_boolean_false
 10323 00006BD3 0F8490000000            	je .L_if_else_001d
 10324                                  	; preparing a tail-call
 10325 00006BD9 488B4528                	mov rax, PARAM(1)	; param b
 10326 00006BDD 50                      	push rax
 10327                                  	; preparing a non-tail-call
 10328 00006BDE 488B4520                	mov rax, PARAM(0)	; param a
 10329 00006BE2 50                      	push rax
 10330 00006BE3 6A01                    	push 1	; arg count
 10331 00006BE5 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10332 00006BED 803805                  	cmp byte [rax], T_undefined
 10333 00006BF0 0F8432090100            	je L_error_fvar_undefined
 10334 00006BF6 803804                  	cmp byte [rax], T_closure
 10335 00006BF9 0F85AD090100            	jne L_error_non_closure
 10336 00006BFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10337 00006C02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10338 00006C05 50                      	push rax
 10339 00006C06 6A02                    	push 2	; arg count
 10340 00006C08 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10341 00006C10 803805                  	cmp byte [rax], T_undefined
 10342 00006C13 0F840F090100            	je L_error_fvar_undefined
 10343 00006C19 803804                  	cmp byte [rax], T_closure
 10344 00006C1C 0F858A090100            	jne L_error_non_closure
 10345 00006C22 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10346 00006C25 FF7508                  	push qword [rbp + 8 * 1]
 10347                                   ; old ret addr
 10348 00006C28 FF7500                  	push qword [rbp]
 10349                                   ; restore the old rbp
 10350 00006C2B BB02000000              	mov rbx, 2
 10351 00006C30 4883C303                	add rbx, 3
 10352 00006C34 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10353 00006C38 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10354 00006C3D 4C8D4DF8                	lea r9, [rbp - 8]
 10355 00006C41 B906000000              	mov rcx, 6
 10356                                  .L_tc_recycle_frame_loop_0049:
 10357 00006C46 4883F900                	cmp rcx, 0
 10358 00006C4A 7413                    	je .L_tc_recycle_frame_done_0049
 10359 00006C4C 4D8B11                  	mov r10, qword [r9]
 10360 00006C4F 4D8910                  	mov qword [r8], r10
 10361 00006C52 4983E808                	sub r8, 8
 10362 00006C56 4983E908                	sub r9, 8
 10363 00006C5A 48FFC9                  	dec rcx
 10364 00006C5D EBE7                    	jmp .L_tc_recycle_frame_loop_0049
 10365                                  .L_tc_recycle_frame_done_0049:
 10366 00006C5F 498D6008                	lea rsp, [r8 + 8]
 10367 00006C63 5D                      	pop rbp ; restore the old rbp
 10368 00006C64 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10369 00006C67 EB5A                    	jmp .L_if_end_001d
 10370                                  .L_if_else_001d:
 10371                                  	; preparing a tail-call
 10372 00006C69 6A00                    	push 0	; arg count
 10373 00006C6B 488B4510                	mov rax, ENV
 10374 00006C6F 488B00                  	mov rax, qword [rax + 8 * 0]
 10375 00006C72 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10376 00006C75 803804                  	cmp byte [rax], T_closure
 10377 00006C78 0F852E090100            	jne L_error_non_closure
 10378 00006C7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10379 00006C81 FF7508                  	push qword [rbp + 8 * 1]
 10380                                   ; old ret addr
 10381 00006C84 FF7500                  	push qword [rbp]
 10382                                   ; restore the old rbp
 10383 00006C87 BB00000000              	mov rbx, 0
 10384 00006C8C 4883C303                	add rbx, 3
 10385 00006C90 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10386 00006C94 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10387 00006C99 4C8D4DF8                	lea r9, [rbp - 8]
 10388 00006C9D B904000000              	mov rcx, 4
 10389                                  .L_tc_recycle_frame_loop_004a:
 10390 00006CA2 4883F900                	cmp rcx, 0
 10391 00006CA6 7413                    	je .L_tc_recycle_frame_done_004a
 10392 00006CA8 4D8B11                  	mov r10, qword [r9]
 10393 00006CAB 4D8910                  	mov qword [r8], r10
 10394 00006CAE 4983E808                	sub r8, 8
 10395 00006CB2 4983E908                	sub r9, 8
 10396 00006CB6 48FFC9                  	dec rcx
 10397 00006CB9 EBE7                    	jmp .L_tc_recycle_frame_loop_004a
 10398                                  .L_tc_recycle_frame_done_004a:
 10399 00006CBB 498D6008                	lea rsp, [r8 + 8]
 10400 00006CBF 5D                      	pop rbp ; restore the old rbp
 10401 00006CC0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10402                                  .L_if_end_001d:
 10403                                  .L_if_end_001e:
 10404                                  .L_if_end_001f:
 10405 00006CC3 E9CB050000              	jmp .L_if_end_0028
 10406                                  .L_if_else_0028:
 10407                                  	; preparing a non-tail-call
 10408 00006CC8 488B4520                	mov rax, PARAM(0)	; param a
 10409 00006CCC 50                      	push rax
 10410 00006CCD 6A01                    	push 1	; arg count
 10411 00006CCF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10412 00006CD7 803805                  	cmp byte [rax], T_undefined
 10413 00006CDA 0F8448080100            	je L_error_fvar_undefined
 10414 00006CE0 803804                  	cmp byte [rax], T_closure
 10415 00006CE3 0F85C3080100            	jne L_error_non_closure
 10416 00006CE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10417 00006CEC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10418 00006CEF 483D[02000000]          	cmp rax, sob_boolean_false
 10419 00006CF5 0F8487020000            	je .L_if_else_0027
 10420                                  	; preparing a non-tail-call
 10421 00006CFB 488B4528                	mov rax, PARAM(1)	; param b
 10422 00006CFF 50                      	push rax
 10423 00006D00 6A01                    	push 1	; arg count
 10424 00006D02 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10425 00006D0A 803805                  	cmp byte [rax], T_undefined
 10426 00006D0D 0F8415080100            	je L_error_fvar_undefined
 10427 00006D13 803804                  	cmp byte [rax], T_closure
 10428 00006D16 0F8590080100            	jne L_error_non_closure
 10429 00006D1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10430 00006D1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10431 00006D22 483D[02000000]          	cmp rax, sob_boolean_false
 10432 00006D28 0F8493000000            	je .L_if_else_0022
 10433                                  	; preparing a tail-call
 10434                                  	; preparing a non-tail-call
 10435 00006D2E 488B4528                	mov rax, PARAM(1)	; param b
 10436 00006D32 50                      	push rax
 10437 00006D33 6A01                    	push 1	; arg count
 10438 00006D35 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10439 00006D3D 803805                  	cmp byte [rax], T_undefined
 10440 00006D40 0F84E2070100            	je L_error_fvar_undefined
 10441 00006D46 803804                  	cmp byte [rax], T_closure
 10442 00006D49 0F855D080100            	jne L_error_non_closure
 10443 00006D4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10444 00006D52 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10445 00006D55 50                      	push rax
 10446 00006D56 488B4520                	mov rax, PARAM(0)	; param a
 10447 00006D5A 50                      	push rax
 10448 00006D5B 6A02                    	push 2	; arg count
 10449 00006D5D 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10450 00006D65 803805                  	cmp byte [rax], T_undefined
 10451 00006D68 0F84BA070100            	je L_error_fvar_undefined
 10452 00006D6E 803804                  	cmp byte [rax], T_closure
 10453 00006D71 0F8535080100            	jne L_error_non_closure
 10454 00006D77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10455 00006D7A FF7508                  	push qword [rbp + 8 * 1]
 10456                                   ; old ret addr
 10457 00006D7D FF7500                  	push qword [rbp]
 10458                                   ; restore the old rbp
 10459 00006D80 BB02000000              	mov rbx, 2
 10460 00006D85 4883C303                	add rbx, 3
 10461 00006D89 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10462 00006D8D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10463 00006D92 4C8D4DF8                	lea r9, [rbp - 8]
 10464 00006D96 B906000000              	mov rcx, 6
 10465                                  .L_tc_recycle_frame_loop_004b:
 10466 00006D9B 4883F900                	cmp rcx, 0
 10467 00006D9F 7413                    	je .L_tc_recycle_frame_done_004b
 10468 00006DA1 4D8B11                  	mov r10, qword [r9]
 10469 00006DA4 4D8910                  	mov qword [r8], r10
 10470 00006DA7 4983E808                	sub r8, 8
 10471 00006DAB 4983E908                	sub r9, 8
 10472 00006DAF 48FFC9                  	dec rcx
 10473 00006DB2 EBE7                    	jmp .L_tc_recycle_frame_loop_004b
 10474                                  .L_tc_recycle_frame_done_004b:
 10475 00006DB4 498D6008                	lea rsp, [r8 + 8]
 10476 00006DB8 5D                      	pop rbp ; restore the old rbp
 10477 00006DB9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10478 00006DBC E9BC010000              	jmp .L_if_end_0022
 10479                                  .L_if_else_0022:
 10480                                  	; preparing a non-tail-call
 10481 00006DC1 488B4528                	mov rax, PARAM(1)	; param b
 10482 00006DC5 50                      	push rax
 10483 00006DC6 6A01                    	push 1	; arg count
 10484 00006DC8 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10485 00006DD0 803805                  	cmp byte [rax], T_undefined
 10486 00006DD3 0F844F070100            	je L_error_fvar_undefined
 10487 00006DD9 803804                  	cmp byte [rax], T_closure
 10488 00006DDC 0F85CA070100            	jne L_error_non_closure
 10489 00006DE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10490 00006DE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10491 00006DE8 483D[02000000]          	cmp rax, sob_boolean_false
 10492 00006DEE 7470                    	je .L_if_else_0021
 10493                                  	; preparing a tail-call
 10494 00006DF0 488B4528                	mov rax, PARAM(1)	; param b
 10495 00006DF4 50                      	push rax
 10496 00006DF5 488B4520                	mov rax, PARAM(0)	; param a
 10497 00006DF9 50                      	push rax
 10498 00006DFA 6A02                    	push 2	; arg count
 10499 00006DFC 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10500 00006E04 803805                  	cmp byte [rax], T_undefined
 10501 00006E07 0F841B070100            	je L_error_fvar_undefined
 10502 00006E0D 803804                  	cmp byte [rax], T_closure
 10503 00006E10 0F8596070100            	jne L_error_non_closure
 10504 00006E16 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10505 00006E19 FF7508                  	push qword [rbp + 8 * 1]
 10506                                   ; old ret addr
 10507 00006E1C FF7500                  	push qword [rbp]
 10508                                   ; restore the old rbp
 10509 00006E1F BB02000000              	mov rbx, 2
 10510 00006E24 4883C303                	add rbx, 3
 10511 00006E28 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10512 00006E2C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10513 00006E31 4C8D4DF8                	lea r9, [rbp - 8]
 10514 00006E35 B906000000              	mov rcx, 6
 10515                                  .L_tc_recycle_frame_loop_004c:
 10516 00006E3A 4883F900                	cmp rcx, 0
 10517 00006E3E 7413                    	je .L_tc_recycle_frame_done_004c
 10518 00006E40 4D8B11                  	mov r10, qword [r9]
 10519 00006E43 4D8910                  	mov qword [r8], r10
 10520 00006E46 4983E808                	sub r8, 8
 10521 00006E4A 4983E908                	sub r9, 8
 10522 00006E4E 48FFC9                  	dec rcx
 10523 00006E51 EBE7                    	jmp .L_tc_recycle_frame_loop_004c
 10524                                  .L_tc_recycle_frame_done_004c:
 10525 00006E53 498D6008                	lea rsp, [r8 + 8]
 10526 00006E57 5D                      	pop rbp ; restore the old rbp
 10527 00006E58 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10528 00006E5B E91D010000              	jmp .L_if_end_0021
 10529                                  .L_if_else_0021:
 10530                                  	; preparing a non-tail-call
 10531 00006E60 488B4528                	mov rax, PARAM(1)	; param b
 10532 00006E64 50                      	push rax
 10533 00006E65 6A01                    	push 1	; arg count
 10534 00006E67 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10535 00006E6F 803805                  	cmp byte [rax], T_undefined
 10536 00006E72 0F84B0060100            	je L_error_fvar_undefined
 10537 00006E78 803804                  	cmp byte [rax], T_closure
 10538 00006E7B 0F852B070100            	jne L_error_non_closure
 10539 00006E81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10540 00006E84 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10541 00006E87 483D[02000000]          	cmp rax, sob_boolean_false
 10542 00006E8D 0F8490000000            	je .L_if_else_0020
 10543                                  	; preparing a tail-call
 10544 00006E93 488B4528                	mov rax, PARAM(1)	; param b
 10545 00006E97 50                      	push rax
 10546                                  	; preparing a non-tail-call
 10547 00006E98 488B4520                	mov rax, PARAM(0)	; param a
 10548 00006E9C 50                      	push rax
 10549 00006E9D 6A01                    	push 1	; arg count
 10550 00006E9F 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10551 00006EA7 803805                  	cmp byte [rax], T_undefined
 10552 00006EAA 0F8478060100            	je L_error_fvar_undefined
 10553 00006EB0 803804                  	cmp byte [rax], T_closure
 10554 00006EB3 0F85F3060100            	jne L_error_non_closure
 10555 00006EB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10556 00006EBC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10557 00006EBF 50                      	push rax
 10558 00006EC0 6A02                    	push 2	; arg count
 10559 00006EC2 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10560 00006ECA 803805                  	cmp byte [rax], T_undefined
 10561 00006ECD 0F8455060100            	je L_error_fvar_undefined
 10562 00006ED3 803804                  	cmp byte [rax], T_closure
 10563 00006ED6 0F85D0060100            	jne L_error_non_closure
 10564 00006EDC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10565 00006EDF FF7508                  	push qword [rbp + 8 * 1]
 10566                                   ; old ret addr
 10567 00006EE2 FF7500                  	push qword [rbp]
 10568                                   ; restore the old rbp
 10569 00006EE5 BB02000000              	mov rbx, 2
 10570 00006EEA 4883C303                	add rbx, 3
 10571 00006EEE 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10572 00006EF2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10573 00006EF7 4C8D4DF8                	lea r9, [rbp - 8]
 10574 00006EFB B906000000              	mov rcx, 6
 10575                                  .L_tc_recycle_frame_loop_004d:
 10576 00006F00 4883F900                	cmp rcx, 0
 10577 00006F04 7413                    	je .L_tc_recycle_frame_done_004d
 10578 00006F06 4D8B11                  	mov r10, qword [r9]
 10579 00006F09 4D8910                  	mov qword [r8], r10
 10580 00006F0C 4983E808                	sub r8, 8
 10581 00006F10 4983E908                	sub r9, 8
 10582 00006F14 48FFC9                  	dec rcx
 10583 00006F17 EBE7                    	jmp .L_tc_recycle_frame_loop_004d
 10584                                  .L_tc_recycle_frame_done_004d:
 10585 00006F19 498D6008                	lea rsp, [r8 + 8]
 10586 00006F1D 5D                      	pop rbp ; restore the old rbp
 10587 00006F1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10588 00006F21 EB5A                    	jmp .L_if_end_0020
 10589                                  .L_if_else_0020:
 10590                                  	; preparing a tail-call
 10591 00006F23 6A00                    	push 0	; arg count
 10592 00006F25 488B4510                	mov rax, ENV
 10593 00006F29 488B00                  	mov rax, qword [rax + 8 * 0]
 10594 00006F2C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10595 00006F2F 803804                  	cmp byte [rax], T_closure
 10596 00006F32 0F8574060100            	jne L_error_non_closure
 10597 00006F38 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10598 00006F3B FF7508                  	push qword [rbp + 8 * 1]
 10599                                   ; old ret addr
 10600 00006F3E FF7500                  	push qword [rbp]
 10601                                   ; restore the old rbp
 10602 00006F41 BB00000000              	mov rbx, 0
 10603 00006F46 4883C303                	add rbx, 3
 10604 00006F4A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10605 00006F4E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10606 00006F53 4C8D4DF8                	lea r9, [rbp - 8]
 10607 00006F57 B904000000              	mov rcx, 4
 10608                                  .L_tc_recycle_frame_loop_004e:
 10609 00006F5C 4883F900                	cmp rcx, 0
 10610 00006F60 7413                    	je .L_tc_recycle_frame_done_004e
 10611 00006F62 4D8B11                  	mov r10, qword [r9]
 10612 00006F65 4D8910                  	mov qword [r8], r10
 10613 00006F68 4983E808                	sub r8, 8
 10614 00006F6C 4983E908                	sub r9, 8
 10615 00006F70 48FFC9                  	dec rcx
 10616 00006F73 EBE7                    	jmp .L_tc_recycle_frame_loop_004e
 10617                                  .L_tc_recycle_frame_done_004e:
 10618 00006F75 498D6008                	lea rsp, [r8 + 8]
 10619 00006F79 5D                      	pop rbp ; restore the old rbp
 10620 00006F7A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10621                                  .L_if_end_0020:
 10622                                  .L_if_end_0021:
 10623                                  .L_if_end_0022:
 10624 00006F7D E911030000              	jmp .L_if_end_0027
 10625                                  .L_if_else_0027:
 10626                                  	; preparing a non-tail-call
 10627 00006F82 488B4520                	mov rax, PARAM(0)	; param a
 10628 00006F86 50                      	push rax
 10629 00006F87 6A01                    	push 1	; arg count
 10630 00006F89 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10631 00006F91 803805                  	cmp byte [rax], T_undefined
 10632 00006F94 0F848E050100            	je L_error_fvar_undefined
 10633 00006F9A 803804                  	cmp byte [rax], T_closure
 10634 00006F9D 0F8509060100            	jne L_error_non_closure
 10635 00006FA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10636 00006FA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10637 00006FA9 483D[02000000]          	cmp rax, sob_boolean_false
 10638 00006FAF 0F8484020000            	je .L_if_else_0026
 10639                                  	; preparing a non-tail-call
 10640 00006FB5 488B4528                	mov rax, PARAM(1)	; param b
 10641 00006FB9 50                      	push rax
 10642 00006FBA 6A01                    	push 1	; arg count
 10643 00006FBC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10644 00006FC4 803805                  	cmp byte [rax], T_undefined
 10645 00006FC7 0F845B050100            	je L_error_fvar_undefined
 10646 00006FCD 803804                  	cmp byte [rax], T_closure
 10647 00006FD0 0F85D6050100            	jne L_error_non_closure
 10648 00006FD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10649 00006FD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10650 00006FDC 483D[02000000]          	cmp rax, sob_boolean_false
 10651 00006FE2 0F8493000000            	je .L_if_else_0025
 10652                                  	; preparing a tail-call
 10653                                  	; preparing a non-tail-call
 10654 00006FE8 488B4528                	mov rax, PARAM(1)	; param b
 10655 00006FEC 50                      	push rax
 10656 00006FED 6A01                    	push 1	; arg count
 10657 00006FEF 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10658 00006FF7 803805                  	cmp byte [rax], T_undefined
 10659 00006FFA 0F8428050100            	je L_error_fvar_undefined
 10660 00007000 803804                  	cmp byte [rax], T_closure
 10661 00007003 0F85A3050100            	jne L_error_non_closure
 10662 00007009 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10663 0000700C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10664 0000700F 50                      	push rax
 10665 00007010 488B4520                	mov rax, PARAM(0)	; param a
 10666 00007014 50                      	push rax
 10667 00007015 6A02                    	push 2	; arg count
 10668 00007017 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10669 0000701F 803805                  	cmp byte [rax], T_undefined
 10670 00007022 0F8400050100            	je L_error_fvar_undefined
 10671 00007028 803804                  	cmp byte [rax], T_closure
 10672 0000702B 0F857B050100            	jne L_error_non_closure
 10673 00007031 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10674 00007034 FF7508                  	push qword [rbp + 8 * 1]
 10675                                   ; old ret addr
 10676 00007037 FF7500                  	push qword [rbp]
 10677                                   ; restore the old rbp
 10678 0000703A BB02000000              	mov rbx, 2
 10679 0000703F 4883C303                	add rbx, 3
 10680 00007043 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10681 00007047 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10682 0000704C 4C8D4DF8                	lea r9, [rbp - 8]
 10683 00007050 B906000000              	mov rcx, 6
 10684                                  .L_tc_recycle_frame_loop_004f:
 10685 00007055 4883F900                	cmp rcx, 0
 10686 00007059 7413                    	je .L_tc_recycle_frame_done_004f
 10687 0000705B 4D8B11                  	mov r10, qword [r9]
 10688 0000705E 4D8910                  	mov qword [r8], r10
 10689 00007061 4983E808                	sub r8, 8
 10690 00007065 4983E908                	sub r9, 8
 10691 00007069 48FFC9                  	dec rcx
 10692 0000706C EBE7                    	jmp .L_tc_recycle_frame_loop_004f
 10693                                  .L_tc_recycle_frame_done_004f:
 10694 0000706E 498D6008                	lea rsp, [r8 + 8]
 10695 00007072 5D                      	pop rbp ; restore the old rbp
 10696 00007073 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10697 00007076 E9BC010000              	jmp .L_if_end_0025
 10698                                  .L_if_else_0025:
 10699                                  	; preparing a non-tail-call
 10700 0000707B 488B4528                	mov rax, PARAM(1)	; param b
 10701 0000707F 50                      	push rax
 10702 00007080 6A01                    	push 1	; arg count
 10703 00007082 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10704 0000708A 803805                  	cmp byte [rax], T_undefined
 10705 0000708D 0F8495040100            	je L_error_fvar_undefined
 10706 00007093 803804                  	cmp byte [rax], T_closure
 10707 00007096 0F8510050100            	jne L_error_non_closure
 10708 0000709C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10709 0000709F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10710 000070A2 483D[02000000]          	cmp rax, sob_boolean_false
 10711 000070A8 0F8493000000            	je .L_if_else_0024
 10712                                  	; preparing a tail-call
 10713                                  	; preparing a non-tail-call
 10714 000070AE 488B4528                	mov rax, PARAM(1)	; param b
 10715 000070B2 50                      	push rax
 10716 000070B3 6A01                    	push 1	; arg count
 10717 000070B5 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10718 000070BD 803805                  	cmp byte [rax], T_undefined
 10719 000070C0 0F8462040100            	je L_error_fvar_undefined
 10720 000070C6 803804                  	cmp byte [rax], T_closure
 10721 000070C9 0F85DD040100            	jne L_error_non_closure
 10722 000070CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10723 000070D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10724 000070D5 50                      	push rax
 10725 000070D6 488B4520                	mov rax, PARAM(0)	; param a
 10726 000070DA 50                      	push rax
 10727 000070DB 6A02                    	push 2	; arg count
 10728 000070DD 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10729 000070E5 803805                  	cmp byte [rax], T_undefined
 10730 000070E8 0F843A040100            	je L_error_fvar_undefined
 10731 000070EE 803804                  	cmp byte [rax], T_closure
 10732 000070F1 0F85B5040100            	jne L_error_non_closure
 10733 000070F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10734 000070FA FF7508                  	push qword [rbp + 8 * 1]
 10735                                   ; old ret addr
 10736 000070FD FF7500                  	push qword [rbp]
 10737                                   ; restore the old rbp
 10738 00007100 BB02000000              	mov rbx, 2
 10739 00007105 4883C303                	add rbx, 3
 10740 00007109 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10741 0000710D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10742 00007112 4C8D4DF8                	lea r9, [rbp - 8]
 10743 00007116 B906000000              	mov rcx, 6
 10744                                  .L_tc_recycle_frame_loop_0050:
 10745 0000711B 4883F900                	cmp rcx, 0
 10746 0000711F 7413                    	je .L_tc_recycle_frame_done_0050
 10747 00007121 4D8B11                  	mov r10, qword [r9]
 10748 00007124 4D8910                  	mov qword [r8], r10
 10749 00007127 4983E808                	sub r8, 8
 10750 0000712B 4983E908                	sub r9, 8
 10751 0000712F 48FFC9                  	dec rcx
 10752 00007132 EBE7                    	jmp .L_tc_recycle_frame_loop_0050
 10753                                  .L_tc_recycle_frame_done_0050:
 10754 00007134 498D6008                	lea rsp, [r8 + 8]
 10755 00007138 5D                      	pop rbp ; restore the old rbp
 10756 00007139 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10757 0000713C E9F6000000              	jmp .L_if_end_0024
 10758                                  .L_if_else_0024:
 10759                                  	; preparing a non-tail-call
 10760 00007141 488B4528                	mov rax, PARAM(1)	; param b
 10761 00007145 50                      	push rax
 10762 00007146 6A01                    	push 1	; arg count
 10763 00007148 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10764 00007150 803805                  	cmp byte [rax], T_undefined
 10765 00007153 0F84CF030100            	je L_error_fvar_undefined
 10766 00007159 803804                  	cmp byte [rax], T_closure
 10767 0000715C 0F854A040100            	jne L_error_non_closure
 10768 00007162 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10769 00007165 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10770 00007168 483D[02000000]          	cmp rax, sob_boolean_false
 10771 0000716E 746D                    	je .L_if_else_0023
 10772                                  	; preparing a tail-call
 10773 00007170 488B4528                	mov rax, PARAM(1)	; param b
 10774 00007174 50                      	push rax
 10775 00007175 488B4520                	mov rax, PARAM(0)	; param a
 10776 00007179 50                      	push rax
 10777 0000717A 6A02                    	push 2	; arg count
 10778 0000717C 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10779 00007184 803805                  	cmp byte [rax], T_undefined
 10780 00007187 0F849B030100            	je L_error_fvar_undefined
 10781 0000718D 803804                  	cmp byte [rax], T_closure
 10782 00007190 0F8516040100            	jne L_error_non_closure
 10783 00007196 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10784 00007199 FF7508                  	push qword [rbp + 8 * 1]
 10785                                   ; old ret addr
 10786 0000719C FF7500                  	push qword [rbp]
 10787                                   ; restore the old rbp
 10788 0000719F BB02000000              	mov rbx, 2
 10789 000071A4 4883C303                	add rbx, 3
 10790 000071A8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10791 000071AC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10792 000071B1 4C8D4DF8                	lea r9, [rbp - 8]
 10793 000071B5 B906000000              	mov rcx, 6
 10794                                  .L_tc_recycle_frame_loop_0051:
 10795 000071BA 4883F900                	cmp rcx, 0
 10796 000071BE 7413                    	je .L_tc_recycle_frame_done_0051
 10797 000071C0 4D8B11                  	mov r10, qword [r9]
 10798 000071C3 4D8910                  	mov qword [r8], r10
 10799 000071C6 4983E808                	sub r8, 8
 10800 000071CA 4983E908                	sub r9, 8
 10801 000071CE 48FFC9                  	dec rcx
 10802 000071D1 EBE7                    	jmp .L_tc_recycle_frame_loop_0051
 10803                                  .L_tc_recycle_frame_done_0051:
 10804 000071D3 498D6008                	lea rsp, [r8 + 8]
 10805 000071D7 5D                      	pop rbp ; restore the old rbp
 10806 000071D8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10807 000071DB EB5A                    	jmp .L_if_end_0023
 10808                                  .L_if_else_0023:
 10809                                  	; preparing a tail-call
 10810 000071DD 6A00                    	push 0	; arg count
 10811 000071DF 488B4510                	mov rax, ENV
 10812 000071E3 488B00                  	mov rax, qword [rax + 8 * 0]
 10813 000071E6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10814 000071E9 803804                  	cmp byte [rax], T_closure
 10815 000071EC 0F85BA030100            	jne L_error_non_closure
 10816 000071F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10817 000071F5 FF7508                  	push qword [rbp + 8 * 1]
 10818                                   ; old ret addr
 10819 000071F8 FF7500                  	push qword [rbp]
 10820                                   ; restore the old rbp
 10821 000071FB BB00000000              	mov rbx, 0
 10822 00007200 4883C303                	add rbx, 3
 10823 00007204 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10824 00007208 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10825 0000720D 4C8D4DF8                	lea r9, [rbp - 8]
 10826 00007211 B904000000              	mov rcx, 4
 10827                                  .L_tc_recycle_frame_loop_0052:
 10828 00007216 4883F900                	cmp rcx, 0
 10829 0000721A 7413                    	je .L_tc_recycle_frame_done_0052
 10830 0000721C 4D8B11                  	mov r10, qword [r9]
 10831 0000721F 4D8910                  	mov qword [r8], r10
 10832 00007222 4983E808                	sub r8, 8
 10833 00007226 4983E908                	sub r9, 8
 10834 0000722A 48FFC9                  	dec rcx
 10835 0000722D EBE7                    	jmp .L_tc_recycle_frame_loop_0052
 10836                                  .L_tc_recycle_frame_done_0052:
 10837 0000722F 498D6008                	lea rsp, [r8 + 8]
 10838 00007233 5D                      	pop rbp ; restore the old rbp
 10839 00007234 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10840                                  .L_if_end_0023:
 10841                                  .L_if_end_0024:
 10842                                  .L_if_end_0025:
 10843 00007237 EB5A                    	jmp .L_if_end_0026
 10844                                  .L_if_else_0026:
 10845                                  	; preparing a tail-call
 10846 00007239 6A00                    	push 0	; arg count
 10847 0000723B 488B4510                	mov rax, ENV
 10848 0000723F 488B00                  	mov rax, qword [rax + 8 * 0]
 10849 00007242 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10850 00007245 803804                  	cmp byte [rax], T_closure
 10851 00007248 0F855E030100            	jne L_error_non_closure
 10852 0000724E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10853 00007251 FF7508                  	push qword [rbp + 8 * 1]
 10854                                   ; old ret addr
 10855 00007254 FF7500                  	push qword [rbp]
 10856                                   ; restore the old rbp
 10857 00007257 BB00000000              	mov rbx, 0
 10858 0000725C 4883C303                	add rbx, 3
 10859 00007260 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 10860 00007264 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 10861 00007269 4C8D4DF8                	lea r9, [rbp - 8]
 10862 0000726D B904000000              	mov rcx, 4
 10863                                  .L_tc_recycle_frame_loop_0053:
 10864 00007272 4883F900                	cmp rcx, 0
 10865 00007276 7413                    	je .L_tc_recycle_frame_done_0053
 10866 00007278 4D8B11                  	mov r10, qword [r9]
 10867 0000727B 4D8910                  	mov qword [r8], r10
 10868 0000727E 4983E808                	sub r8, 8
 10869 00007282 4983E908                	sub r9, 8
 10870 00007286 48FFC9                  	dec rcx
 10871 00007289 EBE7                    	jmp .L_tc_recycle_frame_loop_0053
 10872                                  .L_tc_recycle_frame_done_0053:
 10873 0000728B 498D6008                	lea rsp, [r8 + 8]
 10874 0000728F 5D                      	pop rbp ; restore the old rbp
 10875 00007290 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10876                                  .L_if_end_0026:
 10877                                  .L_if_end_0027:
 10878                                  .L_if_end_0028:
 10879 00007293 C9                      	leave
 10880 00007294 C22000                  	ret AND_KILL_FRAME(2)
 10881                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10882 00007297 50                      	push rax
 10883 00007298 6A01                    	push 1	; arg count
 10884 0000729A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10885 0000729F E8B1030100              	call malloc
 10886 000072A4 50                      	push rax
 10887 000072A5 BF08000000              	mov rdi, 8 * 1	; new rib
 10888 000072AA E8A6030100              	call malloc
 10889 000072AF 50                      	push rax
 10890 000072B0 BF10000000              	mov rdi, 8 * 2	; extended env
 10891 000072B5 E89B030100              	call malloc
 10892 000072BA 488B7D10                	mov rdi, ENV
 10893 000072BE BE00000000              	mov rsi, 0
 10894 000072C3 BA01000000              	mov rdx, 1
 10895                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10896 000072C8 4883FE01                	cmp rsi, 1
 10897 000072CC 7410                    	je .L_lambda_simple_env_end_003b
 10898 000072CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10899 000072D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10900 000072D6 48FFC6                  	inc rsi
 10901 000072D9 48FFC2                  	inc rdx
 10902 000072DC EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10903                                  .L_lambda_simple_env_end_003b:
 10904 000072DE 5B                      	pop rbx
 10905 000072DF BE00000000              	mov rsi, 0
 10906                                  .L_lambda_simple_params_loop_003b:	; copy params
 10907 000072E4 4883FE01                	cmp rsi, 1
 10908 000072E8 740E                    	je .L_lambda_simple_params_end_003b
 10909 000072EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10910 000072EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10911 000072F3 48FFC6                  	inc rsi
 10912 000072F6 EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10913                                  .L_lambda_simple_params_end_003b:
 10914 000072F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10915 000072FB 4889C3                  	mov rbx, rax
 10916 000072FE 58                      	pop rax
 10917 000072FF C60004                  	mov byte [rax], T_closure
 10918 00007302 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10919 00007306 48C74009[13730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10920 0000730E E9BD030000              	jmp .L_lambda_simple_end_003b
 10921                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10922 00007313 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10923 00007319 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10924 0000731B FF742410                	push qword [rsp + 8 * 2]
 10925 0000731F 6A01                    	push 1
 10926 00007321 E9E8020100              	jmp L_error_incorrect_arity_simple
 10927                                  .L_lambda_simple_arity_check_ok_003b:
 10928 00007326 C8000000                	enter 0, 0
 10929 0000732A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10930 0000732F E821030100              	call malloc
 10931 00007334 50                      	push rax
 10932 00007335 BF08000000              	mov rdi, 8 * 1	; new rib
 10933 0000733A E816030100              	call malloc
 10934 0000733F 50                      	push rax
 10935 00007340 BF18000000              	mov rdi, 8 * 3	; extended env
 10936 00007345 E80B030100              	call malloc
 10937 0000734A 488B7D10                	mov rdi, ENV
 10938 0000734E 4831F6                  	 xor rsi, rsi
 10939 00007351 4831D2                  	 xor rdx, rdx
 10940 00007354 48FFC2                  	inc rdx
 10941                                  .L_lambda_opt_env_loop_000b:	; 
 10942 00007357 4883FE02                	cmp rsi, 2
 10943 0000735B 7410                    	je .L_lambda_opt_env_end_000b
 10944 0000735D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10945 00007361 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10946 00007365 48FFC6                  	inc rsi
 10947 00007368 48FFC2                  	inc rdx
 10948 0000736B EBEA                    	jmp .L_lambda_opt_env_loop_000b
 10949                                  .L_lambda_opt_env_end_000b:
 10950 0000736D 5B                      	pop rbx
 10951 0000736E 4831F6                  	xor rsi, rsi
 10952                                  .L_lambda_opt_params_loop_000b:	; copy params
 10953 00007371 4883FE01                	cmp rsi, 1
 10954 00007375 740E                    	je .L_lambda_opt_params_end_000b
 10955 00007377 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10956 0000737C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10957 00007380 48FFC6                  	inc rsi
 10958 00007383 EBEC                    	jmp .L_lambda_opt_params_loop_000b
 10959                                  .L_lambda_opt_params_end_000b:
 10960 00007385 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10961 00007388 4889C3                  	mov rbx, rax
 10962 0000738B 58                      	pop rax
 10963 0000738C C60004                  	mov byte [rax], T_closure
 10964 0000738F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10965 00007393 48C74009[A0730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 10966 0000739B E92C030000              	jmp .L_lambda_opt_end_000b
 10967                                  .L_lambda_opt_code_000b:
 10968 000073A0 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 10969 000073A5 4983FF01                	cmp r15, 1
 10970 000073A9 7409                    	je .L_lambda_opt_arity_check_exact_000b
 10971 000073AB 7F57                    	jg .L_lambda_opt_arity_check_more_000b
 10972 000073AD 6A01                    	push 1
 10973 000073AF E96E020100              	jmp L_error_incorrect_arity_opt
 10974                                  .L_lambda_opt_arity_check_exact_000b: ;Exact case
 10975 000073B4 4C8B0424                	mov r8, qword [rsp -8 * 0]
 10976 000073B8 4C894424F8              	mov qword [rsp -8], r8
 10977 000073BD 4C8B442408              	mov r8, qword [rsp +8]
 10978 000073C2 4C890424                	mov qword [rsp +8 * 0], r8
 10979 000073C6 4C8B442410              	mov r8, qword [rsp +8 * 2]
 10980 000073CB 4C89C1                  	mov rcx, r8
 10981 000073CE 49FFC0                  	inc r8
 10982 000073D1 4C89442408              	mov qword [rsp +8], r8
 10983 000073D6 4889E2                  	mov rdx, rsp
 10984 000073D9 4883C218                	add rdx, 24
 10985                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000b:
 10986 000073DD 4883F900                	cmp rcx, 0
 10987 000073E1 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000b
 10988 000073E3 4C8B02                  	mov r8, qword [rdx]
 10989 000073E6 4C8942F8                	mov qword [rdx - 8], r8
 10990 000073EA 4883C208                	add rdx, 8
 10991 000073EE 48FFC9                  	dec rcx
 10992 000073F1 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000b
 10993                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000b:
 10994 000073F3 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 10995 000073FB 4883EC08                	sub rsp, 8
 10996 000073FF E985000000              	jmp .L_lambda_opt_stack_adjusted_000b
 10997                                  .L_lambda_opt_arity_check_more_000b:
 10998 00007404 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 10999 00007409 4D89C4                  	mov r12, r8
 11000 0000740C 4C89C1                  	mov rcx, r8
 11001 0000740F 4D8D6802                	lea r13, [r8 + 2] 
 11002 00007413 4883E901                	sub rcx, 1
 11003 00007417 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 11004 0000741C 49BE-                   	mov r14, sob_nil
 11004 0000741E [0100000000000000] 
 11005                                  .L_lambda_opt_create_list_of_opt_params_000b:
 11006 00007426 4883F900                	cmp rcx, 0
 11007 0000742A 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000b
 11008 0000742C BF11000000              	mov rdi, 17
 11009 00007431 E81F020100              	call malloc
 11010 00007436 C60021                  	mov byte [rax], T_pair
 11011 00007439 498B1B                  	mov rbx, qword [r11]
 11012 0000743C 48895801                	mov qword [rax +1], rbx
 11013 00007440 4C897009                	mov qword [rax + 1 + 8], r14
 11014 00007444 4989C6                  	mov r14, rax
 11015 00007447 48FFC9                  	dec rcx
 11016 0000744A 4983EB08                	sub r11, 8
 11017 0000744E EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000b
 11018                                  .L_lambda_opt_create_list_of_opt_params_end_000b:
 11019 00007450 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 11020 00007455 4D8932                  	mov qword [r10], r14
 11021 00007458 4E8D2CED00000000        	lea r13, [8 * r13]
 11022 00007460 4901E5                  	add r13, rsp
 11023 00007463 B905000000              	mov rcx, 4 + 1
 11024                                  .L_lambda_opt_stack_shrink_loop_000b:
 11025 00007468 4883F900                	cmp rcx, 0
 11026 0000746C 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_000b
 11027 0000746E 4D8B1A                  	mov r11, qword [r10]
 11028 00007471 4D895D00                	mov qword [r13], r11
 11029 00007475 4983EA08                	sub r10, 8
 11030 00007479 4983ED08                	sub r13, 8
 11031 0000747D 48FFC9                  	dec rcx
 11032 00007480 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 11033                                  .L_lambda_opt_stack_shrink_loop_exit_000b:
 11034 00007482 4983C508                	add r13, 8
 11035 00007486 4C89EC                  	mov rsp, r13
 11036                                  .L_lambda_opt_stack_adjusted_000b:
 11037 00007489 48C744241002000000      	mov qword [rsp + 8*2], 2
 11038 00007492 C8000000                	enter 0, 0
 11039                                  	; preparing a non-tail-call
 11040 00007496 488B4528                	mov rax, PARAM(1)	; param s
 11041 0000749A 50                      	push rax
 11042 0000749B 6A01                    	push 1	; arg count
 11043 0000749D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 11044 000074A5 803805                  	cmp byte [rax], T_undefined
 11045 000074A8 0F847A000100            	je L_error_fvar_undefined
 11046 000074AE 803804                  	cmp byte [rax], T_closure
 11047 000074B1 0F85F5000100            	jne L_error_non_closure
 11048 000074B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11049 000074BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 11050 000074BD 483D[02000000]          	cmp rax, sob_boolean_false
 11051 000074C3 746F                    	je .L_if_else_0029
 11052                                  	; preparing a tail-call
 11053 000074C5 488B4520                	mov rax, PARAM(0)	; param a
 11054 000074C9 50                      	push rax
 11055 000074CA 48B8-                   	mov rax, L_constants + 2135
 11055 000074CC [5708000000000000] 
 11056 000074D4 50                      	push rax
 11057 000074D5 6A02                    	push 2	; arg count
 11058 000074D7 488B4510                	mov rax, ENV
 11059 000074DB 488B00                  	mov rax, qword [rax + 8 * 0]
 11060 000074DE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11061 000074E1 803804                  	cmp byte [rax], T_closure
 11062 000074E4 0F85C2000100            	jne L_error_non_closure
 11063 000074EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 11064 000074ED FF7508                  	push qword [rbp + 8 * 1]
 11065                                   ; old ret addr
 11066 000074F0 FF7500                  	push qword [rbp]
 11067                                   ; restore the old rbp
 11068 000074F3 BB02000000              	mov rbx, 2
 11069 000074F8 4883C303                	add rbx, 3
 11070 000074FC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11071 00007500 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11072 00007505 4C8D4DF8                	lea r9, [rbp - 8]
 11073 00007509 B906000000              	mov rcx, 6
 11074                                  .L_tc_recycle_frame_loop_0054:
 11075 0000750E 4883F900                	cmp rcx, 0
 11076 00007512 7413                    	je .L_tc_recycle_frame_done_0054
 11077 00007514 4D8B11                  	mov r10, qword [r9]
 11078 00007517 4D8910                  	mov qword [r8], r10
 11079 0000751A 4983E808                	sub r8, 8
 11080 0000751E 4983E908                	sub r9, 8
 11081 00007522 48FFC9                  	dec rcx
 11082 00007525 EBE7                    	jmp .L_tc_recycle_frame_loop_0054
 11083                                  .L_tc_recycle_frame_done_0054:
 11084 00007527 498D6008                	lea rsp, [r8 + 8]
 11085 0000752B 5D                      	pop rbp ; restore the old rbp
 11086 0000752C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11087 0000752F E994010000              	jmp .L_if_end_0029
 11088                                  .L_if_else_0029:
 11089                                  	; preparing a tail-call
 11090                                  	; preparing a non-tail-call
 11091 00007534 488B4528                	mov rax, PARAM(1)	; param s
 11092 00007538 50                      	push rax
 11093 00007539 48B8-                   	mov rax, L_constants + 2135
 11093 0000753B [5708000000000000] 
 11094 00007543 50                      	push rax
 11095 00007544 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 11096 0000754C 803805                  	cmp byte [rax], T_undefined
 11097 0000754F 0F84D3FF0000            	je L_error_fvar_undefined
 11098 00007555 50                      	push rax
 11099 00007556 6A03                    	push 3	; arg count
 11100 00007558 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11101 00007560 803805                  	cmp byte [rax], T_undefined
 11102 00007563 0F84BFFF0000            	je L_error_fvar_undefined
 11103 00007569 803804                  	cmp byte [rax], T_closure
 11104 0000756C 0F853A000100            	jne L_error_non_closure
 11105 00007572 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11106 00007575 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11107 00007578 50                      	push rax
 11108 00007579 6A01                    	push 1	; arg count
 11109 0000757B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11110 00007580 E8D0000100              	call malloc
 11111 00007585 50                      	push rax
 11112 00007586 BF10000000              	mov rdi, 8 * 2	; new rib
 11113 0000758B E8C5000100              	call malloc
 11114 00007590 50                      	push rax
 11115 00007591 BF20000000              	mov rdi, 8 * 4	; extended env
 11116 00007596 E8BA000100              	call malloc
 11117 0000759B 488B7D10                	mov rdi, ENV
 11118 0000759F BE00000000              	mov rsi, 0
 11119 000075A4 BA01000000              	mov rdx, 1
 11120                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 11121 000075A9 4883FE03                	cmp rsi, 3
 11122 000075AD 7410                    	je .L_lambda_simple_env_end_003c
 11123 000075AF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11124 000075B3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11125 000075B7 48FFC6                  	inc rsi
 11126 000075BA 48FFC2                  	inc rdx
 11127 000075BD EBEA                    	jmp .L_lambda_simple_env_loop_003c
 11128                                  .L_lambda_simple_env_end_003c:
 11129 000075BF 5B                      	pop rbx
 11130 000075C0 BE00000000              	mov rsi, 0
 11131                                  .L_lambda_simple_params_loop_003c:	; copy params
 11132 000075C5 4883FE02                	cmp rsi, 2
 11133 000075C9 740E                    	je .L_lambda_simple_params_end_003c
 11134 000075CB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11135 000075D0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11136 000075D4 48FFC6                  	inc rsi
 11137 000075D7 EBEC                    	jmp .L_lambda_simple_params_loop_003c
 11138                                  .L_lambda_simple_params_end_003c:
 11139 000075D9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11140 000075DC 4889C3                  	mov rbx, rax
 11141 000075DF 58                      	pop rax
 11142 000075E0 C60004                  	mov byte [rax], T_closure
 11143 000075E3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11144 000075E7 48C74009[F4750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 11145 000075EF E986000000              	jmp .L_lambda_simple_end_003c
 11146                                  .L_lambda_simple_code_003c:	; lambda-simple body
 11147 000075F4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11148 000075FA 740B                    	je .L_lambda_simple_arity_check_ok_003c
 11149 000075FC FF742410                	push qword [rsp + 8 * 2]
 11150 00007600 6A01                    	push 1
 11151 00007602 E907000100              	jmp L_error_incorrect_arity_simple
 11152                                  .L_lambda_simple_arity_check_ok_003c:
 11153 00007607 C8000000                	enter 0, 0
 11154                                  	; preparing a tail-call
 11155 0000760B 488B4520                	mov rax, PARAM(0)	; param b
 11156 0000760F 50                      	push rax
 11157 00007610 488B4510                	mov rax, ENV
 11158 00007614 488B00                  	mov rax, qword [rax + 8 * 0]
 11159 00007617 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11160 0000761A 50                      	push rax
 11161 0000761B 6A02                    	push 2	; arg count
 11162 0000761D 488B4510                	mov rax, ENV
 11163 00007621 488B4008                	mov rax, qword [rax + 8 * 1]
 11164 00007625 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11165 00007628 803804                  	cmp byte [rax], T_closure
 11166 0000762B 0F857BFF0000            	jne L_error_non_closure
 11167 00007631 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11168 00007634 FF7508                  	push qword [rbp + 8 * 1]
 11169                                   ; old ret addr
 11170 00007637 FF7500                  	push qword [rbp]
 11171                                   ; restore the old rbp
 11172 0000763A BB02000000              	mov rbx, 2
 11173 0000763F 4883C303                	add rbx, 3
 11174 00007643 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11175 00007647 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11176 0000764C 4C8D4DF8                	lea r9, [rbp - 8]
 11177 00007650 B906000000              	mov rcx, 6
 11178                                  .L_tc_recycle_frame_loop_0056:
 11179 00007655 4883F900                	cmp rcx, 0
 11180 00007659 7413                    	je .L_tc_recycle_frame_done_0056
 11181 0000765B 4D8B11                  	mov r10, qword [r9]
 11182 0000765E 4D8910                  	mov qword [r8], r10
 11183 00007661 4983E808                	sub r8, 8
 11184 00007665 4983E908                	sub r9, 8
 11185 00007669 48FFC9                  	dec rcx
 11186 0000766C EBE7                    	jmp .L_tc_recycle_frame_loop_0056
 11187                                  .L_tc_recycle_frame_done_0056:
 11188 0000766E 498D6008                	lea rsp, [r8 + 8]
 11189 00007672 5D                      	pop rbp ; restore the old rbp
 11190 00007673 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11191 00007676 C9                      	leave
 11192 00007677 C21800                  	ret AND_KILL_FRAME(1)
 11193                                  .L_lambda_simple_end_003c:	; new closure is in rax
 11194 0000767A 803804                  	cmp byte [rax], T_closure
 11195 0000767D 0F8529FF0000            	jne L_error_non_closure
 11196 00007683 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11197 00007686 FF7508                  	push qword [rbp + 8 * 1]
 11198                                   ; old ret addr
 11199 00007689 FF7500                  	push qword [rbp]
 11200                                   ; restore the old rbp
 11201 0000768C BB01000000              	mov rbx, 1
 11202 00007691 4883C303                	add rbx, 3
 11203 00007695 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11204 00007699 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11205 0000769E 4C8D4DF8                	lea r9, [rbp - 8]
 11206 000076A2 B905000000              	mov rcx, 5
 11207                                  .L_tc_recycle_frame_loop_0055:
 11208 000076A7 4883F900                	cmp rcx, 0
 11209 000076AB 7413                    	je .L_tc_recycle_frame_done_0055
 11210 000076AD 4D8B11                  	mov r10, qword [r9]
 11211 000076B0 4D8910                  	mov qword [r8], r10
 11212 000076B3 4983E808                	sub r8, 8
 11213 000076B7 4983E908                	sub r9, 8
 11214 000076BB 48FFC9                  	dec rcx
 11215 000076BE EBE7                    	jmp .L_tc_recycle_frame_loop_0055
 11216                                  .L_tc_recycle_frame_done_0055:
 11217 000076C0 498D6008                	lea rsp, [r8 + 8]
 11218 000076C4 5D                      	pop rbp ; restore the old rbp
 11219 000076C5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11220                                  .L_if_end_0029:
 11221 000076C8 C9                      	leave
 11222 000076C9 C22000                  	ret 8 * (2 + 2)
 11223                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11224 000076CC C9                      	leave
 11225 000076CD C21800                  	ret AND_KILL_FRAME(1)
 11226                                  .L_lambda_simple_end_003b:	; new closure is in rax
 11227 000076D0 803804                  	cmp byte [rax], T_closure
 11228 000076D3 0F85D3FE0000            	jne L_error_non_closure
 11229 000076D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11230 000076DC FF7508                  	push qword [rbp + 8 * 1]
 11231                                   ; old ret addr
 11232 000076DF FF7500                  	push qword [rbp]
 11233                                   ; restore the old rbp
 11234 000076E2 BB01000000              	mov rbx, 1
 11235 000076E7 4883C303                	add rbx, 3
 11236 000076EB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11237 000076EF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11238 000076F4 4C8D4DF8                	lea r9, [rbp - 8]
 11239 000076F8 B905000000              	mov rcx, 5
 11240                                  .L_tc_recycle_frame_loop_0046:
 11241 000076FD 4883F900                	cmp rcx, 0
 11242 00007701 7413                    	je .L_tc_recycle_frame_done_0046
 11243 00007703 4D8B11                  	mov r10, qword [r9]
 11244 00007706 4D8910                  	mov qword [r8], r10
 11245 00007709 4983E808                	sub r8, 8
 11246 0000770D 4983E908                	sub r9, 8
 11247 00007711 48FFC9                  	dec rcx
 11248 00007714 EBE7                    	jmp .L_tc_recycle_frame_loop_0046
 11249                                  .L_tc_recycle_frame_done_0046:
 11250 00007716 498D6008                	lea rsp, [r8 + 8]
 11251 0000771A 5D                      	pop rbp ; restore the old rbp
 11252 0000771B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11253 0000771E C9                      	leave
 11254 0000771F C21800                  	ret AND_KILL_FRAME(1)
 11255                                  .L_lambda_simple_end_0039:	; new closure is in rax
 11256 00007722 803804                  	cmp byte [rax], T_closure
 11257 00007725 0F8581FE0000            	jne L_error_non_closure
 11258 0000772B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11259 0000772E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11260 00007731 48890425[E70D0000]      	mov qword [free_var_2], rax
 11261 00007739 48B8-                   	mov rax, sob_void
 11261 0000773B [0000000000000000] 
 11262                                  
 11263 00007743 4889C7                  	mov rdi, rax
 11264 00007746 E85F010100              	call print_sexpr_if_not_void
 11265                                  	; preparing a non-tail-call
 11266 0000774B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11267 00007750 E800FF0000              	call malloc
 11268 00007755 50                      	push rax
 11269 00007756 BF00000000              	mov rdi, 8 * 0	; new rib
 11270 0000775B E8F5FE0000              	call malloc
 11271 00007760 50                      	push rax
 11272 00007761 BF08000000              	mov rdi, 8 * 1	; extended env
 11273 00007766 E8EAFE0000              	call malloc
 11274 0000776B 488B7D10                	mov rdi, ENV
 11275 0000776F BE00000000              	mov rsi, 0
 11276 00007774 BA01000000              	mov rdx, 1
 11277                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 11278 00007779 4883FE00                	cmp rsi, 0
 11279 0000777D 7410                    	je .L_lambda_simple_env_end_003d
 11280 0000777F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11281 00007783 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11282 00007787 48FFC6                  	inc rsi
 11283 0000778A 48FFC2                  	inc rdx
 11284 0000778D EBEA                    	jmp .L_lambda_simple_env_loop_003d
 11285                                  .L_lambda_simple_env_end_003d:
 11286 0000778F 5B                      	pop rbx
 11287 00007790 BE00000000              	mov rsi, 0
 11288                                  .L_lambda_simple_params_loop_003d:	; copy params
 11289 00007795 4883FE00                	cmp rsi, 0
 11290 00007799 740E                    	je .L_lambda_simple_params_end_003d
 11291 0000779B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11292 000077A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11293 000077A4 48FFC6                  	inc rsi
 11294 000077A7 EBEC                    	jmp .L_lambda_simple_params_loop_003d
 11295                                  .L_lambda_simple_params_end_003d:
 11296 000077A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11297 000077AC 4889C3                  	mov rbx, rax
 11298 000077AF 58                      	pop rax
 11299 000077B0 C60004                  	mov byte [rax], T_closure
 11300 000077B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11301 000077B7 48C74009[C4770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 11302 000077BF E992000000              	jmp .L_lambda_simple_end_003d
 11303                                  .L_lambda_simple_code_003d:	; lambda-simple body
 11304 000077C4 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11305 000077CA 740B                    	je .L_lambda_simple_arity_check_ok_003d
 11306 000077CC FF742410                	push qword [rsp + 8 * 2]
 11307 000077D0 6A00                    	push 0
 11308 000077D2 E937FE0000              	jmp L_error_incorrect_arity_simple
 11309                                  .L_lambda_simple_arity_check_ok_003d:
 11310 000077D7 C8000000                	enter 0, 0
 11311                                  	; preparing a tail-call
 11312 000077DB 48B8-                   	mov rax, L_constants + 2187
 11312 000077DD [8B08000000000000] 
 11313 000077E5 50                      	push rax
 11314 000077E6 48B8-                   	mov rax, L_constants + 2279
 11314 000077E8 [E708000000000000] 
 11315 000077F0 50                      	push rax
 11316 000077F1 6A02                    	push 2	; arg count
 11317 000077F3 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 11318 000077FB 803805                  	cmp byte [rax], T_undefined
 11319 000077FE 0F8424FD0000            	je L_error_fvar_undefined
 11320 00007804 803804                  	cmp byte [rax], T_closure
 11321 00007807 0F859FFD0000            	jne L_error_non_closure
 11322 0000780D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11323 00007810 FF7508                  	push qword [rbp + 8 * 1]
 11324                                   ; old ret addr
 11325 00007813 FF7500                  	push qword [rbp]
 11326                                   ; restore the old rbp
 11327 00007816 BB02000000              	mov rbx, 2
 11328 0000781B 4883C303                	add rbx, 3
 11329 0000781F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11330 00007823 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11331 00007828 4C8D4DF8                	lea r9, [rbp - 8]
 11332 0000782C B906000000              	mov rcx, 6
 11333                                  .L_tc_recycle_frame_loop_0057:
 11334 00007831 4883F900                	cmp rcx, 0
 11335 00007835 7413                    	je .L_tc_recycle_frame_done_0057
 11336 00007837 4D8B11                  	mov r10, qword [r9]
 11337 0000783A 4D8910                  	mov qword [r8], r10
 11338 0000783D 4983E808                	sub r8, 8
 11339 00007841 4983E908                	sub r9, 8
 11340 00007845 48FFC9                  	dec rcx
 11341 00007848 EBE7                    	jmp .L_tc_recycle_frame_loop_0057
 11342                                  .L_tc_recycle_frame_done_0057:
 11343 0000784A 498D6008                	lea rsp, [r8 + 8]
 11344 0000784E 5D                      	pop rbp ; restore the old rbp
 11345 0000784F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11346 00007852 C9                      	leave
 11347 00007853 C21000                  	ret AND_KILL_FRAME(0)
 11348                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11349 00007856 50                      	push rax
 11350 00007857 6A01                    	push 1	; arg count
 11351 00007859 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11352 0000785E E8F2FD0000              	call malloc
 11353 00007863 50                      	push rax
 11354 00007864 BF00000000              	mov rdi, 8 * 0	; new rib
 11355 00007869 E8E7FD0000              	call malloc
 11356 0000786E 50                      	push rax
 11357 0000786F BF08000000              	mov rdi, 8 * 1	; extended env
 11358 00007874 E8DCFD0000              	call malloc
 11359 00007879 488B7D10                	mov rdi, ENV
 11360 0000787D BE00000000              	mov rsi, 0
 11361 00007882 BA01000000              	mov rdx, 1
 11362                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11363 00007887 4883FE00                	cmp rsi, 0
 11364 0000788B 7410                    	je .L_lambda_simple_env_end_003e
 11365 0000788D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11366 00007891 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11367 00007895 48FFC6                  	inc rsi
 11368 00007898 48FFC2                  	inc rdx
 11369 0000789B EBEA                    	jmp .L_lambda_simple_env_loop_003e
 11370                                  .L_lambda_simple_env_end_003e:
 11371 0000789D 5B                      	pop rbx
 11372 0000789E BE00000000              	mov rsi, 0
 11373                                  .L_lambda_simple_params_loop_003e:	; copy params
 11374 000078A3 4883FE00                	cmp rsi, 0
 11375 000078A7 740E                    	je .L_lambda_simple_params_end_003e
 11376 000078A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11377 000078AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11378 000078B2 48FFC6                  	inc rsi
 11379 000078B5 EBEC                    	jmp .L_lambda_simple_params_loop_003e
 11380                                  .L_lambda_simple_params_end_003e:
 11381 000078B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11382 000078BA 4889C3                  	mov rbx, rax
 11383 000078BD 58                      	pop rax
 11384 000078BE C60004                  	mov byte [rax], T_closure
 11385 000078C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11386 000078C5 48C74009[D2780000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 11387 000078CD E9050C0000              	jmp .L_lambda_simple_end_003e
 11388                                  .L_lambda_simple_code_003e:	; lambda-simple body
 11389 000078D2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11390 000078D8 740B                    	je .L_lambda_simple_arity_check_ok_003e
 11391 000078DA FF742410                	push qword [rsp + 8 * 2]
 11392 000078DE 6A01                    	push 1
 11393 000078E0 E929FD0000              	jmp L_error_incorrect_arity_simple
 11394                                  .L_lambda_simple_arity_check_ok_003e:
 11395 000078E5 C8000000                	enter 0, 0
 11396                                  	; preparing a tail-call
 11397 000078E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11398 000078EE E862FD0000              	call malloc
 11399 000078F3 50                      	push rax
 11400 000078F4 BF08000000              	mov rdi, 8 * 1	; new rib
 11401 000078F9 E857FD0000              	call malloc
 11402 000078FE 50                      	push rax
 11403 000078FF BF10000000              	mov rdi, 8 * 2	; extended env
 11404 00007904 E84CFD0000              	call malloc
 11405 00007909 488B7D10                	mov rdi, ENV
 11406 0000790D BE00000000              	mov rsi, 0
 11407 00007912 BA01000000              	mov rdx, 1
 11408                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11409 00007917 4883FE01                	cmp rsi, 1
 11410 0000791B 7410                    	je .L_lambda_simple_env_end_003f
 11411 0000791D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11412 00007921 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11413 00007925 48FFC6                  	inc rsi
 11414 00007928 48FFC2                  	inc rdx
 11415 0000792B EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11416                                  .L_lambda_simple_env_end_003f:
 11417 0000792D 5B                      	pop rbx
 11418 0000792E BE00000000              	mov rsi, 0
 11419                                  .L_lambda_simple_params_loop_003f:	; copy params
 11420 00007933 4883FE01                	cmp rsi, 1
 11421 00007937 740E                    	je .L_lambda_simple_params_end_003f
 11422 00007939 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11423 0000793E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11424 00007942 48FFC6                  	inc rsi
 11425 00007945 EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11426                                  .L_lambda_simple_params_end_003f:
 11427 00007947 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11428 0000794A 4889C3                  	mov rbx, rax
 11429 0000794D 58                      	pop rax
 11430 0000794E C60004                  	mov byte [rax], T_closure
 11431 00007951 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11432 00007955 48C74009[62790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11433 0000795D E9A0080000              	jmp .L_lambda_simple_end_003f
 11434                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11435 00007962 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11436 00007968 740B                    	je .L_lambda_simple_arity_check_ok_003f
 11437 0000796A FF742410                	push qword [rsp + 8 * 2]
 11438 0000796E 6A02                    	push 2
 11439 00007970 E999FC0000              	jmp L_error_incorrect_arity_simple
 11440                                  .L_lambda_simple_arity_check_ok_003f:
 11441 00007975 C8000000                	enter 0, 0
 11442                                  	; preparing a non-tail-call
 11443 00007979 488B4520                	mov rax, PARAM(0)	; param a
 11444 0000797D 50                      	push rax
 11445 0000797E 6A01                    	push 1	; arg count
 11446 00007980 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11447 00007988 803805                  	cmp byte [rax], T_undefined
 11448 0000798B 0F8497FB0000            	je L_error_fvar_undefined
 11449 00007991 803804                  	cmp byte [rax], T_closure
 11450 00007994 0F8512FC0000            	jne L_error_non_closure
 11451 0000799A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11452 0000799D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11453 000079A0 483D[02000000]          	cmp rax, sob_boolean_false
 11454 000079A6 0F8487020000            	je .L_if_else_0035
 11455                                  	; preparing a non-tail-call
 11456 000079AC 488B4528                	mov rax, PARAM(1)	; param b
 11457 000079B0 50                      	push rax
 11458 000079B1 6A01                    	push 1	; arg count
 11459 000079B3 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11460 000079BB 803805                  	cmp byte [rax], T_undefined
 11461 000079BE 0F8464FB0000            	je L_error_fvar_undefined
 11462 000079C4 803804                  	cmp byte [rax], T_closure
 11463 000079C7 0F85DFFB0000            	jne L_error_non_closure
 11464 000079CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11465 000079D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11466 000079D3 483D[02000000]          	cmp rax, sob_boolean_false
 11467 000079D9 7470                    	je .L_if_else_002c
 11468                                  	; preparing a tail-call
 11469 000079DB 488B4528                	mov rax, PARAM(1)	; param b
 11470 000079DF 50                      	push rax
 11471 000079E0 488B4520                	mov rax, PARAM(0)	; param a
 11472 000079E4 50                      	push rax
 11473 000079E5 6A02                    	push 2	; arg count
 11474 000079E7 488B0425[5D0F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 11475 000079EF 803805                  	cmp byte [rax], T_undefined
 11476 000079F2 0F8430FB0000            	je L_error_fvar_undefined
 11477 000079F8 803804                  	cmp byte [rax], T_closure
 11478 000079FB 0F85ABFB0000            	jne L_error_non_closure
 11479 00007A01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11480 00007A04 FF7508                  	push qword [rbp + 8 * 1]
 11481                                   ; old ret addr
 11482 00007A07 FF7500                  	push qword [rbp]
 11483                                   ; restore the old rbp
 11484 00007A0A BB02000000              	mov rbx, 2
 11485 00007A0F 4883C303                	add rbx, 3
 11486 00007A13 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11487 00007A17 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11488 00007A1C 4C8D4DF8                	lea r9, [rbp - 8]
 11489 00007A20 B906000000              	mov rcx, 6
 11490                                  .L_tc_recycle_frame_loop_0059:
 11491 00007A25 4883F900                	cmp rcx, 0
 11492 00007A29 7413                    	je .L_tc_recycle_frame_done_0059
 11493 00007A2B 4D8B11                  	mov r10, qword [r9]
 11494 00007A2E 4D8910                  	mov qword [r8], r10
 11495 00007A31 4983E808                	sub r8, 8
 11496 00007A35 4983E908                	sub r9, 8
 11497 00007A39 48FFC9                  	dec rcx
 11498 00007A3C EBE7                    	jmp .L_tc_recycle_frame_loop_0059
 11499                                  .L_tc_recycle_frame_done_0059:
 11500 00007A3E 498D6008                	lea rsp, [r8 + 8]
 11501 00007A42 5D                      	pop rbp ; restore the old rbp
 11502 00007A43 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11503 00007A46 E9E3010000              	jmp .L_if_end_002c
 11504                                  .L_if_else_002c:
 11505                                  	; preparing a non-tail-call
 11506 00007A4B 488B4528                	mov rax, PARAM(1)	; param b
 11507 00007A4F 50                      	push rax
 11508 00007A50 6A01                    	push 1	; arg count
 11509 00007A52 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11510 00007A5A 803805                  	cmp byte [rax], T_undefined
 11511 00007A5D 0F84C5FA0000            	je L_error_fvar_undefined
 11512 00007A63 803804                  	cmp byte [rax], T_closure
 11513 00007A66 0F8540FB0000            	jne L_error_non_closure
 11514 00007A6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11515 00007A6F FF5009                  	call SOB_CLOSURE_CODE(rax)
 11516 00007A72 483D[02000000]          	cmp rax, sob_boolean_false
 11517 00007A78 0F8493000000            	je .L_if_else_002b
 11518                                  	; preparing a tail-call
 11519 00007A7E 488B4528                	mov rax, PARAM(1)	; param b
 11520 00007A82 50                      	push rax
 11521                                  	; preparing a non-tail-call
 11522 00007A83 488B4520                	mov rax, PARAM(0)	; param a
 11523 00007A87 50                      	push rax
 11524 00007A88 6A01                    	push 1	; arg count
 11525 00007A8A 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11526 00007A92 803805                  	cmp byte [rax], T_undefined
 11527 00007A95 0F848DFA0000            	je L_error_fvar_undefined
 11528 00007A9B 803804                  	cmp byte [rax], T_closure
 11529 00007A9E 0F8508FB0000            	jne L_error_non_closure
 11530 00007AA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11531 00007AA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11532 00007AAA 50                      	push rax
 11533 00007AAB 6A02                    	push 2	; arg count
 11534 00007AAD 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11535 00007AB5 803805                  	cmp byte [rax], T_undefined
 11536 00007AB8 0F846AFA0000            	je L_error_fvar_undefined
 11537 00007ABE 803804                  	cmp byte [rax], T_closure
 11538 00007AC1 0F85E5FA0000            	jne L_error_non_closure
 11539 00007AC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11540 00007ACA FF7508                  	push qword [rbp + 8 * 1]
 11541                                   ; old ret addr
 11542 00007ACD FF7500                  	push qword [rbp]
 11543                                   ; restore the old rbp
 11544 00007AD0 BB02000000              	mov rbx, 2
 11545 00007AD5 4883C303                	add rbx, 3
 11546 00007AD9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11547 00007ADD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11548 00007AE2 4C8D4DF8                	lea r9, [rbp - 8]
 11549 00007AE6 B906000000              	mov rcx, 6
 11550                                  .L_tc_recycle_frame_loop_005a:
 11551 00007AEB 4883F900                	cmp rcx, 0
 11552 00007AEF 7413                    	je .L_tc_recycle_frame_done_005a
 11553 00007AF1 4D8B11                  	mov r10, qword [r9]
 11554 00007AF4 4D8910                  	mov qword [r8], r10
 11555 00007AF7 4983E808                	sub r8, 8
 11556 00007AFB 4983E908                	sub r9, 8
 11557 00007AFF 48FFC9                  	dec rcx
 11558 00007B02 EBE7                    	jmp .L_tc_recycle_frame_loop_005a
 11559                                  .L_tc_recycle_frame_done_005a:
 11560 00007B04 498D6008                	lea rsp, [r8 + 8]
 11561 00007B08 5D                      	pop rbp ; restore the old rbp
 11562 00007B09 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11563 00007B0C E91D010000              	jmp .L_if_end_002b
 11564                                  .L_if_else_002b:
 11565                                  	; preparing a non-tail-call
 11566 00007B11 488B4528                	mov rax, PARAM(1)	; param b
 11567 00007B15 50                      	push rax
 11568 00007B16 6A01                    	push 1	; arg count
 11569 00007B18 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11570 00007B20 803805                  	cmp byte [rax], T_undefined
 11571 00007B23 0F84FFF90000            	je L_error_fvar_undefined
 11572 00007B29 803804                  	cmp byte [rax], T_closure
 11573 00007B2C 0F857AFA0000            	jne L_error_non_closure
 11574 00007B32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11575 00007B35 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11576 00007B38 483D[02000000]          	cmp rax, sob_boolean_false
 11577 00007B3E 0F8490000000            	je .L_if_else_002a
 11578                                  	; preparing a tail-call
 11579 00007B44 488B4528                	mov rax, PARAM(1)	; param b
 11580 00007B48 50                      	push rax
 11581                                  	; preparing a non-tail-call
 11582 00007B49 488B4520                	mov rax, PARAM(0)	; param a
 11583 00007B4D 50                      	push rax
 11584 00007B4E 6A01                    	push 1	; arg count
 11585 00007B50 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11586 00007B58 803805                  	cmp byte [rax], T_undefined
 11587 00007B5B 0F84C7F90000            	je L_error_fvar_undefined
 11588 00007B61 803804                  	cmp byte [rax], T_closure
 11589 00007B64 0F8542FA0000            	jne L_error_non_closure
 11590 00007B6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11591 00007B6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11592 00007B70 50                      	push rax
 11593 00007B71 6A02                    	push 2	; arg count
 11594 00007B73 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11595 00007B7B 803805                  	cmp byte [rax], T_undefined
 11596 00007B7E 0F84A4F90000            	je L_error_fvar_undefined
 11597 00007B84 803804                  	cmp byte [rax], T_closure
 11598 00007B87 0F851FFA0000            	jne L_error_non_closure
 11599 00007B8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11600 00007B90 FF7508                  	push qword [rbp + 8 * 1]
 11601                                   ; old ret addr
 11602 00007B93 FF7500                  	push qword [rbp]
 11603                                   ; restore the old rbp
 11604 00007B96 BB02000000              	mov rbx, 2
 11605 00007B9B 4883C303                	add rbx, 3
 11606 00007B9F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11607 00007BA3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11608 00007BA8 4C8D4DF8                	lea r9, [rbp - 8]
 11609 00007BAC B906000000              	mov rcx, 6
 11610                                  .L_tc_recycle_frame_loop_005b:
 11611 00007BB1 4883F900                	cmp rcx, 0
 11612 00007BB5 7413                    	je .L_tc_recycle_frame_done_005b
 11613 00007BB7 4D8B11                  	mov r10, qword [r9]
 11614 00007BBA 4D8910                  	mov qword [r8], r10
 11615 00007BBD 4983E808                	sub r8, 8
 11616 00007BC1 4983E908                	sub r9, 8
 11617 00007BC5 48FFC9                  	dec rcx
 11618 00007BC8 EBE7                    	jmp .L_tc_recycle_frame_loop_005b
 11619                                  .L_tc_recycle_frame_done_005b:
 11620 00007BCA 498D6008                	lea rsp, [r8 + 8]
 11621 00007BCE 5D                      	pop rbp ; restore the old rbp
 11622 00007BCF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11623 00007BD2 EB5A                    	jmp .L_if_end_002a
 11624                                  .L_if_else_002a:
 11625                                  	; preparing a tail-call
 11626 00007BD4 6A00                    	push 0	; arg count
 11627 00007BD6 488B4510                	mov rax, ENV
 11628 00007BDA 488B00                  	mov rax, qword [rax + 8 * 0]
 11629 00007BDD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11630 00007BE0 803804                  	cmp byte [rax], T_closure
 11631 00007BE3 0F85C3F90000            	jne L_error_non_closure
 11632 00007BE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11633 00007BEC FF7508                  	push qword [rbp + 8 * 1]
 11634                                   ; old ret addr
 11635 00007BEF FF7500                  	push qword [rbp]
 11636                                   ; restore the old rbp
 11637 00007BF2 BB00000000              	mov rbx, 0
 11638 00007BF7 4883C303                	add rbx, 3
 11639 00007BFB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11640 00007BFF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11641 00007C04 4C8D4DF8                	lea r9, [rbp - 8]
 11642 00007C08 B904000000              	mov rcx, 4
 11643                                  .L_tc_recycle_frame_loop_005c:
 11644 00007C0D 4883F900                	cmp rcx, 0
 11645 00007C11 7413                    	je .L_tc_recycle_frame_done_005c
 11646 00007C13 4D8B11                  	mov r10, qword [r9]
 11647 00007C16 4D8910                  	mov qword [r8], r10
 11648 00007C19 4983E808                	sub r8, 8
 11649 00007C1D 4983E908                	sub r9, 8
 11650 00007C21 48FFC9                  	dec rcx
 11651 00007C24 EBE7                    	jmp .L_tc_recycle_frame_loop_005c
 11652                                  .L_tc_recycle_frame_done_005c:
 11653 00007C26 498D6008                	lea rsp, [r8 + 8]
 11654 00007C2A 5D                      	pop rbp ; restore the old rbp
 11655 00007C2B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11656                                  .L_if_end_002a:
 11657                                  .L_if_end_002b:
 11658                                  .L_if_end_002c:
 11659 00007C2E E9CB050000              	jmp .L_if_end_0035
 11660                                  .L_if_else_0035:
 11661                                  	; preparing a non-tail-call
 11662 00007C33 488B4520                	mov rax, PARAM(0)	; param a
 11663 00007C37 50                      	push rax
 11664 00007C38 6A01                    	push 1	; arg count
 11665 00007C3A 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11666 00007C42 803805                  	cmp byte [rax], T_undefined
 11667 00007C45 0F84DDF80000            	je L_error_fvar_undefined
 11668 00007C4B 803804                  	cmp byte [rax], T_closure
 11669 00007C4E 0F8558F90000            	jne L_error_non_closure
 11670 00007C54 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11671 00007C57 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11672 00007C5A 483D[02000000]          	cmp rax, sob_boolean_false
 11673 00007C60 0F8487020000            	je .L_if_else_0034
 11674                                  	; preparing a non-tail-call
 11675 00007C66 488B4528                	mov rax, PARAM(1)	; param b
 11676 00007C6A 50                      	push rax
 11677 00007C6B 6A01                    	push 1	; arg count
 11678 00007C6D 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11679 00007C75 803805                  	cmp byte [rax], T_undefined
 11680 00007C78 0F84AAF80000            	je L_error_fvar_undefined
 11681 00007C7E 803804                  	cmp byte [rax], T_closure
 11682 00007C81 0F8525F90000            	jne L_error_non_closure
 11683 00007C87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11684 00007C8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11685 00007C8D 483D[02000000]          	cmp rax, sob_boolean_false
 11686 00007C93 0F8493000000            	je .L_if_else_002f
 11687                                  	; preparing a tail-call
 11688                                  	; preparing a non-tail-call
 11689 00007C99 488B4528                	mov rax, PARAM(1)	; param b
 11690 00007C9D 50                      	push rax
 11691 00007C9E 6A01                    	push 1	; arg count
 11692 00007CA0 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11693 00007CA8 803805                  	cmp byte [rax], T_undefined
 11694 00007CAB 0F8477F80000            	je L_error_fvar_undefined
 11695 00007CB1 803804                  	cmp byte [rax], T_closure
 11696 00007CB4 0F85F2F80000            	jne L_error_non_closure
 11697 00007CBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 11698 00007CBD FF5009                  	call SOB_CLOSURE_CODE(rax)
 11699 00007CC0 50                      	push rax
 11700 00007CC1 488B4520                	mov rax, PARAM(0)	; param a
 11701 00007CC5 50                      	push rax
 11702 00007CC6 6A02                    	push 2	; arg count
 11703 00007CC8 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11704 00007CD0 803805                  	cmp byte [rax], T_undefined
 11705 00007CD3 0F844FF80000            	je L_error_fvar_undefined
 11706 00007CD9 803804                  	cmp byte [rax], T_closure
 11707 00007CDC 0F85CAF80000            	jne L_error_non_closure
 11708 00007CE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11709 00007CE5 FF7508                  	push qword [rbp + 8 * 1]
 11710                                   ; old ret addr
 11711 00007CE8 FF7500                  	push qword [rbp]
 11712                                   ; restore the old rbp
 11713 00007CEB BB02000000              	mov rbx, 2
 11714 00007CF0 4883C303                	add rbx, 3
 11715 00007CF4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11716 00007CF8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11717 00007CFD 4C8D4DF8                	lea r9, [rbp - 8]
 11718 00007D01 B906000000              	mov rcx, 6
 11719                                  .L_tc_recycle_frame_loop_005d:
 11720 00007D06 4883F900                	cmp rcx, 0
 11721 00007D0A 7413                    	je .L_tc_recycle_frame_done_005d
 11722 00007D0C 4D8B11                  	mov r10, qword [r9]
 11723 00007D0F 4D8910                  	mov qword [r8], r10
 11724 00007D12 4983E808                	sub r8, 8
 11725 00007D16 4983E908                	sub r9, 8
 11726 00007D1A 48FFC9                  	dec rcx
 11727 00007D1D EBE7                    	jmp .L_tc_recycle_frame_loop_005d
 11728                                  .L_tc_recycle_frame_done_005d:
 11729 00007D1F 498D6008                	lea rsp, [r8 + 8]
 11730 00007D23 5D                      	pop rbp ; restore the old rbp
 11731 00007D24 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11732 00007D27 E9BC010000              	jmp .L_if_end_002f
 11733                                  .L_if_else_002f:
 11734                                  	; preparing a non-tail-call
 11735 00007D2C 488B4528                	mov rax, PARAM(1)	; param b
 11736 00007D30 50                      	push rax
 11737 00007D31 6A01                    	push 1	; arg count
 11738 00007D33 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11739 00007D3B 803805                  	cmp byte [rax], T_undefined
 11740 00007D3E 0F84E4F70000            	je L_error_fvar_undefined
 11741 00007D44 803804                  	cmp byte [rax], T_closure
 11742 00007D47 0F855FF80000            	jne L_error_non_closure
 11743 00007D4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11744 00007D50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11745 00007D53 483D[02000000]          	cmp rax, sob_boolean_false
 11746 00007D59 7470                    	je .L_if_else_002e
 11747                                  	; preparing a tail-call
 11748 00007D5B 488B4528                	mov rax, PARAM(1)	; param b
 11749 00007D5F 50                      	push rax
 11750 00007D60 488B4520                	mov rax, PARAM(0)	; param a
 11751 00007D64 50                      	push rax
 11752 00007D65 6A02                    	push 2	; arg count
 11753 00007D67 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 11754 00007D6F 803805                  	cmp byte [rax], T_undefined
 11755 00007D72 0F84B0F70000            	je L_error_fvar_undefined
 11756 00007D78 803804                  	cmp byte [rax], T_closure
 11757 00007D7B 0F852BF80000            	jne L_error_non_closure
 11758 00007D81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11759 00007D84 FF7508                  	push qword [rbp + 8 * 1]
 11760                                   ; old ret addr
 11761 00007D87 FF7500                  	push qword [rbp]
 11762                                   ; restore the old rbp
 11763 00007D8A BB02000000              	mov rbx, 2
 11764 00007D8F 4883C303                	add rbx, 3
 11765 00007D93 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11766 00007D97 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11767 00007D9C 4C8D4DF8                	lea r9, [rbp - 8]
 11768 00007DA0 B906000000              	mov rcx, 6
 11769                                  .L_tc_recycle_frame_loop_005e:
 11770 00007DA5 4883F900                	cmp rcx, 0
 11771 00007DA9 7413                    	je .L_tc_recycle_frame_done_005e
 11772 00007DAB 4D8B11                  	mov r10, qword [r9]
 11773 00007DAE 4D8910                  	mov qword [r8], r10
 11774 00007DB1 4983E808                	sub r8, 8
 11775 00007DB5 4983E908                	sub r9, 8
 11776 00007DB9 48FFC9                  	dec rcx
 11777 00007DBC EBE7                    	jmp .L_tc_recycle_frame_loop_005e
 11778                                  .L_tc_recycle_frame_done_005e:
 11779 00007DBE 498D6008                	lea rsp, [r8 + 8]
 11780 00007DC2 5D                      	pop rbp ; restore the old rbp
 11781 00007DC3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11782 00007DC6 E91D010000              	jmp .L_if_end_002e
 11783                                  .L_if_else_002e:
 11784                                  	; preparing a non-tail-call
 11785 00007DCB 488B4528                	mov rax, PARAM(1)	; param b
 11786 00007DCF 50                      	push rax
 11787 00007DD0 6A01                    	push 1	; arg count
 11788 00007DD2 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11789 00007DDA 803805                  	cmp byte [rax], T_undefined
 11790 00007DDD 0F8445F70000            	je L_error_fvar_undefined
 11791 00007DE3 803804                  	cmp byte [rax], T_closure
 11792 00007DE6 0F85C0F70000            	jne L_error_non_closure
 11793 00007DEC FF7001                  	push SOB_CLOSURE_ENV(rax)
 11794 00007DEF FF5009                  	call SOB_CLOSURE_CODE(rax)
 11795 00007DF2 483D[02000000]          	cmp rax, sob_boolean_false
 11796 00007DF8 0F8490000000            	je .L_if_else_002d
 11797                                  	; preparing a tail-call
 11798 00007DFE 488B4528                	mov rax, PARAM(1)	; param b
 11799 00007E02 50                      	push rax
 11800                                  	; preparing a non-tail-call
 11801 00007E03 488B4520                	mov rax, PARAM(0)	; param a
 11802 00007E07 50                      	push rax
 11803 00007E08 6A01                    	push 1	; arg count
 11804 00007E0A 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11805 00007E12 803805                  	cmp byte [rax], T_undefined
 11806 00007E15 0F840DF70000            	je L_error_fvar_undefined
 11807 00007E1B 803804                  	cmp byte [rax], T_closure
 11808 00007E1E 0F8588F70000            	jne L_error_non_closure
 11809 00007E24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11810 00007E27 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11811 00007E2A 50                      	push rax
 11812 00007E2B 6A02                    	push 2	; arg count
 11813 00007E2D 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11814 00007E35 803805                  	cmp byte [rax], T_undefined
 11815 00007E38 0F84EAF60000            	je L_error_fvar_undefined
 11816 00007E3E 803804                  	cmp byte [rax], T_closure
 11817 00007E41 0F8565F70000            	jne L_error_non_closure
 11818 00007E47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11819 00007E4A FF7508                  	push qword [rbp + 8 * 1]
 11820                                   ; old ret addr
 11821 00007E4D FF7500                  	push qword [rbp]
 11822                                   ; restore the old rbp
 11823 00007E50 BB02000000              	mov rbx, 2
 11824 00007E55 4883C303                	add rbx, 3
 11825 00007E59 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11826 00007E5D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11827 00007E62 4C8D4DF8                	lea r9, [rbp - 8]
 11828 00007E66 B906000000              	mov rcx, 6
 11829                                  .L_tc_recycle_frame_loop_005f:
 11830 00007E6B 4883F900                	cmp rcx, 0
 11831 00007E6F 7413                    	je .L_tc_recycle_frame_done_005f
 11832 00007E71 4D8B11                  	mov r10, qword [r9]
 11833 00007E74 4D8910                  	mov qword [r8], r10
 11834 00007E77 4983E808                	sub r8, 8
 11835 00007E7B 4983E908                	sub r9, 8
 11836 00007E7F 48FFC9                  	dec rcx
 11837 00007E82 EBE7                    	jmp .L_tc_recycle_frame_loop_005f
 11838                                  .L_tc_recycle_frame_done_005f:
 11839 00007E84 498D6008                	lea rsp, [r8 + 8]
 11840 00007E88 5D                      	pop rbp ; restore the old rbp
 11841 00007E89 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11842 00007E8C EB5A                    	jmp .L_if_end_002d
 11843                                  .L_if_else_002d:
 11844                                  	; preparing a tail-call
 11845 00007E8E 6A00                    	push 0	; arg count
 11846 00007E90 488B4510                	mov rax, ENV
 11847 00007E94 488B00                  	mov rax, qword [rax + 8 * 0]
 11848 00007E97 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11849 00007E9A 803804                  	cmp byte [rax], T_closure
 11850 00007E9D 0F8509F70000            	jne L_error_non_closure
 11851 00007EA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11852 00007EA6 FF7508                  	push qword [rbp + 8 * 1]
 11853                                   ; old ret addr
 11854 00007EA9 FF7500                  	push qword [rbp]
 11855                                   ; restore the old rbp
 11856 00007EAC BB00000000              	mov rbx, 0
 11857 00007EB1 4883C303                	add rbx, 3
 11858 00007EB5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11859 00007EB9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11860 00007EBE 4C8D4DF8                	lea r9, [rbp - 8]
 11861 00007EC2 B904000000              	mov rcx, 4
 11862                                  .L_tc_recycle_frame_loop_0060:
 11863 00007EC7 4883F900                	cmp rcx, 0
 11864 00007ECB 7413                    	je .L_tc_recycle_frame_done_0060
 11865 00007ECD 4D8B11                  	mov r10, qword [r9]
 11866 00007ED0 4D8910                  	mov qword [r8], r10
 11867 00007ED3 4983E808                	sub r8, 8
 11868 00007ED7 4983E908                	sub r9, 8
 11869 00007EDB 48FFC9                  	dec rcx
 11870 00007EDE EBE7                    	jmp .L_tc_recycle_frame_loop_0060
 11871                                  .L_tc_recycle_frame_done_0060:
 11872 00007EE0 498D6008                	lea rsp, [r8 + 8]
 11873 00007EE4 5D                      	pop rbp ; restore the old rbp
 11874 00007EE5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11875                                  .L_if_end_002d:
 11876                                  .L_if_end_002e:
 11877                                  .L_if_end_002f:
 11878 00007EE8 E911030000              	jmp .L_if_end_0034
 11879                                  .L_if_else_0034:
 11880                                  	; preparing a non-tail-call
 11881 00007EED 488B4520                	mov rax, PARAM(0)	; param a
 11882 00007EF1 50                      	push rax
 11883 00007EF2 6A01                    	push 1	; arg count
 11884 00007EF4 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11885 00007EFC 803805                  	cmp byte [rax], T_undefined
 11886 00007EFF 0F8423F60000            	je L_error_fvar_undefined
 11887 00007F05 803804                  	cmp byte [rax], T_closure
 11888 00007F08 0F859EF60000            	jne L_error_non_closure
 11889 00007F0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11890 00007F11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11891 00007F14 483D[02000000]          	cmp rax, sob_boolean_false
 11892 00007F1A 0F8484020000            	je .L_if_else_0033
 11893                                  	; preparing a non-tail-call
 11894 00007F20 488B4528                	mov rax, PARAM(1)	; param b
 11895 00007F24 50                      	push rax
 11896 00007F25 6A01                    	push 1	; arg count
 11897 00007F27 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11898 00007F2F 803805                  	cmp byte [rax], T_undefined
 11899 00007F32 0F84F0F50000            	je L_error_fvar_undefined
 11900 00007F38 803804                  	cmp byte [rax], T_closure
 11901 00007F3B 0F856BF60000            	jne L_error_non_closure
 11902 00007F41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11903 00007F44 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11904 00007F47 483D[02000000]          	cmp rax, sob_boolean_false
 11905 00007F4D 0F8493000000            	je .L_if_else_0032
 11906                                  	; preparing a tail-call
 11907                                  	; preparing a non-tail-call
 11908 00007F53 488B4528                	mov rax, PARAM(1)	; param b
 11909 00007F57 50                      	push rax
 11910 00007F58 6A01                    	push 1	; arg count
 11911 00007F5A 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11912 00007F62 803805                  	cmp byte [rax], T_undefined
 11913 00007F65 0F84BDF50000            	je L_error_fvar_undefined
 11914 00007F6B 803804                  	cmp byte [rax], T_closure
 11915 00007F6E 0F8538F60000            	jne L_error_non_closure
 11916 00007F74 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11917 00007F77 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11918 00007F7A 50                      	push rax
 11919 00007F7B 488B4520                	mov rax, PARAM(0)	; param a
 11920 00007F7F 50                      	push rax
 11921 00007F80 6A02                    	push 2	; arg count
 11922 00007F82 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11923 00007F8A 803805                  	cmp byte [rax], T_undefined
 11924 00007F8D 0F8495F50000            	je L_error_fvar_undefined
 11925 00007F93 803804                  	cmp byte [rax], T_closure
 11926 00007F96 0F8510F60000            	jne L_error_non_closure
 11927 00007F9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11928 00007F9F FF7508                  	push qword [rbp + 8 * 1]
 11929                                   ; old ret addr
 11930 00007FA2 FF7500                  	push qword [rbp]
 11931                                   ; restore the old rbp
 11932 00007FA5 BB02000000              	mov rbx, 2
 11933 00007FAA 4883C303                	add rbx, 3
 11934 00007FAE 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11935 00007FB2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11936 00007FB7 4C8D4DF8                	lea r9, [rbp - 8]
 11937 00007FBB B906000000              	mov rcx, 6
 11938                                  .L_tc_recycle_frame_loop_0061:
 11939 00007FC0 4883F900                	cmp rcx, 0
 11940 00007FC4 7413                    	je .L_tc_recycle_frame_done_0061
 11941 00007FC6 4D8B11                  	mov r10, qword [r9]
 11942 00007FC9 4D8910                  	mov qword [r8], r10
 11943 00007FCC 4983E808                	sub r8, 8
 11944 00007FD0 4983E908                	sub r9, 8
 11945 00007FD4 48FFC9                  	dec rcx
 11946 00007FD7 EBE7                    	jmp .L_tc_recycle_frame_loop_0061
 11947                                  .L_tc_recycle_frame_done_0061:
 11948 00007FD9 498D6008                	lea rsp, [r8 + 8]
 11949 00007FDD 5D                      	pop rbp ; restore the old rbp
 11950 00007FDE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11951 00007FE1 E9BC010000              	jmp .L_if_end_0032
 11952                                  .L_if_else_0032:
 11953                                  	; preparing a non-tail-call
 11954 00007FE6 488B4528                	mov rax, PARAM(1)	; param b
 11955 00007FEA 50                      	push rax
 11956 00007FEB 6A01                    	push 1	; arg count
 11957 00007FED 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11958 00007FF5 803805                  	cmp byte [rax], T_undefined
 11959 00007FF8 0F842AF50000            	je L_error_fvar_undefined
 11960 00007FFE 803804                  	cmp byte [rax], T_closure
 11961 00008001 0F85A5F50000            	jne L_error_non_closure
 11962 00008007 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11963 0000800A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11964 0000800D 483D[02000000]          	cmp rax, sob_boolean_false
 11965 00008013 0F8493000000            	je .L_if_else_0031
 11966                                  	; preparing a tail-call
 11967                                  	; preparing a non-tail-call
 11968 00008019 488B4528                	mov rax, PARAM(1)	; param b
 11969 0000801D 50                      	push rax
 11970 0000801E 6A01                    	push 1	; arg count
 11971 00008020 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11972 00008028 803805                  	cmp byte [rax], T_undefined
 11973 0000802B 0F84F7F40000            	je L_error_fvar_undefined
 11974 00008031 803804                  	cmp byte [rax], T_closure
 11975 00008034 0F8572F50000            	jne L_error_non_closure
 11976 0000803A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11977 0000803D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11978 00008040 50                      	push rax
 11979 00008041 488B4520                	mov rax, PARAM(0)	; param a
 11980 00008045 50                      	push rax
 11981 00008046 6A02                    	push 2	; arg count
 11982 00008048 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 11983 00008050 803805                  	cmp byte [rax], T_undefined
 11984 00008053 0F84CFF40000            	je L_error_fvar_undefined
 11985 00008059 803804                  	cmp byte [rax], T_closure
 11986 0000805C 0F854AF50000            	jne L_error_non_closure
 11987 00008062 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11988 00008065 FF7508                  	push qword [rbp + 8 * 1]
 11989                                   ; old ret addr
 11990 00008068 FF7500                  	push qword [rbp]
 11991                                   ; restore the old rbp
 11992 0000806B BB02000000              	mov rbx, 2
 11993 00008070 4883C303                	add rbx, 3
 11994 00008074 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 11995 00008078 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 11996 0000807D 4C8D4DF8                	lea r9, [rbp - 8]
 11997 00008081 B906000000              	mov rcx, 6
 11998                                  .L_tc_recycle_frame_loop_0062:
 11999 00008086 4883F900                	cmp rcx, 0
 12000 0000808A 7413                    	je .L_tc_recycle_frame_done_0062
 12001 0000808C 4D8B11                  	mov r10, qword [r9]
 12002 0000808F 4D8910                  	mov qword [r8], r10
 12003 00008092 4983E808                	sub r8, 8
 12004 00008096 4983E908                	sub r9, 8
 12005 0000809A 48FFC9                  	dec rcx
 12006 0000809D EBE7                    	jmp .L_tc_recycle_frame_loop_0062
 12007                                  .L_tc_recycle_frame_done_0062:
 12008 0000809F 498D6008                	lea rsp, [r8 + 8]
 12009 000080A3 5D                      	pop rbp ; restore the old rbp
 12010 000080A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12011 000080A7 E9F6000000              	jmp .L_if_end_0031
 12012                                  .L_if_else_0031:
 12013                                  	; preparing a non-tail-call
 12014 000080AC 488B4528                	mov rax, PARAM(1)	; param b
 12015 000080B0 50                      	push rax
 12016 000080B1 6A01                    	push 1	; arg count
 12017 000080B3 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12018 000080BB 803805                  	cmp byte [rax], T_undefined
 12019 000080BE 0F8464F40000            	je L_error_fvar_undefined
 12020 000080C4 803804                  	cmp byte [rax], T_closure
 12021 000080C7 0F85DFF40000            	jne L_error_non_closure
 12022 000080CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12023 000080D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12024 000080D3 483D[02000000]          	cmp rax, sob_boolean_false
 12025 000080D9 746D                    	je .L_if_else_0030
 12026                                  	; preparing a tail-call
 12027 000080DB 488B4528                	mov rax, PARAM(1)	; param b
 12028 000080DF 50                      	push rax
 12029 000080E0 488B4520                	mov rax, PARAM(0)	; param a
 12030 000080E4 50                      	push rax
 12031 000080E5 6A02                    	push 2	; arg count
 12032 000080E7 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12033 000080EF 803805                  	cmp byte [rax], T_undefined
 12034 000080F2 0F8430F40000            	je L_error_fvar_undefined
 12035 000080F8 803804                  	cmp byte [rax], T_closure
 12036 000080FB 0F85ABF40000            	jne L_error_non_closure
 12037 00008101 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12038 00008104 FF7508                  	push qword [rbp + 8 * 1]
 12039                                   ; old ret addr
 12040 00008107 FF7500                  	push qword [rbp]
 12041                                   ; restore the old rbp
 12042 0000810A BB02000000              	mov rbx, 2
 12043 0000810F 4883C303                	add rbx, 3
 12044 00008113 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12045 00008117 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12046 0000811C 4C8D4DF8                	lea r9, [rbp - 8]
 12047 00008120 B906000000              	mov rcx, 6
 12048                                  .L_tc_recycle_frame_loop_0063:
 12049 00008125 4883F900                	cmp rcx, 0
 12050 00008129 7413                    	je .L_tc_recycle_frame_done_0063
 12051 0000812B 4D8B11                  	mov r10, qword [r9]
 12052 0000812E 4D8910                  	mov qword [r8], r10
 12053 00008131 4983E808                	sub r8, 8
 12054 00008135 4983E908                	sub r9, 8
 12055 00008139 48FFC9                  	dec rcx
 12056 0000813C EBE7                    	jmp .L_tc_recycle_frame_loop_0063
 12057                                  .L_tc_recycle_frame_done_0063:
 12058 0000813E 498D6008                	lea rsp, [r8 + 8]
 12059 00008142 5D                      	pop rbp ; restore the old rbp
 12060 00008143 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12061 00008146 EB5A                    	jmp .L_if_end_0030
 12062                                  .L_if_else_0030:
 12063                                  	; preparing a tail-call
 12064 00008148 6A00                    	push 0	; arg count
 12065 0000814A 488B4510                	mov rax, ENV
 12066 0000814E 488B00                  	mov rax, qword [rax + 8 * 0]
 12067 00008151 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12068 00008154 803804                  	cmp byte [rax], T_closure
 12069 00008157 0F854FF40000            	jne L_error_non_closure
 12070 0000815D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12071 00008160 FF7508                  	push qword [rbp + 8 * 1]
 12072                                   ; old ret addr
 12073 00008163 FF7500                  	push qword [rbp]
 12074                                   ; restore the old rbp
 12075 00008166 BB00000000              	mov rbx, 0
 12076 0000816B 4883C303                	add rbx, 3
 12077 0000816F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12078 00008173 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12079 00008178 4C8D4DF8                	lea r9, [rbp - 8]
 12080 0000817C B904000000              	mov rcx, 4
 12081                                  .L_tc_recycle_frame_loop_0064:
 12082 00008181 4883F900                	cmp rcx, 0
 12083 00008185 7413                    	je .L_tc_recycle_frame_done_0064
 12084 00008187 4D8B11                  	mov r10, qword [r9]
 12085 0000818A 4D8910                  	mov qword [r8], r10
 12086 0000818D 4983E808                	sub r8, 8
 12087 00008191 4983E908                	sub r9, 8
 12088 00008195 48FFC9                  	dec rcx
 12089 00008198 EBE7                    	jmp .L_tc_recycle_frame_loop_0064
 12090                                  .L_tc_recycle_frame_done_0064:
 12091 0000819A 498D6008                	lea rsp, [r8 + 8]
 12092 0000819E 5D                      	pop rbp ; restore the old rbp
 12093 0000819F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12094                                  .L_if_end_0030:
 12095                                  .L_if_end_0031:
 12096                                  .L_if_end_0032:
 12097 000081A2 EB5A                    	jmp .L_if_end_0033
 12098                                  .L_if_else_0033:
 12099                                  	; preparing a tail-call
 12100 000081A4 6A00                    	push 0	; arg count
 12101 000081A6 488B4510                	mov rax, ENV
 12102 000081AA 488B00                  	mov rax, qword [rax + 8 * 0]
 12103 000081AD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12104 000081B0 803804                  	cmp byte [rax], T_closure
 12105 000081B3 0F85F3F30000            	jne L_error_non_closure
 12106 000081B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12107 000081BC FF7508                  	push qword [rbp + 8 * 1]
 12108                                   ; old ret addr
 12109 000081BF FF7500                  	push qword [rbp]
 12110                                   ; restore the old rbp
 12111 000081C2 BB00000000              	mov rbx, 0
 12112 000081C7 4883C303                	add rbx, 3
 12113 000081CB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12114 000081CF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12115 000081D4 4C8D4DF8                	lea r9, [rbp - 8]
 12116 000081D8 B904000000              	mov rcx, 4
 12117                                  .L_tc_recycle_frame_loop_0065:
 12118 000081DD 4883F900                	cmp rcx, 0
 12119 000081E1 7413                    	je .L_tc_recycle_frame_done_0065
 12120 000081E3 4D8B11                  	mov r10, qword [r9]
 12121 000081E6 4D8910                  	mov qword [r8], r10
 12122 000081E9 4983E808                	sub r8, 8
 12123 000081ED 4983E908                	sub r9, 8
 12124 000081F1 48FFC9                  	dec rcx
 12125 000081F4 EBE7                    	jmp .L_tc_recycle_frame_loop_0065
 12126                                  .L_tc_recycle_frame_done_0065:
 12127 000081F6 498D6008                	lea rsp, [r8 + 8]
 12128 000081FA 5D                      	pop rbp ; restore the old rbp
 12129 000081FB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12130                                  .L_if_end_0033:
 12131                                  .L_if_end_0034:
 12132                                  .L_if_end_0035:
 12133 000081FE C9                      	leave
 12134 000081FF C22000                  	ret AND_KILL_FRAME(2)
 12135                                  .L_lambda_simple_end_003f:	; new closure is in rax
 12136 00008202 50                      	push rax
 12137 00008203 6A01                    	push 1	; arg count
 12138 00008205 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12139 0000820A E846F40000              	call malloc
 12140 0000820F 50                      	push rax
 12141 00008210 BF08000000              	mov rdi, 8 * 1	; new rib
 12142 00008215 E83BF40000              	call malloc
 12143 0000821A 50                      	push rax
 12144 0000821B BF10000000              	mov rdi, 8 * 2	; extended env
 12145 00008220 E830F40000              	call malloc
 12146 00008225 488B7D10                	mov rdi, ENV
 12147 00008229 BE00000000              	mov rsi, 0
 12148 0000822E BA01000000              	mov rdx, 1
 12149                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 12150 00008233 4883FE01                	cmp rsi, 1
 12151 00008237 7410                    	je .L_lambda_simple_env_end_0040
 12152 00008239 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12153 0000823D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12154 00008241 48FFC6                  	inc rsi
 12155 00008244 48FFC2                  	inc rdx
 12156 00008247 EBEA                    	jmp .L_lambda_simple_env_loop_0040
 12157                                  .L_lambda_simple_env_end_0040:
 12158 00008249 5B                      	pop rbx
 12159 0000824A BE00000000              	mov rsi, 0
 12160                                  .L_lambda_simple_params_loop_0040:	; copy params
 12161 0000824F 4883FE01                	cmp rsi, 1
 12162 00008253 740E                    	je .L_lambda_simple_params_end_0040
 12163 00008255 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12164 0000825A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12165 0000825E 48FFC6                  	inc rsi
 12166 00008261 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 12167                                  .L_lambda_simple_params_end_0040:
 12168 00008263 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12169 00008266 4889C3                  	mov rbx, rax
 12170 00008269 58                      	pop rax
 12171 0000826A C60004                  	mov byte [rax], T_closure
 12172 0000826D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12173 00008271 48C74009[7E820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 12174 00008279 E907020000              	jmp .L_lambda_simple_end_0040
 12175                                  .L_lambda_simple_code_0040:	; lambda-simple body
 12176 0000827E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12177 00008284 740B                    	je .L_lambda_simple_arity_check_ok_0040
 12178 00008286 FF742410                	push qword [rsp + 8 * 2]
 12179 0000828A 6A01                    	push 1
 12180 0000828C E97DF30000              	jmp L_error_incorrect_arity_simple
 12181                                  .L_lambda_simple_arity_check_ok_0040:
 12182 00008291 C8000000                	enter 0, 0
 12183 00008295 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12184 0000829A E8B6F30000              	call malloc
 12185 0000829F 50                      	push rax
 12186 000082A0 BF08000000              	mov rdi, 8 * 1	; new rib
 12187 000082A5 E8ABF30000              	call malloc
 12188 000082AA 50                      	push rax
 12189 000082AB BF18000000              	mov rdi, 8 * 3	; extended env
 12190 000082B0 E8A0F30000              	call malloc
 12191 000082B5 488B7D10                	mov rdi, ENV
 12192 000082B9 4831F6                  	 xor rsi, rsi
 12193 000082BC 4831D2                  	 xor rdx, rdx
 12194 000082BF 48FFC2                  	inc rdx
 12195                                  .L_lambda_opt_env_loop_000c:	; 
 12196 000082C2 4883FE02                	cmp rsi, 2
 12197 000082C6 7410                    	je .L_lambda_opt_env_end_000c
 12198 000082C8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12199 000082CC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12200 000082D0 48FFC6                  	inc rsi
 12201 000082D3 48FFC2                  	inc rdx
 12202 000082D6 EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12203                                  .L_lambda_opt_env_end_000c:
 12204 000082D8 5B                      	pop rbx
 12205 000082D9 4831F6                  	xor rsi, rsi
 12206                                  .L_lambda_opt_params_loop_000c:	; copy params
 12207 000082DC 4883FE01                	cmp rsi, 1
 12208 000082E0 740E                    	je .L_lambda_opt_params_end_000c
 12209 000082E2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12210 000082E7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12211 000082EB 48FFC6                  	inc rsi
 12212 000082EE EBEC                    	jmp .L_lambda_opt_params_loop_000c
 12213                                  .L_lambda_opt_params_end_000c:
 12214 000082F0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12215 000082F3 4889C3                  	mov rbx, rax
 12216 000082F6 58                      	pop rax
 12217 000082F7 C60004                  	mov byte [rax], T_closure
 12218 000082FA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12219 000082FE 48C74009[0B830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12220 00008306 E976010000              	jmp .L_lambda_opt_end_000c
 12221                                  .L_lambda_opt_code_000c:
 12222 0000830B 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 12223 00008310 4983FF00                	cmp r15, 0
 12224 00008314 7409                    	je .L_lambda_opt_arity_check_exact_000c
 12225 00008316 7F57                    	jg .L_lambda_opt_arity_check_more_000c
 12226 00008318 6A00                    	push 0
 12227 0000831A E903F30000              	jmp L_error_incorrect_arity_opt
 12228                                  .L_lambda_opt_arity_check_exact_000c: ;Exact case
 12229 0000831F 4C8B0424                	mov r8, qword [rsp -8 * 0]
 12230 00008323 4C894424F8              	mov qword [rsp -8], r8
 12231 00008328 4C8B442408              	mov r8, qword [rsp +8]
 12232 0000832D 4C890424                	mov qword [rsp +8 * 0], r8
 12233 00008331 4C8B442410              	mov r8, qword [rsp +8 * 2]
 12234 00008336 4C89C1                  	mov rcx, r8
 12235 00008339 49FFC0                  	inc r8
 12236 0000833C 4C89442408              	mov qword [rsp +8], r8
 12237 00008341 4889E2                  	mov rdx, rsp
 12238 00008344 4883C218                	add rdx, 24
 12239                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000c:
 12240 00008348 4883F900                	cmp rcx, 0
 12241 0000834C 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000c
 12242 0000834E 4C8B02                  	mov r8, qword [rdx]
 12243 00008351 4C8942F8                	mov qword [rdx - 8], r8
 12244 00008355 4883C208                	add rdx, 8
 12245 00008359 48FFC9                  	dec rcx
 12246 0000835C EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000c
 12247                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000c:
 12248 0000835E 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 12249 00008366 4883EC08                	sub rsp, 8
 12250 0000836A E985000000              	jmp .L_lambda_opt_stack_adjusted_000c
 12251                                  .L_lambda_opt_arity_check_more_000c:
 12252 0000836F 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 12253 00008374 4D89C4                  	mov r12, r8
 12254 00008377 4C89C1                  	mov rcx, r8
 12255 0000837A 4D8D6802                	lea r13, [r8 + 2] 
 12256 0000837E 4883E900                	sub rcx, 0
 12257 00008382 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 12258 00008387 49BE-                   	mov r14, sob_nil
 12258 00008389 [0100000000000000] 
 12259                                  .L_lambda_opt_create_list_of_opt_params_000c:
 12260 00008391 4883F900                	cmp rcx, 0
 12261 00008395 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000c
 12262 00008397 BF11000000              	mov rdi, 17
 12263 0000839C E8B4F20000              	call malloc
 12264 000083A1 C60021                  	mov byte [rax], T_pair
 12265 000083A4 498B1B                  	mov rbx, qword [r11]
 12266 000083A7 48895801                	mov qword [rax +1], rbx
 12267 000083AB 4C897009                	mov qword [rax + 1 + 8], r14
 12268 000083AF 4989C6                  	mov r14, rax
 12269 000083B2 48FFC9                  	dec rcx
 12270 000083B5 4983EB08                	sub r11, 8
 12271 000083B9 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000c
 12272                                  .L_lambda_opt_create_list_of_opt_params_end_000c:
 12273 000083BB 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
 12274 000083C0 4D8932                  	mov qword [r10], r14
 12275 000083C3 4E8D2CED00000000        	lea r13, [8 * r13]
 12276 000083CB 4901E5                  	add r13, rsp
 12277 000083CE B904000000              	mov rcx, 4 + 0
 12278                                  .L_lambda_opt_stack_shrink_loop_000c:
 12279 000083D3 4883F900                	cmp rcx, 0
 12280 000083D7 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_000c
 12281 000083D9 4D8B1A                  	mov r11, qword [r10]
 12282 000083DC 4D895D00                	mov qword [r13], r11
 12283 000083E0 4983EA08                	sub r10, 8
 12284 000083E4 4983ED08                	sub r13, 8
 12285 000083E8 48FFC9                  	dec rcx
 12286 000083EB EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12287                                  .L_lambda_opt_stack_shrink_loop_exit_000c:
 12288 000083ED 4983C508                	add r13, 8
 12289 000083F1 4C89EC                  	mov rsp, r13
 12290                                  .L_lambda_opt_stack_adjusted_000c:
 12291 000083F4 48C744241001000000      	mov qword [rsp + 8*2], 1
 12292 000083FD C8000000                	enter 0, 0
 12293                                  	; preparing a tail-call
 12294 00008401 488B4520                	mov rax, PARAM(0)	; param s
 12295 00008405 50                      	push rax
 12296 00008406 48B8-                   	mov rax, L_constants + 2270
 12296 00008408 [DE08000000000000] 
 12297 00008410 50                      	push rax
 12298 00008411 488B4510                	mov rax, ENV
 12299 00008415 488B00                  	mov rax, qword [rax + 8 * 0]
 12300 00008418 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12301 0000841B 50                      	push rax
 12302 0000841C 6A03                    	push 3	; arg count
 12303 0000841E 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12304 00008426 803805                  	cmp byte [rax], T_undefined
 12305 00008429 0F84F9F00000            	je L_error_fvar_undefined
 12306 0000842F 803804                  	cmp byte [rax], T_closure
 12307 00008432 0F8574F10000            	jne L_error_non_closure
 12308 00008438 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12309 0000843B FF7508                  	push qword [rbp + 8 * 1]
 12310                                   ; old ret addr
 12311 0000843E FF7500                  	push qword [rbp]
 12312                                   ; restore the old rbp
 12313 00008441 BB03000000              	mov rbx, 3
 12314 00008446 4883C303                	add rbx, 3
 12315 0000844A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12316 0000844E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12317 00008453 4C8D4DF8                	lea r9, [rbp - 8]
 12318 00008457 B907000000              	mov rcx, 7
 12319                                  .L_tc_recycle_frame_loop_0066:
 12320 0000845C 4883F900                	cmp rcx, 0
 12321 00008460 7413                    	je .L_tc_recycle_frame_done_0066
 12322 00008462 4D8B11                  	mov r10, qword [r9]
 12323 00008465 4D8910                  	mov qword [r8], r10
 12324 00008468 4983E808                	sub r8, 8
 12325 0000846C 4983E908                	sub r9, 8
 12326 00008470 48FFC9                  	dec rcx
 12327 00008473 EBE7                    	jmp .L_tc_recycle_frame_loop_0066
 12328                                  .L_tc_recycle_frame_done_0066:
 12329 00008475 498D6008                	lea rsp, [r8 + 8]
 12330 00008479 5D                      	pop rbp ; restore the old rbp
 12331 0000847A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12332 0000847D C9                      	leave
 12333 0000847E C21800                  	ret 8 * (2 + 1)
 12334                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12335 00008481 C9                      	leave
 12336 00008482 C21800                  	ret AND_KILL_FRAME(1)
 12337                                  .L_lambda_simple_end_0040:	; new closure is in rax
 12338 00008485 803804                  	cmp byte [rax], T_closure
 12339 00008488 0F851EF10000            	jne L_error_non_closure
 12340 0000848E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12341 00008491 FF7508                  	push qword [rbp + 8 * 1]
 12342                                   ; old ret addr
 12343 00008494 FF7500                  	push qword [rbp]
 12344                                   ; restore the old rbp
 12345 00008497 BB01000000              	mov rbx, 1
 12346 0000849C 4883C303                	add rbx, 3
 12347 000084A0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12348 000084A4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12349 000084A9 4C8D4DF8                	lea r9, [rbp - 8]
 12350 000084AD B905000000              	mov rcx, 5
 12351                                  .L_tc_recycle_frame_loop_0058:
 12352 000084B2 4883F900                	cmp rcx, 0
 12353 000084B6 7413                    	je .L_tc_recycle_frame_done_0058
 12354 000084B8 4D8B11                  	mov r10, qword [r9]
 12355 000084BB 4D8910                  	mov qword [r8], r10
 12356 000084BE 4983E808                	sub r8, 8
 12357 000084C2 4983E908                	sub r9, 8
 12358 000084C6 48FFC9                  	dec rcx
 12359 000084C9 EBE7                    	jmp .L_tc_recycle_frame_loop_0058
 12360                                  .L_tc_recycle_frame_done_0058:
 12361 000084CB 498D6008                	lea rsp, [r8 + 8]
 12362 000084CF 5D                      	pop rbp ; restore the old rbp
 12363 000084D0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12364 000084D3 C9                      	leave
 12365 000084D4 C21800                  	ret AND_KILL_FRAME(1)
 12366                                  .L_lambda_simple_end_003e:	; new closure is in rax
 12367 000084D7 803804                  	cmp byte [rax], T_closure
 12368 000084DA 0F85CCF00000            	jne L_error_non_closure
 12369 000084E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12370 000084E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12371 000084E6 48890425[C50D0000]      	mov qword [free_var_0], rax
 12372 000084EE 48B8-                   	mov rax, sob_void
 12372 000084F0 [0000000000000000] 
 12373                                  
 12374 000084F8 4889C7                  	mov rdi, rax
 12375 000084FB E8AAF30000              	call print_sexpr_if_not_void
 12376                                  	; preparing a non-tail-call
 12377 00008500 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12378 00008505 E84BF10000              	call malloc
 12379 0000850A 50                      	push rax
 12380 0000850B BF00000000              	mov rdi, 8 * 0	; new rib
 12381 00008510 E840F10000              	call malloc
 12382 00008515 50                      	push rax
 12383 00008516 BF08000000              	mov rdi, 8 * 1	; extended env
 12384 0000851B E835F10000              	call malloc
 12385 00008520 488B7D10                	mov rdi, ENV
 12386 00008524 BE00000000              	mov rsi, 0
 12387 00008529 BA01000000              	mov rdx, 1
 12388                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 12389 0000852E 4883FE00                	cmp rsi, 0
 12390 00008532 7410                    	je .L_lambda_simple_env_end_0041
 12391 00008534 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12392 00008538 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12393 0000853C 48FFC6                  	inc rsi
 12394 0000853F 48FFC2                  	inc rdx
 12395 00008542 EBEA                    	jmp .L_lambda_simple_env_loop_0041
 12396                                  .L_lambda_simple_env_end_0041:
 12397 00008544 5B                      	pop rbx
 12398 00008545 BE00000000              	mov rsi, 0
 12399                                  .L_lambda_simple_params_loop_0041:	; copy params
 12400 0000854A 4883FE00                	cmp rsi, 0
 12401 0000854E 740E                    	je .L_lambda_simple_params_end_0041
 12402 00008550 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12403 00008555 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12404 00008559 48FFC6                  	inc rsi
 12405 0000855C EBEC                    	jmp .L_lambda_simple_params_loop_0041
 12406                                  .L_lambda_simple_params_end_0041:
 12407 0000855E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12408 00008561 4889C3                  	mov rbx, rax
 12409 00008564 58                      	pop rax
 12410 00008565 C60004                  	mov byte [rax], T_closure
 12411 00008568 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12412 0000856C 48C74009[79850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 12413 00008574 E992000000              	jmp .L_lambda_simple_end_0041
 12414                                  .L_lambda_simple_code_0041:	; lambda-simple body
 12415 00008579 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12416 0000857F 740B                    	je .L_lambda_simple_arity_check_ok_0041
 12417 00008581 FF742410                	push qword [rsp + 8 * 2]
 12418 00008585 6A00                    	push 0
 12419 00008587 E982F00000              	jmp L_error_incorrect_arity_simple
 12420                                  .L_lambda_simple_arity_check_ok_0041:
 12421 0000858C C8000000                	enter 0, 0
 12422                                  	; preparing a tail-call
 12423 00008590 48B8-                   	mov rax, L_constants + 2187
 12423 00008592 [8B08000000000000] 
 12424 0000859A 50                      	push rax
 12425 0000859B 48B8-                   	mov rax, L_constants + 2298
 12425 0000859D [FA08000000000000] 
 12426 000085A5 50                      	push rax
 12427 000085A6 6A02                    	push 2	; arg count
 12428 000085A8 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 12429 000085B0 803805                  	cmp byte [rax], T_undefined
 12430 000085B3 0F846FEF0000            	je L_error_fvar_undefined
 12431 000085B9 803804                  	cmp byte [rax], T_closure
 12432 000085BC 0F85EAEF0000            	jne L_error_non_closure
 12433 000085C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12434 000085C5 FF7508                  	push qword [rbp + 8 * 1]
 12435                                   ; old ret addr
 12436 000085C8 FF7500                  	push qword [rbp]
 12437                                   ; restore the old rbp
 12438 000085CB BB02000000              	mov rbx, 2
 12439 000085D0 4883C303                	add rbx, 3
 12440 000085D4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12441 000085D8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12442 000085DD 4C8D4DF8                	lea r9, [rbp - 8]
 12443 000085E1 B906000000              	mov rcx, 6
 12444                                  .L_tc_recycle_frame_loop_0067:
 12445 000085E6 4883F900                	cmp rcx, 0
 12446 000085EA 7413                    	je .L_tc_recycle_frame_done_0067
 12447 000085EC 4D8B11                  	mov r10, qword [r9]
 12448 000085EF 4D8910                  	mov qword [r8], r10
 12449 000085F2 4983E808                	sub r8, 8
 12450 000085F6 4983E908                	sub r9, 8
 12451 000085FA 48FFC9                  	dec rcx
 12452 000085FD EBE7                    	jmp .L_tc_recycle_frame_loop_0067
 12453                                  .L_tc_recycle_frame_done_0067:
 12454 000085FF 498D6008                	lea rsp, [r8 + 8]
 12455 00008603 5D                      	pop rbp ; restore the old rbp
 12456 00008604 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12457 00008607 C9                      	leave
 12458 00008608 C21000                  	ret AND_KILL_FRAME(0)
 12459                                  .L_lambda_simple_end_0041:	; new closure is in rax
 12460 0000860B 50                      	push rax
 12461 0000860C 6A01                    	push 1	; arg count
 12462 0000860E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12463 00008613 E83DF00000              	call malloc
 12464 00008618 50                      	push rax
 12465 00008619 BF00000000              	mov rdi, 8 * 0	; new rib
 12466 0000861E E832F00000              	call malloc
 12467 00008623 50                      	push rax
 12468 00008624 BF08000000              	mov rdi, 8 * 1	; extended env
 12469 00008629 E827F00000              	call malloc
 12470 0000862E 488B7D10                	mov rdi, ENV
 12471 00008632 BE00000000              	mov rsi, 0
 12472 00008637 BA01000000              	mov rdx, 1
 12473                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 12474 0000863C 4883FE00                	cmp rsi, 0
 12475 00008640 7410                    	je .L_lambda_simple_env_end_0042
 12476 00008642 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12477 00008646 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12478 0000864A 48FFC6                  	inc rsi
 12479 0000864D 48FFC2                  	inc rdx
 12480 00008650 EBEA                    	jmp .L_lambda_simple_env_loop_0042
 12481                                  .L_lambda_simple_env_end_0042:
 12482 00008652 5B                      	pop rbx
 12483 00008653 BE00000000              	mov rsi, 0
 12484                                  .L_lambda_simple_params_loop_0042:	; copy params
 12485 00008658 4883FE00                	cmp rsi, 0
 12486 0000865C 740E                    	je .L_lambda_simple_params_end_0042
 12487 0000865E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12488 00008663 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12489 00008667 48FFC6                  	inc rsi
 12490 0000866A EBEC                    	jmp .L_lambda_simple_params_loop_0042
 12491                                  .L_lambda_simple_params_end_0042:
 12492 0000866C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12493 0000866F 4889C3                  	mov rbx, rax
 12494 00008672 58                      	pop rax
 12495 00008673 C60004                  	mov byte [rax], T_closure
 12496 00008676 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12497 0000867A 48C74009[87860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 12498 00008682 E9BB0D0000              	jmp .L_lambda_simple_end_0042
 12499                                  .L_lambda_simple_code_0042:	; lambda-simple body
 12500 00008687 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12501 0000868D 740B                    	je .L_lambda_simple_arity_check_ok_0042
 12502 0000868F FF742410                	push qword [rsp + 8 * 2]
 12503 00008693 6A01                    	push 1
 12504 00008695 E974EF0000              	jmp L_error_incorrect_arity_simple
 12505                                  .L_lambda_simple_arity_check_ok_0042:
 12506 0000869A C8000000                	enter 0, 0
 12507                                  	; preparing a tail-call
 12508 0000869E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12509 000086A3 E8ADEF0000              	call malloc
 12510 000086A8 50                      	push rax
 12511 000086A9 BF08000000              	mov rdi, 8 * 1	; new rib
 12512 000086AE E8A2EF0000              	call malloc
 12513 000086B3 50                      	push rax
 12514 000086B4 BF10000000              	mov rdi, 8 * 2	; extended env
 12515 000086B9 E897EF0000              	call malloc
 12516 000086BE 488B7D10                	mov rdi, ENV
 12517 000086C2 BE00000000              	mov rsi, 0
 12518 000086C7 BA01000000              	mov rdx, 1
 12519                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 12520 000086CC 4883FE01                	cmp rsi, 1
 12521 000086D0 7410                    	je .L_lambda_simple_env_end_0043
 12522 000086D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12523 000086D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12524 000086DA 48FFC6                  	inc rsi
 12525 000086DD 48FFC2                  	inc rdx
 12526 000086E0 EBEA                    	jmp .L_lambda_simple_env_loop_0043
 12527                                  .L_lambda_simple_env_end_0043:
 12528 000086E2 5B                      	pop rbx
 12529 000086E3 BE00000000              	mov rsi, 0
 12530                                  .L_lambda_simple_params_loop_0043:	; copy params
 12531 000086E8 4883FE01                	cmp rsi, 1
 12532 000086EC 740E                    	je .L_lambda_simple_params_end_0043
 12533 000086EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12534 000086F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12535 000086F7 48FFC6                  	inc rsi
 12536 000086FA EBEC                    	jmp .L_lambda_simple_params_loop_0043
 12537                                  .L_lambda_simple_params_end_0043:
 12538 000086FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12539 000086FF 4889C3                  	mov rbx, rax
 12540 00008702 58                      	pop rax
 12541 00008703 C60004                  	mov byte [rax], T_closure
 12542 00008706 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12543 0000870A 48C74009[17870000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 12544 00008712 E9A0080000              	jmp .L_lambda_simple_end_0043
 12545                                  .L_lambda_simple_code_0043:	; lambda-simple body
 12546 00008717 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12547 0000871D 740B                    	je .L_lambda_simple_arity_check_ok_0043
 12548 0000871F FF742410                	push qword [rsp + 8 * 2]
 12549 00008723 6A02                    	push 2
 12550 00008725 E9E4EE0000              	jmp L_error_incorrect_arity_simple
 12551                                  .L_lambda_simple_arity_check_ok_0043:
 12552 0000872A C8000000                	enter 0, 0
 12553                                  	; preparing a non-tail-call
 12554 0000872E 488B4520                	mov rax, PARAM(0)	; param a
 12555 00008732 50                      	push rax
 12556 00008733 6A01                    	push 1	; arg count
 12557 00008735 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12558 0000873D 803805                  	cmp byte [rax], T_undefined
 12559 00008740 0F84E2ED0000            	je L_error_fvar_undefined
 12560 00008746 803804                  	cmp byte [rax], T_closure
 12561 00008749 0F855DEE0000            	jne L_error_non_closure
 12562 0000874F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12563 00008752 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12564 00008755 483D[02000000]          	cmp rax, sob_boolean_false
 12565 0000875B 0F8487020000            	je .L_if_else_0041
 12566                                  	; preparing a non-tail-call
 12567 00008761 488B4528                	mov rax, PARAM(1)	; param b
 12568 00008765 50                      	push rax
 12569 00008766 6A01                    	push 1	; arg count
 12570 00008768 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12571 00008770 803805                  	cmp byte [rax], T_undefined
 12572 00008773 0F84AFED0000            	je L_error_fvar_undefined
 12573 00008779 803804                  	cmp byte [rax], T_closure
 12574 0000877C 0F852AEE0000            	jne L_error_non_closure
 12575 00008782 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12576 00008785 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12577 00008788 483D[02000000]          	cmp rax, sob_boolean_false
 12578 0000878E 7470                    	je .L_if_else_0038
 12579                                  	; preparing a tail-call
 12580 00008790 488B4528                	mov rax, PARAM(1)	; param b
 12581 00008794 50                      	push rax
 12582 00008795 488B4520                	mov rax, PARAM(0)	; param a
 12583 00008799 50                      	push rax
 12584 0000879A 6A02                    	push 2	; arg count
 12585 0000879C 488B0425[C40E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 12586 000087A4 803805                  	cmp byte [rax], T_undefined
 12587 000087A7 0F847BED0000            	je L_error_fvar_undefined
 12588 000087AD 803804                  	cmp byte [rax], T_closure
 12589 000087B0 0F85F6ED0000            	jne L_error_non_closure
 12590 000087B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12591 000087B9 FF7508                  	push qword [rbp + 8 * 1]
 12592                                   ; old ret addr
 12593 000087BC FF7500                  	push qword [rbp]
 12594                                   ; restore the old rbp
 12595 000087BF BB02000000              	mov rbx, 2
 12596 000087C4 4883C303                	add rbx, 3
 12597 000087C8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12598 000087CC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12599 000087D1 4C8D4DF8                	lea r9, [rbp - 8]
 12600 000087D5 B906000000              	mov rcx, 6
 12601                                  .L_tc_recycle_frame_loop_0069:
 12602 000087DA 4883F900                	cmp rcx, 0
 12603 000087DE 7413                    	je .L_tc_recycle_frame_done_0069
 12604 000087E0 4D8B11                  	mov r10, qword [r9]
 12605 000087E3 4D8910                  	mov qword [r8], r10
 12606 000087E6 4983E808                	sub r8, 8
 12607 000087EA 4983E908                	sub r9, 8
 12608 000087EE 48FFC9                  	dec rcx
 12609 000087F1 EBE7                    	jmp .L_tc_recycle_frame_loop_0069
 12610                                  .L_tc_recycle_frame_done_0069:
 12611 000087F3 498D6008                	lea rsp, [r8 + 8]
 12612 000087F7 5D                      	pop rbp ; restore the old rbp
 12613 000087F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12614 000087FB E9E3010000              	jmp .L_if_end_0038
 12615                                  .L_if_else_0038:
 12616                                  	; preparing a non-tail-call
 12617 00008800 488B4528                	mov rax, PARAM(1)	; param b
 12618 00008804 50                      	push rax
 12619 00008805 6A01                    	push 1	; arg count
 12620 00008807 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12621 0000880F 803805                  	cmp byte [rax], T_undefined
 12622 00008812 0F8410ED0000            	je L_error_fvar_undefined
 12623 00008818 803804                  	cmp byte [rax], T_closure
 12624 0000881B 0F858BED0000            	jne L_error_non_closure
 12625 00008821 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12626 00008824 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12627 00008827 483D[02000000]          	cmp rax, sob_boolean_false
 12628 0000882D 0F8493000000            	je .L_if_else_0037
 12629                                  	; preparing a tail-call
 12630 00008833 488B4528                	mov rax, PARAM(1)	; param b
 12631 00008837 50                      	push rax
 12632                                  	; preparing a non-tail-call
 12633 00008838 488B4520                	mov rax, PARAM(0)	; param a
 12634 0000883C 50                      	push rax
 12635 0000883D 6A01                    	push 1	; arg count
 12636 0000883F 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12637 00008847 803805                  	cmp byte [rax], T_undefined
 12638 0000884A 0F84D8EC0000            	je L_error_fvar_undefined
 12639 00008850 803804                  	cmp byte [rax], T_closure
 12640 00008853 0F8553ED0000            	jne L_error_non_closure
 12641 00008859 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12642 0000885C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12643 0000885F 50                      	push rax
 12644 00008860 6A02                    	push 2	; arg count
 12645 00008862 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12646 0000886A 803805                  	cmp byte [rax], T_undefined
 12647 0000886D 0F84B5EC0000            	je L_error_fvar_undefined
 12648 00008873 803804                  	cmp byte [rax], T_closure
 12649 00008876 0F8530ED0000            	jne L_error_non_closure
 12650 0000887C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12651 0000887F FF7508                  	push qword [rbp + 8 * 1]
 12652                                   ; old ret addr
 12653 00008882 FF7500                  	push qword [rbp]
 12654                                   ; restore the old rbp
 12655 00008885 BB02000000              	mov rbx, 2
 12656 0000888A 4883C303                	add rbx, 3
 12657 0000888E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12658 00008892 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12659 00008897 4C8D4DF8                	lea r9, [rbp - 8]
 12660 0000889B B906000000              	mov rcx, 6
 12661                                  .L_tc_recycle_frame_loop_006a:
 12662 000088A0 4883F900                	cmp rcx, 0
 12663 000088A4 7413                    	je .L_tc_recycle_frame_done_006a
 12664 000088A6 4D8B11                  	mov r10, qword [r9]
 12665 000088A9 4D8910                  	mov qword [r8], r10
 12666 000088AC 4983E808                	sub r8, 8
 12667 000088B0 4983E908                	sub r9, 8
 12668 000088B4 48FFC9                  	dec rcx
 12669 000088B7 EBE7                    	jmp .L_tc_recycle_frame_loop_006a
 12670                                  .L_tc_recycle_frame_done_006a:
 12671 000088B9 498D6008                	lea rsp, [r8 + 8]
 12672 000088BD 5D                      	pop rbp ; restore the old rbp
 12673 000088BE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12674 000088C1 E91D010000              	jmp .L_if_end_0037
 12675                                  .L_if_else_0037:
 12676                                  	; preparing a non-tail-call
 12677 000088C6 488B4528                	mov rax, PARAM(1)	; param b
 12678 000088CA 50                      	push rax
 12679 000088CB 6A01                    	push 1	; arg count
 12680 000088CD 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12681 000088D5 803805                  	cmp byte [rax], T_undefined
 12682 000088D8 0F844AEC0000            	je L_error_fvar_undefined
 12683 000088DE 803804                  	cmp byte [rax], T_closure
 12684 000088E1 0F85C5EC0000            	jne L_error_non_closure
 12685 000088E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12686 000088EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 12687 000088ED 483D[02000000]          	cmp rax, sob_boolean_false
 12688 000088F3 0F8490000000            	je .L_if_else_0036
 12689                                  	; preparing a tail-call
 12690 000088F9 488B4528                	mov rax, PARAM(1)	; param b
 12691 000088FD 50                      	push rax
 12692                                  	; preparing a non-tail-call
 12693 000088FE 488B4520                	mov rax, PARAM(0)	; param a
 12694 00008902 50                      	push rax
 12695 00008903 6A01                    	push 1	; arg count
 12696 00008905 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12697 0000890D 803805                  	cmp byte [rax], T_undefined
 12698 00008910 0F8412EC0000            	je L_error_fvar_undefined
 12699 00008916 803804                  	cmp byte [rax], T_closure
 12700 00008919 0F858DEC0000            	jne L_error_non_closure
 12701 0000891F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12702 00008922 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12703 00008925 50                      	push rax
 12704 00008926 6A02                    	push 2	; arg count
 12705 00008928 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12706 00008930 803805                  	cmp byte [rax], T_undefined
 12707 00008933 0F84EFEB0000            	je L_error_fvar_undefined
 12708 00008939 803804                  	cmp byte [rax], T_closure
 12709 0000893C 0F856AEC0000            	jne L_error_non_closure
 12710 00008942 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12711 00008945 FF7508                  	push qword [rbp + 8 * 1]
 12712                                   ; old ret addr
 12713 00008948 FF7500                  	push qword [rbp]
 12714                                   ; restore the old rbp
 12715 0000894B BB02000000              	mov rbx, 2
 12716 00008950 4883C303                	add rbx, 3
 12717 00008954 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12718 00008958 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12719 0000895D 4C8D4DF8                	lea r9, [rbp - 8]
 12720 00008961 B906000000              	mov rcx, 6
 12721                                  .L_tc_recycle_frame_loop_006b:
 12722 00008966 4883F900                	cmp rcx, 0
 12723 0000896A 7413                    	je .L_tc_recycle_frame_done_006b
 12724 0000896C 4D8B11                  	mov r10, qword [r9]
 12725 0000896F 4D8910                  	mov qword [r8], r10
 12726 00008972 4983E808                	sub r8, 8
 12727 00008976 4983E908                	sub r9, 8
 12728 0000897A 48FFC9                  	dec rcx
 12729 0000897D EBE7                    	jmp .L_tc_recycle_frame_loop_006b
 12730                                  .L_tc_recycle_frame_done_006b:
 12731 0000897F 498D6008                	lea rsp, [r8 + 8]
 12732 00008983 5D                      	pop rbp ; restore the old rbp
 12733 00008984 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12734 00008987 EB5A                    	jmp .L_if_end_0036
 12735                                  .L_if_else_0036:
 12736                                  	; preparing a tail-call
 12737 00008989 6A00                    	push 0	; arg count
 12738 0000898B 488B4510                	mov rax, ENV
 12739 0000898F 488B00                  	mov rax, qword [rax + 8 * 0]
 12740 00008992 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12741 00008995 803804                  	cmp byte [rax], T_closure
 12742 00008998 0F850EEC0000            	jne L_error_non_closure
 12743 0000899E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12744 000089A1 FF7508                  	push qword [rbp + 8 * 1]
 12745                                   ; old ret addr
 12746 000089A4 FF7500                  	push qword [rbp]
 12747                                   ; restore the old rbp
 12748 000089A7 BB00000000              	mov rbx, 0
 12749 000089AC 4883C303                	add rbx, 3
 12750 000089B0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12751 000089B4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12752 000089B9 4C8D4DF8                	lea r9, [rbp - 8]
 12753 000089BD B904000000              	mov rcx, 4
 12754                                  .L_tc_recycle_frame_loop_006c:
 12755 000089C2 4883F900                	cmp rcx, 0
 12756 000089C6 7413                    	je .L_tc_recycle_frame_done_006c
 12757 000089C8 4D8B11                  	mov r10, qword [r9]
 12758 000089CB 4D8910                  	mov qword [r8], r10
 12759 000089CE 4983E808                	sub r8, 8
 12760 000089D2 4983E908                	sub r9, 8
 12761 000089D6 48FFC9                  	dec rcx
 12762 000089D9 EBE7                    	jmp .L_tc_recycle_frame_loop_006c
 12763                                  .L_tc_recycle_frame_done_006c:
 12764 000089DB 498D6008                	lea rsp, [r8 + 8]
 12765 000089DF 5D                      	pop rbp ; restore the old rbp
 12766 000089E0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12767                                  .L_if_end_0036:
 12768                                  .L_if_end_0037:
 12769                                  .L_if_end_0038:
 12770 000089E3 E9CB050000              	jmp .L_if_end_0041
 12771                                  .L_if_else_0041:
 12772                                  	; preparing a non-tail-call
 12773 000089E8 488B4520                	mov rax, PARAM(0)	; param a
 12774 000089EC 50                      	push rax
 12775 000089ED 6A01                    	push 1	; arg count
 12776 000089EF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12777 000089F7 803805                  	cmp byte [rax], T_undefined
 12778 000089FA 0F8428EB0000            	je L_error_fvar_undefined
 12779 00008A00 803804                  	cmp byte [rax], T_closure
 12780 00008A03 0F85A3EB0000            	jne L_error_non_closure
 12781 00008A09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12782 00008A0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12783 00008A0F 483D[02000000]          	cmp rax, sob_boolean_false
 12784 00008A15 0F8487020000            	je .L_if_else_0040
 12785                                  	; preparing a non-tail-call
 12786 00008A1B 488B4528                	mov rax, PARAM(1)	; param b
 12787 00008A1F 50                      	push rax
 12788 00008A20 6A01                    	push 1	; arg count
 12789 00008A22 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12790 00008A2A 803805                  	cmp byte [rax], T_undefined
 12791 00008A2D 0F84F5EA0000            	je L_error_fvar_undefined
 12792 00008A33 803804                  	cmp byte [rax], T_closure
 12793 00008A36 0F8570EB0000            	jne L_error_non_closure
 12794 00008A3C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12795 00008A3F FF5009                  	call SOB_CLOSURE_CODE(rax)
 12796 00008A42 483D[02000000]          	cmp rax, sob_boolean_false
 12797 00008A48 0F8493000000            	je .L_if_else_003b
 12798                                  	; preparing a tail-call
 12799                                  	; preparing a non-tail-call
 12800 00008A4E 488B4528                	mov rax, PARAM(1)	; param b
 12801 00008A52 50                      	push rax
 12802 00008A53 6A01                    	push 1	; arg count
 12803 00008A55 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12804 00008A5D 803805                  	cmp byte [rax], T_undefined
 12805 00008A60 0F84C2EA0000            	je L_error_fvar_undefined
 12806 00008A66 803804                  	cmp byte [rax], T_closure
 12807 00008A69 0F853DEB0000            	jne L_error_non_closure
 12808 00008A6F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12809 00008A72 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12810 00008A75 50                      	push rax
 12811 00008A76 488B4520                	mov rax, PARAM(0)	; param a
 12812 00008A7A 50                      	push rax
 12813 00008A7B 6A02                    	push 2	; arg count
 12814 00008A7D 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12815 00008A85 803805                  	cmp byte [rax], T_undefined
 12816 00008A88 0F849AEA0000            	je L_error_fvar_undefined
 12817 00008A8E 803804                  	cmp byte [rax], T_closure
 12818 00008A91 0F8515EB0000            	jne L_error_non_closure
 12819 00008A97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12820 00008A9A FF7508                  	push qword [rbp + 8 * 1]
 12821                                   ; old ret addr
 12822 00008A9D FF7500                  	push qword [rbp]
 12823                                   ; restore the old rbp
 12824 00008AA0 BB02000000              	mov rbx, 2
 12825 00008AA5 4883C303                	add rbx, 3
 12826 00008AA9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12827 00008AAD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12828 00008AB2 4C8D4DF8                	lea r9, [rbp - 8]
 12829 00008AB6 B906000000              	mov rcx, 6
 12830                                  .L_tc_recycle_frame_loop_006d:
 12831 00008ABB 4883F900                	cmp rcx, 0
 12832 00008ABF 7413                    	je .L_tc_recycle_frame_done_006d
 12833 00008AC1 4D8B11                  	mov r10, qword [r9]
 12834 00008AC4 4D8910                  	mov qword [r8], r10
 12835 00008AC7 4983E808                	sub r8, 8
 12836 00008ACB 4983E908                	sub r9, 8
 12837 00008ACF 48FFC9                  	dec rcx
 12838 00008AD2 EBE7                    	jmp .L_tc_recycle_frame_loop_006d
 12839                                  .L_tc_recycle_frame_done_006d:
 12840 00008AD4 498D6008                	lea rsp, [r8 + 8]
 12841 00008AD8 5D                      	pop rbp ; restore the old rbp
 12842 00008AD9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12843 00008ADC E9BC010000              	jmp .L_if_end_003b
 12844                                  .L_if_else_003b:
 12845                                  	; preparing a non-tail-call
 12846 00008AE1 488B4528                	mov rax, PARAM(1)	; param b
 12847 00008AE5 50                      	push rax
 12848 00008AE6 6A01                    	push 1	; arg count
 12849 00008AE8 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12850 00008AF0 803805                  	cmp byte [rax], T_undefined
 12851 00008AF3 0F842FEA0000            	je L_error_fvar_undefined
 12852 00008AF9 803804                  	cmp byte [rax], T_closure
 12853 00008AFC 0F85AAEA0000            	jne L_error_non_closure
 12854 00008B02 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12855 00008B05 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12856 00008B08 483D[02000000]          	cmp rax, sob_boolean_false
 12857 00008B0E 7470                    	je .L_if_else_003a
 12858                                  	; preparing a tail-call
 12859 00008B10 488B4528                	mov rax, PARAM(1)	; param b
 12860 00008B14 50                      	push rax
 12861 00008B15 488B4520                	mov rax, PARAM(0)	; param a
 12862 00008B19 50                      	push rax
 12863 00008B1A 6A02                    	push 2	; arg count
 12864 00008B1C 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 12865 00008B24 803805                  	cmp byte [rax], T_undefined
 12866 00008B27 0F84FBE90000            	je L_error_fvar_undefined
 12867 00008B2D 803804                  	cmp byte [rax], T_closure
 12868 00008B30 0F8576EA0000            	jne L_error_non_closure
 12869 00008B36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12870 00008B39 FF7508                  	push qword [rbp + 8 * 1]
 12871                                   ; old ret addr
 12872 00008B3C FF7500                  	push qword [rbp]
 12873                                   ; restore the old rbp
 12874 00008B3F BB02000000              	mov rbx, 2
 12875 00008B44 4883C303                	add rbx, 3
 12876 00008B48 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12877 00008B4C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12878 00008B51 4C8D4DF8                	lea r9, [rbp - 8]
 12879 00008B55 B906000000              	mov rcx, 6
 12880                                  .L_tc_recycle_frame_loop_006e:
 12881 00008B5A 4883F900                	cmp rcx, 0
 12882 00008B5E 7413                    	je .L_tc_recycle_frame_done_006e
 12883 00008B60 4D8B11                  	mov r10, qword [r9]
 12884 00008B63 4D8910                  	mov qword [r8], r10
 12885 00008B66 4983E808                	sub r8, 8
 12886 00008B6A 4983E908                	sub r9, 8
 12887 00008B6E 48FFC9                  	dec rcx
 12888 00008B71 EBE7                    	jmp .L_tc_recycle_frame_loop_006e
 12889                                  .L_tc_recycle_frame_done_006e:
 12890 00008B73 498D6008                	lea rsp, [r8 + 8]
 12891 00008B77 5D                      	pop rbp ; restore the old rbp
 12892 00008B78 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12893 00008B7B E91D010000              	jmp .L_if_end_003a
 12894                                  .L_if_else_003a:
 12895                                  	; preparing a non-tail-call
 12896 00008B80 488B4528                	mov rax, PARAM(1)	; param b
 12897 00008B84 50                      	push rax
 12898 00008B85 6A01                    	push 1	; arg count
 12899 00008B87 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12900 00008B8F 803805                  	cmp byte [rax], T_undefined
 12901 00008B92 0F8490E90000            	je L_error_fvar_undefined
 12902 00008B98 803804                  	cmp byte [rax], T_closure
 12903 00008B9B 0F850BEA0000            	jne L_error_non_closure
 12904 00008BA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12905 00008BA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12906 00008BA7 483D[02000000]          	cmp rax, sob_boolean_false
 12907 00008BAD 0F8490000000            	je .L_if_else_0039
 12908                                  	; preparing a tail-call
 12909 00008BB3 488B4528                	mov rax, PARAM(1)	; param b
 12910 00008BB7 50                      	push rax
 12911                                  	; preparing a non-tail-call
 12912 00008BB8 488B4520                	mov rax, PARAM(0)	; param a
 12913 00008BBC 50                      	push rax
 12914 00008BBD 6A01                    	push 1	; arg count
 12915 00008BBF 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12916 00008BC7 803805                  	cmp byte [rax], T_undefined
 12917 00008BCA 0F8458E90000            	je L_error_fvar_undefined
 12918 00008BD0 803804                  	cmp byte [rax], T_closure
 12919 00008BD3 0F85D3E90000            	jne L_error_non_closure
 12920 00008BD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12921 00008BDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 12922 00008BDF 50                      	push rax
 12923 00008BE0 6A02                    	push 2	; arg count
 12924 00008BE2 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 12925 00008BEA 803805                  	cmp byte [rax], T_undefined
 12926 00008BED 0F8435E90000            	je L_error_fvar_undefined
 12927 00008BF3 803804                  	cmp byte [rax], T_closure
 12928 00008BF6 0F85B0E90000            	jne L_error_non_closure
 12929 00008BFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 12930 00008BFF FF7508                  	push qword [rbp + 8 * 1]
 12931                                   ; old ret addr
 12932 00008C02 FF7500                  	push qword [rbp]
 12933                                   ; restore the old rbp
 12934 00008C05 BB02000000              	mov rbx, 2
 12935 00008C0A 4883C303                	add rbx, 3
 12936 00008C0E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12937 00008C12 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12938 00008C17 4C8D4DF8                	lea r9, [rbp - 8]
 12939 00008C1B B906000000              	mov rcx, 6
 12940                                  .L_tc_recycle_frame_loop_006f:
 12941 00008C20 4883F900                	cmp rcx, 0
 12942 00008C24 7413                    	je .L_tc_recycle_frame_done_006f
 12943 00008C26 4D8B11                  	mov r10, qword [r9]
 12944 00008C29 4D8910                  	mov qword [r8], r10
 12945 00008C2C 4983E808                	sub r8, 8
 12946 00008C30 4983E908                	sub r9, 8
 12947 00008C34 48FFC9                  	dec rcx
 12948 00008C37 EBE7                    	jmp .L_tc_recycle_frame_loop_006f
 12949                                  .L_tc_recycle_frame_done_006f:
 12950 00008C39 498D6008                	lea rsp, [r8 + 8]
 12951 00008C3D 5D                      	pop rbp ; restore the old rbp
 12952 00008C3E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12953 00008C41 EB5A                    	jmp .L_if_end_0039
 12954                                  .L_if_else_0039:
 12955                                  	; preparing a tail-call
 12956 00008C43 6A00                    	push 0	; arg count
 12957 00008C45 488B4510                	mov rax, ENV
 12958 00008C49 488B00                  	mov rax, qword [rax + 8 * 0]
 12959 00008C4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12960 00008C4F 803804                  	cmp byte [rax], T_closure
 12961 00008C52 0F8554E90000            	jne L_error_non_closure
 12962 00008C58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12963 00008C5B FF7508                  	push qword [rbp + 8 * 1]
 12964                                   ; old ret addr
 12965 00008C5E FF7500                  	push qword [rbp]
 12966                                   ; restore the old rbp
 12967 00008C61 BB00000000              	mov rbx, 0
 12968 00008C66 4883C303                	add rbx, 3
 12969 00008C6A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 12970 00008C6E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 12971 00008C73 4C8D4DF8                	lea r9, [rbp - 8]
 12972 00008C77 B904000000              	mov rcx, 4
 12973                                  .L_tc_recycle_frame_loop_0070:
 12974 00008C7C 4883F900                	cmp rcx, 0
 12975 00008C80 7413                    	je .L_tc_recycle_frame_done_0070
 12976 00008C82 4D8B11                  	mov r10, qword [r9]
 12977 00008C85 4D8910                  	mov qword [r8], r10
 12978 00008C88 4983E808                	sub r8, 8
 12979 00008C8C 4983E908                	sub r9, 8
 12980 00008C90 48FFC9                  	dec rcx
 12981 00008C93 EBE7                    	jmp .L_tc_recycle_frame_loop_0070
 12982                                  .L_tc_recycle_frame_done_0070:
 12983 00008C95 498D6008                	lea rsp, [r8 + 8]
 12984 00008C99 5D                      	pop rbp ; restore the old rbp
 12985 00008C9A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12986                                  .L_if_end_0039:
 12987                                  .L_if_end_003a:
 12988                                  .L_if_end_003b:
 12989 00008C9D E911030000              	jmp .L_if_end_0040
 12990                                  .L_if_else_0040:
 12991                                  	; preparing a non-tail-call
 12992 00008CA2 488B4520                	mov rax, PARAM(0)	; param a
 12993 00008CA6 50                      	push rax
 12994 00008CA7 6A01                    	push 1	; arg count
 12995 00008CA9 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12996 00008CB1 803805                  	cmp byte [rax], T_undefined
 12997 00008CB4 0F846EE80000            	je L_error_fvar_undefined
 12998 00008CBA 803804                  	cmp byte [rax], T_closure
 12999 00008CBD 0F85E9E80000            	jne L_error_non_closure
 13000 00008CC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13001 00008CC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13002 00008CC9 483D[02000000]          	cmp rax, sob_boolean_false
 13003 00008CCF 0F8484020000            	je .L_if_else_003f
 13004                                  	; preparing a non-tail-call
 13005 00008CD5 488B4528                	mov rax, PARAM(1)	; param b
 13006 00008CD9 50                      	push rax
 13007 00008CDA 6A01                    	push 1	; arg count
 13008 00008CDC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13009 00008CE4 803805                  	cmp byte [rax], T_undefined
 13010 00008CE7 0F843BE80000            	je L_error_fvar_undefined
 13011 00008CED 803804                  	cmp byte [rax], T_closure
 13012 00008CF0 0F85B6E80000            	jne L_error_non_closure
 13013 00008CF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13014 00008CF9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13015 00008CFC 483D[02000000]          	cmp rax, sob_boolean_false
 13016 00008D02 0F8493000000            	je .L_if_else_003e
 13017                                  	; preparing a tail-call
 13018                                  	; preparing a non-tail-call
 13019 00008D08 488B4528                	mov rax, PARAM(1)	; param b
 13020 00008D0C 50                      	push rax
 13021 00008D0D 6A01                    	push 1	; arg count
 13022 00008D0F 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13023 00008D17 803805                  	cmp byte [rax], T_undefined
 13024 00008D1A 0F8408E80000            	je L_error_fvar_undefined
 13025 00008D20 803804                  	cmp byte [rax], T_closure
 13026 00008D23 0F8583E80000            	jne L_error_non_closure
 13027 00008D29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13028 00008D2C FF5009                  	call SOB_CLOSURE_CODE(rax)
 13029 00008D2F 50                      	push rax
 13030 00008D30 488B4520                	mov rax, PARAM(0)	; param a
 13031 00008D34 50                      	push rax
 13032 00008D35 6A02                    	push 2	; arg count
 13033 00008D37 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13034 00008D3F 803805                  	cmp byte [rax], T_undefined
 13035 00008D42 0F84E0E70000            	je L_error_fvar_undefined
 13036 00008D48 803804                  	cmp byte [rax], T_closure
 13037 00008D4B 0F855BE80000            	jne L_error_non_closure
 13038 00008D51 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13039 00008D54 FF7508                  	push qword [rbp + 8 * 1]
 13040                                   ; old ret addr
 13041 00008D57 FF7500                  	push qword [rbp]
 13042                                   ; restore the old rbp
 13043 00008D5A BB02000000              	mov rbx, 2
 13044 00008D5F 4883C303                	add rbx, 3
 13045 00008D63 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13046 00008D67 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13047 00008D6C 4C8D4DF8                	lea r9, [rbp - 8]
 13048 00008D70 B906000000              	mov rcx, 6
 13049                                  .L_tc_recycle_frame_loop_0071:
 13050 00008D75 4883F900                	cmp rcx, 0
 13051 00008D79 7413                    	je .L_tc_recycle_frame_done_0071
 13052 00008D7B 4D8B11                  	mov r10, qword [r9]
 13053 00008D7E 4D8910                  	mov qword [r8], r10
 13054 00008D81 4983E808                	sub r8, 8
 13055 00008D85 4983E908                	sub r9, 8
 13056 00008D89 48FFC9                  	dec rcx
 13057 00008D8C EBE7                    	jmp .L_tc_recycle_frame_loop_0071
 13058                                  .L_tc_recycle_frame_done_0071:
 13059 00008D8E 498D6008                	lea rsp, [r8 + 8]
 13060 00008D92 5D                      	pop rbp ; restore the old rbp
 13061 00008D93 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13062 00008D96 E9BC010000              	jmp .L_if_end_003e
 13063                                  .L_if_else_003e:
 13064                                  	; preparing a non-tail-call
 13065 00008D9B 488B4528                	mov rax, PARAM(1)	; param b
 13066 00008D9F 50                      	push rax
 13067 00008DA0 6A01                    	push 1	; arg count
 13068 00008DA2 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13069 00008DAA 803805                  	cmp byte [rax], T_undefined
 13070 00008DAD 0F8475E70000            	je L_error_fvar_undefined
 13071 00008DB3 803804                  	cmp byte [rax], T_closure
 13072 00008DB6 0F85F0E70000            	jne L_error_non_closure
 13073 00008DBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13074 00008DBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13075 00008DC2 483D[02000000]          	cmp rax, sob_boolean_false
 13076 00008DC8 0F8493000000            	je .L_if_else_003d
 13077                                  	; preparing a tail-call
 13078                                  	; preparing a non-tail-call
 13079 00008DCE 488B4528                	mov rax, PARAM(1)	; param b
 13080 00008DD2 50                      	push rax
 13081 00008DD3 6A01                    	push 1	; arg count
 13082 00008DD5 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13083 00008DDD 803805                  	cmp byte [rax], T_undefined
 13084 00008DE0 0F8442E70000            	je L_error_fvar_undefined
 13085 00008DE6 803804                  	cmp byte [rax], T_closure
 13086 00008DE9 0F85BDE70000            	jne L_error_non_closure
 13087 00008DEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 13088 00008DF2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13089 00008DF5 50                      	push rax
 13090 00008DF6 488B4520                	mov rax, PARAM(0)	; param a
 13091 00008DFA 50                      	push rax
 13092 00008DFB 6A02                    	push 2	; arg count
 13093 00008DFD 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13094 00008E05 803805                  	cmp byte [rax], T_undefined
 13095 00008E08 0F841AE70000            	je L_error_fvar_undefined
 13096 00008E0E 803804                  	cmp byte [rax], T_closure
 13097 00008E11 0F8595E70000            	jne L_error_non_closure
 13098 00008E17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13099 00008E1A FF7508                  	push qword [rbp + 8 * 1]
 13100                                   ; old ret addr
 13101 00008E1D FF7500                  	push qword [rbp]
 13102                                   ; restore the old rbp
 13103 00008E20 BB02000000              	mov rbx, 2
 13104 00008E25 4883C303                	add rbx, 3
 13105 00008E29 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13106 00008E2D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13107 00008E32 4C8D4DF8                	lea r9, [rbp - 8]
 13108 00008E36 B906000000              	mov rcx, 6
 13109                                  .L_tc_recycle_frame_loop_0072:
 13110 00008E3B 4883F900                	cmp rcx, 0
 13111 00008E3F 7413                    	je .L_tc_recycle_frame_done_0072
 13112 00008E41 4D8B11                  	mov r10, qword [r9]
 13113 00008E44 4D8910                  	mov qword [r8], r10
 13114 00008E47 4983E808                	sub r8, 8
 13115 00008E4B 4983E908                	sub r9, 8
 13116 00008E4F 48FFC9                  	dec rcx
 13117 00008E52 EBE7                    	jmp .L_tc_recycle_frame_loop_0072
 13118                                  .L_tc_recycle_frame_done_0072:
 13119 00008E54 498D6008                	lea rsp, [r8 + 8]
 13120 00008E58 5D                      	pop rbp ; restore the old rbp
 13121 00008E59 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13122 00008E5C E9F6000000              	jmp .L_if_end_003d
 13123                                  .L_if_else_003d:
 13124                                  	; preparing a non-tail-call
 13125 00008E61 488B4528                	mov rax, PARAM(1)	; param b
 13126 00008E65 50                      	push rax
 13127 00008E66 6A01                    	push 1	; arg count
 13128 00008E68 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13129 00008E70 803805                  	cmp byte [rax], T_undefined
 13130 00008E73 0F84AFE60000            	je L_error_fvar_undefined
 13131 00008E79 803804                  	cmp byte [rax], T_closure
 13132 00008E7C 0F852AE70000            	jne L_error_non_closure
 13133 00008E82 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13134 00008E85 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13135 00008E88 483D[02000000]          	cmp rax, sob_boolean_false
 13136 00008E8E 746D                    	je .L_if_else_003c
 13137                                  	; preparing a tail-call
 13138 00008E90 488B4528                	mov rax, PARAM(1)	; param b
 13139 00008E94 50                      	push rax
 13140 00008E95 488B4520                	mov rax, PARAM(0)	; param a
 13141 00008E99 50                      	push rax
 13142 00008E9A 6A02                    	push 2	; arg count
 13143 00008E9C 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13144 00008EA4 803805                  	cmp byte [rax], T_undefined
 13145 00008EA7 0F847BE60000            	je L_error_fvar_undefined
 13146 00008EAD 803804                  	cmp byte [rax], T_closure
 13147 00008EB0 0F85F6E60000            	jne L_error_non_closure
 13148 00008EB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13149 00008EB9 FF7508                  	push qword [rbp + 8 * 1]
 13150                                   ; old ret addr
 13151 00008EBC FF7500                  	push qword [rbp]
 13152                                   ; restore the old rbp
 13153 00008EBF BB02000000              	mov rbx, 2
 13154 00008EC4 4883C303                	add rbx, 3
 13155 00008EC8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13156 00008ECC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13157 00008ED1 4C8D4DF8                	lea r9, [rbp - 8]
 13158 00008ED5 B906000000              	mov rcx, 6
 13159                                  .L_tc_recycle_frame_loop_0073:
 13160 00008EDA 4883F900                	cmp rcx, 0
 13161 00008EDE 7413                    	je .L_tc_recycle_frame_done_0073
 13162 00008EE0 4D8B11                  	mov r10, qword [r9]
 13163 00008EE3 4D8910                  	mov qword [r8], r10
 13164 00008EE6 4983E808                	sub r8, 8
 13165 00008EEA 4983E908                	sub r9, 8
 13166 00008EEE 48FFC9                  	dec rcx
 13167 00008EF1 EBE7                    	jmp .L_tc_recycle_frame_loop_0073
 13168                                  .L_tc_recycle_frame_done_0073:
 13169 00008EF3 498D6008                	lea rsp, [r8 + 8]
 13170 00008EF7 5D                      	pop rbp ; restore the old rbp
 13171 00008EF8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13172 00008EFB EB5A                    	jmp .L_if_end_003c
 13173                                  .L_if_else_003c:
 13174                                  	; preparing a tail-call
 13175 00008EFD 6A00                    	push 0	; arg count
 13176 00008EFF 488B4510                	mov rax, ENV
 13177 00008F03 488B00                  	mov rax, qword [rax + 8 * 0]
 13178 00008F06 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13179 00008F09 803804                  	cmp byte [rax], T_closure
 13180 00008F0C 0F859AE60000            	jne L_error_non_closure
 13181 00008F12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13182 00008F15 FF7508                  	push qword [rbp + 8 * 1]
 13183                                   ; old ret addr
 13184 00008F18 FF7500                  	push qword [rbp]
 13185                                   ; restore the old rbp
 13186 00008F1B BB00000000              	mov rbx, 0
 13187 00008F20 4883C303                	add rbx, 3
 13188 00008F24 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13189 00008F28 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13190 00008F2D 4C8D4DF8                	lea r9, [rbp - 8]
 13191 00008F31 B904000000              	mov rcx, 4
 13192                                  .L_tc_recycle_frame_loop_0074:
 13193 00008F36 4883F900                	cmp rcx, 0
 13194 00008F3A 7413                    	je .L_tc_recycle_frame_done_0074
 13195 00008F3C 4D8B11                  	mov r10, qword [r9]
 13196 00008F3F 4D8910                  	mov qword [r8], r10
 13197 00008F42 4983E808                	sub r8, 8
 13198 00008F46 4983E908                	sub r9, 8
 13199 00008F4A 48FFC9                  	dec rcx
 13200 00008F4D EBE7                    	jmp .L_tc_recycle_frame_loop_0074
 13201                                  .L_tc_recycle_frame_done_0074:
 13202 00008F4F 498D6008                	lea rsp, [r8 + 8]
 13203 00008F53 5D                      	pop rbp ; restore the old rbp
 13204 00008F54 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13205                                  .L_if_end_003c:
 13206                                  .L_if_end_003d:
 13207                                  .L_if_end_003e:
 13208 00008F57 EB5A                    	jmp .L_if_end_003f
 13209                                  .L_if_else_003f:
 13210                                  	; preparing a tail-call
 13211 00008F59 6A00                    	push 0	; arg count
 13212 00008F5B 488B4510                	mov rax, ENV
 13213 00008F5F 488B00                  	mov rax, qword [rax + 8 * 0]
 13214 00008F62 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13215 00008F65 803804                  	cmp byte [rax], T_closure
 13216 00008F68 0F853EE60000            	jne L_error_non_closure
 13217 00008F6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13218 00008F71 FF7508                  	push qword [rbp + 8 * 1]
 13219                                   ; old ret addr
 13220 00008F74 FF7500                  	push qword [rbp]
 13221                                   ; restore the old rbp
 13222 00008F77 BB00000000              	mov rbx, 0
 13223 00008F7C 4883C303                	add rbx, 3
 13224 00008F80 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13225 00008F84 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13226 00008F89 4C8D4DF8                	lea r9, [rbp - 8]
 13227 00008F8D B904000000              	mov rcx, 4
 13228                                  .L_tc_recycle_frame_loop_0075:
 13229 00008F92 4883F900                	cmp rcx, 0
 13230 00008F96 7413                    	je .L_tc_recycle_frame_done_0075
 13231 00008F98 4D8B11                  	mov r10, qword [r9]
 13232 00008F9B 4D8910                  	mov qword [r8], r10
 13233 00008F9E 4983E808                	sub r8, 8
 13234 00008FA2 4983E908                	sub r9, 8
 13235 00008FA6 48FFC9                  	dec rcx
 13236 00008FA9 EBE7                    	jmp .L_tc_recycle_frame_loop_0075
 13237                                  .L_tc_recycle_frame_done_0075:
 13238 00008FAB 498D6008                	lea rsp, [r8 + 8]
 13239 00008FAF 5D                      	pop rbp ; restore the old rbp
 13240 00008FB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13241                                  .L_if_end_003f:
 13242                                  .L_if_end_0040:
 13243                                  .L_if_end_0041:
 13244 00008FB3 C9                      	leave
 13245 00008FB4 C22000                  	ret AND_KILL_FRAME(2)
 13246                                  .L_lambda_simple_end_0043:	; new closure is in rax
 13247 00008FB7 50                      	push rax
 13248 00008FB8 6A01                    	push 1	; arg count
 13249 00008FBA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13250 00008FBF E891E60000              	call malloc
 13251 00008FC4 50                      	push rax
 13252 00008FC5 BF08000000              	mov rdi, 8 * 1	; new rib
 13253 00008FCA E886E60000              	call malloc
 13254 00008FCF 50                      	push rax
 13255 00008FD0 BF10000000              	mov rdi, 8 * 2	; extended env
 13256 00008FD5 E87BE60000              	call malloc
 13257 00008FDA 488B7D10                	mov rdi, ENV
 13258 00008FDE BE00000000              	mov rsi, 0
 13259 00008FE3 BA01000000              	mov rdx, 1
 13260                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 13261 00008FE8 4883FE01                	cmp rsi, 1
 13262 00008FEC 7410                    	je .L_lambda_simple_env_end_0044
 13263 00008FEE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13264 00008FF2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13265 00008FF6 48FFC6                  	inc rsi
 13266 00008FF9 48FFC2                  	inc rdx
 13267 00008FFC EBEA                    	jmp .L_lambda_simple_env_loop_0044
 13268                                  .L_lambda_simple_env_end_0044:
 13269 00008FFE 5B                      	pop rbx
 13270 00008FFF BE00000000              	mov rsi, 0
 13271                                  .L_lambda_simple_params_loop_0044:	; copy params
 13272 00009004 4883FE01                	cmp rsi, 1
 13273 00009008 740E                    	je .L_lambda_simple_params_end_0044
 13274 0000900A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13275 0000900F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13276 00009013 48FFC6                  	inc rsi
 13277 00009016 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 13278                                  .L_lambda_simple_params_end_0044:
 13279 00009018 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13280 0000901B 4889C3                  	mov rbx, rax
 13281 0000901E 58                      	pop rax
 13282 0000901F C60004                  	mov byte [rax], T_closure
 13283 00009022 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13284 00009026 48C74009[33900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 13285 0000902E E9BD030000              	jmp .L_lambda_simple_end_0044
 13286                                  .L_lambda_simple_code_0044:	; lambda-simple body
 13287 00009033 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13288 00009039 740B                    	je .L_lambda_simple_arity_check_ok_0044
 13289 0000903B FF742410                	push qword [rsp + 8 * 2]
 13290 0000903F 6A01                    	push 1
 13291 00009041 E9C8E50000              	jmp L_error_incorrect_arity_simple
 13292                                  .L_lambda_simple_arity_check_ok_0044:
 13293 00009046 C8000000                	enter 0, 0
 13294 0000904A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13295 0000904F E801E60000              	call malloc
 13296 00009054 50                      	push rax
 13297 00009055 BF08000000              	mov rdi, 8 * 1	; new rib
 13298 0000905A E8F6E50000              	call malloc
 13299 0000905F 50                      	push rax
 13300 00009060 BF18000000              	mov rdi, 8 * 3	; extended env
 13301 00009065 E8EBE50000              	call malloc
 13302 0000906A 488B7D10                	mov rdi, ENV
 13303 0000906E 4831F6                  	 xor rsi, rsi
 13304 00009071 4831D2                  	 xor rdx, rdx
 13305 00009074 48FFC2                  	inc rdx
 13306                                  .L_lambda_opt_env_loop_000d:	; 
 13307 00009077 4883FE02                	cmp rsi, 2
 13308 0000907B 7410                    	je .L_lambda_opt_env_end_000d
 13309 0000907D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13310 00009081 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13311 00009085 48FFC6                  	inc rsi
 13312 00009088 48FFC2                  	inc rdx
 13313 0000908B EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13314                                  .L_lambda_opt_env_end_000d:
 13315 0000908D 5B                      	pop rbx
 13316 0000908E 4831F6                  	xor rsi, rsi
 13317                                  .L_lambda_opt_params_loop_000d:	; copy params
 13318 00009091 4883FE01                	cmp rsi, 1
 13319 00009095 740E                    	je .L_lambda_opt_params_end_000d
 13320 00009097 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13321 0000909C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13322 000090A0 48FFC6                  	inc rsi
 13323 000090A3 EBEC                    	jmp .L_lambda_opt_params_loop_000d
 13324                                  .L_lambda_opt_params_end_000d:
 13325 000090A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13326 000090A8 4889C3                  	mov rbx, rax
 13327 000090AB 58                      	pop rax
 13328 000090AC C60004                  	mov byte [rax], T_closure
 13329 000090AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13330 000090B3 48C74009[C0900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13331 000090BB E92C030000              	jmp .L_lambda_opt_end_000d
 13332                                  .L_lambda_opt_code_000d:
 13333 000090C0 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 13334 000090C5 4983FF01                	cmp r15, 1
 13335 000090C9 7409                    	je .L_lambda_opt_arity_check_exact_000d
 13336 000090CB 7F57                    	jg .L_lambda_opt_arity_check_more_000d
 13337 000090CD 6A01                    	push 1
 13338 000090CF E94EE50000              	jmp L_error_incorrect_arity_opt
 13339                                  .L_lambda_opt_arity_check_exact_000d: ;Exact case
 13340 000090D4 4C8B0424                	mov r8, qword [rsp -8 * 0]
 13341 000090D8 4C894424F8              	mov qword [rsp -8], r8
 13342 000090DD 4C8B442408              	mov r8, qword [rsp +8]
 13343 000090E2 4C890424                	mov qword [rsp +8 * 0], r8
 13344 000090E6 4C8B442410              	mov r8, qword [rsp +8 * 2]
 13345 000090EB 4C89C1                  	mov rcx, r8
 13346 000090EE 49FFC0                  	inc r8
 13347 000090F1 4C89442408              	mov qword [rsp +8], r8
 13348 000090F6 4889E2                  	mov rdx, rsp
 13349 000090F9 4883C218                	add rdx, 24
 13350                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000d:
 13351 000090FD 4883F900                	cmp rcx, 0
 13352 00009101 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000d
 13353 00009103 4C8B02                  	mov r8, qword [rdx]
 13354 00009106 4C8942F8                	mov qword [rdx - 8], r8
 13355 0000910A 4883C208                	add rdx, 8
 13356 0000910E 48FFC9                  	dec rcx
 13357 00009111 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000d
 13358                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000d:
 13359 00009113 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 13360 0000911B 4883EC08                	sub rsp, 8
 13361 0000911F E985000000              	jmp .L_lambda_opt_stack_adjusted_000d
 13362                                  .L_lambda_opt_arity_check_more_000d:
 13363 00009124 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 13364 00009129 4D89C4                  	mov r12, r8
 13365 0000912C 4C89C1                  	mov rcx, r8
 13366 0000912F 4D8D6802                	lea r13, [r8 + 2] 
 13367 00009133 4883E901                	sub rcx, 1
 13368 00009137 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 13369 0000913C 49BE-                   	mov r14, sob_nil
 13369 0000913E [0100000000000000] 
 13370                                  .L_lambda_opt_create_list_of_opt_params_000d:
 13371 00009146 4883F900                	cmp rcx, 0
 13372 0000914A 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000d
 13373 0000914C BF11000000              	mov rdi, 17
 13374 00009151 E8FFE40000              	call malloc
 13375 00009156 C60021                  	mov byte [rax], T_pair
 13376 00009159 498B1B                  	mov rbx, qword [r11]
 13377 0000915C 48895801                	mov qword [rax +1], rbx
 13378 00009160 4C897009                	mov qword [rax + 1 + 8], r14
 13379 00009164 4989C6                  	mov r14, rax
 13380 00009167 48FFC9                  	dec rcx
 13381 0000916A 4983EB08                	sub r11, 8
 13382 0000916E EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000d
 13383                                  .L_lambda_opt_create_list_of_opt_params_end_000d:
 13384 00009170 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 13385 00009175 4D8932                  	mov qword [r10], r14
 13386 00009178 4E8D2CED00000000        	lea r13, [8 * r13]
 13387 00009180 4901E5                  	add r13, rsp
 13388 00009183 B905000000              	mov rcx, 4 + 1
 13389                                  .L_lambda_opt_stack_shrink_loop_000d:
 13390 00009188 4883F900                	cmp rcx, 0
 13391 0000918C 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_000d
 13392 0000918E 4D8B1A                  	mov r11, qword [r10]
 13393 00009191 4D895D00                	mov qword [r13], r11
 13394 00009195 4983EA08                	sub r10, 8
 13395 00009199 4983ED08                	sub r13, 8
 13396 0000919D 48FFC9                  	dec rcx
 13397 000091A0 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13398                                  .L_lambda_opt_stack_shrink_loop_exit_000d:
 13399 000091A2 4983C508                	add r13, 8
 13400 000091A6 4C89EC                  	mov rsp, r13
 13401                                  .L_lambda_opt_stack_adjusted_000d:
 13402 000091A9 48C744241002000000      	mov qword [rsp + 8*2], 2
 13403 000091B2 C8000000                	enter 0, 0
 13404                                  	; preparing a non-tail-call
 13405 000091B6 488B4528                	mov rax, PARAM(1)	; param s
 13406 000091BA 50                      	push rax
 13407 000091BB 6A01                    	push 1	; arg count
 13408 000091BD 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 13409 000091C5 803805                  	cmp byte [rax], T_undefined
 13410 000091C8 0F845AE30000            	je L_error_fvar_undefined
 13411 000091CE 803804                  	cmp byte [rax], T_closure
 13412 000091D1 0F85D5E30000            	jne L_error_non_closure
 13413 000091D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13414 000091DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 13415 000091DD 483D[02000000]          	cmp rax, sob_boolean_false
 13416 000091E3 746F                    	je .L_if_else_0042
 13417                                  	; preparing a tail-call
 13418 000091E5 488B4520                	mov rax, PARAM(0)	; param a
 13419 000091E9 50                      	push rax
 13420 000091EA 48B8-                   	mov rax, L_constants + 2270
 13420 000091EC [DE08000000000000] 
 13421 000091F4 50                      	push rax
 13422 000091F5 6A02                    	push 2	; arg count
 13423 000091F7 488B4510                	mov rax, ENV
 13424 000091FB 488B00                  	mov rax, qword [rax + 8 * 0]
 13425 000091FE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13426 00009201 803804                  	cmp byte [rax], T_closure
 13427 00009204 0F85A2E30000            	jne L_error_non_closure
 13428 0000920A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13429 0000920D FF7508                  	push qword [rbp + 8 * 1]
 13430                                   ; old ret addr
 13431 00009210 FF7500                  	push qword [rbp]
 13432                                   ; restore the old rbp
 13433 00009213 BB02000000              	mov rbx, 2
 13434 00009218 4883C303                	add rbx, 3
 13435 0000921C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13436 00009220 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13437 00009225 4C8D4DF8                	lea r9, [rbp - 8]
 13438 00009229 B906000000              	mov rcx, 6
 13439                                  .L_tc_recycle_frame_loop_0076:
 13440 0000922E 4883F900                	cmp rcx, 0
 13441 00009232 7413                    	je .L_tc_recycle_frame_done_0076
 13442 00009234 4D8B11                  	mov r10, qword [r9]
 13443 00009237 4D8910                  	mov qword [r8], r10
 13444 0000923A 4983E808                	sub r8, 8
 13445 0000923E 4983E908                	sub r9, 8
 13446 00009242 48FFC9                  	dec rcx
 13447 00009245 EBE7                    	jmp .L_tc_recycle_frame_loop_0076
 13448                                  .L_tc_recycle_frame_done_0076:
 13449 00009247 498D6008                	lea rsp, [r8 + 8]
 13450 0000924B 5D                      	pop rbp ; restore the old rbp
 13451 0000924C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13452 0000924F E994010000              	jmp .L_if_end_0042
 13453                                  .L_if_else_0042:
 13454                                  	; preparing a tail-call
 13455                                  	; preparing a non-tail-call
 13456 00009254 488B4528                	mov rax, PARAM(1)	; param s
 13457 00009258 50                      	push rax
 13458 00009259 48B8-                   	mov rax, L_constants + 2270
 13458 0000925B [DE08000000000000] 
 13459 00009263 50                      	push rax
 13460 00009264 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13461 0000926C 803805                  	cmp byte [rax], T_undefined
 13462 0000926F 0F84B3E20000            	je L_error_fvar_undefined
 13463 00009275 50                      	push rax
 13464 00009276 6A03                    	push 3	; arg count
 13465 00009278 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13466 00009280 803805                  	cmp byte [rax], T_undefined
 13467 00009283 0F849FE20000            	je L_error_fvar_undefined
 13468 00009289 803804                  	cmp byte [rax], T_closure
 13469 0000928C 0F851AE30000            	jne L_error_non_closure
 13470 00009292 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13471 00009295 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13472 00009298 50                      	push rax
 13473 00009299 6A01                    	push 1	; arg count
 13474 0000929B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13475 000092A0 E8B0E30000              	call malloc
 13476 000092A5 50                      	push rax
 13477 000092A6 BF10000000              	mov rdi, 8 * 2	; new rib
 13478 000092AB E8A5E30000              	call malloc
 13479 000092B0 50                      	push rax
 13480 000092B1 BF20000000              	mov rdi, 8 * 4	; extended env
 13481 000092B6 E89AE30000              	call malloc
 13482 000092BB 488B7D10                	mov rdi, ENV
 13483 000092BF BE00000000              	mov rsi, 0
 13484 000092C4 BA01000000              	mov rdx, 1
 13485                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 13486 000092C9 4883FE03                	cmp rsi, 3
 13487 000092CD 7410                    	je .L_lambda_simple_env_end_0045
 13488 000092CF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13489 000092D3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13490 000092D7 48FFC6                  	inc rsi
 13491 000092DA 48FFC2                  	inc rdx
 13492 000092DD EBEA                    	jmp .L_lambda_simple_env_loop_0045
 13493                                  .L_lambda_simple_env_end_0045:
 13494 000092DF 5B                      	pop rbx
 13495 000092E0 BE00000000              	mov rsi, 0
 13496                                  .L_lambda_simple_params_loop_0045:	; copy params
 13497 000092E5 4883FE02                	cmp rsi, 2
 13498 000092E9 740E                    	je .L_lambda_simple_params_end_0045
 13499 000092EB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13500 000092F0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13501 000092F4 48FFC6                  	inc rsi
 13502 000092F7 EBEC                    	jmp .L_lambda_simple_params_loop_0045
 13503                                  .L_lambda_simple_params_end_0045:
 13504 000092F9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13505 000092FC 4889C3                  	mov rbx, rax
 13506 000092FF 58                      	pop rax
 13507 00009300 C60004                  	mov byte [rax], T_closure
 13508 00009303 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13509 00009307 48C74009[14930000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 13510 0000930F E986000000              	jmp .L_lambda_simple_end_0045
 13511                                  .L_lambda_simple_code_0045:	; lambda-simple body
 13512 00009314 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13513 0000931A 740B                    	je .L_lambda_simple_arity_check_ok_0045
 13514 0000931C FF742410                	push qword [rsp + 8 * 2]
 13515 00009320 6A01                    	push 1
 13516 00009322 E9E7E20000              	jmp L_error_incorrect_arity_simple
 13517                                  .L_lambda_simple_arity_check_ok_0045:
 13518 00009327 C8000000                	enter 0, 0
 13519                                  	; preparing a tail-call
 13520 0000932B 488B4520                	mov rax, PARAM(0)	; param b
 13521 0000932F 50                      	push rax
 13522 00009330 488B4510                	mov rax, ENV
 13523 00009334 488B00                  	mov rax, qword [rax + 8 * 0]
 13524 00009337 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13525 0000933A 50                      	push rax
 13526 0000933B 6A02                    	push 2	; arg count
 13527 0000933D 488B4510                	mov rax, ENV
 13528 00009341 488B4008                	mov rax, qword [rax + 8 * 1]
 13529 00009345 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13530 00009348 803804                  	cmp byte [rax], T_closure
 13531 0000934B 0F855BE20000            	jne L_error_non_closure
 13532 00009351 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13533 00009354 FF7508                  	push qword [rbp + 8 * 1]
 13534                                   ; old ret addr
 13535 00009357 FF7500                  	push qword [rbp]
 13536                                   ; restore the old rbp
 13537 0000935A BB02000000              	mov rbx, 2
 13538 0000935F 4883C303                	add rbx, 3
 13539 00009363 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13540 00009367 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13541 0000936C 4C8D4DF8                	lea r9, [rbp - 8]
 13542 00009370 B906000000              	mov rcx, 6
 13543                                  .L_tc_recycle_frame_loop_0078:
 13544 00009375 4883F900                	cmp rcx, 0
 13545 00009379 7413                    	je .L_tc_recycle_frame_done_0078
 13546 0000937B 4D8B11                  	mov r10, qword [r9]
 13547 0000937E 4D8910                  	mov qword [r8], r10
 13548 00009381 4983E808                	sub r8, 8
 13549 00009385 4983E908                	sub r9, 8
 13550 00009389 48FFC9                  	dec rcx
 13551 0000938C EBE7                    	jmp .L_tc_recycle_frame_loop_0078
 13552                                  .L_tc_recycle_frame_done_0078:
 13553 0000938E 498D6008                	lea rsp, [r8 + 8]
 13554 00009392 5D                      	pop rbp ; restore the old rbp
 13555 00009393 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13556 00009396 C9                      	leave
 13557 00009397 C21800                  	ret AND_KILL_FRAME(1)
 13558                                  .L_lambda_simple_end_0045:	; new closure is in rax
 13559 0000939A 803804                  	cmp byte [rax], T_closure
 13560 0000939D 0F8509E20000            	jne L_error_non_closure
 13561 000093A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13562 000093A6 FF7508                  	push qword [rbp + 8 * 1]
 13563                                   ; old ret addr
 13564 000093A9 FF7500                  	push qword [rbp]
 13565                                   ; restore the old rbp
 13566 000093AC BB01000000              	mov rbx, 1
 13567 000093B1 4883C303                	add rbx, 3
 13568 000093B5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13569 000093B9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13570 000093BE 4C8D4DF8                	lea r9, [rbp - 8]
 13571 000093C2 B905000000              	mov rcx, 5
 13572                                  .L_tc_recycle_frame_loop_0077:
 13573 000093C7 4883F900                	cmp rcx, 0
 13574 000093CB 7413                    	je .L_tc_recycle_frame_done_0077
 13575 000093CD 4D8B11                  	mov r10, qword [r9]
 13576 000093D0 4D8910                  	mov qword [r8], r10
 13577 000093D3 4983E808                	sub r8, 8
 13578 000093D7 4983E908                	sub r9, 8
 13579 000093DB 48FFC9                  	dec rcx
 13580 000093DE EBE7                    	jmp .L_tc_recycle_frame_loop_0077
 13581                                  .L_tc_recycle_frame_done_0077:
 13582 000093E0 498D6008                	lea rsp, [r8 + 8]
 13583 000093E4 5D                      	pop rbp ; restore the old rbp
 13584 000093E5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13585                                  .L_if_end_0042:
 13586 000093E8 C9                      	leave
 13587 000093E9 C22000                  	ret 8 * (2 + 2)
 13588                                  .L_lambda_opt_end_000d:	; new closure is in rax
 13589 000093EC C9                      	leave
 13590 000093ED C21800                  	ret AND_KILL_FRAME(1)
 13591                                  .L_lambda_simple_end_0044:	; new closure is in rax
 13592 000093F0 803804                  	cmp byte [rax], T_closure
 13593 000093F3 0F85B3E10000            	jne L_error_non_closure
 13594 000093F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13595 000093FC FF7508                  	push qword [rbp + 8 * 1]
 13596                                   ; old ret addr
 13597 000093FF FF7500                  	push qword [rbp]
 13598                                   ; restore the old rbp
 13599 00009402 BB01000000              	mov rbx, 1
 13600 00009407 4883C303                	add rbx, 3
 13601 0000940B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13602 0000940F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13603 00009414 4C8D4DF8                	lea r9, [rbp - 8]
 13604 00009418 B905000000              	mov rcx, 5
 13605                                  .L_tc_recycle_frame_loop_0068:
 13606 0000941D 4883F900                	cmp rcx, 0
 13607 00009421 7413                    	je .L_tc_recycle_frame_done_0068
 13608 00009423 4D8B11                  	mov r10, qword [r9]
 13609 00009426 4D8910                  	mov qword [r8], r10
 13610 00009429 4983E808                	sub r8, 8
 13611 0000942D 4983E908                	sub r9, 8
 13612 00009431 48FFC9                  	dec rcx
 13613 00009434 EBE7                    	jmp .L_tc_recycle_frame_loop_0068
 13614                                  .L_tc_recycle_frame_done_0068:
 13615 00009436 498D6008                	lea rsp, [r8 + 8]
 13616 0000943A 5D                      	pop rbp ; restore the old rbp
 13617 0000943B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13618 0000943E C9                      	leave
 13619 0000943F C21800                  	ret AND_KILL_FRAME(1)
 13620                                  .L_lambda_simple_end_0042:	; new closure is in rax
 13621 00009442 803804                  	cmp byte [rax], T_closure
 13622 00009445 0F8561E10000            	jne L_error_non_closure
 13623 0000944B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13624 0000944E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13625 00009451 48890425[F80D0000]      	mov qword [free_var_3], rax
 13626 00009459 48B8-                   	mov rax, sob_void
 13626 0000945B [0000000000000000] 
 13627                                  
 13628 00009463 4889C7                  	mov rdi, rax
 13629 00009466 E83FE40000              	call print_sexpr_if_not_void
 13630 0000946B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13631 00009470 E8E0E10000              	call malloc
 13632 00009475 50                      	push rax
 13633 00009476 BF00000000              	mov rdi, 8 * 0	; new rib
 13634 0000947B E8D5E10000              	call malloc
 13635 00009480 50                      	push rax
 13636 00009481 BF08000000              	mov rdi, 8 * 1	; extended env
 13637 00009486 E8CAE10000              	call malloc
 13638 0000948B 488B7D10                	mov rdi, ENV
 13639 0000948F BE00000000              	mov rsi, 0
 13640 00009494 BA01000000              	mov rdx, 1
 13641                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 13642 00009499 4883FE00                	cmp rsi, 0
 13643 0000949D 7410                    	je .L_lambda_simple_env_end_0046
 13644 0000949F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13645 000094A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13646 000094A7 48FFC6                  	inc rsi
 13647 000094AA 48FFC2                  	inc rdx
 13648 000094AD EBEA                    	jmp .L_lambda_simple_env_loop_0046
 13649                                  .L_lambda_simple_env_end_0046:
 13650 000094AF 5B                      	pop rbx
 13651 000094B0 BE00000000              	mov rsi, 0
 13652                                  .L_lambda_simple_params_loop_0046:	; copy params
 13653 000094B5 4883FE00                	cmp rsi, 0
 13654 000094B9 740E                    	je .L_lambda_simple_params_end_0046
 13655 000094BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13656 000094C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13657 000094C4 48FFC6                  	inc rsi
 13658 000094C7 EBEC                    	jmp .L_lambda_simple_params_loop_0046
 13659                                  .L_lambda_simple_params_end_0046:
 13660 000094C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13661 000094CC 4889C3                  	mov rbx, rax
 13662 000094CF 58                      	pop rax
 13663 000094D0 C60004                  	mov byte [rax], T_closure
 13664 000094D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13665 000094D7 48C74009[E4940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 13666 000094DF E915010000              	jmp .L_lambda_simple_end_0046
 13667                                  .L_lambda_simple_code_0046:	; lambda-simple body
 13668 000094E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13669 000094EA 740B                    	je .L_lambda_simple_arity_check_ok_0046
 13670 000094EC FF742410                	push qword [rsp + 8 * 2]
 13671 000094F0 6A01                    	push 1
 13672 000094F2 E917E10000              	jmp L_error_incorrect_arity_simple
 13673                                  .L_lambda_simple_arity_check_ok_0046:
 13674 000094F7 C8000000                	enter 0, 0
 13675                                  	; preparing a non-tail-call
 13676 000094FB 488B4520                	mov rax, PARAM(0)	; param n
 13677 000094FF 50                      	push rax
 13678 00009500 6A01                    	push 1	; arg count
 13679 00009502 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 13680 0000950A 803805                  	cmp byte [rax], T_undefined
 13681 0000950D 0F8415E00000            	je L_error_fvar_undefined
 13682 00009513 803804                  	cmp byte [rax], T_closure
 13683 00009516 0F8590E00000            	jne L_error_non_closure
 13684 0000951C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13685 0000951F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13686 00009522 483D[02000000]          	cmp rax, sob_boolean_false
 13687 00009528 740F                    	je .L_if_else_0043
 13688 0000952A 48B8-                   	mov rax, L_constants + 2270
 13688 0000952C [DE08000000000000] 
 13689 00009534 E9BC000000              	jmp .L_if_end_0043
 13690                                  .L_if_else_0043:
 13691                                  	; preparing a tail-call
 13692                                  	; preparing a non-tail-call
 13693                                  	; preparing a non-tail-call
 13694 00009539 48B8-                   	mov rax, L_constants + 2270
 13694 0000953B [DE08000000000000] 
 13695 00009543 50                      	push rax
 13696 00009544 488B4520                	mov rax, PARAM(0)	; param n
 13697 00009548 50                      	push rax
 13698 00009549 6A02                    	push 2	; arg count
 13699 0000954B 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 13700 00009553 803805                  	cmp byte [rax], T_undefined
 13701 00009556 0F84CCDF0000            	je L_error_fvar_undefined
 13702 0000955C 803804                  	cmp byte [rax], T_closure
 13703 0000955F 0F8547E00000            	jne L_error_non_closure
 13704 00009565 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13705 00009568 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13706 0000956B 50                      	push rax
 13707 0000956C 6A01                    	push 1	; arg count
 13708 0000956E 488B0425[59130000]      	mov rax, qword [free_var_84]	; free var fact
 13709 00009576 803805                  	cmp byte [rax], T_undefined
 13710 00009579 0F84A9DF0000            	je L_error_fvar_undefined
 13711 0000957F 803804                  	cmp byte [rax], T_closure
 13712 00009582 0F8524E00000            	jne L_error_non_closure
 13713 00009588 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13714 0000958B FF5009                  	call SOB_CLOSURE_CODE(rax)
 13715 0000958E 50                      	push rax
 13716 0000958F 488B4520                	mov rax, PARAM(0)	; param n
 13717 00009593 50                      	push rax
 13718 00009594 6A02                    	push 2	; arg count
 13719 00009596 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13720 0000959E 803805                  	cmp byte [rax], T_undefined
 13721 000095A1 0F8481DF0000            	je L_error_fvar_undefined
 13722 000095A7 803804                  	cmp byte [rax], T_closure
 13723 000095AA 0F85FCDF0000            	jne L_error_non_closure
 13724 000095B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13725 000095B3 FF7508                  	push qword [rbp + 8 * 1]
 13726                                   ; old ret addr
 13727 000095B6 FF7500                  	push qword [rbp]
 13728                                   ; restore the old rbp
 13729 000095B9 BB02000000              	mov rbx, 2
 13730 000095BE 4883C303                	add rbx, 3
 13731 000095C2 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13732 000095C6 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13733 000095CB 4C8D4DF8                	lea r9, [rbp - 8]
 13734 000095CF B906000000              	mov rcx, 6
 13735                                  .L_tc_recycle_frame_loop_0079:
 13736 000095D4 4883F900                	cmp rcx, 0
 13737 000095D8 7413                    	je .L_tc_recycle_frame_done_0079
 13738 000095DA 4D8B11                  	mov r10, qword [r9]
 13739 000095DD 4D8910                  	mov qword [r8], r10
 13740 000095E0 4983E808                	sub r8, 8
 13741 000095E4 4983E908                	sub r9, 8
 13742 000095E8 48FFC9                  	dec rcx
 13743 000095EB EBE7                    	jmp .L_tc_recycle_frame_loop_0079
 13744                                  .L_tc_recycle_frame_done_0079:
 13745 000095ED 498D6008                	lea rsp, [r8 + 8]
 13746 000095F1 5D                      	pop rbp ; restore the old rbp
 13747 000095F2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13748                                  .L_if_end_0043:
 13749 000095F5 C9                      	leave
 13750 000095F6 C21800                  	ret AND_KILL_FRAME(1)
 13751                                  .L_lambda_simple_end_0046:	; new closure is in rax
 13752 000095F9 48890425[59130000]      	mov qword [free_var_84], rax
 13753 00009601 48B8-                   	mov rax, sob_void
 13753 00009603 [0000000000000000] 
 13754                                  
 13755 0000960B 4889C7                  	mov rdi, rax
 13756 0000960E E897E20000              	call print_sexpr_if_not_void
 13757 00009613 48B8-                   	mov rax, L_constants + 0
 13757 00009615 [0000000000000000] 
 13758 0000961D 48890425[090E0000]      	mov qword [free_var_4], rax
 13759 00009625 48B8-                   	mov rax, sob_void
 13759 00009627 [0000000000000000] 
 13760                                  
 13761 0000962F 4889C7                  	mov rdi, rax
 13762 00009632 E873E20000              	call print_sexpr_if_not_void
 13763 00009637 48B8-                   	mov rax, L_constants + 0
 13763 00009639 [0000000000000000] 
 13764 00009641 48890425[1A0E0000]      	mov qword [free_var_5], rax
 13765 00009649 48B8-                   	mov rax, sob_void
 13765 0000964B [0000000000000000] 
 13766                                  
 13767 00009653 4889C7                  	mov rdi, rax
 13768 00009656 E84FE20000              	call print_sexpr_if_not_void
 13769 0000965B 48B8-                   	mov rax, L_constants + 0
 13769 0000965D [0000000000000000] 
 13770 00009665 48890425[3C0E0000]      	mov qword [free_var_7], rax
 13771 0000966D 48B8-                   	mov rax, sob_void
 13771 0000966F [0000000000000000] 
 13772                                  
 13773 00009677 4889C7                  	mov rdi, rax
 13774 0000967A E82BE20000              	call print_sexpr_if_not_void
 13775 0000967F 48B8-                   	mov rax, L_constants + 0
 13775 00009681 [0000000000000000] 
 13776 00009689 48890425[4D0E0000]      	mov qword [free_var_8], rax
 13777 00009691 48B8-                   	mov rax, sob_void
 13777 00009693 [0000000000000000] 
 13778                                  
 13779 0000969B 4889C7                  	mov rdi, rax
 13780 0000969E E807E20000              	call print_sexpr_if_not_void
 13781 000096A3 48B8-                   	mov rax, L_constants + 0
 13781 000096A5 [0000000000000000] 
 13782 000096AD 48890425[2B0E0000]      	mov qword [free_var_6], rax
 13783 000096B5 48B8-                   	mov rax, sob_void
 13783 000096B7 [0000000000000000] 
 13784                                  
 13785 000096BF 4889C7                  	mov rdi, rax
 13786 000096C2 E8E3E10000              	call print_sexpr_if_not_void
 13787                                  	; preparing a non-tail-call
 13788 000096C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13789 000096CC E884DF0000              	call malloc
 13790 000096D1 50                      	push rax
 13791 000096D2 BF00000000              	mov rdi, 8 * 0	; new rib
 13792 000096D7 E879DF0000              	call malloc
 13793 000096DC 50                      	push rax
 13794 000096DD BF08000000              	mov rdi, 8 * 1	; extended env
 13795 000096E2 E86EDF0000              	call malloc
 13796 000096E7 488B7D10                	mov rdi, ENV
 13797 000096EB BE00000000              	mov rsi, 0
 13798 000096F0 BA01000000              	mov rdx, 1
 13799                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 13800 000096F5 4883FE00                	cmp rsi, 0
 13801 000096F9 7410                    	je .L_lambda_simple_env_end_0047
 13802 000096FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13803 000096FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13804 00009703 48FFC6                  	inc rsi
 13805 00009706 48FFC2                  	inc rdx
 13806 00009709 EBEA                    	jmp .L_lambda_simple_env_loop_0047
 13807                                  .L_lambda_simple_env_end_0047:
 13808 0000970B 5B                      	pop rbx
 13809 0000970C BE00000000              	mov rsi, 0
 13810                                  .L_lambda_simple_params_loop_0047:	; copy params
 13811 00009711 4883FE00                	cmp rsi, 0
 13812 00009715 740E                    	je .L_lambda_simple_params_end_0047
 13813 00009717 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13814 0000971C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13815 00009720 48FFC6                  	inc rsi
 13816 00009723 EBEC                    	jmp .L_lambda_simple_params_loop_0047
 13817                                  .L_lambda_simple_params_end_0047:
 13818 00009725 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13819 00009728 4889C3                  	mov rbx, rax
 13820 0000972B 58                      	pop rax
 13821 0000972C C60004                  	mov byte [rax], T_closure
 13822 0000972F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13823 00009733 48C74009[40970000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 13824 0000973B E992000000              	jmp .L_lambda_simple_end_0047
 13825                                  .L_lambda_simple_code_0047:	; lambda-simple body
 13826 00009740 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13827 00009746 740B                    	je .L_lambda_simple_arity_check_ok_0047
 13828 00009748 FF742410                	push qword [rsp + 8 * 2]
 13829 0000974C 6A00                    	push 0
 13830 0000974E E9BBDE0000              	jmp L_error_incorrect_arity_simple
 13831                                  .L_lambda_simple_arity_check_ok_0047:
 13832 00009753 C8000000                	enter 0, 0
 13833                                  	; preparing a tail-call
 13834 00009757 48B8-                   	mov rax, L_constants + 2408
 13834 00009759 [6809000000000000] 
 13835 00009761 50                      	push rax
 13836 00009762 48B8-                   	mov rax, L_constants + 2399
 13836 00009764 [5F09000000000000] 
 13837 0000976C 50                      	push rax
 13838 0000976D 6A02                    	push 2	; arg count
 13839 0000976F 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 13840 00009777 803805                  	cmp byte [rax], T_undefined
 13841 0000977A 0F84A8DD0000            	je L_error_fvar_undefined
 13842 00009780 803804                  	cmp byte [rax], T_closure
 13843 00009783 0F8523DE0000            	jne L_error_non_closure
 13844 00009789 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13845 0000978C FF7508                  	push qword [rbp + 8 * 1]
 13846                                   ; old ret addr
 13847 0000978F FF7500                  	push qword [rbp]
 13848                                   ; restore the old rbp
 13849 00009792 BB02000000              	mov rbx, 2
 13850 00009797 4883C303                	add rbx, 3
 13851 0000979B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 13852 0000979F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 13853 000097A4 4C8D4DF8                	lea r9, [rbp - 8]
 13854 000097A8 B906000000              	mov rcx, 6
 13855                                  .L_tc_recycle_frame_loop_007a:
 13856 000097AD 4883F900                	cmp rcx, 0
 13857 000097B1 7413                    	je .L_tc_recycle_frame_done_007a
 13858 000097B3 4D8B11                  	mov r10, qword [r9]
 13859 000097B6 4D8910                  	mov qword [r8], r10
 13860 000097B9 4983E808                	sub r8, 8
 13861 000097BD 4983E908                	sub r9, 8
 13862 000097C1 48FFC9                  	dec rcx
 13863 000097C4 EBE7                    	jmp .L_tc_recycle_frame_loop_007a
 13864                                  .L_tc_recycle_frame_done_007a:
 13865 000097C6 498D6008                	lea rsp, [r8 + 8]
 13866 000097CA 5D                      	pop rbp ; restore the old rbp
 13867 000097CB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13868 000097CE C9                      	leave
 13869 000097CF C21000                  	ret AND_KILL_FRAME(0)
 13870                                  .L_lambda_simple_end_0047:	; new closure is in rax
 13871 000097D2 50                      	push rax
 13872 000097D3 6A01                    	push 1	; arg count
 13873 000097D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13874 000097DA E876DE0000              	call malloc
 13875 000097DF 50                      	push rax
 13876 000097E0 BF00000000              	mov rdi, 8 * 0	; new rib
 13877 000097E5 E86BDE0000              	call malloc
 13878 000097EA 50                      	push rax
 13879 000097EB BF08000000              	mov rdi, 8 * 1	; extended env
 13880 000097F0 E860DE0000              	call malloc
 13881 000097F5 488B7D10                	mov rdi, ENV
 13882 000097F9 BE00000000              	mov rsi, 0
 13883 000097FE BA01000000              	mov rdx, 1
 13884                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 13885 00009803 4883FE00                	cmp rsi, 0
 13886 00009807 7410                    	je .L_lambda_simple_env_end_0048
 13887 00009809 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13888 0000980D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13889 00009811 48FFC6                  	inc rsi
 13890 00009814 48FFC2                  	inc rdx
 13891 00009817 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 13892                                  .L_lambda_simple_env_end_0048:
 13893 00009819 5B                      	pop rbx
 13894 0000981A BE00000000              	mov rsi, 0
 13895                                  .L_lambda_simple_params_loop_0048:	; copy params
 13896 0000981F 4883FE00                	cmp rsi, 0
 13897 00009823 740E                    	je .L_lambda_simple_params_end_0048
 13898 00009825 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13899 0000982A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13900 0000982E 48FFC6                  	inc rsi
 13901 00009831 EBEC                    	jmp .L_lambda_simple_params_loop_0048
 13902                                  .L_lambda_simple_params_end_0048:
 13903 00009833 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13904 00009836 4889C3                  	mov rbx, rax
 13905 00009839 58                      	pop rax
 13906 0000983A C60004                  	mov byte [rax], T_closure
 13907 0000983D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13908 00009841 48C74009[4E980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 13909 00009849 E9011A0000              	jmp .L_lambda_simple_end_0048
 13910                                  .L_lambda_simple_code_0048:	; lambda-simple body
 13911 0000984E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13912 00009854 740B                    	je .L_lambda_simple_arity_check_ok_0048
 13913 00009856 FF742410                	push qword [rsp + 8 * 2]
 13914 0000985A 6A01                    	push 1
 13915 0000985C E9ADDD0000              	jmp L_error_incorrect_arity_simple
 13916                                  .L_lambda_simple_arity_check_ok_0048:
 13917 00009861 C8000000                	enter 0, 0
 13918                                  	; preparing a tail-call
 13919 00009865 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13920 0000986A E8E6DD0000              	call malloc
 13921 0000986F 50                      	push rax
 13922 00009870 BF08000000              	mov rdi, 8 * 1	; new rib
 13923 00009875 E8DBDD0000              	call malloc
 13924 0000987A 50                      	push rax
 13925 0000987B BF10000000              	mov rdi, 8 * 2	; extended env
 13926 00009880 E8D0DD0000              	call malloc
 13927 00009885 488B7D10                	mov rdi, ENV
 13928 00009889 BE00000000              	mov rsi, 0
 13929 0000988E BA01000000              	mov rdx, 1
 13930                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13931 00009893 4883FE01                	cmp rsi, 1
 13932 00009897 7410                    	je .L_lambda_simple_env_end_0049
 13933 00009899 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13934 0000989D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13935 000098A1 48FFC6                  	inc rsi
 13936 000098A4 48FFC2                  	inc rdx
 13937 000098A7 EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13938                                  .L_lambda_simple_env_end_0049:
 13939 000098A9 5B                      	pop rbx
 13940 000098AA BE00000000              	mov rsi, 0
 13941                                  .L_lambda_simple_params_loop_0049:	; copy params
 13942 000098AF 4883FE01                	cmp rsi, 1
 13943 000098B3 740E                    	je .L_lambda_simple_params_end_0049
 13944 000098B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13945 000098BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13946 000098BE 48FFC6                  	inc rsi
 13947 000098C1 EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13948                                  .L_lambda_simple_params_end_0049:
 13949 000098C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13950 000098C6 4889C3                  	mov rbx, rax
 13951 000098C9 58                      	pop rax
 13952 000098CA C60004                  	mov byte [rax], T_closure
 13953 000098CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13954 000098D1 48C74009[DE980000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13955 000098D9 E901090000              	jmp .L_lambda_simple_end_0049
 13956                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13957 000098DE 48837C241003            	cmp qword [rsp + 8 * 2], 3
 13958 000098E4 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13959 000098E6 FF742410                	push qword [rsp + 8 * 2]
 13960 000098EA 6A03                    	push 3
 13961 000098EC E91DDD0000              	jmp L_error_incorrect_arity_simple
 13962                                  .L_lambda_simple_arity_check_ok_0049:
 13963 000098F1 C8000000                	enter 0, 0
 13964 000098F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13965 000098FA E856DD0000              	call malloc
 13966 000098FF 50                      	push rax
 13967 00009900 BF18000000              	mov rdi, 8 * 3	; new rib
 13968 00009905 E84BDD0000              	call malloc
 13969 0000990A 50                      	push rax
 13970 0000990B BF18000000              	mov rdi, 8 * 3	; extended env
 13971 00009910 E840DD0000              	call malloc
 13972 00009915 488B7D10                	mov rdi, ENV
 13973 00009919 BE00000000              	mov rsi, 0
 13974 0000991E BA01000000              	mov rdx, 1
 13975                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13976 00009923 4883FE02                	cmp rsi, 2
 13977 00009927 7410                    	je .L_lambda_simple_env_end_004a
 13978 00009929 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13979 0000992D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13980 00009931 48FFC6                  	inc rsi
 13981 00009934 48FFC2                  	inc rdx
 13982 00009937 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13983                                  .L_lambda_simple_env_end_004a:
 13984 00009939 5B                      	pop rbx
 13985 0000993A BE00000000              	mov rsi, 0
 13986                                  .L_lambda_simple_params_loop_004a:	; copy params
 13987 0000993F 4883FE03                	cmp rsi, 3
 13988 00009943 740E                    	je .L_lambda_simple_params_end_004a
 13989 00009945 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13990 0000994A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13991 0000994E 48FFC6                  	inc rsi
 13992 00009951 EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13993                                  .L_lambda_simple_params_end_004a:
 13994 00009953 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13995 00009956 4889C3                  	mov rbx, rax
 13996 00009959 58                      	pop rax
 13997 0000995A C60004                  	mov byte [rax], T_closure
 13998 0000995D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13999 00009961 48C74009[6E990000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 14000 00009969 E96D080000              	jmp .L_lambda_simple_end_004a
 14001                                  .L_lambda_simple_code_004a:	; lambda-simple body
 14002 0000996E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14003 00009974 740B                    	je .L_lambda_simple_arity_check_ok_004a
 14004 00009976 FF742410                	push qword [rsp + 8 * 2]
 14005 0000997A 6A02                    	push 2
 14006 0000997C E98DDC0000              	jmp L_error_incorrect_arity_simple
 14007                                  .L_lambda_simple_arity_check_ok_004a:
 14008 00009981 C8000000                	enter 0, 0
 14009                                  	; preparing a non-tail-call
 14010 00009985 488B4520                	mov rax, PARAM(0)	; param a
 14011 00009989 50                      	push rax
 14012 0000998A 6A01                    	push 1	; arg count
 14013 0000998C 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14014 00009994 803805                  	cmp byte [rax], T_undefined
 14015 00009997 0F848BDB0000            	je L_error_fvar_undefined
 14016 0000999D 803804                  	cmp byte [rax], T_closure
 14017 000099A0 0F8506DC0000            	jne L_error_non_closure
 14018 000099A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14019 000099A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14020 000099AC 483D[02000000]          	cmp rax, sob_boolean_false
 14021 000099B2 0F8475020000            	je .L_if_else_004f
 14022                                  	; preparing a non-tail-call
 14023 000099B8 488B4528                	mov rax, PARAM(1)	; param b
 14024 000099BC 50                      	push rax
 14025 000099BD 6A01                    	push 1	; arg count
 14026 000099BF 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14027 000099C7 803805                  	cmp byte [rax], T_undefined
 14028 000099CA 0F8458DB0000            	je L_error_fvar_undefined
 14029 000099D0 803804                  	cmp byte [rax], T_closure
 14030 000099D3 0F85D3DB0000            	jne L_error_non_closure
 14031 000099D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14032 000099DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 14033 000099DF 483D[02000000]          	cmp rax, sob_boolean_false
 14034 000099E5 7469                    	je .L_if_else_0046
 14035                                  	; preparing a tail-call
 14036 000099E7 488B4528                	mov rax, PARAM(1)	; param b
 14037 000099EB 50                      	push rax
 14038 000099EC 488B4520                	mov rax, PARAM(0)	; param a
 14039 000099F0 50                      	push rax
 14040 000099F1 6A02                    	push 2	; arg count
 14041 000099F3 488B4510                	mov rax, ENV
 14042 000099F7 488B00                  	mov rax, qword [rax + 8 * 0]
 14043 000099FA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14044 000099FD 803804                  	cmp byte [rax], T_closure
 14045 00009A00 0F85A6DB0000            	jne L_error_non_closure
 14046 00009A06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14047 00009A09 FF7508                  	push qword [rbp + 8 * 1]
 14048                                   ; old ret addr
 14049 00009A0C FF7500                  	push qword [rbp]
 14050                                   ; restore the old rbp
 14051 00009A0F BB02000000              	mov rbx, 2
 14052 00009A14 4883C303                	add rbx, 3
 14053 00009A18 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14054 00009A1C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14055 00009A21 4C8D4DF8                	lea r9, [rbp - 8]
 14056 00009A25 B906000000              	mov rcx, 6
 14057                                  .L_tc_recycle_frame_loop_007c:
 14058 00009A2A 4883F900                	cmp rcx, 0
 14059 00009A2E 7413                    	je .L_tc_recycle_frame_done_007c
 14060 00009A30 4D8B11                  	mov r10, qword [r9]
 14061 00009A33 4D8910                  	mov qword [r8], r10
 14062 00009A36 4983E808                	sub r8, 8
 14063 00009A3A 4983E908                	sub r9, 8
 14064 00009A3E 48FFC9                  	dec rcx
 14065 00009A41 EBE7                    	jmp .L_tc_recycle_frame_loop_007c
 14066                                  .L_tc_recycle_frame_done_007c:
 14067 00009A43 498D6008                	lea rsp, [r8 + 8]
 14068 00009A47 5D                      	pop rbp ; restore the old rbp
 14069 00009A48 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14070 00009A4B E9D8010000              	jmp .L_if_end_0046
 14071                                  .L_if_else_0046:
 14072                                  	; preparing a non-tail-call
 14073 00009A50 488B4528                	mov rax, PARAM(1)	; param b
 14074 00009A54 50                      	push rax
 14075 00009A55 6A01                    	push 1	; arg count
 14076 00009A57 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14077 00009A5F 803805                  	cmp byte [rax], T_undefined
 14078 00009A62 0F84C0DA0000            	je L_error_fvar_undefined
 14079 00009A68 803804                  	cmp byte [rax], T_closure
 14080 00009A6B 0F853BDB0000            	jne L_error_non_closure
 14081 00009A71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14082 00009A74 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14083 00009A77 483D[02000000]          	cmp rax, sob_boolean_false
 14084 00009A7D 0F848D000000            	je .L_if_else_0045
 14085                                  	; preparing a tail-call
 14086 00009A83 488B4528                	mov rax, PARAM(1)	; param b
 14087 00009A87 50                      	push rax
 14088                                  	; preparing a non-tail-call
 14089 00009A88 488B4520                	mov rax, PARAM(0)	; param a
 14090 00009A8C 50                      	push rax
 14091 00009A8D 6A01                    	push 1	; arg count
 14092 00009A8F 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14093 00009A97 803805                  	cmp byte [rax], T_undefined
 14094 00009A9A 0F8488DA0000            	je L_error_fvar_undefined
 14095 00009AA0 803804                  	cmp byte [rax], T_closure
 14096 00009AA3 0F8503DB0000            	jne L_error_non_closure
 14097 00009AA9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14098 00009AAC FF5009                  	call SOB_CLOSURE_CODE(rax)
 14099 00009AAF 50                      	push rax
 14100 00009AB0 6A02                    	push 2	; arg count
 14101 00009AB2 488B4510                	mov rax, ENV
 14102 00009AB6 488B00                  	mov rax, qword [rax + 8 * 0]
 14103 00009AB9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14104 00009ABD 803804                  	cmp byte [rax], T_closure
 14105 00009AC0 0F85E6DA0000            	jne L_error_non_closure
 14106 00009AC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14107 00009AC9 FF7508                  	push qword [rbp + 8 * 1]
 14108                                   ; old ret addr
 14109 00009ACC FF7500                  	push qword [rbp]
 14110                                   ; restore the old rbp
 14111 00009ACF BB02000000              	mov rbx, 2
 14112 00009AD4 4883C303                	add rbx, 3
 14113 00009AD8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14114 00009ADC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14115 00009AE1 4C8D4DF8                	lea r9, [rbp - 8]
 14116 00009AE5 B906000000              	mov rcx, 6
 14117                                  .L_tc_recycle_frame_loop_007d:
 14118 00009AEA 4883F900                	cmp rcx, 0
 14119 00009AEE 7413                    	je .L_tc_recycle_frame_done_007d
 14120 00009AF0 4D8B11                  	mov r10, qword [r9]
 14121 00009AF3 4D8910                  	mov qword [r8], r10
 14122 00009AF6 4983E808                	sub r8, 8
 14123 00009AFA 4983E908                	sub r9, 8
 14124 00009AFE 48FFC9                  	dec rcx
 14125 00009B01 EBE7                    	jmp .L_tc_recycle_frame_loop_007d
 14126                                  .L_tc_recycle_frame_done_007d:
 14127 00009B03 498D6008                	lea rsp, [r8 + 8]
 14128 00009B07 5D                      	pop rbp ; restore the old rbp
 14129 00009B08 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14130 00009B0B E918010000              	jmp .L_if_end_0045
 14131                                  .L_if_else_0045:
 14132                                  	; preparing a non-tail-call
 14133 00009B10 488B4528                	mov rax, PARAM(1)	; param b
 14134 00009B14 50                      	push rax
 14135 00009B15 6A01                    	push 1	; arg count
 14136 00009B17 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14137 00009B1F 803805                  	cmp byte [rax], T_undefined
 14138 00009B22 0F8400DA0000            	je L_error_fvar_undefined
 14139 00009B28 803804                  	cmp byte [rax], T_closure
 14140 00009B2B 0F857BDA0000            	jne L_error_non_closure
 14141 00009B31 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14142 00009B34 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14143 00009B37 483D[02000000]          	cmp rax, sob_boolean_false
 14144 00009B3D 0F848A000000            	je .L_if_else_0044
 14145                                  	; preparing a tail-call
 14146 00009B43 488B4528                	mov rax, PARAM(1)	; param b
 14147 00009B47 50                      	push rax
 14148                                  	; preparing a non-tail-call
 14149 00009B48 488B4520                	mov rax, PARAM(0)	; param a
 14150 00009B4C 50                      	push rax
 14151 00009B4D 6A01                    	push 1	; arg count
 14152 00009B4F 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14153 00009B57 803805                  	cmp byte [rax], T_undefined
 14154 00009B5A 0F84C8D90000            	je L_error_fvar_undefined
 14155 00009B60 803804                  	cmp byte [rax], T_closure
 14156 00009B63 0F8543DA0000            	jne L_error_non_closure
 14157 00009B69 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14158 00009B6C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14159 00009B6F 50                      	push rax
 14160 00009B70 6A02                    	push 2	; arg count
 14161 00009B72 488B4510                	mov rax, ENV
 14162 00009B76 488B00                  	mov rax, qword [rax + 8 * 0]
 14163 00009B79 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14164 00009B7D 803804                  	cmp byte [rax], T_closure
 14165 00009B80 0F8526DA0000            	jne L_error_non_closure
 14166 00009B86 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14167 00009B89 FF7508                  	push qword [rbp + 8 * 1]
 14168                                   ; old ret addr
 14169 00009B8C FF7500                  	push qword [rbp]
 14170                                   ; restore the old rbp
 14171 00009B8F BB02000000              	mov rbx, 2
 14172 00009B94 4883C303                	add rbx, 3
 14173 00009B98 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14174 00009B9C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14175 00009BA1 4C8D4DF8                	lea r9, [rbp - 8]
 14176 00009BA5 B906000000              	mov rcx, 6
 14177                                  .L_tc_recycle_frame_loop_007e:
 14178 00009BAA 4883F900                	cmp rcx, 0
 14179 00009BAE 7413                    	je .L_tc_recycle_frame_done_007e
 14180 00009BB0 4D8B11                  	mov r10, qword [r9]
 14181 00009BB3 4D8910                  	mov qword [r8], r10
 14182 00009BB6 4983E808                	sub r8, 8
 14183 00009BBA 4983E908                	sub r9, 8
 14184 00009BBE 48FFC9                  	dec rcx
 14185 00009BC1 EBE7                    	jmp .L_tc_recycle_frame_loop_007e
 14186                                  .L_tc_recycle_frame_done_007e:
 14187 00009BC3 498D6008                	lea rsp, [r8 + 8]
 14188 00009BC7 5D                      	pop rbp ; restore the old rbp
 14189 00009BC8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14190 00009BCB EB5B                    	jmp .L_if_end_0044
 14191                                  .L_if_else_0044:
 14192                                  	; preparing a tail-call
 14193 00009BCD 6A00                    	push 0	; arg count
 14194 00009BCF 488B4510                	mov rax, ENV
 14195 00009BD3 488B4008                	mov rax, qword [rax + 8 * 1]
 14196 00009BD7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14197 00009BDA 803804                  	cmp byte [rax], T_closure
 14198 00009BDD 0F85C9D90000            	jne L_error_non_closure
 14199 00009BE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14200 00009BE6 FF7508                  	push qword [rbp + 8 * 1]
 14201                                   ; old ret addr
 14202 00009BE9 FF7500                  	push qword [rbp]
 14203                                   ; restore the old rbp
 14204 00009BEC BB00000000              	mov rbx, 0
 14205 00009BF1 4883C303                	add rbx, 3
 14206 00009BF5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14207 00009BF9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14208 00009BFE 4C8D4DF8                	lea r9, [rbp - 8]
 14209 00009C02 B904000000              	mov rcx, 4
 14210                                  .L_tc_recycle_frame_loop_007f:
 14211 00009C07 4883F900                	cmp rcx, 0
 14212 00009C0B 7413                    	je .L_tc_recycle_frame_done_007f
 14213 00009C0D 4D8B11                  	mov r10, qword [r9]
 14214 00009C10 4D8910                  	mov qword [r8], r10
 14215 00009C13 4983E808                	sub r8, 8
 14216 00009C17 4983E908                	sub r9, 8
 14217 00009C1B 48FFC9                  	dec rcx
 14218 00009C1E EBE7                    	jmp .L_tc_recycle_frame_loop_007f
 14219                                  .L_tc_recycle_frame_done_007f:
 14220 00009C20 498D6008                	lea rsp, [r8 + 8]
 14221 00009C24 5D                      	pop rbp ; restore the old rbp
 14222 00009C25 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14223                                  .L_if_end_0044:
 14224                                  .L_if_end_0045:
 14225                                  .L_if_end_0046:
 14226 00009C28 E9AA050000              	jmp .L_if_end_004f
 14227                                  .L_if_else_004f:
 14228                                  	; preparing a non-tail-call
 14229 00009C2D 488B4520                	mov rax, PARAM(0)	; param a
 14230 00009C31 50                      	push rax
 14231 00009C32 6A01                    	push 1	; arg count
 14232 00009C34 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14233 00009C3C 803805                  	cmp byte [rax], T_undefined
 14234 00009C3F 0F84E3D80000            	je L_error_fvar_undefined
 14235 00009C45 803804                  	cmp byte [rax], T_closure
 14236 00009C48 0F855ED90000            	jne L_error_non_closure
 14237 00009C4E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14238 00009C51 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14239 00009C54 483D[02000000]          	cmp rax, sob_boolean_false
 14240 00009C5A 0F8476020000            	je .L_if_else_004e
 14241                                  	; preparing a non-tail-call
 14242 00009C60 488B4528                	mov rax, PARAM(1)	; param b
 14243 00009C64 50                      	push rax
 14244 00009C65 6A01                    	push 1	; arg count
 14245 00009C67 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14246 00009C6F 803805                  	cmp byte [rax], T_undefined
 14247 00009C72 0F84B0D80000            	je L_error_fvar_undefined
 14248 00009C78 803804                  	cmp byte [rax], T_closure
 14249 00009C7B 0F852BD90000            	jne L_error_non_closure
 14250 00009C81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14251 00009C84 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14252 00009C87 483D[02000000]          	cmp rax, sob_boolean_false
 14253 00009C8D 0F848D000000            	je .L_if_else_0049
 14254                                  	; preparing a tail-call
 14255                                  	; preparing a non-tail-call
 14256 00009C93 488B4528                	mov rax, PARAM(1)	; param b
 14257 00009C97 50                      	push rax
 14258 00009C98 6A01                    	push 1	; arg count
 14259 00009C9A 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14260 00009CA2 803805                  	cmp byte [rax], T_undefined
 14261 00009CA5 0F847DD80000            	je L_error_fvar_undefined
 14262 00009CAB 803804                  	cmp byte [rax], T_closure
 14263 00009CAE 0F85F8D80000            	jne L_error_non_closure
 14264 00009CB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14265 00009CB7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14266 00009CBA 50                      	push rax
 14267 00009CBB 488B4520                	mov rax, PARAM(0)	; param a
 14268 00009CBF 50                      	push rax
 14269 00009CC0 6A02                    	push 2	; arg count
 14270 00009CC2 488B4510                	mov rax, ENV
 14271 00009CC6 488B00                  	mov rax, qword [rax + 8 * 0]
 14272 00009CC9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14273 00009CCD 803804                  	cmp byte [rax], T_closure
 14274 00009CD0 0F85D6D80000            	jne L_error_non_closure
 14275 00009CD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14276 00009CD9 FF7508                  	push qword [rbp + 8 * 1]
 14277                                   ; old ret addr
 14278 00009CDC FF7500                  	push qword [rbp]
 14279                                   ; restore the old rbp
 14280 00009CDF BB02000000              	mov rbx, 2
 14281 00009CE4 4883C303                	add rbx, 3
 14282 00009CE8 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14283 00009CEC 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14284 00009CF1 4C8D4DF8                	lea r9, [rbp - 8]
 14285 00009CF5 B906000000              	mov rcx, 6
 14286                                  .L_tc_recycle_frame_loop_0080:
 14287 00009CFA 4883F900                	cmp rcx, 0
 14288 00009CFE 7413                    	je .L_tc_recycle_frame_done_0080
 14289 00009D00 4D8B11                  	mov r10, qword [r9]
 14290 00009D03 4D8910                  	mov qword [r8], r10
 14291 00009D06 4983E808                	sub r8, 8
 14292 00009D0A 4983E908                	sub r9, 8
 14293 00009D0E 48FFC9                  	dec rcx
 14294 00009D11 EBE7                    	jmp .L_tc_recycle_frame_loop_0080
 14295                                  .L_tc_recycle_frame_done_0080:
 14296 00009D13 498D6008                	lea rsp, [r8 + 8]
 14297 00009D17 5D                      	pop rbp ; restore the old rbp
 14298 00009D18 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14299 00009D1B E9B1010000              	jmp .L_if_end_0049
 14300                                  .L_if_else_0049:
 14301                                  	; preparing a non-tail-call
 14302 00009D20 488B4528                	mov rax, PARAM(1)	; param b
 14303 00009D24 50                      	push rax
 14304 00009D25 6A01                    	push 1	; arg count
 14305 00009D27 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14306 00009D2F 803805                  	cmp byte [rax], T_undefined
 14307 00009D32 0F84F0D70000            	je L_error_fvar_undefined
 14308 00009D38 803804                  	cmp byte [rax], T_closure
 14309 00009D3B 0F856BD80000            	jne L_error_non_closure
 14310 00009D41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14311 00009D44 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14312 00009D47 483D[02000000]          	cmp rax, sob_boolean_false
 14313 00009D4D 746A                    	je .L_if_else_0048
 14314                                  	; preparing a tail-call
 14315 00009D4F 488B4528                	mov rax, PARAM(1)	; param b
 14316 00009D53 50                      	push rax
 14317 00009D54 488B4520                	mov rax, PARAM(0)	; param a
 14318 00009D58 50                      	push rax
 14319 00009D59 6A02                    	push 2	; arg count
 14320 00009D5B 488B4510                	mov rax, ENV
 14321 00009D5F 488B00                  	mov rax, qword [rax + 8 * 0]
 14322 00009D62 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14323 00009D66 803804                  	cmp byte [rax], T_closure
 14324 00009D69 0F853DD80000            	jne L_error_non_closure
 14325 00009D6F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14326 00009D72 FF7508                  	push qword [rbp + 8 * 1]
 14327                                   ; old ret addr
 14328 00009D75 FF7500                  	push qword [rbp]
 14329                                   ; restore the old rbp
 14330 00009D78 BB02000000              	mov rbx, 2
 14331 00009D7D 4883C303                	add rbx, 3
 14332 00009D81 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14333 00009D85 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14334 00009D8A 4C8D4DF8                	lea r9, [rbp - 8]
 14335 00009D8E B906000000              	mov rcx, 6
 14336                                  .L_tc_recycle_frame_loop_0081:
 14337 00009D93 4883F900                	cmp rcx, 0
 14338 00009D97 7413                    	je .L_tc_recycle_frame_done_0081
 14339 00009D99 4D8B11                  	mov r10, qword [r9]
 14340 00009D9C 4D8910                  	mov qword [r8], r10
 14341 00009D9F 4983E808                	sub r8, 8
 14342 00009DA3 4983E908                	sub r9, 8
 14343 00009DA7 48FFC9                  	dec rcx
 14344 00009DAA EBE7                    	jmp .L_tc_recycle_frame_loop_0081
 14345                                  .L_tc_recycle_frame_done_0081:
 14346 00009DAC 498D6008                	lea rsp, [r8 + 8]
 14347 00009DB0 5D                      	pop rbp ; restore the old rbp
 14348 00009DB1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14349 00009DB4 E918010000              	jmp .L_if_end_0048
 14350                                  .L_if_else_0048:
 14351                                  	; preparing a non-tail-call
 14352 00009DB9 488B4528                	mov rax, PARAM(1)	; param b
 14353 00009DBD 50                      	push rax
 14354 00009DBE 6A01                    	push 1	; arg count
 14355 00009DC0 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14356 00009DC8 803805                  	cmp byte [rax], T_undefined
 14357 00009DCB 0F8457D70000            	je L_error_fvar_undefined
 14358 00009DD1 803804                  	cmp byte [rax], T_closure
 14359 00009DD4 0F85D2D70000            	jne L_error_non_closure
 14360 00009DDA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14361 00009DDD FF5009                  	call SOB_CLOSURE_CODE(rax)
 14362 00009DE0 483D[02000000]          	cmp rax, sob_boolean_false
 14363 00009DE6 0F848A000000            	je .L_if_else_0047
 14364                                  	; preparing a tail-call
 14365 00009DEC 488B4528                	mov rax, PARAM(1)	; param b
 14366 00009DF0 50                      	push rax
 14367                                  	; preparing a non-tail-call
 14368 00009DF1 488B4520                	mov rax, PARAM(0)	; param a
 14369 00009DF5 50                      	push rax
 14370 00009DF6 6A01                    	push 1	; arg count
 14371 00009DF8 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14372 00009E00 803805                  	cmp byte [rax], T_undefined
 14373 00009E03 0F841FD70000            	je L_error_fvar_undefined
 14374 00009E09 803804                  	cmp byte [rax], T_closure
 14375 00009E0C 0F859AD70000            	jne L_error_non_closure
 14376 00009E12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14377 00009E15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14378 00009E18 50                      	push rax
 14379 00009E19 6A02                    	push 2	; arg count
 14380 00009E1B 488B4510                	mov rax, ENV
 14381 00009E1F 488B00                  	mov rax, qword [rax + 8 * 0]
 14382 00009E22 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14383 00009E26 803804                  	cmp byte [rax], T_closure
 14384 00009E29 0F857DD70000            	jne L_error_non_closure
 14385 00009E2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14386 00009E32 FF7508                  	push qword [rbp + 8 * 1]
 14387                                   ; old ret addr
 14388 00009E35 FF7500                  	push qword [rbp]
 14389                                   ; restore the old rbp
 14390 00009E38 BB02000000              	mov rbx, 2
 14391 00009E3D 4883C303                	add rbx, 3
 14392 00009E41 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14393 00009E45 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14394 00009E4A 4C8D4DF8                	lea r9, [rbp - 8]
 14395 00009E4E B906000000              	mov rcx, 6
 14396                                  .L_tc_recycle_frame_loop_0082:
 14397 00009E53 4883F900                	cmp rcx, 0
 14398 00009E57 7413                    	je .L_tc_recycle_frame_done_0082
 14399 00009E59 4D8B11                  	mov r10, qword [r9]
 14400 00009E5C 4D8910                  	mov qword [r8], r10
 14401 00009E5F 4983E808                	sub r8, 8
 14402 00009E63 4983E908                	sub r9, 8
 14403 00009E67 48FFC9                  	dec rcx
 14404 00009E6A EBE7                    	jmp .L_tc_recycle_frame_loop_0082
 14405                                  .L_tc_recycle_frame_done_0082:
 14406 00009E6C 498D6008                	lea rsp, [r8 + 8]
 14407 00009E70 5D                      	pop rbp ; restore the old rbp
 14408 00009E71 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14409 00009E74 EB5B                    	jmp .L_if_end_0047
 14410                                  .L_if_else_0047:
 14411                                  	; preparing a tail-call
 14412 00009E76 6A00                    	push 0	; arg count
 14413 00009E78 488B4510                	mov rax, ENV
 14414 00009E7C 488B4008                	mov rax, qword [rax + 8 * 1]
 14415 00009E80 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14416 00009E83 803804                  	cmp byte [rax], T_closure
 14417 00009E86 0F8520D70000            	jne L_error_non_closure
 14418 00009E8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14419 00009E8F FF7508                  	push qword [rbp + 8 * 1]
 14420                                   ; old ret addr
 14421 00009E92 FF7500                  	push qword [rbp]
 14422                                   ; restore the old rbp
 14423 00009E95 BB00000000              	mov rbx, 0
 14424 00009E9A 4883C303                	add rbx, 3
 14425 00009E9E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14426 00009EA2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14427 00009EA7 4C8D4DF8                	lea r9, [rbp - 8]
 14428 00009EAB B904000000              	mov rcx, 4
 14429                                  .L_tc_recycle_frame_loop_0083:
 14430 00009EB0 4883F900                	cmp rcx, 0
 14431 00009EB4 7413                    	je .L_tc_recycle_frame_done_0083
 14432 00009EB6 4D8B11                  	mov r10, qword [r9]
 14433 00009EB9 4D8910                  	mov qword [r8], r10
 14434 00009EBC 4983E808                	sub r8, 8
 14435 00009EC0 4983E908                	sub r9, 8
 14436 00009EC4 48FFC9                  	dec rcx
 14437 00009EC7 EBE7                    	jmp .L_tc_recycle_frame_loop_0083
 14438                                  .L_tc_recycle_frame_done_0083:
 14439 00009EC9 498D6008                	lea rsp, [r8 + 8]
 14440 00009ECD 5D                      	pop rbp ; restore the old rbp
 14441 00009ECE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14442                                  .L_if_end_0047:
 14443                                  .L_if_end_0048:
 14444                                  .L_if_end_0049:
 14445 00009ED1 E901030000              	jmp .L_if_end_004e
 14446                                  .L_if_else_004e:
 14447                                  	; preparing a non-tail-call
 14448 00009ED6 488B4520                	mov rax, PARAM(0)	; param a
 14449 00009EDA 50                      	push rax
 14450 00009EDB 6A01                    	push 1	; arg count
 14451 00009EDD 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14452 00009EE5 803805                  	cmp byte [rax], T_undefined
 14453 00009EE8 0F843AD60000            	je L_error_fvar_undefined
 14454 00009EEE 803804                  	cmp byte [rax], T_closure
 14455 00009EF1 0F85B5D60000            	jne L_error_non_closure
 14456 00009EF7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14457 00009EFA FF5009                  	call SOB_CLOSURE_CODE(rax)
 14458 00009EFD 483D[02000000]          	cmp rax, sob_boolean_false
 14459 00009F03 0F8473020000            	je .L_if_else_004d
 14460                                  	; preparing a non-tail-call
 14461 00009F09 488B4528                	mov rax, PARAM(1)	; param b
 14462 00009F0D 50                      	push rax
 14463 00009F0E 6A01                    	push 1	; arg count
 14464 00009F10 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14465 00009F18 803805                  	cmp byte [rax], T_undefined
 14466 00009F1B 0F8407D60000            	je L_error_fvar_undefined
 14467 00009F21 803804                  	cmp byte [rax], T_closure
 14468 00009F24 0F8582D60000            	jne L_error_non_closure
 14469 00009F2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14470 00009F2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14471 00009F30 483D[02000000]          	cmp rax, sob_boolean_false
 14472 00009F36 0F848D000000            	je .L_if_else_004c
 14473                                  	; preparing a tail-call
 14474                                  	; preparing a non-tail-call
 14475 00009F3C 488B4528                	mov rax, PARAM(1)	; param b
 14476 00009F40 50                      	push rax
 14477 00009F41 6A01                    	push 1	; arg count
 14478 00009F43 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14479 00009F4B 803805                  	cmp byte [rax], T_undefined
 14480 00009F4E 0F84D4D50000            	je L_error_fvar_undefined
 14481 00009F54 803804                  	cmp byte [rax], T_closure
 14482 00009F57 0F854FD60000            	jne L_error_non_closure
 14483 00009F5D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14484 00009F60 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14485 00009F63 50                      	push rax
 14486 00009F64 488B4520                	mov rax, PARAM(0)	; param a
 14487 00009F68 50                      	push rax
 14488 00009F69 6A02                    	push 2	; arg count
 14489 00009F6B 488B4510                	mov rax, ENV
 14490 00009F6F 488B00                  	mov rax, qword [rax + 8 * 0]
 14491 00009F72 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14492 00009F76 803804                  	cmp byte [rax], T_closure
 14493 00009F79 0F852DD60000            	jne L_error_non_closure
 14494 00009F7F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14495 00009F82 FF7508                  	push qword [rbp + 8 * 1]
 14496                                   ; old ret addr
 14497 00009F85 FF7500                  	push qword [rbp]
 14498                                   ; restore the old rbp
 14499 00009F88 BB02000000              	mov rbx, 2
 14500 00009F8D 4883C303                	add rbx, 3
 14501 00009F91 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14502 00009F95 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14503 00009F9A 4C8D4DF8                	lea r9, [rbp - 8]
 14504 00009F9E B906000000              	mov rcx, 6
 14505                                  .L_tc_recycle_frame_loop_0084:
 14506 00009FA3 4883F900                	cmp rcx, 0
 14507 00009FA7 7413                    	je .L_tc_recycle_frame_done_0084
 14508 00009FA9 4D8B11                  	mov r10, qword [r9]
 14509 00009FAC 4D8910                  	mov qword [r8], r10
 14510 00009FAF 4983E808                	sub r8, 8
 14511 00009FB3 4983E908                	sub r9, 8
 14512 00009FB7 48FFC9                  	dec rcx
 14513 00009FBA EBE7                    	jmp .L_tc_recycle_frame_loop_0084
 14514                                  .L_tc_recycle_frame_done_0084:
 14515 00009FBC 498D6008                	lea rsp, [r8 + 8]
 14516 00009FC0 5D                      	pop rbp ; restore the old rbp
 14517 00009FC1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14518 00009FC4 E9B1010000              	jmp .L_if_end_004c
 14519                                  .L_if_else_004c:
 14520                                  	; preparing a non-tail-call
 14521 00009FC9 488B4528                	mov rax, PARAM(1)	; param b
 14522 00009FCD 50                      	push rax
 14523 00009FCE 6A01                    	push 1	; arg count
 14524 00009FD0 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14525 00009FD8 803805                  	cmp byte [rax], T_undefined
 14526 00009FDB 0F8447D50000            	je L_error_fvar_undefined
 14527 00009FE1 803804                  	cmp byte [rax], T_closure
 14528 00009FE4 0F85C2D50000            	jne L_error_non_closure
 14529 00009FEA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14530 00009FED FF5009                  	call SOB_CLOSURE_CODE(rax)
 14531 00009FF0 483D[02000000]          	cmp rax, sob_boolean_false
 14532 00009FF6 0F848D000000            	je .L_if_else_004b
 14533                                  	; preparing a tail-call
 14534                                  	; preparing a non-tail-call
 14535 00009FFC 488B4528                	mov rax, PARAM(1)	; param b
 14536 0000A000 50                      	push rax
 14537 0000A001 6A01                    	push 1	; arg count
 14538 0000A003 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14539 0000A00B 803805                  	cmp byte [rax], T_undefined
 14540 0000A00E 0F8414D50000            	je L_error_fvar_undefined
 14541 0000A014 803804                  	cmp byte [rax], T_closure
 14542 0000A017 0F858FD50000            	jne L_error_non_closure
 14543 0000A01D FF7001                  	push SOB_CLOSURE_ENV(rax)
 14544 0000A020 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14545 0000A023 50                      	push rax
 14546 0000A024 488B4520                	mov rax, PARAM(0)	; param a
 14547 0000A028 50                      	push rax
 14548 0000A029 6A02                    	push 2	; arg count
 14549 0000A02B 488B4510                	mov rax, ENV
 14550 0000A02F 488B00                  	mov rax, qword [rax + 8 * 0]
 14551 0000A032 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14552 0000A036 803804                  	cmp byte [rax], T_closure
 14553 0000A039 0F856DD50000            	jne L_error_non_closure
 14554 0000A03F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14555 0000A042 FF7508                  	push qword [rbp + 8 * 1]
 14556                                   ; old ret addr
 14557 0000A045 FF7500                  	push qword [rbp]
 14558                                   ; restore the old rbp
 14559 0000A048 BB02000000              	mov rbx, 2
 14560 0000A04D 4883C303                	add rbx, 3
 14561 0000A051 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14562 0000A055 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14563 0000A05A 4C8D4DF8                	lea r9, [rbp - 8]
 14564 0000A05E B906000000              	mov rcx, 6
 14565                                  .L_tc_recycle_frame_loop_0085:
 14566 0000A063 4883F900                	cmp rcx, 0
 14567 0000A067 7413                    	je .L_tc_recycle_frame_done_0085
 14568 0000A069 4D8B11                  	mov r10, qword [r9]
 14569 0000A06C 4D8910                  	mov qword [r8], r10
 14570 0000A06F 4983E808                	sub r8, 8
 14571 0000A073 4983E908                	sub r9, 8
 14572 0000A077 48FFC9                  	dec rcx
 14573 0000A07A EBE7                    	jmp .L_tc_recycle_frame_loop_0085
 14574                                  .L_tc_recycle_frame_done_0085:
 14575 0000A07C 498D6008                	lea rsp, [r8 + 8]
 14576 0000A080 5D                      	pop rbp ; restore the old rbp
 14577 0000A081 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14578 0000A084 E9F1000000              	jmp .L_if_end_004b
 14579                                  .L_if_else_004b:
 14580                                  	; preparing a non-tail-call
 14581 0000A089 488B4528                	mov rax, PARAM(1)	; param b
 14582 0000A08D 50                      	push rax
 14583 0000A08E 6A01                    	push 1	; arg count
 14584 0000A090 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14585 0000A098 803805                  	cmp byte [rax], T_undefined
 14586 0000A09B 0F8487D40000            	je L_error_fvar_undefined
 14587 0000A0A1 803804                  	cmp byte [rax], T_closure
 14588 0000A0A4 0F8502D50000            	jne L_error_non_closure
 14589 0000A0AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 14590 0000A0AD FF5009                  	call SOB_CLOSURE_CODE(rax)
 14591 0000A0B0 483D[02000000]          	cmp rax, sob_boolean_false
 14592 0000A0B6 7467                    	je .L_if_else_004a
 14593                                  	; preparing a tail-call
 14594 0000A0B8 488B4528                	mov rax, PARAM(1)	; param b
 14595 0000A0BC 50                      	push rax
 14596 0000A0BD 488B4520                	mov rax, PARAM(0)	; param a
 14597 0000A0C1 50                      	push rax
 14598 0000A0C2 6A02                    	push 2	; arg count
 14599 0000A0C4 488B4510                	mov rax, ENV
 14600 0000A0C8 488B00                  	mov rax, qword [rax + 8 * 0]
 14601 0000A0CB 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14602 0000A0CF 803804                  	cmp byte [rax], T_closure
 14603 0000A0D2 0F85D4D40000            	jne L_error_non_closure
 14604 0000A0D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14605 0000A0DB FF7508                  	push qword [rbp + 8 * 1]
 14606                                   ; old ret addr
 14607 0000A0DE FF7500                  	push qword [rbp]
 14608                                   ; restore the old rbp
 14609 0000A0E1 BB02000000              	mov rbx, 2
 14610 0000A0E6 4883C303                	add rbx, 3
 14611 0000A0EA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14612 0000A0EE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14613 0000A0F3 4C8D4DF8                	lea r9, [rbp - 8]
 14614 0000A0F7 B906000000              	mov rcx, 6
 14615                                  .L_tc_recycle_frame_loop_0086:
 14616 0000A0FC 4883F900                	cmp rcx, 0
 14617 0000A100 7413                    	je .L_tc_recycle_frame_done_0086
 14618 0000A102 4D8B11                  	mov r10, qword [r9]
 14619 0000A105 4D8910                  	mov qword [r8], r10
 14620 0000A108 4983E808                	sub r8, 8
 14621 0000A10C 4983E908                	sub r9, 8
 14622 0000A110 48FFC9                  	dec rcx
 14623 0000A113 EBE7                    	jmp .L_tc_recycle_frame_loop_0086
 14624                                  .L_tc_recycle_frame_done_0086:
 14625 0000A115 498D6008                	lea rsp, [r8 + 8]
 14626 0000A119 5D                      	pop rbp ; restore the old rbp
 14627 0000A11A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14628 0000A11D EB5B                    	jmp .L_if_end_004a
 14629                                  .L_if_else_004a:
 14630                                  	; preparing a tail-call
 14631 0000A11F 6A00                    	push 0	; arg count
 14632 0000A121 488B4510                	mov rax, ENV
 14633 0000A125 488B4008                	mov rax, qword [rax + 8 * 1]
 14634 0000A129 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14635 0000A12C 803804                  	cmp byte [rax], T_closure
 14636 0000A12F 0F8577D40000            	jne L_error_non_closure
 14637 0000A135 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14638 0000A138 FF7508                  	push qword [rbp + 8 * 1]
 14639                                   ; old ret addr
 14640 0000A13B FF7500                  	push qword [rbp]
 14641                                   ; restore the old rbp
 14642 0000A13E BB00000000              	mov rbx, 0
 14643 0000A143 4883C303                	add rbx, 3
 14644 0000A147 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14645 0000A14B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14646 0000A150 4C8D4DF8                	lea r9, [rbp - 8]
 14647 0000A154 B904000000              	mov rcx, 4
 14648                                  .L_tc_recycle_frame_loop_0087:
 14649 0000A159 4883F900                	cmp rcx, 0
 14650 0000A15D 7413                    	je .L_tc_recycle_frame_done_0087
 14651 0000A15F 4D8B11                  	mov r10, qword [r9]
 14652 0000A162 4D8910                  	mov qword [r8], r10
 14653 0000A165 4983E808                	sub r8, 8
 14654 0000A169 4983E908                	sub r9, 8
 14655 0000A16D 48FFC9                  	dec rcx
 14656 0000A170 EBE7                    	jmp .L_tc_recycle_frame_loop_0087
 14657                                  .L_tc_recycle_frame_done_0087:
 14658 0000A172 498D6008                	lea rsp, [r8 + 8]
 14659 0000A176 5D                      	pop rbp ; restore the old rbp
 14660 0000A177 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14661                                  .L_if_end_004a:
 14662                                  .L_if_end_004b:
 14663                                  .L_if_end_004c:
 14664 0000A17A EB5B                    	jmp .L_if_end_004d
 14665                                  .L_if_else_004d:
 14666                                  	; preparing a tail-call
 14667 0000A17C 6A00                    	push 0	; arg count
 14668 0000A17E 488B4510                	mov rax, ENV
 14669 0000A182 488B4008                	mov rax, qword [rax + 8 * 1]
 14670 0000A186 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14671 0000A189 803804                  	cmp byte [rax], T_closure
 14672 0000A18C 0F851AD40000            	jne L_error_non_closure
 14673 0000A192 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14674 0000A195 FF7508                  	push qword [rbp + 8 * 1]
 14675                                   ; old ret addr
 14676 0000A198 FF7500                  	push qword [rbp]
 14677                                   ; restore the old rbp
 14678 0000A19B BB00000000              	mov rbx, 0
 14679 0000A1A0 4883C303                	add rbx, 3
 14680 0000A1A4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14681 0000A1A8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14682 0000A1AD 4C8D4DF8                	lea r9, [rbp - 8]
 14683 0000A1B1 B904000000              	mov rcx, 4
 14684                                  .L_tc_recycle_frame_loop_0088:
 14685 0000A1B6 4883F900                	cmp rcx, 0
 14686 0000A1BA 7413                    	je .L_tc_recycle_frame_done_0088
 14687 0000A1BC 4D8B11                  	mov r10, qword [r9]
 14688 0000A1BF 4D8910                  	mov qword [r8], r10
 14689 0000A1C2 4983E808                	sub r8, 8
 14690 0000A1C6 4983E908                	sub r9, 8
 14691 0000A1CA 48FFC9                  	dec rcx
 14692 0000A1CD EBE7                    	jmp .L_tc_recycle_frame_loop_0088
 14693                                  .L_tc_recycle_frame_done_0088:
 14694 0000A1CF 498D6008                	lea rsp, [r8 + 8]
 14695 0000A1D3 5D                      	pop rbp ; restore the old rbp
 14696 0000A1D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14697                                  .L_if_end_004d:
 14698                                  .L_if_end_004e:
 14699                                  .L_if_end_004f:
 14700 0000A1D7 C9                      	leave
 14701 0000A1D8 C22000                  	ret AND_KILL_FRAME(2)
 14702                                  .L_lambda_simple_end_004a:	; new closure is in rax
 14703 0000A1DB C9                      	leave
 14704 0000A1DC C22800                  	ret AND_KILL_FRAME(3)
 14705                                  .L_lambda_simple_end_0049:	; new closure is in rax
 14706 0000A1DF 50                      	push rax
 14707 0000A1E0 6A01                    	push 1	; arg count
 14708 0000A1E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14709 0000A1E7 E869D40000              	call malloc
 14710 0000A1EC 50                      	push rax
 14711 0000A1ED BF08000000              	mov rdi, 8 * 1	; new rib
 14712 0000A1F2 E85ED40000              	call malloc
 14713 0000A1F7 50                      	push rax
 14714 0000A1F8 BF10000000              	mov rdi, 8 * 2	; extended env
 14715 0000A1FD E853D40000              	call malloc
 14716 0000A202 488B7D10                	mov rdi, ENV
 14717 0000A206 BE00000000              	mov rsi, 0
 14718 0000A20B BA01000000              	mov rdx, 1
 14719                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 14720 0000A210 4883FE01                	cmp rsi, 1
 14721 0000A214 7410                    	je .L_lambda_simple_env_end_004b
 14722 0000A216 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14723 0000A21A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14724 0000A21E 48FFC6                  	inc rsi
 14725 0000A221 48FFC2                  	inc rdx
 14726 0000A224 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 14727                                  .L_lambda_simple_env_end_004b:
 14728 0000A226 5B                      	pop rbx
 14729 0000A227 BE00000000              	mov rsi, 0
 14730                                  .L_lambda_simple_params_loop_004b:	; copy params
 14731 0000A22C 4883FE01                	cmp rsi, 1
 14732 0000A230 740E                    	je .L_lambda_simple_params_end_004b
 14733 0000A232 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14734 0000A237 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14735 0000A23B 48FFC6                  	inc rsi
 14736 0000A23E EBEC                    	jmp .L_lambda_simple_params_loop_004b
 14737                                  .L_lambda_simple_params_end_004b:
 14738 0000A240 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14739 0000A243 4889C3                  	mov rbx, rax
 14740 0000A246 58                      	pop rax
 14741 0000A247 C60004                  	mov byte [rax], T_closure
 14742 0000A24A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14743 0000A24E 48C74009[5BA20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 14744 0000A256 E9A20F0000              	jmp .L_lambda_simple_end_004b
 14745                                  .L_lambda_simple_code_004b:	; lambda-simple body
 14746 0000A25B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14747 0000A261 740B                    	je .L_lambda_simple_arity_check_ok_004b
 14748 0000A263 FF742410                	push qword [rsp + 8 * 2]
 14749 0000A267 6A01                    	push 1
 14750 0000A269 E9A0D30000              	jmp L_error_incorrect_arity_simple
 14751                                  .L_lambda_simple_arity_check_ok_004b:
 14752 0000A26E C8000000                	enter 0, 0
 14753                                  	; preparing a tail-call
 14754                                  	; preparing a non-tail-call
 14755 0000A272 488B0425[190F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 14756 0000A27A 803805                  	cmp byte [rax], T_undefined
 14757 0000A27D 0F84A5D20000            	je L_error_fvar_undefined
 14758 0000A283 50                      	push rax
 14759 0000A284 488B0425[080F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 14760 0000A28C 803805                  	cmp byte [rax], T_undefined
 14761 0000A28F 0F8493D20000            	je L_error_fvar_undefined
 14762 0000A295 50                      	push rax
 14763 0000A296 488B0425[2A0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 14764 0000A29E 803805                  	cmp byte [rax], T_undefined
 14765 0000A2A1 0F8481D20000            	je L_error_fvar_undefined
 14766 0000A2A7 50                      	push rax
 14767 0000A2A8 6A03                    	push 3	; arg count
 14768 0000A2AA 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 14769 0000A2AE 803804                  	cmp byte [rax], T_closure
 14770 0000A2B1 0F85F5D20000            	jne L_error_non_closure
 14771 0000A2B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14772 0000A2BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 14773 0000A2BD 50                      	push rax
 14774 0000A2BE 6A01                    	push 1	; arg count
 14775 0000A2C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14776 0000A2C5 E88BD30000              	call malloc
 14777 0000A2CA 50                      	push rax
 14778 0000A2CB BF08000000              	mov rdi, 8 * 1	; new rib
 14779 0000A2D0 E880D30000              	call malloc
 14780 0000A2D5 50                      	push rax
 14781 0000A2D6 BF18000000              	mov rdi, 8 * 3	; extended env
 14782 0000A2DB E875D30000              	call malloc
 14783 0000A2E0 488B7D10                	mov rdi, ENV
 14784 0000A2E4 BE00000000              	mov rsi, 0
 14785 0000A2E9 BA01000000              	mov rdx, 1
 14786                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 14787 0000A2EE 4883FE02                	cmp rsi, 2
 14788 0000A2F2 7410                    	je .L_lambda_simple_env_end_004c
 14789 0000A2F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14790 0000A2F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14791 0000A2FC 48FFC6                  	inc rsi
 14792 0000A2FF 48FFC2                  	inc rdx
 14793 0000A302 EBEA                    	jmp .L_lambda_simple_env_loop_004c
 14794                                  .L_lambda_simple_env_end_004c:
 14795 0000A304 5B                      	pop rbx
 14796 0000A305 BE00000000              	mov rsi, 0
 14797                                  .L_lambda_simple_params_loop_004c:	; copy params
 14798 0000A30A 4883FE01                	cmp rsi, 1
 14799 0000A30E 740E                    	je .L_lambda_simple_params_end_004c
 14800 0000A310 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14801 0000A315 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14802 0000A319 48FFC6                  	inc rsi
 14803 0000A31C EBEC                    	jmp .L_lambda_simple_params_loop_004c
 14804                                  .L_lambda_simple_params_end_004c:
 14805 0000A31E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14806 0000A321 4889C3                  	mov rbx, rax
 14807 0000A324 58                      	pop rax
 14808 0000A325 C60004                  	mov byte [rax], T_closure
 14809 0000A328 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14810 0000A32C 48C74009[39A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 14811 0000A334 E9720E0000              	jmp .L_lambda_simple_end_004c
 14812                                  .L_lambda_simple_code_004c:	; lambda-simple body
 14813 0000A339 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14814 0000A33F 740B                    	je .L_lambda_simple_arity_check_ok_004c
 14815 0000A341 FF742410                	push qword [rsp + 8 * 2]
 14816 0000A345 6A01                    	push 1
 14817 0000A347 E9C2D20000              	jmp L_error_incorrect_arity_simple
 14818                                  .L_lambda_simple_arity_check_ok_004c:
 14819 0000A34C C8000000                	enter 0, 0
 14820                                  	; preparing a tail-call
 14821                                  	; preparing a non-tail-call
 14822 0000A350 488B0425[E60E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 14823 0000A358 803805                  	cmp byte [rax], T_undefined
 14824 0000A35B 0F84C7D10000            	je L_error_fvar_undefined
 14825 0000A361 50                      	push rax
 14826 0000A362 488B0425[D50E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 14827 0000A36A 803805                  	cmp byte [rax], T_undefined
 14828 0000A36D 0F84B5D10000            	je L_error_fvar_undefined
 14829 0000A373 50                      	push rax
 14830 0000A374 488B0425[F70E0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 14831 0000A37C 803805                  	cmp byte [rax], T_undefined
 14832 0000A37F 0F84A3D10000            	je L_error_fvar_undefined
 14833 0000A385 50                      	push rax
 14834 0000A386 6A03                    	push 3	; arg count
 14835 0000A388 488B4510                	mov rax, ENV
 14836 0000A38C 488B00                  	mov rax, qword [rax + 8 * 0]
 14837 0000A38F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 14838 0000A392 803804                  	cmp byte [rax], T_closure
 14839 0000A395 0F8511D20000            	jne L_error_non_closure
 14840 0000A39B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14841 0000A39E FF5009                  	call SOB_CLOSURE_CODE(rax)
 14842 0000A3A1 50                      	push rax
 14843 0000A3A2 6A01                    	push 1	; arg count
 14844 0000A3A4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14845 0000A3A9 E8A7D20000              	call malloc
 14846 0000A3AE 50                      	push rax
 14847 0000A3AF BF08000000              	mov rdi, 8 * 1	; new rib
 14848 0000A3B4 E89CD20000              	call malloc
 14849 0000A3B9 50                      	push rax
 14850 0000A3BA BF20000000              	mov rdi, 8 * 4	; extended env
 14851 0000A3BF E891D20000              	call malloc
 14852 0000A3C4 488B7D10                	mov rdi, ENV
 14853 0000A3C8 BE00000000              	mov rsi, 0
 14854 0000A3CD BA01000000              	mov rdx, 1
 14855                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14856 0000A3D2 4883FE03                	cmp rsi, 3
 14857 0000A3D6 7410                    	je .L_lambda_simple_env_end_004d
 14858 0000A3D8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14859 0000A3DC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14860 0000A3E0 48FFC6                  	inc rsi
 14861 0000A3E3 48FFC2                  	inc rdx
 14862 0000A3E6 EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14863                                  .L_lambda_simple_env_end_004d:
 14864 0000A3E8 5B                      	pop rbx
 14865 0000A3E9 BE00000000              	mov rsi, 0
 14866                                  .L_lambda_simple_params_loop_004d:	; copy params
 14867 0000A3EE 4883FE01                	cmp rsi, 1
 14868 0000A3F2 740E                    	je .L_lambda_simple_params_end_004d
 14869 0000A3F4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14870 0000A3F9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14871 0000A3FD 48FFC6                  	inc rsi
 14872 0000A400 EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14873                                  .L_lambda_simple_params_end_004d:
 14874 0000A402 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14875 0000A405 4889C3                  	mov rbx, rax
 14876 0000A408 58                      	pop rax
 14877 0000A409 C60004                  	mov byte [rax], T_closure
 14878 0000A40C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14879 0000A410 48C74009[1DA40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14880 0000A418 E93C0D0000              	jmp .L_lambda_simple_end_004d
 14881                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14882 0000A41D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14883 0000A423 740B                    	je .L_lambda_simple_arity_check_ok_004d
 14884 0000A425 FF742410                	push qword [rsp + 8 * 2]
 14885 0000A429 6A01                    	push 1
 14886 0000A42B E9DED10000              	jmp L_error_incorrect_arity_simple
 14887                                  .L_lambda_simple_arity_check_ok_004d:
 14888 0000A430 C8000000                	enter 0, 0
 14889                                  	; preparing a tail-call
 14890 0000A434 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14891 0000A439 E817D20000              	call malloc
 14892 0000A43E 50                      	push rax
 14893 0000A43F BF08000000              	mov rdi, 8 * 1	; new rib
 14894 0000A444 E80CD20000              	call malloc
 14895 0000A449 50                      	push rax
 14896 0000A44A BF28000000              	mov rdi, 8 * 5	; extended env
 14897 0000A44F E801D20000              	call malloc
 14898 0000A454 488B7D10                	mov rdi, ENV
 14899 0000A458 BE00000000              	mov rsi, 0
 14900 0000A45D BA01000000              	mov rdx, 1
 14901                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14902 0000A462 4883FE04                	cmp rsi, 4
 14903 0000A466 7410                    	je .L_lambda_simple_env_end_004e
 14904 0000A468 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14905 0000A46C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14906 0000A470 48FFC6                  	inc rsi
 14907 0000A473 48FFC2                  	inc rdx
 14908 0000A476 EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14909                                  .L_lambda_simple_env_end_004e:
 14910 0000A478 5B                      	pop rbx
 14911 0000A479 BE00000000              	mov rsi, 0
 14912                                  .L_lambda_simple_params_loop_004e:	; copy params
 14913 0000A47E 4883FE01                	cmp rsi, 1
 14914 0000A482 740E                    	je .L_lambda_simple_params_end_004e
 14915 0000A484 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14916 0000A489 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14917 0000A48D 48FFC6                  	inc rsi
 14918 0000A490 EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14919                                  .L_lambda_simple_params_end_004e:
 14920 0000A492 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14921 0000A495 4889C3                  	mov rbx, rax
 14922 0000A498 58                      	pop rax
 14923 0000A499 C60004                  	mov byte [rax], T_closure
 14924 0000A49C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14925 0000A4A0 48C74009[ADA40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14926 0000A4A8 E9A3000000              	jmp .L_lambda_simple_end_004e
 14927                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14928 0000A4AD 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14929 0000A4B3 740B                    	je .L_lambda_simple_arity_check_ok_004e
 14930 0000A4B5 FF742410                	push qword [rsp + 8 * 2]
 14931 0000A4B9 6A02                    	push 2
 14932 0000A4BB E94ED10000              	jmp L_error_incorrect_arity_simple
 14933                                  .L_lambda_simple_arity_check_ok_004e:
 14934 0000A4C0 C8000000                	enter 0, 0
 14935                                  	; preparing a tail-call
 14936                                  	; preparing a non-tail-call
 14937 0000A4C4 488B4528                	mov rax, PARAM(1)	; param b
 14938 0000A4C8 50                      	push rax
 14939 0000A4C9 488B4520                	mov rax, PARAM(0)	; param a
 14940 0000A4CD 50                      	push rax
 14941 0000A4CE 6A02                    	push 2	; arg count
 14942 0000A4D0 488B4510                	mov rax, ENV
 14943 0000A4D4 488B4008                	mov rax, qword [rax + 8 * 1]
 14944 0000A4D8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 14945 0000A4DB 803804                  	cmp byte [rax], T_closure
 14946 0000A4DE 0F85C8D00000            	jne L_error_non_closure
 14947 0000A4E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14948 0000A4E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14949 0000A4EA 50                      	push rax
 14950 0000A4EB 6A01                    	push 1	; arg count
 14951 0000A4ED 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 14952 0000A4F5 803805                  	cmp byte [rax], T_undefined
 14953 0000A4F8 0F842AD00000            	je L_error_fvar_undefined
 14954 0000A4FE 803804                  	cmp byte [rax], T_closure
 14955 0000A501 0F85A5D00000            	jne L_error_non_closure
 14956 0000A507 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14957 0000A50A FF7508                  	push qword [rbp + 8 * 1]
 14958                                   ; old ret addr
 14959 0000A50D FF7500                  	push qword [rbp]
 14960                                   ; restore the old rbp
 14961 0000A510 BB01000000              	mov rbx, 1
 14962 0000A515 4883C303                	add rbx, 3
 14963 0000A519 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 14964 0000A51D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 14965 0000A522 4C8D4DF8                	lea r9, [rbp - 8]
 14966 0000A526 B905000000              	mov rcx, 5
 14967                                  .L_tc_recycle_frame_loop_008c:
 14968 0000A52B 4883F900                	cmp rcx, 0
 14969 0000A52F 7413                    	je .L_tc_recycle_frame_done_008c
 14970 0000A531 4D8B11                  	mov r10, qword [r9]
 14971 0000A534 4D8910                  	mov qword [r8], r10
 14972 0000A537 4983E808                	sub r8, 8
 14973 0000A53B 4983E908                	sub r9, 8
 14974 0000A53F 48FFC9                  	dec rcx
 14975 0000A542 EBE7                    	jmp .L_tc_recycle_frame_loop_008c
 14976                                  .L_tc_recycle_frame_done_008c:
 14977 0000A544 498D6008                	lea rsp, [r8 + 8]
 14978 0000A548 5D                      	pop rbp ; restore the old rbp
 14979 0000A549 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14980 0000A54C C9                      	leave
 14981 0000A54D C22000                  	ret AND_KILL_FRAME(2)
 14982                                  .L_lambda_simple_end_004e:	; new closure is in rax
 14983 0000A550 50                      	push rax
 14984 0000A551 6A01                    	push 1	; arg count
 14985 0000A553 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14986 0000A558 E8F8D00000              	call malloc
 14987 0000A55D 50                      	push rax
 14988 0000A55E BF08000000              	mov rdi, 8 * 1	; new rib
 14989 0000A563 E8EDD00000              	call malloc
 14990 0000A568 50                      	push rax
 14991 0000A569 BF28000000              	mov rdi, 8 * 5	; extended env
 14992 0000A56E E8E2D00000              	call malloc
 14993 0000A573 488B7D10                	mov rdi, ENV
 14994 0000A577 BE00000000              	mov rsi, 0
 14995 0000A57C BA01000000              	mov rdx, 1
 14996                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14997 0000A581 4883FE04                	cmp rsi, 4
 14998 0000A585 7410                    	je .L_lambda_simple_env_end_004f
 14999 0000A587 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15000 0000A58B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15001 0000A58F 48FFC6                  	inc rsi
 15002 0000A592 48FFC2                  	inc rdx
 15003 0000A595 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 15004                                  .L_lambda_simple_env_end_004f:
 15005 0000A597 5B                      	pop rbx
 15006 0000A598 BE00000000              	mov rsi, 0
 15007                                  .L_lambda_simple_params_loop_004f:	; copy params
 15008 0000A59D 4883FE01                	cmp rsi, 1
 15009 0000A5A1 740E                    	je .L_lambda_simple_params_end_004f
 15010 0000A5A3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15011 0000A5A8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15012 0000A5AC 48FFC6                  	inc rsi
 15013 0000A5AF EBEC                    	jmp .L_lambda_simple_params_loop_004f
 15014                                  .L_lambda_simple_params_end_004f:
 15015 0000A5B1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15016 0000A5B4 4889C3                  	mov rbx, rax
 15017 0000A5B7 58                      	pop rax
 15018 0000A5B8 C60004                  	mov byte [rax], T_closure
 15019 0000A5BB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15020 0000A5BF 48C74009[CCA50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 15021 0000A5C7 E93B0B0000              	jmp .L_lambda_simple_end_004f
 15022                                  .L_lambda_simple_code_004f:	; lambda-simple body
 15023 0000A5CC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15024 0000A5D2 740B                    	je .L_lambda_simple_arity_check_ok_004f
 15025 0000A5D4 FF742410                	push qword [rsp + 8 * 2]
 15026 0000A5D8 6A01                    	push 1
 15027 0000A5DA E92FD00000              	jmp L_error_incorrect_arity_simple
 15028                                  .L_lambda_simple_arity_check_ok_004f:
 15029 0000A5DF C8000000                	enter 0, 0
 15030                                  	; preparing a tail-call
 15031 0000A5E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15032 0000A5E8 E868D00000              	call malloc
 15033 0000A5ED 50                      	push rax
 15034 0000A5EE BF08000000              	mov rdi, 8 * 1	; new rib
 15035 0000A5F3 E85DD00000              	call malloc
 15036 0000A5F8 50                      	push rax
 15037 0000A5F9 BF30000000              	mov rdi, 8 * 6	; extended env
 15038 0000A5FE E852D00000              	call malloc
 15039 0000A603 488B7D10                	mov rdi, ENV
 15040 0000A607 BE00000000              	mov rsi, 0
 15041 0000A60C BA01000000              	mov rdx, 1
 15042                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 15043 0000A611 4883FE05                	cmp rsi, 5
 15044 0000A615 7410                    	je .L_lambda_simple_env_end_0050
 15045 0000A617 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15046 0000A61B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15047 0000A61F 48FFC6                  	inc rsi
 15048 0000A622 48FFC2                  	inc rdx
 15049 0000A625 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 15050                                  .L_lambda_simple_env_end_0050:
 15051 0000A627 5B                      	pop rbx
 15052 0000A628 BE00000000              	mov rsi, 0
 15053                                  .L_lambda_simple_params_loop_0050:	; copy params
 15054 0000A62D 4883FE01                	cmp rsi, 1
 15055 0000A631 740E                    	je .L_lambda_simple_params_end_0050
 15056 0000A633 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15057 0000A638 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15058 0000A63C 48FFC6                  	inc rsi
 15059 0000A63F EBEC                    	jmp .L_lambda_simple_params_loop_0050
 15060                                  .L_lambda_simple_params_end_0050:
 15061 0000A641 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15062 0000A644 4889C3                  	mov rbx, rax
 15063 0000A647 58                      	pop rax
 15064 0000A648 C60004                  	mov byte [rax], T_closure
 15065 0000A64B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15066 0000A64F 48C74009[5CA60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 15067 0000A657 E980000000              	jmp .L_lambda_simple_end_0050
 15068                                  .L_lambda_simple_code_0050:	; lambda-simple body
 15069 0000A65C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15070 0000A662 740B                    	je .L_lambda_simple_arity_check_ok_0050
 15071 0000A664 FF742410                	push qword [rsp + 8 * 2]
 15072 0000A668 6A02                    	push 2
 15073 0000A66A E99FCF0000              	jmp L_error_incorrect_arity_simple
 15074                                  .L_lambda_simple_arity_check_ok_0050:
 15075 0000A66F C8000000                	enter 0, 0
 15076                                  	; preparing a tail-call
 15077 0000A673 488B4520                	mov rax, PARAM(0)	; param a
 15078 0000A677 50                      	push rax
 15079 0000A678 488B4528                	mov rax, PARAM(1)	; param b
 15080 0000A67C 50                      	push rax
 15081 0000A67D 6A02                    	push 2	; arg count
 15082 0000A67F 488B4510                	mov rax, ENV
 15083 0000A683 488B4010                	mov rax, qword [rax + 8 * 2]
 15084 0000A687 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15085 0000A68A 803804                  	cmp byte [rax], T_closure
 15086 0000A68D 0F8519CF0000            	jne L_error_non_closure
 15087 0000A693 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15088 0000A696 FF7508                  	push qword [rbp + 8 * 1]
 15089                                   ; old ret addr
 15090 0000A699 FF7500                  	push qword [rbp]
 15091                                   ; restore the old rbp
 15092 0000A69C BB02000000              	mov rbx, 2
 15093 0000A6A1 4883C303                	add rbx, 3
 15094 0000A6A5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15095 0000A6A9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15096 0000A6AE 4C8D4DF8                	lea r9, [rbp - 8]
 15097 0000A6B2 B906000000              	mov rcx, 6
 15098                                  .L_tc_recycle_frame_loop_008e:
 15099 0000A6B7 4883F900                	cmp rcx, 0
 15100 0000A6BB 7413                    	je .L_tc_recycle_frame_done_008e
 15101 0000A6BD 4D8B11                  	mov r10, qword [r9]
 15102 0000A6C0 4D8910                  	mov qword [r8], r10
 15103 0000A6C3 4983E808                	sub r8, 8
 15104 0000A6C7 4983E908                	sub r9, 8
 15105 0000A6CB 48FFC9                  	dec rcx
 15106 0000A6CE EBE7                    	jmp .L_tc_recycle_frame_loop_008e
 15107                                  .L_tc_recycle_frame_done_008e:
 15108 0000A6D0 498D6008                	lea rsp, [r8 + 8]
 15109 0000A6D4 5D                      	pop rbp ; restore the old rbp
 15110 0000A6D5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15111 0000A6D8 C9                      	leave
 15112 0000A6D9 C22000                  	ret AND_KILL_FRAME(2)
 15113                                  .L_lambda_simple_end_0050:	; new closure is in rax
 15114 0000A6DC 50                      	push rax
 15115 0000A6DD 6A01                    	push 1	; arg count
 15116 0000A6DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15117 0000A6E4 E86CCF0000              	call malloc
 15118 0000A6E9 50                      	push rax
 15119 0000A6EA BF08000000              	mov rdi, 8 * 1	; new rib
 15120 0000A6EF E861CF0000              	call malloc
 15121 0000A6F4 50                      	push rax
 15122 0000A6F5 BF30000000              	mov rdi, 8 * 6	; extended env
 15123 0000A6FA E856CF0000              	call malloc
 15124 0000A6FF 488B7D10                	mov rdi, ENV
 15125 0000A703 BE00000000              	mov rsi, 0
 15126 0000A708 BA01000000              	mov rdx, 1
 15127                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 15128 0000A70D 4883FE05                	cmp rsi, 5
 15129 0000A711 7410                    	je .L_lambda_simple_env_end_0051
 15130 0000A713 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15131 0000A717 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15132 0000A71B 48FFC6                  	inc rsi
 15133 0000A71E 48FFC2                  	inc rdx
 15134 0000A721 EBEA                    	jmp .L_lambda_simple_env_loop_0051
 15135                                  .L_lambda_simple_env_end_0051:
 15136 0000A723 5B                      	pop rbx
 15137 0000A724 BE00000000              	mov rsi, 0
 15138                                  .L_lambda_simple_params_loop_0051:	; copy params
 15139 0000A729 4883FE01                	cmp rsi, 1
 15140 0000A72D 740E                    	je .L_lambda_simple_params_end_0051
 15141 0000A72F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15142 0000A734 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15143 0000A738 48FFC6                  	inc rsi
 15144 0000A73B EBEC                    	jmp .L_lambda_simple_params_loop_0051
 15145                                  .L_lambda_simple_params_end_0051:
 15146 0000A73D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15147 0000A740 4889C3                  	mov rbx, rax
 15148 0000A743 58                      	pop rax
 15149 0000A744 C60004                  	mov byte [rax], T_closure
 15150 0000A747 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15151 0000A74B 48C74009[58A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 15152 0000A753 E95D090000              	jmp .L_lambda_simple_end_0051
 15153                                  .L_lambda_simple_code_0051:	; lambda-simple body
 15154 0000A758 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15155 0000A75E 740B                    	je .L_lambda_simple_arity_check_ok_0051
 15156 0000A760 FF742410                	push qword [rsp + 8 * 2]
 15157 0000A764 6A01                    	push 1
 15158 0000A766 E9A3CE0000              	jmp L_error_incorrect_arity_simple
 15159                                  .L_lambda_simple_arity_check_ok_0051:
 15160 0000A76B C8000000                	enter 0, 0
 15161                                  	; preparing a tail-call
 15162 0000A76F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15163 0000A774 E8DCCE0000              	call malloc
 15164 0000A779 50                      	push rax
 15165 0000A77A BF08000000              	mov rdi, 8 * 1	; new rib
 15166 0000A77F E8D1CE0000              	call malloc
 15167 0000A784 50                      	push rax
 15168 0000A785 BF38000000              	mov rdi, 8 * 7	; extended env
 15169 0000A78A E8C6CE0000              	call malloc
 15170 0000A78F 488B7D10                	mov rdi, ENV
 15171 0000A793 BE00000000              	mov rsi, 0
 15172 0000A798 BA01000000              	mov rdx, 1
 15173                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 15174 0000A79D 4883FE06                	cmp rsi, 6
 15175 0000A7A1 7410                    	je .L_lambda_simple_env_end_0052
 15176 0000A7A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15177 0000A7A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15178 0000A7AB 48FFC6                  	inc rsi
 15179 0000A7AE 48FFC2                  	inc rdx
 15180 0000A7B1 EBEA                    	jmp .L_lambda_simple_env_loop_0052
 15181                                  .L_lambda_simple_env_end_0052:
 15182 0000A7B3 5B                      	pop rbx
 15183 0000A7B4 BE00000000              	mov rsi, 0
 15184                                  .L_lambda_simple_params_loop_0052:	; copy params
 15185 0000A7B9 4883FE01                	cmp rsi, 1
 15186 0000A7BD 740E                    	je .L_lambda_simple_params_end_0052
 15187 0000A7BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15188 0000A7C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15189 0000A7C8 48FFC6                  	inc rsi
 15190 0000A7CB EBEC                    	jmp .L_lambda_simple_params_loop_0052
 15191                                  .L_lambda_simple_params_end_0052:
 15192 0000A7CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15193 0000A7D0 4889C3                  	mov rbx, rax
 15194 0000A7D3 58                      	pop rax
 15195 0000A7D4 C60004                  	mov byte [rax], T_closure
 15196 0000A7D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15197 0000A7DB 48C74009[E8A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 15198 0000A7E3 E9A2000000              	jmp .L_lambda_simple_end_0052
 15199                                  .L_lambda_simple_code_0052:	; lambda-simple body
 15200 0000A7E8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15201 0000A7EE 740B                    	je .L_lambda_simple_arity_check_ok_0052
 15202 0000A7F0 FF742410                	push qword [rsp + 8 * 2]
 15203 0000A7F4 6A02                    	push 2
 15204 0000A7F6 E913CE0000              	jmp L_error_incorrect_arity_simple
 15205                                  .L_lambda_simple_arity_check_ok_0052:
 15206 0000A7FB C8000000                	enter 0, 0
 15207                                  	; preparing a tail-call
 15208                                  	; preparing a non-tail-call
 15209 0000A7FF 488B4528                	mov rax, PARAM(1)	; param b
 15210 0000A803 50                      	push rax
 15211 0000A804 488B4520                	mov rax, PARAM(0)	; param a
 15212 0000A808 50                      	push rax
 15213 0000A809 6A02                    	push 2	; arg count
 15214 0000A80B 488B4510                	mov rax, ENV
 15215 0000A80F 488B00                  	mov rax, qword [rax + 8 * 0]
 15216 0000A812 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15217 0000A815 803804                  	cmp byte [rax], T_closure
 15218 0000A818 0F858ECD0000            	jne L_error_non_closure
 15219 0000A81E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15220 0000A821 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15221 0000A824 50                      	push rax
 15222 0000A825 6A01                    	push 1	; arg count
 15223 0000A827 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 15224 0000A82F 803805                  	cmp byte [rax], T_undefined
 15225 0000A832 0F84F0CC0000            	je L_error_fvar_undefined
 15226 0000A838 803804                  	cmp byte [rax], T_closure
 15227 0000A83B 0F856BCD0000            	jne L_error_non_closure
 15228 0000A841 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15229 0000A844 FF7508                  	push qword [rbp + 8 * 1]
 15230                                   ; old ret addr
 15231 0000A847 FF7500                  	push qword [rbp]
 15232                                   ; restore the old rbp
 15233 0000A84A BB01000000              	mov rbx, 1
 15234 0000A84F 4883C303                	add rbx, 3
 15235 0000A853 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15236 0000A857 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15237 0000A85C 4C8D4DF8                	lea r9, [rbp - 8]
 15238 0000A860 B905000000              	mov rcx, 5
 15239                                  .L_tc_recycle_frame_loop_0090:
 15240 0000A865 4883F900                	cmp rcx, 0
 15241 0000A869 7413                    	je .L_tc_recycle_frame_done_0090
 15242 0000A86B 4D8B11                  	mov r10, qword [r9]
 15243 0000A86E 4D8910                  	mov qword [r8], r10
 15244 0000A871 4983E808                	sub r8, 8
 15245 0000A875 4983E908                	sub r9, 8
 15246 0000A879 48FFC9                  	dec rcx
 15247 0000A87C EBE7                    	jmp .L_tc_recycle_frame_loop_0090
 15248                                  .L_tc_recycle_frame_done_0090:
 15249 0000A87E 498D6008                	lea rsp, [r8 + 8]
 15250 0000A882 5D                      	pop rbp ; restore the old rbp
 15251 0000A883 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15252 0000A886 C9                      	leave
 15253 0000A887 C22000                  	ret AND_KILL_FRAME(2)
 15254                                  .L_lambda_simple_end_0052:	; new closure is in rax
 15255 0000A88A 50                      	push rax
 15256 0000A88B 6A01                    	push 1	; arg count
 15257 0000A88D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15258 0000A892 E8BECD0000              	call malloc
 15259 0000A897 50                      	push rax
 15260 0000A898 BF08000000              	mov rdi, 8 * 1	; new rib
 15261 0000A89D E8B3CD0000              	call malloc
 15262 0000A8A2 50                      	push rax
 15263 0000A8A3 BF38000000              	mov rdi, 8 * 7	; extended env
 15264 0000A8A8 E8A8CD0000              	call malloc
 15265 0000A8AD 488B7D10                	mov rdi, ENV
 15266 0000A8B1 BE00000000              	mov rsi, 0
 15267 0000A8B6 BA01000000              	mov rdx, 1
 15268                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15269 0000A8BB 4883FE06                	cmp rsi, 6
 15270 0000A8BF 7410                    	je .L_lambda_simple_env_end_0053
 15271 0000A8C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15272 0000A8C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15273 0000A8C9 48FFC6                  	inc rsi
 15274 0000A8CC 48FFC2                  	inc rdx
 15275 0000A8CF EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15276                                  .L_lambda_simple_env_end_0053:
 15277 0000A8D1 5B                      	pop rbx
 15278 0000A8D2 BE00000000              	mov rsi, 0
 15279                                  .L_lambda_simple_params_loop_0053:	; copy params
 15280 0000A8D7 4883FE01                	cmp rsi, 1
 15281 0000A8DB 740E                    	je .L_lambda_simple_params_end_0053
 15282 0000A8DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15283 0000A8E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15284 0000A8E6 48FFC6                  	inc rsi
 15285 0000A8E9 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15286                                  .L_lambda_simple_params_end_0053:
 15287 0000A8EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15288 0000A8EE 4889C3                  	mov rbx, rax
 15289 0000A8F1 58                      	pop rax
 15290 0000A8F2 C60004                  	mov byte [rax], T_closure
 15291 0000A8F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15292 0000A8F9 48C74009[06A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15293 0000A901 E95D070000              	jmp .L_lambda_simple_end_0053
 15294                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15295 0000A906 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15296 0000A90C 740B                    	je .L_lambda_simple_arity_check_ok_0053
 15297 0000A90E FF742410                	push qword [rsp + 8 * 2]
 15298 0000A912 6A01                    	push 1
 15299 0000A914 E9F5CC0000              	jmp L_error_incorrect_arity_simple
 15300                                  .L_lambda_simple_arity_check_ok_0053:
 15301 0000A919 C8000000                	enter 0, 0
 15302                                  	; preparing a tail-call
 15303 0000A91D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15304 0000A922 E82ECD0000              	call malloc
 15305 0000A927 50                      	push rax
 15306 0000A928 BF08000000              	mov rdi, 8 * 1	; new rib
 15307 0000A92D E823CD0000              	call malloc
 15308 0000A932 50                      	push rax
 15309 0000A933 BF40000000              	mov rdi, 8 * 8	; extended env
 15310 0000A938 E818CD0000              	call malloc
 15311 0000A93D 488B7D10                	mov rdi, ENV
 15312 0000A941 BE00000000              	mov rsi, 0
 15313 0000A946 BA01000000              	mov rdx, 1
 15314                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15315 0000A94B 4883FE07                	cmp rsi, 7
 15316 0000A94F 7410                    	je .L_lambda_simple_env_end_0054
 15317 0000A951 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15318 0000A955 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15319 0000A959 48FFC6                  	inc rsi
 15320 0000A95C 48FFC2                  	inc rdx
 15321 0000A95F EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15322                                  .L_lambda_simple_env_end_0054:
 15323 0000A961 5B                      	pop rbx
 15324 0000A962 BE00000000              	mov rsi, 0
 15325                                  .L_lambda_simple_params_loop_0054:	; copy params
 15326 0000A967 4883FE01                	cmp rsi, 1
 15327 0000A96B 740E                    	je .L_lambda_simple_params_end_0054
 15328 0000A96D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15329 0000A972 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15330 0000A976 48FFC6                  	inc rsi
 15331 0000A979 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15332                                  .L_lambda_simple_params_end_0054:
 15333 0000A97B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15334 0000A97E 4889C3                  	mov rbx, rax
 15335 0000A981 58                      	pop rax
 15336 0000A982 C60004                  	mov byte [rax], T_closure
 15337 0000A985 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15338 0000A989 48C74009[96A90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15339 0000A991 E9E6040000              	jmp .L_lambda_simple_end_0054
 15340                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15341 0000A996 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15342 0000A99C 740B                    	je .L_lambda_simple_arity_check_ok_0054
 15343 0000A99E FF742410                	push qword [rsp + 8 * 2]
 15344 0000A9A2 6A01                    	push 1
 15345 0000A9A4 E965CC0000              	jmp L_error_incorrect_arity_simple
 15346                                  .L_lambda_simple_arity_check_ok_0054:
 15347 0000A9A9 C8000000                	enter 0, 0
 15348                                  	; preparing a tail-call
 15349 0000A9AD 48B8-                   	mov rax, L_constants + 1993
 15349 0000A9AF [C907000000000000] 
 15350 0000A9B7 50                      	push rax
 15351 0000A9B8 6A01                    	push 1	; arg count
 15352 0000A9BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15353 0000A9BF E891CC0000              	call malloc
 15354 0000A9C4 50                      	push rax
 15355 0000A9C5 BF08000000              	mov rdi, 8 * 1	; new rib
 15356 0000A9CA E886CC0000              	call malloc
 15357 0000A9CF 50                      	push rax
 15358 0000A9D0 BF48000000              	mov rdi, 8 * 9	; extended env
 15359 0000A9D5 E87BCC0000              	call malloc
 15360 0000A9DA 488B7D10                	mov rdi, ENV
 15361 0000A9DE BE00000000              	mov rsi, 0
 15362 0000A9E3 BA01000000              	mov rdx, 1
 15363                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15364 0000A9E8 4883FE08                	cmp rsi, 8
 15365 0000A9EC 7410                    	je .L_lambda_simple_env_end_0055
 15366 0000A9EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15367 0000A9F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15368 0000A9F6 48FFC6                  	inc rsi
 15369 0000A9F9 48FFC2                  	inc rdx
 15370 0000A9FC EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15371                                  .L_lambda_simple_env_end_0055:
 15372 0000A9FE 5B                      	pop rbx
 15373 0000A9FF BE00000000              	mov rsi, 0
 15374                                  .L_lambda_simple_params_loop_0055:	; copy params
 15375 0000AA04 4883FE01                	cmp rsi, 1
 15376 0000AA08 740E                    	je .L_lambda_simple_params_end_0055
 15377 0000AA0A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15378 0000AA0F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15379 0000AA13 48FFC6                  	inc rsi
 15380 0000AA16 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15381                                  .L_lambda_simple_params_end_0055:
 15382 0000AA18 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15383 0000AA1B 4889C3                  	mov rbx, rax
 15384 0000AA1E 58                      	pop rax
 15385 0000AA1F C60004                  	mov byte [rax], T_closure
 15386 0000AA22 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15387 0000AA26 48C74009[33AA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15388 0000AA2E E9F7030000              	jmp .L_lambda_simple_end_0055
 15389                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15390 0000AA33 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15391 0000AA39 740B                    	je .L_lambda_simple_arity_check_ok_0055
 15392 0000AA3B FF742410                	push qword [rsp + 8 * 2]
 15393 0000AA3F 6A01                    	push 1
 15394 0000AA41 E9C8CB0000              	jmp L_error_incorrect_arity_simple
 15395                                  .L_lambda_simple_arity_check_ok_0055:
 15396 0000AA46 C8000000                	enter 0, 0
 15397 0000AA4A BF08000000              	mov rdi, 8*1
 15398 0000AA4F E801CC0000              	call malloc
 15399 0000AA54 488B5D20                	mov rbx, PARAM(0)
 15400 0000AA58 488918                  	mov qword [rax], rbx
 15401 0000AA5B 48894520                	mov PARAM(0), rax
 15402 0000AA5F 48B8-                   	mov rax, sob_void
 15402 0000AA61 [0000000000000000] 
 15403                                  
 15404 0000AA69 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15405 0000AA6E E8E2CB0000              	call malloc
 15406 0000AA73 50                      	push rax
 15407 0000AA74 BF08000000              	mov rdi, 8 * 1	; new rib
 15408 0000AA79 E8D7CB0000              	call malloc
 15409 0000AA7E 50                      	push rax
 15410 0000AA7F BF50000000              	mov rdi, 8 * 10	; extended env
 15411 0000AA84 E8CCCB0000              	call malloc
 15412 0000AA89 488B7D10                	mov rdi, ENV
 15413 0000AA8D BE00000000              	mov rsi, 0
 15414 0000AA92 BA01000000              	mov rdx, 1
 15415                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15416 0000AA97 4883FE09                	cmp rsi, 9
 15417 0000AA9B 7410                    	je .L_lambda_simple_env_end_0056
 15418 0000AA9D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15419 0000AAA1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15420 0000AAA5 48FFC6                  	inc rsi
 15421 0000AAA8 48FFC2                  	inc rdx
 15422 0000AAAB EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15423                                  .L_lambda_simple_env_end_0056:
 15424 0000AAAD 5B                      	pop rbx
 15425 0000AAAE BE00000000              	mov rsi, 0
 15426                                  .L_lambda_simple_params_loop_0056:	; copy params
 15427 0000AAB3 4883FE01                	cmp rsi, 1
 15428 0000AAB7 740E                    	je .L_lambda_simple_params_end_0056
 15429 0000AAB9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15430 0000AABE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15431 0000AAC2 48FFC6                  	inc rsi
 15432 0000AAC5 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15433                                  .L_lambda_simple_params_end_0056:
 15434 0000AAC7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15435 0000AACA 4889C3                  	mov rbx, rax
 15436 0000AACD 58                      	pop rax
 15437 0000AACE C60004                  	mov byte [rax], T_closure
 15438 0000AAD1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15439 0000AAD5 48C74009[E2AA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15440 0000AADD E95C010000              	jmp .L_lambda_simple_end_0056
 15441                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15442 0000AAE2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15443 0000AAE8 740B                    	je .L_lambda_simple_arity_check_ok_0056
 15444 0000AAEA FF742410                	push qword [rsp + 8 * 2]
 15445 0000AAEE 6A02                    	push 2
 15446 0000AAF0 E919CB0000              	jmp L_error_incorrect_arity_simple
 15447                                  .L_lambda_simple_arity_check_ok_0056:
 15448 0000AAF5 C8000000                	enter 0, 0
 15449                                  	; preparing a non-tail-call
 15450 0000AAF9 488B4528                	mov rax, PARAM(1)	; param s
 15451 0000AAFD 50                      	push rax
 15452 0000AAFE 6A01                    	push 1	; arg count
 15453 0000AB00 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 15454 0000AB08 803805                  	cmp byte [rax], T_undefined
 15455 0000AB0B 0F8417CA0000            	je L_error_fvar_undefined
 15456 0000AB11 803804                  	cmp byte [rax], T_closure
 15457 0000AB14 0F8592CA0000            	jne L_error_non_closure
 15458 0000AB1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15459 0000AB1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15460 0000AB20 483D[02000000]          	cmp rax, sob_boolean_false
 15461 0000AB26 0F850E010000            	jne .L_or_end_0006
 15462                                  	; preparing a non-tail-call
 15463                                  	; preparing a non-tail-call
 15464 0000AB2C 488B4528                	mov rax, PARAM(1)	; param s
 15465 0000AB30 50                      	push rax
 15466 0000AB31 6A01                    	push 1	; arg count
 15467 0000AB33 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15468 0000AB3B 803805                  	cmp byte [rax], T_undefined
 15469 0000AB3E 0F84E4C90000            	je L_error_fvar_undefined
 15470 0000AB44 803804                  	cmp byte [rax], T_closure
 15471 0000AB47 0F855FCA0000            	jne L_error_non_closure
 15472 0000AB4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15473 0000AB50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15474 0000AB53 50                      	push rax
 15475 0000AB54 488B4520                	mov rax, PARAM(0)	; param a
 15476 0000AB58 50                      	push rax
 15477 0000AB59 6A02                    	push 2	; arg count
 15478 0000AB5B 488B4510                	mov rax, ENV
 15479 0000AB5F 488B4008                	mov rax, qword [rax + 8 * 1]
 15480 0000AB63 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15481 0000AB66 803804                  	cmp byte [rax], T_closure
 15482 0000AB69 0F853DCA0000            	jne L_error_non_closure
 15483 0000AB6F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15484 0000AB72 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15485 0000AB75 483D[02000000]          	cmp rax, sob_boolean_false
 15486 0000AB7B 0F84AF000000            	je .L_if_else_0050
 15487                                  	; preparing a tail-call
 15488                                  	; preparing a non-tail-call
 15489 0000AB81 488B4528                	mov rax, PARAM(1)	; param s
 15490 0000AB85 50                      	push rax
 15491 0000AB86 6A01                    	push 1	; arg count
 15492 0000AB88 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 15493 0000AB90 803805                  	cmp byte [rax], T_undefined
 15494 0000AB93 0F848FC90000            	je L_error_fvar_undefined
 15495 0000AB99 803804                  	cmp byte [rax], T_closure
 15496 0000AB9C 0F850ACA0000            	jne L_error_non_closure
 15497 0000ABA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15498 0000ABA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15499 0000ABA8 50                      	push rax
 15500                                  	; preparing a non-tail-call
 15501 0000ABA9 488B4528                	mov rax, PARAM(1)	; param s
 15502 0000ABAD 50                      	push rax
 15503 0000ABAE 6A01                    	push 1	; arg count
 15504 0000ABB0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15505 0000ABB8 803805                  	cmp byte [rax], T_undefined
 15506 0000ABBB 0F8467C90000            	je L_error_fvar_undefined
 15507 0000ABC1 803804                  	cmp byte [rax], T_closure
 15508 0000ABC4 0F85E2C90000            	jne L_error_non_closure
 15509 0000ABCA FF7001                  	push SOB_CLOSURE_ENV(rax)
 15510 0000ABCD FF5009                  	call SOB_CLOSURE_CODE(rax)
 15511 0000ABD0 50                      	push rax
 15512 0000ABD1 6A02                    	push 2	; arg count
 15513 0000ABD3 488B4510                	mov rax, ENV
 15514 0000ABD7 488B00                  	mov rax, qword [rax + 8 * 0]
 15515 0000ABDA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15516 0000ABDD 488B00                  	mov rax, qword [rax]
 15517 0000ABE0 803804                  	cmp byte [rax], T_closure
 15518 0000ABE3 0F85C3C90000            	jne L_error_non_closure
 15519 0000ABE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15520 0000ABEC FF7508                  	push qword [rbp + 8 * 1]
 15521                                   ; old ret addr
 15522 0000ABEF FF7500                  	push qword [rbp]
 15523                                   ; restore the old rbp
 15524 0000ABF2 BB02000000              	mov rbx, 2
 15525 0000ABF7 4883C303                	add rbx, 3
 15526 0000ABFB 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15527 0000ABFF 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15528 0000AC04 4C8D4DF8                	lea r9, [rbp - 8]
 15529 0000AC08 B906000000              	mov rcx, 6
 15530                                  .L_tc_recycle_frame_loop_0093:
 15531 0000AC0D 4883F900                	cmp rcx, 0
 15532 0000AC11 7413                    	je .L_tc_recycle_frame_done_0093
 15533 0000AC13 4D8B11                  	mov r10, qword [r9]
 15534 0000AC16 4D8910                  	mov qword [r8], r10
 15535 0000AC19 4983E808                	sub r8, 8
 15536 0000AC1D 4983E908                	sub r9, 8
 15537 0000AC21 48FFC9                  	dec rcx
 15538 0000AC24 EBE7                    	jmp .L_tc_recycle_frame_loop_0093
 15539                                  .L_tc_recycle_frame_done_0093:
 15540 0000AC26 498D6008                	lea rsp, [r8 + 8]
 15541 0000AC2A 5D                      	pop rbp ; restore the old rbp
 15542 0000AC2B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15543 0000AC2E EB0A                    	jmp .L_if_end_0050
 15544                                  .L_if_else_0050:
 15545 0000AC30 48B8-                   	mov rax, L_constants + 2
 15545 0000AC32 [0200000000000000] 
 15546                                  .L_if_end_0050:
 15547                                  .L_or_end_0006:
 15548 0000AC3A C9                      	leave
 15549 0000AC3B C22000                  	ret AND_KILL_FRAME(2)
 15550                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15551 0000AC3E 50                      	push rax
 15552 0000AC3F 488B4520                	mov rax, PARAM(0)	; param run
 15553 0000AC43 8F00                    	pop qword [rax]
 15554 0000AC45 48B8-                   	mov rax, sob_void
 15554 0000AC47 [0000000000000000] 
 15555                                  
 15556 0000AC4F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15557 0000AC54 E8FCC90000              	call malloc
 15558 0000AC59 50                      	push rax
 15559 0000AC5A BF08000000              	mov rdi, 8 * 1	; new rib
 15560 0000AC5F E8F1C90000              	call malloc
 15561 0000AC64 50                      	push rax
 15562 0000AC65 BF50000000              	mov rdi, 8 * 10	; extended env
 15563 0000AC6A E8E6C90000              	call malloc
 15564 0000AC6F 488B7D10                	mov rdi, ENV
 15565 0000AC73 4831F6                  	 xor rsi, rsi
 15566 0000AC76 4831D2                  	 xor rdx, rdx
 15567 0000AC79 48FFC2                  	inc rdx
 15568                                  .L_lambda_opt_env_loop_000e:	; 
 15569 0000AC7C 4883FE09                	cmp rsi, 9
 15570 0000AC80 7410                    	je .L_lambda_opt_env_end_000e
 15571 0000AC82 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15572 0000AC86 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15573 0000AC8A 48FFC6                  	inc rsi
 15574 0000AC8D 48FFC2                  	inc rdx
 15575 0000AC90 EBEA                    	jmp .L_lambda_opt_env_loop_000e
 15576                                  .L_lambda_opt_env_end_000e:
 15577 0000AC92 5B                      	pop rbx
 15578 0000AC93 4831F6                  	xor rsi, rsi
 15579                                  .L_lambda_opt_params_loop_000e:	; copy params
 15580 0000AC96 4883FE01                	cmp rsi, 1
 15581 0000AC9A 740E                    	je .L_lambda_opt_params_end_000e
 15582 0000AC9C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15583 0000ACA1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15584 0000ACA5 48FFC6                  	inc rsi
 15585 0000ACA8 EBEC                    	jmp .L_lambda_opt_params_loop_000e
 15586                                  .L_lambda_opt_params_end_000e:
 15587 0000ACAA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15588 0000ACAD 4889C3                  	mov rbx, rax
 15589 0000ACB0 58                      	pop rax
 15590 0000ACB1 C60004                  	mov byte [rax], T_closure
 15591 0000ACB4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15592 0000ACB8 48C74009[C5AC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 15593 0000ACC0 E961010000              	jmp .L_lambda_opt_end_000e
 15594                                  .L_lambda_opt_code_000e:
 15595 0000ACC5 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 15596 0000ACCA 4983FF01                	cmp r15, 1
 15597 0000ACCE 7409                    	je .L_lambda_opt_arity_check_exact_000e
 15598 0000ACD0 7F57                    	jg .L_lambda_opt_arity_check_more_000e
 15599 0000ACD2 6A01                    	push 1
 15600 0000ACD4 E949C90000              	jmp L_error_incorrect_arity_opt
 15601                                  .L_lambda_opt_arity_check_exact_000e: ;Exact case
 15602 0000ACD9 4C8B0424                	mov r8, qword [rsp -8 * 0]
 15603 0000ACDD 4C894424F8              	mov qword [rsp -8], r8
 15604 0000ACE2 4C8B442408              	mov r8, qword [rsp +8]
 15605 0000ACE7 4C890424                	mov qword [rsp +8 * 0], r8
 15606 0000ACEB 4C8B442410              	mov r8, qword [rsp +8 * 2]
 15607 0000ACF0 4C89C1                  	mov rcx, r8
 15608 0000ACF3 49FFC0                  	inc r8
 15609 0000ACF6 4C89442408              	mov qword [rsp +8], r8
 15610 0000ACFB 4889E2                  	mov rdx, rsp
 15611 0000ACFE 4883C218                	add rdx, 24
 15612                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000e:
 15613 0000AD02 4883F900                	cmp rcx, 0
 15614 0000AD06 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000e
 15615 0000AD08 4C8B02                  	mov r8, qword [rdx]
 15616 0000AD0B 4C8942F8                	mov qword [rdx - 8], r8
 15617 0000AD0F 4883C208                	add rdx, 8
 15618 0000AD13 48FFC9                  	dec rcx
 15619 0000AD16 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000e
 15620                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000e:
 15621 0000AD18 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 15622 0000AD20 4883EC08                	sub rsp, 8
 15623 0000AD24 E985000000              	jmp .L_lambda_opt_stack_adjusted_000e
 15624                                  .L_lambda_opt_arity_check_more_000e:
 15625 0000AD29 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 15626 0000AD2E 4D89C4                  	mov r12, r8
 15627 0000AD31 4C89C1                  	mov rcx, r8
 15628 0000AD34 4D8D6802                	lea r13, [r8 + 2] 
 15629 0000AD38 4883E901                	sub rcx, 1
 15630 0000AD3C 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 15631 0000AD41 49BE-                   	mov r14, sob_nil
 15631 0000AD43 [0100000000000000] 
 15632                                  .L_lambda_opt_create_list_of_opt_params_000e:
 15633 0000AD4B 4883F900                	cmp rcx, 0
 15634 0000AD4F 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000e
 15635 0000AD51 BF11000000              	mov rdi, 17
 15636 0000AD56 E8FAC80000              	call malloc
 15637 0000AD5B C60021                  	mov byte [rax], T_pair
 15638 0000AD5E 498B1B                  	mov rbx, qword [r11]
 15639 0000AD61 48895801                	mov qword [rax +1], rbx
 15640 0000AD65 4C897009                	mov qword [rax + 1 + 8], r14
 15641 0000AD69 4989C6                  	mov r14, rax
 15642 0000AD6C 48FFC9                  	dec rcx
 15643 0000AD6F 4983EB08                	sub r11, 8
 15644 0000AD73 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000e
 15645                                  .L_lambda_opt_create_list_of_opt_params_end_000e:
 15646 0000AD75 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 15647 0000AD7A 4D8932                  	mov qword [r10], r14
 15648 0000AD7D 4E8D2CED00000000        	lea r13, [8 * r13]
 15649 0000AD85 4901E5                  	add r13, rsp
 15650 0000AD88 B905000000              	mov rcx, 4 + 1
 15651                                  .L_lambda_opt_stack_shrink_loop_000e:
 15652 0000AD8D 4883F900                	cmp rcx, 0
 15653 0000AD91 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_000e
 15654 0000AD93 4D8B1A                  	mov r11, qword [r10]
 15655 0000AD96 4D895D00                	mov qword [r13], r11
 15656 0000AD9A 4983EA08                	sub r10, 8
 15657 0000AD9E 4983ED08                	sub r13, 8
 15658 0000ADA2 48FFC9                  	dec rcx
 15659 0000ADA5 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 15660                                  .L_lambda_opt_stack_shrink_loop_exit_000e:
 15661 0000ADA7 4983C508                	add r13, 8
 15662 0000ADAB 4C89EC                  	mov rsp, r13
 15663                                  .L_lambda_opt_stack_adjusted_000e:
 15664 0000ADAE 48C744241002000000      	mov qword [rsp + 8*2], 2
 15665 0000ADB7 C8000000                	enter 0, 0
 15666                                  	; preparing a tail-call
 15667 0000ADBB 488B4528                	mov rax, PARAM(1)	; param s
 15668 0000ADBF 50                      	push rax
 15669 0000ADC0 488B4520                	mov rax, PARAM(0)	; param a
 15670 0000ADC4 50                      	push rax
 15671 0000ADC5 6A02                    	push 2	; arg count
 15672 0000ADC7 488B4510                	mov rax, ENV
 15673 0000ADCB 488B00                  	mov rax, qword [rax + 8 * 0]
 15674 0000ADCE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15675 0000ADD1 488B00                  	mov rax, qword [rax]
 15676 0000ADD4 803804                  	cmp byte [rax], T_closure
 15677 0000ADD7 0F85CFC70000            	jne L_error_non_closure
 15678 0000ADDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 15679 0000ADE0 FF7508                  	push qword [rbp + 8 * 1]
 15680                                   ; old ret addr
 15681 0000ADE3 FF7500                  	push qword [rbp]
 15682                                   ; restore the old rbp
 15683 0000ADE6 BB02000000              	mov rbx, 2
 15684 0000ADEB 4883C303                	add rbx, 3
 15685 0000ADEF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15686 0000ADF3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15687 0000ADF8 4C8D4DF8                	lea r9, [rbp - 8]
 15688 0000ADFC B906000000              	mov rcx, 6
 15689                                  .L_tc_recycle_frame_loop_0094:
 15690 0000AE01 4883F900                	cmp rcx, 0
 15691 0000AE05 7413                    	je .L_tc_recycle_frame_done_0094
 15692 0000AE07 4D8B11                  	mov r10, qword [r9]
 15693 0000AE0A 4D8910                  	mov qword [r8], r10
 15694 0000AE0D 4983E808                	sub r8, 8
 15695 0000AE11 4983E908                	sub r9, 8
 15696 0000AE15 48FFC9                  	dec rcx
 15697 0000AE18 EBE7                    	jmp .L_tc_recycle_frame_loop_0094
 15698                                  .L_tc_recycle_frame_done_0094:
 15699 0000AE1A 498D6008                	lea rsp, [r8 + 8]
 15700 0000AE1E 5D                      	pop rbp ; restore the old rbp
 15701 0000AE1F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15702 0000AE22 C9                      	leave
 15703 0000AE23 C22000                  	ret 8 * (2 + 2)
 15704                                  .L_lambda_opt_end_000e:	; new closure is in rax
 15705 0000AE26 C9                      	leave
 15706 0000AE27 C21800                  	ret AND_KILL_FRAME(1)
 15707                                  .L_lambda_simple_end_0055:	; new closure is in rax
 15708 0000AE2A 803804                  	cmp byte [rax], T_closure
 15709 0000AE2D 0F8579C70000            	jne L_error_non_closure
 15710 0000AE33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15711 0000AE36 FF7508                  	push qword [rbp + 8 * 1]
 15712                                   ; old ret addr
 15713 0000AE39 FF7500                  	push qword [rbp]
 15714                                   ; restore the old rbp
 15715 0000AE3C BB01000000              	mov rbx, 1
 15716 0000AE41 4883C303                	add rbx, 3
 15717 0000AE45 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15718 0000AE49 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15719 0000AE4E 4C8D4DF8                	lea r9, [rbp - 8]
 15720 0000AE52 B905000000              	mov rcx, 5
 15721                                  .L_tc_recycle_frame_loop_0092:
 15722 0000AE57 4883F900                	cmp rcx, 0
 15723 0000AE5B 7413                    	je .L_tc_recycle_frame_done_0092
 15724 0000AE5D 4D8B11                  	mov r10, qword [r9]
 15725 0000AE60 4D8910                  	mov qword [r8], r10
 15726 0000AE63 4983E808                	sub r8, 8
 15727 0000AE67 4983E908                	sub r9, 8
 15728 0000AE6B 48FFC9                  	dec rcx
 15729 0000AE6E EBE7                    	jmp .L_tc_recycle_frame_loop_0092
 15730                                  .L_tc_recycle_frame_done_0092:
 15731 0000AE70 498D6008                	lea rsp, [r8 + 8]
 15732 0000AE74 5D                      	pop rbp ; restore the old rbp
 15733 0000AE75 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15734 0000AE78 C9                      	leave
 15735 0000AE79 C21800                  	ret AND_KILL_FRAME(1)
 15736                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15737 0000AE7C 50                      	push rax
 15738 0000AE7D 6A01                    	push 1	; arg count
 15739 0000AE7F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15740 0000AE84 E8CCC70000              	call malloc
 15741 0000AE89 50                      	push rax
 15742 0000AE8A BF08000000              	mov rdi, 8 * 1	; new rib
 15743 0000AE8F E8C1C70000              	call malloc
 15744 0000AE94 50                      	push rax
 15745 0000AE95 BF40000000              	mov rdi, 8 * 8	; extended env
 15746 0000AE9A E8B6C70000              	call malloc
 15747 0000AE9F 488B7D10                	mov rdi, ENV
 15748 0000AEA3 BE00000000              	mov rsi, 0
 15749 0000AEA8 BA01000000              	mov rdx, 1
 15750                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15751 0000AEAD 4883FE07                	cmp rsi, 7
 15752 0000AEB1 7410                    	je .L_lambda_simple_env_end_0057
 15753 0000AEB3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15754 0000AEB7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15755 0000AEBB 48FFC6                  	inc rsi
 15756 0000AEBE 48FFC2                  	inc rdx
 15757 0000AEC1 EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15758                                  .L_lambda_simple_env_end_0057:
 15759 0000AEC3 5B                      	pop rbx
 15760 0000AEC4 BE00000000              	mov rsi, 0
 15761                                  .L_lambda_simple_params_loop_0057:	; copy params
 15762 0000AEC9 4883FE01                	cmp rsi, 1
 15763 0000AECD 740E                    	je .L_lambda_simple_params_end_0057
 15764 0000AECF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15765 0000AED4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15766 0000AED8 48FFC6                  	inc rsi
 15767 0000AEDB EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15768                                  .L_lambda_simple_params_end_0057:
 15769 0000AEDD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15770 0000AEE0 4889C3                  	mov rbx, rax
 15771 0000AEE3 58                      	pop rax
 15772 0000AEE4 C60004                  	mov byte [rax], T_closure
 15773 0000AEE7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15774 0000AEEB 48C74009[F8AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15775 0000AEF3 E919010000              	jmp .L_lambda_simple_end_0057
 15776                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15777 0000AEF8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15778 0000AEFE 740B                    	je .L_lambda_simple_arity_check_ok_0057
 15779 0000AF00 FF742410                	push qword [rsp + 8 * 2]
 15780 0000AF04 6A01                    	push 1
 15781 0000AF06 E903C70000              	jmp L_error_incorrect_arity_simple
 15782                                  .L_lambda_simple_arity_check_ok_0057:
 15783 0000AF0B C8000000                	enter 0, 0
 15784                                  	; preparing a non-tail-call
 15785 0000AF0F 488B4510                	mov rax, ENV
 15786 0000AF13 488B4020                	mov rax, qword [rax + 8 * 4]
 15787 0000AF17 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15788 0000AF1A 50                      	push rax
 15789 0000AF1B 6A01                    	push 1	; arg count
 15790 0000AF1D 488B4520                	mov rax, PARAM(0)	; param make-run
 15791 0000AF21 803804                  	cmp byte [rax], T_closure
 15792 0000AF24 0F8582C60000            	jne L_error_non_closure
 15793 0000AF2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15794 0000AF2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 15795 0000AF30 48890425[090E0000]      	mov qword [free_var_4], rax
 15796 0000AF38 48B8-                   	mov rax, sob_void
 15796 0000AF3A [0000000000000000] 
 15797                                  
 15798                                  	; preparing a non-tail-call
 15799 0000AF42 488B4510                	mov rax, ENV
 15800 0000AF46 488B00                  	mov rax, qword [rax + 8 * 0]
 15801 0000AF49 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 15802 0000AF4C 50                      	push rax
 15803 0000AF4D 6A01                    	push 1	; arg count
 15804 0000AF4F 488B4520                	mov rax, PARAM(0)	; param make-run
 15805 0000AF53 803804                  	cmp byte [rax], T_closure
 15806 0000AF56 0F8550C60000            	jne L_error_non_closure
 15807 0000AF5C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15808 0000AF5F FF5009                  	call SOB_CLOSURE_CODE(rax)
 15809 0000AF62 48890425[1A0E0000]      	mov qword [free_var_5], rax
 15810 0000AF6A 48B8-                   	mov rax, sob_void
 15810 0000AF6C [0000000000000000] 
 15811                                  
 15812                                  	; preparing a non-tail-call
 15813 0000AF74 488B4510                	mov rax, ENV
 15814 0000AF78 488B4008                	mov rax, qword [rax + 8 * 1]
 15815 0000AF7C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15816 0000AF7F 50                      	push rax
 15817 0000AF80 6A01                    	push 1	; arg count
 15818 0000AF82 488B4520                	mov rax, PARAM(0)	; param make-run
 15819 0000AF86 803804                  	cmp byte [rax], T_closure
 15820 0000AF89 0F851DC60000            	jne L_error_non_closure
 15821 0000AF8F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15822 0000AF92 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15823 0000AF95 48890425[3C0E0000]      	mov qword [free_var_7], rax
 15824 0000AF9D 48B8-                   	mov rax, sob_void
 15824 0000AF9F [0000000000000000] 
 15825                                  
 15826                                  	; preparing a non-tail-call
 15827 0000AFA7 488B4510                	mov rax, ENV
 15828 0000AFAB 488B4010                	mov rax, qword [rax + 8 * 2]
 15829 0000AFAF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 15830 0000AFB2 50                      	push rax
 15831 0000AFB3 6A01                    	push 1	; arg count
 15832 0000AFB5 488B4520                	mov rax, PARAM(0)	; param make-run
 15833 0000AFB9 803804                  	cmp byte [rax], T_closure
 15834 0000AFBC 0F85EAC50000            	jne L_error_non_closure
 15835 0000AFC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15836 0000AFC5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15837 0000AFC8 48890425[4D0E0000]      	mov qword [free_var_8], rax
 15838 0000AFD0 48B8-                   	mov rax, sob_void
 15838 0000AFD2 [0000000000000000] 
 15839                                  
 15840                                  	; preparing a non-tail-call
 15841 0000AFDA 488B4510                	mov rax, ENV
 15842 0000AFDE 488B4018                	mov rax, qword [rax + 8 * 3]
 15843 0000AFE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 15844 0000AFE5 50                      	push rax
 15845 0000AFE6 6A01                    	push 1	; arg count
 15846 0000AFE8 488B4520                	mov rax, PARAM(0)	; param make-run
 15847 0000AFEC 803804                  	cmp byte [rax], T_closure
 15848 0000AFEF 0F85B7C50000            	jne L_error_non_closure
 15849 0000AFF5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15850 0000AFF8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15851 0000AFFB 48890425[2B0E0000]      	mov qword [free_var_6], rax
 15852 0000B003 48B8-                   	mov rax, sob_void
 15852 0000B005 [0000000000000000] 
 15853 0000B00D C9                      	leave
 15854 0000B00E C21800                  	ret AND_KILL_FRAME(1)
 15855                                  .L_lambda_simple_end_0057:	; new closure is in rax
 15856 0000B011 803804                  	cmp byte [rax], T_closure
 15857 0000B014 0F8592C50000            	jne L_error_non_closure
 15858 0000B01A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15859 0000B01D FF7508                  	push qword [rbp + 8 * 1]
 15860                                   ; old ret addr
 15861 0000B020 FF7500                  	push qword [rbp]
 15862                                   ; restore the old rbp
 15863 0000B023 BB01000000              	mov rbx, 1
 15864 0000B028 4883C303                	add rbx, 3
 15865 0000B02C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15866 0000B030 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15867 0000B035 4C8D4DF8                	lea r9, [rbp - 8]
 15868 0000B039 B905000000              	mov rcx, 5
 15869                                  .L_tc_recycle_frame_loop_0091:
 15870 0000B03E 4883F900                	cmp rcx, 0
 15871 0000B042 7413                    	je .L_tc_recycle_frame_done_0091
 15872 0000B044 4D8B11                  	mov r10, qword [r9]
 15873 0000B047 4D8910                  	mov qword [r8], r10
 15874 0000B04A 4983E808                	sub r8, 8
 15875 0000B04E 4983E908                	sub r9, 8
 15876 0000B052 48FFC9                  	dec rcx
 15877 0000B055 EBE7                    	jmp .L_tc_recycle_frame_loop_0091
 15878                                  .L_tc_recycle_frame_done_0091:
 15879 0000B057 498D6008                	lea rsp, [r8 + 8]
 15880 0000B05B 5D                      	pop rbp ; restore the old rbp
 15881 0000B05C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15882 0000B05F C9                      	leave
 15883 0000B060 C21800                  	ret AND_KILL_FRAME(1)
 15884                                  .L_lambda_simple_end_0053:	; new closure is in rax
 15885 0000B063 803804                  	cmp byte [rax], T_closure
 15886 0000B066 0F8540C50000            	jne L_error_non_closure
 15887 0000B06C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15888 0000B06F FF7508                  	push qword [rbp + 8 * 1]
 15889                                   ; old ret addr
 15890 0000B072 FF7500                  	push qword [rbp]
 15891                                   ; restore the old rbp
 15892 0000B075 BB01000000              	mov rbx, 1
 15893 0000B07A 4883C303                	add rbx, 3
 15894 0000B07E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15895 0000B082 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15896 0000B087 4C8D4DF8                	lea r9, [rbp - 8]
 15897 0000B08B B905000000              	mov rcx, 5
 15898                                  .L_tc_recycle_frame_loop_008f:
 15899 0000B090 4883F900                	cmp rcx, 0
 15900 0000B094 7413                    	je .L_tc_recycle_frame_done_008f
 15901 0000B096 4D8B11                  	mov r10, qword [r9]
 15902 0000B099 4D8910                  	mov qword [r8], r10
 15903 0000B09C 4983E808                	sub r8, 8
 15904 0000B0A0 4983E908                	sub r9, 8
 15905 0000B0A4 48FFC9                  	dec rcx
 15906 0000B0A7 EBE7                    	jmp .L_tc_recycle_frame_loop_008f
 15907                                  .L_tc_recycle_frame_done_008f:
 15908 0000B0A9 498D6008                	lea rsp, [r8 + 8]
 15909 0000B0AD 5D                      	pop rbp ; restore the old rbp
 15910 0000B0AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15911 0000B0B1 C9                      	leave
 15912 0000B0B2 C21800                  	ret AND_KILL_FRAME(1)
 15913                                  .L_lambda_simple_end_0051:	; new closure is in rax
 15914 0000B0B5 803804                  	cmp byte [rax], T_closure
 15915 0000B0B8 0F85EEC40000            	jne L_error_non_closure
 15916 0000B0BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15917 0000B0C1 FF7508                  	push qword [rbp + 8 * 1]
 15918                                   ; old ret addr
 15919 0000B0C4 FF7500                  	push qword [rbp]
 15920                                   ; restore the old rbp
 15921 0000B0C7 BB01000000              	mov rbx, 1
 15922 0000B0CC 4883C303                	add rbx, 3
 15923 0000B0D0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15924 0000B0D4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15925 0000B0D9 4C8D4DF8                	lea r9, [rbp - 8]
 15926 0000B0DD B905000000              	mov rcx, 5
 15927                                  .L_tc_recycle_frame_loop_008d:
 15928 0000B0E2 4883F900                	cmp rcx, 0
 15929 0000B0E6 7413                    	je .L_tc_recycle_frame_done_008d
 15930 0000B0E8 4D8B11                  	mov r10, qword [r9]
 15931 0000B0EB 4D8910                  	mov qword [r8], r10
 15932 0000B0EE 4983E808                	sub r8, 8
 15933 0000B0F2 4983E908                	sub r9, 8
 15934 0000B0F6 48FFC9                  	dec rcx
 15935 0000B0F9 EBE7                    	jmp .L_tc_recycle_frame_loop_008d
 15936                                  .L_tc_recycle_frame_done_008d:
 15937 0000B0FB 498D6008                	lea rsp, [r8 + 8]
 15938 0000B0FF 5D                      	pop rbp ; restore the old rbp
 15939 0000B100 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15940 0000B103 C9                      	leave
 15941 0000B104 C21800                  	ret AND_KILL_FRAME(1)
 15942                                  .L_lambda_simple_end_004f:	; new closure is in rax
 15943 0000B107 803804                  	cmp byte [rax], T_closure
 15944 0000B10A 0F859CC40000            	jne L_error_non_closure
 15945 0000B110 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15946 0000B113 FF7508                  	push qword [rbp + 8 * 1]
 15947                                   ; old ret addr
 15948 0000B116 FF7500                  	push qword [rbp]
 15949                                   ; restore the old rbp
 15950 0000B119 BB01000000              	mov rbx, 1
 15951 0000B11E 4883C303                	add rbx, 3
 15952 0000B122 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15953 0000B126 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15954 0000B12B 4C8D4DF8                	lea r9, [rbp - 8]
 15955 0000B12F B905000000              	mov rcx, 5
 15956                                  .L_tc_recycle_frame_loop_008b:
 15957 0000B134 4883F900                	cmp rcx, 0
 15958 0000B138 7413                    	je .L_tc_recycle_frame_done_008b
 15959 0000B13A 4D8B11                  	mov r10, qword [r9]
 15960 0000B13D 4D8910                  	mov qword [r8], r10
 15961 0000B140 4983E808                	sub r8, 8
 15962 0000B144 4983E908                	sub r9, 8
 15963 0000B148 48FFC9                  	dec rcx
 15964 0000B14B EBE7                    	jmp .L_tc_recycle_frame_loop_008b
 15965                                  .L_tc_recycle_frame_done_008b:
 15966 0000B14D 498D6008                	lea rsp, [r8 + 8]
 15967 0000B151 5D                      	pop rbp ; restore the old rbp
 15968 0000B152 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15969 0000B155 C9                      	leave
 15970 0000B156 C21800                  	ret AND_KILL_FRAME(1)
 15971                                  .L_lambda_simple_end_004d:	; new closure is in rax
 15972 0000B159 803804                  	cmp byte [rax], T_closure
 15973 0000B15C 0F854AC40000            	jne L_error_non_closure
 15974 0000B162 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15975 0000B165 FF7508                  	push qword [rbp + 8 * 1]
 15976                                   ; old ret addr
 15977 0000B168 FF7500                  	push qword [rbp]
 15978                                   ; restore the old rbp
 15979 0000B16B BB01000000              	mov rbx, 1
 15980 0000B170 4883C303                	add rbx, 3
 15981 0000B174 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 15982 0000B178 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 15983 0000B17D 4C8D4DF8                	lea r9, [rbp - 8]
 15984 0000B181 B905000000              	mov rcx, 5
 15985                                  .L_tc_recycle_frame_loop_008a:
 15986 0000B186 4883F900                	cmp rcx, 0
 15987 0000B18A 7413                    	je .L_tc_recycle_frame_done_008a
 15988 0000B18C 4D8B11                  	mov r10, qword [r9]
 15989 0000B18F 4D8910                  	mov qword [r8], r10
 15990 0000B192 4983E808                	sub r8, 8
 15991 0000B196 4983E908                	sub r9, 8
 15992 0000B19A 48FFC9                  	dec rcx
 15993 0000B19D EBE7                    	jmp .L_tc_recycle_frame_loop_008a
 15994                                  .L_tc_recycle_frame_done_008a:
 15995 0000B19F 498D6008                	lea rsp, [r8 + 8]
 15996 0000B1A3 5D                      	pop rbp ; restore the old rbp
 15997 0000B1A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15998 0000B1A7 C9                      	leave
 15999 0000B1A8 C21800                  	ret AND_KILL_FRAME(1)
 16000                                  .L_lambda_simple_end_004c:	; new closure is in rax
 16001 0000B1AB 803804                  	cmp byte [rax], T_closure
 16002 0000B1AE 0F85F8C30000            	jne L_error_non_closure
 16003 0000B1B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16004 0000B1B7 FF7508                  	push qword [rbp + 8 * 1]
 16005                                   ; old ret addr
 16006 0000B1BA FF7500                  	push qword [rbp]
 16007                                   ; restore the old rbp
 16008 0000B1BD BB01000000              	mov rbx, 1
 16009 0000B1C2 4883C303                	add rbx, 3
 16010 0000B1C6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 16011 0000B1CA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 16012 0000B1CF 4C8D4DF8                	lea r9, [rbp - 8]
 16013 0000B1D3 B905000000              	mov rcx, 5
 16014                                  .L_tc_recycle_frame_loop_0089:
 16015 0000B1D8 4883F900                	cmp rcx, 0
 16016 0000B1DC 7413                    	je .L_tc_recycle_frame_done_0089
 16017 0000B1DE 4D8B11                  	mov r10, qword [r9]
 16018 0000B1E1 4D8910                  	mov qword [r8], r10
 16019 0000B1E4 4983E808                	sub r8, 8
 16020 0000B1E8 4983E908                	sub r9, 8
 16021 0000B1EC 48FFC9                  	dec rcx
 16022 0000B1EF EBE7                    	jmp .L_tc_recycle_frame_loop_0089
 16023                                  .L_tc_recycle_frame_done_0089:
 16024 0000B1F1 498D6008                	lea rsp, [r8 + 8]
 16025 0000B1F5 5D                      	pop rbp ; restore the old rbp
 16026 0000B1F6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16027 0000B1F9 C9                      	leave
 16028 0000B1FA C21800                  	ret AND_KILL_FRAME(1)
 16029                                  .L_lambda_simple_end_004b:	; new closure is in rax
 16030 0000B1FD 803804                  	cmp byte [rax], T_closure
 16031 0000B200 0F85A6C30000            	jne L_error_non_closure
 16032 0000B206 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16033 0000B209 FF7508                  	push qword [rbp + 8 * 1]
 16034                                   ; old ret addr
 16035 0000B20C FF7500                  	push qword [rbp]
 16036                                   ; restore the old rbp
 16037 0000B20F BB01000000              	mov rbx, 1
 16038 0000B214 4883C303                	add rbx, 3
 16039 0000B218 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 16040 0000B21C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 16041 0000B221 4C8D4DF8                	lea r9, [rbp - 8]
 16042 0000B225 B905000000              	mov rcx, 5
 16043                                  .L_tc_recycle_frame_loop_007b:
 16044 0000B22A 4883F900                	cmp rcx, 0
 16045 0000B22E 7413                    	je .L_tc_recycle_frame_done_007b
 16046 0000B230 4D8B11                  	mov r10, qword [r9]
 16047 0000B233 4D8910                  	mov qword [r8], r10
 16048 0000B236 4983E808                	sub r8, 8
 16049 0000B23A 4983E908                	sub r9, 8
 16050 0000B23E 48FFC9                  	dec rcx
 16051 0000B241 EBE7                    	jmp .L_tc_recycle_frame_loop_007b
 16052                                  .L_tc_recycle_frame_done_007b:
 16053 0000B243 498D6008                	lea rsp, [r8 + 8]
 16054 0000B247 5D                      	pop rbp ; restore the old rbp
 16055 0000B248 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16056 0000B24B C9                      	leave
 16057 0000B24C C21800                  	ret AND_KILL_FRAME(1)
 16058                                  .L_lambda_simple_end_0048:	; new closure is in rax
 16059 0000B24F 803804                  	cmp byte [rax], T_closure
 16060 0000B252 0F8554C30000            	jne L_error_non_closure
 16061 0000B258 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16062 0000B25B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16063                                  
 16064 0000B25E 4889C7                  	mov rdi, rax
 16065 0000B261 E844C60000              	call print_sexpr_if_not_void
 16066 0000B266 48B8-                   	mov rax, L_constants + 0
 16066 0000B268 [0000000000000000] 
 16067 0000B270 48890425[AF120000]      	mov qword [free_var_74], rax
 16068 0000B278 48B8-                   	mov rax, sob_void
 16068 0000B27A [0000000000000000] 
 16069                                  
 16070 0000B282 4889C7                  	mov rdi, rax
 16071 0000B285 E820C60000              	call print_sexpr_if_not_void
 16072 0000B28A 48B8-                   	mov rax, L_constants + 0
 16072 0000B28C [0000000000000000] 
 16073 0000B294 48890425[9E120000]      	mov qword [free_var_73], rax
 16074 0000B29C 48B8-                   	mov rax, sob_void
 16074 0000B29E [0000000000000000] 
 16075                                  
 16076 0000B2A6 4889C7                  	mov rdi, rax
 16077 0000B2A9 E8FCC50000              	call print_sexpr_if_not_void
 16078 0000B2AE 48B8-                   	mov rax, L_constants + 0
 16078 0000B2B0 [0000000000000000] 
 16079 0000B2B8 48890425[C0120000]      	mov qword [free_var_75], rax
 16080 0000B2C0 48B8-                   	mov rax, sob_void
 16080 0000B2C2 [0000000000000000] 
 16081                                  
 16082 0000B2CA 4889C7                  	mov rdi, rax
 16083 0000B2CD E8D8C50000              	call print_sexpr_if_not_void
 16084 0000B2D2 48B8-                   	mov rax, L_constants + 0
 16084 0000B2D4 [0000000000000000] 
 16085 0000B2DC 48890425[E2120000]      	mov qword [free_var_77], rax
 16086 0000B2E4 48B8-                   	mov rax, sob_void
 16086 0000B2E6 [0000000000000000] 
 16087                                  
 16088 0000B2EE 4889C7                  	mov rdi, rax
 16089 0000B2F1 E8B4C50000              	call print_sexpr_if_not_void
 16090 0000B2F6 48B8-                   	mov rax, L_constants + 0
 16090 0000B2F8 [0000000000000000] 
 16091 0000B300 48890425[D1120000]      	mov qword [free_var_76], rax
 16092 0000B308 48B8-                   	mov rax, sob_void
 16092 0000B30A [0000000000000000] 
 16093                                  
 16094 0000B312 4889C7                  	mov rdi, rax
 16095 0000B315 E890C50000              	call print_sexpr_if_not_void
 16096                                  	; preparing a non-tail-call
 16097 0000B31A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16098 0000B31F E831C30000              	call malloc
 16099 0000B324 50                      	push rax
 16100 0000B325 BF00000000              	mov rdi, 8 * 0	; new rib
 16101 0000B32A E826C30000              	call malloc
 16102 0000B32F 50                      	push rax
 16103 0000B330 BF08000000              	mov rdi, 8 * 1	; extended env
 16104 0000B335 E81BC30000              	call malloc
 16105 0000B33A 488B7D10                	mov rdi, ENV
 16106 0000B33E BE00000000              	mov rsi, 0
 16107 0000B343 BA01000000              	mov rdx, 1
 16108                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 16109 0000B348 4883FE00                	cmp rsi, 0
 16110 0000B34C 7410                    	je .L_lambda_simple_env_end_0058
 16111 0000B34E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16112 0000B352 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16113 0000B356 48FFC6                  	inc rsi
 16114 0000B359 48FFC2                  	inc rdx
 16115 0000B35C EBEA                    	jmp .L_lambda_simple_env_loop_0058
 16116                                  .L_lambda_simple_env_end_0058:
 16117 0000B35E 5B                      	pop rbx
 16118 0000B35F BE00000000              	mov rsi, 0
 16119                                  .L_lambda_simple_params_loop_0058:	; copy params
 16120 0000B364 4883FE00                	cmp rsi, 0
 16121 0000B368 740E                    	je .L_lambda_simple_params_end_0058
 16122 0000B36A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16123 0000B36F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16124 0000B373 48FFC6                  	inc rsi
 16125 0000B376 EBEC                    	jmp .L_lambda_simple_params_loop_0058
 16126                                  .L_lambda_simple_params_end_0058:
 16127 0000B378 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16128 0000B37B 4889C3                  	mov rbx, rax
 16129 0000B37E 58                      	pop rax
 16130 0000B37F C60004                  	mov byte [rax], T_closure
 16131 0000B382 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16132 0000B386 48C74009[93B30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 16133 0000B38E E931020000              	jmp .L_lambda_simple_end_0058
 16134                                  .L_lambda_simple_code_0058:	; lambda-simple body
 16135 0000B393 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16136 0000B399 740B                    	je .L_lambda_simple_arity_check_ok_0058
 16137 0000B39B FF742410                	push qword [rsp + 8 * 2]
 16138 0000B39F 6A01                    	push 1
 16139 0000B3A1 E968C20000              	jmp L_error_incorrect_arity_simple
 16140                                  .L_lambda_simple_arity_check_ok_0058:
 16141 0000B3A6 C8000000                	enter 0, 0
 16142 0000B3AA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16143 0000B3AF E8A1C20000              	call malloc
 16144 0000B3B4 50                      	push rax
 16145 0000B3B5 BF08000000              	mov rdi, 8 * 1	; new rib
 16146 0000B3BA E896C20000              	call malloc
 16147 0000B3BF 50                      	push rax
 16148 0000B3C0 BF10000000              	mov rdi, 8 * 2	; extended env
 16149 0000B3C5 E88BC20000              	call malloc
 16150 0000B3CA 488B7D10                	mov rdi, ENV
 16151 0000B3CE 4831F6                  	 xor rsi, rsi
 16152 0000B3D1 4831D2                  	 xor rdx, rdx
 16153 0000B3D4 48FFC2                  	inc rdx
 16154                                  .L_lambda_opt_env_loop_000f:	; 
 16155 0000B3D7 4883FE01                	cmp rsi, 1
 16156 0000B3DB 7410                    	je .L_lambda_opt_env_end_000f
 16157 0000B3DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16158 0000B3E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16159 0000B3E5 48FFC6                  	inc rsi
 16160 0000B3E8 48FFC2                  	inc rdx
 16161 0000B3EB EBEA                    	jmp .L_lambda_opt_env_loop_000f
 16162                                  .L_lambda_opt_env_end_000f:
 16163 0000B3ED 5B                      	pop rbx
 16164 0000B3EE 4831F6                  	xor rsi, rsi
 16165                                  .L_lambda_opt_params_loop_000f:	; copy params
 16166 0000B3F1 4883FE01                	cmp rsi, 1
 16167 0000B3F5 740E                    	je .L_lambda_opt_params_end_000f
 16168 0000B3F7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16169 0000B3FC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16170 0000B400 48FFC6                  	inc rsi
 16171 0000B403 EBEC                    	jmp .L_lambda_opt_params_loop_000f
 16172                                  .L_lambda_opt_params_end_000f:
 16173 0000B405 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16174 0000B408 4889C3                  	mov rbx, rax
 16175 0000B40B 58                      	pop rax
 16176 0000B40C C60004                  	mov byte [rax], T_closure
 16177 0000B40F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16178 0000B413 48C74009[20B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 16179 0000B41B E9A0010000              	jmp .L_lambda_opt_end_000f
 16180                                  .L_lambda_opt_code_000f:
 16181 0000B420 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 16182 0000B425 4983FF00                	cmp r15, 0
 16183 0000B429 7409                    	je .L_lambda_opt_arity_check_exact_000f
 16184 0000B42B 7F57                    	jg .L_lambda_opt_arity_check_more_000f
 16185 0000B42D 6A00                    	push 0
 16186 0000B42F E9EEC10000              	jmp L_error_incorrect_arity_opt
 16187                                  .L_lambda_opt_arity_check_exact_000f: ;Exact case
 16188 0000B434 4C8B0424                	mov r8, qword [rsp -8 * 0]
 16189 0000B438 4C894424F8              	mov qword [rsp -8], r8
 16190 0000B43D 4C8B442408              	mov r8, qword [rsp +8]
 16191 0000B442 4C890424                	mov qword [rsp +8 * 0], r8
 16192 0000B446 4C8B442410              	mov r8, qword [rsp +8 * 2]
 16193 0000B44B 4C89C1                  	mov rcx, r8
 16194 0000B44E 49FFC0                  	inc r8
 16195 0000B451 4C89442408              	mov qword [rsp +8], r8
 16196 0000B456 4889E2                  	mov rdx, rsp
 16197 0000B459 4883C218                	add rdx, 24
 16198                                  .L_lambda_opt_loop_copy_to_new_frame_exact_000f:
 16199 0000B45D 4883F900                	cmp rcx, 0
 16200 0000B461 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_000f
 16201 0000B463 4C8B02                  	mov r8, qword [rdx]
 16202 0000B466 4C8942F8                	mov qword [rdx - 8], r8
 16203 0000B46A 4883C208                	add rdx, 8
 16204 0000B46E 48FFC9                  	dec rcx
 16205 0000B471 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_000f
 16206                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_000f:
 16207 0000B473 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 16208 0000B47B 4883EC08                	sub rsp, 8
 16209 0000B47F E985000000              	jmp .L_lambda_opt_stack_adjusted_000f
 16210                                  .L_lambda_opt_arity_check_more_000f:
 16211 0000B484 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16212 0000B489 4D89C4                  	mov r12, r8
 16213 0000B48C 4C89C1                  	mov rcx, r8
 16214 0000B48F 4D8D6802                	lea r13, [r8 + 2] 
 16215 0000B493 4883E900                	sub rcx, 0
 16216 0000B497 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 16217 0000B49C 49BE-                   	mov r14, sob_nil
 16217 0000B49E [0100000000000000] 
 16218                                  .L_lambda_opt_create_list_of_opt_params_000f:
 16219 0000B4A6 4883F900                	cmp rcx, 0
 16220 0000B4AA 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_000f
 16221 0000B4AC BF11000000              	mov rdi, 17
 16222 0000B4B1 E89FC10000              	call malloc
 16223 0000B4B6 C60021                  	mov byte [rax], T_pair
 16224 0000B4B9 498B1B                  	mov rbx, qword [r11]
 16225 0000B4BC 48895801                	mov qword [rax +1], rbx
 16226 0000B4C0 4C897009                	mov qword [rax + 1 + 8], r14
 16227 0000B4C4 4989C6                  	mov r14, rax
 16228 0000B4C7 48FFC9                  	dec rcx
 16229 0000B4CA 4983EB08                	sub r11, 8
 16230 0000B4CE EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_000f
 16231                                  .L_lambda_opt_create_list_of_opt_params_end_000f:
 16232 0000B4D0 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
 16233 0000B4D5 4D8932                  	mov qword [r10], r14
 16234 0000B4D8 4E8D2CED00000000        	lea r13, [8 * r13]
 16235 0000B4E0 4901E5                  	add r13, rsp
 16236 0000B4E3 B904000000              	mov rcx, 4 + 0
 16237                                  .L_lambda_opt_stack_shrink_loop_000f:
 16238 0000B4E8 4883F900                	cmp rcx, 0
 16239 0000B4EC 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_000f
 16240 0000B4EE 4D8B1A                  	mov r11, qword [r10]
 16241 0000B4F1 4D895D00                	mov qword [r13], r11
 16242 0000B4F5 4983EA08                	sub r10, 8
 16243 0000B4F9 4983ED08                	sub r13, 8
 16244 0000B4FD 48FFC9                  	dec rcx
 16245 0000B500 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 16246                                  .L_lambda_opt_stack_shrink_loop_exit_000f:
 16247 0000B502 4983C508                	add r13, 8
 16248 0000B506 4C89EC                  	mov rsp, r13
 16249                                  .L_lambda_opt_stack_adjusted_000f:
 16250 0000B509 48C744241001000000      	mov qword [rsp + 8*2], 1
 16251 0000B512 C8000000                	enter 0, 0
 16252                                  	; preparing a tail-call
 16253                                  	; preparing a non-tail-call
 16254 0000B516 488B4520                	mov rax, PARAM(0)	; param s
 16255 0000B51A 50                      	push rax
 16256 0000B51B 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16257 0000B523 803805                  	cmp byte [rax], T_undefined
 16258 0000B526 0F84FCBF0000            	je L_error_fvar_undefined
 16259 0000B52C 50                      	push rax
 16260 0000B52D 6A02                    	push 2	; arg count
 16261 0000B52F 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 16262 0000B537 803805                  	cmp byte [rax], T_undefined
 16263 0000B53A 0F84E8BF0000            	je L_error_fvar_undefined
 16264 0000B540 803804                  	cmp byte [rax], T_closure
 16265 0000B543 0F8563C00000            	jne L_error_non_closure
 16266 0000B549 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16267 0000B54C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16268 0000B54F 50                      	push rax
 16269 0000B550 488B4510                	mov rax, ENV
 16270 0000B554 488B00                  	mov rax, qword [rax + 8 * 0]
 16271 0000B557 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16272 0000B55A 50                      	push rax
 16273 0000B55B 6A02                    	push 2	; arg count
 16274 0000B55D 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 16275 0000B565 803805                  	cmp byte [rax], T_undefined
 16276 0000B568 0F84BABF0000            	je L_error_fvar_undefined
 16277 0000B56E 803804                  	cmp byte [rax], T_closure
 16278 0000B571 0F8535C00000            	jne L_error_non_closure
 16279 0000B577 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16280 0000B57A FF7508                  	push qword [rbp + 8 * 1]
 16281                                   ; old ret addr
 16282 0000B57D FF7500                  	push qword [rbp]
 16283                                   ; restore the old rbp
 16284 0000B580 BB02000000              	mov rbx, 2
 16285 0000B585 4883C303                	add rbx, 3
 16286 0000B589 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 16287 0000B58D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 16288 0000B592 4C8D4DF8                	lea r9, [rbp - 8]
 16289 0000B596 B906000000              	mov rcx, 6
 16290                                  .L_tc_recycle_frame_loop_0095:
 16291 0000B59B 4883F900                	cmp rcx, 0
 16292 0000B59F 7413                    	je .L_tc_recycle_frame_done_0095
 16293 0000B5A1 4D8B11                  	mov r10, qword [r9]
 16294 0000B5A4 4D8910                  	mov qword [r8], r10
 16295 0000B5A7 4983E808                	sub r8, 8
 16296 0000B5AB 4983E908                	sub r9, 8
 16297 0000B5AF 48FFC9                  	dec rcx
 16298 0000B5B2 EBE7                    	jmp .L_tc_recycle_frame_loop_0095
 16299                                  .L_tc_recycle_frame_done_0095:
 16300 0000B5B4 498D6008                	lea rsp, [r8 + 8]
 16301 0000B5B8 5D                      	pop rbp ; restore the old rbp
 16302 0000B5B9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16303 0000B5BC C9                      	leave
 16304 0000B5BD C21800                  	ret 8 * (2 + 1)
 16305                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16306 0000B5C0 C9                      	leave
 16307 0000B5C1 C21800                  	ret AND_KILL_FRAME(1)
 16308                                  .L_lambda_simple_end_0058:	; new closure is in rax
 16309 0000B5C4 50                      	push rax
 16310 0000B5C5 6A01                    	push 1	; arg count
 16311 0000B5C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16312 0000B5CC E884C00000              	call malloc
 16313 0000B5D1 50                      	push rax
 16314 0000B5D2 BF00000000              	mov rdi, 8 * 0	; new rib
 16315 0000B5D7 E879C00000              	call malloc
 16316 0000B5DC 50                      	push rax
 16317 0000B5DD BF08000000              	mov rdi, 8 * 1	; extended env
 16318 0000B5E2 E86EC00000              	call malloc
 16319 0000B5E7 488B7D10                	mov rdi, ENV
 16320 0000B5EB BE00000000              	mov rsi, 0
 16321 0000B5F0 BA01000000              	mov rdx, 1
 16322                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 16323 0000B5F5 4883FE00                	cmp rsi, 0
 16324 0000B5F9 7410                    	je .L_lambda_simple_env_end_0059
 16325 0000B5FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16326 0000B5FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16327 0000B603 48FFC6                  	inc rsi
 16328 0000B606 48FFC2                  	inc rdx
 16329 0000B609 EBEA                    	jmp .L_lambda_simple_env_loop_0059
 16330                                  .L_lambda_simple_env_end_0059:
 16331 0000B60B 5B                      	pop rbx
 16332 0000B60C BE00000000              	mov rsi, 0
 16333                                  .L_lambda_simple_params_loop_0059:	; copy params
 16334 0000B611 4883FE00                	cmp rsi, 0
 16335 0000B615 740E                    	je .L_lambda_simple_params_end_0059
 16336 0000B617 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16337 0000B61C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16338 0000B620 48FFC6                  	inc rsi
 16339 0000B623 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 16340                                  .L_lambda_simple_params_end_0059:
 16341 0000B625 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16342 0000B628 4889C3                  	mov rbx, rax
 16343 0000B62B 58                      	pop rax
 16344 0000B62C C60004                  	mov byte [rax], T_closure
 16345 0000B62F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16346 0000B633 48C74009[40B60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 16347 0000B63B E938010000              	jmp .L_lambda_simple_end_0059
 16348                                  .L_lambda_simple_code_0059:	; lambda-simple body
 16349 0000B640 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16350 0000B646 740B                    	je .L_lambda_simple_arity_check_ok_0059
 16351 0000B648 FF742410                	push qword [rsp + 8 * 2]
 16352 0000B64C 6A01                    	push 1
 16353 0000B64E E9BBBF0000              	jmp L_error_incorrect_arity_simple
 16354                                  .L_lambda_simple_arity_check_ok_0059:
 16355 0000B653 C8000000                	enter 0, 0
 16356                                  	; preparing a non-tail-call
 16357 0000B657 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 16358 0000B65F 803805                  	cmp byte [rax], T_undefined
 16359 0000B662 0F84C0BE0000            	je L_error_fvar_undefined
 16360 0000B668 50                      	push rax
 16361 0000B669 6A01                    	push 1	; arg count
 16362 0000B66B 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16363 0000B66F 803804                  	cmp byte [rax], T_closure
 16364 0000B672 0F8534BF0000            	jne L_error_non_closure
 16365 0000B678 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16366 0000B67B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16367 0000B67E 48890425[AF120000]      	mov qword [free_var_74], rax
 16368 0000B686 48B8-                   	mov rax, sob_void
 16368 0000B688 [0000000000000000] 
 16369                                  
 16370                                  	; preparing a non-tail-call
 16371 0000B690 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16372 0000B698 803805                  	cmp byte [rax], T_undefined
 16373 0000B69B 0F8487BE0000            	je L_error_fvar_undefined
 16374 0000B6A1 50                      	push rax
 16375 0000B6A2 6A01                    	push 1	; arg count
 16376 0000B6A4 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16377 0000B6A8 803804                  	cmp byte [rax], T_closure
 16378 0000B6AB 0F85FBBE0000            	jne L_error_non_closure
 16379 0000B6B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16380 0000B6B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16381 0000B6B7 48890425[9E120000]      	mov qword [free_var_73], rax
 16382 0000B6BF 48B8-                   	mov rax, sob_void
 16382 0000B6C1 [0000000000000000] 
 16383                                  
 16384                                  	; preparing a non-tail-call
 16385 0000B6C9 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 16386 0000B6D1 803805                  	cmp byte [rax], T_undefined
 16387 0000B6D4 0F844EBE0000            	je L_error_fvar_undefined
 16388 0000B6DA 50                      	push rax
 16389 0000B6DB 6A01                    	push 1	; arg count
 16390 0000B6DD 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16391 0000B6E1 803804                  	cmp byte [rax], T_closure
 16392 0000B6E4 0F85C2BE0000            	jne L_error_non_closure
 16393 0000B6EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 16394 0000B6ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 16395 0000B6F0 48890425[C0120000]      	mov qword [free_var_75], rax
 16396 0000B6F8 48B8-                   	mov rax, sob_void
 16396 0000B6FA [0000000000000000] 
 16397                                  
 16398                                  	; preparing a non-tail-call
 16399 0000B702 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 16400 0000B70A 803805                  	cmp byte [rax], T_undefined
 16401 0000B70D 0F8415BE0000            	je L_error_fvar_undefined
 16402 0000B713 50                      	push rax
 16403 0000B714 6A01                    	push 1	; arg count
 16404 0000B716 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16405 0000B71A 803804                  	cmp byte [rax], T_closure
 16406 0000B71D 0F8589BE0000            	jne L_error_non_closure
 16407 0000B723 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16408 0000B726 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16409 0000B729 48890425[E2120000]      	mov qword [free_var_77], rax
 16410 0000B731 48B8-                   	mov rax, sob_void
 16410 0000B733 [0000000000000000] 
 16411                                  
 16412                                  	; preparing a non-tail-call
 16413 0000B73B 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 16414 0000B743 803805                  	cmp byte [rax], T_undefined
 16415 0000B746 0F84DCBD0000            	je L_error_fvar_undefined
 16416 0000B74C 50                      	push rax
 16417 0000B74D 6A01                    	push 1	; arg count
 16418 0000B74F 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16419 0000B753 803804                  	cmp byte [rax], T_closure
 16420 0000B756 0F8550BE0000            	jne L_error_non_closure
 16421 0000B75C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16422 0000B75F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16423 0000B762 48890425[D1120000]      	mov qword [free_var_76], rax
 16424 0000B76A 48B8-                   	mov rax, sob_void
 16424 0000B76C [0000000000000000] 
 16425 0000B774 C9                      	leave
 16426 0000B775 C21800                  	ret AND_KILL_FRAME(1)
 16427                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16428 0000B778 803804                  	cmp byte [rax], T_closure
 16429 0000B77B 0F852BBE0000            	jne L_error_non_closure
 16430 0000B781 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16431 0000B784 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16432                                  
 16433 0000B787 4889C7                  	mov rdi, rax
 16434 0000B78A E81BC10000              	call print_sexpr_if_not_void
 16435 0000B78F 48B8-                   	mov rax, L_constants + 0
 16435 0000B791 [0000000000000000] 
 16436 0000B799 48890425[7C120000]      	mov qword [free_var_71], rax
 16437 0000B7A1 48B8-                   	mov rax, sob_void
 16437 0000B7A3 [0000000000000000] 
 16438                                  
 16439 0000B7AB 4889C7                  	mov rdi, rax
 16440 0000B7AE E8F7C00000              	call print_sexpr_if_not_void
 16441 0000B7B3 48B8-                   	mov rax, L_constants + 0
 16441 0000B7B5 [0000000000000000] 
 16442 0000B7BD 48890425[8D120000]      	mov qword [free_var_72], rax
 16443 0000B7C5 48B8-                   	mov rax, sob_void
 16443 0000B7C7 [0000000000000000] 
 16444                                  
 16445 0000B7CF 4889C7                  	mov rdi, rax
 16446 0000B7D2 E8D3C00000              	call print_sexpr_if_not_void
 16447                                  	; preparing a non-tail-call
 16448                                  	; preparing a non-tail-call
 16449                                  	; preparing a non-tail-call
 16450 0000B7D7 48B8-                   	mov rax, L_constants + 2569
 16450 0000B7D9 [090A000000000000] 
 16451 0000B7E1 50                      	push rax
 16452 0000B7E2 6A01                    	push 1	; arg count
 16453 0000B7E4 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16454 0000B7EC 803805                  	cmp byte [rax], T_undefined
 16455 0000B7EF 0F8433BD0000            	je L_error_fvar_undefined
 16456 0000B7F5 803804                  	cmp byte [rax], T_closure
 16457 0000B7F8 0F85AEBD0000            	jne L_error_non_closure
 16458 0000B7FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16459 0000B801 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16460 0000B804 50                      	push rax
 16461                                  	; preparing a non-tail-call
 16462 0000B805 48B8-                   	mov rax, L_constants + 2573
 16462 0000B807 [0D0A000000000000] 
 16463 0000B80F 50                      	push rax
 16464 0000B810 6A01                    	push 1	; arg count
 16465 0000B812 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16466 0000B81A 803805                  	cmp byte [rax], T_undefined
 16467 0000B81D 0F8405BD0000            	je L_error_fvar_undefined
 16468 0000B823 803804                  	cmp byte [rax], T_closure
 16469 0000B826 0F8580BD0000            	jne L_error_non_closure
 16470 0000B82C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16471 0000B82F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16472 0000B832 50                      	push rax
 16473 0000B833 6A02                    	push 2	; arg count
 16474 0000B835 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16475 0000B83D 803805                  	cmp byte [rax], T_undefined
 16476 0000B840 0F84E2BC0000            	je L_error_fvar_undefined
 16477 0000B846 803804                  	cmp byte [rax], T_closure
 16478 0000B849 0F855DBD0000            	jne L_error_non_closure
 16479 0000B84F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16480 0000B852 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16481 0000B855 50                      	push rax
 16482 0000B856 6A01                    	push 1	; arg count
 16483 0000B858 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16484 0000B85D E8F3BD0000              	call malloc
 16485 0000B862 50                      	push rax
 16486 0000B863 BF00000000              	mov rdi, 8 * 0	; new rib
 16487 0000B868 E8E8BD0000              	call malloc
 16488 0000B86D 50                      	push rax
 16489 0000B86E BF08000000              	mov rdi, 8 * 1	; extended env
 16490 0000B873 E8DDBD0000              	call malloc
 16491 0000B878 488B7D10                	mov rdi, ENV
 16492 0000B87C BE00000000              	mov rsi, 0
 16493 0000B881 BA01000000              	mov rdx, 1
 16494                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 16495 0000B886 4883FE00                	cmp rsi, 0
 16496 0000B88A 7410                    	je .L_lambda_simple_env_end_005a
 16497 0000B88C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16498 0000B890 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16499 0000B894 48FFC6                  	inc rsi
 16500 0000B897 48FFC2                  	inc rdx
 16501 0000B89A EBEA                    	jmp .L_lambda_simple_env_loop_005a
 16502                                  .L_lambda_simple_env_end_005a:
 16503 0000B89C 5B                      	pop rbx
 16504 0000B89D BE00000000              	mov rsi, 0
 16505                                  .L_lambda_simple_params_loop_005a:	; copy params
 16506 0000B8A2 4883FE00                	cmp rsi, 0
 16507 0000B8A6 740E                    	je .L_lambda_simple_params_end_005a
 16508 0000B8A8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16509 0000B8AD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16510 0000B8B1 48FFC6                  	inc rsi
 16511 0000B8B4 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 16512                                  .L_lambda_simple_params_end_005a:
 16513 0000B8B6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16514 0000B8B9 4889C3                  	mov rbx, rax
 16515 0000B8BC 58                      	pop rax
 16516 0000B8BD C60004                  	mov byte [rax], T_closure
 16517 0000B8C0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16518 0000B8C4 48C74009[D1B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 16519 0000B8CC E973030000              	jmp .L_lambda_simple_end_005a
 16520                                  .L_lambda_simple_code_005a:	; lambda-simple body
 16521 0000B8D1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16522 0000B8D7 740B                    	je .L_lambda_simple_arity_check_ok_005a
 16523 0000B8D9 FF742410                	push qword [rsp + 8 * 2]
 16524 0000B8DD 6A01                    	push 1
 16525 0000B8DF E92ABD0000              	jmp L_error_incorrect_arity_simple
 16526                                  .L_lambda_simple_arity_check_ok_005a:
 16527 0000B8E4 C8000000                	enter 0, 0
 16528 0000B8E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16529 0000B8ED E863BD0000              	call malloc
 16530 0000B8F2 50                      	push rax
 16531 0000B8F3 BF08000000              	mov rdi, 8 * 1	; new rib
 16532 0000B8F8 E858BD0000              	call malloc
 16533 0000B8FD 50                      	push rax
 16534 0000B8FE BF10000000              	mov rdi, 8 * 2	; extended env
 16535 0000B903 E84DBD0000              	call malloc
 16536 0000B908 488B7D10                	mov rdi, ENV
 16537 0000B90C BE00000000              	mov rsi, 0
 16538 0000B911 BA01000000              	mov rdx, 1
 16539                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 16540 0000B916 4883FE01                	cmp rsi, 1
 16541 0000B91A 7410                    	je .L_lambda_simple_env_end_005b
 16542 0000B91C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16543 0000B920 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16544 0000B924 48FFC6                  	inc rsi
 16545 0000B927 48FFC2                  	inc rdx
 16546 0000B92A EBEA                    	jmp .L_lambda_simple_env_loop_005b
 16547                                  .L_lambda_simple_env_end_005b:
 16548 0000B92C 5B                      	pop rbx
 16549 0000B92D BE00000000              	mov rsi, 0
 16550                                  .L_lambda_simple_params_loop_005b:	; copy params
 16551 0000B932 4883FE01                	cmp rsi, 1
 16552 0000B936 740E                    	je .L_lambda_simple_params_end_005b
 16553 0000B938 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16554 0000B93D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16555 0000B941 48FFC6                  	inc rsi
 16556 0000B944 EBEC                    	jmp .L_lambda_simple_params_loop_005b
 16557                                  .L_lambda_simple_params_end_005b:
 16558 0000B946 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16559 0000B949 4889C3                  	mov rbx, rax
 16560 0000B94C 58                      	pop rax
 16561 0000B94D C60004                  	mov byte [rax], T_closure
 16562 0000B950 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16563 0000B954 48C74009[61B90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 16564 0000B95C E921010000              	jmp .L_lambda_simple_end_005b
 16565                                  .L_lambda_simple_code_005b:	; lambda-simple body
 16566 0000B961 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16567 0000B967 740B                    	je .L_lambda_simple_arity_check_ok_005b
 16568 0000B969 FF742410                	push qword [rsp + 8 * 2]
 16569 0000B96D 6A01                    	push 1
 16570 0000B96F E99ABC0000              	jmp L_error_incorrect_arity_simple
 16571                                  .L_lambda_simple_arity_check_ok_005b:
 16572 0000B974 C8000000                	enter 0, 0
 16573                                  	; preparing a non-tail-call
 16574 0000B978 48B8-                   	mov rax, L_constants + 2571
 16574 0000B97A [0B0A000000000000] 
 16575 0000B982 50                      	push rax
 16576 0000B983 488B4520                	mov rax, PARAM(0)	; param ch
 16577 0000B987 50                      	push rax
 16578 0000B988 48B8-                   	mov rax, L_constants + 2569
 16578 0000B98A [090A000000000000] 
 16579 0000B992 50                      	push rax
 16580 0000B993 6A03                    	push 3	; arg count
 16581 0000B995 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16582 0000B99D 803805                  	cmp byte [rax], T_undefined
 16583 0000B9A0 0F8482BB0000            	je L_error_fvar_undefined
 16584 0000B9A6 803804                  	cmp byte [rax], T_closure
 16585 0000B9A9 0F85FDBB0000            	jne L_error_non_closure
 16586 0000B9AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 16587 0000B9B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16588 0000B9B5 483D[02000000]          	cmp rax, sob_boolean_false
 16589 0000B9BB 0F84B9000000            	je .L_if_else_0051
 16590                                  	; preparing a tail-call
 16591                                  	; preparing a non-tail-call
 16592 0000B9C1 488B4510                	mov rax, ENV
 16593 0000B9C5 488B00                  	mov rax, qword [rax + 8 * 0]
 16594 0000B9C8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16595 0000B9CB 50                      	push rax
 16596                                  	; preparing a non-tail-call
 16597 0000B9CC 488B4520                	mov rax, PARAM(0)	; param ch
 16598 0000B9D0 50                      	push rax
 16599 0000B9D1 6A01                    	push 1	; arg count
 16600 0000B9D3 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16601 0000B9DB 803805                  	cmp byte [rax], T_undefined
 16602 0000B9DE 0F8444BB0000            	je L_error_fvar_undefined
 16603 0000B9E4 803804                  	cmp byte [rax], T_closure
 16604 0000B9E7 0F85BFBB0000            	jne L_error_non_closure
 16605 0000B9ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 16606 0000B9F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16607 0000B9F3 50                      	push rax
 16608 0000B9F4 6A02                    	push 2	; arg count
 16609 0000B9F6 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 16610 0000B9FE 803805                  	cmp byte [rax], T_undefined
 16611 0000BA01 0F8421BB0000            	je L_error_fvar_undefined
 16612 0000BA07 803804                  	cmp byte [rax], T_closure
 16613 0000BA0A 0F859CBB0000            	jne L_error_non_closure
 16614 0000BA10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16615 0000BA13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16616 0000BA16 50                      	push rax
 16617 0000BA17 6A01                    	push 1	; arg count
 16618 0000BA19 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16619 0000BA21 803805                  	cmp byte [rax], T_undefined
 16620 0000BA24 0F84FEBA0000            	je L_error_fvar_undefined
 16621 0000BA2A 803804                  	cmp byte [rax], T_closure
 16622 0000BA2D 0F8579BB0000            	jne L_error_non_closure
 16623 0000BA33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16624 0000BA36 FF7508                  	push qword [rbp + 8 * 1]
 16625                                   ; old ret addr
 16626 0000BA39 FF7500                  	push qword [rbp]
 16627                                   ; restore the old rbp
 16628 0000BA3C BB01000000              	mov rbx, 1
 16629 0000BA41 4883C303                	add rbx, 3
 16630 0000BA45 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 16631 0000BA49 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 16632 0000BA4E 4C8D4DF8                	lea r9, [rbp - 8]
 16633 0000BA52 B905000000              	mov rcx, 5
 16634                                  .L_tc_recycle_frame_loop_0096:
 16635 0000BA57 4883F900                	cmp rcx, 0
 16636 0000BA5B 7413                    	je .L_tc_recycle_frame_done_0096
 16637 0000BA5D 4D8B11                  	mov r10, qword [r9]
 16638 0000BA60 4D8910                  	mov qword [r8], r10
 16639 0000BA63 4983E808                	sub r8, 8
 16640 0000BA67 4983E908                	sub r9, 8
 16641 0000BA6B 48FFC9                  	dec rcx
 16642 0000BA6E EBE7                    	jmp .L_tc_recycle_frame_loop_0096
 16643                                  .L_tc_recycle_frame_done_0096:
 16644 0000BA70 498D6008                	lea rsp, [r8 + 8]
 16645 0000BA74 5D                      	pop rbp ; restore the old rbp
 16646 0000BA75 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16647 0000BA78 EB04                    	jmp .L_if_end_0051
 16648                                  .L_if_else_0051:
 16649 0000BA7A 488B4520                	mov rax, PARAM(0)	; param ch
 16650                                  .L_if_end_0051:
 16651 0000BA7E C9                      	leave
 16652 0000BA7F C21800                  	ret AND_KILL_FRAME(1)
 16653                                  .L_lambda_simple_end_005b:	; new closure is in rax
 16654 0000BA82 48890425[7C120000]      	mov qword [free_var_71], rax
 16655 0000BA8A 48B8-                   	mov rax, sob_void
 16655 0000BA8C [0000000000000000] 
 16656                                  
 16657 0000BA94 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16658 0000BA99 E8B7BB0000              	call malloc
 16659 0000BA9E 50                      	push rax
 16660 0000BA9F BF08000000              	mov rdi, 8 * 1	; new rib
 16661 0000BAA4 E8ACBB0000              	call malloc
 16662 0000BAA9 50                      	push rax
 16663 0000BAAA BF10000000              	mov rdi, 8 * 2	; extended env
 16664 0000BAAF E8A1BB0000              	call malloc
 16665 0000BAB4 488B7D10                	mov rdi, ENV
 16666 0000BAB8 BE00000000              	mov rsi, 0
 16667 0000BABD BA01000000              	mov rdx, 1
 16668                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 16669 0000BAC2 4883FE01                	cmp rsi, 1
 16670 0000BAC6 7410                    	je .L_lambda_simple_env_end_005c
 16671 0000BAC8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16672 0000BACC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16673 0000BAD0 48FFC6                  	inc rsi
 16674 0000BAD3 48FFC2                  	inc rdx
 16675 0000BAD6 EBEA                    	jmp .L_lambda_simple_env_loop_005c
 16676                                  .L_lambda_simple_env_end_005c:
 16677 0000BAD8 5B                      	pop rbx
 16678 0000BAD9 BE00000000              	mov rsi, 0
 16679                                  .L_lambda_simple_params_loop_005c:	; copy params
 16680 0000BADE 4883FE01                	cmp rsi, 1
 16681 0000BAE2 740E                    	je .L_lambda_simple_params_end_005c
 16682 0000BAE4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16683 0000BAE9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16684 0000BAED 48FFC6                  	inc rsi
 16685 0000BAF0 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 16686                                  .L_lambda_simple_params_end_005c:
 16687 0000BAF2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16688 0000BAF5 4889C3                  	mov rbx, rax
 16689 0000BAF8 58                      	pop rax
 16690 0000BAF9 C60004                  	mov byte [rax], T_closure
 16691 0000BAFC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16692 0000BB00 48C74009[0DBB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 16693 0000BB08 E921010000              	jmp .L_lambda_simple_end_005c
 16694                                  .L_lambda_simple_code_005c:	; lambda-simple body
 16695 0000BB0D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16696 0000BB13 740B                    	je .L_lambda_simple_arity_check_ok_005c
 16697 0000BB15 FF742410                	push qword [rsp + 8 * 2]
 16698 0000BB19 6A01                    	push 1
 16699 0000BB1B E9EEBA0000              	jmp L_error_incorrect_arity_simple
 16700                                  .L_lambda_simple_arity_check_ok_005c:
 16701 0000BB20 C8000000                	enter 0, 0
 16702                                  	; preparing a non-tail-call
 16703 0000BB24 48B8-                   	mov rax, L_constants + 2575
 16703 0000BB26 [0F0A000000000000] 
 16704 0000BB2E 50                      	push rax
 16705 0000BB2F 488B4520                	mov rax, PARAM(0)	; param ch
 16706 0000BB33 50                      	push rax
 16707 0000BB34 48B8-                   	mov rax, L_constants + 2573
 16707 0000BB36 [0D0A000000000000] 
 16708 0000BB3E 50                      	push rax
 16709 0000BB3F 6A03                    	push 3	; arg count
 16710 0000BB41 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 16711 0000BB49 803805                  	cmp byte [rax], T_undefined
 16712 0000BB4C 0F84D6B90000            	je L_error_fvar_undefined
 16713 0000BB52 803804                  	cmp byte [rax], T_closure
 16714 0000BB55 0F8551BA0000            	jne L_error_non_closure
 16715 0000BB5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16716 0000BB5E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16717 0000BB61 483D[02000000]          	cmp rax, sob_boolean_false
 16718 0000BB67 0F84B9000000            	je .L_if_else_0052
 16719                                  	; preparing a tail-call
 16720                                  	; preparing a non-tail-call
 16721 0000BB6D 488B4510                	mov rax, ENV
 16722 0000BB71 488B00                  	mov rax, qword [rax + 8 * 0]
 16723 0000BB74 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 16724 0000BB77 50                      	push rax
 16725                                  	; preparing a non-tail-call
 16726 0000BB78 488B4520                	mov rax, PARAM(0)	; param ch
 16727 0000BB7C 50                      	push rax
 16728 0000BB7D 6A01                    	push 1	; arg count
 16729 0000BB7F 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16730 0000BB87 803805                  	cmp byte [rax], T_undefined
 16731 0000BB8A 0F8498B90000            	je L_error_fvar_undefined
 16732 0000BB90 803804                  	cmp byte [rax], T_closure
 16733 0000BB93 0F8513BA0000            	jne L_error_non_closure
 16734 0000BB99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16735 0000BB9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16736 0000BB9F 50                      	push rax
 16737 0000BBA0 6A02                    	push 2	; arg count
 16738 0000BBA2 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16739 0000BBAA 803805                  	cmp byte [rax], T_undefined
 16740 0000BBAD 0F8475B90000            	je L_error_fvar_undefined
 16741 0000BBB3 803804                  	cmp byte [rax], T_closure
 16742 0000BBB6 0F85F0B90000            	jne L_error_non_closure
 16743 0000BBBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16744 0000BBBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 16745 0000BBC2 50                      	push rax
 16746 0000BBC3 6A01                    	push 1	; arg count
 16747 0000BBC5 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 16748 0000BBCD 803805                  	cmp byte [rax], T_undefined
 16749 0000BBD0 0F8452B90000            	je L_error_fvar_undefined
 16750 0000BBD6 803804                  	cmp byte [rax], T_closure
 16751 0000BBD9 0F85CDB90000            	jne L_error_non_closure
 16752 0000BBDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 16753 0000BBE2 FF7508                  	push qword [rbp + 8 * 1]
 16754                                   ; old ret addr
 16755 0000BBE5 FF7500                  	push qword [rbp]
 16756                                   ; restore the old rbp
 16757 0000BBE8 BB01000000              	mov rbx, 1
 16758 0000BBED 4883C303                	add rbx, 3
 16759 0000BBF1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 16760 0000BBF5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 16761 0000BBFA 4C8D4DF8                	lea r9, [rbp - 8]
 16762 0000BBFE B905000000              	mov rcx, 5
 16763                                  .L_tc_recycle_frame_loop_0097:
 16764 0000BC03 4883F900                	cmp rcx, 0
 16765 0000BC07 7413                    	je .L_tc_recycle_frame_done_0097
 16766 0000BC09 4D8B11                  	mov r10, qword [r9]
 16767 0000BC0C 4D8910                  	mov qword [r8], r10
 16768 0000BC0F 4983E808                	sub r8, 8
 16769 0000BC13 4983E908                	sub r9, 8
 16770 0000BC17 48FFC9                  	dec rcx
 16771 0000BC1A EBE7                    	jmp .L_tc_recycle_frame_loop_0097
 16772                                  .L_tc_recycle_frame_done_0097:
 16773 0000BC1C 498D6008                	lea rsp, [r8 + 8]
 16774 0000BC20 5D                      	pop rbp ; restore the old rbp
 16775 0000BC21 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16776 0000BC24 EB04                    	jmp .L_if_end_0052
 16777                                  .L_if_else_0052:
 16778 0000BC26 488B4520                	mov rax, PARAM(0)	; param ch
 16779                                  .L_if_end_0052:
 16780 0000BC2A C9                      	leave
 16781 0000BC2B C21800                  	ret AND_KILL_FRAME(1)
 16782                                  .L_lambda_simple_end_005c:	; new closure is in rax
 16783 0000BC2E 48890425[8D120000]      	mov qword [free_var_72], rax
 16784 0000BC36 48B8-                   	mov rax, sob_void
 16784 0000BC38 [0000000000000000] 
 16785 0000BC40 C9                      	leave
 16786 0000BC41 C21800                  	ret AND_KILL_FRAME(1)
 16787                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16788 0000BC44 803804                  	cmp byte [rax], T_closure
 16789 0000BC47 0F855FB90000            	jne L_error_non_closure
 16790 0000BC4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16791 0000BC50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16792                                  
 16793 0000BC53 4889C7                  	mov rdi, rax
 16794 0000BC56 E84FBC0000              	call print_sexpr_if_not_void
 16795 0000BC5B 48B8-                   	mov rax, L_constants + 0
 16795 0000BC5D [0000000000000000] 
 16796 0000BC65 48890425[38120000]      	mov qword [free_var_67], rax
 16797 0000BC6D 48B8-                   	mov rax, sob_void
 16797 0000BC6F [0000000000000000] 
 16798                                  
 16799 0000BC77 4889C7                  	mov rdi, rax
 16800 0000BC7A E82BBC0000              	call print_sexpr_if_not_void
 16801 0000BC7F 48B8-                   	mov rax, L_constants + 0
 16801 0000BC81 [0000000000000000] 
 16802 0000BC89 48890425[27120000]      	mov qword [free_var_66], rax
 16803 0000BC91 48B8-                   	mov rax, sob_void
 16803 0000BC93 [0000000000000000] 
 16804                                  
 16805 0000BC9B 4889C7                  	mov rdi, rax
 16806 0000BC9E E807BC0000              	call print_sexpr_if_not_void
 16807 0000BCA3 48B8-                   	mov rax, L_constants + 0
 16807 0000BCA5 [0000000000000000] 
 16808 0000BCAD 48890425[49120000]      	mov qword [free_var_68], rax
 16809 0000BCB5 48B8-                   	mov rax, sob_void
 16809 0000BCB7 [0000000000000000] 
 16810                                  
 16811 0000BCBF 4889C7                  	mov rdi, rax
 16812 0000BCC2 E8E3BB0000              	call print_sexpr_if_not_void
 16813 0000BCC7 48B8-                   	mov rax, L_constants + 0
 16813 0000BCC9 [0000000000000000] 
 16814 0000BCD1 48890425[6B120000]      	mov qword [free_var_70], rax
 16815 0000BCD9 48B8-                   	mov rax, sob_void
 16815 0000BCDB [0000000000000000] 
 16816                                  
 16817 0000BCE3 4889C7                  	mov rdi, rax
 16818 0000BCE6 E8BFBB0000              	call print_sexpr_if_not_void
 16819 0000BCEB 48B8-                   	mov rax, L_constants + 0
 16819 0000BCED [0000000000000000] 
 16820 0000BCF5 48890425[5A120000]      	mov qword [free_var_69], rax
 16821 0000BCFD 48B8-                   	mov rax, sob_void
 16821 0000BCFF [0000000000000000] 
 16822                                  
 16823 0000BD07 4889C7                  	mov rdi, rax
 16824 0000BD0A E89BBB0000              	call print_sexpr_if_not_void
 16825                                  	; preparing a non-tail-call
 16826 0000BD0F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16827 0000BD14 E83CB90000              	call malloc
 16828 0000BD19 50                      	push rax
 16829 0000BD1A BF00000000              	mov rdi, 8 * 0	; new rib
 16830 0000BD1F E831B90000              	call malloc
 16831 0000BD24 50                      	push rax
 16832 0000BD25 BF08000000              	mov rdi, 8 * 1	; extended env
 16833 0000BD2A E826B90000              	call malloc
 16834 0000BD2F 488B7D10                	mov rdi, ENV
 16835 0000BD33 BE00000000              	mov rsi, 0
 16836 0000BD38 BA01000000              	mov rdx, 1
 16837                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 16838 0000BD3D 4883FE00                	cmp rsi, 0
 16839 0000BD41 7410                    	je .L_lambda_simple_env_end_005d
 16840 0000BD43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16841 0000BD47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16842 0000BD4B 48FFC6                  	inc rsi
 16843 0000BD4E 48FFC2                  	inc rdx
 16844 0000BD51 EBEA                    	jmp .L_lambda_simple_env_loop_005d
 16845                                  .L_lambda_simple_env_end_005d:
 16846 0000BD53 5B                      	pop rbx
 16847 0000BD54 BE00000000              	mov rsi, 0
 16848                                  .L_lambda_simple_params_loop_005d:	; copy params
 16849 0000BD59 4883FE00                	cmp rsi, 0
 16850 0000BD5D 740E                    	je .L_lambda_simple_params_end_005d
 16851 0000BD5F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16852 0000BD64 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16853 0000BD68 48FFC6                  	inc rsi
 16854 0000BD6B EBEC                    	jmp .L_lambda_simple_params_loop_005d
 16855                                  .L_lambda_simple_params_end_005d:
 16856 0000BD6D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16857 0000BD70 4889C3                  	mov rbx, rax
 16858 0000BD73 58                      	pop rax
 16859 0000BD74 C60004                  	mov byte [rax], T_closure
 16860 0000BD77 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16861 0000BD7B 48C74009[88BD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 16862 0000BD83 E93D030000              	jmp .L_lambda_simple_end_005d
 16863                                  .L_lambda_simple_code_005d:	; lambda-simple body
 16864 0000BD88 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16865 0000BD8E 740B                    	je .L_lambda_simple_arity_check_ok_005d
 16866 0000BD90 FF742410                	push qword [rsp + 8 * 2]
 16867 0000BD94 6A01                    	push 1
 16868 0000BD96 E973B80000              	jmp L_error_incorrect_arity_simple
 16869                                  .L_lambda_simple_arity_check_ok_005d:
 16870 0000BD9B C8000000                	enter 0, 0
 16871 0000BD9F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16872 0000BDA4 E8ACB80000              	call malloc
 16873 0000BDA9 50                      	push rax
 16874 0000BDAA BF08000000              	mov rdi, 8 * 1	; new rib
 16875 0000BDAF E8A1B80000              	call malloc
 16876 0000BDB4 50                      	push rax
 16877 0000BDB5 BF10000000              	mov rdi, 8 * 2	; extended env
 16878 0000BDBA E896B80000              	call malloc
 16879 0000BDBF 488B7D10                	mov rdi, ENV
 16880 0000BDC3 4831F6                  	 xor rsi, rsi
 16881 0000BDC6 4831D2                  	 xor rdx, rdx
 16882 0000BDC9 48FFC2                  	inc rdx
 16883                                  .L_lambda_opt_env_loop_0010:	; 
 16884 0000BDCC 4883FE01                	cmp rsi, 1
 16885 0000BDD0 7410                    	je .L_lambda_opt_env_end_0010
 16886 0000BDD2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16887 0000BDD6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16888 0000BDDA 48FFC6                  	inc rsi
 16889 0000BDDD 48FFC2                  	inc rdx
 16890 0000BDE0 EBEA                    	jmp .L_lambda_opt_env_loop_0010
 16891                                  .L_lambda_opt_env_end_0010:
 16892 0000BDE2 5B                      	pop rbx
 16893 0000BDE3 4831F6                  	xor rsi, rsi
 16894                                  .L_lambda_opt_params_loop_0010:	; copy params
 16895 0000BDE6 4883FE01                	cmp rsi, 1
 16896 0000BDEA 740E                    	je .L_lambda_opt_params_end_0010
 16897 0000BDEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16898 0000BDF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16899 0000BDF5 48FFC6                  	inc rsi
 16900 0000BDF8 EBEC                    	jmp .L_lambda_opt_params_loop_0010
 16901                                  .L_lambda_opt_params_end_0010:
 16902 0000BDFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16903 0000BDFD 4889C3                  	mov rbx, rax
 16904 0000BE00 58                      	pop rax
 16905 0000BE01 C60004                  	mov byte [rax], T_closure
 16906 0000BE04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16907 0000BE08 48C74009[15BE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 16908 0000BE10 E9AC020000              	jmp .L_lambda_opt_end_0010
 16909                                  .L_lambda_opt_code_0010:
 16910 0000BE15 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 16911 0000BE1A 4983FF00                	cmp r15, 0
 16912 0000BE1E 7409                    	je .L_lambda_opt_arity_check_exact_0010
 16913 0000BE20 7F57                    	jg .L_lambda_opt_arity_check_more_0010
 16914 0000BE22 6A00                    	push 0
 16915 0000BE24 E9F9B70000              	jmp L_error_incorrect_arity_opt
 16916                                  .L_lambda_opt_arity_check_exact_0010: ;Exact case
 16917 0000BE29 4C8B0424                	mov r8, qword [rsp -8 * 0]
 16918 0000BE2D 4C894424F8              	mov qword [rsp -8], r8
 16919 0000BE32 4C8B442408              	mov r8, qword [rsp +8]
 16920 0000BE37 4C890424                	mov qword [rsp +8 * 0], r8
 16921 0000BE3B 4C8B442410              	mov r8, qword [rsp +8 * 2]
 16922 0000BE40 4C89C1                  	mov rcx, r8
 16923 0000BE43 49FFC0                  	inc r8
 16924 0000BE46 4C89442408              	mov qword [rsp +8], r8
 16925 0000BE4B 4889E2                  	mov rdx, rsp
 16926 0000BE4E 4883C218                	add rdx, 24
 16927                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0010:
 16928 0000BE52 4883F900                	cmp rcx, 0
 16929 0000BE56 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0010
 16930 0000BE58 4C8B02                  	mov r8, qword [rdx]
 16931 0000BE5B 4C8942F8                	mov qword [rdx - 8], r8
 16932 0000BE5F 4883C208                	add rdx, 8
 16933 0000BE63 48FFC9                  	dec rcx
 16934 0000BE66 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0010
 16935                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0010:
 16936 0000BE68 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 16937 0000BE70 4883EC08                	sub rsp, 8
 16938 0000BE74 E985000000              	jmp .L_lambda_opt_stack_adjusted_0010
 16939                                  .L_lambda_opt_arity_check_more_0010:
 16940 0000BE79 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 16941 0000BE7E 4D89C4                  	mov r12, r8
 16942 0000BE81 4C89C1                  	mov rcx, r8
 16943 0000BE84 4D8D6802                	lea r13, [r8 + 2] 
 16944 0000BE88 4883E900                	sub rcx, 0
 16945 0000BE8C 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 16946 0000BE91 49BE-                   	mov r14, sob_nil
 16946 0000BE93 [0100000000000000] 
 16947                                  .L_lambda_opt_create_list_of_opt_params_0010:
 16948 0000BE9B 4883F900                	cmp rcx, 0
 16949 0000BE9F 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0010
 16950 0000BEA1 BF11000000              	mov rdi, 17
 16951 0000BEA6 E8AAB70000              	call malloc
 16952 0000BEAB C60021                  	mov byte [rax], T_pair
 16953 0000BEAE 498B1B                  	mov rbx, qword [r11]
 16954 0000BEB1 48895801                	mov qword [rax +1], rbx
 16955 0000BEB5 4C897009                	mov qword [rax + 1 + 8], r14
 16956 0000BEB9 4989C6                  	mov r14, rax
 16957 0000BEBC 48FFC9                  	dec rcx
 16958 0000BEBF 4983EB08                	sub r11, 8
 16959 0000BEC3 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0010
 16960                                  .L_lambda_opt_create_list_of_opt_params_end_0010:
 16961 0000BEC5 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
 16962 0000BECA 4D8932                  	mov qword [r10], r14
 16963 0000BECD 4E8D2CED00000000        	lea r13, [8 * r13]
 16964 0000BED5 4901E5                  	add r13, rsp
 16965 0000BED8 B904000000              	mov rcx, 4 + 0
 16966                                  .L_lambda_opt_stack_shrink_loop_0010:
 16967 0000BEDD 4883F900                	cmp rcx, 0
 16968 0000BEE1 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0010
 16969 0000BEE3 4D8B1A                  	mov r11, qword [r10]
 16970 0000BEE6 4D895D00                	mov qword [r13], r11
 16971 0000BEEA 4983EA08                	sub r10, 8
 16972 0000BEEE 4983ED08                	sub r13, 8
 16973 0000BEF2 48FFC9                  	dec rcx
 16974 0000BEF5 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 16975                                  .L_lambda_opt_stack_shrink_loop_exit_0010:
 16976 0000BEF7 4983C508                	add r13, 8
 16977 0000BEFB 4C89EC                  	mov rsp, r13
 16978                                  .L_lambda_opt_stack_adjusted_0010:
 16979 0000BEFE 48C744241001000000      	mov qword [rsp + 8*2], 1
 16980 0000BF07 C8000000                	enter 0, 0
 16981                                  	; preparing a tail-call
 16982                                  	; preparing a non-tail-call
 16983 0000BF0B 488B4520                	mov rax, PARAM(0)	; param s
 16984 0000BF0F 50                      	push rax
 16985 0000BF10 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16986 0000BF15 E83BB70000              	call malloc
 16987 0000BF1A 50                      	push rax
 16988 0000BF1B BF08000000              	mov rdi, 8 * 1	; new rib
 16989 0000BF20 E830B70000              	call malloc
 16990 0000BF25 50                      	push rax
 16991 0000BF26 BF18000000              	mov rdi, 8 * 3	; extended env
 16992 0000BF2B E825B70000              	call malloc
 16993 0000BF30 488B7D10                	mov rdi, ENV
 16994 0000BF34 BE00000000              	mov rsi, 0
 16995 0000BF39 BA01000000              	mov rdx, 1
 16996                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 16997 0000BF3E 4883FE02                	cmp rsi, 2
 16998 0000BF42 7410                    	je .L_lambda_simple_env_end_005e
 16999 0000BF44 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17000 0000BF48 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17001 0000BF4C 48FFC6                  	inc rsi
 17002 0000BF4F 48FFC2                  	inc rdx
 17003 0000BF52 EBEA                    	jmp .L_lambda_simple_env_loop_005e
 17004                                  .L_lambda_simple_env_end_005e:
 17005 0000BF54 5B                      	pop rbx
 17006 0000BF55 BE00000000              	mov rsi, 0
 17007                                  .L_lambda_simple_params_loop_005e:	; copy params
 17008 0000BF5A 4883FE01                	cmp rsi, 1
 17009 0000BF5E 740E                    	je .L_lambda_simple_params_end_005e
 17010 0000BF60 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17011 0000BF65 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17012 0000BF69 48FFC6                  	inc rsi
 17013 0000BF6C EBEC                    	jmp .L_lambda_simple_params_loop_005e
 17014                                  .L_lambda_simple_params_end_005e:
 17015 0000BF6E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17016 0000BF71 4889C3                  	mov rbx, rax
 17017 0000BF74 58                      	pop rax
 17018 0000BF75 C60004                  	mov byte [rax], T_closure
 17019 0000BF78 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17020 0000BF7C 48C74009[89BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 17021 0000BF84 E9A4000000              	jmp .L_lambda_simple_end_005e
 17022                                  .L_lambda_simple_code_005e:	; lambda-simple body
 17023 0000BF89 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17024 0000BF8F 740B                    	je .L_lambda_simple_arity_check_ok_005e
 17025 0000BF91 FF742410                	push qword [rsp + 8 * 2]
 17026 0000BF95 6A01                    	push 1
 17027 0000BF97 E972B60000              	jmp L_error_incorrect_arity_simple
 17028                                  .L_lambda_simple_arity_check_ok_005e:
 17029 0000BF9C C8000000                	enter 0, 0
 17030                                  	; preparing a tail-call
 17031                                  	; preparing a non-tail-call
 17032 0000BFA0 488B4520                	mov rax, PARAM(0)	; param ch
 17033 0000BFA4 50                      	push rax
 17034 0000BFA5 6A01                    	push 1	; arg count
 17035 0000BFA7 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17036 0000BFAF 803805                  	cmp byte [rax], T_undefined
 17037 0000BFB2 0F8470B50000            	je L_error_fvar_undefined
 17038 0000BFB8 803804                  	cmp byte [rax], T_closure
 17039 0000BFBB 0F85EBB50000            	jne L_error_non_closure
 17040 0000BFC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17041 0000BFC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17042 0000BFC7 50                      	push rax
 17043 0000BFC8 6A01                    	push 1	; arg count
 17044 0000BFCA 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17045 0000BFD2 803805                  	cmp byte [rax], T_undefined
 17046 0000BFD5 0F844DB50000            	je L_error_fvar_undefined
 17047 0000BFDB 803804                  	cmp byte [rax], T_closure
 17048 0000BFDE 0F85C8B50000            	jne L_error_non_closure
 17049 0000BFE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17050 0000BFE7 FF7508                  	push qword [rbp + 8 * 1]
 17051                                   ; old ret addr
 17052 0000BFEA FF7500                  	push qword [rbp]
 17053                                   ; restore the old rbp
 17054 0000BFED BB01000000              	mov rbx, 1
 17055 0000BFF2 4883C303                	add rbx, 3
 17056 0000BFF6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 17057 0000BFFA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 17058 0000BFFF 4C8D4DF8                	lea r9, [rbp - 8]
 17059 0000C003 B905000000              	mov rcx, 5
 17060                                  .L_tc_recycle_frame_loop_0099:
 17061 0000C008 4883F900                	cmp rcx, 0
 17062 0000C00C 7413                    	je .L_tc_recycle_frame_done_0099
 17063 0000C00E 4D8B11                  	mov r10, qword [r9]
 17064 0000C011 4D8910                  	mov qword [r8], r10
 17065 0000C014 4983E808                	sub r8, 8
 17066 0000C018 4983E908                	sub r9, 8
 17067 0000C01C 48FFC9                  	dec rcx
 17068 0000C01F EBE7                    	jmp .L_tc_recycle_frame_loop_0099
 17069                                  .L_tc_recycle_frame_done_0099:
 17070 0000C021 498D6008                	lea rsp, [r8 + 8]
 17071 0000C025 5D                      	pop rbp ; restore the old rbp
 17072 0000C026 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17073 0000C029 C9                      	leave
 17074 0000C02A C21800                  	ret AND_KILL_FRAME(1)
 17075                                  .L_lambda_simple_end_005e:	; new closure is in rax
 17076 0000C02D 50                      	push rax
 17077 0000C02E 6A02                    	push 2	; arg count
 17078 0000C030 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17079 0000C038 803805                  	cmp byte [rax], T_undefined
 17080 0000C03B 0F84E7B40000            	je L_error_fvar_undefined
 17081 0000C041 803804                  	cmp byte [rax], T_closure
 17082 0000C044 0F8562B50000            	jne L_error_non_closure
 17083 0000C04A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17084 0000C04D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17085 0000C050 50                      	push rax
 17086 0000C051 488B4510                	mov rax, ENV
 17087 0000C055 488B00                  	mov rax, qword [rax + 8 * 0]
 17088 0000C058 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17089 0000C05B 50                      	push rax
 17090 0000C05C 6A02                    	push 2	; arg count
 17091 0000C05E 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 17092 0000C066 803805                  	cmp byte [rax], T_undefined
 17093 0000C069 0F84B9B40000            	je L_error_fvar_undefined
 17094 0000C06F 803804                  	cmp byte [rax], T_closure
 17095 0000C072 0F8534B50000            	jne L_error_non_closure
 17096 0000C078 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17097 0000C07B FF7508                  	push qword [rbp + 8 * 1]
 17098                                   ; old ret addr
 17099 0000C07E FF7500                  	push qword [rbp]
 17100                                   ; restore the old rbp
 17101 0000C081 BB02000000              	mov rbx, 2
 17102 0000C086 4883C303                	add rbx, 3
 17103 0000C08A 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 17104 0000C08E 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 17105 0000C093 4C8D4DF8                	lea r9, [rbp - 8]
 17106 0000C097 B906000000              	mov rcx, 6
 17107                                  .L_tc_recycle_frame_loop_0098:
 17108 0000C09C 4883F900                	cmp rcx, 0
 17109 0000C0A0 7413                    	je .L_tc_recycle_frame_done_0098
 17110 0000C0A2 4D8B11                  	mov r10, qword [r9]
 17111 0000C0A5 4D8910                  	mov qword [r8], r10
 17112 0000C0A8 4983E808                	sub r8, 8
 17113 0000C0AC 4983E908                	sub r9, 8
 17114 0000C0B0 48FFC9                  	dec rcx
 17115 0000C0B3 EBE7                    	jmp .L_tc_recycle_frame_loop_0098
 17116                                  .L_tc_recycle_frame_done_0098:
 17117 0000C0B5 498D6008                	lea rsp, [r8 + 8]
 17118 0000C0B9 5D                      	pop rbp ; restore the old rbp
 17119 0000C0BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17120 0000C0BD C9                      	leave
 17121 0000C0BE C21800                  	ret 8 * (2 + 1)
 17122                                  .L_lambda_opt_end_0010:	; new closure is in rax
 17123 0000C0C1 C9                      	leave
 17124 0000C0C2 C21800                  	ret AND_KILL_FRAME(1)
 17125                                  .L_lambda_simple_end_005d:	; new closure is in rax
 17126 0000C0C5 50                      	push rax
 17127 0000C0C6 6A01                    	push 1	; arg count
 17128 0000C0C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17129 0000C0CD E883B50000              	call malloc
 17130 0000C0D2 50                      	push rax
 17131 0000C0D3 BF00000000              	mov rdi, 8 * 0	; new rib
 17132 0000C0D8 E878B50000              	call malloc
 17133 0000C0DD 50                      	push rax
 17134 0000C0DE BF08000000              	mov rdi, 8 * 1	; extended env
 17135 0000C0E3 E86DB50000              	call malloc
 17136 0000C0E8 488B7D10                	mov rdi, ENV
 17137 0000C0EC BE00000000              	mov rsi, 0
 17138 0000C0F1 BA01000000              	mov rdx, 1
 17139                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 17140 0000C0F6 4883FE00                	cmp rsi, 0
 17141 0000C0FA 7410                    	je .L_lambda_simple_env_end_005f
 17142 0000C0FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17143 0000C100 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17144 0000C104 48FFC6                  	inc rsi
 17145 0000C107 48FFC2                  	inc rdx
 17146 0000C10A EBEA                    	jmp .L_lambda_simple_env_loop_005f
 17147                                  .L_lambda_simple_env_end_005f:
 17148 0000C10C 5B                      	pop rbx
 17149 0000C10D BE00000000              	mov rsi, 0
 17150                                  .L_lambda_simple_params_loop_005f:	; copy params
 17151 0000C112 4883FE00                	cmp rsi, 0
 17152 0000C116 740E                    	je .L_lambda_simple_params_end_005f
 17153 0000C118 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17154 0000C11D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17155 0000C121 48FFC6                  	inc rsi
 17156 0000C124 EBEC                    	jmp .L_lambda_simple_params_loop_005f
 17157                                  .L_lambda_simple_params_end_005f:
 17158 0000C126 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17159 0000C129 4889C3                  	mov rbx, rax
 17160 0000C12C 58                      	pop rax
 17161 0000C12D C60004                  	mov byte [rax], T_closure
 17162 0000C130 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17163 0000C134 48C74009[41C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 17164 0000C13C E938010000              	jmp .L_lambda_simple_end_005f
 17165                                  .L_lambda_simple_code_005f:	; lambda-simple body
 17166 0000C141 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17167 0000C147 740B                    	je .L_lambda_simple_arity_check_ok_005f
 17168 0000C149 FF742410                	push qword [rsp + 8 * 2]
 17169 0000C14D 6A01                    	push 1
 17170 0000C14F E9BAB40000              	jmp L_error_incorrect_arity_simple
 17171                                  .L_lambda_simple_arity_check_ok_005f:
 17172 0000C154 C8000000                	enter 0, 0
 17173                                  	; preparing a non-tail-call
 17174 0000C158 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17175 0000C160 803805                  	cmp byte [rax], T_undefined
 17176 0000C163 0F84BFB30000            	je L_error_fvar_undefined
 17177 0000C169 50                      	push rax
 17178 0000C16A 6A01                    	push 1	; arg count
 17179 0000C16C 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17180 0000C170 803804                  	cmp byte [rax], T_closure
 17181 0000C173 0F8533B40000            	jne L_error_non_closure
 17182 0000C179 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17183 0000C17C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17184 0000C17F 48890425[38120000]      	mov qword [free_var_67], rax
 17185 0000C187 48B8-                   	mov rax, sob_void
 17185 0000C189 [0000000000000000] 
 17186                                  
 17187                                  	; preparing a non-tail-call
 17188 0000C191 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 17189 0000C199 803805                  	cmp byte [rax], T_undefined
 17190 0000C19C 0F8486B30000            	je L_error_fvar_undefined
 17191 0000C1A2 50                      	push rax
 17192 0000C1A3 6A01                    	push 1	; arg count
 17193 0000C1A5 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17194 0000C1A9 803804                  	cmp byte [rax], T_closure
 17195 0000C1AC 0F85FAB30000            	jne L_error_non_closure
 17196 0000C1B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17197 0000C1B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17198 0000C1B8 48890425[27120000]      	mov qword [free_var_66], rax
 17199 0000C1C0 48B8-                   	mov rax, sob_void
 17199 0000C1C2 [0000000000000000] 
 17200                                  
 17201                                  	; preparing a non-tail-call
 17202 0000C1CA 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17203 0000C1D2 803805                  	cmp byte [rax], T_undefined
 17204 0000C1D5 0F844DB30000            	je L_error_fvar_undefined
 17205 0000C1DB 50                      	push rax
 17206 0000C1DC 6A01                    	push 1	; arg count
 17207 0000C1DE 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17208 0000C1E2 803804                  	cmp byte [rax], T_closure
 17209 0000C1E5 0F85C1B30000            	jne L_error_non_closure
 17210 0000C1EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17211 0000C1EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17212 0000C1F1 48890425[49120000]      	mov qword [free_var_68], rax
 17213 0000C1F9 48B8-                   	mov rax, sob_void
 17213 0000C1FB [0000000000000000] 
 17214                                  
 17215                                  	; preparing a non-tail-call
 17216 0000C203 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 17217 0000C20B 803805                  	cmp byte [rax], T_undefined
 17218 0000C20E 0F8414B30000            	je L_error_fvar_undefined
 17219 0000C214 50                      	push rax
 17220 0000C215 6A01                    	push 1	; arg count
 17221 0000C217 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17222 0000C21B 803804                  	cmp byte [rax], T_closure
 17223 0000C21E 0F8588B30000            	jne L_error_non_closure
 17224 0000C224 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17225 0000C227 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17226 0000C22A 48890425[6B120000]      	mov qword [free_var_70], rax
 17227 0000C232 48B8-                   	mov rax, sob_void
 17227 0000C234 [0000000000000000] 
 17228                                  
 17229                                  	; preparing a non-tail-call
 17230 0000C23C 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 17231 0000C244 803805                  	cmp byte [rax], T_undefined
 17232 0000C247 0F84DBB20000            	je L_error_fvar_undefined
 17233 0000C24D 50                      	push rax
 17234 0000C24E 6A01                    	push 1	; arg count
 17235 0000C250 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17236 0000C254 803804                  	cmp byte [rax], T_closure
 17237 0000C257 0F854FB30000            	jne L_error_non_closure
 17238 0000C25D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17239 0000C260 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17240 0000C263 48890425[5A120000]      	mov qword [free_var_69], rax
 17241 0000C26B 48B8-                   	mov rax, sob_void
 17241 0000C26D [0000000000000000] 
 17242 0000C275 C9                      	leave
 17243 0000C276 C21800                  	ret AND_KILL_FRAME(1)
 17244                                  .L_lambda_simple_end_005f:	; new closure is in rax
 17245 0000C279 803804                  	cmp byte [rax], T_closure
 17246 0000C27C 0F852AB30000            	jne L_error_non_closure
 17247 0000C282 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17248 0000C285 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17249                                  
 17250 0000C288 4889C7                  	mov rdi, rax
 17251 0000C28B E81AB60000              	call print_sexpr_if_not_void
 17252 0000C290 48B8-                   	mov rax, L_constants + 0
 17252 0000C292 [0000000000000000] 
 17253 0000C29A 48890425[23160000]      	mov qword [free_var_126], rax
 17254 0000C2A2 48B8-                   	mov rax, sob_void
 17254 0000C2A4 [0000000000000000] 
 17255                                  
 17256 0000C2AC 4889C7                  	mov rdi, rax
 17257 0000C2AF E8F6B50000              	call print_sexpr_if_not_void
 17258 0000C2B4 48B8-                   	mov rax, L_constants + 0
 17258 0000C2B6 [0000000000000000] 
 17259 0000C2BE 48890425[89160000]      	mov qword [free_var_132], rax
 17260 0000C2C6 48B8-                   	mov rax, sob_void
 17260 0000C2C8 [0000000000000000] 
 17261                                  
 17262 0000C2D0 4889C7                  	mov rdi, rax
 17263 0000C2D3 E8D2B50000              	call print_sexpr_if_not_void
 17264                                  	; preparing a non-tail-call
 17265 0000C2D8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17266 0000C2DD E873B30000              	call malloc
 17267 0000C2E2 50                      	push rax
 17268 0000C2E3 BF00000000              	mov rdi, 8 * 0	; new rib
 17269 0000C2E8 E868B30000              	call malloc
 17270 0000C2ED 50                      	push rax
 17271 0000C2EE BF08000000              	mov rdi, 8 * 1	; extended env
 17272 0000C2F3 E85DB30000              	call malloc
 17273 0000C2F8 488B7D10                	mov rdi, ENV
 17274 0000C2FC BE00000000              	mov rsi, 0
 17275 0000C301 BA01000000              	mov rdx, 1
 17276                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 17277 0000C306 4883FE00                	cmp rsi, 0
 17278 0000C30A 7410                    	je .L_lambda_simple_env_end_0060
 17279 0000C30C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17280 0000C310 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17281 0000C314 48FFC6                  	inc rsi
 17282 0000C317 48FFC2                  	inc rdx
 17283 0000C31A EBEA                    	jmp .L_lambda_simple_env_loop_0060
 17284                                  .L_lambda_simple_env_end_0060:
 17285 0000C31C 5B                      	pop rbx
 17286 0000C31D BE00000000              	mov rsi, 0
 17287                                  .L_lambda_simple_params_loop_0060:	; copy params
 17288 0000C322 4883FE00                	cmp rsi, 0
 17289 0000C326 740E                    	je .L_lambda_simple_params_end_0060
 17290 0000C328 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17291 0000C32D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17292 0000C331 48FFC6                  	inc rsi
 17293 0000C334 EBEC                    	jmp .L_lambda_simple_params_loop_0060
 17294                                  .L_lambda_simple_params_end_0060:
 17295 0000C336 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17296 0000C339 4889C3                  	mov rbx, rax
 17297 0000C33C 58                      	pop rax
 17298 0000C33D C60004                  	mov byte [rax], T_closure
 17299 0000C340 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17300 0000C344 48C74009[51C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 17301 0000C34C E966010000              	jmp .L_lambda_simple_end_0060
 17302                                  .L_lambda_simple_code_0060:	; lambda-simple body
 17303 0000C351 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17304 0000C357 740B                    	je .L_lambda_simple_arity_check_ok_0060
 17305 0000C359 FF742410                	push qword [rsp + 8 * 2]
 17306 0000C35D 6A01                    	push 1
 17307 0000C35F E9AAB20000              	jmp L_error_incorrect_arity_simple
 17308                                  .L_lambda_simple_arity_check_ok_0060:
 17309 0000C364 C8000000                	enter 0, 0
 17310 0000C368 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17311 0000C36D E8E3B20000              	call malloc
 17312 0000C372 50                      	push rax
 17313 0000C373 BF08000000              	mov rdi, 8 * 1	; new rib
 17314 0000C378 E8D8B20000              	call malloc
 17315 0000C37D 50                      	push rax
 17316 0000C37E BF10000000              	mov rdi, 8 * 2	; extended env
 17317 0000C383 E8CDB20000              	call malloc
 17318 0000C388 488B7D10                	mov rdi, ENV
 17319 0000C38C BE00000000              	mov rsi, 0
 17320 0000C391 BA01000000              	mov rdx, 1
 17321                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 17322 0000C396 4883FE01                	cmp rsi, 1
 17323 0000C39A 7410                    	je .L_lambda_simple_env_end_0061
 17324 0000C39C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17325 0000C3A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17326 0000C3A4 48FFC6                  	inc rsi
 17327 0000C3A7 48FFC2                  	inc rdx
 17328 0000C3AA EBEA                    	jmp .L_lambda_simple_env_loop_0061
 17329                                  .L_lambda_simple_env_end_0061:
 17330 0000C3AC 5B                      	pop rbx
 17331 0000C3AD BE00000000              	mov rsi, 0
 17332                                  .L_lambda_simple_params_loop_0061:	; copy params
 17333 0000C3B2 4883FE01                	cmp rsi, 1
 17334 0000C3B6 740E                    	je .L_lambda_simple_params_end_0061
 17335 0000C3B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17336 0000C3BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17337 0000C3C1 48FFC6                  	inc rsi
 17338 0000C3C4 EBEC                    	jmp .L_lambda_simple_params_loop_0061
 17339                                  .L_lambda_simple_params_end_0061:
 17340 0000C3C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17341 0000C3C9 4889C3                  	mov rbx, rax
 17342 0000C3CC 58                      	pop rax
 17343 0000C3CD C60004                  	mov byte [rax], T_closure
 17344 0000C3D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17345 0000C3D4 48C74009[E1C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 17346 0000C3DC E9D2000000              	jmp .L_lambda_simple_end_0061
 17347                                  .L_lambda_simple_code_0061:	; lambda-simple body
 17348 0000C3E1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17349 0000C3E7 740B                    	je .L_lambda_simple_arity_check_ok_0061
 17350 0000C3E9 FF742410                	push qword [rsp + 8 * 2]
 17351 0000C3ED 6A01                    	push 1
 17352 0000C3EF E91AB20000              	jmp L_error_incorrect_arity_simple
 17353                                  .L_lambda_simple_arity_check_ok_0061:
 17354 0000C3F4 C8000000                	enter 0, 0
 17355                                  	; preparing a tail-call
 17356                                  	; preparing a non-tail-call
 17357                                  	; preparing a non-tail-call
 17358 0000C3F8 488B4520                	mov rax, PARAM(0)	; param str
 17359 0000C3FC 50                      	push rax
 17360 0000C3FD 6A01                    	push 1	; arg count
 17361 0000C3FF 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 17362 0000C407 803805                  	cmp byte [rax], T_undefined
 17363 0000C40A 0F8418B10000            	je L_error_fvar_undefined
 17364 0000C410 803804                  	cmp byte [rax], T_closure
 17365 0000C413 0F8593B10000            	jne L_error_non_closure
 17366 0000C419 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17367 0000C41C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17368 0000C41F 50                      	push rax
 17369 0000C420 488B4510                	mov rax, ENV
 17370 0000C424 488B00                  	mov rax, qword [rax + 8 * 0]
 17371 0000C427 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17372 0000C42A 50                      	push rax
 17373 0000C42B 6A02                    	push 2	; arg count
 17374 0000C42D 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17375 0000C435 803805                  	cmp byte [rax], T_undefined
 17376 0000C438 0F84EAB00000            	je L_error_fvar_undefined
 17377 0000C43E 803804                  	cmp byte [rax], T_closure
 17378 0000C441 0F8565B10000            	jne L_error_non_closure
 17379 0000C447 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17380 0000C44A FF5009                  	call SOB_CLOSURE_CODE(rax)
 17381 0000C44D 50                      	push rax
 17382 0000C44E 6A01                    	push 1	; arg count
 17383 0000C450 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 17384 0000C458 803805                  	cmp byte [rax], T_undefined
 17385 0000C45B 0F84C7B00000            	je L_error_fvar_undefined
 17386 0000C461 803804                  	cmp byte [rax], T_closure
 17387 0000C464 0F8542B10000            	jne L_error_non_closure
 17388 0000C46A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17389 0000C46D FF7508                  	push qword [rbp + 8 * 1]
 17390                                   ; old ret addr
 17391 0000C470 FF7500                  	push qword [rbp]
 17392                                   ; restore the old rbp
 17393 0000C473 BB01000000              	mov rbx, 1
 17394 0000C478 4883C303                	add rbx, 3
 17395 0000C47C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 17396 0000C480 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 17397 0000C485 4C8D4DF8                	lea r9, [rbp - 8]
 17398 0000C489 B905000000              	mov rcx, 5
 17399                                  .L_tc_recycle_frame_loop_009a:
 17400 0000C48E 4883F900                	cmp rcx, 0
 17401 0000C492 7413                    	je .L_tc_recycle_frame_done_009a
 17402 0000C494 4D8B11                  	mov r10, qword [r9]
 17403 0000C497 4D8910                  	mov qword [r8], r10
 17404 0000C49A 4983E808                	sub r8, 8
 17405 0000C49E 4983E908                	sub r9, 8
 17406 0000C4A2 48FFC9                  	dec rcx
 17407 0000C4A5 EBE7                    	jmp .L_tc_recycle_frame_loop_009a
 17408                                  .L_tc_recycle_frame_done_009a:
 17409 0000C4A7 498D6008                	lea rsp, [r8 + 8]
 17410 0000C4AB 5D                      	pop rbp ; restore the old rbp
 17411 0000C4AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17412 0000C4AF C9                      	leave
 17413 0000C4B0 C21800                  	ret AND_KILL_FRAME(1)
 17414                                  .L_lambda_simple_end_0061:	; new closure is in rax
 17415 0000C4B3 C9                      	leave
 17416 0000C4B4 C21800                  	ret AND_KILL_FRAME(1)
 17417                                  .L_lambda_simple_end_0060:	; new closure is in rax
 17418 0000C4B7 50                      	push rax
 17419 0000C4B8 6A01                    	push 1	; arg count
 17420 0000C4BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17421 0000C4BF E891B10000              	call malloc
 17422 0000C4C4 50                      	push rax
 17423 0000C4C5 BF00000000              	mov rdi, 8 * 0	; new rib
 17424 0000C4CA E886B10000              	call malloc
 17425 0000C4CF 50                      	push rax
 17426 0000C4D0 BF08000000              	mov rdi, 8 * 1	; extended env
 17427 0000C4D5 E87BB10000              	call malloc
 17428 0000C4DA 488B7D10                	mov rdi, ENV
 17429 0000C4DE BE00000000              	mov rsi, 0
 17430 0000C4E3 BA01000000              	mov rdx, 1
 17431                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 17432 0000C4E8 4883FE00                	cmp rsi, 0
 17433 0000C4EC 7410                    	je .L_lambda_simple_env_end_0062
 17434 0000C4EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17435 0000C4F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17436 0000C4F6 48FFC6                  	inc rsi
 17437 0000C4F9 48FFC2                  	inc rdx
 17438 0000C4FC EBEA                    	jmp .L_lambda_simple_env_loop_0062
 17439                                  .L_lambda_simple_env_end_0062:
 17440 0000C4FE 5B                      	pop rbx
 17441 0000C4FF BE00000000              	mov rsi, 0
 17442                                  .L_lambda_simple_params_loop_0062:	; copy params
 17443 0000C504 4883FE00                	cmp rsi, 0
 17444 0000C508 740E                    	je .L_lambda_simple_params_end_0062
 17445 0000C50A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17446 0000C50F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17447 0000C513 48FFC6                  	inc rsi
 17448 0000C516 EBEC                    	jmp .L_lambda_simple_params_loop_0062
 17449                                  .L_lambda_simple_params_end_0062:
 17450 0000C518 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17451 0000C51B 4889C3                  	mov rbx, rax
 17452 0000C51E 58                      	pop rax
 17453 0000C51F C60004                  	mov byte [rax], T_closure
 17454 0000C522 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17455 0000C526 48C74009[33C50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 17456 0000C52E E98D000000              	jmp .L_lambda_simple_end_0062
 17457                                  .L_lambda_simple_code_0062:	; lambda-simple body
 17458 0000C533 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17459 0000C539 740B                    	je .L_lambda_simple_arity_check_ok_0062
 17460 0000C53B FF742410                	push qword [rsp + 8 * 2]
 17461 0000C53F 6A01                    	push 1
 17462 0000C541 E9C8B00000              	jmp L_error_incorrect_arity_simple
 17463                                  .L_lambda_simple_arity_check_ok_0062:
 17464 0000C546 C8000000                	enter 0, 0
 17465                                  	; preparing a non-tail-call
 17466 0000C54A 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17467 0000C552 803805                  	cmp byte [rax], T_undefined
 17468 0000C555 0F84CDAF0000            	je L_error_fvar_undefined
 17469 0000C55B 50                      	push rax
 17470 0000C55C 6A01                    	push 1	; arg count
 17471 0000C55E 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17472 0000C562 803804                  	cmp byte [rax], T_closure
 17473 0000C565 0F8541B00000            	jne L_error_non_closure
 17474 0000C56B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17475 0000C56E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17476 0000C571 48890425[23160000]      	mov qword [free_var_126], rax
 17477 0000C579 48B8-                   	mov rax, sob_void
 17477 0000C57B [0000000000000000] 
 17478                                  
 17479                                  	; preparing a non-tail-call
 17480 0000C583 488B0425[8D120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 17481 0000C58B 803805                  	cmp byte [rax], T_undefined
 17482 0000C58E 0F8494AF0000            	je L_error_fvar_undefined
 17483 0000C594 50                      	push rax
 17484 0000C595 6A01                    	push 1	; arg count
 17485 0000C597 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 17486 0000C59B 803804                  	cmp byte [rax], T_closure
 17487 0000C59E 0F8508B00000            	jne L_error_non_closure
 17488 0000C5A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17489 0000C5A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17490 0000C5AA 48890425[89160000]      	mov qword [free_var_132], rax
 17491 0000C5B2 48B8-                   	mov rax, sob_void
 17491 0000C5B4 [0000000000000000] 
 17492 0000C5BC C9                      	leave
 17493 0000C5BD C21800                  	ret AND_KILL_FRAME(1)
 17494                                  .L_lambda_simple_end_0062:	; new closure is in rax
 17495 0000C5C0 803804                  	cmp byte [rax], T_closure
 17496 0000C5C3 0F85E3AF0000            	jne L_error_non_closure
 17497 0000C5C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17498 0000C5CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17499                                  
 17500 0000C5CF 4889C7                  	mov rdi, rax
 17501 0000C5D2 E8D3B20000              	call print_sexpr_if_not_void
 17502 0000C5D7 48B8-                   	mov rax, L_constants + 0
 17502 0000C5D9 [0000000000000000] 
 17503 0000C5E1 48890425[AB160000]      	mov qword [free_var_134], rax
 17504 0000C5E9 48B8-                   	mov rax, sob_void
 17504 0000C5EB [0000000000000000] 
 17505                                  
 17506 0000C5F3 4889C7                  	mov rdi, rax
 17507 0000C5F6 E8AFB20000              	call print_sexpr_if_not_void
 17508 0000C5FB 48B8-                   	mov rax, L_constants + 0
 17508 0000C5FD [0000000000000000] 
 17509 0000C605 48890425[9A160000]      	mov qword [free_var_133], rax
 17510 0000C60D 48B8-                   	mov rax, sob_void
 17510 0000C60F [0000000000000000] 
 17511                                  
 17512 0000C617 4889C7                  	mov rdi, rax
 17513 0000C61A E88BB20000              	call print_sexpr_if_not_void
 17514 0000C61F 48B8-                   	mov rax, L_constants + 0
 17514 0000C621 [0000000000000000] 
 17515 0000C629 48890425[BC160000]      	mov qword [free_var_135], rax
 17516 0000C631 48B8-                   	mov rax, sob_void
 17516 0000C633 [0000000000000000] 
 17517                                  
 17518 0000C63B 4889C7                  	mov rdi, rax
 17519 0000C63E E867B20000              	call print_sexpr_if_not_void
 17520 0000C643 48B8-                   	mov rax, L_constants + 0
 17520 0000C645 [0000000000000000] 
 17521 0000C64D 48890425[CD160000]      	mov qword [free_var_136], rax
 17522 0000C655 48B8-                   	mov rax, sob_void
 17522 0000C657 [0000000000000000] 
 17523                                  
 17524 0000C65F 4889C7                  	mov rdi, rax
 17525 0000C662 E843B20000              	call print_sexpr_if_not_void
 17526 0000C667 48B8-                   	mov rax, L_constants + 0
 17526 0000C669 [0000000000000000] 
 17527 0000C671 48890425[DE160000]      	mov qword [free_var_137], rax
 17528 0000C679 48B8-                   	mov rax, sob_void
 17528 0000C67B [0000000000000000] 
 17529                                  
 17530 0000C683 4889C7                  	mov rdi, rax
 17531 0000C686 E81FB20000              	call print_sexpr_if_not_void
 17532 0000C68B 48B8-                   	mov rax, L_constants + 0
 17532 0000C68D [0000000000000000] 
 17533 0000C695 48890425[DF150000]      	mov qword [free_var_122], rax
 17534 0000C69D 48B8-                   	mov rax, sob_void
 17534 0000C69F [0000000000000000] 
 17535                                  
 17536 0000C6A7 4889C7                  	mov rdi, rax
 17537 0000C6AA E8FBB10000              	call print_sexpr_if_not_void
 17538 0000C6AF 48B8-                   	mov rax, L_constants + 0
 17538 0000C6B1 [0000000000000000] 
 17539 0000C6B9 48890425[CE150000]      	mov qword [free_var_121], rax
 17540 0000C6C1 48B8-                   	mov rax, sob_void
 17540 0000C6C3 [0000000000000000] 
 17541                                  
 17542 0000C6CB 4889C7                  	mov rdi, rax
 17543 0000C6CE E8D7B10000              	call print_sexpr_if_not_void
 17544 0000C6D3 48B8-                   	mov rax, L_constants + 0
 17544 0000C6D5 [0000000000000000] 
 17545 0000C6DD 48890425[F0150000]      	mov qword [free_var_123], rax
 17546 0000C6E5 48B8-                   	mov rax, sob_void
 17546 0000C6E7 [0000000000000000] 
 17547                                  
 17548 0000C6EF 4889C7                  	mov rdi, rax
 17549 0000C6F2 E8B3B10000              	call print_sexpr_if_not_void
 17550 0000C6F7 48B8-                   	mov rax, L_constants + 0
 17550 0000C6F9 [0000000000000000] 
 17551 0000C701 48890425[01160000]      	mov qword [free_var_124], rax
 17552 0000C709 48B8-                   	mov rax, sob_void
 17552 0000C70B [0000000000000000] 
 17553                                  
 17554 0000C713 4889C7                  	mov rdi, rax
 17555 0000C716 E88FB10000              	call print_sexpr_if_not_void
 17556 0000C71B 48B8-                   	mov rax, L_constants + 0
 17556 0000C71D [0000000000000000] 
 17557 0000C725 48890425[12160000]      	mov qword [free_var_125], rax
 17558 0000C72D 48B8-                   	mov rax, sob_void
 17558 0000C72F [0000000000000000] 
 17559                                  
 17560 0000C737 4889C7                  	mov rdi, rax
 17561 0000C73A E86BB10000              	call print_sexpr_if_not_void
 17562                                  	; preparing a non-tail-call
 17563 0000C73F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17564 0000C744 E80CAF0000              	call malloc
 17565 0000C749 50                      	push rax
 17566 0000C74A BF00000000              	mov rdi, 8 * 0	; new rib
 17567 0000C74F E801AF0000              	call malloc
 17568 0000C754 50                      	push rax
 17569 0000C755 BF08000000              	mov rdi, 8 * 1	; extended env
 17570 0000C75A E8F6AE0000              	call malloc
 17571 0000C75F 488B7D10                	mov rdi, ENV
 17572 0000C763 BE00000000              	mov rsi, 0
 17573 0000C768 BA01000000              	mov rdx, 1
 17574                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 17575 0000C76D 4883FE00                	cmp rsi, 0
 17576 0000C771 7410                    	je .L_lambda_simple_env_end_0063
 17577 0000C773 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17578 0000C777 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17579 0000C77B 48FFC6                  	inc rsi
 17580 0000C77E 48FFC2                  	inc rdx
 17581 0000C781 EBEA                    	jmp .L_lambda_simple_env_loop_0063
 17582                                  .L_lambda_simple_env_end_0063:
 17583 0000C783 5B                      	pop rbx
 17584 0000C784 BE00000000              	mov rsi, 0
 17585                                  .L_lambda_simple_params_loop_0063:	; copy params
 17586 0000C789 4883FE00                	cmp rsi, 0
 17587 0000C78D 740E                    	je .L_lambda_simple_params_end_0063
 17588 0000C78F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17589 0000C794 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17590 0000C798 48FFC6                  	inc rsi
 17591 0000C79B EBEC                    	jmp .L_lambda_simple_params_loop_0063
 17592                                  .L_lambda_simple_params_end_0063:
 17593 0000C79D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17594 0000C7A0 4889C3                  	mov rbx, rax
 17595 0000C7A3 58                      	pop rax
 17596 0000C7A4 C60004                  	mov byte [rax], T_closure
 17597 0000C7A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17598 0000C7AB 48C74009[B8C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 17599 0000C7B3 E9080D0000              	jmp .L_lambda_simple_end_0063
 17600                                  .L_lambda_simple_code_0063:	; lambda-simple body
 17601 0000C7B8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17602 0000C7BE 740B                    	je .L_lambda_simple_arity_check_ok_0063
 17603 0000C7C0 FF742410                	push qword [rsp + 8 * 2]
 17604 0000C7C4 6A02                    	push 2
 17605 0000C7C6 E943AE0000              	jmp L_error_incorrect_arity_simple
 17606                                  .L_lambda_simple_arity_check_ok_0063:
 17607 0000C7CB C8000000                	enter 0, 0
 17608                                  	; preparing a tail-call
 17609 0000C7CF 48B8-                   	mov rax, L_constants + 1993
 17609 0000C7D1 [C907000000000000] 
 17610 0000C7D9 50                      	push rax
 17611 0000C7DA 6A01                    	push 1	; arg count
 17612 0000C7DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17613 0000C7E1 E86FAE0000              	call malloc
 17614 0000C7E6 50                      	push rax
 17615 0000C7E7 BF10000000              	mov rdi, 8 * 2	; new rib
 17616 0000C7EC E864AE0000              	call malloc
 17617 0000C7F1 50                      	push rax
 17618 0000C7F2 BF10000000              	mov rdi, 8 * 2	; extended env
 17619 0000C7F7 E859AE0000              	call malloc
 17620 0000C7FC 488B7D10                	mov rdi, ENV
 17621 0000C800 BE00000000              	mov rsi, 0
 17622 0000C805 BA01000000              	mov rdx, 1
 17623                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 17624 0000C80A 4883FE01                	cmp rsi, 1
 17625 0000C80E 7410                    	je .L_lambda_simple_env_end_0064
 17626 0000C810 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17627 0000C814 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17628 0000C818 48FFC6                  	inc rsi
 17629 0000C81B 48FFC2                  	inc rdx
 17630 0000C81E EBEA                    	jmp .L_lambda_simple_env_loop_0064
 17631                                  .L_lambda_simple_env_end_0064:
 17632 0000C820 5B                      	pop rbx
 17633 0000C821 BE00000000              	mov rsi, 0
 17634                                  .L_lambda_simple_params_loop_0064:	; copy params
 17635 0000C826 4883FE02                	cmp rsi, 2
 17636 0000C82A 740E                    	je .L_lambda_simple_params_end_0064
 17637 0000C82C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17638 0000C831 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17639 0000C835 48FFC6                  	inc rsi
 17640 0000C838 EBEC                    	jmp .L_lambda_simple_params_loop_0064
 17641                                  .L_lambda_simple_params_end_0064:
 17642 0000C83A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17643 0000C83D 4889C3                  	mov rbx, rax
 17644 0000C840 58                      	pop rax
 17645 0000C841 C60004                  	mov byte [rax], T_closure
 17646 0000C844 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17647 0000C848 48C74009[55C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 17648 0000C850 E9190C0000              	jmp .L_lambda_simple_end_0064
 17649                                  .L_lambda_simple_code_0064:	; lambda-simple body
 17650 0000C855 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17651 0000C85B 740B                    	je .L_lambda_simple_arity_check_ok_0064
 17652 0000C85D FF742410                	push qword [rsp + 8 * 2]
 17653 0000C861 6A01                    	push 1
 17654 0000C863 E9A6AD0000              	jmp L_error_incorrect_arity_simple
 17655                                  .L_lambda_simple_arity_check_ok_0064:
 17656 0000C868 C8000000                	enter 0, 0
 17657 0000C86C BF08000000              	mov rdi, 8*1
 17658 0000C871 E8DFAD0000              	call malloc
 17659 0000C876 488B5D20                	mov rbx, PARAM(0)
 17660 0000C87A 488918                  	mov qword [rax], rbx
 17661 0000C87D 48894520                	mov PARAM(0), rax
 17662 0000C881 48B8-                   	mov rax, sob_void
 17662 0000C883 [0000000000000000] 
 17663                                  
 17664 0000C88B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17665 0000C890 E8C0AD0000              	call malloc
 17666 0000C895 50                      	push rax
 17667 0000C896 BF08000000              	mov rdi, 8 * 1	; new rib
 17668 0000C89B E8B5AD0000              	call malloc
 17669 0000C8A0 50                      	push rax
 17670 0000C8A1 BF18000000              	mov rdi, 8 * 3	; extended env
 17671 0000C8A6 E8AAAD0000              	call malloc
 17672 0000C8AB 488B7D10                	mov rdi, ENV
 17673 0000C8AF BE00000000              	mov rsi, 0
 17674 0000C8B4 BA01000000              	mov rdx, 1
 17675                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 17676 0000C8B9 4883FE02                	cmp rsi, 2
 17677 0000C8BD 7410                    	je .L_lambda_simple_env_end_0065
 17678 0000C8BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17679 0000C8C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17680 0000C8C7 48FFC6                  	inc rsi
 17681 0000C8CA 48FFC2                  	inc rdx
 17682 0000C8CD EBEA                    	jmp .L_lambda_simple_env_loop_0065
 17683                                  .L_lambda_simple_env_end_0065:
 17684 0000C8CF 5B                      	pop rbx
 17685 0000C8D0 BE00000000              	mov rsi, 0
 17686                                  .L_lambda_simple_params_loop_0065:	; copy params
 17687 0000C8D5 4883FE01                	cmp rsi, 1
 17688 0000C8D9 740E                    	je .L_lambda_simple_params_end_0065
 17689 0000C8DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17690 0000C8E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17691 0000C8E4 48FFC6                  	inc rsi
 17692 0000C8E7 EBEC                    	jmp .L_lambda_simple_params_loop_0065
 17693                                  .L_lambda_simple_params_end_0065:
 17694 0000C8E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17695 0000C8EC 4889C3                  	mov rbx, rax
 17696 0000C8EF 58                      	pop rax
 17697 0000C8F0 C60004                  	mov byte [rax], T_closure
 17698 0000C8F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17699 0000C8F7 48C74009[04C90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 17700 0000C8FF E98C020000              	jmp .L_lambda_simple_end_0065
 17701                                  .L_lambda_simple_code_0065:	; lambda-simple body
 17702 0000C904 48837C241005            	cmp qword [rsp + 8 * 2], 5
 17703 0000C90A 740B                    	je .L_lambda_simple_arity_check_ok_0065
 17704 0000C90C FF742410                	push qword [rsp + 8 * 2]
 17705 0000C910 6A05                    	push 5
 17706 0000C912 E9F7AC0000              	jmp L_error_incorrect_arity_simple
 17707                                  .L_lambda_simple_arity_check_ok_0065:
 17708 0000C917 C8000000                	enter 0, 0
 17709                                  	; preparing a non-tail-call
 17710 0000C91B 488B4530                	mov rax, PARAM(2)	; param len1
 17711 0000C91F 50                      	push rax
 17712 0000C920 488B4520                	mov rax, PARAM(0)	; param i
 17713 0000C924 50                      	push rax
 17714 0000C925 6A02                    	push 2	; arg count
 17715 0000C927 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17716 0000C92F 803805                  	cmp byte [rax], T_undefined
 17717 0000C932 0F84F0AB0000            	je L_error_fvar_undefined
 17718 0000C938 803804                  	cmp byte [rax], T_closure
 17719 0000C93B 0F856BAC0000            	jne L_error_non_closure
 17720 0000C941 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17721 0000C944 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17722 0000C947 483D[02000000]          	cmp rax, sob_boolean_false
 17723 0000C94D 742E                    	je .L_if_else_0053
 17724                                  	; preparing a non-tail-call
 17725 0000C94F 488B4540                	mov rax, PARAM(4)	; param len2
 17726 0000C953 50                      	push rax
 17727 0000C954 488B4530                	mov rax, PARAM(2)	; param len1
 17728 0000C958 50                      	push rax
 17729 0000C959 6A02                    	push 2	; arg count
 17730 0000C95B 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17731 0000C963 803805                  	cmp byte [rax], T_undefined
 17732 0000C966 0F84BCAB0000            	je L_error_fvar_undefined
 17733 0000C96C 803804                  	cmp byte [rax], T_closure
 17734 0000C96F 0F8537AC0000            	jne L_error_non_closure
 17735 0000C975 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17736 0000C978 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17737 0000C97B EB0A                    	jmp .L_if_end_0053
 17738                                  .L_if_else_0053:
 17739 0000C97D 48B8-                   	mov rax, L_constants + 2
 17739 0000C97F [0200000000000000] 
 17740                                  .L_if_end_0053:
 17741 0000C987 483D[02000000]          	cmp rax, sob_boolean_false
 17742 0000C98D 0F85F9010000            	jne .L_or_end_0007
 17743                                  	; preparing a non-tail-call
 17744 0000C993 488B4530                	mov rax, PARAM(2)	; param len1
 17745 0000C997 50                      	push rax
 17746 0000C998 488B4520                	mov rax, PARAM(0)	; param i
 17747 0000C99C 50                      	push rax
 17748 0000C99D 6A02                    	push 2	; arg count
 17749 0000C99F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17750 0000C9A7 803805                  	cmp byte [rax], T_undefined
 17751 0000C9AA 0F8478AB0000            	je L_error_fvar_undefined
 17752 0000C9B0 803804                  	cmp byte [rax], T_closure
 17753 0000C9B3 0F85F3AB0000            	jne L_error_non_closure
 17754 0000C9B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17755 0000C9BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17756 0000C9BF 483D[02000000]          	cmp rax, sob_boolean_false
 17757 0000C9C5 0F84B7010000            	je .L_if_else_0055
 17758                                  	; preparing a non-tail-call
 17759                                  	; preparing a non-tail-call
 17760 0000C9CB 488B4520                	mov rax, PARAM(0)	; param i
 17761 0000C9CF 50                      	push rax
 17762 0000C9D0 488B4538                	mov rax, PARAM(3)	; param str2
 17763 0000C9D4 50                      	push rax
 17764 0000C9D5 6A02                    	push 2	; arg count
 17765 0000C9D7 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17766 0000C9DF 803805                  	cmp byte [rax], T_undefined
 17767 0000C9E2 0F8440AB0000            	je L_error_fvar_undefined
 17768 0000C9E8 803804                  	cmp byte [rax], T_closure
 17769 0000C9EB 0F85BBAB0000            	jne L_error_non_closure
 17770 0000C9F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17771 0000C9F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17772 0000C9F7 50                      	push rax
 17773                                  	; preparing a non-tail-call
 17774 0000C9F8 488B4520                	mov rax, PARAM(0)	; param i
 17775 0000C9FC 50                      	push rax
 17776 0000C9FD 488B4528                	mov rax, PARAM(1)	; param str1
 17777 0000CA01 50                      	push rax
 17778 0000CA02 6A02                    	push 2	; arg count
 17779 0000CA04 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17780 0000CA0C 803805                  	cmp byte [rax], T_undefined
 17781 0000CA0F 0F8413AB0000            	je L_error_fvar_undefined
 17782 0000CA15 803804                  	cmp byte [rax], T_closure
 17783 0000CA18 0F858EAB0000            	jne L_error_non_closure
 17784 0000CA1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17785 0000CA21 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17786 0000CA24 50                      	push rax
 17787 0000CA25 6A02                    	push 2	; arg count
 17788 0000CA27 488B4510                	mov rax, ENV
 17789 0000CA2B 488B4008                	mov rax, qword [rax + 8 * 1]
 17790 0000CA2F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 17791 0000CA32 803804                  	cmp byte [rax], T_closure
 17792 0000CA35 0F8571AB0000            	jne L_error_non_closure
 17793 0000CA3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17794 0000CA3E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17795 0000CA41 483D[02000000]          	cmp rax, sob_boolean_false
 17796 0000CA47 0F8533010000            	jne .L_or_end_0008
 17797                                  	; preparing a non-tail-call
 17798                                  	; preparing a non-tail-call
 17799 0000CA4D 488B4520                	mov rax, PARAM(0)	; param i
 17800 0000CA51 50                      	push rax
 17801 0000CA52 488B4538                	mov rax, PARAM(3)	; param str2
 17802 0000CA56 50                      	push rax
 17803 0000CA57 6A02                    	push 2	; arg count
 17804 0000CA59 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17805 0000CA61 803805                  	cmp byte [rax], T_undefined
 17806 0000CA64 0F84BEAA0000            	je L_error_fvar_undefined
 17807 0000CA6A 803804                  	cmp byte [rax], T_closure
 17808 0000CA6D 0F8539AB0000            	jne L_error_non_closure
 17809 0000CA73 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17810 0000CA76 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17811 0000CA79 50                      	push rax
 17812                                  	; preparing a non-tail-call
 17813 0000CA7A 488B4520                	mov rax, PARAM(0)	; param i
 17814 0000CA7E 50                      	push rax
 17815 0000CA7F 488B4528                	mov rax, PARAM(1)	; param str1
 17816 0000CA83 50                      	push rax
 17817 0000CA84 6A02                    	push 2	; arg count
 17818 0000CA86 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17819 0000CA8E 803805                  	cmp byte [rax], T_undefined
 17820 0000CA91 0F8491AA0000            	je L_error_fvar_undefined
 17821 0000CA97 803804                  	cmp byte [rax], T_closure
 17822 0000CA9A 0F850CAB0000            	jne L_error_non_closure
 17823 0000CAA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17824 0000CAA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17825 0000CAA6 50                      	push rax
 17826 0000CAA7 6A02                    	push 2	; arg count
 17827 0000CAA9 488B4510                	mov rax, ENV
 17828 0000CAAD 488B4008                	mov rax, qword [rax + 8 * 1]
 17829 0000CAB1 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 17830 0000CAB5 803804                  	cmp byte [rax], T_closure
 17831 0000CAB8 0F85EEAA0000            	jne L_error_non_closure
 17832 0000CABE FF7001                  	push SOB_CLOSURE_ENV(rax)
 17833 0000CAC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17834 0000CAC4 483D[02000000]          	cmp rax, sob_boolean_false
 17835 0000CACA 0F84A6000000            	je .L_if_else_0054
 17836                                  	; preparing a tail-call
 17837 0000CAD0 488B4540                	mov rax, PARAM(4)	; param len2
 17838 0000CAD4 50                      	push rax
 17839 0000CAD5 488B4538                	mov rax, PARAM(3)	; param str2
 17840 0000CAD9 50                      	push rax
 17841 0000CADA 488B4530                	mov rax, PARAM(2)	; param len1
 17842 0000CADE 50                      	push rax
 17843 0000CADF 488B4528                	mov rax, PARAM(1)	; param str1
 17844 0000CAE3 50                      	push rax
 17845                                  	; preparing a non-tail-call
 17846 0000CAE4 48B8-                   	mov rax, L_constants + 2270
 17846 0000CAE6 [DE08000000000000] 
 17847 0000CAEE 50                      	push rax
 17848 0000CAEF 488B4520                	mov rax, PARAM(0)	; param i
 17849 0000CAF3 50                      	push rax
 17850 0000CAF4 6A02                    	push 2	; arg count
 17851 0000CAF6 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 17852 0000CAFE 803805                  	cmp byte [rax], T_undefined
 17853 0000CB01 0F8421AA0000            	je L_error_fvar_undefined
 17854 0000CB07 803804                  	cmp byte [rax], T_closure
 17855 0000CB0A 0F859CAA0000            	jne L_error_non_closure
 17856 0000CB10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17857 0000CB13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17858 0000CB16 50                      	push rax
 17859 0000CB17 6A05                    	push 5	; arg count
 17860 0000CB19 488B4510                	mov rax, ENV
 17861 0000CB1D 488B00                  	mov rax, qword [rax + 8 * 0]
 17862 0000CB20 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17863 0000CB23 488B00                  	mov rax, qword [rax]
 17864 0000CB26 803804                  	cmp byte [rax], T_closure
 17865 0000CB29 0F857DAA0000            	jne L_error_non_closure
 17866 0000CB2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17867 0000CB32 FF7508                  	push qword [rbp + 8 * 1]
 17868                                   ; old ret addr
 17869 0000CB35 FF7500                  	push qword [rbp]
 17870                                   ; restore the old rbp
 17871 0000CB38 BB05000000              	mov rbx, 5
 17872 0000CB3D 4883C303                	add rbx, 3
 17873 0000CB41 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 17874 0000CB45 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 17875 0000CB4A 4C8D4DF8                	lea r9, [rbp - 8]
 17876 0000CB4E B909000000              	mov rcx, 9
 17877                                  .L_tc_recycle_frame_loop_009c:
 17878 0000CB53 4883F900                	cmp rcx, 0
 17879 0000CB57 7413                    	je .L_tc_recycle_frame_done_009c
 17880 0000CB59 4D8B11                  	mov r10, qword [r9]
 17881 0000CB5C 4D8910                  	mov qword [r8], r10
 17882 0000CB5F 4983E808                	sub r8, 8
 17883 0000CB63 4983E908                	sub r9, 8
 17884 0000CB67 48FFC9                  	dec rcx
 17885 0000CB6A EBE7                    	jmp .L_tc_recycle_frame_loop_009c
 17886                                  .L_tc_recycle_frame_done_009c:
 17887 0000CB6C 498D6008                	lea rsp, [r8 + 8]
 17888 0000CB70 5D                      	pop rbp ; restore the old rbp
 17889 0000CB71 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17890 0000CB74 EB0A                    	jmp .L_if_end_0054
 17891                                  .L_if_else_0054:
 17892 0000CB76 48B8-                   	mov rax, L_constants + 2
 17892 0000CB78 [0200000000000000] 
 17893                                  .L_if_end_0054:
 17894                                  .L_or_end_0008:
 17895 0000CB80 EB0A                    	jmp .L_if_end_0055
 17896                                  .L_if_else_0055:
 17897 0000CB82 48B8-                   	mov rax, L_constants + 2
 17897 0000CB84 [0200000000000000] 
 17898                                  .L_if_end_0055:
 17899                                  .L_or_end_0007:
 17900 0000CB8C C9                      	leave
 17901 0000CB8D C23800                  	ret AND_KILL_FRAME(5)
 17902                                  .L_lambda_simple_end_0065:	; new closure is in rax
 17903 0000CB90 50                      	push rax
 17904 0000CB91 488B4520                	mov rax, PARAM(0)	; param run
 17905 0000CB95 8F00                    	pop qword [rax]
 17906 0000CB97 48B8-                   	mov rax, sob_void
 17906 0000CB99 [0000000000000000] 
 17907                                  
 17908                                  	; preparing a tail-call
 17909 0000CBA1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17910 0000CBA6 E8AAAA0000              	call malloc
 17911 0000CBAB 50                      	push rax
 17912 0000CBAC BF08000000              	mov rdi, 8 * 1	; new rib
 17913 0000CBB1 E89FAA0000              	call malloc
 17914 0000CBB6 50                      	push rax
 17915 0000CBB7 BF18000000              	mov rdi, 8 * 3	; extended env
 17916 0000CBBC E894AA0000              	call malloc
 17917 0000CBC1 488B7D10                	mov rdi, ENV
 17918 0000CBC5 BE00000000              	mov rsi, 0
 17919 0000CBCA BA01000000              	mov rdx, 1
 17920                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 17921 0000CBCF 4883FE02                	cmp rsi, 2
 17922 0000CBD3 7410                    	je .L_lambda_simple_env_end_0066
 17923 0000CBD5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17924 0000CBD9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17925 0000CBDD 48FFC6                  	inc rsi
 17926 0000CBE0 48FFC2                  	inc rdx
 17927 0000CBE3 EBEA                    	jmp .L_lambda_simple_env_loop_0066
 17928                                  .L_lambda_simple_env_end_0066:
 17929 0000CBE5 5B                      	pop rbx
 17930 0000CBE6 BE00000000              	mov rsi, 0
 17931                                  .L_lambda_simple_params_loop_0066:	; copy params
 17932 0000CBEB 4883FE01                	cmp rsi, 1
 17933 0000CBEF 740E                    	je .L_lambda_simple_params_end_0066
 17934 0000CBF1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17935 0000CBF6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17936 0000CBFA 48FFC6                  	inc rsi
 17937 0000CBFD EBEC                    	jmp .L_lambda_simple_params_loop_0066
 17938                                  .L_lambda_simple_params_end_0066:
 17939 0000CBFF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17940 0000CC02 4889C3                  	mov rbx, rax
 17941 0000CC05 58                      	pop rax
 17942 0000CC06 C60004                  	mov byte [rax], T_closure
 17943 0000CC09 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17944 0000CC0D 48C74009[1ACC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 17945 0000CC15 E9A0020000              	jmp .L_lambda_simple_end_0066
 17946                                  .L_lambda_simple_code_0066:	; lambda-simple body
 17947 0000CC1A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17948 0000CC20 740B                    	je .L_lambda_simple_arity_check_ok_0066
 17949 0000CC22 FF742410                	push qword [rsp + 8 * 2]
 17950 0000CC26 6A02                    	push 2
 17951 0000CC28 E9E1A90000              	jmp L_error_incorrect_arity_simple
 17952                                  .L_lambda_simple_arity_check_ok_0066:
 17953 0000CC2D C8000000                	enter 0, 0
 17954                                  	; preparing a tail-call
 17955                                  	; preparing a non-tail-call
 17956 0000CC31 488B4528                	mov rax, PARAM(1)	; param str2
 17957 0000CC35 50                      	push rax
 17958 0000CC36 6A01                    	push 1	; arg count
 17959 0000CC38 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17960 0000CC40 803805                  	cmp byte [rax], T_undefined
 17961 0000CC43 0F84DFA80000            	je L_error_fvar_undefined
 17962 0000CC49 803804                  	cmp byte [rax], T_closure
 17963 0000CC4C 0F855AA90000            	jne L_error_non_closure
 17964 0000CC52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17965 0000CC55 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17966 0000CC58 50                      	push rax
 17967                                  	; preparing a non-tail-call
 17968 0000CC59 488B4520                	mov rax, PARAM(0)	; param str1
 17969 0000CC5D 50                      	push rax
 17970 0000CC5E 6A01                    	push 1	; arg count
 17971 0000CC60 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17972 0000CC68 803805                  	cmp byte [rax], T_undefined
 17973 0000CC6B 0F84B7A80000            	je L_error_fvar_undefined
 17974 0000CC71 803804                  	cmp byte [rax], T_closure
 17975 0000CC74 0F8532A90000            	jne L_error_non_closure
 17976 0000CC7A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17977 0000CC7D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17978 0000CC80 50                      	push rax
 17979 0000CC81 6A02                    	push 2	; arg count
 17980 0000CC83 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17981 0000CC88 E8C8A90000              	call malloc
 17982 0000CC8D 50                      	push rax
 17983 0000CC8E BF10000000              	mov rdi, 8 * 2	; new rib
 17984 0000CC93 E8BDA90000              	call malloc
 17985 0000CC98 50                      	push rax
 17986 0000CC99 BF20000000              	mov rdi, 8 * 4	; extended env
 17987 0000CC9E E8B2A90000              	call malloc
 17988 0000CCA3 488B7D10                	mov rdi, ENV
 17989 0000CCA7 BE00000000              	mov rsi, 0
 17990 0000CCAC BA01000000              	mov rdx, 1
 17991                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 17992 0000CCB1 4883FE03                	cmp rsi, 3
 17993 0000CCB5 7410                    	je .L_lambda_simple_env_end_0067
 17994 0000CCB7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17995 0000CCBB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17996 0000CCBF 48FFC6                  	inc rsi
 17997 0000CCC2 48FFC2                  	inc rdx
 17998 0000CCC5 EBEA                    	jmp .L_lambda_simple_env_loop_0067
 17999                                  .L_lambda_simple_env_end_0067:
 18000 0000CCC7 5B                      	pop rbx
 18001 0000CCC8 BE00000000              	mov rsi, 0
 18002                                  .L_lambda_simple_params_loop_0067:	; copy params
 18003 0000CCCD 4883FE02                	cmp rsi, 2
 18004 0000CCD1 740E                    	je .L_lambda_simple_params_end_0067
 18005 0000CCD3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18006 0000CCD8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18007 0000CCDC 48FFC6                  	inc rsi
 18008 0000CCDF EBEC                    	jmp .L_lambda_simple_params_loop_0067
 18009                                  .L_lambda_simple_params_end_0067:
 18010 0000CCE1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18011 0000CCE4 4889C3                  	mov rbx, rax
 18012 0000CCE7 58                      	pop rax
 18013 0000CCE8 C60004                  	mov byte [rax], T_closure
 18014 0000CCEB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18015 0000CCEF 48C74009[FCCC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 18016 0000CCF7 E96C010000              	jmp .L_lambda_simple_end_0067
 18017                                  .L_lambda_simple_code_0067:	; lambda-simple body
 18018 0000CCFC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18019 0000CD02 740B                    	je .L_lambda_simple_arity_check_ok_0067
 18020 0000CD04 FF742410                	push qword [rsp + 8 * 2]
 18021 0000CD08 6A02                    	push 2
 18022 0000CD0A E9FFA80000              	jmp L_error_incorrect_arity_simple
 18023                                  .L_lambda_simple_arity_check_ok_0067:
 18024 0000CD0F C8000000                	enter 0, 0
 18025                                  	; preparing a non-tail-call
 18026 0000CD13 488B4528                	mov rax, PARAM(1)	; param len2
 18027 0000CD17 50                      	push rax
 18028 0000CD18 488B4520                	mov rax, PARAM(0)	; param len1
 18029 0000CD1C 50                      	push rax
 18030 0000CD1D 6A02                    	push 2	; arg count
 18031 0000CD1F 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 18032 0000CD27 803805                  	cmp byte [rax], T_undefined
 18033 0000CD2A 0F84F8A70000            	je L_error_fvar_undefined
 18034 0000CD30 803804                  	cmp byte [rax], T_closure
 18035 0000CD33 0F8573A80000            	jne L_error_non_closure
 18036 0000CD39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18037 0000CD3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18038 0000CD3F 483D[02000000]          	cmp rax, sob_boolean_false
 18039 0000CD45 0F848F000000            	je .L_if_else_0056
 18040                                  	; preparing a tail-call
 18041 0000CD4B 488B4528                	mov rax, PARAM(1)	; param len2
 18042 0000CD4F 50                      	push rax
 18043 0000CD50 488B4510                	mov rax, ENV
 18044 0000CD54 488B00                  	mov rax, qword [rax + 8 * 0]
 18045 0000CD57 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18046 0000CD5B 50                      	push rax
 18047 0000CD5C 488B4520                	mov rax, PARAM(0)	; param len1
 18048 0000CD60 50                      	push rax
 18049 0000CD61 488B4510                	mov rax, ENV
 18050 0000CD65 488B00                  	mov rax, qword [rax + 8 * 0]
 18051 0000CD68 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18052 0000CD6B 50                      	push rax
 18053 0000CD6C 48B8-                   	mov rax, L_constants + 2135
 18053 0000CD6E [5708000000000000] 
 18054 0000CD76 50                      	push rax
 18055 0000CD77 6A05                    	push 5	; arg count
 18056 0000CD79 488B4510                	mov rax, ENV
 18057 0000CD7D 488B4008                	mov rax, qword [rax + 8 * 1]
 18058 0000CD81 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18059 0000CD84 488B00                  	mov rax, qword [rax]
 18060 0000CD87 803804                  	cmp byte [rax], T_closure
 18061 0000CD8A 0F851CA80000            	jne L_error_non_closure
 18062 0000CD90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18063 0000CD93 FF7508                  	push qword [rbp + 8 * 1]
 18064                                   ; old ret addr
 18065 0000CD96 FF7500                  	push qword [rbp]
 18066                                   ; restore the old rbp
 18067 0000CD99 BB05000000              	mov rbx, 5
 18068 0000CD9E 4883C303                	add rbx, 3
 18069 0000CDA2 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18070 0000CDA6 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18071 0000CDAB 4C8D4DF8                	lea r9, [rbp - 8]
 18072 0000CDAF B909000000              	mov rcx, 9
 18073                                  .L_tc_recycle_frame_loop_009f:
 18074 0000CDB4 4883F900                	cmp rcx, 0
 18075 0000CDB8 7413                    	je .L_tc_recycle_frame_done_009f
 18076 0000CDBA 4D8B11                  	mov r10, qword [r9]
 18077 0000CDBD 4D8910                  	mov qword [r8], r10
 18078 0000CDC0 4983E808                	sub r8, 8
 18079 0000CDC4 4983E908                	sub r9, 8
 18080 0000CDC8 48FFC9                  	dec rcx
 18081 0000CDCB EBE7                    	jmp .L_tc_recycle_frame_loop_009f
 18082                                  .L_tc_recycle_frame_done_009f:
 18083 0000CDCD 498D6008                	lea rsp, [r8 + 8]
 18084 0000CDD1 5D                      	pop rbp ; restore the old rbp
 18085 0000CDD2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18086 0000CDD5 E98A000000              	jmp .L_if_end_0056
 18087                                  .L_if_else_0056:
 18088                                  	; preparing a tail-call
 18089 0000CDDA 488B4520                	mov rax, PARAM(0)	; param len1
 18090 0000CDDE 50                      	push rax
 18091 0000CDDF 488B4510                	mov rax, ENV
 18092 0000CDE3 488B00                  	mov rax, qword [rax + 8 * 0]
 18093 0000CDE6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18094 0000CDE9 50                      	push rax
 18095 0000CDEA 488B4528                	mov rax, PARAM(1)	; param len2
 18096 0000CDEE 50                      	push rax
 18097 0000CDEF 488B4510                	mov rax, ENV
 18098 0000CDF3 488B00                  	mov rax, qword [rax + 8 * 0]
 18099 0000CDF6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18100 0000CDFA 50                      	push rax
 18101 0000CDFB 48B8-                   	mov rax, L_constants + 2135
 18101 0000CDFD [5708000000000000] 
 18102 0000CE05 50                      	push rax
 18103 0000CE06 6A05                    	push 5	; arg count
 18104 0000CE08 488B4510                	mov rax, ENV
 18105 0000CE0C 488B4008                	mov rax, qword [rax + 8 * 1]
 18106 0000CE10 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18107 0000CE13 488B00                  	mov rax, qword [rax]
 18108 0000CE16 803804                  	cmp byte [rax], T_closure
 18109 0000CE19 0F858DA70000            	jne L_error_non_closure
 18110 0000CE1F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18111 0000CE22 FF7508                  	push qword [rbp + 8 * 1]
 18112                                   ; old ret addr
 18113 0000CE25 FF7500                  	push qword [rbp]
 18114                                   ; restore the old rbp
 18115 0000CE28 BB05000000              	mov rbx, 5
 18116 0000CE2D 4883C303                	add rbx, 3
 18117 0000CE31 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18118 0000CE35 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18119 0000CE3A 4C8D4DF8                	lea r9, [rbp - 8]
 18120 0000CE3E B909000000              	mov rcx, 9
 18121                                  .L_tc_recycle_frame_loop_00a0:
 18122 0000CE43 4883F900                	cmp rcx, 0
 18123 0000CE47 7413                    	je .L_tc_recycle_frame_done_00a0
 18124 0000CE49 4D8B11                  	mov r10, qword [r9]
 18125 0000CE4C 4D8910                  	mov qword [r8], r10
 18126 0000CE4F 4983E808                	sub r8, 8
 18127 0000CE53 4983E908                	sub r9, 8
 18128 0000CE57 48FFC9                  	dec rcx
 18129 0000CE5A EBE7                    	jmp .L_tc_recycle_frame_loop_00a0
 18130                                  .L_tc_recycle_frame_done_00a0:
 18131 0000CE5C 498D6008                	lea rsp, [r8 + 8]
 18132 0000CE60 5D                      	pop rbp ; restore the old rbp
 18133 0000CE61 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18134                                  .L_if_end_0056:
 18135 0000CE64 C9                      	leave
 18136 0000CE65 C22000                  	ret AND_KILL_FRAME(2)
 18137                                  .L_lambda_simple_end_0067:	; new closure is in rax
 18138 0000CE68 803804                  	cmp byte [rax], T_closure
 18139 0000CE6B 0F853BA70000            	jne L_error_non_closure
 18140 0000CE71 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18141 0000CE74 FF7508                  	push qword [rbp + 8 * 1]
 18142                                   ; old ret addr
 18143 0000CE77 FF7500                  	push qword [rbp]
 18144                                   ; restore the old rbp
 18145 0000CE7A BB02000000              	mov rbx, 2
 18146 0000CE7F 4883C303                	add rbx, 3
 18147 0000CE83 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18148 0000CE87 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18149 0000CE8C 4C8D4DF8                	lea r9, [rbp - 8]
 18150 0000CE90 B906000000              	mov rcx, 6
 18151                                  .L_tc_recycle_frame_loop_009e:
 18152 0000CE95 4883F900                	cmp rcx, 0
 18153 0000CE99 7413                    	je .L_tc_recycle_frame_done_009e
 18154 0000CE9B 4D8B11                  	mov r10, qword [r9]
 18155 0000CE9E 4D8910                  	mov qword [r8], r10
 18156 0000CEA1 4983E808                	sub r8, 8
 18157 0000CEA5 4983E908                	sub r9, 8
 18158 0000CEA9 48FFC9                  	dec rcx
 18159 0000CEAC EBE7                    	jmp .L_tc_recycle_frame_loop_009e
 18160                                  .L_tc_recycle_frame_done_009e:
 18161 0000CEAE 498D6008                	lea rsp, [r8 + 8]
 18162 0000CEB2 5D                      	pop rbp ; restore the old rbp
 18163 0000CEB3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18164 0000CEB6 C9                      	leave
 18165 0000CEB7 C22000                  	ret AND_KILL_FRAME(2)
 18166                                  .L_lambda_simple_end_0066:	; new closure is in rax
 18167 0000CEBA 50                      	push rax
 18168 0000CEBB 6A01                    	push 1	; arg count
 18169 0000CEBD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18170 0000CEC2 E88EA70000              	call malloc
 18171 0000CEC7 50                      	push rax
 18172 0000CEC8 BF08000000              	mov rdi, 8 * 1	; new rib
 18173 0000CECD E883A70000              	call malloc
 18174 0000CED2 50                      	push rax
 18175 0000CED3 BF18000000              	mov rdi, 8 * 3	; extended env
 18176 0000CED8 E878A70000              	call malloc
 18177 0000CEDD 488B7D10                	mov rdi, ENV
 18178 0000CEE1 BE00000000              	mov rsi, 0
 18179 0000CEE6 BA01000000              	mov rdx, 1
 18180                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 18181 0000CEEB 4883FE02                	cmp rsi, 2
 18182 0000CEEF 7410                    	je .L_lambda_simple_env_end_0068
 18183 0000CEF1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18184 0000CEF5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18185 0000CEF9 48FFC6                  	inc rsi
 18186 0000CEFC 48FFC2                  	inc rdx
 18187 0000CEFF EBEA                    	jmp .L_lambda_simple_env_loop_0068
 18188                                  .L_lambda_simple_env_end_0068:
 18189 0000CF01 5B                      	pop rbx
 18190 0000CF02 BE00000000              	mov rsi, 0
 18191                                  .L_lambda_simple_params_loop_0068:	; copy params
 18192 0000CF07 4883FE01                	cmp rsi, 1
 18193 0000CF0B 740E                    	je .L_lambda_simple_params_end_0068
 18194 0000CF0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18195 0000CF12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18196 0000CF16 48FFC6                  	inc rsi
 18197 0000CF19 EBEC                    	jmp .L_lambda_simple_params_loop_0068
 18198                                  .L_lambda_simple_params_end_0068:
 18199 0000CF1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18200 0000CF1E 4889C3                  	mov rbx, rax
 18201 0000CF21 58                      	pop rax
 18202 0000CF22 C60004                  	mov byte [rax], T_closure
 18203 0000CF25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18204 0000CF29 48C74009[36CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 18205 0000CF31 E9E6040000              	jmp .L_lambda_simple_end_0068
 18206                                  .L_lambda_simple_code_0068:	; lambda-simple body
 18207 0000CF36 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18208 0000CF3C 740B                    	je .L_lambda_simple_arity_check_ok_0068
 18209 0000CF3E FF742410                	push qword [rsp + 8 * 2]
 18210 0000CF42 6A01                    	push 1
 18211 0000CF44 E9C5A60000              	jmp L_error_incorrect_arity_simple
 18212                                  .L_lambda_simple_arity_check_ok_0068:
 18213 0000CF49 C8000000                	enter 0, 0
 18214                                  	; preparing a tail-call
 18215 0000CF4D 48B8-                   	mov rax, L_constants + 1993
 18215 0000CF4F [C907000000000000] 
 18216 0000CF57 50                      	push rax
 18217 0000CF58 6A01                    	push 1	; arg count
 18218 0000CF5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18219 0000CF5F E8F1A60000              	call malloc
 18220 0000CF64 50                      	push rax
 18221 0000CF65 BF08000000              	mov rdi, 8 * 1	; new rib
 18222 0000CF6A E8E6A60000              	call malloc
 18223 0000CF6F 50                      	push rax
 18224 0000CF70 BF20000000              	mov rdi, 8 * 4	; extended env
 18225 0000CF75 E8DBA60000              	call malloc
 18226 0000CF7A 488B7D10                	mov rdi, ENV
 18227 0000CF7E BE00000000              	mov rsi, 0
 18228 0000CF83 BA01000000              	mov rdx, 1
 18229                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 18230 0000CF88 4883FE03                	cmp rsi, 3
 18231 0000CF8C 7410                    	je .L_lambda_simple_env_end_0069
 18232 0000CF8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18233 0000CF92 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18234 0000CF96 48FFC6                  	inc rsi
 18235 0000CF99 48FFC2                  	inc rdx
 18236 0000CF9C EBEA                    	jmp .L_lambda_simple_env_loop_0069
 18237                                  .L_lambda_simple_env_end_0069:
 18238 0000CF9E 5B                      	pop rbx
 18239 0000CF9F BE00000000              	mov rsi, 0
 18240                                  .L_lambda_simple_params_loop_0069:	; copy params
 18241 0000CFA4 4883FE01                	cmp rsi, 1
 18242 0000CFA8 740E                    	je .L_lambda_simple_params_end_0069
 18243 0000CFAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18244 0000CFAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18245 0000CFB3 48FFC6                  	inc rsi
 18246 0000CFB6 EBEC                    	jmp .L_lambda_simple_params_loop_0069
 18247                                  .L_lambda_simple_params_end_0069:
 18248 0000CFB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18249 0000CFBB 4889C3                  	mov rbx, rax
 18250 0000CFBE 58                      	pop rax
 18251 0000CFBF C60004                  	mov byte [rax], T_closure
 18252 0000CFC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18253 0000CFC6 48C74009[D3CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 18254 0000CFCE E9F7030000              	jmp .L_lambda_simple_end_0069
 18255                                  .L_lambda_simple_code_0069:	; lambda-simple body
 18256 0000CFD3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18257 0000CFD9 740B                    	je .L_lambda_simple_arity_check_ok_0069
 18258 0000CFDB FF742410                	push qword [rsp + 8 * 2]
 18259 0000CFDF 6A01                    	push 1
 18260 0000CFE1 E928A60000              	jmp L_error_incorrect_arity_simple
 18261                                  .L_lambda_simple_arity_check_ok_0069:
 18262 0000CFE6 C8000000                	enter 0, 0
 18263 0000CFEA BF08000000              	mov rdi, 8*1
 18264 0000CFEF E861A60000              	call malloc
 18265 0000CFF4 488B5D20                	mov rbx, PARAM(0)
 18266 0000CFF8 488918                  	mov qword [rax], rbx
 18267 0000CFFB 48894520                	mov PARAM(0), rax
 18268 0000CFFF 48B8-                   	mov rax, sob_void
 18268 0000D001 [0000000000000000] 
 18269                                  
 18270 0000D009 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18271 0000D00E E842A60000              	call malloc
 18272 0000D013 50                      	push rax
 18273 0000D014 BF08000000              	mov rdi, 8 * 1	; new rib
 18274 0000D019 E837A60000              	call malloc
 18275 0000D01E 50                      	push rax
 18276 0000D01F BF28000000              	mov rdi, 8 * 5	; extended env
 18277 0000D024 E82CA60000              	call malloc
 18278 0000D029 488B7D10                	mov rdi, ENV
 18279 0000D02D BE00000000              	mov rsi, 0
 18280 0000D032 BA01000000              	mov rdx, 1
 18281                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 18282 0000D037 4883FE04                	cmp rsi, 4
 18283 0000D03B 7410                    	je .L_lambda_simple_env_end_006a
 18284 0000D03D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18285 0000D041 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18286 0000D045 48FFC6                  	inc rsi
 18287 0000D048 48FFC2                  	inc rdx
 18288 0000D04B EBEA                    	jmp .L_lambda_simple_env_loop_006a
 18289                                  .L_lambda_simple_env_end_006a:
 18290 0000D04D 5B                      	pop rbx
 18291 0000D04E BE00000000              	mov rsi, 0
 18292                                  .L_lambda_simple_params_loop_006a:	; copy params
 18293 0000D053 4883FE01                	cmp rsi, 1
 18294 0000D057 740E                    	je .L_lambda_simple_params_end_006a
 18295 0000D059 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18296 0000D05E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18297 0000D062 48FFC6                  	inc rsi
 18298 0000D065 EBEC                    	jmp .L_lambda_simple_params_loop_006a
 18299                                  .L_lambda_simple_params_end_006a:
 18300 0000D067 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18301 0000D06A 4889C3                  	mov rbx, rax
 18302 0000D06D 58                      	pop rax
 18303 0000D06E C60004                  	mov byte [rax], T_closure
 18304 0000D071 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18305 0000D075 48C74009[82D00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 18306 0000D07D E95C010000              	jmp .L_lambda_simple_end_006a
 18307                                  .L_lambda_simple_code_006a:	; lambda-simple body
 18308 0000D082 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18309 0000D088 740B                    	je .L_lambda_simple_arity_check_ok_006a
 18310 0000D08A FF742410                	push qword [rsp + 8 * 2]
 18311 0000D08E 6A02                    	push 2
 18312 0000D090 E979A50000              	jmp L_error_incorrect_arity_simple
 18313                                  .L_lambda_simple_arity_check_ok_006a:
 18314 0000D095 C8000000                	enter 0, 0
 18315                                  	; preparing a non-tail-call
 18316 0000D099 488B4528                	mov rax, PARAM(1)	; param strs
 18317 0000D09D 50                      	push rax
 18318 0000D09E 6A01                    	push 1	; arg count
 18319 0000D0A0 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18320 0000D0A8 803805                  	cmp byte [rax], T_undefined
 18321 0000D0AB 0F8477A40000            	je L_error_fvar_undefined
 18322 0000D0B1 803804                  	cmp byte [rax], T_closure
 18323 0000D0B4 0F85F2A40000            	jne L_error_non_closure
 18324 0000D0BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 18325 0000D0BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 18326 0000D0C0 483D[02000000]          	cmp rax, sob_boolean_false
 18327 0000D0C6 0F850E010000            	jne .L_or_end_0009
 18328                                  	; preparing a non-tail-call
 18329                                  	; preparing a non-tail-call
 18330 0000D0CC 488B4528                	mov rax, PARAM(1)	; param strs
 18331 0000D0D0 50                      	push rax
 18332 0000D0D1 6A01                    	push 1	; arg count
 18333 0000D0D3 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18334 0000D0DB 803805                  	cmp byte [rax], T_undefined
 18335 0000D0DE 0F8444A40000            	je L_error_fvar_undefined
 18336 0000D0E4 803804                  	cmp byte [rax], T_closure
 18337 0000D0E7 0F85BFA40000            	jne L_error_non_closure
 18338 0000D0ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 18339 0000D0F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18340 0000D0F3 50                      	push rax
 18341 0000D0F4 488B4520                	mov rax, PARAM(0)	; param str
 18342 0000D0F8 50                      	push rax
 18343 0000D0F9 6A02                    	push 2	; arg count
 18344 0000D0FB 488B4510                	mov rax, ENV
 18345 0000D0FF 488B4008                	mov rax, qword [rax + 8 * 1]
 18346 0000D103 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18347 0000D106 803804                  	cmp byte [rax], T_closure
 18348 0000D109 0F859DA40000            	jne L_error_non_closure
 18349 0000D10F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18350 0000D112 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18351 0000D115 483D[02000000]          	cmp rax, sob_boolean_false
 18352 0000D11B 0F84AF000000            	je .L_if_else_0057
 18353                                  	; preparing a tail-call
 18354                                  	; preparing a non-tail-call
 18355 0000D121 488B4528                	mov rax, PARAM(1)	; param strs
 18356 0000D125 50                      	push rax
 18357 0000D126 6A01                    	push 1	; arg count
 18358 0000D128 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18359 0000D130 803805                  	cmp byte [rax], T_undefined
 18360 0000D133 0F84EFA30000            	je L_error_fvar_undefined
 18361 0000D139 803804                  	cmp byte [rax], T_closure
 18362 0000D13C 0F856AA40000            	jne L_error_non_closure
 18363 0000D142 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18364 0000D145 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18365 0000D148 50                      	push rax
 18366                                  	; preparing a non-tail-call
 18367 0000D149 488B4528                	mov rax, PARAM(1)	; param strs
 18368 0000D14D 50                      	push rax
 18369 0000D14E 6A01                    	push 1	; arg count
 18370 0000D150 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18371 0000D158 803805                  	cmp byte [rax], T_undefined
 18372 0000D15B 0F84C7A30000            	je L_error_fvar_undefined
 18373 0000D161 803804                  	cmp byte [rax], T_closure
 18374 0000D164 0F8542A40000            	jne L_error_non_closure
 18375 0000D16A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18376 0000D16D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18377 0000D170 50                      	push rax
 18378 0000D171 6A02                    	push 2	; arg count
 18379 0000D173 488B4510                	mov rax, ENV
 18380 0000D177 488B00                  	mov rax, qword [rax + 8 * 0]
 18381 0000D17A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18382 0000D17D 488B00                  	mov rax, qword [rax]
 18383 0000D180 803804                  	cmp byte [rax], T_closure
 18384 0000D183 0F8523A40000            	jne L_error_non_closure
 18385 0000D189 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18386 0000D18C FF7508                  	push qword [rbp + 8 * 1]
 18387                                   ; old ret addr
 18388 0000D18F FF7500                  	push qword [rbp]
 18389                                   ; restore the old rbp
 18390 0000D192 BB02000000              	mov rbx, 2
 18391 0000D197 4883C303                	add rbx, 3
 18392 0000D19B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18393 0000D19F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18394 0000D1A4 4C8D4DF8                	lea r9, [rbp - 8]
 18395 0000D1A8 B906000000              	mov rcx, 6
 18396                                  .L_tc_recycle_frame_loop_00a2:
 18397 0000D1AD 4883F900                	cmp rcx, 0
 18398 0000D1B1 7413                    	je .L_tc_recycle_frame_done_00a2
 18399 0000D1B3 4D8B11                  	mov r10, qword [r9]
 18400 0000D1B6 4D8910                  	mov qword [r8], r10
 18401 0000D1B9 4983E808                	sub r8, 8
 18402 0000D1BD 4983E908                	sub r9, 8
 18403 0000D1C1 48FFC9                  	dec rcx
 18404 0000D1C4 EBE7                    	jmp .L_tc_recycle_frame_loop_00a2
 18405                                  .L_tc_recycle_frame_done_00a2:
 18406 0000D1C6 498D6008                	lea rsp, [r8 + 8]
 18407 0000D1CA 5D                      	pop rbp ; restore the old rbp
 18408 0000D1CB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18409 0000D1CE EB0A                    	jmp .L_if_end_0057
 18410                                  .L_if_else_0057:
 18411 0000D1D0 48B8-                   	mov rax, L_constants + 2
 18411 0000D1D2 [0200000000000000] 
 18412                                  .L_if_end_0057:
 18413                                  .L_or_end_0009:
 18414 0000D1DA C9                      	leave
 18415 0000D1DB C22000                  	ret AND_KILL_FRAME(2)
 18416                                  .L_lambda_simple_end_006a:	; new closure is in rax
 18417 0000D1DE 50                      	push rax
 18418 0000D1DF 488B4520                	mov rax, PARAM(0)	; param run
 18419 0000D1E3 8F00                    	pop qword [rax]
 18420 0000D1E5 48B8-                   	mov rax, sob_void
 18420 0000D1E7 [0000000000000000] 
 18421                                  
 18422 0000D1EF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18423 0000D1F4 E85CA40000              	call malloc
 18424 0000D1F9 50                      	push rax
 18425 0000D1FA BF08000000              	mov rdi, 8 * 1	; new rib
 18426 0000D1FF E851A40000              	call malloc
 18427 0000D204 50                      	push rax
 18428 0000D205 BF28000000              	mov rdi, 8 * 5	; extended env
 18429 0000D20A E846A40000              	call malloc
 18430 0000D20F 488B7D10                	mov rdi, ENV
 18431 0000D213 4831F6                  	 xor rsi, rsi
 18432 0000D216 4831D2                  	 xor rdx, rdx
 18433 0000D219 48FFC2                  	inc rdx
 18434                                  .L_lambda_opt_env_loop_0011:	; 
 18435 0000D21C 4883FE04                	cmp rsi, 4
 18436 0000D220 7410                    	je .L_lambda_opt_env_end_0011
 18437 0000D222 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18438 0000D226 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18439 0000D22A 48FFC6                  	inc rsi
 18440 0000D22D 48FFC2                  	inc rdx
 18441 0000D230 EBEA                    	jmp .L_lambda_opt_env_loop_0011
 18442                                  .L_lambda_opt_env_end_0011:
 18443 0000D232 5B                      	pop rbx
 18444 0000D233 4831F6                  	xor rsi, rsi
 18445                                  .L_lambda_opt_params_loop_0011:	; copy params
 18446 0000D236 4883FE01                	cmp rsi, 1
 18447 0000D23A 740E                    	je .L_lambda_opt_params_end_0011
 18448 0000D23C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18449 0000D241 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18450 0000D245 48FFC6                  	inc rsi
 18451 0000D248 EBEC                    	jmp .L_lambda_opt_params_loop_0011
 18452                                  .L_lambda_opt_params_end_0011:
 18453 0000D24A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18454 0000D24D 4889C3                  	mov rbx, rax
 18455 0000D250 58                      	pop rax
 18456 0000D251 C60004                  	mov byte [rax], T_closure
 18457 0000D254 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18458 0000D258 48C74009[65D20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 18459 0000D260 E961010000              	jmp .L_lambda_opt_end_0011
 18460                                  .L_lambda_opt_code_0011:
 18461 0000D265 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 18462 0000D26A 4983FF01                	cmp r15, 1
 18463 0000D26E 7409                    	je .L_lambda_opt_arity_check_exact_0011
 18464 0000D270 7F57                    	jg .L_lambda_opt_arity_check_more_0011
 18465 0000D272 6A01                    	push 1
 18466 0000D274 E9A9A30000              	jmp L_error_incorrect_arity_opt
 18467                                  .L_lambda_opt_arity_check_exact_0011: ;Exact case
 18468 0000D279 4C8B0424                	mov r8, qword [rsp -8 * 0]
 18469 0000D27D 4C894424F8              	mov qword [rsp -8], r8
 18470 0000D282 4C8B442408              	mov r8, qword [rsp +8]
 18471 0000D287 4C890424                	mov qword [rsp +8 * 0], r8
 18472 0000D28B 4C8B442410              	mov r8, qword [rsp +8 * 2]
 18473 0000D290 4C89C1                  	mov rcx, r8
 18474 0000D293 49FFC0                  	inc r8
 18475 0000D296 4C89442408              	mov qword [rsp +8], r8
 18476 0000D29B 4889E2                  	mov rdx, rsp
 18477 0000D29E 4883C218                	add rdx, 24
 18478                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0011:
 18479 0000D2A2 4883F900                	cmp rcx, 0
 18480 0000D2A6 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0011
 18481 0000D2A8 4C8B02                  	mov r8, qword [rdx]
 18482 0000D2AB 4C8942F8                	mov qword [rdx - 8], r8
 18483 0000D2AF 4883C208                	add rdx, 8
 18484 0000D2B3 48FFC9                  	dec rcx
 18485 0000D2B6 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0011
 18486                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0011:
 18487 0000D2B8 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 18488 0000D2C0 4883EC08                	sub rsp, 8
 18489 0000D2C4 E985000000              	jmp .L_lambda_opt_stack_adjusted_0011
 18490                                  .L_lambda_opt_arity_check_more_0011:
 18491 0000D2C9 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 18492 0000D2CE 4D89C4                  	mov r12, r8
 18493 0000D2D1 4C89C1                  	mov rcx, r8
 18494 0000D2D4 4D8D6802                	lea r13, [r8 + 2] 
 18495 0000D2D8 4883E901                	sub rcx, 1
 18496 0000D2DC 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 18497 0000D2E1 49BE-                   	mov r14, sob_nil
 18497 0000D2E3 [0100000000000000] 
 18498                                  .L_lambda_opt_create_list_of_opt_params_0011:
 18499 0000D2EB 4883F900                	cmp rcx, 0
 18500 0000D2EF 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0011
 18501 0000D2F1 BF11000000              	mov rdi, 17
 18502 0000D2F6 E85AA30000              	call malloc
 18503 0000D2FB C60021                  	mov byte [rax], T_pair
 18504 0000D2FE 498B1B                  	mov rbx, qword [r11]
 18505 0000D301 48895801                	mov qword [rax +1], rbx
 18506 0000D305 4C897009                	mov qword [rax + 1 + 8], r14
 18507 0000D309 4989C6                  	mov r14, rax
 18508 0000D30C 48FFC9                  	dec rcx
 18509 0000D30F 4983EB08                	sub r11, 8
 18510 0000D313 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0011
 18511                                  .L_lambda_opt_create_list_of_opt_params_end_0011:
 18512 0000D315 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 18513 0000D31A 4D8932                  	mov qword [r10], r14
 18514 0000D31D 4E8D2CED00000000        	lea r13, [8 * r13]
 18515 0000D325 4901E5                  	add r13, rsp
 18516 0000D328 B905000000              	mov rcx, 4 + 1
 18517                                  .L_lambda_opt_stack_shrink_loop_0011:
 18518 0000D32D 4883F900                	cmp rcx, 0
 18519 0000D331 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0011
 18520 0000D333 4D8B1A                  	mov r11, qword [r10]
 18521 0000D336 4D895D00                	mov qword [r13], r11
 18522 0000D33A 4983EA08                	sub r10, 8
 18523 0000D33E 4983ED08                	sub r13, 8
 18524 0000D342 48FFC9                  	dec rcx
 18525 0000D345 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 18526                                  .L_lambda_opt_stack_shrink_loop_exit_0011:
 18527 0000D347 4983C508                	add r13, 8
 18528 0000D34B 4C89EC                  	mov rsp, r13
 18529                                  .L_lambda_opt_stack_adjusted_0011:
 18530 0000D34E 48C744241002000000      	mov qword [rsp + 8*2], 2
 18531 0000D357 C8000000                	enter 0, 0
 18532                                  	; preparing a tail-call
 18533 0000D35B 488B4528                	mov rax, PARAM(1)	; param strs
 18534 0000D35F 50                      	push rax
 18535 0000D360 488B4520                	mov rax, PARAM(0)	; param str
 18536 0000D364 50                      	push rax
 18537 0000D365 6A02                    	push 2	; arg count
 18538 0000D367 488B4510                	mov rax, ENV
 18539 0000D36B 488B00                  	mov rax, qword [rax + 8 * 0]
 18540 0000D36E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18541 0000D371 488B00                  	mov rax, qword [rax]
 18542 0000D374 803804                  	cmp byte [rax], T_closure
 18543 0000D377 0F852FA20000            	jne L_error_non_closure
 18544 0000D37D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18545 0000D380 FF7508                  	push qword [rbp + 8 * 1]
 18546                                   ; old ret addr
 18547 0000D383 FF7500                  	push qword [rbp]
 18548                                   ; restore the old rbp
 18549 0000D386 BB02000000              	mov rbx, 2
 18550 0000D38B 4883C303                	add rbx, 3
 18551 0000D38F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18552 0000D393 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18553 0000D398 4C8D4DF8                	lea r9, [rbp - 8]
 18554 0000D39C B906000000              	mov rcx, 6
 18555                                  .L_tc_recycle_frame_loop_00a3:
 18556 0000D3A1 4883F900                	cmp rcx, 0
 18557 0000D3A5 7413                    	je .L_tc_recycle_frame_done_00a3
 18558 0000D3A7 4D8B11                  	mov r10, qword [r9]
 18559 0000D3AA 4D8910                  	mov qword [r8], r10
 18560 0000D3AD 4983E808                	sub r8, 8
 18561 0000D3B1 4983E908                	sub r9, 8
 18562 0000D3B5 48FFC9                  	dec rcx
 18563 0000D3B8 EBE7                    	jmp .L_tc_recycle_frame_loop_00a3
 18564                                  .L_tc_recycle_frame_done_00a3:
 18565 0000D3BA 498D6008                	lea rsp, [r8 + 8]
 18566 0000D3BE 5D                      	pop rbp ; restore the old rbp
 18567 0000D3BF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18568 0000D3C2 C9                      	leave
 18569 0000D3C3 C22000                  	ret 8 * (2 + 2)
 18570                                  .L_lambda_opt_end_0011:	; new closure is in rax
 18571 0000D3C6 C9                      	leave
 18572 0000D3C7 C21800                  	ret AND_KILL_FRAME(1)
 18573                                  .L_lambda_simple_end_0069:	; new closure is in rax
 18574 0000D3CA 803804                  	cmp byte [rax], T_closure
 18575 0000D3CD 0F85D9A10000            	jne L_error_non_closure
 18576 0000D3D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18577 0000D3D6 FF7508                  	push qword [rbp + 8 * 1]
 18578                                   ; old ret addr
 18579 0000D3D9 FF7500                  	push qword [rbp]
 18580                                   ; restore the old rbp
 18581 0000D3DC BB01000000              	mov rbx, 1
 18582 0000D3E1 4883C303                	add rbx, 3
 18583 0000D3E5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18584 0000D3E9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18585 0000D3EE 4C8D4DF8                	lea r9, [rbp - 8]
 18586 0000D3F2 B905000000              	mov rcx, 5
 18587                                  .L_tc_recycle_frame_loop_00a1:
 18588 0000D3F7 4883F900                	cmp rcx, 0
 18589 0000D3FB 7413                    	je .L_tc_recycle_frame_done_00a1
 18590 0000D3FD 4D8B11                  	mov r10, qword [r9]
 18591 0000D400 4D8910                  	mov qword [r8], r10
 18592 0000D403 4983E808                	sub r8, 8
 18593 0000D407 4983E908                	sub r9, 8
 18594 0000D40B 48FFC9                  	dec rcx
 18595 0000D40E EBE7                    	jmp .L_tc_recycle_frame_loop_00a1
 18596                                  .L_tc_recycle_frame_done_00a1:
 18597 0000D410 498D6008                	lea rsp, [r8 + 8]
 18598 0000D414 5D                      	pop rbp ; restore the old rbp
 18599 0000D415 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18600 0000D418 C9                      	leave
 18601 0000D419 C21800                  	ret AND_KILL_FRAME(1)
 18602                                  .L_lambda_simple_end_0068:	; new closure is in rax
 18603 0000D41C 803804                  	cmp byte [rax], T_closure
 18604 0000D41F 0F8587A10000            	jne L_error_non_closure
 18605 0000D425 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18606 0000D428 FF7508                  	push qword [rbp + 8 * 1]
 18607                                   ; old ret addr
 18608 0000D42B FF7500                  	push qword [rbp]
 18609                                   ; restore the old rbp
 18610 0000D42E BB01000000              	mov rbx, 1
 18611 0000D433 4883C303                	add rbx, 3
 18612 0000D437 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18613 0000D43B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18614 0000D440 4C8D4DF8                	lea r9, [rbp - 8]
 18615 0000D444 B905000000              	mov rcx, 5
 18616                                  .L_tc_recycle_frame_loop_009d:
 18617 0000D449 4883F900                	cmp rcx, 0
 18618 0000D44D 7413                    	je .L_tc_recycle_frame_done_009d
 18619 0000D44F 4D8B11                  	mov r10, qword [r9]
 18620 0000D452 4D8910                  	mov qword [r8], r10
 18621 0000D455 4983E808                	sub r8, 8
 18622 0000D459 4983E908                	sub r9, 8
 18623 0000D45D 48FFC9                  	dec rcx
 18624 0000D460 EBE7                    	jmp .L_tc_recycle_frame_loop_009d
 18625                                  .L_tc_recycle_frame_done_009d:
 18626 0000D462 498D6008                	lea rsp, [r8 + 8]
 18627 0000D466 5D                      	pop rbp ; restore the old rbp
 18628 0000D467 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18629 0000D46A C9                      	leave
 18630 0000D46B C21800                  	ret AND_KILL_FRAME(1)
 18631                                  .L_lambda_simple_end_0064:	; new closure is in rax
 18632 0000D46E 803804                  	cmp byte [rax], T_closure
 18633 0000D471 0F8535A10000            	jne L_error_non_closure
 18634 0000D477 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18635 0000D47A FF7508                  	push qword [rbp + 8 * 1]
 18636                                   ; old ret addr
 18637 0000D47D FF7500                  	push qword [rbp]
 18638                                   ; restore the old rbp
 18639 0000D480 BB01000000              	mov rbx, 1
 18640 0000D485 4883C303                	add rbx, 3
 18641 0000D489 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 18642 0000D48D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 18643 0000D492 4C8D4DF8                	lea r9, [rbp - 8]
 18644 0000D496 B905000000              	mov rcx, 5
 18645                                  .L_tc_recycle_frame_loop_009b:
 18646 0000D49B 4883F900                	cmp rcx, 0
 18647 0000D49F 7413                    	je .L_tc_recycle_frame_done_009b
 18648 0000D4A1 4D8B11                  	mov r10, qword [r9]
 18649 0000D4A4 4D8910                  	mov qword [r8], r10
 18650 0000D4A7 4983E808                	sub r8, 8
 18651 0000D4AB 4983E908                	sub r9, 8
 18652 0000D4AF 48FFC9                  	dec rcx
 18653 0000D4B2 EBE7                    	jmp .L_tc_recycle_frame_loop_009b
 18654                                  .L_tc_recycle_frame_done_009b:
 18655 0000D4B4 498D6008                	lea rsp, [r8 + 8]
 18656 0000D4B8 5D                      	pop rbp ; restore the old rbp
 18657 0000D4B9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18658 0000D4BC C9                      	leave
 18659 0000D4BD C22000                  	ret AND_KILL_FRAME(2)
 18660                                  .L_lambda_simple_end_0063:	; new closure is in rax
 18661 0000D4C0 50                      	push rax
 18662 0000D4C1 6A01                    	push 1	; arg count
 18663 0000D4C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18664 0000D4C8 E888A10000              	call malloc
 18665 0000D4CD 50                      	push rax
 18666 0000D4CE BF00000000              	mov rdi, 8 * 0	; new rib
 18667 0000D4D3 E87DA10000              	call malloc
 18668 0000D4D8 50                      	push rax
 18669 0000D4D9 BF08000000              	mov rdi, 8 * 1	; extended env
 18670 0000D4DE E872A10000              	call malloc
 18671 0000D4E3 488B7D10                	mov rdi, ENV
 18672 0000D4E7 BE00000000              	mov rsi, 0
 18673 0000D4EC BA01000000              	mov rdx, 1
 18674                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 18675 0000D4F1 4883FE00                	cmp rsi, 0
 18676 0000D4F5 7410                    	je .L_lambda_simple_env_end_006b
 18677 0000D4F7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18678 0000D4FB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18679 0000D4FF 48FFC6                  	inc rsi
 18680 0000D502 48FFC2                  	inc rdx
 18681 0000D505 EBEA                    	jmp .L_lambda_simple_env_loop_006b
 18682                                  .L_lambda_simple_env_end_006b:
 18683 0000D507 5B                      	pop rbx
 18684 0000D508 BE00000000              	mov rsi, 0
 18685                                  .L_lambda_simple_params_loop_006b:	; copy params
 18686 0000D50D 4883FE00                	cmp rsi, 0
 18687 0000D511 740E                    	je .L_lambda_simple_params_end_006b
 18688 0000D513 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18689 0000D518 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18690 0000D51C 48FFC6                  	inc rsi
 18691 0000D51F EBEC                    	jmp .L_lambda_simple_params_loop_006b
 18692                                  .L_lambda_simple_params_end_006b:
 18693 0000D521 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18694 0000D524 4889C3                  	mov rbx, rax
 18695 0000D527 58                      	pop rax
 18696 0000D528 C60004                  	mov byte [rax], T_closure
 18697 0000D52B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18698 0000D52F 48C74009[3CD50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 18699 0000D537 E947010000              	jmp .L_lambda_simple_end_006b
 18700                                  .L_lambda_simple_code_006b:	; lambda-simple body
 18701 0000D53C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18702 0000D542 740B                    	je .L_lambda_simple_arity_check_ok_006b
 18703 0000D544 FF742410                	push qword [rsp + 8 * 2]
 18704 0000D548 6A01                    	push 1
 18705 0000D54A E9BFA00000              	jmp L_error_incorrect_arity_simple
 18706                                  .L_lambda_simple_arity_check_ok_006b:
 18707 0000D54F C8000000                	enter 0, 0
 18708                                  	; preparing a non-tail-call
 18709 0000D553 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18710 0000D55B 803805                  	cmp byte [rax], T_undefined
 18711 0000D55E 0F84C49F0000            	je L_error_fvar_undefined
 18712 0000D564 50                      	push rax
 18713 0000D565 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 18714 0000D56D 803805                  	cmp byte [rax], T_undefined
 18715 0000D570 0F84B29F0000            	je L_error_fvar_undefined
 18716 0000D576 50                      	push rax
 18717 0000D577 6A02                    	push 2	; arg count
 18718 0000D579 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18719 0000D57D 803804                  	cmp byte [rax], T_closure
 18720 0000D580 0F8526A00000            	jne L_error_non_closure
 18721 0000D586 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18722 0000D589 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18723 0000D58C 48890425[AB160000]      	mov qword [free_var_134], rax
 18724 0000D594 48B8-                   	mov rax, sob_void
 18724 0000D596 [0000000000000000] 
 18725                                  
 18726                                  	; preparing a non-tail-call
 18727 0000D59E 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18728 0000D5A6 803805                  	cmp byte [rax], T_undefined
 18729 0000D5A9 0F84799F0000            	je L_error_fvar_undefined
 18730 0000D5AF 50                      	push rax
 18731 0000D5B0 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 18732 0000D5B8 803805                  	cmp byte [rax], T_undefined
 18733 0000D5BB 0F84679F0000            	je L_error_fvar_undefined
 18734 0000D5C1 50                      	push rax
 18735 0000D5C2 6A02                    	push 2	; arg count
 18736 0000D5C4 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18737 0000D5C8 803804                  	cmp byte [rax], T_closure
 18738 0000D5CB 0F85DB9F0000            	jne L_error_non_closure
 18739 0000D5D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18740 0000D5D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18741 0000D5D7 48890425[DF150000]      	mov qword [free_var_122], rax
 18742 0000D5DF 48B8-                   	mov rax, sob_void
 18742 0000D5E1 [0000000000000000] 
 18743                                  
 18744                                  	; preparing a non-tail-call
 18745 0000D5E9 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18746 0000D5F1 803805                  	cmp byte [rax], T_undefined
 18747 0000D5F4 0F842E9F0000            	je L_error_fvar_undefined
 18748 0000D5FA 50                      	push rax
 18749 0000D5FB 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 18750 0000D603 803805                  	cmp byte [rax], T_undefined
 18751 0000D606 0F841C9F0000            	je L_error_fvar_undefined
 18752 0000D60C 50                      	push rax
 18753 0000D60D 6A02                    	push 2	; arg count
 18754 0000D60F 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18755 0000D613 803804                  	cmp byte [rax], T_closure
 18756 0000D616 0F85909F0000            	jne L_error_non_closure
 18757 0000D61C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18758 0000D61F FF5009                  	call SOB_CLOSURE_CODE(rax)
 18759 0000D622 48890425[DE160000]      	mov qword [free_var_137], rax
 18760 0000D62A 48B8-                   	mov rax, sob_void
 18760 0000D62C [0000000000000000] 
 18761                                  
 18762                                  	; preparing a non-tail-call
 18763 0000D634 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18764 0000D63C 803805                  	cmp byte [rax], T_undefined
 18765 0000D63F 0F84E39E0000            	je L_error_fvar_undefined
 18766 0000D645 50                      	push rax
 18767 0000D646 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 18768 0000D64E 803805                  	cmp byte [rax], T_undefined
 18769 0000D651 0F84D19E0000            	je L_error_fvar_undefined
 18770 0000D657 50                      	push rax
 18771 0000D658 6A02                    	push 2	; arg count
 18772 0000D65A 488B4520                	mov rax, PARAM(0)	; param make-string<?
 18773 0000D65E 803804                  	cmp byte [rax], T_closure
 18774 0000D661 0F85459F0000            	jne L_error_non_closure
 18775 0000D667 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18776 0000D66A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18777 0000D66D 48890425[12160000]      	mov qword [free_var_125], rax
 18778 0000D675 48B8-                   	mov rax, sob_void
 18778 0000D677 [0000000000000000] 
 18779 0000D67F C9                      	leave
 18780 0000D680 C21800                  	ret AND_KILL_FRAME(1)
 18781                                  .L_lambda_simple_end_006b:	; new closure is in rax
 18782 0000D683 803804                  	cmp byte [rax], T_closure
 18783 0000D686 0F85209F0000            	jne L_error_non_closure
 18784 0000D68C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18785 0000D68F FF5009                  	call SOB_CLOSURE_CODE(rax)
 18786                                  
 18787 0000D692 4889C7                  	mov rdi, rax
 18788 0000D695 E810A20000              	call print_sexpr_if_not_void
 18789                                  	; preparing a non-tail-call
 18790 0000D69A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18791 0000D69F E8B19F0000              	call malloc
 18792 0000D6A4 50                      	push rax
 18793 0000D6A5 BF00000000              	mov rdi, 8 * 0	; new rib
 18794 0000D6AA E8A69F0000              	call malloc
 18795 0000D6AF 50                      	push rax
 18796 0000D6B0 BF08000000              	mov rdi, 8 * 1	; extended env
 18797 0000D6B5 E89B9F0000              	call malloc
 18798 0000D6BA 488B7D10                	mov rdi, ENV
 18799 0000D6BE BE00000000              	mov rsi, 0
 18800 0000D6C3 BA01000000              	mov rdx, 1
 18801                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 18802 0000D6C8 4883FE00                	cmp rsi, 0
 18803 0000D6CC 7410                    	je .L_lambda_simple_env_end_006c
 18804 0000D6CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18805 0000D6D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18806 0000D6D6 48FFC6                  	inc rsi
 18807 0000D6D9 48FFC2                  	inc rdx
 18808 0000D6DC EBEA                    	jmp .L_lambda_simple_env_loop_006c
 18809                                  .L_lambda_simple_env_end_006c:
 18810 0000D6DE 5B                      	pop rbx
 18811 0000D6DF BE00000000              	mov rsi, 0
 18812                                  .L_lambda_simple_params_loop_006c:	; copy params
 18813 0000D6E4 4883FE00                	cmp rsi, 0
 18814 0000D6E8 740E                    	je .L_lambda_simple_params_end_006c
 18815 0000D6EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18816 0000D6EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18817 0000D6F3 48FFC6                  	inc rsi
 18818 0000D6F6 EBEC                    	jmp .L_lambda_simple_params_loop_006c
 18819                                  .L_lambda_simple_params_end_006c:
 18820 0000D6F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18821 0000D6FB 4889C3                  	mov rbx, rax
 18822 0000D6FE 58                      	pop rax
 18823 0000D6FF C60004                  	mov byte [rax], T_closure
 18824 0000D702 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18825 0000D706 48C74009[13D70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 18826 0000D70E E9C80C0000              	jmp .L_lambda_simple_end_006c
 18827                                  .L_lambda_simple_code_006c:	; lambda-simple body
 18828 0000D713 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18829 0000D719 740B                    	je .L_lambda_simple_arity_check_ok_006c
 18830 0000D71B FF742410                	push qword [rsp + 8 * 2]
 18831 0000D71F 6A02                    	push 2
 18832 0000D721 E9E89E0000              	jmp L_error_incorrect_arity_simple
 18833                                  .L_lambda_simple_arity_check_ok_006c:
 18834 0000D726 C8000000                	enter 0, 0
 18835                                  	; preparing a tail-call
 18836 0000D72A 48B8-                   	mov rax, L_constants + 1993
 18836 0000D72C [C907000000000000] 
 18837 0000D734 50                      	push rax
 18838 0000D735 6A01                    	push 1	; arg count
 18839 0000D737 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18840 0000D73C E8149F0000              	call malloc
 18841 0000D741 50                      	push rax
 18842 0000D742 BF10000000              	mov rdi, 8 * 2	; new rib
 18843 0000D747 E8099F0000              	call malloc
 18844 0000D74C 50                      	push rax
 18845 0000D74D BF10000000              	mov rdi, 8 * 2	; extended env
 18846 0000D752 E8FE9E0000              	call malloc
 18847 0000D757 488B7D10                	mov rdi, ENV
 18848 0000D75B BE00000000              	mov rsi, 0
 18849 0000D760 BA01000000              	mov rdx, 1
 18850                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 18851 0000D765 4883FE01                	cmp rsi, 1
 18852 0000D769 7410                    	je .L_lambda_simple_env_end_006d
 18853 0000D76B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18854 0000D76F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18855 0000D773 48FFC6                  	inc rsi
 18856 0000D776 48FFC2                  	inc rdx
 18857 0000D779 EBEA                    	jmp .L_lambda_simple_env_loop_006d
 18858                                  .L_lambda_simple_env_end_006d:
 18859 0000D77B 5B                      	pop rbx
 18860 0000D77C BE00000000              	mov rsi, 0
 18861                                  .L_lambda_simple_params_loop_006d:	; copy params
 18862 0000D781 4883FE02                	cmp rsi, 2
 18863 0000D785 740E                    	je .L_lambda_simple_params_end_006d
 18864 0000D787 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18865 0000D78C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18866 0000D790 48FFC6                  	inc rsi
 18867 0000D793 EBEC                    	jmp .L_lambda_simple_params_loop_006d
 18868                                  .L_lambda_simple_params_end_006d:
 18869 0000D795 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18870 0000D798 4889C3                  	mov rbx, rax
 18871 0000D79B 58                      	pop rax
 18872 0000D79C C60004                  	mov byte [rax], T_closure
 18873 0000D79F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18874 0000D7A3 48C74009[B0D70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 18875 0000D7AB E9D90B0000              	jmp .L_lambda_simple_end_006d
 18876                                  .L_lambda_simple_code_006d:	; lambda-simple body
 18877 0000D7B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18878 0000D7B6 740B                    	je .L_lambda_simple_arity_check_ok_006d
 18879 0000D7B8 FF742410                	push qword [rsp + 8 * 2]
 18880 0000D7BC 6A01                    	push 1
 18881 0000D7BE E94B9E0000              	jmp L_error_incorrect_arity_simple
 18882                                  .L_lambda_simple_arity_check_ok_006d:
 18883 0000D7C3 C8000000                	enter 0, 0
 18884 0000D7C7 BF08000000              	mov rdi, 8*1
 18885 0000D7CC E8849E0000              	call malloc
 18886 0000D7D1 488B5D20                	mov rbx, PARAM(0)
 18887 0000D7D5 488918                  	mov qword [rax], rbx
 18888 0000D7D8 48894520                	mov PARAM(0), rax
 18889 0000D7DC 48B8-                   	mov rax, sob_void
 18889 0000D7DE [0000000000000000] 
 18890                                  
 18891 0000D7E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18892 0000D7EB E8659E0000              	call malloc
 18893 0000D7F0 50                      	push rax
 18894 0000D7F1 BF08000000              	mov rdi, 8 * 1	; new rib
 18895 0000D7F6 E85A9E0000              	call malloc
 18896 0000D7FB 50                      	push rax
 18897 0000D7FC BF18000000              	mov rdi, 8 * 3	; extended env
 18898 0000D801 E84F9E0000              	call malloc
 18899 0000D806 488B7D10                	mov rdi, ENV
 18900 0000D80A BE00000000              	mov rsi, 0
 18901 0000D80F BA01000000              	mov rdx, 1
 18902                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 18903 0000D814 4883FE02                	cmp rsi, 2
 18904 0000D818 7410                    	je .L_lambda_simple_env_end_006e
 18905 0000D81A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18906 0000D81E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18907 0000D822 48FFC6                  	inc rsi
 18908 0000D825 48FFC2                  	inc rdx
 18909 0000D828 EBEA                    	jmp .L_lambda_simple_env_loop_006e
 18910                                  .L_lambda_simple_env_end_006e:
 18911 0000D82A 5B                      	pop rbx
 18912 0000D82B BE00000000              	mov rsi, 0
 18913                                  .L_lambda_simple_params_loop_006e:	; copy params
 18914 0000D830 4883FE01                	cmp rsi, 1
 18915 0000D834 740E                    	je .L_lambda_simple_params_end_006e
 18916 0000D836 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18917 0000D83B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18918 0000D83F 48FFC6                  	inc rsi
 18919 0000D842 EBEC                    	jmp .L_lambda_simple_params_loop_006e
 18920                                  .L_lambda_simple_params_end_006e:
 18921 0000D844 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18922 0000D847 4889C3                  	mov rbx, rax
 18923 0000D84A 58                      	pop rax
 18924 0000D84B C60004                  	mov byte [rax], T_closure
 18925 0000D84E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18926 0000D852 48C74009[5FD80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 18927 0000D85A E94C020000              	jmp .L_lambda_simple_end_006e
 18928                                  .L_lambda_simple_code_006e:	; lambda-simple body
 18929 0000D85F 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18930 0000D865 740B                    	je .L_lambda_simple_arity_check_ok_006e
 18931 0000D867 FF742410                	push qword [rsp + 8 * 2]
 18932 0000D86B 6A05                    	push 5
 18933 0000D86D E99C9D0000              	jmp L_error_incorrect_arity_simple
 18934                                  .L_lambda_simple_arity_check_ok_006e:
 18935 0000D872 C8000000                	enter 0, 0
 18936                                  	; preparing a non-tail-call
 18937 0000D876 488B4530                	mov rax, PARAM(2)	; param len1
 18938 0000D87A 50                      	push rax
 18939 0000D87B 488B4520                	mov rax, PARAM(0)	; param i
 18940 0000D87F 50                      	push rax
 18941 0000D880 6A02                    	push 2	; arg count
 18942 0000D882 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 18943 0000D88A 803805                  	cmp byte [rax], T_undefined
 18944 0000D88D 0F84959C0000            	je L_error_fvar_undefined
 18945 0000D893 803804                  	cmp byte [rax], T_closure
 18946 0000D896 0F85109D0000            	jne L_error_non_closure
 18947 0000D89C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18948 0000D89F FF5009                  	call SOB_CLOSURE_CODE(rax)
 18949 0000D8A2 483D[02000000]          	cmp rax, sob_boolean_false
 18950 0000D8A8 0F85F9010000            	jne .L_or_end_000a
 18951                                  	; preparing a non-tail-call
 18952                                  	; preparing a non-tail-call
 18953 0000D8AE 488B4520                	mov rax, PARAM(0)	; param i
 18954 0000D8B2 50                      	push rax
 18955 0000D8B3 488B4538                	mov rax, PARAM(3)	; param str2
 18956 0000D8B7 50                      	push rax
 18957 0000D8B8 6A02                    	push 2	; arg count
 18958 0000D8BA 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18959 0000D8C2 803805                  	cmp byte [rax], T_undefined
 18960 0000D8C5 0F845D9C0000            	je L_error_fvar_undefined
 18961 0000D8CB 803804                  	cmp byte [rax], T_closure
 18962 0000D8CE 0F85D89C0000            	jne L_error_non_closure
 18963 0000D8D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18964 0000D8D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18965 0000D8DA 50                      	push rax
 18966                                  	; preparing a non-tail-call
 18967 0000D8DB 488B4520                	mov rax, PARAM(0)	; param i
 18968 0000D8DF 50                      	push rax
 18969 0000D8E0 488B4528                	mov rax, PARAM(1)	; param str1
 18970 0000D8E4 50                      	push rax
 18971 0000D8E5 6A02                    	push 2	; arg count
 18972 0000D8E7 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18973 0000D8EF 803805                  	cmp byte [rax], T_undefined
 18974 0000D8F2 0F84309C0000            	je L_error_fvar_undefined
 18975 0000D8F8 803804                  	cmp byte [rax], T_closure
 18976 0000D8FB 0F85AB9C0000            	jne L_error_non_closure
 18977 0000D901 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18978 0000D904 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18979 0000D907 50                      	push rax
 18980 0000D908 6A02                    	push 2	; arg count
 18981 0000D90A 488B4510                	mov rax, ENV
 18982 0000D90E 488B4008                	mov rax, qword [rax + 8 * 1]
 18983 0000D912 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18984 0000D915 803804                  	cmp byte [rax], T_closure
 18985 0000D918 0F858E9C0000            	jne L_error_non_closure
 18986 0000D91E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18987 0000D921 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18988 0000D924 483D[02000000]          	cmp rax, sob_boolean_false
 18989 0000D92A 0F8577010000            	jne .L_or_end_000a
 18990                                  	; preparing a non-tail-call
 18991 0000D930 488B4530                	mov rax, PARAM(2)	; param len1
 18992 0000D934 50                      	push rax
 18993 0000D935 488B4520                	mov rax, PARAM(0)	; param i
 18994 0000D939 50                      	push rax
 18995 0000D93A 6A02                    	push 2	; arg count
 18996 0000D93C 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 18997 0000D944 803805                  	cmp byte [rax], T_undefined
 18998 0000D947 0F84DB9B0000            	je L_error_fvar_undefined
 18999 0000D94D 803804                  	cmp byte [rax], T_closure
 19000 0000D950 0F85569C0000            	jne L_error_non_closure
 19001 0000D956 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19002 0000D959 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19003 0000D95C 483D[02000000]          	cmp rax, sob_boolean_false
 19004 0000D962 0F8435010000            	je .L_if_else_0059
 19005                                  	; preparing a non-tail-call
 19006                                  	; preparing a non-tail-call
 19007 0000D968 488B4520                	mov rax, PARAM(0)	; param i
 19008 0000D96C 50                      	push rax
 19009 0000D96D 488B4538                	mov rax, PARAM(3)	; param str2
 19010 0000D971 50                      	push rax
 19011 0000D972 6A02                    	push 2	; arg count
 19012 0000D974 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19013 0000D97C 803805                  	cmp byte [rax], T_undefined
 19014 0000D97F 0F84A39B0000            	je L_error_fvar_undefined
 19015 0000D985 803804                  	cmp byte [rax], T_closure
 19016 0000D988 0F851E9C0000            	jne L_error_non_closure
 19017 0000D98E FF7001                  	push SOB_CLOSURE_ENV(rax)
 19018 0000D991 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19019 0000D994 50                      	push rax
 19020                                  	; preparing a non-tail-call
 19021 0000D995 488B4520                	mov rax, PARAM(0)	; param i
 19022 0000D999 50                      	push rax
 19023 0000D99A 488B4528                	mov rax, PARAM(1)	; param str1
 19024 0000D99E 50                      	push rax
 19025 0000D99F 6A02                    	push 2	; arg count
 19026 0000D9A1 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19027 0000D9A9 803805                  	cmp byte [rax], T_undefined
 19028 0000D9AC 0F84769B0000            	je L_error_fvar_undefined
 19029 0000D9B2 803804                  	cmp byte [rax], T_closure
 19030 0000D9B5 0F85F19B0000            	jne L_error_non_closure
 19031 0000D9BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19032 0000D9BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 19033 0000D9C1 50                      	push rax
 19034 0000D9C2 6A02                    	push 2	; arg count
 19035 0000D9C4 488B4510                	mov rax, ENV
 19036 0000D9C8 488B4008                	mov rax, qword [rax + 8 * 1]
 19037 0000D9CC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19038 0000D9D0 803804                  	cmp byte [rax], T_closure
 19039 0000D9D3 0F85D39B0000            	jne L_error_non_closure
 19040 0000D9D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19041 0000D9DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19042 0000D9DF 483D[02000000]          	cmp rax, sob_boolean_false
 19043 0000D9E5 0F84A6000000            	je .L_if_else_0058
 19044                                  	; preparing a tail-call
 19045 0000D9EB 488B4540                	mov rax, PARAM(4)	; param len2
 19046 0000D9EF 50                      	push rax
 19047 0000D9F0 488B4538                	mov rax, PARAM(3)	; param str2
 19048 0000D9F4 50                      	push rax
 19049 0000D9F5 488B4530                	mov rax, PARAM(2)	; param len1
 19050 0000D9F9 50                      	push rax
 19051 0000D9FA 488B4528                	mov rax, PARAM(1)	; param str1
 19052 0000D9FE 50                      	push rax
 19053                                  	; preparing a non-tail-call
 19054 0000D9FF 48B8-                   	mov rax, L_constants + 2270
 19054 0000DA01 [DE08000000000000] 
 19055 0000DA09 50                      	push rax
 19056 0000DA0A 488B4520                	mov rax, PARAM(0)	; param i
 19057 0000DA0E 50                      	push rax
 19058 0000DA0F 6A02                    	push 2	; arg count
 19059 0000DA11 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 19060 0000DA19 803805                  	cmp byte [rax], T_undefined
 19061 0000DA1C 0F84069B0000            	je L_error_fvar_undefined
 19062 0000DA22 803804                  	cmp byte [rax], T_closure
 19063 0000DA25 0F85819B0000            	jne L_error_non_closure
 19064 0000DA2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 19065 0000DA2E FF5009                  	call SOB_CLOSURE_CODE(rax)
 19066 0000DA31 50                      	push rax
 19067 0000DA32 6A05                    	push 5	; arg count
 19068 0000DA34 488B4510                	mov rax, ENV
 19069 0000DA38 488B00                  	mov rax, qword [rax + 8 * 0]
 19070 0000DA3B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19071 0000DA3E 488B00                  	mov rax, qword [rax]
 19072 0000DA41 803804                  	cmp byte [rax], T_closure
 19073 0000DA44 0F85629B0000            	jne L_error_non_closure
 19074 0000DA4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19075 0000DA4D FF7508                  	push qword [rbp + 8 * 1]
 19076                                   ; old ret addr
 19077 0000DA50 FF7500                  	push qword [rbp]
 19078                                   ; restore the old rbp
 19079 0000DA53 BB05000000              	mov rbx, 5
 19080 0000DA58 4883C303                	add rbx, 3
 19081 0000DA5C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19082 0000DA60 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19083 0000DA65 4C8D4DF8                	lea r9, [rbp - 8]
 19084 0000DA69 B909000000              	mov rcx, 9
 19085                                  .L_tc_recycle_frame_loop_00a5:
 19086 0000DA6E 4883F900                	cmp rcx, 0
 19087 0000DA72 7413                    	je .L_tc_recycle_frame_done_00a5
 19088 0000DA74 4D8B11                  	mov r10, qword [r9]
 19089 0000DA77 4D8910                  	mov qword [r8], r10
 19090 0000DA7A 4983E808                	sub r8, 8
 19091 0000DA7E 4983E908                	sub r9, 8
 19092 0000DA82 48FFC9                  	dec rcx
 19093 0000DA85 EBE7                    	jmp .L_tc_recycle_frame_loop_00a5
 19094                                  .L_tc_recycle_frame_done_00a5:
 19095 0000DA87 498D6008                	lea rsp, [r8 + 8]
 19096 0000DA8B 5D                      	pop rbp ; restore the old rbp
 19097 0000DA8C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19098 0000DA8F EB0A                    	jmp .L_if_end_0058
 19099                                  .L_if_else_0058:
 19100 0000DA91 48B8-                   	mov rax, L_constants + 2
 19100 0000DA93 [0200000000000000] 
 19101                                  .L_if_end_0058:
 19102 0000DA9B EB0A                    	jmp .L_if_end_0059
 19103                                  .L_if_else_0059:
 19104 0000DA9D 48B8-                   	mov rax, L_constants + 2
 19104 0000DA9F [0200000000000000] 
 19105                                  .L_if_end_0059:
 19106                                  .L_or_end_000a:
 19107 0000DAA7 C9                      	leave
 19108 0000DAA8 C23800                  	ret AND_KILL_FRAME(5)
 19109                                  .L_lambda_simple_end_006e:	; new closure is in rax
 19110 0000DAAB 50                      	push rax
 19111 0000DAAC 488B4520                	mov rax, PARAM(0)	; param run
 19112 0000DAB0 8F00                    	pop qword [rax]
 19113 0000DAB2 48B8-                   	mov rax, sob_void
 19113 0000DAB4 [0000000000000000] 
 19114                                  
 19115                                  	; preparing a tail-call
 19116 0000DABC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19117 0000DAC1 E88F9B0000              	call malloc
 19118 0000DAC6 50                      	push rax
 19119 0000DAC7 BF08000000              	mov rdi, 8 * 1	; new rib
 19120 0000DACC E8849B0000              	call malloc
 19121 0000DAD1 50                      	push rax
 19122 0000DAD2 BF18000000              	mov rdi, 8 * 3	; extended env
 19123 0000DAD7 E8799B0000              	call malloc
 19124 0000DADC 488B7D10                	mov rdi, ENV
 19125 0000DAE0 BE00000000              	mov rsi, 0
 19126 0000DAE5 BA01000000              	mov rdx, 1
 19127                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 19128 0000DAEA 4883FE02                	cmp rsi, 2
 19129 0000DAEE 7410                    	je .L_lambda_simple_env_end_006f
 19130 0000DAF0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19131 0000DAF4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19132 0000DAF8 48FFC6                  	inc rsi
 19133 0000DAFB 48FFC2                  	inc rdx
 19134 0000DAFE EBEA                    	jmp .L_lambda_simple_env_loop_006f
 19135                                  .L_lambda_simple_env_end_006f:
 19136 0000DB00 5B                      	pop rbx
 19137 0000DB01 BE00000000              	mov rsi, 0
 19138                                  .L_lambda_simple_params_loop_006f:	; copy params
 19139 0000DB06 4883FE01                	cmp rsi, 1
 19140 0000DB0A 740E                    	je .L_lambda_simple_params_end_006f
 19141 0000DB0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19142 0000DB11 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19143 0000DB15 48FFC6                  	inc rsi
 19144 0000DB18 EBEC                    	jmp .L_lambda_simple_params_loop_006f
 19145                                  .L_lambda_simple_params_end_006f:
 19146 0000DB1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19147 0000DB1D 4889C3                  	mov rbx, rax
 19148 0000DB20 58                      	pop rax
 19149 0000DB21 C60004                  	mov byte [rax], T_closure
 19150 0000DB24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19151 0000DB28 48C74009[35DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 19152 0000DB30 E9A0020000              	jmp .L_lambda_simple_end_006f
 19153                                  .L_lambda_simple_code_006f:	; lambda-simple body
 19154 0000DB35 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19155 0000DB3B 740B                    	je .L_lambda_simple_arity_check_ok_006f
 19156 0000DB3D FF742410                	push qword [rsp + 8 * 2]
 19157 0000DB41 6A02                    	push 2
 19158 0000DB43 E9C69A0000              	jmp L_error_incorrect_arity_simple
 19159                                  .L_lambda_simple_arity_check_ok_006f:
 19160 0000DB48 C8000000                	enter 0, 0
 19161                                  	; preparing a tail-call
 19162                                  	; preparing a non-tail-call
 19163 0000DB4C 488B4528                	mov rax, PARAM(1)	; param str2
 19164 0000DB50 50                      	push rax
 19165 0000DB51 6A01                    	push 1	; arg count
 19166 0000DB53 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19167 0000DB5B 803805                  	cmp byte [rax], T_undefined
 19168 0000DB5E 0F84C4990000            	je L_error_fvar_undefined
 19169 0000DB64 803804                  	cmp byte [rax], T_closure
 19170 0000DB67 0F853F9A0000            	jne L_error_non_closure
 19171 0000DB6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19172 0000DB70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19173 0000DB73 50                      	push rax
 19174                                  	; preparing a non-tail-call
 19175 0000DB74 488B4520                	mov rax, PARAM(0)	; param str1
 19176 0000DB78 50                      	push rax
 19177 0000DB79 6A01                    	push 1	; arg count
 19178 0000DB7B 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19179 0000DB83 803805                  	cmp byte [rax], T_undefined
 19180 0000DB86 0F849C990000            	je L_error_fvar_undefined
 19181 0000DB8C 803804                  	cmp byte [rax], T_closure
 19182 0000DB8F 0F85179A0000            	jne L_error_non_closure
 19183 0000DB95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19184 0000DB98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19185 0000DB9B 50                      	push rax
 19186 0000DB9C 6A02                    	push 2	; arg count
 19187 0000DB9E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19188 0000DBA3 E8AD9A0000              	call malloc
 19189 0000DBA8 50                      	push rax
 19190 0000DBA9 BF10000000              	mov rdi, 8 * 2	; new rib
 19191 0000DBAE E8A29A0000              	call malloc
 19192 0000DBB3 50                      	push rax
 19193 0000DBB4 BF20000000              	mov rdi, 8 * 4	; extended env
 19194 0000DBB9 E8979A0000              	call malloc
 19195 0000DBBE 488B7D10                	mov rdi, ENV
 19196 0000DBC2 BE00000000              	mov rsi, 0
 19197 0000DBC7 BA01000000              	mov rdx, 1
 19198                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 19199 0000DBCC 4883FE03                	cmp rsi, 3
 19200 0000DBD0 7410                    	je .L_lambda_simple_env_end_0070
 19201 0000DBD2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19202 0000DBD6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19203 0000DBDA 48FFC6                  	inc rsi
 19204 0000DBDD 48FFC2                  	inc rdx
 19205 0000DBE0 EBEA                    	jmp .L_lambda_simple_env_loop_0070
 19206                                  .L_lambda_simple_env_end_0070:
 19207 0000DBE2 5B                      	pop rbx
 19208 0000DBE3 BE00000000              	mov rsi, 0
 19209                                  .L_lambda_simple_params_loop_0070:	; copy params
 19210 0000DBE8 4883FE02                	cmp rsi, 2
 19211 0000DBEC 740E                    	je .L_lambda_simple_params_end_0070
 19212 0000DBEE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19213 0000DBF3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19214 0000DBF7 48FFC6                  	inc rsi
 19215 0000DBFA EBEC                    	jmp .L_lambda_simple_params_loop_0070
 19216                                  .L_lambda_simple_params_end_0070:
 19217 0000DBFC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19218 0000DBFF 4889C3                  	mov rbx, rax
 19219 0000DC02 58                      	pop rax
 19220 0000DC03 C60004                  	mov byte [rax], T_closure
 19221 0000DC06 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19222 0000DC0A 48C74009[17DC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 19223 0000DC12 E96C010000              	jmp .L_lambda_simple_end_0070
 19224                                  .L_lambda_simple_code_0070:	; lambda-simple body
 19225 0000DC17 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19226 0000DC1D 740B                    	je .L_lambda_simple_arity_check_ok_0070
 19227 0000DC1F FF742410                	push qword [rsp + 8 * 2]
 19228 0000DC23 6A02                    	push 2
 19229 0000DC25 E9E4990000              	jmp L_error_incorrect_arity_simple
 19230                                  .L_lambda_simple_arity_check_ok_0070:
 19231 0000DC2A C8000000                	enter 0, 0
 19232                                  	; preparing a non-tail-call
 19233 0000DC2E 488B4528                	mov rax, PARAM(1)	; param len2
 19234 0000DC32 50                      	push rax
 19235 0000DC33 488B4520                	mov rax, PARAM(0)	; param len1
 19236 0000DC37 50                      	push rax
 19237 0000DC38 6A02                    	push 2	; arg count
 19238 0000DC3A 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 19239 0000DC42 803805                  	cmp byte [rax], T_undefined
 19240 0000DC45 0F84DD980000            	je L_error_fvar_undefined
 19241 0000DC4B 803804                  	cmp byte [rax], T_closure
 19242 0000DC4E 0F8558990000            	jne L_error_non_closure
 19243 0000DC54 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19244 0000DC57 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19245 0000DC5A 483D[02000000]          	cmp rax, sob_boolean_false
 19246 0000DC60 0F848F000000            	je .L_if_else_005a
 19247                                  	; preparing a tail-call
 19248 0000DC66 488B4528                	mov rax, PARAM(1)	; param len2
 19249 0000DC6A 50                      	push rax
 19250 0000DC6B 488B4510                	mov rax, ENV
 19251 0000DC6F 488B00                  	mov rax, qword [rax + 8 * 0]
 19252 0000DC72 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19253 0000DC76 50                      	push rax
 19254 0000DC77 488B4520                	mov rax, PARAM(0)	; param len1
 19255 0000DC7B 50                      	push rax
 19256 0000DC7C 488B4510                	mov rax, ENV
 19257 0000DC80 488B00                  	mov rax, qword [rax + 8 * 0]
 19258 0000DC83 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19259 0000DC86 50                      	push rax
 19260 0000DC87 48B8-                   	mov rax, L_constants + 2135
 19260 0000DC89 [5708000000000000] 
 19261 0000DC91 50                      	push rax
 19262 0000DC92 6A05                    	push 5	; arg count
 19263 0000DC94 488B4510                	mov rax, ENV
 19264 0000DC98 488B4008                	mov rax, qword [rax + 8 * 1]
 19265 0000DC9C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19266 0000DC9F 488B00                  	mov rax, qword [rax]
 19267 0000DCA2 803804                  	cmp byte [rax], T_closure
 19268 0000DCA5 0F8501990000            	jne L_error_non_closure
 19269 0000DCAB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19270 0000DCAE FF7508                  	push qword [rbp + 8 * 1]
 19271                                   ; old ret addr
 19272 0000DCB1 FF7500                  	push qword [rbp]
 19273                                   ; restore the old rbp
 19274 0000DCB4 BB05000000              	mov rbx, 5
 19275 0000DCB9 4883C303                	add rbx, 3
 19276 0000DCBD 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19277 0000DCC1 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19278 0000DCC6 4C8D4DF8                	lea r9, [rbp - 8]
 19279 0000DCCA B909000000              	mov rcx, 9
 19280                                  .L_tc_recycle_frame_loop_00a8:
 19281 0000DCCF 4883F900                	cmp rcx, 0
 19282 0000DCD3 7413                    	je .L_tc_recycle_frame_done_00a8
 19283 0000DCD5 4D8B11                  	mov r10, qword [r9]
 19284 0000DCD8 4D8910                  	mov qword [r8], r10
 19285 0000DCDB 4983E808                	sub r8, 8
 19286 0000DCDF 4983E908                	sub r9, 8
 19287 0000DCE3 48FFC9                  	dec rcx
 19288 0000DCE6 EBE7                    	jmp .L_tc_recycle_frame_loop_00a8
 19289                                  .L_tc_recycle_frame_done_00a8:
 19290 0000DCE8 498D6008                	lea rsp, [r8 + 8]
 19291 0000DCEC 5D                      	pop rbp ; restore the old rbp
 19292 0000DCED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19293 0000DCF0 E98A000000              	jmp .L_if_end_005a
 19294                                  .L_if_else_005a:
 19295                                  	; preparing a tail-call
 19296 0000DCF5 488B4520                	mov rax, PARAM(0)	; param len1
 19297 0000DCF9 50                      	push rax
 19298 0000DCFA 488B4510                	mov rax, ENV
 19299 0000DCFE 488B00                  	mov rax, qword [rax + 8 * 0]
 19300 0000DD01 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19301 0000DD04 50                      	push rax
 19302 0000DD05 488B4528                	mov rax, PARAM(1)	; param len2
 19303 0000DD09 50                      	push rax
 19304 0000DD0A 488B4510                	mov rax, ENV
 19305 0000DD0E 488B00                  	mov rax, qword [rax + 8 * 0]
 19306 0000DD11 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19307 0000DD15 50                      	push rax
 19308 0000DD16 48B8-                   	mov rax, L_constants + 2135
 19308 0000DD18 [5708000000000000] 
 19309 0000DD20 50                      	push rax
 19310 0000DD21 6A05                    	push 5	; arg count
 19311 0000DD23 488B4510                	mov rax, ENV
 19312 0000DD27 488B4008                	mov rax, qword [rax + 8 * 1]
 19313 0000DD2B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19314 0000DD2E 488B00                  	mov rax, qword [rax]
 19315 0000DD31 803804                  	cmp byte [rax], T_closure
 19316 0000DD34 0F8572980000            	jne L_error_non_closure
 19317 0000DD3A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19318 0000DD3D FF7508                  	push qword [rbp + 8 * 1]
 19319                                   ; old ret addr
 19320 0000DD40 FF7500                  	push qword [rbp]
 19321                                   ; restore the old rbp
 19322 0000DD43 BB05000000              	mov rbx, 5
 19323 0000DD48 4883C303                	add rbx, 3
 19324 0000DD4C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19325 0000DD50 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19326 0000DD55 4C8D4DF8                	lea r9, [rbp - 8]
 19327 0000DD59 B909000000              	mov rcx, 9
 19328                                  .L_tc_recycle_frame_loop_00a9:
 19329 0000DD5E 4883F900                	cmp rcx, 0
 19330 0000DD62 7413                    	je .L_tc_recycle_frame_done_00a9
 19331 0000DD64 4D8B11                  	mov r10, qword [r9]
 19332 0000DD67 4D8910                  	mov qword [r8], r10
 19333 0000DD6A 4983E808                	sub r8, 8
 19334 0000DD6E 4983E908                	sub r9, 8
 19335 0000DD72 48FFC9                  	dec rcx
 19336 0000DD75 EBE7                    	jmp .L_tc_recycle_frame_loop_00a9
 19337                                  .L_tc_recycle_frame_done_00a9:
 19338 0000DD77 498D6008                	lea rsp, [r8 + 8]
 19339 0000DD7B 5D                      	pop rbp ; restore the old rbp
 19340 0000DD7C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19341                                  .L_if_end_005a:
 19342 0000DD7F C9                      	leave
 19343 0000DD80 C22000                  	ret AND_KILL_FRAME(2)
 19344                                  .L_lambda_simple_end_0070:	; new closure is in rax
 19345 0000DD83 803804                  	cmp byte [rax], T_closure
 19346 0000DD86 0F8520980000            	jne L_error_non_closure
 19347 0000DD8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 19348 0000DD8F FF7508                  	push qword [rbp + 8 * 1]
 19349                                   ; old ret addr
 19350 0000DD92 FF7500                  	push qword [rbp]
 19351                                   ; restore the old rbp
 19352 0000DD95 BB02000000              	mov rbx, 2
 19353 0000DD9A 4883C303                	add rbx, 3
 19354 0000DD9E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19355 0000DDA2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19356 0000DDA7 4C8D4DF8                	lea r9, [rbp - 8]
 19357 0000DDAB B906000000              	mov rcx, 6
 19358                                  .L_tc_recycle_frame_loop_00a7:
 19359 0000DDB0 4883F900                	cmp rcx, 0
 19360 0000DDB4 7413                    	je .L_tc_recycle_frame_done_00a7
 19361 0000DDB6 4D8B11                  	mov r10, qword [r9]
 19362 0000DDB9 4D8910                  	mov qword [r8], r10
 19363 0000DDBC 4983E808                	sub r8, 8
 19364 0000DDC0 4983E908                	sub r9, 8
 19365 0000DDC4 48FFC9                  	dec rcx
 19366 0000DDC7 EBE7                    	jmp .L_tc_recycle_frame_loop_00a7
 19367                                  .L_tc_recycle_frame_done_00a7:
 19368 0000DDC9 498D6008                	lea rsp, [r8 + 8]
 19369 0000DDCD 5D                      	pop rbp ; restore the old rbp
 19370 0000DDCE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19371 0000DDD1 C9                      	leave
 19372 0000DDD2 C22000                  	ret AND_KILL_FRAME(2)
 19373                                  .L_lambda_simple_end_006f:	; new closure is in rax
 19374 0000DDD5 50                      	push rax
 19375 0000DDD6 6A01                    	push 1	; arg count
 19376 0000DDD8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19377 0000DDDD E873980000              	call malloc
 19378 0000DDE2 50                      	push rax
 19379 0000DDE3 BF08000000              	mov rdi, 8 * 1	; new rib
 19380 0000DDE8 E868980000              	call malloc
 19381 0000DDED 50                      	push rax
 19382 0000DDEE BF18000000              	mov rdi, 8 * 3	; extended env
 19383 0000DDF3 E85D980000              	call malloc
 19384 0000DDF8 488B7D10                	mov rdi, ENV
 19385 0000DDFC BE00000000              	mov rsi, 0
 19386 0000DE01 BA01000000              	mov rdx, 1
 19387                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 19388 0000DE06 4883FE02                	cmp rsi, 2
 19389 0000DE0A 7410                    	je .L_lambda_simple_env_end_0071
 19390 0000DE0C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19391 0000DE10 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19392 0000DE14 48FFC6                  	inc rsi
 19393 0000DE17 48FFC2                  	inc rdx
 19394 0000DE1A EBEA                    	jmp .L_lambda_simple_env_loop_0071
 19395                                  .L_lambda_simple_env_end_0071:
 19396 0000DE1C 5B                      	pop rbx
 19397 0000DE1D BE00000000              	mov rsi, 0
 19398                                  .L_lambda_simple_params_loop_0071:	; copy params
 19399 0000DE22 4883FE01                	cmp rsi, 1
 19400 0000DE26 740E                    	je .L_lambda_simple_params_end_0071
 19401 0000DE28 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19402 0000DE2D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19403 0000DE31 48FFC6                  	inc rsi
 19404 0000DE34 EBEC                    	jmp .L_lambda_simple_params_loop_0071
 19405                                  .L_lambda_simple_params_end_0071:
 19406 0000DE36 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19407 0000DE39 4889C3                  	mov rbx, rax
 19408 0000DE3C 58                      	pop rax
 19409 0000DE3D C60004                  	mov byte [rax], T_closure
 19410 0000DE40 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19411 0000DE44 48C74009[51DE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 19412 0000DE4C E9E6040000              	jmp .L_lambda_simple_end_0071
 19413                                  .L_lambda_simple_code_0071:	; lambda-simple body
 19414 0000DE51 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19415 0000DE57 740B                    	je .L_lambda_simple_arity_check_ok_0071
 19416 0000DE59 FF742410                	push qword [rsp + 8 * 2]
 19417 0000DE5D 6A01                    	push 1
 19418 0000DE5F E9AA970000              	jmp L_error_incorrect_arity_simple
 19419                                  .L_lambda_simple_arity_check_ok_0071:
 19420 0000DE64 C8000000                	enter 0, 0
 19421                                  	; preparing a tail-call
 19422 0000DE68 48B8-                   	mov rax, L_constants + 1993
 19422 0000DE6A [C907000000000000] 
 19423 0000DE72 50                      	push rax
 19424 0000DE73 6A01                    	push 1	; arg count
 19425 0000DE75 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19426 0000DE7A E8D6970000              	call malloc
 19427 0000DE7F 50                      	push rax
 19428 0000DE80 BF08000000              	mov rdi, 8 * 1	; new rib
 19429 0000DE85 E8CB970000              	call malloc
 19430 0000DE8A 50                      	push rax
 19431 0000DE8B BF20000000              	mov rdi, 8 * 4	; extended env
 19432 0000DE90 E8C0970000              	call malloc
 19433 0000DE95 488B7D10                	mov rdi, ENV
 19434 0000DE99 BE00000000              	mov rsi, 0
 19435 0000DE9E BA01000000              	mov rdx, 1
 19436                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 19437 0000DEA3 4883FE03                	cmp rsi, 3
 19438 0000DEA7 7410                    	je .L_lambda_simple_env_end_0072
 19439 0000DEA9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19440 0000DEAD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19441 0000DEB1 48FFC6                  	inc rsi
 19442 0000DEB4 48FFC2                  	inc rdx
 19443 0000DEB7 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 19444                                  .L_lambda_simple_env_end_0072:
 19445 0000DEB9 5B                      	pop rbx
 19446 0000DEBA BE00000000              	mov rsi, 0
 19447                                  .L_lambda_simple_params_loop_0072:	; copy params
 19448 0000DEBF 4883FE01                	cmp rsi, 1
 19449 0000DEC3 740E                    	je .L_lambda_simple_params_end_0072
 19450 0000DEC5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19451 0000DECA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19452 0000DECE 48FFC6                  	inc rsi
 19453 0000DED1 EBEC                    	jmp .L_lambda_simple_params_loop_0072
 19454                                  .L_lambda_simple_params_end_0072:
 19455 0000DED3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19456 0000DED6 4889C3                  	mov rbx, rax
 19457 0000DED9 58                      	pop rax
 19458 0000DEDA C60004                  	mov byte [rax], T_closure
 19459 0000DEDD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19460 0000DEE1 48C74009[EEDE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 19461 0000DEE9 E9F7030000              	jmp .L_lambda_simple_end_0072
 19462                                  .L_lambda_simple_code_0072:	; lambda-simple body
 19463 0000DEEE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19464 0000DEF4 740B                    	je .L_lambda_simple_arity_check_ok_0072
 19465 0000DEF6 FF742410                	push qword [rsp + 8 * 2]
 19466 0000DEFA 6A01                    	push 1
 19467 0000DEFC E90D970000              	jmp L_error_incorrect_arity_simple
 19468                                  .L_lambda_simple_arity_check_ok_0072:
 19469 0000DF01 C8000000                	enter 0, 0
 19470 0000DF05 BF08000000              	mov rdi, 8*1
 19471 0000DF0A E846970000              	call malloc
 19472 0000DF0F 488B5D20                	mov rbx, PARAM(0)
 19473 0000DF13 488918                  	mov qword [rax], rbx
 19474 0000DF16 48894520                	mov PARAM(0), rax
 19475 0000DF1A 48B8-                   	mov rax, sob_void
 19475 0000DF1C [0000000000000000] 
 19476                                  
 19477 0000DF24 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19478 0000DF29 E827970000              	call malloc
 19479 0000DF2E 50                      	push rax
 19480 0000DF2F BF08000000              	mov rdi, 8 * 1	; new rib
 19481 0000DF34 E81C970000              	call malloc
 19482 0000DF39 50                      	push rax
 19483 0000DF3A BF28000000              	mov rdi, 8 * 5	; extended env
 19484 0000DF3F E811970000              	call malloc
 19485 0000DF44 488B7D10                	mov rdi, ENV
 19486 0000DF48 BE00000000              	mov rsi, 0
 19487 0000DF4D BA01000000              	mov rdx, 1
 19488                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 19489 0000DF52 4883FE04                	cmp rsi, 4
 19490 0000DF56 7410                    	je .L_lambda_simple_env_end_0073
 19491 0000DF58 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19492 0000DF5C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19493 0000DF60 48FFC6                  	inc rsi
 19494 0000DF63 48FFC2                  	inc rdx
 19495 0000DF66 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 19496                                  .L_lambda_simple_env_end_0073:
 19497 0000DF68 5B                      	pop rbx
 19498 0000DF69 BE00000000              	mov rsi, 0
 19499                                  .L_lambda_simple_params_loop_0073:	; copy params
 19500 0000DF6E 4883FE01                	cmp rsi, 1
 19501 0000DF72 740E                    	je .L_lambda_simple_params_end_0073
 19502 0000DF74 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19503 0000DF79 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19504 0000DF7D 48FFC6                  	inc rsi
 19505 0000DF80 EBEC                    	jmp .L_lambda_simple_params_loop_0073
 19506                                  .L_lambda_simple_params_end_0073:
 19507 0000DF82 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19508 0000DF85 4889C3                  	mov rbx, rax
 19509 0000DF88 58                      	pop rax
 19510 0000DF89 C60004                  	mov byte [rax], T_closure
 19511 0000DF8C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19512 0000DF90 48C74009[9DDF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 19513 0000DF98 E95C010000              	jmp .L_lambda_simple_end_0073
 19514                                  .L_lambda_simple_code_0073:	; lambda-simple body
 19515 0000DF9D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19516 0000DFA3 740B                    	je .L_lambda_simple_arity_check_ok_0073
 19517 0000DFA5 FF742410                	push qword [rsp + 8 * 2]
 19518 0000DFA9 6A02                    	push 2
 19519 0000DFAB E95E960000              	jmp L_error_incorrect_arity_simple
 19520                                  .L_lambda_simple_arity_check_ok_0073:
 19521 0000DFB0 C8000000                	enter 0, 0
 19522                                  	; preparing a non-tail-call
 19523 0000DFB4 488B4528                	mov rax, PARAM(1)	; param strs
 19524 0000DFB8 50                      	push rax
 19525 0000DFB9 6A01                    	push 1	; arg count
 19526 0000DFBB 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 19527 0000DFC3 803805                  	cmp byte [rax], T_undefined
 19528 0000DFC6 0F845C950000            	je L_error_fvar_undefined
 19529 0000DFCC 803804                  	cmp byte [rax], T_closure
 19530 0000DFCF 0F85D7950000            	jne L_error_non_closure
 19531 0000DFD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19532 0000DFD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19533 0000DFDB 483D[02000000]          	cmp rax, sob_boolean_false
 19534 0000DFE1 0F850E010000            	jne .L_or_end_000b
 19535                                  	; preparing a non-tail-call
 19536                                  	; preparing a non-tail-call
 19537 0000DFE7 488B4528                	mov rax, PARAM(1)	; param strs
 19538 0000DFEB 50                      	push rax
 19539 0000DFEC 6A01                    	push 1	; arg count
 19540 0000DFEE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19541 0000DFF6 803805                  	cmp byte [rax], T_undefined
 19542 0000DFF9 0F8429950000            	je L_error_fvar_undefined
 19543 0000DFFF 803804                  	cmp byte [rax], T_closure
 19544 0000E002 0F85A4950000            	jne L_error_non_closure
 19545 0000E008 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19546 0000E00B FF5009                  	call SOB_CLOSURE_CODE(rax)
 19547 0000E00E 50                      	push rax
 19548 0000E00F 488B4520                	mov rax, PARAM(0)	; param str
 19549 0000E013 50                      	push rax
 19550 0000E014 6A02                    	push 2	; arg count
 19551 0000E016 488B4510                	mov rax, ENV
 19552 0000E01A 488B4008                	mov rax, qword [rax + 8 * 1]
 19553 0000E01E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 19554 0000E021 803804                  	cmp byte [rax], T_closure
 19555 0000E024 0F8582950000            	jne L_error_non_closure
 19556 0000E02A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19557 0000E02D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19558 0000E030 483D[02000000]          	cmp rax, sob_boolean_false
 19559 0000E036 0F84AF000000            	je .L_if_else_005b
 19560                                  	; preparing a tail-call
 19561                                  	; preparing a non-tail-call
 19562 0000E03C 488B4528                	mov rax, PARAM(1)	; param strs
 19563 0000E040 50                      	push rax
 19564 0000E041 6A01                    	push 1	; arg count
 19565 0000E043 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 19566 0000E04B 803805                  	cmp byte [rax], T_undefined
 19567 0000E04E 0F84D4940000            	je L_error_fvar_undefined
 19568 0000E054 803804                  	cmp byte [rax], T_closure
 19569 0000E057 0F854F950000            	jne L_error_non_closure
 19570 0000E05D FF7001                  	push SOB_CLOSURE_ENV(rax)
 19571 0000E060 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19572 0000E063 50                      	push rax
 19573                                  	; preparing a non-tail-call
 19574 0000E064 488B4528                	mov rax, PARAM(1)	; param strs
 19575 0000E068 50                      	push rax
 19576 0000E069 6A01                    	push 1	; arg count
 19577 0000E06B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19578 0000E073 803805                  	cmp byte [rax], T_undefined
 19579 0000E076 0F84AC940000            	je L_error_fvar_undefined
 19580 0000E07C 803804                  	cmp byte [rax], T_closure
 19581 0000E07F 0F8527950000            	jne L_error_non_closure
 19582 0000E085 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19583 0000E088 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19584 0000E08B 50                      	push rax
 19585 0000E08C 6A02                    	push 2	; arg count
 19586 0000E08E 488B4510                	mov rax, ENV
 19587 0000E092 488B00                  	mov rax, qword [rax + 8 * 0]
 19588 0000E095 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19589 0000E098 488B00                  	mov rax, qword [rax]
 19590 0000E09B 803804                  	cmp byte [rax], T_closure
 19591 0000E09E 0F8508950000            	jne L_error_non_closure
 19592 0000E0A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19593 0000E0A7 FF7508                  	push qword [rbp + 8 * 1]
 19594                                   ; old ret addr
 19595 0000E0AA FF7500                  	push qword [rbp]
 19596                                   ; restore the old rbp
 19597 0000E0AD BB02000000              	mov rbx, 2
 19598 0000E0B2 4883C303                	add rbx, 3
 19599 0000E0B6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19600 0000E0BA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19601 0000E0BF 4C8D4DF8                	lea r9, [rbp - 8]
 19602 0000E0C3 B906000000              	mov rcx, 6
 19603                                  .L_tc_recycle_frame_loop_00ab:
 19604 0000E0C8 4883F900                	cmp rcx, 0
 19605 0000E0CC 7413                    	je .L_tc_recycle_frame_done_00ab
 19606 0000E0CE 4D8B11                  	mov r10, qword [r9]
 19607 0000E0D1 4D8910                  	mov qword [r8], r10
 19608 0000E0D4 4983E808                	sub r8, 8
 19609 0000E0D8 4983E908                	sub r9, 8
 19610 0000E0DC 48FFC9                  	dec rcx
 19611 0000E0DF EBE7                    	jmp .L_tc_recycle_frame_loop_00ab
 19612                                  .L_tc_recycle_frame_done_00ab:
 19613 0000E0E1 498D6008                	lea rsp, [r8 + 8]
 19614 0000E0E5 5D                      	pop rbp ; restore the old rbp
 19615 0000E0E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19616 0000E0E9 EB0A                    	jmp .L_if_end_005b
 19617                                  .L_if_else_005b:
 19618 0000E0EB 48B8-                   	mov rax, L_constants + 2
 19618 0000E0ED [0200000000000000] 
 19619                                  .L_if_end_005b:
 19620                                  .L_or_end_000b:
 19621 0000E0F5 C9                      	leave
 19622 0000E0F6 C22000                  	ret AND_KILL_FRAME(2)
 19623                                  .L_lambda_simple_end_0073:	; new closure is in rax
 19624 0000E0F9 50                      	push rax
 19625 0000E0FA 488B4520                	mov rax, PARAM(0)	; param run
 19626 0000E0FE 8F00                    	pop qword [rax]
 19627 0000E100 48B8-                   	mov rax, sob_void
 19627 0000E102 [0000000000000000] 
 19628                                  
 19629 0000E10A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19630 0000E10F E841950000              	call malloc
 19631 0000E114 50                      	push rax
 19632 0000E115 BF08000000              	mov rdi, 8 * 1	; new rib
 19633 0000E11A E836950000              	call malloc
 19634 0000E11F 50                      	push rax
 19635 0000E120 BF28000000              	mov rdi, 8 * 5	; extended env
 19636 0000E125 E82B950000              	call malloc
 19637 0000E12A 488B7D10                	mov rdi, ENV
 19638 0000E12E 4831F6                  	 xor rsi, rsi
 19639 0000E131 4831D2                  	 xor rdx, rdx
 19640 0000E134 48FFC2                  	inc rdx
 19641                                  .L_lambda_opt_env_loop_0012:	; 
 19642 0000E137 4883FE04                	cmp rsi, 4
 19643 0000E13B 7410                    	je .L_lambda_opt_env_end_0012
 19644 0000E13D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19645 0000E141 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19646 0000E145 48FFC6                  	inc rsi
 19647 0000E148 48FFC2                  	inc rdx
 19648 0000E14B EBEA                    	jmp .L_lambda_opt_env_loop_0012
 19649                                  .L_lambda_opt_env_end_0012:
 19650 0000E14D 5B                      	pop rbx
 19651 0000E14E 4831F6                  	xor rsi, rsi
 19652                                  .L_lambda_opt_params_loop_0012:	; copy params
 19653 0000E151 4883FE01                	cmp rsi, 1
 19654 0000E155 740E                    	je .L_lambda_opt_params_end_0012
 19655 0000E157 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19656 0000E15C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19657 0000E160 48FFC6                  	inc rsi
 19658 0000E163 EBEC                    	jmp .L_lambda_opt_params_loop_0012
 19659                                  .L_lambda_opt_params_end_0012:
 19660 0000E165 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19661 0000E168 4889C3                  	mov rbx, rax
 19662 0000E16B 58                      	pop rax
 19663 0000E16C C60004                  	mov byte [rax], T_closure
 19664 0000E16F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19665 0000E173 48C74009[80E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 19666 0000E17B E961010000              	jmp .L_lambda_opt_end_0012
 19667                                  .L_lambda_opt_code_0012:
 19668 0000E180 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 19669 0000E185 4983FF01                	cmp r15, 1
 19670 0000E189 7409                    	je .L_lambda_opt_arity_check_exact_0012
 19671 0000E18B 7F57                    	jg .L_lambda_opt_arity_check_more_0012
 19672 0000E18D 6A01                    	push 1
 19673 0000E18F E98E940000              	jmp L_error_incorrect_arity_opt
 19674                                  .L_lambda_opt_arity_check_exact_0012: ;Exact case
 19675 0000E194 4C8B0424                	mov r8, qword [rsp -8 * 0]
 19676 0000E198 4C894424F8              	mov qword [rsp -8], r8
 19677 0000E19D 4C8B442408              	mov r8, qword [rsp +8]
 19678 0000E1A2 4C890424                	mov qword [rsp +8 * 0], r8
 19679 0000E1A6 4C8B442410              	mov r8, qword [rsp +8 * 2]
 19680 0000E1AB 4C89C1                  	mov rcx, r8
 19681 0000E1AE 49FFC0                  	inc r8
 19682 0000E1B1 4C89442408              	mov qword [rsp +8], r8
 19683 0000E1B6 4889E2                  	mov rdx, rsp
 19684 0000E1B9 4883C218                	add rdx, 24
 19685                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0012:
 19686 0000E1BD 4883F900                	cmp rcx, 0
 19687 0000E1C1 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0012
 19688 0000E1C3 4C8B02                  	mov r8, qword [rdx]
 19689 0000E1C6 4C8942F8                	mov qword [rdx - 8], r8
 19690 0000E1CA 4883C208                	add rdx, 8
 19691 0000E1CE 48FFC9                  	dec rcx
 19692 0000E1D1 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0012
 19693                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0012:
 19694 0000E1D3 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 19695 0000E1DB 4883EC08                	sub rsp, 8
 19696 0000E1DF E985000000              	jmp .L_lambda_opt_stack_adjusted_0012
 19697                                  .L_lambda_opt_arity_check_more_0012:
 19698 0000E1E4 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 19699 0000E1E9 4D89C4                  	mov r12, r8
 19700 0000E1EC 4C89C1                  	mov rcx, r8
 19701 0000E1EF 4D8D6802                	lea r13, [r8 + 2] 
 19702 0000E1F3 4883E901                	sub rcx, 1
 19703 0000E1F7 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 19704 0000E1FC 49BE-                   	mov r14, sob_nil
 19704 0000E1FE [0100000000000000] 
 19705                                  .L_lambda_opt_create_list_of_opt_params_0012:
 19706 0000E206 4883F900                	cmp rcx, 0
 19707 0000E20A 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0012
 19708 0000E20C BF11000000              	mov rdi, 17
 19709 0000E211 E83F940000              	call malloc
 19710 0000E216 C60021                  	mov byte [rax], T_pair
 19711 0000E219 498B1B                  	mov rbx, qword [r11]
 19712 0000E21C 48895801                	mov qword [rax +1], rbx
 19713 0000E220 4C897009                	mov qword [rax + 1 + 8], r14
 19714 0000E224 4989C6                  	mov r14, rax
 19715 0000E227 48FFC9                  	dec rcx
 19716 0000E22A 4983EB08                	sub r11, 8
 19717 0000E22E EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0012
 19718                                  .L_lambda_opt_create_list_of_opt_params_end_0012:
 19719 0000E230 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 19720 0000E235 4D8932                  	mov qword [r10], r14
 19721 0000E238 4E8D2CED00000000        	lea r13, [8 * r13]
 19722 0000E240 4901E5                  	add r13, rsp
 19723 0000E243 B905000000              	mov rcx, 4 + 1
 19724                                  .L_lambda_opt_stack_shrink_loop_0012:
 19725 0000E248 4883F900                	cmp rcx, 0
 19726 0000E24C 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0012
 19727 0000E24E 4D8B1A                  	mov r11, qword [r10]
 19728 0000E251 4D895D00                	mov qword [r13], r11
 19729 0000E255 4983EA08                	sub r10, 8
 19730 0000E259 4983ED08                	sub r13, 8
 19731 0000E25D 48FFC9                  	dec rcx
 19732 0000E260 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 19733                                  .L_lambda_opt_stack_shrink_loop_exit_0012:
 19734 0000E262 4983C508                	add r13, 8
 19735 0000E266 4C89EC                  	mov rsp, r13
 19736                                  .L_lambda_opt_stack_adjusted_0012:
 19737 0000E269 48C744241002000000      	mov qword [rsp + 8*2], 2
 19738 0000E272 C8000000                	enter 0, 0
 19739                                  	; preparing a tail-call
 19740 0000E276 488B4528                	mov rax, PARAM(1)	; param strs
 19741 0000E27A 50                      	push rax
 19742 0000E27B 488B4520                	mov rax, PARAM(0)	; param str
 19743 0000E27F 50                      	push rax
 19744 0000E280 6A02                    	push 2	; arg count
 19745 0000E282 488B4510                	mov rax, ENV
 19746 0000E286 488B00                  	mov rax, qword [rax + 8 * 0]
 19747 0000E289 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19748 0000E28C 488B00                  	mov rax, qword [rax]
 19749 0000E28F 803804                  	cmp byte [rax], T_closure
 19750 0000E292 0F8514930000            	jne L_error_non_closure
 19751 0000E298 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19752 0000E29B FF7508                  	push qword [rbp + 8 * 1]
 19753                                   ; old ret addr
 19754 0000E29E FF7500                  	push qword [rbp]
 19755                                   ; restore the old rbp
 19756 0000E2A1 BB02000000              	mov rbx, 2
 19757 0000E2A6 4883C303                	add rbx, 3
 19758 0000E2AA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19759 0000E2AE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19760 0000E2B3 4C8D4DF8                	lea r9, [rbp - 8]
 19761 0000E2B7 B906000000              	mov rcx, 6
 19762                                  .L_tc_recycle_frame_loop_00ac:
 19763 0000E2BC 4883F900                	cmp rcx, 0
 19764 0000E2C0 7413                    	je .L_tc_recycle_frame_done_00ac
 19765 0000E2C2 4D8B11                  	mov r10, qword [r9]
 19766 0000E2C5 4D8910                  	mov qword [r8], r10
 19767 0000E2C8 4983E808                	sub r8, 8
 19768 0000E2CC 4983E908                	sub r9, 8
 19769 0000E2D0 48FFC9                  	dec rcx
 19770 0000E2D3 EBE7                    	jmp .L_tc_recycle_frame_loop_00ac
 19771                                  .L_tc_recycle_frame_done_00ac:
 19772 0000E2D5 498D6008                	lea rsp, [r8 + 8]
 19773 0000E2D9 5D                      	pop rbp ; restore the old rbp
 19774 0000E2DA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19775 0000E2DD C9                      	leave
 19776 0000E2DE C22000                  	ret 8 * (2 + 2)
 19777                                  .L_lambda_opt_end_0012:	; new closure is in rax
 19778 0000E2E1 C9                      	leave
 19779 0000E2E2 C21800                  	ret AND_KILL_FRAME(1)
 19780                                  .L_lambda_simple_end_0072:	; new closure is in rax
 19781 0000E2E5 803804                  	cmp byte [rax], T_closure
 19782 0000E2E8 0F85BE920000            	jne L_error_non_closure
 19783 0000E2EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 19784 0000E2F1 FF7508                  	push qword [rbp + 8 * 1]
 19785                                   ; old ret addr
 19786 0000E2F4 FF7500                  	push qword [rbp]
 19787                                   ; restore the old rbp
 19788 0000E2F7 BB01000000              	mov rbx, 1
 19789 0000E2FC 4883C303                	add rbx, 3
 19790 0000E300 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19791 0000E304 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19792 0000E309 4C8D4DF8                	lea r9, [rbp - 8]
 19793 0000E30D B905000000              	mov rcx, 5
 19794                                  .L_tc_recycle_frame_loop_00aa:
 19795 0000E312 4883F900                	cmp rcx, 0
 19796 0000E316 7413                    	je .L_tc_recycle_frame_done_00aa
 19797 0000E318 4D8B11                  	mov r10, qword [r9]
 19798 0000E31B 4D8910                  	mov qword [r8], r10
 19799 0000E31E 4983E808                	sub r8, 8
 19800 0000E322 4983E908                	sub r9, 8
 19801 0000E326 48FFC9                  	dec rcx
 19802 0000E329 EBE7                    	jmp .L_tc_recycle_frame_loop_00aa
 19803                                  .L_tc_recycle_frame_done_00aa:
 19804 0000E32B 498D6008                	lea rsp, [r8 + 8]
 19805 0000E32F 5D                      	pop rbp ; restore the old rbp
 19806 0000E330 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19807 0000E333 C9                      	leave
 19808 0000E334 C21800                  	ret AND_KILL_FRAME(1)
 19809                                  .L_lambda_simple_end_0071:	; new closure is in rax
 19810 0000E337 803804                  	cmp byte [rax], T_closure
 19811 0000E33A 0F856C920000            	jne L_error_non_closure
 19812 0000E340 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19813 0000E343 FF7508                  	push qword [rbp + 8 * 1]
 19814                                   ; old ret addr
 19815 0000E346 FF7500                  	push qword [rbp]
 19816                                   ; restore the old rbp
 19817 0000E349 BB01000000              	mov rbx, 1
 19818 0000E34E 4883C303                	add rbx, 3
 19819 0000E352 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19820 0000E356 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19821 0000E35B 4C8D4DF8                	lea r9, [rbp - 8]
 19822 0000E35F B905000000              	mov rcx, 5
 19823                                  .L_tc_recycle_frame_loop_00a6:
 19824 0000E364 4883F900                	cmp rcx, 0
 19825 0000E368 7413                    	je .L_tc_recycle_frame_done_00a6
 19826 0000E36A 4D8B11                  	mov r10, qword [r9]
 19827 0000E36D 4D8910                  	mov qword [r8], r10
 19828 0000E370 4983E808                	sub r8, 8
 19829 0000E374 4983E908                	sub r9, 8
 19830 0000E378 48FFC9                  	dec rcx
 19831 0000E37B EBE7                    	jmp .L_tc_recycle_frame_loop_00a6
 19832                                  .L_tc_recycle_frame_done_00a6:
 19833 0000E37D 498D6008                	lea rsp, [r8 + 8]
 19834 0000E381 5D                      	pop rbp ; restore the old rbp
 19835 0000E382 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19836 0000E385 C9                      	leave
 19837 0000E386 C21800                  	ret AND_KILL_FRAME(1)
 19838                                  .L_lambda_simple_end_006d:	; new closure is in rax
 19839 0000E389 803804                  	cmp byte [rax], T_closure
 19840 0000E38C 0F851A920000            	jne L_error_non_closure
 19841 0000E392 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19842 0000E395 FF7508                  	push qword [rbp + 8 * 1]
 19843                                   ; old ret addr
 19844 0000E398 FF7500                  	push qword [rbp]
 19845                                   ; restore the old rbp
 19846 0000E39B BB01000000              	mov rbx, 1
 19847 0000E3A0 4883C303                	add rbx, 3
 19848 0000E3A4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 19849 0000E3A8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 19850 0000E3AD 4C8D4DF8                	lea r9, [rbp - 8]
 19851 0000E3B1 B905000000              	mov rcx, 5
 19852                                  .L_tc_recycle_frame_loop_00a4:
 19853 0000E3B6 4883F900                	cmp rcx, 0
 19854 0000E3BA 7413                    	je .L_tc_recycle_frame_done_00a4
 19855 0000E3BC 4D8B11                  	mov r10, qword [r9]
 19856 0000E3BF 4D8910                  	mov qword [r8], r10
 19857 0000E3C2 4983E808                	sub r8, 8
 19858 0000E3C6 4983E908                	sub r9, 8
 19859 0000E3CA 48FFC9                  	dec rcx
 19860 0000E3CD EBE7                    	jmp .L_tc_recycle_frame_loop_00a4
 19861                                  .L_tc_recycle_frame_done_00a4:
 19862 0000E3CF 498D6008                	lea rsp, [r8 + 8]
 19863 0000E3D3 5D                      	pop rbp ; restore the old rbp
 19864 0000E3D4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19865 0000E3D7 C9                      	leave
 19866 0000E3D8 C22000                  	ret AND_KILL_FRAME(2)
 19867                                  .L_lambda_simple_end_006c:	; new closure is in rax
 19868 0000E3DB 50                      	push rax
 19869 0000E3DC 6A01                    	push 1	; arg count
 19870 0000E3DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19871 0000E3E3 E86D920000              	call malloc
 19872 0000E3E8 50                      	push rax
 19873 0000E3E9 BF00000000              	mov rdi, 8 * 0	; new rib
 19874 0000E3EE E862920000              	call malloc
 19875 0000E3F3 50                      	push rax
 19876 0000E3F4 BF08000000              	mov rdi, 8 * 1	; extended env
 19877 0000E3F9 E857920000              	call malloc
 19878 0000E3FE 488B7D10                	mov rdi, ENV
 19879 0000E402 BE00000000              	mov rsi, 0
 19880 0000E407 BA01000000              	mov rdx, 1
 19881                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 19882 0000E40C 4883FE00                	cmp rsi, 0
 19883 0000E410 7410                    	je .L_lambda_simple_env_end_0074
 19884 0000E412 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19885 0000E416 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19886 0000E41A 48FFC6                  	inc rsi
 19887 0000E41D 48FFC2                  	inc rdx
 19888 0000E420 EBEA                    	jmp .L_lambda_simple_env_loop_0074
 19889                                  .L_lambda_simple_env_end_0074:
 19890 0000E422 5B                      	pop rbx
 19891 0000E423 BE00000000              	mov rsi, 0
 19892                                  .L_lambda_simple_params_loop_0074:	; copy params
 19893 0000E428 4883FE00                	cmp rsi, 0
 19894 0000E42C 740E                    	je .L_lambda_simple_params_end_0074
 19895 0000E42E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19896 0000E433 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19897 0000E437 48FFC6                  	inc rsi
 19898 0000E43A EBEC                    	jmp .L_lambda_simple_params_loop_0074
 19899                                  .L_lambda_simple_params_end_0074:
 19900 0000E43C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19901 0000E43F 4889C3                  	mov rbx, rax
 19902 0000E442 58                      	pop rax
 19903 0000E443 C60004                  	mov byte [rax], T_closure
 19904 0000E446 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19905 0000E44A 48C74009[57E40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 19906 0000E452 E947010000              	jmp .L_lambda_simple_end_0074
 19907                                  .L_lambda_simple_code_0074:	; lambda-simple body
 19908 0000E457 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19909 0000E45D 740B                    	je .L_lambda_simple_arity_check_ok_0074
 19910 0000E45F FF742410                	push qword [rsp + 8 * 2]
 19911 0000E463 6A01                    	push 1
 19912 0000E465 E9A4910000              	jmp L_error_incorrect_arity_simple
 19913                                  .L_lambda_simple_arity_check_ok_0074:
 19914 0000E46A C8000000                	enter 0, 0
 19915                                  	; preparing a non-tail-call
 19916 0000E46E 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19917 0000E476 803805                  	cmp byte [rax], T_undefined
 19918 0000E479 0F84A9900000            	je L_error_fvar_undefined
 19919 0000E47F 50                      	push rax
 19920 0000E480 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 19921 0000E488 803805                  	cmp byte [rax], T_undefined
 19922 0000E48B 0F8497900000            	je L_error_fvar_undefined
 19923 0000E491 50                      	push rax
 19924 0000E492 6A02                    	push 2	; arg count
 19925 0000E494 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19926 0000E498 803804                  	cmp byte [rax], T_closure
 19927 0000E49B 0F850B910000            	jne L_error_non_closure
 19928 0000E4A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19929 0000E4A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19930 0000E4A7 48890425[9A160000]      	mov qword [free_var_133], rax
 19931 0000E4AF 48B8-                   	mov rax, sob_void
 19931 0000E4B1 [0000000000000000] 
 19932                                  
 19933                                  	; preparing a non-tail-call
 19934 0000E4B9 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19935 0000E4C1 803805                  	cmp byte [rax], T_undefined
 19936 0000E4C4 0F845E900000            	je L_error_fvar_undefined
 19937 0000E4CA 50                      	push rax
 19938 0000E4CB 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19939 0000E4D3 803805                  	cmp byte [rax], T_undefined
 19940 0000E4D6 0F844C900000            	je L_error_fvar_undefined
 19941 0000E4DC 50                      	push rax
 19942 0000E4DD 6A02                    	push 2	; arg count
 19943 0000E4DF 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19944 0000E4E3 803804                  	cmp byte [rax], T_closure
 19945 0000E4E6 0F85C0900000            	jne L_error_non_closure
 19946 0000E4EC FF7001                  	push SOB_CLOSURE_ENV(rax)
 19947 0000E4EF FF5009                  	call SOB_CLOSURE_CODE(rax)
 19948 0000E4F2 48890425[CE150000]      	mov qword [free_var_121], rax
 19949 0000E4FA 48B8-                   	mov rax, sob_void
 19949 0000E4FC [0000000000000000] 
 19950                                  
 19951                                  	; preparing a non-tail-call
 19952 0000E504 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19953 0000E50C 803805                  	cmp byte [rax], T_undefined
 19954 0000E50F 0F8413900000            	je L_error_fvar_undefined
 19955 0000E515 50                      	push rax
 19956 0000E516 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 19957 0000E51E 803805                  	cmp byte [rax], T_undefined
 19958 0000E521 0F8401900000            	je L_error_fvar_undefined
 19959 0000E527 50                      	push rax
 19960 0000E528 6A02                    	push 2	; arg count
 19961 0000E52A 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19962 0000E52E 803804                  	cmp byte [rax], T_closure
 19963 0000E531 0F8575900000            	jne L_error_non_closure
 19964 0000E537 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19965 0000E53A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19966 0000E53D 48890425[CD160000]      	mov qword [free_var_136], rax
 19967 0000E545 48B8-                   	mov rax, sob_void
 19967 0000E547 [0000000000000000] 
 19968                                  
 19969                                  	; preparing a non-tail-call
 19970 0000E54F 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19971 0000E557 803805                  	cmp byte [rax], T_undefined
 19972 0000E55A 0F84C88F0000            	je L_error_fvar_undefined
 19973 0000E560 50                      	push rax
 19974 0000E561 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19975 0000E569 803805                  	cmp byte [rax], T_undefined
 19976 0000E56C 0F84B68F0000            	je L_error_fvar_undefined
 19977 0000E572 50                      	push rax
 19978 0000E573 6A02                    	push 2	; arg count
 19979 0000E575 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 19980 0000E579 803804                  	cmp byte [rax], T_closure
 19981 0000E57C 0F852A900000            	jne L_error_non_closure
 19982 0000E582 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19983 0000E585 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19984 0000E588 48890425[01160000]      	mov qword [free_var_124], rax
 19985 0000E590 48B8-                   	mov rax, sob_void
 19985 0000E592 [0000000000000000] 
 19986 0000E59A C9                      	leave
 19987 0000E59B C21800                  	ret AND_KILL_FRAME(1)
 19988                                  .L_lambda_simple_end_0074:	; new closure is in rax
 19989 0000E59E 803804                  	cmp byte [rax], T_closure
 19990 0000E5A1 0F8505900000            	jne L_error_non_closure
 19991 0000E5A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19992 0000E5AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 19993                                  
 19994 0000E5AD 4889C7                  	mov rdi, rax
 19995 0000E5B0 E8F5920000              	call print_sexpr_if_not_void
 19996                                  	; preparing a non-tail-call
 19997 0000E5B5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19998 0000E5BA E896900000              	call malloc
 19999 0000E5BF 50                      	push rax
 20000 0000E5C0 BF00000000              	mov rdi, 8 * 0	; new rib
 20001 0000E5C5 E88B900000              	call malloc
 20002 0000E5CA 50                      	push rax
 20003 0000E5CB BF08000000              	mov rdi, 8 * 1	; extended env
 20004 0000E5D0 E880900000              	call malloc
 20005 0000E5D5 488B7D10                	mov rdi, ENV
 20006 0000E5D9 BE00000000              	mov rsi, 0
 20007 0000E5DE BA01000000              	mov rdx, 1
 20008                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 20009 0000E5E3 4883FE00                	cmp rsi, 0
 20010 0000E5E7 7410                    	je .L_lambda_simple_env_end_0075
 20011 0000E5E9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20012 0000E5ED 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20013 0000E5F1 48FFC6                  	inc rsi
 20014 0000E5F4 48FFC2                  	inc rdx
 20015 0000E5F7 EBEA                    	jmp .L_lambda_simple_env_loop_0075
 20016                                  .L_lambda_simple_env_end_0075:
 20017 0000E5F9 5B                      	pop rbx
 20018 0000E5FA BE00000000              	mov rsi, 0
 20019                                  .L_lambda_simple_params_loop_0075:	; copy params
 20020 0000E5FF 4883FE00                	cmp rsi, 0
 20021 0000E603 740E                    	je .L_lambda_simple_params_end_0075
 20022 0000E605 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20023 0000E60A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20024 0000E60E 48FFC6                  	inc rsi
 20025 0000E611 EBEC                    	jmp .L_lambda_simple_params_loop_0075
 20026                                  .L_lambda_simple_params_end_0075:
 20027 0000E613 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20028 0000E616 4889C3                  	mov rbx, rax
 20029 0000E619 58                      	pop rax
 20030 0000E61A C60004                  	mov byte [rax], T_closure
 20031 0000E61D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20032 0000E621 48C74009[2EE60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 20033 0000E629 E9B80B0000              	jmp .L_lambda_simple_end_0075
 20034                                  .L_lambda_simple_code_0075:	; lambda-simple body
 20035 0000E62E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20036 0000E634 740B                    	je .L_lambda_simple_arity_check_ok_0075
 20037 0000E636 FF742410                	push qword [rsp + 8 * 2]
 20038 0000E63A 6A01                    	push 1
 20039 0000E63C E9CD8F0000              	jmp L_error_incorrect_arity_simple
 20040                                  .L_lambda_simple_arity_check_ok_0075:
 20041 0000E641 C8000000                	enter 0, 0
 20042                                  	; preparing a tail-call
 20043 0000E645 48B8-                   	mov rax, L_constants + 1993
 20043 0000E647 [C907000000000000] 
 20044 0000E64F 50                      	push rax
 20045 0000E650 6A01                    	push 1	; arg count
 20046 0000E652 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20047 0000E657 E8F98F0000              	call malloc
 20048 0000E65C 50                      	push rax
 20049 0000E65D BF08000000              	mov rdi, 8 * 1	; new rib
 20050 0000E662 E8EE8F0000              	call malloc
 20051 0000E667 50                      	push rax
 20052 0000E668 BF10000000              	mov rdi, 8 * 2	; extended env
 20053 0000E66D E8E38F0000              	call malloc
 20054 0000E672 488B7D10                	mov rdi, ENV
 20055 0000E676 BE00000000              	mov rsi, 0
 20056 0000E67B BA01000000              	mov rdx, 1
 20057                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 20058 0000E680 4883FE01                	cmp rsi, 1
 20059 0000E684 7410                    	je .L_lambda_simple_env_end_0076
 20060 0000E686 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20061 0000E68A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20062 0000E68E 48FFC6                  	inc rsi
 20063 0000E691 48FFC2                  	inc rdx
 20064 0000E694 EBEA                    	jmp .L_lambda_simple_env_loop_0076
 20065                                  .L_lambda_simple_env_end_0076:
 20066 0000E696 5B                      	pop rbx
 20067 0000E697 BE00000000              	mov rsi, 0
 20068                                  .L_lambda_simple_params_loop_0076:	; copy params
 20069 0000E69C 4883FE01                	cmp rsi, 1
 20070 0000E6A0 740E                    	je .L_lambda_simple_params_end_0076
 20071 0000E6A2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20072 0000E6A7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20073 0000E6AB 48FFC6                  	inc rsi
 20074 0000E6AE EBEC                    	jmp .L_lambda_simple_params_loop_0076
 20075                                  .L_lambda_simple_params_end_0076:
 20076 0000E6B0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20077 0000E6B3 4889C3                  	mov rbx, rax
 20078 0000E6B6 58                      	pop rax
 20079 0000E6B7 C60004                  	mov byte [rax], T_closure
 20080 0000E6BA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20081 0000E6BE 48C74009[CBE60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 20082 0000E6C6 E9C90A0000              	jmp .L_lambda_simple_end_0076
 20083                                  .L_lambda_simple_code_0076:	; lambda-simple body
 20084 0000E6CB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20085 0000E6D1 740B                    	je .L_lambda_simple_arity_check_ok_0076
 20086 0000E6D3 FF742410                	push qword [rsp + 8 * 2]
 20087 0000E6D7 6A01                    	push 1
 20088 0000E6D9 E9308F0000              	jmp L_error_incorrect_arity_simple
 20089                                  .L_lambda_simple_arity_check_ok_0076:
 20090 0000E6DE C8000000                	enter 0, 0
 20091 0000E6E2 BF08000000              	mov rdi, 8*1
 20092 0000E6E7 E8698F0000              	call malloc
 20093 0000E6EC 488B5D20                	mov rbx, PARAM(0)
 20094 0000E6F0 488918                  	mov qword [rax], rbx
 20095 0000E6F3 48894520                	mov PARAM(0), rax
 20096 0000E6F7 48B8-                   	mov rax, sob_void
 20096 0000E6F9 [0000000000000000] 
 20097                                  
 20098 0000E701 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20099 0000E706 E84A8F0000              	call malloc
 20100 0000E70B 50                      	push rax
 20101 0000E70C BF08000000              	mov rdi, 8 * 1	; new rib
 20102 0000E711 E83F8F0000              	call malloc
 20103 0000E716 50                      	push rax
 20104 0000E717 BF18000000              	mov rdi, 8 * 3	; extended env
 20105 0000E71C E8348F0000              	call malloc
 20106 0000E721 488B7D10                	mov rdi, ENV
 20107 0000E725 BE00000000              	mov rsi, 0
 20108 0000E72A BA01000000              	mov rdx, 1
 20109                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 20110 0000E72F 4883FE02                	cmp rsi, 2
 20111 0000E733 7410                    	je .L_lambda_simple_env_end_0077
 20112 0000E735 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20113 0000E739 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20114 0000E73D 48FFC6                  	inc rsi
 20115 0000E740 48FFC2                  	inc rdx
 20116 0000E743 EBEA                    	jmp .L_lambda_simple_env_loop_0077
 20117                                  .L_lambda_simple_env_end_0077:
 20118 0000E745 5B                      	pop rbx
 20119 0000E746 BE00000000              	mov rsi, 0
 20120                                  .L_lambda_simple_params_loop_0077:	; copy params
 20121 0000E74B 4883FE01                	cmp rsi, 1
 20122 0000E74F 740E                    	je .L_lambda_simple_params_end_0077
 20123 0000E751 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20124 0000E756 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20125 0000E75A 48FFC6                  	inc rsi
 20126 0000E75D EBEC                    	jmp .L_lambda_simple_params_loop_0077
 20127                                  .L_lambda_simple_params_end_0077:
 20128 0000E75F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20129 0000E762 4889C3                  	mov rbx, rax
 20130 0000E765 58                      	pop rax
 20131 0000E766 C60004                  	mov byte [rax], T_closure
 20132 0000E769 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20133 0000E76D 48C74009[7AE70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 20134 0000E775 E9C4010000              	jmp .L_lambda_simple_end_0077
 20135                                  .L_lambda_simple_code_0077:	; lambda-simple body
 20136 0000E77A 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20137 0000E780 740B                    	je .L_lambda_simple_arity_check_ok_0077
 20138 0000E782 FF742410                	push qword [rsp + 8 * 2]
 20139 0000E786 6A04                    	push 4
 20140 0000E788 E9818E0000              	jmp L_error_incorrect_arity_simple
 20141                                  .L_lambda_simple_arity_check_ok_0077:
 20142 0000E78D C8000000                	enter 0, 0
 20143                                  	; preparing a non-tail-call
 20144 0000E791 488B4538                	mov rax, PARAM(3)	; param len
 20145 0000E795 50                      	push rax
 20146 0000E796 488B4520                	mov rax, PARAM(0)	; param i
 20147 0000E79A 50                      	push rax
 20148 0000E79B 6A02                    	push 2	; arg count
 20149 0000E79D 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20150 0000E7A5 803805                  	cmp byte [rax], T_undefined
 20151 0000E7A8 0F847A8D0000            	je L_error_fvar_undefined
 20152 0000E7AE 803804                  	cmp byte [rax], T_closure
 20153 0000E7B1 0F85F58D0000            	jne L_error_non_closure
 20154 0000E7B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20155 0000E7BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20156 0000E7BD 483D[02000000]          	cmp rax, sob_boolean_false
 20157 0000E7C3 0F8571010000            	jne .L_or_end_000c
 20158                                  	; preparing a non-tail-call
 20159 0000E7C9 488B4538                	mov rax, PARAM(3)	; param len
 20160 0000E7CD 50                      	push rax
 20161 0000E7CE 488B4520                	mov rax, PARAM(0)	; param i
 20162 0000E7D2 50                      	push rax
 20163 0000E7D3 6A02                    	push 2	; arg count
 20164 0000E7D5 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 20165 0000E7DD 803805                  	cmp byte [rax], T_undefined
 20166 0000E7E0 0F84428D0000            	je L_error_fvar_undefined
 20167 0000E7E6 803804                  	cmp byte [rax], T_closure
 20168 0000E7E9 0F85BD8D0000            	jne L_error_non_closure
 20169 0000E7EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20170 0000E7F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20171 0000E7F5 483D[02000000]          	cmp rax, sob_boolean_false
 20172 0000E7FB 0F842F010000            	je .L_if_else_005d
 20173                                  	; preparing a non-tail-call
 20174                                  	; preparing a non-tail-call
 20175 0000E801 488B4520                	mov rax, PARAM(0)	; param i
 20176 0000E805 50                      	push rax
 20177 0000E806 488B4530                	mov rax, PARAM(2)	; param str2
 20178 0000E80A 50                      	push rax
 20179 0000E80B 6A02                    	push 2	; arg count
 20180 0000E80D 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20181 0000E815 803805                  	cmp byte [rax], T_undefined
 20182 0000E818 0F840A8D0000            	je L_error_fvar_undefined
 20183 0000E81E 803804                  	cmp byte [rax], T_closure
 20184 0000E821 0F85858D0000            	jne L_error_non_closure
 20185 0000E827 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20186 0000E82A FF5009                  	call SOB_CLOSURE_CODE(rax)
 20187 0000E82D 50                      	push rax
 20188                                  	; preparing a non-tail-call
 20189 0000E82E 488B4520                	mov rax, PARAM(0)	; param i
 20190 0000E832 50                      	push rax
 20191 0000E833 488B4528                	mov rax, PARAM(1)	; param str1
 20192 0000E837 50                      	push rax
 20193 0000E838 6A02                    	push 2	; arg count
 20194 0000E83A 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20195 0000E842 803805                  	cmp byte [rax], T_undefined
 20196 0000E845 0F84DD8C0000            	je L_error_fvar_undefined
 20197 0000E84B 803804                  	cmp byte [rax], T_closure
 20198 0000E84E 0F85588D0000            	jne L_error_non_closure
 20199 0000E854 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20200 0000E857 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20201 0000E85A 50                      	push rax
 20202 0000E85B 6A02                    	push 2	; arg count
 20203 0000E85D 488B4510                	mov rax, ENV
 20204 0000E861 488B4008                	mov rax, qword [rax + 8 * 1]
 20205 0000E865 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20206 0000E868 803804                  	cmp byte [rax], T_closure
 20207 0000E86B 0F853B8D0000            	jne L_error_non_closure
 20208 0000E871 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20209 0000E874 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20210 0000E877 483D[02000000]          	cmp rax, sob_boolean_false
 20211 0000E87D 0F84A1000000            	je .L_if_else_005c
 20212                                  	; preparing a tail-call
 20213 0000E883 488B4538                	mov rax, PARAM(3)	; param len
 20214 0000E887 50                      	push rax
 20215 0000E888 488B4530                	mov rax, PARAM(2)	; param str2
 20216 0000E88C 50                      	push rax
 20217 0000E88D 488B4528                	mov rax, PARAM(1)	; param str1
 20218 0000E891 50                      	push rax
 20219                                  	; preparing a non-tail-call
 20220 0000E892 48B8-                   	mov rax, L_constants + 2270
 20220 0000E894 [DE08000000000000] 
 20221 0000E89C 50                      	push rax
 20222 0000E89D 488B4520                	mov rax, PARAM(0)	; param i
 20223 0000E8A1 50                      	push rax
 20224 0000E8A2 6A02                    	push 2	; arg count
 20225 0000E8A4 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 20226 0000E8AC 803805                  	cmp byte [rax], T_undefined
 20227 0000E8AF 0F84738C0000            	je L_error_fvar_undefined
 20228 0000E8B5 803804                  	cmp byte [rax], T_closure
 20229 0000E8B8 0F85EE8C0000            	jne L_error_non_closure
 20230 0000E8BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 20231 0000E8C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20232 0000E8C4 50                      	push rax
 20233 0000E8C5 6A04                    	push 4	; arg count
 20234 0000E8C7 488B4510                	mov rax, ENV
 20235 0000E8CB 488B00                  	mov rax, qword [rax + 8 * 0]
 20236 0000E8CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20237 0000E8D1 488B00                  	mov rax, qword [rax]
 20238 0000E8D4 803804                  	cmp byte [rax], T_closure
 20239 0000E8D7 0F85CF8C0000            	jne L_error_non_closure
 20240 0000E8DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20241 0000E8E0 FF7508                  	push qword [rbp + 8 * 1]
 20242                                   ; old ret addr
 20243 0000E8E3 FF7500                  	push qword [rbp]
 20244                                   ; restore the old rbp
 20245 0000E8E6 BB04000000              	mov rbx, 4
 20246 0000E8EB 4883C303                	add rbx, 3
 20247 0000E8EF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20248 0000E8F3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20249 0000E8F8 4C8D4DF8                	lea r9, [rbp - 8]
 20250 0000E8FC B908000000              	mov rcx, 8
 20251                                  .L_tc_recycle_frame_loop_00ae:
 20252 0000E901 4883F900                	cmp rcx, 0
 20253 0000E905 7413                    	je .L_tc_recycle_frame_done_00ae
 20254 0000E907 4D8B11                  	mov r10, qword [r9]
 20255 0000E90A 4D8910                  	mov qword [r8], r10
 20256 0000E90D 4983E808                	sub r8, 8
 20257 0000E911 4983E908                	sub r9, 8
 20258 0000E915 48FFC9                  	dec rcx
 20259 0000E918 EBE7                    	jmp .L_tc_recycle_frame_loop_00ae
 20260                                  .L_tc_recycle_frame_done_00ae:
 20261 0000E91A 498D6008                	lea rsp, [r8 + 8]
 20262 0000E91E 5D                      	pop rbp ; restore the old rbp
 20263 0000E91F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20264 0000E922 EB0A                    	jmp .L_if_end_005c
 20265                                  .L_if_else_005c:
 20266 0000E924 48B8-                   	mov rax, L_constants + 2
 20266 0000E926 [0200000000000000] 
 20267                                  .L_if_end_005c:
 20268 0000E92E EB0A                    	jmp .L_if_end_005d
 20269                                  .L_if_else_005d:
 20270 0000E930 48B8-                   	mov rax, L_constants + 2
 20270 0000E932 [0200000000000000] 
 20271                                  .L_if_end_005d:
 20272                                  .L_or_end_000c:
 20273 0000E93A C9                      	leave
 20274 0000E93B C23000                  	ret AND_KILL_FRAME(4)
 20275                                  .L_lambda_simple_end_0077:	; new closure is in rax
 20276 0000E93E 50                      	push rax
 20277 0000E93F 488B4520                	mov rax, PARAM(0)	; param run
 20278 0000E943 8F00                    	pop qword [rax]
 20279 0000E945 48B8-                   	mov rax, sob_void
 20279 0000E947 [0000000000000000] 
 20280                                  
 20281                                  	; preparing a tail-call
 20282 0000E94F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20283 0000E954 E8FC8C0000              	call malloc
 20284 0000E959 50                      	push rax
 20285 0000E95A BF08000000              	mov rdi, 8 * 1	; new rib
 20286 0000E95F E8F18C0000              	call malloc
 20287 0000E964 50                      	push rax
 20288 0000E965 BF18000000              	mov rdi, 8 * 3	; extended env
 20289 0000E96A E8E68C0000              	call malloc
 20290 0000E96F 488B7D10                	mov rdi, ENV
 20291 0000E973 BE00000000              	mov rsi, 0
 20292 0000E978 BA01000000              	mov rdx, 1
 20293                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 20294 0000E97D 4883FE02                	cmp rsi, 2
 20295 0000E981 7410                    	je .L_lambda_simple_env_end_0078
 20296 0000E983 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20297 0000E987 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20298 0000E98B 48FFC6                  	inc rsi
 20299 0000E98E 48FFC2                  	inc rdx
 20300 0000E991 EBEA                    	jmp .L_lambda_simple_env_loop_0078
 20301                                  .L_lambda_simple_env_end_0078:
 20302 0000E993 5B                      	pop rbx
 20303 0000E994 BE00000000              	mov rsi, 0
 20304                                  .L_lambda_simple_params_loop_0078:	; copy params
 20305 0000E999 4883FE01                	cmp rsi, 1
 20306 0000E99D 740E                    	je .L_lambda_simple_params_end_0078
 20307 0000E99F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20308 0000E9A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20309 0000E9A8 48FFC6                  	inc rsi
 20310 0000E9AB EBEC                    	jmp .L_lambda_simple_params_loop_0078
 20311                                  .L_lambda_simple_params_end_0078:
 20312 0000E9AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20313 0000E9B0 4889C3                  	mov rbx, rax
 20314 0000E9B3 58                      	pop rax
 20315 0000E9B4 C60004                  	mov byte [rax], T_closure
 20316 0000E9B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20317 0000E9BB 48C74009[C8E90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 20318 0000E9C3 E918020000              	jmp .L_lambda_simple_end_0078
 20319                                  .L_lambda_simple_code_0078:	; lambda-simple body
 20320 0000E9C8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20321 0000E9CE 740B                    	je .L_lambda_simple_arity_check_ok_0078
 20322 0000E9D0 FF742410                	push qword [rsp + 8 * 2]
 20323 0000E9D4 6A02                    	push 2
 20324 0000E9D6 E9338C0000              	jmp L_error_incorrect_arity_simple
 20325                                  .L_lambda_simple_arity_check_ok_0078:
 20326 0000E9DB C8000000                	enter 0, 0
 20327                                  	; preparing a tail-call
 20328                                  	; preparing a non-tail-call
 20329 0000E9DF 488B4528                	mov rax, PARAM(1)	; param str2
 20330 0000E9E3 50                      	push rax
 20331 0000E9E4 6A01                    	push 1	; arg count
 20332 0000E9E6 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20333 0000E9EE 803805                  	cmp byte [rax], T_undefined
 20334 0000E9F1 0F84318B0000            	je L_error_fvar_undefined
 20335 0000E9F7 803804                  	cmp byte [rax], T_closure
 20336 0000E9FA 0F85AC8B0000            	jne L_error_non_closure
 20337 0000EA00 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20338 0000EA03 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20339 0000EA06 50                      	push rax
 20340                                  	; preparing a non-tail-call
 20341 0000EA07 488B4520                	mov rax, PARAM(0)	; param str1
 20342 0000EA0B 50                      	push rax
 20343 0000EA0C 6A01                    	push 1	; arg count
 20344 0000EA0E 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20345 0000EA16 803805                  	cmp byte [rax], T_undefined
 20346 0000EA19 0F84098B0000            	je L_error_fvar_undefined
 20347 0000EA1F 803804                  	cmp byte [rax], T_closure
 20348 0000EA22 0F85848B0000            	jne L_error_non_closure
 20349 0000EA28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20350 0000EA2B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20351 0000EA2E 50                      	push rax
 20352 0000EA2F 6A02                    	push 2	; arg count
 20353 0000EA31 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20354 0000EA36 E81A8C0000              	call malloc
 20355 0000EA3B 50                      	push rax
 20356 0000EA3C BF10000000              	mov rdi, 8 * 2	; new rib
 20357 0000EA41 E80F8C0000              	call malloc
 20358 0000EA46 50                      	push rax
 20359 0000EA47 BF20000000              	mov rdi, 8 * 4	; extended env
 20360 0000EA4C E8048C0000              	call malloc
 20361 0000EA51 488B7D10                	mov rdi, ENV
 20362 0000EA55 BE00000000              	mov rsi, 0
 20363 0000EA5A BA01000000              	mov rdx, 1
 20364                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 20365 0000EA5F 4883FE03                	cmp rsi, 3
 20366 0000EA63 7410                    	je .L_lambda_simple_env_end_0079
 20367 0000EA65 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20368 0000EA69 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20369 0000EA6D 48FFC6                  	inc rsi
 20370 0000EA70 48FFC2                  	inc rdx
 20371 0000EA73 EBEA                    	jmp .L_lambda_simple_env_loop_0079
 20372                                  .L_lambda_simple_env_end_0079:
 20373 0000EA75 5B                      	pop rbx
 20374 0000EA76 BE00000000              	mov rsi, 0
 20375                                  .L_lambda_simple_params_loop_0079:	; copy params
 20376 0000EA7B 4883FE02                	cmp rsi, 2
 20377 0000EA7F 740E                    	je .L_lambda_simple_params_end_0079
 20378 0000EA81 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20379 0000EA86 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20380 0000EA8A 48FFC6                  	inc rsi
 20381 0000EA8D EBEC                    	jmp .L_lambda_simple_params_loop_0079
 20382                                  .L_lambda_simple_params_end_0079:
 20383 0000EA8F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20384 0000EA92 4889C3                  	mov rbx, rax
 20385 0000EA95 58                      	pop rax
 20386 0000EA96 C60004                  	mov byte [rax], T_closure
 20387 0000EA99 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20388 0000EA9D 48C74009[AAEA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 20389 0000EAA5 E9E4000000              	jmp .L_lambda_simple_end_0079
 20390                                  .L_lambda_simple_code_0079:	; lambda-simple body
 20391 0000EAAA 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20392 0000EAB0 740B                    	je .L_lambda_simple_arity_check_ok_0079
 20393 0000EAB2 FF742410                	push qword [rsp + 8 * 2]
 20394 0000EAB6 6A02                    	push 2
 20395 0000EAB8 E9518B0000              	jmp L_error_incorrect_arity_simple
 20396                                  .L_lambda_simple_arity_check_ok_0079:
 20397 0000EABD C8000000                	enter 0, 0
 20398                                  	; preparing a non-tail-call
 20399 0000EAC1 488B4528                	mov rax, PARAM(1)	; param len2
 20400 0000EAC5 50                      	push rax
 20401 0000EAC6 488B4520                	mov rax, PARAM(0)	; param len1
 20402 0000EACA 50                      	push rax
 20403 0000EACB 6A02                    	push 2	; arg count
 20404 0000EACD 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20405 0000EAD5 803805                  	cmp byte [rax], T_undefined
 20406 0000EAD8 0F844A8A0000            	je L_error_fvar_undefined
 20407 0000EADE 803804                  	cmp byte [rax], T_closure
 20408 0000EAE1 0F85C58A0000            	jne L_error_non_closure
 20409 0000EAE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20410 0000EAEA FF5009                  	call SOB_CLOSURE_CODE(rax)
 20411 0000EAED 483D[02000000]          	cmp rax, sob_boolean_false
 20412 0000EAF3 0F8487000000            	je .L_if_else_005e
 20413                                  	; preparing a tail-call
 20414 0000EAF9 488B4520                	mov rax, PARAM(0)	; param len1
 20415 0000EAFD 50                      	push rax
 20416 0000EAFE 488B4510                	mov rax, ENV
 20417 0000EB02 488B00                  	mov rax, qword [rax + 8 * 0]
 20418 0000EB05 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20419 0000EB09 50                      	push rax
 20420 0000EB0A 488B4510                	mov rax, ENV
 20421 0000EB0E 488B00                  	mov rax, qword [rax + 8 * 0]
 20422 0000EB11 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20423 0000EB14 50                      	push rax
 20424 0000EB15 48B8-                   	mov rax, L_constants + 2135
 20424 0000EB17 [5708000000000000] 
 20425 0000EB1F 50                      	push rax
 20426 0000EB20 6A04                    	push 4	; arg count
 20427 0000EB22 488B4510                	mov rax, ENV
 20428 0000EB26 488B4008                	mov rax, qword [rax + 8 * 1]
 20429 0000EB2A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20430 0000EB2D 488B00                  	mov rax, qword [rax]
 20431 0000EB30 803804                  	cmp byte [rax], T_closure
 20432 0000EB33 0F85738A0000            	jne L_error_non_closure
 20433 0000EB39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20434 0000EB3C FF7508                  	push qword [rbp + 8 * 1]
 20435                                   ; old ret addr
 20436 0000EB3F FF7500                  	push qword [rbp]
 20437                                   ; restore the old rbp
 20438 0000EB42 BB04000000              	mov rbx, 4
 20439 0000EB47 4883C303                	add rbx, 3
 20440 0000EB4B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20441 0000EB4F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20442 0000EB54 4C8D4DF8                	lea r9, [rbp - 8]
 20443 0000EB58 B908000000              	mov rcx, 8
 20444                                  .L_tc_recycle_frame_loop_00b1:
 20445 0000EB5D 4883F900                	cmp rcx, 0
 20446 0000EB61 7413                    	je .L_tc_recycle_frame_done_00b1
 20447 0000EB63 4D8B11                  	mov r10, qword [r9]
 20448 0000EB66 4D8910                  	mov qword [r8], r10
 20449 0000EB69 4983E808                	sub r8, 8
 20450 0000EB6D 4983E908                	sub r9, 8
 20451 0000EB71 48FFC9                  	dec rcx
 20452 0000EB74 EBE7                    	jmp .L_tc_recycle_frame_loop_00b1
 20453                                  .L_tc_recycle_frame_done_00b1:
 20454 0000EB76 498D6008                	lea rsp, [r8 + 8]
 20455 0000EB7A 5D                      	pop rbp ; restore the old rbp
 20456 0000EB7B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20457 0000EB7E EB0A                    	jmp .L_if_end_005e
 20458                                  .L_if_else_005e:
 20459 0000EB80 48B8-                   	mov rax, L_constants + 2
 20459 0000EB82 [0200000000000000] 
 20460                                  .L_if_end_005e:
 20461 0000EB8A C9                      	leave
 20462 0000EB8B C22000                  	ret AND_KILL_FRAME(2)
 20463                                  .L_lambda_simple_end_0079:	; new closure is in rax
 20464 0000EB8E 803804                  	cmp byte [rax], T_closure
 20465 0000EB91 0F85158A0000            	jne L_error_non_closure
 20466 0000EB97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20467 0000EB9A FF7508                  	push qword [rbp + 8 * 1]
 20468                                   ; old ret addr
 20469 0000EB9D FF7500                  	push qword [rbp]
 20470                                   ; restore the old rbp
 20471 0000EBA0 BB02000000              	mov rbx, 2
 20472 0000EBA5 4883C303                	add rbx, 3
 20473 0000EBA9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20474 0000EBAD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20475 0000EBB2 4C8D4DF8                	lea r9, [rbp - 8]
 20476 0000EBB6 B906000000              	mov rcx, 6
 20477                                  .L_tc_recycle_frame_loop_00b0:
 20478 0000EBBB 4883F900                	cmp rcx, 0
 20479 0000EBBF 7413                    	je .L_tc_recycle_frame_done_00b0
 20480 0000EBC1 4D8B11                  	mov r10, qword [r9]
 20481 0000EBC4 4D8910                  	mov qword [r8], r10
 20482 0000EBC7 4983E808                	sub r8, 8
 20483 0000EBCB 4983E908                	sub r9, 8
 20484 0000EBCF 48FFC9                  	dec rcx
 20485 0000EBD2 EBE7                    	jmp .L_tc_recycle_frame_loop_00b0
 20486                                  .L_tc_recycle_frame_done_00b0:
 20487 0000EBD4 498D6008                	lea rsp, [r8 + 8]
 20488 0000EBD8 5D                      	pop rbp ; restore the old rbp
 20489 0000EBD9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20490 0000EBDC C9                      	leave
 20491 0000EBDD C22000                  	ret AND_KILL_FRAME(2)
 20492                                  .L_lambda_simple_end_0078:	; new closure is in rax
 20493 0000EBE0 50                      	push rax
 20494 0000EBE1 6A01                    	push 1	; arg count
 20495 0000EBE3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20496 0000EBE8 E8688A0000              	call malloc
 20497 0000EBED 50                      	push rax
 20498 0000EBEE BF08000000              	mov rdi, 8 * 1	; new rib
 20499 0000EBF3 E85D8A0000              	call malloc
 20500 0000EBF8 50                      	push rax
 20501 0000EBF9 BF18000000              	mov rdi, 8 * 3	; extended env
 20502 0000EBFE E8528A0000              	call malloc
 20503 0000EC03 488B7D10                	mov rdi, ENV
 20504 0000EC07 BE00000000              	mov rsi, 0
 20505 0000EC0C BA01000000              	mov rdx, 1
 20506                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 20507 0000EC11 4883FE02                	cmp rsi, 2
 20508 0000EC15 7410                    	je .L_lambda_simple_env_end_007a
 20509 0000EC17 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20510 0000EC1B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20511 0000EC1F 48FFC6                  	inc rsi
 20512 0000EC22 48FFC2                  	inc rdx
 20513 0000EC25 EBEA                    	jmp .L_lambda_simple_env_loop_007a
 20514                                  .L_lambda_simple_env_end_007a:
 20515 0000EC27 5B                      	pop rbx
 20516 0000EC28 BE00000000              	mov rsi, 0
 20517                                  .L_lambda_simple_params_loop_007a:	; copy params
 20518 0000EC2D 4883FE01                	cmp rsi, 1
 20519 0000EC31 740E                    	je .L_lambda_simple_params_end_007a
 20520 0000EC33 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20521 0000EC38 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20522 0000EC3C 48FFC6                  	inc rsi
 20523 0000EC3F EBEC                    	jmp .L_lambda_simple_params_loop_007a
 20524                                  .L_lambda_simple_params_end_007a:
 20525 0000EC41 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20526 0000EC44 4889C3                  	mov rbx, rax
 20527 0000EC47 58                      	pop rax
 20528 0000EC48 C60004                  	mov byte [rax], T_closure
 20529 0000EC4B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20530 0000EC4F 48C74009[5CEC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 20531 0000EC57 E9E6040000              	jmp .L_lambda_simple_end_007a
 20532                                  .L_lambda_simple_code_007a:	; lambda-simple body
 20533 0000EC5C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20534 0000EC62 740B                    	je .L_lambda_simple_arity_check_ok_007a
 20535 0000EC64 FF742410                	push qword [rsp + 8 * 2]
 20536 0000EC68 6A01                    	push 1
 20537 0000EC6A E99F890000              	jmp L_error_incorrect_arity_simple
 20538                                  .L_lambda_simple_arity_check_ok_007a:
 20539 0000EC6F C8000000                	enter 0, 0
 20540                                  	; preparing a tail-call
 20541 0000EC73 48B8-                   	mov rax, L_constants + 1993
 20541 0000EC75 [C907000000000000] 
 20542 0000EC7D 50                      	push rax
 20543 0000EC7E 6A01                    	push 1	; arg count
 20544 0000EC80 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20545 0000EC85 E8CB890000              	call malloc
 20546 0000EC8A 50                      	push rax
 20547 0000EC8B BF08000000              	mov rdi, 8 * 1	; new rib
 20548 0000EC90 E8C0890000              	call malloc
 20549 0000EC95 50                      	push rax
 20550 0000EC96 BF20000000              	mov rdi, 8 * 4	; extended env
 20551 0000EC9B E8B5890000              	call malloc
 20552 0000ECA0 488B7D10                	mov rdi, ENV
 20553 0000ECA4 BE00000000              	mov rsi, 0
 20554 0000ECA9 BA01000000              	mov rdx, 1
 20555                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 20556 0000ECAE 4883FE03                	cmp rsi, 3
 20557 0000ECB2 7410                    	je .L_lambda_simple_env_end_007b
 20558 0000ECB4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20559 0000ECB8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20560 0000ECBC 48FFC6                  	inc rsi
 20561 0000ECBF 48FFC2                  	inc rdx
 20562 0000ECC2 EBEA                    	jmp .L_lambda_simple_env_loop_007b
 20563                                  .L_lambda_simple_env_end_007b:
 20564 0000ECC4 5B                      	pop rbx
 20565 0000ECC5 BE00000000              	mov rsi, 0
 20566                                  .L_lambda_simple_params_loop_007b:	; copy params
 20567 0000ECCA 4883FE01                	cmp rsi, 1
 20568 0000ECCE 740E                    	je .L_lambda_simple_params_end_007b
 20569 0000ECD0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20570 0000ECD5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20571 0000ECD9 48FFC6                  	inc rsi
 20572 0000ECDC EBEC                    	jmp .L_lambda_simple_params_loop_007b
 20573                                  .L_lambda_simple_params_end_007b:
 20574 0000ECDE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20575 0000ECE1 4889C3                  	mov rbx, rax
 20576 0000ECE4 58                      	pop rax
 20577 0000ECE5 C60004                  	mov byte [rax], T_closure
 20578 0000ECE8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20579 0000ECEC 48C74009[F9EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 20580 0000ECF4 E9F7030000              	jmp .L_lambda_simple_end_007b
 20581                                  .L_lambda_simple_code_007b:	; lambda-simple body
 20582 0000ECF9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20583 0000ECFF 740B                    	je .L_lambda_simple_arity_check_ok_007b
 20584 0000ED01 FF742410                	push qword [rsp + 8 * 2]
 20585 0000ED05 6A01                    	push 1
 20586 0000ED07 E902890000              	jmp L_error_incorrect_arity_simple
 20587                                  .L_lambda_simple_arity_check_ok_007b:
 20588 0000ED0C C8000000                	enter 0, 0
 20589 0000ED10 BF08000000              	mov rdi, 8*1
 20590 0000ED15 E83B890000              	call malloc
 20591 0000ED1A 488B5D20                	mov rbx, PARAM(0)
 20592 0000ED1E 488918                  	mov qword [rax], rbx
 20593 0000ED21 48894520                	mov PARAM(0), rax
 20594 0000ED25 48B8-                   	mov rax, sob_void
 20594 0000ED27 [0000000000000000] 
 20595                                  
 20596 0000ED2F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20597 0000ED34 E81C890000              	call malloc
 20598 0000ED39 50                      	push rax
 20599 0000ED3A BF08000000              	mov rdi, 8 * 1	; new rib
 20600 0000ED3F E811890000              	call malloc
 20601 0000ED44 50                      	push rax
 20602 0000ED45 BF28000000              	mov rdi, 8 * 5	; extended env
 20603 0000ED4A E806890000              	call malloc
 20604 0000ED4F 488B7D10                	mov rdi, ENV
 20605 0000ED53 BE00000000              	mov rsi, 0
 20606 0000ED58 BA01000000              	mov rdx, 1
 20607                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 20608 0000ED5D 4883FE04                	cmp rsi, 4
 20609 0000ED61 7410                    	je .L_lambda_simple_env_end_007c
 20610 0000ED63 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20611 0000ED67 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20612 0000ED6B 48FFC6                  	inc rsi
 20613 0000ED6E 48FFC2                  	inc rdx
 20614 0000ED71 EBEA                    	jmp .L_lambda_simple_env_loop_007c
 20615                                  .L_lambda_simple_env_end_007c:
 20616 0000ED73 5B                      	pop rbx
 20617 0000ED74 BE00000000              	mov rsi, 0
 20618                                  .L_lambda_simple_params_loop_007c:	; copy params
 20619 0000ED79 4883FE01                	cmp rsi, 1
 20620 0000ED7D 740E                    	je .L_lambda_simple_params_end_007c
 20621 0000ED7F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20622 0000ED84 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20623 0000ED88 48FFC6                  	inc rsi
 20624 0000ED8B EBEC                    	jmp .L_lambda_simple_params_loop_007c
 20625                                  .L_lambda_simple_params_end_007c:
 20626 0000ED8D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20627 0000ED90 4889C3                  	mov rbx, rax
 20628 0000ED93 58                      	pop rax
 20629 0000ED94 C60004                  	mov byte [rax], T_closure
 20630 0000ED97 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20631 0000ED9B 48C74009[A8ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 20632 0000EDA3 E95C010000              	jmp .L_lambda_simple_end_007c
 20633                                  .L_lambda_simple_code_007c:	; lambda-simple body
 20634 0000EDA8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20635 0000EDAE 740B                    	je .L_lambda_simple_arity_check_ok_007c
 20636 0000EDB0 FF742410                	push qword [rsp + 8 * 2]
 20637 0000EDB4 6A02                    	push 2
 20638 0000EDB6 E953880000              	jmp L_error_incorrect_arity_simple
 20639                                  .L_lambda_simple_arity_check_ok_007c:
 20640 0000EDBB C8000000                	enter 0, 0
 20641                                  	; preparing a non-tail-call
 20642 0000EDBF 488B4528                	mov rax, PARAM(1)	; param strs
 20643 0000EDC3 50                      	push rax
 20644 0000EDC4 6A01                    	push 1	; arg count
 20645 0000EDC6 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 20646 0000EDCE 803805                  	cmp byte [rax], T_undefined
 20647 0000EDD1 0F8451870000            	je L_error_fvar_undefined
 20648 0000EDD7 803804                  	cmp byte [rax], T_closure
 20649 0000EDDA 0F85CC870000            	jne L_error_non_closure
 20650 0000EDE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20651 0000EDE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20652 0000EDE6 483D[02000000]          	cmp rax, sob_boolean_false
 20653 0000EDEC 0F850E010000            	jne .L_or_end_000d
 20654                                  	; preparing a non-tail-call
 20655                                  	; preparing a non-tail-call
 20656 0000EDF2 488B4528                	mov rax, PARAM(1)	; param strs
 20657 0000EDF6 50                      	push rax
 20658 0000EDF7 6A01                    	push 1	; arg count
 20659 0000EDF9 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20660 0000EE01 803805                  	cmp byte [rax], T_undefined
 20661 0000EE04 0F841E870000            	je L_error_fvar_undefined
 20662 0000EE0A 803804                  	cmp byte [rax], T_closure
 20663 0000EE0D 0F8599870000            	jne L_error_non_closure
 20664 0000EE13 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20665 0000EE16 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20666 0000EE19 50                      	push rax
 20667 0000EE1A 488B4520                	mov rax, PARAM(0)	; param str
 20668 0000EE1E 50                      	push rax
 20669 0000EE1F 6A02                    	push 2	; arg count
 20670 0000EE21 488B4510                	mov rax, ENV
 20671 0000EE25 488B4008                	mov rax, qword [rax + 8 * 1]
 20672 0000EE29 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 20673 0000EE2C 803804                  	cmp byte [rax], T_closure
 20674 0000EE2F 0F8577870000            	jne L_error_non_closure
 20675 0000EE35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20676 0000EE38 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20677 0000EE3B 483D[02000000]          	cmp rax, sob_boolean_false
 20678 0000EE41 0F84AF000000            	je .L_if_else_005f
 20679                                  	; preparing a tail-call
 20680                                  	; preparing a non-tail-call
 20681 0000EE47 488B4528                	mov rax, PARAM(1)	; param strs
 20682 0000EE4B 50                      	push rax
 20683 0000EE4C 6A01                    	push 1	; arg count
 20684 0000EE4E 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20685 0000EE56 803805                  	cmp byte [rax], T_undefined
 20686 0000EE59 0F84C9860000            	je L_error_fvar_undefined
 20687 0000EE5F 803804                  	cmp byte [rax], T_closure
 20688 0000EE62 0F8544870000            	jne L_error_non_closure
 20689 0000EE68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20690 0000EE6B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20691 0000EE6E 50                      	push rax
 20692                                  	; preparing a non-tail-call
 20693 0000EE6F 488B4528                	mov rax, PARAM(1)	; param strs
 20694 0000EE73 50                      	push rax
 20695 0000EE74 6A01                    	push 1	; arg count
 20696 0000EE76 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20697 0000EE7E 803805                  	cmp byte [rax], T_undefined
 20698 0000EE81 0F84A1860000            	je L_error_fvar_undefined
 20699 0000EE87 803804                  	cmp byte [rax], T_closure
 20700 0000EE8A 0F851C870000            	jne L_error_non_closure
 20701 0000EE90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20702 0000EE93 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20703 0000EE96 50                      	push rax
 20704 0000EE97 6A02                    	push 2	; arg count
 20705 0000EE99 488B4510                	mov rax, ENV
 20706 0000EE9D 488B00                  	mov rax, qword [rax + 8 * 0]
 20707 0000EEA0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20708 0000EEA3 488B00                  	mov rax, qword [rax]
 20709 0000EEA6 803804                  	cmp byte [rax], T_closure
 20710 0000EEA9 0F85FD860000            	jne L_error_non_closure
 20711 0000EEAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 20712 0000EEB2 FF7508                  	push qword [rbp + 8 * 1]
 20713                                   ; old ret addr
 20714 0000EEB5 FF7500                  	push qword [rbp]
 20715                                   ; restore the old rbp
 20716 0000EEB8 BB02000000              	mov rbx, 2
 20717 0000EEBD 4883C303                	add rbx, 3
 20718 0000EEC1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20719 0000EEC5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20720 0000EECA 4C8D4DF8                	lea r9, [rbp - 8]
 20721 0000EECE B906000000              	mov rcx, 6
 20722                                  .L_tc_recycle_frame_loop_00b3:
 20723 0000EED3 4883F900                	cmp rcx, 0
 20724 0000EED7 7413                    	je .L_tc_recycle_frame_done_00b3
 20725 0000EED9 4D8B11                  	mov r10, qword [r9]
 20726 0000EEDC 4D8910                  	mov qword [r8], r10
 20727 0000EEDF 4983E808                	sub r8, 8
 20728 0000EEE3 4983E908                	sub r9, 8
 20729 0000EEE7 48FFC9                  	dec rcx
 20730 0000EEEA EBE7                    	jmp .L_tc_recycle_frame_loop_00b3
 20731                                  .L_tc_recycle_frame_done_00b3:
 20732 0000EEEC 498D6008                	lea rsp, [r8 + 8]
 20733 0000EEF0 5D                      	pop rbp ; restore the old rbp
 20734 0000EEF1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20735 0000EEF4 EB0A                    	jmp .L_if_end_005f
 20736                                  .L_if_else_005f:
 20737 0000EEF6 48B8-                   	mov rax, L_constants + 2
 20737 0000EEF8 [0200000000000000] 
 20738                                  .L_if_end_005f:
 20739                                  .L_or_end_000d:
 20740 0000EF00 C9                      	leave
 20741 0000EF01 C22000                  	ret AND_KILL_FRAME(2)
 20742                                  .L_lambda_simple_end_007c:	; new closure is in rax
 20743 0000EF04 50                      	push rax
 20744 0000EF05 488B4520                	mov rax, PARAM(0)	; param run
 20745 0000EF09 8F00                    	pop qword [rax]
 20746 0000EF0B 48B8-                   	mov rax, sob_void
 20746 0000EF0D [0000000000000000] 
 20747                                  
 20748 0000EF15 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20749 0000EF1A E836870000              	call malloc
 20750 0000EF1F 50                      	push rax
 20751 0000EF20 BF08000000              	mov rdi, 8 * 1	; new rib
 20752 0000EF25 E82B870000              	call malloc
 20753 0000EF2A 50                      	push rax
 20754 0000EF2B BF28000000              	mov rdi, 8 * 5	; extended env
 20755 0000EF30 E820870000              	call malloc
 20756 0000EF35 488B7D10                	mov rdi, ENV
 20757 0000EF39 4831F6                  	 xor rsi, rsi
 20758 0000EF3C 4831D2                  	 xor rdx, rdx
 20759 0000EF3F 48FFC2                  	inc rdx
 20760                                  .L_lambda_opt_env_loop_0013:	; 
 20761 0000EF42 4883FE04                	cmp rsi, 4
 20762 0000EF46 7410                    	je .L_lambda_opt_env_end_0013
 20763 0000EF48 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20764 0000EF4C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20765 0000EF50 48FFC6                  	inc rsi
 20766 0000EF53 48FFC2                  	inc rdx
 20767 0000EF56 EBEA                    	jmp .L_lambda_opt_env_loop_0013
 20768                                  .L_lambda_opt_env_end_0013:
 20769 0000EF58 5B                      	pop rbx
 20770 0000EF59 4831F6                  	xor rsi, rsi
 20771                                  .L_lambda_opt_params_loop_0013:	; copy params
 20772 0000EF5C 4883FE01                	cmp rsi, 1
 20773 0000EF60 740E                    	je .L_lambda_opt_params_end_0013
 20774 0000EF62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20775 0000EF67 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20776 0000EF6B 48FFC6                  	inc rsi
 20777 0000EF6E EBEC                    	jmp .L_lambda_opt_params_loop_0013
 20778                                  .L_lambda_opt_params_end_0013:
 20779 0000EF70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20780 0000EF73 4889C3                  	mov rbx, rax
 20781 0000EF76 58                      	pop rax
 20782 0000EF77 C60004                  	mov byte [rax], T_closure
 20783 0000EF7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20784 0000EF7E 48C74009[8BEF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 20785 0000EF86 E961010000              	jmp .L_lambda_opt_end_0013
 20786                                  .L_lambda_opt_code_0013:
 20787 0000EF8B 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 20788 0000EF90 4983FF01                	cmp r15, 1
 20789 0000EF94 7409                    	je .L_lambda_opt_arity_check_exact_0013
 20790 0000EF96 7F57                    	jg .L_lambda_opt_arity_check_more_0013
 20791 0000EF98 6A01                    	push 1
 20792 0000EF9A E983860000              	jmp L_error_incorrect_arity_opt
 20793                                  .L_lambda_opt_arity_check_exact_0013: ;Exact case
 20794 0000EF9F 4C8B0424                	mov r8, qword [rsp -8 * 0]
 20795 0000EFA3 4C894424F8              	mov qword [rsp -8], r8
 20796 0000EFA8 4C8B442408              	mov r8, qword [rsp +8]
 20797 0000EFAD 4C890424                	mov qword [rsp +8 * 0], r8
 20798 0000EFB1 4C8B442410              	mov r8, qword [rsp +8 * 2]
 20799 0000EFB6 4C89C1                  	mov rcx, r8
 20800 0000EFB9 49FFC0                  	inc r8
 20801 0000EFBC 4C89442408              	mov qword [rsp +8], r8
 20802 0000EFC1 4889E2                  	mov rdx, rsp
 20803 0000EFC4 4883C218                	add rdx, 24
 20804                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0013:
 20805 0000EFC8 4883F900                	cmp rcx, 0
 20806 0000EFCC 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0013
 20807 0000EFCE 4C8B02                  	mov r8, qword [rdx]
 20808 0000EFD1 4C8942F8                	mov qword [rdx - 8], r8
 20809 0000EFD5 4883C208                	add rdx, 8
 20810 0000EFD9 48FFC9                  	dec rcx
 20811 0000EFDC EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0013
 20812                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0013:
 20813 0000EFDE 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 20814 0000EFE6 4883EC08                	sub rsp, 8
 20815 0000EFEA E985000000              	jmp .L_lambda_opt_stack_adjusted_0013
 20816                                  .L_lambda_opt_arity_check_more_0013:
 20817 0000EFEF 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 20818 0000EFF4 4D89C4                  	mov r12, r8
 20819 0000EFF7 4C89C1                  	mov rcx, r8
 20820 0000EFFA 4D8D6802                	lea r13, [r8 + 2] 
 20821 0000EFFE 4883E901                	sub rcx, 1
 20822 0000F002 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 20823 0000F007 49BE-                   	mov r14, sob_nil
 20823 0000F009 [0100000000000000] 
 20824                                  .L_lambda_opt_create_list_of_opt_params_0013:
 20825 0000F011 4883F900                	cmp rcx, 0
 20826 0000F015 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0013
 20827 0000F017 BF11000000              	mov rdi, 17
 20828 0000F01C E834860000              	call malloc
 20829 0000F021 C60021                  	mov byte [rax], T_pair
 20830 0000F024 498B1B                  	mov rbx, qword [r11]
 20831 0000F027 48895801                	mov qword [rax +1], rbx
 20832 0000F02B 4C897009                	mov qword [rax + 1 + 8], r14
 20833 0000F02F 4989C6                  	mov r14, rax
 20834 0000F032 48FFC9                  	dec rcx
 20835 0000F035 4983EB08                	sub r11, 8
 20836 0000F039 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0013
 20837                                  .L_lambda_opt_create_list_of_opt_params_end_0013:
 20838 0000F03B 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 20839 0000F040 4D8932                  	mov qword [r10], r14
 20840 0000F043 4E8D2CED00000000        	lea r13, [8 * r13]
 20841 0000F04B 4901E5                  	add r13, rsp
 20842 0000F04E B905000000              	mov rcx, 4 + 1
 20843                                  .L_lambda_opt_stack_shrink_loop_0013:
 20844 0000F053 4883F900                	cmp rcx, 0
 20845 0000F057 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0013
 20846 0000F059 4D8B1A                  	mov r11, qword [r10]
 20847 0000F05C 4D895D00                	mov qword [r13], r11
 20848 0000F060 4983EA08                	sub r10, 8
 20849 0000F064 4983ED08                	sub r13, 8
 20850 0000F068 48FFC9                  	dec rcx
 20851 0000F06B EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 20852                                  .L_lambda_opt_stack_shrink_loop_exit_0013:
 20853 0000F06D 4983C508                	add r13, 8
 20854 0000F071 4C89EC                  	mov rsp, r13
 20855                                  .L_lambda_opt_stack_adjusted_0013:
 20856 0000F074 48C744241002000000      	mov qword [rsp + 8*2], 2
 20857 0000F07D C8000000                	enter 0, 0
 20858                                  	; preparing a tail-call
 20859 0000F081 488B4528                	mov rax, PARAM(1)	; param strs
 20860 0000F085 50                      	push rax
 20861 0000F086 488B4520                	mov rax, PARAM(0)	; param str
 20862 0000F08A 50                      	push rax
 20863 0000F08B 6A02                    	push 2	; arg count
 20864 0000F08D 488B4510                	mov rax, ENV
 20865 0000F091 488B00                  	mov rax, qword [rax + 8 * 0]
 20866 0000F094 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20867 0000F097 488B00                  	mov rax, qword [rax]
 20868 0000F09A 803804                  	cmp byte [rax], T_closure
 20869 0000F09D 0F8509850000            	jne L_error_non_closure
 20870 0000F0A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20871 0000F0A6 FF7508                  	push qword [rbp + 8 * 1]
 20872                                   ; old ret addr
 20873 0000F0A9 FF7500                  	push qword [rbp]
 20874                                   ; restore the old rbp
 20875 0000F0AC BB02000000              	mov rbx, 2
 20876 0000F0B1 4883C303                	add rbx, 3
 20877 0000F0B5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20878 0000F0B9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20879 0000F0BE 4C8D4DF8                	lea r9, [rbp - 8]
 20880 0000F0C2 B906000000              	mov rcx, 6
 20881                                  .L_tc_recycle_frame_loop_00b4:
 20882 0000F0C7 4883F900                	cmp rcx, 0
 20883 0000F0CB 7413                    	je .L_tc_recycle_frame_done_00b4
 20884 0000F0CD 4D8B11                  	mov r10, qword [r9]
 20885 0000F0D0 4D8910                  	mov qword [r8], r10
 20886 0000F0D3 4983E808                	sub r8, 8
 20887 0000F0D7 4983E908                	sub r9, 8
 20888 0000F0DB 48FFC9                  	dec rcx
 20889 0000F0DE EBE7                    	jmp .L_tc_recycle_frame_loop_00b4
 20890                                  .L_tc_recycle_frame_done_00b4:
 20891 0000F0E0 498D6008                	lea rsp, [r8 + 8]
 20892 0000F0E4 5D                      	pop rbp ; restore the old rbp
 20893 0000F0E5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20894 0000F0E8 C9                      	leave
 20895 0000F0E9 C22000                  	ret 8 * (2 + 2)
 20896                                  .L_lambda_opt_end_0013:	; new closure is in rax
 20897 0000F0EC C9                      	leave
 20898 0000F0ED C21800                  	ret AND_KILL_FRAME(1)
 20899                                  .L_lambda_simple_end_007b:	; new closure is in rax
 20900 0000F0F0 803804                  	cmp byte [rax], T_closure
 20901 0000F0F3 0F85B3840000            	jne L_error_non_closure
 20902 0000F0F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20903 0000F0FC FF7508                  	push qword [rbp + 8 * 1]
 20904                                   ; old ret addr
 20905 0000F0FF FF7500                  	push qword [rbp]
 20906                                   ; restore the old rbp
 20907 0000F102 BB01000000              	mov rbx, 1
 20908 0000F107 4883C303                	add rbx, 3
 20909 0000F10B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20910 0000F10F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20911 0000F114 4C8D4DF8                	lea r9, [rbp - 8]
 20912 0000F118 B905000000              	mov rcx, 5
 20913                                  .L_tc_recycle_frame_loop_00b2:
 20914 0000F11D 4883F900                	cmp rcx, 0
 20915 0000F121 7413                    	je .L_tc_recycle_frame_done_00b2
 20916 0000F123 4D8B11                  	mov r10, qword [r9]
 20917 0000F126 4D8910                  	mov qword [r8], r10
 20918 0000F129 4983E808                	sub r8, 8
 20919 0000F12D 4983E908                	sub r9, 8
 20920 0000F131 48FFC9                  	dec rcx
 20921 0000F134 EBE7                    	jmp .L_tc_recycle_frame_loop_00b2
 20922                                  .L_tc_recycle_frame_done_00b2:
 20923 0000F136 498D6008                	lea rsp, [r8 + 8]
 20924 0000F13A 5D                      	pop rbp ; restore the old rbp
 20925 0000F13B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20926 0000F13E C9                      	leave
 20927 0000F13F C21800                  	ret AND_KILL_FRAME(1)
 20928                                  .L_lambda_simple_end_007a:	; new closure is in rax
 20929 0000F142 803804                  	cmp byte [rax], T_closure
 20930 0000F145 0F8561840000            	jne L_error_non_closure
 20931 0000F14B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20932 0000F14E FF7508                  	push qword [rbp + 8 * 1]
 20933                                   ; old ret addr
 20934 0000F151 FF7500                  	push qword [rbp]
 20935                                   ; restore the old rbp
 20936 0000F154 BB01000000              	mov rbx, 1
 20937 0000F159 4883C303                	add rbx, 3
 20938 0000F15D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20939 0000F161 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20940 0000F166 4C8D4DF8                	lea r9, [rbp - 8]
 20941 0000F16A B905000000              	mov rcx, 5
 20942                                  .L_tc_recycle_frame_loop_00af:
 20943 0000F16F 4883F900                	cmp rcx, 0
 20944 0000F173 7413                    	je .L_tc_recycle_frame_done_00af
 20945 0000F175 4D8B11                  	mov r10, qword [r9]
 20946 0000F178 4D8910                  	mov qword [r8], r10
 20947 0000F17B 4983E808                	sub r8, 8
 20948 0000F17F 4983E908                	sub r9, 8
 20949 0000F183 48FFC9                  	dec rcx
 20950 0000F186 EBE7                    	jmp .L_tc_recycle_frame_loop_00af
 20951                                  .L_tc_recycle_frame_done_00af:
 20952 0000F188 498D6008                	lea rsp, [r8 + 8]
 20953 0000F18C 5D                      	pop rbp ; restore the old rbp
 20954 0000F18D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20955 0000F190 C9                      	leave
 20956 0000F191 C21800                  	ret AND_KILL_FRAME(1)
 20957                                  .L_lambda_simple_end_0076:	; new closure is in rax
 20958 0000F194 803804                  	cmp byte [rax], T_closure
 20959 0000F197 0F850F840000            	jne L_error_non_closure
 20960 0000F19D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20961 0000F1A0 FF7508                  	push qword [rbp + 8 * 1]
 20962                                   ; old ret addr
 20963 0000F1A3 FF7500                  	push qword [rbp]
 20964                                   ; restore the old rbp
 20965 0000F1A6 BB01000000              	mov rbx, 1
 20966 0000F1AB 4883C303                	add rbx, 3
 20967 0000F1AF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 20968 0000F1B3 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 20969 0000F1B8 4C8D4DF8                	lea r9, [rbp - 8]
 20970 0000F1BC B905000000              	mov rcx, 5
 20971                                  .L_tc_recycle_frame_loop_00ad:
 20972 0000F1C1 4883F900                	cmp rcx, 0
 20973 0000F1C5 7413                    	je .L_tc_recycle_frame_done_00ad
 20974 0000F1C7 4D8B11                  	mov r10, qword [r9]
 20975 0000F1CA 4D8910                  	mov qword [r8], r10
 20976 0000F1CD 4983E808                	sub r8, 8
 20977 0000F1D1 4983E908                	sub r9, 8
 20978 0000F1D5 48FFC9                  	dec rcx
 20979 0000F1D8 EBE7                    	jmp .L_tc_recycle_frame_loop_00ad
 20980                                  .L_tc_recycle_frame_done_00ad:
 20981 0000F1DA 498D6008                	lea rsp, [r8 + 8]
 20982 0000F1DE 5D                      	pop rbp ; restore the old rbp
 20983 0000F1DF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20984 0000F1E2 C9                      	leave
 20985 0000F1E3 C21800                  	ret AND_KILL_FRAME(1)
 20986                                  .L_lambda_simple_end_0075:	; new closure is in rax
 20987 0000F1E6 50                      	push rax
 20988 0000F1E7 6A01                    	push 1	; arg count
 20989 0000F1E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20990 0000F1EE E862840000              	call malloc
 20991 0000F1F3 50                      	push rax
 20992 0000F1F4 BF00000000              	mov rdi, 8 * 0	; new rib
 20993 0000F1F9 E857840000              	call malloc
 20994 0000F1FE 50                      	push rax
 20995 0000F1FF BF08000000              	mov rdi, 8 * 1	; extended env
 20996 0000F204 E84C840000              	call malloc
 20997 0000F209 488B7D10                	mov rdi, ENV
 20998 0000F20D BE00000000              	mov rsi, 0
 20999 0000F212 BA01000000              	mov rdx, 1
 21000                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 21001 0000F217 4883FE00                	cmp rsi, 0
 21002 0000F21B 7410                    	je .L_lambda_simple_env_end_007d
 21003 0000F21D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21004 0000F221 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21005 0000F225 48FFC6                  	inc rsi
 21006 0000F228 48FFC2                  	inc rdx
 21007 0000F22B EBEA                    	jmp .L_lambda_simple_env_loop_007d
 21008                                  .L_lambda_simple_env_end_007d:
 21009 0000F22D 5B                      	pop rbx
 21010 0000F22E BE00000000              	mov rsi, 0
 21011                                  .L_lambda_simple_params_loop_007d:	; copy params
 21012 0000F233 4883FE00                	cmp rsi, 0
 21013 0000F237 740E                    	je .L_lambda_simple_params_end_007d
 21014 0000F239 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21015 0000F23E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21016 0000F242 48FFC6                  	inc rsi
 21017 0000F245 EBEC                    	jmp .L_lambda_simple_params_loop_007d
 21018                                  .L_lambda_simple_params_end_007d:
 21019 0000F247 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21020 0000F24A 4889C3                  	mov rbx, rax
 21021 0000F24D 58                      	pop rax
 21022 0000F24E C60004                  	mov byte [rax], T_closure
 21023 0000F251 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21024 0000F255 48C74009[62F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 21025 0000F25D E98D000000              	jmp .L_lambda_simple_end_007d
 21026                                  .L_lambda_simple_code_007d:	; lambda-simple body
 21027 0000F262 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21028 0000F268 740B                    	je .L_lambda_simple_arity_check_ok_007d
 21029 0000F26A FF742410                	push qword [rsp + 8 * 2]
 21030 0000F26E 6A01                    	push 1
 21031 0000F270 E999830000              	jmp L_error_incorrect_arity_simple
 21032                                  .L_lambda_simple_arity_check_ok_007d:
 21033 0000F275 C8000000                	enter 0, 0
 21034                                  	; preparing a non-tail-call
 21035 0000F279 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 21036 0000F281 803805                  	cmp byte [rax], T_undefined
 21037 0000F284 0F849E820000            	je L_error_fvar_undefined
 21038 0000F28A 50                      	push rax
 21039 0000F28B 6A01                    	push 1	; arg count
 21040 0000F28D 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21041 0000F291 803804                  	cmp byte [rax], T_closure
 21042 0000F294 0F8512830000            	jne L_error_non_closure
 21043 0000F29A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21044 0000F29D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21045 0000F2A0 48890425[BC160000]      	mov qword [free_var_135], rax
 21046 0000F2A8 48B8-                   	mov rax, sob_void
 21046 0000F2AA [0000000000000000] 
 21047                                  
 21048                                  	; preparing a non-tail-call
 21049 0000F2B2 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 21050 0000F2BA 803805                  	cmp byte [rax], T_undefined
 21051 0000F2BD 0F8465820000            	je L_error_fvar_undefined
 21052 0000F2C3 50                      	push rax
 21053 0000F2C4 6A01                    	push 1	; arg count
 21054 0000F2C6 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21055 0000F2CA 803804                  	cmp byte [rax], T_closure
 21056 0000F2CD 0F85D9820000            	jne L_error_non_closure
 21057 0000F2D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21058 0000F2D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21059 0000F2D9 48890425[F0150000]      	mov qword [free_var_123], rax
 21060 0000F2E1 48B8-                   	mov rax, sob_void
 21060 0000F2E3 [0000000000000000] 
 21061 0000F2EB C9                      	leave
 21062 0000F2EC C21800                  	ret AND_KILL_FRAME(1)
 21063                                  .L_lambda_simple_end_007d:	; new closure is in rax
 21064 0000F2EF 803804                  	cmp byte [rax], T_closure
 21065 0000F2F2 0F85B4820000            	jne L_error_non_closure
 21066 0000F2F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21067 0000F2FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 21068                                  
 21069 0000F2FE 4889C7                  	mov rdi, rax
 21070 0000F301 E8A4850000              	call print_sexpr_if_not_void
 21071 0000F306 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21072 0000F30B E845830000              	call malloc
 21073 0000F310 50                      	push rax
 21074 0000F311 BF00000000              	mov rdi, 8 * 0	; new rib
 21075 0000F316 E83A830000              	call malloc
 21076 0000F31B 50                      	push rax
 21077 0000F31C BF08000000              	mov rdi, 8 * 1	; extended env
 21078 0000F321 E82F830000              	call malloc
 21079 0000F326 488B7D10                	mov rdi, ENV
 21080 0000F32A BE00000000              	mov rsi, 0
 21081 0000F32F BA01000000              	mov rdx, 1
 21082                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 21083 0000F334 4883FE00                	cmp rsi, 0
 21084 0000F338 7410                    	je .L_lambda_simple_env_end_007e
 21085 0000F33A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21086 0000F33E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21087 0000F342 48FFC6                  	inc rsi
 21088 0000F345 48FFC2                  	inc rdx
 21089 0000F348 EBEA                    	jmp .L_lambda_simple_env_loop_007e
 21090                                  .L_lambda_simple_env_end_007e:
 21091 0000F34A 5B                      	pop rbx
 21092 0000F34B BE00000000              	mov rsi, 0
 21093                                  .L_lambda_simple_params_loop_007e:	; copy params
 21094 0000F350 4883FE00                	cmp rsi, 0
 21095 0000F354 740E                    	je .L_lambda_simple_params_end_007e
 21096 0000F356 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21097 0000F35B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21098 0000F35F 48FFC6                  	inc rsi
 21099 0000F362 EBEC                    	jmp .L_lambda_simple_params_loop_007e
 21100                                  .L_lambda_simple_params_end_007e:
 21101 0000F364 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21102 0000F367 4889C3                  	mov rbx, rax
 21103 0000F36A 58                      	pop rax
 21104 0000F36B C60004                  	mov byte [rax], T_closure
 21105 0000F36E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21106 0000F372 48C74009[7FF30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 21107 0000F37A E916010000              	jmp .L_lambda_simple_end_007e
 21108                                  .L_lambda_simple_code_007e:	; lambda-simple body
 21109 0000F37F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21110 0000F385 740B                    	je .L_lambda_simple_arity_check_ok_007e
 21111 0000F387 FF742410                	push qword [rsp + 8 * 2]
 21112 0000F38B 6A01                    	push 1
 21113 0000F38D E97C820000              	jmp L_error_incorrect_arity_simple
 21114                                  .L_lambda_simple_arity_check_ok_007e:
 21115 0000F392 C8000000                	enter 0, 0
 21116                                  	; preparing a non-tail-call
 21117 0000F396 488B4520                	mov rax, PARAM(0)	; param e
 21118 0000F39A 50                      	push rax
 21119 0000F39B 6A01                    	push 1	; arg count
 21120 0000F39D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21121 0000F3A5 803805                  	cmp byte [rax], T_undefined
 21122 0000F3A8 0F847A810000            	je L_error_fvar_undefined
 21123 0000F3AE 803804                  	cmp byte [rax], T_closure
 21124 0000F3B1 0F85F5810000            	jne L_error_non_closure
 21125 0000F3B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21126 0000F3BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 21127 0000F3BD 483D[02000000]          	cmp rax, sob_boolean_false
 21128 0000F3C3 0F85C8000000            	jne .L_or_end_000e
 21129                                  	; preparing a non-tail-call
 21130 0000F3C9 488B4520                	mov rax, PARAM(0)	; param e
 21131 0000F3CD 50                      	push rax
 21132 0000F3CE 6A01                    	push 1	; arg count
 21133 0000F3D0 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21134 0000F3D8 803805                  	cmp byte [rax], T_undefined
 21135 0000F3DB 0F8447810000            	je L_error_fvar_undefined
 21136 0000F3E1 803804                  	cmp byte [rax], T_closure
 21137 0000F3E4 0F85C2810000            	jne L_error_non_closure
 21138 0000F3EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 21139 0000F3ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 21140 0000F3F0 483D[02000000]          	cmp rax, sob_boolean_false
 21141 0000F3F6 0F848B000000            	je .L_if_else_0060
 21142                                  	; preparing a tail-call
 21143                                  	; preparing a non-tail-call
 21144 0000F3FC 488B4520                	mov rax, PARAM(0)	; param e
 21145 0000F400 50                      	push rax
 21146 0000F401 6A01                    	push 1	; arg count
 21147 0000F403 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21148 0000F40B 803805                  	cmp byte [rax], T_undefined
 21149 0000F40E 0F8414810000            	je L_error_fvar_undefined
 21150 0000F414 803804                  	cmp byte [rax], T_closure
 21151 0000F417 0F858F810000            	jne L_error_non_closure
 21152 0000F41D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21153 0000F420 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21154 0000F423 50                      	push rax
 21155 0000F424 6A01                    	push 1	; arg count
 21156 0000F426 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
 21157 0000F42E 803805                  	cmp byte [rax], T_undefined
 21158 0000F431 0F84F1800000            	je L_error_fvar_undefined
 21159 0000F437 803804                  	cmp byte [rax], T_closure
 21160 0000F43A 0F856C810000            	jne L_error_non_closure
 21161 0000F440 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21162 0000F443 FF7508                  	push qword [rbp + 8 * 1]
 21163                                   ; old ret addr
 21164 0000F446 FF7500                  	push qword [rbp]
 21165                                   ; restore the old rbp
 21166 0000F449 BB01000000              	mov rbx, 1
 21167 0000F44E 4883C303                	add rbx, 3
 21168 0000F452 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 21169 0000F456 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 21170 0000F45B 4C8D4DF8                	lea r9, [rbp - 8]
 21171 0000F45F B905000000              	mov rcx, 5
 21172                                  .L_tc_recycle_frame_loop_00b5:
 21173 0000F464 4883F900                	cmp rcx, 0
 21174 0000F468 7413                    	je .L_tc_recycle_frame_done_00b5
 21175 0000F46A 4D8B11                  	mov r10, qword [r9]
 21176 0000F46D 4D8910                  	mov qword [r8], r10
 21177 0000F470 4983E808                	sub r8, 8
 21178 0000F474 4983E908                	sub r9, 8
 21179 0000F478 48FFC9                  	dec rcx
 21180 0000F47B EBE7                    	jmp .L_tc_recycle_frame_loop_00b5
 21181                                  .L_tc_recycle_frame_done_00b5:
 21182 0000F47D 498D6008                	lea rsp, [r8 + 8]
 21183 0000F481 5D                      	pop rbp ; restore the old rbp
 21184 0000F482 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21185 0000F485 EB0A                    	jmp .L_if_end_0060
 21186                                  .L_if_else_0060:
 21187 0000F487 48B8-                   	mov rax, L_constants + 2
 21187 0000F489 [0200000000000000] 
 21188                                  .L_if_end_0060:
 21189                                  .L_or_end_000e:
 21190 0000F491 C9                      	leave
 21191 0000F492 C21800                  	ret AND_KILL_FRAME(1)
 21192                                  .L_lambda_simple_end_007e:	; new closure is in rax
 21193 0000F495 48890425[25140000]      	mov qword [free_var_96], rax
 21194 0000F49D 48B8-                   	mov rax, sob_void
 21194 0000F49F [0000000000000000] 
 21195                                  
 21196 0000F4A7 4889C7                  	mov rdi, rax
 21197 0000F4AA E8FB830000              	call print_sexpr_if_not_void
 21198                                  	; preparing a non-tail-call
 21199 0000F4AF 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 21200 0000F4B7 803805                  	cmp byte [rax], T_undefined
 21201 0000F4BA 0F8468800000            	je L_error_fvar_undefined
 21202 0000F4C0 50                      	push rax
 21203 0000F4C1 6A01                    	push 1	; arg count
 21204 0000F4C3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21205 0000F4C8 E888810000              	call malloc
 21206 0000F4CD 50                      	push rax
 21207 0000F4CE BF00000000              	mov rdi, 8 * 0	; new rib
 21208 0000F4D3 E87D810000              	call malloc
 21209 0000F4D8 50                      	push rax
 21210 0000F4D9 BF08000000              	mov rdi, 8 * 1	; extended env
 21211 0000F4DE E872810000              	call malloc
 21212 0000F4E3 488B7D10                	mov rdi, ENV
 21213 0000F4E7 BE00000000              	mov rsi, 0
 21214 0000F4EC BA01000000              	mov rdx, 1
 21215                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 21216 0000F4F1 4883FE00                	cmp rsi, 0
 21217 0000F4F5 7410                    	je .L_lambda_simple_env_end_007f
 21218 0000F4F7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21219 0000F4FB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21220 0000F4FF 48FFC6                  	inc rsi
 21221 0000F502 48FFC2                  	inc rdx
 21222 0000F505 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 21223                                  .L_lambda_simple_env_end_007f:
 21224 0000F507 5B                      	pop rbx
 21225 0000F508 BE00000000              	mov rsi, 0
 21226                                  .L_lambda_simple_params_loop_007f:	; copy params
 21227 0000F50D 4883FE00                	cmp rsi, 0
 21228 0000F511 740E                    	je .L_lambda_simple_params_end_007f
 21229 0000F513 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21230 0000F518 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21231 0000F51C 48FFC6                  	inc rsi
 21232 0000F51F EBEC                    	jmp .L_lambda_simple_params_loop_007f
 21233                                  .L_lambda_simple_params_end_007f:
 21234 0000F521 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21235 0000F524 4889C3                  	mov rbx, rax
 21236 0000F527 58                      	pop rax
 21237 0000F528 C60004                  	mov byte [rax], T_closure
 21238 0000F52B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21239 0000F52F 48C74009[3CF50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 21240 0000F537 E907040000              	jmp .L_lambda_simple_end_007f
 21241                                  .L_lambda_simple_code_007f:	; lambda-simple body
 21242 0000F53C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21243 0000F542 740B                    	je .L_lambda_simple_arity_check_ok_007f
 21244 0000F544 FF742410                	push qword [rsp + 8 * 2]
 21245 0000F548 6A01                    	push 1
 21246 0000F54A E9BF800000              	jmp L_error_incorrect_arity_simple
 21247                                  .L_lambda_simple_arity_check_ok_007f:
 21248 0000F54F C8000000                	enter 0, 0
 21249 0000F553 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21250 0000F558 E8F8800000              	call malloc
 21251 0000F55D 50                      	push rax
 21252 0000F55E BF08000000              	mov rdi, 8 * 1	; new rib
 21253 0000F563 E8ED800000              	call malloc
 21254 0000F568 50                      	push rax
 21255 0000F569 BF10000000              	mov rdi, 8 * 2	; extended env
 21256 0000F56E E8E2800000              	call malloc
 21257 0000F573 488B7D10                	mov rdi, ENV
 21258 0000F577 4831F6                  	 xor rsi, rsi
 21259 0000F57A 4831D2                  	 xor rdx, rdx
 21260 0000F57D 48FFC2                  	inc rdx
 21261                                  .L_lambda_opt_env_loop_0014:	; 
 21262 0000F580 4883FE01                	cmp rsi, 1
 21263 0000F584 7410                    	je .L_lambda_opt_env_end_0014
 21264 0000F586 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21265 0000F58A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21266 0000F58E 48FFC6                  	inc rsi
 21267 0000F591 48FFC2                  	inc rdx
 21268 0000F594 EBEA                    	jmp .L_lambda_opt_env_loop_0014
 21269                                  .L_lambda_opt_env_end_0014:
 21270 0000F596 5B                      	pop rbx
 21271 0000F597 4831F6                  	xor rsi, rsi
 21272                                  .L_lambda_opt_params_loop_0014:	; copy params
 21273 0000F59A 4883FE01                	cmp rsi, 1
 21274 0000F59E 740E                    	je .L_lambda_opt_params_end_0014
 21275 0000F5A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21276 0000F5A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21277 0000F5A9 48FFC6                  	inc rsi
 21278 0000F5AC EBEC                    	jmp .L_lambda_opt_params_loop_0014
 21279                                  .L_lambda_opt_params_end_0014:
 21280 0000F5AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21281 0000F5B1 4889C3                  	mov rbx, rax
 21282 0000F5B4 58                      	pop rax
 21283 0000F5B5 C60004                  	mov byte [rax], T_closure
 21284 0000F5B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21285 0000F5BC 48C74009[C9F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 21286 0000F5C4 E976030000              	jmp .L_lambda_opt_end_0014
 21287                                  .L_lambda_opt_code_0014:
 21288 0000F5C9 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 21289 0000F5CE 4983FF01                	cmp r15, 1
 21290 0000F5D2 7409                    	je .L_lambda_opt_arity_check_exact_0014
 21291 0000F5D4 7F57                    	jg .L_lambda_opt_arity_check_more_0014
 21292 0000F5D6 6A01                    	push 1
 21293 0000F5D8 E945800000              	jmp L_error_incorrect_arity_opt
 21294                                  .L_lambda_opt_arity_check_exact_0014: ;Exact case
 21295 0000F5DD 4C8B0424                	mov r8, qword [rsp -8 * 0]
 21296 0000F5E1 4C894424F8              	mov qword [rsp -8], r8
 21297 0000F5E6 4C8B442408              	mov r8, qword [rsp +8]
 21298 0000F5EB 4C890424                	mov qword [rsp +8 * 0], r8
 21299 0000F5EF 4C8B442410              	mov r8, qword [rsp +8 * 2]
 21300 0000F5F4 4C89C1                  	mov rcx, r8
 21301 0000F5F7 49FFC0                  	inc r8
 21302 0000F5FA 4C89442408              	mov qword [rsp +8], r8
 21303 0000F5FF 4889E2                  	mov rdx, rsp
 21304 0000F602 4883C218                	add rdx, 24
 21305                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0014:
 21306 0000F606 4883F900                	cmp rcx, 0
 21307 0000F60A 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0014
 21308 0000F60C 4C8B02                  	mov r8, qword [rdx]
 21309 0000F60F 4C8942F8                	mov qword [rdx - 8], r8
 21310 0000F613 4883C208                	add rdx, 8
 21311 0000F617 48FFC9                  	dec rcx
 21312 0000F61A EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0014
 21313                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0014:
 21314 0000F61C 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 21315 0000F624 4883EC08                	sub rsp, 8
 21316 0000F628 E985000000              	jmp .L_lambda_opt_stack_adjusted_0014
 21317                                  .L_lambda_opt_arity_check_more_0014:
 21318 0000F62D 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21319 0000F632 4D89C4                  	mov r12, r8
 21320 0000F635 4C89C1                  	mov rcx, r8
 21321 0000F638 4D8D6802                	lea r13, [r8 + 2] 
 21322 0000F63C 4883E901                	sub rcx, 1
 21323 0000F640 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 21324 0000F645 49BE-                   	mov r14, sob_nil
 21324 0000F647 [0100000000000000] 
 21325                                  .L_lambda_opt_create_list_of_opt_params_0014:
 21326 0000F64F 4883F900                	cmp rcx, 0
 21327 0000F653 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0014
 21328 0000F655 BF11000000              	mov rdi, 17
 21329 0000F65A E8F67F0000              	call malloc
 21330 0000F65F C60021                  	mov byte [rax], T_pair
 21331 0000F662 498B1B                  	mov rbx, qword [r11]
 21332 0000F665 48895801                	mov qword [rax +1], rbx
 21333 0000F669 4C897009                	mov qword [rax + 1 + 8], r14
 21334 0000F66D 4989C6                  	mov r14, rax
 21335 0000F670 48FFC9                  	dec rcx
 21336 0000F673 4983EB08                	sub r11, 8
 21337 0000F677 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0014
 21338                                  .L_lambda_opt_create_list_of_opt_params_end_0014:
 21339 0000F679 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 21340 0000F67E 4D8932                  	mov qword [r10], r14
 21341 0000F681 4E8D2CED00000000        	lea r13, [8 * r13]
 21342 0000F689 4901E5                  	add r13, rsp
 21343 0000F68C B905000000              	mov rcx, 4 + 1
 21344                                  .L_lambda_opt_stack_shrink_loop_0014:
 21345 0000F691 4883F900                	cmp rcx, 0
 21346 0000F695 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0014
 21347 0000F697 4D8B1A                  	mov r11, qword [r10]
 21348 0000F69A 4D895D00                	mov qword [r13], r11
 21349 0000F69E 4983EA08                	sub r10, 8
 21350 0000F6A2 4983ED08                	sub r13, 8
 21351 0000F6A6 48FFC9                  	dec rcx
 21352 0000F6A9 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 21353                                  .L_lambda_opt_stack_shrink_loop_exit_0014:
 21354 0000F6AB 4983C508                	add r13, 8
 21355 0000F6AF 4C89EC                  	mov rsp, r13
 21356                                  .L_lambda_opt_stack_adjusted_0014:
 21357 0000F6B2 48C744241002000000      	mov qword [rsp + 8*2], 2
 21358 0000F6BB C8000000                	enter 0, 0
 21359                                  	; preparing a tail-call
 21360                                  	; preparing a non-tail-call
 21361 0000F6BF 488B4528                	mov rax, PARAM(1)	; param xs
 21362 0000F6C3 50                      	push rax
 21363 0000F6C4 6A01                    	push 1	; arg count
 21364 0000F6C6 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21365 0000F6CE 803805                  	cmp byte [rax], T_undefined
 21366 0000F6D1 0F84517E0000            	je L_error_fvar_undefined
 21367 0000F6D7 803804                  	cmp byte [rax], T_closure
 21368 0000F6DA 0F85CC7E0000            	jne L_error_non_closure
 21369 0000F6E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21370 0000F6E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21371 0000F6E6 483D[02000000]          	cmp rax, sob_boolean_false
 21372 0000F6EC 740F                    	je .L_if_else_0063
 21373 0000F6EE 48B8-                   	mov rax, L_constants + 0
 21373 0000F6F0 [0000000000000000] 
 21374 0000F6F8 E9EE000000              	jmp .L_if_end_0063
 21375                                  .L_if_else_0063:
 21376                                  	; preparing a non-tail-call
 21377 0000F6FD 488B4528                	mov rax, PARAM(1)	; param xs
 21378 0000F701 50                      	push rax
 21379 0000F702 6A01                    	push 1	; arg count
 21380 0000F704 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21381 0000F70C 803805                  	cmp byte [rax], T_undefined
 21382 0000F70F 0F84137E0000            	je L_error_fvar_undefined
 21383 0000F715 803804                  	cmp byte [rax], T_closure
 21384 0000F718 0F858E7E0000            	jne L_error_non_closure
 21385 0000F71E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21386 0000F721 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21387 0000F724 483D[02000000]          	cmp rax, sob_boolean_false
 21388 0000F72A 744C                    	je .L_if_else_0061
 21389                                  	; preparing a non-tail-call
 21390                                  	; preparing a non-tail-call
 21391 0000F72C 488B4528                	mov rax, PARAM(1)	; param xs
 21392 0000F730 50                      	push rax
 21393 0000F731 6A01                    	push 1	; arg count
 21394 0000F733 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21395 0000F73B 803805                  	cmp byte [rax], T_undefined
 21396 0000F73E 0F84E47D0000            	je L_error_fvar_undefined
 21397 0000F744 803804                  	cmp byte [rax], T_closure
 21398 0000F747 0F855F7E0000            	jne L_error_non_closure
 21399 0000F74D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21400 0000F750 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21401 0000F753 50                      	push rax
 21402 0000F754 6A01                    	push 1	; arg count
 21403 0000F756 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21404 0000F75E 803805                  	cmp byte [rax], T_undefined
 21405 0000F761 0F84C17D0000            	je L_error_fvar_undefined
 21406 0000F767 803804                  	cmp byte [rax], T_closure
 21407 0000F76A 0F853C7E0000            	jne L_error_non_closure
 21408 0000F770 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21409 0000F773 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21410 0000F776 EB0A                    	jmp .L_if_end_0061
 21411                                  .L_if_else_0061:
 21412 0000F778 48B8-                   	mov rax, L_constants + 2
 21412 0000F77A [0200000000000000] 
 21413                                  .L_if_end_0061:
 21414 0000F782 483D[02000000]          	cmp rax, sob_boolean_false
 21415 0000F788 7429                    	je .L_if_else_0062
 21416                                  	; preparing a non-tail-call
 21417 0000F78A 488B4528                	mov rax, PARAM(1)	; param xs
 21418 0000F78E 50                      	push rax
 21419 0000F78F 6A01                    	push 1	; arg count
 21420 0000F791 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21421 0000F799 803805                  	cmp byte [rax], T_undefined
 21422 0000F79C 0F84867D0000            	je L_error_fvar_undefined
 21423 0000F7A2 803804                  	cmp byte [rax], T_closure
 21424 0000F7A5 0F85017E0000            	jne L_error_non_closure
 21425 0000F7AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 21426 0000F7AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 21427 0000F7B1 EB38                    	jmp .L_if_end_0062
 21428                                  .L_if_else_0062:
 21429                                  	; preparing a non-tail-call
 21430 0000F7B3 48B8-                   	mov rax, L_constants + 2955
 21430 0000F7B5 [8B0B000000000000] 
 21431 0000F7BD 50                      	push rax
 21432 0000F7BE 48B8-                   	mov rax, L_constants + 2946
 21432 0000F7C0 [820B000000000000] 
 21433 0000F7C8 50                      	push rax
 21434 0000F7C9 6A02                    	push 2	; arg count
 21435 0000F7CB 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21436 0000F7D3 803805                  	cmp byte [rax], T_undefined
 21437 0000F7D6 0F844C7D0000            	je L_error_fvar_undefined
 21438 0000F7DC 803804                  	cmp byte [rax], T_closure
 21439 0000F7DF 0F85C77D0000            	jne L_error_non_closure
 21440 0000F7E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21441 0000F7E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21442                                  .L_if_end_0062:
 21443                                  .L_if_end_0063:
 21444 0000F7EB 50                      	push rax
 21445 0000F7EC 6A01                    	push 1	; arg count
 21446 0000F7EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21447 0000F7F3 E85D7E0000              	call malloc
 21448 0000F7F8 50                      	push rax
 21449 0000F7F9 BF10000000              	mov rdi, 8 * 2	; new rib
 21450 0000F7FE E8527E0000              	call malloc
 21451 0000F803 50                      	push rax
 21452 0000F804 BF18000000              	mov rdi, 8 * 3	; extended env
 21453 0000F809 E8477E0000              	call malloc
 21454 0000F80E 488B7D10                	mov rdi, ENV
 21455 0000F812 BE00000000              	mov rsi, 0
 21456 0000F817 BA01000000              	mov rdx, 1
 21457                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 21458 0000F81C 4883FE02                	cmp rsi, 2
 21459 0000F820 7410                    	je .L_lambda_simple_env_end_0080
 21460 0000F822 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21461 0000F826 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21462 0000F82A 48FFC6                  	inc rsi
 21463 0000F82D 48FFC2                  	inc rdx
 21464 0000F830 EBEA                    	jmp .L_lambda_simple_env_loop_0080
 21465                                  .L_lambda_simple_env_end_0080:
 21466 0000F832 5B                      	pop rbx
 21467 0000F833 BE00000000              	mov rsi, 0
 21468                                  .L_lambda_simple_params_loop_0080:	; copy params
 21469 0000F838 4883FE02                	cmp rsi, 2
 21470 0000F83C 740E                    	je .L_lambda_simple_params_end_0080
 21471 0000F83E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21472 0000F843 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21473 0000F847 48FFC6                  	inc rsi
 21474 0000F84A EBEC                    	jmp .L_lambda_simple_params_loop_0080
 21475                                  .L_lambda_simple_params_end_0080:
 21476 0000F84C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21477 0000F84F 4889C3                  	mov rbx, rax
 21478 0000F852 58                      	pop rax
 21479 0000F853 C60004                  	mov byte [rax], T_closure
 21480 0000F856 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21481 0000F85A 48C74009[67F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 21482 0000F862 E986000000              	jmp .L_lambda_simple_end_0080
 21483                                  .L_lambda_simple_code_0080:	; lambda-simple body
 21484 0000F867 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21485 0000F86D 740B                    	je .L_lambda_simple_arity_check_ok_0080
 21486 0000F86F FF742410                	push qword [rsp + 8 * 2]
 21487 0000F873 6A01                    	push 1
 21488 0000F875 E9947D0000              	jmp L_error_incorrect_arity_simple
 21489                                  .L_lambda_simple_arity_check_ok_0080:
 21490 0000F87A C8000000                	enter 0, 0
 21491                                  	; preparing a tail-call
 21492 0000F87E 488B4520                	mov rax, PARAM(0)	; param x
 21493 0000F882 50                      	push rax
 21494 0000F883 488B4510                	mov rax, ENV
 21495 0000F887 488B00                  	mov rax, qword [rax + 8 * 0]
 21496 0000F88A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21497 0000F88D 50                      	push rax
 21498 0000F88E 6A02                    	push 2	; arg count
 21499 0000F890 488B4510                	mov rax, ENV
 21500 0000F894 488B4008                	mov rax, qword [rax + 8 * 1]
 21501 0000F898 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21502 0000F89B 803804                  	cmp byte [rax], T_closure
 21503 0000F89E 0F85087D0000            	jne L_error_non_closure
 21504 0000F8A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21505 0000F8A7 FF7508                  	push qword [rbp + 8 * 1]
 21506                                   ; old ret addr
 21507 0000F8AA FF7500                  	push qword [rbp]
 21508                                   ; restore the old rbp
 21509 0000F8AD BB02000000              	mov rbx, 2
 21510 0000F8B2 4883C303                	add rbx, 3
 21511 0000F8B6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 21512 0000F8BA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 21513 0000F8BF 4C8D4DF8                	lea r9, [rbp - 8]
 21514 0000F8C3 B906000000              	mov rcx, 6
 21515                                  .L_tc_recycle_frame_loop_00b7:
 21516 0000F8C8 4883F900                	cmp rcx, 0
 21517 0000F8CC 7413                    	je .L_tc_recycle_frame_done_00b7
 21518 0000F8CE 4D8B11                  	mov r10, qword [r9]
 21519 0000F8D1 4D8910                  	mov qword [r8], r10
 21520 0000F8D4 4983E808                	sub r8, 8
 21521 0000F8D8 4983E908                	sub r9, 8
 21522 0000F8DC 48FFC9                  	dec rcx
 21523 0000F8DF EBE7                    	jmp .L_tc_recycle_frame_loop_00b7
 21524                                  .L_tc_recycle_frame_done_00b7:
 21525 0000F8E1 498D6008                	lea rsp, [r8 + 8]
 21526 0000F8E5 5D                      	pop rbp ; restore the old rbp
 21527 0000F8E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21528 0000F8E9 C9                      	leave
 21529 0000F8EA C21800                  	ret AND_KILL_FRAME(1)
 21530                                  .L_lambda_simple_end_0080:	; new closure is in rax
 21531 0000F8ED 803804                  	cmp byte [rax], T_closure
 21532 0000F8F0 0F85B67C0000            	jne L_error_non_closure
 21533 0000F8F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21534 0000F8F9 FF7508                  	push qword [rbp + 8 * 1]
 21535                                   ; old ret addr
 21536 0000F8FC FF7500                  	push qword [rbp]
 21537                                   ; restore the old rbp
 21538 0000F8FF BB01000000              	mov rbx, 1
 21539 0000F904 4883C303                	add rbx, 3
 21540 0000F908 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 21541 0000F90C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 21542 0000F911 4C8D4DF8                	lea r9, [rbp - 8]
 21543 0000F915 B905000000              	mov rcx, 5
 21544                                  .L_tc_recycle_frame_loop_00b6:
 21545 0000F91A 4883F900                	cmp rcx, 0
 21546 0000F91E 7413                    	je .L_tc_recycle_frame_done_00b6
 21547 0000F920 4D8B11                  	mov r10, qword [r9]
 21548 0000F923 4D8910                  	mov qword [r8], r10
 21549 0000F926 4983E808                	sub r8, 8
 21550 0000F92A 4983E908                	sub r9, 8
 21551 0000F92E 48FFC9                  	dec rcx
 21552 0000F931 EBE7                    	jmp .L_tc_recycle_frame_loop_00b6
 21553                                  .L_tc_recycle_frame_done_00b6:
 21554 0000F933 498D6008                	lea rsp, [r8 + 8]
 21555 0000F937 5D                      	pop rbp ; restore the old rbp
 21556 0000F938 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21557 0000F93B C9                      	leave
 21558 0000F93C C22000                  	ret 8 * (2 + 2)
 21559                                  .L_lambda_opt_end_0014:	; new closure is in rax
 21560 0000F93F C9                      	leave
 21561 0000F940 C21800                  	ret AND_KILL_FRAME(1)
 21562                                  .L_lambda_simple_end_007f:	; new closure is in rax
 21563 0000F943 803804                  	cmp byte [rax], T_closure
 21564 0000F946 0F85607C0000            	jne L_error_non_closure
 21565 0000F94C FF7001                  	push SOB_CLOSURE_ENV(rax)
 21566 0000F94F FF5009                  	call SOB_CLOSURE_CODE(rax)
 21567 0000F952 48890425[7A140000]      	mov qword [free_var_101], rax
 21568 0000F95A 48B8-                   	mov rax, sob_void
 21568 0000F95C [0000000000000000] 
 21569                                  
 21570 0000F964 4889C7                  	mov rdi, rax
 21571 0000F967 E83E7F0000              	call print_sexpr_if_not_void
 21572                                  	; preparing a non-tail-call
 21573 0000F96C 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 21574 0000F974 803805                  	cmp byte [rax], T_undefined
 21575 0000F977 0F84AB7B0000            	je L_error_fvar_undefined
 21576 0000F97D 50                      	push rax
 21577 0000F97E 6A01                    	push 1	; arg count
 21578 0000F980 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21579 0000F985 E8CB7C0000              	call malloc
 21580 0000F98A 50                      	push rax
 21581 0000F98B BF00000000              	mov rdi, 8 * 0	; new rib
 21582 0000F990 E8C07C0000              	call malloc
 21583 0000F995 50                      	push rax
 21584 0000F996 BF08000000              	mov rdi, 8 * 1	; extended env
 21585 0000F99B E8B57C0000              	call malloc
 21586 0000F9A0 488B7D10                	mov rdi, ENV
 21587 0000F9A4 BE00000000              	mov rsi, 0
 21588 0000F9A9 BA01000000              	mov rdx, 1
 21589                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 21590 0000F9AE 4883FE00                	cmp rsi, 0
 21591 0000F9B2 7410                    	je .L_lambda_simple_env_end_0081
 21592 0000F9B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21593 0000F9B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21594 0000F9BC 48FFC6                  	inc rsi
 21595 0000F9BF 48FFC2                  	inc rdx
 21596 0000F9C2 EBEA                    	jmp .L_lambda_simple_env_loop_0081
 21597                                  .L_lambda_simple_env_end_0081:
 21598 0000F9C4 5B                      	pop rbx
 21599 0000F9C5 BE00000000              	mov rsi, 0
 21600                                  .L_lambda_simple_params_loop_0081:	; copy params
 21601 0000F9CA 4883FE00                	cmp rsi, 0
 21602 0000F9CE 740E                    	je .L_lambda_simple_params_end_0081
 21603 0000F9D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21604 0000F9D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21605 0000F9D9 48FFC6                  	inc rsi
 21606 0000F9DC EBEC                    	jmp .L_lambda_simple_params_loop_0081
 21607                                  .L_lambda_simple_params_end_0081:
 21608 0000F9DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21609 0000F9E1 4889C3                  	mov rbx, rax
 21610 0000F9E4 58                      	pop rax
 21611 0000F9E5 C60004                  	mov byte [rax], T_closure
 21612 0000F9E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21613 0000F9EC 48C74009[F9F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 21614 0000F9F4 E907040000              	jmp .L_lambda_simple_end_0081
 21615                                  .L_lambda_simple_code_0081:	; lambda-simple body
 21616 0000F9F9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21617 0000F9FF 740B                    	je .L_lambda_simple_arity_check_ok_0081
 21618 0000FA01 FF742410                	push qword [rsp + 8 * 2]
 21619 0000FA05 6A01                    	push 1
 21620 0000FA07 E9027C0000              	jmp L_error_incorrect_arity_simple
 21621                                  .L_lambda_simple_arity_check_ok_0081:
 21622 0000FA0C C8000000                	enter 0, 0
 21623 0000FA10 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21624 0000FA15 E83B7C0000              	call malloc
 21625 0000FA1A 50                      	push rax
 21626 0000FA1B BF08000000              	mov rdi, 8 * 1	; new rib
 21627 0000FA20 E8307C0000              	call malloc
 21628 0000FA25 50                      	push rax
 21629 0000FA26 BF10000000              	mov rdi, 8 * 2	; extended env
 21630 0000FA2B E8257C0000              	call malloc
 21631 0000FA30 488B7D10                	mov rdi, ENV
 21632 0000FA34 4831F6                  	 xor rsi, rsi
 21633 0000FA37 4831D2                  	 xor rdx, rdx
 21634 0000FA3A 48FFC2                  	inc rdx
 21635                                  .L_lambda_opt_env_loop_0015:	; 
 21636 0000FA3D 4883FE01                	cmp rsi, 1
 21637 0000FA41 7410                    	je .L_lambda_opt_env_end_0015
 21638 0000FA43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21639 0000FA47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21640 0000FA4B 48FFC6                  	inc rsi
 21641 0000FA4E 48FFC2                  	inc rdx
 21642 0000FA51 EBEA                    	jmp .L_lambda_opt_env_loop_0015
 21643                                  .L_lambda_opt_env_end_0015:
 21644 0000FA53 5B                      	pop rbx
 21645 0000FA54 4831F6                  	xor rsi, rsi
 21646                                  .L_lambda_opt_params_loop_0015:	; copy params
 21647 0000FA57 4883FE01                	cmp rsi, 1
 21648 0000FA5B 740E                    	je .L_lambda_opt_params_end_0015
 21649 0000FA5D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21650 0000FA62 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21651 0000FA66 48FFC6                  	inc rsi
 21652 0000FA69 EBEC                    	jmp .L_lambda_opt_params_loop_0015
 21653                                  .L_lambda_opt_params_end_0015:
 21654 0000FA6B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21655 0000FA6E 4889C3                  	mov rbx, rax
 21656 0000FA71 58                      	pop rax
 21657 0000FA72 C60004                  	mov byte [rax], T_closure
 21658 0000FA75 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21659 0000FA79 48C74009[86FA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 21660 0000FA81 E976030000              	jmp .L_lambda_opt_end_0015
 21661                                  .L_lambda_opt_code_0015:
 21662 0000FA86 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 21663 0000FA8B 4983FF01                	cmp r15, 1
 21664 0000FA8F 7409                    	je .L_lambda_opt_arity_check_exact_0015
 21665 0000FA91 7F57                    	jg .L_lambda_opt_arity_check_more_0015
 21666 0000FA93 6A01                    	push 1
 21667 0000FA95 E9887B0000              	jmp L_error_incorrect_arity_opt
 21668                                  .L_lambda_opt_arity_check_exact_0015: ;Exact case
 21669 0000FA9A 4C8B0424                	mov r8, qword [rsp -8 * 0]
 21670 0000FA9E 4C894424F8              	mov qword [rsp -8], r8
 21671 0000FAA3 4C8B442408              	mov r8, qword [rsp +8]
 21672 0000FAA8 4C890424                	mov qword [rsp +8 * 0], r8
 21673 0000FAAC 4C8B442410              	mov r8, qword [rsp +8 * 2]
 21674 0000FAB1 4C89C1                  	mov rcx, r8
 21675 0000FAB4 49FFC0                  	inc r8
 21676 0000FAB7 4C89442408              	mov qword [rsp +8], r8
 21677 0000FABC 4889E2                  	mov rdx, rsp
 21678 0000FABF 4883C218                	add rdx, 24
 21679                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0015:
 21680 0000FAC3 4883F900                	cmp rcx, 0
 21681 0000FAC7 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0015
 21682 0000FAC9 4C8B02                  	mov r8, qword [rdx]
 21683 0000FACC 4C8942F8                	mov qword [rdx - 8], r8
 21684 0000FAD0 4883C208                	add rdx, 8
 21685 0000FAD4 48FFC9                  	dec rcx
 21686 0000FAD7 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0015
 21687                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0015:
 21688 0000FAD9 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 21689 0000FAE1 4883EC08                	sub rsp, 8
 21690 0000FAE5 E985000000              	jmp .L_lambda_opt_stack_adjusted_0015
 21691                                  .L_lambda_opt_arity_check_more_0015:
 21692 0000FAEA 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 21693 0000FAEF 4D89C4                  	mov r12, r8
 21694 0000FAF2 4C89C1                  	mov rcx, r8
 21695 0000FAF5 4D8D6802                	lea r13, [r8 + 2] 
 21696 0000FAF9 4883E901                	sub rcx, 1
 21697 0000FAFD 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 21698 0000FB02 49BE-                   	mov r14, sob_nil
 21698 0000FB04 [0100000000000000] 
 21699                                  .L_lambda_opt_create_list_of_opt_params_0015:
 21700 0000FB0C 4883F900                	cmp rcx, 0
 21701 0000FB10 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0015
 21702 0000FB12 BF11000000              	mov rdi, 17
 21703 0000FB17 E8397B0000              	call malloc
 21704 0000FB1C C60021                  	mov byte [rax], T_pair
 21705 0000FB1F 498B1B                  	mov rbx, qword [r11]
 21706 0000FB22 48895801                	mov qword [rax +1], rbx
 21707 0000FB26 4C897009                	mov qword [rax + 1 + 8], r14
 21708 0000FB2A 4989C6                  	mov r14, rax
 21709 0000FB2D 48FFC9                  	dec rcx
 21710 0000FB30 4983EB08                	sub r11, 8
 21711 0000FB34 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0015
 21712                                  .L_lambda_opt_create_list_of_opt_params_end_0015:
 21713 0000FB36 4C8D542420              	lea r10, [rsp + 1*8 + 8*3]
 21714 0000FB3B 4D8932                  	mov qword [r10], r14
 21715 0000FB3E 4E8D2CED00000000        	lea r13, [8 * r13]
 21716 0000FB46 4901E5                  	add r13, rsp
 21717 0000FB49 B905000000              	mov rcx, 4 + 1
 21718                                  .L_lambda_opt_stack_shrink_loop_0015:
 21719 0000FB4E 4883F900                	cmp rcx, 0
 21720 0000FB52 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0015
 21721 0000FB54 4D8B1A                  	mov r11, qword [r10]
 21722 0000FB57 4D895D00                	mov qword [r13], r11
 21723 0000FB5B 4983EA08                	sub r10, 8
 21724 0000FB5F 4983ED08                	sub r13, 8
 21725 0000FB63 48FFC9                  	dec rcx
 21726 0000FB66 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 21727                                  .L_lambda_opt_stack_shrink_loop_exit_0015:
 21728 0000FB68 4983C508                	add r13, 8
 21729 0000FB6C 4C89EC                  	mov rsp, r13
 21730                                  .L_lambda_opt_stack_adjusted_0015:
 21731 0000FB6F 48C744241002000000      	mov qword [rsp + 8*2], 2
 21732 0000FB78 C8000000                	enter 0, 0
 21733                                  	; preparing a tail-call
 21734                                  	; preparing a non-tail-call
 21735 0000FB7C 488B4528                	mov rax, PARAM(1)	; param chs
 21736 0000FB80 50                      	push rax
 21737 0000FB81 6A01                    	push 1	; arg count
 21738 0000FB83 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21739 0000FB8B 803805                  	cmp byte [rax], T_undefined
 21740 0000FB8E 0F8494790000            	je L_error_fvar_undefined
 21741 0000FB94 803804                  	cmp byte [rax], T_closure
 21742 0000FB97 0F850F7A0000            	jne L_error_non_closure
 21743 0000FB9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21744 0000FBA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21745 0000FBA3 483D[02000000]          	cmp rax, sob_boolean_false
 21746 0000FBA9 740F                    	je .L_if_else_0066
 21747 0000FBAB 48B8-                   	mov rax, L_constants + 4
 21747 0000FBAD [0400000000000000] 
 21748 0000FBB5 E9EE000000              	jmp .L_if_end_0066
 21749                                  .L_if_else_0066:
 21750                                  	; preparing a non-tail-call
 21751 0000FBBA 488B4528                	mov rax, PARAM(1)	; param chs
 21752 0000FBBE 50                      	push rax
 21753 0000FBBF 6A01                    	push 1	; arg count
 21754 0000FBC1 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21755 0000FBC9 803805                  	cmp byte [rax], T_undefined
 21756 0000FBCC 0F8456790000            	je L_error_fvar_undefined
 21757 0000FBD2 803804                  	cmp byte [rax], T_closure
 21758 0000FBD5 0F85D1790000            	jne L_error_non_closure
 21759 0000FBDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 21760 0000FBDE FF5009                  	call SOB_CLOSURE_CODE(rax)
 21761 0000FBE1 483D[02000000]          	cmp rax, sob_boolean_false
 21762 0000FBE7 744C                    	je .L_if_else_0064
 21763                                  	; preparing a non-tail-call
 21764                                  	; preparing a non-tail-call
 21765 0000FBE9 488B4528                	mov rax, PARAM(1)	; param chs
 21766 0000FBED 50                      	push rax
 21767 0000FBEE 6A01                    	push 1	; arg count
 21768 0000FBF0 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21769 0000FBF8 803805                  	cmp byte [rax], T_undefined
 21770 0000FBFB 0F8427790000            	je L_error_fvar_undefined
 21771 0000FC01 803804                  	cmp byte [rax], T_closure
 21772 0000FC04 0F85A2790000            	jne L_error_non_closure
 21773 0000FC0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21774 0000FC0D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21775 0000FC10 50                      	push rax
 21776 0000FC11 6A01                    	push 1	; arg count
 21777 0000FC13 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21778 0000FC1B 803805                  	cmp byte [rax], T_undefined
 21779 0000FC1E 0F8404790000            	je L_error_fvar_undefined
 21780 0000FC24 803804                  	cmp byte [rax], T_closure
 21781 0000FC27 0F857F790000            	jne L_error_non_closure
 21782 0000FC2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21783 0000FC30 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21784 0000FC33 EB0A                    	jmp .L_if_end_0064
 21785                                  .L_if_else_0064:
 21786 0000FC35 48B8-                   	mov rax, L_constants + 2
 21786 0000FC37 [0200000000000000] 
 21787                                  .L_if_end_0064:
 21788 0000FC3F 483D[02000000]          	cmp rax, sob_boolean_false
 21789 0000FC45 7429                    	je .L_if_else_0065
 21790                                  	; preparing a non-tail-call
 21791 0000FC47 488B4528                	mov rax, PARAM(1)	; param chs
 21792 0000FC4B 50                      	push rax
 21793 0000FC4C 6A01                    	push 1	; arg count
 21794 0000FC4E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21795 0000FC56 803805                  	cmp byte [rax], T_undefined
 21796 0000FC59 0F84C9780000            	je L_error_fvar_undefined
 21797 0000FC5F 803804                  	cmp byte [rax], T_closure
 21798 0000FC62 0F8544790000            	jne L_error_non_closure
 21799 0000FC68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21800 0000FC6B FF5009                  	call SOB_CLOSURE_CODE(rax)
 21801 0000FC6E EB38                    	jmp .L_if_end_0065
 21802                                  .L_if_else_0065:
 21803                                  	; preparing a non-tail-call
 21804 0000FC70 48B8-                   	mov rax, L_constants + 3016
 21804 0000FC72 [C80B000000000000] 
 21805 0000FC7A 50                      	push rax
 21806 0000FC7B 48B8-                   	mov rax, L_constants + 3007
 21806 0000FC7D [BF0B000000000000] 
 21807 0000FC85 50                      	push rax
 21808 0000FC86 6A02                    	push 2	; arg count
 21809 0000FC88 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21810 0000FC90 803805                  	cmp byte [rax], T_undefined
 21811 0000FC93 0F848F780000            	je L_error_fvar_undefined
 21812 0000FC99 803804                  	cmp byte [rax], T_closure
 21813 0000FC9C 0F850A790000            	jne L_error_non_closure
 21814 0000FCA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21815 0000FCA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21816                                  .L_if_end_0065:
 21817                                  .L_if_end_0066:
 21818 0000FCA8 50                      	push rax
 21819 0000FCA9 6A01                    	push 1	; arg count
 21820 0000FCAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21821 0000FCB0 E8A0790000              	call malloc
 21822 0000FCB5 50                      	push rax
 21823 0000FCB6 BF10000000              	mov rdi, 8 * 2	; new rib
 21824 0000FCBB E895790000              	call malloc
 21825 0000FCC0 50                      	push rax
 21826 0000FCC1 BF18000000              	mov rdi, 8 * 3	; extended env
 21827 0000FCC6 E88A790000              	call malloc
 21828 0000FCCB 488B7D10                	mov rdi, ENV
 21829 0000FCCF BE00000000              	mov rsi, 0
 21830 0000FCD4 BA01000000              	mov rdx, 1
 21831                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 21832 0000FCD9 4883FE02                	cmp rsi, 2
 21833 0000FCDD 7410                    	je .L_lambda_simple_env_end_0082
 21834 0000FCDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21835 0000FCE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21836 0000FCE7 48FFC6                  	inc rsi
 21837 0000FCEA 48FFC2                  	inc rdx
 21838 0000FCED EBEA                    	jmp .L_lambda_simple_env_loop_0082
 21839                                  .L_lambda_simple_env_end_0082:
 21840 0000FCEF 5B                      	pop rbx
 21841 0000FCF0 BE00000000              	mov rsi, 0
 21842                                  .L_lambda_simple_params_loop_0082:	; copy params
 21843 0000FCF5 4883FE02                	cmp rsi, 2
 21844 0000FCF9 740E                    	je .L_lambda_simple_params_end_0082
 21845 0000FCFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21846 0000FD00 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21847 0000FD04 48FFC6                  	inc rsi
 21848 0000FD07 EBEC                    	jmp .L_lambda_simple_params_loop_0082
 21849                                  .L_lambda_simple_params_end_0082:
 21850 0000FD09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21851 0000FD0C 4889C3                  	mov rbx, rax
 21852 0000FD0F 58                      	pop rax
 21853 0000FD10 C60004                  	mov byte [rax], T_closure
 21854 0000FD13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21855 0000FD17 48C74009[24FD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 21856 0000FD1F E986000000              	jmp .L_lambda_simple_end_0082
 21857                                  .L_lambda_simple_code_0082:	; lambda-simple body
 21858 0000FD24 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21859 0000FD2A 740B                    	je .L_lambda_simple_arity_check_ok_0082
 21860 0000FD2C FF742410                	push qword [rsp + 8 * 2]
 21861 0000FD30 6A01                    	push 1
 21862 0000FD32 E9D7780000              	jmp L_error_incorrect_arity_simple
 21863                                  .L_lambda_simple_arity_check_ok_0082:
 21864 0000FD37 C8000000                	enter 0, 0
 21865                                  	; preparing a tail-call
 21866 0000FD3B 488B4520                	mov rax, PARAM(0)	; param ch
 21867 0000FD3F 50                      	push rax
 21868 0000FD40 488B4510                	mov rax, ENV
 21869 0000FD44 488B00                  	mov rax, qword [rax + 8 * 0]
 21870 0000FD47 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21871 0000FD4A 50                      	push rax
 21872 0000FD4B 6A02                    	push 2	; arg count
 21873 0000FD4D 488B4510                	mov rax, ENV
 21874 0000FD51 488B4008                	mov rax, qword [rax + 8 * 1]
 21875 0000FD55 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 21876 0000FD58 803804                  	cmp byte [rax], T_closure
 21877 0000FD5B 0F854B780000            	jne L_error_non_closure
 21878 0000FD61 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21879 0000FD64 FF7508                  	push qword [rbp + 8 * 1]
 21880                                   ; old ret addr
 21881 0000FD67 FF7500                  	push qword [rbp]
 21882                                   ; restore the old rbp
 21883 0000FD6A BB02000000              	mov rbx, 2
 21884 0000FD6F 4883C303                	add rbx, 3
 21885 0000FD73 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 21886 0000FD77 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 21887 0000FD7C 4C8D4DF8                	lea r9, [rbp - 8]
 21888 0000FD80 B906000000              	mov rcx, 6
 21889                                  .L_tc_recycle_frame_loop_00b9:
 21890 0000FD85 4883F900                	cmp rcx, 0
 21891 0000FD89 7413                    	je .L_tc_recycle_frame_done_00b9
 21892 0000FD8B 4D8B11                  	mov r10, qword [r9]
 21893 0000FD8E 4D8910                  	mov qword [r8], r10
 21894 0000FD91 4983E808                	sub r8, 8
 21895 0000FD95 4983E908                	sub r9, 8
 21896 0000FD99 48FFC9                  	dec rcx
 21897 0000FD9C EBE7                    	jmp .L_tc_recycle_frame_loop_00b9
 21898                                  .L_tc_recycle_frame_done_00b9:
 21899 0000FD9E 498D6008                	lea rsp, [r8 + 8]
 21900 0000FDA2 5D                      	pop rbp ; restore the old rbp
 21901 0000FDA3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21902 0000FDA6 C9                      	leave
 21903 0000FDA7 C21800                  	ret AND_KILL_FRAME(1)
 21904                                  .L_lambda_simple_end_0082:	; new closure is in rax
 21905 0000FDAA 803804                  	cmp byte [rax], T_closure
 21906 0000FDAD 0F85F9770000            	jne L_error_non_closure
 21907 0000FDB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21908 0000FDB6 FF7508                  	push qword [rbp + 8 * 1]
 21909                                   ; old ret addr
 21910 0000FDB9 FF7500                  	push qword [rbp]
 21911                                   ; restore the old rbp
 21912 0000FDBC BB01000000              	mov rbx, 1
 21913 0000FDC1 4883C303                	add rbx, 3
 21914 0000FDC5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 21915 0000FDC9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 21916 0000FDCE 4C8D4DF8                	lea r9, [rbp - 8]
 21917 0000FDD2 B905000000              	mov rcx, 5
 21918                                  .L_tc_recycle_frame_loop_00b8:
 21919 0000FDD7 4883F900                	cmp rcx, 0
 21920 0000FDDB 7413                    	je .L_tc_recycle_frame_done_00b8
 21921 0000FDDD 4D8B11                  	mov r10, qword [r9]
 21922 0000FDE0 4D8910                  	mov qword [r8], r10
 21923 0000FDE3 4983E808                	sub r8, 8
 21924 0000FDE7 4983E908                	sub r9, 8
 21925 0000FDEB 48FFC9                  	dec rcx
 21926 0000FDEE EBE7                    	jmp .L_tc_recycle_frame_loop_00b8
 21927                                  .L_tc_recycle_frame_done_00b8:
 21928 0000FDF0 498D6008                	lea rsp, [r8 + 8]
 21929 0000FDF4 5D                      	pop rbp ; restore the old rbp
 21930 0000FDF5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21931 0000FDF8 C9                      	leave
 21932 0000FDF9 C22000                  	ret 8 * (2 + 2)
 21933                                  .L_lambda_opt_end_0015:	; new closure is in rax
 21934 0000FDFC C9                      	leave
 21935 0000FDFD C21800                  	ret AND_KILL_FRAME(1)
 21936                                  .L_lambda_simple_end_0081:	; new closure is in rax
 21937 0000FE00 803804                  	cmp byte [rax], T_closure
 21938 0000FE03 0F85A3770000            	jne L_error_non_closure
 21939 0000FE09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21940 0000FE0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21941 0000FE0F 48890425[58140000]      	mov qword [free_var_99], rax
 21942 0000FE17 48B8-                   	mov rax, sob_void
 21942 0000FE19 [0000000000000000] 
 21943                                  
 21944 0000FE21 4889C7                  	mov rdi, rax
 21945 0000FE24 E8817A0000              	call print_sexpr_if_not_void
 21946                                  	; preparing a non-tail-call
 21947 0000FE29 48B8-                   	mov rax, L_constants + 1993
 21947 0000FE2B [C907000000000000] 
 21948 0000FE33 50                      	push rax
 21949 0000FE34 6A01                    	push 1	; arg count
 21950 0000FE36 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21951 0000FE3B E815780000              	call malloc
 21952 0000FE40 50                      	push rax
 21953 0000FE41 BF00000000              	mov rdi, 8 * 0	; new rib
 21954 0000FE46 E80A780000              	call malloc
 21955 0000FE4B 50                      	push rax
 21956 0000FE4C BF08000000              	mov rdi, 8 * 1	; extended env
 21957 0000FE51 E8FF770000              	call malloc
 21958 0000FE56 488B7D10                	mov rdi, ENV
 21959 0000FE5A BE00000000              	mov rsi, 0
 21960 0000FE5F BA01000000              	mov rdx, 1
 21961                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 21962 0000FE64 4883FE00                	cmp rsi, 0
 21963 0000FE68 7410                    	je .L_lambda_simple_env_end_0083
 21964 0000FE6A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21965 0000FE6E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21966 0000FE72 48FFC6                  	inc rsi
 21967 0000FE75 48FFC2                  	inc rdx
 21968 0000FE78 EBEA                    	jmp .L_lambda_simple_env_loop_0083
 21969                                  .L_lambda_simple_env_end_0083:
 21970 0000FE7A 5B                      	pop rbx
 21971 0000FE7B BE00000000              	mov rsi, 0
 21972                                  .L_lambda_simple_params_loop_0083:	; copy params
 21973 0000FE80 4883FE00                	cmp rsi, 0
 21974 0000FE84 740E                    	je .L_lambda_simple_params_end_0083
 21975 0000FE86 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21976 0000FE8B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21977 0000FE8F 48FFC6                  	inc rsi
 21978 0000FE92 EBEC                    	jmp .L_lambda_simple_params_loop_0083
 21979                                  .L_lambda_simple_params_end_0083:
 21980 0000FE94 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21981 0000FE97 4889C3                  	mov rbx, rax
 21982 0000FE9A 58                      	pop rax
 21983 0000FE9B C60004                  	mov byte [rax], T_closure
 21984 0000FE9E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21985 0000FEA2 48C74009[AFFE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 21986 0000FEAA E948040000              	jmp .L_lambda_simple_end_0083
 21987                                  .L_lambda_simple_code_0083:	; lambda-simple body
 21988 0000FEAF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21989 0000FEB5 740B                    	je .L_lambda_simple_arity_check_ok_0083
 21990 0000FEB7 FF742410                	push qword [rsp + 8 * 2]
 21991 0000FEBB 6A01                    	push 1
 21992 0000FEBD E94C770000              	jmp L_error_incorrect_arity_simple
 21993                                  .L_lambda_simple_arity_check_ok_0083:
 21994 0000FEC2 C8000000                	enter 0, 0
 21995 0000FEC6 BF08000000              	mov rdi, 8*1
 21996 0000FECB E885770000              	call malloc
 21997 0000FED0 488B5D20                	mov rbx, PARAM(0)
 21998 0000FED4 488918                  	mov qword [rax], rbx
 21999 0000FED7 48894520                	mov PARAM(0), rax
 22000 0000FEDB 48B8-                   	mov rax, sob_void
 22000 0000FEDD [0000000000000000] 
 22001                                  
 22002 0000FEE5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22003 0000FEEA E866770000              	call malloc
 22004 0000FEEF 50                      	push rax
 22005 0000FEF0 BF08000000              	mov rdi, 8 * 1	; new rib
 22006 0000FEF5 E85B770000              	call malloc
 22007 0000FEFA 50                      	push rax
 22008 0000FEFB BF10000000              	mov rdi, 8 * 2	; extended env
 22009 0000FF00 E850770000              	call malloc
 22010 0000FF05 488B7D10                	mov rdi, ENV
 22011 0000FF09 BE00000000              	mov rsi, 0
 22012 0000FF0E BA01000000              	mov rdx, 1
 22013                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 22014 0000FF13 4883FE01                	cmp rsi, 1
 22015 0000FF17 7410                    	je .L_lambda_simple_env_end_0084
 22016 0000FF19 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22017 0000FF1D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22018 0000FF21 48FFC6                  	inc rsi
 22019 0000FF24 48FFC2                  	inc rdx
 22020 0000FF27 EBEA                    	jmp .L_lambda_simple_env_loop_0084
 22021                                  .L_lambda_simple_env_end_0084:
 22022 0000FF29 5B                      	pop rbx
 22023 0000FF2A BE00000000              	mov rsi, 0
 22024                                  .L_lambda_simple_params_loop_0084:	; copy params
 22025 0000FF2F 4883FE01                	cmp rsi, 1
 22026 0000FF33 740E                    	je .L_lambda_simple_params_end_0084
 22027 0000FF35 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22028 0000FF3A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22029 0000FF3E 48FFC6                  	inc rsi
 22030 0000FF41 EBEC                    	jmp .L_lambda_simple_params_loop_0084
 22031                                  .L_lambda_simple_params_end_0084:
 22032 0000FF43 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22033 0000FF46 4889C3                  	mov rbx, rax
 22034 0000FF49 58                      	pop rax
 22035 0000FF4A C60004                  	mov byte [rax], T_closure
 22036 0000FF4D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22037 0000FF51 48C74009[5EFF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 22038 0000FF59 E983020000              	jmp .L_lambda_simple_end_0084
 22039                                  .L_lambda_simple_code_0084:	; lambda-simple body
 22040 0000FF5E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22041 0000FF64 740B                    	je .L_lambda_simple_arity_check_ok_0084
 22042 0000FF66 FF742410                	push qword [rsp + 8 * 2]
 22043 0000FF6A 6A02                    	push 2
 22044 0000FF6C E99D760000              	jmp L_error_incorrect_arity_simple
 22045                                  .L_lambda_simple_arity_check_ok_0084:
 22046 0000FF71 C8000000                	enter 0, 0
 22047                                  	; preparing a non-tail-call
 22048 0000FF75 488B4520                	mov rax, PARAM(0)	; param s
 22049 0000FF79 50                      	push rax
 22050 0000FF7A 6A01                    	push 1	; arg count
 22051 0000FF7C 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22052 0000FF84 803805                  	cmp byte [rax], T_undefined
 22053 0000FF87 0F849B750000            	je L_error_fvar_undefined
 22054 0000FF8D 803804                  	cmp byte [rax], T_closure
 22055 0000FF90 0F8516760000            	jne L_error_non_closure
 22056 0000FF96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22057 0000FF99 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22058 0000FF9C 483D[02000000]          	cmp rax, sob_boolean_false
 22059 0000FFA2 7476                    	je .L_if_else_0067
 22060                                  	; preparing a tail-call
 22061 0000FFA4 48B8-                   	mov rax, L_constants + 0
 22061 0000FFA6 [0000000000000000] 
 22062 0000FFAE 50                      	push rax
 22063 0000FFAF 488B4528                	mov rax, PARAM(1)	; param i
 22064 0000FFB3 50                      	push rax
 22065 0000FFB4 6A02                    	push 2	; arg count
 22066 0000FFB6 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 22067 0000FFBE 803805                  	cmp byte [rax], T_undefined
 22068 0000FFC1 0F8461750000            	je L_error_fvar_undefined
 22069 0000FFC7 803804                  	cmp byte [rax], T_closure
 22070 0000FFCA 0F85DC750000            	jne L_error_non_closure
 22071 0000FFD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22072 0000FFD3 FF7508                  	push qword [rbp + 8 * 1]
 22073                                   ; old ret addr
 22074 0000FFD6 FF7500                  	push qword [rbp]
 22075                                   ; restore the old rbp
 22076 0000FFD9 BB02000000              	mov rbx, 2
 22077 0000FFDE 4883C303                	add rbx, 3
 22078 0000FFE2 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22079 0000FFE6 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22080 0000FFEB 4C8D4DF8                	lea r9, [rbp - 8]
 22081 0000FFEF B906000000              	mov rcx, 6
 22082                                  .L_tc_recycle_frame_loop_00ba:
 22083 0000FFF4 4883F900                	cmp rcx, 0
 22084 0000FFF8 7413                    	je .L_tc_recycle_frame_done_00ba
 22085 0000FFFA 4D8B11                  	mov r10, qword [r9]
 22086 0000FFFD 4D8910                  	mov qword [r8], r10
 22087 00010000 4983E808                	sub r8, 8
 22088 00010004 4983E908                	sub r9, 8
 22089 00010008 48FFC9                  	dec rcx
 22090 0001000B EBE7                    	jmp .L_tc_recycle_frame_loop_00ba
 22091                                  .L_tc_recycle_frame_done_00ba:
 22092 0001000D 498D6008                	lea rsp, [r8 + 8]
 22093 00010011 5D                      	pop rbp ; restore the old rbp
 22094 00010012 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22095 00010015 E9C3010000              	jmp .L_if_end_0067
 22096                                  .L_if_else_0067:
 22097                                  	; preparing a tail-call
 22098                                  	; preparing a non-tail-call
 22099                                  	; preparing a non-tail-call
 22100 0001001A 48B8-                   	mov rax, L_constants + 2270
 22100 0001001C [DE08000000000000] 
 22101 00010024 50                      	push rax
 22102 00010025 488B4528                	mov rax, PARAM(1)	; param i
 22103 00010029 50                      	push rax
 22104 0001002A 6A02                    	push 2	; arg count
 22105 0001002C 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22106 00010034 803805                  	cmp byte [rax], T_undefined
 22107 00010037 0F84EB740000            	je L_error_fvar_undefined
 22108 0001003D 803804                  	cmp byte [rax], T_closure
 22109 00010040 0F8566750000            	jne L_error_non_closure
 22110 00010046 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22111 00010049 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22112 0001004C 50                      	push rax
 22113                                  	; preparing a non-tail-call
 22114 0001004D 488B4520                	mov rax, PARAM(0)	; param s
 22115 00010051 50                      	push rax
 22116 00010052 6A01                    	push 1	; arg count
 22117 00010054 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22118 0001005C 803805                  	cmp byte [rax], T_undefined
 22119 0001005F 0F84C3740000            	je L_error_fvar_undefined
 22120 00010065 803804                  	cmp byte [rax], T_closure
 22121 00010068 0F853E750000            	jne L_error_non_closure
 22122 0001006E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22123 00010071 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22124 00010074 50                      	push rax
 22125 00010075 6A02                    	push 2	; arg count
 22126 00010077 488B4510                	mov rax, ENV
 22127 0001007B 488B00                  	mov rax, qword [rax + 8 * 0]
 22128 0001007E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22129 00010081 488B00                  	mov rax, qword [rax]
 22130 00010084 803804                  	cmp byte [rax], T_closure
 22131 00010087 0F851F750000            	jne L_error_non_closure
 22132 0001008D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22133 00010090 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22134 00010093 50                      	push rax
 22135 00010094 6A01                    	push 1	; arg count
 22136 00010096 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22137 0001009B E8B5750000              	call malloc
 22138 000100A0 50                      	push rax
 22139 000100A1 BF10000000              	mov rdi, 8 * 2	; new rib
 22140 000100A6 E8AA750000              	call malloc
 22141 000100AB 50                      	push rax
 22142 000100AC BF18000000              	mov rdi, 8 * 3	; extended env
 22143 000100B1 E89F750000              	call malloc
 22144 000100B6 488B7D10                	mov rdi, ENV
 22145 000100BA BE00000000              	mov rsi, 0
 22146 000100BF BA01000000              	mov rdx, 1
 22147                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 22148 000100C4 4883FE02                	cmp rsi, 2
 22149 000100C8 7410                    	je .L_lambda_simple_env_end_0085
 22150 000100CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22151 000100CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22152 000100D2 48FFC6                  	inc rsi
 22153 000100D5 48FFC2                  	inc rdx
 22154 000100D8 EBEA                    	jmp .L_lambda_simple_env_loop_0085
 22155                                  .L_lambda_simple_env_end_0085:
 22156 000100DA 5B                      	pop rbx
 22157 000100DB BE00000000              	mov rsi, 0
 22158                                  .L_lambda_simple_params_loop_0085:	; copy params
 22159 000100E0 4883FE02                	cmp rsi, 2
 22160 000100E4 740E                    	je .L_lambda_simple_params_end_0085
 22161 000100E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22162 000100EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22163 000100EF 48FFC6                  	inc rsi
 22164 000100F2 EBEC                    	jmp .L_lambda_simple_params_loop_0085
 22165                                  .L_lambda_simple_params_end_0085:
 22166 000100F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22167 000100F7 4889C3                  	mov rbx, rax
 22168 000100FA 58                      	pop rax
 22169 000100FB C60004                  	mov byte [rax], T_closure
 22170 000100FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22171 00010102 48C74009[0F010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 22172 0001010A E980000000              	jmp .L_lambda_simple_end_0085
 22173                                  .L_lambda_simple_code_0085:	; lambda-simple body
 22174 0001010F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22175 00010115 740B                    	je .L_lambda_simple_arity_check_ok_0085
 22176 00010117 FF742410                	push qword [rsp + 8 * 2]
 22177 0001011B 6A01                    	push 1
 22178 0001011D E9EC740000              	jmp L_error_incorrect_arity_simple
 22179                                  .L_lambda_simple_arity_check_ok_0085:
 22180 00010122 C8000000                	enter 0, 0
 22181                                  	; preparing a non-tail-call
 22182                                  	; preparing a non-tail-call
 22183 00010126 488B4510                	mov rax, ENV
 22184 0001012A 488B00                  	mov rax, qword [rax + 8 * 0]
 22185 0001012D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22186 00010130 50                      	push rax
 22187 00010131 6A01                    	push 1	; arg count
 22188 00010133 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22189 0001013B 803805                  	cmp byte [rax], T_undefined
 22190 0001013E 0F84E4730000            	je L_error_fvar_undefined
 22191 00010144 803804                  	cmp byte [rax], T_closure
 22192 00010147 0F855F740000            	jne L_error_non_closure
 22193 0001014D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22194 00010150 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22195 00010153 50                      	push rax
 22196 00010154 488B4510                	mov rax, ENV
 22197 00010158 488B00                  	mov rax, qword [rax + 8 * 0]
 22198 0001015B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22199 0001015F 50                      	push rax
 22200 00010160 488B4520                	mov rax, PARAM(0)	; param v
 22201 00010164 50                      	push rax
 22202 00010165 6A03                    	push 3	; arg count
 22203 00010167 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 22204 0001016F 803805                  	cmp byte [rax], T_undefined
 22205 00010172 0F84B0730000            	je L_error_fvar_undefined
 22206 00010178 803804                  	cmp byte [rax], T_closure
 22207 0001017B 0F852B740000            	jne L_error_non_closure
 22208 00010181 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22209 00010184 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22210                                  
 22211 00010187 488B4520                	mov rax, PARAM(0)	; param v
 22212 0001018B C9                      	leave
 22213 0001018C C21800                  	ret AND_KILL_FRAME(1)
 22214                                  .L_lambda_simple_end_0085:	; new closure is in rax
 22215 0001018F 803804                  	cmp byte [rax], T_closure
 22216 00010192 0F8514740000            	jne L_error_non_closure
 22217 00010198 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22218 0001019B FF7508                  	push qword [rbp + 8 * 1]
 22219                                   ; old ret addr
 22220 0001019E FF7500                  	push qword [rbp]
 22221                                   ; restore the old rbp
 22222 000101A1 BB01000000              	mov rbx, 1
 22223 000101A6 4883C303                	add rbx, 3
 22224 000101AA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22225 000101AE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22226 000101B3 4C8D4DF8                	lea r9, [rbp - 8]
 22227 000101B7 B905000000              	mov rcx, 5
 22228                                  .L_tc_recycle_frame_loop_00bb:
 22229 000101BC 4883F900                	cmp rcx, 0
 22230 000101C0 7413                    	je .L_tc_recycle_frame_done_00bb
 22231 000101C2 4D8B11                  	mov r10, qword [r9]
 22232 000101C5 4D8910                  	mov qword [r8], r10
 22233 000101C8 4983E808                	sub r8, 8
 22234 000101CC 4983E908                	sub r9, 8
 22235 000101D0 48FFC9                  	dec rcx
 22236 000101D3 EBE7                    	jmp .L_tc_recycle_frame_loop_00bb
 22237                                  .L_tc_recycle_frame_done_00bb:
 22238 000101D5 498D6008                	lea rsp, [r8 + 8]
 22239 000101D9 5D                      	pop rbp ; restore the old rbp
 22240 000101DA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22241                                  .L_if_end_0067:
 22242 000101DD C9                      	leave
 22243 000101DE C22000                  	ret AND_KILL_FRAME(2)
 22244                                  .L_lambda_simple_end_0084:	; new closure is in rax
 22245 000101E1 50                      	push rax
 22246 000101E2 488B4520                	mov rax, PARAM(0)	; param run
 22247 000101E6 8F00                    	pop qword [rax]
 22248 000101E8 48B8-                   	mov rax, sob_void
 22248 000101EA [0000000000000000] 
 22249                                  
 22250 000101F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22251 000101F7 E859740000              	call malloc
 22252 000101FC 50                      	push rax
 22253 000101FD BF08000000              	mov rdi, 8 * 1	; new rib
 22254 00010202 E84E740000              	call malloc
 22255 00010207 50                      	push rax
 22256 00010208 BF10000000              	mov rdi, 8 * 2	; extended env
 22257 0001020D E843740000              	call malloc
 22258 00010212 488B7D10                	mov rdi, ENV
 22259 00010216 BE00000000              	mov rsi, 0
 22260 0001021B BA01000000              	mov rdx, 1
 22261                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 22262 00010220 4883FE01                	cmp rsi, 1
 22263 00010224 7410                    	je .L_lambda_simple_env_end_0086
 22264 00010226 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22265 0001022A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22266 0001022E 48FFC6                  	inc rsi
 22267 00010231 48FFC2                  	inc rdx
 22268 00010234 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 22269                                  .L_lambda_simple_env_end_0086:
 22270 00010236 5B                      	pop rbx
 22271 00010237 BE00000000              	mov rsi, 0
 22272                                  .L_lambda_simple_params_loop_0086:	; copy params
 22273 0001023C 4883FE01                	cmp rsi, 1
 22274 00010240 740E                    	je .L_lambda_simple_params_end_0086
 22275 00010242 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22276 00010247 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22277 0001024B 48FFC6                  	inc rsi
 22278 0001024E EBEC                    	jmp .L_lambda_simple_params_loop_0086
 22279                                  .L_lambda_simple_params_end_0086:
 22280 00010250 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22281 00010253 4889C3                  	mov rbx, rax
 22282 00010256 58                      	pop rax
 22283 00010257 C60004                  	mov byte [rax], T_closure
 22284 0001025A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22285 0001025E 48C74009[6B020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 22286 00010266 E988000000              	jmp .L_lambda_simple_end_0086
 22287                                  .L_lambda_simple_code_0086:	; lambda-simple body
 22288 0001026B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22289 00010271 740B                    	je .L_lambda_simple_arity_check_ok_0086
 22290 00010273 FF742410                	push qword [rsp + 8 * 2]
 22291 00010277 6A01                    	push 1
 22292 00010279 E990730000              	jmp L_error_incorrect_arity_simple
 22293                                  .L_lambda_simple_arity_check_ok_0086:
 22294 0001027E C8000000                	enter 0, 0
 22295                                  	; preparing a tail-call
 22296 00010282 48B8-                   	mov rax, L_constants + 2135
 22296 00010284 [5708000000000000] 
 22297 0001028C 50                      	push rax
 22298 0001028D 488B4520                	mov rax, PARAM(0)	; param s
 22299 00010291 50                      	push rax
 22300 00010292 6A02                    	push 2	; arg count
 22301 00010294 488B4510                	mov rax, ENV
 22302 00010298 488B00                  	mov rax, qword [rax + 8 * 0]
 22303 0001029B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22304 0001029E 488B00                  	mov rax, qword [rax]
 22305 000102A1 803804                  	cmp byte [rax], T_closure
 22306 000102A4 0F8502730000            	jne L_error_non_closure
 22307 000102AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 22308 000102AD FF7508                  	push qword [rbp + 8 * 1]
 22309                                   ; old ret addr
 22310 000102B0 FF7500                  	push qword [rbp]
 22311                                   ; restore the old rbp
 22312 000102B3 BB02000000              	mov rbx, 2
 22313 000102B8 4883C303                	add rbx, 3
 22314 000102BC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22315 000102C0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22316 000102C5 4C8D4DF8                	lea r9, [rbp - 8]
 22317 000102C9 B906000000              	mov rcx, 6
 22318                                  .L_tc_recycle_frame_loop_00bc:
 22319 000102CE 4883F900                	cmp rcx, 0
 22320 000102D2 7413                    	je .L_tc_recycle_frame_done_00bc
 22321 000102D4 4D8B11                  	mov r10, qword [r9]
 22322 000102D7 4D8910                  	mov qword [r8], r10
 22323 000102DA 4983E808                	sub r8, 8
 22324 000102DE 4983E908                	sub r9, 8
 22325 000102E2 48FFC9                  	dec rcx
 22326 000102E5 EBE7                    	jmp .L_tc_recycle_frame_loop_00bc
 22327                                  .L_tc_recycle_frame_done_00bc:
 22328 000102E7 498D6008                	lea rsp, [r8 + 8]
 22329 000102EB 5D                      	pop rbp ; restore the old rbp
 22330 000102EC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22331 000102EF C9                      	leave
 22332 000102F0 C21800                  	ret AND_KILL_FRAME(1)
 22333                                  .L_lambda_simple_end_0086:	; new closure is in rax
 22334 000102F3 C9                      	leave
 22335 000102F4 C21800                  	ret AND_KILL_FRAME(1)
 22336                                  .L_lambda_simple_end_0083:	; new closure is in rax
 22337 000102F7 803804                  	cmp byte [rax], T_closure
 22338 000102FA 0F85AC720000            	jne L_error_non_closure
 22339 00010300 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22340 00010303 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22341 00010306 48890425[14140000]      	mov qword [free_var_95], rax
 22342 0001030E 48B8-                   	mov rax, sob_void
 22342 00010310 [0000000000000000] 
 22343                                  
 22344 00010318 4889C7                  	mov rdi, rax
 22345 0001031B E88A750000              	call print_sexpr_if_not_void
 22346                                  	; preparing a non-tail-call
 22347 00010320 48B8-                   	mov rax, L_constants + 1993
 22347 00010322 [C907000000000000] 
 22348 0001032A 50                      	push rax
 22349 0001032B 6A01                    	push 1	; arg count
 22350 0001032D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22351 00010332 E81E730000              	call malloc
 22352 00010337 50                      	push rax
 22353 00010338 BF00000000              	mov rdi, 8 * 0	; new rib
 22354 0001033D E813730000              	call malloc
 22355 00010342 50                      	push rax
 22356 00010343 BF08000000              	mov rdi, 8 * 1	; extended env
 22357 00010348 E808730000              	call malloc
 22358 0001034D 488B7D10                	mov rdi, ENV
 22359 00010351 BE00000000              	mov rsi, 0
 22360 00010356 BA01000000              	mov rdx, 1
 22361                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 22362 0001035B 4883FE00                	cmp rsi, 0
 22363 0001035F 7410                    	je .L_lambda_simple_env_end_0087
 22364 00010361 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22365 00010365 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22366 00010369 48FFC6                  	inc rsi
 22367 0001036C 48FFC2                  	inc rdx
 22368 0001036F EBEA                    	jmp .L_lambda_simple_env_loop_0087
 22369                                  .L_lambda_simple_env_end_0087:
 22370 00010371 5B                      	pop rbx
 22371 00010372 BE00000000              	mov rsi, 0
 22372                                  .L_lambda_simple_params_loop_0087:	; copy params
 22373 00010377 4883FE00                	cmp rsi, 0
 22374 0001037B 740E                    	je .L_lambda_simple_params_end_0087
 22375 0001037D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22376 00010382 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22377 00010386 48FFC6                  	inc rsi
 22378 00010389 EBEC                    	jmp .L_lambda_simple_params_loop_0087
 22379                                  .L_lambda_simple_params_end_0087:
 22380 0001038B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22381 0001038E 4889C3                  	mov rbx, rax
 22382 00010391 58                      	pop rax
 22383 00010392 C60004                  	mov byte [rax], T_closure
 22384 00010395 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22385 00010399 48C74009[A6030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 22386 000103A1 E948040000              	jmp .L_lambda_simple_end_0087
 22387                                  .L_lambda_simple_code_0087:	; lambda-simple body
 22388 000103A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22389 000103AC 740B                    	je .L_lambda_simple_arity_check_ok_0087
 22390 000103AE FF742410                	push qword [rsp + 8 * 2]
 22391 000103B2 6A01                    	push 1
 22392 000103B4 E955720000              	jmp L_error_incorrect_arity_simple
 22393                                  .L_lambda_simple_arity_check_ok_0087:
 22394 000103B9 C8000000                	enter 0, 0
 22395 000103BD BF08000000              	mov rdi, 8*1
 22396 000103C2 E88E720000              	call malloc
 22397 000103C7 488B5D20                	mov rbx, PARAM(0)
 22398 000103CB 488918                  	mov qword [rax], rbx
 22399 000103CE 48894520                	mov PARAM(0), rax
 22400 000103D2 48B8-                   	mov rax, sob_void
 22400 000103D4 [0000000000000000] 
 22401                                  
 22402 000103DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22403 000103E1 E86F720000              	call malloc
 22404 000103E6 50                      	push rax
 22405 000103E7 BF08000000              	mov rdi, 8 * 1	; new rib
 22406 000103EC E864720000              	call malloc
 22407 000103F1 50                      	push rax
 22408 000103F2 BF10000000              	mov rdi, 8 * 2	; extended env
 22409 000103F7 E859720000              	call malloc
 22410 000103FC 488B7D10                	mov rdi, ENV
 22411 00010400 BE00000000              	mov rsi, 0
 22412 00010405 BA01000000              	mov rdx, 1
 22413                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 22414 0001040A 4883FE01                	cmp rsi, 1
 22415 0001040E 7410                    	je .L_lambda_simple_env_end_0088
 22416 00010410 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22417 00010414 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22418 00010418 48FFC6                  	inc rsi
 22419 0001041B 48FFC2                  	inc rdx
 22420 0001041E EBEA                    	jmp .L_lambda_simple_env_loop_0088
 22421                                  .L_lambda_simple_env_end_0088:
 22422 00010420 5B                      	pop rbx
 22423 00010421 BE00000000              	mov rsi, 0
 22424                                  .L_lambda_simple_params_loop_0088:	; copy params
 22425 00010426 4883FE01                	cmp rsi, 1
 22426 0001042A 740E                    	je .L_lambda_simple_params_end_0088
 22427 0001042C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22428 00010431 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22429 00010435 48FFC6                  	inc rsi
 22430 00010438 EBEC                    	jmp .L_lambda_simple_params_loop_0088
 22431                                  .L_lambda_simple_params_end_0088:
 22432 0001043A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22433 0001043D 4889C3                  	mov rbx, rax
 22434 00010440 58                      	pop rax
 22435 00010441 C60004                  	mov byte [rax], T_closure
 22436 00010444 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22437 00010448 48C74009[55040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 22438 00010450 E983020000              	jmp .L_lambda_simple_end_0088
 22439                                  .L_lambda_simple_code_0088:	; lambda-simple body
 22440 00010455 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22441 0001045B 740B                    	je .L_lambda_simple_arity_check_ok_0088
 22442 0001045D FF742410                	push qword [rsp + 8 * 2]
 22443 00010461 6A02                    	push 2
 22444 00010463 E9A6710000              	jmp L_error_incorrect_arity_simple
 22445                                  .L_lambda_simple_arity_check_ok_0088:
 22446 00010468 C8000000                	enter 0, 0
 22447                                  	; preparing a non-tail-call
 22448 0001046C 488B4520                	mov rax, PARAM(0)	; param s
 22449 00010470 50                      	push rax
 22450 00010471 6A01                    	push 1	; arg count
 22451 00010473 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22452 0001047B 803805                  	cmp byte [rax], T_undefined
 22453 0001047E 0F84A4700000            	je L_error_fvar_undefined
 22454 00010484 803804                  	cmp byte [rax], T_closure
 22455 00010487 0F851F710000            	jne L_error_non_closure
 22456 0001048D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22457 00010490 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22458 00010493 483D[02000000]          	cmp rax, sob_boolean_false
 22459 00010499 7476                    	je .L_if_else_0068
 22460                                  	; preparing a tail-call
 22461 0001049B 48B8-                   	mov rax, L_constants + 4
 22461 0001049D [0400000000000000] 
 22462 000104A5 50                      	push rax
 22463 000104A6 488B4528                	mov rax, PARAM(1)	; param i
 22464 000104AA 50                      	push rax
 22465 000104AB 6A02                    	push 2	; arg count
 22466 000104AD 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 22467 000104B5 803805                  	cmp byte [rax], T_undefined
 22468 000104B8 0F846A700000            	je L_error_fvar_undefined
 22469 000104BE 803804                  	cmp byte [rax], T_closure
 22470 000104C1 0F85E5700000            	jne L_error_non_closure
 22471 000104C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22472 000104CA FF7508                  	push qword [rbp + 8 * 1]
 22473                                   ; old ret addr
 22474 000104CD FF7500                  	push qword [rbp]
 22475                                   ; restore the old rbp
 22476 000104D0 BB02000000              	mov rbx, 2
 22477 000104D5 4883C303                	add rbx, 3
 22478 000104D9 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22479 000104DD 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22480 000104E2 4C8D4DF8                	lea r9, [rbp - 8]
 22481 000104E6 B906000000              	mov rcx, 6
 22482                                  .L_tc_recycle_frame_loop_00bd:
 22483 000104EB 4883F900                	cmp rcx, 0
 22484 000104EF 7413                    	je .L_tc_recycle_frame_done_00bd
 22485 000104F1 4D8B11                  	mov r10, qword [r9]
 22486 000104F4 4D8910                  	mov qword [r8], r10
 22487 000104F7 4983E808                	sub r8, 8
 22488 000104FB 4983E908                	sub r9, 8
 22489 000104FF 48FFC9                  	dec rcx
 22490 00010502 EBE7                    	jmp .L_tc_recycle_frame_loop_00bd
 22491                                  .L_tc_recycle_frame_done_00bd:
 22492 00010504 498D6008                	lea rsp, [r8 + 8]
 22493 00010508 5D                      	pop rbp ; restore the old rbp
 22494 00010509 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22495 0001050C E9C3010000              	jmp .L_if_end_0068
 22496                                  .L_if_else_0068:
 22497                                  	; preparing a tail-call
 22498                                  	; preparing a non-tail-call
 22499                                  	; preparing a non-tail-call
 22500 00010511 48B8-                   	mov rax, L_constants + 2270
 22500 00010513 [DE08000000000000] 
 22501 0001051B 50                      	push rax
 22502 0001051C 488B4528                	mov rax, PARAM(1)	; param i
 22503 00010520 50                      	push rax
 22504 00010521 6A02                    	push 2	; arg count
 22505 00010523 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22506 0001052B 803805                  	cmp byte [rax], T_undefined
 22507 0001052E 0F84F46F0000            	je L_error_fvar_undefined
 22508 00010534 803804                  	cmp byte [rax], T_closure
 22509 00010537 0F856F700000            	jne L_error_non_closure
 22510 0001053D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22511 00010540 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22512 00010543 50                      	push rax
 22513                                  	; preparing a non-tail-call
 22514 00010544 488B4520                	mov rax, PARAM(0)	; param s
 22515 00010548 50                      	push rax
 22516 00010549 6A01                    	push 1	; arg count
 22517 0001054B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22518 00010553 803805                  	cmp byte [rax], T_undefined
 22519 00010556 0F84CC6F0000            	je L_error_fvar_undefined
 22520 0001055C 803804                  	cmp byte [rax], T_closure
 22521 0001055F 0F8547700000            	jne L_error_non_closure
 22522 00010565 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22523 00010568 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22524 0001056B 50                      	push rax
 22525 0001056C 6A02                    	push 2	; arg count
 22526 0001056E 488B4510                	mov rax, ENV
 22527 00010572 488B00                  	mov rax, qword [rax + 8 * 0]
 22528 00010575 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22529 00010578 488B00                  	mov rax, qword [rax]
 22530 0001057B 803804                  	cmp byte [rax], T_closure
 22531 0001057E 0F8528700000            	jne L_error_non_closure
 22532 00010584 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22533 00010587 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22534 0001058A 50                      	push rax
 22535 0001058B 6A01                    	push 1	; arg count
 22536 0001058D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22537 00010592 E8BE700000              	call malloc
 22538 00010597 50                      	push rax
 22539 00010598 BF10000000              	mov rdi, 8 * 2	; new rib
 22540 0001059D E8B3700000              	call malloc
 22541 000105A2 50                      	push rax
 22542 000105A3 BF18000000              	mov rdi, 8 * 3	; extended env
 22543 000105A8 E8A8700000              	call malloc
 22544 000105AD 488B7D10                	mov rdi, ENV
 22545 000105B1 BE00000000              	mov rsi, 0
 22546 000105B6 BA01000000              	mov rdx, 1
 22547                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 22548 000105BB 4883FE02                	cmp rsi, 2
 22549 000105BF 7410                    	je .L_lambda_simple_env_end_0089
 22550 000105C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22551 000105C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22552 000105C9 48FFC6                  	inc rsi
 22553 000105CC 48FFC2                  	inc rdx
 22554 000105CF EBEA                    	jmp .L_lambda_simple_env_loop_0089
 22555                                  .L_lambda_simple_env_end_0089:
 22556 000105D1 5B                      	pop rbx
 22557 000105D2 BE00000000              	mov rsi, 0
 22558                                  .L_lambda_simple_params_loop_0089:	; copy params
 22559 000105D7 4883FE02                	cmp rsi, 2
 22560 000105DB 740E                    	je .L_lambda_simple_params_end_0089
 22561 000105DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22562 000105E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22563 000105E6 48FFC6                  	inc rsi
 22564 000105E9 EBEC                    	jmp .L_lambda_simple_params_loop_0089
 22565                                  .L_lambda_simple_params_end_0089:
 22566 000105EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22567 000105EE 4889C3                  	mov rbx, rax
 22568 000105F1 58                      	pop rax
 22569 000105F2 C60004                  	mov byte [rax], T_closure
 22570 000105F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22571 000105F9 48C74009[06060100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 22572 00010601 E980000000              	jmp .L_lambda_simple_end_0089
 22573                                  .L_lambda_simple_code_0089:	; lambda-simple body
 22574 00010606 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22575 0001060C 740B                    	je .L_lambda_simple_arity_check_ok_0089
 22576 0001060E FF742410                	push qword [rsp + 8 * 2]
 22577 00010612 6A01                    	push 1
 22578 00010614 E9F56F0000              	jmp L_error_incorrect_arity_simple
 22579                                  .L_lambda_simple_arity_check_ok_0089:
 22580 00010619 C8000000                	enter 0, 0
 22581                                  	; preparing a non-tail-call
 22582                                  	; preparing a non-tail-call
 22583 0001061D 488B4510                	mov rax, ENV
 22584 00010621 488B00                  	mov rax, qword [rax + 8 * 0]
 22585 00010624 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 22586 00010627 50                      	push rax
 22587 00010628 6A01                    	push 1	; arg count
 22588 0001062A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22589 00010632 803805                  	cmp byte [rax], T_undefined
 22590 00010635 0F84ED6E0000            	je L_error_fvar_undefined
 22591 0001063B 803804                  	cmp byte [rax], T_closure
 22592 0001063E 0F85686F0000            	jne L_error_non_closure
 22593 00010644 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22594 00010647 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22595 0001064A 50                      	push rax
 22596 0001064B 488B4510                	mov rax, ENV
 22597 0001064F 488B00                  	mov rax, qword [rax + 8 * 0]
 22598 00010652 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 22599 00010656 50                      	push rax
 22600 00010657 488B4520                	mov rax, PARAM(0)	; param str
 22601 0001065B 50                      	push rax
 22602 0001065C 6A03                    	push 3	; arg count
 22603 0001065E 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 22604 00010666 803805                  	cmp byte [rax], T_undefined
 22605 00010669 0F84B96E0000            	je L_error_fvar_undefined
 22606 0001066F 803804                  	cmp byte [rax], T_closure
 22607 00010672 0F85346F0000            	jne L_error_non_closure
 22608 00010678 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22609 0001067B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22610                                  
 22611 0001067E 488B4520                	mov rax, PARAM(0)	; param str
 22612 00010682 C9                      	leave
 22613 00010683 C21800                  	ret AND_KILL_FRAME(1)
 22614                                  .L_lambda_simple_end_0089:	; new closure is in rax
 22615 00010686 803804                  	cmp byte [rax], T_closure
 22616 00010689 0F851D6F0000            	jne L_error_non_closure
 22617 0001068F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22618 00010692 FF7508                  	push qword [rbp + 8 * 1]
 22619                                   ; old ret addr
 22620 00010695 FF7500                  	push qword [rbp]
 22621                                   ; restore the old rbp
 22622 00010698 BB01000000              	mov rbx, 1
 22623 0001069D 4883C303                	add rbx, 3
 22624 000106A1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22625 000106A5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22626 000106AA 4C8D4DF8                	lea r9, [rbp - 8]
 22627 000106AE B905000000              	mov rcx, 5
 22628                                  .L_tc_recycle_frame_loop_00be:
 22629 000106B3 4883F900                	cmp rcx, 0
 22630 000106B7 7413                    	je .L_tc_recycle_frame_done_00be
 22631 000106B9 4D8B11                  	mov r10, qword [r9]
 22632 000106BC 4D8910                  	mov qword [r8], r10
 22633 000106BF 4983E808                	sub r8, 8
 22634 000106C3 4983E908                	sub r9, 8
 22635 000106C7 48FFC9                  	dec rcx
 22636 000106CA EBE7                    	jmp .L_tc_recycle_frame_loop_00be
 22637                                  .L_tc_recycle_frame_done_00be:
 22638 000106CC 498D6008                	lea rsp, [r8 + 8]
 22639 000106D0 5D                      	pop rbp ; restore the old rbp
 22640 000106D1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22641                                  .L_if_end_0068:
 22642 000106D4 C9                      	leave
 22643 000106D5 C22000                  	ret AND_KILL_FRAME(2)
 22644                                  .L_lambda_simple_end_0088:	; new closure is in rax
 22645 000106D8 50                      	push rax
 22646 000106D9 488B4520                	mov rax, PARAM(0)	; param run
 22647 000106DD 8F00                    	pop qword [rax]
 22648 000106DF 48B8-                   	mov rax, sob_void
 22648 000106E1 [0000000000000000] 
 22649                                  
 22650 000106E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22651 000106EE E8626F0000              	call malloc
 22652 000106F3 50                      	push rax
 22653 000106F4 BF08000000              	mov rdi, 8 * 1	; new rib
 22654 000106F9 E8576F0000              	call malloc
 22655 000106FE 50                      	push rax
 22656 000106FF BF10000000              	mov rdi, 8 * 2	; extended env
 22657 00010704 E84C6F0000              	call malloc
 22658 00010709 488B7D10                	mov rdi, ENV
 22659 0001070D BE00000000              	mov rsi, 0
 22660 00010712 BA01000000              	mov rdx, 1
 22661                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 22662 00010717 4883FE01                	cmp rsi, 1
 22663 0001071B 7410                    	je .L_lambda_simple_env_end_008a
 22664 0001071D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22665 00010721 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22666 00010725 48FFC6                  	inc rsi
 22667 00010728 48FFC2                  	inc rdx
 22668 0001072B EBEA                    	jmp .L_lambda_simple_env_loop_008a
 22669                                  .L_lambda_simple_env_end_008a:
 22670 0001072D 5B                      	pop rbx
 22671 0001072E BE00000000              	mov rsi, 0
 22672                                  .L_lambda_simple_params_loop_008a:	; copy params
 22673 00010733 4883FE01                	cmp rsi, 1
 22674 00010737 740E                    	je .L_lambda_simple_params_end_008a
 22675 00010739 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22676 0001073E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22677 00010742 48FFC6                  	inc rsi
 22678 00010745 EBEC                    	jmp .L_lambda_simple_params_loop_008a
 22679                                  .L_lambda_simple_params_end_008a:
 22680 00010747 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22681 0001074A 4889C3                  	mov rbx, rax
 22682 0001074D 58                      	pop rax
 22683 0001074E C60004                  	mov byte [rax], T_closure
 22684 00010751 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22685 00010755 48C74009[62070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 22686 0001075D E988000000              	jmp .L_lambda_simple_end_008a
 22687                                  .L_lambda_simple_code_008a:	; lambda-simple body
 22688 00010762 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22689 00010768 740B                    	je .L_lambda_simple_arity_check_ok_008a
 22690 0001076A FF742410                	push qword [rsp + 8 * 2]
 22691 0001076E 6A01                    	push 1
 22692 00010770 E9996E0000              	jmp L_error_incorrect_arity_simple
 22693                                  .L_lambda_simple_arity_check_ok_008a:
 22694 00010775 C8000000                	enter 0, 0
 22695                                  	; preparing a tail-call
 22696 00010779 48B8-                   	mov rax, L_constants + 2135
 22696 0001077B [5708000000000000] 
 22697 00010783 50                      	push rax
 22698 00010784 488B4520                	mov rax, PARAM(0)	; param s
 22699 00010788 50                      	push rax
 22700 00010789 6A02                    	push 2	; arg count
 22701 0001078B 488B4510                	mov rax, ENV
 22702 0001078F 488B00                  	mov rax, qword [rax + 8 * 0]
 22703 00010792 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22704 00010795 488B00                  	mov rax, qword [rax]
 22705 00010798 803804                  	cmp byte [rax], T_closure
 22706 0001079B 0F850B6E0000            	jne L_error_non_closure
 22707 000107A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22708 000107A4 FF7508                  	push qword [rbp + 8 * 1]
 22709                                   ; old ret addr
 22710 000107A7 FF7500                  	push qword [rbp]
 22711                                   ; restore the old rbp
 22712 000107AA BB02000000              	mov rbx, 2
 22713 000107AF 4883C303                	add rbx, 3
 22714 000107B3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22715 000107B7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22716 000107BC 4C8D4DF8                	lea r9, [rbp - 8]
 22717 000107C0 B906000000              	mov rcx, 6
 22718                                  .L_tc_recycle_frame_loop_00bf:
 22719 000107C5 4883F900                	cmp rcx, 0
 22720 000107C9 7413                    	je .L_tc_recycle_frame_done_00bf
 22721 000107CB 4D8B11                  	mov r10, qword [r9]
 22722 000107CE 4D8910                  	mov qword [r8], r10
 22723 000107D1 4983E808                	sub r8, 8
 22724 000107D5 4983E908                	sub r9, 8
 22725 000107D9 48FFC9                  	dec rcx
 22726 000107DC EBE7                    	jmp .L_tc_recycle_frame_loop_00bf
 22727                                  .L_tc_recycle_frame_done_00bf:
 22728 000107DE 498D6008                	lea rsp, [r8 + 8]
 22729 000107E2 5D                      	pop rbp ; restore the old rbp
 22730 000107E3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22731 000107E6 C9                      	leave
 22732 000107E7 C21800                  	ret AND_KILL_FRAME(1)
 22733                                  .L_lambda_simple_end_008a:	; new closure is in rax
 22734 000107EA C9                      	leave
 22735 000107EB C21800                  	ret AND_KILL_FRAME(1)
 22736                                  .L_lambda_simple_end_0087:	; new closure is in rax
 22737 000107EE 803804                  	cmp byte [rax], T_closure
 22738 000107F1 0F85B56D0000            	jne L_error_non_closure
 22739 000107F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22740 000107FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 22741 000107FD 48890425[03140000]      	mov qword [free_var_94], rax
 22742 00010805 48B8-                   	mov rax, sob_void
 22742 00010807 [0000000000000000] 
 22743                                  
 22744 0001080F 4889C7                  	mov rdi, rax
 22745 00010812 E893700000              	call print_sexpr_if_not_void
 22746 00010817 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22747 0001081C E8346E0000              	call malloc
 22748 00010821 50                      	push rax
 22749 00010822 BF00000000              	mov rdi, 8 * 0	; new rib
 22750 00010827 E8296E0000              	call malloc
 22751 0001082C 50                      	push rax
 22752 0001082D BF08000000              	mov rdi, 8 * 1	; extended env
 22753 00010832 E81E6E0000              	call malloc
 22754 00010837 488B7D10                	mov rdi, ENV
 22755 0001083B 4831F6                  	 xor rsi, rsi
 22756 0001083E 4831D2                  	 xor rdx, rdx
 22757 00010841 48FFC2                  	inc rdx
 22758                                  .L_lambda_opt_env_loop_0016:	; 
 22759 00010844 4883FE00                	cmp rsi, 0
 22760 00010848 7410                    	je .L_lambda_opt_env_end_0016
 22761 0001084A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22762 0001084E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22763 00010852 48FFC6                  	inc rsi
 22764 00010855 48FFC2                  	inc rdx
 22765 00010858 EBEA                    	jmp .L_lambda_opt_env_loop_0016
 22766                                  .L_lambda_opt_env_end_0016:
 22767 0001085A 5B                      	pop rbx
 22768 0001085B 4831F6                  	xor rsi, rsi
 22769                                  .L_lambda_opt_params_loop_0016:	; copy params
 22770 0001085E 4883FE00                	cmp rsi, 0
 22771 00010862 740E                    	je .L_lambda_opt_params_end_0016
 22772 00010864 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22773 00010869 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22774 0001086D 48FFC6                  	inc rsi
 22775 00010870 EBEC                    	jmp .L_lambda_opt_params_loop_0016
 22776                                  .L_lambda_opt_params_end_0016:
 22777 00010872 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22778 00010875 4889C3                  	mov rbx, rax
 22779 00010878 58                      	pop rax
 22780 00010879 C60004                  	mov byte [rax], T_closure
 22781 0001087C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22782 00010880 48C74009[8D080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 22783 00010888 E960010000              	jmp .L_lambda_opt_end_0016
 22784                                  .L_lambda_opt_code_0016:
 22785 0001088D 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 22786 00010892 4983FF00                	cmp r15, 0
 22787 00010896 7409                    	je .L_lambda_opt_arity_check_exact_0016
 22788 00010898 7F57                    	jg .L_lambda_opt_arity_check_more_0016
 22789 0001089A 6A00                    	push 0
 22790 0001089C E9816D0000              	jmp L_error_incorrect_arity_opt
 22791                                  .L_lambda_opt_arity_check_exact_0016: ;Exact case
 22792 000108A1 4C8B0424                	mov r8, qword [rsp -8 * 0]
 22793 000108A5 4C894424F8              	mov qword [rsp -8], r8
 22794 000108AA 4C8B442408              	mov r8, qword [rsp +8]
 22795 000108AF 4C890424                	mov qword [rsp +8 * 0], r8
 22796 000108B3 4C8B442410              	mov r8, qword [rsp +8 * 2]
 22797 000108B8 4C89C1                  	mov rcx, r8
 22798 000108BB 49FFC0                  	inc r8
 22799 000108BE 4C89442408              	mov qword [rsp +8], r8
 22800 000108C3 4889E2                  	mov rdx, rsp
 22801 000108C6 4883C218                	add rdx, 24
 22802                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0016:
 22803 000108CA 4883F900                	cmp rcx, 0
 22804 000108CE 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0016
 22805 000108D0 4C8B02                  	mov r8, qword [rdx]
 22806 000108D3 4C8942F8                	mov qword [rdx - 8], r8
 22807 000108D7 4883C208                	add rdx, 8
 22808 000108DB 48FFC9                  	dec rcx
 22809 000108DE EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0016
 22810                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0016:
 22811 000108E0 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 22812 000108E8 4883EC08                	sub rsp, 8
 22813 000108EC E985000000              	jmp .L_lambda_opt_stack_adjusted_0016
 22814                                  .L_lambda_opt_arity_check_more_0016:
 22815 000108F1 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 22816 000108F6 4D89C4                  	mov r12, r8
 22817 000108F9 4C89C1                  	mov rcx, r8
 22818 000108FC 4D8D6802                	lea r13, [r8 + 2] 
 22819 00010900 4883E900                	sub rcx, 0
 22820 00010904 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 22821 00010909 49BE-                   	mov r14, sob_nil
 22821 0001090B [0100000000000000] 
 22822                                  .L_lambda_opt_create_list_of_opt_params_0016:
 22823 00010913 4883F900                	cmp rcx, 0
 22824 00010917 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0016
 22825 00010919 BF11000000              	mov rdi, 17
 22826 0001091E E8326D0000              	call malloc
 22827 00010923 C60021                  	mov byte [rax], T_pair
 22828 00010926 498B1B                  	mov rbx, qword [r11]
 22829 00010929 48895801                	mov qword [rax +1], rbx
 22830 0001092D 4C897009                	mov qword [rax + 1 + 8], r14
 22831 00010931 4989C6                  	mov r14, rax
 22832 00010934 48FFC9                  	dec rcx
 22833 00010937 4983EB08                	sub r11, 8
 22834 0001093B EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0016
 22835                                  .L_lambda_opt_create_list_of_opt_params_end_0016:
 22836 0001093D 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
 22837 00010942 4D8932                  	mov qword [r10], r14
 22838 00010945 4E8D2CED00000000        	lea r13, [8 * r13]
 22839 0001094D 4901E5                  	add r13, rsp
 22840 00010950 B904000000              	mov rcx, 4 + 0
 22841                                  .L_lambda_opt_stack_shrink_loop_0016:
 22842 00010955 4883F900                	cmp rcx, 0
 22843 00010959 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0016
 22844 0001095B 4D8B1A                  	mov r11, qword [r10]
 22845 0001095E 4D895D00                	mov qword [r13], r11
 22846 00010962 4983EA08                	sub r10, 8
 22847 00010966 4983ED08                	sub r13, 8
 22848 0001096A 48FFC9                  	dec rcx
 22849 0001096D EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 22850                                  .L_lambda_opt_stack_shrink_loop_exit_0016:
 22851 0001096F 4983C508                	add r13, 8
 22852 00010973 4C89EC                  	mov rsp, r13
 22853                                  .L_lambda_opt_stack_adjusted_0016:
 22854 00010976 48C744241001000000      	mov qword [rsp + 8*2], 1
 22855 0001097F C8000000                	enter 0, 0
 22856                                  	; preparing a tail-call
 22857 00010983 488B4520                	mov rax, PARAM(0)	; param s
 22858 00010987 50                      	push rax
 22859 00010988 6A01                    	push 1	; arg count
 22860 0001098A 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 22861 00010992 803805                  	cmp byte [rax], T_undefined
 22862 00010995 0F848D6B0000            	je L_error_fvar_undefined
 22863 0001099B 803804                  	cmp byte [rax], T_closure
 22864 0001099E 0F85086C0000            	jne L_error_non_closure
 22865 000109A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22866 000109A7 FF7508                  	push qword [rbp + 8 * 1]
 22867                                   ; old ret addr
 22868 000109AA FF7500                  	push qword [rbp]
 22869                                   ; restore the old rbp
 22870 000109AD BB01000000              	mov rbx, 1
 22871 000109B2 4883C303                	add rbx, 3
 22872 000109B6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 22873 000109BA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 22874 000109BF 4C8D4DF8                	lea r9, [rbp - 8]
 22875 000109C3 B905000000              	mov rcx, 5
 22876                                  .L_tc_recycle_frame_loop_00c0:
 22877 000109C8 4883F900                	cmp rcx, 0
 22878 000109CC 7413                    	je .L_tc_recycle_frame_done_00c0
 22879 000109CE 4D8B11                  	mov r10, qword [r9]
 22880 000109D1 4D8910                  	mov qword [r8], r10
 22881 000109D4 4983E808                	sub r8, 8
 22882 000109D8 4983E908                	sub r9, 8
 22883 000109DC 48FFC9                  	dec rcx
 22884 000109DF EBE7                    	jmp .L_tc_recycle_frame_loop_00c0
 22885                                  .L_tc_recycle_frame_done_00c0:
 22886 000109E1 498D6008                	lea rsp, [r8 + 8]
 22887 000109E5 5D                      	pop rbp ; restore the old rbp
 22888 000109E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22889 000109E9 C9                      	leave
 22890 000109EA C21800                  	ret 8 * (2 + 1)
 22891                                  .L_lambda_opt_end_0016:	; new closure is in rax
 22892 000109ED 48890425[11170000]      	mov qword [free_var_140], rax
 22893 000109F5 48B8-                   	mov rax, sob_void
 22893 000109F7 [0000000000000000] 
 22894                                  
 22895 000109FF 4889C7                  	mov rdi, rax
 22896 00010A02 E8A36E0000              	call print_sexpr_if_not_void
 22897                                  	; preparing a non-tail-call
 22898 00010A07 48B8-                   	mov rax, L_constants + 1993
 22898 00010A09 [C907000000000000] 
 22899 00010A11 50                      	push rax
 22900 00010A12 6A01                    	push 1	; arg count
 22901 00010A14 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22902 00010A19 E8376C0000              	call malloc
 22903 00010A1E 50                      	push rax
 22904 00010A1F BF00000000              	mov rdi, 8 * 0	; new rib
 22905 00010A24 E82C6C0000              	call malloc
 22906 00010A29 50                      	push rax
 22907 00010A2A BF08000000              	mov rdi, 8 * 1	; extended env
 22908 00010A2F E8216C0000              	call malloc
 22909 00010A34 488B7D10                	mov rdi, ENV
 22910 00010A38 BE00000000              	mov rsi, 0
 22911 00010A3D BA01000000              	mov rdx, 1
 22912                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 22913 00010A42 4883FE00                	cmp rsi, 0
 22914 00010A46 7410                    	je .L_lambda_simple_env_end_008b
 22915 00010A48 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22916 00010A4C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22917 00010A50 48FFC6                  	inc rsi
 22918 00010A53 48FFC2                  	inc rdx
 22919 00010A56 EBEA                    	jmp .L_lambda_simple_env_loop_008b
 22920                                  .L_lambda_simple_env_end_008b:
 22921 00010A58 5B                      	pop rbx
 22922 00010A59 BE00000000              	mov rsi, 0
 22923                                  .L_lambda_simple_params_loop_008b:	; copy params
 22924 00010A5E 4883FE00                	cmp rsi, 0
 22925 00010A62 740E                    	je .L_lambda_simple_params_end_008b
 22926 00010A64 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22927 00010A69 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22928 00010A6D 48FFC6                  	inc rsi
 22929 00010A70 EBEC                    	jmp .L_lambda_simple_params_loop_008b
 22930                                  .L_lambda_simple_params_end_008b:
 22931 00010A72 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22932 00010A75 4889C3                  	mov rbx, rax
 22933 00010A78 58                      	pop rax
 22934 00010A79 C60004                  	mov byte [rax], T_closure
 22935 00010A7C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22936 00010A80 48C74009[8D0A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 22937 00010A88 E936030000              	jmp .L_lambda_simple_end_008b
 22938                                  .L_lambda_simple_code_008b:	; lambda-simple body
 22939 00010A8D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22940 00010A93 740B                    	je .L_lambda_simple_arity_check_ok_008b
 22941 00010A95 FF742410                	push qword [rsp + 8 * 2]
 22942 00010A99 6A01                    	push 1
 22943 00010A9B E96E6B0000              	jmp L_error_incorrect_arity_simple
 22944                                  .L_lambda_simple_arity_check_ok_008b:
 22945 00010AA0 C8000000                	enter 0, 0
 22946 00010AA4 BF08000000              	mov rdi, 8*1
 22947 00010AA9 E8A76B0000              	call malloc
 22948 00010AAE 488B5D20                	mov rbx, PARAM(0)
 22949 00010AB2 488918                  	mov qword [rax], rbx
 22950 00010AB5 48894520                	mov PARAM(0), rax
 22951 00010AB9 48B8-                   	mov rax, sob_void
 22951 00010ABB [0000000000000000] 
 22952                                  
 22953 00010AC3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22954 00010AC8 E8886B0000              	call malloc
 22955 00010ACD 50                      	push rax
 22956 00010ACE BF08000000              	mov rdi, 8 * 1	; new rib
 22957 00010AD3 E87D6B0000              	call malloc
 22958 00010AD8 50                      	push rax
 22959 00010AD9 BF10000000              	mov rdi, 8 * 2	; extended env
 22960 00010ADE E8726B0000              	call malloc
 22961 00010AE3 488B7D10                	mov rdi, ENV
 22962 00010AE7 BE00000000              	mov rsi, 0
 22963 00010AEC BA01000000              	mov rdx, 1
 22964                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 22965 00010AF1 4883FE01                	cmp rsi, 1
 22966 00010AF5 7410                    	je .L_lambda_simple_env_end_008c
 22967 00010AF7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22968 00010AFB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22969 00010AFF 48FFC6                  	inc rsi
 22970 00010B02 48FFC2                  	inc rdx
 22971 00010B05 EBEA                    	jmp .L_lambda_simple_env_loop_008c
 22972                                  .L_lambda_simple_env_end_008c:
 22973 00010B07 5B                      	pop rbx
 22974 00010B08 BE00000000              	mov rsi, 0
 22975                                  .L_lambda_simple_params_loop_008c:	; copy params
 22976 00010B0D 4883FE01                	cmp rsi, 1
 22977 00010B11 740E                    	je .L_lambda_simple_params_end_008c
 22978 00010B13 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22979 00010B18 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22980 00010B1C 48FFC6                  	inc rsi
 22981 00010B1F EBEC                    	jmp .L_lambda_simple_params_loop_008c
 22982                                  .L_lambda_simple_params_end_008c:
 22983 00010B21 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22984 00010B24 4889C3                  	mov rbx, rax
 22985 00010B27 58                      	pop rax
 22986 00010B28 C60004                  	mov byte [rax], T_closure
 22987 00010B2B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22988 00010B2F 48C74009[3C0B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 22989 00010B37 E949010000              	jmp .L_lambda_simple_end_008c
 22990                                  .L_lambda_simple_code_008c:	; lambda-simple body
 22991 00010B3C 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22992 00010B42 740B                    	je .L_lambda_simple_arity_check_ok_008c
 22993 00010B44 FF742410                	push qword [rsp + 8 * 2]
 22994 00010B48 6A03                    	push 3
 22995 00010B4A E9BF6A0000              	jmp L_error_incorrect_arity_simple
 22996                                  .L_lambda_simple_arity_check_ok_008c:
 22997 00010B4F C8000000                	enter 0, 0
 22998                                  	; preparing a non-tail-call
 22999 00010B53 488B4530                	mov rax, PARAM(2)	; param n
 23000 00010B57 50                      	push rax
 23001 00010B58 488B4528                	mov rax, PARAM(1)	; param i
 23002 00010B5C 50                      	push rax
 23003 00010B5D 6A02                    	push 2	; arg count
 23004 00010B5F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23005 00010B67 803805                  	cmp byte [rax], T_undefined
 23006 00010B6A 0F84B8690000            	je L_error_fvar_undefined
 23007 00010B70 803804                  	cmp byte [rax], T_closure
 23008 00010B73 0F85336A0000            	jne L_error_non_closure
 23009 00010B79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23010 00010B7C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23011 00010B7F 483D[02000000]          	cmp rax, sob_boolean_false
 23012 00010B85 0F84EC000000            	je .L_if_else_0069
 23013                                  	; preparing a tail-call
 23014                                  	; preparing a non-tail-call
 23015 00010B8B 488B4530                	mov rax, PARAM(2)	; param n
 23016 00010B8F 50                      	push rax
 23017                                  	; preparing a non-tail-call
 23018 00010B90 48B8-                   	mov rax, L_constants + 2270
 23018 00010B92 [DE08000000000000] 
 23019 00010B9A 50                      	push rax
 23020 00010B9B 488B4528                	mov rax, PARAM(1)	; param i
 23021 00010B9F 50                      	push rax
 23022 00010BA0 6A02                    	push 2	; arg count
 23023 00010BA2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23024 00010BAA 803805                  	cmp byte [rax], T_undefined
 23025 00010BAD 0F8475690000            	je L_error_fvar_undefined
 23026 00010BB3 803804                  	cmp byte [rax], T_closure
 23027 00010BB6 0F85F0690000            	jne L_error_non_closure
 23028 00010BBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 23029 00010BBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 23030 00010BC2 50                      	push rax
 23031 00010BC3 488B4520                	mov rax, PARAM(0)	; param str
 23032 00010BC7 50                      	push rax
 23033 00010BC8 6A03                    	push 3	; arg count
 23034 00010BCA 488B4510                	mov rax, ENV
 23035 00010BCE 488B00                  	mov rax, qword [rax + 8 * 0]
 23036 00010BD1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23037 00010BD4 488B00                  	mov rax, qword [rax]
 23038 00010BD7 803804                  	cmp byte [rax], T_closure
 23039 00010BDA 0F85CC690000            	jne L_error_non_closure
 23040 00010BE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23041 00010BE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23042 00010BE6 50                      	push rax
 23043                                  	; preparing a non-tail-call
 23044 00010BE7 488B4528                	mov rax, PARAM(1)	; param i
 23045 00010BEB 50                      	push rax
 23046 00010BEC 488B4520                	mov rax, PARAM(0)	; param str
 23047 00010BF0 50                      	push rax
 23048 00010BF1 6A02                    	push 2	; arg count
 23049 00010BF3 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 23050 00010BFB 803805                  	cmp byte [rax], T_undefined
 23051 00010BFE 0F8424690000            	je L_error_fvar_undefined
 23052 00010C04 803804                  	cmp byte [rax], T_closure
 23053 00010C07 0F859F690000            	jne L_error_non_closure
 23054 00010C0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23055 00010C10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23056 00010C13 50                      	push rax
 23057 00010C14 6A02                    	push 2	; arg count
 23058 00010C16 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 23059 00010C1E 803805                  	cmp byte [rax], T_undefined
 23060 00010C21 0F8401690000            	je L_error_fvar_undefined
 23061 00010C27 803804                  	cmp byte [rax], T_closure
 23062 00010C2A 0F857C690000            	jne L_error_non_closure
 23063 00010C30 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23064 00010C33 FF7508                  	push qword [rbp + 8 * 1]
 23065                                   ; old ret addr
 23066 00010C36 FF7500                  	push qword [rbp]
 23067                                   ; restore the old rbp
 23068 00010C39 BB02000000              	mov rbx, 2
 23069 00010C3E 4883C303                	add rbx, 3
 23070 00010C42 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23071 00010C46 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23072 00010C4B 4C8D4DF8                	lea r9, [rbp - 8]
 23073 00010C4F B906000000              	mov rcx, 6
 23074                                  .L_tc_recycle_frame_loop_00c1:
 23075 00010C54 4883F900                	cmp rcx, 0
 23076 00010C58 7413                    	je .L_tc_recycle_frame_done_00c1
 23077 00010C5A 4D8B11                  	mov r10, qword [r9]
 23078 00010C5D 4D8910                  	mov qword [r8], r10
 23079 00010C60 4983E808                	sub r8, 8
 23080 00010C64 4983E908                	sub r9, 8
 23081 00010C68 48FFC9                  	dec rcx
 23082 00010C6B EBE7                    	jmp .L_tc_recycle_frame_loop_00c1
 23083                                  .L_tc_recycle_frame_done_00c1:
 23084 00010C6D 498D6008                	lea rsp, [r8 + 8]
 23085 00010C71 5D                      	pop rbp ; restore the old rbp
 23086 00010C72 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23087 00010C75 EB0A                    	jmp .L_if_end_0069
 23088                                  .L_if_else_0069:
 23089 00010C77 48B8-                   	mov rax, L_constants + 1
 23089 00010C79 [0100000000000000] 
 23090                                  .L_if_end_0069:
 23091 00010C81 C9                      	leave
 23092 00010C82 C22800                  	ret AND_KILL_FRAME(3)
 23093                                  .L_lambda_simple_end_008c:	; new closure is in rax
 23094 00010C85 50                      	push rax
 23095 00010C86 488B4520                	mov rax, PARAM(0)	; param run
 23096 00010C8A 8F00                    	pop qword [rax]
 23097 00010C8C 48B8-                   	mov rax, sob_void
 23097 00010C8E [0000000000000000] 
 23098                                  
 23099 00010C96 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23100 00010C9B E8B5690000              	call malloc
 23101 00010CA0 50                      	push rax
 23102 00010CA1 BF08000000              	mov rdi, 8 * 1	; new rib
 23103 00010CA6 E8AA690000              	call malloc
 23104 00010CAB 50                      	push rax
 23105 00010CAC BF10000000              	mov rdi, 8 * 2	; extended env
 23106 00010CB1 E89F690000              	call malloc
 23107 00010CB6 488B7D10                	mov rdi, ENV
 23108 00010CBA BE00000000              	mov rsi, 0
 23109 00010CBF BA01000000              	mov rdx, 1
 23110                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 23111 00010CC4 4883FE01                	cmp rsi, 1
 23112 00010CC8 7410                    	je .L_lambda_simple_env_end_008d
 23113 00010CCA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23114 00010CCE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23115 00010CD2 48FFC6                  	inc rsi
 23116 00010CD5 48FFC2                  	inc rdx
 23117 00010CD8 EBEA                    	jmp .L_lambda_simple_env_loop_008d
 23118                                  .L_lambda_simple_env_end_008d:
 23119 00010CDA 5B                      	pop rbx
 23120 00010CDB BE00000000              	mov rsi, 0
 23121                                  .L_lambda_simple_params_loop_008d:	; copy params
 23122 00010CE0 4883FE01                	cmp rsi, 1
 23123 00010CE4 740E                    	je .L_lambda_simple_params_end_008d
 23124 00010CE6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23125 00010CEB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23126 00010CEF 48FFC6                  	inc rsi
 23127 00010CF2 EBEC                    	jmp .L_lambda_simple_params_loop_008d
 23128                                  .L_lambda_simple_params_end_008d:
 23129 00010CF4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23130 00010CF7 4889C3                  	mov rbx, rax
 23131 00010CFA 58                      	pop rax
 23132 00010CFB C60004                  	mov byte [rax], T_closure
 23133 00010CFE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23134 00010D02 48C74009[0F0D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 23135 00010D0A E9B0000000              	jmp .L_lambda_simple_end_008d
 23136                                  .L_lambda_simple_code_008d:	; lambda-simple body
 23137 00010D0F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23138 00010D15 740B                    	je .L_lambda_simple_arity_check_ok_008d
 23139 00010D17 FF742410                	push qword [rsp + 8 * 2]
 23140 00010D1B 6A01                    	push 1
 23141 00010D1D E9EC680000              	jmp L_error_incorrect_arity_simple
 23142                                  .L_lambda_simple_arity_check_ok_008d:
 23143 00010D22 C8000000                	enter 0, 0
 23144                                  	; preparing a tail-call
 23145                                  	; preparing a non-tail-call
 23146 00010D26 488B4520                	mov rax, PARAM(0)	; param str
 23147 00010D2A 50                      	push rax
 23148 00010D2B 6A01                    	push 1	; arg count
 23149 00010D2D 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 23150 00010D35 803805                  	cmp byte [rax], T_undefined
 23151 00010D38 0F84EA670000            	je L_error_fvar_undefined
 23152 00010D3E 803804                  	cmp byte [rax], T_closure
 23153 00010D41 0F8565680000            	jne L_error_non_closure
 23154 00010D47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23155 00010D4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23156 00010D4D 50                      	push rax
 23157 00010D4E 48B8-                   	mov rax, L_constants + 2135
 23157 00010D50 [5708000000000000] 
 23158 00010D58 50                      	push rax
 23159 00010D59 488B4520                	mov rax, PARAM(0)	; param str
 23160 00010D5D 50                      	push rax
 23161 00010D5E 6A03                    	push 3	; arg count
 23162 00010D60 488B4510                	mov rax, ENV
 23163 00010D64 488B00                  	mov rax, qword [rax + 8 * 0]
 23164 00010D67 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23165 00010D6A 488B00                  	mov rax, qword [rax]
 23166 00010D6D 803804                  	cmp byte [rax], T_closure
 23167 00010D70 0F8536680000            	jne L_error_non_closure
 23168 00010D76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23169 00010D79 FF7508                  	push qword [rbp + 8 * 1]
 23170                                   ; old ret addr
 23171 00010D7C FF7500                  	push qword [rbp]
 23172                                   ; restore the old rbp
 23173 00010D7F BB03000000              	mov rbx, 3
 23174 00010D84 4883C303                	add rbx, 3
 23175 00010D88 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23176 00010D8C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23177 00010D91 4C8D4DF8                	lea r9, [rbp - 8]
 23178 00010D95 B907000000              	mov rcx, 7
 23179                                  .L_tc_recycle_frame_loop_00c2:
 23180 00010D9A 4883F900                	cmp rcx, 0
 23181 00010D9E 7413                    	je .L_tc_recycle_frame_done_00c2
 23182 00010DA0 4D8B11                  	mov r10, qword [r9]
 23183 00010DA3 4D8910                  	mov qword [r8], r10
 23184 00010DA6 4983E808                	sub r8, 8
 23185 00010DAA 4983E908                	sub r9, 8
 23186 00010DAE 48FFC9                  	dec rcx
 23187 00010DB1 EBE7                    	jmp .L_tc_recycle_frame_loop_00c2
 23188                                  .L_tc_recycle_frame_done_00c2:
 23189 00010DB3 498D6008                	lea rsp, [r8 + 8]
 23190 00010DB7 5D                      	pop rbp ; restore the old rbp
 23191 00010DB8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23192 00010DBB C9                      	leave
 23193 00010DBC C21800                  	ret AND_KILL_FRAME(1)
 23194                                  .L_lambda_simple_end_008d:	; new closure is in rax
 23195 00010DBF C9                      	leave
 23196 00010DC0 C21800                  	ret AND_KILL_FRAME(1)
 23197                                  .L_lambda_simple_end_008b:	; new closure is in rax
 23198 00010DC3 803804                  	cmp byte [rax], T_closure
 23199 00010DC6 0F85E0670000            	jne L_error_non_closure
 23200 00010DCC FF7001                  	push SOB_CLOSURE_ENV(rax)
 23201 00010DCF FF5009                  	call SOB_CLOSURE_CODE(rax)
 23202 00010DD2 48890425[AC150000]      	mov qword [free_var_119], rax
 23203 00010DDA 48B8-                   	mov rax, sob_void
 23203 00010DDC [0000000000000000] 
 23204                                  
 23205 00010DE4 4889C7                  	mov rdi, rax
 23206 00010DE7 E8BE6A0000              	call print_sexpr_if_not_void
 23207                                  	; preparing a non-tail-call
 23208 00010DEC 48B8-                   	mov rax, L_constants + 1993
 23208 00010DEE [C907000000000000] 
 23209 00010DF6 50                      	push rax
 23210 00010DF7 6A01                    	push 1	; arg count
 23211 00010DF9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23212 00010DFE E852680000              	call malloc
 23213 00010E03 50                      	push rax
 23214 00010E04 BF00000000              	mov rdi, 8 * 0	; new rib
 23215 00010E09 E847680000              	call malloc
 23216 00010E0E 50                      	push rax
 23217 00010E0F BF08000000              	mov rdi, 8 * 1	; extended env
 23218 00010E14 E83C680000              	call malloc
 23219 00010E19 488B7D10                	mov rdi, ENV
 23220 00010E1D BE00000000              	mov rsi, 0
 23221 00010E22 BA01000000              	mov rdx, 1
 23222                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 23223 00010E27 4883FE00                	cmp rsi, 0
 23224 00010E2B 7410                    	je .L_lambda_simple_env_end_008e
 23225 00010E2D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23226 00010E31 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23227 00010E35 48FFC6                  	inc rsi
 23228 00010E38 48FFC2                  	inc rdx
 23229 00010E3B EBEA                    	jmp .L_lambda_simple_env_loop_008e
 23230                                  .L_lambda_simple_env_end_008e:
 23231 00010E3D 5B                      	pop rbx
 23232 00010E3E BE00000000              	mov rsi, 0
 23233                                  .L_lambda_simple_params_loop_008e:	; copy params
 23234 00010E43 4883FE00                	cmp rsi, 0
 23235 00010E47 740E                    	je .L_lambda_simple_params_end_008e
 23236 00010E49 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23237 00010E4E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23238 00010E52 48FFC6                  	inc rsi
 23239 00010E55 EBEC                    	jmp .L_lambda_simple_params_loop_008e
 23240                                  .L_lambda_simple_params_end_008e:
 23241 00010E57 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23242 00010E5A 4889C3                  	mov rbx, rax
 23243 00010E5D 58                      	pop rax
 23244 00010E5E C60004                  	mov byte [rax], T_closure
 23245 00010E61 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23246 00010E65 48C74009[720E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 23247 00010E6D E936030000              	jmp .L_lambda_simple_end_008e
 23248                                  .L_lambda_simple_code_008e:	; lambda-simple body
 23249 00010E72 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23250 00010E78 740B                    	je .L_lambda_simple_arity_check_ok_008e
 23251 00010E7A FF742410                	push qword [rsp + 8 * 2]
 23252 00010E7E 6A01                    	push 1
 23253 00010E80 E989670000              	jmp L_error_incorrect_arity_simple
 23254                                  .L_lambda_simple_arity_check_ok_008e:
 23255 00010E85 C8000000                	enter 0, 0
 23256 00010E89 BF08000000              	mov rdi, 8*1
 23257 00010E8E E8C2670000              	call malloc
 23258 00010E93 488B5D20                	mov rbx, PARAM(0)
 23259 00010E97 488918                  	mov qword [rax], rbx
 23260 00010E9A 48894520                	mov PARAM(0), rax
 23261 00010E9E 48B8-                   	mov rax, sob_void
 23261 00010EA0 [0000000000000000] 
 23262                                  
 23263 00010EA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23264 00010EAD E8A3670000              	call malloc
 23265 00010EB2 50                      	push rax
 23266 00010EB3 BF08000000              	mov rdi, 8 * 1	; new rib
 23267 00010EB8 E898670000              	call malloc
 23268 00010EBD 50                      	push rax
 23269 00010EBE BF10000000              	mov rdi, 8 * 2	; extended env
 23270 00010EC3 E88D670000              	call malloc
 23271 00010EC8 488B7D10                	mov rdi, ENV
 23272 00010ECC BE00000000              	mov rsi, 0
 23273 00010ED1 BA01000000              	mov rdx, 1
 23274                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 23275 00010ED6 4883FE01                	cmp rsi, 1
 23276 00010EDA 7410                    	je .L_lambda_simple_env_end_008f
 23277 00010EDC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23278 00010EE0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23279 00010EE4 48FFC6                  	inc rsi
 23280 00010EE7 48FFC2                  	inc rdx
 23281 00010EEA EBEA                    	jmp .L_lambda_simple_env_loop_008f
 23282                                  .L_lambda_simple_env_end_008f:
 23283 00010EEC 5B                      	pop rbx
 23284 00010EED BE00000000              	mov rsi, 0
 23285                                  .L_lambda_simple_params_loop_008f:	; copy params
 23286 00010EF2 4883FE01                	cmp rsi, 1
 23287 00010EF6 740E                    	je .L_lambda_simple_params_end_008f
 23288 00010EF8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23289 00010EFD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23290 00010F01 48FFC6                  	inc rsi
 23291 00010F04 EBEC                    	jmp .L_lambda_simple_params_loop_008f
 23292                                  .L_lambda_simple_params_end_008f:
 23293 00010F06 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23294 00010F09 4889C3                  	mov rbx, rax
 23295 00010F0C 58                      	pop rax
 23296 00010F0D C60004                  	mov byte [rax], T_closure
 23297 00010F10 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23298 00010F14 48C74009[210F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 23299 00010F1C E949010000              	jmp .L_lambda_simple_end_008f
 23300                                  .L_lambda_simple_code_008f:	; lambda-simple body
 23301 00010F21 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23302 00010F27 740B                    	je .L_lambda_simple_arity_check_ok_008f
 23303 00010F29 FF742410                	push qword [rsp + 8 * 2]
 23304 00010F2D 6A03                    	push 3
 23305 00010F2F E9DA660000              	jmp L_error_incorrect_arity_simple
 23306                                  .L_lambda_simple_arity_check_ok_008f:
 23307 00010F34 C8000000                	enter 0, 0
 23308                                  	; preparing a non-tail-call
 23309 00010F38 488B4530                	mov rax, PARAM(2)	; param n
 23310 00010F3C 50                      	push rax
 23311 00010F3D 488B4528                	mov rax, PARAM(1)	; param i
 23312 00010F41 50                      	push rax
 23313 00010F42 6A02                    	push 2	; arg count
 23314 00010F44 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23315 00010F4C 803805                  	cmp byte [rax], T_undefined
 23316 00010F4F 0F84D3650000            	je L_error_fvar_undefined
 23317 00010F55 803804                  	cmp byte [rax], T_closure
 23318 00010F58 0F854E660000            	jne L_error_non_closure
 23319 00010F5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23320 00010F61 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23321 00010F64 483D[02000000]          	cmp rax, sob_boolean_false
 23322 00010F6A 0F84EC000000            	je .L_if_else_006a
 23323                                  	; preparing a tail-call
 23324                                  	; preparing a non-tail-call
 23325 00010F70 488B4530                	mov rax, PARAM(2)	; param n
 23326 00010F74 50                      	push rax
 23327                                  	; preparing a non-tail-call
 23328 00010F75 48B8-                   	mov rax, L_constants + 2270
 23328 00010F77 [DE08000000000000] 
 23329 00010F7F 50                      	push rax
 23330 00010F80 488B4528                	mov rax, PARAM(1)	; param i
 23331 00010F84 50                      	push rax
 23332 00010F85 6A02                    	push 2	; arg count
 23333 00010F87 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23334 00010F8F 803805                  	cmp byte [rax], T_undefined
 23335 00010F92 0F8490650000            	je L_error_fvar_undefined
 23336 00010F98 803804                  	cmp byte [rax], T_closure
 23337 00010F9B 0F850B660000            	jne L_error_non_closure
 23338 00010FA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23339 00010FA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23340 00010FA7 50                      	push rax
 23341 00010FA8 488B4520                	mov rax, PARAM(0)	; param v
 23342 00010FAC 50                      	push rax
 23343 00010FAD 6A03                    	push 3	; arg count
 23344 00010FAF 488B4510                	mov rax, ENV
 23345 00010FB3 488B00                  	mov rax, qword [rax + 8 * 0]
 23346 00010FB6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23347 00010FB9 488B00                  	mov rax, qword [rax]
 23348 00010FBC 803804                  	cmp byte [rax], T_closure
 23349 00010FBF 0F85E7650000            	jne L_error_non_closure
 23350 00010FC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23351 00010FC8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23352 00010FCB 50                      	push rax
 23353                                  	; preparing a non-tail-call
 23354 00010FCC 488B4528                	mov rax, PARAM(1)	; param i
 23355 00010FD0 50                      	push rax
 23356 00010FD1 488B4520                	mov rax, PARAM(0)	; param v
 23357 00010FD5 50                      	push rax
 23358 00010FD6 6A02                    	push 2	; arg count
 23359 00010FD8 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 23360 00010FE0 803805                  	cmp byte [rax], T_undefined
 23361 00010FE3 0F843F650000            	je L_error_fvar_undefined
 23362 00010FE9 803804                  	cmp byte [rax], T_closure
 23363 00010FEC 0F85BA650000            	jne L_error_non_closure
 23364 00010FF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23365 00010FF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23366 00010FF8 50                      	push rax
 23367 00010FF9 6A02                    	push 2	; arg count
 23368 00010FFB 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 23369 00011003 803805                  	cmp byte [rax], T_undefined
 23370 00011006 0F841C650000            	je L_error_fvar_undefined
 23371 0001100C 803804                  	cmp byte [rax], T_closure
 23372 0001100F 0F8597650000            	jne L_error_non_closure
 23373 00011015 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23374 00011018 FF7508                  	push qword [rbp + 8 * 1]
 23375                                   ; old ret addr
 23376 0001101B FF7500                  	push qword [rbp]
 23377                                   ; restore the old rbp
 23378 0001101E BB02000000              	mov rbx, 2
 23379 00011023 4883C303                	add rbx, 3
 23380 00011027 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23381 0001102B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23382 00011030 4C8D4DF8                	lea r9, [rbp - 8]
 23383 00011034 B906000000              	mov rcx, 6
 23384                                  .L_tc_recycle_frame_loop_00c3:
 23385 00011039 4883F900                	cmp rcx, 0
 23386 0001103D 7413                    	je .L_tc_recycle_frame_done_00c3
 23387 0001103F 4D8B11                  	mov r10, qword [r9]
 23388 00011042 4D8910                  	mov qword [r8], r10
 23389 00011045 4983E808                	sub r8, 8
 23390 00011049 4983E908                	sub r9, 8
 23391 0001104D 48FFC9                  	dec rcx
 23392 00011050 EBE7                    	jmp .L_tc_recycle_frame_loop_00c3
 23393                                  .L_tc_recycle_frame_done_00c3:
 23394 00011052 498D6008                	lea rsp, [r8 + 8]
 23395 00011056 5D                      	pop rbp ; restore the old rbp
 23396 00011057 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23397 0001105A EB0A                    	jmp .L_if_end_006a
 23398                                  .L_if_else_006a:
 23399 0001105C 48B8-                   	mov rax, L_constants + 1
 23399 0001105E [0100000000000000] 
 23400                                  .L_if_end_006a:
 23401 00011066 C9                      	leave
 23402 00011067 C22800                  	ret AND_KILL_FRAME(3)
 23403                                  .L_lambda_simple_end_008f:	; new closure is in rax
 23404 0001106A 50                      	push rax
 23405 0001106B 488B4520                	mov rax, PARAM(0)	; param run
 23406 0001106F 8F00                    	pop qword [rax]
 23407 00011071 48B8-                   	mov rax, sob_void
 23407 00011073 [0000000000000000] 
 23408                                  
 23409 0001107B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23410 00011080 E8D0650000              	call malloc
 23411 00011085 50                      	push rax
 23412 00011086 BF08000000              	mov rdi, 8 * 1	; new rib
 23413 0001108B E8C5650000              	call malloc
 23414 00011090 50                      	push rax
 23415 00011091 BF10000000              	mov rdi, 8 * 2	; extended env
 23416 00011096 E8BA650000              	call malloc
 23417 0001109B 488B7D10                	mov rdi, ENV
 23418 0001109F BE00000000              	mov rsi, 0
 23419 000110A4 BA01000000              	mov rdx, 1
 23420                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 23421 000110A9 4883FE01                	cmp rsi, 1
 23422 000110AD 7410                    	je .L_lambda_simple_env_end_0090
 23423 000110AF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23424 000110B3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23425 000110B7 48FFC6                  	inc rsi
 23426 000110BA 48FFC2                  	inc rdx
 23427 000110BD EBEA                    	jmp .L_lambda_simple_env_loop_0090
 23428                                  .L_lambda_simple_env_end_0090:
 23429 000110BF 5B                      	pop rbx
 23430 000110C0 BE00000000              	mov rsi, 0
 23431                                  .L_lambda_simple_params_loop_0090:	; copy params
 23432 000110C5 4883FE01                	cmp rsi, 1
 23433 000110C9 740E                    	je .L_lambda_simple_params_end_0090
 23434 000110CB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23435 000110D0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23436 000110D4 48FFC6                  	inc rsi
 23437 000110D7 EBEC                    	jmp .L_lambda_simple_params_loop_0090
 23438                                  .L_lambda_simple_params_end_0090:
 23439 000110D9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23440 000110DC 4889C3                  	mov rbx, rax
 23441 000110DF 58                      	pop rax
 23442 000110E0 C60004                  	mov byte [rax], T_closure
 23443 000110E3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23444 000110E7 48C74009[F4100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 23445 000110EF E9B0000000              	jmp .L_lambda_simple_end_0090
 23446                                  .L_lambda_simple_code_0090:	; lambda-simple body
 23447 000110F4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23448 000110FA 740B                    	je .L_lambda_simple_arity_check_ok_0090
 23449 000110FC FF742410                	push qword [rsp + 8 * 2]
 23450 00011100 6A01                    	push 1
 23451 00011102 E907650000              	jmp L_error_incorrect_arity_simple
 23452                                  .L_lambda_simple_arity_check_ok_0090:
 23453 00011107 C8000000                	enter 0, 0
 23454                                  	; preparing a tail-call
 23455                                  	; preparing a non-tail-call
 23456 0001110B 488B4520                	mov rax, PARAM(0)	; param v
 23457 0001110F 50                      	push rax
 23458 00011110 6A01                    	push 1	; arg count
 23459 00011112 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23460 0001111A 803805                  	cmp byte [rax], T_undefined
 23461 0001111D 0F8405640000            	je L_error_fvar_undefined
 23462 00011123 803804                  	cmp byte [rax], T_closure
 23463 00011126 0F8580640000            	jne L_error_non_closure
 23464 0001112C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23465 0001112F FF5009                  	call SOB_CLOSURE_CODE(rax)
 23466 00011132 50                      	push rax
 23467 00011133 48B8-                   	mov rax, L_constants + 2135
 23467 00011135 [5708000000000000] 
 23468 0001113D 50                      	push rax
 23469 0001113E 488B4520                	mov rax, PARAM(0)	; param v
 23470 00011142 50                      	push rax
 23471 00011143 6A03                    	push 3	; arg count
 23472 00011145 488B4510                	mov rax, ENV
 23473 00011149 488B00                  	mov rax, qword [rax + 8 * 0]
 23474 0001114C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23475 0001114F 488B00                  	mov rax, qword [rax]
 23476 00011152 803804                  	cmp byte [rax], T_closure
 23477 00011155 0F8551640000            	jne L_error_non_closure
 23478 0001115B FF7001                  	push SOB_CLOSURE_ENV(rax)
 23479 0001115E FF7508                  	push qword [rbp + 8 * 1]
 23480                                   ; old ret addr
 23481 00011161 FF7500                  	push qword [rbp]
 23482                                   ; restore the old rbp
 23483 00011164 BB03000000              	mov rbx, 3
 23484 00011169 4883C303                	add rbx, 3
 23485 0001116D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23486 00011171 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23487 00011176 4C8D4DF8                	lea r9, [rbp - 8]
 23488 0001117A B907000000              	mov rcx, 7
 23489                                  .L_tc_recycle_frame_loop_00c4:
 23490 0001117F 4883F900                	cmp rcx, 0
 23491 00011183 7413                    	je .L_tc_recycle_frame_done_00c4
 23492 00011185 4D8B11                  	mov r10, qword [r9]
 23493 00011188 4D8910                  	mov qword [r8], r10
 23494 0001118B 4983E808                	sub r8, 8
 23495 0001118F 4983E908                	sub r9, 8
 23496 00011193 48FFC9                  	dec rcx
 23497 00011196 EBE7                    	jmp .L_tc_recycle_frame_loop_00c4
 23498                                  .L_tc_recycle_frame_done_00c4:
 23499 00011198 498D6008                	lea rsp, [r8 + 8]
 23500 0001119C 5D                      	pop rbp ; restore the old rbp
 23501 0001119D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23502 000111A0 C9                      	leave
 23503 000111A1 C21800                  	ret AND_KILL_FRAME(1)
 23504                                  .L_lambda_simple_end_0090:	; new closure is in rax
 23505 000111A4 C9                      	leave
 23506 000111A5 C21800                  	ret AND_KILL_FRAME(1)
 23507                                  .L_lambda_simple_end_008e:	; new closure is in rax
 23508 000111A8 803804                  	cmp byte [rax], T_closure
 23509 000111AB 0F85FB630000            	jne L_error_non_closure
 23510 000111B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23511 000111B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23512 000111B7 48890425[22170000]      	mov qword [free_var_141], rax
 23513 000111BF 48B8-                   	mov rax, sob_void
 23513 000111C1 [0000000000000000] 
 23514                                  
 23515 000111C9 4889C7                  	mov rdi, rax
 23516 000111CC E8D9660000              	call print_sexpr_if_not_void
 23517 000111D1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23518 000111D6 E87A640000              	call malloc
 23519 000111DB 50                      	push rax
 23520 000111DC BF00000000              	mov rdi, 8 * 0	; new rib
 23521 000111E1 E86F640000              	call malloc
 23522 000111E6 50                      	push rax
 23523 000111E7 BF08000000              	mov rdi, 8 * 1	; extended env
 23524 000111EC E864640000              	call malloc
 23525 000111F1 488B7D10                	mov rdi, ENV
 23526 000111F5 BE00000000              	mov rsi, 0
 23527 000111FA BA01000000              	mov rdx, 1
 23528                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 23529 000111FF 4883FE00                	cmp rsi, 0
 23530 00011203 7410                    	je .L_lambda_simple_env_end_0091
 23531 00011205 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23532 00011209 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23533 0001120D 48FFC6                  	inc rsi
 23534 00011210 48FFC2                  	inc rdx
 23535 00011213 EBEA                    	jmp .L_lambda_simple_env_loop_0091
 23536                                  .L_lambda_simple_env_end_0091:
 23537 00011215 5B                      	pop rbx
 23538 00011216 BE00000000              	mov rsi, 0
 23539                                  .L_lambda_simple_params_loop_0091:	; copy params
 23540 0001121B 4883FE00                	cmp rsi, 0
 23541 0001121F 740E                    	je .L_lambda_simple_params_end_0091
 23542 00011221 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23543 00011226 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23544 0001122A 48FFC6                  	inc rsi
 23545 0001122D EBEC                    	jmp .L_lambda_simple_params_loop_0091
 23546                                  .L_lambda_simple_params_end_0091:
 23547 0001122F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23548 00011232 4889C3                  	mov rbx, rax
 23549 00011235 58                      	pop rax
 23550 00011236 C60004                  	mov byte [rax], T_closure
 23551 00011239 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23552 0001123D 48C74009[4A120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 23553 00011245 E9A4000000              	jmp .L_lambda_simple_end_0091
 23554                                  .L_lambda_simple_code_0091:	; lambda-simple body
 23555 0001124A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23556 00011250 740B                    	je .L_lambda_simple_arity_check_ok_0091
 23557 00011252 FF742410                	push qword [rsp + 8 * 2]
 23558 00011256 6A01                    	push 1
 23559 00011258 E9B1630000              	jmp L_error_incorrect_arity_simple
 23560                                  .L_lambda_simple_arity_check_ok_0091:
 23561 0001125D C8000000                	enter 0, 0
 23562                                  	; preparing a tail-call
 23563 00011261 488B4520                	mov rax, PARAM(0)	; param n
 23564 00011265 50                      	push rax
 23565                                  	; preparing a non-tail-call
 23566 00011266 6A00                    	push 0	; arg count
 23567 00011268 488B0425[00170000]      	mov rax, qword [free_var_139]	; free var trng
 23568 00011270 803805                  	cmp byte [rax], T_undefined
 23569 00011273 0F84AF620000            	je L_error_fvar_undefined
 23570 00011279 803804                  	cmp byte [rax], T_closure
 23571 0001127C 0F852A630000            	jne L_error_non_closure
 23572 00011282 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23573 00011285 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23574 00011288 50                      	push rax
 23575 00011289 6A02                    	push 2	; arg count
 23576 0001128B 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 23577 00011293 803805                  	cmp byte [rax], T_undefined
 23578 00011296 0F848C620000            	je L_error_fvar_undefined
 23579 0001129C 803804                  	cmp byte [rax], T_closure
 23580 0001129F 0F8507630000            	jne L_error_non_closure
 23581 000112A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23582 000112A8 FF7508                  	push qword [rbp + 8 * 1]
 23583                                   ; old ret addr
 23584 000112AB FF7500                  	push qword [rbp]
 23585                                   ; restore the old rbp
 23586 000112AE BB02000000              	mov rbx, 2
 23587 000112B3 4883C303                	add rbx, 3
 23588 000112B7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23589 000112BB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23590 000112C0 4C8D4DF8                	lea r9, [rbp - 8]
 23591 000112C4 B906000000              	mov rcx, 6
 23592                                  .L_tc_recycle_frame_loop_00c5:
 23593 000112C9 4883F900                	cmp rcx, 0
 23594 000112CD 7413                    	je .L_tc_recycle_frame_done_00c5
 23595 000112CF 4D8B11                  	mov r10, qword [r9]
 23596 000112D2 4D8910                  	mov qword [r8], r10
 23597 000112D5 4983E808                	sub r8, 8
 23598 000112D9 4983E908                	sub r9, 8
 23599 000112DD 48FFC9                  	dec rcx
 23600 000112E0 EBE7                    	jmp .L_tc_recycle_frame_loop_00c5
 23601                                  .L_tc_recycle_frame_done_00c5:
 23602 000112E2 498D6008                	lea rsp, [r8 + 8]
 23603 000112E6 5D                      	pop rbp ; restore the old rbp
 23604 000112E7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23605 000112EA C9                      	leave
 23606 000112EB C21800                  	ret AND_KILL_FRAME(1)
 23607                                  .L_lambda_simple_end_0091:	; new closure is in rax
 23608 000112EE 48890425[46150000]      	mov qword [free_var_113], rax
 23609 000112F6 48B8-                   	mov rax, sob_void
 23609 000112F8 [0000000000000000] 
 23610                                  
 23611 00011300 4889C7                  	mov rdi, rax
 23612 00011303 E8A2650000              	call print_sexpr_if_not_void
 23613 00011308 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23614 0001130D E843630000              	call malloc
 23615 00011312 50                      	push rax
 23616 00011313 BF00000000              	mov rdi, 8 * 0	; new rib
 23617 00011318 E838630000              	call malloc
 23618 0001131D 50                      	push rax
 23619 0001131E BF08000000              	mov rdi, 8 * 1	; extended env
 23620 00011323 E82D630000              	call malloc
 23621 00011328 488B7D10                	mov rdi, ENV
 23622 0001132C BE00000000              	mov rsi, 0
 23623 00011331 BA01000000              	mov rdx, 1
 23624                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 23625 00011336 4883FE00                	cmp rsi, 0
 23626 0001133A 7410                    	je .L_lambda_simple_env_end_0092
 23627 0001133C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23628 00011340 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23629 00011344 48FFC6                  	inc rsi
 23630 00011347 48FFC2                  	inc rdx
 23631 0001134A EBEA                    	jmp .L_lambda_simple_env_loop_0092
 23632                                  .L_lambda_simple_env_end_0092:
 23633 0001134C 5B                      	pop rbx
 23634 0001134D BE00000000              	mov rsi, 0
 23635                                  .L_lambda_simple_params_loop_0092:	; copy params
 23636 00011352 4883FE00                	cmp rsi, 0
 23637 00011356 740E                    	je .L_lambda_simple_params_end_0092
 23638 00011358 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23639 0001135D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23640 00011361 48FFC6                  	inc rsi
 23641 00011364 EBEC                    	jmp .L_lambda_simple_params_loop_0092
 23642                                  .L_lambda_simple_params_end_0092:
 23643 00011366 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23644 00011369 4889C3                  	mov rbx, rax
 23645 0001136C 58                      	pop rax
 23646 0001136D C60004                  	mov byte [rax], T_closure
 23647 00011370 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23648 00011374 48C74009[81130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 23649 0001137C E98C000000              	jmp .L_lambda_simple_end_0092
 23650                                  .L_lambda_simple_code_0092:	; lambda-simple body
 23651 00011381 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23652 00011387 740B                    	je .L_lambda_simple_arity_check_ok_0092
 23653 00011389 FF742410                	push qword [rsp + 8 * 2]
 23654 0001138D 6A01                    	push 1
 23655 0001138F E97A620000              	jmp L_error_incorrect_arity_simple
 23656                                  .L_lambda_simple_arity_check_ok_0092:
 23657 00011394 C8000000                	enter 0, 0
 23658                                  	; preparing a tail-call
 23659 00011398 488B4520                	mov rax, PARAM(0)	; param x
 23660 0001139C 50                      	push rax
 23661 0001139D 48B8-                   	mov rax, L_constants + 2135
 23661 0001139F [5708000000000000] 
 23662 000113A7 50                      	push rax
 23663 000113A8 6A02                    	push 2	; arg count
 23664 000113AA 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23665 000113B2 803805                  	cmp byte [rax], T_undefined
 23666 000113B5 0F846D610000            	je L_error_fvar_undefined
 23667 000113BB 803804                  	cmp byte [rax], T_closure
 23668 000113BE 0F85E8610000            	jne L_error_non_closure
 23669 000113C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23670 000113C7 FF7508                  	push qword [rbp + 8 * 1]
 23671                                   ; old ret addr
 23672 000113CA FF7500                  	push qword [rbp]
 23673                                   ; restore the old rbp
 23674 000113CD BB02000000              	mov rbx, 2
 23675 000113D2 4883C303                	add rbx, 3
 23676 000113D6 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23677 000113DA 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23678 000113DF 4C8D4DF8                	lea r9, [rbp - 8]
 23679 000113E3 B906000000              	mov rcx, 6
 23680                                  .L_tc_recycle_frame_loop_00c6:
 23681 000113E8 4883F900                	cmp rcx, 0
 23682 000113EC 7413                    	je .L_tc_recycle_frame_done_00c6
 23683 000113EE 4D8B11                  	mov r10, qword [r9]
 23684 000113F1 4D8910                  	mov qword [r8], r10
 23685 000113F4 4983E808                	sub r8, 8
 23686 000113F8 4983E908                	sub r9, 8
 23687 000113FC 48FFC9                  	dec rcx
 23688 000113FF EBE7                    	jmp .L_tc_recycle_frame_loop_00c6
 23689                                  .L_tc_recycle_frame_done_00c6:
 23690 00011401 498D6008                	lea rsp, [r8 + 8]
 23691 00011405 5D                      	pop rbp ; restore the old rbp
 23692 00011406 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23693 00011409 C9                      	leave
 23694 0001140A C21800                  	ret AND_KILL_FRAME(1)
 23695                                  .L_lambda_simple_end_0092:	; new closure is in rax
 23696 0001140D 48890425[35150000]      	mov qword [free_var_112], rax
 23697 00011415 48B8-                   	mov rax, sob_void
 23697 00011417 [0000000000000000] 
 23698                                  
 23699 0001141F 4889C7                  	mov rdi, rax
 23700 00011422 E883640000              	call print_sexpr_if_not_void
 23701 00011427 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23702 0001142C E824620000              	call malloc
 23703 00011431 50                      	push rax
 23704 00011432 BF00000000              	mov rdi, 8 * 0	; new rib
 23705 00011437 E819620000              	call malloc
 23706 0001143C 50                      	push rax
 23707 0001143D BF08000000              	mov rdi, 8 * 1	; extended env
 23708 00011442 E80E620000              	call malloc
 23709 00011447 488B7D10                	mov rdi, ENV
 23710 0001144B BE00000000              	mov rsi, 0
 23711 00011450 BA01000000              	mov rdx, 1
 23712                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 23713 00011455 4883FE00                	cmp rsi, 0
 23714 00011459 7410                    	je .L_lambda_simple_env_end_0093
 23715 0001145B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23716 0001145F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23717 00011463 48FFC6                  	inc rsi
 23718 00011466 48FFC2                  	inc rdx
 23719 00011469 EBEA                    	jmp .L_lambda_simple_env_loop_0093
 23720                                  .L_lambda_simple_env_end_0093:
 23721 0001146B 5B                      	pop rbx
 23722 0001146C BE00000000              	mov rsi, 0
 23723                                  .L_lambda_simple_params_loop_0093:	; copy params
 23724 00011471 4883FE00                	cmp rsi, 0
 23725 00011475 740E                    	je .L_lambda_simple_params_end_0093
 23726 00011477 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23727 0001147C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23728 00011480 48FFC6                  	inc rsi
 23729 00011483 EBEC                    	jmp .L_lambda_simple_params_loop_0093
 23730                                  .L_lambda_simple_params_end_0093:
 23731 00011485 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23732 00011488 4889C3                  	mov rbx, rax
 23733 0001148B 58                      	pop rax
 23734 0001148C C60004                  	mov byte [rax], T_closure
 23735 0001148F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23736 00011493 48C74009[A0140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 23737 0001149B E98C000000              	jmp .L_lambda_simple_end_0093
 23738                                  .L_lambda_simple_code_0093:	; lambda-simple body
 23739 000114A0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23740 000114A6 740B                    	je .L_lambda_simple_arity_check_ok_0093
 23741 000114A8 FF742410                	push qword [rsp + 8 * 2]
 23742 000114AC 6A01                    	push 1
 23743 000114AE E95B610000              	jmp L_error_incorrect_arity_simple
 23744                                  .L_lambda_simple_arity_check_ok_0093:
 23745 000114B3 C8000000                	enter 0, 0
 23746                                  	; preparing a tail-call
 23747 000114B7 48B8-                   	mov rax, L_constants + 2135
 23747 000114B9 [5708000000000000] 
 23748 000114C1 50                      	push rax
 23749 000114C2 488B4520                	mov rax, PARAM(0)	; param x
 23750 000114C6 50                      	push rax
 23751 000114C7 6A02                    	push 2	; arg count
 23752 000114C9 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23753 000114D1 803805                  	cmp byte [rax], T_undefined
 23754 000114D4 0F844E600000            	je L_error_fvar_undefined
 23755 000114DA 803804                  	cmp byte [rax], T_closure
 23756 000114DD 0F85C9600000            	jne L_error_non_closure
 23757 000114E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23758 000114E6 FF7508                  	push qword [rbp + 8 * 1]
 23759                                   ; old ret addr
 23760 000114E9 FF7500                  	push qword [rbp]
 23761                                   ; restore the old rbp
 23762 000114EC BB02000000              	mov rbx, 2
 23763 000114F1 4883C303                	add rbx, 3
 23764 000114F5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23765 000114F9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23766 000114FE 4C8D4DF8                	lea r9, [rbp - 8]
 23767 00011502 B906000000              	mov rcx, 6
 23768                                  .L_tc_recycle_frame_loop_00c7:
 23769 00011507 4883F900                	cmp rcx, 0
 23770 0001150B 7413                    	je .L_tc_recycle_frame_done_00c7
 23771 0001150D 4D8B11                  	mov r10, qword [r9]
 23772 00011510 4D8910                  	mov qword [r8], r10
 23773 00011513 4983E808                	sub r8, 8
 23774 00011517 4983E908                	sub r9, 8
 23775 0001151B 48FFC9                  	dec rcx
 23776 0001151E EBE7                    	jmp .L_tc_recycle_frame_loop_00c7
 23777                                  .L_tc_recycle_frame_done_00c7:
 23778 00011520 498D6008                	lea rsp, [r8 + 8]
 23779 00011524 5D                      	pop rbp ; restore the old rbp
 23780 00011525 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23781 00011528 C9                      	leave
 23782 00011529 C21800                  	ret AND_KILL_FRAME(1)
 23783                                  .L_lambda_simple_end_0093:	; new closure is in rax
 23784 0001152C 48890425[AD140000]      	mov qword [free_var_104], rax
 23785 00011534 48B8-                   	mov rax, sob_void
 23785 00011536 [0000000000000000] 
 23786                                  
 23787 0001153E 4889C7                  	mov rdi, rax
 23788 00011541 E864630000              	call print_sexpr_if_not_void
 23789 00011546 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23790 0001154B E805610000              	call malloc
 23791 00011550 50                      	push rax
 23792 00011551 BF00000000              	mov rdi, 8 * 0	; new rib
 23793 00011556 E8FA600000              	call malloc
 23794 0001155B 50                      	push rax
 23795 0001155C BF08000000              	mov rdi, 8 * 1	; extended env
 23796 00011561 E8EF600000              	call malloc
 23797 00011566 488B7D10                	mov rdi, ENV
 23798 0001156A BE00000000              	mov rsi, 0
 23799 0001156F BA01000000              	mov rdx, 1
 23800                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 23801 00011574 4883FE00                	cmp rsi, 0
 23802 00011578 7410                    	je .L_lambda_simple_env_end_0094
 23803 0001157A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23804 0001157E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23805 00011582 48FFC6                  	inc rsi
 23806 00011585 48FFC2                  	inc rdx
 23807 00011588 EBEA                    	jmp .L_lambda_simple_env_loop_0094
 23808                                  .L_lambda_simple_env_end_0094:
 23809 0001158A 5B                      	pop rbx
 23810 0001158B BE00000000              	mov rsi, 0
 23811                                  .L_lambda_simple_params_loop_0094:	; copy params
 23812 00011590 4883FE00                	cmp rsi, 0
 23813 00011594 740E                    	je .L_lambda_simple_params_end_0094
 23814 00011596 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23815 0001159B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23816 0001159F 48FFC6                  	inc rsi
 23817 000115A2 EBEC                    	jmp .L_lambda_simple_params_loop_0094
 23818                                  .L_lambda_simple_params_end_0094:
 23819 000115A4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23820 000115A7 4889C3                  	mov rbx, rax
 23821 000115AA 58                      	pop rax
 23822 000115AB C60004                  	mov byte [rax], T_closure
 23823 000115AE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23824 000115B2 48C74009[BF150100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 23825 000115BA E9AF000000              	jmp .L_lambda_simple_end_0094
 23826                                  .L_lambda_simple_code_0094:	; lambda-simple body
 23827 000115BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23828 000115C5 740B                    	je .L_lambda_simple_arity_check_ok_0094
 23829 000115C7 FF742410                	push qword [rsp + 8 * 2]
 23830 000115CB 6A01                    	push 1
 23831 000115CD E93C600000              	jmp L_error_incorrect_arity_simple
 23832                                  .L_lambda_simple_arity_check_ok_0094:
 23833 000115D2 C8000000                	enter 0, 0
 23834                                  	; preparing a tail-call
 23835                                  	; preparing a non-tail-call
 23836 000115D6 48B8-                   	mov rax, L_constants + 3190
 23836 000115D8 [760C000000000000] 
 23837 000115E0 50                      	push rax
 23838 000115E1 488B4520                	mov rax, PARAM(0)	; param n
 23839 000115E5 50                      	push rax
 23840 000115E6 6A02                    	push 2	; arg count
 23841 000115E8 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 23842 000115F0 803805                  	cmp byte [rax], T_undefined
 23843 000115F3 0F842F5F0000            	je L_error_fvar_undefined
 23844 000115F9 803804                  	cmp byte [rax], T_closure
 23845 000115FC 0F85AA5F0000            	jne L_error_non_closure
 23846 00011602 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23847 00011605 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23848 00011608 50                      	push rax
 23849 00011609 6A01                    	push 1	; arg count
 23850 0001160B 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 23851 00011613 803805                  	cmp byte [rax], T_undefined
 23852 00011616 0F840C5F0000            	je L_error_fvar_undefined
 23853 0001161C 803804                  	cmp byte [rax], T_closure
 23854 0001161F 0F85875F0000            	jne L_error_non_closure
 23855 00011625 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23856 00011628 FF7508                  	push qword [rbp + 8 * 1]
 23857                                   ; old ret addr
 23858 0001162B FF7500                  	push qword [rbp]
 23859                                   ; restore the old rbp
 23860 0001162E BB01000000              	mov rbx, 1
 23861 00011633 4883C303                	add rbx, 3
 23862 00011637 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23863 0001163B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23864 00011640 4C8D4DF8                	lea r9, [rbp - 8]
 23865 00011644 B905000000              	mov rcx, 5
 23866                                  .L_tc_recycle_frame_loop_00c8:
 23867 00011649 4883F900                	cmp rcx, 0
 23868 0001164D 7413                    	je .L_tc_recycle_frame_done_00c8
 23869 0001164F 4D8B11                  	mov r10, qword [r9]
 23870 00011652 4D8910                  	mov qword [r8], r10
 23871 00011655 4983E808                	sub r8, 8
 23872 00011659 4983E908                	sub r9, 8
 23873 0001165D 48FFC9                  	dec rcx
 23874 00011660 EBE7                    	jmp .L_tc_recycle_frame_loop_00c8
 23875                                  .L_tc_recycle_frame_done_00c8:
 23876 00011662 498D6008                	lea rsp, [r8 + 8]
 23877 00011666 5D                      	pop rbp ; restore the old rbp
 23878 00011667 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23879 0001166A C9                      	leave
 23880 0001166B C21800                  	ret AND_KILL_FRAME(1)
 23881                                  .L_lambda_simple_end_0094:	; new closure is in rax
 23882 0001166E 48890425[48130000]      	mov qword [free_var_83], rax
 23883 00011676 48B8-                   	mov rax, sob_void
 23883 00011678 [0000000000000000] 
 23884                                  
 23885 00011680 4889C7                  	mov rdi, rax
 23886 00011683 E822620000              	call print_sexpr_if_not_void
 23887 00011688 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23888 0001168D E8C35F0000              	call malloc
 23889 00011692 50                      	push rax
 23890 00011693 BF00000000              	mov rdi, 8 * 0	; new rib
 23891 00011698 E8B85F0000              	call malloc
 23892 0001169D 50                      	push rax
 23893 0001169E BF08000000              	mov rdi, 8 * 1	; extended env
 23894 000116A3 E8AD5F0000              	call malloc
 23895 000116A8 488B7D10                	mov rdi, ENV
 23896 000116AC BE00000000              	mov rsi, 0
 23897 000116B1 BA01000000              	mov rdx, 1
 23898                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 23899 000116B6 4883FE00                	cmp rsi, 0
 23900 000116BA 7410                    	je .L_lambda_simple_env_end_0095
 23901 000116BC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23902 000116C0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23903 000116C4 48FFC6                  	inc rsi
 23904 000116C7 48FFC2                  	inc rdx
 23905 000116CA EBEA                    	jmp .L_lambda_simple_env_loop_0095
 23906                                  .L_lambda_simple_env_end_0095:
 23907 000116CC 5B                      	pop rbx
 23908 000116CD BE00000000              	mov rsi, 0
 23909                                  .L_lambda_simple_params_loop_0095:	; copy params
 23910 000116D2 4883FE00                	cmp rsi, 0
 23911 000116D6 740E                    	je .L_lambda_simple_params_end_0095
 23912 000116D8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23913 000116DD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23914 000116E1 48FFC6                  	inc rsi
 23915 000116E4 EBEC                    	jmp .L_lambda_simple_params_loop_0095
 23916                                  .L_lambda_simple_params_end_0095:
 23917 000116E6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23918 000116E9 4889C3                  	mov rbx, rax
 23919 000116EC 58                      	pop rax
 23920 000116ED C60004                  	mov byte [rax], T_closure
 23921 000116F0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23922 000116F4 48C74009[01170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 23923 000116FC E9A4000000              	jmp .L_lambda_simple_end_0095
 23924                                  .L_lambda_simple_code_0095:	; lambda-simple body
 23925 00011701 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23926 00011707 740B                    	je .L_lambda_simple_arity_check_ok_0095
 23927 00011709 FF742410                	push qword [rsp + 8 * 2]
 23928 0001170D 6A01                    	push 1
 23929 0001170F E9FA5E0000              	jmp L_error_incorrect_arity_simple
 23930                                  .L_lambda_simple_arity_check_ok_0095:
 23931 00011714 C8000000                	enter 0, 0
 23932                                  	; preparing a tail-call
 23933                                  	; preparing a non-tail-call
 23934 00011718 488B4520                	mov rax, PARAM(0)	; param n
 23935 0001171C 50                      	push rax
 23936 0001171D 6A01                    	push 1	; arg count
 23937 0001171F 488B0425[48130000]      	mov rax, qword [free_var_83]	; free var even?
 23938 00011727 803805                  	cmp byte [rax], T_undefined
 23939 0001172A 0F84F85D0000            	je L_error_fvar_undefined
 23940 00011730 803804                  	cmp byte [rax], T_closure
 23941 00011733 0F85735E0000            	jne L_error_non_closure
 23942 00011739 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23943 0001173C FF5009                  	call SOB_CLOSURE_CODE(rax)
 23944 0001173F 50                      	push rax
 23945 00011740 6A01                    	push 1	; arg count
 23946 00011742 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 23947 0001174A 803805                  	cmp byte [rax], T_undefined
 23948 0001174D 0F84D55D0000            	je L_error_fvar_undefined
 23949 00011753 803804                  	cmp byte [rax], T_closure
 23950 00011756 0F85505E0000            	jne L_error_non_closure
 23951 0001175C FF7001                  	push SOB_CLOSURE_ENV(rax)
 23952 0001175F FF7508                  	push qword [rbp + 8 * 1]
 23953                                   ; old ret addr
 23954 00011762 FF7500                  	push qword [rbp]
 23955                                   ; restore the old rbp
 23956 00011765 BB01000000              	mov rbx, 1
 23957 0001176A 4883C303                	add rbx, 3
 23958 0001176E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 23959 00011772 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 23960 00011777 4C8D4DF8                	lea r9, [rbp - 8]
 23961 0001177B B905000000              	mov rcx, 5
 23962                                  .L_tc_recycle_frame_loop_00c9:
 23963 00011780 4883F900                	cmp rcx, 0
 23964 00011784 7413                    	je .L_tc_recycle_frame_done_00c9
 23965 00011786 4D8B11                  	mov r10, qword [r9]
 23966 00011789 4D8910                  	mov qword [r8], r10
 23967 0001178C 4983E808                	sub r8, 8
 23968 00011790 4983E908                	sub r9, 8
 23969 00011794 48FFC9                  	dec rcx
 23970 00011797 EBE7                    	jmp .L_tc_recycle_frame_loop_00c9
 23971                                  .L_tc_recycle_frame_done_00c9:
 23972 00011799 498D6008                	lea rsp, [r8 + 8]
 23973 0001179D 5D                      	pop rbp ; restore the old rbp
 23974 0001179E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23975 000117A1 C9                      	leave
 23976 000117A2 C21800                  	ret AND_KILL_FRAME(1)
 23977                                  .L_lambda_simple_end_0095:	; new closure is in rax
 23978 000117A5 48890425[02150000]      	mov qword [free_var_109], rax
 23979 000117AD 48B8-                   	mov rax, sob_void
 23979 000117AF [0000000000000000] 
 23980                                  
 23981 000117B7 4889C7                  	mov rdi, rax
 23982 000117BA E8EB600000              	call print_sexpr_if_not_void
 23983 000117BF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23984 000117C4 E88C5E0000              	call malloc
 23985 000117C9 50                      	push rax
 23986 000117CA BF00000000              	mov rdi, 8 * 0	; new rib
 23987 000117CF E8815E0000              	call malloc
 23988 000117D4 50                      	push rax
 23989 000117D5 BF08000000              	mov rdi, 8 * 1	; extended env
 23990 000117DA E8765E0000              	call malloc
 23991 000117DF 488B7D10                	mov rdi, ENV
 23992 000117E3 BE00000000              	mov rsi, 0
 23993 000117E8 BA01000000              	mov rdx, 1
 23994                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 23995 000117ED 4883FE00                	cmp rsi, 0
 23996 000117F1 7410                    	je .L_lambda_simple_env_end_0096
 23997 000117F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23998 000117F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23999 000117FB 48FFC6                  	inc rsi
 24000 000117FE 48FFC2                  	inc rdx
 24001 00011801 EBEA                    	jmp .L_lambda_simple_env_loop_0096
 24002                                  .L_lambda_simple_env_end_0096:
 24003 00011803 5B                      	pop rbx
 24004 00011804 BE00000000              	mov rsi, 0
 24005                                  .L_lambda_simple_params_loop_0096:	; copy params
 24006 00011809 4883FE00                	cmp rsi, 0
 24007 0001180D 740E                    	je .L_lambda_simple_params_end_0096
 24008 0001180F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24009 00011814 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24010 00011818 48FFC6                  	inc rsi
 24011 0001181B EBEC                    	jmp .L_lambda_simple_params_loop_0096
 24012                                  .L_lambda_simple_params_end_0096:
 24013 0001181D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24014 00011820 4889C3                  	mov rbx, rax
 24015 00011823 58                      	pop rax
 24016 00011824 C60004                  	mov byte [rax], T_closure
 24017 00011827 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24018 0001182B 48C74009[38180100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 24019 00011833 E9B6000000              	jmp .L_lambda_simple_end_0096
 24020                                  .L_lambda_simple_code_0096:	; lambda-simple body
 24021 00011838 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24022 0001183E 740B                    	je .L_lambda_simple_arity_check_ok_0096
 24023 00011840 FF742410                	push qword [rsp + 8 * 2]
 24024 00011844 6A01                    	push 1
 24025 00011846 E9C35D0000              	jmp L_error_incorrect_arity_simple
 24026                                  .L_lambda_simple_arity_check_ok_0096:
 24027 0001184B C8000000                	enter 0, 0
 24028                                  	; preparing a non-tail-call
 24029 0001184F 488B4520                	mov rax, PARAM(0)	; param x
 24030 00011853 50                      	push rax
 24031 00011854 6A01                    	push 1	; arg count
 24032 00011856 488B0425[AD140000]      	mov rax, qword [free_var_104]	; free var negative?
 24033 0001185E 803805                  	cmp byte [rax], T_undefined
 24034 00011861 0F84C15C0000            	je L_error_fvar_undefined
 24035 00011867 803804                  	cmp byte [rax], T_closure
 24036 0001186A 0F853C5D0000            	jne L_error_non_closure
 24037 00011870 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24038 00011873 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24039 00011876 483D[02000000]          	cmp rax, sob_boolean_false
 24040 0001187C 7468                    	je .L_if_else_006b
 24041                                  	; preparing a tail-call
 24042 0001187E 488B4520                	mov rax, PARAM(0)	; param x
 24043 00011882 50                      	push rax
 24044 00011883 6A01                    	push 1	; arg count
 24045 00011885 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 24046 0001188D 803805                  	cmp byte [rax], T_undefined
 24047 00011890 0F84925C0000            	je L_error_fvar_undefined
 24048 00011896 803804                  	cmp byte [rax], T_closure
 24049 00011899 0F850D5D0000            	jne L_error_non_closure
 24050 0001189F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24051 000118A2 FF7508                  	push qword [rbp + 8 * 1]
 24052                                   ; old ret addr
 24053 000118A5 FF7500                  	push qword [rbp]
 24054                                   ; restore the old rbp
 24055 000118A8 BB01000000              	mov rbx, 1
 24056 000118AD 4883C303                	add rbx, 3
 24057 000118B1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24058 000118B5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24059 000118BA 4C8D4DF8                	lea r9, [rbp - 8]
 24060 000118BE B905000000              	mov rcx, 5
 24061                                  .L_tc_recycle_frame_loop_00ca:
 24062 000118C3 4883F900                	cmp rcx, 0
 24063 000118C7 7413                    	je .L_tc_recycle_frame_done_00ca
 24064 000118C9 4D8B11                  	mov r10, qword [r9]
 24065 000118CC 4D8910                  	mov qword [r8], r10
 24066 000118CF 4983E808                	sub r8, 8
 24067 000118D3 4983E908                	sub r9, 8
 24068 000118D7 48FFC9                  	dec rcx
 24069 000118DA EBE7                    	jmp .L_tc_recycle_frame_loop_00ca
 24070                                  .L_tc_recycle_frame_done_00ca:
 24071 000118DC 498D6008                	lea rsp, [r8 + 8]
 24072 000118E0 5D                      	pop rbp ; restore the old rbp
 24073 000118E1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24074 000118E4 EB04                    	jmp .L_if_end_006b
 24075                                  .L_if_else_006b:
 24076 000118E6 488B4520                	mov rax, PARAM(0)	; param x
 24077                                  .L_if_end_006b:
 24078 000118EA C9                      	leave
 24079 000118EB C21800                  	ret AND_KILL_FRAME(1)
 24080                                  .L_lambda_simple_end_0096:	; new closure is in rax
 24081 000118EE 48890425[C30F0000]      	mov qword [free_var_30], rax
 24082 000118F6 48B8-                   	mov rax, sob_void
 24082 000118F8 [0000000000000000] 
 24083                                  
 24084 00011900 4889C7                  	mov rdi, rax
 24085 00011903 E8A25F0000              	call print_sexpr_if_not_void
 24086 00011908 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24087 0001190D E8435D0000              	call malloc
 24088 00011912 50                      	push rax
 24089 00011913 BF00000000              	mov rdi, 8 * 0	; new rib
 24090 00011918 E8385D0000              	call malloc
 24091 0001191D 50                      	push rax
 24092 0001191E BF08000000              	mov rdi, 8 * 1	; extended env
 24093 00011923 E82D5D0000              	call malloc
 24094 00011928 488B7D10                	mov rdi, ENV
 24095 0001192C BE00000000              	mov rsi, 0
 24096 00011931 BA01000000              	mov rdx, 1
 24097                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 24098 00011936 4883FE00                	cmp rsi, 0
 24099 0001193A 7410                    	je .L_lambda_simple_env_end_0097
 24100 0001193C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24101 00011940 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24102 00011944 48FFC6                  	inc rsi
 24103 00011947 48FFC2                  	inc rdx
 24104 0001194A EBEA                    	jmp .L_lambda_simple_env_loop_0097
 24105                                  .L_lambda_simple_env_end_0097:
 24106 0001194C 5B                      	pop rbx
 24107 0001194D BE00000000              	mov rsi, 0
 24108                                  .L_lambda_simple_params_loop_0097:	; copy params
 24109 00011952 4883FE00                	cmp rsi, 0
 24110 00011956 740E                    	je .L_lambda_simple_params_end_0097
 24111 00011958 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24112 0001195D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24113 00011961 48FFC6                  	inc rsi
 24114 00011964 EBEC                    	jmp .L_lambda_simple_params_loop_0097
 24115                                  .L_lambda_simple_params_end_0097:
 24116 00011966 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24117 00011969 4889C3                  	mov rbx, rax
 24118 0001196C 58                      	pop rax
 24119 0001196D C60004                  	mov byte [rax], T_closure
 24120 00011970 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24121 00011974 48C74009[81190100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 24122 0001197C E9F7060000              	jmp .L_lambda_simple_end_0097
 24123                                  .L_lambda_simple_code_0097:	; lambda-simple body
 24124 00011981 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24125 00011987 740B                    	je .L_lambda_simple_arity_check_ok_0097
 24126 00011989 FF742410                	push qword [rsp + 8 * 2]
 24127 0001198D 6A02                    	push 2
 24128 0001198F E97A5C0000              	jmp L_error_incorrect_arity_simple
 24129                                  .L_lambda_simple_arity_check_ok_0097:
 24130 00011994 C8000000                	enter 0, 0
 24131                                  	; preparing a non-tail-call
 24132 00011998 488B4520                	mov rax, PARAM(0)	; param e1
 24133 0001199C 50                      	push rax
 24134 0001199D 6A01                    	push 1	; arg count
 24135 0001199F 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 24136 000119A7 803805                  	cmp byte [rax], T_undefined
 24137 000119AA 0F84785B0000            	je L_error_fvar_undefined
 24138 000119B0 803804                  	cmp byte [rax], T_closure
 24139 000119B3 0F85F35B0000            	jne L_error_non_closure
 24140 000119B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24141 000119BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24142 000119BF 483D[02000000]          	cmp rax, sob_boolean_false
 24143 000119C5 7429                    	je .L_if_else_006c
 24144                                  	; preparing a non-tail-call
 24145 000119C7 488B4528                	mov rax, PARAM(1)	; param e2
 24146 000119CB 50                      	push rax
 24147 000119CC 6A01                    	push 1	; arg count
 24148 000119CE 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 24149 000119D6 803805                  	cmp byte [rax], T_undefined
 24150 000119D9 0F84495B0000            	je L_error_fvar_undefined
 24151 000119DF 803804                  	cmp byte [rax], T_closure
 24152 000119E2 0F85C45B0000            	jne L_error_non_closure
 24153 000119E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24154 000119EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24155 000119EE EB0A                    	jmp .L_if_end_006c
 24156                                  .L_if_else_006c:
 24157 000119F0 48B8-                   	mov rax, L_constants + 2
 24157 000119F2 [0200000000000000] 
 24158                                  .L_if_end_006c:
 24159 000119FA 483D[02000000]          	cmp rax, sob_boolean_false
 24160 00011A00 0F8440010000            	je .L_if_else_0078
 24161                                  	; preparing a non-tail-call
 24162                                  	; preparing a non-tail-call
 24163 00011A06 488B4528                	mov rax, PARAM(1)	; param e2
 24164 00011A0A 50                      	push rax
 24165 00011A0B 6A01                    	push 1	; arg count
 24166 00011A0D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24167 00011A15 803805                  	cmp byte [rax], T_undefined
 24168 00011A18 0F840A5B0000            	je L_error_fvar_undefined
 24169 00011A1E 803804                  	cmp byte [rax], T_closure
 24170 00011A21 0F85855B0000            	jne L_error_non_closure
 24171 00011A27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24172 00011A2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24173 00011A2D 50                      	push rax
 24174                                  	; preparing a non-tail-call
 24175 00011A2E 488B4520                	mov rax, PARAM(0)	; param e1
 24176 00011A32 50                      	push rax
 24177 00011A33 6A01                    	push 1	; arg count
 24178 00011A35 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24179 00011A3D 803805                  	cmp byte [rax], T_undefined
 24180 00011A40 0F84E25A0000            	je L_error_fvar_undefined
 24181 00011A46 803804                  	cmp byte [rax], T_closure
 24182 00011A49 0F855D5B0000            	jne L_error_non_closure
 24183 00011A4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24184 00011A52 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24185 00011A55 50                      	push rax
 24186 00011A56 6A02                    	push 2	; arg count
 24187 00011A58 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24188 00011A60 803805                  	cmp byte [rax], T_undefined
 24189 00011A63 0F84BF5A0000            	je L_error_fvar_undefined
 24190 00011A69 803804                  	cmp byte [rax], T_closure
 24191 00011A6C 0F853A5B0000            	jne L_error_non_closure
 24192 00011A72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24193 00011A75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24194 00011A78 483D[02000000]          	cmp rax, sob_boolean_false
 24195 00011A7E 0F84B3000000            	je .L_if_else_006d
 24196                                  	; preparing a tail-call
 24197                                  	; preparing a non-tail-call
 24198 00011A84 488B4528                	mov rax, PARAM(1)	; param e2
 24199 00011A88 50                      	push rax
 24200 00011A89 6A01                    	push 1	; arg count
 24201 00011A8B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24202 00011A93 803805                  	cmp byte [rax], T_undefined
 24203 00011A96 0F848C5A0000            	je L_error_fvar_undefined
 24204 00011A9C 803804                  	cmp byte [rax], T_closure
 24205 00011A9F 0F85075B0000            	jne L_error_non_closure
 24206 00011AA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24207 00011AA8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24208 00011AAB 50                      	push rax
 24209                                  	; preparing a non-tail-call
 24210 00011AAC 488B4520                	mov rax, PARAM(0)	; param e1
 24211 00011AB0 50                      	push rax
 24212 00011AB1 6A01                    	push 1	; arg count
 24213 00011AB3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24214 00011ABB 803805                  	cmp byte [rax], T_undefined
 24215 00011ABE 0F84645A0000            	je L_error_fvar_undefined
 24216 00011AC4 803804                  	cmp byte [rax], T_closure
 24217 00011AC7 0F85DF5A0000            	jne L_error_non_closure
 24218 00011ACD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24219 00011AD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24220 00011AD3 50                      	push rax
 24221 00011AD4 6A02                    	push 2	; arg count
 24222 00011AD6 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24223 00011ADE 803805                  	cmp byte [rax], T_undefined
 24224 00011AE1 0F84415A0000            	je L_error_fvar_undefined
 24225 00011AE7 803804                  	cmp byte [rax], T_closure
 24226 00011AEA 0F85BC5A0000            	jne L_error_non_closure
 24227 00011AF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24228 00011AF3 FF7508                  	push qword [rbp + 8 * 1]
 24229                                   ; old ret addr
 24230 00011AF6 FF7500                  	push qword [rbp]
 24231                                   ; restore the old rbp
 24232 00011AF9 BB02000000              	mov rbx, 2
 24233 00011AFE 4883C303                	add rbx, 3
 24234 00011B02 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24235 00011B06 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24236 00011B0B 4C8D4DF8                	lea r9, [rbp - 8]
 24237 00011B0F B906000000              	mov rcx, 6
 24238                                  .L_tc_recycle_frame_loop_00cb:
 24239 00011B14 4883F900                	cmp rcx, 0
 24240 00011B18 7413                    	je .L_tc_recycle_frame_done_00cb
 24241 00011B1A 4D8B11                  	mov r10, qword [r9]
 24242 00011B1D 4D8910                  	mov qword [r8], r10
 24243 00011B20 4983E808                	sub r8, 8
 24244 00011B24 4983E908                	sub r9, 8
 24245 00011B28 48FFC9                  	dec rcx
 24246 00011B2B EBE7                    	jmp .L_tc_recycle_frame_loop_00cb
 24247                                  .L_tc_recycle_frame_done_00cb:
 24248 00011B2D 498D6008                	lea rsp, [r8 + 8]
 24249 00011B31 5D                      	pop rbp ; restore the old rbp
 24250 00011B32 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24251 00011B35 EB0A                    	jmp .L_if_end_006d
 24252                                  .L_if_else_006d:
 24253 00011B37 48B8-                   	mov rax, L_constants + 2
 24253 00011B39 [0200000000000000] 
 24254                                  .L_if_end_006d:
 24255 00011B41 E92E050000              	jmp .L_if_end_0078
 24256                                  .L_if_else_0078:
 24257                                  	; preparing a non-tail-call
 24258 00011B46 488B4520                	mov rax, PARAM(0)	; param e1
 24259 00011B4A 50                      	push rax
 24260 00011B4B 6A01                    	push 1	; arg count
 24261 00011B4D 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 24262 00011B55 803805                  	cmp byte [rax], T_undefined
 24263 00011B58 0F84CA590000            	je L_error_fvar_undefined
 24264 00011B5E 803804                  	cmp byte [rax], T_closure
 24265 00011B61 0F85455A0000            	jne L_error_non_closure
 24266 00011B67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24267 00011B6A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24268 00011B6D 483D[02000000]          	cmp rax, sob_boolean_false
 24269 00011B73 0F84AF000000            	je .L_if_else_006f
 24270                                  	; preparing a non-tail-call
 24271 00011B79 488B4528                	mov rax, PARAM(1)	; param e2
 24272 00011B7D 50                      	push rax
 24273 00011B7E 6A01                    	push 1	; arg count
 24274 00011B80 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 24275 00011B88 803805                  	cmp byte [rax], T_undefined
 24276 00011B8B 0F8497590000            	je L_error_fvar_undefined
 24277 00011B91 803804                  	cmp byte [rax], T_closure
 24278 00011B94 0F85125A0000            	jne L_error_non_closure
 24279 00011B9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24280 00011B9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24281 00011BA0 483D[02000000]          	cmp rax, sob_boolean_false
 24282 00011BA6 7474                    	je .L_if_else_006e
 24283                                  	; preparing a non-tail-call
 24284                                  	; preparing a non-tail-call
 24285 00011BA8 488B4528                	mov rax, PARAM(1)	; param e2
 24286 00011BAC 50                      	push rax
 24287 00011BAD 6A01                    	push 1	; arg count
 24288 00011BAF 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24289 00011BB7 803805                  	cmp byte [rax], T_undefined
 24290 00011BBA 0F8468590000            	je L_error_fvar_undefined
 24291 00011BC0 803804                  	cmp byte [rax], T_closure
 24292 00011BC3 0F85E3590000            	jne L_error_non_closure
 24293 00011BC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24294 00011BCC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24295 00011BCF 50                      	push rax
 24296                                  	; preparing a non-tail-call
 24297 00011BD0 488B4520                	mov rax, PARAM(0)	; param e1
 24298 00011BD4 50                      	push rax
 24299 00011BD5 6A01                    	push 1	; arg count
 24300 00011BD7 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24301 00011BDF 803805                  	cmp byte [rax], T_undefined
 24302 00011BE2 0F8440590000            	je L_error_fvar_undefined
 24303 00011BE8 803804                  	cmp byte [rax], T_closure
 24304 00011BEB 0F85BB590000            	jne L_error_non_closure
 24305 00011BF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24306 00011BF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24307 00011BF7 50                      	push rax
 24308 00011BF8 6A02                    	push 2	; arg count
 24309 00011BFA 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24310 00011C02 803805                  	cmp byte [rax], T_undefined
 24311 00011C05 0F841D590000            	je L_error_fvar_undefined
 24312 00011C0B 803804                  	cmp byte [rax], T_closure
 24313 00011C0E 0F8598590000            	jne L_error_non_closure
 24314 00011C14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24315 00011C17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24316 00011C1A EB0A                    	jmp .L_if_end_006e
 24317                                  .L_if_else_006e:
 24318 00011C1C 48B8-                   	mov rax, L_constants + 2
 24318 00011C1E [0200000000000000] 
 24319                                  .L_if_end_006e:
 24320 00011C26 EB0A                    	jmp .L_if_end_006f
 24321                                  .L_if_else_006f:
 24322 00011C28 48B8-                   	mov rax, L_constants + 2
 24322 00011C2A [0200000000000000] 
 24323                                  .L_if_end_006f:
 24324 00011C32 483D[02000000]          	cmp rax, sob_boolean_false
 24325 00011C38 0F84B6000000            	je .L_if_else_0077
 24326                                  	; preparing a tail-call
 24327                                  	; preparing a non-tail-call
 24328 00011C3E 488B4528                	mov rax, PARAM(1)	; param e2
 24329 00011C42 50                      	push rax
 24330 00011C43 6A01                    	push 1	; arg count
 24331 00011C45 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 24332 00011C4D 803805                  	cmp byte [rax], T_undefined
 24333 00011C50 0F84D2580000            	je L_error_fvar_undefined
 24334 00011C56 803804                  	cmp byte [rax], T_closure
 24335 00011C59 0F854D590000            	jne L_error_non_closure
 24336 00011C5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24337 00011C62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24338 00011C65 50                      	push rax
 24339                                  	; preparing a non-tail-call
 24340 00011C66 488B4520                	mov rax, PARAM(0)	; param e1
 24341 00011C6A 50                      	push rax
 24342 00011C6B 6A01                    	push 1	; arg count
 24343 00011C6D 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 24344 00011C75 803805                  	cmp byte [rax], T_undefined
 24345 00011C78 0F84AA580000            	je L_error_fvar_undefined
 24346 00011C7E 803804                  	cmp byte [rax], T_closure
 24347 00011C81 0F8525590000            	jne L_error_non_closure
 24348 00011C87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24349 00011C8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24350 00011C8D 50                      	push rax
 24351 00011C8E 6A02                    	push 2	; arg count
 24352 00011C90 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24353 00011C98 803805                  	cmp byte [rax], T_undefined
 24354 00011C9B 0F8487580000            	je L_error_fvar_undefined
 24355 00011CA1 803804                  	cmp byte [rax], T_closure
 24356 00011CA4 0F8502590000            	jne L_error_non_closure
 24357 00011CAA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24358 00011CAD FF7508                  	push qword [rbp + 8 * 1]
 24359                                   ; old ret addr
 24360 00011CB0 FF7500                  	push qword [rbp]
 24361                                   ; restore the old rbp
 24362 00011CB3 BB02000000              	mov rbx, 2
 24363 00011CB8 4883C303                	add rbx, 3
 24364 00011CBC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24365 00011CC0 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24366 00011CC5 4C8D4DF8                	lea r9, [rbp - 8]
 24367 00011CC9 B906000000              	mov rcx, 6
 24368                                  .L_tc_recycle_frame_loop_00cc:
 24369 00011CCE 4883F900                	cmp rcx, 0
 24370 00011CD2 7413                    	je .L_tc_recycle_frame_done_00cc
 24371 00011CD4 4D8B11                  	mov r10, qword [r9]
 24372 00011CD7 4D8910                  	mov qword [r8], r10
 24373 00011CDA 4983E808                	sub r8, 8
 24374 00011CDE 4983E908                	sub r9, 8
 24375 00011CE2 48FFC9                  	dec rcx
 24376 00011CE5 EBE7                    	jmp .L_tc_recycle_frame_loop_00cc
 24377                                  .L_tc_recycle_frame_done_00cc:
 24378 00011CE7 498D6008                	lea rsp, [r8 + 8]
 24379 00011CEB 5D                      	pop rbp ; restore the old rbp
 24380 00011CEC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24381 00011CEF E980030000              	jmp .L_if_end_0077
 24382                                  .L_if_else_0077:
 24383                                  	; preparing a non-tail-call
 24384 00011CF4 488B4520                	mov rax, PARAM(0)	; param e1
 24385 00011CF8 50                      	push rax
 24386 00011CF9 6A01                    	push 1	; arg count
 24387 00011CFB 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 24388 00011D03 803805                  	cmp byte [rax], T_undefined
 24389 00011D06 0F841C580000            	je L_error_fvar_undefined
 24390 00011D0C 803804                  	cmp byte [rax], T_closure
 24391 00011D0F 0F8597580000            	jne L_error_non_closure
 24392 00011D15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24393 00011D18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24394 00011D1B 483D[02000000]          	cmp rax, sob_boolean_false
 24395 00011D21 0F84AF000000            	je .L_if_else_0071
 24396                                  	; preparing a non-tail-call
 24397 00011D27 488B4528                	mov rax, PARAM(1)	; param e2
 24398 00011D2B 50                      	push rax
 24399 00011D2C 6A01                    	push 1	; arg count
 24400 00011D2E 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 24401 00011D36 803805                  	cmp byte [rax], T_undefined
 24402 00011D39 0F84E9570000            	je L_error_fvar_undefined
 24403 00011D3F 803804                  	cmp byte [rax], T_closure
 24404 00011D42 0F8564580000            	jne L_error_non_closure
 24405 00011D48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24406 00011D4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24407 00011D4E 483D[02000000]          	cmp rax, sob_boolean_false
 24408 00011D54 7474                    	je .L_if_else_0070
 24409                                  	; preparing a non-tail-call
 24410                                  	; preparing a non-tail-call
 24411 00011D56 488B4528                	mov rax, PARAM(1)	; param e2
 24412 00011D5A 50                      	push rax
 24413 00011D5B 6A01                    	push 1	; arg count
 24414 00011D5D 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24415 00011D65 803805                  	cmp byte [rax], T_undefined
 24416 00011D68 0F84BA570000            	je L_error_fvar_undefined
 24417 00011D6E 803804                  	cmp byte [rax], T_closure
 24418 00011D71 0F8535580000            	jne L_error_non_closure
 24419 00011D77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24420 00011D7A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24421 00011D7D 50                      	push rax
 24422                                  	; preparing a non-tail-call
 24423 00011D7E 488B4520                	mov rax, PARAM(0)	; param e1
 24424 00011D82 50                      	push rax
 24425 00011D83 6A01                    	push 1	; arg count
 24426 00011D85 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24427 00011D8D 803805                  	cmp byte [rax], T_undefined
 24428 00011D90 0F8492570000            	je L_error_fvar_undefined
 24429 00011D96 803804                  	cmp byte [rax], T_closure
 24430 00011D99 0F850D580000            	jne L_error_non_closure
 24431 00011D9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24432 00011DA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24433 00011DA5 50                      	push rax
 24434 00011DA6 6A02                    	push 2	; arg count
 24435 00011DA8 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24436 00011DB0 803805                  	cmp byte [rax], T_undefined
 24437 00011DB3 0F846F570000            	je L_error_fvar_undefined
 24438 00011DB9 803804                  	cmp byte [rax], T_closure
 24439 00011DBC 0F85EA570000            	jne L_error_non_closure
 24440 00011DC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24441 00011DC5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24442 00011DC8 EB0A                    	jmp .L_if_end_0070
 24443                                  .L_if_else_0070:
 24444 00011DCA 48B8-                   	mov rax, L_constants + 2
 24444 00011DCC [0200000000000000] 
 24445                                  .L_if_end_0070:
 24446 00011DD4 EB0A                    	jmp .L_if_end_0071
 24447                                  .L_if_else_0071:
 24448 00011DD6 48B8-                   	mov rax, L_constants + 2
 24448 00011DD8 [0200000000000000] 
 24449                                  .L_if_end_0071:
 24450 00011DE0 483D[02000000]          	cmp rax, sob_boolean_false
 24451 00011DE6 7470                    	je .L_if_else_0076
 24452                                  	; preparing a tail-call
 24453 00011DE8 488B4528                	mov rax, PARAM(1)	; param e2
 24454 00011DEC 50                      	push rax
 24455 00011DED 488B4520                	mov rax, PARAM(0)	; param e1
 24456 00011DF1 50                      	push rax
 24457 00011DF2 6A02                    	push 2	; arg count
 24458 00011DF4 488B0425[BC160000]      	mov rax, qword [free_var_135]	; free var string=?
 24459 00011DFC 803805                  	cmp byte [rax], T_undefined
 24460 00011DFF 0F8423570000            	je L_error_fvar_undefined
 24461 00011E05 803804                  	cmp byte [rax], T_closure
 24462 00011E08 0F859E570000            	jne L_error_non_closure
 24463 00011E0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24464 00011E11 FF7508                  	push qword [rbp + 8 * 1]
 24465                                   ; old ret addr
 24466 00011E14 FF7500                  	push qword [rbp]
 24467                                   ; restore the old rbp
 24468 00011E17 BB02000000              	mov rbx, 2
 24469 00011E1C 4883C303                	add rbx, 3
 24470 00011E20 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24471 00011E24 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24472 00011E29 4C8D4DF8                	lea r9, [rbp - 8]
 24473 00011E2D B906000000              	mov rcx, 6
 24474                                  .L_tc_recycle_frame_loop_00cd:
 24475 00011E32 4883F900                	cmp rcx, 0
 24476 00011E36 7413                    	je .L_tc_recycle_frame_done_00cd
 24477 00011E38 4D8B11                  	mov r10, qword [r9]
 24478 00011E3B 4D8910                  	mov qword [r8], r10
 24479 00011E3E 4983E808                	sub r8, 8
 24480 00011E42 4983E908                	sub r9, 8
 24481 00011E46 48FFC9                  	dec rcx
 24482 00011E49 EBE7                    	jmp .L_tc_recycle_frame_loop_00cd
 24483                                  .L_tc_recycle_frame_done_00cd:
 24484 00011E4B 498D6008                	lea rsp, [r8 + 8]
 24485 00011E4F 5D                      	pop rbp ; restore the old rbp
 24486 00011E50 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24487 00011E53 E91C020000              	jmp .L_if_end_0076
 24488                                  .L_if_else_0076:
 24489                                  	; preparing a non-tail-call
 24490 00011E58 488B4520                	mov rax, PARAM(0)	; param e1
 24491 00011E5C 50                      	push rax
 24492 00011E5D 6A01                    	push 1	; arg count
 24493 00011E5F 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 24494 00011E67 803805                  	cmp byte [rax], T_undefined
 24495 00011E6A 0F84B8560000            	je L_error_fvar_undefined
 24496 00011E70 803804                  	cmp byte [rax], T_closure
 24497 00011E73 0F8533570000            	jne L_error_non_closure
 24498 00011E79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24499 00011E7C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24500 00011E7F 483D[02000000]          	cmp rax, sob_boolean_false
 24501 00011E85 7429                    	je .L_if_else_0072
 24502                                  	; preparing a non-tail-call
 24503 00011E87 488B4528                	mov rax, PARAM(1)	; param e2
 24504 00011E8B 50                      	push rax
 24505 00011E8C 6A01                    	push 1	; arg count
 24506 00011E8E 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 24507 00011E96 803805                  	cmp byte [rax], T_undefined
 24508 00011E99 0F8489560000            	je L_error_fvar_undefined
 24509 00011E9F 803804                  	cmp byte [rax], T_closure
 24510 00011EA2 0F8504570000            	jne L_error_non_closure
 24511 00011EA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24512 00011EAB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24513 00011EAE EB0A                    	jmp .L_if_end_0072
 24514                                  .L_if_else_0072:
 24515 00011EB0 48B8-                   	mov rax, L_constants + 2
 24515 00011EB2 [0200000000000000] 
 24516                                  .L_if_end_0072:
 24517 00011EBA 483D[02000000]          	cmp rax, sob_boolean_false
 24518 00011EC0 7470                    	je .L_if_else_0075
 24519                                  	; preparing a tail-call
 24520 00011EC2 488B4528                	mov rax, PARAM(1)	; param e2
 24521 00011EC6 50                      	push rax
 24522 00011EC7 488B4520                	mov rax, PARAM(0)	; param e1
 24523 00011ECB 50                      	push rax
 24524 00011ECC 6A02                    	push 2	; arg count
 24525 00011ECE 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24526 00011ED6 803805                  	cmp byte [rax], T_undefined
 24527 00011ED9 0F8449560000            	je L_error_fvar_undefined
 24528 00011EDF 803804                  	cmp byte [rax], T_closure
 24529 00011EE2 0F85C4560000            	jne L_error_non_closure
 24530 00011EE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24531 00011EEB FF7508                  	push qword [rbp + 8 * 1]
 24532                                   ; old ret addr
 24533 00011EEE FF7500                  	push qword [rbp]
 24534                                   ; restore the old rbp
 24535 00011EF1 BB02000000              	mov rbx, 2
 24536 00011EF6 4883C303                	add rbx, 3
 24537 00011EFA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24538 00011EFE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24539 00011F03 4C8D4DF8                	lea r9, [rbp - 8]
 24540 00011F07 B906000000              	mov rcx, 6
 24541                                  .L_tc_recycle_frame_loop_00ce:
 24542 00011F0C 4883F900                	cmp rcx, 0
 24543 00011F10 7413                    	je .L_tc_recycle_frame_done_00ce
 24544 00011F12 4D8B11                  	mov r10, qword [r9]
 24545 00011F15 4D8910                  	mov qword [r8], r10
 24546 00011F18 4983E808                	sub r8, 8
 24547 00011F1C 4983E908                	sub r9, 8
 24548 00011F20 48FFC9                  	dec rcx
 24549 00011F23 EBE7                    	jmp .L_tc_recycle_frame_loop_00ce
 24550                                  .L_tc_recycle_frame_done_00ce:
 24551 00011F25 498D6008                	lea rsp, [r8 + 8]
 24552 00011F29 5D                      	pop rbp ; restore the old rbp
 24553 00011F2A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24554 00011F2D E942010000              	jmp .L_if_end_0075
 24555                                  .L_if_else_0075:
 24556                                  	; preparing a non-tail-call
 24557 00011F32 488B4520                	mov rax, PARAM(0)	; param e1
 24558 00011F36 50                      	push rax
 24559 00011F37 6A01                    	push 1	; arg count
 24560 00011F39 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 24561 00011F41 803805                  	cmp byte [rax], T_undefined
 24562 00011F44 0F84DE550000            	je L_error_fvar_undefined
 24563 00011F4A 803804                  	cmp byte [rax], T_closure
 24564 00011F4D 0F8559560000            	jne L_error_non_closure
 24565 00011F53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24566 00011F56 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24567 00011F59 483D[02000000]          	cmp rax, sob_boolean_false
 24568 00011F5F 7429                    	je .L_if_else_0073
 24569                                  	; preparing a non-tail-call
 24570 00011F61 488B4528                	mov rax, PARAM(1)	; param e2
 24571 00011F65 50                      	push rax
 24572 00011F66 6A01                    	push 1	; arg count
 24573 00011F68 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 24574 00011F70 803805                  	cmp byte [rax], T_undefined
 24575 00011F73 0F84AF550000            	je L_error_fvar_undefined
 24576 00011F79 803804                  	cmp byte [rax], T_closure
 24577 00011F7C 0F852A560000            	jne L_error_non_closure
 24578 00011F82 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24579 00011F85 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24580 00011F88 EB0A                    	jmp .L_if_end_0073
 24581                                  .L_if_else_0073:
 24582 00011F8A 48B8-                   	mov rax, L_constants + 2
 24582 00011F8C [0200000000000000] 
 24583                                  .L_if_end_0073:
 24584 00011F94 483D[02000000]          	cmp rax, sob_boolean_false
 24585 00011F9A 746D                    	je .L_if_else_0074
 24586                                  	; preparing a tail-call
 24587 00011F9C 488B4528                	mov rax, PARAM(1)	; param e2
 24588 00011FA0 50                      	push rax
 24589 00011FA1 488B4520                	mov rax, PARAM(0)	; param e1
 24590 00011FA5 50                      	push rax
 24591 00011FA6 6A02                    	push 2	; arg count
 24592 00011FA8 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 24593 00011FB0 803805                  	cmp byte [rax], T_undefined
 24594 00011FB3 0F846F550000            	je L_error_fvar_undefined
 24595 00011FB9 803804                  	cmp byte [rax], T_closure
 24596 00011FBC 0F85EA550000            	jne L_error_non_closure
 24597 00011FC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24598 00011FC5 FF7508                  	push qword [rbp + 8 * 1]
 24599                                   ; old ret addr
 24600 00011FC8 FF7500                  	push qword [rbp]
 24601                                   ; restore the old rbp
 24602 00011FCB BB02000000              	mov rbx, 2
 24603 00011FD0 4883C303                	add rbx, 3
 24604 00011FD4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24605 00011FD8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24606 00011FDD 4C8D4DF8                	lea r9, [rbp - 8]
 24607 00011FE1 B906000000              	mov rcx, 6
 24608                                  .L_tc_recycle_frame_loop_00cf:
 24609 00011FE6 4883F900                	cmp rcx, 0
 24610 00011FEA 7413                    	je .L_tc_recycle_frame_done_00cf
 24611 00011FEC 4D8B11                  	mov r10, qword [r9]
 24612 00011FEF 4D8910                  	mov qword [r8], r10
 24613 00011FF2 4983E808                	sub r8, 8
 24614 00011FF6 4983E908                	sub r9, 8
 24615 00011FFA 48FFC9                  	dec rcx
 24616 00011FFD EBE7                    	jmp .L_tc_recycle_frame_loop_00cf
 24617                                  .L_tc_recycle_frame_done_00cf:
 24618 00011FFF 498D6008                	lea rsp, [r8 + 8]
 24619 00012003 5D                      	pop rbp ; restore the old rbp
 24620 00012004 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24621 00012007 EB6B                    	jmp .L_if_end_0074
 24622                                  .L_if_else_0074:
 24623                                  	; preparing a tail-call
 24624 00012009 488B4528                	mov rax, PARAM(1)	; param e2
 24625 0001200D 50                      	push rax
 24626 0001200E 488B4520                	mov rax, PARAM(0)	; param e1
 24627 00012012 50                      	push rax
 24628 00012013 6A02                    	push 2	; arg count
 24629 00012015 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 24630 0001201D 803805                  	cmp byte [rax], T_undefined
 24631 00012020 0F8402550000            	je L_error_fvar_undefined
 24632 00012026 803804                  	cmp byte [rax], T_closure
 24633 00012029 0F857D550000            	jne L_error_non_closure
 24634 0001202F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24635 00012032 FF7508                  	push qword [rbp + 8 * 1]
 24636                                   ; old ret addr
 24637 00012035 FF7500                  	push qword [rbp]
 24638                                   ; restore the old rbp
 24639 00012038 BB02000000              	mov rbx, 2
 24640 0001203D 4883C303                	add rbx, 3
 24641 00012041 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24642 00012045 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24643 0001204A 4C8D4DF8                	lea r9, [rbp - 8]
 24644 0001204E B906000000              	mov rcx, 6
 24645                                  .L_tc_recycle_frame_loop_00d0:
 24646 00012053 4883F900                	cmp rcx, 0
 24647 00012057 7413                    	je .L_tc_recycle_frame_done_00d0
 24648 00012059 4D8B11                  	mov r10, qword [r9]
 24649 0001205C 4D8910                  	mov qword [r8], r10
 24650 0001205F 4983E808                	sub r8, 8
 24651 00012063 4983E908                	sub r9, 8
 24652 00012067 48FFC9                  	dec rcx
 24653 0001206A EBE7                    	jmp .L_tc_recycle_frame_loop_00d0
 24654                                  .L_tc_recycle_frame_done_00d0:
 24655 0001206C 498D6008                	lea rsp, [r8 + 8]
 24656 00012070 5D                      	pop rbp ; restore the old rbp
 24657 00012071 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24658                                  .L_if_end_0074:
 24659                                  .L_if_end_0075:
 24660                                  .L_if_end_0076:
 24661                                  .L_if_end_0077:
 24662                                  .L_if_end_0078:
 24663 00012074 C9                      	leave
 24664 00012075 C22000                  	ret AND_KILL_FRAME(2)
 24665                                  .L_lambda_simple_end_0097:	; new closure is in rax
 24666 00012078 48890425[26130000]      	mov qword [free_var_81], rax
 24667 00012080 48B8-                   	mov rax, sob_void
 24667 00012082 [0000000000000000] 
 24668                                  
 24669 0001208A 4889C7                  	mov rdi, rax
 24670 0001208D E818580000              	call print_sexpr_if_not_void
 24671 00012092 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24672 00012097 E8B9550000              	call malloc
 24673 0001209C 50                      	push rax
 24674 0001209D BF00000000              	mov rdi, 8 * 0	; new rib
 24675 000120A2 E8AE550000              	call malloc
 24676 000120A7 50                      	push rax
 24677 000120A8 BF08000000              	mov rdi, 8 * 1	; extended env
 24678 000120AD E8A3550000              	call malloc
 24679 000120B2 488B7D10                	mov rdi, ENV
 24680 000120B6 BE00000000              	mov rsi, 0
 24681 000120BB BA01000000              	mov rdx, 1
 24682                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 24683 000120C0 4883FE00                	cmp rsi, 0
 24684 000120C4 7410                    	je .L_lambda_simple_env_end_0098
 24685 000120C6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24686 000120CA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24687 000120CE 48FFC6                  	inc rsi
 24688 000120D1 48FFC2                  	inc rdx
 24689 000120D4 EBEA                    	jmp .L_lambda_simple_env_loop_0098
 24690                                  .L_lambda_simple_env_end_0098:
 24691 000120D6 5B                      	pop rbx
 24692 000120D7 BE00000000              	mov rsi, 0
 24693                                  .L_lambda_simple_params_loop_0098:	; copy params
 24694 000120DC 4883FE00                	cmp rsi, 0
 24695 000120E0 740E                    	je .L_lambda_simple_params_end_0098
 24696 000120E2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24697 000120E7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24698 000120EB 48FFC6                  	inc rsi
 24699 000120EE EBEC                    	jmp .L_lambda_simple_params_loop_0098
 24700                                  .L_lambda_simple_params_end_0098:
 24701 000120F0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24702 000120F3 4889C3                  	mov rbx, rax
 24703 000120F6 58                      	pop rax
 24704 000120F7 C60004                  	mov byte [rax], T_closure
 24705 000120FA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24706 000120FE 48C74009[0B210100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 24707 00012106 E9A9010000              	jmp .L_lambda_simple_end_0098
 24708                                  .L_lambda_simple_code_0098:	; lambda-simple body
 24709 0001210B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24710 00012111 740B                    	je .L_lambda_simple_arity_check_ok_0098
 24711 00012113 FF742410                	push qword [rsp + 8 * 2]
 24712 00012117 6A02                    	push 2
 24713 00012119 E9F0540000              	jmp L_error_incorrect_arity_simple
 24714                                  .L_lambda_simple_arity_check_ok_0098:
 24715 0001211E C8000000                	enter 0, 0
 24716                                  	; preparing a non-tail-call
 24717 00012122 488B4528                	mov rax, PARAM(1)	; param s
 24718 00012126 50                      	push rax
 24719 00012127 6A01                    	push 1	; arg count
 24720 00012129 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 24721 00012131 803805                  	cmp byte [rax], T_undefined
 24722 00012134 0F84EE530000            	je L_error_fvar_undefined
 24723 0001213A 803804                  	cmp byte [rax], T_closure
 24724 0001213D 0F8569540000            	jne L_error_non_closure
 24725 00012143 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24726 00012146 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24727 00012149 483D[02000000]          	cmp rax, sob_boolean_false
 24728 0001214F 740F                    	je .L_if_else_007a
 24729 00012151 48B8-                   	mov rax, L_constants + 2
 24729 00012153 [0200000000000000] 
 24730 0001215B E950010000              	jmp .L_if_end_007a
 24731                                  .L_if_else_007a:
 24732                                  	; preparing a non-tail-call
 24733 00012160 488B4520                	mov rax, PARAM(0)	; param a
 24734 00012164 50                      	push rax
 24735                                  	; preparing a non-tail-call
 24736 00012165 488B4528                	mov rax, PARAM(1)	; param s
 24737 00012169 50                      	push rax
 24738 0001216A 6A01                    	push 1	; arg count
 24739 0001216C 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
 24740 00012174 803805                  	cmp byte [rax], T_undefined
 24741 00012177 0F84AB530000            	je L_error_fvar_undefined
 24742 0001217D 803804                  	cmp byte [rax], T_closure
 24743 00012180 0F8526540000            	jne L_error_non_closure
 24744 00012186 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24745 00012189 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24746 0001218C 50                      	push rax
 24747 0001218D 6A02                    	push 2	; arg count
 24748 0001218F 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 24749 00012197 803805                  	cmp byte [rax], T_undefined
 24750 0001219A 0F8488530000            	je L_error_fvar_undefined
 24751 000121A0 803804                  	cmp byte [rax], T_closure
 24752 000121A3 0F8503540000            	jne L_error_non_closure
 24753 000121A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24754 000121AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24755 000121AF 483D[02000000]          	cmp rax, sob_boolean_false
 24756 000121B5 746B                    	je .L_if_else_0079
 24757                                  	; preparing a tail-call
 24758 000121B7 488B4528                	mov rax, PARAM(1)	; param s
 24759 000121BB 50                      	push rax
 24760 000121BC 6A01                    	push 1	; arg count
 24761 000121BE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24762 000121C6 803805                  	cmp byte [rax], T_undefined
 24763 000121C9 0F8459530000            	je L_error_fvar_undefined
 24764 000121CF 803804                  	cmp byte [rax], T_closure
 24765 000121D2 0F85D4530000            	jne L_error_non_closure
 24766 000121D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24767 000121DB FF7508                  	push qword [rbp + 8 * 1]
 24768                                   ; old ret addr
 24769 000121DE FF7500                  	push qword [rbp]
 24770                                   ; restore the old rbp
 24771 000121E1 BB01000000              	mov rbx, 1
 24772 000121E6 4883C303                	add rbx, 3
 24773 000121EA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24774 000121EE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24775 000121F3 4C8D4DF8                	lea r9, [rbp - 8]
 24776 000121F7 B905000000              	mov rcx, 5
 24777                                  .L_tc_recycle_frame_loop_00d1:
 24778 000121FC 4883F900                	cmp rcx, 0
 24779 00012200 7413                    	je .L_tc_recycle_frame_done_00d1
 24780 00012202 4D8B11                  	mov r10, qword [r9]
 24781 00012205 4D8910                  	mov qword [r8], r10
 24782 00012208 4983E808                	sub r8, 8
 24783 0001220C 4983E908                	sub r9, 8
 24784 00012210 48FFC9                  	dec rcx
 24785 00012213 EBE7                    	jmp .L_tc_recycle_frame_loop_00d1
 24786                                  .L_tc_recycle_frame_done_00d1:
 24787 00012215 498D6008                	lea rsp, [r8 + 8]
 24788 00012219 5D                      	pop rbp ; restore the old rbp
 24789 0001221A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24790 0001221D E98E000000              	jmp .L_if_end_0079
 24791                                  .L_if_else_0079:
 24792                                  	; preparing a tail-call
 24793                                  	; preparing a non-tail-call
 24794 00012222 488B4528                	mov rax, PARAM(1)	; param s
 24795 00012226 50                      	push rax
 24796 00012227 6A01                    	push 1	; arg count
 24797 00012229 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24798 00012231 803805                  	cmp byte [rax], T_undefined
 24799 00012234 0F84EE520000            	je L_error_fvar_undefined
 24800 0001223A 803804                  	cmp byte [rax], T_closure
 24801 0001223D 0F8569530000            	jne L_error_non_closure
 24802 00012243 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24803 00012246 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24804 00012249 50                      	push rax
 24805 0001224A 488B4520                	mov rax, PARAM(0)	; param a
 24806 0001224E 50                      	push rax
 24807 0001224F 6A02                    	push 2	; arg count
 24808 00012251 488B0425[07100000]      	mov rax, qword [free_var_34]	; free var assoc
 24809 00012259 803805                  	cmp byte [rax], T_undefined
 24810 0001225C 0F84C6520000            	je L_error_fvar_undefined
 24811 00012262 803804                  	cmp byte [rax], T_closure
 24812 00012265 0F8541530000            	jne L_error_non_closure
 24813 0001226B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24814 0001226E FF7508                  	push qword [rbp + 8 * 1]
 24815                                   ; old ret addr
 24816 00012271 FF7500                  	push qword [rbp]
 24817                                   ; restore the old rbp
 24818 00012274 BB02000000              	mov rbx, 2
 24819 00012279 4883C303                	add rbx, 3
 24820 0001227D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 24821 00012281 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 24822 00012286 4C8D4DF8                	lea r9, [rbp - 8]
 24823 0001228A B906000000              	mov rcx, 6
 24824                                  .L_tc_recycle_frame_loop_00d2:
 24825 0001228F 4883F900                	cmp rcx, 0
 24826 00012293 7413                    	je .L_tc_recycle_frame_done_00d2
 24827 00012295 4D8B11                  	mov r10, qword [r9]
 24828 00012298 4D8910                  	mov qword [r8], r10
 24829 0001229B 4983E808                	sub r8, 8
 24830 0001229F 4983E908                	sub r9, 8
 24831 000122A3 48FFC9                  	dec rcx
 24832 000122A6 EBE7                    	jmp .L_tc_recycle_frame_loop_00d2
 24833                                  .L_tc_recycle_frame_done_00d2:
 24834 000122A8 498D6008                	lea rsp, [r8 + 8]
 24835 000122AC 5D                      	pop rbp ; restore the old rbp
 24836 000122AD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24837                                  .L_if_end_0079:
 24838                                  .L_if_end_007a:
 24839 000122B0 C9                      	leave
 24840 000122B1 C22000                  	ret AND_KILL_FRAME(2)
 24841                                  .L_lambda_simple_end_0098:	; new closure is in rax
 24842 000122B4 48890425[07100000]      	mov qword [free_var_34], rax
 24843 000122BC 48B8-                   	mov rax, sob_void
 24843 000122BE [0000000000000000] 
 24844                                  
 24845 000122C6 4889C7                  	mov rdi, rax
 24846 000122C9 E8DC550000              	call print_sexpr_if_not_void
 24847                                  	; preparing a non-tail-call
 24848 000122CE 48B8-                   	mov rax, L_constants + 1993
 24848 000122D0 [C907000000000000] 
 24849 000122D8 50                      	push rax
 24850 000122D9 48B8-                   	mov rax, L_constants + 1993
 24850 000122DB [C907000000000000] 
 24851 000122E3 50                      	push rax
 24852 000122E4 6A02                    	push 2	; arg count
 24853 000122E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24854 000122EB E865530000              	call malloc
 24855 000122F0 50                      	push rax
 24856 000122F1 BF00000000              	mov rdi, 8 * 0	; new rib
 24857 000122F6 E85A530000              	call malloc
 24858 000122FB 50                      	push rax
 24859 000122FC BF08000000              	mov rdi, 8 * 1	; extended env
 24860 00012301 E84F530000              	call malloc
 24861 00012306 488B7D10                	mov rdi, ENV
 24862 0001230A BE00000000              	mov rsi, 0
 24863 0001230F BA01000000              	mov rdx, 1
 24864                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 24865 00012314 4883FE00                	cmp rsi, 0
 24866 00012318 7410                    	je .L_lambda_simple_env_end_0099
 24867 0001231A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24868 0001231E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24869 00012322 48FFC6                  	inc rsi
 24870 00012325 48FFC2                  	inc rdx
 24871 00012328 EBEA                    	jmp .L_lambda_simple_env_loop_0099
 24872                                  .L_lambda_simple_env_end_0099:
 24873 0001232A 5B                      	pop rbx
 24874 0001232B BE00000000              	mov rsi, 0
 24875                                  .L_lambda_simple_params_loop_0099:	; copy params
 24876 00012330 4883FE00                	cmp rsi, 0
 24877 00012334 740E                    	je .L_lambda_simple_params_end_0099
 24878 00012336 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24879 0001233B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24880 0001233F 48FFC6                  	inc rsi
 24881 00012342 EBEC                    	jmp .L_lambda_simple_params_loop_0099
 24882                                  .L_lambda_simple_params_end_0099:
 24883 00012344 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24884 00012347 4889C3                  	mov rbx, rax
 24885 0001234A 58                      	pop rax
 24886 0001234B C60004                  	mov byte [rax], T_closure
 24887 0001234E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24888 00012352 48C74009[5F230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 24889 0001235A E9DD070000              	jmp .L_lambda_simple_end_0099
 24890                                  .L_lambda_simple_code_0099:	; lambda-simple body
 24891 0001235F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24892 00012365 740B                    	je .L_lambda_simple_arity_check_ok_0099
 24893 00012367 FF742410                	push qword [rsp + 8 * 2]
 24894 0001236B 6A02                    	push 2
 24895 0001236D E99C520000              	jmp L_error_incorrect_arity_simple
 24896                                  .L_lambda_simple_arity_check_ok_0099:
 24897 00012372 C8000000                	enter 0, 0
 24898 00012376 BF08000000              	mov rdi, 8*1
 24899 0001237B E8D5520000              	call malloc
 24900 00012380 488B5D20                	mov rbx, PARAM(0)
 24901 00012384 488918                  	mov qword [rax], rbx
 24902 00012387 48894520                	mov PARAM(0), rax
 24903 0001238B 48B8-                   	mov rax, sob_void
 24903 0001238D [0000000000000000] 
 24904                                  
 24905 00012395 BF08000000              	mov rdi, 8*1
 24906 0001239A E8B6520000              	call malloc
 24907 0001239F 488B5D28                	mov rbx, PARAM(1)
 24908 000123A3 488918                  	mov qword [rax], rbx
 24909 000123A6 48894528                	mov PARAM(1), rax
 24910 000123AA 48B8-                   	mov rax, sob_void
 24910 000123AC [0000000000000000] 
 24911                                  
 24912 000123B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24913 000123B9 E897520000              	call malloc
 24914 000123BE 50                      	push rax
 24915 000123BF BF10000000              	mov rdi, 8 * 2	; new rib
 24916 000123C4 E88C520000              	call malloc
 24917 000123C9 50                      	push rax
 24918 000123CA BF10000000              	mov rdi, 8 * 2	; extended env
 24919 000123CF E881520000              	call malloc
 24920 000123D4 488B7D10                	mov rdi, ENV
 24921 000123D8 BE00000000              	mov rsi, 0
 24922 000123DD BA01000000              	mov rdx, 1
 24923                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 24924 000123E2 4883FE01                	cmp rsi, 1
 24925 000123E6 7410                    	je .L_lambda_simple_env_end_009a
 24926 000123E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24927 000123EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24928 000123F0 48FFC6                  	inc rsi
 24929 000123F3 48FFC2                  	inc rdx
 24930 000123F6 EBEA                    	jmp .L_lambda_simple_env_loop_009a
 24931                                  .L_lambda_simple_env_end_009a:
 24932 000123F8 5B                      	pop rbx
 24933 000123F9 BE00000000              	mov rsi, 0
 24934                                  .L_lambda_simple_params_loop_009a:	; copy params
 24935 000123FE 4883FE02                	cmp rsi, 2
 24936 00012402 740E                    	je .L_lambda_simple_params_end_009a
 24937 00012404 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24938 00012409 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24939 0001240D 48FFC6                  	inc rsi
 24940 00012410 EBEC                    	jmp .L_lambda_simple_params_loop_009a
 24941                                  .L_lambda_simple_params_end_009a:
 24942 00012412 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24943 00012415 4889C3                  	mov rbx, rax
 24944 00012418 58                      	pop rax
 24945 00012419 C60004                  	mov byte [rax], T_closure
 24946 0001241C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24947 00012420 48C74009[2D240100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 24948 00012428 E97C020000              	jmp .L_lambda_simple_end_009a
 24949                                  .L_lambda_simple_code_009a:	; lambda-simple body
 24950 0001242D 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24951 00012433 740B                    	je .L_lambda_simple_arity_check_ok_009a
 24952 00012435 FF742410                	push qword [rsp + 8 * 2]
 24953 00012439 6A03                    	push 3
 24954 0001243B E9CE510000              	jmp L_error_incorrect_arity_simple
 24955                                  .L_lambda_simple_arity_check_ok_009a:
 24956 00012440 C8000000                	enter 0, 0
 24957                                  	; preparing a non-tail-call
 24958 00012444 488B4530                	mov rax, PARAM(2)	; param s
 24959 00012448 50                      	push rax
 24960 00012449 6A01                    	push 1	; arg count
 24961 0001244B 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 24962 00012453 803805                  	cmp byte [rax], T_undefined
 24963 00012456 0F84CC500000            	je L_error_fvar_undefined
 24964 0001245C 803804                  	cmp byte [rax], T_closure
 24965 0001245F 0F8547510000            	jne L_error_non_closure
 24966 00012465 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24967 00012468 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24968 0001246B 483D[02000000]          	cmp rax, sob_boolean_false
 24969 00012471 7409                    	je .L_if_else_007b
 24970 00012473 488B4520                	mov rax, PARAM(0)	; param target
 24971 00012477 E929020000              	jmp .L_if_end_007b
 24972                                  .L_if_else_007b:
 24973                                  	; preparing a tail-call
 24974                                  	; preparing a non-tail-call
 24975                                  	; preparing a non-tail-call
 24976                                  	; preparing a non-tail-call
 24977 0001247C 488B4530                	mov rax, PARAM(2)	; param s
 24978 00012480 50                      	push rax
 24979 00012481 6A01                    	push 1	; arg count
 24980 00012483 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24981 0001248B 803805                  	cmp byte [rax], T_undefined
 24982 0001248E 0F8494500000            	je L_error_fvar_undefined
 24983 00012494 803804                  	cmp byte [rax], T_closure
 24984 00012497 0F850F510000            	jne L_error_non_closure
 24985 0001249D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24986 000124A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24987 000124A3 50                      	push rax
 24988 000124A4 6A01                    	push 1	; arg count
 24989 000124A6 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 24990 000124AE 803805                  	cmp byte [rax], T_undefined
 24991 000124B1 0F8471500000            	je L_error_fvar_undefined
 24992 000124B7 803804                  	cmp byte [rax], T_closure
 24993 000124BA 0F85EC500000            	jne L_error_non_closure
 24994 000124C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24995 000124C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24996 000124C6 50                      	push rax
 24997 000124C7 48B8-                   	mov rax, L_constants + 2135
 24997 000124C9 [5708000000000000] 
 24998 000124D1 50                      	push rax
 24999                                  	; preparing a non-tail-call
 25000 000124D2 488B4530                	mov rax, PARAM(2)	; param s
 25001 000124D6 50                      	push rax
 25002 000124D7 6A01                    	push 1	; arg count
 25003 000124D9 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25004 000124E1 803805                  	cmp byte [rax], T_undefined
 25005 000124E4 0F843E500000            	je L_error_fvar_undefined
 25006 000124EA 803804                  	cmp byte [rax], T_closure
 25007 000124ED 0F85B9500000            	jne L_error_non_closure
 25008 000124F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25009 000124F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25010 000124F9 50                      	push rax
 25011 000124FA 488B4528                	mov rax, PARAM(1)	; param i
 25012 000124FE 50                      	push rax
 25013 000124FF 488B4520                	mov rax, PARAM(0)	; param target
 25014 00012503 50                      	push rax
 25015 00012504 6A05                    	push 5	; arg count
 25016 00012506 488B4510                	mov rax, ENV
 25017 0001250A 488B00                  	mov rax, qword [rax + 8 * 0]
 25018 0001250D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25019 00012511 488B00                  	mov rax, qword [rax]
 25020 00012514 803804                  	cmp byte [rax], T_closure
 25021 00012517 0F858F500000            	jne L_error_non_closure
 25022 0001251D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25023 00012520 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25024 00012523 50                      	push rax
 25025 00012524 6A01                    	push 1	; arg count
 25026 00012526 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25027 0001252B E825510000              	call malloc
 25028 00012530 50                      	push rax
 25029 00012531 BF18000000              	mov rdi, 8 * 3	; new rib
 25030 00012536 E81A510000              	call malloc
 25031 0001253B 50                      	push rax
 25032 0001253C BF18000000              	mov rdi, 8 * 3	; extended env
 25033 00012541 E80F510000              	call malloc
 25034 00012546 488B7D10                	mov rdi, ENV
 25035 0001254A BE00000000              	mov rsi, 0
 25036 0001254F BA01000000              	mov rdx, 1
 25037                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 25038 00012554 4883FE02                	cmp rsi, 2
 25039 00012558 7410                    	je .L_lambda_simple_env_end_009b
 25040 0001255A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25041 0001255E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25042 00012562 48FFC6                  	inc rsi
 25043 00012565 48FFC2                  	inc rdx
 25044 00012568 EBEA                    	jmp .L_lambda_simple_env_loop_009b
 25045                                  .L_lambda_simple_env_end_009b:
 25046 0001256A 5B                      	pop rbx
 25047 0001256B BE00000000              	mov rsi, 0
 25048                                  .L_lambda_simple_params_loop_009b:	; copy params
 25049 00012570 4883FE03                	cmp rsi, 3
 25050 00012574 740E                    	je .L_lambda_simple_params_end_009b
 25051 00012576 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25052 0001257B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25053 0001257F 48FFC6                  	inc rsi
 25054 00012582 EBEC                    	jmp .L_lambda_simple_params_loop_009b
 25055                                  .L_lambda_simple_params_end_009b:
 25056 00012584 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25057 00012587 4889C3                  	mov rbx, rax
 25058 0001258A 58                      	pop rax
 25059 0001258B C60004                  	mov byte [rax], T_closure
 25060 0001258E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25061 00012592 48C74009[9F250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 25062 0001259A E9B8000000              	jmp .L_lambda_simple_end_009b
 25063                                  .L_lambda_simple_code_009b:	; lambda-simple body
 25064 0001259F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25065 000125A5 740B                    	je .L_lambda_simple_arity_check_ok_009b
 25066 000125A7 FF742410                	push qword [rsp + 8 * 2]
 25067 000125AB 6A01                    	push 1
 25068 000125AD E95C500000              	jmp L_error_incorrect_arity_simple
 25069                                  .L_lambda_simple_arity_check_ok_009b:
 25070 000125B2 C8000000                	enter 0, 0
 25071                                  	; preparing a tail-call
 25072                                  	; preparing a non-tail-call
 25073 000125B6 488B4510                	mov rax, ENV
 25074 000125BA 488B00                  	mov rax, qword [rax + 8 * 0]
 25075 000125BD 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25076 000125C1 50                      	push rax
 25077 000125C2 6A01                    	push 1	; arg count
 25078 000125C4 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25079 000125CC 803805                  	cmp byte [rax], T_undefined
 25080 000125CF 0F84534F0000            	je L_error_fvar_undefined
 25081 000125D5 803804                  	cmp byte [rax], T_closure
 25082 000125D8 0F85CE4F0000            	jne L_error_non_closure
 25083 000125DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 25084 000125E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25085 000125E4 50                      	push rax
 25086 000125E5 488B4520                	mov rax, PARAM(0)	; param i
 25087 000125E9 50                      	push rax
 25088 000125EA 488B4510                	mov rax, ENV
 25089 000125EE 488B00                  	mov rax, qword [rax + 8 * 0]
 25090 000125F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25091 000125F4 50                      	push rax
 25092 000125F5 6A03                    	push 3	; arg count
 25093 000125F7 488B4510                	mov rax, ENV
 25094 000125FB 488B4008                	mov rax, qword [rax + 8 * 1]
 25095 000125FF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25096 00012602 488B00                  	mov rax, qword [rax]
 25097 00012605 803804                  	cmp byte [rax], T_closure
 25098 00012608 0F859E4F0000            	jne L_error_non_closure
 25099 0001260E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25100 00012611 FF7508                  	push qword [rbp + 8 * 1]
 25101                                   ; old ret addr
 25102 00012614 FF7500                  	push qword [rbp]
 25103                                   ; restore the old rbp
 25104 00012617 BB03000000              	mov rbx, 3
 25105 0001261C 4883C303                	add rbx, 3
 25106 00012620 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25107 00012624 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25108 00012629 4C8D4DF8                	lea r9, [rbp - 8]
 25109 0001262D B907000000              	mov rcx, 7
 25110                                  .L_tc_recycle_frame_loop_00d4:
 25111 00012632 4883F900                	cmp rcx, 0
 25112 00012636 7413                    	je .L_tc_recycle_frame_done_00d4
 25113 00012638 4D8B11                  	mov r10, qword [r9]
 25114 0001263B 4D8910                  	mov qword [r8], r10
 25115 0001263E 4983E808                	sub r8, 8
 25116 00012642 4983E908                	sub r9, 8
 25117 00012646 48FFC9                  	dec rcx
 25118 00012649 EBE7                    	jmp .L_tc_recycle_frame_loop_00d4
 25119                                  .L_tc_recycle_frame_done_00d4:
 25120 0001264B 498D6008                	lea rsp, [r8 + 8]
 25121 0001264F 5D                      	pop rbp ; restore the old rbp
 25122 00012650 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25123 00012653 C9                      	leave
 25124 00012654 C21800                  	ret AND_KILL_FRAME(1)
 25125                                  .L_lambda_simple_end_009b:	; new closure is in rax
 25126 00012657 803804                  	cmp byte [rax], T_closure
 25127 0001265A 0F854C4F0000            	jne L_error_non_closure
 25128 00012660 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25129 00012663 FF7508                  	push qword [rbp + 8 * 1]
 25130                                   ; old ret addr
 25131 00012666 FF7500                  	push qword [rbp]
 25132                                   ; restore the old rbp
 25133 00012669 BB01000000              	mov rbx, 1
 25134 0001266E 4883C303                	add rbx, 3
 25135 00012672 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25136 00012676 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25137 0001267B 4C8D4DF8                	lea r9, [rbp - 8]
 25138 0001267F B905000000              	mov rcx, 5
 25139                                  .L_tc_recycle_frame_loop_00d3:
 25140 00012684 4883F900                	cmp rcx, 0
 25141 00012688 7413                    	je .L_tc_recycle_frame_done_00d3
 25142 0001268A 4D8B11                  	mov r10, qword [r9]
 25143 0001268D 4D8910                  	mov qword [r8], r10
 25144 00012690 4983E808                	sub r8, 8
 25145 00012694 4983E908                	sub r9, 8
 25146 00012698 48FFC9                  	dec rcx
 25147 0001269B EBE7                    	jmp .L_tc_recycle_frame_loop_00d3
 25148                                  .L_tc_recycle_frame_done_00d3:
 25149 0001269D 498D6008                	lea rsp, [r8 + 8]
 25150 000126A1 5D                      	pop rbp ; restore the old rbp
 25151 000126A2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25152                                  .L_if_end_007b:
 25153 000126A5 C9                      	leave
 25154 000126A6 C22800                  	ret AND_KILL_FRAME(3)
 25155                                  .L_lambda_simple_end_009a:	; new closure is in rax
 25156 000126A9 50                      	push rax
 25157 000126AA 488B4520                	mov rax, PARAM(0)	; param run
 25158 000126AE 8F00                    	pop qword [rax]
 25159 000126B0 48B8-                   	mov rax, sob_void
 25159 000126B2 [0000000000000000] 
 25160                                  
 25161 000126BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25162 000126BF E8914F0000              	call malloc
 25163 000126C4 50                      	push rax
 25164 000126C5 BF10000000              	mov rdi, 8 * 2	; new rib
 25165 000126CA E8864F0000              	call malloc
 25166 000126CF 50                      	push rax
 25167 000126D0 BF10000000              	mov rdi, 8 * 2	; extended env
 25168 000126D5 E87B4F0000              	call malloc
 25169 000126DA 488B7D10                	mov rdi, ENV
 25170 000126DE BE00000000              	mov rsi, 0
 25171 000126E3 BA01000000              	mov rdx, 1
 25172                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 25173 000126E8 4883FE01                	cmp rsi, 1
 25174 000126EC 7410                    	je .L_lambda_simple_env_end_009c
 25175 000126EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25176 000126F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25177 000126F6 48FFC6                  	inc rsi
 25178 000126F9 48FFC2                  	inc rdx
 25179 000126FC EBEA                    	jmp .L_lambda_simple_env_loop_009c
 25180                                  .L_lambda_simple_env_end_009c:
 25181 000126FE 5B                      	pop rbx
 25182 000126FF BE00000000              	mov rsi, 0
 25183                                  .L_lambda_simple_params_loop_009c:	; copy params
 25184 00012704 4883FE02                	cmp rsi, 2
 25185 00012708 740E                    	je .L_lambda_simple_params_end_009c
 25186 0001270A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25187 0001270F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25188 00012713 48FFC6                  	inc rsi
 25189 00012716 EBEC                    	jmp .L_lambda_simple_params_loop_009c
 25190                                  .L_lambda_simple_params_end_009c:
 25191 00012718 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25192 0001271B 4889C3                  	mov rbx, rax
 25193 0001271E 58                      	pop rax
 25194 0001271F C60004                  	mov byte [rax], T_closure
 25195 00012722 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25196 00012726 48C74009[33270100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 25197 0001272E E985010000              	jmp .L_lambda_simple_end_009c
 25198                                  .L_lambda_simple_code_009c:	; lambda-simple body
 25199 00012733 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25200 00012739 740B                    	je .L_lambda_simple_arity_check_ok_009c
 25201 0001273B FF742410                	push qword [rsp + 8 * 2]
 25202 0001273F 6A05                    	push 5
 25203 00012741 E9C84E0000              	jmp L_error_incorrect_arity_simple
 25204                                  .L_lambda_simple_arity_check_ok_009c:
 25205 00012746 C8000000                	enter 0, 0
 25206                                  	; preparing a non-tail-call
 25207 0001274A 488B4540                	mov rax, PARAM(4)	; param limit
 25208 0001274E 50                      	push rax
 25209 0001274F 488B4538                	mov rax, PARAM(3)	; param j
 25210 00012753 50                      	push rax
 25211 00012754 6A02                    	push 2	; arg count
 25212 00012756 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 25213 0001275E 803805                  	cmp byte [rax], T_undefined
 25214 00012761 0F84C14D0000            	je L_error_fvar_undefined
 25215 00012767 803804                  	cmp byte [rax], T_closure
 25216 0001276A 0F853C4E0000            	jne L_error_non_closure
 25217 00012770 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25218 00012773 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25219 00012776 483D[02000000]          	cmp rax, sob_boolean_false
 25220 0001277C 0F842E010000            	je .L_if_else_007c
 25221                                  	; preparing a non-tail-call
 25222                                  	; preparing a non-tail-call
 25223 00012782 488B4538                	mov rax, PARAM(3)	; param j
 25224 00012786 50                      	push rax
 25225 00012787 488B4530                	mov rax, PARAM(2)	; param str
 25226 0001278B 50                      	push rax
 25227 0001278C 6A02                    	push 2	; arg count
 25228 0001278E 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 25229 00012796 803805                  	cmp byte [rax], T_undefined
 25230 00012799 0F84894D0000            	je L_error_fvar_undefined
 25231 0001279F 803804                  	cmp byte [rax], T_closure
 25232 000127A2 0F85044E0000            	jne L_error_non_closure
 25233 000127A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25234 000127AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25235 000127AE 50                      	push rax
 25236 000127AF 488B4528                	mov rax, PARAM(1)	; param i
 25237 000127B3 50                      	push rax
 25238 000127B4 488B4520                	mov rax, PARAM(0)	; param target
 25239 000127B8 50                      	push rax
 25240 000127B9 6A03                    	push 3	; arg count
 25241 000127BB 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 25242 000127C3 803805                  	cmp byte [rax], T_undefined
 25243 000127C6 0F845C4D0000            	je L_error_fvar_undefined
 25244 000127CC 803804                  	cmp byte [rax], T_closure
 25245 000127CF 0F85D74D0000            	jne L_error_non_closure
 25246 000127D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25247 000127D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25248                                  
 25249                                  	; preparing a tail-call
 25250 000127DB 488B4540                	mov rax, PARAM(4)	; param limit
 25251 000127DF 50                      	push rax
 25252                                  	; preparing a non-tail-call
 25253 000127E0 48B8-                   	mov rax, L_constants + 2270
 25253 000127E2 [DE08000000000000] 
 25254 000127EA 50                      	push rax
 25255 000127EB 488B4538                	mov rax, PARAM(3)	; param j
 25256 000127EF 50                      	push rax
 25257 000127F0 6A02                    	push 2	; arg count
 25258 000127F2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25259 000127FA 803805                  	cmp byte [rax], T_undefined
 25260 000127FD 0F84254D0000            	je L_error_fvar_undefined
 25261 00012803 803804                  	cmp byte [rax], T_closure
 25262 00012806 0F85A04D0000            	jne L_error_non_closure
 25263 0001280C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25264 0001280F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25265 00012812 50                      	push rax
 25266 00012813 488B4530                	mov rax, PARAM(2)	; param str
 25267 00012817 50                      	push rax
 25268                                  	; preparing a non-tail-call
 25269 00012818 48B8-                   	mov rax, L_constants + 2270
 25269 0001281A [DE08000000000000] 
 25270 00012822 50                      	push rax
 25271 00012823 488B4528                	mov rax, PARAM(1)	; param i
 25272 00012827 50                      	push rax
 25273 00012828 6A02                    	push 2	; arg count
 25274 0001282A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25275 00012832 803805                  	cmp byte [rax], T_undefined
 25276 00012835 0F84ED4C0000            	je L_error_fvar_undefined
 25277 0001283B 803804                  	cmp byte [rax], T_closure
 25278 0001283E 0F85684D0000            	jne L_error_non_closure
 25279 00012844 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25280 00012847 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25281 0001284A 50                      	push rax
 25282 0001284B 488B4520                	mov rax, PARAM(0)	; param target
 25283 0001284F 50                      	push rax
 25284 00012850 6A05                    	push 5	; arg count
 25285 00012852 488B4510                	mov rax, ENV
 25286 00012856 488B00                  	mov rax, qword [rax + 8 * 0]
 25287 00012859 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25288 0001285D 488B00                  	mov rax, qword [rax]
 25289 00012860 803804                  	cmp byte [rax], T_closure
 25290 00012863 0F85434D0000            	jne L_error_non_closure
 25291 00012869 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25292 0001286C FF7508                  	push qword [rbp + 8 * 1]
 25293                                   ; old ret addr
 25294 0001286F FF7500                  	push qword [rbp]
 25295                                   ; restore the old rbp
 25296 00012872 BB05000000              	mov rbx, 5
 25297 00012877 4883C303                	add rbx, 3
 25298 0001287B 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25299 0001287F 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25300 00012884 4C8D4DF8                	lea r9, [rbp - 8]
 25301 00012888 B909000000              	mov rcx, 9
 25302                                  .L_tc_recycle_frame_loop_00d5:
 25303 0001288D 4883F900                	cmp rcx, 0
 25304 00012891 7413                    	je .L_tc_recycle_frame_done_00d5
 25305 00012893 4D8B11                  	mov r10, qword [r9]
 25306 00012896 4D8910                  	mov qword [r8], r10
 25307 00012899 4983E808                	sub r8, 8
 25308 0001289D 4983E908                	sub r9, 8
 25309 000128A1 48FFC9                  	dec rcx
 25310 000128A4 EBE7                    	jmp .L_tc_recycle_frame_loop_00d5
 25311                                  .L_tc_recycle_frame_done_00d5:
 25312 000128A6 498D6008                	lea rsp, [r8 + 8]
 25313 000128AA 5D                      	pop rbp ; restore the old rbp
 25314 000128AB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25315 000128AE EB04                    	jmp .L_if_end_007c
 25316                                  .L_if_else_007c:
 25317 000128B0 488B4528                	mov rax, PARAM(1)	; param i
 25318                                  .L_if_end_007c:
 25319 000128B4 C9                      	leave
 25320 000128B5 C23800                  	ret AND_KILL_FRAME(5)
 25321                                  .L_lambda_simple_end_009c:	; new closure is in rax
 25322 000128B8 50                      	push rax
 25323 000128B9 488B4528                	mov rax, PARAM(1)	; param add
 25324 000128BD 8F00                    	pop qword [rax]
 25325 000128BF 48B8-                   	mov rax, sob_void
 25325 000128C1 [0000000000000000] 
 25326                                  
 25327 000128C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25328 000128CE E8824D0000              	call malloc
 25329 000128D3 50                      	push rax
 25330 000128D4 BF10000000              	mov rdi, 8 * 2	; new rib
 25331 000128D9 E8774D0000              	call malloc
 25332 000128DE 50                      	push rax
 25333 000128DF BF10000000              	mov rdi, 8 * 2	; extended env
 25334 000128E4 E86C4D0000              	call malloc
 25335 000128E9 488B7D10                	mov rdi, ENV
 25336 000128ED 4831F6                  	 xor rsi, rsi
 25337 000128F0 4831D2                  	 xor rdx, rdx
 25338 000128F3 48FFC2                  	inc rdx
 25339                                  .L_lambda_opt_env_loop_0017:	; 
 25340 000128F6 4883FE01                	cmp rsi, 1
 25341 000128FA 7410                    	je .L_lambda_opt_env_end_0017
 25342 000128FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25343 00012900 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25344 00012904 48FFC6                  	inc rsi
 25345 00012907 48FFC2                  	inc rdx
 25346 0001290A EBEA                    	jmp .L_lambda_opt_env_loop_0017
 25347                                  .L_lambda_opt_env_end_0017:
 25348 0001290C 5B                      	pop rbx
 25349 0001290D 4831F6                  	xor rsi, rsi
 25350                                  .L_lambda_opt_params_loop_0017:	; copy params
 25351 00012910 4883FE02                	cmp rsi, 2
 25352 00012914 740E                    	je .L_lambda_opt_params_end_0017
 25353 00012916 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25354 0001291B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25355 0001291F 48FFC6                  	inc rsi
 25356 00012922 EBEC                    	jmp .L_lambda_opt_params_loop_0017
 25357                                  .L_lambda_opt_params_end_0017:
 25358 00012924 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25359 00012927 4889C3                  	mov rbx, rax
 25360 0001292A 58                      	pop rax
 25361 0001292B C60004                  	mov byte [rax], T_closure
 25362 0001292E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25363 00012932 48C74009[3F290100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 25364 0001293A E9F9010000              	jmp .L_lambda_opt_end_0017
 25365                                  .L_lambda_opt_code_0017:
 25366 0001293F 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 25367 00012944 4983FF00                	cmp r15, 0
 25368 00012948 7409                    	je .L_lambda_opt_arity_check_exact_0017
 25369 0001294A 7F57                    	jg .L_lambda_opt_arity_check_more_0017
 25370 0001294C 6A00                    	push 0
 25371 0001294E E9CF4C0000              	jmp L_error_incorrect_arity_opt
 25372                                  .L_lambda_opt_arity_check_exact_0017: ;Exact case
 25373 00012953 4C8B0424                	mov r8, qword [rsp -8 * 0]
 25374 00012957 4C894424F8              	mov qword [rsp -8], r8
 25375 0001295C 4C8B442408              	mov r8, qword [rsp +8]
 25376 00012961 4C890424                	mov qword [rsp +8 * 0], r8
 25377 00012965 4C8B442410              	mov r8, qword [rsp +8 * 2]
 25378 0001296A 4C89C1                  	mov rcx, r8
 25379 0001296D 49FFC0                  	inc r8
 25380 00012970 4C89442408              	mov qword [rsp +8], r8
 25381 00012975 4889E2                  	mov rdx, rsp
 25382 00012978 4883C218                	add rdx, 24
 25383                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0017:
 25384 0001297C 4883F900                	cmp rcx, 0
 25385 00012980 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0017
 25386 00012982 4C8B02                  	mov r8, qword [rdx]
 25387 00012985 4C8942F8                	mov qword [rdx - 8], r8
 25388 00012989 4883C208                	add rdx, 8
 25389 0001298D 48FFC9                  	dec rcx
 25390 00012990 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0017
 25391                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0017:
 25392 00012992 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 25393 0001299A 4883EC08                	sub rsp, 8
 25394 0001299E E985000000              	jmp .L_lambda_opt_stack_adjusted_0017
 25395                                  .L_lambda_opt_arity_check_more_0017:
 25396 000129A3 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 25397 000129A8 4D89C4                  	mov r12, r8
 25398 000129AB 4C89C1                  	mov rcx, r8
 25399 000129AE 4D8D6802                	lea r13, [r8 + 2] 
 25400 000129B2 4883E900                	sub rcx, 0
 25401 000129B6 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 25402 000129BB 49BE-                   	mov r14, sob_nil
 25402 000129BD [0100000000000000] 
 25403                                  .L_lambda_opt_create_list_of_opt_params_0017:
 25404 000129C5 4883F900                	cmp rcx, 0
 25405 000129C9 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0017
 25406 000129CB BF11000000              	mov rdi, 17
 25407 000129D0 E8804C0000              	call malloc
 25408 000129D5 C60021                  	mov byte [rax], T_pair
 25409 000129D8 498B1B                  	mov rbx, qword [r11]
 25410 000129DB 48895801                	mov qword [rax +1], rbx
 25411 000129DF 4C897009                	mov qword [rax + 1 + 8], r14
 25412 000129E3 4989C6                  	mov r14, rax
 25413 000129E6 48FFC9                  	dec rcx
 25414 000129E9 4983EB08                	sub r11, 8
 25415 000129ED EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0017
 25416                                  .L_lambda_opt_create_list_of_opt_params_end_0017:
 25417 000129EF 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
 25418 000129F4 4D8932                  	mov qword [r10], r14
 25419 000129F7 4E8D2CED00000000        	lea r13, [8 * r13]
 25420 000129FF 4901E5                  	add r13, rsp
 25421 00012A02 B904000000              	mov rcx, 4 + 0
 25422                                  .L_lambda_opt_stack_shrink_loop_0017:
 25423 00012A07 4883F900                	cmp rcx, 0
 25424 00012A0B 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0017
 25425 00012A0D 4D8B1A                  	mov r11, qword [r10]
 25426 00012A10 4D895D00                	mov qword [r13], r11
 25427 00012A14 4983EA08                	sub r10, 8
 25428 00012A18 4983ED08                	sub r13, 8
 25429 00012A1C 48FFC9                  	dec rcx
 25430 00012A1F EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 25431                                  .L_lambda_opt_stack_shrink_loop_exit_0017:
 25432 00012A21 4983C508                	add r13, 8
 25433 00012A25 4C89EC                  	mov rsp, r13
 25434                                  .L_lambda_opt_stack_adjusted_0017:
 25435 00012A28 48C744241001000000      	mov qword [rsp + 8*2], 1
 25436 00012A31 C8000000                	enter 0, 0
 25437                                  	; preparing a tail-call
 25438 00012A35 488B4520                	mov rax, PARAM(0)	; param strings
 25439 00012A39 50                      	push rax
 25440 00012A3A 48B8-                   	mov rax, L_constants + 2135
 25440 00012A3C [5708000000000000] 
 25441 00012A44 50                      	push rax
 25442                                  	; preparing a non-tail-call
 25443                                  	; preparing a non-tail-call
 25444                                  	; preparing a non-tail-call
 25445 00012A45 488B4520                	mov rax, PARAM(0)	; param strings
 25446 00012A49 50                      	push rax
 25447 00012A4A 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 25448 00012A52 803805                  	cmp byte [rax], T_undefined
 25449 00012A55 0F84CD4A0000            	je L_error_fvar_undefined
 25450 00012A5B 50                      	push rax
 25451 00012A5C 6A02                    	push 2	; arg count
 25452 00012A5E 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 25453 00012A66 803805                  	cmp byte [rax], T_undefined
 25454 00012A69 0F84B94A0000            	je L_error_fvar_undefined
 25455 00012A6F 803804                  	cmp byte [rax], T_closure
 25456 00012A72 0F85344B0000            	jne L_error_non_closure
 25457 00012A78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25458 00012A7B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25459 00012A7E 50                      	push rax
 25460 00012A7F 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25461 00012A87 803805                  	cmp byte [rax], T_undefined
 25462 00012A8A 0F84984A0000            	je L_error_fvar_undefined
 25463 00012A90 50                      	push rax
 25464 00012A91 6A02                    	push 2	; arg count
 25465 00012A93 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 25466 00012A9B 803805                  	cmp byte [rax], T_undefined
 25467 00012A9E 0F84844A0000            	je L_error_fvar_undefined
 25468 00012AA4 803804                  	cmp byte [rax], T_closure
 25469 00012AA7 0F85FF4A0000            	jne L_error_non_closure
 25470 00012AAD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25471 00012AB0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25472 00012AB3 50                      	push rax
 25473 00012AB4 6A01                    	push 1	; arg count
 25474 00012AB6 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 25475 00012ABE 803805                  	cmp byte [rax], T_undefined
 25476 00012AC1 0F84614A0000            	je L_error_fvar_undefined
 25477 00012AC7 803804                  	cmp byte [rax], T_closure
 25478 00012ACA 0F85DC4A0000            	jne L_error_non_closure
 25479 00012AD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25480 00012AD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25481 00012AD6 50                      	push rax
 25482 00012AD7 6A03                    	push 3	; arg count
 25483 00012AD9 488B4510                	mov rax, ENV
 25484 00012ADD 488B00                  	mov rax, qword [rax + 8 * 0]
 25485 00012AE0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25486 00012AE3 488B00                  	mov rax, qword [rax]
 25487 00012AE6 803804                  	cmp byte [rax], T_closure
 25488 00012AE9 0F85BD4A0000            	jne L_error_non_closure
 25489 00012AEF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25490 00012AF2 FF7508                  	push qword [rbp + 8 * 1]
 25491                                   ; old ret addr
 25492 00012AF5 FF7500                  	push qword [rbp]
 25493                                   ; restore the old rbp
 25494 00012AF8 BB03000000              	mov rbx, 3
 25495 00012AFD 4883C303                	add rbx, 3
 25496 00012B01 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25497 00012B05 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25498 00012B0A 4C8D4DF8                	lea r9, [rbp - 8]
 25499 00012B0E B907000000              	mov rcx, 7
 25500                                  .L_tc_recycle_frame_loop_00d6:
 25501 00012B13 4883F900                	cmp rcx, 0
 25502 00012B17 7413                    	je .L_tc_recycle_frame_done_00d6
 25503 00012B19 4D8B11                  	mov r10, qword [r9]
 25504 00012B1C 4D8910                  	mov qword [r8], r10
 25505 00012B1F 4983E808                	sub r8, 8
 25506 00012B23 4983E908                	sub r9, 8
 25507 00012B27 48FFC9                  	dec rcx
 25508 00012B2A EBE7                    	jmp .L_tc_recycle_frame_loop_00d6
 25509                                  .L_tc_recycle_frame_done_00d6:
 25510 00012B2C 498D6008                	lea rsp, [r8 + 8]
 25511 00012B30 5D                      	pop rbp ; restore the old rbp
 25512 00012B31 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25513 00012B34 C9                      	leave
 25514 00012B35 C21800                  	ret 8 * (2 + 1)
 25515                                  .L_lambda_opt_end_0017:	; new closure is in rax
 25516 00012B38 C9                      	leave
 25517 00012B39 C22000                  	ret AND_KILL_FRAME(2)
 25518                                  .L_lambda_simple_end_0099:	; new closure is in rax
 25519 00012B3C 803804                  	cmp byte [rax], T_closure
 25520 00012B3F 0F85674A0000            	jne L_error_non_closure
 25521 00012B45 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25522 00012B48 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25523 00012B4B 48890425[BD150000]      	mov qword [free_var_120], rax
 25524 00012B53 48B8-                   	mov rax, sob_void
 25524 00012B55 [0000000000000000] 
 25525                                  
 25526 00012B5D 4889C7                  	mov rdi, rax
 25527 00012B60 E8454D0000              	call print_sexpr_if_not_void
 25528                                  	; preparing a non-tail-call
 25529 00012B65 48B8-                   	mov rax, L_constants + 1993
 25529 00012B67 [C907000000000000] 
 25530 00012B6F 50                      	push rax
 25531 00012B70 48B8-                   	mov rax, L_constants + 1993
 25531 00012B72 [C907000000000000] 
 25532 00012B7A 50                      	push rax
 25533 00012B7B 6A02                    	push 2	; arg count
 25534 00012B7D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25535 00012B82 E8CE4A0000              	call malloc
 25536 00012B87 50                      	push rax
 25537 00012B88 BF00000000              	mov rdi, 8 * 0	; new rib
 25538 00012B8D E8C34A0000              	call malloc
 25539 00012B92 50                      	push rax
 25540 00012B93 BF08000000              	mov rdi, 8 * 1	; extended env
 25541 00012B98 E8B84A0000              	call malloc
 25542 00012B9D 488B7D10                	mov rdi, ENV
 25543 00012BA1 BE00000000              	mov rsi, 0
 25544 00012BA6 BA01000000              	mov rdx, 1
 25545                                  .L_lambda_simple_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 25546 00012BAB 4883FE00                	cmp rsi, 0
 25547 00012BAF 7410                    	je .L_lambda_simple_env_end_009d
 25548 00012BB1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25549 00012BB5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25550 00012BB9 48FFC6                  	inc rsi
 25551 00012BBC 48FFC2                  	inc rdx
 25552 00012BBF EBEA                    	jmp .L_lambda_simple_env_loop_009d
 25553                                  .L_lambda_simple_env_end_009d:
 25554 00012BC1 5B                      	pop rbx
 25555 00012BC2 BE00000000              	mov rsi, 0
 25556                                  .L_lambda_simple_params_loop_009d:	; copy params
 25557 00012BC7 4883FE00                	cmp rsi, 0
 25558 00012BCB 740E                    	je .L_lambda_simple_params_end_009d
 25559 00012BCD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25560 00012BD2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25561 00012BD6 48FFC6                  	inc rsi
 25562 00012BD9 EBEC                    	jmp .L_lambda_simple_params_loop_009d
 25563                                  .L_lambda_simple_params_end_009d:
 25564 00012BDB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25565 00012BDE 4889C3                  	mov rbx, rax
 25566 00012BE1 58                      	pop rax
 25567 00012BE2 C60004                  	mov byte [rax], T_closure
 25568 00012BE5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25569 00012BE9 48C74009[F62B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009d
 25570 00012BF1 E9DD070000              	jmp .L_lambda_simple_end_009d
 25571                                  .L_lambda_simple_code_009d:	; lambda-simple body
 25572 00012BF6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25573 00012BFC 740B                    	je .L_lambda_simple_arity_check_ok_009d
 25574 00012BFE FF742410                	push qword [rsp + 8 * 2]
 25575 00012C02 6A02                    	push 2
 25576 00012C04 E9054A0000              	jmp L_error_incorrect_arity_simple
 25577                                  .L_lambda_simple_arity_check_ok_009d:
 25578 00012C09 C8000000                	enter 0, 0
 25579 00012C0D BF08000000              	mov rdi, 8*1
 25580 00012C12 E83E4A0000              	call malloc
 25581 00012C17 488B5D20                	mov rbx, PARAM(0)
 25582 00012C1B 488918                  	mov qword [rax], rbx
 25583 00012C1E 48894520                	mov PARAM(0), rax
 25584 00012C22 48B8-                   	mov rax, sob_void
 25584 00012C24 [0000000000000000] 
 25585                                  
 25586 00012C2C BF08000000              	mov rdi, 8*1
 25587 00012C31 E81F4A0000              	call malloc
 25588 00012C36 488B5D28                	mov rbx, PARAM(1)
 25589 00012C3A 488918                  	mov qword [rax], rbx
 25590 00012C3D 48894528                	mov PARAM(1), rax
 25591 00012C41 48B8-                   	mov rax, sob_void
 25591 00012C43 [0000000000000000] 
 25592                                  
 25593 00012C4B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25594 00012C50 E8004A0000              	call malloc
 25595 00012C55 50                      	push rax
 25596 00012C56 BF10000000              	mov rdi, 8 * 2	; new rib
 25597 00012C5B E8F5490000              	call malloc
 25598 00012C60 50                      	push rax
 25599 00012C61 BF10000000              	mov rdi, 8 * 2	; extended env
 25600 00012C66 E8EA490000              	call malloc
 25601 00012C6B 488B7D10                	mov rdi, ENV
 25602 00012C6F BE00000000              	mov rsi, 0
 25603 00012C74 BA01000000              	mov rdx, 1
 25604                                  .L_lambda_simple_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 25605 00012C79 4883FE01                	cmp rsi, 1
 25606 00012C7D 7410                    	je .L_lambda_simple_env_end_009e
 25607 00012C7F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25608 00012C83 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25609 00012C87 48FFC6                  	inc rsi
 25610 00012C8A 48FFC2                  	inc rdx
 25611 00012C8D EBEA                    	jmp .L_lambda_simple_env_loop_009e
 25612                                  .L_lambda_simple_env_end_009e:
 25613 00012C8F 5B                      	pop rbx
 25614 00012C90 BE00000000              	mov rsi, 0
 25615                                  .L_lambda_simple_params_loop_009e:	; copy params
 25616 00012C95 4883FE02                	cmp rsi, 2
 25617 00012C99 740E                    	je .L_lambda_simple_params_end_009e
 25618 00012C9B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25619 00012CA0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25620 00012CA4 48FFC6                  	inc rsi
 25621 00012CA7 EBEC                    	jmp .L_lambda_simple_params_loop_009e
 25622                                  .L_lambda_simple_params_end_009e:
 25623 00012CA9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25624 00012CAC 4889C3                  	mov rbx, rax
 25625 00012CAF 58                      	pop rax
 25626 00012CB0 C60004                  	mov byte [rax], T_closure
 25627 00012CB3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25628 00012CB7 48C74009[C42C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009e
 25629 00012CBF E97C020000              	jmp .L_lambda_simple_end_009e
 25630                                  .L_lambda_simple_code_009e:	; lambda-simple body
 25631 00012CC4 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25632 00012CCA 740B                    	je .L_lambda_simple_arity_check_ok_009e
 25633 00012CCC FF742410                	push qword [rsp + 8 * 2]
 25634 00012CD0 6A03                    	push 3
 25635 00012CD2 E937490000              	jmp L_error_incorrect_arity_simple
 25636                                  .L_lambda_simple_arity_check_ok_009e:
 25637 00012CD7 C8000000                	enter 0, 0
 25638                                  	; preparing a non-tail-call
 25639 00012CDB 488B4530                	mov rax, PARAM(2)	; param s
 25640 00012CDF 50                      	push rax
 25641 00012CE0 6A01                    	push 1	; arg count
 25642 00012CE2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 25643 00012CEA 803805                  	cmp byte [rax], T_undefined
 25644 00012CED 0F8435480000            	je L_error_fvar_undefined
 25645 00012CF3 803804                  	cmp byte [rax], T_closure
 25646 00012CF6 0F85B0480000            	jne L_error_non_closure
 25647 00012CFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 25648 00012CFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 25649 00012D02 483D[02000000]          	cmp rax, sob_boolean_false
 25650 00012D08 7409                    	je .L_if_else_007d
 25651 00012D0A 488B4520                	mov rax, PARAM(0)	; param target
 25652 00012D0E E929020000              	jmp .L_if_end_007d
 25653                                  .L_if_else_007d:
 25654                                  	; preparing a tail-call
 25655                                  	; preparing a non-tail-call
 25656                                  	; preparing a non-tail-call
 25657                                  	; preparing a non-tail-call
 25658 00012D13 488B4530                	mov rax, PARAM(2)	; param s
 25659 00012D17 50                      	push rax
 25660 00012D18 6A01                    	push 1	; arg count
 25661 00012D1A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25662 00012D22 803805                  	cmp byte [rax], T_undefined
 25663 00012D25 0F84FD470000            	je L_error_fvar_undefined
 25664 00012D2B 803804                  	cmp byte [rax], T_closure
 25665 00012D2E 0F8578480000            	jne L_error_non_closure
 25666 00012D34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25667 00012D37 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25668 00012D3A 50                      	push rax
 25669 00012D3B 6A01                    	push 1	; arg count
 25670 00012D3D 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25671 00012D45 803805                  	cmp byte [rax], T_undefined
 25672 00012D48 0F84DA470000            	je L_error_fvar_undefined
 25673 00012D4E 803804                  	cmp byte [rax], T_closure
 25674 00012D51 0F8555480000            	jne L_error_non_closure
 25675 00012D57 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25676 00012D5A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25677 00012D5D 50                      	push rax
 25678 00012D5E 48B8-                   	mov rax, L_constants + 2135
 25678 00012D60 [5708000000000000] 
 25679 00012D68 50                      	push rax
 25680                                  	; preparing a non-tail-call
 25681 00012D69 488B4530                	mov rax, PARAM(2)	; param s
 25682 00012D6D 50                      	push rax
 25683 00012D6E 6A01                    	push 1	; arg count
 25684 00012D70 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25685 00012D78 803805                  	cmp byte [rax], T_undefined
 25686 00012D7B 0F84A7470000            	je L_error_fvar_undefined
 25687 00012D81 803804                  	cmp byte [rax], T_closure
 25688 00012D84 0F8522480000            	jne L_error_non_closure
 25689 00012D8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25690 00012D8D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25691 00012D90 50                      	push rax
 25692 00012D91 488B4528                	mov rax, PARAM(1)	; param i
 25693 00012D95 50                      	push rax
 25694 00012D96 488B4520                	mov rax, PARAM(0)	; param target
 25695 00012D9A 50                      	push rax
 25696 00012D9B 6A05                    	push 5	; arg count
 25697 00012D9D 488B4510                	mov rax, ENV
 25698 00012DA1 488B00                  	mov rax, qword [rax + 8 * 0]
 25699 00012DA4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25700 00012DA8 488B00                  	mov rax, qword [rax]
 25701 00012DAB 803804                  	cmp byte [rax], T_closure
 25702 00012DAE 0F85F8470000            	jne L_error_non_closure
 25703 00012DB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25704 00012DB7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25705 00012DBA 50                      	push rax
 25706 00012DBB 6A01                    	push 1	; arg count
 25707 00012DBD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25708 00012DC2 E88E480000              	call malloc
 25709 00012DC7 50                      	push rax
 25710 00012DC8 BF18000000              	mov rdi, 8 * 3	; new rib
 25711 00012DCD E883480000              	call malloc
 25712 00012DD2 50                      	push rax
 25713 00012DD3 BF18000000              	mov rdi, 8 * 3	; extended env
 25714 00012DD8 E878480000              	call malloc
 25715 00012DDD 488B7D10                	mov rdi, ENV
 25716 00012DE1 BE00000000              	mov rsi, 0
 25717 00012DE6 BA01000000              	mov rdx, 1
 25718                                  .L_lambda_simple_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 25719 00012DEB 4883FE02                	cmp rsi, 2
 25720 00012DEF 7410                    	je .L_lambda_simple_env_end_009f
 25721 00012DF1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25722 00012DF5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25723 00012DF9 48FFC6                  	inc rsi
 25724 00012DFC 48FFC2                  	inc rdx
 25725 00012DFF EBEA                    	jmp .L_lambda_simple_env_loop_009f
 25726                                  .L_lambda_simple_env_end_009f:
 25727 00012E01 5B                      	pop rbx
 25728 00012E02 BE00000000              	mov rsi, 0
 25729                                  .L_lambda_simple_params_loop_009f:	; copy params
 25730 00012E07 4883FE03                	cmp rsi, 3
 25731 00012E0B 740E                    	je .L_lambda_simple_params_end_009f
 25732 00012E0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25733 00012E12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25734 00012E16 48FFC6                  	inc rsi
 25735 00012E19 EBEC                    	jmp .L_lambda_simple_params_loop_009f
 25736                                  .L_lambda_simple_params_end_009f:
 25737 00012E1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25738 00012E1E 4889C3                  	mov rbx, rax
 25739 00012E21 58                      	pop rax
 25740 00012E22 C60004                  	mov byte [rax], T_closure
 25741 00012E25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25742 00012E29 48C74009[362E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009f
 25743 00012E31 E9B8000000              	jmp .L_lambda_simple_end_009f
 25744                                  .L_lambda_simple_code_009f:	; lambda-simple body
 25745 00012E36 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25746 00012E3C 740B                    	je .L_lambda_simple_arity_check_ok_009f
 25747 00012E3E FF742410                	push qword [rsp + 8 * 2]
 25748 00012E42 6A01                    	push 1
 25749 00012E44 E9C5470000              	jmp L_error_incorrect_arity_simple
 25750                                  .L_lambda_simple_arity_check_ok_009f:
 25751 00012E49 C8000000                	enter 0, 0
 25752                                  	; preparing a tail-call
 25753                                  	; preparing a non-tail-call
 25754 00012E4D 488B4510                	mov rax, ENV
 25755 00012E51 488B00                  	mov rax, qword [rax + 8 * 0]
 25756 00012E54 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25757 00012E58 50                      	push rax
 25758 00012E59 6A01                    	push 1	; arg count
 25759 00012E5B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25760 00012E63 803805                  	cmp byte [rax], T_undefined
 25761 00012E66 0F84BC460000            	je L_error_fvar_undefined
 25762 00012E6C 803804                  	cmp byte [rax], T_closure
 25763 00012E6F 0F8537470000            	jne L_error_non_closure
 25764 00012E75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25765 00012E78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25766 00012E7B 50                      	push rax
 25767 00012E7C 488B4520                	mov rax, PARAM(0)	; param i
 25768 00012E80 50                      	push rax
 25769 00012E81 488B4510                	mov rax, ENV
 25770 00012E85 488B00                  	mov rax, qword [rax + 8 * 0]
 25771 00012E88 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25772 00012E8B 50                      	push rax
 25773 00012E8C 6A03                    	push 3	; arg count
 25774 00012E8E 488B4510                	mov rax, ENV
 25775 00012E92 488B4008                	mov rax, qword [rax + 8 * 1]
 25776 00012E96 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25777 00012E99 488B00                  	mov rax, qword [rax]
 25778 00012E9C 803804                  	cmp byte [rax], T_closure
 25779 00012E9F 0F8507470000            	jne L_error_non_closure
 25780 00012EA5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25781 00012EA8 FF7508                  	push qword [rbp + 8 * 1]
 25782                                   ; old ret addr
 25783 00012EAB FF7500                  	push qword [rbp]
 25784                                   ; restore the old rbp
 25785 00012EAE BB03000000              	mov rbx, 3
 25786 00012EB3 4883C303                	add rbx, 3
 25787 00012EB7 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25788 00012EBB 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25789 00012EC0 4C8D4DF8                	lea r9, [rbp - 8]
 25790 00012EC4 B907000000              	mov rcx, 7
 25791                                  .L_tc_recycle_frame_loop_00d8:
 25792 00012EC9 4883F900                	cmp rcx, 0
 25793 00012ECD 7413                    	je .L_tc_recycle_frame_done_00d8
 25794 00012ECF 4D8B11                  	mov r10, qword [r9]
 25795 00012ED2 4D8910                  	mov qword [r8], r10
 25796 00012ED5 4983E808                	sub r8, 8
 25797 00012ED9 4983E908                	sub r9, 8
 25798 00012EDD 48FFC9                  	dec rcx
 25799 00012EE0 EBE7                    	jmp .L_tc_recycle_frame_loop_00d8
 25800                                  .L_tc_recycle_frame_done_00d8:
 25801 00012EE2 498D6008                	lea rsp, [r8 + 8]
 25802 00012EE6 5D                      	pop rbp ; restore the old rbp
 25803 00012EE7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25804 00012EEA C9                      	leave
 25805 00012EEB C21800                  	ret AND_KILL_FRAME(1)
 25806                                  .L_lambda_simple_end_009f:	; new closure is in rax
 25807 00012EEE 803804                  	cmp byte [rax], T_closure
 25808 00012EF1 0F85B5460000            	jne L_error_non_closure
 25809 00012EF7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25810 00012EFA FF7508                  	push qword [rbp + 8 * 1]
 25811                                   ; old ret addr
 25812 00012EFD FF7500                  	push qword [rbp]
 25813                                   ; restore the old rbp
 25814 00012F00 BB01000000              	mov rbx, 1
 25815 00012F05 4883C303                	add rbx, 3
 25816 00012F09 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25817 00012F0D 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25818 00012F12 4C8D4DF8                	lea r9, [rbp - 8]
 25819 00012F16 B905000000              	mov rcx, 5
 25820                                  .L_tc_recycle_frame_loop_00d7:
 25821 00012F1B 4883F900                	cmp rcx, 0
 25822 00012F1F 7413                    	je .L_tc_recycle_frame_done_00d7
 25823 00012F21 4D8B11                  	mov r10, qword [r9]
 25824 00012F24 4D8910                  	mov qword [r8], r10
 25825 00012F27 4983E808                	sub r8, 8
 25826 00012F2B 4983E908                	sub r9, 8
 25827 00012F2F 48FFC9                  	dec rcx
 25828 00012F32 EBE7                    	jmp .L_tc_recycle_frame_loop_00d7
 25829                                  .L_tc_recycle_frame_done_00d7:
 25830 00012F34 498D6008                	lea rsp, [r8 + 8]
 25831 00012F38 5D                      	pop rbp ; restore the old rbp
 25832 00012F39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25833                                  .L_if_end_007d:
 25834 00012F3C C9                      	leave
 25835 00012F3D C22800                  	ret AND_KILL_FRAME(3)
 25836                                  .L_lambda_simple_end_009e:	; new closure is in rax
 25837 00012F40 50                      	push rax
 25838 00012F41 488B4520                	mov rax, PARAM(0)	; param run
 25839 00012F45 8F00                    	pop qword [rax]
 25840 00012F47 48B8-                   	mov rax, sob_void
 25840 00012F49 [0000000000000000] 
 25841                                  
 25842 00012F51 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25843 00012F56 E8FA460000              	call malloc
 25844 00012F5B 50                      	push rax
 25845 00012F5C BF10000000              	mov rdi, 8 * 2	; new rib
 25846 00012F61 E8EF460000              	call malloc
 25847 00012F66 50                      	push rax
 25848 00012F67 BF10000000              	mov rdi, 8 * 2	; extended env
 25849 00012F6C E8E4460000              	call malloc
 25850 00012F71 488B7D10                	mov rdi, ENV
 25851 00012F75 BE00000000              	mov rsi, 0
 25852 00012F7A BA01000000              	mov rdx, 1
 25853                                  .L_lambda_simple_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 25854 00012F7F 4883FE01                	cmp rsi, 1
 25855 00012F83 7410                    	je .L_lambda_simple_env_end_00a0
 25856 00012F85 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25857 00012F89 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25858 00012F8D 48FFC6                  	inc rsi
 25859 00012F90 48FFC2                  	inc rdx
 25860 00012F93 EBEA                    	jmp .L_lambda_simple_env_loop_00a0
 25861                                  .L_lambda_simple_env_end_00a0:
 25862 00012F95 5B                      	pop rbx
 25863 00012F96 BE00000000              	mov rsi, 0
 25864                                  .L_lambda_simple_params_loop_00a0:	; copy params
 25865 00012F9B 4883FE02                	cmp rsi, 2
 25866 00012F9F 740E                    	je .L_lambda_simple_params_end_00a0
 25867 00012FA1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25868 00012FA6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25869 00012FAA 48FFC6                  	inc rsi
 25870 00012FAD EBEC                    	jmp .L_lambda_simple_params_loop_00a0
 25871                                  .L_lambda_simple_params_end_00a0:
 25872 00012FAF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25873 00012FB2 4889C3                  	mov rbx, rax
 25874 00012FB5 58                      	pop rax
 25875 00012FB6 C60004                  	mov byte [rax], T_closure
 25876 00012FB9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25877 00012FBD 48C74009[CA2F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a0
 25878 00012FC5 E985010000              	jmp .L_lambda_simple_end_00a0
 25879                                  .L_lambda_simple_code_00a0:	; lambda-simple body
 25880 00012FCA 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25881 00012FD0 740B                    	je .L_lambda_simple_arity_check_ok_00a0
 25882 00012FD2 FF742410                	push qword [rsp + 8 * 2]
 25883 00012FD6 6A05                    	push 5
 25884 00012FD8 E931460000              	jmp L_error_incorrect_arity_simple
 25885                                  .L_lambda_simple_arity_check_ok_00a0:
 25886 00012FDD C8000000                	enter 0, 0
 25887                                  	; preparing a non-tail-call
 25888 00012FE1 488B4540                	mov rax, PARAM(4)	; param limit
 25889 00012FE5 50                      	push rax
 25890 00012FE6 488B4538                	mov rax, PARAM(3)	; param j
 25891 00012FEA 50                      	push rax
 25892 00012FEB 6A02                    	push 2	; arg count
 25893 00012FED 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 25894 00012FF5 803805                  	cmp byte [rax], T_undefined
 25895 00012FF8 0F842A450000            	je L_error_fvar_undefined
 25896 00012FFE 803804                  	cmp byte [rax], T_closure
 25897 00013001 0F85A5450000            	jne L_error_non_closure
 25898 00013007 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25899 0001300A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25900 0001300D 483D[02000000]          	cmp rax, sob_boolean_false
 25901 00013013 0F842E010000            	je .L_if_else_007e
 25902                                  	; preparing a non-tail-call
 25903                                  	; preparing a non-tail-call
 25904 00013019 488B4538                	mov rax, PARAM(3)	; param j
 25905 0001301D 50                      	push rax
 25906 0001301E 488B4530                	mov rax, PARAM(2)	; param vec
 25907 00013022 50                      	push rax
 25908 00013023 6A02                    	push 2	; arg count
 25909 00013025 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 25910 0001302D 803805                  	cmp byte [rax], T_undefined
 25911 00013030 0F84F2440000            	je L_error_fvar_undefined
 25912 00013036 803804                  	cmp byte [rax], T_closure
 25913 00013039 0F856D450000            	jne L_error_non_closure
 25914 0001303F FF7001                  	push SOB_CLOSURE_ENV(rax)
 25915 00013042 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25916 00013045 50                      	push rax
 25917 00013046 488B4528                	mov rax, PARAM(1)	; param i
 25918 0001304A 50                      	push rax
 25919 0001304B 488B4520                	mov rax, PARAM(0)	; param target
 25920 0001304F 50                      	push rax
 25921 00013050 6A03                    	push 3	; arg count
 25922 00013052 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 25923 0001305A 803805                  	cmp byte [rax], T_undefined
 25924 0001305D 0F84C5440000            	je L_error_fvar_undefined
 25925 00013063 803804                  	cmp byte [rax], T_closure
 25926 00013066 0F8540450000            	jne L_error_non_closure
 25927 0001306C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25928 0001306F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25929                                  
 25930                                  	; preparing a tail-call
 25931 00013072 488B4540                	mov rax, PARAM(4)	; param limit
 25932 00013076 50                      	push rax
 25933                                  	; preparing a non-tail-call
 25934 00013077 48B8-                   	mov rax, L_constants + 2270
 25934 00013079 [DE08000000000000] 
 25935 00013081 50                      	push rax
 25936 00013082 488B4538                	mov rax, PARAM(3)	; param j
 25937 00013086 50                      	push rax
 25938 00013087 6A02                    	push 2	; arg count
 25939 00013089 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25940 00013091 803805                  	cmp byte [rax], T_undefined
 25941 00013094 0F848E440000            	je L_error_fvar_undefined
 25942 0001309A 803804                  	cmp byte [rax], T_closure
 25943 0001309D 0F8509450000            	jne L_error_non_closure
 25944 000130A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25945 000130A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25946 000130A9 50                      	push rax
 25947 000130AA 488B4530                	mov rax, PARAM(2)	; param vec
 25948 000130AE 50                      	push rax
 25949                                  	; preparing a non-tail-call
 25950 000130AF 48B8-                   	mov rax, L_constants + 2270
 25950 000130B1 [DE08000000000000] 
 25951 000130B9 50                      	push rax
 25952 000130BA 488B4528                	mov rax, PARAM(1)	; param i
 25953 000130BE 50                      	push rax
 25954 000130BF 6A02                    	push 2	; arg count
 25955 000130C1 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25956 000130C9 803805                  	cmp byte [rax], T_undefined
 25957 000130CC 0F8456440000            	je L_error_fvar_undefined
 25958 000130D2 803804                  	cmp byte [rax], T_closure
 25959 000130D5 0F85D1440000            	jne L_error_non_closure
 25960 000130DB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25961 000130DE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25962 000130E1 50                      	push rax
 25963 000130E2 488B4520                	mov rax, PARAM(0)	; param target
 25964 000130E6 50                      	push rax
 25965 000130E7 6A05                    	push 5	; arg count
 25966 000130E9 488B4510                	mov rax, ENV
 25967 000130ED 488B00                  	mov rax, qword [rax + 8 * 0]
 25968 000130F0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25969 000130F4 488B00                  	mov rax, qword [rax]
 25970 000130F7 803804                  	cmp byte [rax], T_closure
 25971 000130FA 0F85AC440000            	jne L_error_non_closure
 25972 00013100 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25973 00013103 FF7508                  	push qword [rbp + 8 * 1]
 25974                                   ; old ret addr
 25975 00013106 FF7500                  	push qword [rbp]
 25976                                   ; restore the old rbp
 25977 00013109 BB05000000              	mov rbx, 5
 25978 0001310E 4883C303                	add rbx, 3
 25979 00013112 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 25980 00013116 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 25981 0001311B 4C8D4DF8                	lea r9, [rbp - 8]
 25982 0001311F B909000000              	mov rcx, 9
 25983                                  .L_tc_recycle_frame_loop_00d9:
 25984 00013124 4883F900                	cmp rcx, 0
 25985 00013128 7413                    	je .L_tc_recycle_frame_done_00d9
 25986 0001312A 4D8B11                  	mov r10, qword [r9]
 25987 0001312D 4D8910                  	mov qword [r8], r10
 25988 00013130 4983E808                	sub r8, 8
 25989 00013134 4983E908                	sub r9, 8
 25990 00013138 48FFC9                  	dec rcx
 25991 0001313B EBE7                    	jmp .L_tc_recycle_frame_loop_00d9
 25992                                  .L_tc_recycle_frame_done_00d9:
 25993 0001313D 498D6008                	lea rsp, [r8 + 8]
 25994 00013141 5D                      	pop rbp ; restore the old rbp
 25995 00013142 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25996 00013145 EB04                    	jmp .L_if_end_007e
 25997                                  .L_if_else_007e:
 25998 00013147 488B4528                	mov rax, PARAM(1)	; param i
 25999                                  .L_if_end_007e:
 26000 0001314B C9                      	leave
 26001 0001314C C23800                  	ret AND_KILL_FRAME(5)
 26002                                  .L_lambda_simple_end_00a0:	; new closure is in rax
 26003 0001314F 50                      	push rax
 26004 00013150 488B4528                	mov rax, PARAM(1)	; param add
 26005 00013154 8F00                    	pop qword [rax]
 26006 00013156 48B8-                   	mov rax, sob_void
 26006 00013158 [0000000000000000] 
 26007                                  
 26008 00013160 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26009 00013165 E8EB440000              	call malloc
 26010 0001316A 50                      	push rax
 26011 0001316B BF10000000              	mov rdi, 8 * 2	; new rib
 26012 00013170 E8E0440000              	call malloc
 26013 00013175 50                      	push rax
 26014 00013176 BF10000000              	mov rdi, 8 * 2	; extended env
 26015 0001317B E8D5440000              	call malloc
 26016 00013180 488B7D10                	mov rdi, ENV
 26017 00013184 4831F6                  	 xor rsi, rsi
 26018 00013187 4831D2                  	 xor rdx, rdx
 26019 0001318A 48FFC2                  	inc rdx
 26020                                  .L_lambda_opt_env_loop_0018:	; 
 26021 0001318D 4883FE01                	cmp rsi, 1
 26022 00013191 7410                    	je .L_lambda_opt_env_end_0018
 26023 00013193 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26024 00013197 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26025 0001319B 48FFC6                  	inc rsi
 26026 0001319E 48FFC2                  	inc rdx
 26027 000131A1 EBEA                    	jmp .L_lambda_opt_env_loop_0018
 26028                                  .L_lambda_opt_env_end_0018:
 26029 000131A3 5B                      	pop rbx
 26030 000131A4 4831F6                  	xor rsi, rsi
 26031                                  .L_lambda_opt_params_loop_0018:	; copy params
 26032 000131A7 4883FE02                	cmp rsi, 2
 26033 000131AB 740E                    	je .L_lambda_opt_params_end_0018
 26034 000131AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26035 000131B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26036 000131B6 48FFC6                  	inc rsi
 26037 000131B9 EBEC                    	jmp .L_lambda_opt_params_loop_0018
 26038                                  .L_lambda_opt_params_end_0018:
 26039 000131BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26040 000131BE 4889C3                  	mov rbx, rax
 26041 000131C1 58                      	pop rax
 26042 000131C2 C60004                  	mov byte [rax], T_closure
 26043 000131C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26044 000131C9 48C74009[D6310100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0018
 26045 000131D1 E9F9010000              	jmp .L_lambda_opt_end_0018
 26046                                  .L_lambda_opt_code_0018:
 26047 000131D6 4C8B7C2410              	mov r15, qword [rsp + 8 * 2]
 26048 000131DB 4983FF00                	cmp r15, 0
 26049 000131DF 7409                    	je .L_lambda_opt_arity_check_exact_0018
 26050 000131E1 7F57                    	jg .L_lambda_opt_arity_check_more_0018
 26051 000131E3 6A00                    	push 0
 26052 000131E5 E938440000              	jmp L_error_incorrect_arity_opt
 26053                                  .L_lambda_opt_arity_check_exact_0018: ;Exact case
 26054 000131EA 4C8B0424                	mov r8, qword [rsp -8 * 0]
 26055 000131EE 4C894424F8              	mov qword [rsp -8], r8
 26056 000131F3 4C8B442408              	mov r8, qword [rsp +8]
 26057 000131F8 4C890424                	mov qword [rsp +8 * 0], r8
 26058 000131FC 4C8B442410              	mov r8, qword [rsp +8 * 2]
 26059 00013201 4C89C1                  	mov rcx, r8
 26060 00013204 49FFC0                  	inc r8
 26061 00013207 4C89442408              	mov qword [rsp +8], r8
 26062 0001320C 4889E2                  	mov rdx, rsp
 26063 0001320F 4883C218                	add rdx, 24
 26064                                  .L_lambda_opt_loop_copy_to_new_frame_exact_0018:
 26065 00013213 4883F900                	cmp rcx, 0
 26066 00013217 7410                    	je .L_lambda_opt_loop_copy_to_new_frame_exact_end_0018
 26067 00013219 4C8B02                  	mov r8, qword [rdx]
 26068 0001321C 4C8942F8                	mov qword [rdx - 8], r8
 26069 00013220 4883C208                	add rdx, 8
 26070 00013224 48FFC9                  	dec rcx
 26071 00013227 EBEA                    	jmp .L_lambda_opt_loop_copy_to_new_frame_exact_0018
 26072                                  .L_lambda_opt_loop_copy_to_new_frame_exact_end_0018:
 26073 00013229 48C742F8[01000000]      	mov qword [rdx - 8], sob_nil
 26074 00013231 4883EC08                	sub rsp, 8
 26075 00013235 E985000000              	jmp .L_lambda_opt_stack_adjusted_0018
 26076                                  .L_lambda_opt_arity_check_more_0018:
 26077 0001323A 4C8B442410              	mov r8, qword [rsp + 8 * 2]
 26078 0001323F 4D89C4                  	mov r12, r8
 26079 00013242 4C89C1                  	mov rcx, r8
 26080 00013245 4D8D6802                	lea r13, [r8 + 2] 
 26081 00013249 4883E900                	sub rcx, 0
 26082 0001324D 4E8D5CC410              	lea r11, qword [rsp + r8 * 8 + 16]
 26083 00013252 49BE-                   	mov r14, sob_nil
 26083 00013254 [0100000000000000] 
 26084                                  .L_lambda_opt_create_list_of_opt_params_0018:
 26085 0001325C 4883F900                	cmp rcx, 0
 26086 00013260 7424                    	je .L_lambda_opt_create_list_of_opt_params_end_0018
 26087 00013262 BF11000000              	mov rdi, 17
 26088 00013267 E8E9430000              	call malloc
 26089 0001326C C60021                  	mov byte [rax], T_pair
 26090 0001326F 498B1B                  	mov rbx, qword [r11]
 26091 00013272 48895801                	mov qword [rax +1], rbx
 26092 00013276 4C897009                	mov qword [rax + 1 + 8], r14
 26093 0001327A 4989C6                  	mov r14, rax
 26094 0001327D 48FFC9                  	dec rcx
 26095 00013280 4983EB08                	sub r11, 8
 26096 00013284 EBD6                    	jmp .L_lambda_opt_create_list_of_opt_params_0018
 26097                                  .L_lambda_opt_create_list_of_opt_params_end_0018:
 26098 00013286 4C8D542418              	lea r10, [rsp + 0*8 + 8*3]
 26099 0001328B 4D8932                  	mov qword [r10], r14
 26100 0001328E 4E8D2CED00000000        	lea r13, [8 * r13]
 26101 00013296 4901E5                  	add r13, rsp
 26102 00013299 B904000000              	mov rcx, 4 + 0
 26103                                  .L_lambda_opt_stack_shrink_loop_0018:
 26104 0001329E 4883F900                	cmp rcx, 0
 26105 000132A2 7414                    	je .L_lambda_opt_stack_shrink_loop_exit_0018
 26106 000132A4 4D8B1A                  	mov r11, qword [r10]
 26107 000132A7 4D895D00                	mov qword [r13], r11
 26108 000132AB 4983EA08                	sub r10, 8
 26109 000132AF 4983ED08                	sub r13, 8
 26110 000132B3 48FFC9                  	dec rcx
 26111 000132B6 EBE6                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 26112                                  .L_lambda_opt_stack_shrink_loop_exit_0018:
 26113 000132B8 4983C508                	add r13, 8
 26114 000132BC 4C89EC                  	mov rsp, r13
 26115                                  .L_lambda_opt_stack_adjusted_0018:
 26116 000132BF 48C744241001000000      	mov qword [rsp + 8*2], 1
 26117 000132C8 C8000000                	enter 0, 0
 26118                                  	; preparing a tail-call
 26119 000132CC 488B4520                	mov rax, PARAM(0)	; param vectors
 26120 000132D0 50                      	push rax
 26121 000132D1 48B8-                   	mov rax, L_constants + 2135
 26121 000132D3 [5708000000000000] 
 26122 000132DB 50                      	push rax
 26123                                  	; preparing a non-tail-call
 26124                                  	; preparing a non-tail-call
 26125                                  	; preparing a non-tail-call
 26126 000132DC 488B4520                	mov rax, PARAM(0)	; param vectors
 26127 000132E0 50                      	push rax
 26128 000132E1 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26129 000132E9 803805                  	cmp byte [rax], T_undefined
 26130 000132EC 0F8436420000            	je L_error_fvar_undefined
 26131 000132F2 50                      	push rax
 26132 000132F3 6A02                    	push 2	; arg count
 26133 000132F5 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 26134 000132FD 803805                  	cmp byte [rax], T_undefined
 26135 00013300 0F8422420000            	je L_error_fvar_undefined
 26136 00013306 803804                  	cmp byte [rax], T_closure
 26137 00013309 0F859D420000            	jne L_error_non_closure
 26138 0001330F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26139 00013312 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26140 00013315 50                      	push rax
 26141 00013316 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26142 0001331E 803805                  	cmp byte [rax], T_undefined
 26143 00013321 0F8401420000            	je L_error_fvar_undefined
 26144 00013327 50                      	push rax
 26145 00013328 6A02                    	push 2	; arg count
 26146 0001332A 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 26147 00013332 803805                  	cmp byte [rax], T_undefined
 26148 00013335 0F84ED410000            	je L_error_fvar_undefined
 26149 0001333B 803804                  	cmp byte [rax], T_closure
 26150 0001333E 0F8568420000            	jne L_error_non_closure
 26151 00013344 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26152 00013347 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26153 0001334A 50                      	push rax
 26154 0001334B 6A01                    	push 1	; arg count
 26155 0001334D 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 26156 00013355 803805                  	cmp byte [rax], T_undefined
 26157 00013358 0F84CA410000            	je L_error_fvar_undefined
 26158 0001335E 803804                  	cmp byte [rax], T_closure
 26159 00013361 0F8545420000            	jne L_error_non_closure
 26160 00013367 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26161 0001336A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26162 0001336D 50                      	push rax
 26163 0001336E 6A03                    	push 3	; arg count
 26164 00013370 488B4510                	mov rax, ENV
 26165 00013374 488B00                  	mov rax, qword [rax + 8 * 0]
 26166 00013377 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26167 0001337A 488B00                  	mov rax, qword [rax]
 26168 0001337D 803804                  	cmp byte [rax], T_closure
 26169 00013380 0F8526420000            	jne L_error_non_closure
 26170 00013386 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26171 00013389 FF7508                  	push qword [rbp + 8 * 1]
 26172                                   ; old ret addr
 26173 0001338C FF7500                  	push qword [rbp]
 26174                                   ; restore the old rbp
 26175 0001338F BB03000000              	mov rbx, 3
 26176 00013394 4883C303                	add rbx, 3
 26177 00013398 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26178 0001339C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26179 000133A1 4C8D4DF8                	lea r9, [rbp - 8]
 26180 000133A5 B907000000              	mov rcx, 7
 26181                                  .L_tc_recycle_frame_loop_00da:
 26182 000133AA 4883F900                	cmp rcx, 0
 26183 000133AE 7413                    	je .L_tc_recycle_frame_done_00da
 26184 000133B0 4D8B11                  	mov r10, qword [r9]
 26185 000133B3 4D8910                  	mov qword [r8], r10
 26186 000133B6 4983E808                	sub r8, 8
 26187 000133BA 4983E908                	sub r9, 8
 26188 000133BE 48FFC9                  	dec rcx
 26189 000133C1 EBE7                    	jmp .L_tc_recycle_frame_loop_00da
 26190                                  .L_tc_recycle_frame_done_00da:
 26191 000133C3 498D6008                	lea rsp, [r8 + 8]
 26192 000133C7 5D                      	pop rbp ; restore the old rbp
 26193 000133C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26194 000133CB C9                      	leave
 26195 000133CC C21800                  	ret 8 * (2 + 1)
 26196                                  .L_lambda_opt_end_0018:	; new closure is in rax
 26197 000133CF C9                      	leave
 26198 000133D0 C22000                  	ret AND_KILL_FRAME(2)
 26199                                  .L_lambda_simple_end_009d:	; new closure is in rax
 26200 000133D3 803804                  	cmp byte [rax], T_closure
 26201 000133D6 0F85D0410000            	jne L_error_non_closure
 26202 000133DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26203 000133DF FF5009                  	call SOB_CLOSURE_CODE(rax)
 26204 000133E2 48890425[33170000]      	mov qword [free_var_142], rax
 26205 000133EA 48B8-                   	mov rax, sob_void
 26205 000133EC [0000000000000000] 
 26206                                  
 26207 000133F4 4889C7                  	mov rdi, rax
 26208 000133F7 E8AE440000              	call print_sexpr_if_not_void
 26209 000133FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26210 00013401 E84F420000              	call malloc
 26211 00013406 50                      	push rax
 26212 00013407 BF00000000              	mov rdi, 8 * 0	; new rib
 26213 0001340C E844420000              	call malloc
 26214 00013411 50                      	push rax
 26215 00013412 BF08000000              	mov rdi, 8 * 1	; extended env
 26216 00013417 E839420000              	call malloc
 26217 0001341C 488B7D10                	mov rdi, ENV
 26218 00013420 BE00000000              	mov rsi, 0
 26219 00013425 BA01000000              	mov rdx, 1
 26220                                  .L_lambda_simple_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 26221 0001342A 4883FE00                	cmp rsi, 0
 26222 0001342E 7410                    	je .L_lambda_simple_env_end_00a1
 26223 00013430 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26224 00013434 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26225 00013438 48FFC6                  	inc rsi
 26226 0001343B 48FFC2                  	inc rdx
 26227 0001343E EBEA                    	jmp .L_lambda_simple_env_loop_00a1
 26228                                  .L_lambda_simple_env_end_00a1:
 26229 00013440 5B                      	pop rbx
 26230 00013441 BE00000000              	mov rsi, 0
 26231                                  .L_lambda_simple_params_loop_00a1:	; copy params
 26232 00013446 4883FE00                	cmp rsi, 0
 26233 0001344A 740E                    	je .L_lambda_simple_params_end_00a1
 26234 0001344C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26235 00013451 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26236 00013455 48FFC6                  	inc rsi
 26237 00013458 EBEC                    	jmp .L_lambda_simple_params_loop_00a1
 26238                                  .L_lambda_simple_params_end_00a1:
 26239 0001345A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26240 0001345D 4889C3                  	mov rbx, rax
 26241 00013460 58                      	pop rax
 26242 00013461 C60004                  	mov byte [rax], T_closure
 26243 00013464 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26244 00013468 48C74009[75340100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a1
 26245 00013470 E9C7000000              	jmp .L_lambda_simple_end_00a1
 26246                                  .L_lambda_simple_code_00a1:	; lambda-simple body
 26247 00013475 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26248 0001347B 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 26249 0001347D FF742410                	push qword [rsp + 8 * 2]
 26250 00013481 6A01                    	push 1
 26251 00013483 E986410000              	jmp L_error_incorrect_arity_simple
 26252                                  .L_lambda_simple_arity_check_ok_00a1:
 26253 00013488 C8000000                	enter 0, 0
 26254                                  	; preparing a tail-call
 26255                                  	; preparing a non-tail-call
 26256                                  	; preparing a non-tail-call
 26257 0001348C 488B4520                	mov rax, PARAM(0)	; param str
 26258 00013490 50                      	push rax
 26259 00013491 6A01                    	push 1	; arg count
 26260 00013493 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 26261 0001349B 803805                  	cmp byte [rax], T_undefined
 26262 0001349E 0F8484400000            	je L_error_fvar_undefined
 26263 000134A4 803804                  	cmp byte [rax], T_closure
 26264 000134A7 0F85FF400000            	jne L_error_non_closure
 26265 000134AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 26266 000134B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26267 000134B3 50                      	push rax
 26268 000134B4 6A01                    	push 1	; arg count
 26269 000134B6 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 26270 000134BE 803805                  	cmp byte [rax], T_undefined
 26271 000134C1 0F8461400000            	je L_error_fvar_undefined
 26272 000134C7 803804                  	cmp byte [rax], T_closure
 26273 000134CA 0F85DC400000            	jne L_error_non_closure
 26274 000134D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26275 000134D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26276 000134D6 50                      	push rax
 26277 000134D7 6A01                    	push 1	; arg count
 26278 000134D9 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 26279 000134E1 803805                  	cmp byte [rax], T_undefined
 26280 000134E4 0F843E400000            	je L_error_fvar_undefined
 26281 000134EA 803804                  	cmp byte [rax], T_closure
 26282 000134ED 0F85B9400000            	jne L_error_non_closure
 26283 000134F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26284 000134F6 FF7508                  	push qword [rbp + 8 * 1]
 26285                                   ; old ret addr
 26286 000134F9 FF7500                  	push qword [rbp]
 26287                                   ; restore the old rbp
 26288 000134FC BB01000000              	mov rbx, 1
 26289 00013501 4883C303                	add rbx, 3
 26290 00013505 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26291 00013509 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26292 0001350E 4C8D4DF8                	lea r9, [rbp - 8]
 26293 00013512 B905000000              	mov rcx, 5
 26294                                  .L_tc_recycle_frame_loop_00db:
 26295 00013517 4883F900                	cmp rcx, 0
 26296 0001351B 7413                    	je .L_tc_recycle_frame_done_00db
 26297 0001351D 4D8B11                  	mov r10, qword [r9]
 26298 00013520 4D8910                  	mov qword [r8], r10
 26299 00013523 4983E808                	sub r8, 8
 26300 00013527 4983E908                	sub r9, 8
 26301 0001352B 48FFC9                  	dec rcx
 26302 0001352E EBE7                    	jmp .L_tc_recycle_frame_loop_00db
 26303                                  .L_tc_recycle_frame_done_00db:
 26304 00013530 498D6008                	lea rsp, [r8 + 8]
 26305 00013534 5D                      	pop rbp ; restore the old rbp
 26306 00013535 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26307 00013538 C9                      	leave
 26308 00013539 C21800                  	ret AND_KILL_FRAME(1)
 26309                                  .L_lambda_simple_end_00a1:	; new closure is in rax
 26310 0001353C 48890425[56160000]      	mov qword [free_var_129], rax
 26311 00013544 48B8-                   	mov rax, sob_void
 26311 00013546 [0000000000000000] 
 26312                                  
 26313 0001354E 4889C7                  	mov rdi, rax
 26314 00013551 E854430000              	call print_sexpr_if_not_void
 26315 00013556 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26316 0001355B E8F5400000              	call malloc
 26317 00013560 50                      	push rax
 26318 00013561 BF00000000              	mov rdi, 8 * 0	; new rib
 26319 00013566 E8EA400000              	call malloc
 26320 0001356B 50                      	push rax
 26321 0001356C BF08000000              	mov rdi, 8 * 1	; extended env
 26322 00013571 E8DF400000              	call malloc
 26323 00013576 488B7D10                	mov rdi, ENV
 26324 0001357A BE00000000              	mov rsi, 0
 26325 0001357F BA01000000              	mov rdx, 1
 26326                                  .L_lambda_simple_env_loop_00a2:	; ext_env[i + 1] <-- env[i]
 26327 00013584 4883FE00                	cmp rsi, 0
 26328 00013588 7410                    	je .L_lambda_simple_env_end_00a2
 26329 0001358A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26330 0001358E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26331 00013592 48FFC6                  	inc rsi
 26332 00013595 48FFC2                  	inc rdx
 26333 00013598 EBEA                    	jmp .L_lambda_simple_env_loop_00a2
 26334                                  .L_lambda_simple_env_end_00a2:
 26335 0001359A 5B                      	pop rbx
 26336 0001359B BE00000000              	mov rsi, 0
 26337                                  .L_lambda_simple_params_loop_00a2:	; copy params
 26338 000135A0 4883FE00                	cmp rsi, 0
 26339 000135A4 740E                    	je .L_lambda_simple_params_end_00a2
 26340 000135A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26341 000135AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26342 000135AF 48FFC6                  	inc rsi
 26343 000135B2 EBEC                    	jmp .L_lambda_simple_params_loop_00a2
 26344                                  .L_lambda_simple_params_end_00a2:
 26345 000135B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26346 000135B7 4889C3                  	mov rbx, rax
 26347 000135BA 58                      	pop rax
 26348 000135BB C60004                  	mov byte [rax], T_closure
 26349 000135BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26350 000135C2 48C74009[CF350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a2
 26351 000135CA E9C7000000              	jmp .L_lambda_simple_end_00a2
 26352                                  .L_lambda_simple_code_00a2:	; lambda-simple body
 26353 000135CF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26354 000135D5 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 26355 000135D7 FF742410                	push qword [rsp + 8 * 2]
 26356 000135DB 6A01                    	push 1
 26357 000135DD E92C400000              	jmp L_error_incorrect_arity_simple
 26358                                  .L_lambda_simple_arity_check_ok_00a2:
 26359 000135E2 C8000000                	enter 0, 0
 26360                                  	; preparing a tail-call
 26361                                  	; preparing a non-tail-call
 26362                                  	; preparing a non-tail-call
 26363 000135E6 488B4520                	mov rax, PARAM(0)	; param vec
 26364 000135EA 50                      	push rax
 26365 000135EB 6A01                    	push 1	; arg count
 26366 000135ED 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 26367 000135F5 803805                  	cmp byte [rax], T_undefined
 26368 000135F8 0F842A3F0000            	je L_error_fvar_undefined
 26369 000135FE 803804                  	cmp byte [rax], T_closure
 26370 00013601 0F85A53F0000            	jne L_error_non_closure
 26371 00013607 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26372 0001360A FF5009                  	call SOB_CLOSURE_CODE(rax)
 26373 0001360D 50                      	push rax
 26374 0001360E 6A01                    	push 1	; arg count
 26375 00013610 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 26376 00013618 803805                  	cmp byte [rax], T_undefined
 26377 0001361B 0F84073F0000            	je L_error_fvar_undefined
 26378 00013621 803804                  	cmp byte [rax], T_closure
 26379 00013624 0F85823F0000            	jne L_error_non_closure
 26380 0001362A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26381 0001362D FF5009                  	call SOB_CLOSURE_CODE(rax)
 26382 00013630 50                      	push rax
 26383 00013631 6A01                    	push 1	; arg count
 26384 00013633 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 26385 0001363B 803805                  	cmp byte [rax], T_undefined
 26386 0001363E 0F84E43E0000            	je L_error_fvar_undefined
 26387 00013644 803804                  	cmp byte [rax], T_closure
 26388 00013647 0F855F3F0000            	jne L_error_non_closure
 26389 0001364D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26390 00013650 FF7508                  	push qword [rbp + 8 * 1]
 26391                                   ; old ret addr
 26392 00013653 FF7500                  	push qword [rbp]
 26393                                   ; restore the old rbp
 26394 00013656 BB01000000              	mov rbx, 1
 26395 0001365B 4883C303                	add rbx, 3
 26396 0001365F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26397 00013663 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26398 00013668 4C8D4DF8                	lea r9, [rbp - 8]
 26399 0001366C B905000000              	mov rcx, 5
 26400                                  .L_tc_recycle_frame_loop_00dc:
 26401 00013671 4883F900                	cmp rcx, 0
 26402 00013675 7413                    	je .L_tc_recycle_frame_done_00dc
 26403 00013677 4D8B11                  	mov r10, qword [r9]
 26404 0001367A 4D8910                  	mov qword [r8], r10
 26405 0001367D 4983E808                	sub r8, 8
 26406 00013681 4983E908                	sub r9, 8
 26407 00013685 48FFC9                  	dec rcx
 26408 00013688 EBE7                    	jmp .L_tc_recycle_frame_loop_00dc
 26409                                  .L_tc_recycle_frame_done_00dc:
 26410 0001368A 498D6008                	lea rsp, [r8 + 8]
 26411 0001368E 5D                      	pop rbp ; restore the old rbp
 26412 0001368F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26413 00013692 C9                      	leave
 26414 00013693 C21800                  	ret AND_KILL_FRAME(1)
 26415                                  .L_lambda_simple_end_00a2:	; new closure is in rax
 26416 00013696 48890425[66170000]      	mov qword [free_var_145], rax
 26417 0001369E 48B8-                   	mov rax, sob_void
 26417 000136A0 [0000000000000000] 
 26418                                  
 26419 000136A8 4889C7                  	mov rdi, rax
 26420 000136AB E8FA410000              	call print_sexpr_if_not_void
 26421                                  	; preparing a non-tail-call
 26422 000136B0 48B8-                   	mov rax, L_constants + 1993
 26422 000136B2 [C907000000000000] 
 26423 000136BA 50                      	push rax
 26424 000136BB 6A01                    	push 1	; arg count
 26425 000136BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26426 000136C2 E88E3F0000              	call malloc
 26427 000136C7 50                      	push rax
 26428 000136C8 BF00000000              	mov rdi, 8 * 0	; new rib
 26429 000136CD E8833F0000              	call malloc
 26430 000136D2 50                      	push rax
 26431 000136D3 BF08000000              	mov rdi, 8 * 1	; extended env
 26432 000136D8 E8783F0000              	call malloc
 26433 000136DD 488B7D10                	mov rdi, ENV
 26434 000136E1 BE00000000              	mov rsi, 0
 26435 000136E6 BA01000000              	mov rdx, 1
 26436                                  .L_lambda_simple_env_loop_00a3:	; ext_env[i + 1] <-- env[i]
 26437 000136EB 4883FE00                	cmp rsi, 0
 26438 000136EF 7410                    	je .L_lambda_simple_env_end_00a3
 26439 000136F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26440 000136F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26441 000136F9 48FFC6                  	inc rsi
 26442 000136FC 48FFC2                  	inc rdx
 26443 000136FF EBEA                    	jmp .L_lambda_simple_env_loop_00a3
 26444                                  .L_lambda_simple_env_end_00a3:
 26445 00013701 5B                      	pop rbx
 26446 00013702 BE00000000              	mov rsi, 0
 26447                                  .L_lambda_simple_params_loop_00a3:	; copy params
 26448 00013707 4883FE00                	cmp rsi, 0
 26449 0001370B 740E                    	je .L_lambda_simple_params_end_00a3
 26450 0001370D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26451 00013712 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26452 00013716 48FFC6                  	inc rsi
 26453 00013719 EBEC                    	jmp .L_lambda_simple_params_loop_00a3
 26454                                  .L_lambda_simple_params_end_00a3:
 26455 0001371B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26456 0001371E 4889C3                  	mov rbx, rax
 26457 00013721 58                      	pop rax
 26458 00013722 C60004                  	mov byte [rax], T_closure
 26459 00013725 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26460 00013729 48C74009[36370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a3
 26461 00013731 E941060000              	jmp .L_lambda_simple_end_00a3
 26462                                  .L_lambda_simple_code_00a3:	; lambda-simple body
 26463 00013736 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26464 0001373C 740B                    	je .L_lambda_simple_arity_check_ok_00a3
 26465 0001373E FF742410                	push qword [rsp + 8 * 2]
 26466 00013742 6A01                    	push 1
 26467 00013744 E9C53E0000              	jmp L_error_incorrect_arity_simple
 26468                                  .L_lambda_simple_arity_check_ok_00a3:
 26469 00013749 C8000000                	enter 0, 0
 26470 0001374D BF08000000              	mov rdi, 8*1
 26471 00013752 E8FE3E0000              	call malloc
 26472 00013757 488B5D20                	mov rbx, PARAM(0)
 26473 0001375B 488918                  	mov qword [rax], rbx
 26474 0001375E 48894520                	mov PARAM(0), rax
 26475 00013762 48B8-                   	mov rax, sob_void
 26475 00013764 [0000000000000000] 
 26476                                  
 26477 0001376C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26478 00013771 E8DF3E0000              	call malloc
 26479 00013776 50                      	push rax
 26480 00013777 BF08000000              	mov rdi, 8 * 1	; new rib
 26481 0001377C E8D43E0000              	call malloc
 26482 00013781 50                      	push rax
 26483 00013782 BF10000000              	mov rdi, 8 * 2	; extended env
 26484 00013787 E8C93E0000              	call malloc
 26485 0001378C 488B7D10                	mov rdi, ENV
 26486 00013790 BE00000000              	mov rsi, 0
 26487 00013795 BA01000000              	mov rdx, 1
 26488                                  .L_lambda_simple_env_loop_00a4:	; ext_env[i + 1] <-- env[i]
 26489 0001379A 4883FE01                	cmp rsi, 1
 26490 0001379E 7410                    	je .L_lambda_simple_env_end_00a4
 26491 000137A0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26492 000137A4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26493 000137A8 48FFC6                  	inc rsi
 26494 000137AB 48FFC2                  	inc rdx
 26495 000137AE EBEA                    	jmp .L_lambda_simple_env_loop_00a4
 26496                                  .L_lambda_simple_env_end_00a4:
 26497 000137B0 5B                      	pop rbx
 26498 000137B1 BE00000000              	mov rsi, 0
 26499                                  .L_lambda_simple_params_loop_00a4:	; copy params
 26500 000137B6 4883FE01                	cmp rsi, 1
 26501 000137BA 740E                    	je .L_lambda_simple_params_end_00a4
 26502 000137BC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26503 000137C1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26504 000137C5 48FFC6                  	inc rsi
 26505 000137C8 EBEC                    	jmp .L_lambda_simple_params_loop_00a4
 26506                                  .L_lambda_simple_params_end_00a4:
 26507 000137CA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26508 000137CD 4889C3                  	mov rbx, rax
 26509 000137D0 58                      	pop rax
 26510 000137D1 C60004                  	mov byte [rax], T_closure
 26511 000137D4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26512 000137D8 48C74009[E5370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a4
 26513 000137E0 E9F8020000              	jmp .L_lambda_simple_end_00a4
 26514                                  .L_lambda_simple_code_00a4:	; lambda-simple body
 26515 000137E5 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26516 000137EB 740B                    	je .L_lambda_simple_arity_check_ok_00a4
 26517 000137ED FF742410                	push qword [rsp + 8 * 2]
 26518 000137F1 6A03                    	push 3
 26519 000137F3 E9163E0000              	jmp L_error_incorrect_arity_simple
 26520                                  .L_lambda_simple_arity_check_ok_00a4:
 26521 000137F8 C8000000                	enter 0, 0
 26522                                  	; preparing a non-tail-call
 26523 000137FC 488B4530                	mov rax, PARAM(2)	; param j
 26524 00013800 50                      	push rax
 26525 00013801 488B4528                	mov rax, PARAM(1)	; param i
 26526 00013805 50                      	push rax
 26527 00013806 6A02                    	push 2	; arg count
 26528 00013808 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 26529 00013810 803805                  	cmp byte [rax], T_undefined
 26530 00013813 0F840F3D0000            	je L_error_fvar_undefined
 26531 00013819 803804                  	cmp byte [rax], T_closure
 26532 0001381C 0F858A3D0000            	jne L_error_non_closure
 26533 00013822 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26534 00013825 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26535 00013828 483D[02000000]          	cmp rax, sob_boolean_false
 26536 0001382E 0F84A1020000            	je .L_if_else_007f
 26537                                  	; preparing a tail-call
 26538                                  	; preparing a non-tail-call
 26539 00013834 488B4528                	mov rax, PARAM(1)	; param i
 26540 00013838 50                      	push rax
 26541 00013839 488B4520                	mov rax, PARAM(0)	; param str
 26542 0001383D 50                      	push rax
 26543 0001383E 6A02                    	push 2	; arg count
 26544 00013840 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26545 00013848 803805                  	cmp byte [rax], T_undefined
 26546 0001384B 0F84D73C0000            	je L_error_fvar_undefined
 26547 00013851 803804                  	cmp byte [rax], T_closure
 26548 00013854 0F85523D0000            	jne L_error_non_closure
 26549 0001385A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26550 0001385D FF5009                  	call SOB_CLOSURE_CODE(rax)
 26551 00013860 50                      	push rax
 26552 00013861 6A01                    	push 1	; arg count
 26553 00013863 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26554 00013868 E8E83D0000              	call malloc
 26555 0001386D 50                      	push rax
 26556 0001386E BF18000000              	mov rdi, 8 * 3	; new rib
 26557 00013873 E8DD3D0000              	call malloc
 26558 00013878 50                      	push rax
 26559 00013879 BF18000000              	mov rdi, 8 * 3	; extended env
 26560 0001387E E8D23D0000              	call malloc
 26561 00013883 488B7D10                	mov rdi, ENV
 26562 00013887 BE00000000              	mov rsi, 0
 26563 0001388C BA01000000              	mov rdx, 1
 26564                                  .L_lambda_simple_env_loop_00a5:	; ext_env[i + 1] <-- env[i]
 26565 00013891 4883FE02                	cmp rsi, 2
 26566 00013895 7410                    	je .L_lambda_simple_env_end_00a5
 26567 00013897 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26568 0001389B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26569 0001389F 48FFC6                  	inc rsi
 26570 000138A2 48FFC2                  	inc rdx
 26571 000138A5 EBEA                    	jmp .L_lambda_simple_env_loop_00a5
 26572                                  .L_lambda_simple_env_end_00a5:
 26573 000138A7 5B                      	pop rbx
 26574 000138A8 BE00000000              	mov rsi, 0
 26575                                  .L_lambda_simple_params_loop_00a5:	; copy params
 26576 000138AD 4883FE03                	cmp rsi, 3
 26577 000138B1 740E                    	je .L_lambda_simple_params_end_00a5
 26578 000138B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26579 000138B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26580 000138BC 48FFC6                  	inc rsi
 26581 000138BF EBEC                    	jmp .L_lambda_simple_params_loop_00a5
 26582                                  .L_lambda_simple_params_end_00a5:
 26583 000138C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26584 000138C4 4889C3                  	mov rbx, rax
 26585 000138C7 58                      	pop rax
 26586 000138C8 C60004                  	mov byte [rax], T_closure
 26587 000138CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26588 000138CF 48C74009[DC380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a5
 26589 000138D7 E9A9010000              	jmp .L_lambda_simple_end_00a5
 26590                                  .L_lambda_simple_code_00a5:	; lambda-simple body
 26591 000138DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26592 000138E2 740B                    	je .L_lambda_simple_arity_check_ok_00a5
 26593 000138E4 FF742410                	push qword [rsp + 8 * 2]
 26594 000138E8 6A01                    	push 1
 26595 000138EA E91F3D0000              	jmp L_error_incorrect_arity_simple
 26596                                  .L_lambda_simple_arity_check_ok_00a5:
 26597 000138EF C8000000                	enter 0, 0
 26598                                  	; preparing a non-tail-call
 26599                                  	; preparing a non-tail-call
 26600 000138F3 488B4510                	mov rax, ENV
 26601 000138F7 488B00                  	mov rax, qword [rax + 8 * 0]
 26602 000138FA 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26603 000138FE 50                      	push rax
 26604 000138FF 488B4510                	mov rax, ENV
 26605 00013903 488B00                  	mov rax, qword [rax + 8 * 0]
 26606 00013906 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26607 00013909 50                      	push rax
 26608 0001390A 6A02                    	push 2	; arg count
 26609 0001390C 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 26610 00013914 803805                  	cmp byte [rax], T_undefined
 26611 00013917 0F840B3C0000            	je L_error_fvar_undefined
 26612 0001391D 803804                  	cmp byte [rax], T_closure
 26613 00013920 0F85863C0000            	jne L_error_non_closure
 26614 00013926 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26615 00013929 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26616 0001392C 50                      	push rax
 26617 0001392D 488B4510                	mov rax, ENV
 26618 00013931 488B00                  	mov rax, qword [rax + 8 * 0]
 26619 00013934 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26620 00013938 50                      	push rax
 26621 00013939 488B4510                	mov rax, ENV
 26622 0001393D 488B00                  	mov rax, qword [rax + 8 * 0]
 26623 00013940 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26624 00013943 50                      	push rax
 26625 00013944 6A03                    	push 3	; arg count
 26626 00013946 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26627 0001394E 803805                  	cmp byte [rax], T_undefined
 26628 00013951 0F84D13B0000            	je L_error_fvar_undefined
 26629 00013957 803804                  	cmp byte [rax], T_closure
 26630 0001395A 0F854C3C0000            	jne L_error_non_closure
 26631 00013960 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26632 00013963 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26633                                  
 26634                                  	; preparing a non-tail-call
 26635 00013966 488B4520                	mov rax, PARAM(0)	; param ch
 26636 0001396A 50                      	push rax
 26637 0001396B 488B4510                	mov rax, ENV
 26638 0001396F 488B00                  	mov rax, qword [rax + 8 * 0]
 26639 00013972 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26640 00013976 50                      	push rax
 26641 00013977 488B4510                	mov rax, ENV
 26642 0001397B 488B00                  	mov rax, qword [rax + 8 * 0]
 26643 0001397E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26644 00013981 50                      	push rax
 26645 00013982 6A03                    	push 3	; arg count
 26646 00013984 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 26647 0001398C 803805                  	cmp byte [rax], T_undefined
 26648 0001398F 0F84933B0000            	je L_error_fvar_undefined
 26649 00013995 803804                  	cmp byte [rax], T_closure
 26650 00013998 0F850E3C0000            	jne L_error_non_closure
 26651 0001399E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26652 000139A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26653                                  
 26654                                  	; preparing a tail-call
 26655                                  	; preparing a non-tail-call
 26656 000139A4 48B8-                   	mov rax, L_constants + 2270
 26656 000139A6 [DE08000000000000] 
 26657 000139AE 50                      	push rax
 26658 000139AF 488B4510                	mov rax, ENV
 26659 000139B3 488B00                  	mov rax, qword [rax + 8 * 0]
 26660 000139B6 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 26661 000139BA 50                      	push rax
 26662 000139BB 6A02                    	push 2	; arg count
 26663 000139BD 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26664 000139C5 803805                  	cmp byte [rax], T_undefined
 26665 000139C8 0F845A3B0000            	je L_error_fvar_undefined
 26666 000139CE 803804                  	cmp byte [rax], T_closure
 26667 000139D1 0F85D53B0000            	jne L_error_non_closure
 26668 000139D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26669 000139DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 26670 000139DD 50                      	push rax
 26671                                  	; preparing a non-tail-call
 26672 000139DE 48B8-                   	mov rax, L_constants + 2270
 26672 000139E0 [DE08000000000000] 
 26673 000139E8 50                      	push rax
 26674 000139E9 488B4510                	mov rax, ENV
 26675 000139ED 488B00                  	mov rax, qword [rax + 8 * 0]
 26676 000139F0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 26677 000139F4 50                      	push rax
 26678 000139F5 6A02                    	push 2	; arg count
 26679 000139F7 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26680 000139FF 803805                  	cmp byte [rax], T_undefined
 26681 00013A02 0F84203B0000            	je L_error_fvar_undefined
 26682 00013A08 803804                  	cmp byte [rax], T_closure
 26683 00013A0B 0F859B3B0000            	jne L_error_non_closure
 26684 00013A11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26685 00013A14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26686 00013A17 50                      	push rax
 26687 00013A18 488B4510                	mov rax, ENV
 26688 00013A1C 488B00                  	mov rax, qword [rax + 8 * 0]
 26689 00013A1F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26690 00013A22 50                      	push rax
 26691 00013A23 6A03                    	push 3	; arg count
 26692 00013A25 488B4510                	mov rax, ENV
 26693 00013A29 488B4008                	mov rax, qword [rax + 8 * 1]
 26694 00013A2D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26695 00013A30 488B00                  	mov rax, qword [rax]
 26696 00013A33 803804                  	cmp byte [rax], T_closure
 26697 00013A36 0F85703B0000            	jne L_error_non_closure
 26698 00013A3C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26699 00013A3F FF7508                  	push qword [rbp + 8 * 1]
 26700                                   ; old ret addr
 26701 00013A42 FF7500                  	push qword [rbp]
 26702                                   ; restore the old rbp
 26703 00013A45 BB03000000              	mov rbx, 3
 26704 00013A4A 4883C303                	add rbx, 3
 26705 00013A4E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26706 00013A52 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26707 00013A57 4C8D4DF8                	lea r9, [rbp - 8]
 26708 00013A5B B907000000              	mov rcx, 7
 26709                                  .L_tc_recycle_frame_loop_00de:
 26710 00013A60 4883F900                	cmp rcx, 0
 26711 00013A64 7413                    	je .L_tc_recycle_frame_done_00de
 26712 00013A66 4D8B11                  	mov r10, qword [r9]
 26713 00013A69 4D8910                  	mov qword [r8], r10
 26714 00013A6C 4983E808                	sub r8, 8
 26715 00013A70 4983E908                	sub r9, 8
 26716 00013A74 48FFC9                  	dec rcx
 26717 00013A77 EBE7                    	jmp .L_tc_recycle_frame_loop_00de
 26718                                  .L_tc_recycle_frame_done_00de:
 26719 00013A79 498D6008                	lea rsp, [r8 + 8]
 26720 00013A7D 5D                      	pop rbp ; restore the old rbp
 26721 00013A7E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26722 00013A81 C9                      	leave
 26723 00013A82 C21800                  	ret AND_KILL_FRAME(1)
 26724                                  .L_lambda_simple_end_00a5:	; new closure is in rax
 26725 00013A85 803804                  	cmp byte [rax], T_closure
 26726 00013A88 0F851E3B0000            	jne L_error_non_closure
 26727 00013A8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26728 00013A91 FF7508                  	push qword [rbp + 8 * 1]
 26729                                   ; old ret addr
 26730 00013A94 FF7500                  	push qword [rbp]
 26731                                   ; restore the old rbp
 26732 00013A97 BB01000000              	mov rbx, 1
 26733 00013A9C 4883C303                	add rbx, 3
 26734 00013AA0 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26735 00013AA4 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26736 00013AA9 4C8D4DF8                	lea r9, [rbp - 8]
 26737 00013AAD B905000000              	mov rcx, 5
 26738                                  .L_tc_recycle_frame_loop_00dd:
 26739 00013AB2 4883F900                	cmp rcx, 0
 26740 00013AB6 7413                    	je .L_tc_recycle_frame_done_00dd
 26741 00013AB8 4D8B11                  	mov r10, qword [r9]
 26742 00013ABB 4D8910                  	mov qword [r8], r10
 26743 00013ABE 4983E808                	sub r8, 8
 26744 00013AC2 4983E908                	sub r9, 8
 26745 00013AC6 48FFC9                  	dec rcx
 26746 00013AC9 EBE7                    	jmp .L_tc_recycle_frame_loop_00dd
 26747                                  .L_tc_recycle_frame_done_00dd:
 26748 00013ACB 498D6008                	lea rsp, [r8 + 8]
 26749 00013ACF 5D                      	pop rbp ; restore the old rbp
 26750 00013AD0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26751 00013AD3 EB04                    	jmp .L_if_end_007f
 26752                                  .L_if_else_007f:
 26753 00013AD5 488B4520                	mov rax, PARAM(0)	; param str
 26754                                  .L_if_end_007f:
 26755 00013AD9 C9                      	leave
 26756 00013ADA C22800                  	ret AND_KILL_FRAME(3)
 26757                                  .L_lambda_simple_end_00a4:	; new closure is in rax
 26758 00013ADD 50                      	push rax
 26759 00013ADE 488B4520                	mov rax, PARAM(0)	; param run
 26760 00013AE2 8F00                    	pop qword [rax]
 26761 00013AE4 48B8-                   	mov rax, sob_void
 26761 00013AE6 [0000000000000000] 
 26762                                  
 26763 00013AEE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26764 00013AF3 E85D3B0000              	call malloc
 26765 00013AF8 50                      	push rax
 26766 00013AF9 BF08000000              	mov rdi, 8 * 1	; new rib
 26767 00013AFE E8523B0000              	call malloc
 26768 00013B03 50                      	push rax
 26769 00013B04 BF10000000              	mov rdi, 8 * 2	; extended env
 26770 00013B09 E8473B0000              	call malloc
 26771 00013B0E 488B7D10                	mov rdi, ENV
 26772 00013B12 BE00000000              	mov rsi, 0
 26773 00013B17 BA01000000              	mov rdx, 1
 26774                                  .L_lambda_simple_env_loop_00a6:	; ext_env[i + 1] <-- env[i]
 26775 00013B1C 4883FE01                	cmp rsi, 1
 26776 00013B20 7410                    	je .L_lambda_simple_env_end_00a6
 26777 00013B22 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26778 00013B26 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26779 00013B2A 48FFC6                  	inc rsi
 26780 00013B2D 48FFC2                  	inc rdx
 26781 00013B30 EBEA                    	jmp .L_lambda_simple_env_loop_00a6
 26782                                  .L_lambda_simple_env_end_00a6:
 26783 00013B32 5B                      	pop rbx
 26784 00013B33 BE00000000              	mov rsi, 0
 26785                                  .L_lambda_simple_params_loop_00a6:	; copy params
 26786 00013B38 4883FE01                	cmp rsi, 1
 26787 00013B3C 740E                    	je .L_lambda_simple_params_end_00a6
 26788 00013B3E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26789 00013B43 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26790 00013B47 48FFC6                  	inc rsi
 26791 00013B4A EBEC                    	jmp .L_lambda_simple_params_loop_00a6
 26792                                  .L_lambda_simple_params_end_00a6:
 26793 00013B4C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26794 00013B4F 4889C3                  	mov rbx, rax
 26795 00013B52 58                      	pop rax
 26796 00013B53 C60004                  	mov byte [rax], T_closure
 26797 00013B56 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26798 00013B5A 48C74009[673B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a6
 26799 00013B62 E90C020000              	jmp .L_lambda_simple_end_00a6
 26800                                  .L_lambda_simple_code_00a6:	; lambda-simple body
 26801 00013B67 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26802 00013B6D 740B                    	je .L_lambda_simple_arity_check_ok_00a6
 26803 00013B6F FF742410                	push qword [rsp + 8 * 2]
 26804 00013B73 6A01                    	push 1
 26805 00013B75 E9943A0000              	jmp L_error_incorrect_arity_simple
 26806                                  .L_lambda_simple_arity_check_ok_00a6:
 26807 00013B7A C8000000                	enter 0, 0
 26808                                  	; preparing a tail-call
 26809                                  	; preparing a non-tail-call
 26810 00013B7E 488B4520                	mov rax, PARAM(0)	; param str
 26811 00013B82 50                      	push rax
 26812 00013B83 6A01                    	push 1	; arg count
 26813 00013B85 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 26814 00013B8D 803805                  	cmp byte [rax], T_undefined
 26815 00013B90 0F8492390000            	je L_error_fvar_undefined
 26816 00013B96 803804                  	cmp byte [rax], T_closure
 26817 00013B99 0F850D3A0000            	jne L_error_non_closure
 26818 00013B9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 26819 00013BA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26820 00013BA5 50                      	push rax
 26821 00013BA6 6A01                    	push 1	; arg count
 26822 00013BA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26823 00013BAD E8A33A0000              	call malloc
 26824 00013BB2 50                      	push rax
 26825 00013BB3 BF08000000              	mov rdi, 8 * 1	; new rib
 26826 00013BB8 E8983A0000              	call malloc
 26827 00013BBD 50                      	push rax
 26828 00013BBE BF18000000              	mov rdi, 8 * 3	; extended env
 26829 00013BC3 E88D3A0000              	call malloc
 26830 00013BC8 488B7D10                	mov rdi, ENV
 26831 00013BCC BE00000000              	mov rsi, 0
 26832 00013BD1 BA01000000              	mov rdx, 1
 26833                                  .L_lambda_simple_env_loop_00a7:	; ext_env[i + 1] <-- env[i]
 26834 00013BD6 4883FE02                	cmp rsi, 2
 26835 00013BDA 7410                    	je .L_lambda_simple_env_end_00a7
 26836 00013BDC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26837 00013BE0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26838 00013BE4 48FFC6                  	inc rsi
 26839 00013BE7 48FFC2                  	inc rdx
 26840 00013BEA EBEA                    	jmp .L_lambda_simple_env_loop_00a7
 26841                                  .L_lambda_simple_env_end_00a7:
 26842 00013BEC 5B                      	pop rbx
 26843 00013BED BE00000000              	mov rsi, 0
 26844                                  .L_lambda_simple_params_loop_00a7:	; copy params
 26845 00013BF2 4883FE01                	cmp rsi, 1
 26846 00013BF6 740E                    	je .L_lambda_simple_params_end_00a7
 26847 00013BF8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26848 00013BFD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26849 00013C01 48FFC6                  	inc rsi
 26850 00013C04 EBEC                    	jmp .L_lambda_simple_params_loop_00a7
 26851                                  .L_lambda_simple_params_end_00a7:
 26852 00013C06 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26853 00013C09 4889C3                  	mov rbx, rax
 26854 00013C0C 58                      	pop rax
 26855 00013C0D C60004                  	mov byte [rax], T_closure
 26856 00013C10 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26857 00013C14 48C74009[213C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a7
 26858 00013C1C E900010000              	jmp .L_lambda_simple_end_00a7
 26859                                  .L_lambda_simple_code_00a7:	; lambda-simple body
 26860 00013C21 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26861 00013C27 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 26862 00013C29 FF742410                	push qword [rsp + 8 * 2]
 26863 00013C2D 6A01                    	push 1
 26864 00013C2F E9DA390000              	jmp L_error_incorrect_arity_simple
 26865                                  .L_lambda_simple_arity_check_ok_00a7:
 26866 00013C34 C8000000                	enter 0, 0
 26867                                  	; preparing a non-tail-call
 26868 00013C38 488B4520                	mov rax, PARAM(0)	; param n
 26869 00013C3C 50                      	push rax
 26870 00013C3D 6A01                    	push 1	; arg count
 26871 00013C3F 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 26872 00013C47 803805                  	cmp byte [rax], T_undefined
 26873 00013C4A 0F84D8380000            	je L_error_fvar_undefined
 26874 00013C50 803804                  	cmp byte [rax], T_closure
 26875 00013C53 0F8553390000            	jne L_error_non_closure
 26876 00013C59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26877 00013C5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 26878 00013C5F 483D[02000000]          	cmp rax, sob_boolean_false
 26879 00013C65 740F                    	je .L_if_else_0080
 26880 00013C67 488B4510                	mov rax, ENV
 26881 00013C6B 488B00                  	mov rax, qword [rax + 8 * 0]
 26882 00013C6E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26883 00013C71 E9A7000000              	jmp .L_if_end_0080
 26884                                  .L_if_else_0080:
 26885                                  	; preparing a tail-call
 26886                                  	; preparing a non-tail-call
 26887 00013C76 48B8-                   	mov rax, L_constants + 2270
 26887 00013C78 [DE08000000000000] 
 26888 00013C80 50                      	push rax
 26889 00013C81 488B4520                	mov rax, PARAM(0)	; param n
 26890 00013C85 50                      	push rax
 26891 00013C86 6A02                    	push 2	; arg count
 26892 00013C88 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 26893 00013C90 803805                  	cmp byte [rax], T_undefined
 26894 00013C93 0F848F380000            	je L_error_fvar_undefined
 26895 00013C99 803804                  	cmp byte [rax], T_closure
 26896 00013C9C 0F850A390000            	jne L_error_non_closure
 26897 00013CA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26898 00013CA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26899 00013CA8 50                      	push rax
 26900 00013CA9 48B8-                   	mov rax, L_constants + 2135
 26900 00013CAB [5708000000000000] 
 26901 00013CB3 50                      	push rax
 26902 00013CB4 488B4510                	mov rax, ENV
 26903 00013CB8 488B00                  	mov rax, qword [rax + 8 * 0]
 26904 00013CBB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 26905 00013CBE 50                      	push rax
 26906 00013CBF 6A03                    	push 3	; arg count
 26907 00013CC1 488B4510                	mov rax, ENV
 26908 00013CC5 488B4008                	mov rax, qword [rax + 8 * 1]
 26909 00013CC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26910 00013CCC 488B00                  	mov rax, qword [rax]
 26911 00013CCF 803804                  	cmp byte [rax], T_closure
 26912 00013CD2 0F85D4380000            	jne L_error_non_closure
 26913 00013CD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26914 00013CDB FF7508                  	push qword [rbp + 8 * 1]
 26915                                   ; old ret addr
 26916 00013CDE FF7500                  	push qword [rbp]
 26917                                   ; restore the old rbp
 26918 00013CE1 BB03000000              	mov rbx, 3
 26919 00013CE6 4883C303                	add rbx, 3
 26920 00013CEA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26921 00013CEE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26922 00013CF3 4C8D4DF8                	lea r9, [rbp - 8]
 26923 00013CF7 B907000000              	mov rcx, 7
 26924                                  .L_tc_recycle_frame_loop_00e0:
 26925 00013CFC 4883F900                	cmp rcx, 0
 26926 00013D00 7413                    	je .L_tc_recycle_frame_done_00e0
 26927 00013D02 4D8B11                  	mov r10, qword [r9]
 26928 00013D05 4D8910                  	mov qword [r8], r10
 26929 00013D08 4983E808                	sub r8, 8
 26930 00013D0C 4983E908                	sub r9, 8
 26931 00013D10 48FFC9                  	dec rcx
 26932 00013D13 EBE7                    	jmp .L_tc_recycle_frame_loop_00e0
 26933                                  .L_tc_recycle_frame_done_00e0:
 26934 00013D15 498D6008                	lea rsp, [r8 + 8]
 26935 00013D19 5D                      	pop rbp ; restore the old rbp
 26936 00013D1A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26937                                  .L_if_end_0080:
 26938 00013D1D C9                      	leave
 26939 00013D1E C21800                  	ret AND_KILL_FRAME(1)
 26940                                  .L_lambda_simple_end_00a7:	; new closure is in rax
 26941 00013D21 803804                  	cmp byte [rax], T_closure
 26942 00013D24 0F8582380000            	jne L_error_non_closure
 26943 00013D2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26944 00013D2D FF7508                  	push qword [rbp + 8 * 1]
 26945                                   ; old ret addr
 26946 00013D30 FF7500                  	push qword [rbp]
 26947                                   ; restore the old rbp
 26948 00013D33 BB01000000              	mov rbx, 1
 26949 00013D38 4883C303                	add rbx, 3
 26950 00013D3C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 26951 00013D40 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 26952 00013D45 4C8D4DF8                	lea r9, [rbp - 8]
 26953 00013D49 B905000000              	mov rcx, 5
 26954                                  .L_tc_recycle_frame_loop_00df:
 26955 00013D4E 4883F900                	cmp rcx, 0
 26956 00013D52 7413                    	je .L_tc_recycle_frame_done_00df
 26957 00013D54 4D8B11                  	mov r10, qword [r9]
 26958 00013D57 4D8910                  	mov qword [r8], r10
 26959 00013D5A 4983E808                	sub r8, 8
 26960 00013D5E 4983E908                	sub r9, 8
 26961 00013D62 48FFC9                  	dec rcx
 26962 00013D65 EBE7                    	jmp .L_tc_recycle_frame_loop_00df
 26963                                  .L_tc_recycle_frame_done_00df:
 26964 00013D67 498D6008                	lea rsp, [r8 + 8]
 26965 00013D6B 5D                      	pop rbp ; restore the old rbp
 26966 00013D6C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26967 00013D6F C9                      	leave
 26968 00013D70 C21800                  	ret AND_KILL_FRAME(1)
 26969                                  .L_lambda_simple_end_00a6:	; new closure is in rax
 26970 00013D73 C9                      	leave
 26971 00013D74 C21800                  	ret AND_KILL_FRAME(1)
 26972                                  .L_lambda_simple_end_00a3:	; new closure is in rax
 26973 00013D77 803804                  	cmp byte [rax], T_closure
 26974 00013D7A 0F852C380000            	jne L_error_non_closure
 26975 00013D80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26976 00013D83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26977 00013D86 48890425[67160000]      	mov qword [free_var_130], rax
 26978 00013D8E 48B8-                   	mov rax, sob_void
 26978 00013D90 [0000000000000000] 
 26979                                  
 26980 00013D98 4889C7                  	mov rdi, rax
 26981 00013D9B E80A3B0000              	call print_sexpr_if_not_void
 26982                                  	; preparing a non-tail-call
 26983 00013DA0 48B8-                   	mov rax, L_constants + 1993
 26983 00013DA2 [C907000000000000] 
 26984 00013DAA 50                      	push rax
 26985 00013DAB 6A01                    	push 1	; arg count
 26986 00013DAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26987 00013DB2 E89E380000              	call malloc
 26988 00013DB7 50                      	push rax
 26989 00013DB8 BF00000000              	mov rdi, 8 * 0	; new rib
 26990 00013DBD E893380000              	call malloc
 26991 00013DC2 50                      	push rax
 26992 00013DC3 BF08000000              	mov rdi, 8 * 1	; extended env
 26993 00013DC8 E888380000              	call malloc
 26994 00013DCD 488B7D10                	mov rdi, ENV
 26995 00013DD1 BE00000000              	mov rsi, 0
 26996 00013DD6 BA01000000              	mov rdx, 1
 26997                                  .L_lambda_simple_env_loop_00a8:	; ext_env[i + 1] <-- env[i]
 26998 00013DDB 4883FE00                	cmp rsi, 0
 26999 00013DDF 7410                    	je .L_lambda_simple_env_end_00a8
 27000 00013DE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27001 00013DE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27002 00013DE9 48FFC6                  	inc rsi
 27003 00013DEC 48FFC2                  	inc rdx
 27004 00013DEF EBEA                    	jmp .L_lambda_simple_env_loop_00a8
 27005                                  .L_lambda_simple_env_end_00a8:
 27006 00013DF1 5B                      	pop rbx
 27007 00013DF2 BE00000000              	mov rsi, 0
 27008                                  .L_lambda_simple_params_loop_00a8:	; copy params
 27009 00013DF7 4883FE00                	cmp rsi, 0
 27010 00013DFB 740E                    	je .L_lambda_simple_params_end_00a8
 27011 00013DFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27012 00013E02 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27013 00013E06 48FFC6                  	inc rsi
 27014 00013E09 EBEC                    	jmp .L_lambda_simple_params_loop_00a8
 27015                                  .L_lambda_simple_params_end_00a8:
 27016 00013E0B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27017 00013E0E 4889C3                  	mov rbx, rax
 27018 00013E11 58                      	pop rax
 27019 00013E12 C60004                  	mov byte [rax], T_closure
 27020 00013E15 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27021 00013E19 48C74009[263E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a8
 27022 00013E21 E941060000              	jmp .L_lambda_simple_end_00a8
 27023                                  .L_lambda_simple_code_00a8:	; lambda-simple body
 27024 00013E26 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27025 00013E2C 740B                    	je .L_lambda_simple_arity_check_ok_00a8
 27026 00013E2E FF742410                	push qword [rsp + 8 * 2]
 27027 00013E32 6A01                    	push 1
 27028 00013E34 E9D5370000              	jmp L_error_incorrect_arity_simple
 27029                                  .L_lambda_simple_arity_check_ok_00a8:
 27030 00013E39 C8000000                	enter 0, 0
 27031 00013E3D BF08000000              	mov rdi, 8*1
 27032 00013E42 E80E380000              	call malloc
 27033 00013E47 488B5D20                	mov rbx, PARAM(0)
 27034 00013E4B 488918                  	mov qword [rax], rbx
 27035 00013E4E 48894520                	mov PARAM(0), rax
 27036 00013E52 48B8-                   	mov rax, sob_void
 27036 00013E54 [0000000000000000] 
 27037                                  
 27038 00013E5C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27039 00013E61 E8EF370000              	call malloc
 27040 00013E66 50                      	push rax
 27041 00013E67 BF08000000              	mov rdi, 8 * 1	; new rib
 27042 00013E6C E8E4370000              	call malloc
 27043 00013E71 50                      	push rax
 27044 00013E72 BF10000000              	mov rdi, 8 * 2	; extended env
 27045 00013E77 E8D9370000              	call malloc
 27046 00013E7C 488B7D10                	mov rdi, ENV
 27047 00013E80 BE00000000              	mov rsi, 0
 27048 00013E85 BA01000000              	mov rdx, 1
 27049                                  .L_lambda_simple_env_loop_00a9:	; ext_env[i + 1] <-- env[i]
 27050 00013E8A 4883FE01                	cmp rsi, 1
 27051 00013E8E 7410                    	je .L_lambda_simple_env_end_00a9
 27052 00013E90 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27053 00013E94 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27054 00013E98 48FFC6                  	inc rsi
 27055 00013E9B 48FFC2                  	inc rdx
 27056 00013E9E EBEA                    	jmp .L_lambda_simple_env_loop_00a9
 27057                                  .L_lambda_simple_env_end_00a9:
 27058 00013EA0 5B                      	pop rbx
 27059 00013EA1 BE00000000              	mov rsi, 0
 27060                                  .L_lambda_simple_params_loop_00a9:	; copy params
 27061 00013EA6 4883FE01                	cmp rsi, 1
 27062 00013EAA 740E                    	je .L_lambda_simple_params_end_00a9
 27063 00013EAC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27064 00013EB1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27065 00013EB5 48FFC6                  	inc rsi
 27066 00013EB8 EBEC                    	jmp .L_lambda_simple_params_loop_00a9
 27067                                  .L_lambda_simple_params_end_00a9:
 27068 00013EBA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27069 00013EBD 4889C3                  	mov rbx, rax
 27070 00013EC0 58                      	pop rax
 27071 00013EC1 C60004                  	mov byte [rax], T_closure
 27072 00013EC4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27073 00013EC8 48C74009[D53E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a9
 27074 00013ED0 E9F8020000              	jmp .L_lambda_simple_end_00a9
 27075                                  .L_lambda_simple_code_00a9:	; lambda-simple body
 27076 00013ED5 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27077 00013EDB 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 27078 00013EDD FF742410                	push qword [rsp + 8 * 2]
 27079 00013EE1 6A03                    	push 3
 27080 00013EE3 E926370000              	jmp L_error_incorrect_arity_simple
 27081                                  .L_lambda_simple_arity_check_ok_00a9:
 27082 00013EE8 C8000000                	enter 0, 0
 27083                                  	; preparing a non-tail-call
 27084 00013EEC 488B4530                	mov rax, PARAM(2)	; param j
 27085 00013EF0 50                      	push rax
 27086 00013EF1 488B4528                	mov rax, PARAM(1)	; param i
 27087 00013EF5 50                      	push rax
 27088 00013EF6 6A02                    	push 2	; arg count
 27089 00013EF8 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27090 00013F00 803805                  	cmp byte [rax], T_undefined
 27091 00013F03 0F841F360000            	je L_error_fvar_undefined
 27092 00013F09 803804                  	cmp byte [rax], T_closure
 27093 00013F0C 0F859A360000            	jne L_error_non_closure
 27094 00013F12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27095 00013F15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27096 00013F18 483D[02000000]          	cmp rax, sob_boolean_false
 27097 00013F1E 0F84A1020000            	je .L_if_else_0081
 27098                                  	; preparing a tail-call
 27099                                  	; preparing a non-tail-call
 27100 00013F24 488B4528                	mov rax, PARAM(1)	; param i
 27101 00013F28 50                      	push rax
 27102 00013F29 488B4520                	mov rax, PARAM(0)	; param vec
 27103 00013F2D 50                      	push rax
 27104 00013F2E 6A02                    	push 2	; arg count
 27105 00013F30 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27106 00013F38 803805                  	cmp byte [rax], T_undefined
 27107 00013F3B 0F84E7350000            	je L_error_fvar_undefined
 27108 00013F41 803804                  	cmp byte [rax], T_closure
 27109 00013F44 0F8562360000            	jne L_error_non_closure
 27110 00013F4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27111 00013F4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 27112 00013F50 50                      	push rax
 27113 00013F51 6A01                    	push 1	; arg count
 27114 00013F53 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27115 00013F58 E8F8360000              	call malloc
 27116 00013F5D 50                      	push rax
 27117 00013F5E BF18000000              	mov rdi, 8 * 3	; new rib
 27118 00013F63 E8ED360000              	call malloc
 27119 00013F68 50                      	push rax
 27120 00013F69 BF18000000              	mov rdi, 8 * 3	; extended env
 27121 00013F6E E8E2360000              	call malloc
 27122 00013F73 488B7D10                	mov rdi, ENV
 27123 00013F77 BE00000000              	mov rsi, 0
 27124 00013F7C BA01000000              	mov rdx, 1
 27125                                  .L_lambda_simple_env_loop_00aa:	; ext_env[i + 1] <-- env[i]
 27126 00013F81 4883FE02                	cmp rsi, 2
 27127 00013F85 7410                    	je .L_lambda_simple_env_end_00aa
 27128 00013F87 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27129 00013F8B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27130 00013F8F 48FFC6                  	inc rsi
 27131 00013F92 48FFC2                  	inc rdx
 27132 00013F95 EBEA                    	jmp .L_lambda_simple_env_loop_00aa
 27133                                  .L_lambda_simple_env_end_00aa:
 27134 00013F97 5B                      	pop rbx
 27135 00013F98 BE00000000              	mov rsi, 0
 27136                                  .L_lambda_simple_params_loop_00aa:	; copy params
 27137 00013F9D 4883FE03                	cmp rsi, 3
 27138 00013FA1 740E                    	je .L_lambda_simple_params_end_00aa
 27139 00013FA3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27140 00013FA8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27141 00013FAC 48FFC6                  	inc rsi
 27142 00013FAF EBEC                    	jmp .L_lambda_simple_params_loop_00aa
 27143                                  .L_lambda_simple_params_end_00aa:
 27144 00013FB1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27145 00013FB4 4889C3                  	mov rbx, rax
 27146 00013FB7 58                      	pop rax
 27147 00013FB8 C60004                  	mov byte [rax], T_closure
 27148 00013FBB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27149 00013FBF 48C74009[CC3F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00aa
 27150 00013FC7 E9A9010000              	jmp .L_lambda_simple_end_00aa
 27151                                  .L_lambda_simple_code_00aa:	; lambda-simple body
 27152 00013FCC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27153 00013FD2 740B                    	je .L_lambda_simple_arity_check_ok_00aa
 27154 00013FD4 FF742410                	push qword [rsp + 8 * 2]
 27155 00013FD8 6A01                    	push 1
 27156 00013FDA E92F360000              	jmp L_error_incorrect_arity_simple
 27157                                  .L_lambda_simple_arity_check_ok_00aa:
 27158 00013FDF C8000000                	enter 0, 0
 27159                                  	; preparing a non-tail-call
 27160                                  	; preparing a non-tail-call
 27161 00013FE3 488B4510                	mov rax, ENV
 27162 00013FE7 488B00                  	mov rax, qword [rax + 8 * 0]
 27163 00013FEA 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27164 00013FEE 50                      	push rax
 27165 00013FEF 488B4510                	mov rax, ENV
 27166 00013FF3 488B00                  	mov rax, qword [rax + 8 * 0]
 27167 00013FF6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27168 00013FF9 50                      	push rax
 27169 00013FFA 6A02                    	push 2	; arg count
 27170 00013FFC 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27171 00014004 803805                  	cmp byte [rax], T_undefined
 27172 00014007 0F841B350000            	je L_error_fvar_undefined
 27173 0001400D 803804                  	cmp byte [rax], T_closure
 27174 00014010 0F8596350000            	jne L_error_non_closure
 27175 00014016 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27176 00014019 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27177 0001401C 50                      	push rax
 27178 0001401D 488B4510                	mov rax, ENV
 27179 00014021 488B00                  	mov rax, qword [rax + 8 * 0]
 27180 00014024 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27181 00014028 50                      	push rax
 27182 00014029 488B4510                	mov rax, ENV
 27183 0001402D 488B00                  	mov rax, qword [rax + 8 * 0]
 27184 00014030 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27185 00014033 50                      	push rax
 27186 00014034 6A03                    	push 3	; arg count
 27187 00014036 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27188 0001403E 803805                  	cmp byte [rax], T_undefined
 27189 00014041 0F84E1340000            	je L_error_fvar_undefined
 27190 00014047 803804                  	cmp byte [rax], T_closure
 27191 0001404A 0F855C350000            	jne L_error_non_closure
 27192 00014050 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27193 00014053 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27194                                  
 27195                                  	; preparing a non-tail-call
 27196 00014056 488B4520                	mov rax, PARAM(0)	; param ch
 27197 0001405A 50                      	push rax
 27198 0001405B 488B4510                	mov rax, ENV
 27199 0001405F 488B00                  	mov rax, qword [rax + 8 * 0]
 27200 00014062 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27201 00014066 50                      	push rax
 27202 00014067 488B4510                	mov rax, ENV
 27203 0001406B 488B00                  	mov rax, qword [rax + 8 * 0]
 27204 0001406E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27205 00014071 50                      	push rax
 27206 00014072 6A03                    	push 3	; arg count
 27207 00014074 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27208 0001407C 803805                  	cmp byte [rax], T_undefined
 27209 0001407F 0F84A3340000            	je L_error_fvar_undefined
 27210 00014085 803804                  	cmp byte [rax], T_closure
 27211 00014088 0F851E350000            	jne L_error_non_closure
 27212 0001408E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27213 00014091 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27214                                  
 27215                                  	; preparing a tail-call
 27216                                  	; preparing a non-tail-call
 27217 00014094 48B8-                   	mov rax, L_constants + 2270
 27217 00014096 [DE08000000000000] 
 27218 0001409E 50                      	push rax
 27219 0001409F 488B4510                	mov rax, ENV
 27220 000140A3 488B00                  	mov rax, qword [rax + 8 * 0]
 27221 000140A6 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27222 000140AA 50                      	push rax
 27223 000140AB 6A02                    	push 2	; arg count
 27224 000140AD 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27225 000140B5 803805                  	cmp byte [rax], T_undefined
 27226 000140B8 0F846A340000            	je L_error_fvar_undefined
 27227 000140BE 803804                  	cmp byte [rax], T_closure
 27228 000140C1 0F85E5340000            	jne L_error_non_closure
 27229 000140C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27230 000140CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27231 000140CD 50                      	push rax
 27232                                  	; preparing a non-tail-call
 27233 000140CE 48B8-                   	mov rax, L_constants + 2270
 27233 000140D0 [DE08000000000000] 
 27234 000140D8 50                      	push rax
 27235 000140D9 488B4510                	mov rax, ENV
 27236 000140DD 488B00                  	mov rax, qword [rax + 8 * 0]
 27237 000140E0 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27238 000140E4 50                      	push rax
 27239 000140E5 6A02                    	push 2	; arg count
 27240 000140E7 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27241 000140EF 803805                  	cmp byte [rax], T_undefined
 27242 000140F2 0F8430340000            	je L_error_fvar_undefined
 27243 000140F8 803804                  	cmp byte [rax], T_closure
 27244 000140FB 0F85AB340000            	jne L_error_non_closure
 27245 00014101 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27246 00014104 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27247 00014107 50                      	push rax
 27248 00014108 488B4510                	mov rax, ENV
 27249 0001410C 488B00                  	mov rax, qword [rax + 8 * 0]
 27250 0001410F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27251 00014112 50                      	push rax
 27252 00014113 6A03                    	push 3	; arg count
 27253 00014115 488B4510                	mov rax, ENV
 27254 00014119 488B4008                	mov rax, qword [rax + 8 * 1]
 27255 0001411D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27256 00014120 488B00                  	mov rax, qword [rax]
 27257 00014123 803804                  	cmp byte [rax], T_closure
 27258 00014126 0F8580340000            	jne L_error_non_closure
 27259 0001412C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27260 0001412F FF7508                  	push qword [rbp + 8 * 1]
 27261                                   ; old ret addr
 27262 00014132 FF7500                  	push qword [rbp]
 27263                                   ; restore the old rbp
 27264 00014135 BB03000000              	mov rbx, 3
 27265 0001413A 4883C303                	add rbx, 3
 27266 0001413E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27267 00014142 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27268 00014147 4C8D4DF8                	lea r9, [rbp - 8]
 27269 0001414B B907000000              	mov rcx, 7
 27270                                  .L_tc_recycle_frame_loop_00e2:
 27271 00014150 4883F900                	cmp rcx, 0
 27272 00014154 7413                    	je .L_tc_recycle_frame_done_00e2
 27273 00014156 4D8B11                  	mov r10, qword [r9]
 27274 00014159 4D8910                  	mov qword [r8], r10
 27275 0001415C 4983E808                	sub r8, 8
 27276 00014160 4983E908                	sub r9, 8
 27277 00014164 48FFC9                  	dec rcx
 27278 00014167 EBE7                    	jmp .L_tc_recycle_frame_loop_00e2
 27279                                  .L_tc_recycle_frame_done_00e2:
 27280 00014169 498D6008                	lea rsp, [r8 + 8]
 27281 0001416D 5D                      	pop rbp ; restore the old rbp
 27282 0001416E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27283 00014171 C9                      	leave
 27284 00014172 C21800                  	ret AND_KILL_FRAME(1)
 27285                                  .L_lambda_simple_end_00aa:	; new closure is in rax
 27286 00014175 803804                  	cmp byte [rax], T_closure
 27287 00014178 0F852E340000            	jne L_error_non_closure
 27288 0001417E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27289 00014181 FF7508                  	push qword [rbp + 8 * 1]
 27290                                   ; old ret addr
 27291 00014184 FF7500                  	push qword [rbp]
 27292                                   ; restore the old rbp
 27293 00014187 BB01000000              	mov rbx, 1
 27294 0001418C 4883C303                	add rbx, 3
 27295 00014190 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27296 00014194 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27297 00014199 4C8D4DF8                	lea r9, [rbp - 8]
 27298 0001419D B905000000              	mov rcx, 5
 27299                                  .L_tc_recycle_frame_loop_00e1:
 27300 000141A2 4883F900                	cmp rcx, 0
 27301 000141A6 7413                    	je .L_tc_recycle_frame_done_00e1
 27302 000141A8 4D8B11                  	mov r10, qword [r9]
 27303 000141AB 4D8910                  	mov qword [r8], r10
 27304 000141AE 4983E808                	sub r8, 8
 27305 000141B2 4983E908                	sub r9, 8
 27306 000141B6 48FFC9                  	dec rcx
 27307 000141B9 EBE7                    	jmp .L_tc_recycle_frame_loop_00e1
 27308                                  .L_tc_recycle_frame_done_00e1:
 27309 000141BB 498D6008                	lea rsp, [r8 + 8]
 27310 000141BF 5D                      	pop rbp ; restore the old rbp
 27311 000141C0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27312 000141C3 EB04                    	jmp .L_if_end_0081
 27313                                  .L_if_else_0081:
 27314 000141C5 488B4520                	mov rax, PARAM(0)	; param vec
 27315                                  .L_if_end_0081:
 27316 000141C9 C9                      	leave
 27317 000141CA C22800                  	ret AND_KILL_FRAME(3)
 27318                                  .L_lambda_simple_end_00a9:	; new closure is in rax
 27319 000141CD 50                      	push rax
 27320 000141CE 488B4520                	mov rax, PARAM(0)	; param run
 27321 000141D2 8F00                    	pop qword [rax]
 27322 000141D4 48B8-                   	mov rax, sob_void
 27322 000141D6 [0000000000000000] 
 27323                                  
 27324 000141DE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27325 000141E3 E86D340000              	call malloc
 27326 000141E8 50                      	push rax
 27327 000141E9 BF08000000              	mov rdi, 8 * 1	; new rib
 27328 000141EE E862340000              	call malloc
 27329 000141F3 50                      	push rax
 27330 000141F4 BF10000000              	mov rdi, 8 * 2	; extended env
 27331 000141F9 E857340000              	call malloc
 27332 000141FE 488B7D10                	mov rdi, ENV
 27333 00014202 BE00000000              	mov rsi, 0
 27334 00014207 BA01000000              	mov rdx, 1
 27335                                  .L_lambda_simple_env_loop_00ab:	; ext_env[i + 1] <-- env[i]
 27336 0001420C 4883FE01                	cmp rsi, 1
 27337 00014210 7410                    	je .L_lambda_simple_env_end_00ab
 27338 00014212 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27339 00014216 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27340 0001421A 48FFC6                  	inc rsi
 27341 0001421D 48FFC2                  	inc rdx
 27342 00014220 EBEA                    	jmp .L_lambda_simple_env_loop_00ab
 27343                                  .L_lambda_simple_env_end_00ab:
 27344 00014222 5B                      	pop rbx
 27345 00014223 BE00000000              	mov rsi, 0
 27346                                  .L_lambda_simple_params_loop_00ab:	; copy params
 27347 00014228 4883FE01                	cmp rsi, 1
 27348 0001422C 740E                    	je .L_lambda_simple_params_end_00ab
 27349 0001422E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27350 00014233 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27351 00014237 48FFC6                  	inc rsi
 27352 0001423A EBEC                    	jmp .L_lambda_simple_params_loop_00ab
 27353                                  .L_lambda_simple_params_end_00ab:
 27354 0001423C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27355 0001423F 4889C3                  	mov rbx, rax
 27356 00014242 58                      	pop rax
 27357 00014243 C60004                  	mov byte [rax], T_closure
 27358 00014246 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27359 0001424A 48C74009[57420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ab
 27360 00014252 E90C020000              	jmp .L_lambda_simple_end_00ab
 27361                                  .L_lambda_simple_code_00ab:	; lambda-simple body
 27362 00014257 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27363 0001425D 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 27364 0001425F FF742410                	push qword [rsp + 8 * 2]
 27365 00014263 6A01                    	push 1
 27366 00014265 E9A4330000              	jmp L_error_incorrect_arity_simple
 27367                                  .L_lambda_simple_arity_check_ok_00ab:
 27368 0001426A C8000000                	enter 0, 0
 27369                                  	; preparing a tail-call
 27370                                  	; preparing a non-tail-call
 27371 0001426E 488B4520                	mov rax, PARAM(0)	; param vec
 27372 00014272 50                      	push rax
 27373 00014273 6A01                    	push 1	; arg count
 27374 00014275 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 27375 0001427D 803805                  	cmp byte [rax], T_undefined
 27376 00014280 0F84A2320000            	je L_error_fvar_undefined
 27377 00014286 803804                  	cmp byte [rax], T_closure
 27378 00014289 0F851D330000            	jne L_error_non_closure
 27379 0001428F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27380 00014292 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27381 00014295 50                      	push rax
 27382 00014296 6A01                    	push 1	; arg count
 27383 00014298 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27384 0001429D E8B3330000              	call malloc
 27385 000142A2 50                      	push rax
 27386 000142A3 BF08000000              	mov rdi, 8 * 1	; new rib
 27387 000142A8 E8A8330000              	call malloc
 27388 000142AD 50                      	push rax
 27389 000142AE BF18000000              	mov rdi, 8 * 3	; extended env
 27390 000142B3 E89D330000              	call malloc
 27391 000142B8 488B7D10                	mov rdi, ENV
 27392 000142BC BE00000000              	mov rsi, 0
 27393 000142C1 BA01000000              	mov rdx, 1
 27394                                  .L_lambda_simple_env_loop_00ac:	; ext_env[i + 1] <-- env[i]
 27395 000142C6 4883FE02                	cmp rsi, 2
 27396 000142CA 7410                    	je .L_lambda_simple_env_end_00ac
 27397 000142CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27398 000142D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27399 000142D4 48FFC6                  	inc rsi
 27400 000142D7 48FFC2                  	inc rdx
 27401 000142DA EBEA                    	jmp .L_lambda_simple_env_loop_00ac
 27402                                  .L_lambda_simple_env_end_00ac:
 27403 000142DC 5B                      	pop rbx
 27404 000142DD BE00000000              	mov rsi, 0
 27405                                  .L_lambda_simple_params_loop_00ac:	; copy params
 27406 000142E2 4883FE01                	cmp rsi, 1
 27407 000142E6 740E                    	je .L_lambda_simple_params_end_00ac
 27408 000142E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27409 000142ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27410 000142F1 48FFC6                  	inc rsi
 27411 000142F4 EBEC                    	jmp .L_lambda_simple_params_loop_00ac
 27412                                  .L_lambda_simple_params_end_00ac:
 27413 000142F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27414 000142F9 4889C3                  	mov rbx, rax
 27415 000142FC 58                      	pop rax
 27416 000142FD C60004                  	mov byte [rax], T_closure
 27417 00014300 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27418 00014304 48C74009[11430100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ac
 27419 0001430C E900010000              	jmp .L_lambda_simple_end_00ac
 27420                                  .L_lambda_simple_code_00ac:	; lambda-simple body
 27421 00014311 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27422 00014317 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 27423 00014319 FF742410                	push qword [rsp + 8 * 2]
 27424 0001431D 6A01                    	push 1
 27425 0001431F E9EA320000              	jmp L_error_incorrect_arity_simple
 27426                                  .L_lambda_simple_arity_check_ok_00ac:
 27427 00014324 C8000000                	enter 0, 0
 27428                                  	; preparing a non-tail-call
 27429 00014328 488B4520                	mov rax, PARAM(0)	; param n
 27430 0001432C 50                      	push rax
 27431 0001432D 6A01                    	push 1	; arg count
 27432 0001432F 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 27433 00014337 803805                  	cmp byte [rax], T_undefined
 27434 0001433A 0F84E8310000            	je L_error_fvar_undefined
 27435 00014340 803804                  	cmp byte [rax], T_closure
 27436 00014343 0F8563320000            	jne L_error_non_closure
 27437 00014349 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27438 0001434C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27439 0001434F 483D[02000000]          	cmp rax, sob_boolean_false
 27440 00014355 740F                    	je .L_if_else_0082
 27441 00014357 488B4510                	mov rax, ENV
 27442 0001435B 488B00                  	mov rax, qword [rax + 8 * 0]
 27443 0001435E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27444 00014361 E9A7000000              	jmp .L_if_end_0082
 27445                                  .L_if_else_0082:
 27446                                  	; preparing a tail-call
 27447                                  	; preparing a non-tail-call
 27448 00014366 48B8-                   	mov rax, L_constants + 2270
 27448 00014368 [DE08000000000000] 
 27449 00014370 50                      	push rax
 27450 00014371 488B4520                	mov rax, PARAM(0)	; param n
 27451 00014375 50                      	push rax
 27452 00014376 6A02                    	push 2	; arg count
 27453 00014378 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27454 00014380 803805                  	cmp byte [rax], T_undefined
 27455 00014383 0F849F310000            	je L_error_fvar_undefined
 27456 00014389 803804                  	cmp byte [rax], T_closure
 27457 0001438C 0F851A320000            	jne L_error_non_closure
 27458 00014392 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27459 00014395 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27460 00014398 50                      	push rax
 27461 00014399 48B8-                   	mov rax, L_constants + 2135
 27461 0001439B [5708000000000000] 
 27462 000143A3 50                      	push rax
 27463 000143A4 488B4510                	mov rax, ENV
 27464 000143A8 488B00                  	mov rax, qword [rax + 8 * 0]
 27465 000143AB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27466 000143AE 50                      	push rax
 27467 000143AF 6A03                    	push 3	; arg count
 27468 000143B1 488B4510                	mov rax, ENV
 27469 000143B5 488B4008                	mov rax, qword [rax + 8 * 1]
 27470 000143B9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27471 000143BC 488B00                  	mov rax, qword [rax]
 27472 000143BF 803804                  	cmp byte [rax], T_closure
 27473 000143C2 0F85E4310000            	jne L_error_non_closure
 27474 000143C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27475 000143CB FF7508                  	push qword [rbp + 8 * 1]
 27476                                   ; old ret addr
 27477 000143CE FF7500                  	push qword [rbp]
 27478                                   ; restore the old rbp
 27479 000143D1 BB03000000              	mov rbx, 3
 27480 000143D6 4883C303                	add rbx, 3
 27481 000143DA 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27482 000143DE 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27483 000143E3 4C8D4DF8                	lea r9, [rbp - 8]
 27484 000143E7 B907000000              	mov rcx, 7
 27485                                  .L_tc_recycle_frame_loop_00e4:
 27486 000143EC 4883F900                	cmp rcx, 0
 27487 000143F0 7413                    	je .L_tc_recycle_frame_done_00e4
 27488 000143F2 4D8B11                  	mov r10, qword [r9]
 27489 000143F5 4D8910                  	mov qword [r8], r10
 27490 000143F8 4983E808                	sub r8, 8
 27491 000143FC 4983E908                	sub r9, 8
 27492 00014400 48FFC9                  	dec rcx
 27493 00014403 EBE7                    	jmp .L_tc_recycle_frame_loop_00e4
 27494                                  .L_tc_recycle_frame_done_00e4:
 27495 00014405 498D6008                	lea rsp, [r8 + 8]
 27496 00014409 5D                      	pop rbp ; restore the old rbp
 27497 0001440A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27498                                  .L_if_end_0082:
 27499 0001440D C9                      	leave
 27500 0001440E C21800                  	ret AND_KILL_FRAME(1)
 27501                                  .L_lambda_simple_end_00ac:	; new closure is in rax
 27502 00014411 803804                  	cmp byte [rax], T_closure
 27503 00014414 0F8592310000            	jne L_error_non_closure
 27504 0001441A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27505 0001441D FF7508                  	push qword [rbp + 8 * 1]
 27506                                   ; old ret addr
 27507 00014420 FF7500                  	push qword [rbp]
 27508                                   ; restore the old rbp
 27509 00014423 BB01000000              	mov rbx, 1
 27510 00014428 4883C303                	add rbx, 3
 27511 0001442C 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27512 00014430 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27513 00014435 4C8D4DF8                	lea r9, [rbp - 8]
 27514 00014439 B905000000              	mov rcx, 5
 27515                                  .L_tc_recycle_frame_loop_00e3:
 27516 0001443E 4883F900                	cmp rcx, 0
 27517 00014442 7413                    	je .L_tc_recycle_frame_done_00e3
 27518 00014444 4D8B11                  	mov r10, qword [r9]
 27519 00014447 4D8910                  	mov qword [r8], r10
 27520 0001444A 4983E808                	sub r8, 8
 27521 0001444E 4983E908                	sub r9, 8
 27522 00014452 48FFC9                  	dec rcx
 27523 00014455 EBE7                    	jmp .L_tc_recycle_frame_loop_00e3
 27524                                  .L_tc_recycle_frame_done_00e3:
 27525 00014457 498D6008                	lea rsp, [r8 + 8]
 27526 0001445B 5D                      	pop rbp ; restore the old rbp
 27527 0001445C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27528 0001445F C9                      	leave
 27529 00014460 C21800                  	ret AND_KILL_FRAME(1)
 27530                                  .L_lambda_simple_end_00ab:	; new closure is in rax
 27531 00014463 C9                      	leave
 27532 00014464 C21800                  	ret AND_KILL_FRAME(1)
 27533                                  .L_lambda_simple_end_00a8:	; new closure is in rax
 27534 00014467 803804                  	cmp byte [rax], T_closure
 27535 0001446A 0F853C310000            	jne L_error_non_closure
 27536 00014470 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27537 00014473 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27538 00014476 48890425[77170000]      	mov qword [free_var_146], rax
 27539 0001447E 48B8-                   	mov rax, sob_void
 27539 00014480 [0000000000000000] 
 27540                                  
 27541 00014488 4889C7                  	mov rdi, rax
 27542 0001448B E81A340000              	call print_sexpr_if_not_void
 27543 00014490 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27544 00014495 E8BB310000              	call malloc
 27545 0001449A 50                      	push rax
 27546 0001449B BF00000000              	mov rdi, 8 * 0	; new rib
 27547 000144A0 E8B0310000              	call malloc
 27548 000144A5 50                      	push rax
 27549 000144A6 BF08000000              	mov rdi, 8 * 1	; extended env
 27550 000144AB E8A5310000              	call malloc
 27551 000144B0 488B7D10                	mov rdi, ENV
 27552 000144B4 BE00000000              	mov rsi, 0
 27553 000144B9 BA01000000              	mov rdx, 1
 27554                                  .L_lambda_simple_env_loop_00ad:	; ext_env[i + 1] <-- env[i]
 27555 000144BE 4883FE00                	cmp rsi, 0
 27556 000144C2 7410                    	je .L_lambda_simple_env_end_00ad
 27557 000144C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27558 000144C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27559 000144CC 48FFC6                  	inc rsi
 27560 000144CF 48FFC2                  	inc rdx
 27561 000144D2 EBEA                    	jmp .L_lambda_simple_env_loop_00ad
 27562                                  .L_lambda_simple_env_end_00ad:
 27563 000144D4 5B                      	pop rbx
 27564 000144D5 BE00000000              	mov rsi, 0
 27565                                  .L_lambda_simple_params_loop_00ad:	; copy params
 27566 000144DA 4883FE00                	cmp rsi, 0
 27567 000144DE 740E                    	je .L_lambda_simple_params_end_00ad
 27568 000144E0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27569 000144E5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27570 000144E9 48FFC6                  	inc rsi
 27571 000144EC EBEC                    	jmp .L_lambda_simple_params_loop_00ad
 27572                                  .L_lambda_simple_params_end_00ad:
 27573 000144EE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27574 000144F1 4889C3                  	mov rbx, rax
 27575 000144F4 58                      	pop rax
 27576 000144F5 C60004                  	mov byte [rax], T_closure
 27577 000144F8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27578 000144FC 48C74009[09450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ad
 27579 00014504 E951030000              	jmp .L_lambda_simple_end_00ad
 27580                                  .L_lambda_simple_code_00ad:	; lambda-simple body
 27581 00014509 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27582 0001450F 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 27583 00014511 FF742410                	push qword [rsp + 8 * 2]
 27584 00014515 6A02                    	push 2
 27585 00014517 E9F2300000              	jmp L_error_incorrect_arity_simple
 27586                                  .L_lambda_simple_arity_check_ok_00ad:
 27587 0001451C C8000000                	enter 0, 0
 27588                                  	; preparing a tail-call
 27589 00014520 48B8-                   	mov rax, L_constants + 1993
 27589 00014522 [C907000000000000] 
 27590 0001452A 50                      	push rax
 27591 0001452B 6A01                    	push 1	; arg count
 27592 0001452D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27593 00014532 E81E310000              	call malloc
 27594 00014537 50                      	push rax
 27595 00014538 BF10000000              	mov rdi, 8 * 2	; new rib
 27596 0001453D E813310000              	call malloc
 27597 00014542 50                      	push rax
 27598 00014543 BF10000000              	mov rdi, 8 * 2	; extended env
 27599 00014548 E808310000              	call malloc
 27600 0001454D 488B7D10                	mov rdi, ENV
 27601 00014551 BE00000000              	mov rsi, 0
 27602 00014556 BA01000000              	mov rdx, 1
 27603                                  .L_lambda_simple_env_loop_00ae:	; ext_env[i + 1] <-- env[i]
 27604 0001455B 4883FE01                	cmp rsi, 1
 27605 0001455F 7410                    	je .L_lambda_simple_env_end_00ae
 27606 00014561 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27607 00014565 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27608 00014569 48FFC6                  	inc rsi
 27609 0001456C 48FFC2                  	inc rdx
 27610 0001456F EBEA                    	jmp .L_lambda_simple_env_loop_00ae
 27611                                  .L_lambda_simple_env_end_00ae:
 27612 00014571 5B                      	pop rbx
 27613 00014572 BE00000000              	mov rsi, 0
 27614                                  .L_lambda_simple_params_loop_00ae:	; copy params
 27615 00014577 4883FE02                	cmp rsi, 2
 27616 0001457B 740E                    	je .L_lambda_simple_params_end_00ae
 27617 0001457D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27618 00014582 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27619 00014586 48FFC6                  	inc rsi
 27620 00014589 EBEC                    	jmp .L_lambda_simple_params_loop_00ae
 27621                                  .L_lambda_simple_params_end_00ae:
 27622 0001458B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27623 0001458E 4889C3                  	mov rbx, rax
 27624 00014591 58                      	pop rax
 27625 00014592 C60004                  	mov byte [rax], T_closure
 27626 00014595 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27627 00014599 48C74009[A6450100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ae
 27628 000145A1 E962020000              	jmp .L_lambda_simple_end_00ae
 27629                                  .L_lambda_simple_code_00ae:	; lambda-simple body
 27630 000145A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27631 000145AC 740B                    	je .L_lambda_simple_arity_check_ok_00ae
 27632 000145AE FF742410                	push qword [rsp + 8 * 2]
 27633 000145B2 6A01                    	push 1
 27634 000145B4 E955300000              	jmp L_error_incorrect_arity_simple
 27635                                  .L_lambda_simple_arity_check_ok_00ae:
 27636 000145B9 C8000000                	enter 0, 0
 27637 000145BD BF08000000              	mov rdi, 8*1
 27638 000145C2 E88E300000              	call malloc
 27639 000145C7 488B5D20                	mov rbx, PARAM(0)
 27640 000145CB 488918                  	mov qword [rax], rbx
 27641 000145CE 48894520                	mov PARAM(0), rax
 27642 000145D2 48B8-                   	mov rax, sob_void
 27642 000145D4 [0000000000000000] 
 27643                                  
 27644 000145DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27645 000145E1 E86F300000              	call malloc
 27646 000145E6 50                      	push rax
 27647 000145E7 BF08000000              	mov rdi, 8 * 1	; new rib
 27648 000145EC E864300000              	call malloc
 27649 000145F1 50                      	push rax
 27650 000145F2 BF18000000              	mov rdi, 8 * 3	; extended env
 27651 000145F7 E859300000              	call malloc
 27652 000145FC 488B7D10                	mov rdi, ENV
 27653 00014600 BE00000000              	mov rsi, 0
 27654 00014605 BA01000000              	mov rdx, 1
 27655                                  .L_lambda_simple_env_loop_00af:	; ext_env[i + 1] <-- env[i]
 27656 0001460A 4883FE02                	cmp rsi, 2
 27657 0001460E 7410                    	je .L_lambda_simple_env_end_00af
 27658 00014610 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27659 00014614 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27660 00014618 48FFC6                  	inc rsi
 27661 0001461B 48FFC2                  	inc rdx
 27662 0001461E EBEA                    	jmp .L_lambda_simple_env_loop_00af
 27663                                  .L_lambda_simple_env_end_00af:
 27664 00014620 5B                      	pop rbx
 27665 00014621 BE00000000              	mov rsi, 0
 27666                                  .L_lambda_simple_params_loop_00af:	; copy params
 27667 00014626 4883FE01                	cmp rsi, 1
 27668 0001462A 740E                    	je .L_lambda_simple_params_end_00af
 27669 0001462C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27670 00014631 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27671 00014635 48FFC6                  	inc rsi
 27672 00014638 EBEC                    	jmp .L_lambda_simple_params_loop_00af
 27673                                  .L_lambda_simple_params_end_00af:
 27674 0001463A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27675 0001463D 4889C3                  	mov rbx, rax
 27676 00014640 58                      	pop rax
 27677 00014641 C60004                  	mov byte [rax], T_closure
 27678 00014644 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27679 00014648 48C74009[55460100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00af
 27680 00014650 E93C010000              	jmp .L_lambda_simple_end_00af
 27681                                  .L_lambda_simple_code_00af:	; lambda-simple body
 27682 00014655 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27683 0001465B 740B                    	je .L_lambda_simple_arity_check_ok_00af
 27684 0001465D FF742410                	push qword [rsp + 8 * 2]
 27685 00014661 6A01                    	push 1
 27686 00014663 E9A62F0000              	jmp L_error_incorrect_arity_simple
 27687                                  .L_lambda_simple_arity_check_ok_00af:
 27688 00014668 C8000000                	enter 0, 0
 27689                                  	; preparing a non-tail-call
 27690 0001466C 488B4510                	mov rax, ENV
 27691 00014670 488B4008                	mov rax, qword [rax + 8 * 1]
 27692 00014674 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 27693 00014677 50                      	push rax
 27694 00014678 488B4520                	mov rax, PARAM(0)	; param i
 27695 0001467C 50                      	push rax
 27696 0001467D 6A02                    	push 2	; arg count
 27697 0001467F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27698 00014687 803805                  	cmp byte [rax], T_undefined
 27699 0001468A 0F84982E0000            	je L_error_fvar_undefined
 27700 00014690 803804                  	cmp byte [rax], T_closure
 27701 00014693 0F85132F0000            	jne L_error_non_closure
 27702 00014699 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27703 0001469C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27704 0001469F 483D[02000000]          	cmp rax, sob_boolean_false
 27705 000146A5 0F84D8000000            	je .L_if_else_0083
 27706                                  	; preparing a tail-call
 27707                                  	; preparing a non-tail-call
 27708                                  	; preparing a non-tail-call
 27709 000146AB 48B8-                   	mov rax, L_constants + 2270
 27709 000146AD [DE08000000000000] 
 27710 000146B5 50                      	push rax
 27711 000146B6 488B4520                	mov rax, PARAM(0)	; param i
 27712 000146BA 50                      	push rax
 27713 000146BB 6A02                    	push 2	; arg count
 27714 000146BD 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27715 000146C5 803805                  	cmp byte [rax], T_undefined
 27716 000146C8 0F845A2E0000            	je L_error_fvar_undefined
 27717 000146CE 803804                  	cmp byte [rax], T_closure
 27718 000146D1 0F85D52E0000            	jne L_error_non_closure
 27719 000146D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27720 000146DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27721 000146DD 50                      	push rax
 27722 000146DE 6A01                    	push 1	; arg count
 27723 000146E0 488B4510                	mov rax, ENV
 27724 000146E4 488B00                  	mov rax, qword [rax + 8 * 0]
 27725 000146E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27726 000146EA 488B00                  	mov rax, qword [rax]
 27727 000146ED 803804                  	cmp byte [rax], T_closure
 27728 000146F0 0F85B62E0000            	jne L_error_non_closure
 27729 000146F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27730 000146F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27731 000146FC 50                      	push rax
 27732                                  	; preparing a non-tail-call
 27733 000146FD 488B4520                	mov rax, PARAM(0)	; param i
 27734 00014701 50                      	push rax
 27735 00014702 6A01                    	push 1	; arg count
 27736 00014704 488B4510                	mov rax, ENV
 27737 00014708 488B4008                	mov rax, qword [rax + 8 * 1]
 27738 0001470C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 27739 00014710 803804                  	cmp byte [rax], T_closure
 27740 00014713 0F85932E0000            	jne L_error_non_closure
 27741 00014719 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27742 0001471C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27743 0001471F 50                      	push rax
 27744 00014720 6A02                    	push 2	; arg count
 27745 00014722 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 27746 0001472A 803805                  	cmp byte [rax], T_undefined
 27747 0001472D 0F84F52D0000            	je L_error_fvar_undefined
 27748 00014733 803804                  	cmp byte [rax], T_closure
 27749 00014736 0F85702E0000            	jne L_error_non_closure
 27750 0001473C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27751 0001473F FF7508                  	push qword [rbp + 8 * 1]
 27752                                   ; old ret addr
 27753 00014742 FF7500                  	push qword [rbp]
 27754                                   ; restore the old rbp
 27755 00014745 BB02000000              	mov rbx, 2
 27756 0001474A 4883C303                	add rbx, 3
 27757 0001474E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27758 00014752 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27759 00014757 4C8D4DF8                	lea r9, [rbp - 8]
 27760 0001475B B906000000              	mov rcx, 6
 27761                                  .L_tc_recycle_frame_loop_00e6:
 27762 00014760 4883F900                	cmp rcx, 0
 27763 00014764 7413                    	je .L_tc_recycle_frame_done_00e6
 27764 00014766 4D8B11                  	mov r10, qword [r9]
 27765 00014769 4D8910                  	mov qword [r8], r10
 27766 0001476C 4983E808                	sub r8, 8
 27767 00014770 4983E908                	sub r9, 8
 27768 00014774 48FFC9                  	dec rcx
 27769 00014777 EBE7                    	jmp .L_tc_recycle_frame_loop_00e6
 27770                                  .L_tc_recycle_frame_done_00e6:
 27771 00014779 498D6008                	lea rsp, [r8 + 8]
 27772 0001477D 5D                      	pop rbp ; restore the old rbp
 27773 0001477E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27774 00014781 EB0A                    	jmp .L_if_end_0083
 27775                                  .L_if_else_0083:
 27776 00014783 48B8-                   	mov rax, L_constants + 1
 27776 00014785 [0100000000000000] 
 27777                                  .L_if_end_0083:
 27778 0001478D C9                      	leave
 27779 0001478E C21800                  	ret AND_KILL_FRAME(1)
 27780                                  .L_lambda_simple_end_00af:	; new closure is in rax
 27781 00014791 50                      	push rax
 27782 00014792 488B4520                	mov rax, PARAM(0)	; param run
 27783 00014796 8F00                    	pop qword [rax]
 27784 00014798 48B8-                   	mov rax, sob_void
 27784 0001479A [0000000000000000] 
 27785                                  
 27786                                  	; preparing a tail-call
 27787 000147A2 48B8-                   	mov rax, L_constants + 2135
 27787 000147A4 [5708000000000000] 
 27788 000147AC 50                      	push rax
 27789 000147AD 6A01                    	push 1	; arg count
 27790 000147AF 488B4520                	mov rax, PARAM(0)	; param run
 27791 000147B3 488B00                  	mov rax, qword [rax]
 27792 000147B6 803804                  	cmp byte [rax], T_closure
 27793 000147B9 0F85ED2D0000            	jne L_error_non_closure
 27794 000147BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 27795 000147C2 FF7508                  	push qword [rbp + 8 * 1]
 27796                                   ; old ret addr
 27797 000147C5 FF7500                  	push qword [rbp]
 27798                                   ; restore the old rbp
 27799 000147C8 BB01000000              	mov rbx, 1
 27800 000147CD 4883C303                	add rbx, 3
 27801 000147D1 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27802 000147D5 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27803 000147DA 4C8D4DF8                	lea r9, [rbp - 8]
 27804 000147DE B905000000              	mov rcx, 5
 27805                                  .L_tc_recycle_frame_loop_00e7:
 27806 000147E3 4883F900                	cmp rcx, 0
 27807 000147E7 7413                    	je .L_tc_recycle_frame_done_00e7
 27808 000147E9 4D8B11                  	mov r10, qword [r9]
 27809 000147EC 4D8910                  	mov qword [r8], r10
 27810 000147EF 4983E808                	sub r8, 8
 27811 000147F3 4983E908                	sub r9, 8
 27812 000147F7 48FFC9                  	dec rcx
 27813 000147FA EBE7                    	jmp .L_tc_recycle_frame_loop_00e7
 27814                                  .L_tc_recycle_frame_done_00e7:
 27815 000147FC 498D6008                	lea rsp, [r8 + 8]
 27816 00014800 5D                      	pop rbp ; restore the old rbp
 27817 00014801 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27818 00014804 C9                      	leave
 27819 00014805 C21800                  	ret AND_KILL_FRAME(1)
 27820                                  .L_lambda_simple_end_00ae:	; new closure is in rax
 27821 00014808 803804                  	cmp byte [rax], T_closure
 27822 0001480B 0F859B2D0000            	jne L_error_non_closure
 27823 00014811 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27824 00014814 FF7508                  	push qword [rbp + 8 * 1]
 27825                                   ; old ret addr
 27826 00014817 FF7500                  	push qword [rbp]
 27827                                   ; restore the old rbp
 27828 0001481A BB01000000              	mov rbx, 1
 27829 0001481F 4883C303                	add rbx, 3
 27830 00014823 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 27831 00014827 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 27832 0001482C 4C8D4DF8                	lea r9, [rbp - 8]
 27833 00014830 B905000000              	mov rcx, 5
 27834                                  .L_tc_recycle_frame_loop_00e5:
 27835 00014835 4883F900                	cmp rcx, 0
 27836 00014839 7413                    	je .L_tc_recycle_frame_done_00e5
 27837 0001483B 4D8B11                  	mov r10, qword [r9]
 27838 0001483E 4D8910                  	mov qword [r8], r10
 27839 00014841 4983E808                	sub r8, 8
 27840 00014845 4983E908                	sub r9, 8
 27841 00014849 48FFC9                  	dec rcx
 27842 0001484C EBE7                    	jmp .L_tc_recycle_frame_loop_00e5
 27843                                  .L_tc_recycle_frame_done_00e5:
 27844 0001484E 498D6008                	lea rsp, [r8 + 8]
 27845 00014852 5D                      	pop rbp ; restore the old rbp
 27846 00014853 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27847 00014856 C9                      	leave
 27848 00014857 C22000                  	ret AND_KILL_FRAME(2)
 27849                                  .L_lambda_simple_end_00ad:	; new closure is in rax
 27850 0001485A 48890425[47140000]      	mov qword [free_var_98], rax
 27851 00014862 48B8-                   	mov rax, sob_void
 27851 00014864 [0000000000000000] 
 27852                                  
 27853 0001486C 4889C7                  	mov rdi, rax
 27854 0001486F E836300000              	call print_sexpr_if_not_void
 27855 00014874 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27856 00014879 E8D72D0000              	call malloc
 27857 0001487E 50                      	push rax
 27858 0001487F BF00000000              	mov rdi, 8 * 0	; new rib
 27859 00014884 E8CC2D0000              	call malloc
 27860 00014889 50                      	push rax
 27861 0001488A BF08000000              	mov rdi, 8 * 1	; extended env
 27862 0001488F E8C12D0000              	call malloc
 27863 00014894 488B7D10                	mov rdi, ENV
 27864 00014898 BE00000000              	mov rsi, 0
 27865 0001489D BA01000000              	mov rdx, 1
 27866                                  .L_lambda_simple_env_loop_00b0:	; ext_env[i + 1] <-- env[i]
 27867 000148A2 4883FE00                	cmp rsi, 0
 27868 000148A6 7410                    	je .L_lambda_simple_env_end_00b0
 27869 000148A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27870 000148AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27871 000148B0 48FFC6                  	inc rsi
 27872 000148B3 48FFC2                  	inc rdx
 27873 000148B6 EBEA                    	jmp .L_lambda_simple_env_loop_00b0
 27874                                  .L_lambda_simple_env_end_00b0:
 27875 000148B8 5B                      	pop rbx
 27876 000148B9 BE00000000              	mov rsi, 0
 27877                                  .L_lambda_simple_params_loop_00b0:	; copy params
 27878 000148BE 4883FE00                	cmp rsi, 0
 27879 000148C2 740E                    	je .L_lambda_simple_params_end_00b0
 27880 000148C4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27881 000148C9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27882 000148CD 48FFC6                  	inc rsi
 27883 000148D0 EBEC                    	jmp .L_lambda_simple_params_loop_00b0
 27884                                  .L_lambda_simple_params_end_00b0:
 27885 000148D2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27886 000148D5 4889C3                  	mov rbx, rax
 27887 000148D8 58                      	pop rax
 27888 000148D9 C60004                  	mov byte [rax], T_closure
 27889 000148DC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27890 000148E0 48C74009[ED480100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b0
 27891 000148E8 E96E040000              	jmp .L_lambda_simple_end_00b0
 27892                                  .L_lambda_simple_code_00b0:	; lambda-simple body
 27893 000148ED 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27894 000148F3 740B                    	je .L_lambda_simple_arity_check_ok_00b0
 27895 000148F5 FF742410                	push qword [rsp + 8 * 2]
 27896 000148F9 6A02                    	push 2
 27897 000148FB E90E2D0000              	jmp L_error_incorrect_arity_simple
 27898                                  .L_lambda_simple_arity_check_ok_00b0:
 27899 00014900 C8000000                	enter 0, 0
 27900                                  	; preparing a tail-call
 27901                                  	; preparing a non-tail-call
 27902 00014904 488B4520                	mov rax, PARAM(0)	; param n
 27903 00014908 50                      	push rax
 27904 00014909 6A01                    	push 1	; arg count
 27905 0001490B 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 27906 00014913 803805                  	cmp byte [rax], T_undefined
 27907 00014916 0F840C2C0000            	je L_error_fvar_undefined
 27908 0001491C 803804                  	cmp byte [rax], T_closure
 27909 0001491F 0F85872C0000            	jne L_error_non_closure
 27910 00014925 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27911 00014928 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27912 0001492B 50                      	push rax
 27913 0001492C 6A01                    	push 1	; arg count
 27914 0001492E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27915 00014933 E81D2D0000              	call malloc
 27916 00014938 50                      	push rax
 27917 00014939 BF10000000              	mov rdi, 8 * 2	; new rib
 27918 0001493E E8122D0000              	call malloc
 27919 00014943 50                      	push rax
 27920 00014944 BF10000000              	mov rdi, 8 * 2	; extended env
 27921 00014949 E8072D0000              	call malloc
 27922 0001494E 488B7D10                	mov rdi, ENV
 27923 00014952 BE00000000              	mov rsi, 0
 27924 00014957 BA01000000              	mov rdx, 1
 27925                                  .L_lambda_simple_env_loop_00b1:	; ext_env[i + 1] <-- env[i]
 27926 0001495C 4883FE01                	cmp rsi, 1
 27927 00014960 7410                    	je .L_lambda_simple_env_end_00b1
 27928 00014962 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27929 00014966 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27930 0001496A 48FFC6                  	inc rsi
 27931 0001496D 48FFC2                  	inc rdx
 27932 00014970 EBEA                    	jmp .L_lambda_simple_env_loop_00b1
 27933                                  .L_lambda_simple_env_end_00b1:
 27934 00014972 5B                      	pop rbx
 27935 00014973 BE00000000              	mov rsi, 0
 27936                                  .L_lambda_simple_params_loop_00b1:	; copy params
 27937 00014978 4883FE02                	cmp rsi, 2
 27938 0001497C 740E                    	je .L_lambda_simple_params_end_00b1
 27939 0001497E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27940 00014983 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27941 00014987 48FFC6                  	inc rsi
 27942 0001498A EBEC                    	jmp .L_lambda_simple_params_loop_00b1
 27943                                  .L_lambda_simple_params_end_00b1:
 27944 0001498C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27945 0001498F 4889C3                  	mov rbx, rax
 27946 00014992 58                      	pop rax
 27947 00014993 C60004                  	mov byte [rax], T_closure
 27948 00014996 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27949 0001499A 48C74009[A7490100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b1
 27950 000149A2 E962030000              	jmp .L_lambda_simple_end_00b1
 27951                                  .L_lambda_simple_code_00b1:	; lambda-simple body
 27952 000149A7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27953 000149AD 740B                    	je .L_lambda_simple_arity_check_ok_00b1
 27954 000149AF FF742410                	push qword [rsp + 8 * 2]
 27955 000149B3 6A01                    	push 1
 27956 000149B5 E9542C0000              	jmp L_error_incorrect_arity_simple
 27957                                  .L_lambda_simple_arity_check_ok_00b1:
 27958 000149BA C8000000                	enter 0, 0
 27959                                  	; preparing a tail-call
 27960 000149BE 48B8-                   	mov rax, L_constants + 1993
 27960 000149C0 [C907000000000000] 
 27961 000149C8 50                      	push rax
 27962 000149C9 6A01                    	push 1	; arg count
 27963 000149CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27964 000149D0 E8802C0000              	call malloc
 27965 000149D5 50                      	push rax
 27966 000149D6 BF08000000              	mov rdi, 8 * 1	; new rib
 27967 000149DB E8752C0000              	call malloc
 27968 000149E0 50                      	push rax
 27969 000149E1 BF18000000              	mov rdi, 8 * 3	; extended env
 27970 000149E6 E86A2C0000              	call malloc
 27971 000149EB 488B7D10                	mov rdi, ENV
 27972 000149EF BE00000000              	mov rsi, 0
 27973 000149F4 BA01000000              	mov rdx, 1
 27974                                  .L_lambda_simple_env_loop_00b2:	; ext_env[i + 1] <-- env[i]
 27975 000149F9 4883FE02                	cmp rsi, 2
 27976 000149FD 7410                    	je .L_lambda_simple_env_end_00b2
 27977 000149FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27978 00014A03 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27979 00014A07 48FFC6                  	inc rsi
 27980 00014A0A 48FFC2                  	inc rdx
 27981 00014A0D EBEA                    	jmp .L_lambda_simple_env_loop_00b2
 27982                                  .L_lambda_simple_env_end_00b2:
 27983 00014A0F 5B                      	pop rbx
 27984 00014A10 BE00000000              	mov rsi, 0
 27985                                  .L_lambda_simple_params_loop_00b2:	; copy params
 27986 00014A15 4883FE01                	cmp rsi, 1
 27987 00014A19 740E                    	je .L_lambda_simple_params_end_00b2
 27988 00014A1B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27989 00014A20 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27990 00014A24 48FFC6                  	inc rsi
 27991 00014A27 EBEC                    	jmp .L_lambda_simple_params_loop_00b2
 27992                                  .L_lambda_simple_params_end_00b2:
 27993 00014A29 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27994 00014A2C 4889C3                  	mov rbx, rax
 27995 00014A2F 58                      	pop rax
 27996 00014A30 C60004                  	mov byte [rax], T_closure
 27997 00014A33 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27998 00014A37 48C74009[444A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b2
 27999 00014A3F E973020000              	jmp .L_lambda_simple_end_00b2
 28000                                  .L_lambda_simple_code_00b2:	; lambda-simple body
 28001 00014A44 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28002 00014A4A 740B                    	je .L_lambda_simple_arity_check_ok_00b2
 28003 00014A4C FF742410                	push qword [rsp + 8 * 2]
 28004 00014A50 6A01                    	push 1
 28005 00014A52 E9B72B0000              	jmp L_error_incorrect_arity_simple
 28006                                  .L_lambda_simple_arity_check_ok_00b2:
 28007 00014A57 C8000000                	enter 0, 0
 28008 00014A5B BF08000000              	mov rdi, 8*1
 28009 00014A60 E8F02B0000              	call malloc
 28010 00014A65 488B5D20                	mov rbx, PARAM(0)
 28011 00014A69 488918                  	mov qword [rax], rbx
 28012 00014A6C 48894520                	mov PARAM(0), rax
 28013 00014A70 48B8-                   	mov rax, sob_void
 28013 00014A72 [0000000000000000] 
 28014                                  
 28015 00014A7A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28016 00014A7F E8D12B0000              	call malloc
 28017 00014A84 50                      	push rax
 28018 00014A85 BF08000000              	mov rdi, 8 * 1	; new rib
 28019 00014A8A E8C62B0000              	call malloc
 28020 00014A8F 50                      	push rax
 28021 00014A90 BF20000000              	mov rdi, 8 * 4	; extended env
 28022 00014A95 E8BB2B0000              	call malloc
 28023 00014A9A 488B7D10                	mov rdi, ENV
 28024 00014A9E BE00000000              	mov rsi, 0
 28025 00014AA3 BA01000000              	mov rdx, 1
 28026                                  .L_lambda_simple_env_loop_00b3:	; ext_env[i + 1] <-- env[i]
 28027 00014AA8 4883FE03                	cmp rsi, 3
 28028 00014AAC 7410                    	je .L_lambda_simple_env_end_00b3
 28029 00014AAE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28030 00014AB2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28031 00014AB6 48FFC6                  	inc rsi
 28032 00014AB9 48FFC2                  	inc rdx
 28033 00014ABC EBEA                    	jmp .L_lambda_simple_env_loop_00b3
 28034                                  .L_lambda_simple_env_end_00b3:
 28035 00014ABE 5B                      	pop rbx
 28036 00014ABF BE00000000              	mov rsi, 0
 28037                                  .L_lambda_simple_params_loop_00b3:	; copy params
 28038 00014AC4 4883FE01                	cmp rsi, 1
 28039 00014AC8 740E                    	je .L_lambda_simple_params_end_00b3
 28040 00014ACA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28041 00014ACF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28042 00014AD3 48FFC6                  	inc rsi
 28043 00014AD6 EBEC                    	jmp .L_lambda_simple_params_loop_00b3
 28044                                  .L_lambda_simple_params_end_00b3:
 28045 00014AD8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28046 00014ADB 4889C3                  	mov rbx, rax
 28047 00014ADE 58                      	pop rax
 28048 00014ADF C60004                  	mov byte [rax], T_closure
 28049 00014AE2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28050 00014AE6 48C74009[F34A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b3
 28051 00014AEE E94D010000              	jmp .L_lambda_simple_end_00b3
 28052                                  .L_lambda_simple_code_00b3:	; lambda-simple body
 28053 00014AF3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28054 00014AF9 740B                    	je .L_lambda_simple_arity_check_ok_00b3
 28055 00014AFB FF742410                	push qword [rsp + 8 * 2]
 28056 00014AFF 6A01                    	push 1
 28057 00014B01 E9082B0000              	jmp L_error_incorrect_arity_simple
 28058                                  .L_lambda_simple_arity_check_ok_00b3:
 28059 00014B06 C8000000                	enter 0, 0
 28060                                  	; preparing a non-tail-call
 28061 00014B0A 488B4510                	mov rax, ENV
 28062 00014B0E 488B4010                	mov rax, qword [rax + 8 * 2]
 28063 00014B12 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28064 00014B15 50                      	push rax
 28065 00014B16 488B4520                	mov rax, PARAM(0)	; param i
 28066 00014B1A 50                      	push rax
 28067 00014B1B 6A02                    	push 2	; arg count
 28068 00014B1D 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28069 00014B25 803805                  	cmp byte [rax], T_undefined
 28070 00014B28 0F84FA290000            	je L_error_fvar_undefined
 28071 00014B2E 803804                  	cmp byte [rax], T_closure
 28072 00014B31 0F85752A0000            	jne L_error_non_closure
 28073 00014B37 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28074 00014B3A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28075 00014B3D 483D[02000000]          	cmp rax, sob_boolean_false
 28076 00014B43 0F84E8000000            	je .L_if_else_0084
 28077                                  	; preparing a non-tail-call
 28078                                  	; preparing a non-tail-call
 28079 00014B49 488B4520                	mov rax, PARAM(0)	; param i
 28080 00014B4D 50                      	push rax
 28081 00014B4E 6A01                    	push 1	; arg count
 28082 00014B50 488B4510                	mov rax, ENV
 28083 00014B54 488B4010                	mov rax, qword [rax + 8 * 2]
 28084 00014B58 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28085 00014B5C 803804                  	cmp byte [rax], T_closure
 28086 00014B5F 0F85472A0000            	jne L_error_non_closure
 28087 00014B65 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28088 00014B68 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28089 00014B6B 50                      	push rax
 28090 00014B6C 488B4520                	mov rax, PARAM(0)	; param i
 28091 00014B70 50                      	push rax
 28092 00014B71 488B4510                	mov rax, ENV
 28093 00014B75 488B4008                	mov rax, qword [rax + 8 * 1]
 28094 00014B79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28095 00014B7C 50                      	push rax
 28096 00014B7D 6A03                    	push 3	; arg count
 28097 00014B7F 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 28098 00014B87 803805                  	cmp byte [rax], T_undefined
 28099 00014B8A 0F8498290000            	je L_error_fvar_undefined
 28100 00014B90 803804                  	cmp byte [rax], T_closure
 28101 00014B93 0F85132A0000            	jne L_error_non_closure
 28102 00014B99 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28103 00014B9C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28104                                  
 28105                                  	; preparing a tail-call
 28106                                  	; preparing a non-tail-call
 28107 00014B9F 48B8-                   	mov rax, L_constants + 2270
 28107 00014BA1 [DE08000000000000] 
 28108 00014BA9 50                      	push rax
 28109 00014BAA 488B4520                	mov rax, PARAM(0)	; param i
 28110 00014BAE 50                      	push rax
 28111 00014BAF 6A02                    	push 2	; arg count
 28112 00014BB1 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28113 00014BB9 803805                  	cmp byte [rax], T_undefined
 28114 00014BBC 0F8466290000            	je L_error_fvar_undefined
 28115 00014BC2 803804                  	cmp byte [rax], T_closure
 28116 00014BC5 0F85E1290000            	jne L_error_non_closure
 28117 00014BCB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28118 00014BCE FF5009                  	call SOB_CLOSURE_CODE(rax)
 28119 00014BD1 50                      	push rax
 28120 00014BD2 6A01                    	push 1	; arg count
 28121 00014BD4 488B4510                	mov rax, ENV
 28122 00014BD8 488B00                  	mov rax, qword [rax + 8 * 0]
 28123 00014BDB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28124 00014BDE 488B00                  	mov rax, qword [rax]
 28125 00014BE1 803804                  	cmp byte [rax], T_closure
 28126 00014BE4 0F85C2290000            	jne L_error_non_closure
 28127 00014BEA FF7001                  	push SOB_CLOSURE_ENV(rax)
 28128 00014BED FF7508                  	push qword [rbp + 8 * 1]
 28129                                   ; old ret addr
 28130 00014BF0 FF7500                  	push qword [rbp]
 28131                                   ; restore the old rbp
 28132 00014BF3 BB01000000              	mov rbx, 1
 28133 00014BF8 4883C303                	add rbx, 3
 28134 00014BFC 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28135 00014C00 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28136 00014C05 4C8D4DF8                	lea r9, [rbp - 8]
 28137 00014C09 B905000000              	mov rcx, 5
 28138                                  .L_tc_recycle_frame_loop_00ea:
 28139 00014C0E 4883F900                	cmp rcx, 0
 28140 00014C12 7413                    	je .L_tc_recycle_frame_done_00ea
 28141 00014C14 4D8B11                  	mov r10, qword [r9]
 28142 00014C17 4D8910                  	mov qword [r8], r10
 28143 00014C1A 4983E808                	sub r8, 8
 28144 00014C1E 4983E908                	sub r9, 8
 28145 00014C22 48FFC9                  	dec rcx
 28146 00014C25 EBE7                    	jmp .L_tc_recycle_frame_loop_00ea
 28147                                  .L_tc_recycle_frame_done_00ea:
 28148 00014C27 498D6008                	lea rsp, [r8 + 8]
 28149 00014C2B 5D                      	pop rbp ; restore the old rbp
 28150 00014C2C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28151 00014C2F EB0B                    	jmp .L_if_end_0084
 28152                                  .L_if_else_0084:
 28153 00014C31 488B4510                	mov rax, ENV
 28154 00014C35 488B4008                	mov rax, qword [rax + 8 * 1]
 28155 00014C39 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28156                                  .L_if_end_0084:
 28157 00014C3C C9                      	leave
 28158 00014C3D C21800                  	ret AND_KILL_FRAME(1)
 28159                                  .L_lambda_simple_end_00b3:	; new closure is in rax
 28160 00014C40 50                      	push rax
 28161 00014C41 488B4520                	mov rax, PARAM(0)	; param run
 28162 00014C45 8F00                    	pop qword [rax]
 28163 00014C47 48B8-                   	mov rax, sob_void
 28163 00014C49 [0000000000000000] 
 28164                                  
 28165                                  	; preparing a tail-call
 28166 00014C51 48B8-                   	mov rax, L_constants + 2135
 28166 00014C53 [5708000000000000] 
 28167 00014C5B 50                      	push rax
 28168 00014C5C 6A01                    	push 1	; arg count
 28169 00014C5E 488B4520                	mov rax, PARAM(0)	; param run
 28170 00014C62 488B00                  	mov rax, qword [rax]
 28171 00014C65 803804                  	cmp byte [rax], T_closure
 28172 00014C68 0F853E290000            	jne L_error_non_closure
 28173 00014C6E FF7001                  	push SOB_CLOSURE_ENV(rax)
 28174 00014C71 FF7508                  	push qword [rbp + 8 * 1]
 28175                                   ; old ret addr
 28176 00014C74 FF7500                  	push qword [rbp]
 28177                                   ; restore the old rbp
 28178 00014C77 BB01000000              	mov rbx, 1
 28179 00014C7C 4883C303                	add rbx, 3
 28180 00014C80 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28181 00014C84 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28182 00014C89 4C8D4DF8                	lea r9, [rbp - 8]
 28183 00014C8D B905000000              	mov rcx, 5
 28184                                  .L_tc_recycle_frame_loop_00eb:
 28185 00014C92 4883F900                	cmp rcx, 0
 28186 00014C96 7413                    	je .L_tc_recycle_frame_done_00eb
 28187 00014C98 4D8B11                  	mov r10, qword [r9]
 28188 00014C9B 4D8910                  	mov qword [r8], r10
 28189 00014C9E 4983E808                	sub r8, 8
 28190 00014CA2 4983E908                	sub r9, 8
 28191 00014CA6 48FFC9                  	dec rcx
 28192 00014CA9 EBE7                    	jmp .L_tc_recycle_frame_loop_00eb
 28193                                  .L_tc_recycle_frame_done_00eb:
 28194 00014CAB 498D6008                	lea rsp, [r8 + 8]
 28195 00014CAF 5D                      	pop rbp ; restore the old rbp
 28196 00014CB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28197 00014CB3 C9                      	leave
 28198 00014CB4 C21800                  	ret AND_KILL_FRAME(1)
 28199                                  .L_lambda_simple_end_00b2:	; new closure is in rax
 28200 00014CB7 803804                  	cmp byte [rax], T_closure
 28201 00014CBA 0F85EC280000            	jne L_error_non_closure
 28202 00014CC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28203 00014CC3 FF7508                  	push qword [rbp + 8 * 1]
 28204                                   ; old ret addr
 28205 00014CC6 FF7500                  	push qword [rbp]
 28206                                   ; restore the old rbp
 28207 00014CC9 BB01000000              	mov rbx, 1
 28208 00014CCE 4883C303                	add rbx, 3
 28209 00014CD2 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28210 00014CD6 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28211 00014CDB 4C8D4DF8                	lea r9, [rbp - 8]
 28212 00014CDF B905000000              	mov rcx, 5
 28213                                  .L_tc_recycle_frame_loop_00e9:
 28214 00014CE4 4883F900                	cmp rcx, 0
 28215 00014CE8 7413                    	je .L_tc_recycle_frame_done_00e9
 28216 00014CEA 4D8B11                  	mov r10, qword [r9]
 28217 00014CED 4D8910                  	mov qword [r8], r10
 28218 00014CF0 4983E808                	sub r8, 8
 28219 00014CF4 4983E908                	sub r9, 8
 28220 00014CF8 48FFC9                  	dec rcx
 28221 00014CFB EBE7                    	jmp .L_tc_recycle_frame_loop_00e9
 28222                                  .L_tc_recycle_frame_done_00e9:
 28223 00014CFD 498D6008                	lea rsp, [r8 + 8]
 28224 00014D01 5D                      	pop rbp ; restore the old rbp
 28225 00014D02 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28226 00014D05 C9                      	leave
 28227 00014D06 C21800                  	ret AND_KILL_FRAME(1)
 28228                                  .L_lambda_simple_end_00b1:	; new closure is in rax
 28229 00014D09 803804                  	cmp byte [rax], T_closure
 28230 00014D0C 0F859A280000            	jne L_error_non_closure
 28231 00014D12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28232 00014D15 FF7508                  	push qword [rbp + 8 * 1]
 28233                                   ; old ret addr
 28234 00014D18 FF7500                  	push qword [rbp]
 28235                                   ; restore the old rbp
 28236 00014D1B BB01000000              	mov rbx, 1
 28237 00014D20 4883C303                	add rbx, 3
 28238 00014D24 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28239 00014D28 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28240 00014D2D 4C8D4DF8                	lea r9, [rbp - 8]
 28241 00014D31 B905000000              	mov rcx, 5
 28242                                  .L_tc_recycle_frame_loop_00e8:
 28243 00014D36 4883F900                	cmp rcx, 0
 28244 00014D3A 7413                    	je .L_tc_recycle_frame_done_00e8
 28245 00014D3C 4D8B11                  	mov r10, qword [r9]
 28246 00014D3F 4D8910                  	mov qword [r8], r10
 28247 00014D42 4983E808                	sub r8, 8
 28248 00014D46 4983E908                	sub r9, 8
 28249 00014D4A 48FFC9                  	dec rcx
 28250 00014D4D EBE7                    	jmp .L_tc_recycle_frame_loop_00e8
 28251                                  .L_tc_recycle_frame_done_00e8:
 28252 00014D4F 498D6008                	lea rsp, [r8 + 8]
 28253 00014D53 5D                      	pop rbp ; restore the old rbp
 28254 00014D54 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28255 00014D57 C9                      	leave
 28256 00014D58 C22000                  	ret AND_KILL_FRAME(2)
 28257                                  .L_lambda_simple_end_00b0:	; new closure is in rax
 28258 00014D5B 48890425[69140000]      	mov qword [free_var_100], rax
 28259 00014D63 48B8-                   	mov rax, sob_void
 28259 00014D65 [0000000000000000] 
 28260                                  
 28261 00014D6D 4889C7                  	mov rdi, rax
 28262 00014D70 E8352B0000              	call print_sexpr_if_not_void
 28263 00014D75 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28264 00014D7A E8D6280000              	call malloc
 28265 00014D7F 50                      	push rax
 28266 00014D80 BF00000000              	mov rdi, 8 * 0	; new rib
 28267 00014D85 E8CB280000              	call malloc
 28268 00014D8A 50                      	push rax
 28269 00014D8B BF08000000              	mov rdi, 8 * 1	; extended env
 28270 00014D90 E8C0280000              	call malloc
 28271 00014D95 488B7D10                	mov rdi, ENV
 28272 00014D99 BE00000000              	mov rsi, 0
 28273 00014D9E BA01000000              	mov rdx, 1
 28274                                  .L_lambda_simple_env_loop_00b4:	; ext_env[i + 1] <-- env[i]
 28275 00014DA3 4883FE00                	cmp rsi, 0
 28276 00014DA7 7410                    	je .L_lambda_simple_env_end_00b4
 28277 00014DA9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28278 00014DAD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28279 00014DB1 48FFC6                  	inc rsi
 28280 00014DB4 48FFC2                  	inc rdx
 28281 00014DB7 EBEA                    	jmp .L_lambda_simple_env_loop_00b4
 28282                                  .L_lambda_simple_env_end_00b4:
 28283 00014DB9 5B                      	pop rbx
 28284 00014DBA BE00000000              	mov rsi, 0
 28285                                  .L_lambda_simple_params_loop_00b4:	; copy params
 28286 00014DBF 4883FE00                	cmp rsi, 0
 28287 00014DC3 740E                    	je .L_lambda_simple_params_end_00b4
 28288 00014DC5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28289 00014DCA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28290 00014DCE 48FFC6                  	inc rsi
 28291 00014DD1 EBEC                    	jmp .L_lambda_simple_params_loop_00b4
 28292                                  .L_lambda_simple_params_end_00b4:
 28293 00014DD3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28294 00014DD6 4889C3                  	mov rbx, rax
 28295 00014DD9 58                      	pop rax
 28296 00014DDA C60004                  	mov byte [rax], T_closure
 28297 00014DDD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28298 00014DE1 48C74009[EE4D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b4
 28299 00014DE9 E96E040000              	jmp .L_lambda_simple_end_00b4
 28300                                  .L_lambda_simple_code_00b4:	; lambda-simple body
 28301 00014DEE 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28302 00014DF4 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 28303 00014DF6 FF742410                	push qword [rsp + 8 * 2]
 28304 00014DFA 6A02                    	push 2
 28305 00014DFC E90D280000              	jmp L_error_incorrect_arity_simple
 28306                                  .L_lambda_simple_arity_check_ok_00b4:
 28307 00014E01 C8000000                	enter 0, 0
 28308                                  	; preparing a tail-call
 28309                                  	; preparing a non-tail-call
 28310 00014E05 488B4520                	mov rax, PARAM(0)	; param n
 28311 00014E09 50                      	push rax
 28312 00014E0A 6A01                    	push 1	; arg count
 28313 00014E0C 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 28314 00014E14 803805                  	cmp byte [rax], T_undefined
 28315 00014E17 0F840B270000            	je L_error_fvar_undefined
 28316 00014E1D 803804                  	cmp byte [rax], T_closure
 28317 00014E20 0F8586270000            	jne L_error_non_closure
 28318 00014E26 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28319 00014E29 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28320 00014E2C 50                      	push rax
 28321 00014E2D 6A01                    	push 1	; arg count
 28322 00014E2F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28323 00014E34 E81C280000              	call malloc
 28324 00014E39 50                      	push rax
 28325 00014E3A BF10000000              	mov rdi, 8 * 2	; new rib
 28326 00014E3F E811280000              	call malloc
 28327 00014E44 50                      	push rax
 28328 00014E45 BF10000000              	mov rdi, 8 * 2	; extended env
 28329 00014E4A E806280000              	call malloc
 28330 00014E4F 488B7D10                	mov rdi, ENV
 28331 00014E53 BE00000000              	mov rsi, 0
 28332 00014E58 BA01000000              	mov rdx, 1
 28333                                  .L_lambda_simple_env_loop_00b5:	; ext_env[i + 1] <-- env[i]
 28334 00014E5D 4883FE01                	cmp rsi, 1
 28335 00014E61 7410                    	je .L_lambda_simple_env_end_00b5
 28336 00014E63 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28337 00014E67 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28338 00014E6B 48FFC6                  	inc rsi
 28339 00014E6E 48FFC2                  	inc rdx
 28340 00014E71 EBEA                    	jmp .L_lambda_simple_env_loop_00b5
 28341                                  .L_lambda_simple_env_end_00b5:
 28342 00014E73 5B                      	pop rbx
 28343 00014E74 BE00000000              	mov rsi, 0
 28344                                  .L_lambda_simple_params_loop_00b5:	; copy params
 28345 00014E79 4883FE02                	cmp rsi, 2
 28346 00014E7D 740E                    	je .L_lambda_simple_params_end_00b5
 28347 00014E7F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28348 00014E84 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28349 00014E88 48FFC6                  	inc rsi
 28350 00014E8B EBEC                    	jmp .L_lambda_simple_params_loop_00b5
 28351                                  .L_lambda_simple_params_end_00b5:
 28352 00014E8D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28353 00014E90 4889C3                  	mov rbx, rax
 28354 00014E93 58                      	pop rax
 28355 00014E94 C60004                  	mov byte [rax], T_closure
 28356 00014E97 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28357 00014E9B 48C74009[A84E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b5
 28358 00014EA3 E962030000              	jmp .L_lambda_simple_end_00b5
 28359                                  .L_lambda_simple_code_00b5:	; lambda-simple body
 28360 00014EA8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28361 00014EAE 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 28362 00014EB0 FF742410                	push qword [rsp + 8 * 2]
 28363 00014EB4 6A01                    	push 1
 28364 00014EB6 E953270000              	jmp L_error_incorrect_arity_simple
 28365                                  .L_lambda_simple_arity_check_ok_00b5:
 28366 00014EBB C8000000                	enter 0, 0
 28367                                  	; preparing a tail-call
 28368 00014EBF 48B8-                   	mov rax, L_constants + 1993
 28368 00014EC1 [C907000000000000] 
 28369 00014EC9 50                      	push rax
 28370 00014ECA 6A01                    	push 1	; arg count
 28371 00014ECC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28372 00014ED1 E87F270000              	call malloc
 28373 00014ED6 50                      	push rax
 28374 00014ED7 BF08000000              	mov rdi, 8 * 1	; new rib
 28375 00014EDC E874270000              	call malloc
 28376 00014EE1 50                      	push rax
 28377 00014EE2 BF18000000              	mov rdi, 8 * 3	; extended env
 28378 00014EE7 E869270000              	call malloc
 28379 00014EEC 488B7D10                	mov rdi, ENV
 28380 00014EF0 BE00000000              	mov rsi, 0
 28381 00014EF5 BA01000000              	mov rdx, 1
 28382                                  .L_lambda_simple_env_loop_00b6:	; ext_env[i + 1] <-- env[i]
 28383 00014EFA 4883FE02                	cmp rsi, 2
 28384 00014EFE 7410                    	je .L_lambda_simple_env_end_00b6
 28385 00014F00 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28386 00014F04 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28387 00014F08 48FFC6                  	inc rsi
 28388 00014F0B 48FFC2                  	inc rdx
 28389 00014F0E EBEA                    	jmp .L_lambda_simple_env_loop_00b6
 28390                                  .L_lambda_simple_env_end_00b6:
 28391 00014F10 5B                      	pop rbx
 28392 00014F11 BE00000000              	mov rsi, 0
 28393                                  .L_lambda_simple_params_loop_00b6:	; copy params
 28394 00014F16 4883FE01                	cmp rsi, 1
 28395 00014F1A 740E                    	je .L_lambda_simple_params_end_00b6
 28396 00014F1C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28397 00014F21 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28398 00014F25 48FFC6                  	inc rsi
 28399 00014F28 EBEC                    	jmp .L_lambda_simple_params_loop_00b6
 28400                                  .L_lambda_simple_params_end_00b6:
 28401 00014F2A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28402 00014F2D 4889C3                  	mov rbx, rax
 28403 00014F30 58                      	pop rax
 28404 00014F31 C60004                  	mov byte [rax], T_closure
 28405 00014F34 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28406 00014F38 48C74009[454F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b6
 28407 00014F40 E973020000              	jmp .L_lambda_simple_end_00b6
 28408                                  .L_lambda_simple_code_00b6:	; lambda-simple body
 28409 00014F45 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28410 00014F4B 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 28411 00014F4D FF742410                	push qword [rsp + 8 * 2]
 28412 00014F51 6A01                    	push 1
 28413 00014F53 E9B6260000              	jmp L_error_incorrect_arity_simple
 28414                                  .L_lambda_simple_arity_check_ok_00b6:
 28415 00014F58 C8000000                	enter 0, 0
 28416 00014F5C BF08000000              	mov rdi, 8*1
 28417 00014F61 E8EF260000              	call malloc
 28418 00014F66 488B5D20                	mov rbx, PARAM(0)
 28419 00014F6A 488918                  	mov qword [rax], rbx
 28420 00014F6D 48894520                	mov PARAM(0), rax
 28421 00014F71 48B8-                   	mov rax, sob_void
 28421 00014F73 [0000000000000000] 
 28422                                  
 28423 00014F7B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28424 00014F80 E8D0260000              	call malloc
 28425 00014F85 50                      	push rax
 28426 00014F86 BF08000000              	mov rdi, 8 * 1	; new rib
 28427 00014F8B E8C5260000              	call malloc
 28428 00014F90 50                      	push rax
 28429 00014F91 BF20000000              	mov rdi, 8 * 4	; extended env
 28430 00014F96 E8BA260000              	call malloc
 28431 00014F9B 488B7D10                	mov rdi, ENV
 28432 00014F9F BE00000000              	mov rsi, 0
 28433 00014FA4 BA01000000              	mov rdx, 1
 28434                                  .L_lambda_simple_env_loop_00b7:	; ext_env[i + 1] <-- env[i]
 28435 00014FA9 4883FE03                	cmp rsi, 3
 28436 00014FAD 7410                    	je .L_lambda_simple_env_end_00b7
 28437 00014FAF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28438 00014FB3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28439 00014FB7 48FFC6                  	inc rsi
 28440 00014FBA 48FFC2                  	inc rdx
 28441 00014FBD EBEA                    	jmp .L_lambda_simple_env_loop_00b7
 28442                                  .L_lambda_simple_env_end_00b7:
 28443 00014FBF 5B                      	pop rbx
 28444 00014FC0 BE00000000              	mov rsi, 0
 28445                                  .L_lambda_simple_params_loop_00b7:	; copy params
 28446 00014FC5 4883FE01                	cmp rsi, 1
 28447 00014FC9 740E                    	je .L_lambda_simple_params_end_00b7
 28448 00014FCB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28449 00014FD0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28450 00014FD4 48FFC6                  	inc rsi
 28451 00014FD7 EBEC                    	jmp .L_lambda_simple_params_loop_00b7
 28452                                  .L_lambda_simple_params_end_00b7:
 28453 00014FD9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28454 00014FDC 4889C3                  	mov rbx, rax
 28455 00014FDF 58                      	pop rax
 28456 00014FE0 C60004                  	mov byte [rax], T_closure
 28457 00014FE3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28458 00014FE7 48C74009[F44F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b7
 28459 00014FEF E94D010000              	jmp .L_lambda_simple_end_00b7
 28460                                  .L_lambda_simple_code_00b7:	; lambda-simple body
 28461 00014FF4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28462 00014FFA 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 28463 00014FFC FF742410                	push qword [rsp + 8 * 2]
 28464 00015000 6A01                    	push 1
 28465 00015002 E907260000              	jmp L_error_incorrect_arity_simple
 28466                                  .L_lambda_simple_arity_check_ok_00b7:
 28467 00015007 C8000000                	enter 0, 0
 28468                                  	; preparing a non-tail-call
 28469 0001500B 488B4510                	mov rax, ENV
 28470 0001500F 488B4010                	mov rax, qword [rax + 8 * 2]
 28471 00015013 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28472 00015016 50                      	push rax
 28473 00015017 488B4520                	mov rax, PARAM(0)	; param i
 28474 0001501B 50                      	push rax
 28475 0001501C 6A02                    	push 2	; arg count
 28476 0001501E 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28477 00015026 803805                  	cmp byte [rax], T_undefined
 28478 00015029 0F84F9240000            	je L_error_fvar_undefined
 28479 0001502F 803804                  	cmp byte [rax], T_closure
 28480 00015032 0F8574250000            	jne L_error_non_closure
 28481 00015038 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28482 0001503B FF5009                  	call SOB_CLOSURE_CODE(rax)
 28483 0001503E 483D[02000000]          	cmp rax, sob_boolean_false
 28484 00015044 0F84E8000000            	je .L_if_else_0085
 28485                                  	; preparing a non-tail-call
 28486                                  	; preparing a non-tail-call
 28487 0001504A 488B4520                	mov rax, PARAM(0)	; param i
 28488 0001504E 50                      	push rax
 28489 0001504F 6A01                    	push 1	; arg count
 28490 00015051 488B4510                	mov rax, ENV
 28491 00015055 488B4010                	mov rax, qword [rax + 8 * 2]
 28492 00015059 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28493 0001505D 803804                  	cmp byte [rax], T_closure
 28494 00015060 0F8546250000            	jne L_error_non_closure
 28495 00015066 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28496 00015069 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28497 0001506C 50                      	push rax
 28498 0001506D 488B4520                	mov rax, PARAM(0)	; param i
 28499 00015071 50                      	push rax
 28500 00015072 488B4510                	mov rax, ENV
 28501 00015076 488B4008                	mov rax, qword [rax + 8 * 1]
 28502 0001507A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28503 0001507D 50                      	push rax
 28504 0001507E 6A03                    	push 3	; arg count
 28505 00015080 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 28506 00015088 803805                  	cmp byte [rax], T_undefined
 28507 0001508B 0F8497240000            	je L_error_fvar_undefined
 28508 00015091 803804                  	cmp byte [rax], T_closure
 28509 00015094 0F8512250000            	jne L_error_non_closure
 28510 0001509A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28511 0001509D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28512                                  
 28513                                  	; preparing a tail-call
 28514                                  	; preparing a non-tail-call
 28515 000150A0 48B8-                   	mov rax, L_constants + 2270
 28515 000150A2 [DE08000000000000] 
 28516 000150AA 50                      	push rax
 28517 000150AB 488B4520                	mov rax, PARAM(0)	; param i
 28518 000150AF 50                      	push rax
 28519 000150B0 6A02                    	push 2	; arg count
 28520 000150B2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28521 000150BA 803805                  	cmp byte [rax], T_undefined
 28522 000150BD 0F8465240000            	je L_error_fvar_undefined
 28523 000150C3 803804                  	cmp byte [rax], T_closure
 28524 000150C6 0F85E0240000            	jne L_error_non_closure
 28525 000150CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 28526 000150CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 28527 000150D2 50                      	push rax
 28528 000150D3 6A01                    	push 1	; arg count
 28529 000150D5 488B4510                	mov rax, ENV
 28530 000150D9 488B00                  	mov rax, qword [rax + 8 * 0]
 28531 000150DC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28532 000150DF 488B00                  	mov rax, qword [rax]
 28533 000150E2 803804                  	cmp byte [rax], T_closure
 28534 000150E5 0F85C1240000            	jne L_error_non_closure
 28535 000150EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28536 000150EE FF7508                  	push qword [rbp + 8 * 1]
 28537                                   ; old ret addr
 28538 000150F1 FF7500                  	push qword [rbp]
 28539                                   ; restore the old rbp
 28540 000150F4 BB01000000              	mov rbx, 1
 28541 000150F9 4883C303                	add rbx, 3
 28542 000150FD 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28543 00015101 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28544 00015106 4C8D4DF8                	lea r9, [rbp - 8]
 28545 0001510A B905000000              	mov rcx, 5
 28546                                  .L_tc_recycle_frame_loop_00ee:
 28547 0001510F 4883F900                	cmp rcx, 0
 28548 00015113 7413                    	je .L_tc_recycle_frame_done_00ee
 28549 00015115 4D8B11                  	mov r10, qword [r9]
 28550 00015118 4D8910                  	mov qword [r8], r10
 28551 0001511B 4983E808                	sub r8, 8
 28552 0001511F 4983E908                	sub r9, 8
 28553 00015123 48FFC9                  	dec rcx
 28554 00015126 EBE7                    	jmp .L_tc_recycle_frame_loop_00ee
 28555                                  .L_tc_recycle_frame_done_00ee:
 28556 00015128 498D6008                	lea rsp, [r8 + 8]
 28557 0001512C 5D                      	pop rbp ; restore the old rbp
 28558 0001512D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28559 00015130 EB0B                    	jmp .L_if_end_0085
 28560                                  .L_if_else_0085:
 28561 00015132 488B4510                	mov rax, ENV
 28562 00015136 488B4008                	mov rax, qword [rax + 8 * 1]
 28563 0001513A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28564                                  .L_if_end_0085:
 28565 0001513D C9                      	leave
 28566 0001513E C21800                  	ret AND_KILL_FRAME(1)
 28567                                  .L_lambda_simple_end_00b7:	; new closure is in rax
 28568 00015141 50                      	push rax
 28569 00015142 488B4520                	mov rax, PARAM(0)	; param run
 28570 00015146 8F00                    	pop qword [rax]
 28571 00015148 48B8-                   	mov rax, sob_void
 28571 0001514A [0000000000000000] 
 28572                                  
 28573                                  	; preparing a tail-call
 28574 00015152 48B8-                   	mov rax, L_constants + 2135
 28574 00015154 [5708000000000000] 
 28575 0001515C 50                      	push rax
 28576 0001515D 6A01                    	push 1	; arg count
 28577 0001515F 488B4520                	mov rax, PARAM(0)	; param run
 28578 00015163 488B00                  	mov rax, qword [rax]
 28579 00015166 803804                  	cmp byte [rax], T_closure
 28580 00015169 0F853D240000            	jne L_error_non_closure
 28581 0001516F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28582 00015172 FF7508                  	push qword [rbp + 8 * 1]
 28583                                   ; old ret addr
 28584 00015175 FF7500                  	push qword [rbp]
 28585                                   ; restore the old rbp
 28586 00015178 BB01000000              	mov rbx, 1
 28587 0001517D 4883C303                	add rbx, 3
 28588 00015181 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28589 00015185 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28590 0001518A 4C8D4DF8                	lea r9, [rbp - 8]
 28591 0001518E B905000000              	mov rcx, 5
 28592                                  .L_tc_recycle_frame_loop_00ef:
 28593 00015193 4883F900                	cmp rcx, 0
 28594 00015197 7413                    	je .L_tc_recycle_frame_done_00ef
 28595 00015199 4D8B11                  	mov r10, qword [r9]
 28596 0001519C 4D8910                  	mov qword [r8], r10
 28597 0001519F 4983E808                	sub r8, 8
 28598 000151A3 4983E908                	sub r9, 8
 28599 000151A7 48FFC9                  	dec rcx
 28600 000151AA EBE7                    	jmp .L_tc_recycle_frame_loop_00ef
 28601                                  .L_tc_recycle_frame_done_00ef:
 28602 000151AC 498D6008                	lea rsp, [r8 + 8]
 28603 000151B0 5D                      	pop rbp ; restore the old rbp
 28604 000151B1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28605 000151B4 C9                      	leave
 28606 000151B5 C21800                  	ret AND_KILL_FRAME(1)
 28607                                  .L_lambda_simple_end_00b6:	; new closure is in rax
 28608 000151B8 803804                  	cmp byte [rax], T_closure
 28609 000151BB 0F85EB230000            	jne L_error_non_closure
 28610 000151C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28611 000151C4 FF7508                  	push qword [rbp + 8 * 1]
 28612                                   ; old ret addr
 28613 000151C7 FF7500                  	push qword [rbp]
 28614                                   ; restore the old rbp
 28615 000151CA BB01000000              	mov rbx, 1
 28616 000151CF 4883C303                	add rbx, 3
 28617 000151D3 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28618 000151D7 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28619 000151DC 4C8D4DF8                	lea r9, [rbp - 8]
 28620 000151E0 B905000000              	mov rcx, 5
 28621                                  .L_tc_recycle_frame_loop_00ed:
 28622 000151E5 4883F900                	cmp rcx, 0
 28623 000151E9 7413                    	je .L_tc_recycle_frame_done_00ed
 28624 000151EB 4D8B11                  	mov r10, qword [r9]
 28625 000151EE 4D8910                  	mov qword [r8], r10
 28626 000151F1 4983E808                	sub r8, 8
 28627 000151F5 4983E908                	sub r9, 8
 28628 000151F9 48FFC9                  	dec rcx
 28629 000151FC EBE7                    	jmp .L_tc_recycle_frame_loop_00ed
 28630                                  .L_tc_recycle_frame_done_00ed:
 28631 000151FE 498D6008                	lea rsp, [r8 + 8]
 28632 00015202 5D                      	pop rbp ; restore the old rbp
 28633 00015203 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28634 00015206 C9                      	leave
 28635 00015207 C21800                  	ret AND_KILL_FRAME(1)
 28636                                  .L_lambda_simple_end_00b5:	; new closure is in rax
 28637 0001520A 803804                  	cmp byte [rax], T_closure
 28638 0001520D 0F8599230000            	jne L_error_non_closure
 28639 00015213 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28640 00015216 FF7508                  	push qword [rbp + 8 * 1]
 28641                                   ; old ret addr
 28642 00015219 FF7500                  	push qword [rbp]
 28643                                   ; restore the old rbp
 28644 0001521C BB01000000              	mov rbx, 1
 28645 00015221 4883C303                	add rbx, 3
 28646 00015225 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28647 00015229 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28648 0001522E 4C8D4DF8                	lea r9, [rbp - 8]
 28649 00015232 B905000000              	mov rcx, 5
 28650                                  .L_tc_recycle_frame_loop_00ec:
 28651 00015237 4883F900                	cmp rcx, 0
 28652 0001523B 7413                    	je .L_tc_recycle_frame_done_00ec
 28653 0001523D 4D8B11                  	mov r10, qword [r9]
 28654 00015240 4D8910                  	mov qword [r8], r10
 28655 00015243 4983E808                	sub r8, 8
 28656 00015247 4983E908                	sub r9, 8
 28657 0001524B 48FFC9                  	dec rcx
 28658 0001524E EBE7                    	jmp .L_tc_recycle_frame_loop_00ec
 28659                                  .L_tc_recycle_frame_done_00ec:
 28660 00015250 498D6008                	lea rsp, [r8 + 8]
 28661 00015254 5D                      	pop rbp ; restore the old rbp
 28662 00015255 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28663 00015258 C9                      	leave
 28664 00015259 C22000                  	ret AND_KILL_FRAME(2)
 28665                                  .L_lambda_simple_end_00b4:	; new closure is in rax
 28666 0001525C 48890425[8B140000]      	mov qword [free_var_102], rax
 28667 00015264 48B8-                   	mov rax, sob_void
 28667 00015266 [0000000000000000] 
 28668                                  
 28669 0001526E 4889C7                  	mov rdi, rax
 28670 00015271 E834260000              	call print_sexpr_if_not_void
 28671 00015276 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28672 0001527B E8D5230000              	call malloc
 28673 00015280 50                      	push rax
 28674 00015281 BF00000000              	mov rdi, 8 * 0	; new rib
 28675 00015286 E8CA230000              	call malloc
 28676 0001528B 50                      	push rax
 28677 0001528C BF08000000              	mov rdi, 8 * 1	; extended env
 28678 00015291 E8BF230000              	call malloc
 28679 00015296 488B7D10                	mov rdi, ENV
 28680 0001529A BE00000000              	mov rsi, 0
 28681 0001529F BA01000000              	mov rdx, 1
 28682                                  .L_lambda_simple_env_loop_00b8:	; ext_env[i + 1] <-- env[i]
 28683 000152A4 4883FE00                	cmp rsi, 0
 28684 000152A8 7410                    	je .L_lambda_simple_env_end_00b8
 28685 000152AA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28686 000152AE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28687 000152B2 48FFC6                  	inc rsi
 28688 000152B5 48FFC2                  	inc rdx
 28689 000152B8 EBEA                    	jmp .L_lambda_simple_env_loop_00b8
 28690                                  .L_lambda_simple_env_end_00b8:
 28691 000152BA 5B                      	pop rbx
 28692 000152BB BE00000000              	mov rsi, 0
 28693                                  .L_lambda_simple_params_loop_00b8:	; copy params
 28694 000152C0 4883FE00                	cmp rsi, 0
 28695 000152C4 740E                    	je .L_lambda_simple_params_end_00b8
 28696 000152C6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28697 000152CB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28698 000152CF 48FFC6                  	inc rsi
 28699 000152D2 EBEC                    	jmp .L_lambda_simple_params_loop_00b8
 28700                                  .L_lambda_simple_params_end_00b8:
 28701 000152D4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28702 000152D7 4889C3                  	mov rbx, rax
 28703 000152DA 58                      	pop rax
 28704 000152DB C60004                  	mov byte [rax], T_closure
 28705 000152DE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28706 000152E2 48C74009[EF520100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b8
 28707 000152EA E96B020000              	jmp .L_lambda_simple_end_00b8
 28708                                  .L_lambda_simple_code_00b8:	; lambda-simple body
 28709 000152EF 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28710 000152F5 740B                    	je .L_lambda_simple_arity_check_ok_00b8
 28711 000152F7 FF742410                	push qword [rsp + 8 * 2]
 28712 000152FB 6A03                    	push 3
 28713 000152FD E90C230000              	jmp L_error_incorrect_arity_simple
 28714                                  .L_lambda_simple_arity_check_ok_00b8:
 28715 00015302 C8000000                	enter 0, 0
 28716                                  	; preparing a non-tail-call
 28717 00015306 488B4530                	mov rax, PARAM(2)	; param n
 28718 0001530A 50                      	push rax
 28719 0001530B 6A01                    	push 1	; arg count
 28720 0001530D 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 28721 00015315 803805                  	cmp byte [rax], T_undefined
 28722 00015318 0F840A220000            	je L_error_fvar_undefined
 28723 0001531E 803804                  	cmp byte [rax], T_closure
 28724 00015321 0F8585220000            	jne L_error_non_closure
 28725 00015327 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28726 0001532A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28727 0001532D 483D[02000000]          	cmp rax, sob_boolean_false
 28728 00015333 740F                    	je .L_if_else_0088
 28729 00015335 48B8-                   	mov rax, L_constants + 3485
 28729 00015337 [9D0D000000000000] 
 28730 0001533F E912020000              	jmp .L_if_end_0088
 28731                                  .L_if_else_0088:
 28732                                  	; preparing a non-tail-call
 28733 00015344 488B4528                	mov rax, PARAM(1)	; param b
 28734 00015348 50                      	push rax
 28735 00015349 488B4520                	mov rax, PARAM(0)	; param a
 28736 0001534D 50                      	push rax
 28737 0001534E 6A02                    	push 2	; arg count
 28738 00015350 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28739 00015358 803805                  	cmp byte [rax], T_undefined
 28740 0001535B 0F84C7210000            	je L_error_fvar_undefined
 28741 00015361 803804                  	cmp byte [rax], T_closure
 28742 00015364 0F8542220000            	jne L_error_non_closure
 28743 0001536A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28744 0001536D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28745 00015370 483D[02000000]          	cmp rax, sob_boolean_false
 28746 00015376 0F84CB000000            	je .L_if_else_0087
 28747                                  	; preparing a tail-call
 28748                                  	; preparing a non-tail-call
 28749 0001537C 488B4530                	mov rax, PARAM(2)	; param n
 28750 00015380 50                      	push rax
 28751                                  	; preparing a non-tail-call
 28752 00015381 488B4520                	mov rax, PARAM(0)	; param a
 28753 00015385 50                      	push rax
 28754 00015386 488B4528                	mov rax, PARAM(1)	; param b
 28755 0001538A 50                      	push rax
 28756 0001538B 6A02                    	push 2	; arg count
 28757 0001538D 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 28758 00015395 803805                  	cmp byte [rax], T_undefined
 28759 00015398 0F848A210000            	je L_error_fvar_undefined
 28760 0001539E 803804                  	cmp byte [rax], T_closure
 28761 000153A1 0F8505220000            	jne L_error_non_closure
 28762 000153A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28763 000153AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 28764 000153AD 50                      	push rax
 28765 000153AE 488B4520                	mov rax, PARAM(0)	; param a
 28766 000153B2 50                      	push rax
 28767 000153B3 6A03                    	push 3	; arg count
 28768 000153B5 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28769 000153BD 803805                  	cmp byte [rax], T_undefined
 28770 000153C0 0F8462210000            	je L_error_fvar_undefined
 28771 000153C6 803804                  	cmp byte [rax], T_closure
 28772 000153C9 0F85DD210000            	jne L_error_non_closure
 28773 000153CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 28774 000153D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28775 000153D5 50                      	push rax
 28776 000153D6 48B8-                   	mov rax, L_constants + 3485
 28776 000153D8 [9D0D000000000000] 
 28777 000153E0 50                      	push rax
 28778 000153E1 6A02                    	push 2	; arg count
 28779 000153E3 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28780 000153EB 803805                  	cmp byte [rax], T_undefined
 28781 000153EE 0F8434210000            	je L_error_fvar_undefined
 28782 000153F4 803804                  	cmp byte [rax], T_closure
 28783 000153F7 0F85AF210000            	jne L_error_non_closure
 28784 000153FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 28785 00015400 FF7508                  	push qword [rbp + 8 * 1]
 28786                                   ; old ret addr
 28787 00015403 FF7500                  	push qword [rbp]
 28788                                   ; restore the old rbp
 28789 00015406 BB02000000              	mov rbx, 2
 28790 0001540B 4883C303                	add rbx, 3
 28791 0001540F 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28792 00015413 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28793 00015418 4C8D4DF8                	lea r9, [rbp - 8]
 28794 0001541C B906000000              	mov rcx, 6
 28795                                  .L_tc_recycle_frame_loop_00f0:
 28796 00015421 4883F900                	cmp rcx, 0
 28797 00015425 7413                    	je .L_tc_recycle_frame_done_00f0
 28798 00015427 4D8B11                  	mov r10, qword [r9]
 28799 0001542A 4D8910                  	mov qword [r8], r10
 28800 0001542D 4983E808                	sub r8, 8
 28801 00015431 4983E908                	sub r9, 8
 28802 00015435 48FFC9                  	dec rcx
 28803 00015438 EBE7                    	jmp .L_tc_recycle_frame_loop_00f0
 28804                                  .L_tc_recycle_frame_done_00f0:
 28805 0001543A 498D6008                	lea rsp, [r8 + 8]
 28806 0001543E 5D                      	pop rbp ; restore the old rbp
 28807 0001543F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28808 00015442 E90F010000              	jmp .L_if_end_0087
 28809                                  .L_if_else_0087:
 28810                                  	; preparing a non-tail-call
 28811 00015447 488B4528                	mov rax, PARAM(1)	; param b
 28812 0001544B 50                      	push rax
 28813 0001544C 488B4520                	mov rax, PARAM(0)	; param a
 28814 00015450 50                      	push rax
 28815 00015451 6A02                    	push 2	; arg count
 28816 00015453 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 28817 0001545B 803805                  	cmp byte [rax], T_undefined
 28818 0001545E 0F84C4200000            	je L_error_fvar_undefined
 28819 00015464 803804                  	cmp byte [rax], T_closure
 28820 00015467 0F853F210000            	jne L_error_non_closure
 28821 0001546D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28822 00015470 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28823 00015473 483D[02000000]          	cmp rax, sob_boolean_false
 28824 00015479 740F                    	je .L_if_else_0086
 28825 0001547B 48B8-                   	mov rax, L_constants + 3485
 28825 0001547D [9D0D000000000000] 
 28826 00015485 E9CC000000              	jmp .L_if_end_0086
 28827                                  .L_if_else_0086:
 28828                                  	; preparing a tail-call
 28829                                  	; preparing a non-tail-call
 28830                                  	; preparing a non-tail-call
 28831 0001548A 48B8-                   	mov rax, L_constants + 2270
 28831 0001548C [DE08000000000000] 
 28832 00015494 50                      	push rax
 28833 00015495 488B4530                	mov rax, PARAM(2)	; param n
 28834 00015499 50                      	push rax
 28835 0001549A 6A02                    	push 2	; arg count
 28836 0001549C 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 28837 000154A4 803805                  	cmp byte [rax], T_undefined
 28838 000154A7 0F847B200000            	je L_error_fvar_undefined
 28839 000154AD 803804                  	cmp byte [rax], T_closure
 28840 000154B0 0F85F6200000            	jne L_error_non_closure
 28841 000154B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28842 000154B9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28843 000154BC 50                      	push rax
 28844 000154BD 488B4520                	mov rax, PARAM(0)	; param a
 28845 000154C1 50                      	push rax
 28846 000154C2 488B4528                	mov rax, PARAM(1)	; param b
 28847 000154C6 50                      	push rax
 28848 000154C7 6A03                    	push 3	; arg count
 28849 000154C9 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 28850 000154D1 803805                  	cmp byte [rax], T_undefined
 28851 000154D4 0F844E200000            	je L_error_fvar_undefined
 28852 000154DA 803804                  	cmp byte [rax], T_closure
 28853 000154DD 0F85C9200000            	jne L_error_non_closure
 28854 000154E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28855 000154E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28856 000154E9 50                      	push rax
 28857 000154EA 48B8-                   	mov rax, L_constants + 3485
 28857 000154EC [9D0D000000000000] 
 28858 000154F4 50                      	push rax
 28859 000154F5 6A02                    	push 2	; arg count
 28860 000154F7 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 28861 000154FF 803805                  	cmp byte [rax], T_undefined
 28862 00015502 0F8420200000            	je L_error_fvar_undefined
 28863 00015508 803804                  	cmp byte [rax], T_closure
 28864 0001550B 0F859B200000            	jne L_error_non_closure
 28865 00015511 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28866 00015514 FF7508                  	push qword [rbp + 8 * 1]
 28867                                   ; old ret addr
 28868 00015517 FF7500                  	push qword [rbp]
 28869                                   ; restore the old rbp
 28870 0001551A BB02000000              	mov rbx, 2
 28871 0001551F 4883C303                	add rbx, 3
 28872 00015523 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28873 00015527 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28874 0001552C 4C8D4DF8                	lea r9, [rbp - 8]
 28875 00015530 B906000000              	mov rcx, 6
 28876                                  .L_tc_recycle_frame_loop_00f1:
 28877 00015535 4883F900                	cmp rcx, 0
 28878 00015539 7413                    	je .L_tc_recycle_frame_done_00f1
 28879 0001553B 4D8B11                  	mov r10, qword [r9]
 28880 0001553E 4D8910                  	mov qword [r8], r10
 28881 00015541 4983E808                	sub r8, 8
 28882 00015545 4983E908                	sub r9, 8
 28883 00015549 48FFC9                  	dec rcx
 28884 0001554C EBE7                    	jmp .L_tc_recycle_frame_loop_00f1
 28885                                  .L_tc_recycle_frame_done_00f1:
 28886 0001554E 498D6008                	lea rsp, [r8 + 8]
 28887 00015552 5D                      	pop rbp ; restore the old rbp
 28888 00015553 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28889                                  .L_if_end_0086:
 28890                                  .L_if_end_0087:
 28891                                  .L_if_end_0088:
 28892 00015556 C9                      	leave
 28893 00015557 C22800                  	ret AND_KILL_FRAME(3)
 28894                                  .L_lambda_simple_end_00b8:	; new closure is in rax
 28895 0001555A 48890425[36140000]      	mov qword [free_var_97], rax
 28896 00015562 48B8-                   	mov rax, sob_void
 28896 00015564 [0000000000000000] 
 28897                                  
 28898 0001556C 4889C7                  	mov rdi, rax
 28899 0001556F E836230000              	call print_sexpr_if_not_void
 28900 00015574 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28901 00015579 E8D7200000              	call malloc
 28902 0001557E 50                      	push rax
 28903 0001557F BF00000000              	mov rdi, 8 * 0	; new rib
 28904 00015584 E8CC200000              	call malloc
 28905 00015589 50                      	push rax
 28906 0001558A BF08000000              	mov rdi, 8 * 1	; extended env
 28907 0001558F E8C1200000              	call malloc
 28908 00015594 488B7D10                	mov rdi, ENV
 28909 00015598 BE00000000              	mov rsi, 0
 28910 0001559D BA01000000              	mov rdx, 1
 28911                                  .L_lambda_simple_env_loop_00b9:	; ext_env[i + 1] <-- env[i]
 28912 000155A2 4883FE00                	cmp rsi, 0
 28913 000155A6 7410                    	je .L_lambda_simple_env_end_00b9
 28914 000155A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28915 000155AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28916 000155B0 48FFC6                  	inc rsi
 28917 000155B3 48FFC2                  	inc rdx
 28918 000155B6 EBEA                    	jmp .L_lambda_simple_env_loop_00b9
 28919                                  .L_lambda_simple_env_end_00b9:
 28920 000155B8 5B                      	pop rbx
 28921 000155B9 BE00000000              	mov rsi, 0
 28922                                  .L_lambda_simple_params_loop_00b9:	; copy params
 28923 000155BE 4883FE00                	cmp rsi, 0
 28924 000155C2 740E                    	je .L_lambda_simple_params_end_00b9
 28925 000155C4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28926 000155C9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28927 000155CD 48FFC6                  	inc rsi
 28928 000155D0 EBEC                    	jmp .L_lambda_simple_params_loop_00b9
 28929                                  .L_lambda_simple_params_end_00b9:
 28930 000155D2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28931 000155D5 4889C3                  	mov rbx, rax
 28932 000155D8 58                      	pop rax
 28933 000155D9 C60004                  	mov byte [rax], T_closure
 28934 000155DC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28935 000155E0 48C74009[ED550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b9
 28936 000155E8 E987000000              	jmp .L_lambda_simple_end_00b9
 28937                                  .L_lambda_simple_code_00b9:	; lambda-simple body
 28938 000155ED 48837C241000            	cmp qword [rsp + 8 * 2], 0
 28939 000155F3 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 28940 000155F5 FF742410                	push qword [rsp + 8 * 2]
 28941 000155F9 6A00                    	push 0
 28942 000155FB E90E200000              	jmp L_error_incorrect_arity_simple
 28943                                  .L_lambda_simple_arity_check_ok_00b9:
 28944 00015600 C8000000                	enter 0, 0
 28945                                  	; preparing a tail-call
 28946 00015604 48B8-                   	mov rax, L_constants + 3510
 28946 00015606 [B60D000000000000] 
 28947 0001560E 50                      	push rax
 28948 0001560F 6A01                    	push 1	; arg count
 28949 00015611 488B0425[BB170000]      	mov rax, qword [free_var_150]	; free var write-char
 28950 00015619 803805                  	cmp byte [rax], T_undefined
 28951 0001561C 0F84061F0000            	je L_error_fvar_undefined
 28952 00015622 803804                  	cmp byte [rax], T_closure
 28953 00015625 0F85811F0000            	jne L_error_non_closure
 28954 0001562B FF7001                  	push SOB_CLOSURE_ENV(rax)
 28955 0001562E FF7508                  	push qword [rbp + 8 * 1]
 28956                                   ; old ret addr
 28957 00015631 FF7500                  	push qword [rbp]
 28958                                   ; restore the old rbp
 28959 00015634 BB01000000              	mov rbx, 1
 28960 00015639 4883C303                	add rbx, 3
 28961 0001563D 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 28962 00015641 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 28963 00015646 4C8D4DF8                	lea r9, [rbp - 8]
 28964 0001564A B905000000              	mov rcx, 5
 28965                                  .L_tc_recycle_frame_loop_00f2:
 28966 0001564F 4883F900                	cmp rcx, 0
 28967 00015653 7413                    	je .L_tc_recycle_frame_done_00f2
 28968 00015655 4D8B11                  	mov r10, qword [r9]
 28969 00015658 4D8910                  	mov qword [r8], r10
 28970 0001565B 4983E808                	sub r8, 8
 28971 0001565F 4983E908                	sub r9, 8
 28972 00015663 48FFC9                  	dec rcx
 28973 00015666 EBE7                    	jmp .L_tc_recycle_frame_loop_00f2
 28974                                  .L_tc_recycle_frame_done_00f2:
 28975 00015668 498D6008                	lea rsp, [r8 + 8]
 28976 0001566C 5D                      	pop rbp ; restore the old rbp
 28977 0001566D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28978 00015670 C9                      	leave
 28979 00015671 C21000                  	ret AND_KILL_FRAME(0)
 28980                                  .L_lambda_simple_end_00b9:	; new closure is in rax
 28981 00015674 48890425[BE140000]      	mov qword [free_var_105], rax
 28982 0001567C 48B8-                   	mov rax, sob_void
 28982 0001567E [0000000000000000] 
 28983                                  
 28984 00015686 4889C7                  	mov rdi, rax
 28985 00015689 E81C220000              	call print_sexpr_if_not_void
 28986 0001568E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28987 00015693 E8BD1F0000              	call malloc
 28988 00015698 50                      	push rax
 28989 00015699 BF00000000              	mov rdi, 8 * 0	; new rib
 28990 0001569E E8B21F0000              	call malloc
 28991 000156A3 50                      	push rax
 28992 000156A4 BF08000000              	mov rdi, 8 * 1	; extended env
 28993 000156A9 E8A71F0000              	call malloc
 28994 000156AE 488B7D10                	mov rdi, ENV
 28995 000156B2 BE00000000              	mov rsi, 0
 28996 000156B7 BA01000000              	mov rdx, 1
 28997                                  .L_lambda_simple_env_loop_00ba:	; ext_env[i + 1] <-- env[i]
 28998 000156BC 4883FE00                	cmp rsi, 0
 28999 000156C0 7410                    	je .L_lambda_simple_env_end_00ba
 29000 000156C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29001 000156C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29002 000156CA 48FFC6                  	inc rsi
 29003 000156CD 48FFC2                  	inc rdx
 29004 000156D0 EBEA                    	jmp .L_lambda_simple_env_loop_00ba
 29005                                  .L_lambda_simple_env_end_00ba:
 29006 000156D2 5B                      	pop rbx
 29007 000156D3 BE00000000              	mov rsi, 0
 29008                                  .L_lambda_simple_params_loop_00ba:	; copy params
 29009 000156D8 4883FE00                	cmp rsi, 0
 29010 000156DC 740E                    	je .L_lambda_simple_params_end_00ba
 29011 000156DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29012 000156E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29013 000156E7 48FFC6                  	inc rsi
 29014 000156EA EBEC                    	jmp .L_lambda_simple_params_loop_00ba
 29015                                  .L_lambda_simple_params_end_00ba:
 29016 000156EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29017 000156EF 4889C3                  	mov rbx, rax
 29018 000156F2 58                      	pop rax
 29019 000156F3 C60004                  	mov byte [rax], T_closure
 29020 000156F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29021 000156FA 48C74009[04570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ba
 29022 00015702 EB25                    	jmp .L_lambda_simple_end_00ba
 29023                                  .L_lambda_simple_code_00ba:	; lambda-simple body
 29024 00015704 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29025 0001570A 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 29026 0001570C FF742410                	push qword [rsp + 8 * 2]
 29027 00015710 6A00                    	push 0
 29028 00015712 E9F71E0000              	jmp L_error_incorrect_arity_simple
 29029                                  .L_lambda_simple_arity_check_ok_00ba:
 29030 00015717 C8000000                	enter 0, 0
 29031 0001571B 48B8-                   	mov rax, L_constants + 0
 29031 0001571D [0000000000000000] 
 29032 00015725 C9                      	leave
 29033 00015726 C21000                  	ret AND_KILL_FRAME(0)
 29034                                  .L_lambda_simple_end_00ba:	; new closure is in rax
 29035 00015729 48890425[AA170000]      	mov qword [free_var_149], rax
 29036 00015731 48B8-                   	mov rax, sob_void
 29036 00015733 [0000000000000000] 
 29037                                  
 29038 0001573B 4889C7                  	mov rdi, rax
 29039 0001573E E867210000              	call print_sexpr_if_not_void
 29040                                  	; preparing a non-tail-call
 29041 00015743 48B8-                   	mov rax, L_constants + 2
 29041 00015745 [0200000000000000] 
 29042 0001574D 50                      	push rax
 29043 0001574E 6A01                    	push 1	; arg count
 29044 00015750 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29045 00015755 E8FB1E0000              	call malloc
 29046 0001575A 50                      	push rax
 29047 0001575B BF00000000              	mov rdi, 8 * 0	; new rib
 29048 00015760 E8F01E0000              	call malloc
 29049 00015765 50                      	push rax
 29050 00015766 BF08000000              	mov rdi, 8 * 1	; extended env
 29051 0001576B E8E51E0000              	call malloc
 29052 00015770 488B7D10                	mov rdi, ENV
 29053 00015774 BE00000000              	mov rsi, 0
 29054 00015779 BA01000000              	mov rdx, 1
 29055                                  .L_lambda_simple_env_loop_00bb:	; ext_env[i + 1] <-- env[i]
 29056 0001577E 4883FE00                	cmp rsi, 0
 29057 00015782 7410                    	je .L_lambda_simple_env_end_00bb
 29058 00015784 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29059 00015788 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29060 0001578C 48FFC6                  	inc rsi
 29061 0001578F 48FFC2                  	inc rdx
 29062 00015792 EBEA                    	jmp .L_lambda_simple_env_loop_00bb
 29063                                  .L_lambda_simple_env_end_00bb:
 29064 00015794 5B                      	pop rbx
 29065 00015795 BE00000000              	mov rsi, 0
 29066                                  .L_lambda_simple_params_loop_00bb:	; copy params
 29067 0001579A 4883FE00                	cmp rsi, 0
 29068 0001579E 740E                    	je .L_lambda_simple_params_end_00bb
 29069 000157A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29070 000157A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29071 000157A9 48FFC6                  	inc rsi
 29072 000157AC EBEC                    	jmp .L_lambda_simple_params_loop_00bb
 29073                                  .L_lambda_simple_params_end_00bb:
 29074 000157AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29075 000157B1 4889C3                  	mov rbx, rax
 29076 000157B4 58                      	pop rax
 29077 000157B5 C60004                  	mov byte [rax], T_closure
 29078 000157B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29079 000157BC 48C74009[C9570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bb
 29080 000157C4 E906010000              	jmp .L_lambda_simple_end_00bb
 29081                                  .L_lambda_simple_code_00bb:	; lambda-simple body
 29082 000157C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29083 000157CF 740B                    	je .L_lambda_simple_arity_check_ok_00bb
 29084 000157D1 FF742410                	push qword [rsp + 8 * 2]
 29085 000157D5 6A01                    	push 1
 29086 000157D7 E9321E0000              	jmp L_error_incorrect_arity_simple
 29087                                  .L_lambda_simple_arity_check_ok_00bb:
 29088 000157DC C8000000                	enter 0, 0
 29089                                  	; preparing a tail-call
 29090 000157E0 6A00                    	push 0	; arg count
 29091 000157E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29092 000157E7 E8691E0000              	call malloc
 29093 000157EC 50                      	push rax
 29094 000157ED BF08000000              	mov rdi, 8 * 1	; new rib
 29095 000157F2 E85E1E0000              	call malloc
 29096 000157F7 50                      	push rax
 29097 000157F8 BF10000000              	mov rdi, 8 * 2	; extended env
 29098 000157FD E8531E0000              	call malloc
 29099 00015802 488B7D10                	mov rdi, ENV
 29100 00015806 BE00000000              	mov rsi, 0
 29101 0001580B BA01000000              	mov rdx, 1
 29102                                  .L_lambda_simple_env_loop_00bc:	; ext_env[i + 1] <-- env[i]
 29103 00015810 4883FE01                	cmp rsi, 1
 29104 00015814 7410                    	je .L_lambda_simple_env_end_00bc
 29105 00015816 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29106 0001581A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29107 0001581E 48FFC6                  	inc rsi
 29108 00015821 48FFC2                  	inc rdx
 29109 00015824 EBEA                    	jmp .L_lambda_simple_env_loop_00bc
 29110                                  .L_lambda_simple_env_end_00bc:
 29111 00015826 5B                      	pop rbx
 29112 00015827 BE00000000              	mov rsi, 0
 29113                                  .L_lambda_simple_params_loop_00bc:	; copy params
 29114 0001582C 4883FE01                	cmp rsi, 1
 29115 00015830 740E                    	je .L_lambda_simple_params_end_00bc
 29116 00015832 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29117 00015837 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29118 0001583B 48FFC6                  	inc rsi
 29119 0001583E EBEC                    	jmp .L_lambda_simple_params_loop_00bc
 29120                                  .L_lambda_simple_params_end_00bc:
 29121 00015840 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29122 00015843 4889C3                  	mov rbx, rax
 29123 00015846 58                      	pop rax
 29124 00015847 C60004                  	mov byte [rax], T_closure
 29125 0001584A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29126 0001584E 48C74009[58580100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bc
 29127 00015856 EB25                    	jmp .L_lambda_simple_end_00bc
 29128                                  .L_lambda_simple_code_00bc:	; lambda-simple body
 29129 00015858 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29130 0001585E 740B                    	je .L_lambda_simple_arity_check_ok_00bc
 29131 00015860 FF742410                	push qword [rsp + 8 * 2]
 29132 00015864 6A00                    	push 0
 29133 00015866 E9A31D0000              	jmp L_error_incorrect_arity_simple
 29134                                  .L_lambda_simple_arity_check_ok_00bc:
 29135 0001586B C8000000                	enter 0, 0
 29136 0001586F 488B4510                	mov rax, ENV
 29137 00015873 488B00                  	mov rax, qword [rax + 8 * 0]
 29138 00015876 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 29139 00015879 C9                      	leave
 29140 0001587A C21000                  	ret AND_KILL_FRAME(0)
 29141                                  .L_lambda_simple_end_00bc:	; new closure is in rax
 29142 0001587D 803804                  	cmp byte [rax], T_closure
 29143 00015880 0F85261D0000            	jne L_error_non_closure
 29144 00015886 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29145 00015889 FF7508                  	push qword [rbp + 8 * 1]
 29146                                   ; old ret addr
 29147 0001588C FF7500                  	push qword [rbp]
 29148                                   ; restore the old rbp
 29149 0001588F BB00000000              	mov rbx, 0
 29150 00015894 4883C303                	add rbx, 3
 29151 00015898 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29152 0001589C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29153 000158A1 4C8D4DF8                	lea r9, [rbp - 8]
 29154 000158A5 B904000000              	mov rcx, 4
 29155                                  .L_tc_recycle_frame_loop_00f3:
 29156 000158AA 4883F900                	cmp rcx, 0
 29157 000158AE 7413                    	je .L_tc_recycle_frame_done_00f3
 29158 000158B0 4D8B11                  	mov r10, qword [r9]
 29159 000158B3 4D8910                  	mov qword [r8], r10
 29160 000158B6 4983E808                	sub r8, 8
 29161 000158BA 4983E908                	sub r9, 8
 29162 000158BE 48FFC9                  	dec rcx
 29163 000158C1 EBE7                    	jmp .L_tc_recycle_frame_loop_00f3
 29164                                  .L_tc_recycle_frame_done_00f3:
 29165 000158C3 498D6008                	lea rsp, [r8 + 8]
 29166 000158C7 5D                      	pop rbp ; restore the old rbp
 29167 000158C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29168 000158CB C9                      	leave
 29169 000158CC C21800                  	ret AND_KILL_FRAME(1)
 29170                                  .L_lambda_simple_end_00bb:	; new closure is in rax
 29171 000158CF 803804                  	cmp byte [rax], T_closure
 29172 000158D2 0F85D41C0000            	jne L_error_non_closure
 29173 000158D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29174 000158DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 29175                                  
 29176 000158DE 4889C7                  	mov rdi, rax
 29177 000158E1 E8C41F0000              	call print_sexpr_if_not_void
 29178                                  	; preparing a non-tail-call
 29179 000158E6 48B8-                   	mov rax, L_constants + 3
 29179 000158E8 [0300000000000000] 
 29180 000158F0 50                      	push rax
 29181 000158F1 48B8-                   	mov rax, L_constants + 2
 29181 000158F3 [0200000000000000] 
 29182 000158FB 50                      	push rax
 29183 000158FC 6A02                    	push 2	; arg count
 29184 000158FE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29185 00015903 E84D1D0000              	call malloc
 29186 00015908 50                      	push rax
 29187 00015909 BF00000000              	mov rdi, 8 * 0	; new rib
 29188 0001590E E8421D0000              	call malloc
 29189 00015913 50                      	push rax
 29190 00015914 BF08000000              	mov rdi, 8 * 1	; extended env
 29191 00015919 E8371D0000              	call malloc
 29192 0001591E 488B7D10                	mov rdi, ENV
 29193 00015922 BE00000000              	mov rsi, 0
 29194 00015927 BA01000000              	mov rdx, 1
 29195                                  .L_lambda_simple_env_loop_00bd:	; ext_env[i + 1] <-- env[i]
 29196 0001592C 4883FE00                	cmp rsi, 0
 29197 00015930 7410                    	je .L_lambda_simple_env_end_00bd
 29198 00015932 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29199 00015936 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29200 0001593A 48FFC6                  	inc rsi
 29201 0001593D 48FFC2                  	inc rdx
 29202 00015940 EBEA                    	jmp .L_lambda_simple_env_loop_00bd
 29203                                  .L_lambda_simple_env_end_00bd:
 29204 00015942 5B                      	pop rbx
 29205 00015943 BE00000000              	mov rsi, 0
 29206                                  .L_lambda_simple_params_loop_00bd:	; copy params
 29207 00015948 4883FE00                	cmp rsi, 0
 29208 0001594C 740E                    	je .L_lambda_simple_params_end_00bd
 29209 0001594E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29210 00015953 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29211 00015957 48FFC6                  	inc rsi
 29212 0001595A EBEC                    	jmp .L_lambda_simple_params_loop_00bd
 29213                                  .L_lambda_simple_params_end_00bd:
 29214 0001595C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29215 0001595F 4889C3                  	mov rbx, rax
 29216 00015962 58                      	pop rax
 29217 00015963 C60004                  	mov byte [rax], T_closure
 29218 00015966 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29219 0001596A 48C74009[77590100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bd
 29220 00015972 E912030000              	jmp .L_lambda_simple_end_00bd
 29221                                  .L_lambda_simple_code_00bd:	; lambda-simple body
 29222 00015977 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29223 0001597D 740B                    	je .L_lambda_simple_arity_check_ok_00bd
 29224 0001597F FF742410                	push qword [rsp + 8 * 2]
 29225 00015983 6A02                    	push 2
 29226 00015985 E9841C0000              	jmp L_error_incorrect_arity_simple
 29227                                  .L_lambda_simple_arity_check_ok_00bd:
 29228 0001598A C8000000                	enter 0, 0
 29229                                  	; preparing a tail-call
 29230 0001598E 48B8-                   	mov rax, L_constants + 2
 29230 00015990 [0200000000000000] 
 29231 00015998 50                      	push rax
 29232 00015999 6A01                    	push 1	; arg count
 29233 0001599B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29234 000159A0 E8B01C0000              	call malloc
 29235 000159A5 50                      	push rax
 29236 000159A6 BF10000000              	mov rdi, 8 * 2	; new rib
 29237 000159AB E8A51C0000              	call malloc
 29238 000159B0 50                      	push rax
 29239 000159B1 BF10000000              	mov rdi, 8 * 2	; extended env
 29240 000159B6 E89A1C0000              	call malloc
 29241 000159BB 488B7D10                	mov rdi, ENV
 29242 000159BF BE00000000              	mov rsi, 0
 29243 000159C4 BA01000000              	mov rdx, 1
 29244                                  .L_lambda_simple_env_loop_00be:	; ext_env[i + 1] <-- env[i]
 29245 000159C9 4883FE01                	cmp rsi, 1
 29246 000159CD 7410                    	je .L_lambda_simple_env_end_00be
 29247 000159CF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29248 000159D3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29249 000159D7 48FFC6                  	inc rsi
 29250 000159DA 48FFC2                  	inc rdx
 29251 000159DD EBEA                    	jmp .L_lambda_simple_env_loop_00be
 29252                                  .L_lambda_simple_env_end_00be:
 29253 000159DF 5B                      	pop rbx
 29254 000159E0 BE00000000              	mov rsi, 0
 29255                                  .L_lambda_simple_params_loop_00be:	; copy params
 29256 000159E5 4883FE02                	cmp rsi, 2
 29257 000159E9 740E                    	je .L_lambda_simple_params_end_00be
 29258 000159EB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29259 000159F0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29260 000159F4 48FFC6                  	inc rsi
 29261 000159F7 EBEC                    	jmp .L_lambda_simple_params_loop_00be
 29262                                  .L_lambda_simple_params_end_00be:
 29263 000159F9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29264 000159FC 4889C3                  	mov rbx, rax
 29265 000159FF 58                      	pop rax
 29266 00015A00 C60004                  	mov byte [rax], T_closure
 29267 00015A03 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29268 00015A07 48C74009[145A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00be
 29269 00015A0F E923020000              	jmp .L_lambda_simple_end_00be
 29270                                  .L_lambda_simple_code_00be:	; lambda-simple body
 29271 00015A14 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29272 00015A1A 740B                    	je .L_lambda_simple_arity_check_ok_00be
 29273 00015A1C FF742410                	push qword [rsp + 8 * 2]
 29274 00015A20 6A01                    	push 1
 29275 00015A22 E9E71B0000              	jmp L_error_incorrect_arity_simple
 29276                                  .L_lambda_simple_arity_check_ok_00be:
 29277 00015A27 C8000000                	enter 0, 0
 29278                                  	; preparing a tail-call
 29279 00015A2B 48B8-                   	mov rax, L_constants + 2
 29279 00015A2D [0200000000000000] 
 29280 00015A35 50                      	push rax
 29281 00015A36 48B8-                   	mov rax, L_constants + 2
 29281 00015A38 [0200000000000000] 
 29282 00015A40 50                      	push rax
 29283 00015A41 48B8-                   	mov rax, L_constants + 2
 29283 00015A43 [0200000000000000] 
 29284 00015A4B 50                      	push rax
 29285 00015A4C 6A03                    	push 3	; arg count
 29286 00015A4E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29287 00015A53 E8FD1B0000              	call malloc
 29288 00015A58 50                      	push rax
 29289 00015A59 BF08000000              	mov rdi, 8 * 1	; new rib
 29290 00015A5E E8F21B0000              	call malloc
 29291 00015A63 50                      	push rax
 29292 00015A64 BF18000000              	mov rdi, 8 * 3	; extended env
 29293 00015A69 E8E71B0000              	call malloc
 29294 00015A6E 488B7D10                	mov rdi, ENV
 29295 00015A72 BE00000000              	mov rsi, 0
 29296 00015A77 BA01000000              	mov rdx, 1
 29297                                  .L_lambda_simple_env_loop_00bf:	; ext_env[i + 1] <-- env[i]
 29298 00015A7C 4883FE02                	cmp rsi, 2
 29299 00015A80 7410                    	je .L_lambda_simple_env_end_00bf
 29300 00015A82 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29301 00015A86 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29302 00015A8A 48FFC6                  	inc rsi
 29303 00015A8D 48FFC2                  	inc rdx
 29304 00015A90 EBEA                    	jmp .L_lambda_simple_env_loop_00bf
 29305                                  .L_lambda_simple_env_end_00bf:
 29306 00015A92 5B                      	pop rbx
 29307 00015A93 BE00000000              	mov rsi, 0
 29308                                  .L_lambda_simple_params_loop_00bf:	; copy params
 29309 00015A98 4883FE01                	cmp rsi, 1
 29310 00015A9C 740E                    	je .L_lambda_simple_params_end_00bf
 29311 00015A9E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29312 00015AA3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29313 00015AA7 48FFC6                  	inc rsi
 29314 00015AAA EBEC                    	jmp .L_lambda_simple_params_loop_00bf
 29315                                  .L_lambda_simple_params_end_00bf:
 29316 00015AAC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29317 00015AAF 4889C3                  	mov rbx, rax
 29318 00015AB2 58                      	pop rax
 29319 00015AB3 C60004                  	mov byte [rax], T_closure
 29320 00015AB6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29321 00015ABA 48C74009[C75A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bf
 29322 00015AC2 E91E010000              	jmp .L_lambda_simple_end_00bf
 29323                                  .L_lambda_simple_code_00bf:	; lambda-simple body
 29324 00015AC7 48837C241003            	cmp qword [rsp + 8 * 2], 3
 29325 00015ACD 740B                    	je .L_lambda_simple_arity_check_ok_00bf
 29326 00015ACF FF742410                	push qword [rsp + 8 * 2]
 29327 00015AD3 6A03                    	push 3
 29328 00015AD5 E9341B0000              	jmp L_error_incorrect_arity_simple
 29329                                  .L_lambda_simple_arity_check_ok_00bf:
 29330 00015ADA C8000000                	enter 0, 0
 29331                                  	; preparing a tail-call
 29332 00015ADE 48B8-                   	mov rax, L_constants + 2
 29332 00015AE0 [0200000000000000] 
 29333 00015AE8 50                      	push rax
 29334 00015AE9 48B8-                   	mov rax, L_constants + 2
 29334 00015AEB [0200000000000000] 
 29335 00015AF3 50                      	push rax
 29336 00015AF4 6A02                    	push 2	; arg count
 29337 00015AF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29338 00015AFB E8551B0000              	call malloc
 29339 00015B00 50                      	push rax
 29340 00015B01 BF18000000              	mov rdi, 8 * 3	; new rib
 29341 00015B06 E84A1B0000              	call malloc
 29342 00015B0B 50                      	push rax
 29343 00015B0C BF20000000              	mov rdi, 8 * 4	; extended env
 29344 00015B11 E83F1B0000              	call malloc
 29345 00015B16 488B7D10                	mov rdi, ENV
 29346 00015B1A BE00000000              	mov rsi, 0
 29347 00015B1F BA01000000              	mov rdx, 1
 29348                                  .L_lambda_simple_env_loop_00c0:	; ext_env[i + 1] <-- env[i]
 29349 00015B24 4883FE03                	cmp rsi, 3
 29350 00015B28 7410                    	je .L_lambda_simple_env_end_00c0
 29351 00015B2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29352 00015B2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29353 00015B32 48FFC6                  	inc rsi
 29354 00015B35 48FFC2                  	inc rdx
 29355 00015B38 EBEA                    	jmp .L_lambda_simple_env_loop_00c0
 29356                                  .L_lambda_simple_env_end_00c0:
 29357 00015B3A 5B                      	pop rbx
 29358 00015B3B BE00000000              	mov rsi, 0
 29359                                  .L_lambda_simple_params_loop_00c0:	; copy params
 29360 00015B40 4883FE03                	cmp rsi, 3
 29361 00015B44 740E                    	je .L_lambda_simple_params_end_00c0
 29362 00015B46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29363 00015B4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29364 00015B4F 48FFC6                  	inc rsi
 29365 00015B52 EBEC                    	jmp .L_lambda_simple_params_loop_00c0
 29366                                  .L_lambda_simple_params_end_00c0:
 29367 00015B54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29368 00015B57 4889C3                  	mov rbx, rax
 29369 00015B5A 58                      	pop rax
 29370 00015B5B C60004                  	mov byte [rax], T_closure
 29371 00015B5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29372 00015B62 48C74009[6C5B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c0
 29373 00015B6A EB27                    	jmp .L_lambda_simple_end_00c0
 29374                                  .L_lambda_simple_code_00c0:	; lambda-simple body
 29375 00015B6C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29376 00015B72 740B                    	je .L_lambda_simple_arity_check_ok_00c0
 29377 00015B74 FF742410                	push qword [rsp + 8 * 2]
 29378 00015B78 6A02                    	push 2
 29379 00015B7A E98F1A0000              	jmp L_error_incorrect_arity_simple
 29380                                  .L_lambda_simple_arity_check_ok_00c0:
 29381 00015B7F C8000000                	enter 0, 0
 29382 00015B83 488B4510                	mov rax, ENV
 29383 00015B87 488B4010                	mov rax, qword [rax + 8 * 2]
 29384 00015B8B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 29385 00015B8F C9                      	leave
 29386 00015B90 C22000                  	ret AND_KILL_FRAME(2)
 29387                                  .L_lambda_simple_end_00c0:	; new closure is in rax
 29388 00015B93 803804                  	cmp byte [rax], T_closure
 29389 00015B96 0F85101A0000            	jne L_error_non_closure
 29390 00015B9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 29391 00015B9F FF7508                  	push qword [rbp + 8 * 1]
 29392                                   ; old ret addr
 29393 00015BA2 FF7500                  	push qword [rbp]
 29394                                   ; restore the old rbp
 29395 00015BA5 BB02000000              	mov rbx, 2
 29396 00015BAA 4883C303                	add rbx, 3
 29397 00015BAE 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29398 00015BB2 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29399 00015BB7 4C8D4DF8                	lea r9, [rbp - 8]
 29400 00015BBB B906000000              	mov rcx, 6
 29401                                  .L_tc_recycle_frame_loop_00f6:
 29402 00015BC0 4883F900                	cmp rcx, 0
 29403 00015BC4 7413                    	je .L_tc_recycle_frame_done_00f6
 29404 00015BC6 4D8B11                  	mov r10, qword [r9]
 29405 00015BC9 4D8910                  	mov qword [r8], r10
 29406 00015BCC 4983E808                	sub r8, 8
 29407 00015BD0 4983E908                	sub r9, 8
 29408 00015BD4 48FFC9                  	dec rcx
 29409 00015BD7 EBE7                    	jmp .L_tc_recycle_frame_loop_00f6
 29410                                  .L_tc_recycle_frame_done_00f6:
 29411 00015BD9 498D6008                	lea rsp, [r8 + 8]
 29412 00015BDD 5D                      	pop rbp ; restore the old rbp
 29413 00015BDE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29414 00015BE1 C9                      	leave
 29415 00015BE2 C22800                  	ret AND_KILL_FRAME(3)
 29416                                  .L_lambda_simple_end_00bf:	; new closure is in rax
 29417 00015BE5 803804                  	cmp byte [rax], T_closure
 29418 00015BE8 0F85BE190000            	jne L_error_non_closure
 29419 00015BEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 29420 00015BF1 FF7508                  	push qword [rbp + 8 * 1]
 29421                                   ; old ret addr
 29422 00015BF4 FF7500                  	push qword [rbp]
 29423                                   ; restore the old rbp
 29424 00015BF7 BB03000000              	mov rbx, 3
 29425 00015BFC 4883C303                	add rbx, 3
 29426 00015C00 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29427 00015C04 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29428 00015C09 4C8D4DF8                	lea r9, [rbp - 8]
 29429 00015C0D B907000000              	mov rcx, 7
 29430                                  .L_tc_recycle_frame_loop_00f5:
 29431 00015C12 4883F900                	cmp rcx, 0
 29432 00015C16 7413                    	je .L_tc_recycle_frame_done_00f5
 29433 00015C18 4D8B11                  	mov r10, qword [r9]
 29434 00015C1B 4D8910                  	mov qword [r8], r10
 29435 00015C1E 4983E808                	sub r8, 8
 29436 00015C22 4983E908                	sub r9, 8
 29437 00015C26 48FFC9                  	dec rcx
 29438 00015C29 EBE7                    	jmp .L_tc_recycle_frame_loop_00f5
 29439                                  .L_tc_recycle_frame_done_00f5:
 29440 00015C2B 498D6008                	lea rsp, [r8 + 8]
 29441 00015C2F 5D                      	pop rbp ; restore the old rbp
 29442 00015C30 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29443 00015C33 C9                      	leave
 29444 00015C34 C21800                  	ret AND_KILL_FRAME(1)
 29445                                  .L_lambda_simple_end_00be:	; new closure is in rax
 29446 00015C37 803804                  	cmp byte [rax], T_closure
 29447 00015C3A 0F856C190000            	jne L_error_non_closure
 29448 00015C40 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29449 00015C43 FF7508                  	push qword [rbp + 8 * 1]
 29450                                   ; old ret addr
 29451 00015C46 FF7500                  	push qword [rbp]
 29452                                   ; restore the old rbp
 29453 00015C49 BB01000000              	mov rbx, 1
 29454 00015C4E 4883C303                	add rbx, 3
 29455 00015C52 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29456 00015C56 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29457 00015C5B 4C8D4DF8                	lea r9, [rbp - 8]
 29458 00015C5F B905000000              	mov rcx, 5
 29459                                  .L_tc_recycle_frame_loop_00f4:
 29460 00015C64 4883F900                	cmp rcx, 0
 29461 00015C68 7413                    	je .L_tc_recycle_frame_done_00f4
 29462 00015C6A 4D8B11                  	mov r10, qword [r9]
 29463 00015C6D 4D8910                  	mov qword [r8], r10
 29464 00015C70 4983E808                	sub r8, 8
 29465 00015C74 4983E908                	sub r9, 8
 29466 00015C78 48FFC9                  	dec rcx
 29467 00015C7B EBE7                    	jmp .L_tc_recycle_frame_loop_00f4
 29468                                  .L_tc_recycle_frame_done_00f4:
 29469 00015C7D 498D6008                	lea rsp, [r8 + 8]
 29470 00015C81 5D                      	pop rbp ; restore the old rbp
 29471 00015C82 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29472 00015C85 C9                      	leave
 29473 00015C86 C22000                  	ret AND_KILL_FRAME(2)
 29474                                  .L_lambda_simple_end_00bd:	; new closure is in rax
 29475 00015C89 803804                  	cmp byte [rax], T_closure
 29476 00015C8C 0F851A190000            	jne L_error_non_closure
 29477 00015C92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29478 00015C95 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29479                                  
 29480 00015C98 4889C7                  	mov rdi, rax
 29481 00015C9B E80A1C0000              	call print_sexpr_if_not_void
 29482                                  	; preparing a non-tail-call
 29483 00015CA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29484 00015CA5 E8AB190000              	call malloc
 29485 00015CAA 50                      	push rax
 29486 00015CAB BF00000000              	mov rdi, 8 * 0	; new rib
 29487 00015CB0 E8A0190000              	call malloc
 29488 00015CB5 50                      	push rax
 29489 00015CB6 BF08000000              	mov rdi, 8 * 1	; extended env
 29490 00015CBB E895190000              	call malloc
 29491 00015CC0 488B7D10                	mov rdi, ENV
 29492 00015CC4 BE00000000              	mov rsi, 0
 29493 00015CC9 BA01000000              	mov rdx, 1
 29494                                  .L_lambda_simple_env_loop_00c1:	; ext_env[i + 1] <-- env[i]
 29495 00015CCE 4883FE00                	cmp rsi, 0
 29496 00015CD2 7410                    	je .L_lambda_simple_env_end_00c1
 29497 00015CD4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29498 00015CD8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29499 00015CDC 48FFC6                  	inc rsi
 29500 00015CDF 48FFC2                  	inc rdx
 29501 00015CE2 EBEA                    	jmp .L_lambda_simple_env_loop_00c1
 29502                                  .L_lambda_simple_env_end_00c1:
 29503 00015CE4 5B                      	pop rbx
 29504 00015CE5 BE00000000              	mov rsi, 0
 29505                                  .L_lambda_simple_params_loop_00c1:	; copy params
 29506 00015CEA 4883FE00                	cmp rsi, 0
 29507 00015CEE 740E                    	je .L_lambda_simple_params_end_00c1
 29508 00015CF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29509 00015CF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29510 00015CF9 48FFC6                  	inc rsi
 29511 00015CFC EBEC                    	jmp .L_lambda_simple_params_loop_00c1
 29512                                  .L_lambda_simple_params_end_00c1:
 29513 00015CFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29514 00015D01 4889C3                  	mov rbx, rax
 29515 00015D04 58                      	pop rax
 29516 00015D05 C60004                  	mov byte [rax], T_closure
 29517 00015D08 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29518 00015D0C 48C74009[165D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c1
 29519 00015D14 EB1F                    	jmp .L_lambda_simple_end_00c1
 29520                                  .L_lambda_simple_code_00c1:	; lambda-simple body
 29521 00015D16 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29522 00015D1C 740B                    	je .L_lambda_simple_arity_check_ok_00c1
 29523 00015D1E FF742410                	push qword [rsp + 8 * 2]
 29524 00015D22 6A02                    	push 2
 29525 00015D24 E9E5180000              	jmp L_error_incorrect_arity_simple
 29526                                  .L_lambda_simple_arity_check_ok_00c1:
 29527 00015D29 C8000000                	enter 0, 0
 29528 00015D2D 488B4520                	mov rax, PARAM(0)	; param x
 29529 00015D31 C9                      	leave
 29530 00015D32 C22000                  	ret AND_KILL_FRAME(2)
 29531                                  .L_lambda_simple_end_00c1:	; new closure is in rax
 29532 00015D35 50                      	push rax
 29533 00015D36 6A01                    	push 1	; arg count
 29534                                  	; preparing a non-tail-call
 29535 00015D38 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29536 00015D3D E813190000              	call malloc
 29537 00015D42 50                      	push rax
 29538 00015D43 BF00000000              	mov rdi, 8 * 0	; new rib
 29539 00015D48 E808190000              	call malloc
 29540 00015D4D 50                      	push rax
 29541 00015D4E BF08000000              	mov rdi, 8 * 1	; extended env
 29542 00015D53 E8FD180000              	call malloc
 29543 00015D58 488B7D10                	mov rdi, ENV
 29544 00015D5C BE00000000              	mov rsi, 0
 29545 00015D61 BA01000000              	mov rdx, 1
 29546                                  .L_lambda_simple_env_loop_00c2:	; ext_env[i + 1] <-- env[i]
 29547 00015D66 4883FE00                	cmp rsi, 0
 29548 00015D6A 7410                    	je .L_lambda_simple_env_end_00c2
 29549 00015D6C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29550 00015D70 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29551 00015D74 48FFC6                  	inc rsi
 29552 00015D77 48FFC2                  	inc rdx
 29553 00015D7A EBEA                    	jmp .L_lambda_simple_env_loop_00c2
 29554                                  .L_lambda_simple_env_end_00c2:
 29555 00015D7C 5B                      	pop rbx
 29556 00015D7D BE00000000              	mov rsi, 0
 29557                                  .L_lambda_simple_params_loop_00c2:	; copy params
 29558 00015D82 4883FE00                	cmp rsi, 0
 29559 00015D86 740E                    	je .L_lambda_simple_params_end_00c2
 29560 00015D88 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29561 00015D8D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29562 00015D91 48FFC6                  	inc rsi
 29563 00015D94 EBEC                    	jmp .L_lambda_simple_params_loop_00c2
 29564                                  .L_lambda_simple_params_end_00c2:
 29565 00015D96 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29566 00015D99 4889C3                  	mov rbx, rax
 29567 00015D9C 58                      	pop rax
 29568 00015D9D C60004                  	mov byte [rax], T_closure
 29569 00015DA0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29570 00015DA4 48C74009[B15D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c2
 29571 00015DAC E985000000              	jmp .L_lambda_simple_end_00c2
 29572                                  .L_lambda_simple_code_00c2:	; lambda-simple body
 29573 00015DB1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29574 00015DB7 740B                    	je .L_lambda_simple_arity_check_ok_00c2
 29575 00015DB9 FF742410                	push qword [rsp + 8 * 2]
 29576 00015DBD 6A01                    	push 1
 29577 00015DBF E94A180000              	jmp L_error_incorrect_arity_simple
 29578                                  .L_lambda_simple_arity_check_ok_00c2:
 29579 00015DC4 C8000000                	enter 0, 0
 29580                                  	; preparing a tail-call
 29581 00015DC8 48B8-                   	mov rax, L_constants + 2
 29581 00015DCA [0200000000000000] 
 29582 00015DD2 50                      	push rax
 29583 00015DD3 48B8-                   	mov rax, L_constants + 3
 29583 00015DD5 [0300000000000000] 
 29584 00015DDD 50                      	push rax
 29585 00015DDE 6A02                    	push 2	; arg count
 29586 00015DE0 488B4520                	mov rax, PARAM(0)	; param z
 29587 00015DE4 803804                  	cmp byte [rax], T_closure
 29588 00015DE7 0F85BF170000            	jne L_error_non_closure
 29589 00015DED FF7001                  	push SOB_CLOSURE_ENV(rax)
 29590 00015DF0 FF7508                  	push qword [rbp + 8 * 1]
 29591                                   ; old ret addr
 29592 00015DF3 FF7500                  	push qword [rbp]
 29593                                   ; restore the old rbp
 29594 00015DF6 BB02000000              	mov rbx, 2
 29595 00015DFB 4883C303                	add rbx, 3
 29596 00015DFF 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29597 00015E03 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29598 00015E08 4C8D4DF8                	lea r9, [rbp - 8]
 29599 00015E0C B906000000              	mov rcx, 6
 29600                                  .L_tc_recycle_frame_loop_00f7:
 29601 00015E11 4883F900                	cmp rcx, 0
 29602 00015E15 7413                    	je .L_tc_recycle_frame_done_00f7
 29603 00015E17 4D8B11                  	mov r10, qword [r9]
 29604 00015E1A 4D8910                  	mov qword [r8], r10
 29605 00015E1D 4983E808                	sub r8, 8
 29606 00015E21 4983E908                	sub r9, 8
 29607 00015E25 48FFC9                  	dec rcx
 29608 00015E28 EBE7                    	jmp .L_tc_recycle_frame_loop_00f7
 29609                                  .L_tc_recycle_frame_done_00f7:
 29610 00015E2A 498D6008                	lea rsp, [r8 + 8]
 29611 00015E2E 5D                      	pop rbp ; restore the old rbp
 29612 00015E2F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29613 00015E32 C9                      	leave
 29614 00015E33 C21800                  	ret AND_KILL_FRAME(1)
 29615                                  .L_lambda_simple_end_00c2:	; new closure is in rax
 29616 00015E36 50                      	push rax
 29617 00015E37 6A01                    	push 1	; arg count
 29618                                  	; preparing a non-tail-call
 29619 00015E39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29620 00015E3E E812180000              	call malloc
 29621 00015E43 50                      	push rax
 29622 00015E44 BF00000000              	mov rdi, 8 * 0	; new rib
 29623 00015E49 E807180000              	call malloc
 29624 00015E4E 50                      	push rax
 29625 00015E4F BF08000000              	mov rdi, 8 * 1	; extended env
 29626 00015E54 E8FC170000              	call malloc
 29627 00015E59 488B7D10                	mov rdi, ENV
 29628 00015E5D BE00000000              	mov rsi, 0
 29629 00015E62 BA01000000              	mov rdx, 1
 29630                                  .L_lambda_simple_env_loop_00c3:	; ext_env[i + 1] <-- env[i]
 29631 00015E67 4883FE00                	cmp rsi, 0
 29632 00015E6B 7410                    	je .L_lambda_simple_env_end_00c3
 29633 00015E6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29634 00015E71 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29635 00015E75 48FFC6                  	inc rsi
 29636 00015E78 48FFC2                  	inc rdx
 29637 00015E7B EBEA                    	jmp .L_lambda_simple_env_loop_00c3
 29638                                  .L_lambda_simple_env_end_00c3:
 29639 00015E7D 5B                      	pop rbx
 29640 00015E7E BE00000000              	mov rsi, 0
 29641                                  .L_lambda_simple_params_loop_00c3:	; copy params
 29642 00015E83 4883FE00                	cmp rsi, 0
 29643 00015E87 740E                    	je .L_lambda_simple_params_end_00c3
 29644 00015E89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29645 00015E8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29646 00015E92 48FFC6                  	inc rsi
 29647 00015E95 EBEC                    	jmp .L_lambda_simple_params_loop_00c3
 29648                                  .L_lambda_simple_params_end_00c3:
 29649 00015E97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29650 00015E9A 4889C3                  	mov rbx, rax
 29651 00015E9D 58                      	pop rax
 29652 00015E9E C60004                  	mov byte [rax], T_closure
 29653 00015EA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29654 00015EA5 48C74009[B25E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c3
 29655 00015EAD E903020000              	jmp .L_lambda_simple_end_00c3
 29656                                  .L_lambda_simple_code_00c3:	; lambda-simple body
 29657 00015EB2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29658 00015EB8 740B                    	je .L_lambda_simple_arity_check_ok_00c3
 29659 00015EBA FF742410                	push qword [rsp + 8 * 2]
 29660 00015EBE 6A01                    	push 1
 29661 00015EC0 E949170000              	jmp L_error_incorrect_arity_simple
 29662                                  .L_lambda_simple_arity_check_ok_00c3:
 29663 00015EC5 C8000000                	enter 0, 0
 29664                                  	; preparing a tail-call
 29665 00015EC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29666 00015ECE E882170000              	call malloc
 29667 00015ED3 50                      	push rax
 29668 00015ED4 BF08000000              	mov rdi, 8 * 1	; new rib
 29669 00015ED9 E877170000              	call malloc
 29670 00015EDE 50                      	push rax
 29671 00015EDF BF10000000              	mov rdi, 8 * 2	; extended env
 29672 00015EE4 E86C170000              	call malloc
 29673 00015EE9 488B7D10                	mov rdi, ENV
 29674 00015EED BE00000000              	mov rsi, 0
 29675 00015EF2 BA01000000              	mov rdx, 1
 29676                                  .L_lambda_simple_env_loop_00c4:	; ext_env[i + 1] <-- env[i]
 29677 00015EF7 4883FE01                	cmp rsi, 1
 29678 00015EFB 7410                    	je .L_lambda_simple_env_end_00c4
 29679 00015EFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29680 00015F01 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29681 00015F05 48FFC6                  	inc rsi
 29682 00015F08 48FFC2                  	inc rdx
 29683 00015F0B EBEA                    	jmp .L_lambda_simple_env_loop_00c4
 29684                                  .L_lambda_simple_env_end_00c4:
 29685 00015F0D 5B                      	pop rbx
 29686 00015F0E BE00000000              	mov rsi, 0
 29687                                  .L_lambda_simple_params_loop_00c4:	; copy params
 29688 00015F13 4883FE01                	cmp rsi, 1
 29689 00015F17 740E                    	je .L_lambda_simple_params_end_00c4
 29690 00015F19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29691 00015F1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29692 00015F22 48FFC6                  	inc rsi
 29693 00015F25 EBEC                    	jmp .L_lambda_simple_params_loop_00c4
 29694                                  .L_lambda_simple_params_end_00c4:
 29695 00015F27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29696 00015F2A 4889C3                  	mov rbx, rax
 29697 00015F2D 58                      	pop rax
 29698 00015F2E C60004                  	mov byte [rax], T_closure
 29699 00015F31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29700 00015F35 48C74009[425F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c4
 29701 00015F3D E91A010000              	jmp .L_lambda_simple_end_00c4
 29702                                  .L_lambda_simple_code_00c4:	; lambda-simple body
 29703 00015F42 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29704 00015F48 740B                    	je .L_lambda_simple_arity_check_ok_00c4
 29705 00015F4A FF742410                	push qword [rsp + 8 * 2]
 29706 00015F4E 6A02                    	push 2
 29707 00015F50 E9B9160000              	jmp L_error_incorrect_arity_simple
 29708                                  .L_lambda_simple_arity_check_ok_00c4:
 29709 00015F55 C8000000                	enter 0, 0
 29710 00015F59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29711 00015F5E E8F2160000              	call malloc
 29712 00015F63 50                      	push rax
 29713 00015F64 BF10000000              	mov rdi, 8 * 2	; new rib
 29714 00015F69 E8E7160000              	call malloc
 29715 00015F6E 50                      	push rax
 29716 00015F6F BF18000000              	mov rdi, 8 * 3	; extended env
 29717 00015F74 E8DC160000              	call malloc
 29718 00015F79 488B7D10                	mov rdi, ENV
 29719 00015F7D BE00000000              	mov rsi, 0
 29720 00015F82 BA01000000              	mov rdx, 1
 29721                                  .L_lambda_simple_env_loop_00c5:	; ext_env[i + 1] <-- env[i]
 29722 00015F87 4883FE02                	cmp rsi, 2
 29723 00015F8B 7410                    	je .L_lambda_simple_env_end_00c5
 29724 00015F8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29725 00015F91 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29726 00015F95 48FFC6                  	inc rsi
 29727 00015F98 48FFC2                  	inc rdx
 29728 00015F9B EBEA                    	jmp .L_lambda_simple_env_loop_00c5
 29729                                  .L_lambda_simple_env_end_00c5:
 29730 00015F9D 5B                      	pop rbx
 29731 00015F9E BE00000000              	mov rsi, 0
 29732                                  .L_lambda_simple_params_loop_00c5:	; copy params
 29733 00015FA3 4883FE02                	cmp rsi, 2
 29734 00015FA7 740E                    	je .L_lambda_simple_params_end_00c5
 29735 00015FA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29736 00015FAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29737 00015FB2 48FFC6                  	inc rsi
 29738 00015FB5 EBEC                    	jmp .L_lambda_simple_params_loop_00c5
 29739                                  .L_lambda_simple_params_end_00c5:
 29740 00015FB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29741 00015FBA 4889C3                  	mov rbx, rax
 29742 00015FBD 58                      	pop rax
 29743 00015FBE C60004                  	mov byte [rax], T_closure
 29744 00015FC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29745 00015FC5 48C74009[D25F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c5
 29746 00015FCD E986000000              	jmp .L_lambda_simple_end_00c5
 29747                                  .L_lambda_simple_code_00c5:	; lambda-simple body
 29748 00015FD2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29749 00015FD8 740B                    	je .L_lambda_simple_arity_check_ok_00c5
 29750 00015FDA FF742410                	push qword [rsp + 8 * 2]
 29751 00015FDE 6A01                    	push 1
 29752 00015FE0 E929160000              	jmp L_error_incorrect_arity_simple
 29753                                  .L_lambda_simple_arity_check_ok_00c5:
 29754 00015FE5 C8000000                	enter 0, 0
 29755                                  	; preparing a tail-call
 29756 00015FE9 488B4510                	mov rax, ENV
 29757 00015FED 488B00                  	mov rax, qword [rax + 8 * 0]
 29758 00015FF0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 29759 00015FF3 50                      	push rax
 29760 00015FF4 488B4510                	mov rax, ENV
 29761 00015FF8 488B00                  	mov rax, qword [rax + 8 * 0]
 29762 00015FFB 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 29763 00015FFF 50                      	push rax
 29764 00016000 6A02                    	push 2	; arg count
 29765 00016002 488B4520                	mov rax, PARAM(0)	; param p
 29766 00016006 803804                  	cmp byte [rax], T_closure
 29767 00016009 0F859D150000            	jne L_error_non_closure
 29768 0001600F FF7001                  	push SOB_CLOSURE_ENV(rax)
 29769 00016012 FF7508                  	push qword [rbp + 8 * 1]
 29770                                   ; old ret addr
 29771 00016015 FF7500                  	push qword [rbp]
 29772                                   ; restore the old rbp
 29773 00016018 BB02000000              	mov rbx, 2
 29774 0001601D 4883C303                	add rbx, 3
 29775 00016021 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29776 00016025 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29777 0001602A 4C8D4DF8                	lea r9, [rbp - 8]
 29778 0001602E B906000000              	mov rcx, 6
 29779                                  .L_tc_recycle_frame_loop_00f9:
 29780 00016033 4883F900                	cmp rcx, 0
 29781 00016037 7413                    	je .L_tc_recycle_frame_done_00f9
 29782 00016039 4D8B11                  	mov r10, qword [r9]
 29783 0001603C 4D8910                  	mov qword [r8], r10
 29784 0001603F 4983E808                	sub r8, 8
 29785 00016043 4983E908                	sub r9, 8
 29786 00016047 48FFC9                  	dec rcx
 29787 0001604A EBE7                    	jmp .L_tc_recycle_frame_loop_00f9
 29788                                  .L_tc_recycle_frame_done_00f9:
 29789 0001604C 498D6008                	lea rsp, [r8 + 8]
 29790 00016050 5D                      	pop rbp ; restore the old rbp
 29791 00016051 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29792 00016054 C9                      	leave
 29793 00016055 C21800                  	ret AND_KILL_FRAME(1)
 29794                                  .L_lambda_simple_end_00c5:	; new closure is in rax
 29795 00016058 C9                      	leave
 29796 00016059 C22000                  	ret AND_KILL_FRAME(2)
 29797                                  .L_lambda_simple_end_00c4:	; new closure is in rax
 29798 0001605C 50                      	push rax
 29799 0001605D 6A01                    	push 1	; arg count
 29800 0001605F 488B4520                	mov rax, PARAM(0)	; param p
 29801 00016063 803804                  	cmp byte [rax], T_closure
 29802 00016066 0F8540150000            	jne L_error_non_closure
 29803 0001606C FF7001                  	push SOB_CLOSURE_ENV(rax)
 29804 0001606F FF7508                  	push qword [rbp + 8 * 1]
 29805                                   ; old ret addr
 29806 00016072 FF7500                  	push qword [rbp]
 29807                                   ; restore the old rbp
 29808 00016075 BB01000000              	mov rbx, 1
 29809 0001607A 4883C303                	add rbx, 3
 29810 0001607E 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 29811 00016082 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 29812 00016087 4C8D4DF8                	lea r9, [rbp - 8]
 29813 0001608B B905000000              	mov rcx, 5
 29814                                  .L_tc_recycle_frame_loop_00f8:
 29815 00016090 4883F900                	cmp rcx, 0
 29816 00016094 7413                    	je .L_tc_recycle_frame_done_00f8
 29817 00016096 4D8B11                  	mov r10, qword [r9]
 29818 00016099 4D8910                  	mov qword [r8], r10
 29819 0001609C 4983E808                	sub r8, 8
 29820 000160A0 4983E908                	sub r9, 8
 29821 000160A4 48FFC9                  	dec rcx
 29822 000160A7 EBE7                    	jmp .L_tc_recycle_frame_loop_00f8
 29823                                  .L_tc_recycle_frame_done_00f8:
 29824 000160A9 498D6008                	lea rsp, [r8 + 8]
 29825 000160AD 5D                      	pop rbp ; restore the old rbp
 29826 000160AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29827 000160B1 C9                      	leave
 29828 000160B2 C21800                  	ret AND_KILL_FRAME(1)
 29829                                  .L_lambda_simple_end_00c3:	; new closure is in rax
 29830 000160B5 50                      	push rax
 29831 000160B6 6A01                    	push 1	; arg count
 29832 000160B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29833 000160BD E893150000              	call malloc
 29834 000160C2 50                      	push rax
 29835 000160C3 BF00000000              	mov rdi, 8 * 0	; new rib
 29836 000160C8 E888150000              	call malloc
 29837 000160CD 50                      	push rax
 29838 000160CE BF08000000              	mov rdi, 8 * 1	; extended env
 29839 000160D3 E87D150000              	call malloc
 29840 000160D8 488B7D10                	mov rdi, ENV
 29841 000160DC BE00000000              	mov rsi, 0
 29842 000160E1 BA01000000              	mov rdx, 1
 29843                                  .L_lambda_simple_env_loop_00c6:	; ext_env[i + 1] <-- env[i]
 29844 000160E6 4883FE00                	cmp rsi, 0
 29845 000160EA 7410                    	je .L_lambda_simple_env_end_00c6
 29846 000160EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29847 000160F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29848 000160F4 48FFC6                  	inc rsi
 29849 000160F7 48FFC2                  	inc rdx
 29850 000160FA EBEA                    	jmp .L_lambda_simple_env_loop_00c6
 29851                                  .L_lambda_simple_env_end_00c6:
 29852 000160FC 5B                      	pop rbx
 29853 000160FD BE00000000              	mov rsi, 0
 29854                                  .L_lambda_simple_params_loop_00c6:	; copy params
 29855 00016102 4883FE00                	cmp rsi, 0
 29856 00016106 740E                    	je .L_lambda_simple_params_end_00c6
 29857 00016108 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29858 0001610D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29859 00016111 48FFC6                  	inc rsi
 29860 00016114 EBEC                    	jmp .L_lambda_simple_params_loop_00c6
 29861                                  .L_lambda_simple_params_end_00c6:
 29862 00016116 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29863 00016119 4889C3                  	mov rbx, rax
 29864 0001611C 58                      	pop rax
 29865 0001611D C60004                  	mov byte [rax], T_closure
 29866 00016120 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29867 00016124 48C74009[31610100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c6
 29868 0001612C E9B0000000              	jmp .L_lambda_simple_end_00c6
 29869                                  .L_lambda_simple_code_00c6:	; lambda-simple body
 29870 00016131 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29871 00016137 740B                    	je .L_lambda_simple_arity_check_ok_00c6
 29872 00016139 FF742410                	push qword [rsp + 8 * 2]
 29873 0001613D 6A01                    	push 1
 29874 0001613F E9CA140000              	jmp L_error_incorrect_arity_simple
 29875                                  .L_lambda_simple_arity_check_ok_00c6:
 29876 00016144 C8000000                	enter 0, 0
 29877 00016148 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29878 0001614D E803150000              	call malloc
 29879 00016152 50                      	push rax
 29880 00016153 BF08000000              	mov rdi, 8 * 1	; new rib
 29881 00016158 E8F8140000              	call malloc
 29882 0001615D 50                      	push rax
 29883 0001615E BF10000000              	mov rdi, 8 * 2	; extended env
 29884 00016163 E8ED140000              	call malloc
 29885 00016168 488B7D10                	mov rdi, ENV
 29886 0001616C BE00000000              	mov rsi, 0
 29887 00016171 BA01000000              	mov rdx, 1
 29888                                  .L_lambda_simple_env_loop_00c7:	; ext_env[i + 1] <-- env[i]
 29889 00016176 4883FE01                	cmp rsi, 1
 29890 0001617A 7410                    	je .L_lambda_simple_env_end_00c7
 29891 0001617C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29892 00016180 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29893 00016184 48FFC6                  	inc rsi
 29894 00016187 48FFC2                  	inc rdx
 29895 0001618A EBEA                    	jmp .L_lambda_simple_env_loop_00c7
 29896                                  .L_lambda_simple_env_end_00c7:
 29897 0001618C 5B                      	pop rbx
 29898 0001618D BE00000000              	mov rsi, 0
 29899                                  .L_lambda_simple_params_loop_00c7:	; copy params
 29900 00016192 4883FE01                	cmp rsi, 1
 29901 00016196 740E                    	je .L_lambda_simple_params_end_00c7
 29902 00016198 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29903 0001619D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29904 000161A1 48FFC6                  	inc rsi
 29905 000161A4 EBEC                    	jmp .L_lambda_simple_params_loop_00c7
 29906                                  .L_lambda_simple_params_end_00c7:
 29907 000161A6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29908 000161A9 4889C3                  	mov rbx, rax
 29909 000161AC 58                      	pop rax
 29910 000161AD C60004                  	mov byte [rax], T_closure
 29911 000161B0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29912 000161B4 48C74009[BE610100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c7
 29913 000161BC EB1F                    	jmp .L_lambda_simple_end_00c7
 29914                                  .L_lambda_simple_code_00c7:	; lambda-simple body
 29915 000161BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29916 000161C4 740B                    	je .L_lambda_simple_arity_check_ok_00c7
 29917 000161C6 FF742410                	push qword [rsp + 8 * 2]
 29918 000161CA 6A01                    	push 1
 29919 000161CC E93D140000              	jmp L_error_incorrect_arity_simple
 29920                                  .L_lambda_simple_arity_check_ok_00c7:
 29921 000161D1 C8000000                	enter 0, 0
 29922 000161D5 488B4520                	mov rax, PARAM(0)	; param y
 29923 000161D9 C9                      	leave
 29924 000161DA C21800                  	ret AND_KILL_FRAME(1)
 29925                                  .L_lambda_simple_end_00c7:	; new closure is in rax
 29926 000161DD C9                      	leave
 29927 000161DE C21800                  	ret AND_KILL_FRAME(1)
 29928                                  .L_lambda_simple_end_00c6:	; new closure is in rax
 29929 000161E1 803804                  	cmp byte [rax], T_closure
 29930 000161E4 0F85C2130000            	jne L_error_non_closure
 29931 000161EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 29932 000161ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 29933 000161F0 803804                  	cmp byte [rax], T_closure
 29934 000161F3 0F85B3130000            	jne L_error_non_closure
 29935 000161F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29936 000161FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 29937 000161FF 803804                  	cmp byte [rax], T_closure
 29938 00016202 0F85A4130000            	jne L_error_non_closure
 29939 00016208 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29940 0001620B FF5009                  	call SOB_CLOSURE_CODE(rax)
 29941                                  
 29942 0001620E 4889C7                  	mov rdi, rax
 29943 00016211 E894160000              	call print_sexpr_if_not_void
 29944                                  	; preparing a non-tail-call
 29945 00016216 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29946 0001621B E835140000              	call malloc
 29947 00016220 50                      	push rax
 29948 00016221 BF00000000              	mov rdi, 8 * 0	; new rib
 29949 00016226 E82A140000              	call malloc
 29950 0001622B 50                      	push rax
 29951 0001622C BF08000000              	mov rdi, 8 * 1	; extended env
 29952 00016231 E81F140000              	call malloc
 29953 00016236 488B7D10                	mov rdi, ENV
 29954 0001623A BE00000000              	mov rsi, 0
 29955 0001623F BA01000000              	mov rdx, 1
 29956                                  .L_lambda_simple_env_loop_00c8:	; ext_env[i + 1] <-- env[i]
 29957 00016244 4883FE00                	cmp rsi, 0
 29958 00016248 7410                    	je .L_lambda_simple_env_end_00c8
 29959 0001624A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29960 0001624E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29961 00016252 48FFC6                  	inc rsi
 29962 00016255 48FFC2                  	inc rdx
 29963 00016258 EBEA                    	jmp .L_lambda_simple_env_loop_00c8
 29964                                  .L_lambda_simple_env_end_00c8:
 29965 0001625A 5B                      	pop rbx
 29966 0001625B BE00000000              	mov rsi, 0
 29967                                  .L_lambda_simple_params_loop_00c8:	; copy params
 29968 00016260 4883FE00                	cmp rsi, 0
 29969 00016264 740E                    	je .L_lambda_simple_params_end_00c8
 29970 00016266 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29971 0001626B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29972 0001626F 48FFC6                  	inc rsi
 29973 00016272 EBEC                    	jmp .L_lambda_simple_params_loop_00c8
 29974                                  .L_lambda_simple_params_end_00c8:
 29975 00016274 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29976 00016277 4889C3                  	mov rbx, rax
 29977 0001627A 58                      	pop rax
 29978 0001627B C60004                  	mov byte [rax], T_closure
 29979 0001627E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29980 00016282 48C74009[8C620100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c8
 29981 0001628A EB1F                    	jmp .L_lambda_simple_end_00c8
 29982                                  .L_lambda_simple_code_00c8:	; lambda-simple body
 29983 0001628C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29984 00016292 740B                    	je .L_lambda_simple_arity_check_ok_00c8
 29985 00016294 FF742410                	push qword [rsp + 8 * 2]
 29986 00016298 6A02                    	push 2
 29987 0001629A E96F130000              	jmp L_error_incorrect_arity_simple
 29988                                  .L_lambda_simple_arity_check_ok_00c8:
 29989 0001629F C8000000                	enter 0, 0
 29990 000162A3 488B4520                	mov rax, PARAM(0)	; param x
 29991 000162A7 C9                      	leave
 29992 000162A8 C22000                  	ret AND_KILL_FRAME(2)
 29993                                  .L_lambda_simple_end_00c8:	; new closure is in rax
 29994 000162AB 50                      	push rax
 29995 000162AC 6A01                    	push 1	; arg count
 29996                                  	; preparing a non-tail-call
 29997 000162AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29998 000162B3 E89D130000              	call malloc
 29999 000162B8 50                      	push rax
 30000 000162B9 BF00000000              	mov rdi, 8 * 0	; new rib
 30001 000162BE E892130000              	call malloc
 30002 000162C3 50                      	push rax
 30003 000162C4 BF08000000              	mov rdi, 8 * 1	; extended env
 30004 000162C9 E887130000              	call malloc
 30005 000162CE 488B7D10                	mov rdi, ENV
 30006 000162D2 BE00000000              	mov rsi, 0
 30007 000162D7 BA01000000              	mov rdx, 1
 30008                                  .L_lambda_simple_env_loop_00c9:	; ext_env[i + 1] <-- env[i]
 30009 000162DC 4883FE00                	cmp rsi, 0
 30010 000162E0 7410                    	je .L_lambda_simple_env_end_00c9
 30011 000162E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30012 000162E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30013 000162EA 48FFC6                  	inc rsi
 30014 000162ED 48FFC2                  	inc rdx
 30015 000162F0 EBEA                    	jmp .L_lambda_simple_env_loop_00c9
 30016                                  .L_lambda_simple_env_end_00c9:
 30017 000162F2 5B                      	pop rbx
 30018 000162F3 BE00000000              	mov rsi, 0
 30019                                  .L_lambda_simple_params_loop_00c9:	; copy params
 30020 000162F8 4883FE00                	cmp rsi, 0
 30021 000162FC 740E                    	je .L_lambda_simple_params_end_00c9
 30022 000162FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30023 00016303 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30024 00016307 48FFC6                  	inc rsi
 30025 0001630A EBEC                    	jmp .L_lambda_simple_params_loop_00c9
 30026                                  .L_lambda_simple_params_end_00c9:
 30027 0001630C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30028 0001630F 4889C3                  	mov rbx, rax
 30029 00016312 58                      	pop rax
 30030 00016313 C60004                  	mov byte [rax], T_closure
 30031 00016316 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30032 0001631A 48C74009[27630100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c9
 30033 00016322 E985000000              	jmp .L_lambda_simple_end_00c9
 30034                                  .L_lambda_simple_code_00c9:	; lambda-simple body
 30035 00016327 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30036 0001632D 740B                    	je .L_lambda_simple_arity_check_ok_00c9
 30037 0001632F FF742410                	push qword [rsp + 8 * 2]
 30038 00016333 6A01                    	push 1
 30039 00016335 E9D4120000              	jmp L_error_incorrect_arity_simple
 30040                                  .L_lambda_simple_arity_check_ok_00c9:
 30041 0001633A C8000000                	enter 0, 0
 30042                                  	; preparing a tail-call
 30043 0001633E 48B8-                   	mov rax, L_constants + 2
 30043 00016340 [0200000000000000] 
 30044 00016348 50                      	push rax
 30045 00016349 48B8-                   	mov rax, L_constants + 3
 30045 0001634B [0300000000000000] 
 30046 00016353 50                      	push rax
 30047 00016354 6A02                    	push 2	; arg count
 30048 00016356 488B4520                	mov rax, PARAM(0)	; param z
 30049 0001635A 803804                  	cmp byte [rax], T_closure
 30050 0001635D 0F8549120000            	jne L_error_non_closure
 30051 00016363 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30052 00016366 FF7508                  	push qword [rbp + 8 * 1]
 30053                                   ; old ret addr
 30054 00016369 FF7500                  	push qword [rbp]
 30055                                   ; restore the old rbp
 30056 0001636C BB02000000              	mov rbx, 2
 30057 00016371 4883C303                	add rbx, 3
 30058 00016375 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30059 00016379 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30060 0001637E 4C8D4DF8                	lea r9, [rbp - 8]
 30061 00016382 B906000000              	mov rcx, 6
 30062                                  .L_tc_recycle_frame_loop_00fa:
 30063 00016387 4883F900                	cmp rcx, 0
 30064 0001638B 7413                    	je .L_tc_recycle_frame_done_00fa
 30065 0001638D 4D8B11                  	mov r10, qword [r9]
 30066 00016390 4D8910                  	mov qword [r8], r10
 30067 00016393 4983E808                	sub r8, 8
 30068 00016397 4983E908                	sub r9, 8
 30069 0001639B 48FFC9                  	dec rcx
 30070 0001639E EBE7                    	jmp .L_tc_recycle_frame_loop_00fa
 30071                                  .L_tc_recycle_frame_done_00fa:
 30072 000163A0 498D6008                	lea rsp, [r8 + 8]
 30073 000163A4 5D                      	pop rbp ; restore the old rbp
 30074 000163A5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30075 000163A8 C9                      	leave
 30076 000163A9 C21800                  	ret AND_KILL_FRAME(1)
 30077                                  .L_lambda_simple_end_00c9:	; new closure is in rax
 30078 000163AC 50                      	push rax
 30079 000163AD 6A01                    	push 1	; arg count
 30080                                  	; preparing a non-tail-call
 30081 000163AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30082 000163B4 E89C120000              	call malloc
 30083 000163B9 50                      	push rax
 30084 000163BA BF00000000              	mov rdi, 8 * 0	; new rib
 30085 000163BF E891120000              	call malloc
 30086 000163C4 50                      	push rax
 30087 000163C5 BF08000000              	mov rdi, 8 * 1	; extended env
 30088 000163CA E886120000              	call malloc
 30089 000163CF 488B7D10                	mov rdi, ENV
 30090 000163D3 BE00000000              	mov rsi, 0
 30091 000163D8 BA01000000              	mov rdx, 1
 30092                                  .L_lambda_simple_env_loop_00ca:	; ext_env[i + 1] <-- env[i]
 30093 000163DD 4883FE00                	cmp rsi, 0
 30094 000163E1 7410                    	je .L_lambda_simple_env_end_00ca
 30095 000163E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30096 000163E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30097 000163EB 48FFC6                  	inc rsi
 30098 000163EE 48FFC2                  	inc rdx
 30099 000163F1 EBEA                    	jmp .L_lambda_simple_env_loop_00ca
 30100                                  .L_lambda_simple_env_end_00ca:
 30101 000163F3 5B                      	pop rbx
 30102 000163F4 BE00000000              	mov rsi, 0
 30103                                  .L_lambda_simple_params_loop_00ca:	; copy params
 30104 000163F9 4883FE00                	cmp rsi, 0
 30105 000163FD 740E                    	je .L_lambda_simple_params_end_00ca
 30106 000163FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30107 00016404 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30108 00016408 48FFC6                  	inc rsi
 30109 0001640B EBEC                    	jmp .L_lambda_simple_params_loop_00ca
 30110                                  .L_lambda_simple_params_end_00ca:
 30111 0001640D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30112 00016410 4889C3                  	mov rbx, rax
 30113 00016413 58                      	pop rax
 30114 00016414 C60004                  	mov byte [rax], T_closure
 30115 00016417 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30116 0001641B 48C74009[28640100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ca
 30117 00016423 E903020000              	jmp .L_lambda_simple_end_00ca
 30118                                  .L_lambda_simple_code_00ca:	; lambda-simple body
 30119 00016428 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30120 0001642E 740B                    	je .L_lambda_simple_arity_check_ok_00ca
 30121 00016430 FF742410                	push qword [rsp + 8 * 2]
 30122 00016434 6A01                    	push 1
 30123 00016436 E9D3110000              	jmp L_error_incorrect_arity_simple
 30124                                  .L_lambda_simple_arity_check_ok_00ca:
 30125 0001643B C8000000                	enter 0, 0
 30126                                  	; preparing a tail-call
 30127 0001643F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30128 00016444 E80C120000              	call malloc
 30129 00016449 50                      	push rax
 30130 0001644A BF08000000              	mov rdi, 8 * 1	; new rib
 30131 0001644F E801120000              	call malloc
 30132 00016454 50                      	push rax
 30133 00016455 BF10000000              	mov rdi, 8 * 2	; extended env
 30134 0001645A E8F6110000              	call malloc
 30135 0001645F 488B7D10                	mov rdi, ENV
 30136 00016463 BE00000000              	mov rsi, 0
 30137 00016468 BA01000000              	mov rdx, 1
 30138                                  .L_lambda_simple_env_loop_00cb:	; ext_env[i + 1] <-- env[i]
 30139 0001646D 4883FE01                	cmp rsi, 1
 30140 00016471 7410                    	je .L_lambda_simple_env_end_00cb
 30141 00016473 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30142 00016477 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30143 0001647B 48FFC6                  	inc rsi
 30144 0001647E 48FFC2                  	inc rdx
 30145 00016481 EBEA                    	jmp .L_lambda_simple_env_loop_00cb
 30146                                  .L_lambda_simple_env_end_00cb:
 30147 00016483 5B                      	pop rbx
 30148 00016484 BE00000000              	mov rsi, 0
 30149                                  .L_lambda_simple_params_loop_00cb:	; copy params
 30150 00016489 4883FE01                	cmp rsi, 1
 30151 0001648D 740E                    	je .L_lambda_simple_params_end_00cb
 30152 0001648F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30153 00016494 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30154 00016498 48FFC6                  	inc rsi
 30155 0001649B EBEC                    	jmp .L_lambda_simple_params_loop_00cb
 30156                                  .L_lambda_simple_params_end_00cb:
 30157 0001649D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30158 000164A0 4889C3                  	mov rbx, rax
 30159 000164A3 58                      	pop rax
 30160 000164A4 C60004                  	mov byte [rax], T_closure
 30161 000164A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30162 000164AB 48C74009[B8640100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cb
 30163 000164B3 E91A010000              	jmp .L_lambda_simple_end_00cb
 30164                                  .L_lambda_simple_code_00cb:	; lambda-simple body
 30165 000164B8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30166 000164BE 740B                    	je .L_lambda_simple_arity_check_ok_00cb
 30167 000164C0 FF742410                	push qword [rsp + 8 * 2]
 30168 000164C4 6A02                    	push 2
 30169 000164C6 E943110000              	jmp L_error_incorrect_arity_simple
 30170                                  .L_lambda_simple_arity_check_ok_00cb:
 30171 000164CB C8000000                	enter 0, 0
 30172 000164CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30173 000164D4 E87C110000              	call malloc
 30174 000164D9 50                      	push rax
 30175 000164DA BF10000000              	mov rdi, 8 * 2	; new rib
 30176 000164DF E871110000              	call malloc
 30177 000164E4 50                      	push rax
 30178 000164E5 BF18000000              	mov rdi, 8 * 3	; extended env
 30179 000164EA E866110000              	call malloc
 30180 000164EF 488B7D10                	mov rdi, ENV
 30181 000164F3 BE00000000              	mov rsi, 0
 30182 000164F8 BA01000000              	mov rdx, 1
 30183                                  .L_lambda_simple_env_loop_00cc:	; ext_env[i + 1] <-- env[i]
 30184 000164FD 4883FE02                	cmp rsi, 2
 30185 00016501 7410                    	je .L_lambda_simple_env_end_00cc
 30186 00016503 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30187 00016507 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30188 0001650B 48FFC6                  	inc rsi
 30189 0001650E 48FFC2                  	inc rdx
 30190 00016511 EBEA                    	jmp .L_lambda_simple_env_loop_00cc
 30191                                  .L_lambda_simple_env_end_00cc:
 30192 00016513 5B                      	pop rbx
 30193 00016514 BE00000000              	mov rsi, 0
 30194                                  .L_lambda_simple_params_loop_00cc:	; copy params
 30195 00016519 4883FE02                	cmp rsi, 2
 30196 0001651D 740E                    	je .L_lambda_simple_params_end_00cc
 30197 0001651F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30198 00016524 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30199 00016528 48FFC6                  	inc rsi
 30200 0001652B EBEC                    	jmp .L_lambda_simple_params_loop_00cc
 30201                                  .L_lambda_simple_params_end_00cc:
 30202 0001652D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30203 00016530 4889C3                  	mov rbx, rax
 30204 00016533 58                      	pop rax
 30205 00016534 C60004                  	mov byte [rax], T_closure
 30206 00016537 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30207 0001653B 48C74009[48650100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cc
 30208 00016543 E986000000              	jmp .L_lambda_simple_end_00cc
 30209                                  .L_lambda_simple_code_00cc:	; lambda-simple body
 30210 00016548 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30211 0001654E 740B                    	je .L_lambda_simple_arity_check_ok_00cc
 30212 00016550 FF742410                	push qword [rsp + 8 * 2]
 30213 00016554 6A01                    	push 1
 30214 00016556 E9B3100000              	jmp L_error_incorrect_arity_simple
 30215                                  .L_lambda_simple_arity_check_ok_00cc:
 30216 0001655B C8000000                	enter 0, 0
 30217                                  	; preparing a tail-call
 30218 0001655F 488B4510                	mov rax, ENV
 30219 00016563 488B00                  	mov rax, qword [rax + 8 * 0]
 30220 00016566 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30221 00016569 50                      	push rax
 30222 0001656A 488B4510                	mov rax, ENV
 30223 0001656E 488B00                  	mov rax, qword [rax + 8 * 0]
 30224 00016571 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 30225 00016575 50                      	push rax
 30226 00016576 6A02                    	push 2	; arg count
 30227 00016578 488B4520                	mov rax, PARAM(0)	; param p
 30228 0001657C 803804                  	cmp byte [rax], T_closure
 30229 0001657F 0F8527100000            	jne L_error_non_closure
 30230 00016585 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30231 00016588 FF7508                  	push qword [rbp + 8 * 1]
 30232                                   ; old ret addr
 30233 0001658B FF7500                  	push qword [rbp]
 30234                                   ; restore the old rbp
 30235 0001658E BB02000000              	mov rbx, 2
 30236 00016593 4883C303                	add rbx, 3
 30237 00016597 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30238 0001659B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30239 000165A0 4C8D4DF8                	lea r9, [rbp - 8]
 30240 000165A4 B906000000              	mov rcx, 6
 30241                                  .L_tc_recycle_frame_loop_00fc:
 30242 000165A9 4883F900                	cmp rcx, 0
 30243 000165AD 7413                    	je .L_tc_recycle_frame_done_00fc
 30244 000165AF 4D8B11                  	mov r10, qword [r9]
 30245 000165B2 4D8910                  	mov qword [r8], r10
 30246 000165B5 4983E808                	sub r8, 8
 30247 000165B9 4983E908                	sub r9, 8
 30248 000165BD 48FFC9                  	dec rcx
 30249 000165C0 EBE7                    	jmp .L_tc_recycle_frame_loop_00fc
 30250                                  .L_tc_recycle_frame_done_00fc:
 30251 000165C2 498D6008                	lea rsp, [r8 + 8]
 30252 000165C6 5D                      	pop rbp ; restore the old rbp
 30253 000165C7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30254 000165CA C9                      	leave
 30255 000165CB C21800                  	ret AND_KILL_FRAME(1)
 30256                                  .L_lambda_simple_end_00cc:	; new closure is in rax
 30257 000165CE C9                      	leave
 30258 000165CF C22000                  	ret AND_KILL_FRAME(2)
 30259                                  .L_lambda_simple_end_00cb:	; new closure is in rax
 30260 000165D2 50                      	push rax
 30261 000165D3 6A01                    	push 1	; arg count
 30262 000165D5 488B4520                	mov rax, PARAM(0)	; param p
 30263 000165D9 803804                  	cmp byte [rax], T_closure
 30264 000165DC 0F85CA0F0000            	jne L_error_non_closure
 30265 000165E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30266 000165E5 FF7508                  	push qword [rbp + 8 * 1]
 30267                                   ; old ret addr
 30268 000165E8 FF7500                  	push qword [rbp]
 30269                                   ; restore the old rbp
 30270 000165EB BB01000000              	mov rbx, 1
 30271 000165F0 4883C303                	add rbx, 3
 30272 000165F4 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30273 000165F8 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30274 000165FD 4C8D4DF8                	lea r9, [rbp - 8]
 30275 00016601 B905000000              	mov rcx, 5
 30276                                  .L_tc_recycle_frame_loop_00fb:
 30277 00016606 4883F900                	cmp rcx, 0
 30278 0001660A 7413                    	je .L_tc_recycle_frame_done_00fb
 30279 0001660C 4D8B11                  	mov r10, qword [r9]
 30280 0001660F 4D8910                  	mov qword [r8], r10
 30281 00016612 4983E808                	sub r8, 8
 30282 00016616 4983E908                	sub r9, 8
 30283 0001661A 48FFC9                  	dec rcx
 30284 0001661D EBE7                    	jmp .L_tc_recycle_frame_loop_00fb
 30285                                  .L_tc_recycle_frame_done_00fb:
 30286 0001661F 498D6008                	lea rsp, [r8 + 8]
 30287 00016623 5D                      	pop rbp ; restore the old rbp
 30288 00016624 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30289 00016627 C9                      	leave
 30290 00016628 C21800                  	ret AND_KILL_FRAME(1)
 30291                                  .L_lambda_simple_end_00ca:	; new closure is in rax
 30292 0001662B 50                      	push rax
 30293 0001662C 6A01                    	push 1	; arg count
 30294 0001662E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30295 00016633 E81D100000              	call malloc
 30296 00016638 50                      	push rax
 30297 00016639 BF00000000              	mov rdi, 8 * 0	; new rib
 30298 0001663E E812100000              	call malloc
 30299 00016643 50                      	push rax
 30300 00016644 BF08000000              	mov rdi, 8 * 1	; extended env
 30301 00016649 E807100000              	call malloc
 30302 0001664E 488B7D10                	mov rdi, ENV
 30303 00016652 BE00000000              	mov rsi, 0
 30304 00016657 BA01000000              	mov rdx, 1
 30305                                  .L_lambda_simple_env_loop_00cd:	; ext_env[i + 1] <-- env[i]
 30306 0001665C 4883FE00                	cmp rsi, 0
 30307 00016660 7410                    	je .L_lambda_simple_env_end_00cd
 30308 00016662 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30309 00016666 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30310 0001666A 48FFC6                  	inc rsi
 30311 0001666D 48FFC2                  	inc rdx
 30312 00016670 EBEA                    	jmp .L_lambda_simple_env_loop_00cd
 30313                                  .L_lambda_simple_env_end_00cd:
 30314 00016672 5B                      	pop rbx
 30315 00016673 BE00000000              	mov rsi, 0
 30316                                  .L_lambda_simple_params_loop_00cd:	; copy params
 30317 00016678 4883FE00                	cmp rsi, 0
 30318 0001667C 740E                    	je .L_lambda_simple_params_end_00cd
 30319 0001667E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30320 00016683 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30321 00016687 48FFC6                  	inc rsi
 30322 0001668A EBEC                    	jmp .L_lambda_simple_params_loop_00cd
 30323                                  .L_lambda_simple_params_end_00cd:
 30324 0001668C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30325 0001668F 4889C3                  	mov rbx, rax
 30326 00016692 58                      	pop rax
 30327 00016693 C60004                  	mov byte [rax], T_closure
 30328 00016696 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30329 0001669A 48C74009[A7660100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cd
 30330 000166A2 E90B010000              	jmp .L_lambda_simple_end_00cd
 30331                                  .L_lambda_simple_code_00cd:	; lambda-simple body
 30332 000166A7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30333 000166AD 740B                    	je .L_lambda_simple_arity_check_ok_00cd
 30334 000166AF FF742410                	push qword [rsp + 8 * 2]
 30335 000166B3 6A01                    	push 1
 30336 000166B5 E9540F0000              	jmp L_error_incorrect_arity_simple
 30337                                  .L_lambda_simple_arity_check_ok_00cd:
 30338 000166BA C8000000                	enter 0, 0
 30339 000166BE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30340 000166C3 E88D0F0000              	call malloc
 30341 000166C8 50                      	push rax
 30342 000166C9 BF08000000              	mov rdi, 8 * 1	; new rib
 30343 000166CE E8820F0000              	call malloc
 30344 000166D3 50                      	push rax
 30345 000166D4 BF10000000              	mov rdi, 8 * 2	; extended env
 30346 000166D9 E8770F0000              	call malloc
 30347 000166DE 488B7D10                	mov rdi, ENV
 30348 000166E2 BE00000000              	mov rsi, 0
 30349 000166E7 BA01000000              	mov rdx, 1
 30350                                  .L_lambda_simple_env_loop_00ce:	; ext_env[i + 1] <-- env[i]
 30351 000166EC 4883FE01                	cmp rsi, 1
 30352 000166F0 7410                    	je .L_lambda_simple_env_end_00ce
 30353 000166F2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30354 000166F6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30355 000166FA 48FFC6                  	inc rsi
 30356 000166FD 48FFC2                  	inc rdx
 30357 00016700 EBEA                    	jmp .L_lambda_simple_env_loop_00ce
 30358                                  .L_lambda_simple_env_end_00ce:
 30359 00016702 5B                      	pop rbx
 30360 00016703 BE00000000              	mov rsi, 0
 30361                                  .L_lambda_simple_params_loop_00ce:	; copy params
 30362 00016708 4883FE01                	cmp rsi, 1
 30363 0001670C 740E                    	je .L_lambda_simple_params_end_00ce
 30364 0001670E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30365 00016713 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30366 00016717 48FFC6                  	inc rsi
 30367 0001671A EBEC                    	jmp .L_lambda_simple_params_loop_00ce
 30368                                  .L_lambda_simple_params_end_00ce:
 30369 0001671C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30370 0001671F 4889C3                  	mov rbx, rax
 30371 00016722 58                      	pop rax
 30372 00016723 C60004                  	mov byte [rax], T_closure
 30373 00016726 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30374 0001672A 48C74009[34670100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ce
 30375 00016732 EB7A                    	jmp .L_lambda_simple_end_00ce
 30376                                  .L_lambda_simple_code_00ce:	; lambda-simple body
 30377 00016734 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30378 0001673A 740B                    	je .L_lambda_simple_arity_check_ok_00ce
 30379 0001673C FF742410                	push qword [rsp + 8 * 2]
 30380 00016740 6A01                    	push 1
 30381 00016742 E9C70E0000              	jmp L_error_incorrect_arity_simple
 30382                                  .L_lambda_simple_arity_check_ok_00ce:
 30383 00016747 C8000000                	enter 0, 0
 30384                                  	; preparing a tail-call
 30385 0001674B 488B4520                	mov rax, PARAM(0)	; param y
 30386 0001674F 50                      	push rax
 30387 00016750 6A01                    	push 1	; arg count
 30388 00016752 488B4510                	mov rax, ENV
 30389 00016756 488B00                  	mov rax, qword [rax + 8 * 0]
 30390 00016759 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30391 0001675C 803804                  	cmp byte [rax], T_closure
 30392 0001675F 0F85470E0000            	jne L_error_non_closure
 30393 00016765 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30394 00016768 FF7508                  	push qword [rbp + 8 * 1]
 30395                                   ; old ret addr
 30396 0001676B FF7500                  	push qword [rbp]
 30397                                   ; restore the old rbp
 30398 0001676E BB01000000              	mov rbx, 1
 30399 00016773 4883C303                	add rbx, 3
 30400 00016777 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30401 0001677B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30402 00016780 4C8D4DF8                	lea r9, [rbp - 8]
 30403 00016784 B905000000              	mov rcx, 5
 30404                                  .L_tc_recycle_frame_loop_00fd:
 30405 00016789 4883F900                	cmp rcx, 0
 30406 0001678D 7413                    	je .L_tc_recycle_frame_done_00fd
 30407 0001678F 4D8B11                  	mov r10, qword [r9]
 30408 00016792 4D8910                  	mov qword [r8], r10
 30409 00016795 4983E808                	sub r8, 8
 30410 00016799 4983E908                	sub r9, 8
 30411 0001679D 48FFC9                  	dec rcx
 30412 000167A0 EBE7                    	jmp .L_tc_recycle_frame_loop_00fd
 30413                                  .L_tc_recycle_frame_done_00fd:
 30414 000167A2 498D6008                	lea rsp, [r8 + 8]
 30415 000167A6 5D                      	pop rbp ; restore the old rbp
 30416 000167A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30417 000167AA C9                      	leave
 30418 000167AB C21800                  	ret AND_KILL_FRAME(1)
 30419                                  .L_lambda_simple_end_00ce:	; new closure is in rax
 30420 000167AE C9                      	leave
 30421 000167AF C21800                  	ret AND_KILL_FRAME(1)
 30422                                  .L_lambda_simple_end_00cd:	; new closure is in rax
 30423 000167B2 803804                  	cmp byte [rax], T_closure
 30424 000167B5 0F85F10D0000            	jne L_error_non_closure
 30425 000167BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 30426 000167BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 30427 000167C1 803804                  	cmp byte [rax], T_closure
 30428 000167C4 0F85E20D0000            	jne L_error_non_closure
 30429 000167CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 30430 000167CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 30431 000167D0 803804                  	cmp byte [rax], T_closure
 30432 000167D3 0F85D30D0000            	jne L_error_non_closure
 30433 000167D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30434 000167DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 30435                                  
 30436 000167DF 4889C7                  	mov rdi, rax
 30437 000167E2 E8C3100000              	call print_sexpr_if_not_void
 30438                                  	; preparing a non-tail-call
 30439 000167E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30440 000167EC E8640E0000              	call malloc
 30441 000167F1 50                      	push rax
 30442 000167F2 BF00000000              	mov rdi, 8 * 0	; new rib
 30443 000167F7 E8590E0000              	call malloc
 30444 000167FC 50                      	push rax
 30445 000167FD BF08000000              	mov rdi, 8 * 1	; extended env
 30446 00016802 E84E0E0000              	call malloc
 30447 00016807 488B7D10                	mov rdi, ENV
 30448 0001680B BE00000000              	mov rsi, 0
 30449 00016810 BA01000000              	mov rdx, 1
 30450                                  .L_lambda_simple_env_loop_00cf:	; ext_env[i + 1] <-- env[i]
 30451 00016815 4883FE00                	cmp rsi, 0
 30452 00016819 7410                    	je .L_lambda_simple_env_end_00cf
 30453 0001681B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30454 0001681F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30455 00016823 48FFC6                  	inc rsi
 30456 00016826 48FFC2                  	inc rdx
 30457 00016829 EBEA                    	jmp .L_lambda_simple_env_loop_00cf
 30458                                  .L_lambda_simple_env_end_00cf:
 30459 0001682B 5B                      	pop rbx
 30460 0001682C BE00000000              	mov rsi, 0
 30461                                  .L_lambda_simple_params_loop_00cf:	; copy params
 30462 00016831 4883FE00                	cmp rsi, 0
 30463 00016835 740E                    	je .L_lambda_simple_params_end_00cf
 30464 00016837 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30465 0001683C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30466 00016840 48FFC6                  	inc rsi
 30467 00016843 EBEC                    	jmp .L_lambda_simple_params_loop_00cf
 30468                                  .L_lambda_simple_params_end_00cf:
 30469 00016845 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30470 00016848 4889C3                  	mov rbx, rax
 30471 0001684B 58                      	pop rax
 30472 0001684C C60004                  	mov byte [rax], T_closure
 30473 0001684F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30474 00016853 48C74009[5D680100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cf
 30475 0001685B EB1F                    	jmp .L_lambda_simple_end_00cf
 30476                                  .L_lambda_simple_code_00cf:	; lambda-simple body
 30477 0001685D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30478 00016863 740B                    	je .L_lambda_simple_arity_check_ok_00cf
 30479 00016865 FF742410                	push qword [rsp + 8 * 2]
 30480 00016869 6A02                    	push 2
 30481 0001686B E99E0D0000              	jmp L_error_incorrect_arity_simple
 30482                                  .L_lambda_simple_arity_check_ok_00cf:
 30483 00016870 C8000000                	enter 0, 0
 30484 00016874 488B4520                	mov rax, PARAM(0)	; param x
 30485 00016878 C9                      	leave
 30486 00016879 C22000                  	ret AND_KILL_FRAME(2)
 30487                                  .L_lambda_simple_end_00cf:	; new closure is in rax
 30488 0001687C 50                      	push rax
 30489 0001687D 6A01                    	push 1	; arg count
 30490                                  	; preparing a non-tail-call
 30491 0001687F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30492 00016884 E8CC0D0000              	call malloc
 30493 00016889 50                      	push rax
 30494 0001688A BF00000000              	mov rdi, 8 * 0	; new rib
 30495 0001688F E8C10D0000              	call malloc
 30496 00016894 50                      	push rax
 30497 00016895 BF08000000              	mov rdi, 8 * 1	; extended env
 30498 0001689A E8B60D0000              	call malloc
 30499 0001689F 488B7D10                	mov rdi, ENV
 30500 000168A3 BE00000000              	mov rsi, 0
 30501 000168A8 BA01000000              	mov rdx, 1
 30502                                  .L_lambda_simple_env_loop_00d0:	; ext_env[i + 1] <-- env[i]
 30503 000168AD 4883FE00                	cmp rsi, 0
 30504 000168B1 7410                    	je .L_lambda_simple_env_end_00d0
 30505 000168B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30506 000168B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30507 000168BB 48FFC6                  	inc rsi
 30508 000168BE 48FFC2                  	inc rdx
 30509 000168C1 EBEA                    	jmp .L_lambda_simple_env_loop_00d0
 30510                                  .L_lambda_simple_env_end_00d0:
 30511 000168C3 5B                      	pop rbx
 30512 000168C4 BE00000000              	mov rsi, 0
 30513                                  .L_lambda_simple_params_loop_00d0:	; copy params
 30514 000168C9 4883FE00                	cmp rsi, 0
 30515 000168CD 740E                    	je .L_lambda_simple_params_end_00d0
 30516 000168CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30517 000168D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30518 000168D8 48FFC6                  	inc rsi
 30519 000168DB EBEC                    	jmp .L_lambda_simple_params_loop_00d0
 30520                                  .L_lambda_simple_params_end_00d0:
 30521 000168DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30522 000168E0 4889C3                  	mov rbx, rax
 30523 000168E3 58                      	pop rax
 30524 000168E4 C60004                  	mov byte [rax], T_closure
 30525 000168E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30526 000168EB 48C74009[F8680100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d0
 30527 000168F3 E985000000              	jmp .L_lambda_simple_end_00d0
 30528                                  .L_lambda_simple_code_00d0:	; lambda-simple body
 30529 000168F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30530 000168FE 740B                    	je .L_lambda_simple_arity_check_ok_00d0
 30531 00016900 FF742410                	push qword [rsp + 8 * 2]
 30532 00016904 6A01                    	push 1
 30533 00016906 E9030D0000              	jmp L_error_incorrect_arity_simple
 30534                                  .L_lambda_simple_arity_check_ok_00d0:
 30535 0001690B C8000000                	enter 0, 0
 30536                                  	; preparing a tail-call
 30537 0001690F 48B8-                   	mov rax, L_constants + 2
 30537 00016911 [0200000000000000] 
 30538 00016919 50                      	push rax
 30539 0001691A 48B8-                   	mov rax, L_constants + 3
 30539 0001691C [0300000000000000] 
 30540 00016924 50                      	push rax
 30541 00016925 6A02                    	push 2	; arg count
 30542 00016927 488B4520                	mov rax, PARAM(0)	; param z
 30543 0001692B 803804                  	cmp byte [rax], T_closure
 30544 0001692E 0F85780C0000            	jne L_error_non_closure
 30545 00016934 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30546 00016937 FF7508                  	push qword [rbp + 8 * 1]
 30547                                   ; old ret addr
 30548 0001693A FF7500                  	push qword [rbp]
 30549                                   ; restore the old rbp
 30550 0001693D BB02000000              	mov rbx, 2
 30551 00016942 4883C303                	add rbx, 3
 30552 00016946 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30553 0001694A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30554 0001694F 4C8D4DF8                	lea r9, [rbp - 8]
 30555 00016953 B906000000              	mov rcx, 6
 30556                                  .L_tc_recycle_frame_loop_00fe:
 30557 00016958 4883F900                	cmp rcx, 0
 30558 0001695C 7413                    	je .L_tc_recycle_frame_done_00fe
 30559 0001695E 4D8B11                  	mov r10, qword [r9]
 30560 00016961 4D8910                  	mov qword [r8], r10
 30561 00016964 4983E808                	sub r8, 8
 30562 00016968 4983E908                	sub r9, 8
 30563 0001696C 48FFC9                  	dec rcx
 30564 0001696F EBE7                    	jmp .L_tc_recycle_frame_loop_00fe
 30565                                  .L_tc_recycle_frame_done_00fe:
 30566 00016971 498D6008                	lea rsp, [r8 + 8]
 30567 00016975 5D                      	pop rbp ; restore the old rbp
 30568 00016976 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30569 00016979 C9                      	leave
 30570 0001697A C21800                  	ret AND_KILL_FRAME(1)
 30571                                  .L_lambda_simple_end_00d0:	; new closure is in rax
 30572 0001697D 50                      	push rax
 30573 0001697E 6A01                    	push 1	; arg count
 30574                                  	; preparing a non-tail-call
 30575 00016980 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30576 00016985 E8CB0C0000              	call malloc
 30577 0001698A 50                      	push rax
 30578 0001698B BF00000000              	mov rdi, 8 * 0	; new rib
 30579 00016990 E8C00C0000              	call malloc
 30580 00016995 50                      	push rax
 30581 00016996 BF08000000              	mov rdi, 8 * 1	; extended env
 30582 0001699B E8B50C0000              	call malloc
 30583 000169A0 488B7D10                	mov rdi, ENV
 30584 000169A4 BE00000000              	mov rsi, 0
 30585 000169A9 BA01000000              	mov rdx, 1
 30586                                  .L_lambda_simple_env_loop_00d1:	; ext_env[i + 1] <-- env[i]
 30587 000169AE 4883FE00                	cmp rsi, 0
 30588 000169B2 7410                    	je .L_lambda_simple_env_end_00d1
 30589 000169B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30590 000169B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30591 000169BC 48FFC6                  	inc rsi
 30592 000169BF 48FFC2                  	inc rdx
 30593 000169C2 EBEA                    	jmp .L_lambda_simple_env_loop_00d1
 30594                                  .L_lambda_simple_env_end_00d1:
 30595 000169C4 5B                      	pop rbx
 30596 000169C5 BE00000000              	mov rsi, 0
 30597                                  .L_lambda_simple_params_loop_00d1:	; copy params
 30598 000169CA 4883FE00                	cmp rsi, 0
 30599 000169CE 740E                    	je .L_lambda_simple_params_end_00d1
 30600 000169D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30601 000169D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30602 000169D9 48FFC6                  	inc rsi
 30603 000169DC EBEC                    	jmp .L_lambda_simple_params_loop_00d1
 30604                                  .L_lambda_simple_params_end_00d1:
 30605 000169DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30606 000169E1 4889C3                  	mov rbx, rax
 30607 000169E4 58                      	pop rax
 30608 000169E5 C60004                  	mov byte [rax], T_closure
 30609 000169E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30610 000169EC 48C74009[F9690100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d1
 30611 000169F4 E903020000              	jmp .L_lambda_simple_end_00d1
 30612                                  .L_lambda_simple_code_00d1:	; lambda-simple body
 30613 000169F9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30614 000169FF 740B                    	je .L_lambda_simple_arity_check_ok_00d1
 30615 00016A01 FF742410                	push qword [rsp + 8 * 2]
 30616 00016A05 6A01                    	push 1
 30617 00016A07 E9020C0000              	jmp L_error_incorrect_arity_simple
 30618                                  .L_lambda_simple_arity_check_ok_00d1:
 30619 00016A0C C8000000                	enter 0, 0
 30620                                  	; preparing a tail-call
 30621 00016A10 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30622 00016A15 E83B0C0000              	call malloc
 30623 00016A1A 50                      	push rax
 30624 00016A1B BF08000000              	mov rdi, 8 * 1	; new rib
 30625 00016A20 E8300C0000              	call malloc
 30626 00016A25 50                      	push rax
 30627 00016A26 BF10000000              	mov rdi, 8 * 2	; extended env
 30628 00016A2B E8250C0000              	call malloc
 30629 00016A30 488B7D10                	mov rdi, ENV
 30630 00016A34 BE00000000              	mov rsi, 0
 30631 00016A39 BA01000000              	mov rdx, 1
 30632                                  .L_lambda_simple_env_loop_00d2:	; ext_env[i + 1] <-- env[i]
 30633 00016A3E 4883FE01                	cmp rsi, 1
 30634 00016A42 7410                    	je .L_lambda_simple_env_end_00d2
 30635 00016A44 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30636 00016A48 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30637 00016A4C 48FFC6                  	inc rsi
 30638 00016A4F 48FFC2                  	inc rdx
 30639 00016A52 EBEA                    	jmp .L_lambda_simple_env_loop_00d2
 30640                                  .L_lambda_simple_env_end_00d2:
 30641 00016A54 5B                      	pop rbx
 30642 00016A55 BE00000000              	mov rsi, 0
 30643                                  .L_lambda_simple_params_loop_00d2:	; copy params
 30644 00016A5A 4883FE01                	cmp rsi, 1
 30645 00016A5E 740E                    	je .L_lambda_simple_params_end_00d2
 30646 00016A60 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30647 00016A65 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30648 00016A69 48FFC6                  	inc rsi
 30649 00016A6C EBEC                    	jmp .L_lambda_simple_params_loop_00d2
 30650                                  .L_lambda_simple_params_end_00d2:
 30651 00016A6E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30652 00016A71 4889C3                  	mov rbx, rax
 30653 00016A74 58                      	pop rax
 30654 00016A75 C60004                  	mov byte [rax], T_closure
 30655 00016A78 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30656 00016A7C 48C74009[896A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d2
 30657 00016A84 E91A010000              	jmp .L_lambda_simple_end_00d2
 30658                                  .L_lambda_simple_code_00d2:	; lambda-simple body
 30659 00016A89 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30660 00016A8F 740B                    	je .L_lambda_simple_arity_check_ok_00d2
 30661 00016A91 FF742410                	push qword [rsp + 8 * 2]
 30662 00016A95 6A02                    	push 2
 30663 00016A97 E9720B0000              	jmp L_error_incorrect_arity_simple
 30664                                  .L_lambda_simple_arity_check_ok_00d2:
 30665 00016A9C C8000000                	enter 0, 0
 30666 00016AA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30667 00016AA5 E8AB0B0000              	call malloc
 30668 00016AAA 50                      	push rax
 30669 00016AAB BF10000000              	mov rdi, 8 * 2	; new rib
 30670 00016AB0 E8A00B0000              	call malloc
 30671 00016AB5 50                      	push rax
 30672 00016AB6 BF18000000              	mov rdi, 8 * 3	; extended env
 30673 00016ABB E8950B0000              	call malloc
 30674 00016AC0 488B7D10                	mov rdi, ENV
 30675 00016AC4 BE00000000              	mov rsi, 0
 30676 00016AC9 BA01000000              	mov rdx, 1
 30677                                  .L_lambda_simple_env_loop_00d3:	; ext_env[i + 1] <-- env[i]
 30678 00016ACE 4883FE02                	cmp rsi, 2
 30679 00016AD2 7410                    	je .L_lambda_simple_env_end_00d3
 30680 00016AD4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30681 00016AD8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30682 00016ADC 48FFC6                  	inc rsi
 30683 00016ADF 48FFC2                  	inc rdx
 30684 00016AE2 EBEA                    	jmp .L_lambda_simple_env_loop_00d3
 30685                                  .L_lambda_simple_env_end_00d3:
 30686 00016AE4 5B                      	pop rbx
 30687 00016AE5 BE00000000              	mov rsi, 0
 30688                                  .L_lambda_simple_params_loop_00d3:	; copy params
 30689 00016AEA 4883FE02                	cmp rsi, 2
 30690 00016AEE 740E                    	je .L_lambda_simple_params_end_00d3
 30691 00016AF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30692 00016AF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30693 00016AF9 48FFC6                  	inc rsi
 30694 00016AFC EBEC                    	jmp .L_lambda_simple_params_loop_00d3
 30695                                  .L_lambda_simple_params_end_00d3:
 30696 00016AFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30697 00016B01 4889C3                  	mov rbx, rax
 30698 00016B04 58                      	pop rax
 30699 00016B05 C60004                  	mov byte [rax], T_closure
 30700 00016B08 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30701 00016B0C 48C74009[196B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d3
 30702 00016B14 E986000000              	jmp .L_lambda_simple_end_00d3
 30703                                  .L_lambda_simple_code_00d3:	; lambda-simple body
 30704 00016B19 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30705 00016B1F 740B                    	je .L_lambda_simple_arity_check_ok_00d3
 30706 00016B21 FF742410                	push qword [rsp + 8 * 2]
 30707 00016B25 6A01                    	push 1
 30708 00016B27 E9E20A0000              	jmp L_error_incorrect_arity_simple
 30709                                  .L_lambda_simple_arity_check_ok_00d3:
 30710 00016B2C C8000000                	enter 0, 0
 30711                                  	; preparing a tail-call
 30712 00016B30 488B4510                	mov rax, ENV
 30713 00016B34 488B00                  	mov rax, qword [rax + 8 * 0]
 30714 00016B37 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30715 00016B3A 50                      	push rax
 30716 00016B3B 488B4510                	mov rax, ENV
 30717 00016B3F 488B00                  	mov rax, qword [rax + 8 * 0]
 30718 00016B42 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 30719 00016B46 50                      	push rax
 30720 00016B47 6A02                    	push 2	; arg count
 30721 00016B49 488B4520                	mov rax, PARAM(0)	; param p
 30722 00016B4D 803804                  	cmp byte [rax], T_closure
 30723 00016B50 0F85560A0000            	jne L_error_non_closure
 30724 00016B56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30725 00016B59 FF7508                  	push qword [rbp + 8 * 1]
 30726                                   ; old ret addr
 30727 00016B5C FF7500                  	push qword [rbp]
 30728                                   ; restore the old rbp
 30729 00016B5F BB02000000              	mov rbx, 2
 30730 00016B64 4883C303                	add rbx, 3
 30731 00016B68 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30732 00016B6C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30733 00016B71 4C8D4DF8                	lea r9, [rbp - 8]
 30734 00016B75 B906000000              	mov rcx, 6
 30735                                  .L_tc_recycle_frame_loop_0100:
 30736 00016B7A 4883F900                	cmp rcx, 0
 30737 00016B7E 7413                    	je .L_tc_recycle_frame_done_0100
 30738 00016B80 4D8B11                  	mov r10, qword [r9]
 30739 00016B83 4D8910                  	mov qword [r8], r10
 30740 00016B86 4983E808                	sub r8, 8
 30741 00016B8A 4983E908                	sub r9, 8
 30742 00016B8E 48FFC9                  	dec rcx
 30743 00016B91 EBE7                    	jmp .L_tc_recycle_frame_loop_0100
 30744                                  .L_tc_recycle_frame_done_0100:
 30745 00016B93 498D6008                	lea rsp, [r8 + 8]
 30746 00016B97 5D                      	pop rbp ; restore the old rbp
 30747 00016B98 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30748 00016B9B C9                      	leave
 30749 00016B9C C21800                  	ret AND_KILL_FRAME(1)
 30750                                  .L_lambda_simple_end_00d3:	; new closure is in rax
 30751 00016B9F C9                      	leave
 30752 00016BA0 C22000                  	ret AND_KILL_FRAME(2)
 30753                                  .L_lambda_simple_end_00d2:	; new closure is in rax
 30754 00016BA3 50                      	push rax
 30755 00016BA4 6A01                    	push 1	; arg count
 30756 00016BA6 488B4520                	mov rax, PARAM(0)	; param p
 30757 00016BAA 803804                  	cmp byte [rax], T_closure
 30758 00016BAD 0F85F9090000            	jne L_error_non_closure
 30759 00016BB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30760 00016BB6 FF7508                  	push qword [rbp + 8 * 1]
 30761                                   ; old ret addr
 30762 00016BB9 FF7500                  	push qword [rbp]
 30763                                   ; restore the old rbp
 30764 00016BBC BB01000000              	mov rbx, 1
 30765 00016BC1 4883C303                	add rbx, 3
 30766 00016BC5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30767 00016BC9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30768 00016BCE 4C8D4DF8                	lea r9, [rbp - 8]
 30769 00016BD2 B905000000              	mov rcx, 5
 30770                                  .L_tc_recycle_frame_loop_00ff:
 30771 00016BD7 4883F900                	cmp rcx, 0
 30772 00016BDB 7413                    	je .L_tc_recycle_frame_done_00ff
 30773 00016BDD 4D8B11                  	mov r10, qword [r9]
 30774 00016BE0 4D8910                  	mov qword [r8], r10
 30775 00016BE3 4983E808                	sub r8, 8
 30776 00016BE7 4983E908                	sub r9, 8
 30777 00016BEB 48FFC9                  	dec rcx
 30778 00016BEE EBE7                    	jmp .L_tc_recycle_frame_loop_00ff
 30779                                  .L_tc_recycle_frame_done_00ff:
 30780 00016BF0 498D6008                	lea rsp, [r8 + 8]
 30781 00016BF4 5D                      	pop rbp ; restore the old rbp
 30782 00016BF5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30783 00016BF8 C9                      	leave
 30784 00016BF9 C21800                  	ret AND_KILL_FRAME(1)
 30785                                  .L_lambda_simple_end_00d1:	; new closure is in rax
 30786 00016BFC 50                      	push rax
 30787 00016BFD 6A01                    	push 1	; arg count
 30788 00016BFF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30789 00016C04 E84C0A0000              	call malloc
 30790 00016C09 50                      	push rax
 30791 00016C0A BF00000000              	mov rdi, 8 * 0	; new rib
 30792 00016C0F E8410A0000              	call malloc
 30793 00016C14 50                      	push rax
 30794 00016C15 BF08000000              	mov rdi, 8 * 1	; extended env
 30795 00016C1A E8360A0000              	call malloc
 30796 00016C1F 488B7D10                	mov rdi, ENV
 30797 00016C23 BE00000000              	mov rsi, 0
 30798 00016C28 BA01000000              	mov rdx, 1
 30799                                  .L_lambda_simple_env_loop_00d4:	; ext_env[i + 1] <-- env[i]
 30800 00016C2D 4883FE00                	cmp rsi, 0
 30801 00016C31 7410                    	je .L_lambda_simple_env_end_00d4
 30802 00016C33 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30803 00016C37 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30804 00016C3B 48FFC6                  	inc rsi
 30805 00016C3E 48FFC2                  	inc rdx
 30806 00016C41 EBEA                    	jmp .L_lambda_simple_env_loop_00d4
 30807                                  .L_lambda_simple_env_end_00d4:
 30808 00016C43 5B                      	pop rbx
 30809 00016C44 BE00000000              	mov rsi, 0
 30810                                  .L_lambda_simple_params_loop_00d4:	; copy params
 30811 00016C49 4883FE00                	cmp rsi, 0
 30812 00016C4D 740E                    	je .L_lambda_simple_params_end_00d4
 30813 00016C4F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30814 00016C54 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30815 00016C58 48FFC6                  	inc rsi
 30816 00016C5B EBEC                    	jmp .L_lambda_simple_params_loop_00d4
 30817                                  .L_lambda_simple_params_end_00d4:
 30818 00016C5D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30819 00016C60 4889C3                  	mov rbx, rax
 30820 00016C63 58                      	pop rax
 30821 00016C64 C60004                  	mov byte [rax], T_closure
 30822 00016C67 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30823 00016C6B 48C74009[786C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d4
 30824 00016C73 E92A010000              	jmp .L_lambda_simple_end_00d4
 30825                                  .L_lambda_simple_code_00d4:	; lambda-simple body
 30826 00016C78 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30827 00016C7E 740B                    	je .L_lambda_simple_arity_check_ok_00d4
 30828 00016C80 FF742410                	push qword [rsp + 8 * 2]
 30829 00016C84 6A01                    	push 1
 30830 00016C86 E983090000              	jmp L_error_incorrect_arity_simple
 30831                                  .L_lambda_simple_arity_check_ok_00d4:
 30832 00016C8B C8000000                	enter 0, 0
 30833 00016C8F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30834 00016C94 E8BC090000              	call malloc
 30835 00016C99 50                      	push rax
 30836 00016C9A BF08000000              	mov rdi, 8 * 1	; new rib
 30837 00016C9F E8B1090000              	call malloc
 30838 00016CA4 50                      	push rax
 30839 00016CA5 BF10000000              	mov rdi, 8 * 2	; extended env
 30840 00016CAA E8A6090000              	call malloc
 30841 00016CAF 488B7D10                	mov rdi, ENV
 30842 00016CB3 BE00000000              	mov rsi, 0
 30843 00016CB8 BA01000000              	mov rdx, 1
 30844                                  .L_lambda_simple_env_loop_00d5:	; ext_env[i + 1] <-- env[i]
 30845 00016CBD 4883FE01                	cmp rsi, 1
 30846 00016CC1 7410                    	je .L_lambda_simple_env_end_00d5
 30847 00016CC3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30848 00016CC7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30849 00016CCB 48FFC6                  	inc rsi
 30850 00016CCE 48FFC2                  	inc rdx
 30851 00016CD1 EBEA                    	jmp .L_lambda_simple_env_loop_00d5
 30852                                  .L_lambda_simple_env_end_00d5:
 30853 00016CD3 5B                      	pop rbx
 30854 00016CD4 BE00000000              	mov rsi, 0
 30855                                  .L_lambda_simple_params_loop_00d5:	; copy params
 30856 00016CD9 4883FE01                	cmp rsi, 1
 30857 00016CDD 740E                    	je .L_lambda_simple_params_end_00d5
 30858 00016CDF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30859 00016CE4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30860 00016CE8 48FFC6                  	inc rsi
 30861 00016CEB EBEC                    	jmp .L_lambda_simple_params_loop_00d5
 30862                                  .L_lambda_simple_params_end_00d5:
 30863 00016CED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30864 00016CF0 4889C3                  	mov rbx, rax
 30865 00016CF3 58                      	pop rax
 30866 00016CF4 C60004                  	mov byte [rax], T_closure
 30867 00016CF7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30868 00016CFB 48C74009[086D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d5
 30869 00016D03 E996000000              	jmp .L_lambda_simple_end_00d5
 30870                                  .L_lambda_simple_code_00d5:	; lambda-simple body
 30871 00016D08 48837C241001            	cmp qword [rsp + 8 * 2], 1
 30872 00016D0E 740B                    	je .L_lambda_simple_arity_check_ok_00d5
 30873 00016D10 FF742410                	push qword [rsp + 8 * 2]
 30874 00016D14 6A01                    	push 1
 30875 00016D16 E9F3080000              	jmp L_error_incorrect_arity_simple
 30876                                  .L_lambda_simple_arity_check_ok_00d5:
 30877 00016D1B C8000000                	enter 0, 0
 30878                                  	; preparing a tail-call
 30879                                  	; preparing a non-tail-call
 30880 00016D1F 488B4520                	mov rax, PARAM(0)	; param y
 30881 00016D23 50                      	push rax
 30882 00016D24 6A01                    	push 1	; arg count
 30883 00016D26 488B4510                	mov rax, ENV
 30884 00016D2A 488B00                  	mov rax, qword [rax + 8 * 0]
 30885 00016D2D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30886 00016D30 803804                  	cmp byte [rax], T_closure
 30887 00016D33 0F8573080000            	jne L_error_non_closure
 30888 00016D39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30889 00016D3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 30890 00016D3F 50                      	push rax
 30891 00016D40 6A01                    	push 1	; arg count
 30892 00016D42 488B4510                	mov rax, ENV
 30893 00016D46 488B00                  	mov rax, qword [rax + 8 * 0]
 30894 00016D49 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 30895 00016D4C 803804                  	cmp byte [rax], T_closure
 30896 00016D4F 0F8557080000            	jne L_error_non_closure
 30897 00016D55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30898 00016D58 FF7508                  	push qword [rbp + 8 * 1]
 30899                                   ; old ret addr
 30900 00016D5B FF7500                  	push qword [rbp]
 30901                                   ; restore the old rbp
 30902 00016D5E BB01000000              	mov rbx, 1
 30903 00016D63 4883C303                	add rbx, 3
 30904 00016D67 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 30905 00016D6B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 30906 00016D70 4C8D4DF8                	lea r9, [rbp - 8]
 30907 00016D74 B905000000              	mov rcx, 5
 30908                                  .L_tc_recycle_frame_loop_0101:
 30909 00016D79 4883F900                	cmp rcx, 0
 30910 00016D7D 7413                    	je .L_tc_recycle_frame_done_0101
 30911 00016D7F 4D8B11                  	mov r10, qword [r9]
 30912 00016D82 4D8910                  	mov qword [r8], r10
 30913 00016D85 4983E808                	sub r8, 8
 30914 00016D89 4983E908                	sub r9, 8
 30915 00016D8D 48FFC9                  	dec rcx
 30916 00016D90 EBE7                    	jmp .L_tc_recycle_frame_loop_0101
 30917                                  .L_tc_recycle_frame_done_0101:
 30918 00016D92 498D6008                	lea rsp, [r8 + 8]
 30919 00016D96 5D                      	pop rbp ; restore the old rbp
 30920 00016D97 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 30921 00016D9A C9                      	leave
 30922 00016D9B C21800                  	ret AND_KILL_FRAME(1)
 30923                                  .L_lambda_simple_end_00d5:	; new closure is in rax
 30924 00016D9E C9                      	leave
 30925 00016D9F C21800                  	ret AND_KILL_FRAME(1)
 30926                                  .L_lambda_simple_end_00d4:	; new closure is in rax
 30927 00016DA2 803804                  	cmp byte [rax], T_closure
 30928 00016DA5 0F8501080000            	jne L_error_non_closure
 30929 00016DAB FF7001                  	push SOB_CLOSURE_ENV(rax)
 30930 00016DAE FF5009                  	call SOB_CLOSURE_CODE(rax)
 30931 00016DB1 803804                  	cmp byte [rax], T_closure
 30932 00016DB4 0F85F2070000            	jne L_error_non_closure
 30933 00016DBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 30934 00016DBD FF5009                  	call SOB_CLOSURE_CODE(rax)
 30935 00016DC0 803804                  	cmp byte [rax], T_closure
 30936 00016DC3 0F85E3070000            	jne L_error_non_closure
 30937 00016DC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 30938 00016DCC FF5009                  	call SOB_CLOSURE_CODE(rax)
 30939                                  
 30940 00016DCF 4889C7                  	mov rdi, rax
 30941 00016DD2 E8D30A0000              	call print_sexpr_if_not_void
 30942                                  	; preparing a non-tail-call
 30943 00016DD7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30944 00016DDC E874080000              	call malloc
 30945 00016DE1 50                      	push rax
 30946 00016DE2 BF00000000              	mov rdi, 8 * 0	; new rib
 30947 00016DE7 E869080000              	call malloc
 30948 00016DEC 50                      	push rax
 30949 00016DED BF08000000              	mov rdi, 8 * 1	; extended env
 30950 00016DF2 E85E080000              	call malloc
 30951 00016DF7 488B7D10                	mov rdi, ENV
 30952 00016DFB BE00000000              	mov rsi, 0
 30953 00016E00 BA01000000              	mov rdx, 1
 30954                                  .L_lambda_simple_env_loop_00d6:	; ext_env[i + 1] <-- env[i]
 30955 00016E05 4883FE00                	cmp rsi, 0
 30956 00016E09 7410                    	je .L_lambda_simple_env_end_00d6
 30957 00016E0B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 30958 00016E0F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 30959 00016E13 48FFC6                  	inc rsi
 30960 00016E16 48FFC2                  	inc rdx
 30961 00016E19 EBEA                    	jmp .L_lambda_simple_env_loop_00d6
 30962                                  .L_lambda_simple_env_end_00d6:
 30963 00016E1B 5B                      	pop rbx
 30964 00016E1C BE00000000              	mov rsi, 0
 30965                                  .L_lambda_simple_params_loop_00d6:	; copy params
 30966 00016E21 4883FE00                	cmp rsi, 0
 30967 00016E25 740E                    	je .L_lambda_simple_params_end_00d6
 30968 00016E27 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 30969 00016E2C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 30970 00016E30 48FFC6                  	inc rsi
 30971 00016E33 EBEC                    	jmp .L_lambda_simple_params_loop_00d6
 30972                                  .L_lambda_simple_params_end_00d6:
 30973 00016E35 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 30974 00016E38 4889C3                  	mov rbx, rax
 30975 00016E3B 58                      	pop rax
 30976 00016E3C C60004                  	mov byte [rax], T_closure
 30977 00016E3F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 30978 00016E43 48C74009[4D6E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d6
 30979 00016E4B EB1F                    	jmp .L_lambda_simple_end_00d6
 30980                                  .L_lambda_simple_code_00d6:	; lambda-simple body
 30981 00016E4D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30982 00016E53 740B                    	je .L_lambda_simple_arity_check_ok_00d6
 30983 00016E55 FF742410                	push qword [rsp + 8 * 2]
 30984 00016E59 6A02                    	push 2
 30985 00016E5B E9AE070000              	jmp L_error_incorrect_arity_simple
 30986                                  .L_lambda_simple_arity_check_ok_00d6:
 30987 00016E60 C8000000                	enter 0, 0
 30988 00016E64 488B4520                	mov rax, PARAM(0)	; param x
 30989 00016E68 C9                      	leave
 30990 00016E69 C22000                  	ret AND_KILL_FRAME(2)
 30991                                  .L_lambda_simple_end_00d6:	; new closure is in rax
 30992 00016E6C 50                      	push rax
 30993 00016E6D 6A01                    	push 1	; arg count
 30994                                  	; preparing a non-tail-call
 30995 00016E6F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 30996 00016E74 E8DC070000              	call malloc
 30997 00016E79 50                      	push rax
 30998 00016E7A BF00000000              	mov rdi, 8 * 0	; new rib
 30999 00016E7F E8D1070000              	call malloc
 31000 00016E84 50                      	push rax
 31001 00016E85 BF08000000              	mov rdi, 8 * 1	; extended env
 31002 00016E8A E8C6070000              	call malloc
 31003 00016E8F 488B7D10                	mov rdi, ENV
 31004 00016E93 BE00000000              	mov rsi, 0
 31005 00016E98 BA01000000              	mov rdx, 1
 31006                                  .L_lambda_simple_env_loop_00d7:	; ext_env[i + 1] <-- env[i]
 31007 00016E9D 4883FE00                	cmp rsi, 0
 31008 00016EA1 7410                    	je .L_lambda_simple_env_end_00d7
 31009 00016EA3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31010 00016EA7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31011 00016EAB 48FFC6                  	inc rsi
 31012 00016EAE 48FFC2                  	inc rdx
 31013 00016EB1 EBEA                    	jmp .L_lambda_simple_env_loop_00d7
 31014                                  .L_lambda_simple_env_end_00d7:
 31015 00016EB3 5B                      	pop rbx
 31016 00016EB4 BE00000000              	mov rsi, 0
 31017                                  .L_lambda_simple_params_loop_00d7:	; copy params
 31018 00016EB9 4883FE00                	cmp rsi, 0
 31019 00016EBD 740E                    	je .L_lambda_simple_params_end_00d7
 31020 00016EBF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31021 00016EC4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31022 00016EC8 48FFC6                  	inc rsi
 31023 00016ECB EBEC                    	jmp .L_lambda_simple_params_loop_00d7
 31024                                  .L_lambda_simple_params_end_00d7:
 31025 00016ECD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31026 00016ED0 4889C3                  	mov rbx, rax
 31027 00016ED3 58                      	pop rax
 31028 00016ED4 C60004                  	mov byte [rax], T_closure
 31029 00016ED7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31030 00016EDB 48C74009[E86E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d7
 31031 00016EE3 E985000000              	jmp .L_lambda_simple_end_00d7
 31032                                  .L_lambda_simple_code_00d7:	; lambda-simple body
 31033 00016EE8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31034 00016EEE 740B                    	je .L_lambda_simple_arity_check_ok_00d7
 31035 00016EF0 FF742410                	push qword [rsp + 8 * 2]
 31036 00016EF4 6A01                    	push 1
 31037 00016EF6 E913070000              	jmp L_error_incorrect_arity_simple
 31038                                  .L_lambda_simple_arity_check_ok_00d7:
 31039 00016EFB C8000000                	enter 0, 0
 31040                                  	; preparing a tail-call
 31041 00016EFF 48B8-                   	mov rax, L_constants + 2
 31041 00016F01 [0200000000000000] 
 31042 00016F09 50                      	push rax
 31043 00016F0A 48B8-                   	mov rax, L_constants + 3
 31043 00016F0C [0300000000000000] 
 31044 00016F14 50                      	push rax
 31045 00016F15 6A02                    	push 2	; arg count
 31046 00016F17 488B4520                	mov rax, PARAM(0)	; param z
 31047 00016F1B 803804                  	cmp byte [rax], T_closure
 31048 00016F1E 0F8588060000            	jne L_error_non_closure
 31049 00016F24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31050 00016F27 FF7508                  	push qword [rbp + 8 * 1]
 31051                                   ; old ret addr
 31052 00016F2A FF7500                  	push qword [rbp]
 31053                                   ; restore the old rbp
 31054 00016F2D BB02000000              	mov rbx, 2
 31055 00016F32 4883C303                	add rbx, 3
 31056 00016F36 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 31057 00016F3A 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 31058 00016F3F 4C8D4DF8                	lea r9, [rbp - 8]
 31059 00016F43 B906000000              	mov rcx, 6
 31060                                  .L_tc_recycle_frame_loop_0102:
 31061 00016F48 4883F900                	cmp rcx, 0
 31062 00016F4C 7413                    	je .L_tc_recycle_frame_done_0102
 31063 00016F4E 4D8B11                  	mov r10, qword [r9]
 31064 00016F51 4D8910                  	mov qword [r8], r10
 31065 00016F54 4983E808                	sub r8, 8
 31066 00016F58 4983E908                	sub r9, 8
 31067 00016F5C 48FFC9                  	dec rcx
 31068 00016F5F EBE7                    	jmp .L_tc_recycle_frame_loop_0102
 31069                                  .L_tc_recycle_frame_done_0102:
 31070 00016F61 498D6008                	lea rsp, [r8 + 8]
 31071 00016F65 5D                      	pop rbp ; restore the old rbp
 31072 00016F66 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31073 00016F69 C9                      	leave
 31074 00016F6A C21800                  	ret AND_KILL_FRAME(1)
 31075                                  .L_lambda_simple_end_00d7:	; new closure is in rax
 31076 00016F6D 50                      	push rax
 31077 00016F6E 6A01                    	push 1	; arg count
 31078                                  	; preparing a non-tail-call
 31079 00016F70 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31080 00016F75 E8DB060000              	call malloc
 31081 00016F7A 50                      	push rax
 31082 00016F7B BF00000000              	mov rdi, 8 * 0	; new rib
 31083 00016F80 E8D0060000              	call malloc
 31084 00016F85 50                      	push rax
 31085 00016F86 BF08000000              	mov rdi, 8 * 1	; extended env
 31086 00016F8B E8C5060000              	call malloc
 31087 00016F90 488B7D10                	mov rdi, ENV
 31088 00016F94 BE00000000              	mov rsi, 0
 31089 00016F99 BA01000000              	mov rdx, 1
 31090                                  .L_lambda_simple_env_loop_00d8:	; ext_env[i + 1] <-- env[i]
 31091 00016F9E 4883FE00                	cmp rsi, 0
 31092 00016FA2 7410                    	je .L_lambda_simple_env_end_00d8
 31093 00016FA4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31094 00016FA8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31095 00016FAC 48FFC6                  	inc rsi
 31096 00016FAF 48FFC2                  	inc rdx
 31097 00016FB2 EBEA                    	jmp .L_lambda_simple_env_loop_00d8
 31098                                  .L_lambda_simple_env_end_00d8:
 31099 00016FB4 5B                      	pop rbx
 31100 00016FB5 BE00000000              	mov rsi, 0
 31101                                  .L_lambda_simple_params_loop_00d8:	; copy params
 31102 00016FBA 4883FE00                	cmp rsi, 0
 31103 00016FBE 740E                    	je .L_lambda_simple_params_end_00d8
 31104 00016FC0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31105 00016FC5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31106 00016FC9 48FFC6                  	inc rsi
 31107 00016FCC EBEC                    	jmp .L_lambda_simple_params_loop_00d8
 31108                                  .L_lambda_simple_params_end_00d8:
 31109 00016FCE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31110 00016FD1 4889C3                  	mov rbx, rax
 31111 00016FD4 58                      	pop rax
 31112 00016FD5 C60004                  	mov byte [rax], T_closure
 31113 00016FD8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31114 00016FDC 48C74009[E96F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d8
 31115 00016FE4 E903020000              	jmp .L_lambda_simple_end_00d8
 31116                                  .L_lambda_simple_code_00d8:	; lambda-simple body
 31117 00016FE9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31118 00016FEF 740B                    	je .L_lambda_simple_arity_check_ok_00d8
 31119 00016FF1 FF742410                	push qword [rsp + 8 * 2]
 31120 00016FF5 6A01                    	push 1
 31121 00016FF7 E912060000              	jmp L_error_incorrect_arity_simple
 31122                                  .L_lambda_simple_arity_check_ok_00d8:
 31123 00016FFC C8000000                	enter 0, 0
 31124                                  	; preparing a tail-call
 31125 00017000 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31126 00017005 E84B060000              	call malloc
 31127 0001700A 50                      	push rax
 31128 0001700B BF08000000              	mov rdi, 8 * 1	; new rib
 31129 00017010 E840060000              	call malloc
 31130 00017015 50                      	push rax
 31131 00017016 BF10000000              	mov rdi, 8 * 2	; extended env
 31132 0001701B E835060000              	call malloc
 31133 00017020 488B7D10                	mov rdi, ENV
 31134 00017024 BE00000000              	mov rsi, 0
 31135 00017029 BA01000000              	mov rdx, 1
 31136                                  .L_lambda_simple_env_loop_00d9:	; ext_env[i + 1] <-- env[i]
 31137 0001702E 4883FE01                	cmp rsi, 1
 31138 00017032 7410                    	je .L_lambda_simple_env_end_00d9
 31139 00017034 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31140 00017038 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31141 0001703C 48FFC6                  	inc rsi
 31142 0001703F 48FFC2                  	inc rdx
 31143 00017042 EBEA                    	jmp .L_lambda_simple_env_loop_00d9
 31144                                  .L_lambda_simple_env_end_00d9:
 31145 00017044 5B                      	pop rbx
 31146 00017045 BE00000000              	mov rsi, 0
 31147                                  .L_lambda_simple_params_loop_00d9:	; copy params
 31148 0001704A 4883FE01                	cmp rsi, 1
 31149 0001704E 740E                    	je .L_lambda_simple_params_end_00d9
 31150 00017050 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31151 00017055 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31152 00017059 48FFC6                  	inc rsi
 31153 0001705C EBEC                    	jmp .L_lambda_simple_params_loop_00d9
 31154                                  .L_lambda_simple_params_end_00d9:
 31155 0001705E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31156 00017061 4889C3                  	mov rbx, rax
 31157 00017064 58                      	pop rax
 31158 00017065 C60004                  	mov byte [rax], T_closure
 31159 00017068 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31160 0001706C 48C74009[79700100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d9
 31161 00017074 E91A010000              	jmp .L_lambda_simple_end_00d9
 31162                                  .L_lambda_simple_code_00d9:	; lambda-simple body
 31163 00017079 48837C241002            	cmp qword [rsp + 8 * 2], 2
 31164 0001707F 740B                    	je .L_lambda_simple_arity_check_ok_00d9
 31165 00017081 FF742410                	push qword [rsp + 8 * 2]
 31166 00017085 6A02                    	push 2
 31167 00017087 E982050000              	jmp L_error_incorrect_arity_simple
 31168                                  .L_lambda_simple_arity_check_ok_00d9:
 31169 0001708C C8000000                	enter 0, 0
 31170 00017090 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31171 00017095 E8BB050000              	call malloc
 31172 0001709A 50                      	push rax
 31173 0001709B BF10000000              	mov rdi, 8 * 2	; new rib
 31174 000170A0 E8B0050000              	call malloc
 31175 000170A5 50                      	push rax
 31176 000170A6 BF18000000              	mov rdi, 8 * 3	; extended env
 31177 000170AB E8A5050000              	call malloc
 31178 000170B0 488B7D10                	mov rdi, ENV
 31179 000170B4 BE00000000              	mov rsi, 0
 31180 000170B9 BA01000000              	mov rdx, 1
 31181                                  .L_lambda_simple_env_loop_00da:	; ext_env[i + 1] <-- env[i]
 31182 000170BE 4883FE02                	cmp rsi, 2
 31183 000170C2 7410                    	je .L_lambda_simple_env_end_00da
 31184 000170C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31185 000170C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31186 000170CC 48FFC6                  	inc rsi
 31187 000170CF 48FFC2                  	inc rdx
 31188 000170D2 EBEA                    	jmp .L_lambda_simple_env_loop_00da
 31189                                  .L_lambda_simple_env_end_00da:
 31190 000170D4 5B                      	pop rbx
 31191 000170D5 BE00000000              	mov rsi, 0
 31192                                  .L_lambda_simple_params_loop_00da:	; copy params
 31193 000170DA 4883FE02                	cmp rsi, 2
 31194 000170DE 740E                    	je .L_lambda_simple_params_end_00da
 31195 000170E0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31196 000170E5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31197 000170E9 48FFC6                  	inc rsi
 31198 000170EC EBEC                    	jmp .L_lambda_simple_params_loop_00da
 31199                                  .L_lambda_simple_params_end_00da:
 31200 000170EE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31201 000170F1 4889C3                  	mov rbx, rax
 31202 000170F4 58                      	pop rax
 31203 000170F5 C60004                  	mov byte [rax], T_closure
 31204 000170F8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31205 000170FC 48C74009[09710100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00da
 31206 00017104 E986000000              	jmp .L_lambda_simple_end_00da
 31207                                  .L_lambda_simple_code_00da:	; lambda-simple body
 31208 00017109 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31209 0001710F 740B                    	je .L_lambda_simple_arity_check_ok_00da
 31210 00017111 FF742410                	push qword [rsp + 8 * 2]
 31211 00017115 6A01                    	push 1
 31212 00017117 E9F2040000              	jmp L_error_incorrect_arity_simple
 31213                                  .L_lambda_simple_arity_check_ok_00da:
 31214 0001711C C8000000                	enter 0, 0
 31215                                  	; preparing a tail-call
 31216 00017120 488B4510                	mov rax, ENV
 31217 00017124 488B00                  	mov rax, qword [rax + 8 * 0]
 31218 00017127 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 31219 0001712A 50                      	push rax
 31220 0001712B 488B4510                	mov rax, ENV
 31221 0001712F 488B00                  	mov rax, qword [rax + 8 * 0]
 31222 00017132 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var y
 31223 00017136 50                      	push rax
 31224 00017137 6A02                    	push 2	; arg count
 31225 00017139 488B4520                	mov rax, PARAM(0)	; param p
 31226 0001713D 803804                  	cmp byte [rax], T_closure
 31227 00017140 0F8566040000            	jne L_error_non_closure
 31228 00017146 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31229 00017149 FF7508                  	push qword [rbp + 8 * 1]
 31230                                   ; old ret addr
 31231 0001714C FF7500                  	push qword [rbp]
 31232                                   ; restore the old rbp
 31233 0001714F BB02000000              	mov rbx, 2
 31234 00017154 4883C303                	add rbx, 3
 31235 00017158 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 31236 0001715C 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 31237 00017161 4C8D4DF8                	lea r9, [rbp - 8]
 31238 00017165 B906000000              	mov rcx, 6
 31239                                  .L_tc_recycle_frame_loop_0104:
 31240 0001716A 4883F900                	cmp rcx, 0
 31241 0001716E 7413                    	je .L_tc_recycle_frame_done_0104
 31242 00017170 4D8B11                  	mov r10, qword [r9]
 31243 00017173 4D8910                  	mov qword [r8], r10
 31244 00017176 4983E808                	sub r8, 8
 31245 0001717A 4983E908                	sub r9, 8
 31246 0001717E 48FFC9                  	dec rcx
 31247 00017181 EBE7                    	jmp .L_tc_recycle_frame_loop_0104
 31248                                  .L_tc_recycle_frame_done_0104:
 31249 00017183 498D6008                	lea rsp, [r8 + 8]
 31250 00017187 5D                      	pop rbp ; restore the old rbp
 31251 00017188 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31252 0001718B C9                      	leave
 31253 0001718C C21800                  	ret AND_KILL_FRAME(1)
 31254                                  .L_lambda_simple_end_00da:	; new closure is in rax
 31255 0001718F C9                      	leave
 31256 00017190 C22000                  	ret AND_KILL_FRAME(2)
 31257                                  .L_lambda_simple_end_00d9:	; new closure is in rax
 31258 00017193 50                      	push rax
 31259 00017194 6A01                    	push 1	; arg count
 31260 00017196 488B4520                	mov rax, PARAM(0)	; param p
 31261 0001719A 803804                  	cmp byte [rax], T_closure
 31262 0001719D 0F8509040000            	jne L_error_non_closure
 31263 000171A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31264 000171A6 FF7508                  	push qword [rbp + 8 * 1]
 31265                                   ; old ret addr
 31266 000171A9 FF7500                  	push qword [rbp]
 31267                                   ; restore the old rbp
 31268 000171AC BB01000000              	mov rbx, 1
 31269 000171B1 4883C303                	add rbx, 3
 31270 000171B5 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 31271 000171B9 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 31272 000171BE 4C8D4DF8                	lea r9, [rbp - 8]
 31273 000171C2 B905000000              	mov rcx, 5
 31274                                  .L_tc_recycle_frame_loop_0103:
 31275 000171C7 4883F900                	cmp rcx, 0
 31276 000171CB 7413                    	je .L_tc_recycle_frame_done_0103
 31277 000171CD 4D8B11                  	mov r10, qword [r9]
 31278 000171D0 4D8910                  	mov qword [r8], r10
 31279 000171D3 4983E808                	sub r8, 8
 31280 000171D7 4983E908                	sub r9, 8
 31281 000171DB 48FFC9                  	dec rcx
 31282 000171DE EBE7                    	jmp .L_tc_recycle_frame_loop_0103
 31283                                  .L_tc_recycle_frame_done_0103:
 31284 000171E0 498D6008                	lea rsp, [r8 + 8]
 31285 000171E4 5D                      	pop rbp ; restore the old rbp
 31286 000171E5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31287 000171E8 C9                      	leave
 31288 000171E9 C21800                  	ret AND_KILL_FRAME(1)
 31289                                  .L_lambda_simple_end_00d8:	; new closure is in rax
 31290 000171EC 50                      	push rax
 31291 000171ED 6A01                    	push 1	; arg count
 31292                                  	; preparing a non-tail-call
 31293 000171EF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31294 000171F4 E85C040000              	call malloc
 31295 000171F9 50                      	push rax
 31296 000171FA BF00000000              	mov rdi, 8 * 0	; new rib
 31297 000171FF E851040000              	call malloc
 31298 00017204 50                      	push rax
 31299 00017205 BF08000000              	mov rdi, 8 * 1	; extended env
 31300 0001720A E846040000              	call malloc
 31301 0001720F 488B7D10                	mov rdi, ENV
 31302 00017213 BE00000000              	mov rsi, 0
 31303 00017218 BA01000000              	mov rdx, 1
 31304                                  .L_lambda_simple_env_loop_00db:	; ext_env[i + 1] <-- env[i]
 31305 0001721D 4883FE00                	cmp rsi, 0
 31306 00017221 7410                    	je .L_lambda_simple_env_end_00db
 31307 00017223 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31308 00017227 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31309 0001722B 48FFC6                  	inc rsi
 31310 0001722E 48FFC2                  	inc rdx
 31311 00017231 EBEA                    	jmp .L_lambda_simple_env_loop_00db
 31312                                  .L_lambda_simple_env_end_00db:
 31313 00017233 5B                      	pop rbx
 31314 00017234 BE00000000              	mov rsi, 0
 31315                                  .L_lambda_simple_params_loop_00db:	; copy params
 31316 00017239 4883FE00                	cmp rsi, 0
 31317 0001723D 740E                    	je .L_lambda_simple_params_end_00db
 31318 0001723F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31319 00017244 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31320 00017248 48FFC6                  	inc rsi
 31321 0001724B EBEC                    	jmp .L_lambda_simple_params_loop_00db
 31322                                  .L_lambda_simple_params_end_00db:
 31323 0001724D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31324 00017250 4889C3                  	mov rbx, rax
 31325 00017253 58                      	pop rax
 31326 00017254 C60004                  	mov byte [rax], T_closure
 31327 00017257 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31328 0001725B 48C74009[68720100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00db
 31329 00017263 E92A010000              	jmp .L_lambda_simple_end_00db
 31330                                  .L_lambda_simple_code_00db:	; lambda-simple body
 31331 00017268 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31332 0001726E 740B                    	je .L_lambda_simple_arity_check_ok_00db
 31333 00017270 FF742410                	push qword [rsp + 8 * 2]
 31334 00017274 6A01                    	push 1
 31335 00017276 E993030000              	jmp L_error_incorrect_arity_simple
 31336                                  .L_lambda_simple_arity_check_ok_00db:
 31337 0001727B C8000000                	enter 0, 0
 31338 0001727F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31339 00017284 E8CC030000              	call malloc
 31340 00017289 50                      	push rax
 31341 0001728A BF08000000              	mov rdi, 8 * 1	; new rib
 31342 0001728F E8C1030000              	call malloc
 31343 00017294 50                      	push rax
 31344 00017295 BF10000000              	mov rdi, 8 * 2	; extended env
 31345 0001729A E8B6030000              	call malloc
 31346 0001729F 488B7D10                	mov rdi, ENV
 31347 000172A3 BE00000000              	mov rsi, 0
 31348 000172A8 BA01000000              	mov rdx, 1
 31349                                  .L_lambda_simple_env_loop_00dc:	; ext_env[i + 1] <-- env[i]
 31350 000172AD 4883FE01                	cmp rsi, 1
 31351 000172B1 7410                    	je .L_lambda_simple_env_end_00dc
 31352 000172B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31353 000172B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31354 000172BB 48FFC6                  	inc rsi
 31355 000172BE 48FFC2                  	inc rdx
 31356 000172C1 EBEA                    	jmp .L_lambda_simple_env_loop_00dc
 31357                                  .L_lambda_simple_env_end_00dc:
 31358 000172C3 5B                      	pop rbx
 31359 000172C4 BE00000000              	mov rsi, 0
 31360                                  .L_lambda_simple_params_loop_00dc:	; copy params
 31361 000172C9 4883FE01                	cmp rsi, 1
 31362 000172CD 740E                    	je .L_lambda_simple_params_end_00dc
 31363 000172CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31364 000172D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31365 000172D8 48FFC6                  	inc rsi
 31366 000172DB EBEC                    	jmp .L_lambda_simple_params_loop_00dc
 31367                                  .L_lambda_simple_params_end_00dc:
 31368 000172DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31369 000172E0 4889C3                  	mov rbx, rax
 31370 000172E3 58                      	pop rax
 31371 000172E4 C60004                  	mov byte [rax], T_closure
 31372 000172E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31373 000172EB 48C74009[F8720100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00dc
 31374 000172F3 E996000000              	jmp .L_lambda_simple_end_00dc
 31375                                  .L_lambda_simple_code_00dc:	; lambda-simple body
 31376 000172F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31377 000172FE 740B                    	je .L_lambda_simple_arity_check_ok_00dc
 31378 00017300 FF742410                	push qword [rsp + 8 * 2]
 31379 00017304 6A01                    	push 1
 31380 00017306 E903030000              	jmp L_error_incorrect_arity_simple
 31381                                  .L_lambda_simple_arity_check_ok_00dc:
 31382 0001730B C8000000                	enter 0, 0
 31383                                  	; preparing a tail-call
 31384                                  	; preparing a non-tail-call
 31385 0001730F 488B4520                	mov rax, PARAM(0)	; param y
 31386 00017313 50                      	push rax
 31387 00017314 6A01                    	push 1	; arg count
 31388 00017316 488B4510                	mov rax, ENV
 31389 0001731A 488B00                  	mov rax, qword [rax + 8 * 0]
 31390 0001731D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 31391 00017320 803804                  	cmp byte [rax], T_closure
 31392 00017323 0F8583020000            	jne L_error_non_closure
 31393 00017329 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31394 0001732C FF5009                  	call SOB_CLOSURE_CODE(rax)
 31395 0001732F 50                      	push rax
 31396 00017330 6A01                    	push 1	; arg count
 31397 00017332 488B4510                	mov rax, ENV
 31398 00017336 488B00                  	mov rax, qword [rax + 8 * 0]
 31399 00017339 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
 31400 0001733C 803804                  	cmp byte [rax], T_closure
 31401 0001733F 0F8567020000            	jne L_error_non_closure
 31402 00017345 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31403 00017348 FF7508                  	push qword [rbp + 8 * 1]
 31404                                   ; old ret addr
 31405 0001734B FF7500                  	push qword [rbp]
 31406                                   ; restore the old rbp
 31407 0001734E BB01000000              	mov rbx, 1
 31408 00017353 4883C303                	add rbx, 3
 31409 00017357 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 31410 0001735B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 31411 00017360 4C8D4DF8                	lea r9, [rbp - 8]
 31412 00017364 B905000000              	mov rcx, 5
 31413                                  .L_tc_recycle_frame_loop_0105:
 31414 00017369 4883F900                	cmp rcx, 0
 31415 0001736D 7413                    	je .L_tc_recycle_frame_done_0105
 31416 0001736F 4D8B11                  	mov r10, qword [r9]
 31417 00017372 4D8910                  	mov qword [r8], r10
 31418 00017375 4983E808                	sub r8, 8
 31419 00017379 4983E908                	sub r9, 8
 31420 0001737D 48FFC9                  	dec rcx
 31421 00017380 EBE7                    	jmp .L_tc_recycle_frame_loop_0105
 31422                                  .L_tc_recycle_frame_done_0105:
 31423 00017382 498D6008                	lea rsp, [r8 + 8]
 31424 00017386 5D                      	pop rbp ; restore the old rbp
 31425 00017387 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31426 0001738A C9                      	leave
 31427 0001738B C21800                  	ret AND_KILL_FRAME(1)
 31428                                  .L_lambda_simple_end_00dc:	; new closure is in rax
 31429 0001738E C9                      	leave
 31430 0001738F C21800                  	ret AND_KILL_FRAME(1)
 31431                                  .L_lambda_simple_end_00db:	; new closure is in rax
 31432 00017392 50                      	push rax
 31433 00017393 6A01                    	push 1	; arg count
 31434 00017395 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 31435 0001739A E8B6020000              	call malloc
 31436 0001739F 50                      	push rax
 31437 000173A0 BF00000000              	mov rdi, 8 * 0	; new rib
 31438 000173A5 E8AB020000              	call malloc
 31439 000173AA 50                      	push rax
 31440 000173AB BF08000000              	mov rdi, 8 * 1	; extended env
 31441 000173B0 E8A0020000              	call malloc
 31442 000173B5 488B7D10                	mov rdi, ENV
 31443 000173B9 BE00000000              	mov rsi, 0
 31444 000173BE BA01000000              	mov rdx, 1
 31445                                  .L_lambda_simple_env_loop_00dd:	; ext_env[i + 1] <-- env[i]
 31446 000173C3 4883FE00                	cmp rsi, 0
 31447 000173C7 7410                    	je .L_lambda_simple_env_end_00dd
 31448 000173C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 31449 000173CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 31450 000173D1 48FFC6                  	inc rsi
 31451 000173D4 48FFC2                  	inc rdx
 31452 000173D7 EBEA                    	jmp .L_lambda_simple_env_loop_00dd
 31453                                  .L_lambda_simple_env_end_00dd:
 31454 000173D9 5B                      	pop rbx
 31455 000173DA BE00000000              	mov rsi, 0
 31456                                  .L_lambda_simple_params_loop_00dd:	; copy params
 31457 000173DF 4883FE00                	cmp rsi, 0
 31458 000173E3 740E                    	je .L_lambda_simple_params_end_00dd
 31459 000173E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 31460 000173EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 31461 000173EE 48FFC6                  	inc rsi
 31462 000173F1 EBEC                    	jmp .L_lambda_simple_params_loop_00dd
 31463                                  .L_lambda_simple_params_end_00dd:
 31464 000173F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 31465 000173F6 4889C3                  	mov rbx, rax
 31466 000173F9 58                      	pop rax
 31467 000173FA C60004                  	mov byte [rax], T_closure
 31468 000173FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 31469 00017401 48C74009[0E740100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00dd
 31470 00017409 E9A0000000              	jmp .L_lambda_simple_end_00dd
 31471                                  .L_lambda_simple_code_00dd:	; lambda-simple body
 31472 0001740E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 31473 00017414 740B                    	je .L_lambda_simple_arity_check_ok_00dd
 31474 00017416 FF742410                	push qword [rsp + 8 * 2]
 31475 0001741A 6A01                    	push 1
 31476 0001741C E9ED010000              	jmp L_error_incorrect_arity_simple
 31477                                  .L_lambda_simple_arity_check_ok_00dd:
 31478 00017421 C8000000                	enter 0, 0
 31479                                  	; preparing a tail-call
 31480                                  	; preparing a non-tail-call
 31481 00017425 488B4520                	mov rax, PARAM(0)	; param x
 31482 00017429 50                      	push rax
 31483 0001742A 6A01                    	push 1	; arg count
 31484 0001742C 488B4520                	mov rax, PARAM(0)	; param x
 31485 00017430 803804                  	cmp byte [rax], T_closure
 31486 00017433 0F8573010000            	jne L_error_non_closure
 31487 00017439 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31488 0001743C FF5009                  	call SOB_CLOSURE_CODE(rax)
 31489 0001743F 50                      	push rax
 31490 00017440 6A01                    	push 1	; arg count
 31491                                  	; preparing a non-tail-call
 31492 00017442 488B4520                	mov rax, PARAM(0)	; param x
 31493 00017446 50                      	push rax
 31494 00017447 6A01                    	push 1	; arg count
 31495 00017449 488B4520                	mov rax, PARAM(0)	; param x
 31496 0001744D 803804                  	cmp byte [rax], T_closure
 31497 00017450 0F8556010000            	jne L_error_non_closure
 31498 00017456 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31499 00017459 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31500 0001745C 803804                  	cmp byte [rax], T_closure
 31501 0001745F 0F8547010000            	jne L_error_non_closure
 31502 00017465 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31503 00017468 FF7508                  	push qword [rbp + 8 * 1]
 31504                                   ; old ret addr
 31505 0001746B FF7500                  	push qword [rbp]
 31506                                   ; restore the old rbp
 31507 0001746E BB01000000              	mov rbx, 1
 31508 00017473 4883C303                	add rbx, 3
 31509 00017477 4C8B4518                	mov r8, qword [rbp + 8 * 3]
 31510 0001747B 4E8D44C518              	lea r8, [rbp + 8 * 3 + 8 * r8]
 31511 00017480 4C8D4DF8                	lea r9, [rbp - 8]
 31512 00017484 B905000000              	mov rcx, 5
 31513                                  .L_tc_recycle_frame_loop_0106:
 31514 00017489 4883F900                	cmp rcx, 0
 31515 0001748D 7413                    	je .L_tc_recycle_frame_done_0106
 31516 0001748F 4D8B11                  	mov r10, qword [r9]
 31517 00017492 4D8910                  	mov qword [r8], r10
 31518 00017495 4983E808                	sub r8, 8
 31519 00017499 4983E908                	sub r9, 8
 31520 0001749D 48FFC9                  	dec rcx
 31521 000174A0 EBE7                    	jmp .L_tc_recycle_frame_loop_0106
 31522                                  .L_tc_recycle_frame_done_0106:
 31523 000174A2 498D6008                	lea rsp, [r8 + 8]
 31524 000174A6 5D                      	pop rbp ; restore the old rbp
 31525 000174A7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 31526 000174AA C9                      	leave
 31527 000174AB C21800                  	ret AND_KILL_FRAME(1)
 31528                                  .L_lambda_simple_end_00dd:	; new closure is in rax
 31529 000174AE 803804                  	cmp byte [rax], T_closure
 31530 000174B1 0F85F5000000            	jne L_error_non_closure
 31531 000174B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31532 000174BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 31533 000174BD 803804                  	cmp byte [rax], T_closure
 31534 000174C0 0F85E6000000            	jne L_error_non_closure
 31535 000174C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31536 000174C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31537 000174CC 803804                  	cmp byte [rax], T_closure
 31538 000174CF 0F85D7000000            	jne L_error_non_closure
 31539 000174D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31540 000174D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31541 000174DB 803804                  	cmp byte [rax], T_closure
 31542 000174DE 0F85C8000000            	jne L_error_non_closure
 31543 000174E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 31544 000174E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 31545                                  Lend:
 31546 000174EA 4889C7                  	mov rdi, rax
 31547 000174ED E8B8030000              	call print_sexpr_if_not_void
 31548                                  
 31549 000174F2 48BF-                           mov rdi, fmt_memory_usage
 31549 000174F4 [7518000000000000] 
 31550 000174FC 488B3425[FB180000]              mov rsi, qword [top_of_memory]
 31551 00017504 4881EE[00000000]                sub rsi, memory
 31552 0001750B B800000000                      mov rax, 0
 31553                                          ENTER
    44 00017510 C8000000            <1>  enter 0, 0
    45 00017514 4883E4F0            <1>  and rsp, ~15
 31554 00017518 E8(00000000)                    call printf
 31555                                          LEAVE
    49 0001751D C9                  <1>  leave
 31556 0001751E B800000000                      mov rax, 0
 31557 00017523 E8(00000000)                    call exit
 31558                                  
 31559                                  L_error_fvar_undefined:
 31560 00017528 50                              push rax
 31561 00017529 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 31562 00017531 48BE-                           mov rsi, fmt_undefined_free_var_1
 31562 00017533 [DD17000000000000] 
 31563 0001753B B800000000                      mov rax, 0
 31564                                          ENTER
    44 00017540 C8000000            <1>  enter 0, 0
    45 00017544 4883E4F0            <1>  and rsp, ~15
 31565 00017548 E8(00000000)                    call fprintf
 31566                                          LEAVE
    49 0001754D C9                  <1>  leave
 31567 0001754E 58                              pop rax
 31568 0001754F 488B4001                        mov rax, qword [rax + 1] ; string
 31569 00017553 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 31570 00017557 BE01000000                      mov rsi, 1               ; sizeof(char)
 31571 0001755C 488B5001                        mov rdx, qword [rax + 1] ; string-length
 31572 00017560 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 31573 00017568 B800000000                      mov rax, 0
 31574                                          ENTER
    44 0001756D C8000000            <1>  enter 0, 0
    45 00017571 4883E4F0            <1>  and rsp, ~15
 31575 00017575 E8(00000000)                    call fwrite
 31576                                          LEAVE
    49 0001757A C9                  <1>  leave
 31577 0001757B 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 31578 00017583 48BE-                           mov rsi, fmt_undefined_free_var_2
 31578 00017585 [F417000000000000] 
 31579 0001758D B800000000                      mov rax, 0
 31580                                          ENTER
    44 00017592 C8000000            <1>  enter 0, 0
    45 00017596 4883E4F0            <1>  and rsp, ~15
 31581 0001759A E8(00000000)                    call fprintf
 31582                                          LEAVE
    49 0001759F C9                  <1>  leave
 31583 000175A0 48C7C0F6FFFFFF                  mov rax, -10
 31584 000175A7 E8(00000000)                    call exit
 31585                                  
 31586                                  L_error_non_closure:
 31587 000175AC 488B3C25[00000000]              mov rdi, qword [stderr]
 31588 000175B4 48BE-                           mov rsi, fmt_non_closure
 31588 000175B6 [AB18000000000000] 
 31589 000175BE B800000000                      mov rax, 0
 31590                                          ENTER
    44 000175C3 C8000000            <1>  enter 0, 0
    45 000175C7 4883E4F0            <1>  and rsp, ~15
 31591 000175CB E8(00000000)                    call fprintf
 31592                                          LEAVE
    49 000175D0 C9                  <1>  leave
 31593 000175D1 48C7C0FEFFFFFF                  mov rax, -2
 31594 000175D8 E8(00000000)                    call exit
 31595                                  
 31596                                  L_error_improper_list:
 31597 000175DD 488B3C25[00000000]      	mov rdi, qword [stderr]
 31598 000175E5 48BE-                   	mov rsi, fmt_error_improper_list
 31598 000175E7 [D318000000000000] 
 31599 000175EF B800000000              	mov rax, 0
 31600                                          ENTER
    44 000175F4 C8000000            <1>  enter 0, 0
    45 000175F8 4883E4F0            <1>  and rsp, ~15
 31601 000175FC E8(00000000)            	call fprintf
 31602                                          LEAVE
    49 00017601 C9                  <1>  leave
 31603 00017602 48C7C0F9FFFFFF          	mov rax, -7
 31604 00017609 E8(00000000)            	call exit
 31605                                  
 31606                                  L_error_incorrect_arity_simple:
 31607 0001760E 488B3C25[00000000]              mov rdi, qword [stderr]
 31608 00017616 48BE-                           mov rsi, fmt_incorrect_arity_simple
 31608 00017618 [1618000000000000] 
 31609 00017620 EB12                            jmp L_error_incorrect_arity_common
 31610                                  L_error_incorrect_arity_opt:
 31611 00017622 488B3C25[00000000]              mov rdi, qword [stderr]
 31612 0001762A 48BE-                           mov rsi, fmt_incorrect_arity_opt
 31612 0001762C [4118000000000000] 
 31613                                  L_error_incorrect_arity_common:
 31614 00017634 5A                              pop rdx
 31615 00017635 59                              pop rcx
 31616 00017636 B800000000                      mov rax, 0
 31617                                          ENTER
    44 0001763B C8000000            <1>  enter 0, 0
    45 0001763F 4883E4F0            <1>  and rsp, ~15
 31618 00017643 E8(00000000)                    call fprintf
 31619                                          LEAVE
    49 00017648 C9                  <1>  leave
 31620 00017649 48C7C0FAFFFFFF                  mov rax, -6
 31621 00017650 E8(00000000)                    call exit
 31622                                  
 31623                                  section .data
 31624                                  fmt_undefined_free_var_1:
 31625 000017DD 212121205468652066-             db `!!! The free variable \0`
 31625 000017E6 726565207661726961-
 31625 000017EF 626C652000         
 31626                                  fmt_undefined_free_var_2:
 31627 000017F4 207761732075736564-             db ` was used before it was defined.\n\0`
 31627 000017FD 206265666F72652069-
 31627 00001806 742077617320646566-
 31627 0000180F 696E65642E0A00     
 31628                                  fmt_incorrect_arity_simple:
 31629 00001816 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 31629 0000181F 74656420256C642061-
 31629 00001828 7267756D656E74732C-
 31629 00001831 206275742067697665-
 31629 0000183A 6E20256C640A00     
 31630                                  fmt_incorrect_arity_opt:
 31631 00001841 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 31631 0000184A 746564206174206C65-
 31631 00001853 61737420256C642061-
 31631 0000185C 7267756D656E74732C-
 31631 00001865 206275742067697665-
 31631 0000186E 6E20256C640A00     
 31632                                  fmt_memory_usage:
 31633 00001875 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 31633 0000187E 20256C642062797465-
 31633 00001887 73206F662064796E61-
 31633 00001890 6D6963616C6C792D61-
 31633 00001899 6C6C6F636174656420-
 31633 000018A2 6D656D6F72790A0A00 
 31634                                  fmt_non_closure:
 31635 000018AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 31635 000018B4 7074696E6720746F20-
 31635 000018BD 6170706C792061206E-
 31635 000018C6 6F6E2D636C6F737572-
 31635 000018CF 65210A00           
 31636                                  fmt_error_improper_list:
 31637 000018D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 31637 000018DC 7267756D656E742069-
 31637 000018E5 73206E6F7420612070-
 31637 000018EE 726F706572206C6973-
 31637 000018F7 74210A00           
 31638                                  
 31639                                  section .bss
 31640                                  memory:
 31641 00000000 <res 40000000h>         	resb gbytes(1)
 31642                                  
 31643                                  section .data
 31644                                  top_of_memory:
 31645 000018FB [0000000000000000]              dq memory
 31646                                  
 31647                                  section .text
 31648                                  malloc:
 31649 00017655 488B0425[FB180000]              mov rax, qword [top_of_memory]
 31650 0001765D 48013C25[FB180000]              add qword [top_of_memory], rdi
 31651 00017665 C3                              ret
 31652                                  
 31653                                  L_code_ptr_return:
 31654 00017666 48837C241002            	cmp qword [rsp + 8*2], 2
 31655 0001766C 0F85E71C0000            	jne L_error_arg_count_2
 31656 00017672 488B4C2418              	mov rcx, qword [rsp + 8*3]
 31657                                  	assert_integer(rcx)
    53 00017677 803911              <1>  cmp byte [%1], %2
    54 0001767A 0F85781D0000        <1>  jne L_error_incorrect_type
 31658 00017680 488B4901                	mov rcx, qword [rcx + 1]
 31659 00017684 4883F900                	cmp rcx, 0
 31660 00017688 0F8CFF1B0000            	jl L_error_integer_range
 31661 0001768E 488B442420              	mov rax, qword [rsp + 8*4]
 31662                                  .L0:
 31663 00017693 4883F900                        cmp rcx, 0
 31664 00017697 7409                            je .L1
 31665 00017699 488B6D00                	mov rbp, qword [rbp]
 31666 0001769D 48FFC9                  	dec rcx
 31667 000176A0 7FF1                    	jg .L0
 31668                                  .L1:
 31669 000176A2 4889EC                  	mov rsp, rbp
 31670 000176A5 5D                      	pop rbp
 31671 000176A6 5B                              pop rbx
 31672 000176A7 488B4C2408                      mov rcx, qword [rsp + 8*1]
 31673 000176AC 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 31674 000176B1 FFE3                    	jmp rbx
 31675                                  
 31676                                  L_code_ptr_make_list:
 31677 000176B3 C8000000                	enter 0, 0
 31678 000176B7 48837D1801                      cmp COUNT, 1
 31679 000176BC 740C                            je .L0
 31680 000176BE 48837D1802                      cmp COUNT, 2
 31681 000176C3 7411                            je .L1
 31682 000176C5 E9C41C0000                      jmp L_error_arg_count_12
 31683                                  .L0:
 31684 000176CA 49B9-                           mov r9, sob_void
 31684 000176CC [0000000000000000] 
 31685 000176D4 EB04                            jmp .L2
 31686                                  .L1:
 31687 000176D6 4C8B4D28                        mov r9, PARAM(1)
 31688                                  .L2:
 31689 000176DA 488B4D20                        mov rcx, PARAM(0)
 31690                                          assert_integer(rcx)
    53 000176DE 803911              <1>  cmp byte [%1], %2
    54 000176E1 0F85111D0000        <1>  jne L_error_incorrect_type
 31691 000176E7 488B4901                        mov rcx, qword [rcx + 1]
 31692 000176EB 4883F900                        cmp rcx, 0
 31693 000176EF 0F8CC91B0000                    jl L_error_arg_negative
 31694 000176F5 49B8-                           mov r8, sob_nil
 31694 000176F7 [0100000000000000] 
 31695                                  .L3:
 31696 000176FF 4883F900                        cmp rcx, 0
 31697 00017703 7E1D                            jle .L4
 31698 00017705 BF11000000                      mov rdi, 1 + 8 + 8
 31699 0001770A E846FFFFFF                      call malloc
 31700 0001770F C60021                          mov byte [rax], T_pair
 31701 00017712 4C894801                        mov qword [rax + 1], r9
 31702 00017716 4C894009                        mov qword [rax + 1 + 8], r8
 31703 0001771A 4989C0                          mov r8, rax
 31704 0001771D 48FFC9                          dec rcx
 31705 00017720 EBDD                            jmp .L3
 31706                                  .L4:
 31707 00017722 4C89C0                          mov rax, r8
 31708 00017725 48837D1802                      cmp COUNT, 2
 31709 0001772A 7404                            je .L5
 31710 0001772C C9                              leave
 31711 0001772D C21800                          ret AND_KILL_FRAME(1)
 31712                                  .L5:
 31713 00017730 C9                      	leave
 31714 00017731 C22000                  	ret AND_KILL_FRAME(2)
 31715                                  
 31716                                  L_code_ptr_is_primitive:
 31717 00017734 C8000000                	enter 0, 0
 31718 00017738 48837D1801              	cmp COUNT, 1
 31719 0001773D 0F85E11B0000            	jne L_error_arg_count_1
 31720 00017743 488B4520                	mov rax, PARAM(0)
 31721                                  	assert_closure(rax)
    53 00017747 803804              <1>  cmp byte [%1], %2
    54 0001774A 0F85A81C0000        <1>  jne L_error_incorrect_type
 31722 00017750 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 31723 00017755 750C                    	jne .L_false
 31724 00017757 48B8-                   	mov rax, sob_boolean_true
 31724 00017759 [0300000000000000] 
 31725 00017761 EB0A                    	jmp .L_end
 31726                                  .L_false:
 31727 00017763 48B8-                   	mov rax, sob_boolean_false
 31727 00017765 [0200000000000000] 
 31728                                  .L_end:
 31729 0001776D C9                      	leave
 31730 0001776E C21800                  	ret AND_KILL_FRAME(1)
 31731                                  
 31732                                  L_code_ptr_length:
 31733 00017771 C8000000                	enter 0, 0
 31734 00017775 48837D1801              	cmp COUNT, 1
 31735 0001777A 0F85A41B0000            	jne L_error_arg_count_1
 31736 00017780 488B5D20                	mov rbx, PARAM(0)
 31737 00017784 BF00000000              	mov rdi, 0
 31738                                  .L:
 31739 00017789 803B01                  	cmp byte [rbx], T_nil
 31740 0001778C 7412                    	je .L_end
 31741                                  	assert_pair(rbx)
    53 0001778E 803B21              <1>  cmp byte [%1], %2
    54 00017791 0F85611C0000        <1>  jne L_error_incorrect_type
 31742 00017797 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 31743 0001779B 48FFC7                  	inc rdi
 31744 0001779E EBE9                    	jmp .L
 31745                                  .L_end:
 31746 000177A0 E8CE1A0000              	call make_integer
 31747 000177A5 C9                      	leave
 31748 000177A6 C21800                  	ret AND_KILL_FRAME(1)
 31749                                  
 31750                                  L_code_ptr_break:
 31751 000177A9 48837C241000                    cmp qword [rsp + 8 * 2], 0
 31752 000177AF 0F853A1B0000                    jne L_error_arg_count_0
 31753 000177B5 CC                              int3
 31754 000177B6 48B8-                           mov rax, sob_void
 31754 000177B8 [0000000000000000] 
 31755 000177C0 C21000                          ret AND_KILL_FRAME(0)        
 31756                                  
 31757                                  L_code_ptr_frame:
 31758 000177C3 C8000000                        enter 0, 0
 31759 000177C7 48837D1800                      cmp COUNT, 0
 31760 000177CC 0F851D1B0000                    jne L_error_arg_count_0
 31761                                  
 31762 000177D2 48BF-                           mov rdi, fmt_frame
 31762 000177D4 [0319000000000000] 
 31763 000177DC 488B7500                        mov rsi, qword [rbp]    ; old rbp
 31764 000177E0 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 31765 000177E4 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 31766 000177E8 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 31767 000177EC 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 31768 000177F0 6A00                            push 0
 31769 000177F2 4151                            push r9
 31770 000177F4 4150                            push r8                   ; we'll use it when printing the params
 31771 000177F6 B800000000                      mov rax, 0
 31772                                          
 31773                                          ENTER
    44 000177FB C8000000            <1>  enter 0, 0
    45 000177FF 4883E4F0            <1>  and rsp, ~15
 31774 00017803 E8(00000000)                    call printf
 31775                                          LEAVE
    49 00017808 C9                  <1>  leave
 31776                                  
 31777                                  .L:
 31778 00017809 488B0C24                        mov rcx, qword [rsp]
 31779 0001780D 4883F900                        cmp rcx, 0
 31780 00017811 7467                            je .L_out
 31781 00017813 48BF-                           mov rdi, fmt_frame_param_prefix
 31781 00017815 [3C19000000000000] 
 31782 0001781D 488B742410                      mov rsi, qword [rsp + 8*2]
 31783 00017822 B800000000                      mov rax, 0
 31784                                          
 31785                                          ENTER
    44 00017827 C8000000            <1>  enter 0, 0
    45 0001782B 4883E4F0            <1>  and rsp, ~15
 31786 0001782F E8(00000000)                    call printf
 31787                                          LEAVE
    49 00017834 C9                  <1>  leave
 31788                                  
 31789 00017835 488B0C24                        mov rcx, qword [rsp]
 31790 00017839 48FFC9                          dec rcx
 31791 0001783C 48890C24                        mov qword [rsp], rcx    ; dec arg count
 31792 00017840 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 31793 00017845 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 31794 0001784A 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 31795 0001784E 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 31796 00017853 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 31797 00017856 E87B000000                      call print_sexpr
 31798 0001785B 48BF-                           mov rdi, fmt_newline
 31798 0001785D [6819000000000000] 
 31799 00017865 B800000000                      mov rax, 0
 31800                                          ENTER
    44 0001786A C8000000            <1>  enter 0, 0
    45 0001786E 4883E4F0            <1>  and rsp, ~15
 31801 00017872 E8(00000000)                    call printf
 31802                                          LEAVE
    49 00017877 C9                  <1>  leave
 31803 00017878 EB8F                            jmp .L
 31804                                  .L_out:
 31805 0001787A 48BF-                           mov rdi, fmt_frame_continue
 31805 0001787C [4D19000000000000] 
 31806 00017884 B800000000                      mov rax, 0
 31807                                          ENTER
    44 00017889 C8000000            <1>  enter 0, 0
    45 0001788D 4883E4F0            <1>  and rsp, ~15
 31808 00017891 E8(00000000)                    call printf
 31809 00017896 E8(00000000)                    call getchar
 31810                                          LEAVE
    49 0001789B C9                  <1>  leave
 31811                                          
 31812 0001789C 48B8-                           mov rax, sob_void
 31812 0001789E [0000000000000000] 
 31813 000178A6 C9                              leave
 31814 000178A7 C21000                          ret AND_KILL_FRAME(0)
 31815                                          
 31816                                  print_sexpr_if_not_void:
 31817 000178AA 4881FF[00000000]        	cmp rdi, sob_void
 31818 000178B1 7422                    	je .done
 31819 000178B3 E81E000000              	call print_sexpr
 31820 000178B8 48BF-                   	mov rdi, fmt_newline
 31820 000178BA [6819000000000000] 
 31821 000178C2 B800000000              	mov rax, 0
 31822                                  	ENTER
    44 000178C7 C8000000            <1>  enter 0, 0
    45 000178CB 4883E4F0            <1>  and rsp, ~15
 31823 000178CF E8(00000000)            	call printf
 31824                                  	LEAVE
    49 000178D4 C9                  <1>  leave
 31825                                  .done:
 31826 000178D5 C3                      	ret
 31827                                  
 31828                                  section .data
 31829                                  fmt_frame:
 31830 00001903 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 31830 0000190C 207265742061646472-
 31830 00001915 203D2025703B206C65-
 31830 0000191E 7820656E76203D2025-
 31830 00001927 703B20706172616D20-
 31830 00001930 636F756E74203D2025-
 31830 00001939 640A00             
 31831                                  fmt_frame_param_prefix:
 31832 0000193C 3D3D5B706172616D20-             db `==[param %d]==> \0`
 31832 00001945 25645D3D3D3E2000   
 31833                                  fmt_frame_continue:
 31834 0000194D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 31834 00001956 723E20746F20636F6E-
 31834 0000195F 74696E75652E2E2E00 
 31835                                  fmt_newline:
 31836 00001968 0A00                    	db `\n\0`
 31837                                  fmt_void:
 31838 0000196A 233C766F69643E00        	db `#<void>\0`
 31839                                  fmt_nil:
 31840 00001972 282900                  	db `()\0`
 31841                                  fmt_boolean_false:
 31842 00001975 236600                  	db `#f\0`
 31843                                  fmt_boolean_true:
 31844 00001978 237400                  	db `#t\0`
 31845                                  fmt_char_backslash:
 31846 0000197B 235C5C00                	db `#\\\\\0`
 31847                                  fmt_char_dquote:
 31848 0000197F 235C2200                	db `#\\"\0`
 31849                                  fmt_char_simple:
 31850 00001983 235C256300              	db `#\\%c\0`
 31851                                  fmt_char_null:
 31852 00001988 235C6E756C00            	db `#\\nul\0`
 31853                                  fmt_char_bell:
 31854 0000198E 235C62656C6C00          	db `#\\bell\0`
 31855                                  fmt_char_backspace:
 31856 00001995 235C6261636B737061-     	db `#\\backspace\0`
 31856 0000199E 636500             
 31857                                  fmt_char_tab:
 31858 000019A1 235C74616200            	db `#\\tab\0`
 31859                                  fmt_char_newline:
 31860 000019A7 235C6E65776C696E65-     	db `#\\newline\0`
 31860 000019B0 00                 
 31861                                  fmt_char_formfeed:
 31862 000019B1 235C7061676500          	db `#\\page\0`
 31863                                  fmt_char_return:
 31864 000019B8 235C72657475726E00      	db `#\\return\0`
 31865                                  fmt_char_escape:
 31866 000019C1 235C65736300            	db `#\\esc\0`
 31867                                  fmt_char_space:
 31868 000019C7 235C737061636500        	db `#\\space\0`
 31869                                  fmt_char_hex:
 31870 000019CF 235C782530325800        	db `#\\x%02X\0`
 31871                                  fmt_gensym:
 31872 000019D7 47256C6400                      db `G%ld\0`
 31873                                  fmt_closure:
 31874 000019DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 31874 000019E5 206174203078253038-
 31874 000019EE 5820656E763D307825-
 31874 000019F7 30385820636F64653D-
 31874 00001A00 3078253038583E00   
 31875                                  fmt_lparen:
 31876 00001A08 2800                    	db `(\0`
 31877                                  fmt_dotted_pair:
 31878 00001A0A 202E2000                	db ` . \0`
 31879                                  fmt_rparen:
 31880 00001A0E 2900                    	db `)\0`
 31881                                  fmt_space:
 31882 00001A10 2000                    	db ` \0`
 31883                                  fmt_empty_vector:
 31884 00001A12 23282900                	db `#()\0`
 31885                                  fmt_vector:
 31886 00001A16 232800                  	db `#(\0`
 31887                                  fmt_real:
 31888 00001A19 256600                  	db `%f\0`
 31889                                  fmt_fraction:
 31890 00001A1C 256C642F256C6400        	db `%ld/%ld\0`
 31891                                  fmt_zero:
 31892 00001A24 3000                    	db `0\0`
 31893                                  fmt_int:
 31894 00001A26 256C6400                	db `%ld\0`
 31895                                  fmt_unknown_scheme_object_error:
 31896 00001A2A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 31896 00001A33 6F723A20556E6B6E6F-
 31896 00001A3C 776E20536368656D65-
 31896 00001A45 2D6F626A6563742028-
 31896 00001A4E 525454492030782530-
 31896 00001A57 32582920           
 31897 00001A5B 617420616464726573-     	db `at address 0x%08X\n\n\0`
 31897 00001A64 73203078253038580A-
 31897 00001A6D 0A00               
 31898                                  fmt_dquote:
 31899 00001A6F 2200                    	db `\"\0`
 31900                                  fmt_string_char:
 31901 00001A71 256300                          db `%c\0`
 31902                                  fmt_string_char_7:
 31903 00001A74 5C6100                          db `\\a\0`
 31904                                  fmt_string_char_8:
 31905 00001A77 5C6200                          db `\\b\0`
 31906                                  fmt_string_char_9:
 31907 00001A7A 5C7400                          db `\\t\0`
 31908                                  fmt_string_char_10:
 31909 00001A7D 5C6E00                          db `\\n\0`
 31910                                  fmt_string_char_11:
 31911 00001A80 5C7600                          db `\\v\0`
 31912                                  fmt_string_char_12:
 31913 00001A83 5C6600                          db `\\f\0`
 31914                                  fmt_string_char_13:
 31915 00001A86 5C7200                          db `\\r\0`
 31916                                  fmt_string_char_34:
 31917 00001A89 5C2200                          db `\\"\0`
 31918                                  fmt_string_char_92:
 31919 00001A8C 5C5C00                          db `\\\\\0`
 31920                                  fmt_string_char_hex:
 31921 00001A8F 5C7825583B00                    db `\\x%X;\0`
 31922                                  
 31923                                  section .text
 31924                                  
 31925                                  print_sexpr:
 31926 000178D6 C8000000                	enter 0, 0
 31927 000178DA 8A07                    	mov al, byte [rdi]
 31928 000178DC 3C00                    	cmp al, T_void
 31929 000178DE 7465                    	je .Lvoid
 31930 000178E0 3C01                    	cmp al, T_nil
 31931 000178E2 7470                    	je .Lnil
 31932 000178E4 3C09                    	cmp al, T_boolean_false
 31933 000178E6 747B                    	je .Lboolean_false
 31934 000178E8 3C0A                    	cmp al, T_boolean_true
 31935 000178EA 0F8482000000            	je .Lboolean_true
 31936 000178F0 3C02                    	cmp al, T_char
 31937 000178F2 0F8489000000            	je .Lchar
 31938 000178F8 3C41                    	cmp al, T_interned_symbol
 31939 000178FA 0F84CB010000            	je .Linterned_symbol
 31940 00017900 3C42                            cmp al, T_uninterned_symbol
 31941 00017902 0F84EF010000                    je .Luninterned_symbol
 31942 00017908 3C21                    	cmp al, T_pair
 31943 0001790A 0F84FA010000            	je .Lpair
 31944 00017910 3C22                    	cmp al, T_vector
 31945 00017912 0F84C3020000            	je .Lvector
 31946 00017918 3C04                    	cmp al, T_closure
 31947 0001791A 0F8491010000            	je .Lclosure
 31948 00017920 3C13                    	cmp al, T_real
 31949 00017922 0F8454030000            	je .Lreal
 31950 00017928 3C12                    	cmp al, T_fraction
 31951 0001792A 0F847A030000            	je .Lfraction
 31952 00017930 3C11                    	cmp al, T_integer
 31953 00017932 0F84B3030000            	je .Linteger
 31954 00017938 3C03                    	cmp al, T_string
 31955 0001793A 0F84BE030000            	je .Lstring
 31956                                  
 31957 00017940 E9F6040000              	jmp .Lunknown_sexpr_type
 31958                                  
 31959                                  .Lvoid:
 31960 00017945 48BF-                   	mov rdi, fmt_void
 31960 00017947 [6A19000000000000] 
 31961 0001794F E91A050000              	jmp .Lemit
 31962                                  
 31963                                  .Lnil:
 31964 00017954 48BF-                   	mov rdi, fmt_nil
 31964 00017956 [7219000000000000] 
 31965 0001795E E90B050000              	jmp .Lemit
 31966                                  
 31967                                  .Lboolean_false:
 31968 00017963 48BF-                   	mov rdi, fmt_boolean_false
 31968 00017965 [7519000000000000] 
 31969 0001796D E9FC040000              	jmp .Lemit
 31970                                  
 31971                                  .Lboolean_true:
 31972 00017972 48BF-                   	mov rdi, fmt_boolean_true
 31972 00017974 [7819000000000000] 
 31973 0001797C E9ED040000              	jmp .Lemit
 31974                                  
 31975                                  .Lchar:
 31976 00017981 8A4701                  	mov al, byte [rdi + 1]
 31977 00017984 3C20                    	cmp al, ' '
 31978 00017986 7E28                    	jle .Lchar_whitespace
 31979 00017988 3C5C                    	cmp al, 92 		; backslash
 31980 0001798A 0F847C000000            	je .Lchar_backslash
 31981 00017990 3C22                    	cmp al, '"'
 31982 00017992 0F8483000000            	je .Lchar_dquote
 31983 00017998 4825FF000000            	and rax, 255
 31984 0001799E 48BF-                   	mov rdi, fmt_char_simple
 31984 000179A0 [8319000000000000] 
 31985 000179A8 4889C6                  	mov rsi, rax
 31986 000179AB E9BE040000              	jmp .Lemit
 31987                                  
 31988                                  .Lchar_whitespace:
 31989 000179B0 3C00                    	cmp al, 0
 31990 000179B2 7476                    	je .Lchar_null
 31991 000179B4 3C07                    	cmp al, 7
 31992 000179B6 0F847D000000            	je .Lchar_bell
 31993 000179BC 3C08                    	cmp al, 8
 31994 000179BE 0F8484000000            	je .Lchar_backspace
 31995 000179C4 3C09                    	cmp al, 9
 31996 000179C6 0F848B000000            	je .Lchar_tab
 31997 000179CC 3C0A                    	cmp al, 10
 31998 000179CE 0F8492000000            	je .Lchar_newline
 31999 000179D4 3C0C                    	cmp al, 12
 32000 000179D6 0F8499000000            	je .Lchar_formfeed
 32001 000179DC 3C0D                    	cmp al, 13
 32002 000179DE 0F84A0000000            	je .Lchar_return
 32003 000179E4 3C1B                    	cmp al, 27
 32004 000179E6 0F84A7000000            	je .Lchar_escape
 32005 000179EC 4825FF000000            	and rax, 255
 32006 000179F2 3C20                    	cmp al, ' '
 32007 000179F4 0F84A8000000            	je .Lchar_space
 32008 000179FA 48BF-                   	mov rdi, fmt_char_hex
 32008 000179FC [CF19000000000000] 
 32009 00017A04 4889C6                  	mov rsi, rax
 32010 00017A07 E962040000              	jmp .Lemit	
 32011                                  
 32012                                  .Lchar_backslash:
 32013 00017A0C 48BF-                   	mov rdi, fmt_char_backslash
 32013 00017A0E [7B19000000000000] 
 32014 00017A16 E953040000              	jmp .Lemit
 32015                                  
 32016                                  .Lchar_dquote:
 32017 00017A1B 48BF-                   	mov rdi, fmt_char_dquote
 32017 00017A1D [7F19000000000000] 
 32018 00017A25 E944040000              	jmp .Lemit
 32019                                  
 32020                                  .Lchar_null:
 32021 00017A2A 48BF-                   	mov rdi, fmt_char_null
 32021 00017A2C [8819000000000000] 
 32022 00017A34 E935040000              	jmp .Lemit
 32023                                  
 32024                                  .Lchar_bell:
 32025 00017A39 48BF-                   	mov rdi, fmt_char_bell
 32025 00017A3B [8E19000000000000] 
 32026 00017A43 E926040000              	jmp .Lemit
 32027                                  
 32028                                  .Lchar_backspace:
 32029 00017A48 48BF-                   	mov rdi, fmt_char_backspace
 32029 00017A4A [9519000000000000] 
 32030 00017A52 E917040000              	jmp .Lemit
 32031                                  
 32032                                  .Lchar_tab:
 32033 00017A57 48BF-                   	mov rdi, fmt_char_tab
 32033 00017A59 [A119000000000000] 
 32034 00017A61 E908040000              	jmp .Lemit
 32035                                  
 32036                                  .Lchar_newline:
 32037 00017A66 48BF-                   	mov rdi, fmt_char_newline
 32037 00017A68 [A719000000000000] 
 32038 00017A70 E9F9030000              	jmp .Lemit
 32039                                  
 32040                                  .Lchar_formfeed:
 32041 00017A75 48BF-                   	mov rdi, fmt_char_formfeed
 32041 00017A77 [B119000000000000] 
 32042 00017A7F E9EA030000              	jmp .Lemit
 32043                                  
 32044                                  .Lchar_return:
 32045 00017A84 48BF-                   	mov rdi, fmt_char_return
 32045 00017A86 [B819000000000000] 
 32046 00017A8E E9DB030000              	jmp .Lemit
 32047                                  
 32048                                  .Lchar_escape:
 32049 00017A93 48BF-                   	mov rdi, fmt_char_escape
 32049 00017A95 [C119000000000000] 
 32050 00017A9D E9CC030000              	jmp .Lemit
 32051                                  
 32052                                  .Lchar_space:
 32053 00017AA2 48BF-                   	mov rdi, fmt_char_space
 32053 00017AA4 [C719000000000000] 
 32054 00017AAC E9BD030000              	jmp .Lemit
 32055                                  
 32056                                  .Lclosure:
 32057 00017AB1 4889FE                  	mov rsi, qword rdi
 32058 00017AB4 48BF-                   	mov rdi, fmt_closure
 32058 00017AB6 [DC19000000000000] 
 32059 00017ABE 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 32060 00017AC2 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 32061 00017AC6 E9A3030000              	jmp .Lemit
 32062                                  
 32063                                  .Linterned_symbol:
 32064 00017ACB 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 32065 00017ACF BE01000000              	mov rsi, 1		 ; size = 1 byte
 32066 00017AD4 488B5701                	mov rdx, qword [rdi + 1] ; length
 32067 00017AD8 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 32068 00017ADC 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 32069                                  	ENTER
    44 00017AE4 C8000000            <1>  enter 0, 0
    45 00017AE8 4883E4F0            <1>  and rsp, ~15
 32070 00017AEC E8(00000000)            	call fwrite
 32071                                  	LEAVE
    49 00017AF1 C9                  <1>  leave
 32072 00017AF2 E98C030000              	jmp .Lend
 32073                                  
 32074                                  .Luninterned_symbol:
 32075 00017AF7 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 32076 00017AFB 48BF-                           mov rdi, fmt_gensym
 32076 00017AFD [D719000000000000] 
 32077 00017B05 E964030000                      jmp .Lemit
 32078                                  	
 32079                                  .Lpair:
 32080 00017B0A 57                      	push rdi
 32081 00017B0B 48BF-                   	mov rdi, fmt_lparen
 32081 00017B0D [081A000000000000] 
 32082 00017B15 B800000000              	mov rax, 0
 32083                                          ENTER
    44 00017B1A C8000000            <1>  enter 0, 0
    45 00017B1E 4883E4F0            <1>  and rsp, ~15
 32084 00017B22 E8(00000000)            	call printf
 32085                                          LEAVE
    49 00017B27 C9                  <1>  leave
 32086 00017B28 488B3C24                	mov rdi, qword [rsp] 	; pair
 32087 00017B2C 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 32088 00017B30 E8A1FDFFFF              	call print_sexpr
 32089 00017B35 5F                      	pop rdi 		; pair
 32090 00017B36 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 32091                                  .Lcdr:
 32092 00017B3A 8A07                    	mov al, byte [rdi]
 32093 00017B3C 3C01                    	cmp al, T_nil
 32094 00017B3E 7447                    	je .Lcdr_nil
 32095 00017B40 3C21                    	cmp al, T_pair
 32096 00017B42 7462                    	je .Lcdr_pair
 32097 00017B44 57                      	push rdi
 32098 00017B45 48BF-                   	mov rdi, fmt_dotted_pair
 32098 00017B47 [0A1A000000000000] 
 32099 00017B4F B800000000              	mov rax, 0
 32100                                          ENTER
    44 00017B54 C8000000            <1>  enter 0, 0
    45 00017B58 4883E4F0            <1>  and rsp, ~15
 32101 00017B5C E8(00000000)            	call printf
 32102                                          LEAVE
    49 00017B61 C9                  <1>  leave
 32103 00017B62 5F                      	pop rdi
 32104 00017B63 E86EFDFFFF              	call print_sexpr
 32105 00017B68 48BF-                   	mov rdi, fmt_rparen
 32105 00017B6A [0E1A000000000000] 
 32106 00017B72 B800000000              	mov rax, 0
 32107                                          ENTER
    44 00017B77 C8000000            <1>  enter 0, 0
    45 00017B7B 4883E4F0            <1>  and rsp, ~15
 32108 00017B7F E8(00000000)            	call printf
 32109                                          LEAVE
    49 00017B84 C9                  <1>  leave
 32110 00017B85 C9                      	leave
 32111 00017B86 C3                      	ret
 32112                                  
 32113                                  .Lcdr_nil:
 32114 00017B87 48BF-                   	mov rdi, fmt_rparen
 32114 00017B89 [0E1A000000000000] 
 32115 00017B91 B800000000              	mov rax, 0
 32116                                          ENTER
    44 00017B96 C8000000            <1>  enter 0, 0
    45 00017B9A 4883E4F0            <1>  and rsp, ~15
 32117 00017B9E E8(00000000)            	call printf
 32118                                          LEAVE
    49 00017BA3 C9                  <1>  leave
 32119 00017BA4 C9                      	leave
 32120 00017BA5 C3                      	ret
 32121                                  
 32122                                  .Lcdr_pair:
 32123 00017BA6 57                      	push rdi
 32124 00017BA7 48BF-                   	mov rdi, fmt_space
 32124 00017BA9 [101A000000000000] 
 32125 00017BB1 B800000000              	mov rax, 0
 32126                                          ENTER
    44 00017BB6 C8000000            <1>  enter 0, 0
    45 00017BBA 4883E4F0            <1>  and rsp, ~15
 32127 00017BBE E8(00000000)            	call printf
 32128                                          LEAVE
    49 00017BC3 C9                  <1>  leave
 32129 00017BC4 488B3C24                	mov rdi, qword [rsp]
 32130 00017BC8 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 32131 00017BCC E805FDFFFF              	call print_sexpr
 32132 00017BD1 5F                      	pop rdi
 32133 00017BD2 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 32134 00017BD6 E95FFFFFFF              	jmp .Lcdr
 32135                                  
 32136                                  .Lvector:
 32137 00017BDB 488B4701                	mov rax, qword [rdi + 1] ; length
 32138 00017BDF 4883F800                	cmp rax, 0
 32139 00017BE3 0F8484000000            	je .Lvector_empty
 32140 00017BE9 57                      	push rdi
 32141 00017BEA 48BF-                   	mov rdi, fmt_vector
 32141 00017BEC [161A000000000000] 
 32142 00017BF4 B800000000              	mov rax, 0
 32143                                          ENTER
    44 00017BF9 C8000000            <1>  enter 0, 0
    45 00017BFD 4883E4F0            <1>  and rsp, ~15
 32144 00017C01 E8(00000000)            	call printf
 32145                                          LEAVE
    49 00017C06 C9                  <1>  leave
 32146 00017C07 488B3C24                	mov rdi, qword [rsp]
 32147 00017C0B FF7701                  	push qword [rdi + 1]
 32148 00017C0E 6A01                    	push 1
 32149 00017C10 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 32150 00017C14 E8BDFCFFFF              	call print_sexpr
 32151                                  .Lvector_loop:
 32152                                  	; [rsp] index
 32153                                  	; [rsp + 8*1] limit
 32154                                  	; [rsp + 8*2] vector
 32155 00017C19 488B0424                	mov rax, qword [rsp]
 32156 00017C1D 483B442408              	cmp rax, qword [rsp + 8*1]
 32157 00017C22 7436                    	je .Lvector_end
 32158 00017C24 48BF-                   	mov rdi, fmt_space
 32158 00017C26 [101A000000000000] 
 32159 00017C2E B800000000              	mov rax, 0
 32160                                          ENTER
    44 00017C33 C8000000            <1>  enter 0, 0
    45 00017C37 4883E4F0            <1>  and rsp, ~15
 32161 00017C3B E8(00000000)            	call printf
 32162                                          LEAVE
    49 00017C40 C9                  <1>  leave
 32163 00017C41 488B0424                	mov rax, qword [rsp]
 32164 00017C45 488B5C2410              	mov rbx, qword [rsp + 8*2]
 32165 00017C4A 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 32166 00017C4F E882FCFFFF              	call print_sexpr
 32167 00017C54 48FF0424                	inc qword [rsp]
 32168 00017C58 EBBF                    	jmp .Lvector_loop
 32169                                  
 32170                                  .Lvector_end:
 32171 00017C5A 4883C418                	add rsp, 8*3
 32172 00017C5E 48BF-                   	mov rdi, fmt_rparen
 32172 00017C60 [0E1A000000000000] 
 32173 00017C68 E901020000              	jmp .Lemit	
 32174                                  
 32175                                  .Lvector_empty:
 32176 00017C6D 48BF-                   	mov rdi, fmt_empty_vector
 32176 00017C6F [121A000000000000] 
 32177 00017C77 E9F2010000              	jmp .Lemit
 32178                                  
 32179                                  .Lreal:
 32180 00017C7C FF7701                  	push qword [rdi + 1]
 32181 00017C7F F20F100424              	movsd xmm0, qword [rsp]
 32182 00017C84 4883C408                	add rsp, 8*1
 32183 00017C88 48BF-                   	mov rdi, fmt_real
 32183 00017C8A [191A000000000000] 
 32184 00017C92 B801000000              	mov rax, 1
 32185                                  	ENTER
    44 00017C97 C8000000            <1>  enter 0, 0
    45 00017C9B 4883E4F0            <1>  and rsp, ~15
 32186 00017C9F E8(00000000)            	call printf
 32187                                  	LEAVE
    49 00017CA4 C9                  <1>  leave
 32188 00017CA5 E9D9010000              	jmp .Lend
 32189                                  
 32190                                  .Lfraction:
 32191 00017CAA 488B7701                	mov rsi, qword [rdi + 1]
 32192 00017CAE 488B5709                	mov rdx, qword [rdi + 1 + 8]
 32193 00017CB2 4883FE00                	cmp rsi, 0
 32194 00017CB6 7415                    	je .Lrat_zero
 32195 00017CB8 4883FA01                	cmp rdx, 1
 32196 00017CBC 741E                    	je .Lrat_int
 32197 00017CBE 48BF-                   	mov rdi, fmt_fraction
 32197 00017CC0 [1C1A000000000000] 
 32198 00017CC8 E9A1010000              	jmp .Lemit
 32199                                  
 32200                                  .Lrat_zero:
 32201 00017CCD 48BF-                   	mov rdi, fmt_zero
 32201 00017CCF [241A000000000000] 
 32202 00017CD7 E992010000              	jmp .Lemit
 32203                                  
 32204                                  .Lrat_int:
 32205 00017CDC 48BF-                   	mov rdi, fmt_int
 32205 00017CDE [261A000000000000] 
 32206 00017CE6 E983010000              	jmp .Lemit
 32207                                  
 32208                                  .Linteger:
 32209 00017CEB 488B7701                	mov rsi, qword [rdi + 1]
 32210 00017CEF 48BF-                   	mov rdi, fmt_int
 32210 00017CF1 [261A000000000000] 
 32211 00017CF9 E970010000              	jmp .Lemit
 32212                                  
 32213                                  .Lstring:
 32214 00017CFE 488D4709                	lea rax, [rdi + 1 + 8]
 32215 00017D02 50                      	push rax
 32216 00017D03 FF7701                  	push qword [rdi + 1]
 32217 00017D06 48BF-                   	mov rdi, fmt_dquote
 32217 00017D08 [6F1A000000000000] 
 32218 00017D10 B800000000              	mov rax, 0
 32219                                  	ENTER
    44 00017D15 C8000000            <1>  enter 0, 0
    45 00017D19 4883E4F0            <1>  and rsp, ~15
 32220 00017D1D E8(00000000)            	call printf
 32221                                  	LEAVE
    49 00017D22 C9                  <1>  leave
 32222                                  .Lstring_loop:
 32223                                  	; qword [rsp]: limit
 32224                                  	; qword [rsp + 8*1]: char *
 32225 00017D23 48833C2400              	cmp qword [rsp], 0
 32226 00017D28 0F84FD000000            	je .Lstring_end
 32227 00017D2E 488B442408              	mov rax, qword [rsp + 8*1]
 32228 00017D33 8A00                    	mov al, byte [rax]
 32229 00017D35 4825FF000000            	and rax, 255
 32230 00017D3B 3C07                    	cmp al, 7
 32231 00017D3D 7468                            je .Lstring_char_7
 32232 00017D3F 3C08                            cmp al, 8
 32233 00017D41 7470                            je .Lstring_char_8
 32234 00017D43 3C09                            cmp al, 9
 32235 00017D45 7478                            je .Lstring_char_9
 32236 00017D47 3C0A                            cmp al, 10
 32237 00017D49 0F847C000000                    je .Lstring_char_10
 32238 00017D4F 3C0B                            cmp al, 11
 32239 00017D51 0F8480000000                    je .Lstring_char_11
 32240 00017D57 3C0C                            cmp al, 12
 32241 00017D59 0F8484000000                    je .Lstring_char_12
 32242 00017D5F 3C0D                            cmp al, 13
 32243 00017D61 0F8488000000                    je .Lstring_char_13
 32244 00017D67 3C22                            cmp al, 34
 32245 00017D69 0F848C000000                    je .Lstring_char_34
 32246 00017D6F 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 32248 00017D71 3C20                            cmp al, ' '
 32249 00017D73 0F8CA0000000                    jl .Lstring_char_hex
 32250 00017D79 48BF-                           mov rdi, fmt_string_char
 32250 00017D7B [711A000000000000] 
 32251 00017D83 4889C6                          mov rsi, rax
 32252                                  .Lstring_char_emit:
 32253 00017D86 B800000000                      mov rax, 0
 32254                                          ENTER
    44 00017D8B C8000000            <1>  enter 0, 0
    45 00017D8F 4883E4F0            <1>  and rsp, ~15
 32255 00017D93 E8(00000000)                    call printf
 32256                                          LEAVE
    49 00017D98 C9                  <1>  leave
 32257 00017D99 48FF0C24                        dec qword [rsp]
 32258 00017D9D 48FF442408                      inc qword [rsp + 8*1]
 32259 00017DA2 E97CFFFFFF                      jmp .Lstring_loop
 32260                                  
 32261                                  .Lstring_char_7:
 32262 00017DA7 48BF-                           mov rdi, fmt_string_char_7
 32262 00017DA9 [741A000000000000] 
 32263 00017DB1 EBD3                            jmp .Lstring_char_emit
 32264                                  
 32265                                  .Lstring_char_8:
 32266 00017DB3 48BF-                           mov rdi, fmt_string_char_8
 32266 00017DB5 [771A000000000000] 
 32267 00017DBD EBC7                            jmp .Lstring_char_emit
 32268                                          
 32269                                  .Lstring_char_9:
 32270 00017DBF 48BF-                           mov rdi, fmt_string_char_9
 32270 00017DC1 [7A1A000000000000] 
 32271 00017DC9 EBBB                            jmp .Lstring_char_emit
 32272                                  
 32273                                  .Lstring_char_10:
 32274 00017DCB 48BF-                           mov rdi, fmt_string_char_10
 32274 00017DCD [7D1A000000000000] 
 32275 00017DD5 EBAF                            jmp .Lstring_char_emit
 32276                                  
 32277                                  .Lstring_char_11:
 32278 00017DD7 48BF-                           mov rdi, fmt_string_char_11
 32278 00017DD9 [801A000000000000] 
 32279 00017DE1 EBA3                            jmp .Lstring_char_emit
 32280                                  
 32281                                  .Lstring_char_12:
 32282 00017DE3 48BF-                           mov rdi, fmt_string_char_12
 32282 00017DE5 [831A000000000000] 
 32283 00017DED EB97                            jmp .Lstring_char_emit
 32284                                  
 32285                                  .Lstring_char_13:
 32286 00017DEF 48BF-                           mov rdi, fmt_string_char_13
 32286 00017DF1 [861A000000000000] 
 32287 00017DF9 EB8B                            jmp .Lstring_char_emit
 32288                                  
 32289                                  .Lstring_char_34:
 32290 00017DFB 48BF-                           mov rdi, fmt_string_char_34
 32290 00017DFD [891A000000000000] 
 32291 00017E05 E97CFFFFFF                      jmp .Lstring_char_emit
 32292                                  
 32293                                  .Lstring_char_92:
 32294 00017E0A 48BF-                           mov rdi, fmt_string_char_92
 32294 00017E0C [8C1A000000000000] 
 32295 00017E14 E96DFFFFFF                      jmp .Lstring_char_emit
 32296                                  
 32297                                  .Lstring_char_hex:
 32298 00017E19 48BF-                           mov rdi, fmt_string_char_hex
 32298 00017E1B [8F1A000000000000] 
 32299 00017E23 4889C6                          mov rsi, rax
 32300 00017E26 E95BFFFFFF                      jmp .Lstring_char_emit        
 32301                                  
 32302                                  .Lstring_end:
 32303 00017E2B 4883C410                	add rsp, 8 * 2
 32304 00017E2F 48BF-                   	mov rdi, fmt_dquote
 32304 00017E31 [6F1A000000000000] 
 32305 00017E39 EB33                    	jmp .Lemit
 32306                                  
 32307                                  .Lunknown_sexpr_type:
 32308 00017E3B 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 32308 00017E3D [2A1A000000000000] 
 32309 00017E45 4825FF000000            	and rax, 255
 32310 00017E4B 4889C2                  	mov rdx, rax
 32311 00017E4E 4889F9                  	mov rcx, rdi
 32312 00017E51 488B3C25[00000000]      	mov rdi, qword [stderr]
 32313 00017E59 B800000000              	mov rax, 0
 32314                                          ENTER
    44 00017E5E C8000000            <1>  enter 0, 0
    45 00017E62 4883E4F0            <1>  and rsp, ~15
 32315 00017E66 E8(00000000)            	call fprintf
 32316                                          LEAVE
    49 00017E6B C9                  <1>  leave
 32317 00017E6C C9                              leave
 32318 00017E6D C3                              ret
 32319                                  
 32320                                  .Lemit:
 32321 00017E6E B800000000              	mov rax, 0
 32322                                          ENTER
    44 00017E73 C8000000            <1>  enter 0, 0
    45 00017E77 4883E4F0            <1>  and rsp, ~15
 32323 00017E7B E8(00000000)            	call printf
 32324                                          LEAVE
    49 00017E80 C9                  <1>  leave
 32325 00017E81 EB00                    	jmp .Lend
 32326                                  
 32327                                  .Lend:
 32328                                  	LEAVE
    49 00017E83 C9                  <1>  leave
 32329 00017E84 C3                      	ret
 32330                                  
 32331                                  ;;; rdi: address of free variable
 32332                                  ;;; rsi: address of code-pointer
 32333                                  bind_primitive:
 32334 00017E85 C8000000                        enter 0, 0
 32335 00017E89 57                              push rdi
 32336 00017E8A BF11000000                      mov rdi, (1 + 8 + 8)
 32337 00017E8F E8C1F7FFFF                      call malloc
 32338 00017E94 5F                              pop rdi
 32339 00017E95 C60004                          mov byte [rax], T_closure
 32340 00017E98 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 32341 00017EA0 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 32342 00017EA4 488907                          mov qword [rdi], rax
 32343 00017EA7 48B8-                           mov rax, sob_void
 32343 00017EA9 [0000000000000000] 
 32344 00017EB1 C9                              leave
 32345 00017EB2 C3                              ret
 32346                                  
 32347                                  L_code_ptr_ash:
 32348 00017EB3 C8000000                        enter 0, 0
 32349 00017EB7 48837D1802                      cmp COUNT, 2
 32350 00017EBC 0F8597140000                    jne L_error_arg_count_2
 32351 00017EC2 488B7D20                        mov rdi, PARAM(0)
 32352                                          assert_integer(rdi)
    53 00017EC6 803F11              <1>  cmp byte [%1], %2
    54 00017EC9 0F8529150000        <1>  jne L_error_incorrect_type
 32353 00017ECF 488B4D28                        mov rcx, PARAM(1)
 32354                                          assert_integer(rcx)
    53 00017ED3 803911              <1>  cmp byte [%1], %2
    54 00017ED6 0F851C150000        <1>  jne L_error_incorrect_type
 32355 00017EDC 488B7F01                        mov rdi, qword [rdi + 1]
 32356 00017EE0 488B4901                        mov rcx, qword [rcx + 1]
 32357 00017EE4 4883F900                        cmp rcx, 0
 32358 00017EE8 7C0F                            jl .L_negative
 32359                                  .L_loop_positive:
 32360 00017EEA 4883F900                        cmp rcx, 0
 32361 00017EEE 741B                            je .L_exit
 32362 00017EF0 48D3E7                          sal rdi, cl
 32363 00017EF3 48C1E908                        shr rcx, 8
 32364 00017EF7 EBF1                            jmp .L_loop_positive
 32365                                  .L_negative:
 32366 00017EF9 48F7D9                          neg rcx
 32367                                  .L_loop_negative:
 32368 00017EFC 4883F900                        cmp rcx, 0
 32369 00017F00 7409                            je .L_exit
 32370 00017F02 48D3FF                          sar rdi, cl
 32371 00017F05 48C1E908                        shr rcx, 8
 32372 00017F09 EBF1                            jmp .L_loop_negative
 32373                                  .L_exit:
 32374 00017F0B E863130000                      call make_integer
 32375 00017F10 C9                              leave
 32376 00017F11 C22000                          ret AND_KILL_FRAME(2)
 32377                                  
 32378                                  L_code_ptr_logand:
 32379 00017F14 C8000000                        enter 0, 0
 32380 00017F18 48837D1802                      cmp COUNT, 2
 32381 00017F1D 0F8536140000                    jne L_error_arg_count_2
 32382 00017F23 4C8B4520                        mov r8, PARAM(0)
 32383                                          assert_integer(r8)
    53 00017F27 41803811            <1>  cmp byte [%1], %2
    54 00017F2B 0F85C7140000        <1>  jne L_error_incorrect_type
 32384 00017F31 4C8B4D28                        mov r9, PARAM(1)
 32385                                          assert_integer(r9)
    53 00017F35 41803911            <1>  cmp byte [%1], %2
    54 00017F39 0F85B9140000        <1>  jne L_error_incorrect_type
 32386 00017F3F 498B7801                        mov rdi, qword [r8 + 1]
 32387 00017F43 49237901                        and rdi, qword [r9 + 1]
 32388 00017F47 E827130000                      call make_integer
 32389 00017F4C C9                              leave
 32390 00017F4D C22000                          ret AND_KILL_FRAME(2)
 32391                                  
 32392                                  L_code_ptr_logor:
 32393 00017F50 C8000000                        enter 0, 0
 32394 00017F54 48837D1802                      cmp COUNT, 2
 32395 00017F59 0F85FA130000                    jne L_error_arg_count_2
 32396 00017F5F 4C8B4520                        mov r8, PARAM(0)
 32397                                          assert_integer(r8)
    53 00017F63 41803811            <1>  cmp byte [%1], %2
    54 00017F67 0F858B140000        <1>  jne L_error_incorrect_type
 32398 00017F6D 4C8B4D28                        mov r9, PARAM(1)
 32399                                          assert_integer(r9)
    53 00017F71 41803911            <1>  cmp byte [%1], %2
    54 00017F75 0F857D140000        <1>  jne L_error_incorrect_type
 32400 00017F7B 498B7801                        mov rdi, qword [r8 + 1]
 32401 00017F7F 490B7901                        or rdi, qword [r9 + 1]
 32402 00017F83 E8EB120000                      call make_integer
 32403 00017F88 C9                              leave
 32404 00017F89 C22000                          ret AND_KILL_FRAME(2)
 32405                                  
 32406                                  L_code_ptr_logxor:
 32407 00017F8C C8000000                        enter 0, 0
 32408 00017F90 48837D1802                      cmp COUNT, 2
 32409 00017F95 0F85BE130000                    jne L_error_arg_count_2
 32410 00017F9B 4C8B4520                        mov r8, PARAM(0)
 32411                                          assert_integer(r8)
    53 00017F9F 41803811            <1>  cmp byte [%1], %2
    54 00017FA3 0F854F140000        <1>  jne L_error_incorrect_type
 32412 00017FA9 4C8B4D28                        mov r9, PARAM(1)
 32413                                          assert_integer(r9)
    53 00017FAD 41803911            <1>  cmp byte [%1], %2
    54 00017FB1 0F8541140000        <1>  jne L_error_incorrect_type
 32414 00017FB7 498B7801                        mov rdi, qword [r8 + 1]
 32415 00017FBB 49337901                        xor rdi, qword [r9 + 1]
 32416 00017FBF E8AF120000                      call make_integer
 32417                                          LEAVE
    49 00017FC4 C9                  <1>  leave
 32418 00017FC5 C22000                          ret AND_KILL_FRAME(2)
 32419                                  
 32420                                  L_code_ptr_lognot:
 32421 00017FC8 C8000000                        enter 0, 0
 32422 00017FCC 48837D1801                      cmp COUNT, 1
 32423 00017FD1 0F854D130000                    jne L_error_arg_count_1
 32424 00017FD7 4C8B4520                        mov r8, PARAM(0)
 32425                                          assert_integer(r8)
    53 00017FDB 41803811            <1>  cmp byte [%1], %2
    54 00017FDF 0F8513140000        <1>  jne L_error_incorrect_type
 32426 00017FE5 498B7801                        mov rdi, qword [r8 + 1]
 32427 00017FE9 48F7D7                          not rdi
 32428 00017FEC E882120000                      call make_integer
 32429 00017FF1 C9                              leave
 32430 00017FF2 C21800                          ret AND_KILL_FRAME(1)
 32431                                  
 32432                                  ;;; fill in for final project!
 32433                                  L_code_ptr_bin_apply:
 32434 00017FF5 4989E8                  mov r8, rbp
 32435 00017FF8 FF7500                  push  qword [rbp]
 32436 00017FFB 4889E5                  mov rbp, rsp
 32437                                  
 32438                                  ;calc args
 32439 00017FFE 4C8B4D28                mov r9, PARAM(1) ; save for later start of the params
 32440 00018002 4D89CA                  mov r10, r9 
 32441 00018005 B900000000              mov rcx, 0 ;args count
 32442                                  
 32443                                  .L_args_loop:
 32444 0001800A 4981FA[01000000]                cmp r10, sob_nil
 32445 00018011 7413                            je .L_args_end
 32446                                          assert_pair(r10)
    53 00018013 41803A21            <1>  cmp byte [%1], %2
    54 00018017 0F85DB130000        <1>  jne L_error_incorrect_type
 32447 0001801D 4D8B5209                        mov r10, SOB_PAIR_CDR(r10)
 32448 00018021 48FFC1                          inc rcx
 32449 00018024 EBE4                            jmp .L_args_loop
 32450                                  
 32451                                  .L_args_end:
 32452                                          ;set place in the stack
 32453 00018026 4C8D14CDE8FFFFFF                lea r10, [8*(rcx -3)]
 32454 0001802E 4C29D4                          sub rsp, r10
 32455                                  
 32456                                          ;save ret afddress
 32457 00018031 4C8B5508                        mov r10, RET_ADDR
 32458 00018035 4C891424                        mov qword [rsp], r10
 32459                                  
 32460                                          ;save lexical env
 32461 00018039 488B7520                        mov rsi, PARAM(0)
 32462                                          assert_closure(rsi)
    53 0001803D 803E04              <1>  cmp byte [%1], %2
    54 00018040 0F85B2130000        <1>  jne L_error_incorrect_type
 32463 00018046 4C8B5601                        mov r10, SOB_CLOSURE_ENV(rsi)
 32464 0001804A 4C89542408                      mov qword [rsp + 8], r10
 32465                                  
 32466                                          ;save argc
 32467 0001804F 48894C2410                      mov qword [rsp + 2*8], rcx
 32468                                  
 32469                                          ;save params
 32470 00018054 4C8D542418                      lea r10, [rsp + 3*8]
 32471 00018059 4D89CB                          mov r11, r9
 32472                                          .L_params_loop:
 32473 0001805C 4981FB[01000000]                        cmp r11, sob_nil
 32474 00018063 7411                                    je .L_params_end
 32475 00018065 4D8B6301                                mov r12, SOB_PAIR_CAR(r11)
 32476 00018069 4D8922                                  mov qword [r10], r12
 32477 0001806C 4D8B5B09                                mov r11, SOB_PAIR_CDR(r11)
 32478 00018070 4983C208                                add r10, 8
 32479 00018074 EBE6                                    jmp .L_params_loop
 32480                                          .L_params_end:
 32481 00018076 4C89C5                                  mov rbp, r8
 32482 00018079 FF6609                                  jmp SOB_CLOSURE_CODE(rsi)
 32483                                  
 32484                                  L_code_ptr_is_null:
 32485 0001807C C8000000                        enter 0, 0
 32486 00018080 48837D1801                      cmp COUNT, 1
 32487 00018085 0F8599120000                    jne L_error_arg_count_1
 32488 0001808B 488B4520                        mov rax, PARAM(0)
 32489 0001808F 803801                          cmp byte [rax], T_nil
 32490 00018092 750C                            jne .L_false
 32491 00018094 48B8-                           mov rax, sob_boolean_true
 32491 00018096 [0300000000000000] 
 32492 0001809E EB0A                            jmp .L_end
 32493                                  .L_false:
 32494 000180A0 48B8-                           mov rax, sob_boolean_false
 32494 000180A2 [0200000000000000] 
 32495                                  .L_end:
 32496 000180AA C9                              leave
 32497 000180AB C21800                          ret AND_KILL_FRAME(1)
 32498                                  
 32499                                  L_code_ptr_is_pair:
 32500 000180AE C8000000                        enter 0, 0
 32501 000180B2 48837D1801                      cmp COUNT, 1
 32502 000180B7 0F8567120000                    jne L_error_arg_count_1
 32503 000180BD 488B4520                        mov rax, PARAM(0)
 32504 000180C1 803821                          cmp byte [rax], T_pair
 32505 000180C4 750C                            jne .L_false
 32506 000180C6 48B8-                           mov rax, sob_boolean_true
 32506 000180C8 [0300000000000000] 
 32507 000180D0 EB0A                            jmp .L_end
 32508                                  .L_false:
 32509 000180D2 48B8-                           mov rax, sob_boolean_false
 32509 000180D4 [0200000000000000] 
 32510                                  .L_end:
 32511 000180DC C9                              leave
 32512 000180DD C21800                          ret AND_KILL_FRAME(1)
 32513                                          
 32514                                  L_code_ptr_is_void:
 32515 000180E0 C8000000                        enter 0, 0
 32516 000180E4 48837D1801                      cmp COUNT, 1
 32517 000180E9 0F8535120000                    jne L_error_arg_count_1
 32518 000180EF 488B4520                        mov rax, PARAM(0)
 32519 000180F3 803800                          cmp byte [rax], T_void
 32520 000180F6 750C                            jne .L_false
 32521 000180F8 48B8-                           mov rax, sob_boolean_true
 32521 000180FA [0300000000000000] 
 32522 00018102 EB0A                            jmp .L_end
 32523                                  .L_false:
 32524 00018104 48B8-                           mov rax, sob_boolean_false
 32524 00018106 [0200000000000000] 
 32525                                  .L_end:
 32526 0001810E C9                              leave
 32527 0001810F C21800                          ret AND_KILL_FRAME(1)
 32528                                  
 32529                                  L_code_ptr_is_char:
 32530 00018112 C8000000                        enter 0, 0
 32531 00018116 48837D1801                      cmp COUNT, 1
 32532 0001811B 0F8503120000                    jne L_error_arg_count_1
 32533 00018121 488B4520                        mov rax, PARAM(0)
 32534 00018125 803802                          cmp byte [rax], T_char
 32535 00018128 750C                            jne .L_false
 32536 0001812A 48B8-                           mov rax, sob_boolean_true
 32536 0001812C [0300000000000000] 
 32537 00018134 EB0A                            jmp .L_end
 32538                                  .L_false:
 32539 00018136 48B8-                           mov rax, sob_boolean_false
 32539 00018138 [0200000000000000] 
 32540                                  .L_end:
 32541 00018140 C9                              leave
 32542 00018141 C21800                          ret AND_KILL_FRAME(1)
 32543                                  
 32544                                  L_code_ptr_is_string:
 32545 00018144 C8000000                        enter 0, 0
 32546 00018148 48837D1801                      cmp COUNT, 1
 32547 0001814D 0F85D1110000                    jne L_error_arg_count_1
 32548 00018153 488B4520                        mov rax, PARAM(0)
 32549 00018157 803803                          cmp byte [rax], T_string
 32550 0001815A 750C                            jne .L_false
 32551 0001815C 48B8-                           mov rax, sob_boolean_true
 32551 0001815E [0300000000000000] 
 32552 00018166 EB0A                            jmp .L_end
 32553                                  .L_false:
 32554 00018168 48B8-                           mov rax, sob_boolean_false
 32554 0001816A [0200000000000000] 
 32555                                  .L_end:
 32556 00018172 C9                              leave
 32557 00018173 C21800                          ret AND_KILL_FRAME(1)
 32558                                  
 32559                                  L_code_ptr_is_symbol:
 32560 00018176 C8000000                        enter 0, 0
 32561 0001817A 48837D1801                      cmp COUNT, 1
 32562 0001817F 0F859F110000                    jne L_error_arg_count_1
 32563 00018185 4C8B4520                        mov r8, PARAM(0)
 32564 00018189 41802040                        and byte [r8], T_symbol
 32565 0001818D 740C                            jz .L_false
 32566 0001818F 48B8-                           mov rax, sob_boolean_true
 32566 00018191 [0300000000000000] 
 32567 00018199 EB0A                            jmp .L_exit
 32568                                  .L_false:
 32569 0001819B 48B8-                           mov rax, sob_boolean_false
 32569 0001819D [0200000000000000] 
 32570                                  .L_exit:
 32571 000181A5 C9                              leave
 32572 000181A6 C21800                          ret AND_KILL_FRAME(1)
 32573                                  
 32574                                  L_code_ptr_is_uninterned_symbol:
 32575 000181A9 C8000000                        enter 0, 0
 32576 000181AD 48837D1801                      cmp COUNT, 1
 32577 000181B2 0F856C110000                    jne L_error_arg_count_1
 32578 000181B8 4C8B4520                        mov r8, PARAM(0)
 32579 000181BC 41803842                        cmp byte [r8], T_uninterned_symbol
 32580 000181C0 750C                            jne .L_false
 32581 000181C2 48B8-                           mov rax, sob_boolean_true
 32581 000181C4 [0300000000000000] 
 32582 000181CC EB0A                            jmp .L_exit
 32583                                  .L_false:
 32584 000181CE 48B8-                           mov rax, sob_boolean_false
 32584 000181D0 [0200000000000000] 
 32585                                  .L_exit:
 32586 000181D8 C9                              leave
 32587 000181D9 C21800                          ret AND_KILL_FRAME(1)
 32588                                  
 32589                                  L_code_ptr_is_interned_symbol:
 32590 000181DC C8000000                        enter 0, 0
 32591 000181E0 48837D1801                      cmp COUNT, 1
 32592 000181E5 0F8539110000                    jne L_error_arg_count_1
 32593 000181EB 488B4520                        mov rax, PARAM(0)
 32594 000181EF 803841                          cmp byte [rax], T_interned_symbol
 32595 000181F2 750C                            jne .L_false
 32596 000181F4 48B8-                           mov rax, sob_boolean_true
 32596 000181F6 [0300000000000000] 
 32597 000181FE EB0A                            jmp .L_end
 32598                                  .L_false:
 32599 00018200 48B8-                           mov rax, sob_boolean_false
 32599 00018202 [0200000000000000] 
 32600                                  .L_end:
 32601 0001820A C9                              leave
 32602 0001820B C21800                          ret AND_KILL_FRAME(1)
 32603                                  
 32604                                  L_code_ptr_gensym:
 32605 0001820E C8000000                        enter 0, 0
 32606 00018212 48837D1800                      cmp COUNT, 0
 32607 00018217 0F85D2100000                    jne L_error_arg_count_0
 32608 0001821D 48FF0425[951A0000]              inc qword [gensym_count]
 32609 00018225 BF09000000                      mov rdi, (1 + 8)
 32610 0001822A E826F4FFFF                      call malloc
 32611 0001822F C60042                          mov byte [rax], T_uninterned_symbol
 32612 00018232 488B0C25[951A0000]              mov rcx, qword [gensym_count]
 32613 0001823A 48894801                        mov qword [rax + 1], rcx
 32614 0001823E C9                              leave
 32615 0001823F C21000                          ret AND_KILL_FRAME(0)
 32616                                  
 32617                                  L_code_ptr_is_vector:
 32618 00018242 C8000000                        enter 0, 0
 32619 00018246 48837D1801                      cmp COUNT, 1
 32620 0001824B 0F85D3100000                    jne L_error_arg_count_1
 32621 00018251 488B4520                        mov rax, PARAM(0)
 32622 00018255 803822                          cmp byte [rax], T_vector
 32623 00018258 750C                            jne .L_false
 32624 0001825A 48B8-                           mov rax, sob_boolean_true
 32624 0001825C [0300000000000000] 
 32625 00018264 EB0A                            jmp .L_end
 32626                                  .L_false:
 32627 00018266 48B8-                           mov rax, sob_boolean_false
 32627 00018268 [0200000000000000] 
 32628                                  .L_end:
 32629 00018270 C9                              leave
 32630 00018271 C21800                          ret AND_KILL_FRAME(1)
 32631                                  
 32632                                  L_code_ptr_is_closure:
 32633 00018274 C8000000                        enter 0, 0
 32634 00018278 48837D1801                      cmp COUNT, 1
 32635 0001827D 0F85A1100000                    jne L_error_arg_count_1
 32636 00018283 488B4520                        mov rax, PARAM(0)
 32637 00018287 803804                          cmp byte [rax], T_closure
 32638 0001828A 750C                            jne .L_false
 32639 0001828C 48B8-                           mov rax, sob_boolean_true
 32639 0001828E [0300000000000000] 
 32640 00018296 EB0A                            jmp .L_end
 32641                                  .L_false:
 32642 00018298 48B8-                           mov rax, sob_boolean_false
 32642 0001829A [0200000000000000] 
 32643                                  .L_end:
 32644 000182A2 C9                              leave
 32645 000182A3 C21800                          ret AND_KILL_FRAME(1)
 32646                                  
 32647                                  L_code_ptr_is_real:
 32648 000182A6 C8000000                        enter 0, 0
 32649 000182AA 48837D1801                      cmp COUNT, 1
 32650 000182AF 0F856F100000                    jne L_error_arg_count_1
 32651 000182B5 488B4520                        mov rax, PARAM(0)
 32652 000182B9 803813                          cmp byte [rax], T_real
 32653 000182BC 750C                            jne .L_false
 32654 000182BE 48B8-                           mov rax, sob_boolean_true
 32654 000182C0 [0300000000000000] 
 32655 000182C8 EB0A                            jmp .L_end
 32656                                  .L_false:
 32657 000182CA 48B8-                           mov rax, sob_boolean_false
 32657 000182CC [0200000000000000] 
 32658                                  .L_end:
 32659 000182D4 C9                              leave
 32660 000182D5 C21800                          ret AND_KILL_FRAME(1)
 32661                                  
 32662                                  L_code_ptr_is_fraction:
 32663 000182D8 C8000000                        enter 0, 0
 32664 000182DC 48837D1801                      cmp COUNT, 1
 32665 000182E1 0F853D100000                    jne L_error_arg_count_1
 32666 000182E7 488B4520                        mov rax, PARAM(0)
 32667 000182EB 803812                          cmp byte [rax], T_fraction
 32668 000182EE 750C                            jne .L_false
 32669 000182F0 48B8-                           mov rax, sob_boolean_true
 32669 000182F2 [0300000000000000] 
 32670 000182FA EB0A                            jmp .L_end
 32671                                  .L_false:
 32672 000182FC 48B8-                           mov rax, sob_boolean_false
 32672 000182FE [0200000000000000] 
 32673                                  .L_end:
 32674 00018306 C9                              leave
 32675 00018307 C21800                          ret AND_KILL_FRAME(1)
 32676                                  
 32677                                  L_code_ptr_is_boolean:
 32678 0001830A C8000000                        enter 0, 0
 32679 0001830E 48837D1801                      cmp COUNT, 1
 32680 00018313 0F850B100000                    jne L_error_arg_count_1
 32681 00018319 488B4520                        mov rax, PARAM(0)
 32682 0001831D 8A18                            mov bl, byte [rax]
 32683 0001831F 80E308                          and bl, T_boolean
 32684 00018322 740C                            je .L_false
 32685 00018324 48B8-                           mov rax, sob_boolean_true
 32685 00018326 [0300000000000000] 
 32686 0001832E EB0A                            jmp .L_end
 32687                                  .L_false:
 32688 00018330 48B8-                           mov rax, sob_boolean_false
 32688 00018332 [0200000000000000] 
 32689                                  .L_end:
 32690 0001833A C9                              leave
 32691 0001833B C21800                          ret AND_KILL_FRAME(1)
 32692                                          
 32693                                  L_code_ptr_is_boolean_false:
 32694 0001833E C8000000                        enter 0, 0
 32695 00018342 48837D1801                      cmp COUNT, 1
 32696 00018347 0F85D70F0000                    jne L_error_arg_count_1
 32697 0001834D 488B4520                        mov rax, PARAM(0)
 32698 00018351 8A18                            mov bl, byte [rax]
 32699 00018353 80FB09                          cmp bl, T_boolean_false
 32700 00018356 750C                            jne .L_false
 32701 00018358 48B8-                           mov rax, sob_boolean_true
 32701 0001835A [0300000000000000] 
 32702 00018362 EB0A                            jmp .L_end
 32703                                  .L_false:
 32704 00018364 48B8-                           mov rax, sob_boolean_false
 32704 00018366 [0200000000000000] 
 32705                                  .L_end:
 32706 0001836E C9                              leave
 32707 0001836F C21800                          ret AND_KILL_FRAME(1)
 32708                                  
 32709                                  L_code_ptr_is_boolean_true:
 32710 00018372 C8000000                        enter 0, 0
 32711 00018376 48837D1801                      cmp COUNT, 1
 32712 0001837B 0F85A30F0000                    jne L_error_arg_count_1
 32713 00018381 488B4520                        mov rax, PARAM(0)
 32714 00018385 8A18                            mov bl, byte [rax]
 32715 00018387 80FB0A                          cmp bl, T_boolean_true
 32716 0001838A 750C                            jne .L_false
 32717 0001838C 48B8-                           mov rax, sob_boolean_true
 32717 0001838E [0300000000000000] 
 32718 00018396 EB0A                            jmp .L_end
 32719                                  .L_false:
 32720 00018398 48B8-                           mov rax, sob_boolean_false
 32720 0001839A [0200000000000000] 
 32721                                  .L_end:
 32722 000183A2 C9                              leave
 32723 000183A3 C21800                          ret AND_KILL_FRAME(1)
 32724                                  
 32725                                  L_code_ptr_is_number:
 32726 000183A6 C8000000                        enter 0, 0
 32727 000183AA 48837D1801                      cmp COUNT, 1
 32728 000183AF 0F856F0F0000                    jne L_error_arg_count_1
 32729 000183B5 488B4520                        mov rax, PARAM(0)
 32730 000183B9 8A18                            mov bl, byte [rax]
 32731 000183BB 80E310                          and bl, T_number
 32732 000183BE 740C                            jz .L_false
 32733 000183C0 48B8-                           mov rax, sob_boolean_true
 32733 000183C2 [0300000000000000] 
 32734 000183CA EB0A                            jmp .L_end
 32735                                  .L_false:
 32736 000183CC 48B8-                           mov rax, sob_boolean_false
 32736 000183CE [0200000000000000] 
 32737                                  .L_end:
 32738 000183D6 C9                              leave
 32739 000183D7 C21800                          ret AND_KILL_FRAME(1)
 32740                                          
 32741                                  L_code_ptr_is_collection:
 32742 000183DA C8000000                        enter 0, 0
 32743 000183DE 48837D1801                      cmp COUNT, 1
 32744 000183E3 0F853B0F0000                    jne L_error_arg_count_1
 32745 000183E9 488B4520                        mov rax, PARAM(0)
 32746 000183ED 8A18                            mov bl, byte [rax]
 32747 000183EF 80E320                          and bl, T_collection
 32748 000183F2 740C                            je .L_false
 32749 000183F4 48B8-                           mov rax, sob_boolean_true
 32749 000183F6 [0300000000000000] 
 32750 000183FE EB0A                            jmp .L_end
 32751                                  .L_false:
 32752 00018400 48B8-                           mov rax, sob_boolean_false
 32752 00018402 [0200000000000000] 
 32753                                  .L_end:
 32754 0001840A C9                              leave
 32755 0001840B C21800                          ret AND_KILL_FRAME(1)
 32756                                  
 32757                                  L_code_ptr_cons:
 32758 0001840E C8000000                        enter 0, 0
 32759 00018412 48837D1802                      cmp COUNT, 2
 32760 00018417 0F853C0F0000                    jne L_error_arg_count_2
 32761 0001841D BF11000000                      mov rdi, (1 + 8 + 8)
 32762 00018422 E82EF2FFFF                      call malloc
 32763 00018427 C60021                          mov byte [rax], T_pair
 32764 0001842A 488B5D20                        mov rbx, PARAM(0)
 32765 0001842E 48895801                        mov SOB_PAIR_CAR(rax), rbx
 32766 00018432 488B5D28                        mov rbx, PARAM(1)
 32767 00018436 48895809                        mov SOB_PAIR_CDR(rax), rbx
 32768 0001843A C9                              leave
 32769 0001843B C22000                          ret AND_KILL_FRAME(2)
 32770                                  
 32771                                  L_code_ptr_display_sexpr:
 32772 0001843E C8000000                        enter 0, 0
 32773 00018442 48837D1801                      cmp COUNT, 1
 32774 00018447 0F85D70E0000                    jne L_error_arg_count_1
 32775 0001844D 488B7D20                        mov rdi, PARAM(0)
 32776 00018451 E880F4FFFF                      call print_sexpr
 32777 00018456 48B8-                           mov rax, sob_void
 32777 00018458 [0000000000000000] 
 32778 00018460 C9                              leave
 32779 00018461 C21800                          ret AND_KILL_FRAME(1)
 32780                                  
 32781                                  L_code_ptr_write_char:
 32782 00018464 C8000000                        enter 0, 0
 32783 00018468 48837D1801                      cmp COUNT, 1
 32784 0001846D 0F85B10E0000                    jne L_error_arg_count_1
 32785 00018473 488B4520                        mov rax, PARAM(0)
 32786                                          assert_char(rax)
    53 00018477 803802              <1>  cmp byte [%1], %2
    54 0001847A 0F85780F0000        <1>  jne L_error_incorrect_type
 32787 00018480 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 32788 00018483 4825FF000000                    and rax, 255
 32789 00018489 48BF-                           mov rdi, fmt_char
 32789 0001848B [9D1A000000000000] 
 32790 00018493 4889C6                          mov rsi, rax
 32791 00018496 B800000000                      mov rax, 0
 32792                                          ENTER
    44 0001849B C8000000            <1>  enter 0, 0
    45 0001849F 4883E4F0            <1>  and rsp, ~15
 32793 000184A3 E8(00000000)                    call printf
 32794                                          LEAVE
    49 000184A8 C9                  <1>  leave
 32795 000184A9 48B8-                           mov rax, sob_void
 32795 000184AB [0000000000000000] 
 32796 000184B3 C9                              leave
 32797 000184B4 C21800                          ret AND_KILL_FRAME(1)
 32798                                  
 32799                                  L_code_ptr_car:
 32800 000184B7 C8000000                        enter 0, 0
 32801 000184BB 48837D1801                      cmp COUNT, 1
 32802 000184C0 0F855E0E0000                    jne L_error_arg_count_1
 32803 000184C6 488B4520                        mov rax, PARAM(0)
 32804                                          assert_pair(rax)
    53 000184CA 803821              <1>  cmp byte [%1], %2
    54 000184CD 0F85250F0000        <1>  jne L_error_incorrect_type
 32805 000184D3 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 32806 000184D7 C9                              leave
 32807 000184D8 C21800                          ret AND_KILL_FRAME(1)
 32808                                          
 32809                                  L_code_ptr_cdr:
 32810 000184DB C8000000                        enter 0, 0
 32811 000184DF 48837D1801                      cmp COUNT, 1
 32812 000184E4 0F853A0E0000                    jne L_error_arg_count_1
 32813 000184EA 488B4520                        mov rax, PARAM(0)
 32814                                          assert_pair(rax)
    53 000184EE 803821              <1>  cmp byte [%1], %2
    54 000184F1 0F85010F0000        <1>  jne L_error_incorrect_type
 32815 000184F7 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 32816 000184FB C9                              leave
 32817 000184FC C21800                          ret AND_KILL_FRAME(1)
 32818                                          
 32819                                  L_code_ptr_string_length:
 32820 000184FF C8000000                        enter 0, 0
 32821 00018503 48837D1801                      cmp COUNT, 1
 32822 00018508 0F85160E0000                    jne L_error_arg_count_1
 32823 0001850E 488B4520                        mov rax, PARAM(0)
 32824                                          assert_string(rax)
    53 00018512 803803              <1>  cmp byte [%1], %2
    54 00018515 0F85DD0E0000        <1>  jne L_error_incorrect_type
 32825 0001851B 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 32826 0001851F E84F0D0000                      call make_integer
 32827 00018524 C9                              leave
 32828 00018525 C21800                          ret AND_KILL_FRAME(1)
 32829                                  
 32830                                  L_code_ptr_vector_length:
 32831 00018528 C8000000                        enter 0, 0
 32832 0001852C 48837D1801                      cmp COUNT, 1
 32833 00018531 0F85ED0D0000                    jne L_error_arg_count_1
 32834 00018537 488B4520                        mov rax, PARAM(0)
 32835                                          assert_vector(rax)
    53 0001853B 803822              <1>  cmp byte [%1], %2
    54 0001853E 0F85B40E0000        <1>  jne L_error_incorrect_type
 32836 00018544 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 32837 00018548 E8260D0000                      call make_integer
 32838 0001854D C9                              leave
 32839 0001854E C21800                          ret AND_KILL_FRAME(1)
 32840                                  
 32841                                  L_code_ptr_real_to_integer:
 32842 00018551 C8000000                        enter 0, 0
 32843 00018555 48837D1801                      cmp COUNT, 1
 32844 0001855A 0F85C40D0000                    jne L_error_arg_count_1
 32845 00018560 488B5D20                        mov rbx, PARAM(0)
 32846                                          assert_real(rbx)
    53 00018564 803B13              <1>  cmp byte [%1], %2
    54 00018567 0F858B0E0000        <1>  jne L_error_incorrect_type
 32847 0001856D F20F104301                      movsd xmm0, qword [rbx + 1]
 32848 00018572 F2480F2CF8                      cvttsd2si rdi, xmm0
 32849 00018577 E8F70C0000                      call make_integer
 32850 0001857C C9                              leave
 32851 0001857D C21800                          ret AND_KILL_FRAME(1)
 32852                                  
 32853                                  L_code_ptr_exit:
 32854 00018580 C8000000                        enter 0, 0
 32855 00018584 48837D1800                      cmp COUNT, 0
 32856 00018589 0F85600D0000                    jne L_error_arg_count_0
 32857 0001858F B800000000                      mov rax, 0
 32858 00018594 E8(00000000)                    call exit
 32859                                  
 32860                                  L_code_ptr_integer_to_real:
 32861 00018599 C8000000                        enter 0, 0
 32862 0001859D 48837D1801                      cmp COUNT, 1
 32863 000185A2 0F857C0D0000                    jne L_error_arg_count_1
 32864 000185A8 488B4520                        mov rax, PARAM(0)
 32865                                          assert_integer(rax)
    53 000185AC 803811              <1>  cmp byte [%1], %2
    54 000185AF 0F85430E0000        <1>  jne L_error_incorrect_type
 32866 000185B5 FF7001                          push qword [rax + 1]
 32867 000185B8 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 32868 000185BE E8980C0000                      call make_real
 32869 000185C3 C9                              leave
 32870 000185C4 C21800                          ret AND_KILL_FRAME(1)
 32871                                  
 32872                                  L_code_ptr_fraction_to_real:
 32873 000185C7 C8000000                        enter 0, 0
 32874 000185CB 48837D1801                      cmp COUNT, 1
 32875 000185D0 0F854E0D0000                    jne L_error_arg_count_1
 32876 000185D6 488B4520                        mov rax, PARAM(0)
 32877                                          assert_fraction(rax)
    53 000185DA 803812              <1>  cmp byte [%1], %2
    54 000185DD 0F85150E0000        <1>  jne L_error_incorrect_type
 32878 000185E3 FF7001                          push qword [rax + 1]
 32879 000185E6 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 32880 000185EC FF7009                          push qword [rax + 1 + 8]
 32881 000185EF F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 32882 000185F5 F20F5EC1                        divsd xmm0, xmm1
 32883 000185F9 E85D0C0000                      call make_real
 32884 000185FE C9                              leave
 32885 000185FF C21800                          ret AND_KILL_FRAME(1)
 32886                                  
 32887                                  L_code_ptr_char_to_integer:
 32888 00018602 C8000000                        enter 0, 0
 32889 00018606 48837D1801                      cmp COUNT, 1
 32890 0001860B 0F85130D0000                    jne L_error_arg_count_1
 32891 00018611 488B4520                        mov rax, PARAM(0)
 32892                                          assert_char(rax)
    53 00018615 803802              <1>  cmp byte [%1], %2
    54 00018618 0F85DA0D0000        <1>  jne L_error_incorrect_type
 32893 0001861E 8A4001                          mov al, byte [rax + 1]
 32894 00018621 4825FF000000                    and rax, 255
 32895 00018627 4889C7                          mov rdi, rax
 32896 0001862A E8440C0000                      call make_integer
 32897 0001862F C9                              leave
 32898 00018630 C21800                          ret AND_KILL_FRAME(1)
 32899                                  
 32900                                  L_code_ptr_integer_to_fraction:
 32901 00018633 C8000000                        enter 0, 0
 32902 00018637 48837D1801                      cmp COUNT, 1
 32903 0001863C 0F85E20C0000                    jne L_error_arg_count_1
 32904 00018642 4C8B4520                        mov r8, PARAM(0)
 32905                                          assert_integer(r8)
    53 00018646 41803811            <1>  cmp byte [%1], %2
    54 0001864A 0F85A80D0000        <1>  jne L_error_incorrect_type
 32906 00018650 BF11000000                      mov rdi, (1 + 8 + 8)
 32907 00018655 E8FBEFFFFF                      call malloc
 32908 0001865A 498B5801                        mov rbx, qword [r8 + 1]
 32909 0001865E C60012                          mov byte [rax], T_fraction
 32910 00018661 48895801                        mov qword [rax + 1], rbx
 32911 00018665 48C7400901000000                mov qword [rax + 1 + 8], 1
 32912 0001866D C9                              leave
 32913 0001866E C21800                          ret AND_KILL_FRAME(1)
 32914                                  
 32915                                  L_code_ptr_integer_to_char:
 32916 00018671 C8000000                        enter 0, 0
 32917 00018675 48837D1801                      cmp COUNT, 1
 32918 0001867A 0F85A40C0000                    jne L_error_arg_count_1
 32919 00018680 488B4520                        mov rax, PARAM(0)
 32920                                          assert_integer(rax)
    53 00018684 803811              <1>  cmp byte [%1], %2
    54 00018687 0F856B0D0000        <1>  jne L_error_incorrect_type
 32921 0001868D 488B5801                        mov rbx, qword [rax + 1]
 32922 00018691 4883FB00                        cmp rbx, 0
 32923 00018695 0F8EF20B0000                    jle L_error_integer_range
 32924 0001869B 4881FB00010000                  cmp rbx, 256
 32925 000186A2 0F8DE50B0000                    jge L_error_integer_range
 32926 000186A8 BF02000000                      mov rdi, (1 + 1)
 32927 000186AD E8A3EFFFFF                      call malloc
 32928 000186B2 C60002                          mov byte [rax], T_char
 32929 000186B5 885801                          mov byte [rax + 1], bl
 32930 000186B8 C9                              leave
 32931 000186B9 C21800                          ret AND_KILL_FRAME(1)
 32932                                  
 32933                                  L_code_ptr_trng:
 32934 000186BC C8000000                        enter 0, 0
 32935 000186C0 48837D1800                      cmp COUNT, 0
 32936 000186C5 0F85240C0000                    jne L_error_arg_count_0
 32937 000186CB 480FC7F7                        rdrand rdi
 32938 000186CF 48D1EF                          shr rdi, 1
 32939 000186D2 E89C0B0000                      call make_integer
 32940 000186D7 C9                              leave
 32941 000186D8 C21000                          ret AND_KILL_FRAME(0)
 32942                                  
 32943                                  L_code_ptr_is_zero:
 32944 000186DB C8000000                        enter 0, 0
 32945 000186DF 48837D1801                      cmp COUNT, 1
 32946 000186E4 0F853A0C0000                    jne L_error_arg_count_1
 32947 000186EA 488B4520                        mov rax, PARAM(0)
 32948 000186EE 803811                          cmp byte [rax], T_integer
 32949 000186F1 740F                            je .L_integer
 32950 000186F3 803812                          cmp byte [rax], T_fraction
 32951 000186F6 7413                            je .L_fraction
 32952 000186F8 803813                          cmp byte [rax], T_real
 32953 000186FB 7417                            je .L_real
 32954 000186FD E9F60C0000                      jmp L_error_incorrect_type
 32955                                  .L_integer:
 32956 00018702 4883780100                      cmp qword [rax + 1], 0
 32957 00018707 7429                            je .L_zero
 32958 00018709 EB1B                            jmp .L_not_zero
 32959                                  .L_fraction:
 32960 0001870B 4883780100                      cmp qword [rax + 1], 0
 32961 00018710 7420                            je .L_zero
 32962 00018712 EB12                            jmp .L_not_zero
 32963                                  .L_real:
 32964 00018714 660FEFC0                        pxor xmm0, xmm0
 32965 00018718 FF7001                          push qword [rax + 1]
 32966 0001871B F20F100C24                      movsd xmm1, qword [rsp]
 32967 00018720 660F2EC1                        ucomisd xmm0, xmm1
 32968 00018724 740C                            je .L_zero
 32969                                  .L_not_zero:
 32970 00018726 48B8-                           mov rax, sob_boolean_false
 32970 00018728 [0200000000000000] 
 32971 00018730 EB0A                            jmp .L_end
 32972                                  .L_zero:
 32973 00018732 48B8-                           mov rax, sob_boolean_true
 32973 00018734 [0300000000000000] 
 32974                                  .L_end:
 32975 0001873C C9                              leave
 32976 0001873D C21800                          ret AND_KILL_FRAME(1)
 32977                                  
 32978                                  L_code_ptr_is_integer:
 32979 00018740 C8000000                        enter 0, 0
 32980 00018744 48837D1801                      cmp COUNT, 1
 32981 00018749 0F85D50B0000                    jne L_error_arg_count_1
 32982 0001874F 488B4520                        mov rax, PARAM(0)
 32983 00018753 803811                          cmp byte [rax], T_integer
 32984 00018756 750C                            jne .L_false
 32985 00018758 48B8-                           mov rax, sob_boolean_true
 32985 0001875A [0300000000000000] 
 32986 00018762 EB0A                            jmp .L_exit
 32987                                  .L_false:
 32988 00018764 48B8-                           mov rax, sob_boolean_false
 32988 00018766 [0200000000000000] 
 32989                                  .L_exit:
 32990 0001876E C9                              leave
 32991 0001876F C21800                          ret AND_KILL_FRAME(1)
 32992                                  
 32993                                  L_code_ptr_raw_bin_add_rr:
 32994 00018772 C8000000                        enter 0, 0
 32995 00018776 48837D1802                      cmp COUNT, 2
 32996 0001877B 0F85D80B0000                    jne L_error_arg_count_2
 32997 00018781 488B5D20                        mov rbx, PARAM(0)
 32998                                          assert_real(rbx)
    53 00018785 803B13              <1>  cmp byte [%1], %2
    54 00018788 0F856A0C0000        <1>  jne L_error_incorrect_type
 32999 0001878E 488B4D28                        mov rcx, PARAM(1)
 33000                                          assert_real(rcx)
    53 00018792 803913              <1>  cmp byte [%1], %2
    54 00018795 0F855D0C0000        <1>  jne L_error_incorrect_type
 33001 0001879B F20F104301                      movsd xmm0, qword [rbx + 1]
 33002 000187A0 F20F104901                      movsd xmm1, qword [rcx + 1]
 33003 000187A5 F20F58C1                        addsd xmm0, xmm1
 33004 000187A9 E8AD0A0000                      call make_real
 33005 000187AE C9                              leave
 33006 000187AF C22000                          ret AND_KILL_FRAME(2)
 33007                                  
 33008                                  L_code_ptr_raw_bin_sub_rr:
 33009 000187B2 C8000000                        enter 0, 0
 33010 000187B6 48837D1802                      cmp COUNT, 2
 33011 000187BB 0F85980B0000                    jne L_error_arg_count_2
 33012 000187C1 488B5D20                        mov rbx, PARAM(0)
 33013                                          assert_real(rbx)
    53 000187C5 803B13              <1>  cmp byte [%1], %2
    54 000187C8 0F852A0C0000        <1>  jne L_error_incorrect_type
 33014 000187CE 488B4D28                        mov rcx, PARAM(1)
 33015                                          assert_real(rcx)
    53 000187D2 803913              <1>  cmp byte [%1], %2
    54 000187D5 0F851D0C0000        <1>  jne L_error_incorrect_type
 33016 000187DB F20F104301                      movsd xmm0, qword [rbx + 1]
 33017 000187E0 F20F104901                      movsd xmm1, qword [rcx + 1]
 33018 000187E5 F20F5CC1                        subsd xmm0, xmm1
 33019 000187E9 E86D0A0000                      call make_real
 33020 000187EE C9                              leave
 33021 000187EF C22000                          ret AND_KILL_FRAME(2)
 33022                                  
 33023                                  L_code_ptr_raw_bin_mul_rr:
 33024 000187F2 C8000000                        enter 0, 0
 33025 000187F6 48837D1802                      cmp COUNT, 2
 33026 000187FB 0F85580B0000                    jne L_error_arg_count_2
 33027 00018801 488B5D20                        mov rbx, PARAM(0)
 33028                                          assert_real(rbx)
    53 00018805 803B13              <1>  cmp byte [%1], %2
    54 00018808 0F85EA0B0000        <1>  jne L_error_incorrect_type
 33029 0001880E 488B4D28                        mov rcx, PARAM(1)
 33030                                          assert_real(rcx)
    53 00018812 803913              <1>  cmp byte [%1], %2
    54 00018815 0F85DD0B0000        <1>  jne L_error_incorrect_type
 33031 0001881B F20F104301                      movsd xmm0, qword [rbx + 1]
 33032 00018820 F20F104901                      movsd xmm1, qword [rcx + 1]
 33033 00018825 F20F59C1                        mulsd xmm0, xmm1
 33034 00018829 E82D0A0000                      call make_real
 33035 0001882E C9                              leave
 33036 0001882F C22000                          ret AND_KILL_FRAME(2)
 33037                                  
 33038                                  L_code_ptr_raw_bin_div_rr:
 33039 00018832 C8000000                        enter 0, 0
 33040 00018836 48837D1802                      cmp COUNT, 2
 33041 0001883B 0F85180B0000                    jne L_error_arg_count_2
 33042 00018841 488B5D20                        mov rbx, PARAM(0)
 33043                                          assert_real(rbx)
    53 00018845 803B13              <1>  cmp byte [%1], %2
    54 00018848 0F85AA0B0000        <1>  jne L_error_incorrect_type
 33044 0001884E 488B4D28                        mov rcx, PARAM(1)
 33045                                          assert_real(rcx)
    53 00018852 803913              <1>  cmp byte [%1], %2
    54 00018855 0F859D0B0000        <1>  jne L_error_incorrect_type
 33046 0001885B F20F104301                      movsd xmm0, qword [rbx + 1]
 33047 00018860 F20F104901                      movsd xmm1, qword [rcx + 1]
 33048 00018865 660FEFD2                        pxor xmm2, xmm2
 33049 00018869 660F2ECA                        ucomisd xmm1, xmm2
 33050 0001886D 0F84B60B0000                    je L_error_division_by_zero
 33051 00018873 F20F5EC1                        divsd xmm0, xmm1
 33052 00018877 E8DF090000                      call make_real
 33053 0001887C C9                              leave
 33054 0001887D C22000                          ret AND_KILL_FRAME(2)
 33055                                  
 33056                                  L_code_ptr_raw_bin_add_zz:
 33057 00018880 C8000000                	enter 0, 0
 33058 00018884 48837D1802              	cmp COUNT, 2
 33059 00018889 0F85CA0A0000            	jne L_error_arg_count_2
 33060 0001888F 4C8B4520                	mov r8, PARAM(0)
 33061                                  	assert_integer(r8)
    53 00018893 41803811            <1>  cmp byte [%1], %2
    54 00018897 0F855B0B0000        <1>  jne L_error_incorrect_type
 33062 0001889D 4C8B4D28                	mov r9, PARAM(1)
 33063                                  	assert_integer(r9)
    53 000188A1 41803911            <1>  cmp byte [%1], %2
    54 000188A5 0F854D0B0000        <1>  jne L_error_incorrect_type
 33064 000188AB 498B7801                	mov rdi, qword [r8 + 1]
 33065 000188AF 49037901                	add rdi, qword [r9 + 1]
 33066 000188B3 E8BB090000              	call make_integer
 33067 000188B8 C9                      	leave
 33068 000188B9 C22000                  	ret AND_KILL_FRAME(2)
 33069                                  
 33070                                  L_code_ptr_raw_bin_add_qq:
 33071 000188BC C8000000                        enter 0, 0
 33072 000188C0 48837D1802                      cmp COUNT, 2
 33073 000188C5 0F858E0A0000                    jne L_error_arg_count_2
 33074 000188CB 4C8B4520                        mov r8, PARAM(0)
 33075                                          assert_fraction(r8)
    53 000188CF 41803812            <1>  cmp byte [%1], %2
    54 000188D3 0F851F0B0000        <1>  jne L_error_incorrect_type
 33076 000188D9 4C8B4D28                        mov r9, PARAM(1)
 33077                                          assert_fraction(r9)
    53 000188DD 41803912            <1>  cmp byte [%1], %2
    54 000188E1 0F85110B0000        <1>  jne L_error_incorrect_type
 33078 000188E7 498B4001                        mov rax, qword [r8 + 1] ; num1
 33079 000188EB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 33080 000188EF 4899                            cqo
 33081 000188F1 48F7EB                          imul rbx
 33082 000188F4 4889C6                          mov rsi, rax
 33083 000188F7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33084 000188FB 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 33085 000188FF 4899                            cqo
 33086 00018901 48F7EB                          imul rbx
 33087 00018904 4801C6                          add rsi, rax
 33088 00018907 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33089 0001890B 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 33090 0001890F 4899                            cqo
 33091 00018911 48F7EB                          imul rbx
 33092 00018914 4889C7                          mov rdi, rax
 33093 00018917 E8DE010000                      call normalize_fraction
 33094 0001891C C9                              leave
 33095 0001891D C22000                          ret AND_KILL_FRAME(2)
 33096                                  
 33097                                  L_code_ptr_raw_bin_sub_zz:
 33098 00018920 C8000000                	enter 0, 0
 33099 00018924 48837D1802              	cmp COUNT, 2
 33100 00018929 0F852A0A0000            	jne L_error_arg_count_2
 33101 0001892F 4C8B4520                	mov r8, PARAM(0)
 33102                                  	assert_integer(r8)
    53 00018933 41803811            <1>  cmp byte [%1], %2
    54 00018937 0F85BB0A0000        <1>  jne L_error_incorrect_type
 33103 0001893D 4C8B4D28                	mov r9, PARAM(1)
 33104                                  	assert_integer(r9)
    53 00018941 41803911            <1>  cmp byte [%1], %2
    54 00018945 0F85AD0A0000        <1>  jne L_error_incorrect_type
 33105 0001894B 498B7801                	mov rdi, qword [r8 + 1]
 33106 0001894F 492B7901                	sub rdi, qword [r9 + 1]
 33107 00018953 E81B090000              	call make_integer
 33108 00018958 C9                      	leave
 33109 00018959 C22000                  	ret AND_KILL_FRAME(2)
 33110                                  
 33111                                  L_code_ptr_raw_bin_sub_qq:
 33112 0001895C C8000000                        enter 0, 0
 33113 00018960 48837D1802                      cmp COUNT, 2
 33114 00018965 0F85EE090000                    jne L_error_arg_count_2
 33115 0001896B 4C8B4520                        mov r8, PARAM(0)
 33116                                          assert_fraction(r8)
    53 0001896F 41803812            <1>  cmp byte [%1], %2
    54 00018973 0F857F0A0000        <1>  jne L_error_incorrect_type
 33117 00018979 4C8B4D28                        mov r9, PARAM(1)
 33118                                          assert_fraction(r9)
    53 0001897D 41803912            <1>  cmp byte [%1], %2
    54 00018981 0F85710A0000        <1>  jne L_error_incorrect_type
 33119 00018987 498B4001                        mov rax, qword [r8 + 1] ; num1
 33120 0001898B 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 33121 0001898F 4899                            cqo
 33122 00018991 48F7EB                          imul rbx
 33123 00018994 4889C6                          mov rsi, rax
 33124 00018997 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33125 0001899B 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 33126 0001899F 4899                            cqo
 33127 000189A1 48F7EB                          imul rbx
 33128 000189A4 4829C6                          sub rsi, rax
 33129 000189A7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33130 000189AB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 33131 000189AF 4899                            cqo
 33132 000189B1 48F7EB                          imul rbx
 33133 000189B4 4889C7                          mov rdi, rax
 33134 000189B7 E83E010000                      call normalize_fraction
 33135 000189BC C9                              leave
 33136 000189BD C22000                          ret AND_KILL_FRAME(2)
 33137                                  
 33138                                  L_code_ptr_raw_bin_mul_zz:
 33139 000189C0 C8000000                	enter 0, 0
 33140 000189C4 48837D1802              	cmp COUNT, 2
 33141 000189C9 0F858A090000            	jne L_error_arg_count_2
 33142 000189CF 4C8B4520                	mov r8, PARAM(0)
 33143                                  	assert_integer(r8)
    53 000189D3 41803811            <1>  cmp byte [%1], %2
    54 000189D7 0F851B0A0000        <1>  jne L_error_incorrect_type
 33144 000189DD 4C8B4D28                	mov r9, PARAM(1)
 33145                                  	assert_integer(r9)
    53 000189E1 41803911            <1>  cmp byte [%1], %2
    54 000189E5 0F850D0A0000        <1>  jne L_error_incorrect_type
 33146 000189EB 4899                    	cqo
 33147 000189ED 498B4001                	mov rax, qword [r8 + 1]
 33148 000189F1 49F76101                	mul qword [r9 + 1]
 33149 000189F5 4889C7                  	mov rdi, rax
 33150 000189F8 E876080000              	call make_integer
 33151 000189FD C9                      	leave
 33152 000189FE C22000                  	ret AND_KILL_FRAME(2)
 33153                                  
 33154                                  L_code_ptr_raw_bin_mul_qq:
 33155 00018A01 C8000000                        enter 0, 0
 33156 00018A05 48837D1802                      cmp COUNT, 2
 33157 00018A0A 0F8549090000                    jne L_error_arg_count_2
 33158 00018A10 4C8B4520                        mov r8, PARAM(0)
 33159                                          assert_fraction(r8)
    53 00018A14 41803812            <1>  cmp byte [%1], %2
    54 00018A18 0F85DA090000        <1>  jne L_error_incorrect_type
 33160 00018A1E 4C8B4D28                        mov r9, PARAM(1)
 33161                                          assert_fraction(r9)
    53 00018A22 41803912            <1>  cmp byte [%1], %2
    54 00018A26 0F85CC090000        <1>  jne L_error_incorrect_type
 33162 00018A2C 498B4001                        mov rax, qword [r8 + 1] ; num1
 33163 00018A30 498B5901                        mov rbx, qword [r9 + 1] ; num2
 33164 00018A34 4899                            cqo
 33165 00018A36 48F7EB                          imul rbx
 33166 00018A39 4889C6                          mov rsi, rax
 33167 00018A3C 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33168 00018A40 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 33169 00018A44 4899                            cqo
 33170 00018A46 48F7EB                          imul rbx
 33171 00018A49 4889C7                          mov rdi, rax
 33172 00018A4C E8A9000000                      call normalize_fraction
 33173 00018A51 C9                              leave
 33174 00018A52 C22000                          ret AND_KILL_FRAME(2)
 33175                                          
 33176                                  L_code_ptr_raw_bin_div_zz:
 33177 00018A55 C8000000                	enter 0, 0
 33178 00018A59 48837D1802              	cmp COUNT, 2
 33179 00018A5E 0F85F5080000            	jne L_error_arg_count_2
 33180 00018A64 4C8B4520                	mov r8, PARAM(0)
 33181                                  	assert_integer(r8)
    53 00018A68 41803811            <1>  cmp byte [%1], %2
    54 00018A6C 0F8586090000        <1>  jne L_error_incorrect_type
 33182 00018A72 4C8B4D28                	mov r9, PARAM(1)
 33183                                  	assert_integer(r9)
    53 00018A76 41803911            <1>  cmp byte [%1], %2
    54 00018A7A 0F8578090000        <1>  jne L_error_incorrect_type
 33184 00018A80 498B7901                	mov rdi, qword [r9 + 1]
 33185 00018A84 4883FF00                	cmp rdi, 0
 33186 00018A88 0F849B090000            	je L_error_division_by_zero
 33187 00018A8E 498B7001                	mov rsi, qword [r8 + 1]
 33188 00018A92 E863000000              	call normalize_fraction
 33189 00018A97 C9                      	leave
 33190 00018A98 C22000                  	ret AND_KILL_FRAME(2)
 33191                                  
 33192                                  L_code_ptr_raw_bin_div_qq:
 33193 00018A9B C8000000                        enter 0, 0
 33194 00018A9F 48837D1802                      cmp COUNT, 2
 33195 00018AA4 0F85AF080000                    jne L_error_arg_count_2
 33196 00018AAA 4C8B4520                        mov r8, PARAM(0)
 33197                                          assert_fraction(r8)
    53 00018AAE 41803812            <1>  cmp byte [%1], %2
    54 00018AB2 0F8540090000        <1>  jne L_error_incorrect_type
 33198 00018AB8 4C8B4D28                        mov r9, PARAM(1)
 33199                                          assert_fraction(r9)
    53 00018ABC 41803912            <1>  cmp byte [%1], %2
    54 00018AC0 0F8532090000        <1>  jne L_error_incorrect_type
 33200 00018AC6 4983790100                      cmp qword [r9 + 1], 0
 33201 00018ACB 0F8458090000                    je L_error_division_by_zero
 33202 00018AD1 498B4001                        mov rax, qword [r8 + 1] ; num1
 33203 00018AD5 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 33204 00018AD9 4899                            cqo
 33205 00018ADB 48F7EB                          imul rbx
 33206 00018ADE 4889C6                          mov rsi, rax
 33207 00018AE1 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 33208 00018AE5 498B5901                        mov rbx, qword [r9 + 1] ; num2
 33209 00018AE9 4899                            cqo
 33210 00018AEB 48F7EB                          imul rbx
 33211 00018AEE 4889C7                          mov rdi, rax
 33212 00018AF1 E804000000                      call normalize_fraction
 33213 00018AF6 C9                              leave
 33214 00018AF7 C22000                          ret AND_KILL_FRAME(2)
 33215                                          
 33216                                  normalize_fraction:
 33217 00018AFA 56                              push rsi
 33218 00018AFB 57                              push rdi
 33219 00018AFC E859000000                      call gcd
 33220 00018B01 4889C3                          mov rbx, rax
 33221 00018B04 58                              pop rax
 33222 00018B05 4899                            cqo
 33223 00018B07 48F7FB                          idiv rbx
 33224 00018B0A 4989C0                          mov r8, rax
 33225 00018B0D 58                              pop rax
 33226 00018B0E 4899                            cqo
 33227 00018B10 48F7FB                          idiv rbx
 33228 00018B13 4989C1                          mov r9, rax
 33229 00018B16 4983F900                        cmp r9, 0
 33230 00018B1A 741C                            je .L_zero
 33231 00018B1C 4983F801                        cmp r8, 1
 33232 00018B20 7421                            je .L_int
 33233 00018B22 BF11000000                      mov rdi, (1 + 8 + 8)
 33234 00018B27 E829EBFFFF                      call malloc
 33235 00018B2C C60012                          mov byte [rax], T_fraction
 33236 00018B2F 4C894801                        mov qword [rax + 1], r9
 33237 00018B33 4C894009                        mov qword [rax + 1 + 8], r8
 33238 00018B37 C3                              ret
 33239                                  .L_zero:
 33240 00018B38 BF00000000                      mov rdi, 0
 33241 00018B3D E831070000                      call make_integer
 33242 00018B42 C3                              ret
 33243                                  .L_int:
 33244 00018B43 4C89CF                          mov rdi, r9
 33245 00018B46 E828070000                      call make_integer
 33246 00018B4B C3                              ret
 33247                                  
 33248                                  iabs:
 33249 00018B4C 4889F8                          mov rax, rdi
 33250 00018B4F 4883F800                        cmp rax, 0
 33251 00018B53 7C01                            jl .Lneg
 33252 00018B55 C3                              ret
 33253                                  .Lneg:
 33254 00018B56 48F7D8                          neg rax
 33255 00018B59 C3                              ret
 33256                                  
 33257                                  gcd:
 33258 00018B5A E8EDFFFFFF                      call iabs
 33259 00018B5F 4889C3                          mov rbx, rax
 33260 00018B62 4889F7                          mov rdi, rsi
 33261 00018B65 E8E2FFFFFF                      call iabs
 33262 00018B6A 4883F800                        cmp rax, 0
 33263 00018B6E 7502                            jne .L0
 33264 00018B70 4893                            xchg rax, rbx
 33265                                  .L0:
 33266 00018B72 4883FB00                        cmp rbx, 0
 33267 00018B76 740C                            je .L1
 33268 00018B78 4899                            cqo
 33269 00018B7A 48F7F3                          div rbx
 33270 00018B7D 4889D0                          mov rax, rdx
 33271 00018B80 4893                            xchg rax, rbx
 33272 00018B82 EBEE                            jmp .L0
 33273                                  .L1:
 33274 00018B84 C3                              ret
 33275                                  
 33276                                  L_code_ptr_error:
 33277 00018B85 C8000000                        enter 0, 0
 33278 00018B89 48837D1802                      cmp COUNT, 2
 33279 00018B8E 0F85C5070000                    jne L_error_arg_count_2
 33280 00018B94 488B7520                        mov rsi, PARAM(0)
 33281                                          assert_interned_symbol(rsi)
    53 00018B98 803E41              <1>  cmp byte [%1], %2
    54 00018B9B 0F8557080000        <1>  jne L_error_incorrect_type
 33282 00018BA1 488B7528                        mov rsi, PARAM(1)
 33283                                          assert_string(rsi)
    53 00018BA5 803E03              <1>  cmp byte [%1], %2
    54 00018BA8 0F854A080000        <1>  jne L_error_incorrect_type
 33284 00018BAE 48BF-                           mov rdi, fmt_scheme_error_part_1
 33284 00018BB0 [FB1B000000000000] 
 33285 00018BB8 B800000000                      mov rax, 0
 33286                                          ENTER
    44 00018BBD C8000000            <1>  enter 0, 0
    45 00018BC1 4883E4F0            <1>  and rsp, ~15
 33287 00018BC5 E8(00000000)                    call printf
 33288                                          LEAVE
    49 00018BCA C9                  <1>  leave
 33289 00018BCB 488B7D20                        mov rdi, PARAM(0)
 33290 00018BCF E802EDFFFF                      call print_sexpr
 33291 00018BD4 48BF-                           mov rdi, fmt_scheme_error_part_2
 33291 00018BD6 [0F1C000000000000] 
 33292 00018BDE B800000000                      mov rax, 0
 33293                                          ENTER
    44 00018BE3 C8000000            <1>  enter 0, 0
    45 00018BE7 4883E4F0            <1>  and rsp, ~15
 33294 00018BEB E8(00000000)                    call printf
 33295                                          LEAVE
    49 00018BF0 C9                  <1>  leave
 33296 00018BF1 488B4528                        mov rax, PARAM(1)       ; sob_string
 33297 00018BF5 BE01000000                      mov rsi, 1              ; size = 1 byte
 33298 00018BFA 488B5001                        mov rdx, qword [rax + 1] ; length
 33299 00018BFE 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 33300 00018C02 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 33301                                  	ENTER
    44 00018C0A C8000000            <1>  enter 0, 0
    45 00018C0E 4883E4F0            <1>  and rsp, ~15
 33302 00018C12 E8(00000000)                    call fwrite
 33303                                  	LEAVE
    49 00018C17 C9                  <1>  leave
 33304 00018C18 48BF-                           mov rdi, fmt_scheme_error_part_3
 33304 00018C1A [511C000000000000] 
 33305 00018C22 B800000000                      mov rax, 0
 33306                                          ENTER
    44 00018C27 C8000000            <1>  enter 0, 0
    45 00018C2B 4883E4F0            <1>  and rsp, ~15
 33307 00018C2F E8(00000000)                    call printf
 33308                                          LEAVE
    49 00018C34 C9                  <1>  leave
 33309 00018C35 48C7C0F7FFFFFF                  mov rax, -9
 33310 00018C3C E8(00000000)                    call exit
 33311                                  
 33312                                  L_code_ptr_raw_less_than_rr:
 33313 00018C41 C8000000                        enter 0, 0
 33314 00018C45 48837D1802                      cmp COUNT, 2
 33315 00018C4A 0F8509070000                    jne L_error_arg_count_2
 33316 00018C50 488B7520                        mov rsi, PARAM(0)
 33317                                          assert_real(rsi)
    53 00018C54 803E13              <1>  cmp byte [%1], %2
    54 00018C57 0F859B070000        <1>  jne L_error_incorrect_type
 33318 00018C5D 488B7D28                        mov rdi, PARAM(1)
 33319                                          assert_real(rdi)
    53 00018C61 803F13              <1>  cmp byte [%1], %2
    54 00018C64 0F858E070000        <1>  jne L_error_incorrect_type
 33320 00018C6A F20F104601                      movsd xmm0, qword [rsi + 1]
 33321 00018C6F F20F104F01                      movsd xmm1, qword [rdi + 1]
 33322 00018C74 660F2FC1                        comisd xmm0, xmm1
 33323 00018C78 730C                            jae .L_false
 33324 00018C7A 48B8-                           mov rax, sob_boolean_true
 33324 00018C7C [0300000000000000] 
 33325 00018C84 EB0A                            jmp .L_exit
 33326                                  .L_false:
 33327 00018C86 48B8-                           mov rax, sob_boolean_false
 33327 00018C88 [0200000000000000] 
 33328                                  .L_exit:
 33329 00018C90 C9                              leave
 33330 00018C91 C22000                          ret AND_KILL_FRAME(2)
 33331                                          
 33332                                  L_code_ptr_raw_less_than_zz:
 33333 00018C94 C8000000                	enter 0, 0
 33334 00018C98 48837D1802              	cmp COUNT, 2
 33335 00018C9D 0F85B6060000            	jne L_error_arg_count_2
 33336 00018CA3 4C8B4520                	mov r8, PARAM(0)
 33337                                  	assert_integer(r8)
    53 00018CA7 41803811            <1>  cmp byte [%1], %2
    54 00018CAB 0F8547070000        <1>  jne L_error_incorrect_type
 33338 00018CB1 4C8B4D28                	mov r9, PARAM(1)
 33339                                  	assert_integer(r9)
    53 00018CB5 41803911            <1>  cmp byte [%1], %2
    54 00018CB9 0F8539070000        <1>  jne L_error_incorrect_type
 33340 00018CBF 498B7801                	mov rdi, qword [r8 + 1]
 33341 00018CC3 493B7901                	cmp rdi, qword [r9 + 1]
 33342 00018CC7 7D0C                    	jge .L_false
 33343 00018CC9 48B8-                   	mov rax, sob_boolean_true
 33343 00018CCB [0300000000000000] 
 33344 00018CD3 EB0A                    	jmp .L_exit
 33345                                  .L_false:
 33346 00018CD5 48B8-                   	mov rax, sob_boolean_false
 33346 00018CD7 [0200000000000000] 
 33347                                  .L_exit:
 33348 00018CDF C9                      	leave
 33349 00018CE0 C22000                  	ret AND_KILL_FRAME(2)
 33350                                  
 33351                                  L_code_ptr_raw_less_than_qq:
 33352 00018CE3 C8000000                        enter 0, 0
 33353 00018CE7 48837D1802                      cmp COUNT, 2
 33354 00018CEC 0F8567060000                    jne L_error_arg_count_2
 33355 00018CF2 488B7520                        mov rsi, PARAM(0)
 33356                                          assert_fraction(rsi)
    53 00018CF6 803E12              <1>  cmp byte [%1], %2
    54 00018CF9 0F85F9060000        <1>  jne L_error_incorrect_type
 33357 00018CFF 488B7D28                        mov rdi, PARAM(1)
 33358                                          assert_fraction(rdi)
    53 00018D03 803F12              <1>  cmp byte [%1], %2
    54 00018D06 0F85EC060000        <1>  jne L_error_incorrect_type
 33359 00018D0C 488B4601                        mov rax, qword [rsi + 1] ; num1
 33360 00018D10 4899                            cqo
 33361 00018D12 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 33362 00018D16 4889C1                          mov rcx, rax
 33363 00018D19 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 33364 00018D1D 4899                            cqo
 33365 00018D1F 48F76F01                        imul qword [rdi + 1]          ; num2
 33366 00018D23 4829C1                          sub rcx, rax
 33367 00018D26 7D0C                            jge .L_false
 33368 00018D28 48B8-                           mov rax, sob_boolean_true
 33368 00018D2A [0300000000000000] 
 33369 00018D32 EB0A                            jmp .L_exit
 33370                                  .L_false:
 33371 00018D34 48B8-                           mov rax, sob_boolean_false
 33371 00018D36 [0200000000000000] 
 33372                                  .L_exit:
 33373 00018D3E C9                              leave
 33374 00018D3F C22000                          ret AND_KILL_FRAME(2)
 33375                                  
 33376                                  L_code_ptr_raw_equal_rr:
 33377 00018D42 C8000000                        enter 0, 0
 33378 00018D46 48837D1802                      cmp COUNT, 2
 33379 00018D4B 0F8508060000                    jne L_error_arg_count_2
 33380 00018D51 488B7520                        mov rsi, PARAM(0)
 33381                                          assert_real(rsi)
    53 00018D55 803E13              <1>  cmp byte [%1], %2
    54 00018D58 0F859A060000        <1>  jne L_error_incorrect_type
 33382 00018D5E 488B7D28                        mov rdi, PARAM(1)
 33383                                          assert_real(rdi)
    53 00018D62 803F13              <1>  cmp byte [%1], %2
    54 00018D65 0F858D060000        <1>  jne L_error_incorrect_type
 33384 00018D6B F20F104601                      movsd xmm0, qword [rsi + 1]
 33385 00018D70 F20F104F01                      movsd xmm1, qword [rdi + 1]
 33386 00018D75 660F2FC1                        comisd xmm0, xmm1
 33387 00018D79 750C                            jne .L_false
 33388 00018D7B 48B8-                           mov rax, sob_boolean_true
 33388 00018D7D [0300000000000000] 
 33389 00018D85 EB0A                            jmp .L_exit
 33390                                  .L_false:
 33391 00018D87 48B8-                           mov rax, sob_boolean_false
 33391 00018D89 [0200000000000000] 
 33392                                  .L_exit:
 33393 00018D91 C9                              leave
 33394 00018D92 C22000                          ret AND_KILL_FRAME(2)
 33395                                          
 33396                                  L_code_ptr_raw_equal_zz:
 33397 00018D95 C8000000                	enter 0, 0
 33398 00018D99 48837D1802              	cmp COUNT, 2
 33399 00018D9E 0F85B5050000            	jne L_error_arg_count_2
 33400 00018DA4 4C8B4520                	mov r8, PARAM(0)
 33401                                  	assert_integer(r8)
    53 00018DA8 41803811            <1>  cmp byte [%1], %2
    54 00018DAC 0F8546060000        <1>  jne L_error_incorrect_type
 33402 00018DB2 4C8B4D28                	mov r9, PARAM(1)
 33403                                  	assert_integer(r9)
    53 00018DB6 41803911            <1>  cmp byte [%1], %2
    54 00018DBA 0F8538060000        <1>  jne L_error_incorrect_type
 33404 00018DC0 498B7801                	mov rdi, qword [r8 + 1]
 33405 00018DC4 493B7901                	cmp rdi, qword [r9 + 1]
 33406 00018DC8 750C                    	jne .L_false
 33407 00018DCA 48B8-                   	mov rax, sob_boolean_true
 33407 00018DCC [0300000000000000] 
 33408 00018DD4 EB0A                    	jmp .L_exit
 33409                                  .L_false:
 33410 00018DD6 48B8-                   	mov rax, sob_boolean_false
 33410 00018DD8 [0200000000000000] 
 33411                                  .L_exit:
 33412 00018DE0 C9                      	leave
 33413 00018DE1 C22000                  	ret AND_KILL_FRAME(2)
 33414                                  
 33415                                  L_code_ptr_raw_equal_qq:
 33416 00018DE4 C8000000                        enter 0, 0
 33417 00018DE8 48837D1802                      cmp COUNT, 2
 33418 00018DED 0F8566050000                    jne L_error_arg_count_2
 33419 00018DF3 488B7520                        mov rsi, PARAM(0)
 33420                                          assert_fraction(rsi)
    53 00018DF7 803E12              <1>  cmp byte [%1], %2
    54 00018DFA 0F85F8050000        <1>  jne L_error_incorrect_type
 33421 00018E00 488B7D28                        mov rdi, PARAM(1)
 33422                                          assert_fraction(rdi)
    53 00018E04 803F12              <1>  cmp byte [%1], %2
    54 00018E07 0F85EB050000        <1>  jne L_error_incorrect_type
 33423 00018E0D 488B4601                        mov rax, qword [rsi + 1] ; num1
 33424 00018E11 4899                            cqo
 33425 00018E13 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 33426 00018E17 4889C1                          mov rcx, rax
 33427 00018E1A 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 33428 00018E1E 4899                            cqo
 33429 00018E20 48F76F01                        imul qword [rdi + 1]          ; num2
 33430 00018E24 4829C1                          sub rcx, rax
 33431 00018E27 750C                            jne .L_false
 33432 00018E29 48B8-                           mov rax, sob_boolean_true
 33432 00018E2B [0300000000000000] 
 33433 00018E33 EB0A                            jmp .L_exit
 33434                                  .L_false:
 33435 00018E35 48B8-                           mov rax, sob_boolean_false
 33435 00018E37 [0200000000000000] 
 33436                                  .L_exit:
 33437 00018E3F C9                              leave
 33438 00018E40 C22000                          ret AND_KILL_FRAME(2)
 33439                                  
 33440                                  L_code_ptr_quotient:
 33441 00018E43 C8000000                        enter 0, 0
 33442 00018E47 48837D1802                      cmp COUNT, 2
 33443 00018E4C 0F8507050000                    jne L_error_arg_count_2
 33444 00018E52 488B7520                        mov rsi, PARAM(0)
 33445                                          assert_integer(rsi)
    53 00018E56 803E11              <1>  cmp byte [%1], %2
    54 00018E59 0F8599050000        <1>  jne L_error_incorrect_type
 33446 00018E5F 488B7D28                        mov rdi, PARAM(1)
 33447                                          assert_integer(rdi)
    53 00018E63 803F11              <1>  cmp byte [%1], %2
    54 00018E66 0F858C050000        <1>  jne L_error_incorrect_type
 33448 00018E6C 488B4601                        mov rax, qword [rsi + 1]
 33449 00018E70 488B5F01                        mov rbx, qword [rdi + 1]
 33450 00018E74 4883FB00                        cmp rbx, 0
 33451 00018E78 0F84AB050000                    je L_error_division_by_zero
 33452 00018E7E 4899                            cqo
 33453 00018E80 48F7FB                          idiv rbx
 33454 00018E83 4889C7                          mov rdi, rax
 33455 00018E86 E8E8030000                      call make_integer
 33456 00018E8B C9                              leave
 33457 00018E8C C22000                          ret AND_KILL_FRAME(2)
 33458                                          
 33459                                  L_code_ptr_remainder:
 33460 00018E8F C8000000                        enter 0, 0
 33461 00018E93 48837D1802                      cmp COUNT, 2
 33462 00018E98 0F85BB040000                    jne L_error_arg_count_2
 33463 00018E9E 488B7520                        mov rsi, PARAM(0)
 33464                                          assert_integer(rsi)
    53 00018EA2 803E11              <1>  cmp byte [%1], %2
    54 00018EA5 0F854D050000        <1>  jne L_error_incorrect_type
 33465 00018EAB 488B7D28                        mov rdi, PARAM(1)
 33466                                          assert_integer(rdi)
    53 00018EAF 803F11              <1>  cmp byte [%1], %2
    54 00018EB2 0F8540050000        <1>  jne L_error_incorrect_type
 33467 00018EB8 488B4601                        mov rax, qword [rsi + 1]
 33468 00018EBC 488B5F01                        mov rbx, qword [rdi + 1]
 33469 00018EC0 4883FB00                        cmp rbx, 0
 33470 00018EC4 0F845F050000                    je L_error_division_by_zero
 33471 00018ECA 4899                            cqo
 33472 00018ECC 48F7FB                          idiv rbx
 33473 00018ECF 4889D7                          mov rdi, rdx
 33474 00018ED2 E89C030000                      call make_integer
 33475 00018ED7 C9                              leave
 33476 00018ED8 C22000                          ret AND_KILL_FRAME(2)
 33477                                  
 33478                                  L_code_ptr_set_car:
 33479 00018EDB C8000000                        enter 0, 0
 33480 00018EDF 48837D1802                      cmp COUNT, 2
 33481 00018EE4 0F856F040000                    jne L_error_arg_count_2
 33482 00018EEA 488B4520                        mov rax, PARAM(0)
 33483                                          assert_pair(rax)
    53 00018EEE 803821              <1>  cmp byte [%1], %2
    54 00018EF1 0F8501050000        <1>  jne L_error_incorrect_type
 33484 00018EF7 488B5D28                        mov rbx, PARAM(1)
 33485 00018EFB 48895801                        mov SOB_PAIR_CAR(rax), rbx
 33486 00018EFF 48B8-                           mov rax, sob_void
 33486 00018F01 [0000000000000000] 
 33487 00018F09 C9                              leave
 33488 00018F0A C22000                          ret AND_KILL_FRAME(2)
 33489                                  
 33490                                  L_code_ptr_set_cdr:
 33491 00018F0D C8000000                        enter 0, 0
 33492 00018F11 48837D1802                      cmp COUNT, 2
 33493 00018F16 0F853D040000                    jne L_error_arg_count_2
 33494 00018F1C 488B4520                        mov rax, PARAM(0)
 33495                                          assert_pair(rax)
    53 00018F20 803821              <1>  cmp byte [%1], %2
    54 00018F23 0F85CF040000        <1>  jne L_error_incorrect_type
 33496 00018F29 488B5D28                        mov rbx, PARAM(1)
 33497 00018F2D 48895809                        mov SOB_PAIR_CDR(rax), rbx
 33498 00018F31 48B8-                           mov rax, sob_void
 33498 00018F33 [0000000000000000] 
 33499 00018F3B C9                              leave
 33500 00018F3C C22000                          ret AND_KILL_FRAME(2)
 33501                                  
 33502                                  L_code_ptr_string_ref:
 33503 00018F3F C8000000                        enter 0, 0
 33504 00018F43 48837D1802                      cmp COUNT, 2
 33505 00018F48 0F850B040000                    jne L_error_arg_count_2
 33506 00018F4E 488B7D20                        mov rdi, PARAM(0)
 33507                                          assert_string(rdi)
    53 00018F52 803F03              <1>  cmp byte [%1], %2
    54 00018F55 0F859D040000        <1>  jne L_error_incorrect_type
 33508 00018F5B 488B7528                        mov rsi, PARAM(1)
 33509                                          assert_integer(rsi)
    53 00018F5F 803E11              <1>  cmp byte [%1], %2
    54 00018F62 0F8590040000        <1>  jne L_error_incorrect_type
 33510 00018F68 488B5701                        mov rdx, qword [rdi + 1]
 33511 00018F6C 488B4E01                        mov rcx, qword [rsi + 1]
 33512 00018F70 4839D1                          cmp rcx, rdx
 33513 00018F73 0F8D14030000                    jge L_error_integer_range
 33514 00018F79 4883F900                        cmp rcx, 0
 33515 00018F7D 0F8C0A030000                    jl L_error_integer_range
 33516 00018F83 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 33517 00018F87 BF02000000                      mov rdi, 2
 33518 00018F8C E8C4E6FFFF                      call malloc
 33519 00018F91 C60002                          mov byte [rax], T_char
 33520 00018F94 885801                          mov byte [rax + 1], bl
 33521 00018F97 C9                              leave
 33522 00018F98 C22000                          ret AND_KILL_FRAME(2)
 33523                                  
 33524                                  L_code_ptr_vector_ref:
 33525 00018F9B C8000000                        enter 0, 0
 33526 00018F9F 48837D1802                      cmp COUNT, 2
 33527 00018FA4 0F85AF030000                    jne L_error_arg_count_2
 33528 00018FAA 488B7D20                        mov rdi, PARAM(0)
 33529                                          assert_vector(rdi)
    53 00018FAE 803F22              <1>  cmp byte [%1], %2
    54 00018FB1 0F8541040000        <1>  jne L_error_incorrect_type
 33530 00018FB7 488B7528                        mov rsi, PARAM(1)
 33531                                          assert_integer(rsi)
    53 00018FBB 803E11              <1>  cmp byte [%1], %2
    54 00018FBE 0F8534040000        <1>  jne L_error_incorrect_type
 33532 00018FC4 488B5701                        mov rdx, qword [rdi + 1]
 33533 00018FC8 488B4E01                        mov rcx, qword [rsi + 1]
 33534 00018FCC 4839D1                          cmp rcx, rdx
 33535 00018FCF 0F8DB8020000                    jge L_error_integer_range
 33536 00018FD5 4883F900                        cmp rcx, 0
 33537 00018FD9 0F8CAE020000                    jl L_error_integer_range
 33538 00018FDF 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 33539 00018FE4 C9                              leave
 33540 00018FE5 C22000                          ret AND_KILL_FRAME(2)
 33541                                  
 33542                                  L_code_ptr_vector_set:
 33543 00018FE8 C8000000                        enter 0, 0
 33544 00018FEC 48837D1803                      cmp COUNT, 3
 33545 00018FF1 0F85CC030000                    jne L_error_arg_count_3
 33546 00018FF7 488B7D20                        mov rdi, PARAM(0)
 33547                                          assert_vector(rdi)
    53 00018FFB 803F22              <1>  cmp byte [%1], %2
    54 00018FFE 0F85F4030000        <1>  jne L_error_incorrect_type
 33548 00019004 488B7528                        mov rsi, PARAM(1)
 33549                                          assert_integer(rsi)
    53 00019008 803E11              <1>  cmp byte [%1], %2
    54 0001900B 0F85E7030000        <1>  jne L_error_incorrect_type
 33550 00019011 488B5701                        mov rdx, qword [rdi + 1]
 33551 00019015 488B4E01                        mov rcx, qword [rsi + 1]
 33552 00019019 4839D1                          cmp rcx, rdx
 33553 0001901C 0F8D6B020000                    jge L_error_integer_range
 33554 00019022 4883F900                        cmp rcx, 0
 33555 00019026 0F8C61020000                    jl L_error_integer_range
 33556 0001902C 488B4530                        mov rax, PARAM(2)
 33557 00019030 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 33558 00019035 48B8-                           mov rax, sob_void
 33558 00019037 [0000000000000000] 
 33559 0001903F C9                              leave
 33560 00019040 C22800                          ret AND_KILL_FRAME(3)
 33561                                  
 33562                                  L_code_ptr_string_set:
 33563 00019043 C8000000                        enter 0, 0
 33564 00019047 48837D1803                      cmp COUNT, 3
 33565 0001904C 0F8571030000                    jne L_error_arg_count_3
 33566 00019052 488B7D20                        mov rdi, PARAM(0)
 33567                                          assert_string(rdi)
    53 00019056 803F03              <1>  cmp byte [%1], %2
    54 00019059 0F8599030000        <1>  jne L_error_incorrect_type
 33568 0001905F 488B7528                        mov rsi, PARAM(1)
 33569                                          assert_integer(rsi)
    53 00019063 803E11              <1>  cmp byte [%1], %2
    54 00019066 0F858C030000        <1>  jne L_error_incorrect_type
 33570 0001906C 488B5701                        mov rdx, qword [rdi + 1]
 33571 00019070 488B4E01                        mov rcx, qword [rsi + 1]
 33572 00019074 4839D1                          cmp rcx, rdx
 33573 00019077 0F8D10020000                    jge L_error_integer_range
 33574 0001907D 4883F900                        cmp rcx, 0
 33575 00019081 0F8C06020000                    jl L_error_integer_range
 33576 00019087 488B4530                        mov rax, PARAM(2)
 33577                                          assert_char(rax)
    53 0001908B 803802              <1>  cmp byte [%1], %2
    54 0001908E 0F8564030000        <1>  jne L_error_incorrect_type
 33578 00019094 8A4001                          mov al, byte [rax + 1]
 33579 00019097 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 33580 0001909B 48B8-                           mov rax, sob_void
 33580 0001909D [0000000000000000] 
 33581 000190A5 C9                              leave
 33582 000190A6 C22800                          ret AND_KILL_FRAME(3)
 33583                                  
 33584                                  L_code_ptr_make_vector:
 33585 000190A9 C8000000                        enter 0, 0
 33586 000190AD 48837D1802                      cmp COUNT, 2
 33587 000190B2 0F85A1020000                    jne L_error_arg_count_2
 33588 000190B8 488B4D20                        mov rcx, PARAM(0)
 33589                                          assert_integer(rcx)
    53 000190BC 803911              <1>  cmp byte [%1], %2
    54 000190BF 0F8533030000        <1>  jne L_error_incorrect_type
 33590 000190C5 488B4901                        mov rcx, qword [rcx + 1]
 33591 000190C9 4883F900                        cmp rcx, 0
 33592 000190CD 0F8CBA010000                    jl L_error_integer_range
 33593 000190D3 488B5528                        mov rdx, PARAM(1)
 33594 000190D7 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 33595 000190DF E871E5FFFF                      call malloc
 33596 000190E4 C60022                          mov byte [rax], T_vector
 33597 000190E7 48894801                        mov qword [rax + 1], rcx
 33598 000190EB 41B800000000                    mov r8, 0
 33599                                  .L0:
 33600 000190F1 4939C8                          cmp r8, rcx
 33601 000190F4 740A                            je .L1
 33602 000190F6 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 33603 000190FB 49FFC0                          inc r8
 33604 000190FE EBF1                            jmp .L0
 33605                                  .L1:
 33606 00019100 C9                              leave
 33607 00019101 C22000                          ret AND_KILL_FRAME(2)
 33608                                          
 33609                                  L_code_ptr_make_string:
 33610 00019104 C8000000                        enter 0, 0
 33611 00019108 48837D1802                      cmp COUNT, 2
 33612 0001910D 0F8546020000                    jne L_error_arg_count_2
 33613 00019113 488B4D20                        mov rcx, PARAM(0)
 33614                                          assert_integer(rcx)
    53 00019117 803911              <1>  cmp byte [%1], %2
    54 0001911A 0F85D8020000        <1>  jne L_error_incorrect_type
 33615 00019120 488B4901                        mov rcx, qword [rcx + 1]
 33616 00019124 4883F900                        cmp rcx, 0
 33617 00019128 0F8C5F010000                    jl L_error_integer_range
 33618 0001912E 488B5528                        mov rdx, PARAM(1)
 33619                                          assert_char(rdx)
    53 00019132 803A02              <1>  cmp byte [%1], %2
    54 00019135 0F85BD020000        <1>  jne L_error_incorrect_type
 33620 0001913B 8A5201                          mov dl, byte [rdx + 1]
 33621 0001913E 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 33622 00019142 E80EE5FFFF                      call malloc
 33623 00019147 C60003                          mov byte [rax], T_string
 33624 0001914A 48894801                        mov qword [rax + 1], rcx
 33625 0001914E 41B800000000                    mov r8, 0
 33626                                  .L0:
 33627 00019154 4939C8                          cmp r8, rcx
 33628 00019157 740A                            je .L1
 33629 00019159 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 33630 0001915E 49FFC0                          inc r8
 33631 00019161 EBF1                            jmp .L0
 33632                                  .L1:
 33633 00019163 C9                              leave
 33634 00019164 C22000                          ret AND_KILL_FRAME(2)
 33635                                  
 33636                                  L_code_ptr_numerator:
 33637 00019167 C8000000                        enter 0, 0
 33638 0001916B 48837D1801                      cmp COUNT, 1
 33639 00019170 0F85AE010000                    jne L_error_arg_count_1
 33640 00019176 488B4520                        mov rax, PARAM(0)
 33641                                          assert_fraction(rax)
    53 0001917A 803812              <1>  cmp byte [%1], %2
    54 0001917D 0F8575020000        <1>  jne L_error_incorrect_type
 33642 00019183 488B7801                        mov rdi, qword [rax + 1]
 33643 00019187 E8E7000000                      call make_integer
 33644 0001918C C9                              leave
 33645 0001918D C21800                          ret AND_KILL_FRAME(1)
 33646                                          
 33647                                  L_code_ptr_denominator:
 33648 00019190 C8000000                        enter 0, 0
 33649 00019194 48837D1801                      cmp COUNT, 1
 33650 00019199 0F8585010000                    jne L_error_arg_count_1
 33651 0001919F 488B4520                        mov rax, PARAM(0)
 33652                                          assert_fraction(rax)
    53 000191A3 803812              <1>  cmp byte [%1], %2
    54 000191A6 0F854C020000        <1>  jne L_error_incorrect_type
 33653 000191AC 488B7809                        mov rdi, qword [rax + 1 + 8]
 33654 000191B0 E8BE000000                      call make_integer
 33655 000191B5 C9                              leave
 33656 000191B6 C21800                          ret AND_KILL_FRAME(1)
 33657                                  
 33658                                  L_code_ptr_is_eq:
 33659 000191B9 C8000000                	enter 0, 0
 33660 000191BD 48837D1802              	cmp COUNT, 2
 33661 000191C2 0F8591010000            	jne L_error_arg_count_2
 33662 000191C8 488B7D20                	mov rdi, PARAM(0)
 33663 000191CC 488B7528                	mov rsi, PARAM(1)
 33664 000191D0 4839F7                  	cmp rdi, rsi
 33665 000191D3 746C                    	je .L_eq_true
 33666 000191D5 8A17                    	mov dl, byte [rdi]
 33667 000191D7 3A16                    	cmp dl, byte [rsi]
 33668 000191D9 7572                    	jne .L_eq_false
 33669 000191DB 80FA02                  	cmp dl, T_char
 33670 000191DE 7459                    	je .L_char
 33671 000191E0 80FA41                  	cmp dl, T_interned_symbol
 33672 000191E3 7440                    	je .L_interned_symbol
 33673 000191E5 80FA42                          cmp dl, T_uninterned_symbol
 33674 000191E8 7443                            je .L_uninterned_symbol
 33675 000191EA 80FA13                  	cmp dl, T_real
 33676 000191ED 742E                    	je .L_real
 33677 000191EF 80FA12                  	cmp dl, T_fraction
 33678 000191F2 7413                    	je .L_fraction
 33679 000191F4 80FA11                          cmp dl, T_integer
 33680 000191F7 7402                            je .L_integer
 33681 000191F9 EB52                    	jmp .L_eq_false
 33682                                  .L_integer:
 33683 000191FB 488B4601                        mov rax, qword [rsi + 1]
 33684 000191FF 483B4701                        cmp rax, qword [rdi + 1]
 33685 00019203 7548                            jne .L_eq_false
 33686 00019205 EB3A                            jmp .L_eq_true
 33687                                  .L_fraction:
 33688 00019207 488B4601                	mov rax, qword [rsi + 1]
 33689 0001920B 483B4701                	cmp rax, qword [rdi + 1]
 33690 0001920F 753C                    	jne .L_eq_false
 33691 00019211 488B4609                	mov rax, qword [rsi + 1 + 8]
 33692 00019215 483B4709                	cmp rax, qword [rdi + 1 + 8]
 33693 00019219 7532                    	jne .L_eq_false
 33694 0001921B EB24                    	jmp .L_eq_true
 33695                                  .L_real:
 33696 0001921D 488B4601                	mov rax, qword [rsi + 1]
 33697 00019221 483B4701                	cmp rax, qword [rdi + 1]
 33698                                  .L_interned_symbol:
 33699                                  	; never reached, because interned_symbols are static!
 33700                                  	; but I'm keeping it in case, I'll ever change
 33701                                  	; the implementation
 33702 00019225 488B4601                	mov rax, qword [rsi + 1]
 33703 00019229 483B4701                	cmp rax, qword [rdi + 1]
 33704                                  .L_uninterned_symbol:
 33705 0001922D 4C8B4701                        mov r8, qword [rdi + 1]
 33706 00019231 4C3B4601                        cmp r8, qword [rsi + 1]
 33707 00019235 7516                            jne .L_eq_false
 33708 00019237 EB08                            jmp .L_eq_true
 33709                                  .L_char:
 33710 00019239 8A5E01                  	mov bl, byte [rsi + 1]
 33711 0001923C 3A5F01                  	cmp bl, byte [rdi + 1]
 33712 0001923F 750C                    	jne .L_eq_false
 33713                                  .L_eq_true:
 33714 00019241 48B8-                   	mov rax, sob_boolean_true
 33714 00019243 [0300000000000000] 
 33715 0001924B EB0A                    	jmp .L_eq_exit
 33716                                  .L_eq_false:
 33717 0001924D 48B8-                   	mov rax, sob_boolean_false
 33717 0001924F [0200000000000000] 
 33718                                  .L_eq_exit:
 33719 00019257 C9                      	leave
 33720 00019258 C22000                  	ret AND_KILL_FRAME(2)
 33721                                  
 33722                                  make_real:
 33723 0001925B C8000000                        enter 0, 0
 33724 0001925F BF09000000                      mov rdi, (1 + 8)
 33725 00019264 E8ECE3FFFF                      call malloc
 33726 00019269 C60013                          mov byte [rax], T_real
 33727 0001926C F20F114001                      movsd qword [rax + 1], xmm0
 33728 00019271 C9                              leave 
 33729 00019272 C3                              ret
 33730                                          
 33731                                  make_integer:
 33732 00019273 C8000000                        enter 0, 0
 33733 00019277 4889FE                          mov rsi, rdi
 33734 0001927A BF09000000                      mov rdi, (1 + 8)
 33735 0001927F E8D1E3FFFF                      call malloc
 33736 00019284 C60011                          mov byte [rax], T_integer
 33737 00019287 48897001                        mov qword [rax + 1], rsi
 33738 0001928B C9                              leave
 33739 0001928C C3                              ret
 33740                                          
 33741                                  L_error_integer_range:
 33742 0001928D 488B3C25[00000000]              mov rdi, qword [stderr]
 33743 00019295 48BE-                           mov rsi, fmt_integer_range
 33743 00019297 [C81B000000000000] 
 33744 0001929F B800000000                      mov rax, 0
 33745                                          ENTER
    44 000192A4 C8000000            <1>  enter 0, 0
    45 000192A8 4883E4F0            <1>  and rsp, ~15
 33746 000192AC E8(00000000)                    call fprintf
 33747                                          LEAVE
    49 000192B1 C9                  <1>  leave
 33748 000192B2 48C7C0FBFFFFFF                  mov rax, -5
 33749 000192B9 E8(00000000)                    call exit
 33750                                  
 33751                                  L_error_arg_negative:
 33752 000192BE 488B3C25[00000000]              mov rdi, qword [stderr]
 33753 000192C6 48BE-                           mov rsi, fmt_arg_negative
 33753 000192C8 [A01A000000000000] 
 33754 000192D0 B800000000                      mov rax, 0
 33755                                          ENTER
    44 000192D5 C8000000            <1>  enter 0, 0
    45 000192D9 4883E4F0            <1>  and rsp, ~15
 33756 000192DD E8(00000000)                    call fprintf
 33757                                          LEAVE
    49 000192E2 C9                  <1>  leave
 33758 000192E3 48C7C0FDFFFFFF                  mov rax, -3
 33759 000192EA E8(00000000)                    call exit
 33760                                  
 33761                                  L_error_arg_count_0:
 33762 000192EF 488B3C25[00000000]              mov rdi, qword [stderr]
 33763 000192F7 48BE-                           mov rsi, fmt_arg_count_0
 33763 000192F9 [C61A000000000000] 
 33764 00019301 488B5518                        mov rdx, COUNT
 33765 00019305 B800000000                      mov rax, 0
 33766                                          ENTER
    44 0001930A C8000000            <1>  enter 0, 0
    45 0001930E 4883E4F0            <1>  and rsp, ~15
 33767 00019312 E8(00000000)                    call fprintf
 33768                                          LEAVE
    49 00019317 C9                  <1>  leave
 33769 00019318 48C7C0FDFFFFFF                  mov rax, -3
 33770 0001931F E8(00000000)                    call exit
 33771                                  
 33772                                  L_error_arg_count_1:
 33773 00019324 488B3C25[00000000]              mov rdi, qword [stderr]
 33774 0001932C 48BE-                           mov rsi, fmt_arg_count_1
 33774 0001932E [EE1A000000000000] 
 33775 00019336 488B5518                        mov rdx, COUNT
 33776 0001933A B800000000                      mov rax, 0
 33777                                          ENTER
    44 0001933F C8000000            <1>  enter 0, 0
    45 00019343 4883E4F0            <1>  and rsp, ~15
 33778 00019347 E8(00000000)                    call fprintf
 33779                                          LEAVE
    49 0001934C C9                  <1>  leave
 33780 0001934D 48C7C0FDFFFFFF                  mov rax, -3
 33781 00019354 E8(00000000)                    call exit
 33782                                  
 33783                                  L_error_arg_count_2:
 33784 00019359 488B3C25[00000000]              mov rdi, qword [stderr]
 33785 00019361 48BE-                           mov rsi, fmt_arg_count_2
 33785 00019363 [541B000000000000] 
 33786 0001936B 488B5518                        mov rdx, COUNT
 33787 0001936F B800000000                      mov rax, 0
 33788                                          ENTER
    44 00019374 C8000000            <1>  enter 0, 0
    45 00019378 4883E4F0            <1>  and rsp, ~15
 33789 0001937C E8(00000000)                    call fprintf
 33790                                          LEAVE
    49 00019381 C9                  <1>  leave
 33791 00019382 48C7C0FDFFFFFF                  mov rax, -3
 33792 00019389 E8(00000000)                    call exit
 33793                                  
 33794                                  L_error_arg_count_12:
 33795 0001938E 488B3C25[00000000]              mov rdi, qword [stderr]
 33796 00019396 48BE-                           mov rsi, fmt_arg_count_12
 33796 00019398 [141B000000000000] 
 33797 000193A0 488B5518                        mov rdx, COUNT
 33798 000193A4 B800000000                      mov rax, 0
 33799                                          ENTER
    44 000193A9 C8000000            <1>  enter 0, 0
    45 000193AD 4883E4F0            <1>  and rsp, ~15
 33800 000193B1 E8(00000000)                    call fprintf
 33801                                          LEAVE
    49 000193B6 C9                  <1>  leave
 33802 000193B7 48C7C0FDFFFFFF                  mov rax, -3
 33803 000193BE E8(00000000)                    call exit
 33804                                  
 33805                                  L_error_arg_count_3:
 33806 000193C3 488B3C25[00000000]              mov rdi, qword [stderr]
 33807 000193CB 48BE-                           mov rsi, fmt_arg_count_3
 33807 000193CD [7B1B000000000000] 
 33808 000193D5 488B5518                        mov rdx, COUNT
 33809 000193D9 B800000000                      mov rax, 0
 33810                                          ENTER
    44 000193DE C8000000            <1>  enter 0, 0
    45 000193E2 4883E4F0            <1>  and rsp, ~15
 33811 000193E6 E8(00000000)                    call fprintf
 33812                                          LEAVE
    49 000193EB C9                  <1>  leave
 33813 000193EC 48C7C0FDFFFFFF                  mov rax, -3
 33814 000193F3 E8(00000000)                    call exit
 33815                                          
 33816                                  L_error_incorrect_type:
 33817 000193F8 488B3C25[00000000]              mov rdi, qword [stderr]
 33818 00019400 48BE-                           mov rsi, fmt_type
 33818 00019402 [A41B000000000000] 
 33819 0001940A B800000000                      mov rax, 0
 33820                                          ENTER
    44 0001940F C8000000            <1>  enter 0, 0
    45 00019413 4883E4F0            <1>  and rsp, ~15
 33821 00019417 E8(00000000)                    call fprintf
 33822                                          LEAVE
    49 0001941C C9                  <1>  leave
 33823 0001941D 48C7C0FCFFFFFF                  mov rax, -4
 33824 00019424 E8(00000000)                    call exit
 33825                                  
 33826                                  L_error_division_by_zero:
 33827 00019429 488B3C25[00000000]              mov rdi, qword [stderr]
 33828 00019431 48BE-                           mov rsi, fmt_division_by_zero
 33828 00019433 [E51B000000000000] 
 33829 0001943B B800000000                      mov rax, 0
 33830                                          ENTER
    44 00019440 C8000000            <1>  enter 0, 0
    45 00019444 4883E4F0            <1>  and rsp, ~15
 33831 00019448 E8(00000000)                    call fprintf
 33832                                          LEAVE
    49 0001944D C9                  <1>  leave
 33833 0001944E 48C7C0F8FFFFFF                  mov rax, -8
 33834 00019455 E8(00000000)                    call exit
 33835                                  
 33836                                  section .data
 33837                                  gensym_count:
 33838 00001A95 0000000000000000                dq 0
 33839                                  fmt_char:
 33840 00001A9D 256300                          db `%c\0`
 33841                                  fmt_arg_negative:
 33842 00001AA0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 33842 00001AA9 7267756D656E742063-
 33842 00001AB2 616E6E6F7420626520-
 33842 00001ABB 6E656761746976652E-
 33842 00001AC4 0A00               
 33843                                  fmt_arg_count_0:
 33844 00001AC6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 33844 00001ACF 74696E67207A65726F-
 33844 00001AD8 20617267756D656E74-
 33844 00001AE1 732E20466F756E6420-
 33844 00001AEA 25640A00           
 33845                                  fmt_arg_count_1:
 33846 00001AEE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 33846 00001AF7 74696E67206F6E6520-
 33846 00001B00 617267756D656E742E-
 33846 00001B09 20466F756E64202564-
 33846 00001B12 0A00               
 33847                                  fmt_arg_count_12:
 33848 00001B14 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 33848 00001B1D 74696E67206F6E6520-
 33848 00001B26 726571756972656420-
 33848 00001B2F 616E64206F6E65206F-
 33848 00001B38 7074696F6E616C2061-
 33848 00001B41 7267756D656E742E20-
 33848 00001B4A 466F756E642025640A-
 33848 00001B53 00                 
 33849                                  fmt_arg_count_2:
 33850 00001B54 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 33850 00001B5D 74696E672074776F20-
 33850 00001B66 617267756D656E7473-
 33850 00001B6F 2E20466F756E642025-
 33850 00001B78 640A00             
 33851                                  fmt_arg_count_3:
 33852 00001B7B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 33852 00001B84 74696E672074687265-
 33852 00001B8D 6520617267756D656E-
 33852 00001B96 74732E20466F756E64-
 33852 00001B9F 2025640A00         
 33853                                  fmt_type:
 33854 00001BA4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 33854 00001BAD 696F6E207061737365-
 33854 00001BB6 6420696E636F727265-
 33854 00001BBF 637420747970650A00 
 33855                                  fmt_integer_range:
 33856 00001BC8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 33856 00001BD1 7265637420696E7465-
 33856 00001BDA 6765722072616E6765-
 33856 00001BE3 0A00               
 33857                                  fmt_division_by_zero:
 33858 00001BE5 212121204469766973-             db `!!! Division by zero\n\0`
 33858 00001BEE 696F6E206279207A65-
 33858 00001BF7 726F0A00           
 33859                                  fmt_scheme_error_part_1:
 33860 00001BFB 0A2121212054686520-             db `\n!!! The procedure \0`
 33860 00001C04 70726F636564757265-
 33860 00001C0D 2000               
 33861                                  fmt_scheme_error_part_2:
 33862 00001C0F 2061736B656420746F-             db ` asked to terminate the program\n`
 33862 00001C18 207465726D696E6174-
 33862 00001C21 65207468652070726F-
 33862 00001C2A 6772616D0A         
 33863 00001C2F 202020207769746820-             db `    with the following message:\n\n\0`
 33863 00001C38 74686520666F6C6C6F-
 33863 00001C41 77696E67206D657373-
 33863 00001C4A 6167653A0A0A00     
 33864                                  fmt_scheme_error_part_3:
 33865 00001C51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 33865 00001C5A 210A0A00           
