     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  
   468                                  
   469                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
   470                                  global main
   471                                  section .text
   472                                  main:
   473 00000000 C8000000                        enter 0, 0
   474 00000004 6A00                            push 0
   475 00000006 6A00                            push 0
   476 00000008 68[50600000]                    push Lend
   477 0000000D C8000000                        enter 0, 0
   478                                  
   479                                  	; preparing a non-tail-call
   480 00000011 48B8-                   	mov rax, L_constants + 2
   480 00000013 [0200000000000000] 
   481 0000001B 50                      	push rax
   482 0000001C 6A01                    	push 1	; arg count
   483                                  	; preparing a non-tail-call
   484 0000001E 48B8-                   	mov rax, L_constants + 3
   484 00000020 [0300000000000000] 
   485 00000028 50                      	push rax
   486 00000029 6A01                    	push 1	; arg count
   487                                  	; preparing a non-tail-call
   488                                  	; preparing a non-tail-call
   489 0000002B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   490 00000030 E886610000              	call malloc
   491 00000035 50                      	push rax
   492 00000036 BF00000000              	mov rdi, 8 * 0	; new rib
   493 0000003B E87B610000              	call malloc
   494 00000040 50                      	push rax
   495 00000041 BF08000000              	mov rdi, 8 * 1	; extended env
   496 00000046 E870610000              	call malloc
   497 0000004B 488B7D10                	mov rdi, ENV
   498 0000004F BE00000000              	mov rsi, 0
   499 00000054 BA01000000              	mov rdx, 1
   500                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
   501 00000059 4883FE00                	cmp rsi, 0
   502 0000005D 7410                    	je .L_lambda_simple_env_end_0001
   503 0000005F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   504 00000063 48890CD0                	mov qword [rax + 8 * rdx], rcx
   505 00000067 48FFC6                  	inc rsi
   506 0000006A 48FFC2                  	inc rdx
   507 0000006D EBEA                    	jmp .L_lambda_simple_env_loop_0001
   508                                  .L_lambda_simple_env_end_0001:
   509 0000006F 5B                      	pop rbx
   510 00000070 BE00000000              	mov rsi, 0
   511                                  .L_lambda_simple_params_loop_0001:	; copy params
   512 00000075 4883FE00                	cmp rsi, 0
   513 00000079 740E                    	je .L_lambda_simple_params_end_0001
   514 0000007B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   515 00000080 488914F3                	mov qword [rbx + 8 * rsi], rdx
   516 00000084 48FFC6                  	inc rsi
   517 00000087 EBEC                    	jmp .L_lambda_simple_params_loop_0001
   518                                  .L_lambda_simple_params_end_0001:
   519 00000089 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   520 0000008C 4889C3                  	mov rbx, rax
   521 0000008F 58                      	pop rax
   522 00000090 C60004                  	mov byte [rax], T_closure
   523 00000093 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   524 00000097 48C74009[A4000000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
   525 0000009F E967010000              	jmp .L_lambda_simple_end_0001
   526                                  .L_lambda_simple_code_0001:	; lambda-simple body
   527 000000A4 48837C241001            	cmp qword [rsp + 8 * 2], 1
   528 000000AA 740B                    	je .L_lambda_simple_arity_check_ok_0001
   529 000000AC FF742410                	push qword [rsp + 8 * 2]
   530 000000B0 6A01                    	push 1
   531 000000B2 E9BD600000              	jmp L_error_incorrect_arity_simple
   532                                  .L_lambda_simple_arity_check_ok_0001:
   533 000000B7 C8000000                	enter 0, 0
   534 000000BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   535 000000C0 E8F6600000              	call malloc
   536 000000C5 50                      	push rax
   537 000000C6 BF08000000              	mov rdi, 8 * 1	; new rib
   538 000000CB E8EB600000              	call malloc
   539 000000D0 50                      	push rax
   540 000000D1 BF10000000              	mov rdi, 8 * 2	; extended env
   541 000000D6 E8E0600000              	call malloc
   542 000000DB 488B7D10                	mov rdi, ENV
   543 000000DF BE00000000              	mov rsi, 0
   544 000000E4 BA01000000              	mov rdx, 1
   545                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
   546 000000E9 4883FE01                	cmp rsi, 1
   547 000000ED 7410                    	je .L_lambda_simple_env_end_0002
   548 000000EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   549 000000F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
   550 000000F7 48FFC6                  	inc rsi
   551 000000FA 48FFC2                  	inc rdx
   552 000000FD EBEA                    	jmp .L_lambda_simple_env_loop_0002
   553                                  .L_lambda_simple_env_end_0002:
   554 000000FF 5B                      	pop rbx
   555 00000100 BE00000000              	mov rsi, 0
   556                                  .L_lambda_simple_params_loop_0002:	; copy params
   557 00000105 4883FE01                	cmp rsi, 1
   558 00000109 740E                    	je .L_lambda_simple_params_end_0002
   559 0000010B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   560 00000110 488914F3                	mov qword [rbx + 8 * rsi], rdx
   561 00000114 48FFC6                  	inc rsi
   562 00000117 EBEC                    	jmp .L_lambda_simple_params_loop_0002
   563                                  .L_lambda_simple_params_end_0002:
   564 00000119 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   565 0000011C 4889C3                  	mov rbx, rax
   566 0000011F 58                      	pop rax
   567 00000120 C60004                  	mov byte [rax], T_closure
   568 00000123 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   569 00000127 48C74009[34010000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
   570 0000012F E9D3000000              	jmp .L_lambda_simple_end_0002
   571                                  .L_lambda_simple_code_0002:	; lambda-simple body
   572 00000134 48837C241001            	cmp qword [rsp + 8 * 2], 1
   573 0000013A 740B                    	je .L_lambda_simple_arity_check_ok_0002
   574 0000013C FF742410                	push qword [rsp + 8 * 2]
   575 00000140 6A01                    	push 1
   576 00000142 E92D600000              	jmp L_error_incorrect_arity_simple
   577                                  .L_lambda_simple_arity_check_ok_0002:
   578 00000147 C8000000                	enter 0, 0
   579                                  	; preparing a tail-call
   580                                  	; preparing a non-tail-call
   581                                  	; preparing a non-tail-call
   582                                  	; preparing a non-tail-call
   583                                  	; preparing a non-tail-call
   584 0000014B 488B4520                	mov rax, PARAM(0)	; param y
   585 0000014F 50                      	push rax
   586 00000150 6A01                    	push 1	; arg count
   587 00000152 488B4510                	mov rax, ENV
   588 00000156 488B00                  	mov rax, qword [rax + 8 * 0]
   589 00000159 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   590 0000015C 803804                  	cmp byte [rax], T_closure
   591 0000015F 0F85AD5F0000            	jne L_error_non_closure
   592 00000165 FF7001                  	push SOB_CLOSURE_ENV(rax)
   593 00000168 FF5009                  	call SOB_CLOSURE_CODE(rax)
   594 0000016B 50                      	push rax
   595 0000016C 6A01                    	push 1	; arg count
   596 0000016E 488B4510                	mov rax, ENV
   597 00000172 488B00                  	mov rax, qword [rax + 8 * 0]
   598 00000175 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   599 00000178 803804                  	cmp byte [rax], T_closure
   600 0000017B 0F85915F0000            	jne L_error_non_closure
   601 00000181 FF7001                  	push SOB_CLOSURE_ENV(rax)
   602 00000184 FF5009                  	call SOB_CLOSURE_CODE(rax)
   603 00000187 50                      	push rax
   604 00000188 6A01                    	push 1	; arg count
   605 0000018A 488B4510                	mov rax, ENV
   606 0000018E 488B00                  	mov rax, qword [rax + 8 * 0]
   607 00000191 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   608 00000194 803804                  	cmp byte [rax], T_closure
   609 00000197 0F85755F0000            	jne L_error_non_closure
   610 0000019D FF7001                  	push SOB_CLOSURE_ENV(rax)
   611 000001A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
   612 000001A3 50                      	push rax
   613 000001A4 6A01                    	push 1	; arg count
   614 000001A6 488B4510                	mov rax, ENV
   615 000001AA 488B00                  	mov rax, qword [rax + 8 * 0]
   616 000001AD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   617 000001B0 803804                  	cmp byte [rax], T_closure
   618 000001B3 0F85595F0000            	jne L_error_non_closure
   619 000001B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
   620 000001BC FF5009                  	call SOB_CLOSURE_CODE(rax)
   621 000001BF 50                      	push rax
   622 000001C0 6A01                    	push 1	; arg count
   623 000001C2 488B4510                	mov rax, ENV
   624 000001C6 488B00                  	mov rax, qword [rax + 8 * 0]
   625 000001C9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   626 000001CC 803804                  	cmp byte [rax], T_closure
   627 000001CF 0F853D5F0000            	jne L_error_non_closure
   628 000001D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
   629 000001D8 FF7508                  	push qword [rbp + 8 * 1]
   630                                   ; old ret addr
   631 000001DB 5D                      	pop rbp
   632                                  ; restore the old rbp
   633 000001DC BB01000000              	mov rbx, 1
   634 000001E1 4883C303                	add rbx, 3
   635 000001E5 488B7D10                	mov rdi, qword [rbp + 8*2]
   636                                  .L_tc_recycle_frame_loop_0001:
   637 000001E9 4883FB00                	cmp rbx, 0
   638 000001ED 7411                    je .L_tc_recycle_frame_done_0001
   639 000001EF 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
   640 000001F3 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
   641 000001F8 48FFCF                  	dec rdi
   642 000001FB 48FFCB                  	dec rbx
   643 000001FE EBE9                    jmp .L_tc_recycle_frame_loop_0001
   644                                  .L_tc_recycle_frame_done_0001:
   645 00000200 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
   646 00000203 C9                      	leave
   647 00000204 C21800                  	ret AND_KILL_FRAME(1)
   648                                  .L_lambda_simple_end_0002:	; new closure is in rax
   649 00000207 C9                      	leave
   650 00000208 C21800                  	ret AND_KILL_FRAME(1)
   651                                  .L_lambda_simple_end_0001:	; new closure is in rax
   652 0000020B 50                      	push rax
   653 0000020C 6A01                    	push 1	; arg count
   654                                  	; preparing a non-tail-call
   655                                  	; preparing a non-tail-call
   656 0000020E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   657 00000213 E8A35F0000              	call malloc
   658 00000218 50                      	push rax
   659 00000219 BF00000000              	mov rdi, 8 * 0	; new rib
   660 0000021E E8985F0000              	call malloc
   661 00000223 50                      	push rax
   662 00000224 BF08000000              	mov rdi, 8 * 1	; extended env
   663 00000229 E88D5F0000              	call malloc
   664 0000022E 488B7D10                	mov rdi, ENV
   665 00000232 BE00000000              	mov rsi, 0
   666 00000237 BA01000000              	mov rdx, 1
   667                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
   668 0000023C 4883FE00                	cmp rsi, 0
   669 00000240 7410                    	je .L_lambda_simple_env_end_0003
   670 00000242 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   671 00000246 48890CD0                	mov qword [rax + 8 * rdx], rcx
   672 0000024A 48FFC6                  	inc rsi
   673 0000024D 48FFC2                  	inc rdx
   674 00000250 EBEA                    	jmp .L_lambda_simple_env_loop_0003
   675                                  .L_lambda_simple_env_end_0003:
   676 00000252 5B                      	pop rbx
   677 00000253 BE00000000              	mov rsi, 0
   678                                  .L_lambda_simple_params_loop_0003:	; copy params
   679 00000258 4883FE00                	cmp rsi, 0
   680 0000025C 740E                    	je .L_lambda_simple_params_end_0003
   681 0000025E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   682 00000263 488914F3                	mov qword [rbx + 8 * rsi], rdx
   683 00000267 48FFC6                  	inc rsi
   684 0000026A EBEC                    	jmp .L_lambda_simple_params_loop_0003
   685                                  .L_lambda_simple_params_end_0003:
   686 0000026C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   687 0000026F 4889C3                  	mov rbx, rax
   688 00000272 58                      	pop rax
   689 00000273 C60004                  	mov byte [rax], T_closure
   690 00000276 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   691 0000027A 48C74009[87020000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
   692 00000282 E92F010000              	jmp .L_lambda_simple_end_0003
   693                                  .L_lambda_simple_code_0003:	; lambda-simple body
   694 00000287 48837C241001            	cmp qword [rsp + 8 * 2], 1
   695 0000028D 740B                    	je .L_lambda_simple_arity_check_ok_0003
   696 0000028F FF742410                	push qword [rsp + 8 * 2]
   697 00000293 6A01                    	push 1
   698 00000295 E9DA5E0000              	jmp L_error_incorrect_arity_simple
   699                                  .L_lambda_simple_arity_check_ok_0003:
   700 0000029A C8000000                	enter 0, 0
   701 0000029E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   702 000002A3 E8135F0000              	call malloc
   703 000002A8 50                      	push rax
   704 000002A9 BF08000000              	mov rdi, 8 * 1	; new rib
   705 000002AE E8085F0000              	call malloc
   706 000002B3 50                      	push rax
   707 000002B4 BF10000000              	mov rdi, 8 * 2	; extended env
   708 000002B9 E8FD5E0000              	call malloc
   709 000002BE 488B7D10                	mov rdi, ENV
   710 000002C2 BE00000000              	mov rsi, 0
   711 000002C7 BA01000000              	mov rdx, 1
   712                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
   713 000002CC 4883FE01                	cmp rsi, 1
   714 000002D0 7410                    	je .L_lambda_simple_env_end_0004
   715 000002D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   716 000002D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
   717 000002DA 48FFC6                  	inc rsi
   718 000002DD 48FFC2                  	inc rdx
   719 000002E0 EBEA                    	jmp .L_lambda_simple_env_loop_0004
   720                                  .L_lambda_simple_env_end_0004:
   721 000002E2 5B                      	pop rbx
   722 000002E3 BE00000000              	mov rsi, 0
   723                                  .L_lambda_simple_params_loop_0004:	; copy params
   724 000002E8 4883FE01                	cmp rsi, 1
   725 000002EC 740E                    	je .L_lambda_simple_params_end_0004
   726 000002EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   727 000002F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
   728 000002F7 48FFC6                  	inc rsi
   729 000002FA EBEC                    	jmp .L_lambda_simple_params_loop_0004
   730                                  .L_lambda_simple_params_end_0004:
   731 000002FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   732 000002FF 4889C3                  	mov rbx, rax
   733 00000302 58                      	pop rax
   734 00000303 C60004                  	mov byte [rax], T_closure
   735 00000306 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   736 0000030A 48C74009[17030000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
   737 00000312 E99B000000              	jmp .L_lambda_simple_end_0004
   738                                  .L_lambda_simple_code_0004:	; lambda-simple body
   739 00000317 48837C241001            	cmp qword [rsp + 8 * 2], 1
   740 0000031D 740B                    	je .L_lambda_simple_arity_check_ok_0004
   741 0000031F FF742410                	push qword [rsp + 8 * 2]
   742 00000323 6A01                    	push 1
   743 00000325 E94A5E0000              	jmp L_error_incorrect_arity_simple
   744                                  .L_lambda_simple_arity_check_ok_0004:
   745 0000032A C8000000                	enter 0, 0
   746                                  	; preparing a tail-call
   747                                  	; preparing a non-tail-call
   748                                  	; preparing a non-tail-call
   749 0000032E 488B4520                	mov rax, PARAM(0)	; param y
   750 00000332 50                      	push rax
   751 00000333 6A01                    	push 1	; arg count
   752 00000335 488B4510                	mov rax, ENV
   753 00000339 488B00                  	mov rax, qword [rax + 8 * 0]
   754 0000033C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   755 0000033F 803804                  	cmp byte [rax], T_closure
   756 00000342 0F85CA5D0000            	jne L_error_non_closure
   757 00000348 FF7001                  	push SOB_CLOSURE_ENV(rax)
   758 0000034B FF5009                  	call SOB_CLOSURE_CODE(rax)
   759 0000034E 50                      	push rax
   760 0000034F 6A01                    	push 1	; arg count
   761 00000351 488B4510                	mov rax, ENV
   762 00000355 488B00                  	mov rax, qword [rax + 8 * 0]
   763 00000358 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   764 0000035B 803804                  	cmp byte [rax], T_closure
   765 0000035E 0F85AE5D0000            	jne L_error_non_closure
   766 00000364 FF7001                  	push SOB_CLOSURE_ENV(rax)
   767 00000367 FF5009                  	call SOB_CLOSURE_CODE(rax)
   768 0000036A 50                      	push rax
   769 0000036B 6A01                    	push 1	; arg count
   770 0000036D 488B4510                	mov rax, ENV
   771 00000371 488B00                  	mov rax, qword [rax + 8 * 0]
   772 00000374 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   773 00000377 803804                  	cmp byte [rax], T_closure
   774 0000037A 0F85925D0000            	jne L_error_non_closure
   775 00000380 FF7001                  	push SOB_CLOSURE_ENV(rax)
   776 00000383 FF7508                  	push qword [rbp + 8 * 1]
   777                                   ; old ret addr
   778 00000386 5D                      	pop rbp
   779                                  ; restore the old rbp
   780 00000387 BB01000000              	mov rbx, 1
   781 0000038C 4883C303                	add rbx, 3
   782 00000390 488B7D10                	mov rdi, qword [rbp + 8*2]
   783                                  .L_tc_recycle_frame_loop_0002:
   784 00000394 4883FB00                	cmp rbx, 0
   785 00000398 7411                    je .L_tc_recycle_frame_done_0002
   786 0000039A 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
   787 0000039E 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
   788 000003A3 48FFCF                  	dec rdi
   789 000003A6 48FFCB                  	dec rbx
   790 000003A9 EBE9                    jmp .L_tc_recycle_frame_loop_0002
   791                                  .L_tc_recycle_frame_done_0002:
   792 000003AB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
   793 000003AE C9                      	leave
   794 000003AF C21800                  	ret AND_KILL_FRAME(1)
   795                                  .L_lambda_simple_end_0004:	; new closure is in rax
   796 000003B2 C9                      	leave
   797 000003B3 C21800                  	ret AND_KILL_FRAME(1)
   798                                  .L_lambda_simple_end_0003:	; new closure is in rax
   799 000003B6 50                      	push rax
   800 000003B7 6A01                    	push 1	; arg count
   801                                  	; preparing a non-tail-call
   802                                  	; preparing a non-tail-call
   803 000003B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   804 000003BE E8F85D0000              	call malloc
   805 000003C3 50                      	push rax
   806 000003C4 BF00000000              	mov rdi, 8 * 0	; new rib
   807 000003C9 E8ED5D0000              	call malloc
   808 000003CE 50                      	push rax
   809 000003CF BF08000000              	mov rdi, 8 * 1	; extended env
   810 000003D4 E8E25D0000              	call malloc
   811 000003D9 488B7D10                	mov rdi, ENV
   812 000003DD BE00000000              	mov rsi, 0
   813 000003E2 BA01000000              	mov rdx, 1
   814                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
   815 000003E7 4883FE00                	cmp rsi, 0
   816 000003EB 7410                    	je .L_lambda_simple_env_end_0005
   817 000003ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   818 000003F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
   819 000003F5 48FFC6                  	inc rsi
   820 000003F8 48FFC2                  	inc rdx
   821 000003FB EBEA                    	jmp .L_lambda_simple_env_loop_0005
   822                                  .L_lambda_simple_env_end_0005:
   823 000003FD 5B                      	pop rbx
   824 000003FE BE00000000              	mov rsi, 0
   825                                  .L_lambda_simple_params_loop_0005:	; copy params
   826 00000403 4883FE00                	cmp rsi, 0
   827 00000407 740E                    	je .L_lambda_simple_params_end_0005
   828 00000409 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   829 0000040E 488914F3                	mov qword [rbx + 8 * rsi], rdx
   830 00000412 48FFC6                  	inc rsi
   831 00000415 EBEC                    	jmp .L_lambda_simple_params_loop_0005
   832                                  .L_lambda_simple_params_end_0005:
   833 00000417 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   834 0000041A 4889C3                  	mov rbx, rax
   835 0000041D 58                      	pop rax
   836 0000041E C60004                  	mov byte [rax], T_closure
   837 00000421 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   838 00000425 48C74009[32040000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
   839 0000042D E910010000              	jmp .L_lambda_simple_end_0005
   840                                  .L_lambda_simple_code_0005:	; lambda-simple body
   841 00000432 48837C241001            	cmp qword [rsp + 8 * 2], 1
   842 00000438 740B                    	je .L_lambda_simple_arity_check_ok_0005
   843 0000043A FF742410                	push qword [rsp + 8 * 2]
   844 0000043E 6A01                    	push 1
   845 00000440 E92F5D0000              	jmp L_error_incorrect_arity_simple
   846                                  .L_lambda_simple_arity_check_ok_0005:
   847 00000445 C8000000                	enter 0, 0
   848 00000449 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   849 0000044E E8685D0000              	call malloc
   850 00000453 50                      	push rax
   851 00000454 BF08000000              	mov rdi, 8 * 1	; new rib
   852 00000459 E85D5D0000              	call malloc
   853 0000045E 50                      	push rax
   854 0000045F BF10000000              	mov rdi, 8 * 2	; extended env
   855 00000464 E8525D0000              	call malloc
   856 00000469 488B7D10                	mov rdi, ENV
   857 0000046D BE00000000              	mov rsi, 0
   858 00000472 BA01000000              	mov rdx, 1
   859                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
   860 00000477 4883FE01                	cmp rsi, 1
   861 0000047B 7410                    	je .L_lambda_simple_env_end_0006
   862 0000047D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   863 00000481 48890CD0                	mov qword [rax + 8 * rdx], rcx
   864 00000485 48FFC6                  	inc rsi
   865 00000488 48FFC2                  	inc rdx
   866 0000048B EBEA                    	jmp .L_lambda_simple_env_loop_0006
   867                                  .L_lambda_simple_env_end_0006:
   868 0000048D 5B                      	pop rbx
   869 0000048E BE00000000              	mov rsi, 0
   870                                  .L_lambda_simple_params_loop_0006:	; copy params
   871 00000493 4883FE01                	cmp rsi, 1
   872 00000497 740E                    	je .L_lambda_simple_params_end_0006
   873 00000499 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   874 0000049E 488914F3                	mov qword [rbx + 8 * rsi], rdx
   875 000004A2 48FFC6                  	inc rsi
   876 000004A5 EBEC                    	jmp .L_lambda_simple_params_loop_0006
   877                                  .L_lambda_simple_params_end_0006:
   878 000004A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   879 000004AA 4889C3                  	mov rbx, rax
   880 000004AD 58                      	pop rax
   881 000004AE C60004                  	mov byte [rax], T_closure
   882 000004B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   883 000004B5 48C74009[BF040000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
   884 000004BD EB7F                    	jmp .L_lambda_simple_end_0006
   885                                  .L_lambda_simple_code_0006:	; lambda-simple body
   886 000004BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
   887 000004C5 740B                    	je .L_lambda_simple_arity_check_ok_0006
   888 000004C7 FF742410                	push qword [rsp + 8 * 2]
   889 000004CB 6A01                    	push 1
   890 000004CD E9A25C0000              	jmp L_error_incorrect_arity_simple
   891                                  .L_lambda_simple_arity_check_ok_0006:
   892 000004D2 C8000000                	enter 0, 0
   893                                  	; preparing a tail-call
   894                                  	; preparing a non-tail-call
   895 000004D6 488B4520                	mov rax, PARAM(0)	; param y
   896 000004DA 50                      	push rax
   897 000004DB 6A01                    	push 1	; arg count
   898 000004DD 488B4510                	mov rax, ENV
   899 000004E1 488B00                  	mov rax, qword [rax + 8 * 0]
   900 000004E4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   901 000004E7 803804                  	cmp byte [rax], T_closure
   902 000004EA 0F85225C0000            	jne L_error_non_closure
   903 000004F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
   904 000004F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
   905 000004F6 50                      	push rax
   906 000004F7 6A01                    	push 1	; arg count
   907 000004F9 488B4510                	mov rax, ENV
   908 000004FD 488B00                  	mov rax, qword [rax + 8 * 0]
   909 00000500 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
   910 00000503 803804                  	cmp byte [rax], T_closure
   911 00000506 0F85065C0000            	jne L_error_non_closure
   912 0000050C FF7001                  	push SOB_CLOSURE_ENV(rax)
   913 0000050F FF7508                  	push qword [rbp + 8 * 1]
   914                                   ; old ret addr
   915 00000512 5D                      	pop rbp
   916                                  ; restore the old rbp
   917 00000513 BB01000000              	mov rbx, 1
   918 00000518 4883C303                	add rbx, 3
   919 0000051C 488B7D10                	mov rdi, qword [rbp + 8*2]
   920                                  .L_tc_recycle_frame_loop_0003:
   921 00000520 4883FB00                	cmp rbx, 0
   922 00000524 7411                    je .L_tc_recycle_frame_done_0003
   923 00000526 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
   924 0000052A 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
   925 0000052F 48FFCF                  	dec rdi
   926 00000532 48FFCB                  	dec rbx
   927 00000535 EBE9                    jmp .L_tc_recycle_frame_loop_0003
   928                                  .L_tc_recycle_frame_done_0003:
   929 00000537 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
   930 0000053A C9                      	leave
   931 0000053B C21800                  	ret AND_KILL_FRAME(1)
   932                                  .L_lambda_simple_end_0006:	; new closure is in rax
   933 0000053E C9                      	leave
   934 0000053F C21800                  	ret AND_KILL_FRAME(1)
   935                                  .L_lambda_simple_end_0005:	; new closure is in rax
   936 00000542 50                      	push rax
   937 00000543 6A01                    	push 1	; arg count
   938 00000545 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   939 0000054A E86C5C0000              	call malloc
   940 0000054F 50                      	push rax
   941 00000550 BF00000000              	mov rdi, 8 * 0	; new rib
   942 00000555 E8615C0000              	call malloc
   943 0000055A 50                      	push rax
   944 0000055B BF08000000              	mov rdi, 8 * 1	; extended env
   945 00000560 E8565C0000              	call malloc
   946 00000565 488B7D10                	mov rdi, ENV
   947 00000569 BE00000000              	mov rsi, 0
   948 0000056E BA01000000              	mov rdx, 1
   949                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
   950 00000573 4883FE00                	cmp rsi, 0
   951 00000577 7410                    	je .L_lambda_simple_env_end_0007
   952 00000579 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   953 0000057D 48890CD0                	mov qword [rax + 8 * rdx], rcx
   954 00000581 48FFC6                  	inc rsi
   955 00000584 48FFC2                  	inc rdx
   956 00000587 EBEA                    	jmp .L_lambda_simple_env_loop_0007
   957                                  .L_lambda_simple_env_end_0007:
   958 00000589 5B                      	pop rbx
   959 0000058A BE00000000              	mov rsi, 0
   960                                  .L_lambda_simple_params_loop_0007:	; copy params
   961 0000058F 4883FE00                	cmp rsi, 0
   962 00000593 740E                    	je .L_lambda_simple_params_end_0007
   963 00000595 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   964 0000059A 488914F3                	mov qword [rbx + 8 * rsi], rdx
   965 0000059E 48FFC6                  	inc rsi
   966 000005A1 EBEC                    	jmp .L_lambda_simple_params_loop_0007
   967                                  .L_lambda_simple_params_end_0007:
   968 000005A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   969 000005A6 4889C3                  	mov rbx, rax
   970 000005A9 58                      	pop rax
   971 000005AA C60004                  	mov byte [rax], T_closure
   972 000005AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   973 000005B1 48C74009[BE050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
   974 000005B9 E92F010000              	jmp .L_lambda_simple_end_0007
   975                                  .L_lambda_simple_code_0007:	; lambda-simple body
   976 000005BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
   977 000005C4 740B                    	je .L_lambda_simple_arity_check_ok_0007
   978 000005C6 FF742410                	push qword [rsp + 8 * 2]
   979 000005CA 6A01                    	push 1
   980 000005CC E9A35B0000              	jmp L_error_incorrect_arity_simple
   981                                  .L_lambda_simple_arity_check_ok_0007:
   982 000005D1 C8000000                	enter 0, 0
   983 000005D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   984 000005DA E8DC5B0000              	call malloc
   985 000005DF 50                      	push rax
   986 000005E0 BF08000000              	mov rdi, 8 * 1	; new rib
   987 000005E5 E8D15B0000              	call malloc
   988 000005EA 50                      	push rax
   989 000005EB BF10000000              	mov rdi, 8 * 2	; extended env
   990 000005F0 E8C65B0000              	call malloc
   991 000005F5 488B7D10                	mov rdi, ENV
   992 000005F9 BE00000000              	mov rsi, 0
   993 000005FE BA01000000              	mov rdx, 1
   994                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
   995 00000603 4883FE01                	cmp rsi, 1
   996 00000607 7410                    	je .L_lambda_simple_env_end_0008
   997 00000609 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   998 0000060D 48890CD0                	mov qword [rax + 8 * rdx], rcx
   999 00000611 48FFC6                  	inc rsi
  1000 00000614 48FFC2                  	inc rdx
  1001 00000617 EBEA                    	jmp .L_lambda_simple_env_loop_0008
  1002                                  .L_lambda_simple_env_end_0008:
  1003 00000619 5B                      	pop rbx
  1004 0000061A BE00000000              	mov rsi, 0
  1005                                  .L_lambda_simple_params_loop_0008:	; copy params
  1006 0000061F 4883FE01                	cmp rsi, 1
  1007 00000623 740E                    	je .L_lambda_simple_params_end_0008
  1008 00000625 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1009 0000062A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1010 0000062E 48FFC6                  	inc rsi
  1011 00000631 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  1012                                  .L_lambda_simple_params_end_0008:
  1013 00000633 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1014 00000636 4889C3                  	mov rbx, rax
  1015 00000639 58                      	pop rax
  1016 0000063A C60004                  	mov byte [rax], T_closure
  1017 0000063D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1018 00000641 48C74009[4E060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  1019 00000649 E99B000000              	jmp .L_lambda_simple_end_0008
  1020                                  .L_lambda_simple_code_0008:	; lambda-simple body
  1021 0000064E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1022 00000654 740B                    	je .L_lambda_simple_arity_check_ok_0008
  1023 00000656 FF742410                	push qword [rsp + 8 * 2]
  1024 0000065A 6A01                    	push 1
  1025 0000065C E9135B0000              	jmp L_error_incorrect_arity_simple
  1026                                  .L_lambda_simple_arity_check_ok_0008:
  1027 00000661 C8000000                	enter 0, 0
  1028                                  	; preparing a tail-call
  1029                                  	; preparing a non-tail-call
  1030                                  	; preparing a non-tail-call
  1031 00000665 488B4520                	mov rax, PARAM(0)	; param y
  1032 00000669 50                      	push rax
  1033 0000066A 6A01                    	push 1	; arg count
  1034 0000066C 488B4510                	mov rax, ENV
  1035 00000670 488B00                  	mov rax, qword [rax + 8 * 0]
  1036 00000673 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  1037 00000676 803804                  	cmp byte [rax], T_closure
  1038 00000679 0F85935A0000            	jne L_error_non_closure
  1039 0000067F FF7001                  	push SOB_CLOSURE_ENV(rax)
  1040 00000682 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1041 00000685 50                      	push rax
  1042 00000686 6A01                    	push 1	; arg count
  1043 00000688 488B4510                	mov rax, ENV
  1044 0000068C 488B00                  	mov rax, qword [rax + 8 * 0]
  1045 0000068F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  1046 00000692 803804                  	cmp byte [rax], T_closure
  1047 00000695 0F85775A0000            	jne L_error_non_closure
  1048 0000069B FF7001                  	push SOB_CLOSURE_ENV(rax)
  1049 0000069E FF5009                  	call SOB_CLOSURE_CODE(rax)
  1050 000006A1 50                      	push rax
  1051 000006A2 6A01                    	push 1	; arg count
  1052 000006A4 488B4510                	mov rax, ENV
  1053 000006A8 488B00                  	mov rax, qword [rax + 8 * 0]
  1054 000006AB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  1055 000006AE 803804                  	cmp byte [rax], T_closure
  1056 000006B1 0F855B5A0000            	jne L_error_non_closure
  1057 000006B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1058 000006BA FF7508                  	push qword [rbp + 8 * 1]
  1059                                   ; old ret addr
  1060 000006BD 5D                      	pop rbp
  1061                                  ; restore the old rbp
  1062 000006BE BB01000000              	mov rbx, 1
  1063 000006C3 4883C303                	add rbx, 3
  1064 000006C7 488B7D10                	mov rdi, qword [rbp + 8*2]
  1065                                  .L_tc_recycle_frame_loop_0004:
  1066 000006CB 4883FB00                	cmp rbx, 0
  1067 000006CF 7411                    je .L_tc_recycle_frame_done_0004
  1068 000006D1 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1069 000006D5 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1070 000006DA 48FFCF                  	dec rdi
  1071 000006DD 48FFCB                  	dec rbx
  1072 000006E0 EBE9                    jmp .L_tc_recycle_frame_loop_0004
  1073                                  .L_tc_recycle_frame_done_0004:
  1074 000006E2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1075 000006E5 C9                      	leave
  1076 000006E6 C21800                  	ret AND_KILL_FRAME(1)
  1077                                  .L_lambda_simple_end_0008:	; new closure is in rax
  1078 000006E9 C9                      	leave
  1079 000006EA C21800                  	ret AND_KILL_FRAME(1)
  1080                                  .L_lambda_simple_end_0007:	; new closure is in rax
  1081 000006ED 803804                  	cmp byte [rax], T_closure
  1082 000006F0 0F851C5A0000            	jne L_error_non_closure
  1083 000006F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1084 000006F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1085 000006FC 50                      	push rax
  1086 000006FD 6A01                    	push 1	; arg count
  1087 000006FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1088 00000704 E8B25A0000              	call malloc
  1089 00000709 50                      	push rax
  1090 0000070A BF00000000              	mov rdi, 8 * 0	; new rib
  1091 0000070F E8A75A0000              	call malloc
  1092 00000714 50                      	push rax
  1093 00000715 BF08000000              	mov rdi, 8 * 1	; extended env
  1094 0000071A E89C5A0000              	call malloc
  1095 0000071F 488B7D10                	mov rdi, ENV
  1096 00000723 BE00000000              	mov rsi, 0
  1097 00000728 BA01000000              	mov rdx, 1
  1098                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  1099 0000072D 4883FE00                	cmp rsi, 0
  1100 00000731 7410                    	je .L_lambda_simple_env_end_0009
  1101 00000733 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1102 00000737 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1103 0000073B 48FFC6                  	inc rsi
  1104 0000073E 48FFC2                  	inc rdx
  1105 00000741 EBEA                    	jmp .L_lambda_simple_env_loop_0009
  1106                                  .L_lambda_simple_env_end_0009:
  1107 00000743 5B                      	pop rbx
  1108 00000744 BE00000000              	mov rsi, 0
  1109                                  .L_lambda_simple_params_loop_0009:	; copy params
  1110 00000749 4883FE00                	cmp rsi, 0
  1111 0000074D 740E                    	je .L_lambda_simple_params_end_0009
  1112 0000074F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1113 00000754 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1114 00000758 48FFC6                  	inc rsi
  1115 0000075B EBEC                    	jmp .L_lambda_simple_params_loop_0009
  1116                                  .L_lambda_simple_params_end_0009:
  1117 0000075D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1118 00000760 4889C3                  	mov rbx, rax
  1119 00000763 58                      	pop rax
  1120 00000764 C60004                  	mov byte [rax], T_closure
  1121 00000767 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1122 0000076B 48C74009[78070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  1123 00000773 E903060000              	jmp .L_lambda_simple_end_0009
  1124                                  .L_lambda_simple_code_0009:	; lambda-simple body
  1125 00000778 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1126 0000077E 740B                    	je .L_lambda_simple_arity_check_ok_0009
  1127 00000780 FF742410                	push qword [rsp + 8 * 2]
  1128 00000784 6A01                    	push 1
  1129 00000786 E9E9590000              	jmp L_error_incorrect_arity_simple
  1130                                  .L_lambda_simple_arity_check_ok_0009:
  1131 0000078B C8000000                	enter 0, 0
  1132 0000078F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1133 00000794 E8225A0000              	call malloc
  1134 00000799 50                      	push rax
  1135 0000079A BF08000000              	mov rdi, 8 * 1	; new rib
  1136 0000079F E8175A0000              	call malloc
  1137 000007A4 50                      	push rax
  1138 000007A5 BF10000000              	mov rdi, 8 * 2	; extended env
  1139 000007AA E80C5A0000              	call malloc
  1140 000007AF 488B7D10                	mov rdi, ENV
  1141 000007B3 BE00000000              	mov rsi, 0
  1142 000007B8 BA01000000              	mov rdx, 1
  1143                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  1144 000007BD 4883FE01                	cmp rsi, 1
  1145 000007C1 7410                    	je .L_lambda_simple_env_end_000a
  1146 000007C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1147 000007C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1148 000007CB 48FFC6                  	inc rsi
  1149 000007CE 48FFC2                  	inc rdx
  1150 000007D1 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  1151                                  .L_lambda_simple_env_end_000a:
  1152 000007D3 5B                      	pop rbx
  1153 000007D4 BE00000000              	mov rsi, 0
  1154                                  .L_lambda_simple_params_loop_000a:	; copy params
  1155 000007D9 4883FE01                	cmp rsi, 1
  1156 000007DD 740E                    	je .L_lambda_simple_params_end_000a
  1157 000007DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1158 000007E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1159 000007E8 48FFC6                  	inc rsi
  1160 000007EB EBEC                    	jmp .L_lambda_simple_params_loop_000a
  1161                                  .L_lambda_simple_params_end_000a:
  1162 000007ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1163 000007F0 4889C3                  	mov rbx, rax
  1164 000007F3 58                      	pop rax
  1165 000007F4 C60004                  	mov byte [rax], T_closure
  1166 000007F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1167 000007FB 48C74009[08080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  1168 00000803 E96F050000              	jmp .L_lambda_simple_end_000a
  1169                                  .L_lambda_simple_code_000a:	; lambda-simple body
  1170 00000808 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1171 0000080E 740B                    	je .L_lambda_simple_arity_check_ok_000a
  1172 00000810 FF742410                	push qword [rsp + 8 * 2]
  1173 00000814 6A01                    	push 1
  1174 00000816 E959590000              	jmp L_error_incorrect_arity_simple
  1175                                  .L_lambda_simple_arity_check_ok_000a:
  1176 0000081B C8000000                	enter 0, 0
  1177                                  	; preparing a tail-call
  1178 0000081F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1179 00000824 E892590000              	call malloc
  1180 00000829 50                      	push rax
  1181 0000082A BF08000000              	mov rdi, 8 * 1	; new rib
  1182 0000082F E887590000              	call malloc
  1183 00000834 50                      	push rax
  1184 00000835 BF18000000              	mov rdi, 8 * 3	; extended env
  1185 0000083A E87C590000              	call malloc
  1186 0000083F 488B7D10                	mov rdi, ENV
  1187 00000843 BE00000000              	mov rsi, 0
  1188 00000848 BA01000000              	mov rdx, 1
  1189                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  1190 0000084D 4883FE02                	cmp rsi, 2
  1191 00000851 7410                    	je .L_lambda_simple_env_end_000b
  1192 00000853 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1193 00000857 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1194 0000085B 48FFC6                  	inc rsi
  1195 0000085E 48FFC2                  	inc rdx
  1196 00000861 EBEA                    	jmp .L_lambda_simple_env_loop_000b
  1197                                  .L_lambda_simple_env_end_000b:
  1198 00000863 5B                      	pop rbx
  1199 00000864 BE00000000              	mov rsi, 0
  1200                                  .L_lambda_simple_params_loop_000b:	; copy params
  1201 00000869 4883FE01                	cmp rsi, 1
  1202 0000086D 740E                    	je .L_lambda_simple_params_end_000b
  1203 0000086F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1204 00000874 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1205 00000878 48FFC6                  	inc rsi
  1206 0000087B EBEC                    	jmp .L_lambda_simple_params_loop_000b
  1207                                  .L_lambda_simple_params_end_000b:
  1208 0000087D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1209 00000880 4889C3                  	mov rbx, rax
  1210 00000883 58                      	pop rax
  1211 00000884 C60004                  	mov byte [rax], T_closure
  1212 00000887 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1213 0000088B 48C74009[98080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  1214 00000893 E9B0000000              	jmp .L_lambda_simple_end_000b
  1215                                  .L_lambda_simple_code_000b:	; lambda-simple body
  1216 00000898 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1217 0000089E 740B                    	je .L_lambda_simple_arity_check_ok_000b
  1218 000008A0 FF742410                	push qword [rsp + 8 * 2]
  1219 000008A4 6A01                    	push 1
  1220 000008A6 E9C9580000              	jmp L_error_incorrect_arity_simple
  1221                                  .L_lambda_simple_arity_check_ok_000b:
  1222 000008AB C8000000                	enter 0, 0
  1223 000008AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1224 000008B4 E802590000              	call malloc
  1225 000008B9 50                      	push rax
  1226 000008BA BF08000000              	mov rdi, 8 * 1	; new rib
  1227 000008BF E8F7580000              	call malloc
  1228 000008C4 50                      	push rax
  1229 000008C5 BF20000000              	mov rdi, 8 * 4	; extended env
  1230 000008CA E8EC580000              	call malloc
  1231 000008CF 488B7D10                	mov rdi, ENV
  1232 000008D3 BE00000000              	mov rsi, 0
  1233 000008D8 BA01000000              	mov rdx, 1
  1234                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  1235 000008DD 4883FE03                	cmp rsi, 3
  1236 000008E1 7410                    	je .L_lambda_simple_env_end_000c
  1237 000008E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1238 000008E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1239 000008EB 48FFC6                  	inc rsi
  1240 000008EE 48FFC2                  	inc rdx
  1241 000008F1 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  1242                                  .L_lambda_simple_env_end_000c:
  1243 000008F3 5B                      	pop rbx
  1244 000008F4 BE00000000              	mov rsi, 0
  1245                                  .L_lambda_simple_params_loop_000c:	; copy params
  1246 000008F9 4883FE01                	cmp rsi, 1
  1247 000008FD 740E                    	je .L_lambda_simple_params_end_000c
  1248 000008FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1249 00000904 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1250 00000908 48FFC6                  	inc rsi
  1251 0000090B EBEC                    	jmp .L_lambda_simple_params_loop_000c
  1252                                  .L_lambda_simple_params_end_000c:
  1253 0000090D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1254 00000910 4889C3                  	mov rbx, rax
  1255 00000913 58                      	pop rax
  1256 00000914 C60004                  	mov byte [rax], T_closure
  1257 00000917 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1258 0000091B 48C74009[25090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  1259 00000923 EB1F                    	jmp .L_lambda_simple_end_000c
  1260                                  .L_lambda_simple_code_000c:	; lambda-simple body
  1261 00000925 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1262 0000092B 740B                    	je .L_lambda_simple_arity_check_ok_000c
  1263 0000092D FF742410                	push qword [rsp + 8 * 2]
  1264 00000931 6A01                    	push 1
  1265 00000933 E93C580000              	jmp L_error_incorrect_arity_simple
  1266                                  .L_lambda_simple_arity_check_ok_000c:
  1267 00000938 C8000000                	enter 0, 0
  1268 0000093C 488B4520                	mov rax, PARAM(0)	; param y
  1269 00000940 C9                      	leave
  1270 00000941 C21800                  	ret AND_KILL_FRAME(1)
  1271                                  .L_lambda_simple_end_000c:	; new closure is in rax
  1272 00000944 C9                      	leave
  1273 00000945 C21800                  	ret AND_KILL_FRAME(1)
  1274                                  .L_lambda_simple_end_000b:	; new closure is in rax
  1275 00000948 50                      	push rax
  1276 00000949 6A01                    	push 1	; arg count
  1277                                  	; preparing a non-tail-call
  1278                                  	; preparing a non-tail-call
  1279 0000094B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1280 00000950 E866580000              	call malloc
  1281 00000955 50                      	push rax
  1282 00000956 BF08000000              	mov rdi, 8 * 1	; new rib
  1283 0000095B E85B580000              	call malloc
  1284 00000960 50                      	push rax
  1285 00000961 BF18000000              	mov rdi, 8 * 3	; extended env
  1286 00000966 E850580000              	call malloc
  1287 0000096B 488B7D10                	mov rdi, ENV
  1288 0000096F BE00000000              	mov rsi, 0
  1289 00000974 BA01000000              	mov rdx, 1
  1290                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  1291 00000979 4883FE02                	cmp rsi, 2
  1292 0000097D 7410                    	je .L_lambda_simple_env_end_000d
  1293 0000097F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1294 00000983 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1295 00000987 48FFC6                  	inc rsi
  1296 0000098A 48FFC2                  	inc rdx
  1297 0000098D EBEA                    	jmp .L_lambda_simple_env_loop_000d
  1298                                  .L_lambda_simple_env_end_000d:
  1299 0000098F 5B                      	pop rbx
  1300 00000990 BE00000000              	mov rsi, 0
  1301                                  .L_lambda_simple_params_loop_000d:	; copy params
  1302 00000995 4883FE01                	cmp rsi, 1
  1303 00000999 740E                    	je .L_lambda_simple_params_end_000d
  1304 0000099B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1305 000009A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1306 000009A4 48FFC6                  	inc rsi
  1307 000009A7 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  1308                                  .L_lambda_simple_params_end_000d:
  1309 000009A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1310 000009AC 4889C3                  	mov rbx, rax
  1311 000009AF 58                      	pop rax
  1312 000009B0 C60004                  	mov byte [rax], T_closure
  1313 000009B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1314 000009B7 48C74009[C4090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  1315 000009BF E946030000              	jmp .L_lambda_simple_end_000d
  1316                                  .L_lambda_simple_code_000d:	; lambda-simple body
  1317 000009C4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1318 000009CA 740B                    	je .L_lambda_simple_arity_check_ok_000d
  1319 000009CC FF742410                	push qword [rsp + 8 * 2]
  1320 000009D0 6A01                    	push 1
  1321 000009D2 E99D570000              	jmp L_error_incorrect_arity_simple
  1322                                  .L_lambda_simple_arity_check_ok_000d:
  1323 000009D7 C8000000                	enter 0, 0
  1324 000009DB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1325 000009E0 E8D6570000              	call malloc
  1326 000009E5 50                      	push rax
  1327 000009E6 BF08000000              	mov rdi, 8 * 1	; new rib
  1328 000009EB E8CB570000              	call malloc
  1329 000009F0 50                      	push rax
  1330 000009F1 BF20000000              	mov rdi, 8 * 4	; extended env
  1331 000009F6 E8C0570000              	call malloc
  1332 000009FB 488B7D10                	mov rdi, ENV
  1333 000009FF BE00000000              	mov rsi, 0
  1334 00000A04 BA01000000              	mov rdx, 1
  1335                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  1336 00000A09 4883FE03                	cmp rsi, 3
  1337 00000A0D 7410                    	je .L_lambda_simple_env_end_000e
  1338 00000A0F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1339 00000A13 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1340 00000A17 48FFC6                  	inc rsi
  1341 00000A1A 48FFC2                  	inc rdx
  1342 00000A1D EBEA                    	jmp .L_lambda_simple_env_loop_000e
  1343                                  .L_lambda_simple_env_end_000e:
  1344 00000A1F 5B                      	pop rbx
  1345 00000A20 BE00000000              	mov rsi, 0
  1346                                  .L_lambda_simple_params_loop_000e:	; copy params
  1347 00000A25 4883FE01                	cmp rsi, 1
  1348 00000A29 740E                    	je .L_lambda_simple_params_end_000e
  1349 00000A2B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1350 00000A30 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1351 00000A34 48FFC6                  	inc rsi
  1352 00000A37 EBEC                    	jmp .L_lambda_simple_params_loop_000e
  1353                                  .L_lambda_simple_params_end_000e:
  1354 00000A39 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1355 00000A3C 4889C3                  	mov rbx, rax
  1356 00000A3F 58                      	pop rax
  1357 00000A40 C60004                  	mov byte [rax], T_closure
  1358 00000A43 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1359 00000A47 48C74009[540A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  1360 00000A4F E9B2020000              	jmp .L_lambda_simple_end_000e
  1361                                  .L_lambda_simple_code_000e:	; lambda-simple body
  1362 00000A54 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1363 00000A5A 740B                    	je .L_lambda_simple_arity_check_ok_000e
  1364 00000A5C FF742410                	push qword [rsp + 8 * 2]
  1365 00000A60 6A01                    	push 1
  1366 00000A62 E90D570000              	jmp L_error_incorrect_arity_simple
  1367                                  .L_lambda_simple_arity_check_ok_000e:
  1368 00000A67 C8000000                	enter 0, 0
  1369                                  	; preparing a tail-call
  1370 00000A6B 488B4520                	mov rax, PARAM(0)	; param b
  1371 00000A6F 50                      	push rax
  1372 00000A70 6A01                    	push 1	; arg count
  1373                                  	; preparing a non-tail-call
  1374 00000A72 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1375 00000A77 E83F570000              	call malloc
  1376 00000A7C 50                      	push rax
  1377 00000A7D BF08000000              	mov rdi, 8 * 1	; new rib
  1378 00000A82 E834570000              	call malloc
  1379 00000A87 50                      	push rax
  1380 00000A88 BF28000000              	mov rdi, 8 * 5	; extended env
  1381 00000A8D E829570000              	call malloc
  1382 00000A92 488B7D10                	mov rdi, ENV
  1383 00000A96 BE00000000              	mov rsi, 0
  1384 00000A9B BA01000000              	mov rdx, 1
  1385                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  1386 00000AA0 4883FE04                	cmp rsi, 4
  1387 00000AA4 7410                    	je .L_lambda_simple_env_end_000f
  1388 00000AA6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1389 00000AAA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1390 00000AAE 48FFC6                  	inc rsi
  1391 00000AB1 48FFC2                  	inc rdx
  1392 00000AB4 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  1393                                  .L_lambda_simple_env_end_000f:
  1394 00000AB6 5B                      	pop rbx
  1395 00000AB7 BE00000000              	mov rsi, 0
  1396                                  .L_lambda_simple_params_loop_000f:	; copy params
  1397 00000ABC 4883FE01                	cmp rsi, 1
  1398 00000AC0 740E                    	je .L_lambda_simple_params_end_000f
  1399 00000AC2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1400 00000AC7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1401 00000ACB 48FFC6                  	inc rsi
  1402 00000ACE EBEC                    	jmp .L_lambda_simple_params_loop_000f
  1403                                  .L_lambda_simple_params_end_000f:
  1404 00000AD0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1405 00000AD3 4889C3                  	mov rbx, rax
  1406 00000AD6 58                      	pop rax
  1407 00000AD7 C60004                  	mov byte [rax], T_closure
  1408 00000ADA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1409 00000ADE 48C74009[EB0A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  1410 00000AE6 E9C4010000              	jmp .L_lambda_simple_end_000f
  1411                                  .L_lambda_simple_code_000f:	; lambda-simple body
  1412 00000AEB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1413 00000AF1 740B                    	je .L_lambda_simple_arity_check_ok_000f
  1414 00000AF3 FF742410                	push qword [rsp + 8 * 2]
  1415 00000AF7 6A01                    	push 1
  1416 00000AF9 E976560000              	jmp L_error_incorrect_arity_simple
  1417                                  .L_lambda_simple_arity_check_ok_000f:
  1418 00000AFE C8000000                	enter 0, 0
  1419 00000B02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1420 00000B07 E8AF560000              	call malloc
  1421 00000B0C 50                      	push rax
  1422 00000B0D BF08000000              	mov rdi, 8 * 1	; new rib
  1423 00000B12 E8A4560000              	call malloc
  1424 00000B17 50                      	push rax
  1425 00000B18 BF30000000              	mov rdi, 8 * 6	; extended env
  1426 00000B1D E899560000              	call malloc
  1427 00000B22 488B7D10                	mov rdi, ENV
  1428 00000B26 BE00000000              	mov rsi, 0
  1429 00000B2B BA01000000              	mov rdx, 1
  1430                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  1431 00000B30 4883FE05                	cmp rsi, 5
  1432 00000B34 7410                    	je .L_lambda_simple_env_end_0010
  1433 00000B36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1434 00000B3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1435 00000B3E 48FFC6                  	inc rsi
  1436 00000B41 48FFC2                  	inc rdx
  1437 00000B44 EBEA                    	jmp .L_lambda_simple_env_loop_0010
  1438                                  .L_lambda_simple_env_end_0010:
  1439 00000B46 5B                      	pop rbx
  1440 00000B47 BE00000000              	mov rsi, 0
  1441                                  .L_lambda_simple_params_loop_0010:	; copy params
  1442 00000B4C 4883FE01                	cmp rsi, 1
  1443 00000B50 740E                    	je .L_lambda_simple_params_end_0010
  1444 00000B52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1445 00000B57 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1446 00000B5B 48FFC6                  	inc rsi
  1447 00000B5E EBEC                    	jmp .L_lambda_simple_params_loop_0010
  1448                                  .L_lambda_simple_params_end_0010:
  1449 00000B60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1450 00000B63 4889C3                  	mov rbx, rax
  1451 00000B66 58                      	pop rax
  1452 00000B67 C60004                  	mov byte [rax], T_closure
  1453 00000B6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1454 00000B6E 48C74009[7B0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  1455 00000B76 E930010000              	jmp .L_lambda_simple_end_0010
  1456                                  .L_lambda_simple_code_0010:	; lambda-simple body
  1457 00000B7B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1458 00000B81 740B                    	je .L_lambda_simple_arity_check_ok_0010
  1459 00000B83 FF742410                	push qword [rsp + 8 * 2]
  1460 00000B87 6A01                    	push 1
  1461 00000B89 E9E6550000              	jmp L_error_incorrect_arity_simple
  1462                                  .L_lambda_simple_arity_check_ok_0010:
  1463 00000B8E C8000000                	enter 0, 0
  1464 00000B92 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1465 00000B97 E81F560000              	call malloc
  1466 00000B9C 50                      	push rax
  1467 00000B9D BF08000000              	mov rdi, 8 * 1	; new rib
  1468 00000BA2 E814560000              	call malloc
  1469 00000BA7 50                      	push rax
  1470 00000BA8 BF38000000              	mov rdi, 8 * 7	; extended env
  1471 00000BAD E809560000              	call malloc
  1472 00000BB2 488B7D10                	mov rdi, ENV
  1473 00000BB6 BE00000000              	mov rsi, 0
  1474 00000BBB BA01000000              	mov rdx, 1
  1475                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  1476 00000BC0 4883FE06                	cmp rsi, 6
  1477 00000BC4 7410                    	je .L_lambda_simple_env_end_0011
  1478 00000BC6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1479 00000BCA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1480 00000BCE 48FFC6                  	inc rsi
  1481 00000BD1 48FFC2                  	inc rdx
  1482 00000BD4 EBEA                    	jmp .L_lambda_simple_env_loop_0011
  1483                                  .L_lambda_simple_env_end_0011:
  1484 00000BD6 5B                      	pop rbx
  1485 00000BD7 BE00000000              	mov rsi, 0
  1486                                  .L_lambda_simple_params_loop_0011:	; copy params
  1487 00000BDC 4883FE01                	cmp rsi, 1
  1488 00000BE0 740E                    	je .L_lambda_simple_params_end_0011
  1489 00000BE2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1490 00000BE7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1491 00000BEB 48FFC6                  	inc rsi
  1492 00000BEE EBEC                    	jmp .L_lambda_simple_params_loop_0011
  1493                                  .L_lambda_simple_params_end_0011:
  1494 00000BF0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1495 00000BF3 4889C3                  	mov rbx, rax
  1496 00000BF6 58                      	pop rax
  1497 00000BF7 C60004                  	mov byte [rax], T_closure
  1498 00000BFA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1499 00000BFE 48C74009[0B0C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  1500 00000C06 E99C000000              	jmp .L_lambda_simple_end_0011
  1501                                  .L_lambda_simple_code_0011:	; lambda-simple body
  1502 00000C0B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1503 00000C11 740B                    	je .L_lambda_simple_arity_check_ok_0011
  1504 00000C13 FF742410                	push qword [rsp + 8 * 2]
  1505 00000C17 6A01                    	push 1
  1506 00000C19 E956550000              	jmp L_error_incorrect_arity_simple
  1507                                  .L_lambda_simple_arity_check_ok_0011:
  1508 00000C1E C8000000                	enter 0, 0
  1509                                  	; preparing a tail-call
  1510                                  	; preparing a non-tail-call
  1511 00000C22 488B4520                	mov rax, PARAM(0)	; param z
  1512 00000C26 50                      	push rax
  1513 00000C27 6A01                    	push 1	; arg count
  1514                                  	; preparing a non-tail-call
  1515 00000C29 488B4510                	mov rax, ENV
  1516 00000C2D 488B00                  	mov rax, qword [rax + 8 * 0]
  1517 00000C30 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  1518 00000C33 50                      	push rax
  1519 00000C34 6A01                    	push 1	; arg count
  1520 00000C36 488B4510                	mov rax, ENV
  1521 00000C3A 488B4008                	mov rax, qword [rax + 8 * 1]
  1522 00000C3E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  1523 00000C41 803804                  	cmp byte [rax], T_closure
  1524 00000C44 0F85C8540000            	jne L_error_non_closure
  1525 00000C4A FF7001                  	push SOB_CLOSURE_ENV(rax)
  1526 00000C4D FF5009                  	call SOB_CLOSURE_CODE(rax)
  1527 00000C50 803804                  	cmp byte [rax], T_closure
  1528 00000C53 0F85B9540000            	jne L_error_non_closure
  1529 00000C59 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1530 00000C5C FF5009                  	call SOB_CLOSURE_CODE(rax)
  1531 00000C5F 50                      	push rax
  1532 00000C60 6A01                    	push 1	; arg count
  1533 00000C62 488B4510                	mov rax, ENV
  1534 00000C66 488B00                  	mov rax, qword [rax + 8 * 0]
  1535 00000C69 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  1536 00000C6C 803804                  	cmp byte [rax], T_closure
  1537 00000C6F 0F859D540000            	jne L_error_non_closure
  1538 00000C75 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1539 00000C78 FF7508                  	push qword [rbp + 8 * 1]
  1540                                   ; old ret addr
  1541 00000C7B 5D                      	pop rbp
  1542                                  ; restore the old rbp
  1543 00000C7C BB01000000              	mov rbx, 1
  1544 00000C81 4883C303                	add rbx, 3
  1545 00000C85 488B7D10                	mov rdi, qword [rbp + 8*2]
  1546                                  .L_tc_recycle_frame_loop_0007:
  1547 00000C89 4883FB00                	cmp rbx, 0
  1548 00000C8D 7411                    je .L_tc_recycle_frame_done_0007
  1549 00000C8F 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1550 00000C93 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1551 00000C98 48FFCF                  	dec rdi
  1552 00000C9B 48FFCB                  	dec rbx
  1553 00000C9E EBE9                    jmp .L_tc_recycle_frame_loop_0007
  1554                                  .L_tc_recycle_frame_done_0007:
  1555 00000CA0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1556 00000CA3 C9                      	leave
  1557 00000CA4 C21800                  	ret AND_KILL_FRAME(1)
  1558                                  .L_lambda_simple_end_0011:	; new closure is in rax
  1559 00000CA7 C9                      	leave
  1560 00000CA8 C21800                  	ret AND_KILL_FRAME(1)
  1561                                  .L_lambda_simple_end_0010:	; new closure is in rax
  1562 00000CAB C9                      	leave
  1563 00000CAC C21800                  	ret AND_KILL_FRAME(1)
  1564                                  .L_lambda_simple_end_000f:	; new closure is in rax
  1565 00000CAF 50                      	push rax
  1566 00000CB0 6A01                    	push 1	; arg count
  1567 00000CB2 488B4510                	mov rax, ENV
  1568 00000CB6 488B00                  	mov rax, qword [rax + 8 * 0]
  1569 00000CB9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  1570 00000CBC 803804                  	cmp byte [rax], T_closure
  1571 00000CBF 0F854D540000            	jne L_error_non_closure
  1572 00000CC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1573 00000CC8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1574 00000CCB 803804                  	cmp byte [rax], T_closure
  1575 00000CCE 0F853E540000            	jne L_error_non_closure
  1576 00000CD4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1577 00000CD7 FF7508                  	push qword [rbp + 8 * 1]
  1578                                   ; old ret addr
  1579 00000CDA 5D                      	pop rbp
  1580                                  ; restore the old rbp
  1581 00000CDB BB01000000              	mov rbx, 1
  1582 00000CE0 4883C303                	add rbx, 3
  1583 00000CE4 488B7D10                	mov rdi, qword [rbp + 8*2]
  1584                                  .L_tc_recycle_frame_loop_0006:
  1585 00000CE8 4883FB00                	cmp rbx, 0
  1586 00000CEC 7411                    je .L_tc_recycle_frame_done_0006
  1587 00000CEE 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1588 00000CF2 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1589 00000CF7 48FFCF                  	dec rdi
  1590 00000CFA 48FFCB                  	dec rbx
  1591 00000CFD EBE9                    jmp .L_tc_recycle_frame_loop_0006
  1592                                  .L_tc_recycle_frame_done_0006:
  1593 00000CFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1594 00000D02 C9                      	leave
  1595 00000D03 C21800                  	ret AND_KILL_FRAME(1)
  1596                                  .L_lambda_simple_end_000e:	; new closure is in rax
  1597 00000D06 C9                      	leave
  1598 00000D07 C21800                  	ret AND_KILL_FRAME(1)
  1599                                  .L_lambda_simple_end_000d:	; new closure is in rax
  1600 00000D0A 50                      	push rax
  1601 00000D0B 6A01                    	push 1	; arg count
  1602 00000D0D 488B4510                	mov rax, ENV
  1603 00000D11 488B00                  	mov rax, qword [rax + 8 * 0]
  1604 00000D14 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  1605 00000D17 803804                  	cmp byte [rax], T_closure
  1606 00000D1A 0F85F2530000            	jne L_error_non_closure
  1607 00000D20 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1608 00000D23 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1609 00000D26 50                      	push rax
  1610 00000D27 6A01                    	push 1	; arg count
  1611 00000D29 488B4520                	mov rax, PARAM(0)	; param b
  1612 00000D2D 803804                  	cmp byte [rax], T_closure
  1613 00000D30 0F85DC530000            	jne L_error_non_closure
  1614 00000D36 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1615 00000D39 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1616 00000D3C 803804                  	cmp byte [rax], T_closure
  1617 00000D3F 0F85CD530000            	jne L_error_non_closure
  1618 00000D45 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1619 00000D48 FF7508                  	push qword [rbp + 8 * 1]
  1620                                   ; old ret addr
  1621 00000D4B 5D                      	pop rbp
  1622                                  ; restore the old rbp
  1623 00000D4C BB01000000              	mov rbx, 1
  1624 00000D51 4883C303                	add rbx, 3
  1625 00000D55 488B7D10                	mov rdi, qword [rbp + 8*2]
  1626                                  .L_tc_recycle_frame_loop_0005:
  1627 00000D59 4883FB00                	cmp rbx, 0
  1628 00000D5D 7411                    je .L_tc_recycle_frame_done_0005
  1629 00000D5F 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  1630 00000D63 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  1631 00000D68 48FFCF                  	dec rdi
  1632 00000D6B 48FFCB                  	dec rbx
  1633 00000D6E EBE9                    jmp .L_tc_recycle_frame_loop_0005
  1634                                  .L_tc_recycle_frame_done_0005:
  1635 00000D70 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  1636 00000D73 C9                      	leave
  1637 00000D74 C21800                  	ret AND_KILL_FRAME(1)
  1638                                  .L_lambda_simple_end_000a:	; new closure is in rax
  1639 00000D77 C9                      	leave
  1640 00000D78 C21800                  	ret AND_KILL_FRAME(1)
  1641                                  .L_lambda_simple_end_0009:	; new closure is in rax
  1642 00000D7B 803804                  	cmp byte [rax], T_closure
  1643 00000D7E 0F858E530000            	jne L_error_non_closure
  1644 00000D84 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1645 00000D87 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1646 00000D8A 803804                  	cmp byte [rax], T_closure
  1647 00000D8D 0F857F530000            	jne L_error_non_closure
  1648 00000D93 FF7001                  	push SOB_CLOSURE_ENV(rax)
  1649 00000D96 FF5009                  	call SOB_CLOSURE_CODE(rax)
  1650 00000D99 50                      	push rax
  1651 00000D9A 6A01                    	push 1	; arg count
  1652 00000D9C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1653 00000DA1 E815540000              	call malloc
  1654 00000DA6 50                      	push rax
  1655 00000DA7 BF00000000              	mov rdi, 8 * 0	; new rib
  1656 00000DAC E80A540000              	call malloc
  1657 00000DB1 50                      	push rax
  1658 00000DB2 BF08000000              	mov rdi, 8 * 1	; extended env
  1659 00000DB7 E8FF530000              	call malloc
  1660 00000DBC 488B7D10                	mov rdi, ENV
  1661 00000DC0 BE00000000              	mov rsi, 0
  1662 00000DC5 BA01000000              	mov rdx, 1
  1663                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  1664 00000DCA 4883FE00                	cmp rsi, 0
  1665 00000DCE 7410                    	je .L_lambda_simple_env_end_0012
  1666 00000DD0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1667 00000DD4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1668 00000DD8 48FFC6                  	inc rsi
  1669 00000DDB 48FFC2                  	inc rdx
  1670 00000DDE EBEA                    	jmp .L_lambda_simple_env_loop_0012
  1671                                  .L_lambda_simple_env_end_0012:
  1672 00000DE0 5B                      	pop rbx
  1673 00000DE1 BE00000000              	mov rsi, 0
  1674                                  .L_lambda_simple_params_loop_0012:	; copy params
  1675 00000DE6 4883FE00                	cmp rsi, 0
  1676 00000DEA 740E                    	je .L_lambda_simple_params_end_0012
  1677 00000DEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1678 00000DF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1679 00000DF5 48FFC6                  	inc rsi
  1680 00000DF8 EBEC                    	jmp .L_lambda_simple_params_loop_0012
  1681                                  .L_lambda_simple_params_end_0012:
  1682 00000DFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1683 00000DFD 4889C3                  	mov rbx, rax
  1684 00000E00 58                      	pop rax
  1685 00000E01 C60004                  	mov byte [rax], T_closure
  1686 00000E04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1687 00000E08 48C74009[150E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  1688 00000E10 E903060000              	jmp .L_lambda_simple_end_0012
  1689                                  .L_lambda_simple_code_0012:	; lambda-simple body
  1690 00000E15 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1691 00000E1B 740B                    	je .L_lambda_simple_arity_check_ok_0012
  1692 00000E1D FF742410                	push qword [rsp + 8 * 2]
  1693 00000E21 6A01                    	push 1
  1694 00000E23 E94C530000              	jmp L_error_incorrect_arity_simple
  1695                                  .L_lambda_simple_arity_check_ok_0012:
  1696 00000E28 C8000000                	enter 0, 0
  1697 00000E2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1698 00000E31 E885530000              	call malloc
  1699 00000E36 50                      	push rax
  1700 00000E37 BF08000000              	mov rdi, 8 * 1	; new rib
  1701 00000E3C E87A530000              	call malloc
  1702 00000E41 50                      	push rax
  1703 00000E42 BF10000000              	mov rdi, 8 * 2	; extended env
  1704 00000E47 E86F530000              	call malloc
  1705 00000E4C 488B7D10                	mov rdi, ENV
  1706 00000E50 BE00000000              	mov rsi, 0
  1707 00000E55 BA01000000              	mov rdx, 1
  1708                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  1709 00000E5A 4883FE01                	cmp rsi, 1
  1710 00000E5E 7410                    	je .L_lambda_simple_env_end_0013
  1711 00000E60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1712 00000E64 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1713 00000E68 48FFC6                  	inc rsi
  1714 00000E6B 48FFC2                  	inc rdx
  1715 00000E6E EBEA                    	jmp .L_lambda_simple_env_loop_0013
  1716                                  .L_lambda_simple_env_end_0013:
  1717 00000E70 5B                      	pop rbx
  1718 00000E71 BE00000000              	mov rsi, 0
  1719                                  .L_lambda_simple_params_loop_0013:	; copy params
  1720 00000E76 4883FE01                	cmp rsi, 1
  1721 00000E7A 740E                    	je .L_lambda_simple_params_end_0013
  1722 00000E7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1723 00000E81 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1724 00000E85 48FFC6                  	inc rsi
  1725 00000E88 EBEC                    	jmp .L_lambda_simple_params_loop_0013
  1726                                  .L_lambda_simple_params_end_0013:
  1727 00000E8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1728 00000E8D 4889C3                  	mov rbx, rax
  1729 00000E90 58                      	pop rax
  1730 00000E91 C60004                  	mov byte [rax], T_closure
  1731 00000E94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1732 00000E98 48C74009[A50E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  1733 00000EA0 E96F050000              	jmp .L_lambda_simple_end_0013
  1734                                  .L_lambda_simple_code_0013:	; lambda-simple body
  1735 00000EA5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1736 00000EAB 740B                    	je .L_lambda_simple_arity_check_ok_0013
  1737 00000EAD FF742410                	push qword [rsp + 8 * 2]
  1738 00000EB1 6A01                    	push 1
  1739 00000EB3 E9BC520000              	jmp L_error_incorrect_arity_simple
  1740                                  .L_lambda_simple_arity_check_ok_0013:
  1741 00000EB8 C8000000                	enter 0, 0
  1742                                  	; preparing a tail-call
  1743 00000EBC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1744 00000EC1 E8F5520000              	call malloc
  1745 00000EC6 50                      	push rax
  1746 00000EC7 BF08000000              	mov rdi, 8 * 1	; new rib
  1747 00000ECC E8EA520000              	call malloc
  1748 00000ED1 50                      	push rax
  1749 00000ED2 BF18000000              	mov rdi, 8 * 3	; extended env
  1750 00000ED7 E8DF520000              	call malloc
  1751 00000EDC 488B7D10                	mov rdi, ENV
  1752 00000EE0 BE00000000              	mov rsi, 0
  1753 00000EE5 BA01000000              	mov rdx, 1
  1754                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  1755 00000EEA 4883FE02                	cmp rsi, 2
  1756 00000EEE 7410                    	je .L_lambda_simple_env_end_0014
  1757 00000EF0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1758 00000EF4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1759 00000EF8 48FFC6                  	inc rsi
  1760 00000EFB 48FFC2                  	inc rdx
  1761 00000EFE EBEA                    	jmp .L_lambda_simple_env_loop_0014
  1762                                  .L_lambda_simple_env_end_0014:
  1763 00000F00 5B                      	pop rbx
  1764 00000F01 BE00000000              	mov rsi, 0
  1765                                  .L_lambda_simple_params_loop_0014:	; copy params
  1766 00000F06 4883FE01                	cmp rsi, 1
  1767 00000F0A 740E                    	je .L_lambda_simple_params_end_0014
  1768 00000F0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1769 00000F11 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1770 00000F15 48FFC6                  	inc rsi
  1771 00000F18 EBEC                    	jmp .L_lambda_simple_params_loop_0014
  1772                                  .L_lambda_simple_params_end_0014:
  1773 00000F1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1774 00000F1D 4889C3                  	mov rbx, rax
  1775 00000F20 58                      	pop rax
  1776 00000F21 C60004                  	mov byte [rax], T_closure
  1777 00000F24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1778 00000F28 48C74009[350F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  1779 00000F30 E9B0000000              	jmp .L_lambda_simple_end_0014
  1780                                  .L_lambda_simple_code_0014:	; lambda-simple body
  1781 00000F35 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1782 00000F3B 740B                    	je .L_lambda_simple_arity_check_ok_0014
  1783 00000F3D FF742410                	push qword [rsp + 8 * 2]
  1784 00000F41 6A01                    	push 1
  1785 00000F43 E92C520000              	jmp L_error_incorrect_arity_simple
  1786                                  .L_lambda_simple_arity_check_ok_0014:
  1787 00000F48 C8000000                	enter 0, 0
  1788 00000F4C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1789 00000F51 E865520000              	call malloc
  1790 00000F56 50                      	push rax
  1791 00000F57 BF08000000              	mov rdi, 8 * 1	; new rib
  1792 00000F5C E85A520000              	call malloc
  1793 00000F61 50                      	push rax
  1794 00000F62 BF20000000              	mov rdi, 8 * 4	; extended env
  1795 00000F67 E84F520000              	call malloc
  1796 00000F6C 488B7D10                	mov rdi, ENV
  1797 00000F70 BE00000000              	mov rsi, 0
  1798 00000F75 BA01000000              	mov rdx, 1
  1799                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  1800 00000F7A 4883FE03                	cmp rsi, 3
  1801 00000F7E 7410                    	je .L_lambda_simple_env_end_0015
  1802 00000F80 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1803 00000F84 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1804 00000F88 48FFC6                  	inc rsi
  1805 00000F8B 48FFC2                  	inc rdx
  1806 00000F8E EBEA                    	jmp .L_lambda_simple_env_loop_0015
  1807                                  .L_lambda_simple_env_end_0015:
  1808 00000F90 5B                      	pop rbx
  1809 00000F91 BE00000000              	mov rsi, 0
  1810                                  .L_lambda_simple_params_loop_0015:	; copy params
  1811 00000F96 4883FE01                	cmp rsi, 1
  1812 00000F9A 740E                    	je .L_lambda_simple_params_end_0015
  1813 00000F9C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1814 00000FA1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1815 00000FA5 48FFC6                  	inc rsi
  1816 00000FA8 EBEC                    	jmp .L_lambda_simple_params_loop_0015
  1817                                  .L_lambda_simple_params_end_0015:
  1818 00000FAA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1819 00000FAD 4889C3                  	mov rbx, rax
  1820 00000FB0 58                      	pop rax
  1821 00000FB1 C60004                  	mov byte [rax], T_closure
  1822 00000FB4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1823 00000FB8 48C74009[C20F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  1824 00000FC0 EB1F                    	jmp .L_lambda_simple_end_0015
  1825                                  .L_lambda_simple_code_0015:	; lambda-simple body
  1826 00000FC2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1827 00000FC8 740B                    	je .L_lambda_simple_arity_check_ok_0015
  1828 00000FCA FF742410                	push qword [rsp + 8 * 2]
  1829 00000FCE 6A01                    	push 1
  1830 00000FD0 E99F510000              	jmp L_error_incorrect_arity_simple
  1831                                  .L_lambda_simple_arity_check_ok_0015:
  1832 00000FD5 C8000000                	enter 0, 0
  1833 00000FD9 488B4520                	mov rax, PARAM(0)	; param y
  1834 00000FDD C9                      	leave
  1835 00000FDE C21800                  	ret AND_KILL_FRAME(1)
  1836                                  .L_lambda_simple_end_0015:	; new closure is in rax
  1837 00000FE1 C9                      	leave
  1838 00000FE2 C21800                  	ret AND_KILL_FRAME(1)
  1839                                  .L_lambda_simple_end_0014:	; new closure is in rax
  1840 00000FE5 50                      	push rax
  1841 00000FE6 6A01                    	push 1	; arg count
  1842                                  	; preparing a non-tail-call
  1843                                  	; preparing a non-tail-call
  1844 00000FE8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1845 00000FED E8C9510000              	call malloc
  1846 00000FF2 50                      	push rax
  1847 00000FF3 BF08000000              	mov rdi, 8 * 1	; new rib
  1848 00000FF8 E8BE510000              	call malloc
  1849 00000FFD 50                      	push rax
  1850 00000FFE BF18000000              	mov rdi, 8 * 3	; extended env
  1851 00001003 E8B3510000              	call malloc
  1852 00001008 488B7D10                	mov rdi, ENV
  1853 0000100C BE00000000              	mov rsi, 0
  1854 00001011 BA01000000              	mov rdx, 1
  1855                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  1856 00001016 4883FE02                	cmp rsi, 2
  1857 0000101A 7410                    	je .L_lambda_simple_env_end_0016
  1858 0000101C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1859 00001020 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1860 00001024 48FFC6                  	inc rsi
  1861 00001027 48FFC2                  	inc rdx
  1862 0000102A EBEA                    	jmp .L_lambda_simple_env_loop_0016
  1863                                  .L_lambda_simple_env_end_0016:
  1864 0000102C 5B                      	pop rbx
  1865 0000102D BE00000000              	mov rsi, 0
  1866                                  .L_lambda_simple_params_loop_0016:	; copy params
  1867 00001032 4883FE01                	cmp rsi, 1
  1868 00001036 740E                    	je .L_lambda_simple_params_end_0016
  1869 00001038 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1870 0000103D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1871 00001041 48FFC6                  	inc rsi
  1872 00001044 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  1873                                  .L_lambda_simple_params_end_0016:
  1874 00001046 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1875 00001049 4889C3                  	mov rbx, rax
  1876 0000104C 58                      	pop rax
  1877 0000104D C60004                  	mov byte [rax], T_closure
  1878 00001050 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1879 00001054 48C74009[61100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  1880 0000105C E946030000              	jmp .L_lambda_simple_end_0016
  1881                                  .L_lambda_simple_code_0016:	; lambda-simple body
  1882 00001061 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1883 00001067 740B                    	je .L_lambda_simple_arity_check_ok_0016
  1884 00001069 FF742410                	push qword [rsp + 8 * 2]
  1885 0000106D 6A01                    	push 1
  1886 0000106F E900510000              	jmp L_error_incorrect_arity_simple
  1887                                  .L_lambda_simple_arity_check_ok_0016:
  1888 00001074 C8000000                	enter 0, 0
  1889 00001078 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1890 0000107D E839510000              	call malloc
  1891 00001082 50                      	push rax
  1892 00001083 BF08000000              	mov rdi, 8 * 1	; new rib
  1893 00001088 E82E510000              	call malloc
  1894 0000108D 50                      	push rax
  1895 0000108E BF20000000              	mov rdi, 8 * 4	; extended env
  1896 00001093 E823510000              	call malloc
  1897 00001098 488B7D10                	mov rdi, ENV
  1898 0000109C BE00000000              	mov rsi, 0
  1899 000010A1 BA01000000              	mov rdx, 1
  1900                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  1901 000010A6 4883FE03                	cmp rsi, 3
  1902 000010AA 7410                    	je .L_lambda_simple_env_end_0017
  1903 000010AC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1904 000010B0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1905 000010B4 48FFC6                  	inc rsi
  1906 000010B7 48FFC2                  	inc rdx
  1907 000010BA EBEA                    	jmp .L_lambda_simple_env_loop_0017
  1908                                  .L_lambda_simple_env_end_0017:
  1909 000010BC 5B                      	pop rbx
  1910 000010BD BE00000000              	mov rsi, 0
  1911                                  .L_lambda_simple_params_loop_0017:	; copy params
  1912 000010C2 4883FE01                	cmp rsi, 1
  1913 000010C6 740E                    	je .L_lambda_simple_params_end_0017
  1914 000010C8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1915 000010CD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1916 000010D1 48FFC6                  	inc rsi
  1917 000010D4 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  1918                                  .L_lambda_simple_params_end_0017:
  1919 000010D6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1920 000010D9 4889C3                  	mov rbx, rax
  1921 000010DC 58                      	pop rax
  1922 000010DD C60004                  	mov byte [rax], T_closure
  1923 000010E0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1924 000010E4 48C74009[F1100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  1925 000010EC E9B2020000              	jmp .L_lambda_simple_end_0017
  1926                                  .L_lambda_simple_code_0017:	; lambda-simple body
  1927 000010F1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1928 000010F7 740B                    	je .L_lambda_simple_arity_check_ok_0017
  1929 000010F9 FF742410                	push qword [rsp + 8 * 2]
  1930 000010FD 6A01                    	push 1
  1931 000010FF E970500000              	jmp L_error_incorrect_arity_simple
  1932                                  .L_lambda_simple_arity_check_ok_0017:
  1933 00001104 C8000000                	enter 0, 0
  1934                                  	; preparing a tail-call
  1935 00001108 488B4520                	mov rax, PARAM(0)	; param b
  1936 0000110C 50                      	push rax
  1937 0000110D 6A01                    	push 1	; arg count
  1938                                  	; preparing a non-tail-call
  1939 0000110F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1940 00001114 E8A2500000              	call malloc
  1941 00001119 50                      	push rax
  1942 0000111A BF08000000              	mov rdi, 8 * 1	; new rib
  1943 0000111F E897500000              	call malloc
  1944 00001124 50                      	push rax
  1945 00001125 BF28000000              	mov rdi, 8 * 5	; extended env
  1946 0000112A E88C500000              	call malloc
  1947 0000112F 488B7D10                	mov rdi, ENV
  1948 00001133 BE00000000              	mov rsi, 0
  1949 00001138 BA01000000              	mov rdx, 1
  1950                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  1951 0000113D 4883FE04                	cmp rsi, 4
  1952 00001141 7410                    	je .L_lambda_simple_env_end_0018
  1953 00001143 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1954 00001147 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1955 0000114B 48FFC6                  	inc rsi
  1956 0000114E 48FFC2                  	inc rdx
  1957 00001151 EBEA                    	jmp .L_lambda_simple_env_loop_0018
  1958                                  .L_lambda_simple_env_end_0018:
  1959 00001153 5B                      	pop rbx
  1960 00001154 BE00000000              	mov rsi, 0
  1961                                  .L_lambda_simple_params_loop_0018:	; copy params
  1962 00001159 4883FE01                	cmp rsi, 1
  1963 0000115D 740E                    	je .L_lambda_simple_params_end_0018
  1964 0000115F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1965 00001164 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1966 00001168 48FFC6                  	inc rsi
  1967 0000116B EBEC                    	jmp .L_lambda_simple_params_loop_0018
  1968                                  .L_lambda_simple_params_end_0018:
  1969 0000116D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1970 00001170 4889C3                  	mov rbx, rax
  1971 00001173 58                      	pop rax
  1972 00001174 C60004                  	mov byte [rax], T_closure
  1973 00001177 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1974 0000117B 48C74009[88110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  1975 00001183 E9C4010000              	jmp .L_lambda_simple_end_0018
  1976                                  .L_lambda_simple_code_0018:	; lambda-simple body
  1977 00001188 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1978 0000118E 740B                    	je .L_lambda_simple_arity_check_ok_0018
  1979 00001190 FF742410                	push qword [rsp + 8 * 2]
  1980 00001194 6A01                    	push 1
  1981 00001196 E9D94F0000              	jmp L_error_incorrect_arity_simple
  1982                                  .L_lambda_simple_arity_check_ok_0018:
  1983 0000119B C8000000                	enter 0, 0
  1984 0000119F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1985 000011A4 E812500000              	call malloc
  1986 000011A9 50                      	push rax
  1987 000011AA BF08000000              	mov rdi, 8 * 1	; new rib
  1988 000011AF E807500000              	call malloc
  1989 000011B4 50                      	push rax
  1990 000011B5 BF30000000              	mov rdi, 8 * 6	; extended env
  1991 000011BA E8FC4F0000              	call malloc
  1992 000011BF 488B7D10                	mov rdi, ENV
  1993 000011C3 BE00000000              	mov rsi, 0
  1994 000011C8 BA01000000              	mov rdx, 1
  1995                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  1996 000011CD 4883FE05                	cmp rsi, 5
  1997 000011D1 7410                    	je .L_lambda_simple_env_end_0019
  1998 000011D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1999 000011D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2000 000011DB 48FFC6                  	inc rsi
  2001 000011DE 48FFC2                  	inc rdx
  2002 000011E1 EBEA                    	jmp .L_lambda_simple_env_loop_0019
  2003                                  .L_lambda_simple_env_end_0019:
  2004 000011E3 5B                      	pop rbx
  2005 000011E4 BE00000000              	mov rsi, 0
  2006                                  .L_lambda_simple_params_loop_0019:	; copy params
  2007 000011E9 4883FE01                	cmp rsi, 1
  2008 000011ED 740E                    	je .L_lambda_simple_params_end_0019
  2009 000011EF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2010 000011F4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2011 000011F8 48FFC6                  	inc rsi
  2012 000011FB EBEC                    	jmp .L_lambda_simple_params_loop_0019
  2013                                  .L_lambda_simple_params_end_0019:
  2014 000011FD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2015 00001200 4889C3                  	mov rbx, rax
  2016 00001203 58                      	pop rax
  2017 00001204 C60004                  	mov byte [rax], T_closure
  2018 00001207 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2019 0000120B 48C74009[18120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  2020 00001213 E930010000              	jmp .L_lambda_simple_end_0019
  2021                                  .L_lambda_simple_code_0019:	; lambda-simple body
  2022 00001218 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2023 0000121E 740B                    	je .L_lambda_simple_arity_check_ok_0019
  2024 00001220 FF742410                	push qword [rsp + 8 * 2]
  2025 00001224 6A01                    	push 1
  2026 00001226 E9494F0000              	jmp L_error_incorrect_arity_simple
  2027                                  .L_lambda_simple_arity_check_ok_0019:
  2028 0000122B C8000000                	enter 0, 0
  2029 0000122F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2030 00001234 E8824F0000              	call malloc
  2031 00001239 50                      	push rax
  2032 0000123A BF08000000              	mov rdi, 8 * 1	; new rib
  2033 0000123F E8774F0000              	call malloc
  2034 00001244 50                      	push rax
  2035 00001245 BF38000000              	mov rdi, 8 * 7	; extended env
  2036 0000124A E86C4F0000              	call malloc
  2037 0000124F 488B7D10                	mov rdi, ENV
  2038 00001253 BE00000000              	mov rsi, 0
  2039 00001258 BA01000000              	mov rdx, 1
  2040                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  2041 0000125D 4883FE06                	cmp rsi, 6
  2042 00001261 7410                    	je .L_lambda_simple_env_end_001a
  2043 00001263 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2044 00001267 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2045 0000126B 48FFC6                  	inc rsi
  2046 0000126E 48FFC2                  	inc rdx
  2047 00001271 EBEA                    	jmp .L_lambda_simple_env_loop_001a
  2048                                  .L_lambda_simple_env_end_001a:
  2049 00001273 5B                      	pop rbx
  2050 00001274 BE00000000              	mov rsi, 0
  2051                                  .L_lambda_simple_params_loop_001a:	; copy params
  2052 00001279 4883FE01                	cmp rsi, 1
  2053 0000127D 740E                    	je .L_lambda_simple_params_end_001a
  2054 0000127F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2055 00001284 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2056 00001288 48FFC6                  	inc rsi
  2057 0000128B EBEC                    	jmp .L_lambda_simple_params_loop_001a
  2058                                  .L_lambda_simple_params_end_001a:
  2059 0000128D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2060 00001290 4889C3                  	mov rbx, rax
  2061 00001293 58                      	pop rax
  2062 00001294 C60004                  	mov byte [rax], T_closure
  2063 00001297 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2064 0000129B 48C74009[A8120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  2065 000012A3 E99C000000              	jmp .L_lambda_simple_end_001a
  2066                                  .L_lambda_simple_code_001a:	; lambda-simple body
  2067 000012A8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2068 000012AE 740B                    	je .L_lambda_simple_arity_check_ok_001a
  2069 000012B0 FF742410                	push qword [rsp + 8 * 2]
  2070 000012B4 6A01                    	push 1
  2071 000012B6 E9B94E0000              	jmp L_error_incorrect_arity_simple
  2072                                  .L_lambda_simple_arity_check_ok_001a:
  2073 000012BB C8000000                	enter 0, 0
  2074                                  	; preparing a tail-call
  2075                                  	; preparing a non-tail-call
  2076 000012BF 488B4520                	mov rax, PARAM(0)	; param z
  2077 000012C3 50                      	push rax
  2078 000012C4 6A01                    	push 1	; arg count
  2079                                  	; preparing a non-tail-call
  2080 000012C6 488B4510                	mov rax, ENV
  2081 000012CA 488B00                  	mov rax, qword [rax + 8 * 0]
  2082 000012CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  2083 000012D0 50                      	push rax
  2084 000012D1 6A01                    	push 1	; arg count
  2085 000012D3 488B4510                	mov rax, ENV
  2086 000012D7 488B4008                	mov rax, qword [rax + 8 * 1]
  2087 000012DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  2088 000012DE 803804                  	cmp byte [rax], T_closure
  2089 000012E1 0F852B4E0000            	jne L_error_non_closure
  2090 000012E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2091 000012EA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2092 000012ED 803804                  	cmp byte [rax], T_closure
  2093 000012F0 0F851C4E0000            	jne L_error_non_closure
  2094 000012F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2095 000012F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2096 000012FC 50                      	push rax
  2097 000012FD 6A01                    	push 1	; arg count
  2098 000012FF 488B4510                	mov rax, ENV
  2099 00001303 488B00                  	mov rax, qword [rax + 8 * 0]
  2100 00001306 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  2101 00001309 803804                  	cmp byte [rax], T_closure
  2102 0000130C 0F85004E0000            	jne L_error_non_closure
  2103 00001312 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2104 00001315 FF7508                  	push qword [rbp + 8 * 1]
  2105                                   ; old ret addr
  2106 00001318 5D                      	pop rbp
  2107                                  ; restore the old rbp
  2108 00001319 BB01000000              	mov rbx, 1
  2109 0000131E 4883C303                	add rbx, 3
  2110 00001322 488B7D10                	mov rdi, qword [rbp + 8*2]
  2111                                  .L_tc_recycle_frame_loop_000a:
  2112 00001326 4883FB00                	cmp rbx, 0
  2113 0000132A 7411                    je .L_tc_recycle_frame_done_000a
  2114 0000132C 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2115 00001330 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2116 00001335 48FFCF                  	dec rdi
  2117 00001338 48FFCB                  	dec rbx
  2118 0000133B EBE9                    jmp .L_tc_recycle_frame_loop_000a
  2119                                  .L_tc_recycle_frame_done_000a:
  2120 0000133D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2121 00001340 C9                      	leave
  2122 00001341 C21800                  	ret AND_KILL_FRAME(1)
  2123                                  .L_lambda_simple_end_001a:	; new closure is in rax
  2124 00001344 C9                      	leave
  2125 00001345 C21800                  	ret AND_KILL_FRAME(1)
  2126                                  .L_lambda_simple_end_0019:	; new closure is in rax
  2127 00001348 C9                      	leave
  2128 00001349 C21800                  	ret AND_KILL_FRAME(1)
  2129                                  .L_lambda_simple_end_0018:	; new closure is in rax
  2130 0000134C 50                      	push rax
  2131 0000134D 6A01                    	push 1	; arg count
  2132 0000134F 488B4510                	mov rax, ENV
  2133 00001353 488B00                  	mov rax, qword [rax + 8 * 0]
  2134 00001356 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  2135 00001359 803804                  	cmp byte [rax], T_closure
  2136 0000135C 0F85B04D0000            	jne L_error_non_closure
  2137 00001362 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2138 00001365 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2139 00001368 803804                  	cmp byte [rax], T_closure
  2140 0000136B 0F85A14D0000            	jne L_error_non_closure
  2141 00001371 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2142 00001374 FF7508                  	push qword [rbp + 8 * 1]
  2143                                   ; old ret addr
  2144 00001377 5D                      	pop rbp
  2145                                  ; restore the old rbp
  2146 00001378 BB01000000              	mov rbx, 1
  2147 0000137D 4883C303                	add rbx, 3
  2148 00001381 488B7D10                	mov rdi, qword [rbp + 8*2]
  2149                                  .L_tc_recycle_frame_loop_0009:
  2150 00001385 4883FB00                	cmp rbx, 0
  2151 00001389 7411                    je .L_tc_recycle_frame_done_0009
  2152 0000138B 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2153 0000138F 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2154 00001394 48FFCF                  	dec rdi
  2155 00001397 48FFCB                  	dec rbx
  2156 0000139A EBE9                    jmp .L_tc_recycle_frame_loop_0009
  2157                                  .L_tc_recycle_frame_done_0009:
  2158 0000139C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2159 0000139F C9                      	leave
  2160 000013A0 C21800                  	ret AND_KILL_FRAME(1)
  2161                                  .L_lambda_simple_end_0017:	; new closure is in rax
  2162 000013A3 C9                      	leave
  2163 000013A4 C21800                  	ret AND_KILL_FRAME(1)
  2164                                  .L_lambda_simple_end_0016:	; new closure is in rax
  2165 000013A7 50                      	push rax
  2166 000013A8 6A01                    	push 1	; arg count
  2167 000013AA 488B4510                	mov rax, ENV
  2168 000013AE 488B00                  	mov rax, qword [rax + 8 * 0]
  2169 000013B1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  2170 000013B4 803804                  	cmp byte [rax], T_closure
  2171 000013B7 0F85554D0000            	jne L_error_non_closure
  2172 000013BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  2173 000013C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2174 000013C3 50                      	push rax
  2175 000013C4 6A01                    	push 1	; arg count
  2176 000013C6 488B4520                	mov rax, PARAM(0)	; param b
  2177 000013CA 803804                  	cmp byte [rax], T_closure
  2178 000013CD 0F853F4D0000            	jne L_error_non_closure
  2179 000013D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2180 000013D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2181 000013D9 803804                  	cmp byte [rax], T_closure
  2182 000013DC 0F85304D0000            	jne L_error_non_closure
  2183 000013E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2184 000013E5 FF7508                  	push qword [rbp + 8 * 1]
  2185                                   ; old ret addr
  2186 000013E8 5D                      	pop rbp
  2187                                  ; restore the old rbp
  2188 000013E9 BB01000000              	mov rbx, 1
  2189 000013EE 4883C303                	add rbx, 3
  2190 000013F2 488B7D10                	mov rdi, qword [rbp + 8*2]
  2191                                  .L_tc_recycle_frame_loop_0008:
  2192 000013F6 4883FB00                	cmp rbx, 0
  2193 000013FA 7411                    je .L_tc_recycle_frame_done_0008
  2194 000013FC 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2195 00001400 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2196 00001405 48FFCF                  	dec rdi
  2197 00001408 48FFCB                  	dec rbx
  2198 0000140B EBE9                    jmp .L_tc_recycle_frame_loop_0008
  2199                                  .L_tc_recycle_frame_done_0008:
  2200 0000140D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2201 00001410 C9                      	leave
  2202 00001411 C21800                  	ret AND_KILL_FRAME(1)
  2203                                  .L_lambda_simple_end_0013:	; new closure is in rax
  2204 00001414 C9                      	leave
  2205 00001415 C21800                  	ret AND_KILL_FRAME(1)
  2206                                  .L_lambda_simple_end_0012:	; new closure is in rax
  2207 00001418 803804                  	cmp byte [rax], T_closure
  2208 0000141B 0F85F14C0000            	jne L_error_non_closure
  2209 00001421 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2210 00001424 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2211 00001427 803804                  	cmp byte [rax], T_closure
  2212 0000142A 0F85E24C0000            	jne L_error_non_closure
  2213 00001430 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2214 00001433 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2215 00001436 50                      	push rax
  2216 00001437 6A01                    	push 1	; arg count
  2217                                  	; preparing a non-tail-call
  2218                                  	; preparing a non-tail-call
  2219 00001439 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2220 0000143E E8784D0000              	call malloc
  2221 00001443 50                      	push rax
  2222 00001444 BF00000000              	mov rdi, 8 * 0	; new rib
  2223 00001449 E86D4D0000              	call malloc
  2224 0000144E 50                      	push rax
  2225 0000144F BF08000000              	mov rdi, 8 * 1	; extended env
  2226 00001454 E8624D0000              	call malloc
  2227 00001459 488B7D10                	mov rdi, ENV
  2228 0000145D BE00000000              	mov rsi, 0
  2229 00001462 BA01000000              	mov rdx, 1
  2230                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  2231 00001467 4883FE00                	cmp rsi, 0
  2232 0000146B 7410                    	je .L_lambda_simple_env_end_001b
  2233 0000146D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2234 00001471 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2235 00001475 48FFC6                  	inc rsi
  2236 00001478 48FFC2                  	inc rdx
  2237 0000147B EBEA                    	jmp .L_lambda_simple_env_loop_001b
  2238                                  .L_lambda_simple_env_end_001b:
  2239 0000147D 5B                      	pop rbx
  2240 0000147E BE00000000              	mov rsi, 0
  2241                                  .L_lambda_simple_params_loop_001b:	; copy params
  2242 00001483 4883FE00                	cmp rsi, 0
  2243 00001487 740E                    	je .L_lambda_simple_params_end_001b
  2244 00001489 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2245 0000148E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2246 00001492 48FFC6                  	inc rsi
  2247 00001495 EBEC                    	jmp .L_lambda_simple_params_loop_001b
  2248                                  .L_lambda_simple_params_end_001b:
  2249 00001497 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2250 0000149A 4889C3                  	mov rbx, rax
  2251 0000149D 58                      	pop rax
  2252 0000149E C60004                  	mov byte [rax], T_closure
  2253 000014A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2254 000014A5 48C74009[B2140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  2255 000014AD E967010000              	jmp .L_lambda_simple_end_001b
  2256                                  .L_lambda_simple_code_001b:	; lambda-simple body
  2257 000014B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2258 000014B8 740B                    	je .L_lambda_simple_arity_check_ok_001b
  2259 000014BA FF742410                	push qword [rsp + 8 * 2]
  2260 000014BE 6A01                    	push 1
  2261 000014C0 E9AF4C0000              	jmp L_error_incorrect_arity_simple
  2262                                  .L_lambda_simple_arity_check_ok_001b:
  2263 000014C5 C8000000                	enter 0, 0
  2264 000014C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2265 000014CE E8E84C0000              	call malloc
  2266 000014D3 50                      	push rax
  2267 000014D4 BF08000000              	mov rdi, 8 * 1	; new rib
  2268 000014D9 E8DD4C0000              	call malloc
  2269 000014DE 50                      	push rax
  2270 000014DF BF10000000              	mov rdi, 8 * 2	; extended env
  2271 000014E4 E8D24C0000              	call malloc
  2272 000014E9 488B7D10                	mov rdi, ENV
  2273 000014ED BE00000000              	mov rsi, 0
  2274 000014F2 BA01000000              	mov rdx, 1
  2275                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  2276 000014F7 4883FE01                	cmp rsi, 1
  2277 000014FB 7410                    	je .L_lambda_simple_env_end_001c
  2278 000014FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2279 00001501 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2280 00001505 48FFC6                  	inc rsi
  2281 00001508 48FFC2                  	inc rdx
  2282 0000150B EBEA                    	jmp .L_lambda_simple_env_loop_001c
  2283                                  .L_lambda_simple_env_end_001c:
  2284 0000150D 5B                      	pop rbx
  2285 0000150E BE00000000              	mov rsi, 0
  2286                                  .L_lambda_simple_params_loop_001c:	; copy params
  2287 00001513 4883FE01                	cmp rsi, 1
  2288 00001517 740E                    	je .L_lambda_simple_params_end_001c
  2289 00001519 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2290 0000151E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2291 00001522 48FFC6                  	inc rsi
  2292 00001525 EBEC                    	jmp .L_lambda_simple_params_loop_001c
  2293                                  .L_lambda_simple_params_end_001c:
  2294 00001527 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2295 0000152A 4889C3                  	mov rbx, rax
  2296 0000152D 58                      	pop rax
  2297 0000152E C60004                  	mov byte [rax], T_closure
  2298 00001531 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2299 00001535 48C74009[42150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  2300 0000153D E9D3000000              	jmp .L_lambda_simple_end_001c
  2301                                  .L_lambda_simple_code_001c:	; lambda-simple body
  2302 00001542 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2303 00001548 740B                    	je .L_lambda_simple_arity_check_ok_001c
  2304 0000154A FF742410                	push qword [rsp + 8 * 2]
  2305 0000154E 6A01                    	push 1
  2306 00001550 E91F4C0000              	jmp L_error_incorrect_arity_simple
  2307                                  .L_lambda_simple_arity_check_ok_001c:
  2308 00001555 C8000000                	enter 0, 0
  2309                                  	; preparing a tail-call
  2310                                  	; preparing a non-tail-call
  2311                                  	; preparing a non-tail-call
  2312                                  	; preparing a non-tail-call
  2313                                  	; preparing a non-tail-call
  2314 00001559 488B4520                	mov rax, PARAM(0)	; param y
  2315 0000155D 50                      	push rax
  2316 0000155E 6A01                    	push 1	; arg count
  2317 00001560 488B4510                	mov rax, ENV
  2318 00001564 488B00                  	mov rax, qword [rax + 8 * 0]
  2319 00001567 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2320 0000156A 803804                  	cmp byte [rax], T_closure
  2321 0000156D 0F859F4B0000            	jne L_error_non_closure
  2322 00001573 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2323 00001576 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2324 00001579 50                      	push rax
  2325 0000157A 6A01                    	push 1	; arg count
  2326 0000157C 488B4510                	mov rax, ENV
  2327 00001580 488B00                  	mov rax, qword [rax + 8 * 0]
  2328 00001583 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2329 00001586 803804                  	cmp byte [rax], T_closure
  2330 00001589 0F85834B0000            	jne L_error_non_closure
  2331 0000158F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2332 00001592 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2333 00001595 50                      	push rax
  2334 00001596 6A01                    	push 1	; arg count
  2335 00001598 488B4510                	mov rax, ENV
  2336 0000159C 488B00                  	mov rax, qword [rax + 8 * 0]
  2337 0000159F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2338 000015A2 803804                  	cmp byte [rax], T_closure
  2339 000015A5 0F85674B0000            	jne L_error_non_closure
  2340 000015AB FF7001                  	push SOB_CLOSURE_ENV(rax)
  2341 000015AE FF5009                  	call SOB_CLOSURE_CODE(rax)
  2342 000015B1 50                      	push rax
  2343 000015B2 6A01                    	push 1	; arg count
  2344 000015B4 488B4510                	mov rax, ENV
  2345 000015B8 488B00                  	mov rax, qword [rax + 8 * 0]
  2346 000015BB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2347 000015BE 803804                  	cmp byte [rax], T_closure
  2348 000015C1 0F854B4B0000            	jne L_error_non_closure
  2349 000015C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2350 000015CA FF5009                  	call SOB_CLOSURE_CODE(rax)
  2351 000015CD 50                      	push rax
  2352 000015CE 6A01                    	push 1	; arg count
  2353 000015D0 488B4510                	mov rax, ENV
  2354 000015D4 488B00                  	mov rax, qword [rax + 8 * 0]
  2355 000015D7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  2356 000015DA 803804                  	cmp byte [rax], T_closure
  2357 000015DD 0F852F4B0000            	jne L_error_non_closure
  2358 000015E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2359 000015E6 FF7508                  	push qword [rbp + 8 * 1]
  2360                                   ; old ret addr
  2361 000015E9 5D                      	pop rbp
  2362                                  ; restore the old rbp
  2363 000015EA BB01000000              	mov rbx, 1
  2364 000015EF 4883C303                	add rbx, 3
  2365 000015F3 488B7D10                	mov rdi, qword [rbp + 8*2]
  2366                                  .L_tc_recycle_frame_loop_000b:
  2367 000015F7 4883FB00                	cmp rbx, 0
  2368 000015FB 7411                    je .L_tc_recycle_frame_done_000b
  2369 000015FD 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2370 00001601 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2371 00001606 48FFCF                  	dec rdi
  2372 00001609 48FFCB                  	dec rbx
  2373 0000160C EBE9                    jmp .L_tc_recycle_frame_loop_000b
  2374                                  .L_tc_recycle_frame_done_000b:
  2375 0000160E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2376 00001611 C9                      	leave
  2377 00001612 C21800                  	ret AND_KILL_FRAME(1)
  2378                                  .L_lambda_simple_end_001c:	; new closure is in rax
  2379 00001615 C9                      	leave
  2380 00001616 C21800                  	ret AND_KILL_FRAME(1)
  2381                                  .L_lambda_simple_end_001b:	; new closure is in rax
  2382 00001619 50                      	push rax
  2383 0000161A 6A01                    	push 1	; arg count
  2384 0000161C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2385 00001621 E8954B0000              	call malloc
  2386 00001626 50                      	push rax
  2387 00001627 BF00000000              	mov rdi, 8 * 0	; new rib
  2388 0000162C E88A4B0000              	call malloc
  2389 00001631 50                      	push rax
  2390 00001632 BF08000000              	mov rdi, 8 * 1	; extended env
  2391 00001637 E87F4B0000              	call malloc
  2392 0000163C 488B7D10                	mov rdi, ENV
  2393 00001640 BE00000000              	mov rsi, 0
  2394 00001645 BA01000000              	mov rdx, 1
  2395                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  2396 0000164A 4883FE00                	cmp rsi, 0
  2397 0000164E 7410                    	je .L_lambda_simple_env_end_001d
  2398 00001650 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2399 00001654 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2400 00001658 48FFC6                  	inc rsi
  2401 0000165B 48FFC2                  	inc rdx
  2402 0000165E EBEA                    	jmp .L_lambda_simple_env_loop_001d
  2403                                  .L_lambda_simple_env_end_001d:
  2404 00001660 5B                      	pop rbx
  2405 00001661 BE00000000              	mov rsi, 0
  2406                                  .L_lambda_simple_params_loop_001d:	; copy params
  2407 00001666 4883FE00                	cmp rsi, 0
  2408 0000166A 740E                    	je .L_lambda_simple_params_end_001d
  2409 0000166C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2410 00001671 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2411 00001675 48FFC6                  	inc rsi
  2412 00001678 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  2413                                  .L_lambda_simple_params_end_001d:
  2414 0000167A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2415 0000167D 4889C3                  	mov rbx, rax
  2416 00001680 58                      	pop rax
  2417 00001681 C60004                  	mov byte [rax], T_closure
  2418 00001684 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2419 00001688 48C74009[95160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  2420 00001690 E916180000              	jmp .L_lambda_simple_end_001d
  2421                                  .L_lambda_simple_code_001d:	; lambda-simple body
  2422 00001695 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2423 0000169B 740B                    	je .L_lambda_simple_arity_check_ok_001d
  2424 0000169D FF742410                	push qword [rsp + 8 * 2]
  2425 000016A1 6A01                    	push 1
  2426 000016A3 E9CC4A0000              	jmp L_error_incorrect_arity_simple
  2427                                  .L_lambda_simple_arity_check_ok_001d:
  2428 000016A8 C8000000                	enter 0, 0
  2429                                  	; preparing a tail-call
  2430                                  	; preparing a non-tail-call
  2431                                  	; preparing a non-tail-call
  2432 000016AC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2433 000016B1 E8054B0000              	call malloc
  2434 000016B6 50                      	push rax
  2435 000016B7 BF08000000              	mov rdi, 8 * 1	; new rib
  2436 000016BC E8FA4A0000              	call malloc
  2437 000016C1 50                      	push rax
  2438 000016C2 BF10000000              	mov rdi, 8 * 2	; extended env
  2439 000016C7 E8EF4A0000              	call malloc
  2440 000016CC 488B7D10                	mov rdi, ENV
  2441 000016D0 BE00000000              	mov rsi, 0
  2442 000016D5 BA01000000              	mov rdx, 1
  2443                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  2444 000016DA 4883FE01                	cmp rsi, 1
  2445 000016DE 7410                    	je .L_lambda_simple_env_end_001e
  2446 000016E0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2447 000016E4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2448 000016E8 48FFC6                  	inc rsi
  2449 000016EB 48FFC2                  	inc rdx
  2450 000016EE EBEA                    	jmp .L_lambda_simple_env_loop_001e
  2451                                  .L_lambda_simple_env_end_001e:
  2452 000016F0 5B                      	pop rbx
  2453 000016F1 BE00000000              	mov rsi, 0
  2454                                  .L_lambda_simple_params_loop_001e:	; copy params
  2455 000016F6 4883FE01                	cmp rsi, 1
  2456 000016FA 740E                    	je .L_lambda_simple_params_end_001e
  2457 000016FC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2458 00001701 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2459 00001705 48FFC6                  	inc rsi
  2460 00001708 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  2461                                  .L_lambda_simple_params_end_001e:
  2462 0000170A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2463 0000170D 4889C3                  	mov rbx, rax
  2464 00001710 58                      	pop rax
  2465 00001711 C60004                  	mov byte [rax], T_closure
  2466 00001714 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2467 00001718 48C74009[22170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  2468 00001720 EB1F                    	jmp .L_lambda_simple_end_001e
  2469                                  .L_lambda_simple_code_001e:	; lambda-simple body
  2470 00001722 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2471 00001728 740B                    	je .L_lambda_simple_arity_check_ok_001e
  2472 0000172A FF742410                	push qword [rsp + 8 * 2]
  2473 0000172E 6A01                    	push 1
  2474 00001730 E93F4A0000              	jmp L_error_incorrect_arity_simple
  2475                                  .L_lambda_simple_arity_check_ok_001e:
  2476 00001735 C8000000                	enter 0, 0
  2477 00001739 488B4520                	mov rax, PARAM(0)	; param x
  2478 0000173D C9                      	leave
  2479 0000173E C21800                  	ret AND_KILL_FRAME(1)
  2480                                  .L_lambda_simple_end_001e:	; new closure is in rax
  2481 00001741 50                      	push rax
  2482 00001742 6A01                    	push 1	; arg count
  2483                                  	; preparing a non-tail-call
  2484 00001744 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2485 00001749 E86D4A0000              	call malloc
  2486 0000174E 50                      	push rax
  2487 0000174F BF08000000              	mov rdi, 8 * 1	; new rib
  2488 00001754 E8624A0000              	call malloc
  2489 00001759 50                      	push rax
  2490 0000175A BF10000000              	mov rdi, 8 * 2	; extended env
  2491 0000175F E8574A0000              	call malloc
  2492 00001764 488B7D10                	mov rdi, ENV
  2493 00001768 BE00000000              	mov rsi, 0
  2494 0000176D BA01000000              	mov rdx, 1
  2495                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  2496 00001772 4883FE01                	cmp rsi, 1
  2497 00001776 7410                    	je .L_lambda_simple_env_end_001f
  2498 00001778 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2499 0000177C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2500 00001780 48FFC6                  	inc rsi
  2501 00001783 48FFC2                  	inc rdx
  2502 00001786 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  2503                                  .L_lambda_simple_env_end_001f:
  2504 00001788 5B                      	pop rbx
  2505 00001789 BE00000000              	mov rsi, 0
  2506                                  .L_lambda_simple_params_loop_001f:	; copy params
  2507 0000178E 4883FE01                	cmp rsi, 1
  2508 00001792 740E                    	je .L_lambda_simple_params_end_001f
  2509 00001794 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2510 00001799 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2511 0000179D 48FFC6                  	inc rsi
  2512 000017A0 EBEC                    	jmp .L_lambda_simple_params_loop_001f
  2513                                  .L_lambda_simple_params_end_001f:
  2514 000017A2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2515 000017A5 4889C3                  	mov rbx, rax
  2516 000017A8 58                      	pop rax
  2517 000017A9 C60004                  	mov byte [rax], T_closure
  2518 000017AC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2519 000017B0 48C74009[BA170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  2520 000017B8 EB1F                    	jmp .L_lambda_simple_end_001f
  2521                                  .L_lambda_simple_code_001f:	; lambda-simple body
  2522 000017BA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2523 000017C0 740B                    	je .L_lambda_simple_arity_check_ok_001f
  2524 000017C2 FF742410                	push qword [rsp + 8 * 2]
  2525 000017C6 6A01                    	push 1
  2526 000017C8 E9A7490000              	jmp L_error_incorrect_arity_simple
  2527                                  .L_lambda_simple_arity_check_ok_001f:
  2528 000017CD C8000000                	enter 0, 0
  2529 000017D1 488B4520                	mov rax, PARAM(0)	; param x
  2530 000017D5 C9                      	leave
  2531 000017D6 C21800                  	ret AND_KILL_FRAME(1)
  2532                                  .L_lambda_simple_end_001f:	; new closure is in rax
  2533 000017D9 50                      	push rax
  2534 000017DA 6A01                    	push 1	; arg count
  2535 000017DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2536 000017E1 E8D5490000              	call malloc
  2537 000017E6 50                      	push rax
  2538 000017E7 BF08000000              	mov rdi, 8 * 1	; new rib
  2539 000017EC E8CA490000              	call malloc
  2540 000017F1 50                      	push rax
  2541 000017F2 BF10000000              	mov rdi, 8 * 2	; extended env
  2542 000017F7 E8BF490000              	call malloc
  2543 000017FC 488B7D10                	mov rdi, ENV
  2544 00001800 BE00000000              	mov rsi, 0
  2545 00001805 BA01000000              	mov rdx, 1
  2546                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  2547 0000180A 4883FE01                	cmp rsi, 1
  2548 0000180E 7410                    	je .L_lambda_simple_env_end_0020
  2549 00001810 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2550 00001814 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2551 00001818 48FFC6                  	inc rsi
  2552 0000181B 48FFC2                  	inc rdx
  2553 0000181E EBEA                    	jmp .L_lambda_simple_env_loop_0020
  2554                                  .L_lambda_simple_env_end_0020:
  2555 00001820 5B                      	pop rbx
  2556 00001821 BE00000000              	mov rsi, 0
  2557                                  .L_lambda_simple_params_loop_0020:	; copy params
  2558 00001826 4883FE01                	cmp rsi, 1
  2559 0000182A 740E                    	je .L_lambda_simple_params_end_0020
  2560 0000182C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2561 00001831 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2562 00001835 48FFC6                  	inc rsi
  2563 00001838 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  2564                                  .L_lambda_simple_params_end_0020:
  2565 0000183A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2566 0000183D 4889C3                  	mov rbx, rax
  2567 00001840 58                      	pop rax
  2568 00001841 C60004                  	mov byte [rax], T_closure
  2569 00001844 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2570 00001848 48C74009[55180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  2571 00001850 E9A8010000              	jmp .L_lambda_simple_end_0020
  2572                                  .L_lambda_simple_code_0020:	; lambda-simple body
  2573 00001855 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2574 0000185B 740B                    	je .L_lambda_simple_arity_check_ok_0020
  2575 0000185D FF742410                	push qword [rsp + 8 * 2]
  2576 00001861 6A01                    	push 1
  2577 00001863 E90C490000              	jmp L_error_incorrect_arity_simple
  2578                                  .L_lambda_simple_arity_check_ok_0020:
  2579 00001868 C8000000                	enter 0, 0
  2580 0000186C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2581 00001871 E845490000              	call malloc
  2582 00001876 50                      	push rax
  2583 00001877 BF08000000              	mov rdi, 8 * 1	; new rib
  2584 0000187C E83A490000              	call malloc
  2585 00001881 50                      	push rax
  2586 00001882 BF18000000              	mov rdi, 8 * 3	; extended env
  2587 00001887 E82F490000              	call malloc
  2588 0000188C 488B7D10                	mov rdi, ENV
  2589 00001890 BE00000000              	mov rsi, 0
  2590 00001895 BA01000000              	mov rdx, 1
  2591                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  2592 0000189A 4883FE02                	cmp rsi, 2
  2593 0000189E 7410                    	je .L_lambda_simple_env_end_0021
  2594 000018A0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2595 000018A4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2596 000018A8 48FFC6                  	inc rsi
  2597 000018AB 48FFC2                  	inc rdx
  2598 000018AE EBEA                    	jmp .L_lambda_simple_env_loop_0021
  2599                                  .L_lambda_simple_env_end_0021:
  2600 000018B0 5B                      	pop rbx
  2601 000018B1 BE00000000              	mov rsi, 0
  2602                                  .L_lambda_simple_params_loop_0021:	; copy params
  2603 000018B6 4883FE01                	cmp rsi, 1
  2604 000018BA 740E                    	je .L_lambda_simple_params_end_0021
  2605 000018BC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2606 000018C1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2607 000018C5 48FFC6                  	inc rsi
  2608 000018C8 EBEC                    	jmp .L_lambda_simple_params_loop_0021
  2609                                  .L_lambda_simple_params_end_0021:
  2610 000018CA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2611 000018CD 4889C3                  	mov rbx, rax
  2612 000018D0 58                      	pop rax
  2613 000018D1 C60004                  	mov byte [rax], T_closure
  2614 000018D4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2615 000018D8 48C74009[E5180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  2616 000018E0 E914010000              	jmp .L_lambda_simple_end_0021
  2617                                  .L_lambda_simple_code_0021:	; lambda-simple body
  2618 000018E5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2619 000018EB 740B                    	je .L_lambda_simple_arity_check_ok_0021
  2620 000018ED FF742410                	push qword [rsp + 8 * 2]
  2621 000018F1 6A01                    	push 1
  2622 000018F3 E97C480000              	jmp L_error_incorrect_arity_simple
  2623                                  .L_lambda_simple_arity_check_ok_0021:
  2624 000018F8 C8000000                	enter 0, 0
  2625 000018FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2626 00001901 E8B5480000              	call malloc
  2627 00001906 50                      	push rax
  2628 00001907 BF08000000              	mov rdi, 8 * 1	; new rib
  2629 0000190C E8AA480000              	call malloc
  2630 00001911 50                      	push rax
  2631 00001912 BF20000000              	mov rdi, 8 * 4	; extended env
  2632 00001917 E89F480000              	call malloc
  2633 0000191C 488B7D10                	mov rdi, ENV
  2634 00001920 BE00000000              	mov rsi, 0
  2635 00001925 BA01000000              	mov rdx, 1
  2636                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  2637 0000192A 4883FE03                	cmp rsi, 3
  2638 0000192E 7410                    	je .L_lambda_simple_env_end_0022
  2639 00001930 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2640 00001934 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2641 00001938 48FFC6                  	inc rsi
  2642 0000193B 48FFC2                  	inc rdx
  2643 0000193E EBEA                    	jmp .L_lambda_simple_env_loop_0022
  2644                                  .L_lambda_simple_env_end_0022:
  2645 00001940 5B                      	pop rbx
  2646 00001941 BE00000000              	mov rsi, 0
  2647                                  .L_lambda_simple_params_loop_0022:	; copy params
  2648 00001946 4883FE01                	cmp rsi, 1
  2649 0000194A 740E                    	je .L_lambda_simple_params_end_0022
  2650 0000194C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2651 00001951 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2652 00001955 48FFC6                  	inc rsi
  2653 00001958 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  2654                                  .L_lambda_simple_params_end_0022:
  2655 0000195A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2656 0000195D 4889C3                  	mov rbx, rax
  2657 00001960 58                      	pop rax
  2658 00001961 C60004                  	mov byte [rax], T_closure
  2659 00001964 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2660 00001968 48C74009[75190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  2661 00001970 E980000000              	jmp .L_lambda_simple_end_0022
  2662                                  .L_lambda_simple_code_0022:	; lambda-simple body
  2663 00001975 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2664 0000197B 740B                    	je .L_lambda_simple_arity_check_ok_0022
  2665 0000197D FF742410                	push qword [rsp + 8 * 2]
  2666 00001981 6A01                    	push 1
  2667 00001983 E9EC470000              	jmp L_error_incorrect_arity_simple
  2668                                  .L_lambda_simple_arity_check_ok_0022:
  2669 00001988 C8000000                	enter 0, 0
  2670                                  	; preparing a tail-call
  2671 0000198C 488B4510                	mov rax, ENV
  2672 00001990 488B00                  	mov rax, qword [rax + 8 * 0]
  2673 00001993 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  2674 00001996 50                      	push rax
  2675 00001997 6A01                    	push 1	; arg count
  2676                                  	; preparing a non-tail-call
  2677 00001999 488B4510                	mov rax, ENV
  2678 0000199D 488B4008                	mov rax, qword [rax + 8 * 1]
  2679 000019A1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  2680 000019A4 50                      	push rax
  2681 000019A5 6A01                    	push 1	; arg count
  2682 000019A7 488B4520                	mov rax, PARAM(0)	; param c
  2683 000019AB 803804                  	cmp byte [rax], T_closure
  2684 000019AE 0F855E470000            	jne L_error_non_closure
  2685 000019B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2686 000019B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2687 000019BA 803804                  	cmp byte [rax], T_closure
  2688 000019BD 0F854F470000            	jne L_error_non_closure
  2689 000019C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2690 000019C6 FF7508                  	push qword [rbp + 8 * 1]
  2691                                   ; old ret addr
  2692 000019C9 5D                      	pop rbp
  2693                                  ; restore the old rbp
  2694 000019CA BB01000000              	mov rbx, 1
  2695 000019CF 4883C303                	add rbx, 3
  2696 000019D3 488B7D10                	mov rdi, qword [rbp + 8*2]
  2697                                  .L_tc_recycle_frame_loop_000d:
  2698 000019D7 4883FB00                	cmp rbx, 0
  2699 000019DB 7411                    je .L_tc_recycle_frame_done_000d
  2700 000019DD 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2701 000019E1 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2702 000019E6 48FFCF                  	dec rdi
  2703 000019E9 48FFCB                  	dec rbx
  2704 000019EC EBE9                    jmp .L_tc_recycle_frame_loop_000d
  2705                                  .L_tc_recycle_frame_done_000d:
  2706 000019EE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2707 000019F1 C9                      	leave
  2708 000019F2 C21800                  	ret AND_KILL_FRAME(1)
  2709                                  .L_lambda_simple_end_0022:	; new closure is in rax
  2710 000019F5 C9                      	leave
  2711 000019F6 C21800                  	ret AND_KILL_FRAME(1)
  2712                                  .L_lambda_simple_end_0021:	; new closure is in rax
  2713 000019F9 C9                      	leave
  2714 000019FA C21800                  	ret AND_KILL_FRAME(1)
  2715                                  .L_lambda_simple_end_0020:	; new closure is in rax
  2716 000019FD 803804                  	cmp byte [rax], T_closure
  2717 00001A00 0F850C470000            	jne L_error_non_closure
  2718 00001A06 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2719 00001A09 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2720 00001A0C 803804                  	cmp byte [rax], T_closure
  2721 00001A0F 0F85FD460000            	jne L_error_non_closure
  2722 00001A15 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2723 00001A18 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2724 00001A1B 50                      	push rax
  2725 00001A1C 6A01                    	push 1	; arg count
  2726                                  	; preparing a non-tail-call
  2727 00001A1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2728 00001A23 E893470000              	call malloc
  2729 00001A28 50                      	push rax
  2730 00001A29 BF08000000              	mov rdi, 8 * 1	; new rib
  2731 00001A2E E888470000              	call malloc
  2732 00001A33 50                      	push rax
  2733 00001A34 BF10000000              	mov rdi, 8 * 2	; extended env
  2734 00001A39 E87D470000              	call malloc
  2735 00001A3E 488B7D10                	mov rdi, ENV
  2736 00001A42 BE00000000              	mov rsi, 0
  2737 00001A47 BA01000000              	mov rdx, 1
  2738                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  2739 00001A4C 4883FE01                	cmp rsi, 1
  2740 00001A50 7410                    	je .L_lambda_simple_env_end_0023
  2741 00001A52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2742 00001A56 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2743 00001A5A 48FFC6                  	inc rsi
  2744 00001A5D 48FFC2                  	inc rdx
  2745 00001A60 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  2746                                  .L_lambda_simple_env_end_0023:
  2747 00001A62 5B                      	pop rbx
  2748 00001A63 BE00000000              	mov rsi, 0
  2749                                  .L_lambda_simple_params_loop_0023:	; copy params
  2750 00001A68 4883FE01                	cmp rsi, 1
  2751 00001A6C 740E                    	je .L_lambda_simple_params_end_0023
  2752 00001A6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2753 00001A73 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2754 00001A77 48FFC6                  	inc rsi
  2755 00001A7A EBEC                    	jmp .L_lambda_simple_params_loop_0023
  2756                                  .L_lambda_simple_params_end_0023:
  2757 00001A7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2758 00001A7F 4889C3                  	mov rbx, rax
  2759 00001A82 58                      	pop rax
  2760 00001A83 C60004                  	mov byte [rax], T_closure
  2761 00001A86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2762 00001A8A 48C74009[971A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  2763 00001A92 E9B6110000              	jmp .L_lambda_simple_end_0023
  2764                                  .L_lambda_simple_code_0023:	; lambda-simple body
  2765 00001A97 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2766 00001A9D 740B                    	je .L_lambda_simple_arity_check_ok_0023
  2767 00001A9F FF742410                	push qword [rsp + 8 * 2]
  2768 00001AA3 6A01                    	push 1
  2769 00001AA5 E9CA460000              	jmp L_error_incorrect_arity_simple
  2770                                  .L_lambda_simple_arity_check_ok_0023:
  2771 00001AAA C8000000                	enter 0, 0
  2772                                  	; preparing a tail-call
  2773                                  	; preparing a non-tail-call
  2774                                  	; preparing a non-tail-call
  2775 00001AAE 488B4520                	mov rax, PARAM(0)	; param p
  2776 00001AB2 50                      	push rax
  2777 00001AB3 6A01                    	push 1	; arg count
  2778 00001AB5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2779 00001ABA E8FC460000              	call malloc
  2780 00001ABF 50                      	push rax
  2781 00001AC0 BF08000000              	mov rdi, 8 * 1	; new rib
  2782 00001AC5 E8F1460000              	call malloc
  2783 00001ACA 50                      	push rax
  2784 00001ACB BF18000000              	mov rdi, 8 * 3	; extended env
  2785 00001AD0 E8E6460000              	call malloc
  2786 00001AD5 488B7D10                	mov rdi, ENV
  2787 00001AD9 BE00000000              	mov rsi, 0
  2788 00001ADE BA01000000              	mov rdx, 1
  2789                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  2790 00001AE3 4883FE02                	cmp rsi, 2
  2791 00001AE7 7410                    	je .L_lambda_simple_env_end_0024
  2792 00001AE9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2793 00001AED 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2794 00001AF1 48FFC6                  	inc rsi
  2795 00001AF4 48FFC2                  	inc rdx
  2796 00001AF7 EBEA                    	jmp .L_lambda_simple_env_loop_0024
  2797                                  .L_lambda_simple_env_end_0024:
  2798 00001AF9 5B                      	pop rbx
  2799 00001AFA BE00000000              	mov rsi, 0
  2800                                  .L_lambda_simple_params_loop_0024:	; copy params
  2801 00001AFF 4883FE01                	cmp rsi, 1
  2802 00001B03 740E                    	je .L_lambda_simple_params_end_0024
  2803 00001B05 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2804 00001B0A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2805 00001B0E 48FFC6                  	inc rsi
  2806 00001B11 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  2807                                  .L_lambda_simple_params_end_0024:
  2808 00001B13 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2809 00001B16 4889C3                  	mov rbx, rax
  2810 00001B19 58                      	pop rax
  2811 00001B1A C60004                  	mov byte [rax], T_closure
  2812 00001B1D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2813 00001B21 48C74009[2E1B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  2814 00001B29 E982010000              	jmp .L_lambda_simple_end_0024
  2815                                  .L_lambda_simple_code_0024:	; lambda-simple body
  2816 00001B2E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2817 00001B34 740B                    	je .L_lambda_simple_arity_check_ok_0024
  2818 00001B36 FF742410                	push qword [rsp + 8 * 2]
  2819 00001B3A 6A01                    	push 1
  2820 00001B3C E933460000              	jmp L_error_incorrect_arity_simple
  2821                                  .L_lambda_simple_arity_check_ok_0024:
  2822 00001B41 C8000000                	enter 0, 0
  2823                                  	; preparing a tail-call
  2824 00001B45 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2825 00001B4A E86C460000              	call malloc
  2826 00001B4F 50                      	push rax
  2827 00001B50 BF08000000              	mov rdi, 8 * 1	; new rib
  2828 00001B55 E861460000              	call malloc
  2829 00001B5A 50                      	push rax
  2830 00001B5B BF20000000              	mov rdi, 8 * 4	; extended env
  2831 00001B60 E856460000              	call malloc
  2832 00001B65 488B7D10                	mov rdi, ENV
  2833 00001B69 BE00000000              	mov rsi, 0
  2834 00001B6E BA01000000              	mov rdx, 1
  2835                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  2836 00001B73 4883FE03                	cmp rsi, 3
  2837 00001B77 7410                    	je .L_lambda_simple_env_end_0025
  2838 00001B79 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2839 00001B7D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2840 00001B81 48FFC6                  	inc rsi
  2841 00001B84 48FFC2                  	inc rdx
  2842 00001B87 EBEA                    	jmp .L_lambda_simple_env_loop_0025
  2843                                  .L_lambda_simple_env_end_0025:
  2844 00001B89 5B                      	pop rbx
  2845 00001B8A BE00000000              	mov rsi, 0
  2846                                  .L_lambda_simple_params_loop_0025:	; copy params
  2847 00001B8F 4883FE01                	cmp rsi, 1
  2848 00001B93 740E                    	je .L_lambda_simple_params_end_0025
  2849 00001B95 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2850 00001B9A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2851 00001B9E 48FFC6                  	inc rsi
  2852 00001BA1 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  2853                                  .L_lambda_simple_params_end_0025:
  2854 00001BA3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2855 00001BA6 4889C3                  	mov rbx, rax
  2856 00001BA9 58                      	pop rax
  2857 00001BAA C60004                  	mov byte [rax], T_closure
  2858 00001BAD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2859 00001BB1 48C74009[BE1B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  2860 00001BB9 E9B0000000              	jmp .L_lambda_simple_end_0025
  2861                                  .L_lambda_simple_code_0025:	; lambda-simple body
  2862 00001BBE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2863 00001BC4 740B                    	je .L_lambda_simple_arity_check_ok_0025
  2864 00001BC6 FF742410                	push qword [rsp + 8 * 2]
  2865 00001BCA 6A01                    	push 1
  2866 00001BCC E9A3450000              	jmp L_error_incorrect_arity_simple
  2867                                  .L_lambda_simple_arity_check_ok_0025:
  2868 00001BD1 C8000000                	enter 0, 0
  2869 00001BD5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2870 00001BDA E8DC450000              	call malloc
  2871 00001BDF 50                      	push rax
  2872 00001BE0 BF08000000              	mov rdi, 8 * 1	; new rib
  2873 00001BE5 E8D1450000              	call malloc
  2874 00001BEA 50                      	push rax
  2875 00001BEB BF28000000              	mov rdi, 8 * 5	; extended env
  2876 00001BF0 E8C6450000              	call malloc
  2877 00001BF5 488B7D10                	mov rdi, ENV
  2878 00001BF9 BE00000000              	mov rsi, 0
  2879 00001BFE BA01000000              	mov rdx, 1
  2880                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  2881 00001C03 4883FE04                	cmp rsi, 4
  2882 00001C07 7410                    	je .L_lambda_simple_env_end_0026
  2883 00001C09 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2884 00001C0D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2885 00001C11 48FFC6                  	inc rsi
  2886 00001C14 48FFC2                  	inc rdx
  2887 00001C17 EBEA                    	jmp .L_lambda_simple_env_loop_0026
  2888                                  .L_lambda_simple_env_end_0026:
  2889 00001C19 5B                      	pop rbx
  2890 00001C1A BE00000000              	mov rsi, 0
  2891                                  .L_lambda_simple_params_loop_0026:	; copy params
  2892 00001C1F 4883FE01                	cmp rsi, 1
  2893 00001C23 740E                    	je .L_lambda_simple_params_end_0026
  2894 00001C25 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2895 00001C2A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2896 00001C2E 48FFC6                  	inc rsi
  2897 00001C31 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  2898                                  .L_lambda_simple_params_end_0026:
  2899 00001C33 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2900 00001C36 4889C3                  	mov rbx, rax
  2901 00001C39 58                      	pop rax
  2902 00001C3A C60004                  	mov byte [rax], T_closure
  2903 00001C3D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2904 00001C41 48C74009[4B1C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  2905 00001C49 EB1F                    	jmp .L_lambda_simple_end_0026
  2906                                  .L_lambda_simple_code_0026:	; lambda-simple body
  2907 00001C4B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2908 00001C51 740B                    	je .L_lambda_simple_arity_check_ok_0026
  2909 00001C53 FF742410                	push qword [rsp + 8 * 2]
  2910 00001C57 6A01                    	push 1
  2911 00001C59 E916450000              	jmp L_error_incorrect_arity_simple
  2912                                  .L_lambda_simple_arity_check_ok_0026:
  2913 00001C5E C8000000                	enter 0, 0
  2914 00001C62 488B4520                	mov rax, PARAM(0)	; param b
  2915 00001C66 C9                      	leave
  2916 00001C67 C21800                  	ret AND_KILL_FRAME(1)
  2917                                  .L_lambda_simple_end_0026:	; new closure is in rax
  2918 00001C6A C9                      	leave
  2919 00001C6B C21800                  	ret AND_KILL_FRAME(1)
  2920                                  .L_lambda_simple_end_0025:	; new closure is in rax
  2921 00001C6E 50                      	push rax
  2922 00001C6F 6A01                    	push 1	; arg count
  2923 00001C71 488B4520                	mov rax, PARAM(0)	; param p
  2924 00001C75 803804                  	cmp byte [rax], T_closure
  2925 00001C78 0F8594440000            	jne L_error_non_closure
  2926 00001C7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2927 00001C81 FF7508                  	push qword [rbp + 8 * 1]
  2928                                   ; old ret addr
  2929 00001C84 5D                      	pop rbp
  2930                                  ; restore the old rbp
  2931 00001C85 BB01000000              	mov rbx, 1
  2932 00001C8A 4883C303                	add rbx, 3
  2933 00001C8E 488B7D10                	mov rdi, qword [rbp + 8*2]
  2934                                  .L_tc_recycle_frame_loop_000f:
  2935 00001C92 4883FB00                	cmp rbx, 0
  2936 00001C96 7411                    je .L_tc_recycle_frame_done_000f
  2937 00001C98 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  2938 00001C9C 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  2939 00001CA1 48FFCF                  	dec rdi
  2940 00001CA4 48FFCB                  	dec rbx
  2941 00001CA7 EBE9                    jmp .L_tc_recycle_frame_loop_000f
  2942                                  .L_tc_recycle_frame_done_000f:
  2943 00001CA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2944 00001CAC C9                      	leave
  2945 00001CAD C21800                  	ret AND_KILL_FRAME(1)
  2946                                  .L_lambda_simple_end_0024:	; new closure is in rax
  2947 00001CB0 803804                  	cmp byte [rax], T_closure
  2948 00001CB3 0F8559440000            	jne L_error_non_closure
  2949 00001CB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2950 00001CBC FF5009                  	call SOB_CLOSURE_CODE(rax)
  2951 00001CBF 50                      	push rax
  2952 00001CC0 6A01                    	push 1	; arg count
  2953                                  	; preparing a non-tail-call
  2954                                  	; preparing a non-tail-call
  2955 00001CC2 488B4520                	mov rax, PARAM(0)	; param p
  2956 00001CC6 50                      	push rax
  2957 00001CC7 6A01                    	push 1	; arg count
  2958 00001CC9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2959 00001CCE E8E8440000              	call malloc
  2960 00001CD3 50                      	push rax
  2961 00001CD4 BF08000000              	mov rdi, 8 * 1	; new rib
  2962 00001CD9 E8DD440000              	call malloc
  2963 00001CDE 50                      	push rax
  2964 00001CDF BF18000000              	mov rdi, 8 * 3	; extended env
  2965 00001CE4 E8D2440000              	call malloc
  2966 00001CE9 488B7D10                	mov rdi, ENV
  2967 00001CED BE00000000              	mov rsi, 0
  2968 00001CF2 BA01000000              	mov rdx, 1
  2969                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  2970 00001CF7 4883FE02                	cmp rsi, 2
  2971 00001CFB 7410                    	je .L_lambda_simple_env_end_0027
  2972 00001CFD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2973 00001D01 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2974 00001D05 48FFC6                  	inc rsi
  2975 00001D08 48FFC2                  	inc rdx
  2976 00001D0B EBEA                    	jmp .L_lambda_simple_env_loop_0027
  2977                                  .L_lambda_simple_env_end_0027:
  2978 00001D0D 5B                      	pop rbx
  2979 00001D0E BE00000000              	mov rsi, 0
  2980                                  .L_lambda_simple_params_loop_0027:	; copy params
  2981 00001D13 4883FE01                	cmp rsi, 1
  2982 00001D17 740E                    	je .L_lambda_simple_params_end_0027
  2983 00001D19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2984 00001D1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2985 00001D22 48FFC6                  	inc rsi
  2986 00001D25 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  2987                                  .L_lambda_simple_params_end_0027:
  2988 00001D27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2989 00001D2A 4889C3                  	mov rbx, rax
  2990 00001D2D 58                      	pop rax
  2991 00001D2E C60004                  	mov byte [rax], T_closure
  2992 00001D31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2993 00001D35 48C74009[421D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  2994 00001D3D E988010000              	jmp .L_lambda_simple_end_0027
  2995                                  .L_lambda_simple_code_0027:	; lambda-simple body
  2996 00001D42 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2997 00001D48 740B                    	je .L_lambda_simple_arity_check_ok_0027
  2998 00001D4A FF742410                	push qword [rsp + 8 * 2]
  2999 00001D4E 6A01                    	push 1
  3000 00001D50 E91F440000              	jmp L_error_incorrect_arity_simple
  3001                                  .L_lambda_simple_arity_check_ok_0027:
  3002 00001D55 C8000000                	enter 0, 0
  3003                                  	; preparing a tail-call
  3004 00001D59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3005 00001D5E E858440000              	call malloc
  3006 00001D63 50                      	push rax
  3007 00001D64 BF08000000              	mov rdi, 8 * 1	; new rib
  3008 00001D69 E84D440000              	call malloc
  3009 00001D6E 50                      	push rax
  3010 00001D6F BF20000000              	mov rdi, 8 * 4	; extended env
  3011 00001D74 E842440000              	call malloc
  3012 00001D79 488B7D10                	mov rdi, ENV
  3013 00001D7D BE00000000              	mov rsi, 0
  3014 00001D82 BA01000000              	mov rdx, 1
  3015                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  3016 00001D87 4883FE03                	cmp rsi, 3
  3017 00001D8B 7410                    	je .L_lambda_simple_env_end_0028
  3018 00001D8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3019 00001D91 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3020 00001D95 48FFC6                  	inc rsi
  3021 00001D98 48FFC2                  	inc rdx
  3022 00001D9B EBEA                    	jmp .L_lambda_simple_env_loop_0028
  3023                                  .L_lambda_simple_env_end_0028:
  3024 00001D9D 5B                      	pop rbx
  3025 00001D9E BE00000000              	mov rsi, 0
  3026                                  .L_lambda_simple_params_loop_0028:	; copy params
  3027 00001DA3 4883FE01                	cmp rsi, 1
  3028 00001DA7 740E                    	je .L_lambda_simple_params_end_0028
  3029 00001DA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3030 00001DAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3031 00001DB2 48FFC6                  	inc rsi
  3032 00001DB5 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  3033                                  .L_lambda_simple_params_end_0028:
  3034 00001DB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3035 00001DBA 4889C3                  	mov rbx, rax
  3036 00001DBD 58                      	pop rax
  3037 00001DBE C60004                  	mov byte [rax], T_closure
  3038 00001DC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3039 00001DC5 48C74009[D21D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  3040 00001DCD E9B6000000              	jmp .L_lambda_simple_end_0028
  3041                                  .L_lambda_simple_code_0028:	; lambda-simple body
  3042 00001DD2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3043 00001DD8 740B                    	je .L_lambda_simple_arity_check_ok_0028
  3044 00001DDA FF742410                	push qword [rsp + 8 * 2]
  3045 00001DDE 6A01                    	push 1
  3046 00001DE0 E98F430000              	jmp L_error_incorrect_arity_simple
  3047                                  .L_lambda_simple_arity_check_ok_0028:
  3048 00001DE5 C8000000                	enter 0, 0
  3049 00001DE9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3050 00001DEE E8C8430000              	call malloc
  3051 00001DF3 50                      	push rax
  3052 00001DF4 BF08000000              	mov rdi, 8 * 1	; new rib
  3053 00001DF9 E8BD430000              	call malloc
  3054 00001DFE 50                      	push rax
  3055 00001DFF BF28000000              	mov rdi, 8 * 5	; extended env
  3056 00001E04 E8B2430000              	call malloc
  3057 00001E09 488B7D10                	mov rdi, ENV
  3058 00001E0D BE00000000              	mov rsi, 0
  3059 00001E12 BA01000000              	mov rdx, 1
  3060                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  3061 00001E17 4883FE04                	cmp rsi, 4
  3062 00001E1B 7410                    	je .L_lambda_simple_env_end_0029
  3063 00001E1D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3064 00001E21 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3065 00001E25 48FFC6                  	inc rsi
  3066 00001E28 48FFC2                  	inc rdx
  3067 00001E2B EBEA                    	jmp .L_lambda_simple_env_loop_0029
  3068                                  .L_lambda_simple_env_end_0029:
  3069 00001E2D 5B                      	pop rbx
  3070 00001E2E BE00000000              	mov rsi, 0
  3071                                  .L_lambda_simple_params_loop_0029:	; copy params
  3072 00001E33 4883FE01                	cmp rsi, 1
  3073 00001E37 740E                    	je .L_lambda_simple_params_end_0029
  3074 00001E39 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3075 00001E3E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3076 00001E42 48FFC6                  	inc rsi
  3077 00001E45 EBEC                    	jmp .L_lambda_simple_params_loop_0029
  3078                                  .L_lambda_simple_params_end_0029:
  3079 00001E47 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3080 00001E4A 4889C3                  	mov rbx, rax
  3081 00001E4D 58                      	pop rax
  3082 00001E4E C60004                  	mov byte [rax], T_closure
  3083 00001E51 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3084 00001E55 48C74009[5F1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  3085 00001E5D EB25                    	jmp .L_lambda_simple_end_0029
  3086                                  .L_lambda_simple_code_0029:	; lambda-simple body
  3087 00001E5F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3088 00001E65 740B                    	je .L_lambda_simple_arity_check_ok_0029
  3089 00001E67 FF742410                	push qword [rsp + 8 * 2]
  3090 00001E6B 6A01                    	push 1
  3091 00001E6D E902430000              	jmp L_error_incorrect_arity_simple
  3092                                  .L_lambda_simple_arity_check_ok_0029:
  3093 00001E72 C8000000                	enter 0, 0
  3094 00001E76 488B4510                	mov rax, ENV
  3095 00001E7A 488B00                  	mov rax, qword [rax + 8 * 0]
  3096 00001E7D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3097 00001E80 C9                      	leave
  3098 00001E81 C21800                  	ret AND_KILL_FRAME(1)
  3099                                  .L_lambda_simple_end_0029:	; new closure is in rax
  3100 00001E84 C9                      	leave
  3101 00001E85 C21800                  	ret AND_KILL_FRAME(1)
  3102                                  .L_lambda_simple_end_0028:	; new closure is in rax
  3103 00001E88 50                      	push rax
  3104 00001E89 6A01                    	push 1	; arg count
  3105 00001E8B 488B4520                	mov rax, PARAM(0)	; param p
  3106 00001E8F 803804                  	cmp byte [rax], T_closure
  3107 00001E92 0F857A420000            	jne L_error_non_closure
  3108 00001E98 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3109 00001E9B FF7508                  	push qword [rbp + 8 * 1]
  3110                                   ; old ret addr
  3111 00001E9E 5D                      	pop rbp
  3112                                  ; restore the old rbp
  3113 00001E9F BB01000000              	mov rbx, 1
  3114 00001EA4 4883C303                	add rbx, 3
  3115 00001EA8 488B7D10                	mov rdi, qword [rbp + 8*2]
  3116                                  .L_tc_recycle_frame_loop_0010:
  3117 00001EAC 4883FB00                	cmp rbx, 0
  3118 00001EB0 7411                    je .L_tc_recycle_frame_done_0010
  3119 00001EB2 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3120 00001EB6 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3121 00001EBB 48FFCF                  	dec rdi
  3122 00001EBE 48FFCB                  	dec rbx
  3123 00001EC1 EBE9                    jmp .L_tc_recycle_frame_loop_0010
  3124                                  .L_tc_recycle_frame_done_0010:
  3125 00001EC3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3126 00001EC6 C9                      	leave
  3127 00001EC7 C21800                  	ret AND_KILL_FRAME(1)
  3128                                  .L_lambda_simple_end_0027:	; new closure is in rax
  3129 00001ECA 803804                  	cmp byte [rax], T_closure
  3130 00001ECD 0F853F420000            	jne L_error_non_closure
  3131 00001ED3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3132 00001ED6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3133 00001ED9 50                      	push rax
  3134 00001EDA 6A01                    	push 1	; arg count
  3135 00001EDC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3136 00001EE1 E8D5420000              	call malloc
  3137 00001EE6 50                      	push rax
  3138 00001EE7 BF08000000              	mov rdi, 8 * 1	; new rib
  3139 00001EEC E8CA420000              	call malloc
  3140 00001EF1 50                      	push rax
  3141 00001EF2 BF18000000              	mov rdi, 8 * 3	; extended env
  3142 00001EF7 E8BF420000              	call malloc
  3143 00001EFC 488B7D10                	mov rdi, ENV
  3144 00001F00 BE00000000              	mov rsi, 0
  3145 00001F05 BA01000000              	mov rdx, 1
  3146                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  3147 00001F0A 4883FE02                	cmp rsi, 2
  3148 00001F0E 7410                    	je .L_lambda_simple_env_end_002a
  3149 00001F10 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3150 00001F14 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3151 00001F18 48FFC6                  	inc rsi
  3152 00001F1B 48FFC2                  	inc rdx
  3153 00001F1E EBEA                    	jmp .L_lambda_simple_env_loop_002a
  3154                                  .L_lambda_simple_env_end_002a:
  3155 00001F20 5B                      	pop rbx
  3156 00001F21 BE00000000              	mov rsi, 0
  3157                                  .L_lambda_simple_params_loop_002a:	; copy params
  3158 00001F26 4883FE01                	cmp rsi, 1
  3159 00001F2A 740E                    	je .L_lambda_simple_params_end_002a
  3160 00001F2C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3161 00001F31 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3162 00001F35 48FFC6                  	inc rsi
  3163 00001F38 EBEC                    	jmp .L_lambda_simple_params_loop_002a
  3164                                  .L_lambda_simple_params_end_002a:
  3165 00001F3A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3166 00001F3D 4889C3                  	mov rbx, rax
  3167 00001F40 58                      	pop rax
  3168 00001F41 C60004                  	mov byte [rax], T_closure
  3169 00001F44 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3170 00001F48 48C74009[551F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  3171 00001F50 E903060000              	jmp .L_lambda_simple_end_002a
  3172                                  .L_lambda_simple_code_002a:	; lambda-simple body
  3173 00001F55 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3174 00001F5B 740B                    	je .L_lambda_simple_arity_check_ok_002a
  3175 00001F5D FF742410                	push qword [rsp + 8 * 2]
  3176 00001F61 6A01                    	push 1
  3177 00001F63 E90C420000              	jmp L_error_incorrect_arity_simple
  3178                                  .L_lambda_simple_arity_check_ok_002a:
  3179 00001F68 C8000000                	enter 0, 0
  3180 00001F6C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3181 00001F71 E845420000              	call malloc
  3182 00001F76 50                      	push rax
  3183 00001F77 BF08000000              	mov rdi, 8 * 1	; new rib
  3184 00001F7C E83A420000              	call malloc
  3185 00001F81 50                      	push rax
  3186 00001F82 BF20000000              	mov rdi, 8 * 4	; extended env
  3187 00001F87 E82F420000              	call malloc
  3188 00001F8C 488B7D10                	mov rdi, ENV
  3189 00001F90 BE00000000              	mov rsi, 0
  3190 00001F95 BA01000000              	mov rdx, 1
  3191                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  3192 00001F9A 4883FE03                	cmp rsi, 3
  3193 00001F9E 7410                    	je .L_lambda_simple_env_end_002b
  3194 00001FA0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3195 00001FA4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3196 00001FA8 48FFC6                  	inc rsi
  3197 00001FAB 48FFC2                  	inc rdx
  3198 00001FAE EBEA                    	jmp .L_lambda_simple_env_loop_002b
  3199                                  .L_lambda_simple_env_end_002b:
  3200 00001FB0 5B                      	pop rbx
  3201 00001FB1 BE00000000              	mov rsi, 0
  3202                                  .L_lambda_simple_params_loop_002b:	; copy params
  3203 00001FB6 4883FE01                	cmp rsi, 1
  3204 00001FBA 740E                    	je .L_lambda_simple_params_end_002b
  3205 00001FBC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3206 00001FC1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3207 00001FC5 48FFC6                  	inc rsi
  3208 00001FC8 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  3209                                  .L_lambda_simple_params_end_002b:
  3210 00001FCA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3211 00001FCD 4889C3                  	mov rbx, rax
  3212 00001FD0 58                      	pop rax
  3213 00001FD1 C60004                  	mov byte [rax], T_closure
  3214 00001FD4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3215 00001FD8 48C74009[E51F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  3216 00001FE0 E96F050000              	jmp .L_lambda_simple_end_002b
  3217                                  .L_lambda_simple_code_002b:	; lambda-simple body
  3218 00001FE5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3219 00001FEB 740B                    	je .L_lambda_simple_arity_check_ok_002b
  3220 00001FED FF742410                	push qword [rsp + 8 * 2]
  3221 00001FF1 6A01                    	push 1
  3222 00001FF3 E97C410000              	jmp L_error_incorrect_arity_simple
  3223                                  .L_lambda_simple_arity_check_ok_002b:
  3224 00001FF8 C8000000                	enter 0, 0
  3225                                  	; preparing a tail-call
  3226 00001FFC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3227 00002001 E8B5410000              	call malloc
  3228 00002006 50                      	push rax
  3229 00002007 BF08000000              	mov rdi, 8 * 1	; new rib
  3230 0000200C E8AA410000              	call malloc
  3231 00002011 50                      	push rax
  3232 00002012 BF28000000              	mov rdi, 8 * 5	; extended env
  3233 00002017 E89F410000              	call malloc
  3234 0000201C 488B7D10                	mov rdi, ENV
  3235 00002020 BE00000000              	mov rsi, 0
  3236 00002025 BA01000000              	mov rdx, 1
  3237                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  3238 0000202A 4883FE04                	cmp rsi, 4
  3239 0000202E 7410                    	je .L_lambda_simple_env_end_002c
  3240 00002030 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3241 00002034 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3242 00002038 48FFC6                  	inc rsi
  3243 0000203B 48FFC2                  	inc rdx
  3244 0000203E EBEA                    	jmp .L_lambda_simple_env_loop_002c
  3245                                  .L_lambda_simple_env_end_002c:
  3246 00002040 5B                      	pop rbx
  3247 00002041 BE00000000              	mov rsi, 0
  3248                                  .L_lambda_simple_params_loop_002c:	; copy params
  3249 00002046 4883FE01                	cmp rsi, 1
  3250 0000204A 740E                    	je .L_lambda_simple_params_end_002c
  3251 0000204C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3252 00002051 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3253 00002055 48FFC6                  	inc rsi
  3254 00002058 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  3255                                  .L_lambda_simple_params_end_002c:
  3256 0000205A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3257 0000205D 4889C3                  	mov rbx, rax
  3258 00002060 58                      	pop rax
  3259 00002061 C60004                  	mov byte [rax], T_closure
  3260 00002064 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3261 00002068 48C74009[75200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  3262 00002070 E9B0000000              	jmp .L_lambda_simple_end_002c
  3263                                  .L_lambda_simple_code_002c:	; lambda-simple body
  3264 00002075 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3265 0000207B 740B                    	je .L_lambda_simple_arity_check_ok_002c
  3266 0000207D FF742410                	push qword [rsp + 8 * 2]
  3267 00002081 6A01                    	push 1
  3268 00002083 E9EC400000              	jmp L_error_incorrect_arity_simple
  3269                                  .L_lambda_simple_arity_check_ok_002c:
  3270 00002088 C8000000                	enter 0, 0
  3271 0000208C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3272 00002091 E825410000              	call malloc
  3273 00002096 50                      	push rax
  3274 00002097 BF08000000              	mov rdi, 8 * 1	; new rib
  3275 0000209C E81A410000              	call malloc
  3276 000020A1 50                      	push rax
  3277 000020A2 BF30000000              	mov rdi, 8 * 6	; extended env
  3278 000020A7 E80F410000              	call malloc
  3279 000020AC 488B7D10                	mov rdi, ENV
  3280 000020B0 BE00000000              	mov rsi, 0
  3281 000020B5 BA01000000              	mov rdx, 1
  3282                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  3283 000020BA 4883FE05                	cmp rsi, 5
  3284 000020BE 7410                    	je .L_lambda_simple_env_end_002d
  3285 000020C0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3286 000020C4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3287 000020C8 48FFC6                  	inc rsi
  3288 000020CB 48FFC2                  	inc rdx
  3289 000020CE EBEA                    	jmp .L_lambda_simple_env_loop_002d
  3290                                  .L_lambda_simple_env_end_002d:
  3291 000020D0 5B                      	pop rbx
  3292 000020D1 BE00000000              	mov rsi, 0
  3293                                  .L_lambda_simple_params_loop_002d:	; copy params
  3294 000020D6 4883FE01                	cmp rsi, 1
  3295 000020DA 740E                    	je .L_lambda_simple_params_end_002d
  3296 000020DC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3297 000020E1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3298 000020E5 48FFC6                  	inc rsi
  3299 000020E8 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  3300                                  .L_lambda_simple_params_end_002d:
  3301 000020EA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3302 000020ED 4889C3                  	mov rbx, rax
  3303 000020F0 58                      	pop rax
  3304 000020F1 C60004                  	mov byte [rax], T_closure
  3305 000020F4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3306 000020F8 48C74009[02210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  3307 00002100 EB1F                    	jmp .L_lambda_simple_end_002d
  3308                                  .L_lambda_simple_code_002d:	; lambda-simple body
  3309 00002102 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3310 00002108 740B                    	je .L_lambda_simple_arity_check_ok_002d
  3311 0000210A FF742410                	push qword [rsp + 8 * 2]
  3312 0000210E 6A01                    	push 1
  3313 00002110 E95F400000              	jmp L_error_incorrect_arity_simple
  3314                                  .L_lambda_simple_arity_check_ok_002d:
  3315 00002115 C8000000                	enter 0, 0
  3316 00002119 488B4520                	mov rax, PARAM(0)	; param y
  3317 0000211D C9                      	leave
  3318 0000211E C21800                  	ret AND_KILL_FRAME(1)
  3319                                  .L_lambda_simple_end_002d:	; new closure is in rax
  3320 00002121 C9                      	leave
  3321 00002122 C21800                  	ret AND_KILL_FRAME(1)
  3322                                  .L_lambda_simple_end_002c:	; new closure is in rax
  3323 00002125 50                      	push rax
  3324 00002126 6A01                    	push 1	; arg count
  3325                                  	; preparing a non-tail-call
  3326                                  	; preparing a non-tail-call
  3327 00002128 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3328 0000212D E889400000              	call malloc
  3329 00002132 50                      	push rax
  3330 00002133 BF08000000              	mov rdi, 8 * 1	; new rib
  3331 00002138 E87E400000              	call malloc
  3332 0000213D 50                      	push rax
  3333 0000213E BF28000000              	mov rdi, 8 * 5	; extended env
  3334 00002143 E873400000              	call malloc
  3335 00002148 488B7D10                	mov rdi, ENV
  3336 0000214C BE00000000              	mov rsi, 0
  3337 00002151 BA01000000              	mov rdx, 1
  3338                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  3339 00002156 4883FE04                	cmp rsi, 4
  3340 0000215A 7410                    	je .L_lambda_simple_env_end_002e
  3341 0000215C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3342 00002160 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3343 00002164 48FFC6                  	inc rsi
  3344 00002167 48FFC2                  	inc rdx
  3345 0000216A EBEA                    	jmp .L_lambda_simple_env_loop_002e
  3346                                  .L_lambda_simple_env_end_002e:
  3347 0000216C 5B                      	pop rbx
  3348 0000216D BE00000000              	mov rsi, 0
  3349                                  .L_lambda_simple_params_loop_002e:	; copy params
  3350 00002172 4883FE01                	cmp rsi, 1
  3351 00002176 740E                    	je .L_lambda_simple_params_end_002e
  3352 00002178 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3353 0000217D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3354 00002181 48FFC6                  	inc rsi
  3355 00002184 EBEC                    	jmp .L_lambda_simple_params_loop_002e
  3356                                  .L_lambda_simple_params_end_002e:
  3357 00002186 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3358 00002189 4889C3                  	mov rbx, rax
  3359 0000218C 58                      	pop rax
  3360 0000218D C60004                  	mov byte [rax], T_closure
  3361 00002190 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3362 00002194 48C74009[A1210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  3363 0000219C E946030000              	jmp .L_lambda_simple_end_002e
  3364                                  .L_lambda_simple_code_002e:	; lambda-simple body
  3365 000021A1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3366 000021A7 740B                    	je .L_lambda_simple_arity_check_ok_002e
  3367 000021A9 FF742410                	push qword [rsp + 8 * 2]
  3368 000021AD 6A01                    	push 1
  3369 000021AF E9C03F0000              	jmp L_error_incorrect_arity_simple
  3370                                  .L_lambda_simple_arity_check_ok_002e:
  3371 000021B4 C8000000                	enter 0, 0
  3372 000021B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3373 000021BD E8F93F0000              	call malloc
  3374 000021C2 50                      	push rax
  3375 000021C3 BF08000000              	mov rdi, 8 * 1	; new rib
  3376 000021C8 E8EE3F0000              	call malloc
  3377 000021CD 50                      	push rax
  3378 000021CE BF30000000              	mov rdi, 8 * 6	; extended env
  3379 000021D3 E8E33F0000              	call malloc
  3380 000021D8 488B7D10                	mov rdi, ENV
  3381 000021DC BE00000000              	mov rsi, 0
  3382 000021E1 BA01000000              	mov rdx, 1
  3383                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  3384 000021E6 4883FE05                	cmp rsi, 5
  3385 000021EA 7410                    	je .L_lambda_simple_env_end_002f
  3386 000021EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3387 000021F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3388 000021F4 48FFC6                  	inc rsi
  3389 000021F7 48FFC2                  	inc rdx
  3390 000021FA EBEA                    	jmp .L_lambda_simple_env_loop_002f
  3391                                  .L_lambda_simple_env_end_002f:
  3392 000021FC 5B                      	pop rbx
  3393 000021FD BE00000000              	mov rsi, 0
  3394                                  .L_lambda_simple_params_loop_002f:	; copy params
  3395 00002202 4883FE01                	cmp rsi, 1
  3396 00002206 740E                    	je .L_lambda_simple_params_end_002f
  3397 00002208 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3398 0000220D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3399 00002211 48FFC6                  	inc rsi
  3400 00002214 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  3401                                  .L_lambda_simple_params_end_002f:
  3402 00002216 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3403 00002219 4889C3                  	mov rbx, rax
  3404 0000221C 58                      	pop rax
  3405 0000221D C60004                  	mov byte [rax], T_closure
  3406 00002220 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3407 00002224 48C74009[31220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  3408 0000222C E9B2020000              	jmp .L_lambda_simple_end_002f
  3409                                  .L_lambda_simple_code_002f:	; lambda-simple body
  3410 00002231 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3411 00002237 740B                    	je .L_lambda_simple_arity_check_ok_002f
  3412 00002239 FF742410                	push qword [rsp + 8 * 2]
  3413 0000223D 6A01                    	push 1
  3414 0000223F E9303F0000              	jmp L_error_incorrect_arity_simple
  3415                                  .L_lambda_simple_arity_check_ok_002f:
  3416 00002244 C8000000                	enter 0, 0
  3417                                  	; preparing a tail-call
  3418 00002248 488B4520                	mov rax, PARAM(0)	; param b
  3419 0000224C 50                      	push rax
  3420 0000224D 6A01                    	push 1	; arg count
  3421                                  	; preparing a non-tail-call
  3422 0000224F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3423 00002254 E8623F0000              	call malloc
  3424 00002259 50                      	push rax
  3425 0000225A BF08000000              	mov rdi, 8 * 1	; new rib
  3426 0000225F E8573F0000              	call malloc
  3427 00002264 50                      	push rax
  3428 00002265 BF38000000              	mov rdi, 8 * 7	; extended env
  3429 0000226A E84C3F0000              	call malloc
  3430 0000226F 488B7D10                	mov rdi, ENV
  3431 00002273 BE00000000              	mov rsi, 0
  3432 00002278 BA01000000              	mov rdx, 1
  3433                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  3434 0000227D 4883FE06                	cmp rsi, 6
  3435 00002281 7410                    	je .L_lambda_simple_env_end_0030
  3436 00002283 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3437 00002287 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3438 0000228B 48FFC6                  	inc rsi
  3439 0000228E 48FFC2                  	inc rdx
  3440 00002291 EBEA                    	jmp .L_lambda_simple_env_loop_0030
  3441                                  .L_lambda_simple_env_end_0030:
  3442 00002293 5B                      	pop rbx
  3443 00002294 BE00000000              	mov rsi, 0
  3444                                  .L_lambda_simple_params_loop_0030:	; copy params
  3445 00002299 4883FE01                	cmp rsi, 1
  3446 0000229D 740E                    	je .L_lambda_simple_params_end_0030
  3447 0000229F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3448 000022A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3449 000022A8 48FFC6                  	inc rsi
  3450 000022AB EBEC                    	jmp .L_lambda_simple_params_loop_0030
  3451                                  .L_lambda_simple_params_end_0030:
  3452 000022AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3453 000022B0 4889C3                  	mov rbx, rax
  3454 000022B3 58                      	pop rax
  3455 000022B4 C60004                  	mov byte [rax], T_closure
  3456 000022B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3457 000022BB 48C74009[C8220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  3458 000022C3 E9C4010000              	jmp .L_lambda_simple_end_0030
  3459                                  .L_lambda_simple_code_0030:	; lambda-simple body
  3460 000022C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3461 000022CE 740B                    	je .L_lambda_simple_arity_check_ok_0030
  3462 000022D0 FF742410                	push qword [rsp + 8 * 2]
  3463 000022D4 6A01                    	push 1
  3464 000022D6 E9993E0000              	jmp L_error_incorrect_arity_simple
  3465                                  .L_lambda_simple_arity_check_ok_0030:
  3466 000022DB C8000000                	enter 0, 0
  3467 000022DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3468 000022E4 E8D23E0000              	call malloc
  3469 000022E9 50                      	push rax
  3470 000022EA BF08000000              	mov rdi, 8 * 1	; new rib
  3471 000022EF E8C73E0000              	call malloc
  3472 000022F4 50                      	push rax
  3473 000022F5 BF40000000              	mov rdi, 8 * 8	; extended env
  3474 000022FA E8BC3E0000              	call malloc
  3475 000022FF 488B7D10                	mov rdi, ENV
  3476 00002303 BE00000000              	mov rsi, 0
  3477 00002308 BA01000000              	mov rdx, 1
  3478                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  3479 0000230D 4883FE07                	cmp rsi, 7
  3480 00002311 7410                    	je .L_lambda_simple_env_end_0031
  3481 00002313 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3482 00002317 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3483 0000231B 48FFC6                  	inc rsi
  3484 0000231E 48FFC2                  	inc rdx
  3485 00002321 EBEA                    	jmp .L_lambda_simple_env_loop_0031
  3486                                  .L_lambda_simple_env_end_0031:
  3487 00002323 5B                      	pop rbx
  3488 00002324 BE00000000              	mov rsi, 0
  3489                                  .L_lambda_simple_params_loop_0031:	; copy params
  3490 00002329 4883FE01                	cmp rsi, 1
  3491 0000232D 740E                    	je .L_lambda_simple_params_end_0031
  3492 0000232F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3493 00002334 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3494 00002338 48FFC6                  	inc rsi
  3495 0000233B EBEC                    	jmp .L_lambda_simple_params_loop_0031
  3496                                  .L_lambda_simple_params_end_0031:
  3497 0000233D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3498 00002340 4889C3                  	mov rbx, rax
  3499 00002343 58                      	pop rax
  3500 00002344 C60004                  	mov byte [rax], T_closure
  3501 00002347 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3502 0000234B 48C74009[58230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  3503 00002353 E930010000              	jmp .L_lambda_simple_end_0031
  3504                                  .L_lambda_simple_code_0031:	; lambda-simple body
  3505 00002358 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3506 0000235E 740B                    	je .L_lambda_simple_arity_check_ok_0031
  3507 00002360 FF742410                	push qword [rsp + 8 * 2]
  3508 00002364 6A01                    	push 1
  3509 00002366 E9093E0000              	jmp L_error_incorrect_arity_simple
  3510                                  .L_lambda_simple_arity_check_ok_0031:
  3511 0000236B C8000000                	enter 0, 0
  3512 0000236F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3513 00002374 E8423E0000              	call malloc
  3514 00002379 50                      	push rax
  3515 0000237A BF08000000              	mov rdi, 8 * 1	; new rib
  3516 0000237F E8373E0000              	call malloc
  3517 00002384 50                      	push rax
  3518 00002385 BF48000000              	mov rdi, 8 * 9	; extended env
  3519 0000238A E82C3E0000              	call malloc
  3520 0000238F 488B7D10                	mov rdi, ENV
  3521 00002393 BE00000000              	mov rsi, 0
  3522 00002398 BA01000000              	mov rdx, 1
  3523                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  3524 0000239D 4883FE08                	cmp rsi, 8
  3525 000023A1 7410                    	je .L_lambda_simple_env_end_0032
  3526 000023A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3527 000023A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3528 000023AB 48FFC6                  	inc rsi
  3529 000023AE 48FFC2                  	inc rdx
  3530 000023B1 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  3531                                  .L_lambda_simple_env_end_0032:
  3532 000023B3 5B                      	pop rbx
  3533 000023B4 BE00000000              	mov rsi, 0
  3534                                  .L_lambda_simple_params_loop_0032:	; copy params
  3535 000023B9 4883FE01                	cmp rsi, 1
  3536 000023BD 740E                    	je .L_lambda_simple_params_end_0032
  3537 000023BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3538 000023C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3539 000023C8 48FFC6                  	inc rsi
  3540 000023CB EBEC                    	jmp .L_lambda_simple_params_loop_0032
  3541                                  .L_lambda_simple_params_end_0032:
  3542 000023CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3543 000023D0 4889C3                  	mov rbx, rax
  3544 000023D3 58                      	pop rax
  3545 000023D4 C60004                  	mov byte [rax], T_closure
  3546 000023D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3547 000023DB 48C74009[E8230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  3548 000023E3 E99C000000              	jmp .L_lambda_simple_end_0032
  3549                                  .L_lambda_simple_code_0032:	; lambda-simple body
  3550 000023E8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3551 000023EE 740B                    	je .L_lambda_simple_arity_check_ok_0032
  3552 000023F0 FF742410                	push qword [rsp + 8 * 2]
  3553 000023F4 6A01                    	push 1
  3554 000023F6 E9793D0000              	jmp L_error_incorrect_arity_simple
  3555                                  .L_lambda_simple_arity_check_ok_0032:
  3556 000023FB C8000000                	enter 0, 0
  3557                                  	; preparing a tail-call
  3558                                  	; preparing a non-tail-call
  3559 000023FF 488B4520                	mov rax, PARAM(0)	; param z
  3560 00002403 50                      	push rax
  3561 00002404 6A01                    	push 1	; arg count
  3562                                  	; preparing a non-tail-call
  3563 00002406 488B4510                	mov rax, ENV
  3564 0000240A 488B00                  	mov rax, qword [rax + 8 * 0]
  3565 0000240D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  3566 00002410 50                      	push rax
  3567 00002411 6A01                    	push 1	; arg count
  3568 00002413 488B4510                	mov rax, ENV
  3569 00002417 488B4008                	mov rax, qword [rax + 8 * 1]
  3570 0000241B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  3571 0000241E 803804                  	cmp byte [rax], T_closure
  3572 00002421 0F85EB3C0000            	jne L_error_non_closure
  3573 00002427 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3574 0000242A FF5009                  	call SOB_CLOSURE_CODE(rax)
  3575 0000242D 803804                  	cmp byte [rax], T_closure
  3576 00002430 0F85DC3C0000            	jne L_error_non_closure
  3577 00002436 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3578 00002439 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3579 0000243C 50                      	push rax
  3580 0000243D 6A01                    	push 1	; arg count
  3581 0000243F 488B4510                	mov rax, ENV
  3582 00002443 488B00                  	mov rax, qword [rax + 8 * 0]
  3583 00002446 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  3584 00002449 803804                  	cmp byte [rax], T_closure
  3585 0000244C 0F85C03C0000            	jne L_error_non_closure
  3586 00002452 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3587 00002455 FF7508                  	push qword [rbp + 8 * 1]
  3588                                   ; old ret addr
  3589 00002458 5D                      	pop rbp
  3590                                  ; restore the old rbp
  3591 00002459 BB01000000              	mov rbx, 1
  3592 0000245E 4883C303                	add rbx, 3
  3593 00002462 488B7D10                	mov rdi, qword [rbp + 8*2]
  3594                                  .L_tc_recycle_frame_loop_0013:
  3595 00002466 4883FB00                	cmp rbx, 0
  3596 0000246A 7411                    je .L_tc_recycle_frame_done_0013
  3597 0000246C 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3598 00002470 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3599 00002475 48FFCF                  	dec rdi
  3600 00002478 48FFCB                  	dec rbx
  3601 0000247B EBE9                    jmp .L_tc_recycle_frame_loop_0013
  3602                                  .L_tc_recycle_frame_done_0013:
  3603 0000247D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3604 00002480 C9                      	leave
  3605 00002481 C21800                  	ret AND_KILL_FRAME(1)
  3606                                  .L_lambda_simple_end_0032:	; new closure is in rax
  3607 00002484 C9                      	leave
  3608 00002485 C21800                  	ret AND_KILL_FRAME(1)
  3609                                  .L_lambda_simple_end_0031:	; new closure is in rax
  3610 00002488 C9                      	leave
  3611 00002489 C21800                  	ret AND_KILL_FRAME(1)
  3612                                  .L_lambda_simple_end_0030:	; new closure is in rax
  3613 0000248C 50                      	push rax
  3614 0000248D 6A01                    	push 1	; arg count
  3615 0000248F 488B4510                	mov rax, ENV
  3616 00002493 488B00                  	mov rax, qword [rax + 8 * 0]
  3617 00002496 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3618 00002499 803804                  	cmp byte [rax], T_closure
  3619 0000249C 0F85703C0000            	jne L_error_non_closure
  3620 000024A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3621 000024A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3622 000024A8 803804                  	cmp byte [rax], T_closure
  3623 000024AB 0F85613C0000            	jne L_error_non_closure
  3624 000024B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3625 000024B4 FF7508                  	push qword [rbp + 8 * 1]
  3626                                   ; old ret addr
  3627 000024B7 5D                      	pop rbp
  3628                                  ; restore the old rbp
  3629 000024B8 BB01000000              	mov rbx, 1
  3630 000024BD 4883C303                	add rbx, 3
  3631 000024C1 488B7D10                	mov rdi, qword [rbp + 8*2]
  3632                                  .L_tc_recycle_frame_loop_0012:
  3633 000024C5 4883FB00                	cmp rbx, 0
  3634 000024C9 7411                    je .L_tc_recycle_frame_done_0012
  3635 000024CB 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3636 000024CF 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3637 000024D4 48FFCF                  	dec rdi
  3638 000024D7 48FFCB                  	dec rbx
  3639 000024DA EBE9                    jmp .L_tc_recycle_frame_loop_0012
  3640                                  .L_tc_recycle_frame_done_0012:
  3641 000024DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3642 000024DF C9                      	leave
  3643 000024E0 C21800                  	ret AND_KILL_FRAME(1)
  3644                                  .L_lambda_simple_end_002f:	; new closure is in rax
  3645 000024E3 C9                      	leave
  3646 000024E4 C21800                  	ret AND_KILL_FRAME(1)
  3647                                  .L_lambda_simple_end_002e:	; new closure is in rax
  3648 000024E7 50                      	push rax
  3649 000024E8 6A01                    	push 1	; arg count
  3650 000024EA 488B4510                	mov rax, ENV
  3651 000024EE 488B00                  	mov rax, qword [rax + 8 * 0]
  3652 000024F1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3653 000024F4 803804                  	cmp byte [rax], T_closure
  3654 000024F7 0F85153C0000            	jne L_error_non_closure
  3655 000024FD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3656 00002500 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3657 00002503 50                      	push rax
  3658 00002504 6A01                    	push 1	; arg count
  3659 00002506 488B4520                	mov rax, PARAM(0)	; param b
  3660 0000250A 803804                  	cmp byte [rax], T_closure
  3661 0000250D 0F85FF3B0000            	jne L_error_non_closure
  3662 00002513 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3663 00002516 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3664 00002519 803804                  	cmp byte [rax], T_closure
  3665 0000251C 0F85F03B0000            	jne L_error_non_closure
  3666 00002522 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3667 00002525 FF7508                  	push qword [rbp + 8 * 1]
  3668                                   ; old ret addr
  3669 00002528 5D                      	pop rbp
  3670                                  ; restore the old rbp
  3671 00002529 BB01000000              	mov rbx, 1
  3672 0000252E 4883C303                	add rbx, 3
  3673 00002532 488B7D10                	mov rdi, qword [rbp + 8*2]
  3674                                  .L_tc_recycle_frame_loop_0011:
  3675 00002536 4883FB00                	cmp rbx, 0
  3676 0000253A 7411                    je .L_tc_recycle_frame_done_0011
  3677 0000253C 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3678 00002540 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3679 00002545 48FFCF                  	dec rdi
  3680 00002548 48FFCB                  	dec rbx
  3681 0000254B EBE9                    jmp .L_tc_recycle_frame_loop_0011
  3682                                  .L_tc_recycle_frame_done_0011:
  3683 0000254D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3684 00002550 C9                      	leave
  3685 00002551 C21800                  	ret AND_KILL_FRAME(1)
  3686                                  .L_lambda_simple_end_002b:	; new closure is in rax
  3687 00002554 C9                      	leave
  3688 00002555 C21800                  	ret AND_KILL_FRAME(1)
  3689                                  .L_lambda_simple_end_002a:	; new closure is in rax
  3690 00002558 803804                  	cmp byte [rax], T_closure
  3691 0000255B 0F85B13B0000            	jne L_error_non_closure
  3692 00002561 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3693 00002564 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3694 00002567 803804                  	cmp byte [rax], T_closure
  3695 0000256A 0F85A23B0000            	jne L_error_non_closure
  3696 00002570 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3697 00002573 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3698 00002576 50                      	push rax
  3699 00002577 6A01                    	push 1	; arg count
  3700                                  	; preparing a non-tail-call
  3701                                  	; preparing a non-tail-call
  3702                                  	; preparing a non-tail-call
  3703 00002579 488B4520                	mov rax, PARAM(0)	; param p
  3704 0000257D 50                      	push rax
  3705 0000257E 6A01                    	push 1	; arg count
  3706 00002580 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3707 00002585 E8313C0000              	call malloc
  3708 0000258A 50                      	push rax
  3709 0000258B BF08000000              	mov rdi, 8 * 1	; new rib
  3710 00002590 E8263C0000              	call malloc
  3711 00002595 50                      	push rax
  3712 00002596 BF18000000              	mov rdi, 8 * 3	; extended env
  3713 0000259B E81B3C0000              	call malloc
  3714 000025A0 488B7D10                	mov rdi, ENV
  3715 000025A4 BE00000000              	mov rsi, 0
  3716 000025A9 BA01000000              	mov rdx, 1
  3717                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  3718 000025AE 4883FE02                	cmp rsi, 2
  3719 000025B2 7410                    	je .L_lambda_simple_env_end_0033
  3720 000025B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3721 000025B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3722 000025BC 48FFC6                  	inc rsi
  3723 000025BF 48FFC2                  	inc rdx
  3724 000025C2 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  3725                                  .L_lambda_simple_env_end_0033:
  3726 000025C4 5B                      	pop rbx
  3727 000025C5 BE00000000              	mov rsi, 0
  3728                                  .L_lambda_simple_params_loop_0033:	; copy params
  3729 000025CA 4883FE01                	cmp rsi, 1
  3730 000025CE 740E                    	je .L_lambda_simple_params_end_0033
  3731 000025D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3732 000025D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3733 000025D9 48FFC6                  	inc rsi
  3734 000025DC EBEC                    	jmp .L_lambda_simple_params_loop_0033
  3735                                  .L_lambda_simple_params_end_0033:
  3736 000025DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3737 000025E1 4889C3                  	mov rbx, rax
  3738 000025E4 58                      	pop rax
  3739 000025E5 C60004                  	mov byte [rax], T_closure
  3740 000025E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3741 000025EC 48C74009[F9250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  3742 000025F4 E988010000              	jmp .L_lambda_simple_end_0033
  3743                                  .L_lambda_simple_code_0033:	; lambda-simple body
  3744 000025F9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3745 000025FF 740B                    	je .L_lambda_simple_arity_check_ok_0033
  3746 00002601 FF742410                	push qword [rsp + 8 * 2]
  3747 00002605 6A01                    	push 1
  3748 00002607 E9683B0000              	jmp L_error_incorrect_arity_simple
  3749                                  .L_lambda_simple_arity_check_ok_0033:
  3750 0000260C C8000000                	enter 0, 0
  3751                                  	; preparing a tail-call
  3752 00002610 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3753 00002615 E8A13B0000              	call malloc
  3754 0000261A 50                      	push rax
  3755 0000261B BF08000000              	mov rdi, 8 * 1	; new rib
  3756 00002620 E8963B0000              	call malloc
  3757 00002625 50                      	push rax
  3758 00002626 BF20000000              	mov rdi, 8 * 4	; extended env
  3759 0000262B E88B3B0000              	call malloc
  3760 00002630 488B7D10                	mov rdi, ENV
  3761 00002634 BE00000000              	mov rsi, 0
  3762 00002639 BA01000000              	mov rdx, 1
  3763                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  3764 0000263E 4883FE03                	cmp rsi, 3
  3765 00002642 7410                    	je .L_lambda_simple_env_end_0034
  3766 00002644 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3767 00002648 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3768 0000264C 48FFC6                  	inc rsi
  3769 0000264F 48FFC2                  	inc rdx
  3770 00002652 EBEA                    	jmp .L_lambda_simple_env_loop_0034
  3771                                  .L_lambda_simple_env_end_0034:
  3772 00002654 5B                      	pop rbx
  3773 00002655 BE00000000              	mov rsi, 0
  3774                                  .L_lambda_simple_params_loop_0034:	; copy params
  3775 0000265A 4883FE01                	cmp rsi, 1
  3776 0000265E 740E                    	je .L_lambda_simple_params_end_0034
  3777 00002660 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3778 00002665 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3779 00002669 48FFC6                  	inc rsi
  3780 0000266C EBEC                    	jmp .L_lambda_simple_params_loop_0034
  3781                                  .L_lambda_simple_params_end_0034:
  3782 0000266E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3783 00002671 4889C3                  	mov rbx, rax
  3784 00002674 58                      	pop rax
  3785 00002675 C60004                  	mov byte [rax], T_closure
  3786 00002678 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3787 0000267C 48C74009[89260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  3788 00002684 E9B6000000              	jmp .L_lambda_simple_end_0034
  3789                                  .L_lambda_simple_code_0034:	; lambda-simple body
  3790 00002689 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3791 0000268F 740B                    	je .L_lambda_simple_arity_check_ok_0034
  3792 00002691 FF742410                	push qword [rsp + 8 * 2]
  3793 00002695 6A01                    	push 1
  3794 00002697 E9D83A0000              	jmp L_error_incorrect_arity_simple
  3795                                  .L_lambda_simple_arity_check_ok_0034:
  3796 0000269C C8000000                	enter 0, 0
  3797 000026A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3798 000026A5 E8113B0000              	call malloc
  3799 000026AA 50                      	push rax
  3800 000026AB BF08000000              	mov rdi, 8 * 1	; new rib
  3801 000026B0 E8063B0000              	call malloc
  3802 000026B5 50                      	push rax
  3803 000026B6 BF28000000              	mov rdi, 8 * 5	; extended env
  3804 000026BB E8FB3A0000              	call malloc
  3805 000026C0 488B7D10                	mov rdi, ENV
  3806 000026C4 BE00000000              	mov rsi, 0
  3807 000026C9 BA01000000              	mov rdx, 1
  3808                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  3809 000026CE 4883FE04                	cmp rsi, 4
  3810 000026D2 7410                    	je .L_lambda_simple_env_end_0035
  3811 000026D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3812 000026D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3813 000026DC 48FFC6                  	inc rsi
  3814 000026DF 48FFC2                  	inc rdx
  3815 000026E2 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  3816                                  .L_lambda_simple_env_end_0035:
  3817 000026E4 5B                      	pop rbx
  3818 000026E5 BE00000000              	mov rsi, 0
  3819                                  .L_lambda_simple_params_loop_0035:	; copy params
  3820 000026EA 4883FE01                	cmp rsi, 1
  3821 000026EE 740E                    	je .L_lambda_simple_params_end_0035
  3822 000026F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3823 000026F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3824 000026F9 48FFC6                  	inc rsi
  3825 000026FC EBEC                    	jmp .L_lambda_simple_params_loop_0035
  3826                                  .L_lambda_simple_params_end_0035:
  3827 000026FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3828 00002701 4889C3                  	mov rbx, rax
  3829 00002704 58                      	pop rax
  3830 00002705 C60004                  	mov byte [rax], T_closure
  3831 00002708 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3832 0000270C 48C74009[16270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  3833 00002714 EB25                    	jmp .L_lambda_simple_end_0035
  3834                                  .L_lambda_simple_code_0035:	; lambda-simple body
  3835 00002716 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3836 0000271C 740B                    	je .L_lambda_simple_arity_check_ok_0035
  3837 0000271E FF742410                	push qword [rsp + 8 * 2]
  3838 00002722 6A01                    	push 1
  3839 00002724 E94B3A0000              	jmp L_error_incorrect_arity_simple
  3840                                  .L_lambda_simple_arity_check_ok_0035:
  3841 00002729 C8000000                	enter 0, 0
  3842 0000272D 488B4510                	mov rax, ENV
  3843 00002731 488B00                  	mov rax, qword [rax + 8 * 0]
  3844 00002734 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  3845 00002737 C9                      	leave
  3846 00002738 C21800                  	ret AND_KILL_FRAME(1)
  3847                                  .L_lambda_simple_end_0035:	; new closure is in rax
  3848 0000273B C9                      	leave
  3849 0000273C C21800                  	ret AND_KILL_FRAME(1)
  3850                                  .L_lambda_simple_end_0034:	; new closure is in rax
  3851 0000273F 50                      	push rax
  3852 00002740 6A01                    	push 1	; arg count
  3853 00002742 488B4520                	mov rax, PARAM(0)	; param p
  3854 00002746 803804                  	cmp byte [rax], T_closure
  3855 00002749 0F85C3390000            	jne L_error_non_closure
  3856 0000274F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3857 00002752 FF7508                  	push qword [rbp + 8 * 1]
  3858                                   ; old ret addr
  3859 00002755 5D                      	pop rbp
  3860                                  ; restore the old rbp
  3861 00002756 BB01000000              	mov rbx, 1
  3862 0000275B 4883C303                	add rbx, 3
  3863 0000275F 488B7D10                	mov rdi, qword [rbp + 8*2]
  3864                                  .L_tc_recycle_frame_loop_0014:
  3865 00002763 4883FB00                	cmp rbx, 0
  3866 00002767 7411                    je .L_tc_recycle_frame_done_0014
  3867 00002769 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  3868 0000276D 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  3869 00002772 48FFCF                  	dec rdi
  3870 00002775 48FFCB                  	dec rbx
  3871 00002778 EBE9                    jmp .L_tc_recycle_frame_loop_0014
  3872                                  .L_tc_recycle_frame_done_0014:
  3873 0000277A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3874 0000277D C9                      	leave
  3875 0000277E C21800                  	ret AND_KILL_FRAME(1)
  3876                                  .L_lambda_simple_end_0033:	; new closure is in rax
  3877 00002781 803804                  	cmp byte [rax], T_closure
  3878 00002784 0F8588390000            	jne L_error_non_closure
  3879 0000278A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3880 0000278D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3881 00002790 50                      	push rax
  3882 00002791 6A01                    	push 1	; arg count
  3883 00002793 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3884 00002798 E81E3A0000              	call malloc
  3885 0000279D 50                      	push rax
  3886 0000279E BF08000000              	mov rdi, 8 * 1	; new rib
  3887 000027A3 E8133A0000              	call malloc
  3888 000027A8 50                      	push rax
  3889 000027A9 BF18000000              	mov rdi, 8 * 3	; extended env
  3890 000027AE E8083A0000              	call malloc
  3891 000027B3 488B7D10                	mov rdi, ENV
  3892 000027B7 BE00000000              	mov rsi, 0
  3893 000027BC BA01000000              	mov rdx, 1
  3894                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  3895 000027C1 4883FE02                	cmp rsi, 2
  3896 000027C5 7410                    	je .L_lambda_simple_env_end_0036
  3897 000027C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3898 000027CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3899 000027CF 48FFC6                  	inc rsi
  3900 000027D2 48FFC2                  	inc rdx
  3901 000027D5 EBEA                    	jmp .L_lambda_simple_env_loop_0036
  3902                                  .L_lambda_simple_env_end_0036:
  3903 000027D7 5B                      	pop rbx
  3904 000027D8 BE00000000              	mov rsi, 0
  3905                                  .L_lambda_simple_params_loop_0036:	; copy params
  3906 000027DD 4883FE01                	cmp rsi, 1
  3907 000027E1 740E                    	je .L_lambda_simple_params_end_0036
  3908 000027E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3909 000027E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3910 000027EC 48FFC6                  	inc rsi
  3911 000027EF EBEC                    	jmp .L_lambda_simple_params_loop_0036
  3912                                  .L_lambda_simple_params_end_0036:
  3913 000027F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3914 000027F4 4889C3                  	mov rbx, rax
  3915 000027F7 58                      	pop rax
  3916 000027F8 C60004                  	mov byte [rax], T_closure
  3917 000027FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3918 000027FF 48C74009[0C280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  3919 00002807 E9C4010000              	jmp .L_lambda_simple_end_0036
  3920                                  .L_lambda_simple_code_0036:	; lambda-simple body
  3921 0000280C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3922 00002812 740B                    	je .L_lambda_simple_arity_check_ok_0036
  3923 00002814 FF742410                	push qword [rsp + 8 * 2]
  3924 00002818 6A01                    	push 1
  3925 0000281A E955390000              	jmp L_error_incorrect_arity_simple
  3926                                  .L_lambda_simple_arity_check_ok_0036:
  3927 0000281F C8000000                	enter 0, 0
  3928 00002823 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3929 00002828 E88E390000              	call malloc
  3930 0000282D 50                      	push rax
  3931 0000282E BF08000000              	mov rdi, 8 * 1	; new rib
  3932 00002833 E883390000              	call malloc
  3933 00002838 50                      	push rax
  3934 00002839 BF20000000              	mov rdi, 8 * 4	; extended env
  3935 0000283E E878390000              	call malloc
  3936 00002843 488B7D10                	mov rdi, ENV
  3937 00002847 BE00000000              	mov rsi, 0
  3938 0000284C BA01000000              	mov rdx, 1
  3939                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  3940 00002851 4883FE03                	cmp rsi, 3
  3941 00002855 7410                    	je .L_lambda_simple_env_end_0037
  3942 00002857 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3943 0000285B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3944 0000285F 48FFC6                  	inc rsi
  3945 00002862 48FFC2                  	inc rdx
  3946 00002865 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  3947                                  .L_lambda_simple_env_end_0037:
  3948 00002867 5B                      	pop rbx
  3949 00002868 BE00000000              	mov rsi, 0
  3950                                  .L_lambda_simple_params_loop_0037:	; copy params
  3951 0000286D 4883FE01                	cmp rsi, 1
  3952 00002871 740E                    	je .L_lambda_simple_params_end_0037
  3953 00002873 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3954 00002878 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3955 0000287C 48FFC6                  	inc rsi
  3956 0000287F EBEC                    	jmp .L_lambda_simple_params_loop_0037
  3957                                  .L_lambda_simple_params_end_0037:
  3958 00002881 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3959 00002884 4889C3                  	mov rbx, rax
  3960 00002887 58                      	pop rax
  3961 00002888 C60004                  	mov byte [rax], T_closure
  3962 0000288B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3963 0000288F 48C74009[9C280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  3964 00002897 E930010000              	jmp .L_lambda_simple_end_0037
  3965                                  .L_lambda_simple_code_0037:	; lambda-simple body
  3966 0000289C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3967 000028A2 740B                    	je .L_lambda_simple_arity_check_ok_0037
  3968 000028A4 FF742410                	push qword [rsp + 8 * 2]
  3969 000028A8 6A01                    	push 1
  3970 000028AA E9C5380000              	jmp L_error_incorrect_arity_simple
  3971                                  .L_lambda_simple_arity_check_ok_0037:
  3972 000028AF C8000000                	enter 0, 0
  3973 000028B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3974 000028B8 E8FE380000              	call malloc
  3975 000028BD 50                      	push rax
  3976 000028BE BF08000000              	mov rdi, 8 * 1	; new rib
  3977 000028C3 E8F3380000              	call malloc
  3978 000028C8 50                      	push rax
  3979 000028C9 BF28000000              	mov rdi, 8 * 5	; extended env
  3980 000028CE E8E8380000              	call malloc
  3981 000028D3 488B7D10                	mov rdi, ENV
  3982 000028D7 BE00000000              	mov rsi, 0
  3983 000028DC BA01000000              	mov rdx, 1
  3984                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  3985 000028E1 4883FE04                	cmp rsi, 4
  3986 000028E5 7410                    	je .L_lambda_simple_env_end_0038
  3987 000028E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3988 000028EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3989 000028EF 48FFC6                  	inc rsi
  3990 000028F2 48FFC2                  	inc rdx
  3991 000028F5 EBEA                    	jmp .L_lambda_simple_env_loop_0038
  3992                                  .L_lambda_simple_env_end_0038:
  3993 000028F7 5B                      	pop rbx
  3994 000028F8 BE00000000              	mov rsi, 0
  3995                                  .L_lambda_simple_params_loop_0038:	; copy params
  3996 000028FD 4883FE01                	cmp rsi, 1
  3997 00002901 740E                    	je .L_lambda_simple_params_end_0038
  3998 00002903 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3999 00002908 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4000 0000290C 48FFC6                  	inc rsi
  4001 0000290F EBEC                    	jmp .L_lambda_simple_params_loop_0038
  4002                                  .L_lambda_simple_params_end_0038:
  4003 00002911 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4004 00002914 4889C3                  	mov rbx, rax
  4005 00002917 58                      	pop rax
  4006 00002918 C60004                  	mov byte [rax], T_closure
  4007 0000291B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4008 0000291F 48C74009[2C290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  4009 00002927 E99C000000              	jmp .L_lambda_simple_end_0038
  4010                                  .L_lambda_simple_code_0038:	; lambda-simple body
  4011 0000292C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4012 00002932 740B                    	je .L_lambda_simple_arity_check_ok_0038
  4013 00002934 FF742410                	push qword [rsp + 8 * 2]
  4014 00002938 6A01                    	push 1
  4015 0000293A E935380000              	jmp L_error_incorrect_arity_simple
  4016                                  .L_lambda_simple_arity_check_ok_0038:
  4017 0000293F C8000000                	enter 0, 0
  4018                                  	; preparing a tail-call
  4019                                  	; preparing a non-tail-call
  4020 00002943 488B4520                	mov rax, PARAM(0)	; param z
  4021 00002947 50                      	push rax
  4022 00002948 6A01                    	push 1	; arg count
  4023                                  	; preparing a non-tail-call
  4024 0000294A 488B4510                	mov rax, ENV
  4025 0000294E 488B00                  	mov rax, qword [rax + 8 * 0]
  4026 00002951 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  4027 00002954 50                      	push rax
  4028 00002955 6A01                    	push 1	; arg count
  4029 00002957 488B4510                	mov rax, ENV
  4030 0000295B 488B4008                	mov rax, qword [rax + 8 * 1]
  4031 0000295F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  4032 00002962 803804                  	cmp byte [rax], T_closure
  4033 00002965 0F85A7370000            	jne L_error_non_closure
  4034 0000296B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4035 0000296E FF5009                  	call SOB_CLOSURE_CODE(rax)
  4036 00002971 803804                  	cmp byte [rax], T_closure
  4037 00002974 0F8598370000            	jne L_error_non_closure
  4038 0000297A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4039 0000297D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4040 00002980 50                      	push rax
  4041 00002981 6A01                    	push 1	; arg count
  4042 00002983 488B4510                	mov rax, ENV
  4043 00002987 488B00                  	mov rax, qword [rax + 8 * 0]
  4044 0000298A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  4045 0000298D 803804                  	cmp byte [rax], T_closure
  4046 00002990 0F857C370000            	jne L_error_non_closure
  4047 00002996 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4048 00002999 FF7508                  	push qword [rbp + 8 * 1]
  4049                                   ; old ret addr
  4050 0000299C 5D                      	pop rbp
  4051                                  ; restore the old rbp
  4052 0000299D BB01000000              	mov rbx, 1
  4053 000029A2 4883C303                	add rbx, 3
  4054 000029A6 488B7D10                	mov rdi, qword [rbp + 8*2]
  4055                                  .L_tc_recycle_frame_loop_0015:
  4056 000029AA 4883FB00                	cmp rbx, 0
  4057 000029AE 7411                    je .L_tc_recycle_frame_done_0015
  4058 000029B0 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4059 000029B4 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4060 000029B9 48FFCF                  	dec rdi
  4061 000029BC 48FFCB                  	dec rbx
  4062 000029BF EBE9                    jmp .L_tc_recycle_frame_loop_0015
  4063                                  .L_tc_recycle_frame_done_0015:
  4064 000029C1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4065 000029C4 C9                      	leave
  4066 000029C5 C21800                  	ret AND_KILL_FRAME(1)
  4067                                  .L_lambda_simple_end_0038:	; new closure is in rax
  4068 000029C8 C9                      	leave
  4069 000029C9 C21800                  	ret AND_KILL_FRAME(1)
  4070                                  .L_lambda_simple_end_0037:	; new closure is in rax
  4071 000029CC C9                      	leave
  4072 000029CD C21800                  	ret AND_KILL_FRAME(1)
  4073                                  .L_lambda_simple_end_0036:	; new closure is in rax
  4074 000029D0 803804                  	cmp byte [rax], T_closure
  4075 000029D3 0F8539370000            	jne L_error_non_closure
  4076 000029D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4077 000029DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  4078 000029DF 50                      	push rax
  4079 000029E0 6A01                    	push 1	; arg count
  4080 000029E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4081 000029E7 E8CF370000              	call malloc
  4082 000029EC 50                      	push rax
  4083 000029ED BF08000000              	mov rdi, 8 * 1	; new rib
  4084 000029F2 E8C4370000              	call malloc
  4085 000029F7 50                      	push rax
  4086 000029F8 BF18000000              	mov rdi, 8 * 3	; extended env
  4087 000029FD E8B9370000              	call malloc
  4088 00002A02 488B7D10                	mov rdi, ENV
  4089 00002A06 BE00000000              	mov rsi, 0
  4090 00002A0B BA01000000              	mov rdx, 1
  4091                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  4092 00002A10 4883FE02                	cmp rsi, 2
  4093 00002A14 7410                    	je .L_lambda_simple_env_end_0039
  4094 00002A16 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4095 00002A1A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4096 00002A1E 48FFC6                  	inc rsi
  4097 00002A21 48FFC2                  	inc rdx
  4098 00002A24 EBEA                    	jmp .L_lambda_simple_env_loop_0039
  4099                                  .L_lambda_simple_env_end_0039:
  4100 00002A26 5B                      	pop rbx
  4101 00002A27 BE00000000              	mov rsi, 0
  4102                                  .L_lambda_simple_params_loop_0039:	; copy params
  4103 00002A2C 4883FE01                	cmp rsi, 1
  4104 00002A30 740E                    	je .L_lambda_simple_params_end_0039
  4105 00002A32 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4106 00002A37 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4107 00002A3B 48FFC6                  	inc rsi
  4108 00002A3E EBEC                    	jmp .L_lambda_simple_params_loop_0039
  4109                                  .L_lambda_simple_params_end_0039:
  4110 00002A40 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4111 00002A43 4889C3                  	mov rbx, rax
  4112 00002A46 58                      	pop rax
  4113 00002A47 C60004                  	mov byte [rax], T_closure
  4114 00002A4A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4115 00002A4E 48C74009[5B2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
  4116 00002A56 E9A8010000              	jmp .L_lambda_simple_end_0039
  4117                                  .L_lambda_simple_code_0039:	; lambda-simple body
  4118 00002A5B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4119 00002A61 740B                    	je .L_lambda_simple_arity_check_ok_0039
  4120 00002A63 FF742410                	push qword [rsp + 8 * 2]
  4121 00002A67 6A01                    	push 1
  4122 00002A69 E906370000              	jmp L_error_incorrect_arity_simple
  4123                                  .L_lambda_simple_arity_check_ok_0039:
  4124 00002A6E C8000000                	enter 0, 0
  4125 00002A72 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4126 00002A77 E83F370000              	call malloc
  4127 00002A7C 50                      	push rax
  4128 00002A7D BF08000000              	mov rdi, 8 * 1	; new rib
  4129 00002A82 E834370000              	call malloc
  4130 00002A87 50                      	push rax
  4131 00002A88 BF20000000              	mov rdi, 8 * 4	; extended env
  4132 00002A8D E829370000              	call malloc
  4133 00002A92 488B7D10                	mov rdi, ENV
  4134 00002A96 BE00000000              	mov rsi, 0
  4135 00002A9B BA01000000              	mov rdx, 1
  4136                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
  4137 00002AA0 4883FE03                	cmp rsi, 3
  4138 00002AA4 7410                    	je .L_lambda_simple_env_end_003a
  4139 00002AA6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4140 00002AAA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4141 00002AAE 48FFC6                  	inc rsi
  4142 00002AB1 48FFC2                  	inc rdx
  4143 00002AB4 EBEA                    	jmp .L_lambda_simple_env_loop_003a
  4144                                  .L_lambda_simple_env_end_003a:
  4145 00002AB6 5B                      	pop rbx
  4146 00002AB7 BE00000000              	mov rsi, 0
  4147                                  .L_lambda_simple_params_loop_003a:	; copy params
  4148 00002ABC 4883FE01                	cmp rsi, 1
  4149 00002AC0 740E                    	je .L_lambda_simple_params_end_003a
  4150 00002AC2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4151 00002AC7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4152 00002ACB 48FFC6                  	inc rsi
  4153 00002ACE EBEC                    	jmp .L_lambda_simple_params_loop_003a
  4154                                  .L_lambda_simple_params_end_003a:
  4155 00002AD0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4156 00002AD3 4889C3                  	mov rbx, rax
  4157 00002AD6 58                      	pop rax
  4158 00002AD7 C60004                  	mov byte [rax], T_closure
  4159 00002ADA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4160 00002ADE 48C74009[EB2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
  4161 00002AE6 E914010000              	jmp .L_lambda_simple_end_003a
  4162                                  .L_lambda_simple_code_003a:	; lambda-simple body
  4163 00002AEB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4164 00002AF1 740B                    	je .L_lambda_simple_arity_check_ok_003a
  4165 00002AF3 FF742410                	push qword [rsp + 8 * 2]
  4166 00002AF7 6A01                    	push 1
  4167 00002AF9 E976360000              	jmp L_error_incorrect_arity_simple
  4168                                  .L_lambda_simple_arity_check_ok_003a:
  4169 00002AFE C8000000                	enter 0, 0
  4170 00002B02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4171 00002B07 E8AF360000              	call malloc
  4172 00002B0C 50                      	push rax
  4173 00002B0D BF08000000              	mov rdi, 8 * 1	; new rib
  4174 00002B12 E8A4360000              	call malloc
  4175 00002B17 50                      	push rax
  4176 00002B18 BF28000000              	mov rdi, 8 * 5	; extended env
  4177 00002B1D E899360000              	call malloc
  4178 00002B22 488B7D10                	mov rdi, ENV
  4179 00002B26 BE00000000              	mov rsi, 0
  4180 00002B2B BA01000000              	mov rdx, 1
  4181                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
  4182 00002B30 4883FE04                	cmp rsi, 4
  4183 00002B34 7410                    	je .L_lambda_simple_env_end_003b
  4184 00002B36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4185 00002B3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4186 00002B3E 48FFC6                  	inc rsi
  4187 00002B41 48FFC2                  	inc rdx
  4188 00002B44 EBEA                    	jmp .L_lambda_simple_env_loop_003b
  4189                                  .L_lambda_simple_env_end_003b:
  4190 00002B46 5B                      	pop rbx
  4191 00002B47 BE00000000              	mov rsi, 0
  4192                                  .L_lambda_simple_params_loop_003b:	; copy params
  4193 00002B4C 4883FE01                	cmp rsi, 1
  4194 00002B50 740E                    	je .L_lambda_simple_params_end_003b
  4195 00002B52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4196 00002B57 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4197 00002B5B 48FFC6                  	inc rsi
  4198 00002B5E EBEC                    	jmp .L_lambda_simple_params_loop_003b
  4199                                  .L_lambda_simple_params_end_003b:
  4200 00002B60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4201 00002B63 4889C3                  	mov rbx, rax
  4202 00002B66 58                      	pop rax
  4203 00002B67 C60004                  	mov byte [rax], T_closure
  4204 00002B6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4205 00002B6E 48C74009[7B2B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
  4206 00002B76 E980000000              	jmp .L_lambda_simple_end_003b
  4207                                  .L_lambda_simple_code_003b:	; lambda-simple body
  4208 00002B7B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4209 00002B81 740B                    	je .L_lambda_simple_arity_check_ok_003b
  4210 00002B83 FF742410                	push qword [rsp + 8 * 2]
  4211 00002B87 6A01                    	push 1
  4212 00002B89 E9E6350000              	jmp L_error_incorrect_arity_simple
  4213                                  .L_lambda_simple_arity_check_ok_003b:
  4214 00002B8E C8000000                	enter 0, 0
  4215                                  	; preparing a tail-call
  4216 00002B92 488B4510                	mov rax, ENV
  4217 00002B96 488B00                  	mov rax, qword [rax + 8 * 0]
  4218 00002B99 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  4219 00002B9C 50                      	push rax
  4220 00002B9D 6A01                    	push 1	; arg count
  4221                                  	; preparing a non-tail-call
  4222 00002B9F 488B4510                	mov rax, ENV
  4223 00002BA3 488B4008                	mov rax, qword [rax + 8 * 1]
  4224 00002BA7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  4225 00002BAA 50                      	push rax
  4226 00002BAB 6A01                    	push 1	; arg count
  4227 00002BAD 488B4520                	mov rax, PARAM(0)	; param c
  4228 00002BB1 803804                  	cmp byte [rax], T_closure
  4229 00002BB4 0F8558350000            	jne L_error_non_closure
  4230 00002BBA FF7001                  	push SOB_CLOSURE_ENV(rax)
  4231 00002BBD FF5009                  	call SOB_CLOSURE_CODE(rax)
  4232 00002BC0 803804                  	cmp byte [rax], T_closure
  4233 00002BC3 0F8549350000            	jne L_error_non_closure
  4234 00002BC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4235 00002BCC FF7508                  	push qword [rbp + 8 * 1]
  4236                                   ; old ret addr
  4237 00002BCF 5D                      	pop rbp
  4238                                  ; restore the old rbp
  4239 00002BD0 BB01000000              	mov rbx, 1
  4240 00002BD5 4883C303                	add rbx, 3
  4241 00002BD9 488B7D10                	mov rdi, qword [rbp + 8*2]
  4242                                  .L_tc_recycle_frame_loop_0016:
  4243 00002BDD 4883FB00                	cmp rbx, 0
  4244 00002BE1 7411                    je .L_tc_recycle_frame_done_0016
  4245 00002BE3 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4246 00002BE7 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4247 00002BEC 48FFCF                  	dec rdi
  4248 00002BEF 48FFCB                  	dec rbx
  4249 00002BF2 EBE9                    jmp .L_tc_recycle_frame_loop_0016
  4250                                  .L_tc_recycle_frame_done_0016:
  4251 00002BF4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4252 00002BF7 C9                      	leave
  4253 00002BF8 C21800                  	ret AND_KILL_FRAME(1)
  4254                                  .L_lambda_simple_end_003b:	; new closure is in rax
  4255 00002BFB C9                      	leave
  4256 00002BFC C21800                  	ret AND_KILL_FRAME(1)
  4257                                  .L_lambda_simple_end_003a:	; new closure is in rax
  4258 00002BFF C9                      	leave
  4259 00002C00 C21800                  	ret AND_KILL_FRAME(1)
  4260                                  .L_lambda_simple_end_0039:	; new closure is in rax
  4261 00002C03 803804                  	cmp byte [rax], T_closure
  4262 00002C06 0F8506350000            	jne L_error_non_closure
  4263 00002C0C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4264 00002C0F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4265 00002C12 803804                  	cmp byte [rax], T_closure
  4266 00002C15 0F85F7340000            	jne L_error_non_closure
  4267 00002C1B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4268 00002C1E FF7508                  	push qword [rbp + 8 * 1]
  4269                                   ; old ret addr
  4270 00002C21 5D                      	pop rbp
  4271                                  ; restore the old rbp
  4272 00002C22 BB01000000              	mov rbx, 1
  4273 00002C27 4883C303                	add rbx, 3
  4274 00002C2B 488B7D10                	mov rdi, qword [rbp + 8*2]
  4275                                  .L_tc_recycle_frame_loop_000e:
  4276 00002C2F 4883FB00                	cmp rbx, 0
  4277 00002C33 7411                    je .L_tc_recycle_frame_done_000e
  4278 00002C35 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4279 00002C39 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4280 00002C3E 48FFCF                  	dec rdi
  4281 00002C41 48FFCB                  	dec rbx
  4282 00002C44 EBE9                    jmp .L_tc_recycle_frame_loop_000e
  4283                                  .L_tc_recycle_frame_done_000e:
  4284 00002C46 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4285 00002C49 C9                      	leave
  4286 00002C4A C21800                  	ret AND_KILL_FRAME(1)
  4287                                  .L_lambda_simple_end_0023:	; new closure is in rax
  4288 00002C4D 50                      	push rax
  4289 00002C4E 6A01                    	push 1	; arg count
  4290 00002C50 488B4520                	mov rax, PARAM(0)	; param n
  4291 00002C54 803804                  	cmp byte [rax], T_closure
  4292 00002C57 0F85B5340000            	jne L_error_non_closure
  4293 00002C5D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4294 00002C60 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4295 00002C63 803804                  	cmp byte [rax], T_closure
  4296 00002C66 0F85A6340000            	jne L_error_non_closure
  4297 00002C6C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4298 00002C6F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4299 00002C72 50                      	push rax
  4300 00002C73 6A01                    	push 1	; arg count
  4301 00002C75 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4302 00002C7A E83C350000              	call malloc
  4303 00002C7F 50                      	push rax
  4304 00002C80 BF08000000              	mov rdi, 8 * 1	; new rib
  4305 00002C85 E831350000              	call malloc
  4306 00002C8A 50                      	push rax
  4307 00002C8B BF10000000              	mov rdi, 8 * 2	; extended env
  4308 00002C90 E826350000              	call malloc
  4309 00002C95 488B7D10                	mov rdi, ENV
  4310 00002C99 BE00000000              	mov rsi, 0
  4311 00002C9E BA01000000              	mov rdx, 1
  4312                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
  4313 00002CA3 4883FE01                	cmp rsi, 1
  4314 00002CA7 7410                    	je .L_lambda_simple_env_end_003c
  4315 00002CA9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4316 00002CAD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4317 00002CB1 48FFC6                  	inc rsi
  4318 00002CB4 48FFC2                  	inc rdx
  4319 00002CB7 EBEA                    	jmp .L_lambda_simple_env_loop_003c
  4320                                  .L_lambda_simple_env_end_003c:
  4321 00002CB9 5B                      	pop rbx
  4322 00002CBA BE00000000              	mov rsi, 0
  4323                                  .L_lambda_simple_params_loop_003c:	; copy params
  4324 00002CBF 4883FE01                	cmp rsi, 1
  4325 00002CC3 740E                    	je .L_lambda_simple_params_end_003c
  4326 00002CC5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4327 00002CCA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4328 00002CCE 48FFC6                  	inc rsi
  4329 00002CD1 EBEC                    	jmp .L_lambda_simple_params_loop_003c
  4330                                  .L_lambda_simple_params_end_003c:
  4331 00002CD3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4332 00002CD6 4889C3                  	mov rbx, rax
  4333 00002CD9 58                      	pop rax
  4334 00002CDA C60004                  	mov byte [rax], T_closure
  4335 00002CDD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4336 00002CE1 48C74009[EE2C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
  4337 00002CE9 E982010000              	jmp .L_lambda_simple_end_003c
  4338                                  .L_lambda_simple_code_003c:	; lambda-simple body
  4339 00002CEE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4340 00002CF4 740B                    	je .L_lambda_simple_arity_check_ok_003c
  4341 00002CF6 FF742410                	push qword [rsp + 8 * 2]
  4342 00002CFA 6A01                    	push 1
  4343 00002CFC E973340000              	jmp L_error_incorrect_arity_simple
  4344                                  .L_lambda_simple_arity_check_ok_003c:
  4345 00002D01 C8000000                	enter 0, 0
  4346                                  	; preparing a tail-call
  4347 00002D05 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4348 00002D0A E8AC340000              	call malloc
  4349 00002D0F 50                      	push rax
  4350 00002D10 BF08000000              	mov rdi, 8 * 1	; new rib
  4351 00002D15 E8A1340000              	call malloc
  4352 00002D1A 50                      	push rax
  4353 00002D1B BF18000000              	mov rdi, 8 * 3	; extended env
  4354 00002D20 E896340000              	call malloc
  4355 00002D25 488B7D10                	mov rdi, ENV
  4356 00002D29 BE00000000              	mov rsi, 0
  4357 00002D2E BA01000000              	mov rdx, 1
  4358                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
  4359 00002D33 4883FE02                	cmp rsi, 2
  4360 00002D37 7410                    	je .L_lambda_simple_env_end_003d
  4361 00002D39 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4362 00002D3D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4363 00002D41 48FFC6                  	inc rsi
  4364 00002D44 48FFC2                  	inc rdx
  4365 00002D47 EBEA                    	jmp .L_lambda_simple_env_loop_003d
  4366                                  .L_lambda_simple_env_end_003d:
  4367 00002D49 5B                      	pop rbx
  4368 00002D4A BE00000000              	mov rsi, 0
  4369                                  .L_lambda_simple_params_loop_003d:	; copy params
  4370 00002D4F 4883FE01                	cmp rsi, 1
  4371 00002D53 740E                    	je .L_lambda_simple_params_end_003d
  4372 00002D55 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4373 00002D5A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4374 00002D5E 48FFC6                  	inc rsi
  4375 00002D61 EBEC                    	jmp .L_lambda_simple_params_loop_003d
  4376                                  .L_lambda_simple_params_end_003d:
  4377 00002D63 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4378 00002D66 4889C3                  	mov rbx, rax
  4379 00002D69 58                      	pop rax
  4380 00002D6A C60004                  	mov byte [rax], T_closure
  4381 00002D6D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4382 00002D71 48C74009[7E2D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
  4383 00002D79 E9B0000000              	jmp .L_lambda_simple_end_003d
  4384                                  .L_lambda_simple_code_003d:	; lambda-simple body
  4385 00002D7E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4386 00002D84 740B                    	je .L_lambda_simple_arity_check_ok_003d
  4387 00002D86 FF742410                	push qword [rsp + 8 * 2]
  4388 00002D8A 6A01                    	push 1
  4389 00002D8C E9E3330000              	jmp L_error_incorrect_arity_simple
  4390                                  .L_lambda_simple_arity_check_ok_003d:
  4391 00002D91 C8000000                	enter 0, 0
  4392 00002D95 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4393 00002D9A E81C340000              	call malloc
  4394 00002D9F 50                      	push rax
  4395 00002DA0 BF08000000              	mov rdi, 8 * 1	; new rib
  4396 00002DA5 E811340000              	call malloc
  4397 00002DAA 50                      	push rax
  4398 00002DAB BF20000000              	mov rdi, 8 * 4	; extended env
  4399 00002DB0 E806340000              	call malloc
  4400 00002DB5 488B7D10                	mov rdi, ENV
  4401 00002DB9 BE00000000              	mov rsi, 0
  4402 00002DBE BA01000000              	mov rdx, 1
  4403                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
  4404 00002DC3 4883FE03                	cmp rsi, 3
  4405 00002DC7 7410                    	je .L_lambda_simple_env_end_003e
  4406 00002DC9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4407 00002DCD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4408 00002DD1 48FFC6                  	inc rsi
  4409 00002DD4 48FFC2                  	inc rdx
  4410 00002DD7 EBEA                    	jmp .L_lambda_simple_env_loop_003e
  4411                                  .L_lambda_simple_env_end_003e:
  4412 00002DD9 5B                      	pop rbx
  4413 00002DDA BE00000000              	mov rsi, 0
  4414                                  .L_lambda_simple_params_loop_003e:	; copy params
  4415 00002DDF 4883FE01                	cmp rsi, 1
  4416 00002DE3 740E                    	je .L_lambda_simple_params_end_003e
  4417 00002DE5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4418 00002DEA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4419 00002DEE 48FFC6                  	inc rsi
  4420 00002DF1 EBEC                    	jmp .L_lambda_simple_params_loop_003e
  4421                                  .L_lambda_simple_params_end_003e:
  4422 00002DF3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4423 00002DF6 4889C3                  	mov rbx, rax
  4424 00002DF9 58                      	pop rax
  4425 00002DFA C60004                  	mov byte [rax], T_closure
  4426 00002DFD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4427 00002E01 48C74009[0B2E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
  4428 00002E09 EB1F                    	jmp .L_lambda_simple_end_003e
  4429                                  .L_lambda_simple_code_003e:	; lambda-simple body
  4430 00002E0B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4431 00002E11 740B                    	je .L_lambda_simple_arity_check_ok_003e
  4432 00002E13 FF742410                	push qword [rsp + 8 * 2]
  4433 00002E17 6A01                    	push 1
  4434 00002E19 E956330000              	jmp L_error_incorrect_arity_simple
  4435                                  .L_lambda_simple_arity_check_ok_003e:
  4436 00002E1E C8000000                	enter 0, 0
  4437 00002E22 488B4520                	mov rax, PARAM(0)	; param b
  4438 00002E26 C9                      	leave
  4439 00002E27 C21800                  	ret AND_KILL_FRAME(1)
  4440                                  .L_lambda_simple_end_003e:	; new closure is in rax
  4441 00002E2A C9                      	leave
  4442 00002E2B C21800                  	ret AND_KILL_FRAME(1)
  4443                                  .L_lambda_simple_end_003d:	; new closure is in rax
  4444 00002E2E 50                      	push rax
  4445 00002E2F 6A01                    	push 1	; arg count
  4446 00002E31 488B4520                	mov rax, PARAM(0)	; param p
  4447 00002E35 803804                  	cmp byte [rax], T_closure
  4448 00002E38 0F85D4320000            	jne L_error_non_closure
  4449 00002E3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4450 00002E41 FF7508                  	push qword [rbp + 8 * 1]
  4451                                   ; old ret addr
  4452 00002E44 5D                      	pop rbp
  4453                                  ; restore the old rbp
  4454 00002E45 BB01000000              	mov rbx, 1
  4455 00002E4A 4883C303                	add rbx, 3
  4456 00002E4E 488B7D10                	mov rdi, qword [rbp + 8*2]
  4457                                  .L_tc_recycle_frame_loop_0017:
  4458 00002E52 4883FB00                	cmp rbx, 0
  4459 00002E56 7411                    je .L_tc_recycle_frame_done_0017
  4460 00002E58 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4461 00002E5C 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4462 00002E61 48FFCF                  	dec rdi
  4463 00002E64 48FFCB                  	dec rbx
  4464 00002E67 EBE9                    jmp .L_tc_recycle_frame_loop_0017
  4465                                  .L_tc_recycle_frame_done_0017:
  4466 00002E69 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4467 00002E6C C9                      	leave
  4468 00002E6D C21800                  	ret AND_KILL_FRAME(1)
  4469                                  .L_lambda_simple_end_003c:	; new closure is in rax
  4470 00002E70 803804                  	cmp byte [rax], T_closure
  4471 00002E73 0F8599320000            	jne L_error_non_closure
  4472 00002E79 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4473 00002E7C FF7508                  	push qword [rbp + 8 * 1]
  4474                                   ; old ret addr
  4475 00002E7F 5D                      	pop rbp
  4476                                  ; restore the old rbp
  4477 00002E80 BB01000000              	mov rbx, 1
  4478 00002E85 4883C303                	add rbx, 3
  4479 00002E89 488B7D10                	mov rdi, qword [rbp + 8*2]
  4480                                  .L_tc_recycle_frame_loop_000c:
  4481 00002E8D 4883FB00                	cmp rbx, 0
  4482 00002E91 7411                    je .L_tc_recycle_frame_done_000c
  4483 00002E93 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  4484 00002E97 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  4485 00002E9C 48FFCF                  	dec rdi
  4486 00002E9F 48FFCB                  	dec rbx
  4487 00002EA2 EBE9                    jmp .L_tc_recycle_frame_loop_000c
  4488                                  .L_tc_recycle_frame_done_000c:
  4489 00002EA4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4490 00002EA7 C9                      	leave
  4491 00002EA8 C21800                  	ret AND_KILL_FRAME(1)
  4492                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4493 00002EAB 803804                  	cmp byte [rax], T_closure
  4494 00002EAE 0F855E320000            	jne L_error_non_closure
  4495 00002EB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4496 00002EB7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4497 00002EBA 50                      	push rax
  4498 00002EBB 6A01                    	push 1	; arg count
  4499 00002EBD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4500 00002EC2 E8F4320000              	call malloc
  4501 00002EC7 50                      	push rax
  4502 00002EC8 BF00000000              	mov rdi, 8 * 0	; new rib
  4503 00002ECD E8E9320000              	call malloc
  4504 00002ED2 50                      	push rax
  4505 00002ED3 BF08000000              	mov rdi, 8 * 1	; extended env
  4506 00002ED8 E8DE320000              	call malloc
  4507 00002EDD 488B7D10                	mov rdi, ENV
  4508 00002EE1 BE00000000              	mov rsi, 0
  4509 00002EE6 BA01000000              	mov rdx, 1
  4510                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
  4511 00002EEB 4883FE00                	cmp rsi, 0
  4512 00002EEF 7410                    	je .L_lambda_simple_env_end_003f
  4513 00002EF1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4514 00002EF5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4515 00002EF9 48FFC6                  	inc rsi
  4516 00002EFC 48FFC2                  	inc rdx
  4517 00002EFF EBEA                    	jmp .L_lambda_simple_env_loop_003f
  4518                                  .L_lambda_simple_env_end_003f:
  4519 00002F01 5B                      	pop rbx
  4520 00002F02 BE00000000              	mov rsi, 0
  4521                                  .L_lambda_simple_params_loop_003f:	; copy params
  4522 00002F07 4883FE00                	cmp rsi, 0
  4523 00002F0B 740E                    	je .L_lambda_simple_params_end_003f
  4524 00002F0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4525 00002F12 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4526 00002F16 48FFC6                  	inc rsi
  4527 00002F19 EBEC                    	jmp .L_lambda_simple_params_loop_003f
  4528                                  .L_lambda_simple_params_end_003f:
  4529 00002F1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4530 00002F1E 4889C3                  	mov rbx, rax
  4531 00002F21 58                      	pop rax
  4532 00002F22 C60004                  	mov byte [rax], T_closure
  4533 00002F25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4534 00002F29 48C74009[362F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
  4535 00002F31 E9DE300000              	jmp .L_lambda_simple_end_003f
  4536                                  .L_lambda_simple_code_003f:	; lambda-simple body
  4537 00002F36 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4538 00002F3C 740B                    	je .L_lambda_simple_arity_check_ok_003f
  4539 00002F3E FF742410                	push qword [rsp + 8 * 2]
  4540 00002F42 6A01                    	push 1
  4541 00002F44 E92B320000              	jmp L_error_incorrect_arity_simple
  4542                                  .L_lambda_simple_arity_check_ok_003f:
  4543 00002F49 C8000000                	enter 0, 0
  4544 00002F4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4545 00002F52 E864320000              	call malloc
  4546 00002F57 50                      	push rax
  4547 00002F58 BF08000000              	mov rdi, 8 * 1	; new rib
  4548 00002F5D E859320000              	call malloc
  4549 00002F62 50                      	push rax
  4550 00002F63 BF10000000              	mov rdi, 8 * 2	; extended env
  4551 00002F68 E84E320000              	call malloc
  4552 00002F6D 488B7D10                	mov rdi, ENV
  4553 00002F71 BE00000000              	mov rsi, 0
  4554 00002F76 BA01000000              	mov rdx, 1
  4555                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
  4556 00002F7B 4883FE01                	cmp rsi, 1
  4557 00002F7F 7410                    	je .L_lambda_simple_env_end_0040
  4558 00002F81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4559 00002F85 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4560 00002F89 48FFC6                  	inc rsi
  4561 00002F8C 48FFC2                  	inc rdx
  4562 00002F8F EBEA                    	jmp .L_lambda_simple_env_loop_0040
  4563                                  .L_lambda_simple_env_end_0040:
  4564 00002F91 5B                      	pop rbx
  4565 00002F92 BE00000000              	mov rsi, 0
  4566                                  .L_lambda_simple_params_loop_0040:	; copy params
  4567 00002F97 4883FE01                	cmp rsi, 1
  4568 00002F9B 740E                    	je .L_lambda_simple_params_end_0040
  4569 00002F9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4570 00002FA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4571 00002FA6 48FFC6                  	inc rsi
  4572 00002FA9 EBEC                    	jmp .L_lambda_simple_params_loop_0040
  4573                                  .L_lambda_simple_params_end_0040:
  4574 00002FAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4575 00002FAE 4889C3                  	mov rbx, rax
  4576 00002FB1 58                      	pop rax
  4577 00002FB2 C60004                  	mov byte [rax], T_closure
  4578 00002FB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4579 00002FB9 48C74009[C62F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
  4580 00002FC1 E94A300000              	jmp .L_lambda_simple_end_0040
  4581                                  .L_lambda_simple_code_0040:	; lambda-simple body
  4582 00002FC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4583 00002FCC 740B                    	je .L_lambda_simple_arity_check_ok_0040
  4584 00002FCE FF742410                	push qword [rsp + 8 * 2]
  4585 00002FD2 6A01                    	push 1
  4586 00002FD4 E99B310000              	jmp L_error_incorrect_arity_simple
  4587                                  .L_lambda_simple_arity_check_ok_0040:
  4588 00002FD9 C8000000                	enter 0, 0
  4589                                  	; preparing a tail-call
  4590                                  	; preparing a non-tail-call
  4591                                  	; preparing a non-tail-call
  4592 00002FDD 488B4510                	mov rax, ENV
  4593 00002FE1 488B00                  	mov rax, qword [rax + 8 * 0]
  4594 00002FE4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  4595 00002FE7 50                      	push rax
  4596 00002FE8 6A01                    	push 1	; arg count
  4597                                  	; preparing a non-tail-call
  4598 00002FEA 488B4520                	mov rax, PARAM(0)	; param b
  4599 00002FEE 50                      	push rax
  4600 00002FEF 6A01                    	push 1	; arg count
  4601 00002FF1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4602 00002FF6 E8C0310000              	call malloc
  4603 00002FFB 50                      	push rax
  4604 00002FFC BF08000000              	mov rdi, 8 * 1	; new rib
  4605 00003001 E8B5310000              	call malloc
  4606 00003006 50                      	push rax
  4607 00003007 BF18000000              	mov rdi, 8 * 3	; extended env
  4608 0000300C E8AA310000              	call malloc
  4609 00003011 488B7D10                	mov rdi, ENV
  4610 00003015 BE00000000              	mov rsi, 0
  4611 0000301A BA01000000              	mov rdx, 1
  4612                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
  4613 0000301F 4883FE02                	cmp rsi, 2
  4614 00003023 7410                    	je .L_lambda_simple_env_end_0041
  4615 00003025 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4616 00003029 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4617 0000302D 48FFC6                  	inc rsi
  4618 00003030 48FFC2                  	inc rdx
  4619 00003033 EBEA                    	jmp .L_lambda_simple_env_loop_0041
  4620                                  .L_lambda_simple_env_end_0041:
  4621 00003035 5B                      	pop rbx
  4622 00003036 BE00000000              	mov rsi, 0
  4623                                  .L_lambda_simple_params_loop_0041:	; copy params
  4624 0000303B 4883FE01                	cmp rsi, 1
  4625 0000303F 740E                    	je .L_lambda_simple_params_end_0041
  4626 00003041 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4627 00003046 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4628 0000304A 48FFC6                  	inc rsi
  4629 0000304D EBEC                    	jmp .L_lambda_simple_params_loop_0041
  4630                                  .L_lambda_simple_params_end_0041:
  4631 0000304F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4632 00003052 4889C3                  	mov rbx, rax
  4633 00003055 58                      	pop rax
  4634 00003056 C60004                  	mov byte [rax], T_closure
  4635 00003059 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4636 0000305D 48C74009[6A300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
  4637 00003065 E90F120000              	jmp .L_lambda_simple_end_0041
  4638                                  .L_lambda_simple_code_0041:	; lambda-simple body
  4639 0000306A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4640 00003070 740B                    	je .L_lambda_simple_arity_check_ok_0041
  4641 00003072 FF742410                	push qword [rsp + 8 * 2]
  4642 00003076 6A01                    	push 1
  4643 00003078 E9F7300000              	jmp L_error_incorrect_arity_simple
  4644                                  .L_lambda_simple_arity_check_ok_0041:
  4645 0000307D C8000000                	enter 0, 0
  4646 00003081 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4647 00003086 E830310000              	call malloc
  4648 0000308B 50                      	push rax
  4649 0000308C BF08000000              	mov rdi, 8 * 1	; new rib
  4650 00003091 E825310000              	call malloc
  4651 00003096 50                      	push rax
  4652 00003097 BF20000000              	mov rdi, 8 * 4	; extended env
  4653 0000309C E81A310000              	call malloc
  4654 000030A1 488B7D10                	mov rdi, ENV
  4655 000030A5 BE00000000              	mov rsi, 0
  4656 000030AA BA01000000              	mov rdx, 1
  4657                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
  4658 000030AF 4883FE03                	cmp rsi, 3
  4659 000030B3 7410                    	je .L_lambda_simple_env_end_0042
  4660 000030B5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4661 000030B9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4662 000030BD 48FFC6                  	inc rsi
  4663 000030C0 48FFC2                  	inc rdx
  4664 000030C3 EBEA                    	jmp .L_lambda_simple_env_loop_0042
  4665                                  .L_lambda_simple_env_end_0042:
  4666 000030C5 5B                      	pop rbx
  4667 000030C6 BE00000000              	mov rsi, 0
  4668                                  .L_lambda_simple_params_loop_0042:	; copy params
  4669 000030CB 4883FE01                	cmp rsi, 1
  4670 000030CF 740E                    	je .L_lambda_simple_params_end_0042
  4671 000030D1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4672 000030D6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4673 000030DA 48FFC6                  	inc rsi
  4674 000030DD EBEC                    	jmp .L_lambda_simple_params_loop_0042
  4675                                  .L_lambda_simple_params_end_0042:
  4676 000030DF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4677 000030E2 4889C3                  	mov rbx, rax
  4678 000030E5 58                      	pop rax
  4679 000030E6 C60004                  	mov byte [rax], T_closure
  4680 000030E9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4681 000030ED 48C74009[FA300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
  4682 000030F5 E97B110000              	jmp .L_lambda_simple_end_0042
  4683                                  .L_lambda_simple_code_0042:	; lambda-simple body
  4684 000030FA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4685 00003100 740B                    	je .L_lambda_simple_arity_check_ok_0042
  4686 00003102 FF742410                	push qword [rsp + 8 * 2]
  4687 00003106 6A01                    	push 1
  4688 00003108 E967300000              	jmp L_error_incorrect_arity_simple
  4689                                  .L_lambda_simple_arity_check_ok_0042:
  4690 0000310D C8000000                	enter 0, 0
  4691                                  	; preparing a tail-call
  4692 00003111 488B4510                	mov rax, ENV
  4693 00003115 488B00                  	mov rax, qword [rax + 8 * 0]
  4694 00003118 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  4695 0000311B 50                      	push rax
  4696 0000311C 6A01                    	push 1	; arg count
  4697                                  	; preparing a non-tail-call
  4698 0000311E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4699 00003123 E893300000              	call malloc
  4700 00003128 50                      	push rax
  4701 00003129 BF08000000              	mov rdi, 8 * 1	; new rib
  4702 0000312E E888300000              	call malloc
  4703 00003133 50                      	push rax
  4704 00003134 BF28000000              	mov rdi, 8 * 5	; extended env
  4705 00003139 E87D300000              	call malloc
  4706 0000313E 488B7D10                	mov rdi, ENV
  4707 00003142 BE00000000              	mov rsi, 0
  4708 00003147 BA01000000              	mov rdx, 1
  4709                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
  4710 0000314C 4883FE04                	cmp rsi, 4
  4711 00003150 7410                    	je .L_lambda_simple_env_end_0043
  4712 00003152 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4713 00003156 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4714 0000315A 48FFC6                  	inc rsi
  4715 0000315D 48FFC2                  	inc rdx
  4716 00003160 EBEA                    	jmp .L_lambda_simple_env_loop_0043
  4717                                  .L_lambda_simple_env_end_0043:
  4718 00003162 5B                      	pop rbx
  4719 00003163 BE00000000              	mov rsi, 0
  4720                                  .L_lambda_simple_params_loop_0043:	; copy params
  4721 00003168 4883FE01                	cmp rsi, 1
  4722 0000316C 740E                    	je .L_lambda_simple_params_end_0043
  4723 0000316E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4724 00003173 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4725 00003177 48FFC6                  	inc rsi
  4726 0000317A EBEC                    	jmp .L_lambda_simple_params_loop_0043
  4727                                  .L_lambda_simple_params_end_0043:
  4728 0000317C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4729 0000317F 4889C3                  	mov rbx, rax
  4730 00003182 58                      	pop rax
  4731 00003183 C60004                  	mov byte [rax], T_closure
  4732 00003186 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4733 0000318A 48C74009[97310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
  4734 00003192 E98D100000              	jmp .L_lambda_simple_end_0043
  4735                                  .L_lambda_simple_code_0043:	; lambda-simple body
  4736 00003197 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4737 0000319D 740B                    	je .L_lambda_simple_arity_check_ok_0043
  4738 0000319F FF742410                	push qword [rsp + 8 * 2]
  4739 000031A3 6A01                    	push 1
  4740 000031A5 E9CA2F0000              	jmp L_error_incorrect_arity_simple
  4741                                  .L_lambda_simple_arity_check_ok_0043:
  4742 000031AA C8000000                	enter 0, 0
  4743                                  	; preparing a tail-call
  4744                                  	; preparing a non-tail-call
  4745                                  	; preparing a non-tail-call
  4746 000031AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4747 000031B3 E803300000              	call malloc
  4748 000031B8 50                      	push rax
  4749 000031B9 BF08000000              	mov rdi, 8 * 1	; new rib
  4750 000031BE E8F82F0000              	call malloc
  4751 000031C3 50                      	push rax
  4752 000031C4 BF30000000              	mov rdi, 8 * 6	; extended env
  4753 000031C9 E8ED2F0000              	call malloc
  4754 000031CE 488B7D10                	mov rdi, ENV
  4755 000031D2 BE00000000              	mov rsi, 0
  4756 000031D7 BA01000000              	mov rdx, 1
  4757                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
  4758 000031DC 4883FE05                	cmp rsi, 5
  4759 000031E0 7410                    	je .L_lambda_simple_env_end_0044
  4760 000031E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4761 000031E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4762 000031EA 48FFC6                  	inc rsi
  4763 000031ED 48FFC2                  	inc rdx
  4764 000031F0 EBEA                    	jmp .L_lambda_simple_env_loop_0044
  4765                                  .L_lambda_simple_env_end_0044:
  4766 000031F2 5B                      	pop rbx
  4767 000031F3 BE00000000              	mov rsi, 0
  4768                                  .L_lambda_simple_params_loop_0044:	; copy params
  4769 000031F8 4883FE01                	cmp rsi, 1
  4770 000031FC 740E                    	je .L_lambda_simple_params_end_0044
  4771 000031FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4772 00003203 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4773 00003207 48FFC6                  	inc rsi
  4774 0000320A EBEC                    	jmp .L_lambda_simple_params_loop_0044
  4775                                  .L_lambda_simple_params_end_0044:
  4776 0000320C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4777 0000320F 4889C3                  	mov rbx, rax
  4778 00003212 58                      	pop rax
  4779 00003213 C60004                  	mov byte [rax], T_closure
  4780 00003216 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4781 0000321A 48C74009[27320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
  4782 00003222 E9B0000000              	jmp .L_lambda_simple_end_0044
  4783                                  .L_lambda_simple_code_0044:	; lambda-simple body
  4784 00003227 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4785 0000322D 740B                    	je .L_lambda_simple_arity_check_ok_0044
  4786 0000322F FF742410                	push qword [rsp + 8 * 2]
  4787 00003233 6A01                    	push 1
  4788 00003235 E93A2F0000              	jmp L_error_incorrect_arity_simple
  4789                                  .L_lambda_simple_arity_check_ok_0044:
  4790 0000323A C8000000                	enter 0, 0
  4791 0000323E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4792 00003243 E8732F0000              	call malloc
  4793 00003248 50                      	push rax
  4794 00003249 BF08000000              	mov rdi, 8 * 1	; new rib
  4795 0000324E E8682F0000              	call malloc
  4796 00003253 50                      	push rax
  4797 00003254 BF38000000              	mov rdi, 8 * 7	; extended env
  4798 00003259 E85D2F0000              	call malloc
  4799 0000325E 488B7D10                	mov rdi, ENV
  4800 00003262 BE00000000              	mov rsi, 0
  4801 00003267 BA01000000              	mov rdx, 1
  4802                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
  4803 0000326C 4883FE06                	cmp rsi, 6
  4804 00003270 7410                    	je .L_lambda_simple_env_end_0045
  4805 00003272 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4806 00003276 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4807 0000327A 48FFC6                  	inc rsi
  4808 0000327D 48FFC2                  	inc rdx
  4809 00003280 EBEA                    	jmp .L_lambda_simple_env_loop_0045
  4810                                  .L_lambda_simple_env_end_0045:
  4811 00003282 5B                      	pop rbx
  4812 00003283 BE00000000              	mov rsi, 0
  4813                                  .L_lambda_simple_params_loop_0045:	; copy params
  4814 00003288 4883FE01                	cmp rsi, 1
  4815 0000328C 740E                    	je .L_lambda_simple_params_end_0045
  4816 0000328E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4817 00003293 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4818 00003297 48FFC6                  	inc rsi
  4819 0000329A EBEC                    	jmp .L_lambda_simple_params_loop_0045
  4820                                  .L_lambda_simple_params_end_0045:
  4821 0000329C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4822 0000329F 4889C3                  	mov rbx, rax
  4823 000032A2 58                      	pop rax
  4824 000032A3 C60004                  	mov byte [rax], T_closure
  4825 000032A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4826 000032AA 48C74009[B4320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
  4827 000032B2 EB1F                    	jmp .L_lambda_simple_end_0045
  4828                                  .L_lambda_simple_code_0045:	; lambda-simple body
  4829 000032B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4830 000032BA 740B                    	je .L_lambda_simple_arity_check_ok_0045
  4831 000032BC FF742410                	push qword [rsp + 8 * 2]
  4832 000032C0 6A01                    	push 1
  4833 000032C2 E9AD2E0000              	jmp L_error_incorrect_arity_simple
  4834                                  .L_lambda_simple_arity_check_ok_0045:
  4835 000032C7 C8000000                	enter 0, 0
  4836 000032CB 488B4520                	mov rax, PARAM(0)	; param y
  4837 000032CF C9                      	leave
  4838 000032D0 C21800                  	ret AND_KILL_FRAME(1)
  4839                                  .L_lambda_simple_end_0045:	; new closure is in rax
  4840 000032D3 C9                      	leave
  4841 000032D4 C21800                  	ret AND_KILL_FRAME(1)
  4842                                  .L_lambda_simple_end_0044:	; new closure is in rax
  4843 000032D7 50                      	push rax
  4844 000032D8 6A01                    	push 1	; arg count
  4845                                  	; preparing a non-tail-call
  4846 000032DA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4847 000032DF E8D72E0000              	call malloc
  4848 000032E4 50                      	push rax
  4849 000032E5 BF08000000              	mov rdi, 8 * 1	; new rib
  4850 000032EA E8CC2E0000              	call malloc
  4851 000032EF 50                      	push rax
  4852 000032F0 BF30000000              	mov rdi, 8 * 6	; extended env
  4853 000032F5 E8C12E0000              	call malloc
  4854 000032FA 488B7D10                	mov rdi, ENV
  4855 000032FE BE00000000              	mov rsi, 0
  4856 00003303 BA01000000              	mov rdx, 1
  4857                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
  4858 00003308 4883FE05                	cmp rsi, 5
  4859 0000330C 7410                    	je .L_lambda_simple_env_end_0046
  4860 0000330E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4861 00003312 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4862 00003316 48FFC6                  	inc rsi
  4863 00003319 48FFC2                  	inc rdx
  4864 0000331C EBEA                    	jmp .L_lambda_simple_env_loop_0046
  4865                                  .L_lambda_simple_env_end_0046:
  4866 0000331E 5B                      	pop rbx
  4867 0000331F BE00000000              	mov rsi, 0
  4868                                  .L_lambda_simple_params_loop_0046:	; copy params
  4869 00003324 4883FE01                	cmp rsi, 1
  4870 00003328 740E                    	je .L_lambda_simple_params_end_0046
  4871 0000332A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4872 0000332F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4873 00003333 48FFC6                  	inc rsi
  4874 00003336 EBEC                    	jmp .L_lambda_simple_params_loop_0046
  4875                                  .L_lambda_simple_params_end_0046:
  4876 00003338 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4877 0000333B 4889C3                  	mov rbx, rax
  4878 0000333E 58                      	pop rax
  4879 0000333F C60004                  	mov byte [rax], T_closure
  4880 00003342 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4881 00003346 48C74009[53330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
  4882 0000334E E9B0000000              	jmp .L_lambda_simple_end_0046
  4883                                  .L_lambda_simple_code_0046:	; lambda-simple body
  4884 00003353 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4885 00003359 740B                    	je .L_lambda_simple_arity_check_ok_0046
  4886 0000335B FF742410                	push qword [rsp + 8 * 2]
  4887 0000335F 6A01                    	push 1
  4888 00003361 E90E2E0000              	jmp L_error_incorrect_arity_simple
  4889                                  .L_lambda_simple_arity_check_ok_0046:
  4890 00003366 C8000000                	enter 0, 0
  4891 0000336A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4892 0000336F E8472E0000              	call malloc
  4893 00003374 50                      	push rax
  4894 00003375 BF08000000              	mov rdi, 8 * 1	; new rib
  4895 0000337A E83C2E0000              	call malloc
  4896 0000337F 50                      	push rax
  4897 00003380 BF38000000              	mov rdi, 8 * 7	; extended env
  4898 00003385 E8312E0000              	call malloc
  4899 0000338A 488B7D10                	mov rdi, ENV
  4900 0000338E BE00000000              	mov rsi, 0
  4901 00003393 BA01000000              	mov rdx, 1
  4902                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
  4903 00003398 4883FE06                	cmp rsi, 6
  4904 0000339C 7410                    	je .L_lambda_simple_env_end_0047
  4905 0000339E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4906 000033A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4907 000033A6 48FFC6                  	inc rsi
  4908 000033A9 48FFC2                  	inc rdx
  4909 000033AC EBEA                    	jmp .L_lambda_simple_env_loop_0047
  4910                                  .L_lambda_simple_env_end_0047:
  4911 000033AE 5B                      	pop rbx
  4912 000033AF BE00000000              	mov rsi, 0
  4913                                  .L_lambda_simple_params_loop_0047:	; copy params
  4914 000033B4 4883FE01                	cmp rsi, 1
  4915 000033B8 740E                    	je .L_lambda_simple_params_end_0047
  4916 000033BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4917 000033BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4918 000033C3 48FFC6                  	inc rsi
  4919 000033C6 EBEC                    	jmp .L_lambda_simple_params_loop_0047
  4920                                  .L_lambda_simple_params_end_0047:
  4921 000033C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4922 000033CB 4889C3                  	mov rbx, rax
  4923 000033CE 58                      	pop rax
  4924 000033CF C60004                  	mov byte [rax], T_closure
  4925 000033D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4926 000033D6 48C74009[E0330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
  4927 000033DE EB1F                    	jmp .L_lambda_simple_end_0047
  4928                                  .L_lambda_simple_code_0047:	; lambda-simple body
  4929 000033E0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4930 000033E6 740B                    	je .L_lambda_simple_arity_check_ok_0047
  4931 000033E8 FF742410                	push qword [rsp + 8 * 2]
  4932 000033EC 6A01                    	push 1
  4933 000033EE E9812D0000              	jmp L_error_incorrect_arity_simple
  4934                                  .L_lambda_simple_arity_check_ok_0047:
  4935 000033F3 C8000000                	enter 0, 0
  4936 000033F7 488B4520                	mov rax, PARAM(0)	; param y
  4937 000033FB C9                      	leave
  4938 000033FC C21800                  	ret AND_KILL_FRAME(1)
  4939                                  .L_lambda_simple_end_0047:	; new closure is in rax
  4940 000033FF C9                      	leave
  4941 00003400 C21800                  	ret AND_KILL_FRAME(1)
  4942                                  .L_lambda_simple_end_0046:	; new closure is in rax
  4943 00003403 50                      	push rax
  4944 00003404 6A01                    	push 1	; arg count
  4945 00003406 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4946 0000340B E8AB2D0000              	call malloc
  4947 00003410 50                      	push rax
  4948 00003411 BF08000000              	mov rdi, 8 * 1	; new rib
  4949 00003416 E8A02D0000              	call malloc
  4950 0000341B 50                      	push rax
  4951 0000341C BF30000000              	mov rdi, 8 * 6	; extended env
  4952 00003421 E8952D0000              	call malloc
  4953 00003426 488B7D10                	mov rdi, ENV
  4954 0000342A BE00000000              	mov rsi, 0
  4955 0000342F BA01000000              	mov rdx, 1
  4956                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
  4957 00003434 4883FE05                	cmp rsi, 5
  4958 00003438 7410                    	je .L_lambda_simple_env_end_0048
  4959 0000343A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4960 0000343E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4961 00003442 48FFC6                  	inc rsi
  4962 00003445 48FFC2                  	inc rdx
  4963 00003448 EBEA                    	jmp .L_lambda_simple_env_loop_0048
  4964                                  .L_lambda_simple_env_end_0048:
  4965 0000344A 5B                      	pop rbx
  4966 0000344B BE00000000              	mov rsi, 0
  4967                                  .L_lambda_simple_params_loop_0048:	; copy params
  4968 00003450 4883FE01                	cmp rsi, 1
  4969 00003454 740E                    	je .L_lambda_simple_params_end_0048
  4970 00003456 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4971 0000345B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4972 0000345F 48FFC6                  	inc rsi
  4973 00003462 EBEC                    	jmp .L_lambda_simple_params_loop_0048
  4974                                  .L_lambda_simple_params_end_0048:
  4975 00003464 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4976 00003467 4889C3                  	mov rbx, rax
  4977 0000346A 58                      	pop rax
  4978 0000346B C60004                  	mov byte [rax], T_closure
  4979 0000346E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4980 00003472 48C74009[7F340000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
  4981 0000347A E9A8010000              	jmp .L_lambda_simple_end_0048
  4982                                  .L_lambda_simple_code_0048:	; lambda-simple body
  4983 0000347F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4984 00003485 740B                    	je .L_lambda_simple_arity_check_ok_0048
  4985 00003487 FF742410                	push qword [rsp + 8 * 2]
  4986 0000348B 6A01                    	push 1
  4987 0000348D E9E22C0000              	jmp L_error_incorrect_arity_simple
  4988                                  .L_lambda_simple_arity_check_ok_0048:
  4989 00003492 C8000000                	enter 0, 0
  4990 00003496 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4991 0000349B E81B2D0000              	call malloc
  4992 000034A0 50                      	push rax
  4993 000034A1 BF08000000              	mov rdi, 8 * 1	; new rib
  4994 000034A6 E8102D0000              	call malloc
  4995 000034AB 50                      	push rax
  4996 000034AC BF38000000              	mov rdi, 8 * 7	; extended env
  4997 000034B1 E8052D0000              	call malloc
  4998 000034B6 488B7D10                	mov rdi, ENV
  4999 000034BA BE00000000              	mov rsi, 0
  5000 000034BF BA01000000              	mov rdx, 1
  5001                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
  5002 000034C4 4883FE06                	cmp rsi, 6
  5003 000034C8 7410                    	je .L_lambda_simple_env_end_0049
  5004 000034CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5005 000034CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5006 000034D2 48FFC6                  	inc rsi
  5007 000034D5 48FFC2                  	inc rdx
  5008 000034D8 EBEA                    	jmp .L_lambda_simple_env_loop_0049
  5009                                  .L_lambda_simple_env_end_0049:
  5010 000034DA 5B                      	pop rbx
  5011 000034DB BE00000000              	mov rsi, 0
  5012                                  .L_lambda_simple_params_loop_0049:	; copy params
  5013 000034E0 4883FE01                	cmp rsi, 1
  5014 000034E4 740E                    	je .L_lambda_simple_params_end_0049
  5015 000034E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5016 000034EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5017 000034EF 48FFC6                  	inc rsi
  5018 000034F2 EBEC                    	jmp .L_lambda_simple_params_loop_0049
  5019                                  .L_lambda_simple_params_end_0049:
  5020 000034F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5021 000034F7 4889C3                  	mov rbx, rax
  5022 000034FA 58                      	pop rax
  5023 000034FB C60004                  	mov byte [rax], T_closure
  5024 000034FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5025 00003502 48C74009[0F350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
  5026 0000350A E914010000              	jmp .L_lambda_simple_end_0049
  5027                                  .L_lambda_simple_code_0049:	; lambda-simple body
  5028 0000350F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5029 00003515 740B                    	je .L_lambda_simple_arity_check_ok_0049
  5030 00003517 FF742410                	push qword [rsp + 8 * 2]
  5031 0000351B 6A01                    	push 1
  5032 0000351D E9522C0000              	jmp L_error_incorrect_arity_simple
  5033                                  .L_lambda_simple_arity_check_ok_0049:
  5034 00003522 C8000000                	enter 0, 0
  5035 00003526 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5036 0000352B E88B2C0000              	call malloc
  5037 00003530 50                      	push rax
  5038 00003531 BF08000000              	mov rdi, 8 * 1	; new rib
  5039 00003536 E8802C0000              	call malloc
  5040 0000353B 50                      	push rax
  5041 0000353C BF40000000              	mov rdi, 8 * 8	; extended env
  5042 00003541 E8752C0000              	call malloc
  5043 00003546 488B7D10                	mov rdi, ENV
  5044 0000354A BE00000000              	mov rsi, 0
  5045 0000354F BA01000000              	mov rdx, 1
  5046                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
  5047 00003554 4883FE07                	cmp rsi, 7
  5048 00003558 7410                    	je .L_lambda_simple_env_end_004a
  5049 0000355A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5050 0000355E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5051 00003562 48FFC6                  	inc rsi
  5052 00003565 48FFC2                  	inc rdx
  5053 00003568 EBEA                    	jmp .L_lambda_simple_env_loop_004a
  5054                                  .L_lambda_simple_env_end_004a:
  5055 0000356A 5B                      	pop rbx
  5056 0000356B BE00000000              	mov rsi, 0
  5057                                  .L_lambda_simple_params_loop_004a:	; copy params
  5058 00003570 4883FE01                	cmp rsi, 1
  5059 00003574 740E                    	je .L_lambda_simple_params_end_004a
  5060 00003576 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5061 0000357B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5062 0000357F 48FFC6                  	inc rsi
  5063 00003582 EBEC                    	jmp .L_lambda_simple_params_loop_004a
  5064                                  .L_lambda_simple_params_end_004a:
  5065 00003584 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5066 00003587 4889C3                  	mov rbx, rax
  5067 0000358A 58                      	pop rax
  5068 0000358B C60004                  	mov byte [rax], T_closure
  5069 0000358E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5070 00003592 48C74009[9F350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
  5071 0000359A E980000000              	jmp .L_lambda_simple_end_004a
  5072                                  .L_lambda_simple_code_004a:	; lambda-simple body
  5073 0000359F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5074 000035A5 740B                    	je .L_lambda_simple_arity_check_ok_004a
  5075 000035A7 FF742410                	push qword [rsp + 8 * 2]
  5076 000035AB 6A01                    	push 1
  5077 000035AD E9C22B0000              	jmp L_error_incorrect_arity_simple
  5078                                  .L_lambda_simple_arity_check_ok_004a:
  5079 000035B2 C8000000                	enter 0, 0
  5080                                  	; preparing a tail-call
  5081 000035B6 488B4510                	mov rax, ENV
  5082 000035BA 488B00                  	mov rax, qword [rax + 8 * 0]
  5083 000035BD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  5084 000035C0 50                      	push rax
  5085 000035C1 6A01                    	push 1	; arg count
  5086                                  	; preparing a non-tail-call
  5087 000035C3 488B4510                	mov rax, ENV
  5088 000035C7 488B4008                	mov rax, qword [rax + 8 * 1]
  5089 000035CB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5090 000035CE 50                      	push rax
  5091 000035CF 6A01                    	push 1	; arg count
  5092 000035D1 488B4520                	mov rax, PARAM(0)	; param c
  5093 000035D5 803804                  	cmp byte [rax], T_closure
  5094 000035D8 0F85342B0000            	jne L_error_non_closure
  5095 000035DE FF7001                  	push SOB_CLOSURE_ENV(rax)
  5096 000035E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5097 000035E4 803804                  	cmp byte [rax], T_closure
  5098 000035E7 0F85252B0000            	jne L_error_non_closure
  5099 000035ED FF7001                  	push SOB_CLOSURE_ENV(rax)
  5100 000035F0 FF7508                  	push qword [rbp + 8 * 1]
  5101                                   ; old ret addr
  5102 000035F3 5D                      	pop rbp
  5103                                  ; restore the old rbp
  5104 000035F4 BB01000000              	mov rbx, 1
  5105 000035F9 4883C303                	add rbx, 3
  5106 000035FD 488B7D10                	mov rdi, qword [rbp + 8*2]
  5107                                  .L_tc_recycle_frame_loop_001b:
  5108 00003601 4883FB00                	cmp rbx, 0
  5109 00003605 7411                    je .L_tc_recycle_frame_done_001b
  5110 00003607 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5111 0000360B 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5112 00003610 48FFCF                  	dec rdi
  5113 00003613 48FFCB                  	dec rbx
  5114 00003616 EBE9                    jmp .L_tc_recycle_frame_loop_001b
  5115                                  .L_tc_recycle_frame_done_001b:
  5116 00003618 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5117 0000361B C9                      	leave
  5118 0000361C C21800                  	ret AND_KILL_FRAME(1)
  5119                                  .L_lambda_simple_end_004a:	; new closure is in rax
  5120 0000361F C9                      	leave
  5121 00003620 C21800                  	ret AND_KILL_FRAME(1)
  5122                                  .L_lambda_simple_end_0049:	; new closure is in rax
  5123 00003623 C9                      	leave
  5124 00003624 C21800                  	ret AND_KILL_FRAME(1)
  5125                                  .L_lambda_simple_end_0048:	; new closure is in rax
  5126 00003627 803804                  	cmp byte [rax], T_closure
  5127 0000362A 0F85E22A0000            	jne L_error_non_closure
  5128 00003630 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5129 00003633 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5130 00003636 803804                  	cmp byte [rax], T_closure
  5131 00003639 0F85D32A0000            	jne L_error_non_closure
  5132 0000363F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5133 00003642 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5134 00003645 50                      	push rax
  5135 00003646 6A01                    	push 1	; arg count
  5136                                  	; preparing a non-tail-call
  5137 00003648 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5138 0000364D E8692B0000              	call malloc
  5139 00003652 50                      	push rax
  5140 00003653 BF08000000              	mov rdi, 8 * 1	; new rib
  5141 00003658 E85E2B0000              	call malloc
  5142 0000365D 50                      	push rax
  5143 0000365E BF30000000              	mov rdi, 8 * 6	; extended env
  5144 00003663 E8532B0000              	call malloc
  5145 00003668 488B7D10                	mov rdi, ENV
  5146 0000366C BE00000000              	mov rsi, 0
  5147 00003671 BA01000000              	mov rdx, 1
  5148                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
  5149 00003676 4883FE05                	cmp rsi, 5
  5150 0000367A 7410                    	je .L_lambda_simple_env_end_004b
  5151 0000367C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5152 00003680 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5153 00003684 48FFC6                  	inc rsi
  5154 00003687 48FFC2                  	inc rdx
  5155 0000368A EBEA                    	jmp .L_lambda_simple_env_loop_004b
  5156                                  .L_lambda_simple_env_end_004b:
  5157 0000368C 5B                      	pop rbx
  5158 0000368D BE00000000              	mov rsi, 0
  5159                                  .L_lambda_simple_params_loop_004b:	; copy params
  5160 00003692 4883FE01                	cmp rsi, 1
  5161 00003696 740E                    	je .L_lambda_simple_params_end_004b
  5162 00003698 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5163 0000369D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5164 000036A1 48FFC6                  	inc rsi
  5165 000036A4 EBEC                    	jmp .L_lambda_simple_params_loop_004b
  5166                                  .L_lambda_simple_params_end_004b:
  5167 000036A6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5168 000036A9 4889C3                  	mov rbx, rax
  5169 000036AC 58                      	pop rax
  5170 000036AD C60004                  	mov byte [rax], T_closure
  5171 000036B0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5172 000036B4 48C74009[C1360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
  5173 000036BC E905090000              	jmp .L_lambda_simple_end_004b
  5174                                  .L_lambda_simple_code_004b:	; lambda-simple body
  5175 000036C1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5176 000036C7 740B                    	je .L_lambda_simple_arity_check_ok_004b
  5177 000036C9 FF742410                	push qword [rsp + 8 * 2]
  5178 000036CD 6A01                    	push 1
  5179 000036CF E9A02A0000              	jmp L_error_incorrect_arity_simple
  5180                                  .L_lambda_simple_arity_check_ok_004b:
  5181 000036D4 C8000000                	enter 0, 0
  5182                                  	; preparing a tail-call
  5183                                  	; preparing a non-tail-call
  5184 000036D8 488B4520                	mov rax, PARAM(0)	; param p
  5185 000036DC 50                      	push rax
  5186 000036DD 6A01                    	push 1	; arg count
  5187 000036DF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5188 000036E4 E8D22A0000              	call malloc
  5189 000036E9 50                      	push rax
  5190 000036EA BF08000000              	mov rdi, 8 * 1	; new rib
  5191 000036EF E8C72A0000              	call malloc
  5192 000036F4 50                      	push rax
  5193 000036F5 BF38000000              	mov rdi, 8 * 7	; extended env
  5194 000036FA E8BC2A0000              	call malloc
  5195 000036FF 488B7D10                	mov rdi, ENV
  5196 00003703 BE00000000              	mov rsi, 0
  5197 00003708 BA01000000              	mov rdx, 1
  5198                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
  5199 0000370D 4883FE06                	cmp rsi, 6
  5200 00003711 7410                    	je .L_lambda_simple_env_end_004c
  5201 00003713 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5202 00003717 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5203 0000371B 48FFC6                  	inc rsi
  5204 0000371E 48FFC2                  	inc rdx
  5205 00003721 EBEA                    	jmp .L_lambda_simple_env_loop_004c
  5206                                  .L_lambda_simple_env_end_004c:
  5207 00003723 5B                      	pop rbx
  5208 00003724 BE00000000              	mov rsi, 0
  5209                                  .L_lambda_simple_params_loop_004c:	; copy params
  5210 00003729 4883FE01                	cmp rsi, 1
  5211 0000372D 740E                    	je .L_lambda_simple_params_end_004c
  5212 0000372F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5213 00003734 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5214 00003738 48FFC6                  	inc rsi
  5215 0000373B EBEC                    	jmp .L_lambda_simple_params_loop_004c
  5216                                  .L_lambda_simple_params_end_004c:
  5217 0000373D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5218 00003740 4889C3                  	mov rbx, rax
  5219 00003743 58                      	pop rax
  5220 00003744 C60004                  	mov byte [rax], T_closure
  5221 00003747 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5222 0000374B 48C74009[58370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
  5223 00003753 E988010000              	jmp .L_lambda_simple_end_004c
  5224                                  .L_lambda_simple_code_004c:	; lambda-simple body
  5225 00003758 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5226 0000375E 740B                    	je .L_lambda_simple_arity_check_ok_004c
  5227 00003760 FF742410                	push qword [rsp + 8 * 2]
  5228 00003764 6A01                    	push 1
  5229 00003766 E9092A0000              	jmp L_error_incorrect_arity_simple
  5230                                  .L_lambda_simple_arity_check_ok_004c:
  5231 0000376B C8000000                	enter 0, 0
  5232                                  	; preparing a tail-call
  5233 0000376F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5234 00003774 E8422A0000              	call malloc
  5235 00003779 50                      	push rax
  5236 0000377A BF08000000              	mov rdi, 8 * 1	; new rib
  5237 0000377F E8372A0000              	call malloc
  5238 00003784 50                      	push rax
  5239 00003785 BF40000000              	mov rdi, 8 * 8	; extended env
  5240 0000378A E82C2A0000              	call malloc
  5241 0000378F 488B7D10                	mov rdi, ENV
  5242 00003793 BE00000000              	mov rsi, 0
  5243 00003798 BA01000000              	mov rdx, 1
  5244                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
  5245 0000379D 4883FE07                	cmp rsi, 7
  5246 000037A1 7410                    	je .L_lambda_simple_env_end_004d
  5247 000037A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5248 000037A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5249 000037AB 48FFC6                  	inc rsi
  5250 000037AE 48FFC2                  	inc rdx
  5251 000037B1 EBEA                    	jmp .L_lambda_simple_env_loop_004d
  5252                                  .L_lambda_simple_env_end_004d:
  5253 000037B3 5B                      	pop rbx
  5254 000037B4 BE00000000              	mov rsi, 0
  5255                                  .L_lambda_simple_params_loop_004d:	; copy params
  5256 000037B9 4883FE01                	cmp rsi, 1
  5257 000037BD 740E                    	je .L_lambda_simple_params_end_004d
  5258 000037BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5259 000037C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5260 000037C8 48FFC6                  	inc rsi
  5261 000037CB EBEC                    	jmp .L_lambda_simple_params_loop_004d
  5262                                  .L_lambda_simple_params_end_004d:
  5263 000037CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5264 000037D0 4889C3                  	mov rbx, rax
  5265 000037D3 58                      	pop rax
  5266 000037D4 C60004                  	mov byte [rax], T_closure
  5267 000037D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5268 000037DB 48C74009[E8370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
  5269 000037E3 E9B6000000              	jmp .L_lambda_simple_end_004d
  5270                                  .L_lambda_simple_code_004d:	; lambda-simple body
  5271 000037E8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5272 000037EE 740B                    	je .L_lambda_simple_arity_check_ok_004d
  5273 000037F0 FF742410                	push qword [rsp + 8 * 2]
  5274 000037F4 6A01                    	push 1
  5275 000037F6 E979290000              	jmp L_error_incorrect_arity_simple
  5276                                  .L_lambda_simple_arity_check_ok_004d:
  5277 000037FB C8000000                	enter 0, 0
  5278 000037FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5279 00003804 E8B2290000              	call malloc
  5280 00003809 50                      	push rax
  5281 0000380A BF08000000              	mov rdi, 8 * 1	; new rib
  5282 0000380F E8A7290000              	call malloc
  5283 00003814 50                      	push rax
  5284 00003815 BF48000000              	mov rdi, 8 * 9	; extended env
  5285 0000381A E89C290000              	call malloc
  5286 0000381F 488B7D10                	mov rdi, ENV
  5287 00003823 BE00000000              	mov rsi, 0
  5288 00003828 BA01000000              	mov rdx, 1
  5289                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
  5290 0000382D 4883FE08                	cmp rsi, 8
  5291 00003831 7410                    	je .L_lambda_simple_env_end_004e
  5292 00003833 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5293 00003837 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5294 0000383B 48FFC6                  	inc rsi
  5295 0000383E 48FFC2                  	inc rdx
  5296 00003841 EBEA                    	jmp .L_lambda_simple_env_loop_004e
  5297                                  .L_lambda_simple_env_end_004e:
  5298 00003843 5B                      	pop rbx
  5299 00003844 BE00000000              	mov rsi, 0
  5300                                  .L_lambda_simple_params_loop_004e:	; copy params
  5301 00003849 4883FE01                	cmp rsi, 1
  5302 0000384D 740E                    	je .L_lambda_simple_params_end_004e
  5303 0000384F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5304 00003854 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5305 00003858 48FFC6                  	inc rsi
  5306 0000385B EBEC                    	jmp .L_lambda_simple_params_loop_004e
  5307                                  .L_lambda_simple_params_end_004e:
  5308 0000385D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5309 00003860 4889C3                  	mov rbx, rax
  5310 00003863 58                      	pop rax
  5311 00003864 C60004                  	mov byte [rax], T_closure
  5312 00003867 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5313 0000386B 48C74009[75380000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
  5314 00003873 EB25                    	jmp .L_lambda_simple_end_004e
  5315                                  .L_lambda_simple_code_004e:	; lambda-simple body
  5316 00003875 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5317 0000387B 740B                    	je .L_lambda_simple_arity_check_ok_004e
  5318 0000387D FF742410                	push qword [rsp + 8 * 2]
  5319 00003881 6A01                    	push 1
  5320 00003883 E9EC280000              	jmp L_error_incorrect_arity_simple
  5321                                  .L_lambda_simple_arity_check_ok_004e:
  5322 00003888 C8000000                	enter 0, 0
  5323 0000388C 488B4510                	mov rax, ENV
  5324 00003890 488B00                  	mov rax, qword [rax + 8 * 0]
  5325 00003893 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5326 00003896 C9                      	leave
  5327 00003897 C21800                  	ret AND_KILL_FRAME(1)
  5328                                  .L_lambda_simple_end_004e:	; new closure is in rax
  5329 0000389A C9                      	leave
  5330 0000389B C21800                  	ret AND_KILL_FRAME(1)
  5331                                  .L_lambda_simple_end_004d:	; new closure is in rax
  5332 0000389E 50                      	push rax
  5333 0000389F 6A01                    	push 1	; arg count
  5334 000038A1 488B4520                	mov rax, PARAM(0)	; param p
  5335 000038A5 803804                  	cmp byte [rax], T_closure
  5336 000038A8 0F8564280000            	jne L_error_non_closure
  5337 000038AE FF7001                  	push SOB_CLOSURE_ENV(rax)
  5338 000038B1 FF7508                  	push qword [rbp + 8 * 1]
  5339                                   ; old ret addr
  5340 000038B4 5D                      	pop rbp
  5341                                  ; restore the old rbp
  5342 000038B5 BB01000000              	mov rbx, 1
  5343 000038BA 4883C303                	add rbx, 3
  5344 000038BE 488B7D10                	mov rdi, qword [rbp + 8*2]
  5345                                  .L_tc_recycle_frame_loop_001d:
  5346 000038C2 4883FB00                	cmp rbx, 0
  5347 000038C6 7411                    je .L_tc_recycle_frame_done_001d
  5348 000038C8 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5349 000038CC 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5350 000038D1 48FFCF                  	dec rdi
  5351 000038D4 48FFCB                  	dec rbx
  5352 000038D7 EBE9                    jmp .L_tc_recycle_frame_loop_001d
  5353                                  .L_tc_recycle_frame_done_001d:
  5354 000038D9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5355 000038DC C9                      	leave
  5356 000038DD C21800                  	ret AND_KILL_FRAME(1)
  5357                                  .L_lambda_simple_end_004c:	; new closure is in rax
  5358 000038E0 803804                  	cmp byte [rax], T_closure
  5359 000038E3 0F8529280000            	jne L_error_non_closure
  5360 000038E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5361 000038EC FF5009                  	call SOB_CLOSURE_CODE(rax)
  5362 000038EF 50                      	push rax
  5363 000038F0 6A01                    	push 1	; arg count
  5364                                  	; preparing a non-tail-call
  5365                                  	; preparing a non-tail-call
  5366                                  	; preparing a non-tail-call
  5367 000038F2 488B4520                	mov rax, PARAM(0)	; param p
  5368 000038F6 50                      	push rax
  5369 000038F7 6A01                    	push 1	; arg count
  5370 000038F9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5371 000038FE E8B8280000              	call malloc
  5372 00003903 50                      	push rax
  5373 00003904 BF08000000              	mov rdi, 8 * 1	; new rib
  5374 00003909 E8AD280000              	call malloc
  5375 0000390E 50                      	push rax
  5376 0000390F BF38000000              	mov rdi, 8 * 7	; extended env
  5377 00003914 E8A2280000              	call malloc
  5378 00003919 488B7D10                	mov rdi, ENV
  5379 0000391D BE00000000              	mov rsi, 0
  5380 00003922 BA01000000              	mov rdx, 1
  5381                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
  5382 00003927 4883FE06                	cmp rsi, 6
  5383 0000392B 7410                    	je .L_lambda_simple_env_end_004f
  5384 0000392D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5385 00003931 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5386 00003935 48FFC6                  	inc rsi
  5387 00003938 48FFC2                  	inc rdx
  5388 0000393B EBEA                    	jmp .L_lambda_simple_env_loop_004f
  5389                                  .L_lambda_simple_env_end_004f:
  5390 0000393D 5B                      	pop rbx
  5391 0000393E BE00000000              	mov rsi, 0
  5392                                  .L_lambda_simple_params_loop_004f:	; copy params
  5393 00003943 4883FE01                	cmp rsi, 1
  5394 00003947 740E                    	je .L_lambda_simple_params_end_004f
  5395 00003949 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5396 0000394E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5397 00003952 48FFC6                  	inc rsi
  5398 00003955 EBEC                    	jmp .L_lambda_simple_params_loop_004f
  5399                                  .L_lambda_simple_params_end_004f:
  5400 00003957 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5401 0000395A 4889C3                  	mov rbx, rax
  5402 0000395D 58                      	pop rax
  5403 0000395E C60004                  	mov byte [rax], T_closure
  5404 00003961 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5405 00003965 48C74009[72390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
  5406 0000396D E988010000              	jmp .L_lambda_simple_end_004f
  5407                                  .L_lambda_simple_code_004f:	; lambda-simple body
  5408 00003972 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5409 00003978 740B                    	je .L_lambda_simple_arity_check_ok_004f
  5410 0000397A FF742410                	push qword [rsp + 8 * 2]
  5411 0000397E 6A01                    	push 1
  5412 00003980 E9EF270000              	jmp L_error_incorrect_arity_simple
  5413                                  .L_lambda_simple_arity_check_ok_004f:
  5414 00003985 C8000000                	enter 0, 0
  5415                                  	; preparing a tail-call
  5416 00003989 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5417 0000398E E828280000              	call malloc
  5418 00003993 50                      	push rax
  5419 00003994 BF08000000              	mov rdi, 8 * 1	; new rib
  5420 00003999 E81D280000              	call malloc
  5421 0000399E 50                      	push rax
  5422 0000399F BF40000000              	mov rdi, 8 * 8	; extended env
  5423 000039A4 E812280000              	call malloc
  5424 000039A9 488B7D10                	mov rdi, ENV
  5425 000039AD BE00000000              	mov rsi, 0
  5426 000039B2 BA01000000              	mov rdx, 1
  5427                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
  5428 000039B7 4883FE07                	cmp rsi, 7
  5429 000039BB 7410                    	je .L_lambda_simple_env_end_0050
  5430 000039BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5431 000039C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5432 000039C5 48FFC6                  	inc rsi
  5433 000039C8 48FFC2                  	inc rdx
  5434 000039CB EBEA                    	jmp .L_lambda_simple_env_loop_0050
  5435                                  .L_lambda_simple_env_end_0050:
  5436 000039CD 5B                      	pop rbx
  5437 000039CE BE00000000              	mov rsi, 0
  5438                                  .L_lambda_simple_params_loop_0050:	; copy params
  5439 000039D3 4883FE01                	cmp rsi, 1
  5440 000039D7 740E                    	je .L_lambda_simple_params_end_0050
  5441 000039D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5442 000039DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5443 000039E2 48FFC6                  	inc rsi
  5444 000039E5 EBEC                    	jmp .L_lambda_simple_params_loop_0050
  5445                                  .L_lambda_simple_params_end_0050:
  5446 000039E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5447 000039EA 4889C3                  	mov rbx, rax
  5448 000039ED 58                      	pop rax
  5449 000039EE C60004                  	mov byte [rax], T_closure
  5450 000039F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5451 000039F5 48C74009[023A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
  5452 000039FD E9B6000000              	jmp .L_lambda_simple_end_0050
  5453                                  .L_lambda_simple_code_0050:	; lambda-simple body
  5454 00003A02 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5455 00003A08 740B                    	je .L_lambda_simple_arity_check_ok_0050
  5456 00003A0A FF742410                	push qword [rsp + 8 * 2]
  5457 00003A0E 6A01                    	push 1
  5458 00003A10 E95F270000              	jmp L_error_incorrect_arity_simple
  5459                                  .L_lambda_simple_arity_check_ok_0050:
  5460 00003A15 C8000000                	enter 0, 0
  5461 00003A19 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5462 00003A1E E898270000              	call malloc
  5463 00003A23 50                      	push rax
  5464 00003A24 BF08000000              	mov rdi, 8 * 1	; new rib
  5465 00003A29 E88D270000              	call malloc
  5466 00003A2E 50                      	push rax
  5467 00003A2F BF48000000              	mov rdi, 8 * 9	; extended env
  5468 00003A34 E882270000              	call malloc
  5469 00003A39 488B7D10                	mov rdi, ENV
  5470 00003A3D BE00000000              	mov rsi, 0
  5471 00003A42 BA01000000              	mov rdx, 1
  5472                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
  5473 00003A47 4883FE08                	cmp rsi, 8
  5474 00003A4B 7410                    	je .L_lambda_simple_env_end_0051
  5475 00003A4D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5476 00003A51 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5477 00003A55 48FFC6                  	inc rsi
  5478 00003A58 48FFC2                  	inc rdx
  5479 00003A5B EBEA                    	jmp .L_lambda_simple_env_loop_0051
  5480                                  .L_lambda_simple_env_end_0051:
  5481 00003A5D 5B                      	pop rbx
  5482 00003A5E BE00000000              	mov rsi, 0
  5483                                  .L_lambda_simple_params_loop_0051:	; copy params
  5484 00003A63 4883FE01                	cmp rsi, 1
  5485 00003A67 740E                    	je .L_lambda_simple_params_end_0051
  5486 00003A69 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5487 00003A6E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5488 00003A72 48FFC6                  	inc rsi
  5489 00003A75 EBEC                    	jmp .L_lambda_simple_params_loop_0051
  5490                                  .L_lambda_simple_params_end_0051:
  5491 00003A77 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5492 00003A7A 4889C3                  	mov rbx, rax
  5493 00003A7D 58                      	pop rax
  5494 00003A7E C60004                  	mov byte [rax], T_closure
  5495 00003A81 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5496 00003A85 48C74009[8F3A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
  5497 00003A8D EB25                    	jmp .L_lambda_simple_end_0051
  5498                                  .L_lambda_simple_code_0051:	; lambda-simple body
  5499 00003A8F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5500 00003A95 740B                    	je .L_lambda_simple_arity_check_ok_0051
  5501 00003A97 FF742410                	push qword [rsp + 8 * 2]
  5502 00003A9B 6A01                    	push 1
  5503 00003A9D E9D2260000              	jmp L_error_incorrect_arity_simple
  5504                                  .L_lambda_simple_arity_check_ok_0051:
  5505 00003AA2 C8000000                	enter 0, 0
  5506 00003AA6 488B4510                	mov rax, ENV
  5507 00003AAA 488B00                  	mov rax, qword [rax + 8 * 0]
  5508 00003AAD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5509 00003AB0 C9                      	leave
  5510 00003AB1 C21800                  	ret AND_KILL_FRAME(1)
  5511                                  .L_lambda_simple_end_0051:	; new closure is in rax
  5512 00003AB4 C9                      	leave
  5513 00003AB5 C21800                  	ret AND_KILL_FRAME(1)
  5514                                  .L_lambda_simple_end_0050:	; new closure is in rax
  5515 00003AB8 50                      	push rax
  5516 00003AB9 6A01                    	push 1	; arg count
  5517 00003ABB 488B4520                	mov rax, PARAM(0)	; param p
  5518 00003ABF 803804                  	cmp byte [rax], T_closure
  5519 00003AC2 0F854A260000            	jne L_error_non_closure
  5520 00003AC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5521 00003ACB FF7508                  	push qword [rbp + 8 * 1]
  5522                                   ; old ret addr
  5523 00003ACE 5D                      	pop rbp
  5524                                  ; restore the old rbp
  5525 00003ACF BB01000000              	mov rbx, 1
  5526 00003AD4 4883C303                	add rbx, 3
  5527 00003AD8 488B7D10                	mov rdi, qword [rbp + 8*2]
  5528                                  .L_tc_recycle_frame_loop_001e:
  5529 00003ADC 4883FB00                	cmp rbx, 0
  5530 00003AE0 7411                    je .L_tc_recycle_frame_done_001e
  5531 00003AE2 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5532 00003AE6 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5533 00003AEB 48FFCF                  	dec rdi
  5534 00003AEE 48FFCB                  	dec rbx
  5535 00003AF1 EBE9                    jmp .L_tc_recycle_frame_loop_001e
  5536                                  .L_tc_recycle_frame_done_001e:
  5537 00003AF3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5538 00003AF6 C9                      	leave
  5539 00003AF7 C21800                  	ret AND_KILL_FRAME(1)
  5540                                  .L_lambda_simple_end_004f:	; new closure is in rax
  5541 00003AFA 803804                  	cmp byte [rax], T_closure
  5542 00003AFD 0F850F260000            	jne L_error_non_closure
  5543 00003B03 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5544 00003B06 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5545 00003B09 50                      	push rax
  5546 00003B0A 6A01                    	push 1	; arg count
  5547 00003B0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5548 00003B11 E8A5260000              	call malloc
  5549 00003B16 50                      	push rax
  5550 00003B17 BF08000000              	mov rdi, 8 * 1	; new rib
  5551 00003B1C E89A260000              	call malloc
  5552 00003B21 50                      	push rax
  5553 00003B22 BF38000000              	mov rdi, 8 * 7	; extended env
  5554 00003B27 E88F260000              	call malloc
  5555 00003B2C 488B7D10                	mov rdi, ENV
  5556 00003B30 BE00000000              	mov rsi, 0
  5557 00003B35 BA01000000              	mov rdx, 1
  5558                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
  5559 00003B3A 4883FE06                	cmp rsi, 6
  5560 00003B3E 7410                    	je .L_lambda_simple_env_end_0052
  5561 00003B40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5562 00003B44 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5563 00003B48 48FFC6                  	inc rsi
  5564 00003B4B 48FFC2                  	inc rdx
  5565 00003B4E EBEA                    	jmp .L_lambda_simple_env_loop_0052
  5566                                  .L_lambda_simple_env_end_0052:
  5567 00003B50 5B                      	pop rbx
  5568 00003B51 BE00000000              	mov rsi, 0
  5569                                  .L_lambda_simple_params_loop_0052:	; copy params
  5570 00003B56 4883FE01                	cmp rsi, 1
  5571 00003B5A 740E                    	je .L_lambda_simple_params_end_0052
  5572 00003B5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5573 00003B61 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5574 00003B65 48FFC6                  	inc rsi
  5575 00003B68 EBEC                    	jmp .L_lambda_simple_params_loop_0052
  5576                                  .L_lambda_simple_params_end_0052:
  5577 00003B6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5578 00003B6D 4889C3                  	mov rbx, rax
  5579 00003B70 58                      	pop rax
  5580 00003B71 C60004                  	mov byte [rax], T_closure
  5581 00003B74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5582 00003B78 48C74009[853B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
  5583 00003B80 E9C4010000              	jmp .L_lambda_simple_end_0052
  5584                                  .L_lambda_simple_code_0052:	; lambda-simple body
  5585 00003B85 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5586 00003B8B 740B                    	je .L_lambda_simple_arity_check_ok_0052
  5587 00003B8D FF742410                	push qword [rsp + 8 * 2]
  5588 00003B91 6A01                    	push 1
  5589 00003B93 E9DC250000              	jmp L_error_incorrect_arity_simple
  5590                                  .L_lambda_simple_arity_check_ok_0052:
  5591 00003B98 C8000000                	enter 0, 0
  5592 00003B9C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5593 00003BA1 E815260000              	call malloc
  5594 00003BA6 50                      	push rax
  5595 00003BA7 BF08000000              	mov rdi, 8 * 1	; new rib
  5596 00003BAC E80A260000              	call malloc
  5597 00003BB1 50                      	push rax
  5598 00003BB2 BF40000000              	mov rdi, 8 * 8	; extended env
  5599 00003BB7 E8FF250000              	call malloc
  5600 00003BBC 488B7D10                	mov rdi, ENV
  5601 00003BC0 BE00000000              	mov rsi, 0
  5602 00003BC5 BA01000000              	mov rdx, 1
  5603                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
  5604 00003BCA 4883FE07                	cmp rsi, 7
  5605 00003BCE 7410                    	je .L_lambda_simple_env_end_0053
  5606 00003BD0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5607 00003BD4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5608 00003BD8 48FFC6                  	inc rsi
  5609 00003BDB 48FFC2                  	inc rdx
  5610 00003BDE EBEA                    	jmp .L_lambda_simple_env_loop_0053
  5611                                  .L_lambda_simple_env_end_0053:
  5612 00003BE0 5B                      	pop rbx
  5613 00003BE1 BE00000000              	mov rsi, 0
  5614                                  .L_lambda_simple_params_loop_0053:	; copy params
  5615 00003BE6 4883FE01                	cmp rsi, 1
  5616 00003BEA 740E                    	je .L_lambda_simple_params_end_0053
  5617 00003BEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5618 00003BF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5619 00003BF5 48FFC6                  	inc rsi
  5620 00003BF8 EBEC                    	jmp .L_lambda_simple_params_loop_0053
  5621                                  .L_lambda_simple_params_end_0053:
  5622 00003BFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5623 00003BFD 4889C3                  	mov rbx, rax
  5624 00003C00 58                      	pop rax
  5625 00003C01 C60004                  	mov byte [rax], T_closure
  5626 00003C04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5627 00003C08 48C74009[153C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
  5628 00003C10 E930010000              	jmp .L_lambda_simple_end_0053
  5629                                  .L_lambda_simple_code_0053:	; lambda-simple body
  5630 00003C15 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5631 00003C1B 740B                    	je .L_lambda_simple_arity_check_ok_0053
  5632 00003C1D FF742410                	push qword [rsp + 8 * 2]
  5633 00003C21 6A01                    	push 1
  5634 00003C23 E94C250000              	jmp L_error_incorrect_arity_simple
  5635                                  .L_lambda_simple_arity_check_ok_0053:
  5636 00003C28 C8000000                	enter 0, 0
  5637 00003C2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5638 00003C31 E885250000              	call malloc
  5639 00003C36 50                      	push rax
  5640 00003C37 BF08000000              	mov rdi, 8 * 1	; new rib
  5641 00003C3C E87A250000              	call malloc
  5642 00003C41 50                      	push rax
  5643 00003C42 BF48000000              	mov rdi, 8 * 9	; extended env
  5644 00003C47 E86F250000              	call malloc
  5645 00003C4C 488B7D10                	mov rdi, ENV
  5646 00003C50 BE00000000              	mov rsi, 0
  5647 00003C55 BA01000000              	mov rdx, 1
  5648                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
  5649 00003C5A 4883FE08                	cmp rsi, 8
  5650 00003C5E 7410                    	je .L_lambda_simple_env_end_0054
  5651 00003C60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5652 00003C64 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5653 00003C68 48FFC6                  	inc rsi
  5654 00003C6B 48FFC2                  	inc rdx
  5655 00003C6E EBEA                    	jmp .L_lambda_simple_env_loop_0054
  5656                                  .L_lambda_simple_env_end_0054:
  5657 00003C70 5B                      	pop rbx
  5658 00003C71 BE00000000              	mov rsi, 0
  5659                                  .L_lambda_simple_params_loop_0054:	; copy params
  5660 00003C76 4883FE01                	cmp rsi, 1
  5661 00003C7A 740E                    	je .L_lambda_simple_params_end_0054
  5662 00003C7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5663 00003C81 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5664 00003C85 48FFC6                  	inc rsi
  5665 00003C88 EBEC                    	jmp .L_lambda_simple_params_loop_0054
  5666                                  .L_lambda_simple_params_end_0054:
  5667 00003C8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5668 00003C8D 4889C3                  	mov rbx, rax
  5669 00003C90 58                      	pop rax
  5670 00003C91 C60004                  	mov byte [rax], T_closure
  5671 00003C94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5672 00003C98 48C74009[A53C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
  5673 00003CA0 E99C000000              	jmp .L_lambda_simple_end_0054
  5674                                  .L_lambda_simple_code_0054:	; lambda-simple body
  5675 00003CA5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5676 00003CAB 740B                    	je .L_lambda_simple_arity_check_ok_0054
  5677 00003CAD FF742410                	push qword [rsp + 8 * 2]
  5678 00003CB1 6A01                    	push 1
  5679 00003CB3 E9BC240000              	jmp L_error_incorrect_arity_simple
  5680                                  .L_lambda_simple_arity_check_ok_0054:
  5681 00003CB8 C8000000                	enter 0, 0
  5682                                  	; preparing a tail-call
  5683                                  	; preparing a non-tail-call
  5684 00003CBC 488B4520                	mov rax, PARAM(0)	; param z
  5685 00003CC0 50                      	push rax
  5686 00003CC1 6A01                    	push 1	; arg count
  5687                                  	; preparing a non-tail-call
  5688 00003CC3 488B4510                	mov rax, ENV
  5689 00003CC7 488B00                  	mov rax, qword [rax + 8 * 0]
  5690 00003CCA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  5691 00003CCD 50                      	push rax
  5692 00003CCE 6A01                    	push 1	; arg count
  5693 00003CD0 488B4510                	mov rax, ENV
  5694 00003CD4 488B4008                	mov rax, qword [rax + 8 * 1]
  5695 00003CD8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  5696 00003CDB 803804                  	cmp byte [rax], T_closure
  5697 00003CDE 0F852E240000            	jne L_error_non_closure
  5698 00003CE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5699 00003CE7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5700 00003CEA 803804                  	cmp byte [rax], T_closure
  5701 00003CED 0F851F240000            	jne L_error_non_closure
  5702 00003CF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5703 00003CF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5704 00003CF9 50                      	push rax
  5705 00003CFA 6A01                    	push 1	; arg count
  5706 00003CFC 488B4510                	mov rax, ENV
  5707 00003D00 488B00                  	mov rax, qword [rax + 8 * 0]
  5708 00003D03 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  5709 00003D06 803804                  	cmp byte [rax], T_closure
  5710 00003D09 0F8503240000            	jne L_error_non_closure
  5711 00003D0F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5712 00003D12 FF7508                  	push qword [rbp + 8 * 1]
  5713                                   ; old ret addr
  5714 00003D15 5D                      	pop rbp
  5715                                  ; restore the old rbp
  5716 00003D16 BB01000000              	mov rbx, 1
  5717 00003D1B 4883C303                	add rbx, 3
  5718 00003D1F 488B7D10                	mov rdi, qword [rbp + 8*2]
  5719                                  .L_tc_recycle_frame_loop_001f:
  5720 00003D23 4883FB00                	cmp rbx, 0
  5721 00003D27 7411                    je .L_tc_recycle_frame_done_001f
  5722 00003D29 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5723 00003D2D 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5724 00003D32 48FFCF                  	dec rdi
  5725 00003D35 48FFCB                  	dec rbx
  5726 00003D38 EBE9                    jmp .L_tc_recycle_frame_loop_001f
  5727                                  .L_tc_recycle_frame_done_001f:
  5728 00003D3A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5729 00003D3D C9                      	leave
  5730 00003D3E C21800                  	ret AND_KILL_FRAME(1)
  5731                                  .L_lambda_simple_end_0054:	; new closure is in rax
  5732 00003D41 C9                      	leave
  5733 00003D42 C21800                  	ret AND_KILL_FRAME(1)
  5734                                  .L_lambda_simple_end_0053:	; new closure is in rax
  5735 00003D45 C9                      	leave
  5736 00003D46 C21800                  	ret AND_KILL_FRAME(1)
  5737                                  .L_lambda_simple_end_0052:	; new closure is in rax
  5738 00003D49 803804                  	cmp byte [rax], T_closure
  5739 00003D4C 0F85C0230000            	jne L_error_non_closure
  5740 00003D52 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5741 00003D55 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5742 00003D58 50                      	push rax
  5743 00003D59 6A01                    	push 1	; arg count
  5744 00003D5B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5745 00003D60 E856240000              	call malloc
  5746 00003D65 50                      	push rax
  5747 00003D66 BF08000000              	mov rdi, 8 * 1	; new rib
  5748 00003D6B E84B240000              	call malloc
  5749 00003D70 50                      	push rax
  5750 00003D71 BF38000000              	mov rdi, 8 * 7	; extended env
  5751 00003D76 E840240000              	call malloc
  5752 00003D7B 488B7D10                	mov rdi, ENV
  5753 00003D7F BE00000000              	mov rsi, 0
  5754 00003D84 BA01000000              	mov rdx, 1
  5755                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
  5756 00003D89 4883FE06                	cmp rsi, 6
  5757 00003D8D 7410                    	je .L_lambda_simple_env_end_0055
  5758 00003D8F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5759 00003D93 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5760 00003D97 48FFC6                  	inc rsi
  5761 00003D9A 48FFC2                  	inc rdx
  5762 00003D9D EBEA                    	jmp .L_lambda_simple_env_loop_0055
  5763                                  .L_lambda_simple_env_end_0055:
  5764 00003D9F 5B                      	pop rbx
  5765 00003DA0 BE00000000              	mov rsi, 0
  5766                                  .L_lambda_simple_params_loop_0055:	; copy params
  5767 00003DA5 4883FE01                	cmp rsi, 1
  5768 00003DA9 740E                    	je .L_lambda_simple_params_end_0055
  5769 00003DAB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5770 00003DB0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5771 00003DB4 48FFC6                  	inc rsi
  5772 00003DB7 EBEC                    	jmp .L_lambda_simple_params_loop_0055
  5773                                  .L_lambda_simple_params_end_0055:
  5774 00003DB9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5775 00003DBC 4889C3                  	mov rbx, rax
  5776 00003DBF 58                      	pop rax
  5777 00003DC0 C60004                  	mov byte [rax], T_closure
  5778 00003DC3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5779 00003DC7 48C74009[D43D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
  5780 00003DCF E9A8010000              	jmp .L_lambda_simple_end_0055
  5781                                  .L_lambda_simple_code_0055:	; lambda-simple body
  5782 00003DD4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5783 00003DDA 740B                    	je .L_lambda_simple_arity_check_ok_0055
  5784 00003DDC FF742410                	push qword [rsp + 8 * 2]
  5785 00003DE0 6A01                    	push 1
  5786 00003DE2 E98D230000              	jmp L_error_incorrect_arity_simple
  5787                                  .L_lambda_simple_arity_check_ok_0055:
  5788 00003DE7 C8000000                	enter 0, 0
  5789 00003DEB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5790 00003DF0 E8C6230000              	call malloc
  5791 00003DF5 50                      	push rax
  5792 00003DF6 BF08000000              	mov rdi, 8 * 1	; new rib
  5793 00003DFB E8BB230000              	call malloc
  5794 00003E00 50                      	push rax
  5795 00003E01 BF40000000              	mov rdi, 8 * 8	; extended env
  5796 00003E06 E8B0230000              	call malloc
  5797 00003E0B 488B7D10                	mov rdi, ENV
  5798 00003E0F BE00000000              	mov rsi, 0
  5799 00003E14 BA01000000              	mov rdx, 1
  5800                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
  5801 00003E19 4883FE07                	cmp rsi, 7
  5802 00003E1D 7410                    	je .L_lambda_simple_env_end_0056
  5803 00003E1F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5804 00003E23 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5805 00003E27 48FFC6                  	inc rsi
  5806 00003E2A 48FFC2                  	inc rdx
  5807 00003E2D EBEA                    	jmp .L_lambda_simple_env_loop_0056
  5808                                  .L_lambda_simple_env_end_0056:
  5809 00003E2F 5B                      	pop rbx
  5810 00003E30 BE00000000              	mov rsi, 0
  5811                                  .L_lambda_simple_params_loop_0056:	; copy params
  5812 00003E35 4883FE01                	cmp rsi, 1
  5813 00003E39 740E                    	je .L_lambda_simple_params_end_0056
  5814 00003E3B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5815 00003E40 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5816 00003E44 48FFC6                  	inc rsi
  5817 00003E47 EBEC                    	jmp .L_lambda_simple_params_loop_0056
  5818                                  .L_lambda_simple_params_end_0056:
  5819 00003E49 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5820 00003E4C 4889C3                  	mov rbx, rax
  5821 00003E4F 58                      	pop rax
  5822 00003E50 C60004                  	mov byte [rax], T_closure
  5823 00003E53 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5824 00003E57 48C74009[643E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
  5825 00003E5F E914010000              	jmp .L_lambda_simple_end_0056
  5826                                  .L_lambda_simple_code_0056:	; lambda-simple body
  5827 00003E64 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5828 00003E6A 740B                    	je .L_lambda_simple_arity_check_ok_0056
  5829 00003E6C FF742410                	push qword [rsp + 8 * 2]
  5830 00003E70 6A01                    	push 1
  5831 00003E72 E9FD220000              	jmp L_error_incorrect_arity_simple
  5832                                  .L_lambda_simple_arity_check_ok_0056:
  5833 00003E77 C8000000                	enter 0, 0
  5834 00003E7B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5835 00003E80 E836230000              	call malloc
  5836 00003E85 50                      	push rax
  5837 00003E86 BF08000000              	mov rdi, 8 * 1	; new rib
  5838 00003E8B E82B230000              	call malloc
  5839 00003E90 50                      	push rax
  5840 00003E91 BF48000000              	mov rdi, 8 * 9	; extended env
  5841 00003E96 E820230000              	call malloc
  5842 00003E9B 488B7D10                	mov rdi, ENV
  5843 00003E9F BE00000000              	mov rsi, 0
  5844 00003EA4 BA01000000              	mov rdx, 1
  5845                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
  5846 00003EA9 4883FE08                	cmp rsi, 8
  5847 00003EAD 7410                    	je .L_lambda_simple_env_end_0057
  5848 00003EAF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5849 00003EB3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5850 00003EB7 48FFC6                  	inc rsi
  5851 00003EBA 48FFC2                  	inc rdx
  5852 00003EBD EBEA                    	jmp .L_lambda_simple_env_loop_0057
  5853                                  .L_lambda_simple_env_end_0057:
  5854 00003EBF 5B                      	pop rbx
  5855 00003EC0 BE00000000              	mov rsi, 0
  5856                                  .L_lambda_simple_params_loop_0057:	; copy params
  5857 00003EC5 4883FE01                	cmp rsi, 1
  5858 00003EC9 740E                    	je .L_lambda_simple_params_end_0057
  5859 00003ECB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5860 00003ED0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5861 00003ED4 48FFC6                  	inc rsi
  5862 00003ED7 EBEC                    	jmp .L_lambda_simple_params_loop_0057
  5863                                  .L_lambda_simple_params_end_0057:
  5864 00003ED9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5865 00003EDC 4889C3                  	mov rbx, rax
  5866 00003EDF 58                      	pop rax
  5867 00003EE0 C60004                  	mov byte [rax], T_closure
  5868 00003EE3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5869 00003EE7 48C74009[F43E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
  5870 00003EEF E980000000              	jmp .L_lambda_simple_end_0057
  5871                                  .L_lambda_simple_code_0057:	; lambda-simple body
  5872 00003EF4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5873 00003EFA 740B                    	je .L_lambda_simple_arity_check_ok_0057
  5874 00003EFC FF742410                	push qword [rsp + 8 * 2]
  5875 00003F00 6A01                    	push 1
  5876 00003F02 E96D220000              	jmp L_error_incorrect_arity_simple
  5877                                  .L_lambda_simple_arity_check_ok_0057:
  5878 00003F07 C8000000                	enter 0, 0
  5879                                  	; preparing a tail-call
  5880 00003F0B 488B4510                	mov rax, ENV
  5881 00003F0F 488B00                  	mov rax, qword [rax + 8 * 0]
  5882 00003F12 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  5883 00003F15 50                      	push rax
  5884 00003F16 6A01                    	push 1	; arg count
  5885                                  	; preparing a non-tail-call
  5886 00003F18 488B4510                	mov rax, ENV
  5887 00003F1C 488B4008                	mov rax, qword [rax + 8 * 1]
  5888 00003F20 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  5889 00003F23 50                      	push rax
  5890 00003F24 6A01                    	push 1	; arg count
  5891 00003F26 488B4520                	mov rax, PARAM(0)	; param c
  5892 00003F2A 803804                  	cmp byte [rax], T_closure
  5893 00003F2D 0F85DF210000            	jne L_error_non_closure
  5894 00003F33 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5895 00003F36 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5896 00003F39 803804                  	cmp byte [rax], T_closure
  5897 00003F3C 0F85D0210000            	jne L_error_non_closure
  5898 00003F42 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5899 00003F45 FF7508                  	push qword [rbp + 8 * 1]
  5900                                   ; old ret addr
  5901 00003F48 5D                      	pop rbp
  5902                                  ; restore the old rbp
  5903 00003F49 BB01000000              	mov rbx, 1
  5904 00003F4E 4883C303                	add rbx, 3
  5905 00003F52 488B7D10                	mov rdi, qword [rbp + 8*2]
  5906                                  .L_tc_recycle_frame_loop_0020:
  5907 00003F56 4883FB00                	cmp rbx, 0
  5908 00003F5A 7411                    je .L_tc_recycle_frame_done_0020
  5909 00003F5C 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5910 00003F60 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5911 00003F65 48FFCF                  	dec rdi
  5912 00003F68 48FFCB                  	dec rbx
  5913 00003F6B EBE9                    jmp .L_tc_recycle_frame_loop_0020
  5914                                  .L_tc_recycle_frame_done_0020:
  5915 00003F6D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5916 00003F70 C9                      	leave
  5917 00003F71 C21800                  	ret AND_KILL_FRAME(1)
  5918                                  .L_lambda_simple_end_0057:	; new closure is in rax
  5919 00003F74 C9                      	leave
  5920 00003F75 C21800                  	ret AND_KILL_FRAME(1)
  5921                                  .L_lambda_simple_end_0056:	; new closure is in rax
  5922 00003F78 C9                      	leave
  5923 00003F79 C21800                  	ret AND_KILL_FRAME(1)
  5924                                  .L_lambda_simple_end_0055:	; new closure is in rax
  5925 00003F7C 803804                  	cmp byte [rax], T_closure
  5926 00003F7F 0F858D210000            	jne L_error_non_closure
  5927 00003F85 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5928 00003F88 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5929 00003F8B 803804                  	cmp byte [rax], T_closure
  5930 00003F8E 0F857E210000            	jne L_error_non_closure
  5931 00003F94 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5932 00003F97 FF7508                  	push qword [rbp + 8 * 1]
  5933                                   ; old ret addr
  5934 00003F9A 5D                      	pop rbp
  5935                                  ; restore the old rbp
  5936 00003F9B BB01000000              	mov rbx, 1
  5937 00003FA0 4883C303                	add rbx, 3
  5938 00003FA4 488B7D10                	mov rdi, qword [rbp + 8*2]
  5939                                  .L_tc_recycle_frame_loop_001c:
  5940 00003FA8 4883FB00                	cmp rbx, 0
  5941 00003FAC 7411                    je .L_tc_recycle_frame_done_001c
  5942 00003FAE 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  5943 00003FB2 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  5944 00003FB7 48FFCF                  	dec rdi
  5945 00003FBA 48FFCB                  	dec rbx
  5946 00003FBD EBE9                    jmp .L_tc_recycle_frame_loop_001c
  5947                                  .L_tc_recycle_frame_done_001c:
  5948 00003FBF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5949 00003FC2 C9                      	leave
  5950 00003FC3 C21800                  	ret AND_KILL_FRAME(1)
  5951                                  .L_lambda_simple_end_004b:	; new closure is in rax
  5952 00003FC6 50                      	push rax
  5953 00003FC7 6A01                    	push 1	; arg count
  5954 00003FC9 488B4520                	mov rax, PARAM(0)	; param n
  5955 00003FCD 803804                  	cmp byte [rax], T_closure
  5956 00003FD0 0F853C210000            	jne L_error_non_closure
  5957 00003FD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5958 00003FD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5959 00003FDC 803804                  	cmp byte [rax], T_closure
  5960 00003FDF 0F852D210000            	jne L_error_non_closure
  5961 00003FE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5962 00003FE8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5963 00003FEB 50                      	push rax
  5964 00003FEC 6A01                    	push 1	; arg count
  5965 00003FEE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5966 00003FF3 E8C3210000              	call malloc
  5967 00003FF8 50                      	push rax
  5968 00003FF9 BF08000000              	mov rdi, 8 * 1	; new rib
  5969 00003FFE E8B8210000              	call malloc
  5970 00004003 50                      	push rax
  5971 00004004 BF30000000              	mov rdi, 8 * 6	; extended env
  5972 00004009 E8AD210000              	call malloc
  5973 0000400E 488B7D10                	mov rdi, ENV
  5974 00004012 BE00000000              	mov rsi, 0
  5975 00004017 BA01000000              	mov rdx, 1
  5976                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
  5977 0000401C 4883FE05                	cmp rsi, 5
  5978 00004020 7410                    	je .L_lambda_simple_env_end_0058
  5979 00004022 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5980 00004026 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5981 0000402A 48FFC6                  	inc rsi
  5982 0000402D 48FFC2                  	inc rdx
  5983 00004030 EBEA                    	jmp .L_lambda_simple_env_loop_0058
  5984                                  .L_lambda_simple_env_end_0058:
  5985 00004032 5B                      	pop rbx
  5986 00004033 BE00000000              	mov rsi, 0
  5987                                  .L_lambda_simple_params_loop_0058:	; copy params
  5988 00004038 4883FE01                	cmp rsi, 1
  5989 0000403C 740E                    	je .L_lambda_simple_params_end_0058
  5990 0000403E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5991 00004043 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5992 00004047 48FFC6                  	inc rsi
  5993 0000404A EBEC                    	jmp .L_lambda_simple_params_loop_0058
  5994                                  .L_lambda_simple_params_end_0058:
  5995 0000404C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5996 0000404F 4889C3                  	mov rbx, rax
  5997 00004052 58                      	pop rax
  5998 00004053 C60004                  	mov byte [rax], T_closure
  5999 00004056 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6000 0000405A 48C74009[67400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
  6001 00004062 E982010000              	jmp .L_lambda_simple_end_0058
  6002                                  .L_lambda_simple_code_0058:	; lambda-simple body
  6003 00004067 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6004 0000406D 740B                    	je .L_lambda_simple_arity_check_ok_0058
  6005 0000406F FF742410                	push qword [rsp + 8 * 2]
  6006 00004073 6A01                    	push 1
  6007 00004075 E9FA200000              	jmp L_error_incorrect_arity_simple
  6008                                  .L_lambda_simple_arity_check_ok_0058:
  6009 0000407A C8000000                	enter 0, 0
  6010                                  	; preparing a tail-call
  6011 0000407E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6012 00004083 E833210000              	call malloc
  6013 00004088 50                      	push rax
  6014 00004089 BF08000000              	mov rdi, 8 * 1	; new rib
  6015 0000408E E828210000              	call malloc
  6016 00004093 50                      	push rax
  6017 00004094 BF38000000              	mov rdi, 8 * 7	; extended env
  6018 00004099 E81D210000              	call malloc
  6019 0000409E 488B7D10                	mov rdi, ENV
  6020 000040A2 BE00000000              	mov rsi, 0
  6021 000040A7 BA01000000              	mov rdx, 1
  6022                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
  6023 000040AC 4883FE06                	cmp rsi, 6
  6024 000040B0 7410                    	je .L_lambda_simple_env_end_0059
  6025 000040B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6026 000040B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6027 000040BA 48FFC6                  	inc rsi
  6028 000040BD 48FFC2                  	inc rdx
  6029 000040C0 EBEA                    	jmp .L_lambda_simple_env_loop_0059
  6030                                  .L_lambda_simple_env_end_0059:
  6031 000040C2 5B                      	pop rbx
  6032 000040C3 BE00000000              	mov rsi, 0
  6033                                  .L_lambda_simple_params_loop_0059:	; copy params
  6034 000040C8 4883FE01                	cmp rsi, 1
  6035 000040CC 740E                    	je .L_lambda_simple_params_end_0059
  6036 000040CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6037 000040D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6038 000040D7 48FFC6                  	inc rsi
  6039 000040DA EBEC                    	jmp .L_lambda_simple_params_loop_0059
  6040                                  .L_lambda_simple_params_end_0059:
  6041 000040DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6042 000040DF 4889C3                  	mov rbx, rax
  6043 000040E2 58                      	pop rax
  6044 000040E3 C60004                  	mov byte [rax], T_closure
  6045 000040E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6046 000040EA 48C74009[F7400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
  6047 000040F2 E9B0000000              	jmp .L_lambda_simple_end_0059
  6048                                  .L_lambda_simple_code_0059:	; lambda-simple body
  6049 000040F7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6050 000040FD 740B                    	je .L_lambda_simple_arity_check_ok_0059
  6051 000040FF FF742410                	push qword [rsp + 8 * 2]
  6052 00004103 6A01                    	push 1
  6053 00004105 E96A200000              	jmp L_error_incorrect_arity_simple
  6054                                  .L_lambda_simple_arity_check_ok_0059:
  6055 0000410A C8000000                	enter 0, 0
  6056 0000410E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6057 00004113 E8A3200000              	call malloc
  6058 00004118 50                      	push rax
  6059 00004119 BF08000000              	mov rdi, 8 * 1	; new rib
  6060 0000411E E898200000              	call malloc
  6061 00004123 50                      	push rax
  6062 00004124 BF40000000              	mov rdi, 8 * 8	; extended env
  6063 00004129 E88D200000              	call malloc
  6064 0000412E 488B7D10                	mov rdi, ENV
  6065 00004132 BE00000000              	mov rsi, 0
  6066 00004137 BA01000000              	mov rdx, 1
  6067                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
  6068 0000413C 4883FE07                	cmp rsi, 7
  6069 00004140 7410                    	je .L_lambda_simple_env_end_005a
  6070 00004142 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6071 00004146 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6072 0000414A 48FFC6                  	inc rsi
  6073 0000414D 48FFC2                  	inc rdx
  6074 00004150 EBEA                    	jmp .L_lambda_simple_env_loop_005a
  6075                                  .L_lambda_simple_env_end_005a:
  6076 00004152 5B                      	pop rbx
  6077 00004153 BE00000000              	mov rsi, 0
  6078                                  .L_lambda_simple_params_loop_005a:	; copy params
  6079 00004158 4883FE01                	cmp rsi, 1
  6080 0000415C 740E                    	je .L_lambda_simple_params_end_005a
  6081 0000415E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6082 00004163 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6083 00004167 48FFC6                  	inc rsi
  6084 0000416A EBEC                    	jmp .L_lambda_simple_params_loop_005a
  6085                                  .L_lambda_simple_params_end_005a:
  6086 0000416C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6087 0000416F 4889C3                  	mov rbx, rax
  6088 00004172 58                      	pop rax
  6089 00004173 C60004                  	mov byte [rax], T_closure
  6090 00004176 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6091 0000417A 48C74009[84410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
  6092 00004182 EB1F                    	jmp .L_lambda_simple_end_005a
  6093                                  .L_lambda_simple_code_005a:	; lambda-simple body
  6094 00004184 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6095 0000418A 740B                    	je .L_lambda_simple_arity_check_ok_005a
  6096 0000418C FF742410                	push qword [rsp + 8 * 2]
  6097 00004190 6A01                    	push 1
  6098 00004192 E9DD1F0000              	jmp L_error_incorrect_arity_simple
  6099                                  .L_lambda_simple_arity_check_ok_005a:
  6100 00004197 C8000000                	enter 0, 0
  6101 0000419B 488B4520                	mov rax, PARAM(0)	; param b
  6102 0000419F C9                      	leave
  6103 000041A0 C21800                  	ret AND_KILL_FRAME(1)
  6104                                  .L_lambda_simple_end_005a:	; new closure is in rax
  6105 000041A3 C9                      	leave
  6106 000041A4 C21800                  	ret AND_KILL_FRAME(1)
  6107                                  .L_lambda_simple_end_0059:	; new closure is in rax
  6108 000041A7 50                      	push rax
  6109 000041A8 6A01                    	push 1	; arg count
  6110 000041AA 488B4520                	mov rax, PARAM(0)	; param p
  6111 000041AE 803804                  	cmp byte [rax], T_closure
  6112 000041B1 0F855B1F0000            	jne L_error_non_closure
  6113 000041B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6114 000041BA FF7508                  	push qword [rbp + 8 * 1]
  6115                                   ; old ret addr
  6116 000041BD 5D                      	pop rbp
  6117                                  ; restore the old rbp
  6118 000041BE BB01000000              	mov rbx, 1
  6119 000041C3 4883C303                	add rbx, 3
  6120 000041C7 488B7D10                	mov rdi, qword [rbp + 8*2]
  6121                                  .L_tc_recycle_frame_loop_0021:
  6122 000041CB 4883FB00                	cmp rbx, 0
  6123 000041CF 7411                    je .L_tc_recycle_frame_done_0021
  6124 000041D1 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6125 000041D5 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6126 000041DA 48FFCF                  	dec rdi
  6127 000041DD 48FFCB                  	dec rbx
  6128 000041E0 EBE9                    jmp .L_tc_recycle_frame_loop_0021
  6129                                  .L_tc_recycle_frame_done_0021:
  6130 000041E2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6131 000041E5 C9                      	leave
  6132 000041E6 C21800                  	ret AND_KILL_FRAME(1)
  6133                                  .L_lambda_simple_end_0058:	; new closure is in rax
  6134 000041E9 803804                  	cmp byte [rax], T_closure
  6135 000041EC 0F85201F0000            	jne L_error_non_closure
  6136 000041F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6137 000041F5 FF7508                  	push qword [rbp + 8 * 1]
  6138                                   ; old ret addr
  6139 000041F8 5D                      	pop rbp
  6140                                  ; restore the old rbp
  6141 000041F9 BB01000000              	mov rbx, 1
  6142 000041FE 4883C303                	add rbx, 3
  6143 00004202 488B7D10                	mov rdi, qword [rbp + 8*2]
  6144                                  .L_tc_recycle_frame_loop_001a:
  6145 00004206 4883FB00                	cmp rbx, 0
  6146 0000420A 7411                    je .L_tc_recycle_frame_done_001a
  6147 0000420C 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6148 00004210 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6149 00004215 48FFCF                  	dec rdi
  6150 00004218 48FFCB                  	dec rbx
  6151 0000421B EBE9                    jmp .L_tc_recycle_frame_loop_001a
  6152                                  .L_tc_recycle_frame_done_001a:
  6153 0000421D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6154 00004220 C9                      	leave
  6155 00004221 C21800                  	ret AND_KILL_FRAME(1)
  6156                                  .L_lambda_simple_end_0043:	; new closure is in rax
  6157 00004224 50                      	push rax
  6158 00004225 6A01                    	push 1	; arg count
  6159 00004227 488B4520                	mov rax, PARAM(0)	; param b
  6160 0000422B 803804                  	cmp byte [rax], T_closure
  6161 0000422E 0F85DE1E0000            	jne L_error_non_closure
  6162 00004234 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6163 00004237 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6164 0000423A 803804                  	cmp byte [rax], T_closure
  6165 0000423D 0F85CF1E0000            	jne L_error_non_closure
  6166 00004243 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6167 00004246 FF7508                  	push qword [rbp + 8 * 1]
  6168                                   ; old ret addr
  6169 00004249 5D                      	pop rbp
  6170                                  ; restore the old rbp
  6171 0000424A BB01000000              	mov rbx, 1
  6172 0000424F 4883C303                	add rbx, 3
  6173 00004253 488B7D10                	mov rdi, qword [rbp + 8*2]
  6174                                  .L_tc_recycle_frame_loop_0019:
  6175 00004257 4883FB00                	cmp rbx, 0
  6176 0000425B 7411                    je .L_tc_recycle_frame_done_0019
  6177 0000425D 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6178 00004261 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6179 00004266 48FFCF                  	dec rdi
  6180 00004269 48FFCB                  	dec rbx
  6181 0000426C EBE9                    jmp .L_tc_recycle_frame_loop_0019
  6182                                  .L_tc_recycle_frame_done_0019:
  6183 0000426E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6184 00004271 C9                      	leave
  6185 00004272 C21800                  	ret AND_KILL_FRAME(1)
  6186                                  .L_lambda_simple_end_0042:	; new closure is in rax
  6187 00004275 C9                      	leave
  6188 00004276 C21800                  	ret AND_KILL_FRAME(1)
  6189                                  .L_lambda_simple_end_0041:	; new closure is in rax
  6190 00004279 803804                  	cmp byte [rax], T_closure
  6191 0000427C 0F85901E0000            	jne L_error_non_closure
  6192 00004282 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6193 00004285 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6194 00004288 803804                  	cmp byte [rax], T_closure
  6195 0000428B 0F85811E0000            	jne L_error_non_closure
  6196 00004291 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6197 00004294 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6198 00004297 50                      	push rax
  6199 00004298 6A01                    	push 1	; arg count
  6200 0000429A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6201 0000429F E8171F0000              	call malloc
  6202 000042A4 50                      	push rax
  6203 000042A5 BF08000000              	mov rdi, 8 * 1	; new rib
  6204 000042AA E80C1F0000              	call malloc
  6205 000042AF 50                      	push rax
  6206 000042B0 BF18000000              	mov rdi, 8 * 3	; extended env
  6207 000042B5 E8011F0000              	call malloc
  6208 000042BA 488B7D10                	mov rdi, ENV
  6209 000042BE BE00000000              	mov rsi, 0
  6210 000042C3 BA01000000              	mov rdx, 1
  6211                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
  6212 000042C8 4883FE02                	cmp rsi, 2
  6213 000042CC 7410                    	je .L_lambda_simple_env_end_005b
  6214 000042CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6215 000042D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6216 000042D6 48FFC6                  	inc rsi
  6217 000042D9 48FFC2                  	inc rdx
  6218 000042DC EBEA                    	jmp .L_lambda_simple_env_loop_005b
  6219                                  .L_lambda_simple_env_end_005b:
  6220 000042DE 5B                      	pop rbx
  6221 000042DF BE00000000              	mov rsi, 0
  6222                                  .L_lambda_simple_params_loop_005b:	; copy params
  6223 000042E4 4883FE01                	cmp rsi, 1
  6224 000042E8 740E                    	je .L_lambda_simple_params_end_005b
  6225 000042EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6226 000042EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6227 000042F3 48FFC6                  	inc rsi
  6228 000042F6 EBEC                    	jmp .L_lambda_simple_params_loop_005b
  6229                                  .L_lambda_simple_params_end_005b:
  6230 000042F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6231 000042FB 4889C3                  	mov rbx, rax
  6232 000042FE 58                      	pop rax
  6233 000042FF C60004                  	mov byte [rax], T_closure
  6234 00004302 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6235 00004306 48C74009[13430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
  6236 0000430E E957030000              	jmp .L_lambda_simple_end_005b
  6237                                  .L_lambda_simple_code_005b:	; lambda-simple body
  6238 00004313 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6239 00004319 740B                    	je .L_lambda_simple_arity_check_ok_005b
  6240 0000431B FF742410                	push qword [rsp + 8 * 2]
  6241 0000431F 6A01                    	push 1
  6242 00004321 E94E1E0000              	jmp L_error_incorrect_arity_simple
  6243                                  .L_lambda_simple_arity_check_ok_005b:
  6244 00004326 C8000000                	enter 0, 0
  6245                                  	; preparing a tail-call
  6246 0000432A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6247 0000432F E8871E0000              	call malloc
  6248 00004334 50                      	push rax
  6249 00004335 BF08000000              	mov rdi, 8 * 1	; new rib
  6250 0000433A E87C1E0000              	call malloc
  6251 0000433F 50                      	push rax
  6252 00004340 BF20000000              	mov rdi, 8 * 4	; extended env
  6253 00004345 E8711E0000              	call malloc
  6254 0000434A 488B7D10                	mov rdi, ENV
  6255 0000434E BE00000000              	mov rsi, 0
  6256 00004353 BA01000000              	mov rdx, 1
  6257                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
  6258 00004358 4883FE03                	cmp rsi, 3
  6259 0000435C 7410                    	je .L_lambda_simple_env_end_005c
  6260 0000435E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6261 00004362 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6262 00004366 48FFC6                  	inc rsi
  6263 00004369 48FFC2                  	inc rdx
  6264 0000436C EBEA                    	jmp .L_lambda_simple_env_loop_005c
  6265                                  .L_lambda_simple_env_end_005c:
  6266 0000436E 5B                      	pop rbx
  6267 0000436F BE00000000              	mov rsi, 0
  6268                                  .L_lambda_simple_params_loop_005c:	; copy params
  6269 00004374 4883FE01                	cmp rsi, 1
  6270 00004378 740E                    	je .L_lambda_simple_params_end_005c
  6271 0000437A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6272 0000437F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6273 00004383 48FFC6                  	inc rsi
  6274 00004386 EBEC                    	jmp .L_lambda_simple_params_loop_005c
  6275                                  .L_lambda_simple_params_end_005c:
  6276 00004388 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6277 0000438B 4889C3                  	mov rbx, rax
  6278 0000438E 58                      	pop rax
  6279 0000438F C60004                  	mov byte [rax], T_closure
  6280 00004392 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6281 00004396 48C74009[A3430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
  6282 0000439E E9B6000000              	jmp .L_lambda_simple_end_005c
  6283                                  .L_lambda_simple_code_005c:	; lambda-simple body
  6284 000043A3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6285 000043A9 740B                    	je .L_lambda_simple_arity_check_ok_005c
  6286 000043AB FF742410                	push qword [rsp + 8 * 2]
  6287 000043AF 6A01                    	push 1
  6288 000043B1 E9BE1D0000              	jmp L_error_incorrect_arity_simple
  6289                                  .L_lambda_simple_arity_check_ok_005c:
  6290 000043B6 C8000000                	enter 0, 0
  6291 000043BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6292 000043BF E8F71D0000              	call malloc
  6293 000043C4 50                      	push rax
  6294 000043C5 BF08000000              	mov rdi, 8 * 1	; new rib
  6295 000043CA E8EC1D0000              	call malloc
  6296 000043CF 50                      	push rax
  6297 000043D0 BF28000000              	mov rdi, 8 * 5	; extended env
  6298 000043D5 E8E11D0000              	call malloc
  6299 000043DA 488B7D10                	mov rdi, ENV
  6300 000043DE BE00000000              	mov rsi, 0
  6301 000043E3 BA01000000              	mov rdx, 1
  6302                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
  6303 000043E8 4883FE04                	cmp rsi, 4
  6304 000043EC 7410                    	je .L_lambda_simple_env_end_005d
  6305 000043EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6306 000043F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6307 000043F6 48FFC6                  	inc rsi
  6308 000043F9 48FFC2                  	inc rdx
  6309 000043FC EBEA                    	jmp .L_lambda_simple_env_loop_005d
  6310                                  .L_lambda_simple_env_end_005d:
  6311 000043FE 5B                      	pop rbx
  6312 000043FF BE00000000              	mov rsi, 0
  6313                                  .L_lambda_simple_params_loop_005d:	; copy params
  6314 00004404 4883FE01                	cmp rsi, 1
  6315 00004408 740E                    	je .L_lambda_simple_params_end_005d
  6316 0000440A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6317 0000440F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6318 00004413 48FFC6                  	inc rsi
  6319 00004416 EBEC                    	jmp .L_lambda_simple_params_loop_005d
  6320                                  .L_lambda_simple_params_end_005d:
  6321 00004418 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6322 0000441B 4889C3                  	mov rbx, rax
  6323 0000441E 58                      	pop rax
  6324 0000441F C60004                  	mov byte [rax], T_closure
  6325 00004422 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6326 00004426 48C74009[30440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
  6327 0000442E EB25                    	jmp .L_lambda_simple_end_005d
  6328                                  .L_lambda_simple_code_005d:	; lambda-simple body
  6329 00004430 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6330 00004436 740B                    	je .L_lambda_simple_arity_check_ok_005d
  6331 00004438 FF742410                	push qword [rsp + 8 * 2]
  6332 0000443C 6A01                    	push 1
  6333 0000443E E9311D0000              	jmp L_error_incorrect_arity_simple
  6334                                  .L_lambda_simple_arity_check_ok_005d:
  6335 00004443 C8000000                	enter 0, 0
  6336 00004447 488B4510                	mov rax, ENV
  6337 0000444B 488B00                  	mov rax, qword [rax + 8 * 0]
  6338 0000444E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  6339 00004451 C9                      	leave
  6340 00004452 C21800                  	ret AND_KILL_FRAME(1)
  6341                                  .L_lambda_simple_end_005d:	; new closure is in rax
  6342 00004455 C9                      	leave
  6343 00004456 C21800                  	ret AND_KILL_FRAME(1)
  6344                                  .L_lambda_simple_end_005c:	; new closure is in rax
  6345 00004459 50                      	push rax
  6346 0000445A 6A01                    	push 1	; arg count
  6347                                  	; preparing a non-tail-call
  6348 0000445C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6349 00004461 E8551D0000              	call malloc
  6350 00004466 50                      	push rax
  6351 00004467 BF08000000              	mov rdi, 8 * 1	; new rib
  6352 0000446C E84A1D0000              	call malloc
  6353 00004471 50                      	push rax
  6354 00004472 BF20000000              	mov rdi, 8 * 4	; extended env
  6355 00004477 E83F1D0000              	call malloc
  6356 0000447C 488B7D10                	mov rdi, ENV
  6357 00004480 BE00000000              	mov rsi, 0
  6358 00004485 BA01000000              	mov rdx, 1
  6359                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
  6360 0000448A 4883FE03                	cmp rsi, 3
  6361 0000448E 7410                    	je .L_lambda_simple_env_end_005e
  6362 00004490 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6363 00004494 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6364 00004498 48FFC6                  	inc rsi
  6365 0000449B 48FFC2                  	inc rdx
  6366 0000449E EBEA                    	jmp .L_lambda_simple_env_loop_005e
  6367                                  .L_lambda_simple_env_end_005e:
  6368 000044A0 5B                      	pop rbx
  6369 000044A1 BE00000000              	mov rsi, 0
  6370                                  .L_lambda_simple_params_loop_005e:	; copy params
  6371 000044A6 4883FE01                	cmp rsi, 1
  6372 000044AA 740E                    	je .L_lambda_simple_params_end_005e
  6373 000044AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6374 000044B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6375 000044B5 48FFC6                  	inc rsi
  6376 000044B8 EBEC                    	jmp .L_lambda_simple_params_loop_005e
  6377                                  .L_lambda_simple_params_end_005e:
  6378 000044BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6379 000044BD 4889C3                  	mov rbx, rax
  6380 000044C0 58                      	pop rax
  6381 000044C1 C60004                  	mov byte [rax], T_closure
  6382 000044C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6383 000044C8 48C74009[D5440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
  6384 000044D0 E944010000              	jmp .L_lambda_simple_end_005e
  6385                                  .L_lambda_simple_code_005e:	; lambda-simple body
  6386 000044D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6387 000044DB 740B                    	je .L_lambda_simple_arity_check_ok_005e
  6388 000044DD FF742410                	push qword [rsp + 8 * 2]
  6389 000044E1 6A01                    	push 1
  6390 000044E3 E98C1C0000              	jmp L_error_incorrect_arity_simple
  6391                                  .L_lambda_simple_arity_check_ok_005e:
  6392 000044E8 C8000000                	enter 0, 0
  6393 000044EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6394 000044F1 E8C51C0000              	call malloc
  6395 000044F6 50                      	push rax
  6396 000044F7 BF08000000              	mov rdi, 8 * 1	; new rib
  6397 000044FC E8BA1C0000              	call malloc
  6398 00004501 50                      	push rax
  6399 00004502 BF28000000              	mov rdi, 8 * 5	; extended env
  6400 00004507 E8AF1C0000              	call malloc
  6401 0000450C 488B7D10                	mov rdi, ENV
  6402 00004510 BE00000000              	mov rsi, 0
  6403 00004515 BA01000000              	mov rdx, 1
  6404                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
  6405 0000451A 4883FE04                	cmp rsi, 4
  6406 0000451E 7410                    	je .L_lambda_simple_env_end_005f
  6407 00004520 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6408 00004524 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6409 00004528 48FFC6                  	inc rsi
  6410 0000452B 48FFC2                  	inc rdx
  6411 0000452E EBEA                    	jmp .L_lambda_simple_env_loop_005f
  6412                                  .L_lambda_simple_env_end_005f:
  6413 00004530 5B                      	pop rbx
  6414 00004531 BE00000000              	mov rsi, 0
  6415                                  .L_lambda_simple_params_loop_005f:	; copy params
  6416 00004536 4883FE01                	cmp rsi, 1
  6417 0000453A 740E                    	je .L_lambda_simple_params_end_005f
  6418 0000453C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6419 00004541 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6420 00004545 48FFC6                  	inc rsi
  6421 00004548 EBEC                    	jmp .L_lambda_simple_params_loop_005f
  6422                                  .L_lambda_simple_params_end_005f:
  6423 0000454A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6424 0000454D 4889C3                  	mov rbx, rax
  6425 00004550 58                      	pop rax
  6426 00004551 C60004                  	mov byte [rax], T_closure
  6427 00004554 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6428 00004558 48C74009[65450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
  6429 00004560 E9B0000000              	jmp .L_lambda_simple_end_005f
  6430                                  .L_lambda_simple_code_005f:	; lambda-simple body
  6431 00004565 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6432 0000456B 740B                    	je .L_lambda_simple_arity_check_ok_005f
  6433 0000456D FF742410                	push qword [rsp + 8 * 2]
  6434 00004571 6A01                    	push 1
  6435 00004573 E9FC1B0000              	jmp L_error_incorrect_arity_simple
  6436                                  .L_lambda_simple_arity_check_ok_005f:
  6437 00004578 C8000000                	enter 0, 0
  6438 0000457C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6439 00004581 E8351C0000              	call malloc
  6440 00004586 50                      	push rax
  6441 00004587 BF08000000              	mov rdi, 8 * 1	; new rib
  6442 0000458C E82A1C0000              	call malloc
  6443 00004591 50                      	push rax
  6444 00004592 BF30000000              	mov rdi, 8 * 6	; extended env
  6445 00004597 E81F1C0000              	call malloc
  6446 0000459C 488B7D10                	mov rdi, ENV
  6447 000045A0 BE00000000              	mov rsi, 0
  6448 000045A5 BA01000000              	mov rdx, 1
  6449                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
  6450 000045AA 4883FE05                	cmp rsi, 5
  6451 000045AE 7410                    	je .L_lambda_simple_env_end_0060
  6452 000045B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6453 000045B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6454 000045B8 48FFC6                  	inc rsi
  6455 000045BB 48FFC2                  	inc rdx
  6456 000045BE EBEA                    	jmp .L_lambda_simple_env_loop_0060
  6457                                  .L_lambda_simple_env_end_0060:
  6458 000045C0 5B                      	pop rbx
  6459 000045C1 BE00000000              	mov rsi, 0
  6460                                  .L_lambda_simple_params_loop_0060:	; copy params
  6461 000045C6 4883FE01                	cmp rsi, 1
  6462 000045CA 740E                    	je .L_lambda_simple_params_end_0060
  6463 000045CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6464 000045D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6465 000045D5 48FFC6                  	inc rsi
  6466 000045D8 EBEC                    	jmp .L_lambda_simple_params_loop_0060
  6467                                  .L_lambda_simple_params_end_0060:
  6468 000045DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6469 000045DD 4889C3                  	mov rbx, rax
  6470 000045E0 58                      	pop rax
  6471 000045E1 C60004                  	mov byte [rax], T_closure
  6472 000045E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6473 000045E8 48C74009[F2450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
  6474 000045F0 EB1F                    	jmp .L_lambda_simple_end_0060
  6475                                  .L_lambda_simple_code_0060:	; lambda-simple body
  6476 000045F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6477 000045F8 740B                    	je .L_lambda_simple_arity_check_ok_0060
  6478 000045FA FF742410                	push qword [rsp + 8 * 2]
  6479 000045FE 6A01                    	push 1
  6480 00004600 E96F1B0000              	jmp L_error_incorrect_arity_simple
  6481                                  .L_lambda_simple_arity_check_ok_0060:
  6482 00004605 C8000000                	enter 0, 0
  6483 00004609 488B4520                	mov rax, PARAM(0)	; param y
  6484 0000460D C9                      	leave
  6485 0000460E C21800                  	ret AND_KILL_FRAME(1)
  6486                                  .L_lambda_simple_end_0060:	; new closure is in rax
  6487 00004611 C9                      	leave
  6488 00004612 C21800                  	ret AND_KILL_FRAME(1)
  6489                                  .L_lambda_simple_end_005f:	; new closure is in rax
  6490 00004615 C9                      	leave
  6491 00004616 C21800                  	ret AND_KILL_FRAME(1)
  6492                                  .L_lambda_simple_end_005e:	; new closure is in rax
  6493 00004619 50                      	push rax
  6494 0000461A 6A01                    	push 1	; arg count
  6495 0000461C 488B4520                	mov rax, PARAM(0)	; param n
  6496 00004620 803804                  	cmp byte [rax], T_closure
  6497 00004623 0F85E91A0000            	jne L_error_non_closure
  6498 00004629 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6499 0000462C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6500 0000462F 803804                  	cmp byte [rax], T_closure
  6501 00004632 0F85DA1A0000            	jne L_error_non_closure
  6502 00004638 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6503 0000463B FF7508                  	push qword [rbp + 8 * 1]
  6504                                   ; old ret addr
  6505 0000463E 5D                      	pop rbp
  6506                                  ; restore the old rbp
  6507 0000463F BB01000000              	mov rbx, 1
  6508 00004644 4883C303                	add rbx, 3
  6509 00004648 488B7D10                	mov rdi, qword [rbp + 8*2]
  6510                                  .L_tc_recycle_frame_loop_0022:
  6511 0000464C 4883FB00                	cmp rbx, 0
  6512 00004650 7411                    je .L_tc_recycle_frame_done_0022
  6513 00004652 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  6514 00004656 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  6515 0000465B 48FFCF                  	dec rdi
  6516 0000465E 48FFCB                  	dec rbx
  6517 00004661 EBE9                    jmp .L_tc_recycle_frame_loop_0022
  6518                                  .L_tc_recycle_frame_done_0022:
  6519 00004663 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6520 00004666 C9                      	leave
  6521 00004667 C21800                  	ret AND_KILL_FRAME(1)
  6522                                  .L_lambda_simple_end_005b:	; new closure is in rax
  6523 0000466A 803804                  	cmp byte [rax], T_closure
  6524 0000466D 0F859F1A0000            	jne L_error_non_closure
  6525 00004673 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6526 00004676 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6527 00004679 50                      	push rax
  6528 0000467A 6A01                    	push 1	; arg count
  6529                                  	; preparing a non-tail-call
  6530                                  	; preparing a non-tail-call
  6531                                  	; preparing a non-tail-call
  6532 0000467C 488B4520                	mov rax, PARAM(0)	; param b
  6533 00004680 50                      	push rax
  6534 00004681 6A01                    	push 1	; arg count
  6535                                  	; preparing a non-tail-call
  6536 00004683 488B4510                	mov rax, ENV
  6537 00004687 488B00                  	mov rax, qword [rax + 8 * 0]
  6538 0000468A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  6539 0000468D 50                      	push rax
  6540 0000468E 6A01                    	push 1	; arg count
  6541 00004690 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6542 00004695 E8211B0000              	call malloc
  6543 0000469A 50                      	push rax
  6544 0000469B BF08000000              	mov rdi, 8 * 1	; new rib
  6545 000046A0 E8161B0000              	call malloc
  6546 000046A5 50                      	push rax
  6547 000046A6 BF18000000              	mov rdi, 8 * 3	; extended env
  6548 000046AB E80B1B0000              	call malloc
  6549 000046B0 488B7D10                	mov rdi, ENV
  6550 000046B4 BE00000000              	mov rsi, 0
  6551 000046B9 BA01000000              	mov rdx, 1
  6552                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
  6553 000046BE 4883FE02                	cmp rsi, 2
  6554 000046C2 7410                    	je .L_lambda_simple_env_end_0061
  6555 000046C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6556 000046C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6557 000046CC 48FFC6                  	inc rsi
  6558 000046CF 48FFC2                  	inc rdx
  6559 000046D2 EBEA                    	jmp .L_lambda_simple_env_loop_0061
  6560                                  .L_lambda_simple_env_end_0061:
  6561 000046D4 5B                      	pop rbx
  6562 000046D5 BE00000000              	mov rsi, 0
  6563                                  .L_lambda_simple_params_loop_0061:	; copy params
  6564 000046DA 4883FE01                	cmp rsi, 1
  6565 000046DE 740E                    	je .L_lambda_simple_params_end_0061
  6566 000046E0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6567 000046E5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6568 000046E9 48FFC6                  	inc rsi
  6569 000046EC EBEC                    	jmp .L_lambda_simple_params_loop_0061
  6570                                  .L_lambda_simple_params_end_0061:
  6571 000046EE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6572 000046F1 4889C3                  	mov rbx, rax
  6573 000046F4 58                      	pop rax
  6574 000046F5 C60004                  	mov byte [rax], T_closure
  6575 000046F8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6576 000046FC 48C74009[09470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
  6577 00004704 E90F120000              	jmp .L_lambda_simple_end_0061
  6578                                  .L_lambda_simple_code_0061:	; lambda-simple body
  6579 00004709 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6580 0000470F 740B                    	je .L_lambda_simple_arity_check_ok_0061
  6581 00004711 FF742410                	push qword [rsp + 8 * 2]
  6582 00004715 6A01                    	push 1
  6583 00004717 E9581A0000              	jmp L_error_incorrect_arity_simple
  6584                                  .L_lambda_simple_arity_check_ok_0061:
  6585 0000471C C8000000                	enter 0, 0
  6586 00004720 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6587 00004725 E8911A0000              	call malloc
  6588 0000472A 50                      	push rax
  6589 0000472B BF08000000              	mov rdi, 8 * 1	; new rib
  6590 00004730 E8861A0000              	call malloc
  6591 00004735 50                      	push rax
  6592 00004736 BF20000000              	mov rdi, 8 * 4	; extended env
  6593 0000473B E87B1A0000              	call malloc
  6594 00004740 488B7D10                	mov rdi, ENV
  6595 00004744 BE00000000              	mov rsi, 0
  6596 00004749 BA01000000              	mov rdx, 1
  6597                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
  6598 0000474E 4883FE03                	cmp rsi, 3
  6599 00004752 7410                    	je .L_lambda_simple_env_end_0062
  6600 00004754 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6601 00004758 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6602 0000475C 48FFC6                  	inc rsi
  6603 0000475F 48FFC2                  	inc rdx
  6604 00004762 EBEA                    	jmp .L_lambda_simple_env_loop_0062
  6605                                  .L_lambda_simple_env_end_0062:
  6606 00004764 5B                      	pop rbx
  6607 00004765 BE00000000              	mov rsi, 0
  6608                                  .L_lambda_simple_params_loop_0062:	; copy params
  6609 0000476A 4883FE01                	cmp rsi, 1
  6610 0000476E 740E                    	je .L_lambda_simple_params_end_0062
  6611 00004770 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6612 00004775 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6613 00004779 48FFC6                  	inc rsi
  6614 0000477C EBEC                    	jmp .L_lambda_simple_params_loop_0062
  6615                                  .L_lambda_simple_params_end_0062:
  6616 0000477E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6617 00004781 4889C3                  	mov rbx, rax
  6618 00004784 58                      	pop rax
  6619 00004785 C60004                  	mov byte [rax], T_closure
  6620 00004788 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6621 0000478C 48C74009[99470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
  6622 00004794 E97B110000              	jmp .L_lambda_simple_end_0062
  6623                                  .L_lambda_simple_code_0062:	; lambda-simple body
  6624 00004799 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6625 0000479F 740B                    	je .L_lambda_simple_arity_check_ok_0062
  6626 000047A1 FF742410                	push qword [rsp + 8 * 2]
  6627 000047A5 6A01                    	push 1
  6628 000047A7 E9C8190000              	jmp L_error_incorrect_arity_simple
  6629                                  .L_lambda_simple_arity_check_ok_0062:
  6630 000047AC C8000000                	enter 0, 0
  6631                                  	; preparing a tail-call
  6632 000047B0 488B4510                	mov rax, ENV
  6633 000047B4 488B00                  	mov rax, qword [rax + 8 * 0]
  6634 000047B7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  6635 000047BA 50                      	push rax
  6636 000047BB 6A01                    	push 1	; arg count
  6637                                  	; preparing a non-tail-call
  6638 000047BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6639 000047C2 E8F4190000              	call malloc
  6640 000047C7 50                      	push rax
  6641 000047C8 BF08000000              	mov rdi, 8 * 1	; new rib
  6642 000047CD E8E9190000              	call malloc
  6643 000047D2 50                      	push rax
  6644 000047D3 BF28000000              	mov rdi, 8 * 5	; extended env
  6645 000047D8 E8DE190000              	call malloc
  6646 000047DD 488B7D10                	mov rdi, ENV
  6647 000047E1 BE00000000              	mov rsi, 0
  6648 000047E6 BA01000000              	mov rdx, 1
  6649                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
  6650 000047EB 4883FE04                	cmp rsi, 4
  6651 000047EF 7410                    	je .L_lambda_simple_env_end_0063
  6652 000047F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6653 000047F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6654 000047F9 48FFC6                  	inc rsi
  6655 000047FC 48FFC2                  	inc rdx
  6656 000047FF EBEA                    	jmp .L_lambda_simple_env_loop_0063
  6657                                  .L_lambda_simple_env_end_0063:
  6658 00004801 5B                      	pop rbx
  6659 00004802 BE00000000              	mov rsi, 0
  6660                                  .L_lambda_simple_params_loop_0063:	; copy params
  6661 00004807 4883FE01                	cmp rsi, 1
  6662 0000480B 740E                    	je .L_lambda_simple_params_end_0063
  6663 0000480D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6664 00004812 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6665 00004816 48FFC6                  	inc rsi
  6666 00004819 EBEC                    	jmp .L_lambda_simple_params_loop_0063
  6667                                  .L_lambda_simple_params_end_0063:
  6668 0000481B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6669 0000481E 4889C3                  	mov rbx, rax
  6670 00004821 58                      	pop rax
  6671 00004822 C60004                  	mov byte [rax], T_closure
  6672 00004825 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6673 00004829 48C74009[36480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
  6674 00004831 E98D100000              	jmp .L_lambda_simple_end_0063
  6675                                  .L_lambda_simple_code_0063:	; lambda-simple body
  6676 00004836 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6677 0000483C 740B                    	je .L_lambda_simple_arity_check_ok_0063
  6678 0000483E FF742410                	push qword [rsp + 8 * 2]
  6679 00004842 6A01                    	push 1
  6680 00004844 E92B190000              	jmp L_error_incorrect_arity_simple
  6681                                  .L_lambda_simple_arity_check_ok_0063:
  6682 00004849 C8000000                	enter 0, 0
  6683                                  	; preparing a tail-call
  6684                                  	; preparing a non-tail-call
  6685                                  	; preparing a non-tail-call
  6686 0000484D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6687 00004852 E864190000              	call malloc
  6688 00004857 50                      	push rax
  6689 00004858 BF08000000              	mov rdi, 8 * 1	; new rib
  6690 0000485D E859190000              	call malloc
  6691 00004862 50                      	push rax
  6692 00004863 BF30000000              	mov rdi, 8 * 6	; extended env
  6693 00004868 E84E190000              	call malloc
  6694 0000486D 488B7D10                	mov rdi, ENV
  6695 00004871 BE00000000              	mov rsi, 0
  6696 00004876 BA01000000              	mov rdx, 1
  6697                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
  6698 0000487B 4883FE05                	cmp rsi, 5
  6699 0000487F 7410                    	je .L_lambda_simple_env_end_0064
  6700 00004881 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6701 00004885 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6702 00004889 48FFC6                  	inc rsi
  6703 0000488C 48FFC2                  	inc rdx
  6704 0000488F EBEA                    	jmp .L_lambda_simple_env_loop_0064
  6705                                  .L_lambda_simple_env_end_0064:
  6706 00004891 5B                      	pop rbx
  6707 00004892 BE00000000              	mov rsi, 0
  6708                                  .L_lambda_simple_params_loop_0064:	; copy params
  6709 00004897 4883FE01                	cmp rsi, 1
  6710 0000489B 740E                    	je .L_lambda_simple_params_end_0064
  6711 0000489D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6712 000048A2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6713 000048A6 48FFC6                  	inc rsi
  6714 000048A9 EBEC                    	jmp .L_lambda_simple_params_loop_0064
  6715                                  .L_lambda_simple_params_end_0064:
  6716 000048AB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6717 000048AE 4889C3                  	mov rbx, rax
  6718 000048B1 58                      	pop rax
  6719 000048B2 C60004                  	mov byte [rax], T_closure
  6720 000048B5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6721 000048B9 48C74009[C6480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
  6722 000048C1 E9B0000000              	jmp .L_lambda_simple_end_0064
  6723                                  .L_lambda_simple_code_0064:	; lambda-simple body
  6724 000048C6 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6725 000048CC 740B                    	je .L_lambda_simple_arity_check_ok_0064
  6726 000048CE FF742410                	push qword [rsp + 8 * 2]
  6727 000048D2 6A01                    	push 1
  6728 000048D4 E99B180000              	jmp L_error_incorrect_arity_simple
  6729                                  .L_lambda_simple_arity_check_ok_0064:
  6730 000048D9 C8000000                	enter 0, 0
  6731 000048DD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6732 000048E2 E8D4180000              	call malloc
  6733 000048E7 50                      	push rax
  6734 000048E8 BF08000000              	mov rdi, 8 * 1	; new rib
  6735 000048ED E8C9180000              	call malloc
  6736 000048F2 50                      	push rax
  6737 000048F3 BF38000000              	mov rdi, 8 * 7	; extended env
  6738 000048F8 E8BE180000              	call malloc
  6739 000048FD 488B7D10                	mov rdi, ENV
  6740 00004901 BE00000000              	mov rsi, 0
  6741 00004906 BA01000000              	mov rdx, 1
  6742                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
  6743 0000490B 4883FE06                	cmp rsi, 6
  6744 0000490F 7410                    	je .L_lambda_simple_env_end_0065
  6745 00004911 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6746 00004915 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6747 00004919 48FFC6                  	inc rsi
  6748 0000491C 48FFC2                  	inc rdx
  6749 0000491F EBEA                    	jmp .L_lambda_simple_env_loop_0065
  6750                                  .L_lambda_simple_env_end_0065:
  6751 00004921 5B                      	pop rbx
  6752 00004922 BE00000000              	mov rsi, 0
  6753                                  .L_lambda_simple_params_loop_0065:	; copy params
  6754 00004927 4883FE01                	cmp rsi, 1
  6755 0000492B 740E                    	je .L_lambda_simple_params_end_0065
  6756 0000492D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6757 00004932 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6758 00004936 48FFC6                  	inc rsi
  6759 00004939 EBEC                    	jmp .L_lambda_simple_params_loop_0065
  6760                                  .L_lambda_simple_params_end_0065:
  6761 0000493B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6762 0000493E 4889C3                  	mov rbx, rax
  6763 00004941 58                      	pop rax
  6764 00004942 C60004                  	mov byte [rax], T_closure
  6765 00004945 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6766 00004949 48C74009[53490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
  6767 00004951 EB1F                    	jmp .L_lambda_simple_end_0065
  6768                                  .L_lambda_simple_code_0065:	; lambda-simple body
  6769 00004953 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6770 00004959 740B                    	je .L_lambda_simple_arity_check_ok_0065
  6771 0000495B FF742410                	push qword [rsp + 8 * 2]
  6772 0000495F 6A01                    	push 1
  6773 00004961 E90E180000              	jmp L_error_incorrect_arity_simple
  6774                                  .L_lambda_simple_arity_check_ok_0065:
  6775 00004966 C8000000                	enter 0, 0
  6776 0000496A 488B4520                	mov rax, PARAM(0)	; param y
  6777 0000496E C9                      	leave
  6778 0000496F C21800                  	ret AND_KILL_FRAME(1)
  6779                                  .L_lambda_simple_end_0065:	; new closure is in rax
  6780 00004972 C9                      	leave
  6781 00004973 C21800                  	ret AND_KILL_FRAME(1)
  6782                                  .L_lambda_simple_end_0064:	; new closure is in rax
  6783 00004976 50                      	push rax
  6784 00004977 6A01                    	push 1	; arg count
  6785                                  	; preparing a non-tail-call
  6786 00004979 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6787 0000497E E838180000              	call malloc
  6788 00004983 50                      	push rax
  6789 00004984 BF08000000              	mov rdi, 8 * 1	; new rib
  6790 00004989 E82D180000              	call malloc
  6791 0000498E 50                      	push rax
  6792 0000498F BF30000000              	mov rdi, 8 * 6	; extended env
  6793 00004994 E822180000              	call malloc
  6794 00004999 488B7D10                	mov rdi, ENV
  6795 0000499D BE00000000              	mov rsi, 0
  6796 000049A2 BA01000000              	mov rdx, 1
  6797                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
  6798 000049A7 4883FE05                	cmp rsi, 5
  6799 000049AB 7410                    	je .L_lambda_simple_env_end_0066
  6800 000049AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6801 000049B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6802 000049B5 48FFC6                  	inc rsi
  6803 000049B8 48FFC2                  	inc rdx
  6804 000049BB EBEA                    	jmp .L_lambda_simple_env_loop_0066
  6805                                  .L_lambda_simple_env_end_0066:
  6806 000049BD 5B                      	pop rbx
  6807 000049BE BE00000000              	mov rsi, 0
  6808                                  .L_lambda_simple_params_loop_0066:	; copy params
  6809 000049C3 4883FE01                	cmp rsi, 1
  6810 000049C7 740E                    	je .L_lambda_simple_params_end_0066
  6811 000049C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6812 000049CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6813 000049D2 48FFC6                  	inc rsi
  6814 000049D5 EBEC                    	jmp .L_lambda_simple_params_loop_0066
  6815                                  .L_lambda_simple_params_end_0066:
  6816 000049D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6817 000049DA 4889C3                  	mov rbx, rax
  6818 000049DD 58                      	pop rax
  6819 000049DE C60004                  	mov byte [rax], T_closure
  6820 000049E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6821 000049E5 48C74009[F2490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
  6822 000049ED E9B0000000              	jmp .L_lambda_simple_end_0066
  6823                                  .L_lambda_simple_code_0066:	; lambda-simple body
  6824 000049F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6825 000049F8 740B                    	je .L_lambda_simple_arity_check_ok_0066
  6826 000049FA FF742410                	push qword [rsp + 8 * 2]
  6827 000049FE 6A01                    	push 1
  6828 00004A00 E96F170000              	jmp L_error_incorrect_arity_simple
  6829                                  .L_lambda_simple_arity_check_ok_0066:
  6830 00004A05 C8000000                	enter 0, 0
  6831 00004A09 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6832 00004A0E E8A8170000              	call malloc
  6833 00004A13 50                      	push rax
  6834 00004A14 BF08000000              	mov rdi, 8 * 1	; new rib
  6835 00004A19 E89D170000              	call malloc
  6836 00004A1E 50                      	push rax
  6837 00004A1F BF38000000              	mov rdi, 8 * 7	; extended env
  6838 00004A24 E892170000              	call malloc
  6839 00004A29 488B7D10                	mov rdi, ENV
  6840 00004A2D BE00000000              	mov rsi, 0
  6841 00004A32 BA01000000              	mov rdx, 1
  6842                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
  6843 00004A37 4883FE06                	cmp rsi, 6
  6844 00004A3B 7410                    	je .L_lambda_simple_env_end_0067
  6845 00004A3D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6846 00004A41 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6847 00004A45 48FFC6                  	inc rsi
  6848 00004A48 48FFC2                  	inc rdx
  6849 00004A4B EBEA                    	jmp .L_lambda_simple_env_loop_0067
  6850                                  .L_lambda_simple_env_end_0067:
  6851 00004A4D 5B                      	pop rbx
  6852 00004A4E BE00000000              	mov rsi, 0
  6853                                  .L_lambda_simple_params_loop_0067:	; copy params
  6854 00004A53 4883FE01                	cmp rsi, 1
  6855 00004A57 740E                    	je .L_lambda_simple_params_end_0067
  6856 00004A59 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6857 00004A5E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6858 00004A62 48FFC6                  	inc rsi
  6859 00004A65 EBEC                    	jmp .L_lambda_simple_params_loop_0067
  6860                                  .L_lambda_simple_params_end_0067:
  6861 00004A67 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6862 00004A6A 4889C3                  	mov rbx, rax
  6863 00004A6D 58                      	pop rax
  6864 00004A6E C60004                  	mov byte [rax], T_closure
  6865 00004A71 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6866 00004A75 48C74009[7F4A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
  6867 00004A7D EB1F                    	jmp .L_lambda_simple_end_0067
  6868                                  .L_lambda_simple_code_0067:	; lambda-simple body
  6869 00004A7F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6870 00004A85 740B                    	je .L_lambda_simple_arity_check_ok_0067
  6871 00004A87 FF742410                	push qword [rsp + 8 * 2]
  6872 00004A8B 6A01                    	push 1
  6873 00004A8D E9E2160000              	jmp L_error_incorrect_arity_simple
  6874                                  .L_lambda_simple_arity_check_ok_0067:
  6875 00004A92 C8000000                	enter 0, 0
  6876 00004A96 488B4520                	mov rax, PARAM(0)	; param y
  6877 00004A9A C9                      	leave
  6878 00004A9B C21800                  	ret AND_KILL_FRAME(1)
  6879                                  .L_lambda_simple_end_0067:	; new closure is in rax
  6880 00004A9E C9                      	leave
  6881 00004A9F C21800                  	ret AND_KILL_FRAME(1)
  6882                                  .L_lambda_simple_end_0066:	; new closure is in rax
  6883 00004AA2 50                      	push rax
  6884 00004AA3 6A01                    	push 1	; arg count
  6885 00004AA5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6886 00004AAA E80C170000              	call malloc
  6887 00004AAF 50                      	push rax
  6888 00004AB0 BF08000000              	mov rdi, 8 * 1	; new rib
  6889 00004AB5 E801170000              	call malloc
  6890 00004ABA 50                      	push rax
  6891 00004ABB BF30000000              	mov rdi, 8 * 6	; extended env
  6892 00004AC0 E8F6160000              	call malloc
  6893 00004AC5 488B7D10                	mov rdi, ENV
  6894 00004AC9 BE00000000              	mov rsi, 0
  6895 00004ACE BA01000000              	mov rdx, 1
  6896                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
  6897 00004AD3 4883FE05                	cmp rsi, 5
  6898 00004AD7 7410                    	je .L_lambda_simple_env_end_0068
  6899 00004AD9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6900 00004ADD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6901 00004AE1 48FFC6                  	inc rsi
  6902 00004AE4 48FFC2                  	inc rdx
  6903 00004AE7 EBEA                    	jmp .L_lambda_simple_env_loop_0068
  6904                                  .L_lambda_simple_env_end_0068:
  6905 00004AE9 5B                      	pop rbx
  6906 00004AEA BE00000000              	mov rsi, 0
  6907                                  .L_lambda_simple_params_loop_0068:	; copy params
  6908 00004AEF 4883FE01                	cmp rsi, 1
  6909 00004AF3 740E                    	je .L_lambda_simple_params_end_0068
  6910 00004AF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6911 00004AFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6912 00004AFE 48FFC6                  	inc rsi
  6913 00004B01 EBEC                    	jmp .L_lambda_simple_params_loop_0068
  6914                                  .L_lambda_simple_params_end_0068:
  6915 00004B03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6916 00004B06 4889C3                  	mov rbx, rax
  6917 00004B09 58                      	pop rax
  6918 00004B0A C60004                  	mov byte [rax], T_closure
  6919 00004B0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6920 00004B11 48C74009[1E4B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
  6921 00004B19 E9A8010000              	jmp .L_lambda_simple_end_0068
  6922                                  .L_lambda_simple_code_0068:	; lambda-simple body
  6923 00004B1E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6924 00004B24 740B                    	je .L_lambda_simple_arity_check_ok_0068
  6925 00004B26 FF742410                	push qword [rsp + 8 * 2]
  6926 00004B2A 6A01                    	push 1
  6927 00004B2C E943160000              	jmp L_error_incorrect_arity_simple
  6928                                  .L_lambda_simple_arity_check_ok_0068:
  6929 00004B31 C8000000                	enter 0, 0
  6930 00004B35 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6931 00004B3A E87C160000              	call malloc
  6932 00004B3F 50                      	push rax
  6933 00004B40 BF08000000              	mov rdi, 8 * 1	; new rib
  6934 00004B45 E871160000              	call malloc
  6935 00004B4A 50                      	push rax
  6936 00004B4B BF38000000              	mov rdi, 8 * 7	; extended env
  6937 00004B50 E866160000              	call malloc
  6938 00004B55 488B7D10                	mov rdi, ENV
  6939 00004B59 BE00000000              	mov rsi, 0
  6940 00004B5E BA01000000              	mov rdx, 1
  6941                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
  6942 00004B63 4883FE06                	cmp rsi, 6
  6943 00004B67 7410                    	je .L_lambda_simple_env_end_0069
  6944 00004B69 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6945 00004B6D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6946 00004B71 48FFC6                  	inc rsi
  6947 00004B74 48FFC2                  	inc rdx
  6948 00004B77 EBEA                    	jmp .L_lambda_simple_env_loop_0069
  6949                                  .L_lambda_simple_env_end_0069:
  6950 00004B79 5B                      	pop rbx
  6951 00004B7A BE00000000              	mov rsi, 0
  6952                                  .L_lambda_simple_params_loop_0069:	; copy params
  6953 00004B7F 4883FE01                	cmp rsi, 1
  6954 00004B83 740E                    	je .L_lambda_simple_params_end_0069
  6955 00004B85 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6956 00004B8A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6957 00004B8E 48FFC6                  	inc rsi
  6958 00004B91 EBEC                    	jmp .L_lambda_simple_params_loop_0069
  6959                                  .L_lambda_simple_params_end_0069:
  6960 00004B93 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6961 00004B96 4889C3                  	mov rbx, rax
  6962 00004B99 58                      	pop rax
  6963 00004B9A C60004                  	mov byte [rax], T_closure
  6964 00004B9D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6965 00004BA1 48C74009[AE4B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
  6966 00004BA9 E914010000              	jmp .L_lambda_simple_end_0069
  6967                                  .L_lambda_simple_code_0069:	; lambda-simple body
  6968 00004BAE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6969 00004BB4 740B                    	je .L_lambda_simple_arity_check_ok_0069
  6970 00004BB6 FF742410                	push qword [rsp + 8 * 2]
  6971 00004BBA 6A01                    	push 1
  6972 00004BBC E9B3150000              	jmp L_error_incorrect_arity_simple
  6973                                  .L_lambda_simple_arity_check_ok_0069:
  6974 00004BC1 C8000000                	enter 0, 0
  6975 00004BC5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6976 00004BCA E8EC150000              	call malloc
  6977 00004BCF 50                      	push rax
  6978 00004BD0 BF08000000              	mov rdi, 8 * 1	; new rib
  6979 00004BD5 E8E1150000              	call malloc
  6980 00004BDA 50                      	push rax
  6981 00004BDB BF40000000              	mov rdi, 8 * 8	; extended env
  6982 00004BE0 E8D6150000              	call malloc
  6983 00004BE5 488B7D10                	mov rdi, ENV
  6984 00004BE9 BE00000000              	mov rsi, 0
  6985 00004BEE BA01000000              	mov rdx, 1
  6986                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
  6987 00004BF3 4883FE07                	cmp rsi, 7
  6988 00004BF7 7410                    	je .L_lambda_simple_env_end_006a
  6989 00004BF9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6990 00004BFD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6991 00004C01 48FFC6                  	inc rsi
  6992 00004C04 48FFC2                  	inc rdx
  6993 00004C07 EBEA                    	jmp .L_lambda_simple_env_loop_006a
  6994                                  .L_lambda_simple_env_end_006a:
  6995 00004C09 5B                      	pop rbx
  6996 00004C0A BE00000000              	mov rsi, 0
  6997                                  .L_lambda_simple_params_loop_006a:	; copy params
  6998 00004C0F 4883FE01                	cmp rsi, 1
  6999 00004C13 740E                    	je .L_lambda_simple_params_end_006a
  7000 00004C15 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7001 00004C1A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7002 00004C1E 48FFC6                  	inc rsi
  7003 00004C21 EBEC                    	jmp .L_lambda_simple_params_loop_006a
  7004                                  .L_lambda_simple_params_end_006a:
  7005 00004C23 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7006 00004C26 4889C3                  	mov rbx, rax
  7007 00004C29 58                      	pop rax
  7008 00004C2A C60004                  	mov byte [rax], T_closure
  7009 00004C2D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7010 00004C31 48C74009[3E4C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
  7011 00004C39 E980000000              	jmp .L_lambda_simple_end_006a
  7012                                  .L_lambda_simple_code_006a:	; lambda-simple body
  7013 00004C3E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7014 00004C44 740B                    	je .L_lambda_simple_arity_check_ok_006a
  7015 00004C46 FF742410                	push qword [rsp + 8 * 2]
  7016 00004C4A 6A01                    	push 1
  7017 00004C4C E923150000              	jmp L_error_incorrect_arity_simple
  7018                                  .L_lambda_simple_arity_check_ok_006a:
  7019 00004C51 C8000000                	enter 0, 0
  7020                                  	; preparing a tail-call
  7021 00004C55 488B4510                	mov rax, ENV
  7022 00004C59 488B00                  	mov rax, qword [rax + 8 * 0]
  7023 00004C5C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  7024 00004C5F 50                      	push rax
  7025 00004C60 6A01                    	push 1	; arg count
  7026                                  	; preparing a non-tail-call
  7027 00004C62 488B4510                	mov rax, ENV
  7028 00004C66 488B4008                	mov rax, qword [rax + 8 * 1]
  7029 00004C6A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7030 00004C6D 50                      	push rax
  7031 00004C6E 6A01                    	push 1	; arg count
  7032 00004C70 488B4520                	mov rax, PARAM(0)	; param c
  7033 00004C74 803804                  	cmp byte [rax], T_closure
  7034 00004C77 0F8595140000            	jne L_error_non_closure
  7035 00004C7D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7036 00004C80 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7037 00004C83 803804                  	cmp byte [rax], T_closure
  7038 00004C86 0F8586140000            	jne L_error_non_closure
  7039 00004C8C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7040 00004C8F FF7508                  	push qword [rbp + 8 * 1]
  7041                                   ; old ret addr
  7042 00004C92 5D                      	pop rbp
  7043                                  ; restore the old rbp
  7044 00004C93 BB01000000              	mov rbx, 1
  7045 00004C98 4883C303                	add rbx, 3
  7046 00004C9C 488B7D10                	mov rdi, qword [rbp + 8*2]
  7047                                  .L_tc_recycle_frame_loop_0025:
  7048 00004CA0 4883FB00                	cmp rbx, 0
  7049 00004CA4 7411                    je .L_tc_recycle_frame_done_0025
  7050 00004CA6 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7051 00004CAA 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7052 00004CAF 48FFCF                  	dec rdi
  7053 00004CB2 48FFCB                  	dec rbx
  7054 00004CB5 EBE9                    jmp .L_tc_recycle_frame_loop_0025
  7055                                  .L_tc_recycle_frame_done_0025:
  7056 00004CB7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7057 00004CBA C9                      	leave
  7058 00004CBB C21800                  	ret AND_KILL_FRAME(1)
  7059                                  .L_lambda_simple_end_006a:	; new closure is in rax
  7060 00004CBE C9                      	leave
  7061 00004CBF C21800                  	ret AND_KILL_FRAME(1)
  7062                                  .L_lambda_simple_end_0069:	; new closure is in rax
  7063 00004CC2 C9                      	leave
  7064 00004CC3 C21800                  	ret AND_KILL_FRAME(1)
  7065                                  .L_lambda_simple_end_0068:	; new closure is in rax
  7066 00004CC6 803804                  	cmp byte [rax], T_closure
  7067 00004CC9 0F8543140000            	jne L_error_non_closure
  7068 00004CCF FF7001                  	push SOB_CLOSURE_ENV(rax)
  7069 00004CD2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7070 00004CD5 803804                  	cmp byte [rax], T_closure
  7071 00004CD8 0F8534140000            	jne L_error_non_closure
  7072 00004CDE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7073 00004CE1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7074 00004CE4 50                      	push rax
  7075 00004CE5 6A01                    	push 1	; arg count
  7076                                  	; preparing a non-tail-call
  7077 00004CE7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7078 00004CEC E8CA140000              	call malloc
  7079 00004CF1 50                      	push rax
  7080 00004CF2 BF08000000              	mov rdi, 8 * 1	; new rib
  7081 00004CF7 E8BF140000              	call malloc
  7082 00004CFC 50                      	push rax
  7083 00004CFD BF30000000              	mov rdi, 8 * 6	; extended env
  7084 00004D02 E8B4140000              	call malloc
  7085 00004D07 488B7D10                	mov rdi, ENV
  7086 00004D0B BE00000000              	mov rsi, 0
  7087 00004D10 BA01000000              	mov rdx, 1
  7088                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
  7089 00004D15 4883FE05                	cmp rsi, 5
  7090 00004D19 7410                    	je .L_lambda_simple_env_end_006b
  7091 00004D1B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7092 00004D1F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7093 00004D23 48FFC6                  	inc rsi
  7094 00004D26 48FFC2                  	inc rdx
  7095 00004D29 EBEA                    	jmp .L_lambda_simple_env_loop_006b
  7096                                  .L_lambda_simple_env_end_006b:
  7097 00004D2B 5B                      	pop rbx
  7098 00004D2C BE00000000              	mov rsi, 0
  7099                                  .L_lambda_simple_params_loop_006b:	; copy params
  7100 00004D31 4883FE01                	cmp rsi, 1
  7101 00004D35 740E                    	je .L_lambda_simple_params_end_006b
  7102 00004D37 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7103 00004D3C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7104 00004D40 48FFC6                  	inc rsi
  7105 00004D43 EBEC                    	jmp .L_lambda_simple_params_loop_006b
  7106                                  .L_lambda_simple_params_end_006b:
  7107 00004D45 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7108 00004D48 4889C3                  	mov rbx, rax
  7109 00004D4B 58                      	pop rax
  7110 00004D4C C60004                  	mov byte [rax], T_closure
  7111 00004D4F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7112 00004D53 48C74009[604D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
  7113 00004D5B E905090000              	jmp .L_lambda_simple_end_006b
  7114                                  .L_lambda_simple_code_006b:	; lambda-simple body
  7115 00004D60 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7116 00004D66 740B                    	je .L_lambda_simple_arity_check_ok_006b
  7117 00004D68 FF742410                	push qword [rsp + 8 * 2]
  7118 00004D6C 6A01                    	push 1
  7119 00004D6E E901140000              	jmp L_error_incorrect_arity_simple
  7120                                  .L_lambda_simple_arity_check_ok_006b:
  7121 00004D73 C8000000                	enter 0, 0
  7122                                  	; preparing a tail-call
  7123                                  	; preparing a non-tail-call
  7124 00004D77 488B4520                	mov rax, PARAM(0)	; param p
  7125 00004D7B 50                      	push rax
  7126 00004D7C 6A01                    	push 1	; arg count
  7127 00004D7E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7128 00004D83 E833140000              	call malloc
  7129 00004D88 50                      	push rax
  7130 00004D89 BF08000000              	mov rdi, 8 * 1	; new rib
  7131 00004D8E E828140000              	call malloc
  7132 00004D93 50                      	push rax
  7133 00004D94 BF38000000              	mov rdi, 8 * 7	; extended env
  7134 00004D99 E81D140000              	call malloc
  7135 00004D9E 488B7D10                	mov rdi, ENV
  7136 00004DA2 BE00000000              	mov rsi, 0
  7137 00004DA7 BA01000000              	mov rdx, 1
  7138                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
  7139 00004DAC 4883FE06                	cmp rsi, 6
  7140 00004DB0 7410                    	je .L_lambda_simple_env_end_006c
  7141 00004DB2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7142 00004DB6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7143 00004DBA 48FFC6                  	inc rsi
  7144 00004DBD 48FFC2                  	inc rdx
  7145 00004DC0 EBEA                    	jmp .L_lambda_simple_env_loop_006c
  7146                                  .L_lambda_simple_env_end_006c:
  7147 00004DC2 5B                      	pop rbx
  7148 00004DC3 BE00000000              	mov rsi, 0
  7149                                  .L_lambda_simple_params_loop_006c:	; copy params
  7150 00004DC8 4883FE01                	cmp rsi, 1
  7151 00004DCC 740E                    	je .L_lambda_simple_params_end_006c
  7152 00004DCE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7153 00004DD3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7154 00004DD7 48FFC6                  	inc rsi
  7155 00004DDA EBEC                    	jmp .L_lambda_simple_params_loop_006c
  7156                                  .L_lambda_simple_params_end_006c:
  7157 00004DDC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7158 00004DDF 4889C3                  	mov rbx, rax
  7159 00004DE2 58                      	pop rax
  7160 00004DE3 C60004                  	mov byte [rax], T_closure
  7161 00004DE6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7162 00004DEA 48C74009[F74D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
  7163 00004DF2 E988010000              	jmp .L_lambda_simple_end_006c
  7164                                  .L_lambda_simple_code_006c:	; lambda-simple body
  7165 00004DF7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7166 00004DFD 740B                    	je .L_lambda_simple_arity_check_ok_006c
  7167 00004DFF FF742410                	push qword [rsp + 8 * 2]
  7168 00004E03 6A01                    	push 1
  7169 00004E05 E96A130000              	jmp L_error_incorrect_arity_simple
  7170                                  .L_lambda_simple_arity_check_ok_006c:
  7171 00004E0A C8000000                	enter 0, 0
  7172                                  	; preparing a tail-call
  7173 00004E0E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7174 00004E13 E8A3130000              	call malloc
  7175 00004E18 50                      	push rax
  7176 00004E19 BF08000000              	mov rdi, 8 * 1	; new rib
  7177 00004E1E E898130000              	call malloc
  7178 00004E23 50                      	push rax
  7179 00004E24 BF40000000              	mov rdi, 8 * 8	; extended env
  7180 00004E29 E88D130000              	call malloc
  7181 00004E2E 488B7D10                	mov rdi, ENV
  7182 00004E32 BE00000000              	mov rsi, 0
  7183 00004E37 BA01000000              	mov rdx, 1
  7184                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
  7185 00004E3C 4883FE07                	cmp rsi, 7
  7186 00004E40 7410                    	je .L_lambda_simple_env_end_006d
  7187 00004E42 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7188 00004E46 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7189 00004E4A 48FFC6                  	inc rsi
  7190 00004E4D 48FFC2                  	inc rdx
  7191 00004E50 EBEA                    	jmp .L_lambda_simple_env_loop_006d
  7192                                  .L_lambda_simple_env_end_006d:
  7193 00004E52 5B                      	pop rbx
  7194 00004E53 BE00000000              	mov rsi, 0
  7195                                  .L_lambda_simple_params_loop_006d:	; copy params
  7196 00004E58 4883FE01                	cmp rsi, 1
  7197 00004E5C 740E                    	je .L_lambda_simple_params_end_006d
  7198 00004E5E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7199 00004E63 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7200 00004E67 48FFC6                  	inc rsi
  7201 00004E6A EBEC                    	jmp .L_lambda_simple_params_loop_006d
  7202                                  .L_lambda_simple_params_end_006d:
  7203 00004E6C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7204 00004E6F 4889C3                  	mov rbx, rax
  7205 00004E72 58                      	pop rax
  7206 00004E73 C60004                  	mov byte [rax], T_closure
  7207 00004E76 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7208 00004E7A 48C74009[874E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
  7209 00004E82 E9B6000000              	jmp .L_lambda_simple_end_006d
  7210                                  .L_lambda_simple_code_006d:	; lambda-simple body
  7211 00004E87 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7212 00004E8D 740B                    	je .L_lambda_simple_arity_check_ok_006d
  7213 00004E8F FF742410                	push qword [rsp + 8 * 2]
  7214 00004E93 6A01                    	push 1
  7215 00004E95 E9DA120000              	jmp L_error_incorrect_arity_simple
  7216                                  .L_lambda_simple_arity_check_ok_006d:
  7217 00004E9A C8000000                	enter 0, 0
  7218 00004E9E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7219 00004EA3 E813130000              	call malloc
  7220 00004EA8 50                      	push rax
  7221 00004EA9 BF08000000              	mov rdi, 8 * 1	; new rib
  7222 00004EAE E808130000              	call malloc
  7223 00004EB3 50                      	push rax
  7224 00004EB4 BF48000000              	mov rdi, 8 * 9	; extended env
  7225 00004EB9 E8FD120000              	call malloc
  7226 00004EBE 488B7D10                	mov rdi, ENV
  7227 00004EC2 BE00000000              	mov rsi, 0
  7228 00004EC7 BA01000000              	mov rdx, 1
  7229                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
  7230 00004ECC 4883FE08                	cmp rsi, 8
  7231 00004ED0 7410                    	je .L_lambda_simple_env_end_006e
  7232 00004ED2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7233 00004ED6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7234 00004EDA 48FFC6                  	inc rsi
  7235 00004EDD 48FFC2                  	inc rdx
  7236 00004EE0 EBEA                    	jmp .L_lambda_simple_env_loop_006e
  7237                                  .L_lambda_simple_env_end_006e:
  7238 00004EE2 5B                      	pop rbx
  7239 00004EE3 BE00000000              	mov rsi, 0
  7240                                  .L_lambda_simple_params_loop_006e:	; copy params
  7241 00004EE8 4883FE01                	cmp rsi, 1
  7242 00004EEC 740E                    	je .L_lambda_simple_params_end_006e
  7243 00004EEE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7244 00004EF3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7245 00004EF7 48FFC6                  	inc rsi
  7246 00004EFA EBEC                    	jmp .L_lambda_simple_params_loop_006e
  7247                                  .L_lambda_simple_params_end_006e:
  7248 00004EFC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7249 00004EFF 4889C3                  	mov rbx, rax
  7250 00004F02 58                      	pop rax
  7251 00004F03 C60004                  	mov byte [rax], T_closure
  7252 00004F06 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7253 00004F0A 48C74009[144F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
  7254 00004F12 EB25                    	jmp .L_lambda_simple_end_006e
  7255                                  .L_lambda_simple_code_006e:	; lambda-simple body
  7256 00004F14 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7257 00004F1A 740B                    	je .L_lambda_simple_arity_check_ok_006e
  7258 00004F1C FF742410                	push qword [rsp + 8 * 2]
  7259 00004F20 6A01                    	push 1
  7260 00004F22 E94D120000              	jmp L_error_incorrect_arity_simple
  7261                                  .L_lambda_simple_arity_check_ok_006e:
  7262 00004F27 C8000000                	enter 0, 0
  7263 00004F2B 488B4510                	mov rax, ENV
  7264 00004F2F 488B00                  	mov rax, qword [rax + 8 * 0]
  7265 00004F32 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7266 00004F35 C9                      	leave
  7267 00004F36 C21800                  	ret AND_KILL_FRAME(1)
  7268                                  .L_lambda_simple_end_006e:	; new closure is in rax
  7269 00004F39 C9                      	leave
  7270 00004F3A C21800                  	ret AND_KILL_FRAME(1)
  7271                                  .L_lambda_simple_end_006d:	; new closure is in rax
  7272 00004F3D 50                      	push rax
  7273 00004F3E 6A01                    	push 1	; arg count
  7274 00004F40 488B4520                	mov rax, PARAM(0)	; param p
  7275 00004F44 803804                  	cmp byte [rax], T_closure
  7276 00004F47 0F85C5110000            	jne L_error_non_closure
  7277 00004F4D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7278 00004F50 FF7508                  	push qword [rbp + 8 * 1]
  7279                                   ; old ret addr
  7280 00004F53 5D                      	pop rbp
  7281                                  ; restore the old rbp
  7282 00004F54 BB01000000              	mov rbx, 1
  7283 00004F59 4883C303                	add rbx, 3
  7284 00004F5D 488B7D10                	mov rdi, qword [rbp + 8*2]
  7285                                  .L_tc_recycle_frame_loop_0027:
  7286 00004F61 4883FB00                	cmp rbx, 0
  7287 00004F65 7411                    je .L_tc_recycle_frame_done_0027
  7288 00004F67 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7289 00004F6B 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7290 00004F70 48FFCF                  	dec rdi
  7291 00004F73 48FFCB                  	dec rbx
  7292 00004F76 EBE9                    jmp .L_tc_recycle_frame_loop_0027
  7293                                  .L_tc_recycle_frame_done_0027:
  7294 00004F78 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7295 00004F7B C9                      	leave
  7296 00004F7C C21800                  	ret AND_KILL_FRAME(1)
  7297                                  .L_lambda_simple_end_006c:	; new closure is in rax
  7298 00004F7F 803804                  	cmp byte [rax], T_closure
  7299 00004F82 0F858A110000            	jne L_error_non_closure
  7300 00004F88 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7301 00004F8B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7302 00004F8E 50                      	push rax
  7303 00004F8F 6A01                    	push 1	; arg count
  7304                                  	; preparing a non-tail-call
  7305                                  	; preparing a non-tail-call
  7306                                  	; preparing a non-tail-call
  7307 00004F91 488B4520                	mov rax, PARAM(0)	; param p
  7308 00004F95 50                      	push rax
  7309 00004F96 6A01                    	push 1	; arg count
  7310 00004F98 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7311 00004F9D E819120000              	call malloc
  7312 00004FA2 50                      	push rax
  7313 00004FA3 BF08000000              	mov rdi, 8 * 1	; new rib
  7314 00004FA8 E80E120000              	call malloc
  7315 00004FAD 50                      	push rax
  7316 00004FAE BF38000000              	mov rdi, 8 * 7	; extended env
  7317 00004FB3 E803120000              	call malloc
  7318 00004FB8 488B7D10                	mov rdi, ENV
  7319 00004FBC BE00000000              	mov rsi, 0
  7320 00004FC1 BA01000000              	mov rdx, 1
  7321                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
  7322 00004FC6 4883FE06                	cmp rsi, 6
  7323 00004FCA 7410                    	je .L_lambda_simple_env_end_006f
  7324 00004FCC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7325 00004FD0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7326 00004FD4 48FFC6                  	inc rsi
  7327 00004FD7 48FFC2                  	inc rdx
  7328 00004FDA EBEA                    	jmp .L_lambda_simple_env_loop_006f
  7329                                  .L_lambda_simple_env_end_006f:
  7330 00004FDC 5B                      	pop rbx
  7331 00004FDD BE00000000              	mov rsi, 0
  7332                                  .L_lambda_simple_params_loop_006f:	; copy params
  7333 00004FE2 4883FE01                	cmp rsi, 1
  7334 00004FE6 740E                    	je .L_lambda_simple_params_end_006f
  7335 00004FE8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7336 00004FED 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7337 00004FF1 48FFC6                  	inc rsi
  7338 00004FF4 EBEC                    	jmp .L_lambda_simple_params_loop_006f
  7339                                  .L_lambda_simple_params_end_006f:
  7340 00004FF6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7341 00004FF9 4889C3                  	mov rbx, rax
  7342 00004FFC 58                      	pop rax
  7343 00004FFD C60004                  	mov byte [rax], T_closure
  7344 00005000 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7345 00005004 48C74009[11500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
  7346 0000500C E988010000              	jmp .L_lambda_simple_end_006f
  7347                                  .L_lambda_simple_code_006f:	; lambda-simple body
  7348 00005011 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7349 00005017 740B                    	je .L_lambda_simple_arity_check_ok_006f
  7350 00005019 FF742410                	push qword [rsp + 8 * 2]
  7351 0000501D 6A01                    	push 1
  7352 0000501F E950110000              	jmp L_error_incorrect_arity_simple
  7353                                  .L_lambda_simple_arity_check_ok_006f:
  7354 00005024 C8000000                	enter 0, 0
  7355                                  	; preparing a tail-call
  7356 00005028 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7357 0000502D E889110000              	call malloc
  7358 00005032 50                      	push rax
  7359 00005033 BF08000000              	mov rdi, 8 * 1	; new rib
  7360 00005038 E87E110000              	call malloc
  7361 0000503D 50                      	push rax
  7362 0000503E BF40000000              	mov rdi, 8 * 8	; extended env
  7363 00005043 E873110000              	call malloc
  7364 00005048 488B7D10                	mov rdi, ENV
  7365 0000504C BE00000000              	mov rsi, 0
  7366 00005051 BA01000000              	mov rdx, 1
  7367                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
  7368 00005056 4883FE07                	cmp rsi, 7
  7369 0000505A 7410                    	je .L_lambda_simple_env_end_0070
  7370 0000505C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7371 00005060 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7372 00005064 48FFC6                  	inc rsi
  7373 00005067 48FFC2                  	inc rdx
  7374 0000506A EBEA                    	jmp .L_lambda_simple_env_loop_0070
  7375                                  .L_lambda_simple_env_end_0070:
  7376 0000506C 5B                      	pop rbx
  7377 0000506D BE00000000              	mov rsi, 0
  7378                                  .L_lambda_simple_params_loop_0070:	; copy params
  7379 00005072 4883FE01                	cmp rsi, 1
  7380 00005076 740E                    	je .L_lambda_simple_params_end_0070
  7381 00005078 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7382 0000507D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7383 00005081 48FFC6                  	inc rsi
  7384 00005084 EBEC                    	jmp .L_lambda_simple_params_loop_0070
  7385                                  .L_lambda_simple_params_end_0070:
  7386 00005086 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7387 00005089 4889C3                  	mov rbx, rax
  7388 0000508C 58                      	pop rax
  7389 0000508D C60004                  	mov byte [rax], T_closure
  7390 00005090 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7391 00005094 48C74009[A1500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
  7392 0000509C E9B6000000              	jmp .L_lambda_simple_end_0070
  7393                                  .L_lambda_simple_code_0070:	; lambda-simple body
  7394 000050A1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7395 000050A7 740B                    	je .L_lambda_simple_arity_check_ok_0070
  7396 000050A9 FF742410                	push qword [rsp + 8 * 2]
  7397 000050AD 6A01                    	push 1
  7398 000050AF E9C0100000              	jmp L_error_incorrect_arity_simple
  7399                                  .L_lambda_simple_arity_check_ok_0070:
  7400 000050B4 C8000000                	enter 0, 0
  7401 000050B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7402 000050BD E8F9100000              	call malloc
  7403 000050C2 50                      	push rax
  7404 000050C3 BF08000000              	mov rdi, 8 * 1	; new rib
  7405 000050C8 E8EE100000              	call malloc
  7406 000050CD 50                      	push rax
  7407 000050CE BF48000000              	mov rdi, 8 * 9	; extended env
  7408 000050D3 E8E3100000              	call malloc
  7409 000050D8 488B7D10                	mov rdi, ENV
  7410 000050DC BE00000000              	mov rsi, 0
  7411 000050E1 BA01000000              	mov rdx, 1
  7412                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
  7413 000050E6 4883FE08                	cmp rsi, 8
  7414 000050EA 7410                    	je .L_lambda_simple_env_end_0071
  7415 000050EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7416 000050F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7417 000050F4 48FFC6                  	inc rsi
  7418 000050F7 48FFC2                  	inc rdx
  7419 000050FA EBEA                    	jmp .L_lambda_simple_env_loop_0071
  7420                                  .L_lambda_simple_env_end_0071:
  7421 000050FC 5B                      	pop rbx
  7422 000050FD BE00000000              	mov rsi, 0
  7423                                  .L_lambda_simple_params_loop_0071:	; copy params
  7424 00005102 4883FE01                	cmp rsi, 1
  7425 00005106 740E                    	je .L_lambda_simple_params_end_0071
  7426 00005108 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7427 0000510D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7428 00005111 48FFC6                  	inc rsi
  7429 00005114 EBEC                    	jmp .L_lambda_simple_params_loop_0071
  7430                                  .L_lambda_simple_params_end_0071:
  7431 00005116 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7432 00005119 4889C3                  	mov rbx, rax
  7433 0000511C 58                      	pop rax
  7434 0000511D C60004                  	mov byte [rax], T_closure
  7435 00005120 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7436 00005124 48C74009[2E510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
  7437 0000512C EB25                    	jmp .L_lambda_simple_end_0071
  7438                                  .L_lambda_simple_code_0071:	; lambda-simple body
  7439 0000512E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7440 00005134 740B                    	je .L_lambda_simple_arity_check_ok_0071
  7441 00005136 FF742410                	push qword [rsp + 8 * 2]
  7442 0000513A 6A01                    	push 1
  7443 0000513C E933100000              	jmp L_error_incorrect_arity_simple
  7444                                  .L_lambda_simple_arity_check_ok_0071:
  7445 00005141 C8000000                	enter 0, 0
  7446 00005145 488B4510                	mov rax, ENV
  7447 00005149 488B00                  	mov rax, qword [rax + 8 * 0]
  7448 0000514C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7449 0000514F C9                      	leave
  7450 00005150 C21800                  	ret AND_KILL_FRAME(1)
  7451                                  .L_lambda_simple_end_0071:	; new closure is in rax
  7452 00005153 C9                      	leave
  7453 00005154 C21800                  	ret AND_KILL_FRAME(1)
  7454                                  .L_lambda_simple_end_0070:	; new closure is in rax
  7455 00005157 50                      	push rax
  7456 00005158 6A01                    	push 1	; arg count
  7457 0000515A 488B4520                	mov rax, PARAM(0)	; param p
  7458 0000515E 803804                  	cmp byte [rax], T_closure
  7459 00005161 0F85AB0F0000            	jne L_error_non_closure
  7460 00005167 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7461 0000516A FF7508                  	push qword [rbp + 8 * 1]
  7462                                   ; old ret addr
  7463 0000516D 5D                      	pop rbp
  7464                                  ; restore the old rbp
  7465 0000516E BB01000000              	mov rbx, 1
  7466 00005173 4883C303                	add rbx, 3
  7467 00005177 488B7D10                	mov rdi, qword [rbp + 8*2]
  7468                                  .L_tc_recycle_frame_loop_0028:
  7469 0000517B 4883FB00                	cmp rbx, 0
  7470 0000517F 7411                    je .L_tc_recycle_frame_done_0028
  7471 00005181 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7472 00005185 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7473 0000518A 48FFCF                  	dec rdi
  7474 0000518D 48FFCB                  	dec rbx
  7475 00005190 EBE9                    jmp .L_tc_recycle_frame_loop_0028
  7476                                  .L_tc_recycle_frame_done_0028:
  7477 00005192 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7478 00005195 C9                      	leave
  7479 00005196 C21800                  	ret AND_KILL_FRAME(1)
  7480                                  .L_lambda_simple_end_006f:	; new closure is in rax
  7481 00005199 803804                  	cmp byte [rax], T_closure
  7482 0000519C 0F85700F0000            	jne L_error_non_closure
  7483 000051A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7484 000051A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7485 000051A8 50                      	push rax
  7486 000051A9 6A01                    	push 1	; arg count
  7487 000051AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7488 000051B0 E806100000              	call malloc
  7489 000051B5 50                      	push rax
  7490 000051B6 BF08000000              	mov rdi, 8 * 1	; new rib
  7491 000051BB E8FB0F0000              	call malloc
  7492 000051C0 50                      	push rax
  7493 000051C1 BF38000000              	mov rdi, 8 * 7	; extended env
  7494 000051C6 E8F00F0000              	call malloc
  7495 000051CB 488B7D10                	mov rdi, ENV
  7496 000051CF BE00000000              	mov rsi, 0
  7497 000051D4 BA01000000              	mov rdx, 1
  7498                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
  7499 000051D9 4883FE06                	cmp rsi, 6
  7500 000051DD 7410                    	je .L_lambda_simple_env_end_0072
  7501 000051DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7502 000051E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7503 000051E7 48FFC6                  	inc rsi
  7504 000051EA 48FFC2                  	inc rdx
  7505 000051ED EBEA                    	jmp .L_lambda_simple_env_loop_0072
  7506                                  .L_lambda_simple_env_end_0072:
  7507 000051EF 5B                      	pop rbx
  7508 000051F0 BE00000000              	mov rsi, 0
  7509                                  .L_lambda_simple_params_loop_0072:	; copy params
  7510 000051F5 4883FE01                	cmp rsi, 1
  7511 000051F9 740E                    	je .L_lambda_simple_params_end_0072
  7512 000051FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7513 00005200 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7514 00005204 48FFC6                  	inc rsi
  7515 00005207 EBEC                    	jmp .L_lambda_simple_params_loop_0072
  7516                                  .L_lambda_simple_params_end_0072:
  7517 00005209 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7518 0000520C 4889C3                  	mov rbx, rax
  7519 0000520F 58                      	pop rax
  7520 00005210 C60004                  	mov byte [rax], T_closure
  7521 00005213 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7522 00005217 48C74009[24520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
  7523 0000521F E9C4010000              	jmp .L_lambda_simple_end_0072
  7524                                  .L_lambda_simple_code_0072:	; lambda-simple body
  7525 00005224 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7526 0000522A 740B                    	je .L_lambda_simple_arity_check_ok_0072
  7527 0000522C FF742410                	push qword [rsp + 8 * 2]
  7528 00005230 6A01                    	push 1
  7529 00005232 E93D0F0000              	jmp L_error_incorrect_arity_simple
  7530                                  .L_lambda_simple_arity_check_ok_0072:
  7531 00005237 C8000000                	enter 0, 0
  7532 0000523B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7533 00005240 E8760F0000              	call malloc
  7534 00005245 50                      	push rax
  7535 00005246 BF08000000              	mov rdi, 8 * 1	; new rib
  7536 0000524B E86B0F0000              	call malloc
  7537 00005250 50                      	push rax
  7538 00005251 BF40000000              	mov rdi, 8 * 8	; extended env
  7539 00005256 E8600F0000              	call malloc
  7540 0000525B 488B7D10                	mov rdi, ENV
  7541 0000525F BE00000000              	mov rsi, 0
  7542 00005264 BA01000000              	mov rdx, 1
  7543                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
  7544 00005269 4883FE07                	cmp rsi, 7
  7545 0000526D 7410                    	je .L_lambda_simple_env_end_0073
  7546 0000526F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7547 00005273 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7548 00005277 48FFC6                  	inc rsi
  7549 0000527A 48FFC2                  	inc rdx
  7550 0000527D EBEA                    	jmp .L_lambda_simple_env_loop_0073
  7551                                  .L_lambda_simple_env_end_0073:
  7552 0000527F 5B                      	pop rbx
  7553 00005280 BE00000000              	mov rsi, 0
  7554                                  .L_lambda_simple_params_loop_0073:	; copy params
  7555 00005285 4883FE01                	cmp rsi, 1
  7556 00005289 740E                    	je .L_lambda_simple_params_end_0073
  7557 0000528B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7558 00005290 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7559 00005294 48FFC6                  	inc rsi
  7560 00005297 EBEC                    	jmp .L_lambda_simple_params_loop_0073
  7561                                  .L_lambda_simple_params_end_0073:
  7562 00005299 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7563 0000529C 4889C3                  	mov rbx, rax
  7564 0000529F 58                      	pop rax
  7565 000052A0 C60004                  	mov byte [rax], T_closure
  7566 000052A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7567 000052A7 48C74009[B4520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
  7568 000052AF E930010000              	jmp .L_lambda_simple_end_0073
  7569                                  .L_lambda_simple_code_0073:	; lambda-simple body
  7570 000052B4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7571 000052BA 740B                    	je .L_lambda_simple_arity_check_ok_0073
  7572 000052BC FF742410                	push qword [rsp + 8 * 2]
  7573 000052C0 6A01                    	push 1
  7574 000052C2 E9AD0E0000              	jmp L_error_incorrect_arity_simple
  7575                                  .L_lambda_simple_arity_check_ok_0073:
  7576 000052C7 C8000000                	enter 0, 0
  7577 000052CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7578 000052D0 E8E60E0000              	call malloc
  7579 000052D5 50                      	push rax
  7580 000052D6 BF08000000              	mov rdi, 8 * 1	; new rib
  7581 000052DB E8DB0E0000              	call malloc
  7582 000052E0 50                      	push rax
  7583 000052E1 BF48000000              	mov rdi, 8 * 9	; extended env
  7584 000052E6 E8D00E0000              	call malloc
  7585 000052EB 488B7D10                	mov rdi, ENV
  7586 000052EF BE00000000              	mov rsi, 0
  7587 000052F4 BA01000000              	mov rdx, 1
  7588                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
  7589 000052F9 4883FE08                	cmp rsi, 8
  7590 000052FD 7410                    	je .L_lambda_simple_env_end_0074
  7591 000052FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7592 00005303 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7593 00005307 48FFC6                  	inc rsi
  7594 0000530A 48FFC2                  	inc rdx
  7595 0000530D EBEA                    	jmp .L_lambda_simple_env_loop_0074
  7596                                  .L_lambda_simple_env_end_0074:
  7597 0000530F 5B                      	pop rbx
  7598 00005310 BE00000000              	mov rsi, 0
  7599                                  .L_lambda_simple_params_loop_0074:	; copy params
  7600 00005315 4883FE01                	cmp rsi, 1
  7601 00005319 740E                    	je .L_lambda_simple_params_end_0074
  7602 0000531B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7603 00005320 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7604 00005324 48FFC6                  	inc rsi
  7605 00005327 EBEC                    	jmp .L_lambda_simple_params_loop_0074
  7606                                  .L_lambda_simple_params_end_0074:
  7607 00005329 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7608 0000532C 4889C3                  	mov rbx, rax
  7609 0000532F 58                      	pop rax
  7610 00005330 C60004                  	mov byte [rax], T_closure
  7611 00005333 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7612 00005337 48C74009[44530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
  7613 0000533F E99C000000              	jmp .L_lambda_simple_end_0074
  7614                                  .L_lambda_simple_code_0074:	; lambda-simple body
  7615 00005344 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7616 0000534A 740B                    	je .L_lambda_simple_arity_check_ok_0074
  7617 0000534C FF742410                	push qword [rsp + 8 * 2]
  7618 00005350 6A01                    	push 1
  7619 00005352 E91D0E0000              	jmp L_error_incorrect_arity_simple
  7620                                  .L_lambda_simple_arity_check_ok_0074:
  7621 00005357 C8000000                	enter 0, 0
  7622                                  	; preparing a tail-call
  7623                                  	; preparing a non-tail-call
  7624 0000535B 488B4520                	mov rax, PARAM(0)	; param z
  7625 0000535F 50                      	push rax
  7626 00005360 6A01                    	push 1	; arg count
  7627                                  	; preparing a non-tail-call
  7628 00005362 488B4510                	mov rax, ENV
  7629 00005366 488B00                  	mov rax, qword [rax + 8 * 0]
  7630 00005369 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  7631 0000536C 50                      	push rax
  7632 0000536D 6A01                    	push 1	; arg count
  7633 0000536F 488B4510                	mov rax, ENV
  7634 00005373 488B4008                	mov rax, qword [rax + 8 * 1]
  7635 00005377 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
  7636 0000537A 803804                  	cmp byte [rax], T_closure
  7637 0000537D 0F858F0D0000            	jne L_error_non_closure
  7638 00005383 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7639 00005386 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7640 00005389 803804                  	cmp byte [rax], T_closure
  7641 0000538C 0F85800D0000            	jne L_error_non_closure
  7642 00005392 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7643 00005395 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7644 00005398 50                      	push rax
  7645 00005399 6A01                    	push 1	; arg count
  7646 0000539B 488B4510                	mov rax, ENV
  7647 0000539F 488B00                  	mov rax, qword [rax + 8 * 0]
  7648 000053A2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
  7649 000053A5 803804                  	cmp byte [rax], T_closure
  7650 000053A8 0F85640D0000            	jne L_error_non_closure
  7651 000053AE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7652 000053B1 FF7508                  	push qword [rbp + 8 * 1]
  7653                                   ; old ret addr
  7654 000053B4 5D                      	pop rbp
  7655                                  ; restore the old rbp
  7656 000053B5 BB01000000              	mov rbx, 1
  7657 000053BA 4883C303                	add rbx, 3
  7658 000053BE 488B7D10                	mov rdi, qword [rbp + 8*2]
  7659                                  .L_tc_recycle_frame_loop_0029:
  7660 000053C2 4883FB00                	cmp rbx, 0
  7661 000053C6 7411                    je .L_tc_recycle_frame_done_0029
  7662 000053C8 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7663 000053CC 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7664 000053D1 48FFCF                  	dec rdi
  7665 000053D4 48FFCB                  	dec rbx
  7666 000053D7 EBE9                    jmp .L_tc_recycle_frame_loop_0029
  7667                                  .L_tc_recycle_frame_done_0029:
  7668 000053D9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7669 000053DC C9                      	leave
  7670 000053DD C21800                  	ret AND_KILL_FRAME(1)
  7671                                  .L_lambda_simple_end_0074:	; new closure is in rax
  7672 000053E0 C9                      	leave
  7673 000053E1 C21800                  	ret AND_KILL_FRAME(1)
  7674                                  .L_lambda_simple_end_0073:	; new closure is in rax
  7675 000053E4 C9                      	leave
  7676 000053E5 C21800                  	ret AND_KILL_FRAME(1)
  7677                                  .L_lambda_simple_end_0072:	; new closure is in rax
  7678 000053E8 803804                  	cmp byte [rax], T_closure
  7679 000053EB 0F85210D0000            	jne L_error_non_closure
  7680 000053F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7681 000053F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7682 000053F7 50                      	push rax
  7683 000053F8 6A01                    	push 1	; arg count
  7684 000053FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7685 000053FF E8B70D0000              	call malloc
  7686 00005404 50                      	push rax
  7687 00005405 BF08000000              	mov rdi, 8 * 1	; new rib
  7688 0000540A E8AC0D0000              	call malloc
  7689 0000540F 50                      	push rax
  7690 00005410 BF38000000              	mov rdi, 8 * 7	; extended env
  7691 00005415 E8A10D0000              	call malloc
  7692 0000541A 488B7D10                	mov rdi, ENV
  7693 0000541E BE00000000              	mov rsi, 0
  7694 00005423 BA01000000              	mov rdx, 1
  7695                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
  7696 00005428 4883FE06                	cmp rsi, 6
  7697 0000542C 7410                    	je .L_lambda_simple_env_end_0075
  7698 0000542E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7699 00005432 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7700 00005436 48FFC6                  	inc rsi
  7701 00005439 48FFC2                  	inc rdx
  7702 0000543C EBEA                    	jmp .L_lambda_simple_env_loop_0075
  7703                                  .L_lambda_simple_env_end_0075:
  7704 0000543E 5B                      	pop rbx
  7705 0000543F BE00000000              	mov rsi, 0
  7706                                  .L_lambda_simple_params_loop_0075:	; copy params
  7707 00005444 4883FE01                	cmp rsi, 1
  7708 00005448 740E                    	je .L_lambda_simple_params_end_0075
  7709 0000544A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7710 0000544F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7711 00005453 48FFC6                  	inc rsi
  7712 00005456 EBEC                    	jmp .L_lambda_simple_params_loop_0075
  7713                                  .L_lambda_simple_params_end_0075:
  7714 00005458 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7715 0000545B 4889C3                  	mov rbx, rax
  7716 0000545E 58                      	pop rax
  7717 0000545F C60004                  	mov byte [rax], T_closure
  7718 00005462 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7719 00005466 48C74009[73540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
  7720 0000546E E9A8010000              	jmp .L_lambda_simple_end_0075
  7721                                  .L_lambda_simple_code_0075:	; lambda-simple body
  7722 00005473 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7723 00005479 740B                    	je .L_lambda_simple_arity_check_ok_0075
  7724 0000547B FF742410                	push qword [rsp + 8 * 2]
  7725 0000547F 6A01                    	push 1
  7726 00005481 E9EE0C0000              	jmp L_error_incorrect_arity_simple
  7727                                  .L_lambda_simple_arity_check_ok_0075:
  7728 00005486 C8000000                	enter 0, 0
  7729 0000548A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7730 0000548F E8270D0000              	call malloc
  7731 00005494 50                      	push rax
  7732 00005495 BF08000000              	mov rdi, 8 * 1	; new rib
  7733 0000549A E81C0D0000              	call malloc
  7734 0000549F 50                      	push rax
  7735 000054A0 BF40000000              	mov rdi, 8 * 8	; extended env
  7736 000054A5 E8110D0000              	call malloc
  7737 000054AA 488B7D10                	mov rdi, ENV
  7738 000054AE BE00000000              	mov rsi, 0
  7739 000054B3 BA01000000              	mov rdx, 1
  7740                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
  7741 000054B8 4883FE07                	cmp rsi, 7
  7742 000054BC 7410                    	je .L_lambda_simple_env_end_0076
  7743 000054BE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7744 000054C2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7745 000054C6 48FFC6                  	inc rsi
  7746 000054C9 48FFC2                  	inc rdx
  7747 000054CC EBEA                    	jmp .L_lambda_simple_env_loop_0076
  7748                                  .L_lambda_simple_env_end_0076:
  7749 000054CE 5B                      	pop rbx
  7750 000054CF BE00000000              	mov rsi, 0
  7751                                  .L_lambda_simple_params_loop_0076:	; copy params
  7752 000054D4 4883FE01                	cmp rsi, 1
  7753 000054D8 740E                    	je .L_lambda_simple_params_end_0076
  7754 000054DA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7755 000054DF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7756 000054E3 48FFC6                  	inc rsi
  7757 000054E6 EBEC                    	jmp .L_lambda_simple_params_loop_0076
  7758                                  .L_lambda_simple_params_end_0076:
  7759 000054E8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7760 000054EB 4889C3                  	mov rbx, rax
  7761 000054EE 58                      	pop rax
  7762 000054EF C60004                  	mov byte [rax], T_closure
  7763 000054F2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7764 000054F6 48C74009[03550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
  7765 000054FE E914010000              	jmp .L_lambda_simple_end_0076
  7766                                  .L_lambda_simple_code_0076:	; lambda-simple body
  7767 00005503 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7768 00005509 740B                    	je .L_lambda_simple_arity_check_ok_0076
  7769 0000550B FF742410                	push qword [rsp + 8 * 2]
  7770 0000550F 6A01                    	push 1
  7771 00005511 E95E0C0000              	jmp L_error_incorrect_arity_simple
  7772                                  .L_lambda_simple_arity_check_ok_0076:
  7773 00005516 C8000000                	enter 0, 0
  7774 0000551A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7775 0000551F E8970C0000              	call malloc
  7776 00005524 50                      	push rax
  7777 00005525 BF08000000              	mov rdi, 8 * 1	; new rib
  7778 0000552A E88C0C0000              	call malloc
  7779 0000552F 50                      	push rax
  7780 00005530 BF48000000              	mov rdi, 8 * 9	; extended env
  7781 00005535 E8810C0000              	call malloc
  7782 0000553A 488B7D10                	mov rdi, ENV
  7783 0000553E BE00000000              	mov rsi, 0
  7784 00005543 BA01000000              	mov rdx, 1
  7785                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
  7786 00005548 4883FE08                	cmp rsi, 8
  7787 0000554C 7410                    	je .L_lambda_simple_env_end_0077
  7788 0000554E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7789 00005552 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7790 00005556 48FFC6                  	inc rsi
  7791 00005559 48FFC2                  	inc rdx
  7792 0000555C EBEA                    	jmp .L_lambda_simple_env_loop_0077
  7793                                  .L_lambda_simple_env_end_0077:
  7794 0000555E 5B                      	pop rbx
  7795 0000555F BE00000000              	mov rsi, 0
  7796                                  .L_lambda_simple_params_loop_0077:	; copy params
  7797 00005564 4883FE01                	cmp rsi, 1
  7798 00005568 740E                    	je .L_lambda_simple_params_end_0077
  7799 0000556A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7800 0000556F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7801 00005573 48FFC6                  	inc rsi
  7802 00005576 EBEC                    	jmp .L_lambda_simple_params_loop_0077
  7803                                  .L_lambda_simple_params_end_0077:
  7804 00005578 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7805 0000557B 4889C3                  	mov rbx, rax
  7806 0000557E 58                      	pop rax
  7807 0000557F C60004                  	mov byte [rax], T_closure
  7808 00005582 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7809 00005586 48C74009[93550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
  7810 0000558E E980000000              	jmp .L_lambda_simple_end_0077
  7811                                  .L_lambda_simple_code_0077:	; lambda-simple body
  7812 00005593 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7813 00005599 740B                    	je .L_lambda_simple_arity_check_ok_0077
  7814 0000559B FF742410                	push qword [rsp + 8 * 2]
  7815 0000559F 6A01                    	push 1
  7816 000055A1 E9CE0B0000              	jmp L_error_incorrect_arity_simple
  7817                                  .L_lambda_simple_arity_check_ok_0077:
  7818 000055A6 C8000000                	enter 0, 0
  7819                                  	; preparing a tail-call
  7820 000055AA 488B4510                	mov rax, ENV
  7821 000055AE 488B00                  	mov rax, qword [rax + 8 * 0]
  7822 000055B1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var b
  7823 000055B4 50                      	push rax
  7824 000055B5 6A01                    	push 1	; arg count
  7825                                  	; preparing a non-tail-call
  7826 000055B7 488B4510                	mov rax, ENV
  7827 000055BB 488B4008                	mov rax, qword [rax + 8 * 1]
  7828 000055BF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  7829 000055C2 50                      	push rax
  7830 000055C3 6A01                    	push 1	; arg count
  7831 000055C5 488B4520                	mov rax, PARAM(0)	; param c
  7832 000055C9 803804                  	cmp byte [rax], T_closure
  7833 000055CC 0F85400B0000            	jne L_error_non_closure
  7834 000055D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7835 000055D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7836 000055D8 803804                  	cmp byte [rax], T_closure
  7837 000055DB 0F85310B0000            	jne L_error_non_closure
  7838 000055E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7839 000055E4 FF7508                  	push qword [rbp + 8 * 1]
  7840                                   ; old ret addr
  7841 000055E7 5D                      	pop rbp
  7842                                  ; restore the old rbp
  7843 000055E8 BB01000000              	mov rbx, 1
  7844 000055ED 4883C303                	add rbx, 3
  7845 000055F1 488B7D10                	mov rdi, qword [rbp + 8*2]
  7846                                  .L_tc_recycle_frame_loop_002a:
  7847 000055F5 4883FB00                	cmp rbx, 0
  7848 000055F9 7411                    je .L_tc_recycle_frame_done_002a
  7849 000055FB 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7850 000055FF 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7851 00005604 48FFCF                  	dec rdi
  7852 00005607 48FFCB                  	dec rbx
  7853 0000560A EBE9                    jmp .L_tc_recycle_frame_loop_002a
  7854                                  .L_tc_recycle_frame_done_002a:
  7855 0000560C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7856 0000560F C9                      	leave
  7857 00005610 C21800                  	ret AND_KILL_FRAME(1)
  7858                                  .L_lambda_simple_end_0077:	; new closure is in rax
  7859 00005613 C9                      	leave
  7860 00005614 C21800                  	ret AND_KILL_FRAME(1)
  7861                                  .L_lambda_simple_end_0076:	; new closure is in rax
  7862 00005617 C9                      	leave
  7863 00005618 C21800                  	ret AND_KILL_FRAME(1)
  7864                                  .L_lambda_simple_end_0075:	; new closure is in rax
  7865 0000561B 803804                  	cmp byte [rax], T_closure
  7866 0000561E 0F85EE0A0000            	jne L_error_non_closure
  7867 00005624 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7868 00005627 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7869 0000562A 803804                  	cmp byte [rax], T_closure
  7870 0000562D 0F85DF0A0000            	jne L_error_non_closure
  7871 00005633 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7872 00005636 FF7508                  	push qword [rbp + 8 * 1]
  7873                                   ; old ret addr
  7874 00005639 5D                      	pop rbp
  7875                                  ; restore the old rbp
  7876 0000563A BB01000000              	mov rbx, 1
  7877 0000563F 4883C303                	add rbx, 3
  7878 00005643 488B7D10                	mov rdi, qword [rbp + 8*2]
  7879                                  .L_tc_recycle_frame_loop_0026:
  7880 00005647 4883FB00                	cmp rbx, 0
  7881 0000564B 7411                    je .L_tc_recycle_frame_done_0026
  7882 0000564D 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  7883 00005651 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  7884 00005656 48FFCF                  	dec rdi
  7885 00005659 48FFCB                  	dec rbx
  7886 0000565C EBE9                    jmp .L_tc_recycle_frame_loop_0026
  7887                                  .L_tc_recycle_frame_done_0026:
  7888 0000565E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7889 00005661 C9                      	leave
  7890 00005662 C21800                  	ret AND_KILL_FRAME(1)
  7891                                  .L_lambda_simple_end_006b:	; new closure is in rax
  7892 00005665 50                      	push rax
  7893 00005666 6A01                    	push 1	; arg count
  7894 00005668 488B4520                	mov rax, PARAM(0)	; param n
  7895 0000566C 803804                  	cmp byte [rax], T_closure
  7896 0000566F 0F859D0A0000            	jne L_error_non_closure
  7897 00005675 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7898 00005678 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7899 0000567B 803804                  	cmp byte [rax], T_closure
  7900 0000567E 0F858E0A0000            	jne L_error_non_closure
  7901 00005684 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7902 00005687 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7903 0000568A 50                      	push rax
  7904 0000568B 6A01                    	push 1	; arg count
  7905 0000568D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7906 00005692 E8240B0000              	call malloc
  7907 00005697 50                      	push rax
  7908 00005698 BF08000000              	mov rdi, 8 * 1	; new rib
  7909 0000569D E8190B0000              	call malloc
  7910 000056A2 50                      	push rax
  7911 000056A3 BF30000000              	mov rdi, 8 * 6	; extended env
  7912 000056A8 E80E0B0000              	call malloc
  7913 000056AD 488B7D10                	mov rdi, ENV
  7914 000056B1 BE00000000              	mov rsi, 0
  7915 000056B6 BA01000000              	mov rdx, 1
  7916                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
  7917 000056BB 4883FE05                	cmp rsi, 5
  7918 000056BF 7410                    	je .L_lambda_simple_env_end_0078
  7919 000056C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7920 000056C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7921 000056C9 48FFC6                  	inc rsi
  7922 000056CC 48FFC2                  	inc rdx
  7923 000056CF EBEA                    	jmp .L_lambda_simple_env_loop_0078
  7924                                  .L_lambda_simple_env_end_0078:
  7925 000056D1 5B                      	pop rbx
  7926 000056D2 BE00000000              	mov rsi, 0
  7927                                  .L_lambda_simple_params_loop_0078:	; copy params
  7928 000056D7 4883FE01                	cmp rsi, 1
  7929 000056DB 740E                    	je .L_lambda_simple_params_end_0078
  7930 000056DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7931 000056E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7932 000056E6 48FFC6                  	inc rsi
  7933 000056E9 EBEC                    	jmp .L_lambda_simple_params_loop_0078
  7934                                  .L_lambda_simple_params_end_0078:
  7935 000056EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7936 000056EE 4889C3                  	mov rbx, rax
  7937 000056F1 58                      	pop rax
  7938 000056F2 C60004                  	mov byte [rax], T_closure
  7939 000056F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7940 000056F9 48C74009[06570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
  7941 00005701 E982010000              	jmp .L_lambda_simple_end_0078
  7942                                  .L_lambda_simple_code_0078:	; lambda-simple body
  7943 00005706 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7944 0000570C 740B                    	je .L_lambda_simple_arity_check_ok_0078
  7945 0000570E FF742410                	push qword [rsp + 8 * 2]
  7946 00005712 6A01                    	push 1
  7947 00005714 E95B0A0000              	jmp L_error_incorrect_arity_simple
  7948                                  .L_lambda_simple_arity_check_ok_0078:
  7949 00005719 C8000000                	enter 0, 0
  7950                                  	; preparing a tail-call
  7951 0000571D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7952 00005722 E8940A0000              	call malloc
  7953 00005727 50                      	push rax
  7954 00005728 BF08000000              	mov rdi, 8 * 1	; new rib
  7955 0000572D E8890A0000              	call malloc
  7956 00005732 50                      	push rax
  7957 00005733 BF38000000              	mov rdi, 8 * 7	; extended env
  7958 00005738 E87E0A0000              	call malloc
  7959 0000573D 488B7D10                	mov rdi, ENV
  7960 00005741 BE00000000              	mov rsi, 0
  7961 00005746 BA01000000              	mov rdx, 1
  7962                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
  7963 0000574B 4883FE06                	cmp rsi, 6
  7964 0000574F 7410                    	je .L_lambda_simple_env_end_0079
  7965 00005751 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7966 00005755 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7967 00005759 48FFC6                  	inc rsi
  7968 0000575C 48FFC2                  	inc rdx
  7969 0000575F EBEA                    	jmp .L_lambda_simple_env_loop_0079
  7970                                  .L_lambda_simple_env_end_0079:
  7971 00005761 5B                      	pop rbx
  7972 00005762 BE00000000              	mov rsi, 0
  7973                                  .L_lambda_simple_params_loop_0079:	; copy params
  7974 00005767 4883FE01                	cmp rsi, 1
  7975 0000576B 740E                    	je .L_lambda_simple_params_end_0079
  7976 0000576D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7977 00005772 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7978 00005776 48FFC6                  	inc rsi
  7979 00005779 EBEC                    	jmp .L_lambda_simple_params_loop_0079
  7980                                  .L_lambda_simple_params_end_0079:
  7981 0000577B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7982 0000577E 4889C3                  	mov rbx, rax
  7983 00005781 58                      	pop rax
  7984 00005782 C60004                  	mov byte [rax], T_closure
  7985 00005785 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7986 00005789 48C74009[96570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
  7987 00005791 E9B0000000              	jmp .L_lambda_simple_end_0079
  7988                                  .L_lambda_simple_code_0079:	; lambda-simple body
  7989 00005796 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7990 0000579C 740B                    	je .L_lambda_simple_arity_check_ok_0079
  7991 0000579E FF742410                	push qword [rsp + 8 * 2]
  7992 000057A2 6A01                    	push 1
  7993 000057A4 E9CB090000              	jmp L_error_incorrect_arity_simple
  7994                                  .L_lambda_simple_arity_check_ok_0079:
  7995 000057A9 C8000000                	enter 0, 0
  7996 000057AD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7997 000057B2 E8040A0000              	call malloc
  7998 000057B7 50                      	push rax
  7999 000057B8 BF08000000              	mov rdi, 8 * 1	; new rib
  8000 000057BD E8F9090000              	call malloc
  8001 000057C2 50                      	push rax
  8002 000057C3 BF40000000              	mov rdi, 8 * 8	; extended env
  8003 000057C8 E8EE090000              	call malloc
  8004 000057CD 488B7D10                	mov rdi, ENV
  8005 000057D1 BE00000000              	mov rsi, 0
  8006 000057D6 BA01000000              	mov rdx, 1
  8007                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
  8008 000057DB 4883FE07                	cmp rsi, 7
  8009 000057DF 7410                    	je .L_lambda_simple_env_end_007a
  8010 000057E1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8011 000057E5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8012 000057E9 48FFC6                  	inc rsi
  8013 000057EC 48FFC2                  	inc rdx
  8014 000057EF EBEA                    	jmp .L_lambda_simple_env_loop_007a
  8015                                  .L_lambda_simple_env_end_007a:
  8016 000057F1 5B                      	pop rbx
  8017 000057F2 BE00000000              	mov rsi, 0
  8018                                  .L_lambda_simple_params_loop_007a:	; copy params
  8019 000057F7 4883FE01                	cmp rsi, 1
  8020 000057FB 740E                    	je .L_lambda_simple_params_end_007a
  8021 000057FD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8022 00005802 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8023 00005806 48FFC6                  	inc rsi
  8024 00005809 EBEC                    	jmp .L_lambda_simple_params_loop_007a
  8025                                  .L_lambda_simple_params_end_007a:
  8026 0000580B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8027 0000580E 4889C3                  	mov rbx, rax
  8028 00005811 58                      	pop rax
  8029 00005812 C60004                  	mov byte [rax], T_closure
  8030 00005815 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8031 00005819 48C74009[23580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
  8032 00005821 EB1F                    	jmp .L_lambda_simple_end_007a
  8033                                  .L_lambda_simple_code_007a:	; lambda-simple body
  8034 00005823 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8035 00005829 740B                    	je .L_lambda_simple_arity_check_ok_007a
  8036 0000582B FF742410                	push qword [rsp + 8 * 2]
  8037 0000582F 6A01                    	push 1
  8038 00005831 E93E090000              	jmp L_error_incorrect_arity_simple
  8039                                  .L_lambda_simple_arity_check_ok_007a:
  8040 00005836 C8000000                	enter 0, 0
  8041 0000583A 488B4520                	mov rax, PARAM(0)	; param b
  8042 0000583E C9                      	leave
  8043 0000583F C21800                  	ret AND_KILL_FRAME(1)
  8044                                  .L_lambda_simple_end_007a:	; new closure is in rax
  8045 00005842 C9                      	leave
  8046 00005843 C21800                  	ret AND_KILL_FRAME(1)
  8047                                  .L_lambda_simple_end_0079:	; new closure is in rax
  8048 00005846 50                      	push rax
  8049 00005847 6A01                    	push 1	; arg count
  8050 00005849 488B4520                	mov rax, PARAM(0)	; param p
  8051 0000584D 803804                  	cmp byte [rax], T_closure
  8052 00005850 0F85BC080000            	jne L_error_non_closure
  8053 00005856 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8054 00005859 FF7508                  	push qword [rbp + 8 * 1]
  8055                                   ; old ret addr
  8056 0000585C 5D                      	pop rbp
  8057                                  ; restore the old rbp
  8058 0000585D BB01000000              	mov rbx, 1
  8059 00005862 4883C303                	add rbx, 3
  8060 00005866 488B7D10                	mov rdi, qword [rbp + 8*2]
  8061                                  .L_tc_recycle_frame_loop_002b:
  8062 0000586A 4883FB00                	cmp rbx, 0
  8063 0000586E 7411                    je .L_tc_recycle_frame_done_002b
  8064 00005870 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8065 00005874 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8066 00005879 48FFCF                  	dec rdi
  8067 0000587C 48FFCB                  	dec rbx
  8068 0000587F EBE9                    jmp .L_tc_recycle_frame_loop_002b
  8069                                  .L_tc_recycle_frame_done_002b:
  8070 00005881 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8071 00005884 C9                      	leave
  8072 00005885 C21800                  	ret AND_KILL_FRAME(1)
  8073                                  .L_lambda_simple_end_0078:	; new closure is in rax
  8074 00005888 803804                  	cmp byte [rax], T_closure
  8075 0000588B 0F8581080000            	jne L_error_non_closure
  8076 00005891 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8077 00005894 FF7508                  	push qword [rbp + 8 * 1]
  8078                                   ; old ret addr
  8079 00005897 5D                      	pop rbp
  8080                                  ; restore the old rbp
  8081 00005898 BB01000000              	mov rbx, 1
  8082 0000589D 4883C303                	add rbx, 3
  8083 000058A1 488B7D10                	mov rdi, qword [rbp + 8*2]
  8084                                  .L_tc_recycle_frame_loop_0024:
  8085 000058A5 4883FB00                	cmp rbx, 0
  8086 000058A9 7411                    je .L_tc_recycle_frame_done_0024
  8087 000058AB 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8088 000058AF 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8089 000058B4 48FFCF                  	dec rdi
  8090 000058B7 48FFCB                  	dec rbx
  8091 000058BA EBE9                    jmp .L_tc_recycle_frame_loop_0024
  8092                                  .L_tc_recycle_frame_done_0024:
  8093 000058BC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8094 000058BF C9                      	leave
  8095 000058C0 C21800                  	ret AND_KILL_FRAME(1)
  8096                                  .L_lambda_simple_end_0063:	; new closure is in rax
  8097 000058C3 50                      	push rax
  8098 000058C4 6A01                    	push 1	; arg count
  8099 000058C6 488B4520                	mov rax, PARAM(0)	; param b
  8100 000058CA 803804                  	cmp byte [rax], T_closure
  8101 000058CD 0F853F080000            	jne L_error_non_closure
  8102 000058D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8103 000058D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8104 000058D9 803804                  	cmp byte [rax], T_closure
  8105 000058DC 0F8530080000            	jne L_error_non_closure
  8106 000058E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8107 000058E5 FF7508                  	push qword [rbp + 8 * 1]
  8108                                   ; old ret addr
  8109 000058E8 5D                      	pop rbp
  8110                                  ; restore the old rbp
  8111 000058E9 BB01000000              	mov rbx, 1
  8112 000058EE 4883C303                	add rbx, 3
  8113 000058F2 488B7D10                	mov rdi, qword [rbp + 8*2]
  8114                                  .L_tc_recycle_frame_loop_0023:
  8115 000058F6 4883FB00                	cmp rbx, 0
  8116 000058FA 7411                    je .L_tc_recycle_frame_done_0023
  8117 000058FC 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8118 00005900 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8119 00005905 48FFCF                  	dec rdi
  8120 00005908 48FFCB                  	dec rbx
  8121 0000590B EBE9                    jmp .L_tc_recycle_frame_loop_0023
  8122                                  .L_tc_recycle_frame_done_0023:
  8123 0000590D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8124 00005910 C9                      	leave
  8125 00005911 C21800                  	ret AND_KILL_FRAME(1)
  8126                                  .L_lambda_simple_end_0062:	; new closure is in rax
  8127 00005914 C9                      	leave
  8128 00005915 C21800                  	ret AND_KILL_FRAME(1)
  8129                                  .L_lambda_simple_end_0061:	; new closure is in rax
  8130 00005918 803804                  	cmp byte [rax], T_closure
  8131 0000591B 0F85F1070000            	jne L_error_non_closure
  8132 00005921 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8133 00005924 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8134 00005927 803804                  	cmp byte [rax], T_closure
  8135 0000592A 0F85E2070000            	jne L_error_non_closure
  8136 00005930 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8137 00005933 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8138 00005936 50                      	push rax
  8139 00005937 6A01                    	push 1	; arg count
  8140 00005939 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8141 0000593E E878080000              	call malloc
  8142 00005943 50                      	push rax
  8143 00005944 BF08000000              	mov rdi, 8 * 1	; new rib
  8144 00005949 E86D080000              	call malloc
  8145 0000594E 50                      	push rax
  8146 0000594F BF18000000              	mov rdi, 8 * 3	; extended env
  8147 00005954 E862080000              	call malloc
  8148 00005959 488B7D10                	mov rdi, ENV
  8149 0000595D BE00000000              	mov rsi, 0
  8150 00005962 BA01000000              	mov rdx, 1
  8151                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
  8152 00005967 4883FE02                	cmp rsi, 2
  8153 0000596B 7410                    	je .L_lambda_simple_env_end_007b
  8154 0000596D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8155 00005971 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8156 00005975 48FFC6                  	inc rsi
  8157 00005978 48FFC2                  	inc rdx
  8158 0000597B EBEA                    	jmp .L_lambda_simple_env_loop_007b
  8159                                  .L_lambda_simple_env_end_007b:
  8160 0000597D 5B                      	pop rbx
  8161 0000597E BE00000000              	mov rsi, 0
  8162                                  .L_lambda_simple_params_loop_007b:	; copy params
  8163 00005983 4883FE01                	cmp rsi, 1
  8164 00005987 740E                    	je .L_lambda_simple_params_end_007b
  8165 00005989 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8166 0000598E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8167 00005992 48FFC6                  	inc rsi
  8168 00005995 EBEC                    	jmp .L_lambda_simple_params_loop_007b
  8169                                  .L_lambda_simple_params_end_007b:
  8170 00005997 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8171 0000599A 4889C3                  	mov rbx, rax
  8172 0000599D 58                      	pop rax
  8173 0000599E C60004                  	mov byte [rax], T_closure
  8174 000059A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8175 000059A5 48C74009[B2590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
  8176 000059AD E957030000              	jmp .L_lambda_simple_end_007b
  8177                                  .L_lambda_simple_code_007b:	; lambda-simple body
  8178 000059B2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8179 000059B8 740B                    	je .L_lambda_simple_arity_check_ok_007b
  8180 000059BA FF742410                	push qword [rsp + 8 * 2]
  8181 000059BE 6A01                    	push 1
  8182 000059C0 E9AF070000              	jmp L_error_incorrect_arity_simple
  8183                                  .L_lambda_simple_arity_check_ok_007b:
  8184 000059C5 C8000000                	enter 0, 0
  8185                                  	; preparing a tail-call
  8186 000059C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8187 000059CE E8E8070000              	call malloc
  8188 000059D3 50                      	push rax
  8189 000059D4 BF08000000              	mov rdi, 8 * 1	; new rib
  8190 000059D9 E8DD070000              	call malloc
  8191 000059DE 50                      	push rax
  8192 000059DF BF20000000              	mov rdi, 8 * 4	; extended env
  8193 000059E4 E8D2070000              	call malloc
  8194 000059E9 488B7D10                	mov rdi, ENV
  8195 000059ED BE00000000              	mov rsi, 0
  8196 000059F2 BA01000000              	mov rdx, 1
  8197                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
  8198 000059F7 4883FE03                	cmp rsi, 3
  8199 000059FB 7410                    	je .L_lambda_simple_env_end_007c
  8200 000059FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8201 00005A01 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8202 00005A05 48FFC6                  	inc rsi
  8203 00005A08 48FFC2                  	inc rdx
  8204 00005A0B EBEA                    	jmp .L_lambda_simple_env_loop_007c
  8205                                  .L_lambda_simple_env_end_007c:
  8206 00005A0D 5B                      	pop rbx
  8207 00005A0E BE00000000              	mov rsi, 0
  8208                                  .L_lambda_simple_params_loop_007c:	; copy params
  8209 00005A13 4883FE01                	cmp rsi, 1
  8210 00005A17 740E                    	je .L_lambda_simple_params_end_007c
  8211 00005A19 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8212 00005A1E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8213 00005A22 48FFC6                  	inc rsi
  8214 00005A25 EBEC                    	jmp .L_lambda_simple_params_loop_007c
  8215                                  .L_lambda_simple_params_end_007c:
  8216 00005A27 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8217 00005A2A 4889C3                  	mov rbx, rax
  8218 00005A2D 58                      	pop rax
  8219 00005A2E C60004                  	mov byte [rax], T_closure
  8220 00005A31 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8221 00005A35 48C74009[425A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
  8222 00005A3D E9B6000000              	jmp .L_lambda_simple_end_007c
  8223                                  .L_lambda_simple_code_007c:	; lambda-simple body
  8224 00005A42 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8225 00005A48 740B                    	je .L_lambda_simple_arity_check_ok_007c
  8226 00005A4A FF742410                	push qword [rsp + 8 * 2]
  8227 00005A4E 6A01                    	push 1
  8228 00005A50 E91F070000              	jmp L_error_incorrect_arity_simple
  8229                                  .L_lambda_simple_arity_check_ok_007c:
  8230 00005A55 C8000000                	enter 0, 0
  8231 00005A59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8232 00005A5E E858070000              	call malloc
  8233 00005A63 50                      	push rax
  8234 00005A64 BF08000000              	mov rdi, 8 * 1	; new rib
  8235 00005A69 E84D070000              	call malloc
  8236 00005A6E 50                      	push rax
  8237 00005A6F BF28000000              	mov rdi, 8 * 5	; extended env
  8238 00005A74 E842070000              	call malloc
  8239 00005A79 488B7D10                	mov rdi, ENV
  8240 00005A7D BE00000000              	mov rsi, 0
  8241 00005A82 BA01000000              	mov rdx, 1
  8242                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
  8243 00005A87 4883FE04                	cmp rsi, 4
  8244 00005A8B 7410                    	je .L_lambda_simple_env_end_007d
  8245 00005A8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8246 00005A91 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8247 00005A95 48FFC6                  	inc rsi
  8248 00005A98 48FFC2                  	inc rdx
  8249 00005A9B EBEA                    	jmp .L_lambda_simple_env_loop_007d
  8250                                  .L_lambda_simple_env_end_007d:
  8251 00005A9D 5B                      	pop rbx
  8252 00005A9E BE00000000              	mov rsi, 0
  8253                                  .L_lambda_simple_params_loop_007d:	; copy params
  8254 00005AA3 4883FE01                	cmp rsi, 1
  8255 00005AA7 740E                    	je .L_lambda_simple_params_end_007d
  8256 00005AA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8257 00005AAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8258 00005AB2 48FFC6                  	inc rsi
  8259 00005AB5 EBEC                    	jmp .L_lambda_simple_params_loop_007d
  8260                                  .L_lambda_simple_params_end_007d:
  8261 00005AB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8262 00005ABA 4889C3                  	mov rbx, rax
  8263 00005ABD 58                      	pop rax
  8264 00005ABE C60004                  	mov byte [rax], T_closure
  8265 00005AC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8266 00005AC5 48C74009[CF5A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
  8267 00005ACD EB25                    	jmp .L_lambda_simple_end_007d
  8268                                  .L_lambda_simple_code_007d:	; lambda-simple body
  8269 00005ACF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8270 00005AD5 740B                    	je .L_lambda_simple_arity_check_ok_007d
  8271 00005AD7 FF742410                	push qword [rsp + 8 * 2]
  8272 00005ADB 6A01                    	push 1
  8273 00005ADD E992060000              	jmp L_error_incorrect_arity_simple
  8274                                  .L_lambda_simple_arity_check_ok_007d:
  8275 00005AE2 C8000000                	enter 0, 0
  8276 00005AE6 488B4510                	mov rax, ENV
  8277 00005AEA 488B00                  	mov rax, qword [rax + 8 * 0]
  8278 00005AED 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var x
  8279 00005AF0 C9                      	leave
  8280 00005AF1 C21800                  	ret AND_KILL_FRAME(1)
  8281                                  .L_lambda_simple_end_007d:	; new closure is in rax
  8282 00005AF4 C9                      	leave
  8283 00005AF5 C21800                  	ret AND_KILL_FRAME(1)
  8284                                  .L_lambda_simple_end_007c:	; new closure is in rax
  8285 00005AF8 50                      	push rax
  8286 00005AF9 6A01                    	push 1	; arg count
  8287                                  	; preparing a non-tail-call
  8288 00005AFB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8289 00005B00 E8B6060000              	call malloc
  8290 00005B05 50                      	push rax
  8291 00005B06 BF08000000              	mov rdi, 8 * 1	; new rib
  8292 00005B0B E8AB060000              	call malloc
  8293 00005B10 50                      	push rax
  8294 00005B11 BF20000000              	mov rdi, 8 * 4	; extended env
  8295 00005B16 E8A0060000              	call malloc
  8296 00005B1B 488B7D10                	mov rdi, ENV
  8297 00005B1F BE00000000              	mov rsi, 0
  8298 00005B24 BA01000000              	mov rdx, 1
  8299                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
  8300 00005B29 4883FE03                	cmp rsi, 3
  8301 00005B2D 7410                    	je .L_lambda_simple_env_end_007e
  8302 00005B2F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8303 00005B33 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8304 00005B37 48FFC6                  	inc rsi
  8305 00005B3A 48FFC2                  	inc rdx
  8306 00005B3D EBEA                    	jmp .L_lambda_simple_env_loop_007e
  8307                                  .L_lambda_simple_env_end_007e:
  8308 00005B3F 5B                      	pop rbx
  8309 00005B40 BE00000000              	mov rsi, 0
  8310                                  .L_lambda_simple_params_loop_007e:	; copy params
  8311 00005B45 4883FE01                	cmp rsi, 1
  8312 00005B49 740E                    	je .L_lambda_simple_params_end_007e
  8313 00005B4B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8314 00005B50 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8315 00005B54 48FFC6                  	inc rsi
  8316 00005B57 EBEC                    	jmp .L_lambda_simple_params_loop_007e
  8317                                  .L_lambda_simple_params_end_007e:
  8318 00005B59 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8319 00005B5C 4889C3                  	mov rbx, rax
  8320 00005B5F 58                      	pop rax
  8321 00005B60 C60004                  	mov byte [rax], T_closure
  8322 00005B63 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8323 00005B67 48C74009[745B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
  8324 00005B6F E944010000              	jmp .L_lambda_simple_end_007e
  8325                                  .L_lambda_simple_code_007e:	; lambda-simple body
  8326 00005B74 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8327 00005B7A 740B                    	je .L_lambda_simple_arity_check_ok_007e
  8328 00005B7C FF742410                	push qword [rsp + 8 * 2]
  8329 00005B80 6A01                    	push 1
  8330 00005B82 E9ED050000              	jmp L_error_incorrect_arity_simple
  8331                                  .L_lambda_simple_arity_check_ok_007e:
  8332 00005B87 C8000000                	enter 0, 0
  8333 00005B8B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8334 00005B90 E826060000              	call malloc
  8335 00005B95 50                      	push rax
  8336 00005B96 BF08000000              	mov rdi, 8 * 1	; new rib
  8337 00005B9B E81B060000              	call malloc
  8338 00005BA0 50                      	push rax
  8339 00005BA1 BF28000000              	mov rdi, 8 * 5	; extended env
  8340 00005BA6 E810060000              	call malloc
  8341 00005BAB 488B7D10                	mov rdi, ENV
  8342 00005BAF BE00000000              	mov rsi, 0
  8343 00005BB4 BA01000000              	mov rdx, 1
  8344                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
  8345 00005BB9 4883FE04                	cmp rsi, 4
  8346 00005BBD 7410                    	je .L_lambda_simple_env_end_007f
  8347 00005BBF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8348 00005BC3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8349 00005BC7 48FFC6                  	inc rsi
  8350 00005BCA 48FFC2                  	inc rdx
  8351 00005BCD EBEA                    	jmp .L_lambda_simple_env_loop_007f
  8352                                  .L_lambda_simple_env_end_007f:
  8353 00005BCF 5B                      	pop rbx
  8354 00005BD0 BE00000000              	mov rsi, 0
  8355                                  .L_lambda_simple_params_loop_007f:	; copy params
  8356 00005BD5 4883FE01                	cmp rsi, 1
  8357 00005BD9 740E                    	je .L_lambda_simple_params_end_007f
  8358 00005BDB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8359 00005BE0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8360 00005BE4 48FFC6                  	inc rsi
  8361 00005BE7 EBEC                    	jmp .L_lambda_simple_params_loop_007f
  8362                                  .L_lambda_simple_params_end_007f:
  8363 00005BE9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8364 00005BEC 4889C3                  	mov rbx, rax
  8365 00005BEF 58                      	pop rax
  8366 00005BF0 C60004                  	mov byte [rax], T_closure
  8367 00005BF3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8368 00005BF7 48C74009[045C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
  8369 00005BFF E9B0000000              	jmp .L_lambda_simple_end_007f
  8370                                  .L_lambda_simple_code_007f:	; lambda-simple body
  8371 00005C04 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8372 00005C0A 740B                    	je .L_lambda_simple_arity_check_ok_007f
  8373 00005C0C FF742410                	push qword [rsp + 8 * 2]
  8374 00005C10 6A01                    	push 1
  8375 00005C12 E95D050000              	jmp L_error_incorrect_arity_simple
  8376                                  .L_lambda_simple_arity_check_ok_007f:
  8377 00005C17 C8000000                	enter 0, 0
  8378 00005C1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8379 00005C20 E896050000              	call malloc
  8380 00005C25 50                      	push rax
  8381 00005C26 BF08000000              	mov rdi, 8 * 1	; new rib
  8382 00005C2B E88B050000              	call malloc
  8383 00005C30 50                      	push rax
  8384 00005C31 BF30000000              	mov rdi, 8 * 6	; extended env
  8385 00005C36 E880050000              	call malloc
  8386 00005C3B 488B7D10                	mov rdi, ENV
  8387 00005C3F BE00000000              	mov rsi, 0
  8388 00005C44 BA01000000              	mov rdx, 1
  8389                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
  8390 00005C49 4883FE05                	cmp rsi, 5
  8391 00005C4D 7410                    	je .L_lambda_simple_env_end_0080
  8392 00005C4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8393 00005C53 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8394 00005C57 48FFC6                  	inc rsi
  8395 00005C5A 48FFC2                  	inc rdx
  8396 00005C5D EBEA                    	jmp .L_lambda_simple_env_loop_0080
  8397                                  .L_lambda_simple_env_end_0080:
  8398 00005C5F 5B                      	pop rbx
  8399 00005C60 BE00000000              	mov rsi, 0
  8400                                  .L_lambda_simple_params_loop_0080:	; copy params
  8401 00005C65 4883FE01                	cmp rsi, 1
  8402 00005C69 740E                    	je .L_lambda_simple_params_end_0080
  8403 00005C6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8404 00005C70 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8405 00005C74 48FFC6                  	inc rsi
  8406 00005C77 EBEC                    	jmp .L_lambda_simple_params_loop_0080
  8407                                  .L_lambda_simple_params_end_0080:
  8408 00005C79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8409 00005C7C 4889C3                  	mov rbx, rax
  8410 00005C7F 58                      	pop rax
  8411 00005C80 C60004                  	mov byte [rax], T_closure
  8412 00005C83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8413 00005C87 48C74009[915C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
  8414 00005C8F EB1F                    	jmp .L_lambda_simple_end_0080
  8415                                  .L_lambda_simple_code_0080:	; lambda-simple body
  8416 00005C91 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8417 00005C97 740B                    	je .L_lambda_simple_arity_check_ok_0080
  8418 00005C99 FF742410                	push qword [rsp + 8 * 2]
  8419 00005C9D 6A01                    	push 1
  8420 00005C9F E9D0040000              	jmp L_error_incorrect_arity_simple
  8421                                  .L_lambda_simple_arity_check_ok_0080:
  8422 00005CA4 C8000000                	enter 0, 0
  8423 00005CA8 488B4520                	mov rax, PARAM(0)	; param y
  8424 00005CAC C9                      	leave
  8425 00005CAD C21800                  	ret AND_KILL_FRAME(1)
  8426                                  .L_lambda_simple_end_0080:	; new closure is in rax
  8427 00005CB0 C9                      	leave
  8428 00005CB1 C21800                  	ret AND_KILL_FRAME(1)
  8429                                  .L_lambda_simple_end_007f:	; new closure is in rax
  8430 00005CB4 C9                      	leave
  8431 00005CB5 C21800                  	ret AND_KILL_FRAME(1)
  8432                                  .L_lambda_simple_end_007e:	; new closure is in rax
  8433 00005CB8 50                      	push rax
  8434 00005CB9 6A01                    	push 1	; arg count
  8435 00005CBB 488B4520                	mov rax, PARAM(0)	; param n
  8436 00005CBF 803804                  	cmp byte [rax], T_closure
  8437 00005CC2 0F854A040000            	jne L_error_non_closure
  8438 00005CC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8439 00005CCB FF5009                  	call SOB_CLOSURE_CODE(rax)
  8440 00005CCE 803804                  	cmp byte [rax], T_closure
  8441 00005CD1 0F853B040000            	jne L_error_non_closure
  8442 00005CD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8443 00005CDA FF7508                  	push qword [rbp + 8 * 1]
  8444                                   ; old ret addr
  8445 00005CDD 5D                      	pop rbp
  8446                                  ; restore the old rbp
  8447 00005CDE BB01000000              	mov rbx, 1
  8448 00005CE3 4883C303                	add rbx, 3
  8449 00005CE7 488B7D10                	mov rdi, qword [rbp + 8*2]
  8450                                  .L_tc_recycle_frame_loop_002c:
  8451 00005CEB 4883FB00                	cmp rbx, 0
  8452 00005CEF 7411                    je .L_tc_recycle_frame_done_002c
  8453 00005CF1 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8454 00005CF5 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8455 00005CFA 48FFCF                  	dec rdi
  8456 00005CFD 48FFCB                  	dec rbx
  8457 00005D00 EBE9                    jmp .L_tc_recycle_frame_loop_002c
  8458                                  .L_tc_recycle_frame_done_002c:
  8459 00005D02 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8460 00005D05 C9                      	leave
  8461 00005D06 C21800                  	ret AND_KILL_FRAME(1)
  8462                                  .L_lambda_simple_end_007b:	; new closure is in rax
  8463 00005D09 803804                  	cmp byte [rax], T_closure
  8464 00005D0C 0F8500040000            	jne L_error_non_closure
  8465 00005D12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8466 00005D15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8467 00005D18 50                      	push rax
  8468 00005D19 6A01                    	push 1	; arg count
  8469 00005D1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8470 00005D20 E896040000              	call malloc
  8471 00005D25 50                      	push rax
  8472 00005D26 BF08000000              	mov rdi, 8 * 1	; new rib
  8473 00005D2B E88B040000              	call malloc
  8474 00005D30 50                      	push rax
  8475 00005D31 BF18000000              	mov rdi, 8 * 3	; extended env
  8476 00005D36 E880040000              	call malloc
  8477 00005D3B 488B7D10                	mov rdi, ENV
  8478 00005D3F BE00000000              	mov rsi, 0
  8479 00005D44 BA01000000              	mov rdx, 1
  8480                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
  8481 00005D49 4883FE02                	cmp rsi, 2
  8482 00005D4D 7410                    	je .L_lambda_simple_env_end_0081
  8483 00005D4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8484 00005D53 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8485 00005D57 48FFC6                  	inc rsi
  8486 00005D5A 48FFC2                  	inc rdx
  8487 00005D5D EBEA                    	jmp .L_lambda_simple_env_loop_0081
  8488                                  .L_lambda_simple_env_end_0081:
  8489 00005D5F 5B                      	pop rbx
  8490 00005D60 BE00000000              	mov rsi, 0
  8491                                  .L_lambda_simple_params_loop_0081:	; copy params
  8492 00005D65 4883FE01                	cmp rsi, 1
  8493 00005D69 740E                    	je .L_lambda_simple_params_end_0081
  8494 00005D6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8495 00005D70 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8496 00005D74 48FFC6                  	inc rsi
  8497 00005D77 EBEC                    	jmp .L_lambda_simple_params_loop_0081
  8498                                  .L_lambda_simple_params_end_0081:
  8499 00005D79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8500 00005D7C 4889C3                  	mov rbx, rax
  8501 00005D7F 58                      	pop rax
  8502 00005D80 C60004                  	mov byte [rax], T_closure
  8503 00005D83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8504 00005D87 48C74009[945D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
  8505 00005D8F E932020000              	jmp .L_lambda_simple_end_0081
  8506                                  .L_lambda_simple_code_0081:	; lambda-simple body
  8507 00005D94 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8508 00005D9A 740B                    	je .L_lambda_simple_arity_check_ok_0081
  8509 00005D9C FF742410                	push qword [rsp + 8 * 2]
  8510 00005DA0 6A01                    	push 1
  8511 00005DA2 E9CD030000              	jmp L_error_incorrect_arity_simple
  8512                                  .L_lambda_simple_arity_check_ok_0081:
  8513 00005DA7 C8000000                	enter 0, 0
  8514 00005DAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8515 00005DB0 E806040000              	call malloc
  8516 00005DB5 50                      	push rax
  8517 00005DB6 BF08000000              	mov rdi, 8 * 1	; new rib
  8518 00005DBB E8FB030000              	call malloc
  8519 00005DC0 50                      	push rax
  8520 00005DC1 BF20000000              	mov rdi, 8 * 4	; extended env
  8521 00005DC6 E8F0030000              	call malloc
  8522 00005DCB 488B7D10                	mov rdi, ENV
  8523 00005DCF BE00000000              	mov rsi, 0
  8524 00005DD4 BA01000000              	mov rdx, 1
  8525                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
  8526 00005DD9 4883FE03                	cmp rsi, 3
  8527 00005DDD 7410                    	je .L_lambda_simple_env_end_0082
  8528 00005DDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8529 00005DE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8530 00005DE7 48FFC6                  	inc rsi
  8531 00005DEA 48FFC2                  	inc rdx
  8532 00005DED EBEA                    	jmp .L_lambda_simple_env_loop_0082
  8533                                  .L_lambda_simple_env_end_0082:
  8534 00005DEF 5B                      	pop rbx
  8535 00005DF0 BE00000000              	mov rsi, 0
  8536                                  .L_lambda_simple_params_loop_0082:	; copy params
  8537 00005DF5 4883FE01                	cmp rsi, 1
  8538 00005DF9 740E                    	je .L_lambda_simple_params_end_0082
  8539 00005DFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8540 00005E00 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8541 00005E04 48FFC6                  	inc rsi
  8542 00005E07 EBEC                    	jmp .L_lambda_simple_params_loop_0082
  8543                                  .L_lambda_simple_params_end_0082:
  8544 00005E09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8545 00005E0C 4889C3                  	mov rbx, rax
  8546 00005E0F 58                      	pop rax
  8547 00005E10 C60004                  	mov byte [rax], T_closure
  8548 00005E13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8549 00005E17 48C74009[245E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
  8550 00005E1F E99E010000              	jmp .L_lambda_simple_end_0082
  8551                                  .L_lambda_simple_code_0082:	; lambda-simple body
  8552 00005E24 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8553 00005E2A 740B                    	je .L_lambda_simple_arity_check_ok_0082
  8554 00005E2C FF742410                	push qword [rsp + 8 * 2]
  8555 00005E30 6A01                    	push 1
  8556 00005E32 E93D030000              	jmp L_error_incorrect_arity_simple
  8557                                  .L_lambda_simple_arity_check_ok_0082:
  8558 00005E37 C8000000                	enter 0, 0
  8559                                  	; preparing a tail-call
  8560 00005E3B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8561 00005E40 E876030000              	call malloc
  8562 00005E45 50                      	push rax
  8563 00005E46 BF08000000              	mov rdi, 8 * 1	; new rib
  8564 00005E4B E86B030000              	call malloc
  8565 00005E50 50                      	push rax
  8566 00005E51 BF28000000              	mov rdi, 8 * 5	; extended env
  8567 00005E56 E860030000              	call malloc
  8568 00005E5B 488B7D10                	mov rdi, ENV
  8569 00005E5F BE00000000              	mov rsi, 0
  8570 00005E64 BA01000000              	mov rdx, 1
  8571                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
  8572 00005E69 4883FE04                	cmp rsi, 4
  8573 00005E6D 7410                    	je .L_lambda_simple_env_end_0083
  8574 00005E6F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8575 00005E73 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8576 00005E77 48FFC6                  	inc rsi
  8577 00005E7A 48FFC2                  	inc rdx
  8578 00005E7D EBEA                    	jmp .L_lambda_simple_env_loop_0083
  8579                                  .L_lambda_simple_env_end_0083:
  8580 00005E7F 5B                      	pop rbx
  8581 00005E80 BE00000000              	mov rsi, 0
  8582                                  .L_lambda_simple_params_loop_0083:	; copy params
  8583 00005E85 4883FE01                	cmp rsi, 1
  8584 00005E89 740E                    	je .L_lambda_simple_params_end_0083
  8585 00005E8B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8586 00005E90 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8587 00005E94 48FFC6                  	inc rsi
  8588 00005E97 EBEC                    	jmp .L_lambda_simple_params_loop_0083
  8589                                  .L_lambda_simple_params_end_0083:
  8590 00005E99 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8591 00005E9C 4889C3                  	mov rbx, rax
  8592 00005E9F 58                      	pop rax
  8593 00005EA0 C60004                  	mov byte [rax], T_closure
  8594 00005EA3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8595 00005EA7 48C74009[B45E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
  8596 00005EAF E9B0000000              	jmp .L_lambda_simple_end_0083
  8597                                  .L_lambda_simple_code_0083:	; lambda-simple body
  8598 00005EB4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8599 00005EBA 740B                    	je .L_lambda_simple_arity_check_ok_0083
  8600 00005EBC FF742410                	push qword [rsp + 8 * 2]
  8601 00005EC0 6A01                    	push 1
  8602 00005EC2 E9AD020000              	jmp L_error_incorrect_arity_simple
  8603                                  .L_lambda_simple_arity_check_ok_0083:
  8604 00005EC7 C8000000                	enter 0, 0
  8605 00005ECB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8606 00005ED0 E8E6020000              	call malloc
  8607 00005ED5 50                      	push rax
  8608 00005ED6 BF08000000              	mov rdi, 8 * 1	; new rib
  8609 00005EDB E8DB020000              	call malloc
  8610 00005EE0 50                      	push rax
  8611 00005EE1 BF30000000              	mov rdi, 8 * 6	; extended env
  8612 00005EE6 E8D0020000              	call malloc
  8613 00005EEB 488B7D10                	mov rdi, ENV
  8614 00005EEF BE00000000              	mov rsi, 0
  8615 00005EF4 BA01000000              	mov rdx, 1
  8616                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
  8617 00005EF9 4883FE05                	cmp rsi, 5
  8618 00005EFD 7410                    	je .L_lambda_simple_env_end_0084
  8619 00005EFF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8620 00005F03 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8621 00005F07 48FFC6                  	inc rsi
  8622 00005F0A 48FFC2                  	inc rdx
  8623 00005F0D EBEA                    	jmp .L_lambda_simple_env_loop_0084
  8624                                  .L_lambda_simple_env_end_0084:
  8625 00005F0F 5B                      	pop rbx
  8626 00005F10 BE00000000              	mov rsi, 0
  8627                                  .L_lambda_simple_params_loop_0084:	; copy params
  8628 00005F15 4883FE01                	cmp rsi, 1
  8629 00005F19 740E                    	je .L_lambda_simple_params_end_0084
  8630 00005F1B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8631 00005F20 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8632 00005F24 48FFC6                  	inc rsi
  8633 00005F27 EBEC                    	jmp .L_lambda_simple_params_loop_0084
  8634                                  .L_lambda_simple_params_end_0084:
  8635 00005F29 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8636 00005F2C 4889C3                  	mov rbx, rax
  8637 00005F2F 58                      	pop rax
  8638 00005F30 C60004                  	mov byte [rax], T_closure
  8639 00005F33 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8640 00005F37 48C74009[415F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
  8641 00005F3F EB1F                    	jmp .L_lambda_simple_end_0084
  8642                                  .L_lambda_simple_code_0084:	; lambda-simple body
  8643 00005F41 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8644 00005F47 740B                    	je .L_lambda_simple_arity_check_ok_0084
  8645 00005F49 FF742410                	push qword [rsp + 8 * 2]
  8646 00005F4D 6A01                    	push 1
  8647 00005F4F E920020000              	jmp L_error_incorrect_arity_simple
  8648                                  .L_lambda_simple_arity_check_ok_0084:
  8649 00005F54 C8000000                	enter 0, 0
  8650 00005F58 488B4520                	mov rax, PARAM(0)	; param y
  8651 00005F5C C9                      	leave
  8652 00005F5D C21800                  	ret AND_KILL_FRAME(1)
  8653                                  .L_lambda_simple_end_0084:	; new closure is in rax
  8654 00005F60 C9                      	leave
  8655 00005F61 C21800                  	ret AND_KILL_FRAME(1)
  8656                                  .L_lambda_simple_end_0083:	; new closure is in rax
  8657 00005F64 50                      	push rax
  8658 00005F65 6A01                    	push 1	; arg count
  8659                                  	; preparing a non-tail-call
  8660 00005F67 488B4520                	mov rax, PARAM(0)	; param b
  8661 00005F6B 50                      	push rax
  8662 00005F6C 6A01                    	push 1	; arg count
  8663 00005F6E 488B4510                	mov rax, ENV
  8664 00005F72 488B00                  	mov rax, qword [rax + 8 * 0]
  8665 00005F75 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  8666 00005F78 803804                  	cmp byte [rax], T_closure
  8667 00005F7B 0F8591010000            	jne L_error_non_closure
  8668 00005F81 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8669 00005F84 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8670 00005F87 803804                  	cmp byte [rax], T_closure
  8671 00005F8A 0F8582010000            	jne L_error_non_closure
  8672 00005F90 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8673 00005F93 FF7508                  	push qword [rbp + 8 * 1]
  8674                                   ; old ret addr
  8675 00005F96 5D                      	pop rbp
  8676                                  ; restore the old rbp
  8677 00005F97 BB01000000              	mov rbx, 1
  8678 00005F9C 4883C303                	add rbx, 3
  8679 00005FA0 488B7D10                	mov rdi, qword [rbp + 8*2]
  8680                                  .L_tc_recycle_frame_loop_002d:
  8681 00005FA4 4883FB00                	cmp rbx, 0
  8682 00005FA8 7411                    je .L_tc_recycle_frame_done_002d
  8683 00005FAA 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8684 00005FAE 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8685 00005FB3 48FFCF                  	dec rdi
  8686 00005FB6 48FFCB                  	dec rbx
  8687 00005FB9 EBE9                    jmp .L_tc_recycle_frame_loop_002d
  8688                                  .L_tc_recycle_frame_done_002d:
  8689 00005FBB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8690 00005FBE C9                      	leave
  8691 00005FBF C21800                  	ret AND_KILL_FRAME(1)
  8692                                  .L_lambda_simple_end_0082:	; new closure is in rax
  8693 00005FC2 C9                      	leave
  8694 00005FC3 C21800                  	ret AND_KILL_FRAME(1)
  8695                                  .L_lambda_simple_end_0081:	; new closure is in rax
  8696 00005FC6 803804                  	cmp byte [rax], T_closure
  8697 00005FC9 0F8543010000            	jne L_error_non_closure
  8698 00005FCF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8699 00005FD2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8700 00005FD5 803804                  	cmp byte [rax], T_closure
  8701 00005FD8 0F8534010000            	jne L_error_non_closure
  8702 00005FDE FF7001                  	push SOB_CLOSURE_ENV(rax)
  8703 00005FE1 FF7508                  	push qword [rbp + 8 * 1]
  8704                                   ; old ret addr
  8705 00005FE4 5D                      	pop rbp
  8706                                  ; restore the old rbp
  8707 00005FE5 BB01000000              	mov rbx, 1
  8708 00005FEA 4883C303                	add rbx, 3
  8709 00005FEE 488B7D10                	mov rdi, qword [rbp + 8*2]
  8710                                  .L_tc_recycle_frame_loop_0018:
  8711 00005FF2 4883FB00                	cmp rbx, 0
  8712 00005FF6 7411                    je .L_tc_recycle_frame_done_0018
  8713 00005FF8 488B0CDC                	mov rcx, qword [rsp + 8 * rbx]
  8714 00005FFC 48894CFD18              	mov [rbp + 3*8 + 8 * rdi], rcx
  8715 00006001 48FFCF                  	dec rdi
  8716 00006004 48FFCB                  	dec rbx
  8717 00006007 EBE9                    jmp .L_tc_recycle_frame_loop_0018
  8718                                  .L_tc_recycle_frame_done_0018:
  8719 00006009 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8720 0000600C C9                      	leave
  8721 0000600D C21800                  	ret AND_KILL_FRAME(1)
  8722                                  .L_lambda_simple_end_0040:	; new closure is in rax
  8723 00006010 C9                      	leave
  8724 00006011 C21800                  	ret AND_KILL_FRAME(1)
  8725                                  .L_lambda_simple_end_003f:	; new closure is in rax
  8726 00006014 803804                  	cmp byte [rax], T_closure
  8727 00006017 0F85F5000000            	jne L_error_non_closure
  8728 0000601D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8729 00006020 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8730 00006023 803804                  	cmp byte [rax], T_closure
  8731 00006026 0F85E6000000            	jne L_error_non_closure
  8732 0000602C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8733 0000602F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8734 00006032 803804                  	cmp byte [rax], T_closure
  8735 00006035 0F85D7000000            	jne L_error_non_closure
  8736 0000603B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8737 0000603E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8738 00006041 803804                  	cmp byte [rax], T_closure
  8739 00006044 0F85C8000000            	jne L_error_non_closure
  8740 0000604A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8741 0000604D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8742                                  Lend:
  8743 00006050 4889C7                  	mov rdi, rax
  8744 00006053 E8B8030000              	call print_sexpr_if_not_void
  8745                                  
  8746 00006058 48BF-                           mov rdi, fmt_memory_usage
  8746 0000605A [7506000000000000] 
  8747 00006062 488B3425[FB060000]              mov rsi, qword [top_of_memory]
  8748 0000606A 4881EE[00000000]                sub rsi, memory
  8749 00006071 B800000000                      mov rax, 0
  8750                                          ENTER
    44 00006076 C8000000            <1>  enter 0, 0
    45 0000607A 4883E4F0            <1>  and rsp, ~15
  8751 0000607E E8(00000000)                    call printf
  8752                                          LEAVE
    49 00006083 C9                  <1>  leave
  8753 00006084 B800000000                      mov rax, 0
  8754 00006089 E8(00000000)                    call exit
  8755                                  
  8756                                  L_error_fvar_undefined:
  8757 0000608E 50                              push rax
  8758 0000608F 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
  8759 00006097 48BE-                           mov rsi, fmt_undefined_free_var_1
  8759 00006099 [DD05000000000000] 
  8760 000060A1 B800000000                      mov rax, 0
  8761                                          ENTER
    44 000060A6 C8000000            <1>  enter 0, 0
    45 000060AA 4883E4F0            <1>  and rsp, ~15
  8762 000060AE E8(00000000)                    call fprintf
  8763                                          LEAVE
    49 000060B3 C9                  <1>  leave
  8764 000060B4 58                              pop rax
  8765 000060B5 488B4001                        mov rax, qword [rax + 1] ; string
  8766 000060B9 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
  8767 000060BD BE01000000                      mov rsi, 1               ; sizeof(char)
  8768 000060C2 488B5001                        mov rdx, qword [rax + 1] ; string-length
  8769 000060C6 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
  8770 000060CE B800000000                      mov rax, 0
  8771                                          ENTER
    44 000060D3 C8000000            <1>  enter 0, 0
    45 000060D7 4883E4F0            <1>  and rsp, ~15
  8772 000060DB E8(00000000)                    call fwrite
  8773                                          LEAVE
    49 000060E0 C9                  <1>  leave
  8774 000060E1 488B3C25[00000000]              mov rdi, [stderr]       ; destination
  8775 000060E9 48BE-                           mov rsi, fmt_undefined_free_var_2
  8775 000060EB [F405000000000000] 
  8776 000060F3 B800000000                      mov rax, 0
  8777                                          ENTER
    44 000060F8 C8000000            <1>  enter 0, 0
    45 000060FC 4883E4F0            <1>  and rsp, ~15
  8778 00006100 E8(00000000)                    call fprintf
  8779                                          LEAVE
    49 00006105 C9                  <1>  leave
  8780 00006106 48C7C0F6FFFFFF                  mov rax, -10
  8781 0000610D E8(00000000)                    call exit
  8782                                  
  8783                                  L_error_non_closure:
  8784 00006112 488B3C25[00000000]              mov rdi, qword [stderr]
  8785 0000611A 48BE-                           mov rsi, fmt_non_closure
  8785 0000611C [AB06000000000000] 
  8786 00006124 B800000000                      mov rax, 0
  8787                                          ENTER
    44 00006129 C8000000            <1>  enter 0, 0
    45 0000612D 4883E4F0            <1>  and rsp, ~15
  8788 00006131 E8(00000000)                    call fprintf
  8789                                          LEAVE
    49 00006136 C9                  <1>  leave
  8790 00006137 48C7C0FEFFFFFF                  mov rax, -2
  8791 0000613E E8(00000000)                    call exit
  8792                                  
  8793                                  L_error_improper_list:
  8794 00006143 488B3C25[00000000]      	mov rdi, qword [stderr]
  8795 0000614B 48BE-                   	mov rsi, fmt_error_improper_list
  8795 0000614D [D306000000000000] 
  8796 00006155 B800000000              	mov rax, 0
  8797                                          ENTER
    44 0000615A C8000000            <1>  enter 0, 0
    45 0000615E 4883E4F0            <1>  and rsp, ~15
  8798 00006162 E8(00000000)            	call fprintf
  8799                                          LEAVE
    49 00006167 C9                  <1>  leave
  8800 00006168 48C7C0F9FFFFFF          	mov rax, -7
  8801 0000616F E8(00000000)            	call exit
  8802                                  
  8803                                  L_error_incorrect_arity_simple:
  8804 00006174 488B3C25[00000000]              mov rdi, qword [stderr]
  8805 0000617C 48BE-                           mov rsi, fmt_incorrect_arity_simple
  8805 0000617E [1606000000000000] 
  8806 00006186 EB12                            jmp L_error_incorrect_arity_common
  8807                                  L_error_incorrect_arity_opt:
  8808 00006188 488B3C25[00000000]              mov rdi, qword [stderr]
  8809 00006190 48BE-                           mov rsi, fmt_incorrect_arity_opt
  8809 00006192 [4106000000000000] 
  8810                                  L_error_incorrect_arity_common:
  8811 0000619A 5A                              pop rdx
  8812 0000619B 59                              pop rcx
  8813 0000619C B800000000                      mov rax, 0
  8814                                          ENTER
    44 000061A1 C8000000            <1>  enter 0, 0
    45 000061A5 4883E4F0            <1>  and rsp, ~15
  8815 000061A9 E8(00000000)                    call fprintf
  8816                                          LEAVE
    49 000061AE C9                  <1>  leave
  8817 000061AF 48C7C0FAFFFFFF                  mov rax, -6
  8818 000061B6 E8(00000000)                    call exit
  8819                                  
  8820                                  section .data
  8821                                  fmt_undefined_free_var_1:
  8822 000005DD 212121205468652066-             db `!!! The free variable \0`
  8822 000005E6 726565207661726961-
  8822 000005EF 626C652000         
  8823                                  fmt_undefined_free_var_2:
  8824 000005F4 207761732075736564-             db ` was used before it was defined.\n\0`
  8824 000005FD 206265666F72652069-
  8824 00000606 742077617320646566-
  8824 0000060F 696E65642E0A00     
  8825                                  fmt_incorrect_arity_simple:
  8826 00000616 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
  8826 0000061F 74656420256C642061-
  8826 00000628 7267756D656E74732C-
  8826 00000631 206275742067697665-
  8826 0000063A 6E20256C640A00     
  8827                                  fmt_incorrect_arity_opt:
  8828 00000641 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
  8828 0000064A 746564206174206C65-
  8828 00000653 61737420256C642061-
  8828 0000065C 7267756D656E74732C-
  8828 00000665 206275742067697665-
  8828 0000066E 6E20256C640A00     
  8829                                  fmt_memory_usage:
  8830 00000675 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
  8830 0000067E 20256C642062797465-
  8830 00000687 73206F662064796E61-
  8830 00000690 6D6963616C6C792D61-
  8830 00000699 6C6C6F636174656420-
  8830 000006A2 6D656D6F72790A0A00 
  8831                                  fmt_non_closure:
  8832 000006AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
  8832 000006B4 7074696E6720746F20-
  8832 000006BD 6170706C792061206E-
  8832 000006C6 6F6E2D636C6F737572-
  8832 000006CF 65210A00           
  8833                                  fmt_error_improper_list:
  8834 000006D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
  8834 000006DC 7267756D656E742069-
  8834 000006E5 73206E6F7420612070-
  8834 000006EE 726F706572206C6973-
  8834 000006F7 74210A00           
  8835                                  
  8836                                  section .bss
  8837                                  memory:
  8838 00000000 <res 40000000h>         	resb gbytes(1)
  8839                                  
  8840                                  section .data
  8841                                  top_of_memory:
  8842 000006FB [0000000000000000]              dq memory
  8843                                  
  8844                                  section .text
  8845                                  malloc:
  8846 000061BB 488B0425[FB060000]              mov rax, qword [top_of_memory]
  8847 000061C3 48013C25[FB060000]              add qword [top_of_memory], rdi
  8848 000061CB C3                              ret
  8849                                  
  8850                                  L_code_ptr_return:
  8851 000061CC 48837C241002            	cmp qword [rsp + 8*2], 2
  8852 000061D2 0F85C01C0000            	jne L_error_arg_count_2
  8853 000061D8 488B4C2418              	mov rcx, qword [rsp + 8*3]
  8854                                  	assert_integer(rcx)
    53 000061DD 803911              <1>  cmp byte [%1], %2
    54 000061E0 0F85511D0000        <1>  jne L_error_incorrect_type
  8855 000061E6 488B4901                	mov rcx, qword [rcx + 1]
  8856 000061EA 4883F900                	cmp rcx, 0
  8857 000061EE 0F8CD81B0000            	jl L_error_integer_range
  8858 000061F4 488B442420              	mov rax, qword [rsp + 8*4]
  8859                                  .L0:
  8860 000061F9 4883F900                        cmp rcx, 0
  8861 000061FD 7409                            je .L1
  8862 000061FF 488B6D00                	mov rbp, qword [rbp]
  8863 00006203 48FFC9                  	dec rcx
  8864 00006206 7FF1                    	jg .L0
  8865                                  .L1:
  8866 00006208 4889EC                  	mov rsp, rbp
  8867 0000620B 5D                      	pop rbp
  8868 0000620C 5B                              pop rbx
  8869 0000620D 488B4C2408                      mov rcx, qword [rsp + 8*1]
  8870 00006212 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
  8871 00006217 FFE3                    	jmp rbx
  8872                                  
  8873                                  L_code_ptr_make_list:
  8874 00006219 C8000000                	enter 0, 0
  8875 0000621D 48837D1801                      cmp COUNT, 1
  8876 00006222 740C                            je .L0
  8877 00006224 48837D1802                      cmp COUNT, 2
  8878 00006229 7411                            je .L1
  8879 0000622B E99D1C0000                      jmp L_error_arg_count_12
  8880                                  .L0:
  8881 00006230 49B9-                           mov r9, sob_void
  8881 00006232 [0000000000000000] 
  8882 0000623A EB04                            jmp .L2
  8883                                  .L1:
  8884 0000623C 4C8B4D28                        mov r9, PARAM(1)
  8885                                  .L2:
  8886 00006240 488B4D20                        mov rcx, PARAM(0)
  8887                                          assert_integer(rcx)
    53 00006244 803911              <1>  cmp byte [%1], %2
    54 00006247 0F85EA1C0000        <1>  jne L_error_incorrect_type
  8888 0000624D 488B4901                        mov rcx, qword [rcx + 1]
  8889 00006251 4883F900                        cmp rcx, 0
  8890 00006255 0F8CA21B0000                    jl L_error_arg_negative
  8891 0000625B 49B8-                           mov r8, sob_nil
  8891 0000625D [0100000000000000] 
  8892                                  .L3:
  8893 00006265 4883F900                        cmp rcx, 0
  8894 00006269 7E1D                            jle .L4
  8895 0000626B BF11000000                      mov rdi, 1 + 8 + 8
  8896 00006270 E846FFFFFF                      call malloc
  8897 00006275 C60021                          mov byte [rax], T_pair
  8898 00006278 4C894801                        mov qword [rax + 1], r9
  8899 0000627C 4C894009                        mov qword [rax + 1 + 8], r8
  8900 00006280 4989C0                          mov r8, rax
  8901 00006283 48FFC9                          dec rcx
  8902 00006286 EBDD                            jmp .L3
  8903                                  .L4:
  8904 00006288 4C89C0                          mov rax, r8
  8905 0000628B 48837D1802                      cmp COUNT, 2
  8906 00006290 7404                            je .L5
  8907 00006292 C9                              leave
  8908 00006293 C21800                          ret AND_KILL_FRAME(1)
  8909                                  .L5:
  8910 00006296 C9                      	leave
  8911 00006297 C22000                  	ret AND_KILL_FRAME(2)
  8912                                  
  8913                                  L_code_ptr_is_primitive:
  8914 0000629A C8000000                	enter 0, 0
  8915 0000629E 48837D1801              	cmp COUNT, 1
  8916 000062A3 0F85BA1B0000            	jne L_error_arg_count_1
  8917 000062A9 488B4520                	mov rax, PARAM(0)
  8918                                  	assert_closure(rax)
    53 000062AD 803804              <1>  cmp byte [%1], %2
    54 000062B0 0F85811C0000        <1>  jne L_error_incorrect_type
  8919 000062B6 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
  8920 000062BB 750C                    	jne .L_false
  8921 000062BD 48B8-                   	mov rax, sob_boolean_true
  8921 000062BF [0300000000000000] 
  8922 000062C7 EB0A                    	jmp .L_end
  8923                                  .L_false:
  8924 000062C9 48B8-                   	mov rax, sob_boolean_false
  8924 000062CB [0200000000000000] 
  8925                                  .L_end:
  8926 000062D3 C9                      	leave
  8927 000062D4 C21800                  	ret AND_KILL_FRAME(1)
  8928                                  
  8929                                  L_code_ptr_length:
  8930 000062D7 C8000000                	enter 0, 0
  8931 000062DB 48837D1801              	cmp COUNT, 1
  8932 000062E0 0F857D1B0000            	jne L_error_arg_count_1
  8933 000062E6 488B5D20                	mov rbx, PARAM(0)
  8934 000062EA BF00000000              	mov rdi, 0
  8935                                  .L:
  8936 000062EF 803B01                  	cmp byte [rbx], T_nil
  8937 000062F2 7412                    	je .L_end
  8938                                  	assert_pair(rbx)
    53 000062F4 803B21              <1>  cmp byte [%1], %2
    54 000062F7 0F853A1C0000        <1>  jne L_error_incorrect_type
  8939 000062FD 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
  8940 00006301 48FFC7                  	inc rdi
  8941 00006304 EBE9                    	jmp .L
  8942                                  .L_end:
  8943 00006306 E8A71A0000              	call make_integer
  8944 0000630B C9                      	leave
  8945 0000630C C21800                  	ret AND_KILL_FRAME(1)
  8946                                  
  8947                                  L_code_ptr_break:
  8948 0000630F 48837C241000                    cmp qword [rsp + 8 * 2], 0
  8949 00006315 0F85131B0000                    jne L_error_arg_count_0
  8950 0000631B CC                              int3
  8951 0000631C 48B8-                           mov rax, sob_void
  8951 0000631E [0000000000000000] 
  8952 00006326 C21000                          ret AND_KILL_FRAME(0)        
  8953                                  
  8954                                  L_code_ptr_frame:
  8955 00006329 C8000000                        enter 0, 0
  8956 0000632D 48837D1800                      cmp COUNT, 0
  8957 00006332 0F85F61A0000                    jne L_error_arg_count_0
  8958                                  
  8959 00006338 48BF-                           mov rdi, fmt_frame
  8959 0000633A [0307000000000000] 
  8960 00006342 488B7500                        mov rsi, qword [rbp]    ; old rbp
  8961 00006346 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
  8962 0000634A 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
  8963 0000634E 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
  8964 00006352 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
  8965 00006356 6A00                            push 0
  8966 00006358 4151                            push r9
  8967 0000635A 4150                            push r8                   ; we'll use it when printing the params
  8968 0000635C B800000000                      mov rax, 0
  8969                                          
  8970                                          ENTER
    44 00006361 C8000000            <1>  enter 0, 0
    45 00006365 4883E4F0            <1>  and rsp, ~15
  8971 00006369 E8(00000000)                    call printf
  8972                                          LEAVE
    49 0000636E C9                  <1>  leave
  8973                                  
  8974                                  .L:
  8975 0000636F 488B0C24                        mov rcx, qword [rsp]
  8976 00006373 4883F900                        cmp rcx, 0
  8977 00006377 7467                            je .L_out
  8978 00006379 48BF-                           mov rdi, fmt_frame_param_prefix
  8978 0000637B [3C07000000000000] 
  8979 00006383 488B742410                      mov rsi, qword [rsp + 8*2]
  8980 00006388 B800000000                      mov rax, 0
  8981                                          
  8982                                          ENTER
    44 0000638D C8000000            <1>  enter 0, 0
    45 00006391 4883E4F0            <1>  and rsp, ~15
  8983 00006395 E8(00000000)                    call printf
  8984                                          LEAVE
    49 0000639A C9                  <1>  leave
  8985                                  
  8986 0000639B 488B0C24                        mov rcx, qword [rsp]
  8987 0000639F 48FFC9                          dec rcx
  8988 000063A2 48890C24                        mov qword [rsp], rcx    ; dec arg count
  8989 000063A6 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
  8990 000063AB 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
  8991 000063B0 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
  8992 000063B4 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
  8993 000063B9 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
  8994 000063BC E87B000000                      call print_sexpr
  8995 000063C1 48BF-                           mov rdi, fmt_newline
  8995 000063C3 [6807000000000000] 
  8996 000063CB B800000000                      mov rax, 0
  8997                                          ENTER
    44 000063D0 C8000000            <1>  enter 0, 0
    45 000063D4 4883E4F0            <1>  and rsp, ~15
  8998 000063D8 E8(00000000)                    call printf
  8999                                          LEAVE
    49 000063DD C9                  <1>  leave
  9000 000063DE EB8F                            jmp .L
  9001                                  .L_out:
  9002 000063E0 48BF-                           mov rdi, fmt_frame_continue
  9002 000063E2 [4D07000000000000] 
  9003 000063EA B800000000                      mov rax, 0
  9004                                          ENTER
    44 000063EF C8000000            <1>  enter 0, 0
    45 000063F3 4883E4F0            <1>  and rsp, ~15
  9005 000063F7 E8(00000000)                    call printf
  9006 000063FC E8(00000000)                    call getchar
  9007                                          LEAVE
    49 00006401 C9                  <1>  leave
  9008                                          
  9009 00006402 48B8-                           mov rax, sob_void
  9009 00006404 [0000000000000000] 
  9010 0000640C C9                              leave
  9011 0000640D C21000                          ret AND_KILL_FRAME(0)
  9012                                          
  9013                                  print_sexpr_if_not_void:
  9014 00006410 4881FF[00000000]        	cmp rdi, sob_void
  9015 00006417 7422                    	je .done
  9016 00006419 E81E000000              	call print_sexpr
  9017 0000641E 48BF-                   	mov rdi, fmt_newline
  9017 00006420 [6807000000000000] 
  9018 00006428 B800000000              	mov rax, 0
  9019                                  	ENTER
    44 0000642D C8000000            <1>  enter 0, 0
    45 00006431 4883E4F0            <1>  and rsp, ~15
  9020 00006435 E8(00000000)            	call printf
  9021                                  	LEAVE
    49 0000643A C9                  <1>  leave
  9022                                  .done:
  9023 0000643B C3                      	ret
  9024                                  
  9025                                  section .data
  9026                                  fmt_frame:
  9027 00000703 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
  9027 0000070C 207265742061646472-
  9027 00000715 203D2025703B206C65-
  9027 0000071E 7820656E76203D2025-
  9027 00000727 703B20706172616D20-
  9027 00000730 636F756E74203D2025-
  9027 00000739 640A00             
  9028                                  fmt_frame_param_prefix:
  9029 0000073C 3D3D5B706172616D20-             db `==[param %d]==> \0`
  9029 00000745 25645D3D3D3E2000   
  9030                                  fmt_frame_continue:
  9031 0000074D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
  9031 00000756 723E20746F20636F6E-
  9031 0000075F 74696E75652E2E2E00 
  9032                                  fmt_newline:
  9033 00000768 0A00                    	db `\n\0`
  9034                                  fmt_void:
  9035 0000076A 233C766F69643E00        	db `#<void>\0`
  9036                                  fmt_nil:
  9037 00000772 282900                  	db `()\0`
  9038                                  fmt_boolean_false:
  9039 00000775 236600                  	db `#f\0`
  9040                                  fmt_boolean_true:
  9041 00000778 237400                  	db `#t\0`
  9042                                  fmt_char_backslash:
  9043 0000077B 235C5C00                	db `#\\\\\0`
  9044                                  fmt_char_dquote:
  9045 0000077F 235C2200                	db `#\\"\0`
  9046                                  fmt_char_simple:
  9047 00000783 235C256300              	db `#\\%c\0`
  9048                                  fmt_char_null:
  9049 00000788 235C6E756C00            	db `#\\nul\0`
  9050                                  fmt_char_bell:
  9051 0000078E 235C62656C6C00          	db `#\\bell\0`
  9052                                  fmt_char_backspace:
  9053 00000795 235C6261636B737061-     	db `#\\backspace\0`
  9053 0000079E 636500             
  9054                                  fmt_char_tab:
  9055 000007A1 235C74616200            	db `#\\tab\0`
  9056                                  fmt_char_newline:
  9057 000007A7 235C6E65776C696E65-     	db `#\\newline\0`
  9057 000007B0 00                 
  9058                                  fmt_char_formfeed:
  9059 000007B1 235C7061676500          	db `#\\page\0`
  9060                                  fmt_char_return:
  9061 000007B8 235C72657475726E00      	db `#\\return\0`
  9062                                  fmt_char_escape:
  9063 000007C1 235C65736300            	db `#\\esc\0`
  9064                                  fmt_char_space:
  9065 000007C7 235C737061636500        	db `#\\space\0`
  9066                                  fmt_char_hex:
  9067 000007CF 235C782530325800        	db `#\\x%02X\0`
  9068                                  fmt_gensym:
  9069 000007D7 47256C6400                      db `G%ld\0`
  9070                                  fmt_closure:
  9071 000007DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
  9071 000007E5 206174203078253038-
  9071 000007EE 5820656E763D307825-
  9071 000007F7 30385820636F64653D-
  9071 00000800 3078253038583E00   
  9072                                  fmt_lparen:
  9073 00000808 2800                    	db `(\0`
  9074                                  fmt_dotted_pair:
  9075 0000080A 202E2000                	db ` . \0`
  9076                                  fmt_rparen:
  9077 0000080E 2900                    	db `)\0`
  9078                                  fmt_space:
  9079 00000810 2000                    	db ` \0`
  9080                                  fmt_empty_vector:
  9081 00000812 23282900                	db `#()\0`
  9082                                  fmt_vector:
  9083 00000816 232800                  	db `#(\0`
  9084                                  fmt_real:
  9085 00000819 256600                  	db `%f\0`
  9086                                  fmt_fraction:
  9087 0000081C 256C642F256C6400        	db `%ld/%ld\0`
  9088                                  fmt_zero:
  9089 00000824 3000                    	db `0\0`
  9090                                  fmt_int:
  9091 00000826 256C6400                	db `%ld\0`
  9092                                  fmt_unknown_scheme_object_error:
  9093 0000082A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
  9093 00000833 6F723A20556E6B6E6F-
  9093 0000083C 776E20536368656D65-
  9093 00000845 2D6F626A6563742028-
  9093 0000084E 525454492030782530-
  9093 00000857 32582920           
  9094 0000085B 617420616464726573-     	db `at address 0x%08X\n\n\0`
  9094 00000864 73203078253038580A-
  9094 0000086D 0A00               
  9095                                  fmt_dquote:
  9096 0000086F 2200                    	db `\"\0`
  9097                                  fmt_string_char:
  9098 00000871 256300                          db `%c\0`
  9099                                  fmt_string_char_7:
  9100 00000874 5C6100                          db `\\a\0`
  9101                                  fmt_string_char_8:
  9102 00000877 5C6200                          db `\\b\0`
  9103                                  fmt_string_char_9:
  9104 0000087A 5C7400                          db `\\t\0`
  9105                                  fmt_string_char_10:
  9106 0000087D 5C6E00                          db `\\n\0`
  9107                                  fmt_string_char_11:
  9108 00000880 5C7600                          db `\\v\0`
  9109                                  fmt_string_char_12:
  9110 00000883 5C6600                          db `\\f\0`
  9111                                  fmt_string_char_13:
  9112 00000886 5C7200                          db `\\r\0`
  9113                                  fmt_string_char_34:
  9114 00000889 5C2200                          db `\\"\0`
  9115                                  fmt_string_char_92:
  9116 0000088C 5C5C00                          db `\\\\\0`
  9117                                  fmt_string_char_hex:
  9118 0000088F 5C7825583B00                    db `\\x%X;\0`
  9119                                  
  9120                                  section .text
  9121                                  
  9122                                  print_sexpr:
  9123 0000643C C8000000                	enter 0, 0
  9124 00006440 8A07                    	mov al, byte [rdi]
  9125 00006442 3C00                    	cmp al, T_void
  9126 00006444 7465                    	je .Lvoid
  9127 00006446 3C01                    	cmp al, T_nil
  9128 00006448 7470                    	je .Lnil
  9129 0000644A 3C09                    	cmp al, T_boolean_false
  9130 0000644C 747B                    	je .Lboolean_false
  9131 0000644E 3C0A                    	cmp al, T_boolean_true
  9132 00006450 0F8482000000            	je .Lboolean_true
  9133 00006456 3C02                    	cmp al, T_char
  9134 00006458 0F8489000000            	je .Lchar
  9135 0000645E 3C41                    	cmp al, T_interned_symbol
  9136 00006460 0F84CB010000            	je .Linterned_symbol
  9137 00006466 3C42                            cmp al, T_uninterned_symbol
  9138 00006468 0F84EF010000                    je .Luninterned_symbol
  9139 0000646E 3C21                    	cmp al, T_pair
  9140 00006470 0F84FA010000            	je .Lpair
  9141 00006476 3C22                    	cmp al, T_vector
  9142 00006478 0F84C3020000            	je .Lvector
  9143 0000647E 3C04                    	cmp al, T_closure
  9144 00006480 0F8491010000            	je .Lclosure
  9145 00006486 3C13                    	cmp al, T_real
  9146 00006488 0F8454030000            	je .Lreal
  9147 0000648E 3C12                    	cmp al, T_fraction
  9148 00006490 0F847A030000            	je .Lfraction
  9149 00006496 3C11                    	cmp al, T_integer
  9150 00006498 0F84B3030000            	je .Linteger
  9151 0000649E 3C03                    	cmp al, T_string
  9152 000064A0 0F84BE030000            	je .Lstring
  9153                                  
  9154 000064A6 E9F6040000              	jmp .Lunknown_sexpr_type
  9155                                  
  9156                                  .Lvoid:
  9157 000064AB 48BF-                   	mov rdi, fmt_void
  9157 000064AD [6A07000000000000] 
  9158 000064B5 E91A050000              	jmp .Lemit
  9159                                  
  9160                                  .Lnil:
  9161 000064BA 48BF-                   	mov rdi, fmt_nil
  9161 000064BC [7207000000000000] 
  9162 000064C4 E90B050000              	jmp .Lemit
  9163                                  
  9164                                  .Lboolean_false:
  9165 000064C9 48BF-                   	mov rdi, fmt_boolean_false
  9165 000064CB [7507000000000000] 
  9166 000064D3 E9FC040000              	jmp .Lemit
  9167                                  
  9168                                  .Lboolean_true:
  9169 000064D8 48BF-                   	mov rdi, fmt_boolean_true
  9169 000064DA [7807000000000000] 
  9170 000064E2 E9ED040000              	jmp .Lemit
  9171                                  
  9172                                  .Lchar:
  9173 000064E7 8A4701                  	mov al, byte [rdi + 1]
  9174 000064EA 3C20                    	cmp al, ' '
  9175 000064EC 7E28                    	jle .Lchar_whitespace
  9176 000064EE 3C5C                    	cmp al, 92 		; backslash
  9177 000064F0 0F847C000000            	je .Lchar_backslash
  9178 000064F6 3C22                    	cmp al, '"'
  9179 000064F8 0F8483000000            	je .Lchar_dquote
  9180 000064FE 4825FF000000            	and rax, 255
  9181 00006504 48BF-                   	mov rdi, fmt_char_simple
  9181 00006506 [8307000000000000] 
  9182 0000650E 4889C6                  	mov rsi, rax
  9183 00006511 E9BE040000              	jmp .Lemit
  9184                                  
  9185                                  .Lchar_whitespace:
  9186 00006516 3C00                    	cmp al, 0
  9187 00006518 7476                    	je .Lchar_null
  9188 0000651A 3C07                    	cmp al, 7
  9189 0000651C 0F847D000000            	je .Lchar_bell
  9190 00006522 3C08                    	cmp al, 8
  9191 00006524 0F8484000000            	je .Lchar_backspace
  9192 0000652A 3C09                    	cmp al, 9
  9193 0000652C 0F848B000000            	je .Lchar_tab
  9194 00006532 3C0A                    	cmp al, 10
  9195 00006534 0F8492000000            	je .Lchar_newline
  9196 0000653A 3C0C                    	cmp al, 12
  9197 0000653C 0F8499000000            	je .Lchar_formfeed
  9198 00006542 3C0D                    	cmp al, 13
  9199 00006544 0F84A0000000            	je .Lchar_return
  9200 0000654A 3C1B                    	cmp al, 27
  9201 0000654C 0F84A7000000            	je .Lchar_escape
  9202 00006552 4825FF000000            	and rax, 255
  9203 00006558 3C20                    	cmp al, ' '
  9204 0000655A 0F84A8000000            	je .Lchar_space
  9205 00006560 48BF-                   	mov rdi, fmt_char_hex
  9205 00006562 [CF07000000000000] 
  9206 0000656A 4889C6                  	mov rsi, rax
  9207 0000656D E962040000              	jmp .Lemit	
  9208                                  
  9209                                  .Lchar_backslash:
  9210 00006572 48BF-                   	mov rdi, fmt_char_backslash
  9210 00006574 [7B07000000000000] 
  9211 0000657C E953040000              	jmp .Lemit
  9212                                  
  9213                                  .Lchar_dquote:
  9214 00006581 48BF-                   	mov rdi, fmt_char_dquote
  9214 00006583 [7F07000000000000] 
  9215 0000658B E944040000              	jmp .Lemit
  9216                                  
  9217                                  .Lchar_null:
  9218 00006590 48BF-                   	mov rdi, fmt_char_null
  9218 00006592 [8807000000000000] 
  9219 0000659A E935040000              	jmp .Lemit
  9220                                  
  9221                                  .Lchar_bell:
  9222 0000659F 48BF-                   	mov rdi, fmt_char_bell
  9222 000065A1 [8E07000000000000] 
  9223 000065A9 E926040000              	jmp .Lemit
  9224                                  
  9225                                  .Lchar_backspace:
  9226 000065AE 48BF-                   	mov rdi, fmt_char_backspace
  9226 000065B0 [9507000000000000] 
  9227 000065B8 E917040000              	jmp .Lemit
  9228                                  
  9229                                  .Lchar_tab:
  9230 000065BD 48BF-                   	mov rdi, fmt_char_tab
  9230 000065BF [A107000000000000] 
  9231 000065C7 E908040000              	jmp .Lemit
  9232                                  
  9233                                  .Lchar_newline:
  9234 000065CC 48BF-                   	mov rdi, fmt_char_newline
  9234 000065CE [A707000000000000] 
  9235 000065D6 E9F9030000              	jmp .Lemit
  9236                                  
  9237                                  .Lchar_formfeed:
  9238 000065DB 48BF-                   	mov rdi, fmt_char_formfeed
  9238 000065DD [B107000000000000] 
  9239 000065E5 E9EA030000              	jmp .Lemit
  9240                                  
  9241                                  .Lchar_return:
  9242 000065EA 48BF-                   	mov rdi, fmt_char_return
  9242 000065EC [B807000000000000] 
  9243 000065F4 E9DB030000              	jmp .Lemit
  9244                                  
  9245                                  .Lchar_escape:
  9246 000065F9 48BF-                   	mov rdi, fmt_char_escape
  9246 000065FB [C107000000000000] 
  9247 00006603 E9CC030000              	jmp .Lemit
  9248                                  
  9249                                  .Lchar_space:
  9250 00006608 48BF-                   	mov rdi, fmt_char_space
  9250 0000660A [C707000000000000] 
  9251 00006612 E9BD030000              	jmp .Lemit
  9252                                  
  9253                                  .Lclosure:
  9254 00006617 4889FE                  	mov rsi, qword rdi
  9255 0000661A 48BF-                   	mov rdi, fmt_closure
  9255 0000661C [DC07000000000000] 
  9256 00006624 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
  9257 00006628 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
  9258 0000662C E9A3030000              	jmp .Lemit
  9259                                  
  9260                                  .Linterned_symbol:
  9261 00006631 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
  9262 00006635 BE01000000              	mov rsi, 1		 ; size = 1 byte
  9263 0000663A 488B5701                	mov rdx, qword [rdi + 1] ; length
  9264 0000663E 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
  9265 00006642 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
  9266                                  	ENTER
    44 0000664A C8000000            <1>  enter 0, 0
    45 0000664E 4883E4F0            <1>  and rsp, ~15
  9267 00006652 E8(00000000)            	call fwrite
  9268                                  	LEAVE
    49 00006657 C9                  <1>  leave
  9269 00006658 E98C030000              	jmp .Lend
  9270                                  
  9271                                  .Luninterned_symbol:
  9272 0000665D 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
  9273 00006661 48BF-                           mov rdi, fmt_gensym
  9273 00006663 [D707000000000000] 
  9274 0000666B E964030000                      jmp .Lemit
  9275                                  	
  9276                                  .Lpair:
  9277 00006670 57                      	push rdi
  9278 00006671 48BF-                   	mov rdi, fmt_lparen
  9278 00006673 [0808000000000000] 
  9279 0000667B B800000000              	mov rax, 0
  9280                                          ENTER
    44 00006680 C8000000            <1>  enter 0, 0
    45 00006684 4883E4F0            <1>  and rsp, ~15
  9281 00006688 E8(00000000)            	call printf
  9282                                          LEAVE
    49 0000668D C9                  <1>  leave
  9283 0000668E 488B3C24                	mov rdi, qword [rsp] 	; pair
  9284 00006692 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
  9285 00006696 E8A1FDFFFF              	call print_sexpr
  9286 0000669B 5F                      	pop rdi 		; pair
  9287 0000669C 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
  9288                                  .Lcdr:
  9289 000066A0 8A07                    	mov al, byte [rdi]
  9290 000066A2 3C01                    	cmp al, T_nil
  9291 000066A4 7447                    	je .Lcdr_nil
  9292 000066A6 3C21                    	cmp al, T_pair
  9293 000066A8 7462                    	je .Lcdr_pair
  9294 000066AA 57                      	push rdi
  9295 000066AB 48BF-                   	mov rdi, fmt_dotted_pair
  9295 000066AD [0A08000000000000] 
  9296 000066B5 B800000000              	mov rax, 0
  9297                                          ENTER
    44 000066BA C8000000            <1>  enter 0, 0
    45 000066BE 4883E4F0            <1>  and rsp, ~15
  9298 000066C2 E8(00000000)            	call printf
  9299                                          LEAVE
    49 000066C7 C9                  <1>  leave
  9300 000066C8 5F                      	pop rdi
  9301 000066C9 E86EFDFFFF              	call print_sexpr
  9302 000066CE 48BF-                   	mov rdi, fmt_rparen
  9302 000066D0 [0E08000000000000] 
  9303 000066D8 B800000000              	mov rax, 0
  9304                                          ENTER
    44 000066DD C8000000            <1>  enter 0, 0
    45 000066E1 4883E4F0            <1>  and rsp, ~15
  9305 000066E5 E8(00000000)            	call printf
  9306                                          LEAVE
    49 000066EA C9                  <1>  leave
  9307 000066EB C9                      	leave
  9308 000066EC C3                      	ret
  9309                                  
  9310                                  .Lcdr_nil:
  9311 000066ED 48BF-                   	mov rdi, fmt_rparen
  9311 000066EF [0E08000000000000] 
  9312 000066F7 B800000000              	mov rax, 0
  9313                                          ENTER
    44 000066FC C8000000            <1>  enter 0, 0
    45 00006700 4883E4F0            <1>  and rsp, ~15
  9314 00006704 E8(00000000)            	call printf
  9315                                          LEAVE
    49 00006709 C9                  <1>  leave
  9316 0000670A C9                      	leave
  9317 0000670B C3                      	ret
  9318                                  
  9319                                  .Lcdr_pair:
  9320 0000670C 57                      	push rdi
  9321 0000670D 48BF-                   	mov rdi, fmt_space
  9321 0000670F [1008000000000000] 
  9322 00006717 B800000000              	mov rax, 0
  9323                                          ENTER
    44 0000671C C8000000            <1>  enter 0, 0
    45 00006720 4883E4F0            <1>  and rsp, ~15
  9324 00006724 E8(00000000)            	call printf
  9325                                          LEAVE
    49 00006729 C9                  <1>  leave
  9326 0000672A 488B3C24                	mov rdi, qword [rsp]
  9327 0000672E 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
  9328 00006732 E805FDFFFF              	call print_sexpr
  9329 00006737 5F                      	pop rdi
  9330 00006738 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
  9331 0000673C E95FFFFFFF              	jmp .Lcdr
  9332                                  
  9333                                  .Lvector:
  9334 00006741 488B4701                	mov rax, qword [rdi + 1] ; length
  9335 00006745 4883F800                	cmp rax, 0
  9336 00006749 0F8484000000            	je .Lvector_empty
  9337 0000674F 57                      	push rdi
  9338 00006750 48BF-                   	mov rdi, fmt_vector
  9338 00006752 [1608000000000000] 
  9339 0000675A B800000000              	mov rax, 0
  9340                                          ENTER
    44 0000675F C8000000            <1>  enter 0, 0
    45 00006763 4883E4F0            <1>  and rsp, ~15
  9341 00006767 E8(00000000)            	call printf
  9342                                          LEAVE
    49 0000676C C9                  <1>  leave
  9343 0000676D 488B3C24                	mov rdi, qword [rsp]
  9344 00006771 FF7701                  	push qword [rdi + 1]
  9345 00006774 6A01                    	push 1
  9346 00006776 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
  9347 0000677A E8BDFCFFFF              	call print_sexpr
  9348                                  .Lvector_loop:
  9349                                  	; [rsp] index
  9350                                  	; [rsp + 8*1] limit
  9351                                  	; [rsp + 8*2] vector
  9352 0000677F 488B0424                	mov rax, qword [rsp]
  9353 00006783 483B442408              	cmp rax, qword [rsp + 8*1]
  9354 00006788 7436                    	je .Lvector_end
  9355 0000678A 48BF-                   	mov rdi, fmt_space
  9355 0000678C [1008000000000000] 
  9356 00006794 B800000000              	mov rax, 0
  9357                                          ENTER
    44 00006799 C8000000            <1>  enter 0, 0
    45 0000679D 4883E4F0            <1>  and rsp, ~15
  9358 000067A1 E8(00000000)            	call printf
  9359                                          LEAVE
    49 000067A6 C9                  <1>  leave
  9360 000067A7 488B0424                	mov rax, qword [rsp]
  9361 000067AB 488B5C2410              	mov rbx, qword [rsp + 8*2]
  9362 000067B0 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
  9363 000067B5 E882FCFFFF              	call print_sexpr
  9364 000067BA 48FF0424                	inc qword [rsp]
  9365 000067BE EBBF                    	jmp .Lvector_loop
  9366                                  
  9367                                  .Lvector_end:
  9368 000067C0 4883C418                	add rsp, 8*3
  9369 000067C4 48BF-                   	mov rdi, fmt_rparen
  9369 000067C6 [0E08000000000000] 
  9370 000067CE E901020000              	jmp .Lemit	
  9371                                  
  9372                                  .Lvector_empty:
  9373 000067D3 48BF-                   	mov rdi, fmt_empty_vector
  9373 000067D5 [1208000000000000] 
  9374 000067DD E9F2010000              	jmp .Lemit
  9375                                  
  9376                                  .Lreal:
  9377 000067E2 FF7701                  	push qword [rdi + 1]
  9378 000067E5 F20F100424              	movsd xmm0, qword [rsp]
  9379 000067EA 4883C408                	add rsp, 8*1
  9380 000067EE 48BF-                   	mov rdi, fmt_real
  9380 000067F0 [1908000000000000] 
  9381 000067F8 B801000000              	mov rax, 1
  9382                                  	ENTER
    44 000067FD C8000000            <1>  enter 0, 0
    45 00006801 4883E4F0            <1>  and rsp, ~15
  9383 00006805 E8(00000000)            	call printf
  9384                                  	LEAVE
    49 0000680A C9                  <1>  leave
  9385 0000680B E9D9010000              	jmp .Lend
  9386                                  
  9387                                  .Lfraction:
  9388 00006810 488B7701                	mov rsi, qword [rdi + 1]
  9389 00006814 488B5709                	mov rdx, qword [rdi + 1 + 8]
  9390 00006818 4883FE00                	cmp rsi, 0
  9391 0000681C 7415                    	je .Lrat_zero
  9392 0000681E 4883FA01                	cmp rdx, 1
  9393 00006822 741E                    	je .Lrat_int
  9394 00006824 48BF-                   	mov rdi, fmt_fraction
  9394 00006826 [1C08000000000000] 
  9395 0000682E E9A1010000              	jmp .Lemit
  9396                                  
  9397                                  .Lrat_zero:
  9398 00006833 48BF-                   	mov rdi, fmt_zero
  9398 00006835 [2408000000000000] 
  9399 0000683D E992010000              	jmp .Lemit
  9400                                  
  9401                                  .Lrat_int:
  9402 00006842 48BF-                   	mov rdi, fmt_int
  9402 00006844 [2608000000000000] 
  9403 0000684C E983010000              	jmp .Lemit
  9404                                  
  9405                                  .Linteger:
  9406 00006851 488B7701                	mov rsi, qword [rdi + 1]
  9407 00006855 48BF-                   	mov rdi, fmt_int
  9407 00006857 [2608000000000000] 
  9408 0000685F E970010000              	jmp .Lemit
  9409                                  
  9410                                  .Lstring:
  9411 00006864 488D4709                	lea rax, [rdi + 1 + 8]
  9412 00006868 50                      	push rax
  9413 00006869 FF7701                  	push qword [rdi + 1]
  9414 0000686C 48BF-                   	mov rdi, fmt_dquote
  9414 0000686E [6F08000000000000] 
  9415 00006876 B800000000              	mov rax, 0
  9416                                  	ENTER
    44 0000687B C8000000            <1>  enter 0, 0
    45 0000687F 4883E4F0            <1>  and rsp, ~15
  9417 00006883 E8(00000000)            	call printf
  9418                                  	LEAVE
    49 00006888 C9                  <1>  leave
  9419                                  .Lstring_loop:
  9420                                  	; qword [rsp]: limit
  9421                                  	; qword [rsp + 8*1]: char *
  9422 00006889 48833C2400              	cmp qword [rsp], 0
  9423 0000688E 0F84FD000000            	je .Lstring_end
  9424 00006894 488B442408              	mov rax, qword [rsp + 8*1]
  9425 00006899 8A00                    	mov al, byte [rax]
  9426 0000689B 4825FF000000            	and rax, 255
  9427 000068A1 3C07                    	cmp al, 7
  9428 000068A3 7468                            je .Lstring_char_7
  9429 000068A5 3C08                            cmp al, 8
  9430 000068A7 7470                            je .Lstring_char_8
  9431 000068A9 3C09                            cmp al, 9
  9432 000068AB 7478                            je .Lstring_char_9
  9433 000068AD 3C0A                            cmp al, 10
  9434 000068AF 0F847C000000                    je .Lstring_char_10
  9435 000068B5 3C0B                            cmp al, 11
  9436 000068B7 0F8480000000                    je .Lstring_char_11
  9437 000068BD 3C0C                            cmp al, 12
  9438 000068BF 0F8484000000                    je .Lstring_char_12
  9439 000068C5 3C0D                            cmp al, 13
  9440 000068C7 0F8488000000                    je .Lstring_char_13
  9441 000068CD 3C22                            cmp al, 34
  9442 000068CF 0F848C000000                    je .Lstring_char_34
  9443 000068D5 3C5C                            cmp al, 92              ;         je .Lstring_char_92
  9445 000068D7 3C20                            cmp al, ' '
  9446 000068D9 0F8CA0000000                    jl .Lstring_char_hex
  9447 000068DF 48BF-                           mov rdi, fmt_string_char
  9447 000068E1 [7108000000000000] 
  9448 000068E9 4889C6                          mov rsi, rax
  9449                                  .Lstring_char_emit:
  9450 000068EC B800000000                      mov rax, 0
  9451                                          ENTER
    44 000068F1 C8000000            <1>  enter 0, 0
    45 000068F5 4883E4F0            <1>  and rsp, ~15
  9452 000068F9 E8(00000000)                    call printf
  9453                                          LEAVE
    49 000068FE C9                  <1>  leave
  9454 000068FF 48FF0C24                        dec qword [rsp]
  9455 00006903 48FF442408                      inc qword [rsp + 8*1]
  9456 00006908 E97CFFFFFF                      jmp .Lstring_loop
  9457                                  
  9458                                  .Lstring_char_7:
  9459 0000690D 48BF-                           mov rdi, fmt_string_char_7
  9459 0000690F [7408000000000000] 
  9460 00006917 EBD3                            jmp .Lstring_char_emit
  9461                                  
  9462                                  .Lstring_char_8:
  9463 00006919 48BF-                           mov rdi, fmt_string_char_8
  9463 0000691B [7708000000000000] 
  9464 00006923 EBC7                            jmp .Lstring_char_emit
  9465                                          
  9466                                  .Lstring_char_9:
  9467 00006925 48BF-                           mov rdi, fmt_string_char_9
  9467 00006927 [7A08000000000000] 
  9468 0000692F EBBB                            jmp .Lstring_char_emit
  9469                                  
  9470                                  .Lstring_char_10:
  9471 00006931 48BF-                           mov rdi, fmt_string_char_10
  9471 00006933 [7D08000000000000] 
  9472 0000693B EBAF                            jmp .Lstring_char_emit
  9473                                  
  9474                                  .Lstring_char_11:
  9475 0000693D 48BF-                           mov rdi, fmt_string_char_11
  9475 0000693F [8008000000000000] 
  9476 00006947 EBA3                            jmp .Lstring_char_emit
  9477                                  
  9478                                  .Lstring_char_12:
  9479 00006949 48BF-                           mov rdi, fmt_string_char_12
  9479 0000694B [8308000000000000] 
  9480 00006953 EB97                            jmp .Lstring_char_emit
  9481                                  
  9482                                  .Lstring_char_13:
  9483 00006955 48BF-                           mov rdi, fmt_string_char_13
  9483 00006957 [8608000000000000] 
  9484 0000695F EB8B                            jmp .Lstring_char_emit
  9485                                  
  9486                                  .Lstring_char_34:
  9487 00006961 48BF-                           mov rdi, fmt_string_char_34
  9487 00006963 [8908000000000000] 
  9488 0000696B E97CFFFFFF                      jmp .Lstring_char_emit
  9489                                  
  9490                                  .Lstring_char_92:
  9491 00006970 48BF-                           mov rdi, fmt_string_char_92
  9491 00006972 [8C08000000000000] 
  9492 0000697A E96DFFFFFF                      jmp .Lstring_char_emit
  9493                                  
  9494                                  .Lstring_char_hex:
  9495 0000697F 48BF-                           mov rdi, fmt_string_char_hex
  9495 00006981 [8F08000000000000] 
  9496 00006989 4889C6                          mov rsi, rax
  9497 0000698C E95BFFFFFF                      jmp .Lstring_char_emit        
  9498                                  
  9499                                  .Lstring_end:
  9500 00006991 4883C410                	add rsp, 8 * 2
  9501 00006995 48BF-                   	mov rdi, fmt_dquote
  9501 00006997 [6F08000000000000] 
  9502 0000699F EB33                    	jmp .Lemit
  9503                                  
  9504                                  .Lunknown_sexpr_type:
  9505 000069A1 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
  9505 000069A3 [2A08000000000000] 
  9506 000069AB 4825FF000000            	and rax, 255
  9507 000069B1 4889C2                  	mov rdx, rax
  9508 000069B4 4889F9                  	mov rcx, rdi
  9509 000069B7 488B3C25[00000000]      	mov rdi, qword [stderr]
  9510 000069BF B800000000              	mov rax, 0
  9511                                          ENTER
    44 000069C4 C8000000            <1>  enter 0, 0
    45 000069C8 4883E4F0            <1>  and rsp, ~15
  9512 000069CC E8(00000000)            	call fprintf
  9513                                          LEAVE
    49 000069D1 C9                  <1>  leave
  9514 000069D2 C9                              leave
  9515 000069D3 C3                              ret
  9516                                  
  9517                                  .Lemit:
  9518 000069D4 B800000000              	mov rax, 0
  9519                                          ENTER
    44 000069D9 C8000000            <1>  enter 0, 0
    45 000069DD 4883E4F0            <1>  and rsp, ~15
  9520 000069E1 E8(00000000)            	call printf
  9521                                          LEAVE
    49 000069E6 C9                  <1>  leave
  9522 000069E7 EB00                    	jmp .Lend
  9523                                  
  9524                                  .Lend:
  9525                                  	LEAVE
    49 000069E9 C9                  <1>  leave
  9526 000069EA C3                      	ret
  9527                                  
  9528                                  ;;; rdi: address of free variable
  9529                                  ;;; rsi: address of code-pointer
  9530                                  bind_primitive:
  9531 000069EB C8000000                        enter 0, 0
  9532 000069EF 57                              push rdi
  9533 000069F0 BF11000000                      mov rdi, (1 + 8 + 8)
  9534 000069F5 E8C1F7FFFF                      call malloc
  9535 000069FA 5F                              pop rdi
  9536 000069FB C60004                          mov byte [rax], T_closure
  9537 000069FE 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
  9538 00006A06 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
  9539 00006A0A 488907                          mov qword [rdi], rax
  9540 00006A0D 48B8-                           mov rax, sob_void
  9540 00006A0F [0000000000000000] 
  9541 00006A17 C9                              leave
  9542 00006A18 C3                              ret
  9543                                  
  9544                                  L_code_ptr_ash:
  9545 00006A19 C8000000                        enter 0, 0
  9546 00006A1D 48837D1802                      cmp COUNT, 2
  9547 00006A22 0F8570140000                    jne L_error_arg_count_2
  9548 00006A28 488B7D20                        mov rdi, PARAM(0)
  9549                                          assert_integer(rdi)
    53 00006A2C 803F11              <1>  cmp byte [%1], %2
    54 00006A2F 0F8502150000        <1>  jne L_error_incorrect_type
  9550 00006A35 488B4D28                        mov rcx, PARAM(1)
  9551                                          assert_integer(rcx)
    53 00006A39 803911              <1>  cmp byte [%1], %2
    54 00006A3C 0F85F5140000        <1>  jne L_error_incorrect_type
  9552 00006A42 488B7F01                        mov rdi, qword [rdi + 1]
  9553 00006A46 488B4901                        mov rcx, qword [rcx + 1]
  9554 00006A4A 4883F900                        cmp rcx, 0
  9555 00006A4E 7C0F                            jl .L_negative
  9556                                  .L_loop_positive:
  9557 00006A50 4883F900                        cmp rcx, 0
  9558 00006A54 741B                            je .L_exit
  9559 00006A56 48D3E7                          sal rdi, cl
  9560 00006A59 48C1E908                        shr rcx, 8
  9561 00006A5D EBF1                            jmp .L_loop_positive
  9562                                  .L_negative:
  9563 00006A5F 48F7D9                          neg rcx
  9564                                  .L_loop_negative:
  9565 00006A62 4883F900                        cmp rcx, 0
  9566 00006A66 7409                            je .L_exit
  9567 00006A68 48D3FF                          sar rdi, cl
  9568 00006A6B 48C1E908                        shr rcx, 8
  9569 00006A6F EBF1                            jmp .L_loop_negative
  9570                                  .L_exit:
  9571 00006A71 E83C130000                      call make_integer
  9572 00006A76 C9                              leave
  9573 00006A77 C22000                          ret AND_KILL_FRAME(2)
  9574                                  
  9575                                  L_code_ptr_logand:
  9576 00006A7A C8000000                        enter 0, 0
  9577 00006A7E 48837D1802                      cmp COUNT, 2
  9578 00006A83 0F850F140000                    jne L_error_arg_count_2
  9579 00006A89 4C8B4520                        mov r8, PARAM(0)
  9580                                          assert_integer(r8)
    53 00006A8D 41803811            <1>  cmp byte [%1], %2
    54 00006A91 0F85A0140000        <1>  jne L_error_incorrect_type
  9581 00006A97 4C8B4D28                        mov r9, PARAM(1)
  9582                                          assert_integer(r9)
    53 00006A9B 41803911            <1>  cmp byte [%1], %2
    54 00006A9F 0F8592140000        <1>  jne L_error_incorrect_type
  9583 00006AA5 498B7801                        mov rdi, qword [r8 + 1]
  9584 00006AA9 49237901                        and rdi, qword [r9 + 1]
  9585 00006AAD E800130000                      call make_integer
  9586 00006AB2 C9                              leave
  9587 00006AB3 C22000                          ret AND_KILL_FRAME(2)
  9588                                  
  9589                                  L_code_ptr_logor:
  9590 00006AB6 C8000000                        enter 0, 0
  9591 00006ABA 48837D1802                      cmp COUNT, 2
  9592 00006ABF 0F85D3130000                    jne L_error_arg_count_2
  9593 00006AC5 4C8B4520                        mov r8, PARAM(0)
  9594                                          assert_integer(r8)
    53 00006AC9 41803811            <1>  cmp byte [%1], %2
    54 00006ACD 0F8564140000        <1>  jne L_error_incorrect_type
  9595 00006AD3 4C8B4D28                        mov r9, PARAM(1)
  9596                                          assert_integer(r9)
    53 00006AD7 41803911            <1>  cmp byte [%1], %2
    54 00006ADB 0F8556140000        <1>  jne L_error_incorrect_type
  9597 00006AE1 498B7801                        mov rdi, qword [r8 + 1]
  9598 00006AE5 490B7901                        or rdi, qword [r9 + 1]
  9599 00006AE9 E8C4120000                      call make_integer
  9600 00006AEE C9                              leave
  9601 00006AEF C22000                          ret AND_KILL_FRAME(2)
  9602                                  
  9603                                  L_code_ptr_logxor:
  9604 00006AF2 C8000000                        enter 0, 0
  9605 00006AF6 48837D1802                      cmp COUNT, 2
  9606 00006AFB 0F8597130000                    jne L_error_arg_count_2
  9607 00006B01 4C8B4520                        mov r8, PARAM(0)
  9608                                          assert_integer(r8)
    53 00006B05 41803811            <1>  cmp byte [%1], %2
    54 00006B09 0F8528140000        <1>  jne L_error_incorrect_type
  9609 00006B0F 4C8B4D28                        mov r9, PARAM(1)
  9610                                          assert_integer(r9)
    53 00006B13 41803911            <1>  cmp byte [%1], %2
    54 00006B17 0F851A140000        <1>  jne L_error_incorrect_type
  9611 00006B1D 498B7801                        mov rdi, qword [r8 + 1]
  9612 00006B21 49337901                        xor rdi, qword [r9 + 1]
  9613 00006B25 E888120000                      call make_integer
  9614                                          LEAVE
    49 00006B2A C9                  <1>  leave
  9615 00006B2B C22000                          ret AND_KILL_FRAME(2)
  9616                                  
  9617                                  L_code_ptr_lognot:
  9618 00006B2E C8000000                        enter 0, 0
  9619 00006B32 48837D1801                      cmp COUNT, 1
  9620 00006B37 0F8526130000                    jne L_error_arg_count_1
  9621 00006B3D 4C8B4520                        mov r8, PARAM(0)
  9622                                          assert_integer(r8)
    53 00006B41 41803811            <1>  cmp byte [%1], %2
    54 00006B45 0F85EC130000        <1>  jne L_error_incorrect_type
  9623 00006B4B 498B7801                        mov rdi, qword [r8 + 1]
  9624 00006B4F 48F7D7                          not rdi
  9625 00006B52 E85B120000                      call make_integer
  9626 00006B57 C9                              leave
  9627 00006B58 C21800                          ret AND_KILL_FRAME(1)
  9628                                  
  9629                                  L_code_ptr_bin_apply:
  9630                                  ;;; fill in for final project!
  9631 00006B5B C8000000                enter 0, 0
  9632 00006B5F 48837D1803              cmp COUNT, 3
  9633 00006B64 0F8598130000            jne L_error_arg_count_3
  9634 00006B6A 488B7D20                mov rdi, PARAM(0)
  9635                                  assert_closure(rdi)
    53 00006B6E 803F04              <1>  cmp byte [%1], %2
    54 00006B71 0F85C0130000        <1>  jne L_error_incorrect_type
  9636 00006B77 488B7528                mov rsi, PARAM(1)
  9637                                  assert_integer(rsi)
    53 00006B7B 803E11              <1>  cmp byte [%1], %2
    54 00006B7E 0F85B3130000        <1>  jne L_error_incorrect_type
  9638 00006B84 488B5530                mov rdx, PARAM(2)
  9639                                  assert_vector(rdx)
    53 00006B88 803A22              <1>  cmp byte [%1], %2
    54 00006B8B 0F85A6130000        <1>  jne L_error_incorrect_type
  9640 00006B91 488B4E01                mov rcx, qword [rsi + 1]
  9641 00006B95 4883F900                cmp rcx, 0
  9642 00006B99 0F8C2D120000            jl L_error_integer_range
  9643 00006B9F 4C8B4201                mov r8, qword [rdx + 1]
  9644 00006BA3 4C39C1                  cmp rcx, r8
  9645 00006BA6 0F8D20120000            jge L_error_integer_range
  9646 00006BAC 4C8B4CCA09              mov r9, qword [rdx + 1 + 8 + 8 * rcx]
  9647 00006BB1 488B7F09                mov rdi, qword [rdi + 1 + 8]
  9648 00006BB5 FFD7                    call rdi
  9649 00006BB7 C9                      leave
  9650 00006BB8 C22800                  ret AND_KILL_FRAME(3)
  9651                                  
  9652                                  L_code_ptr_is_null:
  9653 00006BBB C8000000                        enter 0, 0
  9654 00006BBF 48837D1801                      cmp COUNT, 1
  9655 00006BC4 0F8599120000                    jne L_error_arg_count_1
  9656 00006BCA 488B4520                        mov rax, PARAM(0)
  9657 00006BCE 803801                          cmp byte [rax], T_nil
  9658 00006BD1 750C                            jne .L_false
  9659 00006BD3 48B8-                           mov rax, sob_boolean_true
  9659 00006BD5 [0300000000000000] 
  9660 00006BDD EB0A                            jmp .L_end
  9661                                  .L_false:
  9662 00006BDF 48B8-                           mov rax, sob_boolean_false
  9662 00006BE1 [0200000000000000] 
  9663                                  .L_end:
  9664 00006BE9 C9                              leave
  9665 00006BEA C21800                          ret AND_KILL_FRAME(1)
  9666                                  
  9667                                  L_code_ptr_is_pair:
  9668 00006BED C8000000                        enter 0, 0
  9669 00006BF1 48837D1801                      cmp COUNT, 1
  9670 00006BF6 0F8567120000                    jne L_error_arg_count_1
  9671 00006BFC 488B4520                        mov rax, PARAM(0)
  9672 00006C00 803821                          cmp byte [rax], T_pair
  9673 00006C03 750C                            jne .L_false
  9674 00006C05 48B8-                           mov rax, sob_boolean_true
  9674 00006C07 [0300000000000000] 
  9675 00006C0F EB0A                            jmp .L_end
  9676                                  .L_false:
  9677 00006C11 48B8-                           mov rax, sob_boolean_false
  9677 00006C13 [0200000000000000] 
  9678                                  .L_end:
  9679 00006C1B C9                              leave
  9680 00006C1C C21800                          ret AND_KILL_FRAME(1)
  9681                                          
  9682                                  L_code_ptr_is_void:
  9683 00006C1F C8000000                        enter 0, 0
  9684 00006C23 48837D1801                      cmp COUNT, 1
  9685 00006C28 0F8535120000                    jne L_error_arg_count_1
  9686 00006C2E 488B4520                        mov rax, PARAM(0)
  9687 00006C32 803800                          cmp byte [rax], T_void
  9688 00006C35 750C                            jne .L_false
  9689 00006C37 48B8-                           mov rax, sob_boolean_true
  9689 00006C39 [0300000000000000] 
  9690 00006C41 EB0A                            jmp .L_end
  9691                                  .L_false:
  9692 00006C43 48B8-                           mov rax, sob_boolean_false
  9692 00006C45 [0200000000000000] 
  9693                                  .L_end:
  9694 00006C4D C9                              leave
  9695 00006C4E C21800                          ret AND_KILL_FRAME(1)
  9696                                  
  9697                                  L_code_ptr_is_char:
  9698 00006C51 C8000000                        enter 0, 0
  9699 00006C55 48837D1801                      cmp COUNT, 1
  9700 00006C5A 0F8503120000                    jne L_error_arg_count_1
  9701 00006C60 488B4520                        mov rax, PARAM(0)
  9702 00006C64 803802                          cmp byte [rax], T_char
  9703 00006C67 750C                            jne .L_false
  9704 00006C69 48B8-                           mov rax, sob_boolean_true
  9704 00006C6B [0300000000000000] 
  9705 00006C73 EB0A                            jmp .L_end
  9706                                  .L_false:
  9707 00006C75 48B8-                           mov rax, sob_boolean_false
  9707 00006C77 [0200000000000000] 
  9708                                  .L_end:
  9709 00006C7F C9                              leave
  9710 00006C80 C21800                          ret AND_KILL_FRAME(1)
  9711                                  
  9712                                  L_code_ptr_is_string:
  9713 00006C83 C8000000                        enter 0, 0
  9714 00006C87 48837D1801                      cmp COUNT, 1
  9715 00006C8C 0F85D1110000                    jne L_error_arg_count_1
  9716 00006C92 488B4520                        mov rax, PARAM(0)
  9717 00006C96 803803                          cmp byte [rax], T_string
  9718 00006C99 750C                            jne .L_false
  9719 00006C9B 48B8-                           mov rax, sob_boolean_true
  9719 00006C9D [0300000000000000] 
  9720 00006CA5 EB0A                            jmp .L_end
  9721                                  .L_false:
  9722 00006CA7 48B8-                           mov rax, sob_boolean_false
  9722 00006CA9 [0200000000000000] 
  9723                                  .L_end:
  9724 00006CB1 C9                              leave
  9725 00006CB2 C21800                          ret AND_KILL_FRAME(1)
  9726                                  
  9727                                  L_code_ptr_is_symbol:
  9728 00006CB5 C8000000                        enter 0, 0
  9729 00006CB9 48837D1801                      cmp COUNT, 1
  9730 00006CBE 0F859F110000                    jne L_error_arg_count_1
  9731 00006CC4 4C8B4520                        mov r8, PARAM(0)
  9732 00006CC8 41802040                        and byte [r8], T_symbol
  9733 00006CCC 740C                            jz .L_false
  9734 00006CCE 48B8-                           mov rax, sob_boolean_true
  9734 00006CD0 [0300000000000000] 
  9735 00006CD8 EB0A                            jmp .L_exit
  9736                                  .L_false:
  9737 00006CDA 48B8-                           mov rax, sob_boolean_false
  9737 00006CDC [0200000000000000] 
  9738                                  .L_exit:
  9739 00006CE4 C9                              leave
  9740 00006CE5 C21800                          ret AND_KILL_FRAME(1)
  9741                                  
  9742                                  L_code_ptr_is_uninterned_symbol:
  9743 00006CE8 C8000000                        enter 0, 0
  9744 00006CEC 48837D1801                      cmp COUNT, 1
  9745 00006CF1 0F856C110000                    jne L_error_arg_count_1
  9746 00006CF7 4C8B4520                        mov r8, PARAM(0)
  9747 00006CFB 41803842                        cmp byte [r8], T_uninterned_symbol
  9748 00006CFF 750C                            jne .L_false
  9749 00006D01 48B8-                           mov rax, sob_boolean_true
  9749 00006D03 [0300000000000000] 
  9750 00006D0B EB0A                            jmp .L_exit
  9751                                  .L_false:
  9752 00006D0D 48B8-                           mov rax, sob_boolean_false
  9752 00006D0F [0200000000000000] 
  9753                                  .L_exit:
  9754 00006D17 C9                              leave
  9755 00006D18 C21800                          ret AND_KILL_FRAME(1)
  9756                                  
  9757                                  L_code_ptr_is_interned_symbol:
  9758 00006D1B C8000000                        enter 0, 0
  9759 00006D1F 48837D1801                      cmp COUNT, 1
  9760 00006D24 0F8539110000                    jne L_error_arg_count_1
  9761 00006D2A 488B4520                        mov rax, PARAM(0)
  9762 00006D2E 803841                          cmp byte [rax], T_interned_symbol
  9763 00006D31 750C                            jne .L_false
  9764 00006D33 48B8-                           mov rax, sob_boolean_true
  9764 00006D35 [0300000000000000] 
  9765 00006D3D EB0A                            jmp .L_end
  9766                                  .L_false:
  9767 00006D3F 48B8-                           mov rax, sob_boolean_false
  9767 00006D41 [0200000000000000] 
  9768                                  .L_end:
  9769 00006D49 C9                              leave
  9770 00006D4A C21800                          ret AND_KILL_FRAME(1)
  9771                                  
  9772                                  L_code_ptr_gensym:
  9773 00006D4D C8000000                        enter 0, 0
  9774 00006D51 48837D1800                      cmp COUNT, 0
  9775 00006D56 0F85D2100000                    jne L_error_arg_count_0
  9776 00006D5C 48FF0425[95080000]              inc qword [gensym_count]
  9777 00006D64 BF09000000                      mov rdi, (1 + 8)
  9778 00006D69 E84DF4FFFF                      call malloc
  9779 00006D6E C60042                          mov byte [rax], T_uninterned_symbol
  9780 00006D71 488B0C25[95080000]              mov rcx, qword [gensym_count]
  9781 00006D79 48894801                        mov qword [rax + 1], rcx
  9782 00006D7D C9                              leave
  9783 00006D7E C21000                          ret AND_KILL_FRAME(0)
  9784                                  
  9785                                  L_code_ptr_is_vector:
  9786 00006D81 C8000000                        enter 0, 0
  9787 00006D85 48837D1801                      cmp COUNT, 1
  9788 00006D8A 0F85D3100000                    jne L_error_arg_count_1
  9789 00006D90 488B4520                        mov rax, PARAM(0)
  9790 00006D94 803822                          cmp byte [rax], T_vector
  9791 00006D97 750C                            jne .L_false
  9792 00006D99 48B8-                           mov rax, sob_boolean_true
  9792 00006D9B [0300000000000000] 
  9793 00006DA3 EB0A                            jmp .L_end
  9794                                  .L_false:
  9795 00006DA5 48B8-                           mov rax, sob_boolean_false
  9795 00006DA7 [0200000000000000] 
  9796                                  .L_end:
  9797 00006DAF C9                              leave
  9798 00006DB0 C21800                          ret AND_KILL_FRAME(1)
  9799                                  
  9800                                  L_code_ptr_is_closure:
  9801 00006DB3 C8000000                        enter 0, 0
  9802 00006DB7 48837D1801                      cmp COUNT, 1
  9803 00006DBC 0F85A1100000                    jne L_error_arg_count_1
  9804 00006DC2 488B4520                        mov rax, PARAM(0)
  9805 00006DC6 803804                          cmp byte [rax], T_closure
  9806 00006DC9 750C                            jne .L_false
  9807 00006DCB 48B8-                           mov rax, sob_boolean_true
  9807 00006DCD [0300000000000000] 
  9808 00006DD5 EB0A                            jmp .L_end
  9809                                  .L_false:
  9810 00006DD7 48B8-                           mov rax, sob_boolean_false
  9810 00006DD9 [0200000000000000] 
  9811                                  .L_end:
  9812 00006DE1 C9                              leave
  9813 00006DE2 C21800                          ret AND_KILL_FRAME(1)
  9814                                  
  9815                                  L_code_ptr_is_real:
  9816 00006DE5 C8000000                        enter 0, 0
  9817 00006DE9 48837D1801                      cmp COUNT, 1
  9818 00006DEE 0F856F100000                    jne L_error_arg_count_1
  9819 00006DF4 488B4520                        mov rax, PARAM(0)
  9820 00006DF8 803813                          cmp byte [rax], T_real
  9821 00006DFB 750C                            jne .L_false
  9822 00006DFD 48B8-                           mov rax, sob_boolean_true
  9822 00006DFF [0300000000000000] 
  9823 00006E07 EB0A                            jmp .L_end
  9824                                  .L_false:
  9825 00006E09 48B8-                           mov rax, sob_boolean_false
  9825 00006E0B [0200000000000000] 
  9826                                  .L_end:
  9827 00006E13 C9                              leave
  9828 00006E14 C21800                          ret AND_KILL_FRAME(1)
  9829                                  
  9830                                  L_code_ptr_is_fraction:
  9831 00006E17 C8000000                        enter 0, 0
  9832 00006E1B 48837D1801                      cmp COUNT, 1
  9833 00006E20 0F853D100000                    jne L_error_arg_count_1
  9834 00006E26 488B4520                        mov rax, PARAM(0)
  9835 00006E2A 803812                          cmp byte [rax], T_fraction
  9836 00006E2D 750C                            jne .L_false
  9837 00006E2F 48B8-                           mov rax, sob_boolean_true
  9837 00006E31 [0300000000000000] 
  9838 00006E39 EB0A                            jmp .L_end
  9839                                  .L_false:
  9840 00006E3B 48B8-                           mov rax, sob_boolean_false
  9840 00006E3D [0200000000000000] 
  9841                                  .L_end:
  9842 00006E45 C9                              leave
  9843 00006E46 C21800                          ret AND_KILL_FRAME(1)
  9844                                  
  9845                                  L_code_ptr_is_boolean:
  9846 00006E49 C8000000                        enter 0, 0
  9847 00006E4D 48837D1801                      cmp COUNT, 1
  9848 00006E52 0F850B100000                    jne L_error_arg_count_1
  9849 00006E58 488B4520                        mov rax, PARAM(0)
  9850 00006E5C 8A18                            mov bl, byte [rax]
  9851 00006E5E 80E308                          and bl, T_boolean
  9852 00006E61 740C                            je .L_false
  9853 00006E63 48B8-                           mov rax, sob_boolean_true
  9853 00006E65 [0300000000000000] 
  9854 00006E6D EB0A                            jmp .L_end
  9855                                  .L_false:
  9856 00006E6F 48B8-                           mov rax, sob_boolean_false
  9856 00006E71 [0200000000000000] 
  9857                                  .L_end:
  9858 00006E79 C9                              leave
  9859 00006E7A C21800                          ret AND_KILL_FRAME(1)
  9860                                          
  9861                                  L_code_ptr_is_boolean_false:
  9862 00006E7D C8000000                        enter 0, 0
  9863 00006E81 48837D1801                      cmp COUNT, 1
  9864 00006E86 0F85D70F0000                    jne L_error_arg_count_1
  9865 00006E8C 488B4520                        mov rax, PARAM(0)
  9866 00006E90 8A18                            mov bl, byte [rax]
  9867 00006E92 80FB09                          cmp bl, T_boolean_false
  9868 00006E95 750C                            jne .L_false
  9869 00006E97 48B8-                           mov rax, sob_boolean_true
  9869 00006E99 [0300000000000000] 
  9870 00006EA1 EB0A                            jmp .L_end
  9871                                  .L_false:
  9872 00006EA3 48B8-                           mov rax, sob_boolean_false
  9872 00006EA5 [0200000000000000] 
  9873                                  .L_end:
  9874 00006EAD C9                              leave
  9875 00006EAE C21800                          ret AND_KILL_FRAME(1)
  9876                                  
  9877                                  L_code_ptr_is_boolean_true:
  9878 00006EB1 C8000000                        enter 0, 0
  9879 00006EB5 48837D1801                      cmp COUNT, 1
  9880 00006EBA 0F85A30F0000                    jne L_error_arg_count_1
  9881 00006EC0 488B4520                        mov rax, PARAM(0)
  9882 00006EC4 8A18                            mov bl, byte [rax]
  9883 00006EC6 80FB0A                          cmp bl, T_boolean_true
  9884 00006EC9 750C                            jne .L_false
  9885 00006ECB 48B8-                           mov rax, sob_boolean_true
  9885 00006ECD [0300000000000000] 
  9886 00006ED5 EB0A                            jmp .L_end
  9887                                  .L_false:
  9888 00006ED7 48B8-                           mov rax, sob_boolean_false
  9888 00006ED9 [0200000000000000] 
  9889                                  .L_end:
  9890 00006EE1 C9                              leave
  9891 00006EE2 C21800                          ret AND_KILL_FRAME(1)
  9892                                  
  9893                                  L_code_ptr_is_number:
  9894 00006EE5 C8000000                        enter 0, 0
  9895 00006EE9 48837D1801                      cmp COUNT, 1
  9896 00006EEE 0F856F0F0000                    jne L_error_arg_count_1
  9897 00006EF4 488B4520                        mov rax, PARAM(0)
  9898 00006EF8 8A18                            mov bl, byte [rax]
  9899 00006EFA 80E310                          and bl, T_number
  9900 00006EFD 740C                            jz .L_false
  9901 00006EFF 48B8-                           mov rax, sob_boolean_true
  9901 00006F01 [0300000000000000] 
  9902 00006F09 EB0A                            jmp .L_end
  9903                                  .L_false:
  9904 00006F0B 48B8-                           mov rax, sob_boolean_false
  9904 00006F0D [0200000000000000] 
  9905                                  .L_end:
  9906 00006F15 C9                              leave
  9907 00006F16 C21800                          ret AND_KILL_FRAME(1)
  9908                                          
  9909                                  L_code_ptr_is_collection:
  9910 00006F19 C8000000                        enter 0, 0
  9911 00006F1D 48837D1801                      cmp COUNT, 1
  9912 00006F22 0F853B0F0000                    jne L_error_arg_count_1
  9913 00006F28 488B4520                        mov rax, PARAM(0)
  9914 00006F2C 8A18                            mov bl, byte [rax]
  9915 00006F2E 80E320                          and bl, T_collection
  9916 00006F31 740C                            je .L_false
  9917 00006F33 48B8-                           mov rax, sob_boolean_true
  9917 00006F35 [0300000000000000] 
  9918 00006F3D EB0A                            jmp .L_end
  9919                                  .L_false:
  9920 00006F3F 48B8-                           mov rax, sob_boolean_false
  9920 00006F41 [0200000000000000] 
  9921                                  .L_end:
  9922 00006F49 C9                              leave
  9923 00006F4A C21800                          ret AND_KILL_FRAME(1)
  9924                                  
  9925                                  L_code_ptr_cons:
  9926 00006F4D C8000000                        enter 0, 0
  9927 00006F51 48837D1802                      cmp COUNT, 2
  9928 00006F56 0F853C0F0000                    jne L_error_arg_count_2
  9929 00006F5C BF11000000                      mov rdi, (1 + 8 + 8)
  9930 00006F61 E855F2FFFF                      call malloc
  9931 00006F66 C60021                          mov byte [rax], T_pair
  9932 00006F69 488B5D20                        mov rbx, PARAM(0)
  9933 00006F6D 48895801                        mov SOB_PAIR_CAR(rax), rbx
  9934 00006F71 488B5D28                        mov rbx, PARAM(1)
  9935 00006F75 48895809                        mov SOB_PAIR_CDR(rax), rbx
  9936 00006F79 C9                              leave
  9937 00006F7A C22000                          ret AND_KILL_FRAME(2)
  9938                                  
  9939                                  L_code_ptr_display_sexpr:
  9940 00006F7D C8000000                        enter 0, 0
  9941 00006F81 48837D1801                      cmp COUNT, 1
  9942 00006F86 0F85D70E0000                    jne L_error_arg_count_1
  9943 00006F8C 488B7D20                        mov rdi, PARAM(0)
  9944 00006F90 E8A7F4FFFF                      call print_sexpr
  9945 00006F95 48B8-                           mov rax, sob_void
  9945 00006F97 [0000000000000000] 
  9946 00006F9F C9                              leave
  9947 00006FA0 C21800                          ret AND_KILL_FRAME(1)
  9948                                  
  9949                                  L_code_ptr_write_char:
  9950 00006FA3 C8000000                        enter 0, 0
  9951 00006FA7 48837D1801                      cmp COUNT, 1
  9952 00006FAC 0F85B10E0000                    jne L_error_arg_count_1
  9953 00006FB2 488B4520                        mov rax, PARAM(0)
  9954                                          assert_char(rax)
    53 00006FB6 803802              <1>  cmp byte [%1], %2
    54 00006FB9 0F85780F0000        <1>  jne L_error_incorrect_type
  9955 00006FBF 8A4001                          mov al, SOB_CHAR_VALUE(rax)
  9956 00006FC2 4825FF000000                    and rax, 255
  9957 00006FC8 48BF-                           mov rdi, fmt_char
  9957 00006FCA [9D08000000000000] 
  9958 00006FD2 4889C6                          mov rsi, rax
  9959 00006FD5 B800000000                      mov rax, 0
  9960                                          ENTER
    44 00006FDA C8000000            <1>  enter 0, 0
    45 00006FDE 4883E4F0            <1>  and rsp, ~15
  9961 00006FE2 E8(00000000)                    call printf
  9962                                          LEAVE
    49 00006FE7 C9                  <1>  leave
  9963 00006FE8 48B8-                           mov rax, sob_void
  9963 00006FEA [0000000000000000] 
  9964 00006FF2 C9                              leave
  9965 00006FF3 C21800                          ret AND_KILL_FRAME(1)
  9966                                  
  9967                                  L_code_ptr_car:
  9968 00006FF6 C8000000                        enter 0, 0
  9969 00006FFA 48837D1801                      cmp COUNT, 1
  9970 00006FFF 0F855E0E0000                    jne L_error_arg_count_1
  9971 00007005 488B4520                        mov rax, PARAM(0)
  9972                                          assert_pair(rax)
    53 00007009 803821              <1>  cmp byte [%1], %2
    54 0000700C 0F85250F0000        <1>  jne L_error_incorrect_type
  9973 00007012 488B4001                        mov rax, SOB_PAIR_CAR(rax)
  9974 00007016 C9                              leave
  9975 00007017 C21800                          ret AND_KILL_FRAME(1)
  9976                                          
  9977                                  L_code_ptr_cdr:
  9978 0000701A C8000000                        enter 0, 0
  9979 0000701E 48837D1801                      cmp COUNT, 1
  9980 00007023 0F853A0E0000                    jne L_error_arg_count_1
  9981 00007029 488B4520                        mov rax, PARAM(0)
  9982                                          assert_pair(rax)
    53 0000702D 803821              <1>  cmp byte [%1], %2
    54 00007030 0F85010F0000        <1>  jne L_error_incorrect_type
  9983 00007036 488B4009                        mov rax, SOB_PAIR_CDR(rax)
  9984 0000703A C9                              leave
  9985 0000703B C21800                          ret AND_KILL_FRAME(1)
  9986                                          
  9987                                  L_code_ptr_string_length:
  9988 0000703E C8000000                        enter 0, 0
  9989 00007042 48837D1801                      cmp COUNT, 1
  9990 00007047 0F85160E0000                    jne L_error_arg_count_1
  9991 0000704D 488B4520                        mov rax, PARAM(0)
  9992                                          assert_string(rax)
    53 00007051 803803              <1>  cmp byte [%1], %2
    54 00007054 0F85DD0E0000        <1>  jne L_error_incorrect_type
  9993 0000705A 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
  9994 0000705E E84F0D0000                      call make_integer
  9995 00007063 C9                              leave
  9996 00007064 C21800                          ret AND_KILL_FRAME(1)
  9997                                  
  9998                                  L_code_ptr_vector_length:
  9999 00007067 C8000000                        enter 0, 0
 10000 0000706B 48837D1801                      cmp COUNT, 1
 10001 00007070 0F85ED0D0000                    jne L_error_arg_count_1
 10002 00007076 488B4520                        mov rax, PARAM(0)
 10003                                          assert_vector(rax)
    53 0000707A 803822              <1>  cmp byte [%1], %2
    54 0000707D 0F85B40E0000        <1>  jne L_error_incorrect_type
 10004 00007083 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 10005 00007087 E8260D0000                      call make_integer
 10006 0000708C C9                              leave
 10007 0000708D C21800                          ret AND_KILL_FRAME(1)
 10008                                  
 10009                                  L_code_ptr_real_to_integer:
 10010 00007090 C8000000                        enter 0, 0
 10011 00007094 48837D1801                      cmp COUNT, 1
 10012 00007099 0F85C40D0000                    jne L_error_arg_count_1
 10013 0000709F 488B5D20                        mov rbx, PARAM(0)
 10014                                          assert_real(rbx)
    53 000070A3 803B13              <1>  cmp byte [%1], %2
    54 000070A6 0F858B0E0000        <1>  jne L_error_incorrect_type
 10015 000070AC F20F104301                      movsd xmm0, qword [rbx + 1]
 10016 000070B1 F2480F2CF8                      cvttsd2si rdi, xmm0
 10017 000070B6 E8F70C0000                      call make_integer
 10018 000070BB C9                              leave
 10019 000070BC C21800                          ret AND_KILL_FRAME(1)
 10020                                  
 10021                                  L_code_ptr_exit:
 10022 000070BF C8000000                        enter 0, 0
 10023 000070C3 48837D1800                      cmp COUNT, 0
 10024 000070C8 0F85600D0000                    jne L_error_arg_count_0
 10025 000070CE B800000000                      mov rax, 0
 10026 000070D3 E8(00000000)                    call exit
 10027                                  
 10028                                  L_code_ptr_integer_to_real:
 10029 000070D8 C8000000                        enter 0, 0
 10030 000070DC 48837D1801                      cmp COUNT, 1
 10031 000070E1 0F857C0D0000                    jne L_error_arg_count_1
 10032 000070E7 488B4520                        mov rax, PARAM(0)
 10033                                          assert_integer(rax)
    53 000070EB 803811              <1>  cmp byte [%1], %2
    54 000070EE 0F85430E0000        <1>  jne L_error_incorrect_type
 10034 000070F4 FF7001                          push qword [rax + 1]
 10035 000070F7 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 10036 000070FD E8980C0000                      call make_real
 10037 00007102 C9                              leave
 10038 00007103 C21800                          ret AND_KILL_FRAME(1)
 10039                                  
 10040                                  L_code_ptr_fraction_to_real:
 10041 00007106 C8000000                        enter 0, 0
 10042 0000710A 48837D1801                      cmp COUNT, 1
 10043 0000710F 0F854E0D0000                    jne L_error_arg_count_1
 10044 00007115 488B4520                        mov rax, PARAM(0)
 10045                                          assert_fraction(rax)
    53 00007119 803812              <1>  cmp byte [%1], %2
    54 0000711C 0F85150E0000        <1>  jne L_error_incorrect_type
 10046 00007122 FF7001                          push qword [rax + 1]
 10047 00007125 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 10048 0000712B FF7009                          push qword [rax + 1 + 8]
 10049 0000712E F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 10050 00007134 F20F5EC1                        divsd xmm0, xmm1
 10051 00007138 E85D0C0000                      call make_real
 10052 0000713D C9                              leave
 10053 0000713E C21800                          ret AND_KILL_FRAME(1)
 10054                                  
 10055                                  L_code_ptr_char_to_integer:
 10056 00007141 C8000000                        enter 0, 0
 10057 00007145 48837D1801                      cmp COUNT, 1
 10058 0000714A 0F85130D0000                    jne L_error_arg_count_1
 10059 00007150 488B4520                        mov rax, PARAM(0)
 10060                                          assert_char(rax)
    53 00007154 803802              <1>  cmp byte [%1], %2
    54 00007157 0F85DA0D0000        <1>  jne L_error_incorrect_type
 10061 0000715D 8A4001                          mov al, byte [rax + 1]
 10062 00007160 4825FF000000                    and rax, 255
 10063 00007166 4889C7                          mov rdi, rax
 10064 00007169 E8440C0000                      call make_integer
 10065 0000716E C9                              leave
 10066 0000716F C21800                          ret AND_KILL_FRAME(1)
 10067                                  
 10068                                  L_code_ptr_integer_to_fraction:
 10069 00007172 C8000000                        enter 0, 0
 10070 00007176 48837D1801                      cmp COUNT, 1
 10071 0000717B 0F85E20C0000                    jne L_error_arg_count_1
 10072 00007181 4C8B4520                        mov r8, PARAM(0)
 10073                                          assert_integer(r8)
    53 00007185 41803811            <1>  cmp byte [%1], %2
    54 00007189 0F85A80D0000        <1>  jne L_error_incorrect_type
 10074 0000718F BF11000000                      mov rdi, (1 + 8 + 8)
 10075 00007194 E822F0FFFF                      call malloc
 10076 00007199 498B5801                        mov rbx, qword [r8 + 1]
 10077 0000719D C60012                          mov byte [rax], T_fraction
 10078 000071A0 48895801                        mov qword [rax + 1], rbx
 10079 000071A4 48C7400901000000                mov qword [rax + 1 + 8], 1
 10080 000071AC C9                              leave
 10081 000071AD C21800                          ret AND_KILL_FRAME(1)
 10082                                  
 10083                                  L_code_ptr_integer_to_char:
 10084 000071B0 C8000000                        enter 0, 0
 10085 000071B4 48837D1801                      cmp COUNT, 1
 10086 000071B9 0F85A40C0000                    jne L_error_arg_count_1
 10087 000071BF 488B4520                        mov rax, PARAM(0)
 10088                                          assert_integer(rax)
    53 000071C3 803811              <1>  cmp byte [%1], %2
    54 000071C6 0F856B0D0000        <1>  jne L_error_incorrect_type
 10089 000071CC 488B5801                        mov rbx, qword [rax + 1]
 10090 000071D0 4883FB00                        cmp rbx, 0
 10091 000071D4 0F8EF20B0000                    jle L_error_integer_range
 10092 000071DA 4881FB00010000                  cmp rbx, 256
 10093 000071E1 0F8DE50B0000                    jge L_error_integer_range
 10094 000071E7 BF02000000                      mov rdi, (1 + 1)
 10095 000071EC E8CAEFFFFF                      call malloc
 10096 000071F1 C60002                          mov byte [rax], T_char
 10097 000071F4 885801                          mov byte [rax + 1], bl
 10098 000071F7 C9                              leave
 10099 000071F8 C21800                          ret AND_KILL_FRAME(1)
 10100                                  
 10101                                  L_code_ptr_trng:
 10102 000071FB C8000000                        enter 0, 0
 10103 000071FF 48837D1800                      cmp COUNT, 0
 10104 00007204 0F85240C0000                    jne L_error_arg_count_0
 10105 0000720A 480FC7F7                        rdrand rdi
 10106 0000720E 48D1EF                          shr rdi, 1
 10107 00007211 E89C0B0000                      call make_integer
 10108 00007216 C9                              leave
 10109 00007217 C21000                          ret AND_KILL_FRAME(0)
 10110                                  
 10111                                  L_code_ptr_is_zero:
 10112 0000721A C8000000                        enter 0, 0
 10113 0000721E 48837D1801                      cmp COUNT, 1
 10114 00007223 0F853A0C0000                    jne L_error_arg_count_1
 10115 00007229 488B4520                        mov rax, PARAM(0)
 10116 0000722D 803811                          cmp byte [rax], T_integer
 10117 00007230 740F                            je .L_integer
 10118 00007232 803812                          cmp byte [rax], T_fraction
 10119 00007235 7413                            je .L_fraction
 10120 00007237 803813                          cmp byte [rax], T_real
 10121 0000723A 7417                            je .L_real
 10122 0000723C E9F60C0000                      jmp L_error_incorrect_type
 10123                                  .L_integer:
 10124 00007241 4883780100                      cmp qword [rax + 1], 0
 10125 00007246 7429                            je .L_zero
 10126 00007248 EB1B                            jmp .L_not_zero
 10127                                  .L_fraction:
 10128 0000724A 4883780100                      cmp qword [rax + 1], 0
 10129 0000724F 7420                            je .L_zero
 10130 00007251 EB12                            jmp .L_not_zero
 10131                                  .L_real:
 10132 00007253 660FEFC0                        pxor xmm0, xmm0
 10133 00007257 FF7001                          push qword [rax + 1]
 10134 0000725A F20F100C24                      movsd xmm1, qword [rsp]
 10135 0000725F 660F2EC1                        ucomisd xmm0, xmm1
 10136 00007263 740C                            je .L_zero
 10137                                  .L_not_zero:
 10138 00007265 48B8-                           mov rax, sob_boolean_false
 10138 00007267 [0200000000000000] 
 10139 0000726F EB0A                            jmp .L_end
 10140                                  .L_zero:
 10141 00007271 48B8-                           mov rax, sob_boolean_true
 10141 00007273 [0300000000000000] 
 10142                                  .L_end:
 10143 0000727B C9                              leave
 10144 0000727C C21800                          ret AND_KILL_FRAME(1)
 10145                                  
 10146                                  L_code_ptr_is_integer:
 10147 0000727F C8000000                        enter 0, 0
 10148 00007283 48837D1801                      cmp COUNT, 1
 10149 00007288 0F85D50B0000                    jne L_error_arg_count_1
 10150 0000728E 488B4520                        mov rax, PARAM(0)
 10151 00007292 803811                          cmp byte [rax], T_integer
 10152 00007295 750C                            jne .L_false
 10153 00007297 48B8-                           mov rax, sob_boolean_true
 10153 00007299 [0300000000000000] 
 10154 000072A1 EB0A                            jmp .L_exit
 10155                                  .L_false:
 10156 000072A3 48B8-                           mov rax, sob_boolean_false
 10156 000072A5 [0200000000000000] 
 10157                                  .L_exit:
 10158 000072AD C9                              leave
 10159 000072AE C21800                          ret AND_KILL_FRAME(1)
 10160                                  
 10161                                  L_code_ptr_raw_bin_add_rr:
 10162 000072B1 C8000000                        enter 0, 0
 10163 000072B5 48837D1802                      cmp COUNT, 2
 10164 000072BA 0F85D80B0000                    jne L_error_arg_count_2
 10165 000072C0 488B5D20                        mov rbx, PARAM(0)
 10166                                          assert_real(rbx)
    53 000072C4 803B13              <1>  cmp byte [%1], %2
    54 000072C7 0F856A0C0000        <1>  jne L_error_incorrect_type
 10167 000072CD 488B4D28                        mov rcx, PARAM(1)
 10168                                          assert_real(rcx)
    53 000072D1 803913              <1>  cmp byte [%1], %2
    54 000072D4 0F855D0C0000        <1>  jne L_error_incorrect_type
 10169 000072DA F20F104301                      movsd xmm0, qword [rbx + 1]
 10170 000072DF F20F104901                      movsd xmm1, qword [rcx + 1]
 10171 000072E4 F20F58C1                        addsd xmm0, xmm1
 10172 000072E8 E8AD0A0000                      call make_real
 10173 000072ED C9                              leave
 10174 000072EE C22000                          ret AND_KILL_FRAME(2)
 10175                                  
 10176                                  L_code_ptr_raw_bin_sub_rr:
 10177 000072F1 C8000000                        enter 0, 0
 10178 000072F5 48837D1802                      cmp COUNT, 2
 10179 000072FA 0F85980B0000                    jne L_error_arg_count_2
 10180 00007300 488B5D20                        mov rbx, PARAM(0)
 10181                                          assert_real(rbx)
    53 00007304 803B13              <1>  cmp byte [%1], %2
    54 00007307 0F852A0C0000        <1>  jne L_error_incorrect_type
 10182 0000730D 488B4D28                        mov rcx, PARAM(1)
 10183                                          assert_real(rcx)
    53 00007311 803913              <1>  cmp byte [%1], %2
    54 00007314 0F851D0C0000        <1>  jne L_error_incorrect_type
 10184 0000731A F20F104301                      movsd xmm0, qword [rbx + 1]
 10185 0000731F F20F104901                      movsd xmm1, qword [rcx + 1]
 10186 00007324 F20F5CC1                        subsd xmm0, xmm1
 10187 00007328 E86D0A0000                      call make_real
 10188 0000732D C9                              leave
 10189 0000732E C22000                          ret AND_KILL_FRAME(2)
 10190                                  
 10191                                  L_code_ptr_raw_bin_mul_rr:
 10192 00007331 C8000000                        enter 0, 0
 10193 00007335 48837D1802                      cmp COUNT, 2
 10194 0000733A 0F85580B0000                    jne L_error_arg_count_2
 10195 00007340 488B5D20                        mov rbx, PARAM(0)
 10196                                          assert_real(rbx)
    53 00007344 803B13              <1>  cmp byte [%1], %2
    54 00007347 0F85EA0B0000        <1>  jne L_error_incorrect_type
 10197 0000734D 488B4D28                        mov rcx, PARAM(1)
 10198                                          assert_real(rcx)
    53 00007351 803913              <1>  cmp byte [%1], %2
    54 00007354 0F85DD0B0000        <1>  jne L_error_incorrect_type
 10199 0000735A F20F104301                      movsd xmm0, qword [rbx + 1]
 10200 0000735F F20F104901                      movsd xmm1, qword [rcx + 1]
 10201 00007364 F20F59C1                        mulsd xmm0, xmm1
 10202 00007368 E82D0A0000                      call make_real
 10203 0000736D C9                              leave
 10204 0000736E C22000                          ret AND_KILL_FRAME(2)
 10205                                  
 10206                                  L_code_ptr_raw_bin_div_rr:
 10207 00007371 C8000000                        enter 0, 0
 10208 00007375 48837D1802                      cmp COUNT, 2
 10209 0000737A 0F85180B0000                    jne L_error_arg_count_2
 10210 00007380 488B5D20                        mov rbx, PARAM(0)
 10211                                          assert_real(rbx)
    53 00007384 803B13              <1>  cmp byte [%1], %2
    54 00007387 0F85AA0B0000        <1>  jne L_error_incorrect_type
 10212 0000738D 488B4D28                        mov rcx, PARAM(1)
 10213                                          assert_real(rcx)
    53 00007391 803913              <1>  cmp byte [%1], %2
    54 00007394 0F859D0B0000        <1>  jne L_error_incorrect_type
 10214 0000739A F20F104301                      movsd xmm0, qword [rbx + 1]
 10215 0000739F F20F104901                      movsd xmm1, qword [rcx + 1]
 10216 000073A4 660FEFD2                        pxor xmm2, xmm2
 10217 000073A8 660F2ECA                        ucomisd xmm1, xmm2
 10218 000073AC 0F84B60B0000                    je L_error_division_by_zero
 10219 000073B2 F20F5EC1                        divsd xmm0, xmm1
 10220 000073B6 E8DF090000                      call make_real
 10221 000073BB C9                              leave
 10222 000073BC C22000                          ret AND_KILL_FRAME(2)
 10223                                  
 10224                                  L_code_ptr_raw_bin_add_zz:
 10225 000073BF C8000000                	enter 0, 0
 10226 000073C3 48837D1802              	cmp COUNT, 2
 10227 000073C8 0F85CA0A0000            	jne L_error_arg_count_2
 10228 000073CE 4C8B4520                	mov r8, PARAM(0)
 10229                                  	assert_integer(r8)
    53 000073D2 41803811            <1>  cmp byte [%1], %2
    54 000073D6 0F855B0B0000        <1>  jne L_error_incorrect_type
 10230 000073DC 4C8B4D28                	mov r9, PARAM(1)
 10231                                  	assert_integer(r9)
    53 000073E0 41803911            <1>  cmp byte [%1], %2
    54 000073E4 0F854D0B0000        <1>  jne L_error_incorrect_type
 10232 000073EA 498B7801                	mov rdi, qword [r8 + 1]
 10233 000073EE 49037901                	add rdi, qword [r9 + 1]
 10234 000073F2 E8BB090000              	call make_integer
 10235 000073F7 C9                      	leave
 10236 000073F8 C22000                  	ret AND_KILL_FRAME(2)
 10237                                  
 10238                                  L_code_ptr_raw_bin_add_qq:
 10239 000073FB C8000000                        enter 0, 0
 10240 000073FF 48837D1802                      cmp COUNT, 2
 10241 00007404 0F858E0A0000                    jne L_error_arg_count_2
 10242 0000740A 4C8B4520                        mov r8, PARAM(0)
 10243                                          assert_fraction(r8)
    53 0000740E 41803812            <1>  cmp byte [%1], %2
    54 00007412 0F851F0B0000        <1>  jne L_error_incorrect_type
 10244 00007418 4C8B4D28                        mov r9, PARAM(1)
 10245                                          assert_fraction(r9)
    53 0000741C 41803912            <1>  cmp byte [%1], %2
    54 00007420 0F85110B0000        <1>  jne L_error_incorrect_type
 10246 00007426 498B4001                        mov rax, qword [r8 + 1] ; num1
 10247 0000742A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 10248 0000742E 4899                            cqo
 10249 00007430 48F7EB                          imul rbx
 10250 00007433 4889C6                          mov rsi, rax
 10251 00007436 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10252 0000743A 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 10253 0000743E 4899                            cqo
 10254 00007440 48F7EB                          imul rbx
 10255 00007443 4801C6                          add rsi, rax
 10256 00007446 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10257 0000744A 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 10258 0000744E 4899                            cqo
 10259 00007450 48F7EB                          imul rbx
 10260 00007453 4889C7                          mov rdi, rax
 10261 00007456 E8DE010000                      call normalize_fraction
 10262 0000745B C9                              leave
 10263 0000745C C22000                          ret AND_KILL_FRAME(2)
 10264                                  
 10265                                  L_code_ptr_raw_bin_sub_zz:
 10266 0000745F C8000000                	enter 0, 0
 10267 00007463 48837D1802              	cmp COUNT, 2
 10268 00007468 0F852A0A0000            	jne L_error_arg_count_2
 10269 0000746E 4C8B4520                	mov r8, PARAM(0)
 10270                                  	assert_integer(r8)
    53 00007472 41803811            <1>  cmp byte [%1], %2
    54 00007476 0F85BB0A0000        <1>  jne L_error_incorrect_type
 10271 0000747C 4C8B4D28                	mov r9, PARAM(1)
 10272                                  	assert_integer(r9)
    53 00007480 41803911            <1>  cmp byte [%1], %2
    54 00007484 0F85AD0A0000        <1>  jne L_error_incorrect_type
 10273 0000748A 498B7801                	mov rdi, qword [r8 + 1]
 10274 0000748E 492B7901                	sub rdi, qword [r9 + 1]
 10275 00007492 E81B090000              	call make_integer
 10276 00007497 C9                      	leave
 10277 00007498 C22000                  	ret AND_KILL_FRAME(2)
 10278                                  
 10279                                  L_code_ptr_raw_bin_sub_qq:
 10280 0000749B C8000000                        enter 0, 0
 10281 0000749F 48837D1802                      cmp COUNT, 2
 10282 000074A4 0F85EE090000                    jne L_error_arg_count_2
 10283 000074AA 4C8B4520                        mov r8, PARAM(0)
 10284                                          assert_fraction(r8)
    53 000074AE 41803812            <1>  cmp byte [%1], %2
    54 000074B2 0F857F0A0000        <1>  jne L_error_incorrect_type
 10285 000074B8 4C8B4D28                        mov r9, PARAM(1)
 10286                                          assert_fraction(r9)
    53 000074BC 41803912            <1>  cmp byte [%1], %2
    54 000074C0 0F85710A0000        <1>  jne L_error_incorrect_type
 10287 000074C6 498B4001                        mov rax, qword [r8 + 1] ; num1
 10288 000074CA 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 10289 000074CE 4899                            cqo
 10290 000074D0 48F7EB                          imul rbx
 10291 000074D3 4889C6                          mov rsi, rax
 10292 000074D6 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10293 000074DA 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 10294 000074DE 4899                            cqo
 10295 000074E0 48F7EB                          imul rbx
 10296 000074E3 4829C6                          sub rsi, rax
 10297 000074E6 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10298 000074EA 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 10299 000074EE 4899                            cqo
 10300 000074F0 48F7EB                          imul rbx
 10301 000074F3 4889C7                          mov rdi, rax
 10302 000074F6 E83E010000                      call normalize_fraction
 10303 000074FB C9                              leave
 10304 000074FC C22000                          ret AND_KILL_FRAME(2)
 10305                                  
 10306                                  L_code_ptr_raw_bin_mul_zz:
 10307 000074FF C8000000                	enter 0, 0
 10308 00007503 48837D1802              	cmp COUNT, 2
 10309 00007508 0F858A090000            	jne L_error_arg_count_2
 10310 0000750E 4C8B4520                	mov r8, PARAM(0)
 10311                                  	assert_integer(r8)
    53 00007512 41803811            <1>  cmp byte [%1], %2
    54 00007516 0F851B0A0000        <1>  jne L_error_incorrect_type
 10312 0000751C 4C8B4D28                	mov r9, PARAM(1)
 10313                                  	assert_integer(r9)
    53 00007520 41803911            <1>  cmp byte [%1], %2
    54 00007524 0F850D0A0000        <1>  jne L_error_incorrect_type
 10314 0000752A 4899                    	cqo
 10315 0000752C 498B4001                	mov rax, qword [r8 + 1]
 10316 00007530 49F76101                	mul qword [r9 + 1]
 10317 00007534 4889C7                  	mov rdi, rax
 10318 00007537 E876080000              	call make_integer
 10319 0000753C C9                      	leave
 10320 0000753D C22000                  	ret AND_KILL_FRAME(2)
 10321                                  
 10322                                  L_code_ptr_raw_bin_mul_qq:
 10323 00007540 C8000000                        enter 0, 0
 10324 00007544 48837D1802                      cmp COUNT, 2
 10325 00007549 0F8549090000                    jne L_error_arg_count_2
 10326 0000754F 4C8B4520                        mov r8, PARAM(0)
 10327                                          assert_fraction(r8)
    53 00007553 41803812            <1>  cmp byte [%1], %2
    54 00007557 0F85DA090000        <1>  jne L_error_incorrect_type
 10328 0000755D 4C8B4D28                        mov r9, PARAM(1)
 10329                                          assert_fraction(r9)
    53 00007561 41803912            <1>  cmp byte [%1], %2
    54 00007565 0F85CC090000        <1>  jne L_error_incorrect_type
 10330 0000756B 498B4001                        mov rax, qword [r8 + 1] ; num1
 10331 0000756F 498B5901                        mov rbx, qword [r9 + 1] ; num2
 10332 00007573 4899                            cqo
 10333 00007575 48F7EB                          imul rbx
 10334 00007578 4889C6                          mov rsi, rax
 10335 0000757B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10336 0000757F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 10337 00007583 4899                            cqo
 10338 00007585 48F7EB                          imul rbx
 10339 00007588 4889C7                          mov rdi, rax
 10340 0000758B E8A9000000                      call normalize_fraction
 10341 00007590 C9                              leave
 10342 00007591 C22000                          ret AND_KILL_FRAME(2)
 10343                                          
 10344                                  L_code_ptr_raw_bin_div_zz:
 10345 00007594 C8000000                	enter 0, 0
 10346 00007598 48837D1802              	cmp COUNT, 2
 10347 0000759D 0F85F5080000            	jne L_error_arg_count_2
 10348 000075A3 4C8B4520                	mov r8, PARAM(0)
 10349                                  	assert_integer(r8)
    53 000075A7 41803811            <1>  cmp byte [%1], %2
    54 000075AB 0F8586090000        <1>  jne L_error_incorrect_type
 10350 000075B1 4C8B4D28                	mov r9, PARAM(1)
 10351                                  	assert_integer(r9)
    53 000075B5 41803911            <1>  cmp byte [%1], %2
    54 000075B9 0F8578090000        <1>  jne L_error_incorrect_type
 10352 000075BF 498B7901                	mov rdi, qword [r9 + 1]
 10353 000075C3 4883FF00                	cmp rdi, 0
 10354 000075C7 0F849B090000            	je L_error_division_by_zero
 10355 000075CD 498B7001                	mov rsi, qword [r8 + 1]
 10356 000075D1 E863000000              	call normalize_fraction
 10357 000075D6 C9                      	leave
 10358 000075D7 C22000                  	ret AND_KILL_FRAME(2)
 10359                                  
 10360                                  L_code_ptr_raw_bin_div_qq:
 10361 000075DA C8000000                        enter 0, 0
 10362 000075DE 48837D1802                      cmp COUNT, 2
 10363 000075E3 0F85AF080000                    jne L_error_arg_count_2
 10364 000075E9 4C8B4520                        mov r8, PARAM(0)
 10365                                          assert_fraction(r8)
    53 000075ED 41803812            <1>  cmp byte [%1], %2
    54 000075F1 0F8540090000        <1>  jne L_error_incorrect_type
 10366 000075F7 4C8B4D28                        mov r9, PARAM(1)
 10367                                          assert_fraction(r9)
    53 000075FB 41803912            <1>  cmp byte [%1], %2
    54 000075FF 0F8532090000        <1>  jne L_error_incorrect_type
 10368 00007605 4983790100                      cmp qword [r9 + 1], 0
 10369 0000760A 0F8458090000                    je L_error_division_by_zero
 10370 00007610 498B4001                        mov rax, qword [r8 + 1] ; num1
 10371 00007614 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 10372 00007618 4899                            cqo
 10373 0000761A 48F7EB                          imul rbx
 10374 0000761D 4889C6                          mov rsi, rax
 10375 00007620 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 10376 00007624 498B5901                        mov rbx, qword [r9 + 1] ; num2
 10377 00007628 4899                            cqo
 10378 0000762A 48F7EB                          imul rbx
 10379 0000762D 4889C7                          mov rdi, rax
 10380 00007630 E804000000                      call normalize_fraction
 10381 00007635 C9                              leave
 10382 00007636 C22000                          ret AND_KILL_FRAME(2)
 10383                                          
 10384                                  normalize_fraction:
 10385 00007639 56                              push rsi
 10386 0000763A 57                              push rdi
 10387 0000763B E859000000                      call gcd
 10388 00007640 4889C3                          mov rbx, rax
 10389 00007643 58                              pop rax
 10390 00007644 4899                            cqo
 10391 00007646 48F7FB                          idiv rbx
 10392 00007649 4989C0                          mov r8, rax
 10393 0000764C 58                              pop rax
 10394 0000764D 4899                            cqo
 10395 0000764F 48F7FB                          idiv rbx
 10396 00007652 4989C1                          mov r9, rax
 10397 00007655 4983F900                        cmp r9, 0
 10398 00007659 741C                            je .L_zero
 10399 0000765B 4983F801                        cmp r8, 1
 10400 0000765F 7421                            je .L_int
 10401 00007661 BF11000000                      mov rdi, (1 + 8 + 8)
 10402 00007666 E850EBFFFF                      call malloc
 10403 0000766B C60012                          mov byte [rax], T_fraction
 10404 0000766E 4C894801                        mov qword [rax + 1], r9
 10405 00007672 4C894009                        mov qword [rax + 1 + 8], r8
 10406 00007676 C3                              ret
 10407                                  .L_zero:
 10408 00007677 BF00000000                      mov rdi, 0
 10409 0000767C E831070000                      call make_integer
 10410 00007681 C3                              ret
 10411                                  .L_int:
 10412 00007682 4C89CF                          mov rdi, r9
 10413 00007685 E828070000                      call make_integer
 10414 0000768A C3                              ret
 10415                                  
 10416                                  iabs:
 10417 0000768B 4889F8                          mov rax, rdi
 10418 0000768E 4883F800                        cmp rax, 0
 10419 00007692 7C01                            jl .Lneg
 10420 00007694 C3                              ret
 10421                                  .Lneg:
 10422 00007695 48F7D8                          neg rax
 10423 00007698 C3                              ret
 10424                                  
 10425                                  gcd:
 10426 00007699 E8EDFFFFFF                      call iabs
 10427 0000769E 4889C3                          mov rbx, rax
 10428 000076A1 4889F7                          mov rdi, rsi
 10429 000076A4 E8E2FFFFFF                      call iabs
 10430 000076A9 4883F800                        cmp rax, 0
 10431 000076AD 7502                            jne .L0
 10432 000076AF 4893                            xchg rax, rbx
 10433                                  .L0:
 10434 000076B1 4883FB00                        cmp rbx, 0
 10435 000076B5 740C                            je .L1
 10436 000076B7 4899                            cqo
 10437 000076B9 48F7F3                          div rbx
 10438 000076BC 4889D0                          mov rax, rdx
 10439 000076BF 4893                            xchg rax, rbx
 10440 000076C1 EBEE                            jmp .L0
 10441                                  .L1:
 10442 000076C3 C3                              ret
 10443                                  
 10444                                  L_code_ptr_error:
 10445 000076C4 C8000000                        enter 0, 0
 10446 000076C8 48837D1802                      cmp COUNT, 2
 10447 000076CD 0F85C5070000                    jne L_error_arg_count_2
 10448 000076D3 488B7520                        mov rsi, PARAM(0)
 10449                                          assert_interned_symbol(rsi)
    53 000076D7 803E41              <1>  cmp byte [%1], %2
    54 000076DA 0F8557080000        <1>  jne L_error_incorrect_type
 10450 000076E0 488B7528                        mov rsi, PARAM(1)
 10451                                          assert_string(rsi)
    53 000076E4 803E03              <1>  cmp byte [%1], %2
    54 000076E7 0F854A080000        <1>  jne L_error_incorrect_type
 10452 000076ED 48BF-                           mov rdi, fmt_scheme_error_part_1
 10452 000076EF [FB09000000000000] 
 10453 000076F7 B800000000                      mov rax, 0
 10454                                          ENTER
    44 000076FC C8000000            <1>  enter 0, 0
    45 00007700 4883E4F0            <1>  and rsp, ~15
 10455 00007704 E8(00000000)                    call printf
 10456                                          LEAVE
    49 00007709 C9                  <1>  leave
 10457 0000770A 488B7D20                        mov rdi, PARAM(0)
 10458 0000770E E829EDFFFF                      call print_sexpr
 10459 00007713 48BF-                           mov rdi, fmt_scheme_error_part_2
 10459 00007715 [0F0A000000000000] 
 10460 0000771D B800000000                      mov rax, 0
 10461                                          ENTER
    44 00007722 C8000000            <1>  enter 0, 0
    45 00007726 4883E4F0            <1>  and rsp, ~15
 10462 0000772A E8(00000000)                    call printf
 10463                                          LEAVE
    49 0000772F C9                  <1>  leave
 10464 00007730 488B4528                        mov rax, PARAM(1)       ; sob_string
 10465 00007734 BE01000000                      mov rsi, 1              ; size = 1 byte
 10466 00007739 488B5001                        mov rdx, qword [rax + 1] ; length
 10467 0000773D 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 10468 00007741 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 10469                                  	ENTER
    44 00007749 C8000000            <1>  enter 0, 0
    45 0000774D 4883E4F0            <1>  and rsp, ~15
 10470 00007751 E8(00000000)                    call fwrite
 10471                                  	LEAVE
    49 00007756 C9                  <1>  leave
 10472 00007757 48BF-                           mov rdi, fmt_scheme_error_part_3
 10472 00007759 [510A000000000000] 
 10473 00007761 B800000000                      mov rax, 0
 10474                                          ENTER
    44 00007766 C8000000            <1>  enter 0, 0
    45 0000776A 4883E4F0            <1>  and rsp, ~15
 10475 0000776E E8(00000000)                    call printf
 10476                                          LEAVE
    49 00007773 C9                  <1>  leave
 10477 00007774 48C7C0F7FFFFFF                  mov rax, -9
 10478 0000777B E8(00000000)                    call exit
 10479                                  
 10480                                  L_code_ptr_raw_less_than_rr:
 10481 00007780 C8000000                        enter 0, 0
 10482 00007784 48837D1802                      cmp COUNT, 2
 10483 00007789 0F8509070000                    jne L_error_arg_count_2
 10484 0000778F 488B7520                        mov rsi, PARAM(0)
 10485                                          assert_real(rsi)
    53 00007793 803E13              <1>  cmp byte [%1], %2
    54 00007796 0F859B070000        <1>  jne L_error_incorrect_type
 10486 0000779C 488B7D28                        mov rdi, PARAM(1)
 10487                                          assert_real(rdi)
    53 000077A0 803F13              <1>  cmp byte [%1], %2
    54 000077A3 0F858E070000        <1>  jne L_error_incorrect_type
 10488 000077A9 F20F104601                      movsd xmm0, qword [rsi + 1]
 10489 000077AE F20F104F01                      movsd xmm1, qword [rdi + 1]
 10490 000077B3 660F2FC1                        comisd xmm0, xmm1
 10491 000077B7 730C                            jae .L_false
 10492 000077B9 48B8-                           mov rax, sob_boolean_true
 10492 000077BB [0300000000000000] 
 10493 000077C3 EB0A                            jmp .L_exit
 10494                                  .L_false:
 10495 000077C5 48B8-                           mov rax, sob_boolean_false
 10495 000077C7 [0200000000000000] 
 10496                                  .L_exit:
 10497 000077CF C9                              leave
 10498 000077D0 C22000                          ret AND_KILL_FRAME(2)
 10499                                          
 10500                                  L_code_ptr_raw_less_than_zz:
 10501 000077D3 C8000000                	enter 0, 0
 10502 000077D7 48837D1802              	cmp COUNT, 2
 10503 000077DC 0F85B6060000            	jne L_error_arg_count_2
 10504 000077E2 4C8B4520                	mov r8, PARAM(0)
 10505                                  	assert_integer(r8)
    53 000077E6 41803811            <1>  cmp byte [%1], %2
    54 000077EA 0F8547070000        <1>  jne L_error_incorrect_type
 10506 000077F0 4C8B4D28                	mov r9, PARAM(1)
 10507                                  	assert_integer(r9)
    53 000077F4 41803911            <1>  cmp byte [%1], %2
    54 000077F8 0F8539070000        <1>  jne L_error_incorrect_type
 10508 000077FE 498B7801                	mov rdi, qword [r8 + 1]
 10509 00007802 493B7901                	cmp rdi, qword [r9 + 1]
 10510 00007806 7D0C                    	jge .L_false
 10511 00007808 48B8-                   	mov rax, sob_boolean_true
 10511 0000780A [0300000000000000] 
 10512 00007812 EB0A                    	jmp .L_exit
 10513                                  .L_false:
 10514 00007814 48B8-                   	mov rax, sob_boolean_false
 10514 00007816 [0200000000000000] 
 10515                                  .L_exit:
 10516 0000781E C9                      	leave
 10517 0000781F C22000                  	ret AND_KILL_FRAME(2)
 10518                                  
 10519                                  L_code_ptr_raw_less_than_qq:
 10520 00007822 C8000000                        enter 0, 0
 10521 00007826 48837D1802                      cmp COUNT, 2
 10522 0000782B 0F8567060000                    jne L_error_arg_count_2
 10523 00007831 488B7520                        mov rsi, PARAM(0)
 10524                                          assert_fraction(rsi)
    53 00007835 803E12              <1>  cmp byte [%1], %2
    54 00007838 0F85F9060000        <1>  jne L_error_incorrect_type
 10525 0000783E 488B7D28                        mov rdi, PARAM(1)
 10526                                          assert_fraction(rdi)
    53 00007842 803F12              <1>  cmp byte [%1], %2
    54 00007845 0F85EC060000        <1>  jne L_error_incorrect_type
 10527 0000784B 488B4601                        mov rax, qword [rsi + 1] ; num1
 10528 0000784F 4899                            cqo
 10529 00007851 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 10530 00007855 4889C1                          mov rcx, rax
 10531 00007858 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 10532 0000785C 4899                            cqo
 10533 0000785E 48F76F01                        imul qword [rdi + 1]          ; num2
 10534 00007862 4829C1                          sub rcx, rax
 10535 00007865 7D0C                            jge .L_false
 10536 00007867 48B8-                           mov rax, sob_boolean_true
 10536 00007869 [0300000000000000] 
 10537 00007871 EB0A                            jmp .L_exit
 10538                                  .L_false:
 10539 00007873 48B8-                           mov rax, sob_boolean_false
 10539 00007875 [0200000000000000] 
 10540                                  .L_exit:
 10541 0000787D C9                              leave
 10542 0000787E C22000                          ret AND_KILL_FRAME(2)
 10543                                  
 10544                                  L_code_ptr_raw_equal_rr:
 10545 00007881 C8000000                        enter 0, 0
 10546 00007885 48837D1802                      cmp COUNT, 2
 10547 0000788A 0F8508060000                    jne L_error_arg_count_2
 10548 00007890 488B7520                        mov rsi, PARAM(0)
 10549                                          assert_real(rsi)
    53 00007894 803E13              <1>  cmp byte [%1], %2
    54 00007897 0F859A060000        <1>  jne L_error_incorrect_type
 10550 0000789D 488B7D28                        mov rdi, PARAM(1)
 10551                                          assert_real(rdi)
    53 000078A1 803F13              <1>  cmp byte [%1], %2
    54 000078A4 0F858D060000        <1>  jne L_error_incorrect_type
 10552 000078AA F20F104601                      movsd xmm0, qword [rsi + 1]
 10553 000078AF F20F104F01                      movsd xmm1, qword [rdi + 1]
 10554 000078B4 660F2FC1                        comisd xmm0, xmm1
 10555 000078B8 750C                            jne .L_false
 10556 000078BA 48B8-                           mov rax, sob_boolean_true
 10556 000078BC [0300000000000000] 
 10557 000078C4 EB0A                            jmp .L_exit
 10558                                  .L_false:
 10559 000078C6 48B8-                           mov rax, sob_boolean_false
 10559 000078C8 [0200000000000000] 
 10560                                  .L_exit:
 10561 000078D0 C9                              leave
 10562 000078D1 C22000                          ret AND_KILL_FRAME(2)
 10563                                          
 10564                                  L_code_ptr_raw_equal_zz:
 10565 000078D4 C8000000                	enter 0, 0
 10566 000078D8 48837D1802              	cmp COUNT, 2
 10567 000078DD 0F85B5050000            	jne L_error_arg_count_2
 10568 000078E3 4C8B4520                	mov r8, PARAM(0)
 10569                                  	assert_integer(r8)
    53 000078E7 41803811            <1>  cmp byte [%1], %2
    54 000078EB 0F8546060000        <1>  jne L_error_incorrect_type
 10570 000078F1 4C8B4D28                	mov r9, PARAM(1)
 10571                                  	assert_integer(r9)
    53 000078F5 41803911            <1>  cmp byte [%1], %2
    54 000078F9 0F8538060000        <1>  jne L_error_incorrect_type
 10572 000078FF 498B7801                	mov rdi, qword [r8 + 1]
 10573 00007903 493B7901                	cmp rdi, qword [r9 + 1]
 10574 00007907 750C                    	jne .L_false
 10575 00007909 48B8-                   	mov rax, sob_boolean_true
 10575 0000790B [0300000000000000] 
 10576 00007913 EB0A                    	jmp .L_exit
 10577                                  .L_false:
 10578 00007915 48B8-                   	mov rax, sob_boolean_false
 10578 00007917 [0200000000000000] 
 10579                                  .L_exit:
 10580 0000791F C9                      	leave
 10581 00007920 C22000                  	ret AND_KILL_FRAME(2)
 10582                                  
 10583                                  L_code_ptr_raw_equal_qq:
 10584 00007923 C8000000                        enter 0, 0
 10585 00007927 48837D1802                      cmp COUNT, 2
 10586 0000792C 0F8566050000                    jne L_error_arg_count_2
 10587 00007932 488B7520                        mov rsi, PARAM(0)
 10588                                          assert_fraction(rsi)
    53 00007936 803E12              <1>  cmp byte [%1], %2
    54 00007939 0F85F8050000        <1>  jne L_error_incorrect_type
 10589 0000793F 488B7D28                        mov rdi, PARAM(1)
 10590                                          assert_fraction(rdi)
    53 00007943 803F12              <1>  cmp byte [%1], %2
    54 00007946 0F85EB050000        <1>  jne L_error_incorrect_type
 10591 0000794C 488B4601                        mov rax, qword [rsi + 1] ; num1
 10592 00007950 4899                            cqo
 10593 00007952 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 10594 00007956 4889C1                          mov rcx, rax
 10595 00007959 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 10596 0000795D 4899                            cqo
 10597 0000795F 48F76F01                        imul qword [rdi + 1]          ; num2
 10598 00007963 4829C1                          sub rcx, rax
 10599 00007966 750C                            jne .L_false
 10600 00007968 48B8-                           mov rax, sob_boolean_true
 10600 0000796A [0300000000000000] 
 10601 00007972 EB0A                            jmp .L_exit
 10602                                  .L_false:
 10603 00007974 48B8-                           mov rax, sob_boolean_false
 10603 00007976 [0200000000000000] 
 10604                                  .L_exit:
 10605 0000797E C9                              leave
 10606 0000797F C22000                          ret AND_KILL_FRAME(2)
 10607                                  
 10608                                  L_code_ptr_quotient:
 10609 00007982 C8000000                        enter 0, 0
 10610 00007986 48837D1802                      cmp COUNT, 2
 10611 0000798B 0F8507050000                    jne L_error_arg_count_2
 10612 00007991 488B7520                        mov rsi, PARAM(0)
 10613                                          assert_integer(rsi)
    53 00007995 803E11              <1>  cmp byte [%1], %2
    54 00007998 0F8599050000        <1>  jne L_error_incorrect_type
 10614 0000799E 488B7D28                        mov rdi, PARAM(1)
 10615                                          assert_integer(rdi)
    53 000079A2 803F11              <1>  cmp byte [%1], %2
    54 000079A5 0F858C050000        <1>  jne L_error_incorrect_type
 10616 000079AB 488B4601                        mov rax, qword [rsi + 1]
 10617 000079AF 488B5F01                        mov rbx, qword [rdi + 1]
 10618 000079B3 4883FB00                        cmp rbx, 0
 10619 000079B7 0F84AB050000                    je L_error_division_by_zero
 10620 000079BD 4899                            cqo
 10621 000079BF 48F7FB                          idiv rbx
 10622 000079C2 4889C7                          mov rdi, rax
 10623 000079C5 E8E8030000                      call make_integer
 10624 000079CA C9                              leave
 10625 000079CB C22000                          ret AND_KILL_FRAME(2)
 10626                                          
 10627                                  L_code_ptr_remainder:
 10628 000079CE C8000000                        enter 0, 0
 10629 000079D2 48837D1802                      cmp COUNT, 2
 10630 000079D7 0F85BB040000                    jne L_error_arg_count_2
 10631 000079DD 488B7520                        mov rsi, PARAM(0)
 10632                                          assert_integer(rsi)
    53 000079E1 803E11              <1>  cmp byte [%1], %2
    54 000079E4 0F854D050000        <1>  jne L_error_incorrect_type
 10633 000079EA 488B7D28                        mov rdi, PARAM(1)
 10634                                          assert_integer(rdi)
    53 000079EE 803F11              <1>  cmp byte [%1], %2
    54 000079F1 0F8540050000        <1>  jne L_error_incorrect_type
 10635 000079F7 488B4601                        mov rax, qword [rsi + 1]
 10636 000079FB 488B5F01                        mov rbx, qword [rdi + 1]
 10637 000079FF 4883FB00                        cmp rbx, 0
 10638 00007A03 0F845F050000                    je L_error_division_by_zero
 10639 00007A09 4899                            cqo
 10640 00007A0B 48F7FB                          idiv rbx
 10641 00007A0E 4889D7                          mov rdi, rdx
 10642 00007A11 E89C030000                      call make_integer
 10643 00007A16 C9                              leave
 10644 00007A17 C22000                          ret AND_KILL_FRAME(2)
 10645                                  
 10646                                  L_code_ptr_set_car:
 10647 00007A1A C8000000                        enter 0, 0
 10648 00007A1E 48837D1802                      cmp COUNT, 2
 10649 00007A23 0F856F040000                    jne L_error_arg_count_2
 10650 00007A29 488B4520                        mov rax, PARAM(0)
 10651                                          assert_pair(rax)
    53 00007A2D 803821              <1>  cmp byte [%1], %2
    54 00007A30 0F8501050000        <1>  jne L_error_incorrect_type
 10652 00007A36 488B5D28                        mov rbx, PARAM(1)
 10653 00007A3A 48895801                        mov SOB_PAIR_CAR(rax), rbx
 10654 00007A3E 48B8-                           mov rax, sob_void
 10654 00007A40 [0000000000000000] 
 10655 00007A48 C9                              leave
 10656 00007A49 C22000                          ret AND_KILL_FRAME(2)
 10657                                  
 10658                                  L_code_ptr_set_cdr:
 10659 00007A4C C8000000                        enter 0, 0
 10660 00007A50 48837D1802                      cmp COUNT, 2
 10661 00007A55 0F853D040000                    jne L_error_arg_count_2
 10662 00007A5B 488B4520                        mov rax, PARAM(0)
 10663                                          assert_pair(rax)
    53 00007A5F 803821              <1>  cmp byte [%1], %2
    54 00007A62 0F85CF040000        <1>  jne L_error_incorrect_type
 10664 00007A68 488B5D28                        mov rbx, PARAM(1)
 10665 00007A6C 48895809                        mov SOB_PAIR_CDR(rax), rbx
 10666 00007A70 48B8-                           mov rax, sob_void
 10666 00007A72 [0000000000000000] 
 10667 00007A7A C9                              leave
 10668 00007A7B C22000                          ret AND_KILL_FRAME(2)
 10669                                  
 10670                                  L_code_ptr_string_ref:
 10671 00007A7E C8000000                        enter 0, 0
 10672 00007A82 48837D1802                      cmp COUNT, 2
 10673 00007A87 0F850B040000                    jne L_error_arg_count_2
 10674 00007A8D 488B7D20                        mov rdi, PARAM(0)
 10675                                          assert_string(rdi)
    53 00007A91 803F03              <1>  cmp byte [%1], %2
    54 00007A94 0F859D040000        <1>  jne L_error_incorrect_type
 10676 00007A9A 488B7528                        mov rsi, PARAM(1)
 10677                                          assert_integer(rsi)
    53 00007A9E 803E11              <1>  cmp byte [%1], %2
    54 00007AA1 0F8590040000        <1>  jne L_error_incorrect_type
 10678 00007AA7 488B5701                        mov rdx, qword [rdi + 1]
 10679 00007AAB 488B4E01                        mov rcx, qword [rsi + 1]
 10680 00007AAF 4839D1                          cmp rcx, rdx
 10681 00007AB2 0F8D14030000                    jge L_error_integer_range
 10682 00007AB8 4883F900                        cmp rcx, 0
 10683 00007ABC 0F8C0A030000                    jl L_error_integer_range
 10684 00007AC2 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 10685 00007AC6 BF02000000                      mov rdi, 2
 10686 00007ACB E8EBE6FFFF                      call malloc
 10687 00007AD0 C60002                          mov byte [rax], T_char
 10688 00007AD3 885801                          mov byte [rax + 1], bl
 10689 00007AD6 C9                              leave
 10690 00007AD7 C22000                          ret AND_KILL_FRAME(2)
 10691                                  
 10692                                  L_code_ptr_vector_ref:
 10693 00007ADA C8000000                        enter 0, 0
 10694 00007ADE 48837D1802                      cmp COUNT, 2
 10695 00007AE3 0F85AF030000                    jne L_error_arg_count_2
 10696 00007AE9 488B7D20                        mov rdi, PARAM(0)
 10697                                          assert_vector(rdi)
    53 00007AED 803F22              <1>  cmp byte [%1], %2
    54 00007AF0 0F8541040000        <1>  jne L_error_incorrect_type
 10698 00007AF6 488B7528                        mov rsi, PARAM(1)
 10699                                          assert_integer(rsi)
    53 00007AFA 803E11              <1>  cmp byte [%1], %2
    54 00007AFD 0F8534040000        <1>  jne L_error_incorrect_type
 10700 00007B03 488B5701                        mov rdx, qword [rdi + 1]
 10701 00007B07 488B4E01                        mov rcx, qword [rsi + 1]
 10702 00007B0B 4839D1                          cmp rcx, rdx
 10703 00007B0E 0F8DB8020000                    jge L_error_integer_range
 10704 00007B14 4883F900                        cmp rcx, 0
 10705 00007B18 0F8CAE020000                    jl L_error_integer_range
 10706 00007B1E 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 10707 00007B23 C9                              leave
 10708 00007B24 C22000                          ret AND_KILL_FRAME(2)
 10709                                  
 10710                                  L_code_ptr_vector_set:
 10711 00007B27 C8000000                        enter 0, 0
 10712 00007B2B 48837D1803                      cmp COUNT, 3
 10713 00007B30 0F85CC030000                    jne L_error_arg_count_3
 10714 00007B36 488B7D20                        mov rdi, PARAM(0)
 10715                                          assert_vector(rdi)
    53 00007B3A 803F22              <1>  cmp byte [%1], %2
    54 00007B3D 0F85F4030000        <1>  jne L_error_incorrect_type
 10716 00007B43 488B7528                        mov rsi, PARAM(1)
 10717                                          assert_integer(rsi)
    53 00007B47 803E11              <1>  cmp byte [%1], %2
    54 00007B4A 0F85E7030000        <1>  jne L_error_incorrect_type
 10718 00007B50 488B5701                        mov rdx, qword [rdi + 1]
 10719 00007B54 488B4E01                        mov rcx, qword [rsi + 1]
 10720 00007B58 4839D1                          cmp rcx, rdx
 10721 00007B5B 0F8D6B020000                    jge L_error_integer_range
 10722 00007B61 4883F900                        cmp rcx, 0
 10723 00007B65 0F8C61020000                    jl L_error_integer_range
 10724 00007B6B 488B4530                        mov rax, PARAM(2)
 10725 00007B6F 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 10726 00007B74 48B8-                           mov rax, sob_void
 10726 00007B76 [0000000000000000] 
 10727 00007B7E C9                              leave
 10728 00007B7F C22800                          ret AND_KILL_FRAME(3)
 10729                                  
 10730                                  L_code_ptr_string_set:
 10731 00007B82 C8000000                        enter 0, 0
 10732 00007B86 48837D1803                      cmp COUNT, 3
 10733 00007B8B 0F8571030000                    jne L_error_arg_count_3
 10734 00007B91 488B7D20                        mov rdi, PARAM(0)
 10735                                          assert_string(rdi)
    53 00007B95 803F03              <1>  cmp byte [%1], %2
    54 00007B98 0F8599030000        <1>  jne L_error_incorrect_type
 10736 00007B9E 488B7528                        mov rsi, PARAM(1)
 10737                                          assert_integer(rsi)
    53 00007BA2 803E11              <1>  cmp byte [%1], %2
    54 00007BA5 0F858C030000        <1>  jne L_error_incorrect_type
 10738 00007BAB 488B5701                        mov rdx, qword [rdi + 1]
 10739 00007BAF 488B4E01                        mov rcx, qword [rsi + 1]
 10740 00007BB3 4839D1                          cmp rcx, rdx
 10741 00007BB6 0F8D10020000                    jge L_error_integer_range
 10742 00007BBC 4883F900                        cmp rcx, 0
 10743 00007BC0 0F8C06020000                    jl L_error_integer_range
 10744 00007BC6 488B4530                        mov rax, PARAM(2)
 10745                                          assert_char(rax)
    53 00007BCA 803802              <1>  cmp byte [%1], %2
    54 00007BCD 0F8564030000        <1>  jne L_error_incorrect_type
 10746 00007BD3 8A4001                          mov al, byte [rax + 1]
 10747 00007BD6 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 10748 00007BDA 48B8-                           mov rax, sob_void
 10748 00007BDC [0000000000000000] 
 10749 00007BE4 C9                              leave
 10750 00007BE5 C22800                          ret AND_KILL_FRAME(3)
 10751                                  
 10752                                  L_code_ptr_make_vector:
 10753 00007BE8 C8000000                        enter 0, 0
 10754 00007BEC 48837D1802                      cmp COUNT, 2
 10755 00007BF1 0F85A1020000                    jne L_error_arg_count_2
 10756 00007BF7 488B4D20                        mov rcx, PARAM(0)
 10757                                          assert_integer(rcx)
    53 00007BFB 803911              <1>  cmp byte [%1], %2
    54 00007BFE 0F8533030000        <1>  jne L_error_incorrect_type
 10758 00007C04 488B4901                        mov rcx, qword [rcx + 1]
 10759 00007C08 4883F900                        cmp rcx, 0
 10760 00007C0C 0F8CBA010000                    jl L_error_integer_range
 10761 00007C12 488B5528                        mov rdx, PARAM(1)
 10762 00007C16 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 10763 00007C1E E898E5FFFF                      call malloc
 10764 00007C23 C60022                          mov byte [rax], T_vector
 10765 00007C26 48894801                        mov qword [rax + 1], rcx
 10766 00007C2A 41B800000000                    mov r8, 0
 10767                                  .L0:
 10768 00007C30 4939C8                          cmp r8, rcx
 10769 00007C33 740A                            je .L1
 10770 00007C35 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 10771 00007C3A 49FFC0                          inc r8
 10772 00007C3D EBF1                            jmp .L0
 10773                                  .L1:
 10774 00007C3F C9                              leave
 10775 00007C40 C22000                          ret AND_KILL_FRAME(2)
 10776                                          
 10777                                  L_code_ptr_make_string:
 10778 00007C43 C8000000                        enter 0, 0
 10779 00007C47 48837D1802                      cmp COUNT, 2
 10780 00007C4C 0F8546020000                    jne L_error_arg_count_2
 10781 00007C52 488B4D20                        mov rcx, PARAM(0)
 10782                                          assert_integer(rcx)
    53 00007C56 803911              <1>  cmp byte [%1], %2
    54 00007C59 0F85D8020000        <1>  jne L_error_incorrect_type
 10783 00007C5F 488B4901                        mov rcx, qword [rcx + 1]
 10784 00007C63 4883F900                        cmp rcx, 0
 10785 00007C67 0F8C5F010000                    jl L_error_integer_range
 10786 00007C6D 488B5528                        mov rdx, PARAM(1)
 10787                                          assert_char(rdx)
    53 00007C71 803A02              <1>  cmp byte [%1], %2
    54 00007C74 0F85BD020000        <1>  jne L_error_incorrect_type
 10788 00007C7A 8A5201                          mov dl, byte [rdx + 1]
 10789 00007C7D 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 10790 00007C81 E835E5FFFF                      call malloc
 10791 00007C86 C60003                          mov byte [rax], T_string
 10792 00007C89 48894801                        mov qword [rax + 1], rcx
 10793 00007C8D 41B800000000                    mov r8, 0
 10794                                  .L0:
 10795 00007C93 4939C8                          cmp r8, rcx
 10796 00007C96 740A                            je .L1
 10797 00007C98 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 10798 00007C9D 49FFC0                          inc r8
 10799 00007CA0 EBF1                            jmp .L0
 10800                                  .L1:
 10801 00007CA2 C9                              leave
 10802 00007CA3 C22000                          ret AND_KILL_FRAME(2)
 10803                                  
 10804                                  L_code_ptr_numerator:
 10805 00007CA6 C8000000                        enter 0, 0
 10806 00007CAA 48837D1801                      cmp COUNT, 1
 10807 00007CAF 0F85AE010000                    jne L_error_arg_count_1
 10808 00007CB5 488B4520                        mov rax, PARAM(0)
 10809                                          assert_fraction(rax)
    53 00007CB9 803812              <1>  cmp byte [%1], %2
    54 00007CBC 0F8575020000        <1>  jne L_error_incorrect_type
 10810 00007CC2 488B7801                        mov rdi, qword [rax + 1]
 10811 00007CC6 E8E7000000                      call make_integer
 10812 00007CCB C9                              leave
 10813 00007CCC C21800                          ret AND_KILL_FRAME(1)
 10814                                          
 10815                                  L_code_ptr_denominator:
 10816 00007CCF C8000000                        enter 0, 0
 10817 00007CD3 48837D1801                      cmp COUNT, 1
 10818 00007CD8 0F8585010000                    jne L_error_arg_count_1
 10819 00007CDE 488B4520                        mov rax, PARAM(0)
 10820                                          assert_fraction(rax)
    53 00007CE2 803812              <1>  cmp byte [%1], %2
    54 00007CE5 0F854C020000        <1>  jne L_error_incorrect_type
 10821 00007CEB 488B7809                        mov rdi, qword [rax + 1 + 8]
 10822 00007CEF E8BE000000                      call make_integer
 10823 00007CF4 C9                              leave
 10824 00007CF5 C21800                          ret AND_KILL_FRAME(1)
 10825                                  
 10826                                  L_code_ptr_is_eq:
 10827 00007CF8 C8000000                	enter 0, 0
 10828 00007CFC 48837D1802              	cmp COUNT, 2
 10829 00007D01 0F8591010000            	jne L_error_arg_count_2
 10830 00007D07 488B7D20                	mov rdi, PARAM(0)
 10831 00007D0B 488B7528                	mov rsi, PARAM(1)
 10832 00007D0F 4839F7                  	cmp rdi, rsi
 10833 00007D12 746C                    	je .L_eq_true
 10834 00007D14 8A17                    	mov dl, byte [rdi]
 10835 00007D16 3A16                    	cmp dl, byte [rsi]
 10836 00007D18 7572                    	jne .L_eq_false
 10837 00007D1A 80FA02                  	cmp dl, T_char
 10838 00007D1D 7459                    	je .L_char
 10839 00007D1F 80FA41                  	cmp dl, T_interned_symbol
 10840 00007D22 7440                    	je .L_interned_symbol
 10841 00007D24 80FA42                          cmp dl, T_uninterned_symbol
 10842 00007D27 7443                            je .L_uninterned_symbol
 10843 00007D29 80FA13                  	cmp dl, T_real
 10844 00007D2C 742E                    	je .L_real
 10845 00007D2E 80FA12                  	cmp dl, T_fraction
 10846 00007D31 7413                    	je .L_fraction
 10847 00007D33 80FA11                          cmp dl, T_integer
 10848 00007D36 7402                            je .L_integer
 10849 00007D38 EB52                    	jmp .L_eq_false
 10850                                  .L_integer:
 10851 00007D3A 488B4601                        mov rax, qword [rsi + 1]
 10852 00007D3E 483B4701                        cmp rax, qword [rdi + 1]
 10853 00007D42 7548                            jne .L_eq_false
 10854 00007D44 EB3A                            jmp .L_eq_true
 10855                                  .L_fraction:
 10856 00007D46 488B4601                	mov rax, qword [rsi + 1]
 10857 00007D4A 483B4701                	cmp rax, qword [rdi + 1]
 10858 00007D4E 753C                    	jne .L_eq_false
 10859 00007D50 488B4609                	mov rax, qword [rsi + 1 + 8]
 10860 00007D54 483B4709                	cmp rax, qword [rdi + 1 + 8]
 10861 00007D58 7532                    	jne .L_eq_false
 10862 00007D5A EB24                    	jmp .L_eq_true
 10863                                  .L_real:
 10864 00007D5C 488B4601                	mov rax, qword [rsi + 1]
 10865 00007D60 483B4701                	cmp rax, qword [rdi + 1]
 10866                                  .L_interned_symbol:
 10867                                  	; never reached, because interned_symbols are static!
 10868                                  	; but I'm keeping it in case, I'll ever change
 10869                                  	; the implementation
 10870 00007D64 488B4601                	mov rax, qword [rsi + 1]
 10871 00007D68 483B4701                	cmp rax, qword [rdi + 1]
 10872                                  .L_uninterned_symbol:
 10873 00007D6C 4C8B4701                        mov r8, qword [rdi + 1]
 10874 00007D70 4C3B4601                        cmp r8, qword [rsi + 1]
 10875 00007D74 7516                            jne .L_eq_false
 10876 00007D76 EB08                            jmp .L_eq_true
 10877                                  .L_char:
 10878 00007D78 8A5E01                  	mov bl, byte [rsi + 1]
 10879 00007D7B 3A5F01                  	cmp bl, byte [rdi + 1]
 10880 00007D7E 750C                    	jne .L_eq_false
 10881                                  .L_eq_true:
 10882 00007D80 48B8-                   	mov rax, sob_boolean_true
 10882 00007D82 [0300000000000000] 
 10883 00007D8A EB0A                    	jmp .L_eq_exit
 10884                                  .L_eq_false:
 10885 00007D8C 48B8-                   	mov rax, sob_boolean_false
 10885 00007D8E [0200000000000000] 
 10886                                  .L_eq_exit:
 10887 00007D96 C9                      	leave
 10888 00007D97 C22000                  	ret AND_KILL_FRAME(2)
 10889                                  
 10890                                  make_real:
 10891 00007D9A C8000000                        enter 0, 0
 10892 00007D9E BF09000000                      mov rdi, (1 + 8)
 10893 00007DA3 E813E4FFFF                      call malloc
 10894 00007DA8 C60013                          mov byte [rax], T_real
 10895 00007DAB F20F114001                      movsd qword [rax + 1], xmm0
 10896 00007DB0 C9                              leave 
 10897 00007DB1 C3                              ret
 10898                                          
 10899                                  make_integer:
 10900 00007DB2 C8000000                        enter 0, 0
 10901 00007DB6 4889FE                          mov rsi, rdi
 10902 00007DB9 BF09000000                      mov rdi, (1 + 8)
 10903 00007DBE E8F8E3FFFF                      call malloc
 10904 00007DC3 C60011                          mov byte [rax], T_integer
 10905 00007DC6 48897001                        mov qword [rax + 1], rsi
 10906 00007DCA C9                              leave
 10907 00007DCB C3                              ret
 10908                                          
 10909                                  L_error_integer_range:
 10910 00007DCC 488B3C25[00000000]              mov rdi, qword [stderr]
 10911 00007DD4 48BE-                           mov rsi, fmt_integer_range
 10911 00007DD6 [C809000000000000] 
 10912 00007DDE B800000000                      mov rax, 0
 10913                                          ENTER
    44 00007DE3 C8000000            <1>  enter 0, 0
    45 00007DE7 4883E4F0            <1>  and rsp, ~15
 10914 00007DEB E8(00000000)                    call fprintf
 10915                                          LEAVE
    49 00007DF0 C9                  <1>  leave
 10916 00007DF1 48C7C0FBFFFFFF                  mov rax, -5
 10917 00007DF8 E8(00000000)                    call exit
 10918                                  
 10919                                  L_error_arg_negative:
 10920 00007DFD 488B3C25[00000000]              mov rdi, qword [stderr]
 10921 00007E05 48BE-                           mov rsi, fmt_arg_negative
 10921 00007E07 [A008000000000000] 
 10922 00007E0F B800000000                      mov rax, 0
 10923                                          ENTER
    44 00007E14 C8000000            <1>  enter 0, 0
    45 00007E18 4883E4F0            <1>  and rsp, ~15
 10924 00007E1C E8(00000000)                    call fprintf
 10925                                          LEAVE
    49 00007E21 C9                  <1>  leave
 10926 00007E22 48C7C0FDFFFFFF                  mov rax, -3
 10927 00007E29 E8(00000000)                    call exit
 10928                                  
 10929                                  L_error_arg_count_0:
 10930 00007E2E 488B3C25[00000000]              mov rdi, qword [stderr]
 10931 00007E36 48BE-                           mov rsi, fmt_arg_count_0
 10931 00007E38 [C608000000000000] 
 10932 00007E40 488B5518                        mov rdx, COUNT
 10933 00007E44 B800000000                      mov rax, 0
 10934                                          ENTER
    44 00007E49 C8000000            <1>  enter 0, 0
    45 00007E4D 4883E4F0            <1>  and rsp, ~15
 10935 00007E51 E8(00000000)                    call fprintf
 10936                                          LEAVE
    49 00007E56 C9                  <1>  leave
 10937 00007E57 48C7C0FDFFFFFF                  mov rax, -3
 10938 00007E5E E8(00000000)                    call exit
 10939                                  
 10940                                  L_error_arg_count_1:
 10941 00007E63 488B3C25[00000000]              mov rdi, qword [stderr]
 10942 00007E6B 48BE-                           mov rsi, fmt_arg_count_1
 10942 00007E6D [EE08000000000000] 
 10943 00007E75 488B5518                        mov rdx, COUNT
 10944 00007E79 B800000000                      mov rax, 0
 10945                                          ENTER
    44 00007E7E C8000000            <1>  enter 0, 0
    45 00007E82 4883E4F0            <1>  and rsp, ~15
 10946 00007E86 E8(00000000)                    call fprintf
 10947                                          LEAVE
    49 00007E8B C9                  <1>  leave
 10948 00007E8C 48C7C0FDFFFFFF                  mov rax, -3
 10949 00007E93 E8(00000000)                    call exit
 10950                                  
 10951                                  L_error_arg_count_2:
 10952 00007E98 488B3C25[00000000]              mov rdi, qword [stderr]
 10953 00007EA0 48BE-                           mov rsi, fmt_arg_count_2
 10953 00007EA2 [5409000000000000] 
 10954 00007EAA 488B5518                        mov rdx, COUNT
 10955 00007EAE B800000000                      mov rax, 0
 10956                                          ENTER
    44 00007EB3 C8000000            <1>  enter 0, 0
    45 00007EB7 4883E4F0            <1>  and rsp, ~15
 10957 00007EBB E8(00000000)                    call fprintf
 10958                                          LEAVE
    49 00007EC0 C9                  <1>  leave
 10959 00007EC1 48C7C0FDFFFFFF                  mov rax, -3
 10960 00007EC8 E8(00000000)                    call exit
 10961                                  
 10962                                  L_error_arg_count_12:
 10963 00007ECD 488B3C25[00000000]              mov rdi, qword [stderr]
 10964 00007ED5 48BE-                           mov rsi, fmt_arg_count_12
 10964 00007ED7 [1409000000000000] 
 10965 00007EDF 488B5518                        mov rdx, COUNT
 10966 00007EE3 B800000000                      mov rax, 0
 10967                                          ENTER
    44 00007EE8 C8000000            <1>  enter 0, 0
    45 00007EEC 4883E4F0            <1>  and rsp, ~15
 10968 00007EF0 E8(00000000)                    call fprintf
 10969                                          LEAVE
    49 00007EF5 C9                  <1>  leave
 10970 00007EF6 48C7C0FDFFFFFF                  mov rax, -3
 10971 00007EFD E8(00000000)                    call exit
 10972                                  
 10973                                  L_error_arg_count_3:
 10974 00007F02 488B3C25[00000000]              mov rdi, qword [stderr]
 10975 00007F0A 48BE-                           mov rsi, fmt_arg_count_3
 10975 00007F0C [7B09000000000000] 
 10976 00007F14 488B5518                        mov rdx, COUNT
 10977 00007F18 B800000000                      mov rax, 0
 10978                                          ENTER
    44 00007F1D C8000000            <1>  enter 0, 0
    45 00007F21 4883E4F0            <1>  and rsp, ~15
 10979 00007F25 E8(00000000)                    call fprintf
 10980                                          LEAVE
    49 00007F2A C9                  <1>  leave
 10981 00007F2B 48C7C0FDFFFFFF                  mov rax, -3
 10982 00007F32 E8(00000000)                    call exit
 10983                                          
 10984                                  L_error_incorrect_type:
 10985 00007F37 488B3C25[00000000]              mov rdi, qword [stderr]
 10986 00007F3F 48BE-                           mov rsi, fmt_type
 10986 00007F41 [A409000000000000] 
 10987 00007F49 B800000000                      mov rax, 0
 10988                                          ENTER
    44 00007F4E C8000000            <1>  enter 0, 0
    45 00007F52 4883E4F0            <1>  and rsp, ~15
 10989 00007F56 E8(00000000)                    call fprintf
 10990                                          LEAVE
    49 00007F5B C9                  <1>  leave
 10991 00007F5C 48C7C0FCFFFFFF                  mov rax, -4
 10992 00007F63 E8(00000000)                    call exit
 10993                                  
 10994                                  L_error_division_by_zero:
 10995 00007F68 488B3C25[00000000]              mov rdi, qword [stderr]
 10996 00007F70 48BE-                           mov rsi, fmt_division_by_zero
 10996 00007F72 [E509000000000000] 
 10997 00007F7A B800000000                      mov rax, 0
 10998                                          ENTER
    44 00007F7F C8000000            <1>  enter 0, 0
    45 00007F83 4883E4F0            <1>  and rsp, ~15
 10999 00007F87 E8(00000000)                    call fprintf
 11000                                          LEAVE
    49 00007F8C C9                  <1>  leave
 11001 00007F8D 48C7C0F8FFFFFF                  mov rax, -8
 11002 00007F94 E8(00000000)                    call exit
 11003                                  
 11004                                  section .data
 11005                                  gensym_count:
 11006 00000895 0000000000000000                dq 0
 11007                                  fmt_char:
 11008 0000089D 256300                          db `%c\0`
 11009                                  fmt_arg_negative:
 11010 000008A0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 11010 000008A9 7267756D656E742063-
 11010 000008B2 616E6E6F7420626520-
 11010 000008BB 6E656761746976652E-
 11010 000008C4 0A00               
 11011                                  fmt_arg_count_0:
 11012 000008C6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 11012 000008CF 74696E67207A65726F-
 11012 000008D8 20617267756D656E74-
 11012 000008E1 732E20466F756E6420-
 11012 000008EA 25640A00           
 11013                                  fmt_arg_count_1:
 11014 000008EE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 11014 000008F7 74696E67206F6E6520-
 11014 00000900 617267756D656E742E-
 11014 00000909 20466F756E64202564-
 11014 00000912 0A00               
 11015                                  fmt_arg_count_12:
 11016 00000914 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 11016 0000091D 74696E67206F6E6520-
 11016 00000926 726571756972656420-
 11016 0000092F 616E64206F6E65206F-
 11016 00000938 7074696F6E616C2061-
 11016 00000941 7267756D656E742E20-
 11016 0000094A 466F756E642025640A-
 11016 00000953 00                 
 11017                                  fmt_arg_count_2:
 11018 00000954 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 11018 0000095D 74696E672074776F20-
 11018 00000966 617267756D656E7473-
 11018 0000096F 2E20466F756E642025-
 11018 00000978 640A00             
 11019                                  fmt_arg_count_3:
 11020 0000097B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 11020 00000984 74696E672074687265-
 11020 0000098D 6520617267756D656E-
 11020 00000996 74732E20466F756E64-
 11020 0000099F 2025640A00         
 11021                                  fmt_type:
 11022 000009A4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 11022 000009AD 696F6E207061737365-
 11022 000009B6 6420696E636F727265-
 11022 000009BF 637420747970650A00 
 11023                                  fmt_integer_range:
 11024 000009C8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 11024 000009D1 7265637420696E7465-
 11024 000009DA 6765722072616E6765-
 11024 000009E3 0A00               
 11025                                  fmt_division_by_zero:
 11026 000009E5 212121204469766973-             db `!!! Division by zero\n\0`
 11026 000009EE 696F6E206279207A65-
 11026 000009F7 726F0A00           
 11027                                  fmt_scheme_error_part_1:
 11028 000009FB 0A2121212054686520-             db `\n!!! The procedure \0`
 11028 00000A04 70726F636564757265-
 11028 00000A0D 2000               
 11029                                  fmt_scheme_error_part_2:
 11030 00000A0F 2061736B656420746F-             db ` asked to terminate the program\n`
 11030 00000A18 207465726D696E6174-
 11030 00000A21 65207468652070726F-
 11030 00000A2A 6772616D0A         
 11031 00000A2F 202020207769746820-             db `    with the following message:\n\n\0`
 11031 00000A38 74686520666F6C6C6F-
 11031 00000A41 77696E67206D657373-
 11031 00000A4A 6167653A0A0A00     
 11032                                  fmt_scheme_error_part_3:
 11033 00000A51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 11033 00000A5A 210A0A00           
